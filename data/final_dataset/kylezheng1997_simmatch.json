{"home.repos.pwc.inspect_result.kylezheng1997_simmatch.None.engine.validate": [[9, 51], ["utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.ProgressMeter", "model.eval", "len", "torch.no_grad", "time.time", "enumerate", "utils.utils.torch_dist_sum", "target.cuda.cuda", "model", "criterion", "utils.utils.accuracy", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "time.time", "sum", "sum", "sum", "sum", "images.cuda.cuda", "criterion.item", "images.cuda.size", "images.cuda.size", "images.cuda.size", "sum1.float", "cnt1.float", "sum5.float", "cnt5.float", "time.time"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.torch_dist_sum", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.accuracy", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update"], ["def", "validate", "(", "val_loader", ",", "model", ",", "criterion", ",", "args", ")", ":", "\n", "    ", "batch_time", "=", "utils", ".", "AverageMeter", "(", "'Time'", ",", "':6.3f'", ")", "\n", "losses", "=", "utils", ".", "AverageMeter", "(", "'Loss'", ",", "':.4e'", ")", "\n", "top1", "=", "utils", ".", "AverageMeter", "(", "'Acc@1'", ",", "':6.2f'", ")", "\n", "top5", "=", "utils", ".", "AverageMeter", "(", "'Acc@5'", ",", "':6.2f'", ")", "\n", "progress", "=", "utils", ".", "ProgressMeter", "(", "\n", "len", "(", "val_loader", ")", ",", "\n", "[", "batch_time", ",", "losses", ",", "top1", ",", "top5", "]", ",", "\n", "prefix", "=", "'Test: '", ")", "\n", "\n", "# switch to evaluate mode", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "images", ",", "target", ")", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "            ", "if", "args", ".", "gpu", "is", "not", "None", ":", "\n", "                ", "images", "=", "images", ".", "cuda", "(", "args", ".", "gpu", ",", "non_blocking", "=", "True", ")", "\n", "", "target", "=", "target", ".", "cuda", "(", "args", ".", "gpu", ",", "non_blocking", "=", "True", ")", "\n", "\n", "# compute output", "\n", "output", "=", "model", "(", "images", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "target", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "acc1", ",", "acc5", "=", "utils", ".", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "acc1", "[", "0", "]", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "acc5", "[", "0", "]", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "# if i % args.print_freq == 0:", "\n", "#     progress.display(i)", "\n", "\n", "", "sum1", ",", "cnt1", ",", "sum5", ",", "cnt5", "=", "utils", ".", "torch_dist_sum", "(", "args", ".", "gpu", ",", "top1", ".", "sum", ",", "top1", ".", "count", ",", "top5", ".", "sum", ",", "top5", ".", "count", ")", "\n", "top1_acc", "=", "sum", "(", "sum1", ".", "float", "(", ")", ")", "/", "sum", "(", "cnt1", ".", "float", "(", ")", ")", "\n", "top5_acc", "=", "sum", "(", "sum5", ".", "float", "(", ")", ")", "/", "sum", "(", "cnt5", ".", "float", "(", ")", ")", "\n", "\n", "", "return", "top1_acc", ",", "top5_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.None.simmatch.main_worker": [[141, 271], ["utils.dist_utils.dist_init", "print", "simmatch.get_imagenet_ssl", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "models.simmatch.get_simmatch_model", "utils.get_norm", "models.simmatch.get_simmatch_model.", "torch.nn.parallel.DistributedDataParallel.cuda", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.CrossEntropyLoss().cuda", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "print", "os.path.exists", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "list", "list", "torch.nn.parallel.DistributedDataParallel.main.load_state_dict", "zip", "torch.nn.parallel.DistributedDataParallel.parameters", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.nn.parallel.DistributedDataParallel.load_state_dict", "torch.optim.SGD.load_state_dict", "print", "print", "engine.validate", "range", "train_sampler", "train_sampler", "train_sampler", "len", "state_dict.keys", "k.startswith", "state_dict.keys", "torch.nn.parallel.DistributedDataParallel.main.parameters", "torch.nn.parallel.DistributedDataParallel.ema.parameters", "param_m.data.copy_", "torch.CrossEntropyLoss", "print", "simmatch.train", "utils.lr_schedule.adjust_learning_rate", "engine.validate", "max", "max", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "k.replace", "k.replace", "k.replace", "torch.nn.parallel.DistributedDataParallel.state_dict", "torch.optim.SGD.state_dict"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.dist_init", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.None.simmatch.get_imagenet_ssl", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.get_simmatch_model", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.batch_norm.get_norm", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.None.engine.validate", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.None.simmatch.train", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.lr_schedule.adjust_learning_rate", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.None.engine.validate"], ["def", "main_worker", "(", ")", ":", "\n", "    ", "best_acc1", "=", "0", "\n", "best_acc5", "=", "0", "\n", "\n", "rank", ",", "local_rank", ",", "world_size", "=", "dist_utils", ".", "dist_init", "(", "args", ".", "port", ")", "\n", "args", ".", "gpu", "=", "local_rank", "\n", "args", ".", "rank", "=", "rank", "\n", "args", ".", "world_size", "=", "world_size", "\n", "args", ".", "distributed", "=", "True", "\n", "\n", "\n", "if", "rank", "!=", "0", ":", "\n", "        ", "def", "print_pass", "(", "*", "args", ")", ":", "\n", "            ", "pass", "\n", "", "builtins", ".", "print", "=", "print_pass", "\n", "\n", "", "print", "(", "args", ")", "\n", "\n", "train_dataset_x", ",", "train_dataset_u", ",", "val_dataset", "=", "get_imagenet_ssl", "(", ")", "\n", "\n", "# Data loading code", "\n", "train_sampler", "=", "DistributedSampler", "\n", "\n", "train_loader_x", "=", "DataLoader", "(", "\n", "train_dataset_x", ",", "\n", "sampler", "=", "train_sampler", "(", "train_dataset_x", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "persistent_workers", "=", "True", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "train_loader_u", "=", "DataLoader", "(", "\n", "train_dataset_u", ",", "\n", "sampler", "=", "train_sampler", "(", "train_dataset_u", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", "*", "args", ".", "mu", ",", "persistent_workers", "=", "True", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "val_loader", "=", "DataLoader", "(", "\n", "val_dataset", ",", "\n", "sampler", "=", "train_sampler", "(", "val_dataset", ")", ",", "\n", "batch_size", "=", "64", ",", "shuffle", "=", "False", ",", "persistent_workers", "=", "True", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "\n", "\n", "# create model", "\n", "print", "(", "\"=> creating model '{}' with backbone '{}'\"", ".", "format", "(", "args", ".", "arch", ",", "args", ".", "backbone", ")", ")", "\n", "model_func", "=", "get_simmatch_model", "(", "args", ".", "arch", ")", "\n", "norm", "=", "get_norm", "(", "args", ".", "norm", ")", "\n", "model", "=", "model_func", "(", "\n", "backbone_models", ".", "__dict__", "[", "args", ".", "backbone", "]", ",", "\n", "eman", "=", "args", ".", "eman", ",", "\n", "momentum", "=", "args", ".", "ema_m", ",", "\n", "norm", "=", "norm", ",", "\n", "K", "=", "len", "(", "train_dataset_x", ")", ",", "\n", "args", "=", "args", "\n", ")", "\n", "\n", "if", "args", ".", "moco_path", "is", "not", "None", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "moco_path", ",", "map_location", "=", "\"cpu\"", ")", "\n", "state_dict", "=", "checkpoint", "[", "'state_dict'", "]", "\n", "for", "k", "in", "list", "(", "state_dict", ".", "keys", "(", ")", ")", ":", "\n", "            ", "if", "k", ".", "startswith", "(", "'module.encoder_q'", ")", ":", "\n", "                ", "state_dict", "[", "k", ".", "replace", "(", "'module.encoder_q'", ",", "'backbone'", ")", "]", "=", "state_dict", "[", "k", "]", "\n", "", "del", "state_dict", "[", "k", "]", "\n", "\n", "", "for", "k", "in", "list", "(", "state_dict", ".", "keys", "(", ")", ")", ":", "\n", "            ", "if", "'backbone.fc.0'", "in", "k", ":", "\n", "                ", "state_dict", "[", "k", ".", "replace", "(", "'backbone.fc.0'", ",", "'head.0'", ")", "]", "=", "state_dict", "[", "k", "]", "\n", "del", "state_dict", "[", "k", "]", "\n", "", "if", "'backbone.fc.2'", "in", "k", ":", "\n", "                ", "state_dict", "[", "k", ".", "replace", "(", "'backbone.fc.2'", ",", "'head.2'", ")", "]", "=", "state_dict", "[", "k", "]", "\n", "del", "state_dict", "[", "k", "]", "\n", "\n", "", "", "model", ".", "main", ".", "load_state_dict", "(", "state_dict", "=", "state_dict", ",", "strict", "=", "False", ")", "\n", "\n", "for", "param", ",", "param_m", "in", "zip", "(", "model", ".", "main", ".", "parameters", "(", ")", ",", "model", ".", "ema", ".", "parameters", "(", ")", ")", ":", "\n", "            ", "param_m", ".", "data", ".", "copy_", "(", "param", ".", "data", ")", "\n", "param_m", ".", "requires_grad", "=", "False", "\n", "\n", "\n", "", "", "model", ".", "cuda", "(", "args", ".", "gpu", ")", "\n", "model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "model", ",", "device_ids", "=", "[", "args", ".", "gpu", "]", ",", "find_unused_parameters", "=", "True", ")", "\n", "\n", "# define loss function (criterion)", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "cuda", "(", "args", ".", "gpu", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "args", ".", "lr", ",", "\n", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ",", "\n", "nesterov", "=", "args", ".", "nesterov", ")", "\n", "\n", "checkpoint_path", "=", "'checkpoints/{}'", ".", "format", "(", "args", ".", "checkpoint", ")", "\n", "print", "(", "'checkpoint_path:'", ",", "checkpoint_path", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "checkpoint_path", ")", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ",", "map_location", "=", "'cpu'", ")", "\n", "args", ".", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "print", "(", "\"=> loaded checkpoint '{}' (epoch {})\"", ".", "format", "(", "checkpoint_path", ",", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"=> no checkpoint found at '{}'\"", ".", "format", "(", "checkpoint_path", ")", ")", "\n", "\n", "", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "if", "args", ".", "evaluate", ":", "\n", "        ", "acc1", ",", "acc5", "=", "validate", "(", "val_loader", ",", "model", ",", "criterion", ",", "args", ")", "\n", "if", "rank", "==", "0", ":", "\n", "            ", "print", "(", "'* Acc@1 {:.3f} Acc@5 {:.3f}'", ".", "format", "(", "acc1", ",", "acc5", ")", ")", "\n", "\n", "", "", "else", ":", "\n", "        ", "for", "epoch", "in", "range", "(", "args", ".", "start_epoch", ",", "args", ".", "epochs", ")", ":", "\n", "            ", "if", "epoch", ">=", "args", ".", "warmup_epoch", ":", "\n", "                ", "lr_schedule", ".", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "args", ")", "\n", "\n", "# train for one epoch", "\n", "", "train", "(", "train_loader_x", ",", "train_loader_u", ",", "model", ",", "optimizer", ",", "epoch", ",", "args", ")", "\n", "\n", "if", "(", "epoch", "+", "1", ")", "%", "args", ".", "eval_freq", "==", "0", ":", "\n", "# evaluate on validation set", "\n", "                ", "acc1", ",", "acc5", "=", "validate", "(", "val_loader", ",", "model", ",", "criterion", ",", "args", ")", "\n", "# remember best acc@1 and save checkpoint", "\n", "best_acc1", "=", "max", "(", "acc1", ",", "best_acc1", ")", "\n", "best_acc5", "=", "max", "(", "acc5", ",", "best_acc5", ")", "\n", "\n", "", "if", "rank", "==", "0", ":", "\n", "                ", "print", "(", "'Epoch:{} * Acc@1 {:.3f} Acc@5 {:.3f} Best_Acc@1 {:.3f} Best_Acc@5 {:.3f}'", ".", "format", "(", "epoch", ",", "acc1", ",", "acc5", ",", "best_acc1", ",", "best_acc5", ")", ")", "\n", "torch", ".", "save", "(", "{", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'arch'", ":", "args", ".", "arch", ",", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "checkpoint_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.None.simmatch.train": [[273, 386], ["utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "utils.utils.InstantMeter", "utils.utils.ProgressMeter", "iter", "model.train", "time.time", "enumerate", "len", "math.ceil", "print", "train_loader_x.sampler.set_epoch", "print", "train_loader_u.sampler.set_epoch", "print", "hasattr", "utils.AverageMeter.update", "images_x.cuda.cuda", "images_u_w.cuda.cuda", "images_u_s.cuda.cuda", "targets_x.cuda.cuda", "targets_u.cuda.cuda", "index.cuda.cuda", "utils.InstantMeter.update", "model", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "max_probs.ge().float", "torch.cross_entropy", "loss_in.mean.mean", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.utils.accuracy", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.utils.accuracy", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "max_probs.ge().float.bool", "utils.AverageMeter.update", "optimizer.zero_grad", "loss.backward", "optimizer.step", "hasattr", "utils.AverageMeter.update", "time.time", "model.module.ema.eval", "model.ema.eval", "next", "utils.lr_schedule.warmup_learning_rate", "loss.item", "F.cross_entropy.item", "images_x.cuda.size", "loss_u.item", "images_u_w.cuda.size", "loss_in.mean.item", "images_u_w.cuda.size", "logits_x.size", "logits_x.size", "pseudo_label.size", "pseudo_label.size", "max_probs.ge().float.mean().item", "max_probs.ge().float.size", "sum", "model.module.momentum_update_ema", "model.momentum_update_ema", "utils.ProgressMeter.display", "len", "len", "print", "iter", "next", "time.time", "len", "max_probs.ge", "mask.bool.sum", "time.time", "print", "train_loader_x.sampler.set_epoch", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "max_probs.ge().float.mean", "len", "pseudo_label.detach", "pseudo_label.max", "torch.log_softmax"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.None.simmatch.train", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.accuracy", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.accuracy", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.lr_schedule.warmup_learning_rate", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.SimMatch.momentum_update_ema", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.SimMatch.momentum_update_ema", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.ProgressMeter.display"], ["", "", "", "", "def", "train", "(", "train_loader_x", ",", "train_loader_u", ",", "model", ",", "optimizer", ",", "epoch", ",", "args", ")", ":", "\n", "    ", "batch_time", "=", "utils", ".", "AverageMeter", "(", "'Time'", ",", "':6.3f'", ")", "\n", "data_time", "=", "utils", ".", "AverageMeter", "(", "'Data'", ",", "':6.3f'", ")", "\n", "losses", "=", "utils", ".", "AverageMeter", "(", "'Loss'", ",", "':.4e'", ")", "\n", "losses_x", "=", "utils", ".", "AverageMeter", "(", "'Loss_x'", ",", "':.4e'", ")", "\n", "losses_u", "=", "utils", ".", "AverageMeter", "(", "'Loss_u'", ",", "':.4e'", ")", "\n", "losses_in", "=", "utils", ".", "AverageMeter", "(", "'Loss_in'", ",", "':.4e'", ")", "\n", "top1_x", "=", "utils", ".", "AverageMeter", "(", "'Acc_x@1'", ",", "':6.2f'", ")", "\n", "top5_x", "=", "utils", ".", "AverageMeter", "(", "'Acc_x@5'", ",", "':6.2f'", ")", "\n", "top1_u", "=", "utils", ".", "AverageMeter", "(", "'Acc_u@1'", ",", "':6.2f'", ")", "\n", "top5_u", "=", "utils", ".", "AverageMeter", "(", "'Acc_u@5'", ",", "':6.2f'", ")", "\n", "mask_info", "=", "utils", ".", "AverageMeter", "(", "'Mask'", ",", "':6.3f'", ")", "\n", "pseudo_label_info", "=", "utils", ".", "AverageMeter", "(", "'Label'", ",", "':6.3f'", ")", "\n", "curr_lr", "=", "utils", ".", "InstantMeter", "(", "'LR'", ",", "''", ")", "\n", "progress", "=", "utils", ".", "ProgressMeter", "(", "\n", "len", "(", "train_loader_u", ")", ",", "\n", "[", "curr_lr", ",", "batch_time", ",", "data_time", ",", "losses", ",", "losses_x", ",", "losses_u", ",", "losses_in", ",", "top1_x", ",", "top5_x", ",", "top1_u", ",", "top5_u", ",", "mask_info", ",", "pseudo_label_info", "]", ",", "\n", "prefix", "=", "\"Epoch: [{}/{}]\\t\"", ".", "format", "(", "epoch", ",", "args", ".", "epochs", ")", ")", "\n", "\n", "epoch_x", "=", "epoch", "*", "math", ".", "ceil", "(", "len", "(", "train_loader_u", ")", "/", "len", "(", "train_loader_x", ")", ")", "\n", "if", "args", ".", "distributed", ":", "\n", "        ", "print", "(", "\"set epoch={} for labeled sampler\"", ".", "format", "(", "epoch_x", ")", ")", "\n", "train_loader_x", ".", "sampler", ".", "set_epoch", "(", "epoch_x", ")", "\n", "print", "(", "\"set epoch={} for unlabeled sampler\"", ".", "format", "(", "epoch", ")", ")", "\n", "train_loader_u", ".", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "\n", "", "train_iter_x", "=", "iter", "(", "train_loader_x", ")", "\n", "# switch to train mode", "\n", "model", ".", "train", "(", ")", "\n", "if", "args", ".", "eman", ":", "\n", "        ", "print", "(", "\"setting the ema model to eval mode\"", ")", "\n", "if", "hasattr", "(", "model", ",", "'module'", ")", ":", "\n", "            ", "model", ".", "module", ".", "ema", ".", "eval", "(", ")", "\n", "", "else", ":", "\n", "            ", "model", ".", "ema", ".", "eval", "(", ")", "\n", "\n", "", "", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "images_u", ",", "targets_u", ")", "in", "enumerate", "(", "train_loader_u", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "images_x", ",", "targets_x", ",", "index", "=", "next", "(", "train_iter_x", ")", "\n", "", "except", "Exception", ":", "\n", "            ", "epoch_x", "+=", "1", "\n", "print", "(", "\"reshuffle train_loader_x at epoch={}\"", ".", "format", "(", "epoch_x", ")", ")", "\n", "if", "args", ".", "distributed", ":", "\n", "                ", "print", "(", "\"set epoch={} for labeled sampler\"", ".", "format", "(", "epoch_x", ")", ")", "\n", "train_loader_x", ".", "sampler", ".", "set_epoch", "(", "epoch_x", ")", "\n", "", "train_iter_x", "=", "iter", "(", "train_loader_x", ")", "\n", "images_x", ",", "targets_x", ",", "index", "=", "next", "(", "train_iter_x", ")", "\n", "\n", "", "images_u_w", ",", "images_u_s", "=", "images_u", "\n", "# measure data loading time", "\n", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "\n", "images_x", "=", "images_x", ".", "cuda", "(", "args", ".", "gpu", ",", "non_blocking", "=", "True", ")", "\n", "images_u_w", "=", "images_u_w", ".", "cuda", "(", "args", ".", "gpu", ",", "non_blocking", "=", "True", ")", "\n", "images_u_s", "=", "images_u_s", ".", "cuda", "(", "args", ".", "gpu", ",", "non_blocking", "=", "True", ")", "\n", "targets_x", "=", "targets_x", ".", "cuda", "(", "args", ".", "gpu", ",", "non_blocking", "=", "True", ")", "\n", "targets_u", "=", "targets_u", ".", "cuda", "(", "args", ".", "gpu", ",", "non_blocking", "=", "True", ")", "\n", "index", "=", "index", ".", "cuda", "(", "args", ".", "gpu", ",", "non_blocking", "=", "True", ")", "\n", "\n", "\n", "# warmup learning rate", "\n", "if", "epoch", "<", "args", ".", "warmup_epoch", ":", "\n", "            ", "warmup_step", "=", "args", ".", "warmup_epoch", "*", "len", "(", "train_loader_u", ")", "\n", "curr_step", "=", "epoch", "*", "len", "(", "train_loader_u", ")", "+", "i", "+", "1", "\n", "lr_schedule", ".", "warmup_learning_rate", "(", "optimizer", ",", "curr_step", ",", "warmup_step", ",", "args", ")", "\n", "", "curr_lr", ".", "update", "(", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ")", "\n", "\n", "# model forward", "\n", "logits_x", ",", "pseudo_label", ",", "logits_u_s", ",", "loss_in", "=", "model", "(", "images_x", ",", "images_u_w", ",", "images_u_s", ",", "labels", "=", "targets_x", ",", "index", "=", "index", ",", "start_unlabel", "=", "epoch", ">", "0", ",", "args", "=", "args", ")", "\n", "max_probs", ",", "_", "=", "torch", ".", "max", "(", "pseudo_label", ",", "dim", "=", "-", "1", ")", "\n", "mask", "=", "max_probs", ".", "ge", "(", "args", ".", "threshold", ")", ".", "float", "(", ")", "\n", "\n", "loss_x", "=", "F", ".", "cross_entropy", "(", "logits_x", ",", "targets_x", ",", "reduction", "=", "'mean'", ")", "\n", "loss_u", "=", "(", "torch", ".", "sum", "(", "-", "F", ".", "log_softmax", "(", "logits_u_s", ",", "dim", "=", "1", ")", "*", "pseudo_label", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", "*", "mask", ")", ".", "mean", "(", ")", "\n", "\n", "loss_in", "=", "loss_in", ".", "mean", "(", ")", "\n", "loss", "=", "loss_x", "+", "args", ".", "lambda_u", "*", "loss_u", "+", "args", ".", "lambda_in", "*", "loss_in", "\n", "\n", "# measure accuracy and record loss", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ")", "\n", "losses_x", ".", "update", "(", "loss_x", ".", "item", "(", ")", ",", "images_x", ".", "size", "(", "0", ")", ")", "\n", "losses_u", ".", "update", "(", "loss_u", ".", "item", "(", ")", ",", "images_u_w", ".", "size", "(", "0", ")", ")", "\n", "losses_in", ".", "update", "(", "loss_in", ".", "item", "(", ")", ",", "images_u_w", ".", "size", "(", "0", ")", ")", "\n", "acc1_x", ",", "acc5_x", "=", "utils", ".", "accuracy", "(", "logits_x", ",", "targets_x", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "top1_x", ".", "update", "(", "acc1_x", "[", "0", "]", ",", "logits_x", ".", "size", "(", "0", ")", ")", "\n", "top5_x", ".", "update", "(", "acc5_x", "[", "0", "]", ",", "logits_x", ".", "size", "(", "0", ")", ")", "\n", "acc1_u", ",", "acc5_u", "=", "utils", ".", "accuracy", "(", "pseudo_label", ",", "targets_u", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "top1_u", ".", "update", "(", "acc1_u", "[", "0", "]", ",", "pseudo_label", ".", "size", "(", "0", ")", ")", "\n", "top5_u", ".", "update", "(", "acc5_u", "[", "0", "]", ",", "pseudo_label", ".", "size", "(", "0", ")", ")", "\n", "mask_info", ".", "update", "(", "mask", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "mask", ".", "size", "(", "0", ")", ")", "\n", "\n", "bool_mask", "=", "mask", ".", "bool", "(", ")", "\n", "psudo_label_correct", "=", "sum", "(", "pseudo_label", ".", "max", "(", "1", ")", "[", "1", "]", "[", "bool_mask", "]", "==", "targets_u", "[", "bool_mask", "]", ")", "/", "(", "bool_mask", ".", "sum", "(", ")", "+", "1e-8", ")", "\n", "pseudo_label_info", ".", "update", "(", "psudo_label_correct", "*", "100", ")", "\n", "\n", "# compute gradient and do SGD step", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "# update the ema model", "\n", "if", "hasattr", "(", "model", ",", "'module'", ")", ":", "\n", "            ", "model", ".", "module", ".", "momentum_update_ema", "(", ")", "\n", "", "else", ":", "\n", "            ", "model", ".", "momentum_update_ema", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "i", "%", "args", ".", "print_freq", "==", "0", ":", "\n", "            ", "progress", ".", "display", "(", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.None.simmatch.get_imagenet_ssl": [[388, 405], ["data.TwoCropsTransform", "data.get_transforms", "data.imagenet.ImagenetPercentV2", "data.imagenet.ImagenetPercentV2", "data.imagenet.Imagenet"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.transforms.get_transforms"], ["", "", "", "def", "get_imagenet_ssl", "(", "val_type", "=", "'DefaultVal'", ")", ":", "\n", "    ", "transform_x", "=", "data_transforms", ".", "weak_aug", "\n", "weak_transform", "=", "data_transforms", ".", "weak_aug", "\n", "if", "args", ".", "stack", ":", "\n", "        ", "strong_transform", "=", "data_transforms", ".", "stack_aug", "\n", "", "if", "args", ".", "randaug", ":", "\n", "        ", "strong_transform", "=", "data_transforms", ".", "rand_aug", "\n", "", "else", ":", "\n", "        ", "strong_transform", "=", "data_transforms", ".", "moco_aug", "\n", "", "transform_u", "=", "data_transforms", ".", "TwoCropsTransform", "(", "weak_transform", ",", "strong_transform", ")", "\n", "transform_val", "=", "data_transforms", ".", "get_transforms", "(", "val_type", ")", "\n", "\n", "train_dataset_x", "=", "ImagenetPercentV2", "(", "percent", "=", "args", ".", "anno_percent", ",", "labeled", "=", "True", ",", "aug", "=", "transform_x", ",", "return_index", "=", "True", ")", "\n", "train_dataset_u", "=", "ImagenetPercentV2", "(", "percent", "=", "args", ".", "anno_percent", ",", "labeled", "=", "False", ",", "aug", "=", "transform_u", ")", "\n", "val_dataset", "=", "Imagenet", "(", "mode", "=", "'val'", ",", "aug", "=", "transform_val", ")", "\n", "\n", "return", "train_dataset_x", ",", "train_dataset_u", ",", "val_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.init.c2_xavier_fill": [[7, 20], ["torch.init.kaiming_uniform_", "torch.init.constant_"], "function", ["None"], ["def", "c2_xavier_fill", "(", "module", ":", "nn", ".", "Module", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Initialize `module.weight` using the \"XavierFill\" implemented in Caffe2.\n    Also initializes `module.bias` to 0.\n\n    Args:\n        module (torch.nn.Module): module to initialize.\n    \"\"\"", "\n", "# Caffe2 implementation of XavierFill in fact", "\n", "# corresponds to kaiming_uniform_ in PyTorch", "\n", "nn", ".", "init", ".", "kaiming_uniform_", "(", "module", ".", "weight", ",", "a", "=", "1", ")", "# pyre-ignore", "\n", "if", "module", ".", "bias", "is", "not", "None", ":", "# pyre-ignore", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "module", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.init.c2_msra_fill": [[22, 34], ["torch.init.kaiming_normal_", "torch.init.constant_"], "function", ["None"], ["", "", "def", "c2_msra_fill", "(", "module", ":", "nn", ".", "Module", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Initialize `module.weight` using the \"MSRAFill\" implemented in Caffe2.\n    Also initializes `module.bias` to 0.\n\n    Args:\n        module (torch.nn.Module): module to initialize.\n    \"\"\"", "\n", "# pyre-ignore", "\n", "nn", ".", "init", ".", "kaiming_normal_", "(", "module", ".", "weight", ",", "mode", "=", "\"fan_out\"", ",", "nonlinearity", "=", "\"relu\"", ")", "\n", "if", "module", ".", "bias", "is", "not", "None", ":", "# pyre-ignore", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "module", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.init.normal_init": [[36, 40], ["torch.init.normal_", "torch.init.constant_"], "function", ["None"], ["", "", "def", "normal_init", "(", "module", ":", "nn", ".", "Module", ",", "std", "=", "0.01", ")", ":", "\n", "    ", "nn", ".", "init", ".", "normal_", "(", "module", ".", "weight", ",", "std", "=", "std", ")", "\n", "if", "module", ".", "bias", "is", "not", "None", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "module", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.init.init_weights": [[42, 56], ["module.modules", "isinstance", "isinstance", "init.normal_init", "init.c2_msra_fill", "torch.init.constant_", "torch.init.constant_"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.init.normal_init", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.init.c2_msra_fill"], ["", "", "def", "init_weights", "(", "module", ",", "init_linear", "=", "'normal'", ")", ":", "\n", "    ", "assert", "init_linear", "in", "[", "'normal'", ",", "'kaiming'", "]", ",", "\"Undefined init_linear: {}\"", ".", "format", "(", "init_linear", ")", "\n", "for", "m", "in", "module", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "if", "init_linear", "==", "'normal'", ":", "\n", "                ", "normal_init", "(", "m", ",", "std", "=", "0.01", ")", "\n", "", "else", ":", "\n", "                ", "c2_msra_fill", "(", "m", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm1d", ",", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ",", "nn", ".", "SyncBatchNorm", ")", ")", ":", "\n", "            ", "if", "m", ".", "weight", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.batch_shuffle_ddp": [[12, 39], ["torch.no_grad", "torch.no_grad", "dist_utils.concat_all_gather", "torch.randperm().cuda", "torch.randperm().cuda", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.argsort", "torch.argsort", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.randperm().cuda.view", "torch.randperm", "torch.randperm"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.concat_all_gather", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank"], ["@", "torch", ".", "no_grad", "(", ")", "\n", "def", "batch_shuffle_ddp", "(", "x", ")", ":", "\n", "    ", "\"\"\"\n    Batch shuffle, for making use of BatchNorm.\n    *** Only support DistributedDataParallel (DDP) model. ***\n    \"\"\"", "\n", "# gather from all gpus", "\n", "batch_size_this", "=", "x", ".", "shape", "[", "0", "]", "\n", "x_gather", "=", "concat_all_gather", "(", "x", ")", "\n", "batch_size_all", "=", "x_gather", ".", "shape", "[", "0", "]", "\n", "\n", "num_gpus", "=", "batch_size_all", "//", "batch_size_this", "\n", "\n", "# random shuffle index", "\n", "idx_shuffle", "=", "torch", ".", "randperm", "(", "batch_size_all", ")", ".", "cuda", "(", ")", "\n", "\n", "# broadcast to all gpus", "\n", "torch", ".", "distributed", ".", "broadcast", "(", "idx_shuffle", ",", "src", "=", "0", ")", "\n", "\n", "# index for restoring", "\n", "idx_unshuffle", "=", "torch", ".", "argsort", "(", "idx_shuffle", ")", "\n", "\n", "# shuffled index for this gpu", "\n", "gpu_idx", "=", "torch", ".", "distributed", ".", "get_rank", "(", ")", "\n", "idx_this", "=", "idx_shuffle", ".", "view", "(", "num_gpus", ",", "-", "1", ")", "[", "gpu_idx", "]", "\n", "\n", "return", "x_gather", "[", "idx_this", "]", ",", "idx_unshuffle", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.batch_unshuffle_ddp": [[41, 59], ["torch.no_grad", "torch.no_grad", "dist_utils.concat_all_gather", "torch.distributed.get_rank", "torch.distributed.get_rank", "idx_unshuffle.view"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.concat_all_gather", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "batch_unshuffle_ddp", "(", "x", ",", "idx_unshuffle", ")", ":", "\n", "    ", "\"\"\"\n    Undo batch shuffle.\n    *** Only support DistributedDataParallel (DDP) model. ***\n    \"\"\"", "\n", "# gather from all gpus", "\n", "batch_size_this", "=", "x", ".", "shape", "[", "0", "]", "\n", "x_gather", "=", "concat_all_gather", "(", "x", ")", "\n", "batch_size_all", "=", "x_gather", ".", "shape", "[", "0", "]", "\n", "\n", "num_gpus", "=", "batch_size_all", "//", "batch_size_this", "\n", "\n", "# restored index for this gpu", "\n", "gpu_idx", "=", "torch", ".", "distributed", ".", "get_rank", "(", ")", "\n", "idx_this", "=", "idx_unshuffle", ".", "view", "(", "num_gpus", ",", "-", "1", ")", "[", "gpu_idx", "]", "\n", "\n", "return", "x_gather", "[", "idx_this", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.concat_all_gather": [[61, 73], ["torch.no_grad", "torch.no_grad", "torch.distributed.all_gather", "torch.distributed.all_gather", "torch.cat", "torch.cat", "torch.ones_like", "torch.ones_like", "range", "torch.distributed.get_world_size", "torch.distributed.get_world_size"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "concat_all_gather", "(", "tensor", ")", ":", "\n", "    ", "\"\"\"\n    Performs all_gather operation on the provided tensors.\n    *** Warning ***: torch.distributed.all_gather has no gradient.\n    \"\"\"", "\n", "tensors_gather", "=", "[", "torch", ".", "ones_like", "(", "tensor", ")", "\n", "for", "_", "in", "range", "(", "torch", ".", "distributed", ".", "get_world_size", "(", ")", ")", "]", "\n", "torch", ".", "distributed", ".", "all_gather", "(", "tensors_gather", ",", "tensor", ",", "async_op", "=", "False", ")", "\n", "\n", "output", "=", "torch", ".", "cat", "(", "tensors_gather", ",", "dim", "=", "0", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.is_dist_avail_and_initialized": [[75, 81], ["torch.is_available", "torch.is_initialized"], "function", ["None"], ["", "def", "is_dist_avail_and_initialized", "(", ")", ":", "\n", "    ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "        ", "return", "False", "\n", "", "if", "not", "dist", ".", "is_initialized", "(", ")", ":", "\n", "        ", "return", "False", "\n", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size": [[83, 87], ["torch.get_world_size", "dist_utils.is_dist_avail_and_initialized"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.is_dist_avail_and_initialized"], ["", "def", "get_world_size", "(", ")", ":", "\n", "    ", "if", "not", "is_dist_avail_and_initialized", "(", ")", ":", "\n", "        ", "return", "1", "\n", "", "return", "dist", ".", "get_world_size", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank": [[89, 93], ["torch.get_rank", "dist_utils.is_dist_avail_and_initialized"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.is_dist_avail_and_initialized"], ["", "def", "get_rank", "(", ")", ":", "\n", "    ", "if", "not", "is_dist_avail_and_initialized", "(", ")", ":", "\n", "        ", "return", "0", "\n", "", "return", "dist", ".", "get_rank", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.dist_init": [[96, 138], ["int", "int", "int", "dist_utils.dist_init.parse_host_addr"], "function", ["None"], ["", "def", "dist_init", "(", "port", "=", "23456", ")", ":", "\n", "\n", "    ", "def", "init_parrots", "(", "host_addr", ",", "rank", ",", "local_rank", ",", "world_size", ",", "port", ")", ":", "\n", "        ", "os", ".", "environ", "[", "'MASTER_ADDR'", "]", "=", "str", "(", "host_addr", ")", "\n", "os", ".", "environ", "[", "'MASTER_PORT'", "]", "=", "str", "(", "port", ")", "\n", "os", ".", "environ", "[", "'WORLD_SIZE'", "]", "=", "str", "(", "world_size", ")", "\n", "os", ".", "environ", "[", "'RANK'", "]", "=", "str", "(", "rank", ")", "\n", "torch", ".", "distributed", ".", "init_process_group", "(", "backend", "=", "\"nccl\"", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "local_rank", ")", "\n", "\n", "", "def", "init", "(", "host_addr", ",", "rank", ",", "local_rank", ",", "world_size", ",", "port", ")", ":", "\n", "        ", "host_addr_full", "=", "'tcp://'", "+", "host_addr", "+", "':'", "+", "str", "(", "port", ")", "\n", "torch", ".", "distributed", ".", "init_process_group", "(", "\"nccl\"", ",", "init_method", "=", "host_addr_full", ",", "\n", "rank", "=", "rank", ",", "world_size", "=", "world_size", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "local_rank", ")", "\n", "assert", "torch", ".", "distributed", ".", "is_initialized", "(", ")", "\n", "\n", "\n", "", "def", "parse_host_addr", "(", "s", ")", ":", "\n", "        ", "if", "'['", "in", "s", ":", "\n", "            ", "left_bracket", "=", "s", ".", "index", "(", "'['", ")", "\n", "right_bracket", "=", "s", ".", "index", "(", "']'", ")", "\n", "prefix", "=", "s", "[", ":", "left_bracket", "]", "\n", "first_number", "=", "s", "[", "left_bracket", "+", "1", ":", "right_bracket", "]", ".", "split", "(", "','", ")", "[", "0", "]", ".", "split", "(", "'-'", ")", "[", "0", "]", "\n", "return", "prefix", "+", "first_number", "\n", "", "else", ":", "\n", "            ", "return", "s", "\n", "\n", "", "", "rank", "=", "int", "(", "os", ".", "environ", "[", "'SLURM_PROCID'", "]", ")", "\n", "local_rank", "=", "int", "(", "os", ".", "environ", "[", "'SLURM_LOCALID'", "]", ")", "\n", "world_size", "=", "int", "(", "os", ".", "environ", "[", "'SLURM_NTASKS'", "]", ")", "\n", "\n", "ip", "=", "parse_host_addr", "(", "os", ".", "environ", "[", "'SLURM_STEP_NODELIST'", "]", ")", "\n", "\n", "if", "torch", ".", "__version__", "==", "'parrots'", ":", "\n", "        ", "init_parrots", "(", "ip", ",", "rank", ",", "local_rank", ",", "world_size", ",", "port", ")", "\n", "from", "parrots", "import", "config", "\n", "config", ".", "set_attr", "(", "'engine'", ",", "'timeout'", ",", "value", "=", "500", ")", "\n", "", "else", ":", "\n", "        ", "init", "(", "ip", ",", "rank", ",", "local_rank", ",", "world_size", ",", "port", ")", "\n", "\n", "", "return", "rank", ",", "local_rank", ",", "world_size", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.lr_schedule.warmup_learning_rate": [[7, 15], ["min", "float", "float", "max", "max"], "function", ["None"], ["def", "warmup_learning_rate", "(", "optimizer", ",", "curr_step", ",", "warmup_step", ",", "args", ")", ":", "\n", "    ", "\"\"\"linearly warm up learning rate\"\"\"", "\n", "lr", "=", "args", ".", "lr", "\n", "scalar", "=", "float", "(", "curr_step", ")", "/", "float", "(", "max", "(", "1", ",", "warmup_step", ")", ")", "\n", "scalar", "=", "min", "(", "1.", ",", "max", "(", "0.", ",", "scalar", ")", ")", "\n", "lr", "*=", "scalar", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.lr_schedule.adjust_learning_rate": [[17, 28], ["float", "float", "math.cos"], "function", ["None"], ["", "", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "args", ")", ":", "\n", "    ", "\"\"\"Decay the learning rate based on schedule\"\"\"", "\n", "lr", "=", "args", ".", "lr", "\n", "if", "args", ".", "cos", ":", "# cosine lr schedule", "\n", "        ", "progress", "=", "float", "(", "epoch", "-", "args", ".", "warmup_epoch", ")", "/", "float", "(", "args", ".", "epochs", "-", "args", ".", "warmup_epoch", ")", "\n", "lr", "*=", "0.5", "*", "(", "1.", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "progress", ")", ")", "\n", "", "else", ":", "# stepwise lr schedule", "\n", "        ", "for", "milestone", "in", "args", ".", "schedule", ":", "\n", "            ", "lr", "*=", "0.1", "if", "epoch", ">=", "milestone", "else", "1.", "\n", "", "", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.lr_schedule.adjust_learning_rate_with_min": [[30, 42], ["float", "float", "math.cos"], "function", ["None"], ["", "", "def", "adjust_learning_rate_with_min", "(", "optimizer", ",", "epoch", ",", "args", ")", ":", "\n", "    ", "\"\"\"Decay the learning rate based on schedule\"\"\"", "\n", "lr", "=", "args", ".", "lr", "\n", "if", "args", ".", "cos", ":", "# cosine lr schedule", "\n", "        ", "min_lr", "=", "args", ".", "cos_min_lr", "\n", "progress", "=", "float", "(", "epoch", "-", "args", ".", "warmup_epoch", ")", "/", "float", "(", "args", ".", "epochs", "-", "args", ".", "warmup_epoch", ")", "\n", "lr", "=", "min_lr", "+", "0.5", "*", "(", "lr", "-", "min_lr", ")", "*", "(", "1.", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "progress", ")", ")", "\n", "", "else", ":", "# stepwise lr schedule", "\n", "        ", "for", "milestone", "in", "args", ".", "schedule", ":", "\n", "            ", "lr", "*=", "0.1", "if", "epoch", ">=", "milestone", "else", "1.", "\n", "", "", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "", ""]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.batch_norm.get_norm": [[7, 27], ["isinstance", "len", "torch.nn.GroupNorm", "torch.nn.InstanceNorm2d"], "function", ["None"], ["def", "get_norm", "(", "norm", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        norm (str or callable):\n\n    Returns:\n        nn.Module or None: the normalization layer\n    \"\"\"", "\n", "if", "isinstance", "(", "norm", ",", "str", ")", ":", "\n", "        ", "if", "len", "(", "norm", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "norm", "=", "{", "\n", "\"BN\"", ":", "nn", ".", "BatchNorm2d", ",", "\n", "\"BN1d\"", ":", "nn", ".", "BatchNorm1d", ",", "\n", "\"SyncBN\"", ":", "nn", ".", "SyncBatchNorm", ",", "\n", "\"GN\"", ":", "lambda", "channels", ":", "nn", ".", "GroupNorm", "(", "32", ",", "channels", ")", ",", "\n", "\"IN\"", ":", "lambda", "channels", ":", "nn", ".", "InstanceNorm2d", "(", "channels", ",", "affine", "=", "True", ")", ",", "\n", "\"None\"", ":", "None", ",", "\n", "}", "[", "norm", "]", "\n", "", "return", "norm", "\n", "", ""]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.AverageMeter.__init__": [[53, 57], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.AverageMeter.reset"], ["def", "__init__", "(", "self", ",", "name", ",", "fmt", "=", "':f'", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "fmt", "=", "fmt", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.AverageMeter.reset": [[58, 63], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.AverageMeter.update": [[64, 69], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.AverageMeter.__str__": [[70, 73], ["fmtstr.format"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "fmtstr", "=", "'{name} {val'", "+", "self", ".", "fmt", "+", "'} ({avg'", "+", "self", ".", "fmt", "+", "'})'", "\n", "return", "fmtstr", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.ProgressMeter.__init__": [[76, 80], ["utils.ProgressMeter._get_batch_fmtstr"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.ProgressMeter._get_batch_fmtstr"], ["    ", "def", "__init__", "(", "self", ",", "num_batches", ",", "meters", ",", "prefix", "=", "\"\"", ")", ":", "\n", "        ", "self", ".", "batch_fmtstr", "=", "self", ".", "_get_batch_fmtstr", "(", "num_batches", ")", "\n", "self", ".", "meters", "=", "meters", "\n", "self", ".", "prefix", "=", "prefix", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.ProgressMeter.display": [[81, 85], ["print", "str", "utils.ProgressMeter.batch_fmtstr.format"], "methods", ["None"], ["", "def", "display", "(", "self", ",", "batch", ")", ":", "\n", "        ", "entries", "=", "[", "self", ".", "prefix", "+", "self", ".", "batch_fmtstr", ".", "format", "(", "batch", ")", "]", "\n", "entries", "+=", "[", "str", "(", "meter", ")", "for", "meter", "in", "self", ".", "meters", "]", "\n", "print", "(", "'\\t'", ".", "join", "(", "entries", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.ProgressMeter._get_batch_fmtstr": [[86, 90], ["len", "str", "str", "fmt.format"], "methods", ["None"], ["", "def", "_get_batch_fmtstr", "(", "self", ",", "num_batches", ")", ":", "\n", "        ", "num_digits", "=", "len", "(", "str", "(", "num_batches", "//", "1", ")", ")", "\n", "fmt", "=", "'{:'", "+", "str", "(", "num_digits", ")", "+", "'d}'", "\n", "return", "'['", "+", "fmt", "+", "'/'", "+", "fmt", ".", "format", "(", "num_batches", ")", "+", "']'", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.__init__": [[94, 98], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "name", ",", "fmt", "=", "':f'", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "fmt", "=", "fmt", "\n", "self", ".", "val", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.update": [[99, 101], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.InstantMeter.__str__": [[102, 105], ["fmtstr.format"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "fmtstr", "=", "'{name} {val'", "+", "self", ".", "fmt", "+", "'}'", "\n", "return", "fmtstr", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.torch_dist_sum": [[8, 21], ["isinstance", "torch.distributed.all_reduce", "tensor_args.append", "arg.clone().reshape().detach().cuda", "torch.tensor().reshape().cuda", "arg.clone().reshape().detach", "torch.tensor().reshape", "arg.clone().reshape", "torch.tensor", "arg.clone"], "function", ["None"], ["def", "torch_dist_sum", "(", "gpu", ",", "*", "args", ")", ":", "\n", "    ", "process_group", "=", "torch", ".", "distributed", ".", "group", ".", "WORLD", "\n", "tensor_args", "=", "[", "]", "\n", "pending_res", "=", "[", "]", "\n", "for", "arg", "in", "args", ":", "\n", "        ", "if", "isinstance", "(", "arg", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "tensor_arg", "=", "arg", ".", "clone", "(", ")", ".", "reshape", "(", "-", "1", ")", ".", "detach", "(", ")", ".", "cuda", "(", "gpu", ")", "\n", "", "else", ":", "\n", "            ", "tensor_arg", "=", "torch", ".", "tensor", "(", "arg", ")", ".", "reshape", "(", "-", "1", ")", ".", "cuda", "(", "gpu", ")", "\n", "", "torch", ".", "distributed", ".", "all_reduce", "(", "tensor_arg", ",", "group", "=", "process_group", ")", "\n", "tensor_args", ".", "append", "(", "tensor_arg", ")", "\n", "\n", "", "return", "tensor_args", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.save_checkpoint": [[23, 32], ["torch.save", "shutil.copyfile", "shutil.copyfile", "shutil.copyfile"], "function", ["None"], ["", "def", "save_checkpoint", "(", "state", ",", "is_best", ",", "epoch", ",", "args", ",", "filename", "=", "'checkpoint.pth.tar'", ")", ":", "\n", "    ", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "if", "is_best", ":", "\n", "        ", "shutil", ".", "copyfile", "(", "filename", ",", "'model_best.pth.tar'", ")", "\n", "", "if", "args", ".", "save_freq", ">", "0", "and", "(", "epoch", "+", "1", ")", "%", "args", ".", "save_freq", "==", "0", ":", "\n", "        ", "shutil", ".", "copyfile", "(", "filename", ",", "'checkpoint_{:04d}.pth.tar'", ".", "format", "(", "epoch", ")", ")", "\n", "", "if", "not", "args", ".", "cos", ":", "\n", "        ", "if", "(", "epoch", "+", "1", ")", "in", "args", ".", "schedule", ":", "\n", "            ", "shutil", ".", "copyfile", "(", "filename", ",", "'checkpoint_{:04d}.pth.tar'", ".", "format", "(", "epoch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.utils.accuracy": [[34, 49], ["torch.no_grad", "max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].reshape().float().sum", "res.append", "correct[].reshape().float().sum.mul_", "target.view", "correct[].reshape().float", "correct[].reshape"], "function", ["None"], ["", "", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the accuracy over the k top predictions for the specified values of k\"\"\"", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "            ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "reshape", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.weight_decay.add_weight_decay": [[1, 14], ["model.named_parameters", "name.endswith", "no_decay.append", "decay.append", "len"], "function", ["None"], ["def", "add_weight_decay", "(", "model", ",", "weight_decay", "=", "1e-4", ",", "skip_list", "=", "(", ")", ")", ":", "\n", "    ", "decay", "=", "[", "]", "\n", "no_decay", "=", "[", "]", "\n", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "not", "param", ".", "requires_grad", ":", "\n", "            ", "continue", "# frozen weights", "\n", "", "if", "len", "(", "param", ".", "shape", ")", "==", "1", "or", "name", ".", "endswith", "(", "\".bias\"", ")", "or", "name", "in", "skip_list", ":", "\n", "            ", "no_decay", ".", "append", "(", "param", ")", "\n", "", "else", ":", "\n", "            ", "decay", ".", "append", "(", "param", ")", "\n", "", "", "return", "[", "\n", "{", "'params'", ":", "no_decay", ",", "'weight_decay'", ":", "0.", "}", ",", "\n", "{", "'params'", ":", "decay", ",", "'weight_decay'", ":", "weight_decay", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.weight_decay.create_params": [[16, 27], ["hasattr", "weight_decay.add_weight_decay", "model.parameters", "model.no_weight_decay"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.weight_decay.add_weight_decay"], ["", "def", "create_params", "(", "model", ",", "weight_decay", ",", "filter_bias_and_bn", "=", "True", ")", ":", "\n", "    ", "skip", "=", "{", "}", "\n", "if", "weight_decay", "and", "filter_bias_and_bn", ":", "\n", "        ", "skip", "=", "{", "}", "\n", "if", "hasattr", "(", "model", ",", "'no_weight_decay'", ")", ":", "\n", "            ", "skip", "=", "model", ".", "no_weight_decay", "(", ")", "\n", "", "parameters", "=", "add_weight_decay", "(", "model", ",", "weight_decay", ",", "skip", ")", "\n", "weight_decay", "=", "0.", "\n", "", "else", ":", "\n", "        ", "parameters", "=", "model", ".", "parameters", "(", ")", "\n", "", "return", "parameters", "\n", "", ""]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.ResNet.__init__": [[9, 18], ["torch.Module.__init__", "base_encoder", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "hasattr", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithIndex.__init__"], ["import", "math", "\n", "import", "os", "\n", "import", "time", "\n", "\n", "import", "torch", "\n", "import", "torch", ".", "nn", "as", "nn", "\n", "import", "torch", ".", "nn", ".", "parallel", "\n", "import", "torch", ".", "backends", ".", "cudnn", "as", "cudnn", "\n", "import", "torch", ".", "nn", ".", "functional", "as", "F", "\n", "import", "torch", ".", "optim", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.ResNet.forward": [[21, 26], ["simmatch.ResNet.backbone", "simmatch.ResNet.head", "simmatch.ResNet.fc", "torch.normalize", "torch.normalize", "torch.normalize"], "methods", ["None"], ["from", "torch", ".", "utils", ".", "data", "import", "DataLoader", "\n", "from", "torch", ".", "utils", ".", "data", ".", "distributed", "import", "DistributedSampler", "\n", "from", "data", ".", "imagenet", "import", "*", "\n", "\n", "import", "backbone", "as", "backbone_models", "\n", "from", "models", ".", "simmatch", "import", "get_simmatch_model", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.SimMatch.__init__": [[29, 52], ["torch.Module.__init__", "simmatch.ResNet", "print", "simmatch.ResNet", "zip", "simmatch.SimMatch.register_buffer", "torch.functional.normalize", "torch.functional.normalize", "torch.functional.normalize", "simmatch.SimMatch.register_buffer", "simmatch.SimMatch.main.parameters", "simmatch.SimMatch.ema.parameters", "param_ema.data.copy_", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "simmatch.SimMatch.register_buffer", "simmatch.SimMatch.register_buffer", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithIndex.__init__"], ["from", "engine", "import", "validate", "\n", "\n", "\n", "backbone_model_names", "=", "sorted", "(", "name", "for", "name", "in", "backbone_models", ".", "__dict__", "\n", "if", "name", ".", "islower", "(", ")", "and", "not", "name", ".", "startswith", "(", "\"__\"", ")", "\n", "and", "callable", "(", "backbone_models", ".", "__dict__", "[", "name", "]", ")", ")", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PyTorch ImageNet Training'", ")", "\n", "parser", ".", "add_argument", "(", "'--trainindex_x'", ",", "default", "=", "None", ",", "type", "=", "str", ",", "metavar", "=", "'PATH'", ",", "\n", "help", "=", "'path to train annotation_x (default: None)'", ")", "\n", "parser", ".", "add_argument", "(", "'--trainindex_u'", ",", "default", "=", "None", ",", "type", "=", "str", ",", "metavar", "=", "'PATH'", ",", "\n", "help", "=", "'path to train annotation_u (default: None)'", ")", "\n", "parser", ".", "add_argument", "(", "'--arch'", ",", "metavar", "=", "'ARCH'", ",", "default", "=", "'SimMatch'", ",", "\n", "help", "=", "'model architecture'", ")", "\n", "parser", ".", "add_argument", "(", "'--backbone'", ",", "default", "=", "'resnet50_encoder'", ",", "\n", "choices", "=", "backbone_model_names", ",", "\n", "help", "=", "'model architecture: '", "+", "\n", "' | '", ".", "join", "(", "backbone_model_names", ")", "+", "\n", "' (default: resnet50_encoder)'", ")", "\n", "parser", ".", "add_argument", "(", "'--cls'", ",", "default", "=", "1000", ",", "type", "=", "int", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'number of classes'", ")", "\n", "parser", ".", "add_argument", "(", "'--port'", ",", "default", "=", "23456", ",", "type", "=", "int", ",", "help", "=", "'dist init port'", ")", "\n", "parser", ".", "add_argument", "(", "'-j'", ",", "'--workers'", ",", "default", "=", "6", ",", "type", "=", "int", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'number of data loading workers (default: 4)'", ")", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.SimMatch.momentum_update_ema": [[53, 67], ["simmatch.SimMatch.main.state_dict", "simmatch.SimMatch.ema.state_dict", "zip", "zip", "simmatch.SimMatch.items", "simmatch.SimMatch.items", "simmatch.SimMatch.main.parameters", "simmatch.SimMatch.ema.parameters", "v_ema.copy_", "v_ema.copy_"], "methods", ["None"], ["parser", ".", "add_argument", "(", "'--epochs'", ",", "default", "=", "200", ",", "type", "=", "int", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'number of total epochs to run'", ")", "\n", "parser", ".", "add_argument", "(", "'--start-epoch'", ",", "default", "=", "0", ",", "type", "=", "int", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'manual epoch number (useful on restarts)'", ")", "\n", "parser", ".", "add_argument", "(", "'--warmup-epoch'", ",", "default", "=", "0", ",", "type", "=", "int", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'number of epochs for learning warmup'", ")", "\n", "parser", ".", "add_argument", "(", "'-b'", ",", "'--batch-size'", ",", "default", "=", "8", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "\n", "help", "=", "'mini-batch size (default: 256), this is the total '", "\n", "'batch size of all GPUs on the current node when '", "\n", "'using Data Parallel or Distributed Data Parallel'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "'--learning-rate'", ",", "default", "=", "0.1", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'LR'", ",", "help", "=", "'initial learning rate'", ",", "dest", "=", "'lr'", ")", "\n", "parser", ".", "add_argument", "(", "'--schedule'", ",", "default", "=", "[", "120", ",", "160", "]", ",", "nargs", "=", "'*'", ",", "type", "=", "int", ",", "\n", "help", "=", "'learning rate schedule (when to drop lr by 10x)'", ")", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.SimMatch._update_bank": [[68, 75], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "simmatch.concat_all_gather", "simmatch.concat_all_gather", "simmatch.concat_all_gather", "concat_all_gather.t"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.concat_all_gather", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.concat_all_gather", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.concat_all_gather"], ["parser", ".", "add_argument", "(", "'--cos'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'use cosine lr schedule'", ")", "\n", "parser", ".", "add_argument", "(", "'--momentum'", ",", "default", "=", "0.9", ",", "type", "=", "float", ",", "metavar", "=", "'M'", ",", "\n", "help", "=", "'momentum'", ")", "\n", "parser", ".", "add_argument", "(", "'--wd'", ",", "'--weight-decay'", ",", "default", "=", "1e-4", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'W'", ",", "help", "=", "'weight decay (default: 1e-4)'", ",", "\n", "dest", "=", "'weight_decay'", ")", "\n", "parser", ".", "add_argument", "(", "'--nesterov'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.SimMatch.distribution_alignment": [[77, 87], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "probs.mean", "torch.distributed.all_reduce", "torch.distributed.all_reduce", "torch.distributed.all_reduce", "torch.distributed.all_reduce", "torch.distributed.all_reduce", "torch.distributed.all_reduce", "torch.distributed.all_reduce", "torch.distributed.all_reduce", "torch.distributed.all_reduce", "int", "probs.detach", "torch.distributed.get_world_size", "torch.distributed.get_world_size", "torch.distributed.get_world_size", "torch.distributed.get_world_size", "torch.distributed.get_world_size", "torch.distributed.get_world_size", "torch.distributed.get_world_size", "torch.distributed.get_world_size", "torch.distributed.get_world_size", "simmatch.SimMatch.DA_queue.mean", "probs.sum"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size"], ["parser", ".", "add_argument", "(", "'-p'", ",", "'--print-freq'", ",", "default", "=", "20", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'print frequency (default: 10)'", ")", "\n", "parser", ".", "add_argument", "(", "'--eval-freq'", ",", "default", "=", "1", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'evaluation epoch frequency (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--resume'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "metavar", "=", "'PATH'", ",", "\n", "help", "=", "'path to latest checkpoint (default: none)'", ")", "\n", "parser", ".", "add_argument", "(", "'--checkpoint'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "metavar", "=", "'PATH'", ",", "\n", "help", "=", "'path to latest checkpoint (default: none)'", ")", "\n", "parser", ".", "add_argument", "(", "'-e'", ",", "'--evaluate'", ",", "dest", "=", "'evaluate'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'evaluate model on validation set'", ")", "\n", "parser", ".", "add_argument", "(", "'--pretrained'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "metavar", "=", "'PATH'", ",", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.SimMatch._batch_shuffle_ddp": [[88, 115], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "simmatch.concat_all_gather", "torch.randperm().cuda", "torch.randperm().cuda", "torch.randperm().cuda", "torch.randperm().cuda", "torch.randperm().cuda", "torch.randperm().cuda", "torch.randperm().cuda", "torch.randperm().cuda", "torch.randperm().cuda", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.randperm().cuda.view", "torch.randperm().cuda.view", "torch.randperm().cuda.view", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.concat_all_gather", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank"], ["help", "=", "'path to pretrained model (default: none)'", ")", "\n", "parser", ".", "add_argument", "(", "'--self-pretrained'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "metavar", "=", "'PATH'", ",", "\n", "help", "=", "'path to MoCo pretrained model (default: none)'", ")", "\n", "parser", ".", "add_argument", "(", "'--super-pretrained'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "metavar", "=", "'PATH'", ",", "\n", "help", "=", "'path to supervised pretrained model (default: none)'", ")", "\n", "parser", ".", "add_argument", "(", "'--world-size'", ",", "default", "=", "-", "1", ",", "type", "=", "int", ",", "\n", "help", "=", "'number of nodes for distributed training'", ")", "\n", "parser", ".", "add_argument", "(", "'--rank'", ",", "default", "=", "-", "1", ",", "type", "=", "int", ",", "\n", "help", "=", "'node rank for distributed training'", ")", "\n", "parser", ".", "add_argument", "(", "'--dist-url'", ",", "default", "=", "'tcp://224.66.41.62:23456'", ",", "type", "=", "str", ",", "\n", "help", "=", "'url used to set up distributed training'", ")", "\n", "parser", ".", "add_argument", "(", "'--dist-backend'", ",", "default", "=", "'nccl'", ",", "type", "=", "str", ",", "\n", "help", "=", "'distributed backend'", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "default", "=", "None", ",", "type", "=", "int", ",", "\n", "help", "=", "'seed for initializing training. '", ")", "\n", "parser", ".", "add_argument", "(", "'--gpu'", ",", "default", "=", "None", ",", "type", "=", "int", ",", "\n", "help", "=", "'GPU id to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--multiprocessing-distributed'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'Use multi-processing distributed training to launch '", "\n", "'N processes per node, which has N GPUs. This is the '", "\n", "'fastest way to use PyTorch for either single node or '", "\n", "'multi node data parallel training'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--anno-percent'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "\n", "help", "=", "'number of labeled data'", ")", "\n", "parser", ".", "add_argument", "(", "'--split-seed'", ",", "default", "=", "42", ",", "type", "=", "int", ",", "\n", "help", "=", "'seed for initializing training. '", ")", "\n", "parser", ".", "add_argument", "(", "'--mu'", ",", "default", "=", "5", ",", "type", "=", "int", ",", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.SimMatch._batch_unshuffle_ddp": [[116, 134], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "simmatch.concat_all_gather", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "idx_unshuffle.view"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.concat_all_gather", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_rank"], ["help", "=", "'coefficient of unlabeled batch size'", ")", "\n", "parser", ".", "add_argument", "(", "'--lambda-u'", ",", "default", "=", "10", ",", "type", "=", "float", ",", "\n", "help", "=", "'coefficient of unlabeled loss'", ")", "\n", "parser", ".", "add_argument", "(", "'--threshold'", ",", "default", "=", "0.7", ",", "type", "=", "float", ",", "\n", "help", "=", "'pseudo label threshold'", ")", "\n", "parser", ".", "add_argument", "(", "'--eman'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'use EMAN'", ")", "\n", "parser", ".", "add_argument", "(", "'--ema-m'", ",", "default", "=", "0.999", ",", "type", "=", "float", ",", "\n", "help", "=", "'EMA decay rate'", ")", "\n", "parser", ".", "add_argument", "(", "'--norm'", ",", "default", "=", "'None'", ",", "type", "=", "str", ",", "\n", "help", "=", "'the normalization for backbone (default: None)'", ")", "\n", "# online_net.backbone for BYOL", "\n", "parser", ".", "add_argument", "(", "'--moco-path'", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--model-prefix'", ",", "default", "=", "'encoder_q'", ",", "type", "=", "str", ",", "\n", "help", "=", "'the model prefix of self-supervised pretrained state_dict'", ")", "\n", "parser", ".", "add_argument", "(", "'--st'", ",", "type", "=", "float", ",", "default", "=", "0.1", ")", "\n", "parser", ".", "add_argument", "(", "'--tt'", ",", "type", "=", "float", ",", "default", "=", "0.1", ")", "\n", "parser", ".", "add_argument", "(", "'--c_smooth'", ",", "type", "=", "float", ",", "default", "=", "1.0", ")", "\n", "parser", ".", "add_argument", "(", "'--DA'", ",", "default", "=", "False", ",", "action", "=", "'store_true'", ")", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.SimMatch.forward": [[136, 190], ["simmatch.SimMatch.bank.clone().detach", "simmatch.SimMatch.main", "simmatch.SimMatch._update_bank", "simmatch.SimMatch.main", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "simmatch.SimMatch.bank.clone", "simmatch.SimMatch.ema", "simmatch.SimMatch._batch_shuffle_ddp", "simmatch.SimMatch.ema", "simmatch.SimMatch._batch_unshuffle_ddp", "simmatch.SimMatch._batch_unshuffle_ddp", "simmatch.SimMatch.distribution_alignment", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.softmax", "torch.softmax", "torch.softmax", "simmatch.SimMatch.gather", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "simmatch.SimMatch.labels.expand", "torch.softmax.size", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "aggregated_prob.scatter_add.scatter_add.scatter_add", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "simmatch.SimMatch.labels.expand", "teacher_prob.detach"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.SimMatch._update_bank", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.SimMatch._batch_shuffle_ddp", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.SimMatch._batch_unshuffle_ddp", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.SimMatch._batch_unshuffle_ddp", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.SimMatch.distribution_alignment"], ["parser", ".", "add_argument", "(", "'--randaug'", ",", "default", "=", "False", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--stack'", ",", "default", "=", "False", ",", "action", "=", "'store_true'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "def", "main_worker", "(", ")", ":", "\n", "    ", "best_acc1", "=", "0", "\n", "best_acc5", "=", "0", "\n", "\n", "rank", ",", "local_rank", ",", "world_size", "=", "dist_utils", ".", "dist_init", "(", "args", ".", "port", ")", "\n", "args", ".", "gpu", "=", "local_rank", "\n", "args", ".", "rank", "=", "rank", "\n", "args", ".", "world_size", "=", "world_size", "\n", "args", ".", "distributed", "=", "True", "\n", "\n", "\n", "if", "rank", "!=", "0", ":", "\n", "        ", "def", "print_pass", "(", "*", "args", ")", ":", "\n", "            ", "pass", "\n", "", "builtins", ".", "print", "=", "print_pass", "\n", "\n", "", "print", "(", "args", ")", "\n", "\n", "train_dataset_x", ",", "train_dataset_u", ",", "val_dataset", "=", "get_imagenet_ssl", "(", ")", "\n", "\n", "# Data loading code", "\n", "train_sampler", "=", "DistributedSampler", "\n", "\n", "train_loader_x", "=", "DataLoader", "(", "\n", "train_dataset_x", ",", "\n", "sampler", "=", "train_sampler", "(", "train_dataset_x", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "persistent_workers", "=", "True", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "train_loader_u", "=", "DataLoader", "(", "\n", "train_dataset_u", ",", "\n", "sampler", "=", "train_sampler", "(", "train_dataset_u", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", "*", "args", ".", "mu", ",", "persistent_workers", "=", "True", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "val_loader", "=", "DataLoader", "(", "\n", "val_dataset", ",", "\n", "sampler", "=", "train_sampler", "(", "val_dataset", ")", ",", "\n", "batch_size", "=", "64", ",", "shuffle", "=", "False", ",", "persistent_workers", "=", "True", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "\n", "\n", "# create model", "\n", "print", "(", "\"=> creating model '{}' with backbone '{}'\"", ".", "format", "(", "args", ".", "arch", ",", "args", ".", "backbone", ")", ")", "\n", "model_func", "=", "get_simmatch_model", "(", "args", ".", "arch", ")", "\n", "norm", "=", "get_norm", "(", "args", ".", "norm", ")", "\n", "model", "=", "model_func", "(", "\n", "backbone_models", ".", "__dict__", "[", "args", ".", "backbone", "]", ",", "\n", "eman", "=", "args", ".", "eman", ",", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.get_simmatch_model": [[192, 198], ["isinstance"], "function", ["None"], ["norm", "=", "norm", ",", "\n", "K", "=", "len", "(", "train_dataset_x", ")", ",", "\n", "args", "=", "args", "\n", ")", "\n", "\n", "if", "args", ".", "moco_path", "is", "not", "None", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "moco_path", ",", "map_location", "=", "\"cpu\"", ")", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.models.simmatch.concat_all_gather": [[202, 214], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.distributed.all_gather", "torch.distributed.all_gather", "torch.distributed.all_gather", "torch.cat", "torch.cat", "torch.cat", "torch.ones_like", "torch.ones_like", "torch.ones_like", "range", "torch.distributed.get_world_size", "torch.distributed.get_world_size", "torch.distributed.get_world_size"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.utils.dist_utils.get_world_size"], ["                ", "state_dict", "[", "k", ".", "replace", "(", "'module.encoder_q'", ",", "'backbone'", ")", "]", "=", "state_dict", "[", "k", "]", "\n", "", "del", "state_dict", "[", "k", "]", "\n", "\n", "", "for", "k", "in", "list", "(", "state_dict", ".", "keys", "(", ")", ")", ":", "\n", "            ", "if", "'backbone.fc.0'", "in", "k", ":", "\n", "                ", "state_dict", "[", "k", ".", "replace", "(", "'backbone.fc.0'", ",", "'head.0'", ")", "]", "=", "state_dict", "[", "k", "]", "\n", "del", "state_dict", "[", "k", "]", "\n", "", "if", "'backbone.fc.2'", "in", "k", ":", "\n", "                ", "state_dict", "[", "k", ".", "replace", "(", "'backbone.fc.2'", ",", "'head.2'", ")", "]", "=", "state_dict", "[", "k", "]", "\n", "del", "state_dict", "[", "k", "]", "\n", "\n", "", "", "model", ".", "main", ".", "load_state_dict", "(", "state_dict", "=", "state_dict", ",", "strict", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.BasicBlock.__init__": [[28, 45], ["torch.Module.__init__", "resnet.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "resnet.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithIndex.__init__", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.conv3x3", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.BasicBlock.forward": [[46, 63], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.Bottleneck.__init__": [[74, 90], ["torch.Module.__init__", "resnet.conv1x1", "norm_layer", "resnet.conv3x3", "norm_layer", "resnet.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithIndex.__init__", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.conv1x1", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.conv3x3", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.Bottleneck.forward": [[91, 112], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.ResNet.__init__": [[116, 167], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "resnet.ResNet.modules", "len", "ValueError", "isinstance", "resnet.ResNet.modules", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithIndex.__init__", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "zero_init_residual", "=", "False", ",", "\n", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "replace_stride_with_dilation", "=", "None", ",", "\n", "norm_layer", "=", "None", ",", "width_multiplier", "=", "1", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "\n", "self", ".", "inplanes", "=", "64", "*", "width_multiplier", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", "*", "width_multiplier", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", "*", "width_multiplier", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", "*", "width_multiplier", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", "*", "width_multiplier", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "out_channels", "=", "512", "*", "width_multiplier", "*", "block", ".", "expansion", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.ResNet._make_layer": [[168, 191], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "resnet.conv1x1", "norm_layer", "block"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.conv1x1"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "self", ".", "groups", ",", "\n", "self", ".", "base_width", ",", "previous_dilation", ",", "norm_layer", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm_layer", "=", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.ResNet._forward_impl": [[192, 208], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "resnet.ResNet.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten"], "methods", ["None"], ["", "def", "_forward_impl", "(", "self", ",", "x", ")", ":", "\n", "# See note [TorchScript super()]", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.ResNet.forward": [[209, 211], ["resnet.ResNet._forward_impl"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.ResNetCls._forward_impl"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "_forward_impl", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.ResNetCls.__init__": [[215, 229], ["resnet.ResNet.__init__", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithIndex.__init__"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ",", "zero_init_residual", "=", "False", ",", "\n", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "replace_stride_with_dilation", "=", "None", ",", "\n", "norm_layer", "=", "None", ",", "width_multiplier", "=", "1", ",", "normalize", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResNetCls", ",", "self", ")", ".", "__init__", "(", "\n", "block", ",", "layers", ",", "\n", "zero_init_residual", "=", "zero_init_residual", ",", "\n", "groups", "=", "groups", ",", "\n", "width_per_group", "=", "width_per_group", ",", "\n", "replace_stride_with_dilation", "=", "replace_stride_with_dilation", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "width_multiplier", "=", "width_multiplier", ",", "\n", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "self", ".", "out_channels", ",", "num_classes", ")", "\n", "self", ".", "normalize", "=", "normalize", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.ResNetCls._forward_impl": [[230, 249], ["resnet.ResNetCls.conv1", "resnet.ResNetCls.bn1", "resnet.ResNetCls.relu", "resnet.ResNetCls.maxpool", "resnet.ResNetCls.layer1", "resnet.ResNetCls.layer2", "resnet.ResNetCls.layer3", "resnet.ResNetCls.layer4", "resnet.ResNetCls.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "resnet.ResNetCls.fc", "torch.functional.normalize", "torch.functional.normalize"], "methods", ["None"], ["", "def", "_forward_impl", "(", "self", ",", "x", ")", ":", "\n", "# See note [TorchScript super()]", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "if", "self", ".", "normalize", ":", "\n", "            ", "x", "=", "nn", ".", "functional", ".", "normalize", "(", "x", ",", "dim", "=", "1", ")", "\n", "", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.conv3x3": [[14, 18], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.conv1x1": [[20, 23], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.resnet18_encoder": [[251, 256], ["resnet.ResNet"], "function", ["None"], ["", "", "def", "resnet18_encoder", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-18 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    \"\"\"", "\n", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.resnet34_encoder": [[258, 263], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet34_encoder", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-34 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    \"\"\"", "\n", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.resnet50_encoder": [[265, 270], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet50_encoder", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-50 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    \"\"\"", "\n", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.resnet50w2x_encoder": [[272, 274], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet50w2x_encoder", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "width_multiplier", "=", "2", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.resnet50w2x_cls": [[276, 279], ["resnet.ResNetCls"], "function", ["None"], ["", "def", "resnet50w2x_cls", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNetCls", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "width_multiplier", "=", "2", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.backbone.resnet.resnet101_encoder": [[281, 286], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet101_encoder", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-101 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    \"\"\"", "\n", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.transforms.Solarize.__init__": [[12, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "threshold", "=", "128", ")", ":", "\n", "        ", "self", ".", "threshold", "=", "threshold", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.transforms.Solarize.__call__": [[15, 17], ["PIL.ImageOps.solarize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "ImageOps", ".", "solarize", "(", "img", ",", "self", ".", "threshold", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.transforms.Solarize.__repr__": [[18, 21], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "repr_str", "=", "self", ".", "__class__", ".", "__name__", "\n", "return", "repr_str", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.transforms.GaussianBlur.__init__": [[26, 28], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "sigma", "=", "[", ".1", ",", "2.", "]", ")", ":", "\n", "        ", "self", ".", "sigma", "=", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.transforms.GaussianBlur.__call__": [[29, 33], ["random.uniform", "x.filter.filter.filter", "PIL.ImageFilter.GaussianBlur"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "sigma", "=", "random", ".", "uniform", "(", "self", ".", "sigma", "[", "0", "]", ",", "self", ".", "sigma", "[", "1", "]", ")", "\n", "x", "=", "x", ".", "filter", "(", "ImageFilter", ".", "GaussianBlur", "(", "radius", "=", "sigma", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.transforms.TwoCropsTransform.__init__": [[175, 178], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "transform1", ",", "transform2", ")", ":", "\n", "        ", "self", ".", "transform1", "=", "transform1", "\n", "self", ".", "transform2", "=", "transform2", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.transforms.TwoCropsTransform.__call__": [[179, 183], ["torchvision.transforms.TwoCropsTransform.transform1", "torchvision.transforms.TwoCropsTransform.transform2"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "out1", "=", "self", ".", "transform1", "(", "x", ")", "\n", "out2", "=", "self", ".", "transform2", "(", "x", ")", "\n", "return", "out1", ",", "out2", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.transforms.TwoCropsTransform.__repr__": [[184, 196], ["enumerate", "t_string.split"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "format_string", "=", "self", ".", "__class__", ".", "__name__", "+", "'('", "\n", "names", "=", "[", "'transform1'", ",", "'transform2'", "]", "\n", "for", "idx", ",", "t", "in", "enumerate", "(", "[", "self", ".", "transform1", ",", "self", ".", "transform2", "]", ")", ":", "\n", "            ", "format_string", "+=", "'\\n'", "\n", "t_string", "=", "'{0}={1}'", ".", "format", "(", "names", "[", "idx", "]", ",", "t", ")", "\n", "t_string_split", "=", "t_string", ".", "split", "(", "'\\n'", ")", "\n", "t_string_split", "=", "[", "'    '", "+", "tstr", "for", "tstr", "in", "t_string_split", "]", "\n", "t_string", "=", "'\\n'", ".", "join", "(", "t_string_split", ")", "\n", "format_string", "+=", "'{0}'", ".", "format", "(", "t_string", ")", "\n", "", "format_string", "+=", "'\\n)'", "\n", "return", "format_string", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.transforms.get_weak_aug": [[35, 41], ["torchvision.transforms.Compose", "torchvision.transforms.RandomResizedCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["None"], ["", "", "def", "get_weak_aug", "(", "min_scale", "=", "0.2", ")", ":", "\n", "    ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ",", "scale", "=", "(", "min_scale", ",", "1", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.transforms.get_augmentations": [[91, 133], ["torchvision.transforms.Normalize", "torchvision.transforms.RandomResizedCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "NotImplementedError", "randaugment.RandAugment", "torchvision.transforms.RandomResizedCrop", "torchvision.transforms.RandomGrayscale", "torchvision.transforms.ColorJitter", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.RandomResizedCrop", "torchvision.transforms.RandomApply", "torchvision.transforms.RandomGrayscale", "torchvision.transforms.RandomApply", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ColorJitter", "transforms.GaussianBlur"], "function", ["None"], ["def", "get_augmentations", "(", "aug_type", ")", ":", "\n", "    ", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "default_train_augs", "=", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "]", "\n", "default_val_augs", "=", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "]", "\n", "appendix_augs", "=", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", "\n", "if", "aug_type", "==", "'DefaultTrain'", ":", "\n", "        ", "augs", "=", "default_train_augs", "+", "appendix_augs", "\n", "", "elif", "aug_type", "==", "'DefaultVal'", ":", "\n", "        ", "augs", "=", "default_val_augs", "+", "appendix_augs", "\n", "", "elif", "aug_type", "==", "'RandAugment'", ":", "\n", "        ", "augs", "=", "default_train_augs", "+", "[", "RandAugment", "(", "n", "=", "2", ",", "m", "=", "10", ")", "]", "+", "appendix_augs", "\n", "", "elif", "aug_type", "==", "'MoCoV1'", ":", "\n", "        ", "augs", "=", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ",", "scale", "=", "(", "0.2", ",", "1.", ")", ")", ",", "\n", "transforms", ".", "RandomGrayscale", "(", "p", "=", "0.2", ")", ",", "\n", "transforms", ".", "ColorJitter", "(", "0.4", ",", "0.4", ",", "0.4", ",", "0.4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", "\n", "]", "+", "appendix_augs", "\n", "", "elif", "aug_type", "==", "'MoCoV2'", ":", "\n", "        ", "augs", "=", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ",", "scale", "=", "(", "0.2", ",", "1.", ")", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "\n", "transforms", ".", "ColorJitter", "(", "0.4", ",", "0.4", ",", "0.4", ",", "0.1", ")", "# not strengthened", "\n", "]", ",", "p", "=", "0.8", ")", ",", "\n", "transforms", ".", "RandomGrayscale", "(", "p", "=", "0.2", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "GaussianBlur", "(", "[", ".1", ",", "2.", "]", ")", "]", ",", "p", "=", "0.5", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "]", "+", "appendix_augs", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'augmentation type not found: {}'", ".", "format", "(", "aug_type", ")", ")", "\n", "\n", "", "return", "augs", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.transforms.get_transforms": [[135, 138], ["transforms.get_augmentations", "torchvision.transforms.Compose"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.transforms.get_augmentations"], ["", "def", "get_transforms", "(", "aug_type", ")", ":", "\n", "    ", "augs", "=", "get_augmentations", "(", "aug_type", ")", "\n", "return", "transforms", ".", "Compose", "(", "augs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.transforms.get_byol_tranforms": [[140, 170], ["torchvision.transforms.Normalize", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.RandomResizedCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.RandomApply", "torchvision.transforms.RandomGrayscale", "torchvision.transforms.RandomApply", "torchvision.transforms.RandomApply", "torchvision.transforms.ToTensor", "torchvision.transforms.RandomResizedCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.RandomApply", "torchvision.transforms.RandomGrayscale", "torchvision.transforms.RandomApply", "torchvision.transforms.RandomApply", "torchvision.transforms.ToTensor", "torchvision.transforms.ColorJitter", "transforms.GaussianBlur", "transforms.Solarize", "torchvision.transforms.ColorJitter", "transforms.GaussianBlur", "transforms.Solarize"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Solarize", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Solarize"], ["", "def", "get_byol_tranforms", "(", ")", ":", "\n", "    ", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "augmentation1", "=", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ",", "scale", "=", "(", "0.2", ",", "1.", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "\n", "transforms", ".", "ColorJitter", "(", "0.4", ",", "0.4", ",", "0.2", ",", "0.1", ")", "# not strengthened", "\n", "]", ",", "p", "=", "0.8", ")", ",", "\n", "transforms", ".", "RandomGrayscale", "(", "p", "=", "0.2", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "GaussianBlur", "(", "[", ".1", ",", "2.", "]", ")", "]", ",", "p", "=", "1.", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "Solarize", "(", ")", "]", ",", "p", "=", "0.", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", "\n", "augmentation2", "=", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ",", "scale", "=", "(", "0.2", ",", "1.", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "\n", "transforms", ".", "ColorJitter", "(", "0.4", ",", "0.4", ",", "0.2", ",", "0.1", ")", "# not strengthened", "\n", "]", ",", "p", "=", "0.8", ")", ",", "\n", "transforms", ".", "RandomGrayscale", "(", "p", "=", "0.2", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "GaussianBlur", "(", "[", ".1", ",", "2.", "]", ")", "]", ",", "p", "=", "0.1", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "Solarize", "(", ")", "]", ",", "p", "=", "0.2", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", "\n", "transform1", "=", "transforms", ".", "Compose", "(", "augmentation1", ")", "\n", "transform2", "=", "transforms", ".", "Compose", "(", "augmentation2", ")", "\n", "return", "transform1", ",", "transform2", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.DatasetCache.__init__": [[11, 14], ["torch.Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithIndex.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "initialized", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.DatasetCache._init_memcached": [[16, 22], ["mc.MemcachedClient.GetInstance"], "methods", ["None"], ["", "def", "_init_memcached", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "initialized", ":", "\n", "            ", "server_list_config_file", "=", "\"/mnt/lustre/share/memcached_client/server_list.conf\"", "\n", "client_config_file", "=", "\"/mnt/lustre/share/memcached_client/client.conf\"", "\n", "self", ".", "mclient", "=", "mc", ".", "MemcachedClient", ".", "GetInstance", "(", "server_list_config_file", ",", "client_config_file", ")", "\n", "self", ".", "initialized", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.DatasetCache.load_image": [[23, 33], ["imagenet.DatasetCache._init_memcached", "mc.pyvector", "imagenet.DatasetCache.mclient.Get", "mc.ConvertBuffer", "io.BytesIO", "PIL.Image.open", "img.convert.convert.convert"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.DatasetCache._init_memcached"], ["", "", "def", "load_image", "(", "self", ",", "filename", ")", ":", "\n", "        ", "self", ".", "_init_memcached", "(", ")", "\n", "value", "=", "mc", ".", "pyvector", "(", ")", "\n", "self", ".", "mclient", ".", "Get", "(", "filename", ",", "value", ")", "\n", "value_str", "=", "mc", ".", "ConvertBuffer", "(", "value", ")", "\n", "\n", "buff", "=", "io", ".", "BytesIO", "(", "value_str", ")", "\n", "with", "Image", ".", "open", "(", "buff", ")", "as", "img", ":", "\n", "            ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.BaseDataset.__init__": [[37, 86], ["imagenet.DatasetCache.__init__", "os.path.join", "os.path.join", "open", "os.path.join", "os.path.join", "line.split", "int", "torchvision.Compose", "torchvision.Compose", "os.path.join", "os.path.join", "NotImplementedError", "imagenet.BaseDataset.samples.append", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.Normalize"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithIndex.__init__"], ["    ", "def", "__init__", "(", "self", ",", "mode", "=", "'train'", ",", "max_class", "=", "1000", ",", "aug", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "initialized", "=", "False", "\n", "\n", "\n", "\n", "prefix", "=", "'/mnt/lustre/share/images/meta'", "\n", "image_folder_prefix", "=", "'/mnt/lustre/share/images'", "\n", "if", "mode", "==", "'train'", ":", "\n", "            ", "image_list", "=", "os", ".", "path", ".", "join", "(", "prefix", ",", "'train.txt'", ")", "\n", "self", ".", "image_folder", "=", "os", ".", "path", ".", "join", "(", "image_folder_prefix", ",", "'train'", ")", "\n", "", "elif", "mode", "==", "'test'", ":", "\n", "            ", "image_list", "=", "os", ".", "path", ".", "join", "(", "prefix", ",", "'test.txt'", ")", "\n", "self", ".", "image_folder", "=", "os", ".", "path", ".", "join", "(", "image_folder_prefix", ",", "'test'", ")", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "image_list", "=", "os", ".", "path", ".", "join", "(", "prefix", ",", "'val.txt'", ")", "\n", "self", ".", "image_folder", "=", "os", ".", "path", ".", "join", "(", "image_folder_prefix", ",", "'val'", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'mode: '", "+", "mode", "+", "' does not exist please select from [train, test, eval]'", ")", "\n", "\n", "", "self", ".", "samples", "=", "[", "]", "\n", "with", "open", "(", "image_list", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "name", ",", "label", "=", "line", ".", "split", "(", ")", "\n", "label", "=", "int", "(", "label", ")", "\n", "if", "label", "<", "max_class", ":", "\n", "                    ", "self", ".", "samples", ".", "append", "(", "(", "label", ",", "name", ")", ")", "\n", "\n", "", "", "", "if", "aug", "is", "None", ":", "\n", "            ", "if", "mode", "==", "'train'", ":", "\n", "                ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "\n", "", "else", ":", "\n", "                ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "aug", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.Imagenet.__init__": [[88, 90], ["imagenet.BaseDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithIndex.__init__"], ["    ", "def", "__init__", "(", "self", ",", "mode", "=", "'train'", ",", "max_class", "=", "1000", ",", "aug", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "mode", ",", "max_class", ",", "aug", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.Imagenet.__len__": [[91, 93], ["imagenet.Imagenet.samples.__len__"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.ImagenetPercentV2.__len__"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "samples", ".", "__len__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.Imagenet.__getitem__": [[94, 99], ["os.path.join", "imagenet.Imagenet.load_image", "imagenet.Imagenet.transform"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.DatasetCache.load_image"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "label", ",", "name", "=", "self", ".", "samples", "[", "index", "]", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_folder", ",", "name", ")", "\n", "img", "=", "self", ".", "load_image", "(", "filename", ")", "\n", "return", "self", ".", "transform", "(", "img", ")", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.ImagenetPercentV2.__init__": [[104, 150], ["imagenet.DatasetCache.__init__", "os.path.join", "os.path.join", "open", "open", "torchvision.Compose", "NotImplementedError", "line.strip", "line.split", "int", "imagenet.ImagenetPercentV2.samples.append", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "line.strip.split"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithIndex.__init__"], ["    ", "def", "__init__", "(", "self", ",", "percent", ",", "labeled", "=", "True", ",", "aug", "=", "None", ",", "return_index", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "return_index", "=", "return_index", "\n", "if", "percent", "==", "0.01", ":", "\n", "            ", "if", "labeled", ":", "\n", "                ", "semi_file", "=", "'semi_files/split_1p_index.txt'", "\n", "", "else", ":", "\n", "                ", "semi_file", "=", "'semi_files/split_99p_index.txt'", "\n", "", "", "elif", "percent", "==", "0.1", ":", "\n", "            ", "if", "labeled", ":", "\n", "                ", "semi_file", "=", "'semi_files/split_10p_index.txt'", "\n", "", "else", ":", "\n", "                ", "semi_file", "=", "'semi_files/split_90p_index.txt'", "\n", "", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'you have to choose from 1 percent or 10 percent'", ")", "\n", "\n", "", "labeled_dict", "=", "{", "}", "\n", "with", "open", "(", "semi_file", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "name", "=", "line", ".", "strip", "(", ")", "\n", "labeled_dict", "[", "name", "]", "=", "1", "\n", "\n", "", "", "prefix", "=", "'/mnt/lustre/share/images/meta'", "\n", "image_folder_prefix", "=", "'/mnt/lustre/share/images'", "\n", "image_list", "=", "os", ".", "path", ".", "join", "(", "prefix", ",", "'train.txt'", ")", "\n", "self", ".", "image_folder", "=", "os", ".", "path", ".", "join", "(", "image_folder_prefix", ",", "'train'", ")", "\n", "\n", "self", ".", "samples", "=", "[", "]", "\n", "with", "open", "(", "image_list", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "name", ",", "label", "=", "line", ".", "split", "(", ")", "\n", "if", "name", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "in", "labeled_dict", ":", "\n", "                    ", "label", "=", "int", "(", "label", ")", "\n", "self", ".", "samples", ".", "append", "(", "(", "label", ",", "name", ")", ")", "\n", "\n", "", "", "", "if", "aug", "is", "None", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ",", "interpolation", "=", "Image", ".", "BICUBIC", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "aug", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.ImagenetPercentV2.__len__": [[151, 153], ["imagenet.ImagenetPercentV2.samples.__len__"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.ImagenetPercentV2.__len__"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "samples", ".", "__len__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.ImagenetPercentV2.__getitem__": [[154, 167], ["os.path.join", "imagenet.ImagenetPercentV2.load_image", "isinstance", "imagenet.ImagenetPercentV2.transform", "t"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.imagenet.DatasetCache.load_image"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "label", ",", "name", "=", "self", ".", "samples", "[", "index", "]", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_folder", ",", "name", ")", "\n", "img", "=", "self", ".", "load_image", "(", "filename", ")", "\n", "\n", "if", "isinstance", "(", "self", ".", "transform", ",", "list", ")", ":", "\n", "            ", "transformed_image", "=", "[", "t", "(", "img", ")", "for", "t", "in", "self", ".", "transform", "]", "\n", "", "else", ":", "\n", "            ", "transformed_image", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "return_index", ":", "\n", "            ", "return", "transformed_image", ",", "label", ",", "index", "\n", "", "return", "transformed_image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.GaussianBlur.__init__": [[144, 146], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "sigma", "=", "[", ".1", ",", "2.", "]", ")", ":", "\n", "        ", "self", ".", "sigma", "=", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.GaussianBlur.__call__": [[147, 151], ["random.uniform", "x.filter.filter.filter", "PIL.ImageFilter.GaussianBlur", "PIL.ImageFilter.GaussianBlur", "PIL.ImageFilter.GaussianBlur", "PIL.ImageFilter.GaussianBlur"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "sigma", "=", "random", ".", "uniform", "(", "self", ".", "sigma", "[", "0", "]", ",", "self", ".", "sigma", "[", "1", "]", ")", "\n", "x", "=", "x", ".", "filter", "(", "ImageFilter", ".", "GaussianBlur", "(", "radius", "=", "sigma", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.NoOpTransform.__init__": [[158, 160], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithIndex.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.NoOpTransform.__call__": [[161, 170], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            tensor (Tensor): Tensor image of size (C, H, W) to be normalized.\n\n        Returns:\n            Tensor: Original Tensor image.\n        \"\"\"", "\n", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.NoOpTransform.__repr__": [[171, 173], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'()'", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.RandAugmentPC.__init__": [[245, 251], ["randaugment.my_augment_pool"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.my_augment_pool"], ["    ", "def", "__init__", "(", "self", ",", "n", ",", "m", ")", ":", "\n", "        ", "assert", "n", ">=", "1", "\n", "assert", "1", "<=", "m", "<=", "10", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "m", "=", "m", "\n", "self", ".", "augment_pool", "=", "my_augment_pool", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.RandAugmentPC.__call__": [[252, 260], ["random.choices", "randaugment.CutoutAbs", "numpy.random.uniform", "op", "random.random"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.CutoutAbs"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "ops", "=", "random", ".", "choices", "(", "self", ".", "augment_pool", ",", "k", "=", "self", ".", "n", ")", "\n", "for", "op", ",", "max_v", ",", "bias", "in", "ops", ":", "\n", "            ", "prob", "=", "np", ".", "random", ".", "uniform", "(", "0.2", ",", "0.8", ")", "\n", "if", "random", ".", "random", "(", ")", "+", "prob", ">=", "1", ":", "\n", "                ", "img", "=", "op", "(", "img", ",", "v", "=", "self", ".", "m", ",", "max_v", "=", "max_v", ",", "bias", "=", "bias", ")", "\n", "", "", "img", "=", "CutoutAbs", "(", "img", ",", "16", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.RandAugmentMC.__init__": [[263, 269], ["randaugment.fixmatch_augment_pool"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.fixmatch_augment_pool"], ["    ", "def", "__init__", "(", "self", ",", "n", ",", "m", ")", ":", "\n", "        ", "assert", "n", ">=", "1", "\n", "assert", "1", "<=", "m", "<=", "10", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "m", "=", "m", "\n", "self", ".", "augment_pool", "=", "fixmatch_augment_pool", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.RandAugmentMC.__call__": [[270, 278], ["random.choices", "randaugment.CutoutAbs", "numpy.random.randint", "random.random", "op"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.CutoutAbs"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "ops", "=", "random", ".", "choices", "(", "self", ".", "augment_pool", ",", "k", "=", "self", ".", "n", ")", "\n", "for", "op", ",", "max_v", ",", "bias", "in", "ops", ":", "\n", "            ", "v", "=", "np", ".", "random", ".", "randint", "(", "1", ",", "self", ".", "m", ")", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "                ", "img", "=", "op", "(", "img", ",", "v", "=", "v", ",", "max_v", "=", "max_v", ",", "bias", "=", "bias", ")", "\n", "", "", "img", "=", "CutoutAbs", "(", "img", ",", "16", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.RandAugment.__init__": [[281, 290], ["randaugment.imagenet_augment_pool"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.imagenet_augment_pool"], ["    ", "def", "__init__", "(", "self", ",", "n", ",", "m", ",", "prob", "=", "None", ")", ":", "\n", "        ", "assert", "n", ">=", "1", "\n", "assert", "1", "<=", "m", "<=", "10", "\n", "if", "prob", "is", "not", "None", ":", "\n", "            ", "assert", "0.", "<=", "prob", "<=", "1.", "\n", "", "self", ".", "n", "=", "n", "\n", "self", ".", "m", "=", "m", "\n", "self", ".", "prob", "=", "prob", "\n", "self", ".", "augment_pool", "=", "imagenet_augment_pool", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.RandAugment.__call__": [[291, 301], ["random.choices", "numpy.random.randint", "op", "random.random", "op"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "ops", "=", "random", ".", "choices", "(", "self", ".", "augment_pool", ",", "k", "=", "self", ".", "n", ")", "\n", "for", "op", ",", "max_v", ",", "bias", "in", "ops", ":", "\n", "            ", "v", "=", "np", ".", "random", ".", "randint", "(", "1", ",", "self", ".", "m", ")", "\n", "if", "self", ".", "prob", "is", "not", "None", ":", "\n", "                ", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob", ":", "\n", "                    ", "img", "=", "op", "(", "img", ",", "v", "=", "v", ",", "max_v", "=", "max_v", ",", "bias", "=", "bias", ")", "\n", "", "", "else", ":", "\n", "                ", "img", "=", "op", "(", "img", ",", "v", "=", "v", ",", "max_v", "=", "max_v", ",", "bias", "=", "bias", ")", "\n", "", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.RandAugment.__repr__": [[302, 304], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'(m={0}, n={1}, prob={2})'", ".", "format", "(", "self", ".", "m", ",", "self", ".", "n", ",", "self", ".", "prob", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.AutoContrast": [[22, 24], ["PIL.ImageOps.autocontrast", "PIL.ImageOps.autocontrast", "PIL.ImageOps.autocontrast", "PIL.ImageOps.autocontrast"], "function", ["None"], ["def", "AutoContrast", "(", "img", ",", "**", "kwarg", ")", ":", "\n", "    ", "return", "PIL", ".", "ImageOps", ".", "autocontrast", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Brightness": [[26, 29], ["PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Brightness().enhance", "randaugment._float_parameter", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Brightness"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._float_parameter", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Brightness", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Brightness", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Brightness", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Brightness"], ["", "def", "Brightness", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageEnhance", ".", "Brightness", "(", "img", ")", ".", "enhance", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Color": [[31, 34], ["PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Color().enhance", "randaugment._float_parameter", "PIL.ImageEnhance.Color", "PIL.ImageEnhance.Color", "PIL.ImageEnhance.Color", "PIL.ImageEnhance.Color"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._float_parameter", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Color", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Color", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Color", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Color"], ["", "def", "Color", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageEnhance", ".", "Color", "(", "img", ")", ".", "enhance", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Contrast": [[36, 39], ["PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Contrast().enhance", "randaugment._float_parameter", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Contrast"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._float_parameter", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Contrast", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Contrast", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Contrast", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Contrast"], ["", "def", "Contrast", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageEnhance", ".", "Contrast", "(", "img", ")", ".", "enhance", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Cutout": [[41, 47], ["int", "randaugment.CutoutAbs", "randaugment._float_parameter", "min"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.CutoutAbs", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._float_parameter"], ["", "def", "Cutout", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "if", "v", "==", "0", ":", "\n", "        ", "return", "img", "\n", "", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "v", "=", "int", "(", "v", "*", "min", "(", "img", ".", "size", ")", ")", "\n", "return", "CutoutAbs", "(", "img", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.CutoutAbs": [[49, 63], ["numpy.random.uniform", "numpy.random.uniform", "int", "int", "int", "int", "img.copy.copy", "PIL.ImageDraw.Draw().rectangle", "PIL.ImageDraw.Draw().rectangle", "PIL.ImageDraw.Draw().rectangle", "PIL.ImageDraw.Draw().rectangle", "max", "max", "min", "min", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw"], "function", ["None"], ["", "def", "CutoutAbs", "(", "img", ",", "v", ",", "**", "kwarg", ")", ":", "\n", "    ", "w", ",", "h", "=", "img", ".", "size", "\n", "x0", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "w", ")", "\n", "y0", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "h", ")", "\n", "x0", "=", "int", "(", "max", "(", "0", ",", "x0", "-", "v", "/", "2.", ")", ")", "\n", "y0", "=", "int", "(", "max", "(", "0", ",", "y0", "-", "v", "/", "2.", ")", ")", "\n", "x1", "=", "int", "(", "min", "(", "w", ",", "x0", "+", "v", ")", ")", "\n", "y1", "=", "int", "(", "min", "(", "h", ",", "y0", "+", "v", ")", ")", "\n", "xy", "=", "(", "x0", ",", "y0", ",", "x1", ",", "y1", ")", "\n", "# gray", "\n", "color", "=", "(", "127", ",", "127", ",", "127", ")", "\n", "img", "=", "img", ".", "copy", "(", ")", "\n", "PIL", ".", "ImageDraw", ".", "Draw", "(", "img", ")", ".", "rectangle", "(", "xy", ",", "color", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Equalize": [[65, 67], ["PIL.ImageOps.equalize", "PIL.ImageOps.equalize", "PIL.ImageOps.equalize", "PIL.ImageOps.equalize"], "function", ["None"], ["", "def", "Equalize", "(", "img", ",", "**", "kwarg", ")", ":", "\n", "    ", "return", "PIL", ".", "ImageOps", ".", "equalize", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Identity": [[69, 71], ["None"], "function", ["None"], ["", "def", "Identity", "(", "img", ",", "**", "kwarg", ")", ":", "\n", "    ", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Invert": [[73, 75], ["PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert"], "function", ["None"], ["", "def", "Invert", "(", "img", ",", "**", "kwarg", ")", ":", "\n", "    ", "return", "PIL", ".", "ImageOps", ".", "invert", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Posterize": [[77, 80], ["PIL.ImageOps.posterize", "PIL.ImageOps.posterize", "PIL.ImageOps.posterize", "PIL.ImageOps.posterize", "randaugment._int_parameter"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._int_parameter"], ["", "def", "Posterize", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_int_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageOps", ".", "posterize", "(", "img", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Rotate": [[82, 87], ["img.rotate", "randaugment._int_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._int_parameter"], ["", "def", "Rotate", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_int_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "return", "img", ".", "rotate", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Sharpness": [[89, 92], ["PIL.ImageEnhance.Sharpness().enhance", "PIL.ImageEnhance.Sharpness().enhance", "PIL.ImageEnhance.Sharpness().enhance", "PIL.ImageEnhance.Sharpness().enhance", "randaugment._float_parameter", "PIL.ImageEnhance.Sharpness", "PIL.ImageEnhance.Sharpness", "PIL.ImageEnhance.Sharpness", "PIL.ImageEnhance.Sharpness"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._float_parameter", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Sharpness", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Sharpness", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Sharpness", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Sharpness"], ["", "def", "Sharpness", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageEnhance", ".", "Sharpness", "(", "img", ")", ".", "enhance", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.ShearX": [[94, 99], ["img.transform", "randaugment._float_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._float_parameter"], ["", "def", "ShearX", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "return", "img", ".", "transform", "(", "img", ".", "size", ",", "PIL", ".", "Image", ".", "AFFINE", ",", "(", "1", ",", "v", ",", "0", ",", "0", ",", "1", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.ShearY": [[101, 106], ["img.transform", "randaugment._float_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._float_parameter"], ["", "def", "ShearY", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "return", "img", ".", "transform", "(", "img", ".", "size", ",", "PIL", ".", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "0", ",", "v", ",", "1", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.Solarize": [[108, 111], ["PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "randaugment._int_parameter"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._int_parameter"], ["", "def", "Solarize", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_int_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageOps", ".", "solarize", "(", "img", ",", "256", "-", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.SolarizeAdd": [[113, 123], ["numpy.array().astype", "numpy.clip", "img_np.astype.astype", "PIL.Image.fromarray", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "randaugment._int_parameter", "random.random", "numpy.array"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._int_parameter"], ["", "def", "SolarizeAdd", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ",", "threshold", "=", "128", ")", ":", "\n", "    ", "v", "=", "_int_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "img_np", "=", "np", ".", "array", "(", "img", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "img_np", "=", "img_np", "+", "v", "\n", "img_np", "=", "np", ".", "clip", "(", "img_np", ",", "0", ",", "255", ")", "\n", "img_np", "=", "img_np", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "img_np", ")", "\n", "return", "PIL", ".", "ImageOps", ".", "solarize", "(", "img", ",", "threshold", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.TranslateX": [[125, 131], ["int", "img.transform", "randaugment._float_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._float_parameter"], ["", "def", "TranslateX", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "v", "=", "int", "(", "v", "*", "img", ".", "size", "[", "0", "]", ")", "\n", "return", "img", ".", "transform", "(", "img", ".", "size", ",", "PIL", ".", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "v", ",", "0", ",", "1", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.TranslateY": [[133, 139], ["int", "img.transform", "randaugment._float_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._float_parameter"], ["", "def", "TranslateY", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "v", "=", "int", "(", "v", "*", "img", ".", "size", "[", "1", "]", ")", "\n", "return", "img", ".", "transform", "(", "img", ".", "size", ",", "PIL", ".", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "v", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._float_parameter": [[175, 177], ["float"], "function", ["None"], ["", "", "def", "_float_parameter", "(", "v", ",", "max_v", ")", ":", "\n", "    ", "return", "float", "(", "v", ")", "*", "max_v", "/", "PARAMETER_MAX", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment._int_parameter": [[179, 181], ["int"], "function", ["None"], ["", "def", "_int_parameter", "(", "v", ",", "max_v", ")", ":", "\n", "    ", "return", "int", "(", "v", "*", "max_v", "/", "PARAMETER_MAX", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.fixmatch_augment_pool": [[183, 200], ["None"], "function", ["None"], ["", "def", "fixmatch_augment_pool", "(", ")", ":", "\n", "# FixMatch paper", "\n", "    ", "augs", "=", "[", "(", "AutoContrast", ",", "None", ",", "None", ")", ",", "\n", "(", "Brightness", ",", "0.9", ",", "0.05", ")", ",", "\n", "(", "Color", ",", "0.9", ",", "0.05", ")", ",", "\n", "(", "Contrast", ",", "0.9", ",", "0.05", ")", ",", "\n", "(", "Equalize", ",", "None", ",", "None", ")", ",", "\n", "(", "Identity", ",", "None", ",", "None", ")", ",", "\n", "(", "Posterize", ",", "4", ",", "4", ")", ",", "\n", "(", "Rotate", ",", "30", ",", "0", ")", ",", "\n", "(", "Sharpness", ",", "0.9", ",", "0.05", ")", ",", "\n", "(", "ShearX", ",", "0.3", ",", "0", ")", ",", "\n", "(", "ShearY", ",", "0.3", ",", "0", ")", ",", "\n", "(", "Solarize", ",", "256", ",", "0", ")", ",", "\n", "(", "TranslateX", ",", "0.3", ",", "0", ")", ",", "\n", "(", "TranslateY", ",", "0.3", ",", "0", ")", "]", "\n", "return", "augs", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.my_augment_pool": [[202, 221], ["None"], "function", ["None"], ["", "def", "my_augment_pool", "(", ")", ":", "\n", "# Test", "\n", "    ", "augs", "=", "[", "(", "AutoContrast", ",", "None", ",", "None", ")", ",", "\n", "(", "Brightness", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "Color", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "Contrast", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "Cutout", ",", "0.2", ",", "0", ")", ",", "\n", "(", "Equalize", ",", "None", ",", "None", ")", ",", "\n", "(", "Invert", ",", "None", ",", "None", ")", ",", "\n", "(", "Posterize", ",", "4", ",", "4", ")", ",", "\n", "(", "Rotate", ",", "30", ",", "0", ")", ",", "\n", "(", "Sharpness", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "ShearX", ",", "0.3", ",", "0", ")", ",", "\n", "(", "ShearY", ",", "0.3", ",", "0", ")", ",", "\n", "(", "Solarize", ",", "256", ",", "0", ")", ",", "\n", "(", "SolarizeAdd", ",", "110", ",", "0", ")", ",", "\n", "(", "TranslateX", ",", "0.45", ",", "0", ")", ",", "\n", "(", "TranslateY", ",", "0.45", ",", "0", ")", "]", "\n", "return", "augs", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.randaugment.imagenet_augment_pool": [[223, 242], ["None"], "function", ["None"], ["", "def", "imagenet_augment_pool", "(", ")", ":", "\n", "# op, max_v, bias", "\n", "    ", "augs", "=", "[", "(", "AutoContrast", ",", "None", ",", "None", ")", ",", "\n", "(", "Brightness", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "Color", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "Contrast", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "Equalize", ",", "None", ",", "None", ")", ",", "\n", "(", "Identity", ",", "None", ",", "None", ")", ",", "\n", "(", "Invert", ",", "None", ",", "None", ")", ",", "\n", "(", "Posterize", ",", "4", ",", "4", ")", ",", "\n", "(", "Rotate", ",", "30", ",", "0", ")", ",", "\n", "(", "Sharpness", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "ShearX", ",", "0.3", ",", "0", ")", ",", "\n", "(", "ShearY", ",", "0.3", ",", "0", ")", ",", "\n", "(", "Solarize", ",", "256", ",", "0", ")", ",", "\n", "(", "SolarizeAdd", ",", "110", ",", "0", ")", ",", "\n", "(", "TranslateX", ",", "0.45", ",", "0", ")", ",", "\n", "(", "TranslateY", ",", "0.45", ",", "0", ")", "]", "\n", "return", "augs", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithPercent.__init__": [[24, 34], ["torchvision.datasets.folder.ImageFolder.__init__", "datasets.get_keep_index", "len"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithIndex.__init__", "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.get_keep_index"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "loader", "=", "default_loader", ",", "is_valid_file", "=", "None", ",", "percent", "=", "1.0", ",", "shuffle", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "root", ",", "transform", "=", "transform", ",", "target_transform", "=", "target_transform", ",", "\n", "loader", "=", "loader", ",", "is_valid_file", "=", "is_valid_file", ")", "\n", "assert", "0", "<=", "percent", "<=", "1", "\n", "if", "percent", "<", "1", ":", "\n", "            ", "keep_indexs", "=", "get_keep_index", "(", "self", ".", "targets", ",", "percent", ",", "len", "(", "self", ".", "classes", ")", ",", "shuffle", ")", "\n", "self", ".", "samples", "=", "[", "self", ".", "samples", "[", "i", "]", "for", "i", "in", "keep_indexs", "]", "\n", "self", ".", "targets", "=", "[", "self", ".", "targets", "[", "i", "]", "for", "i", "in", "keep_indexs", "]", "\n", "self", ".", "imgs", "=", "self", ".", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithIndex.__init__": [[38, 46], ["torchvision.datasets.folder.ImageFolder.__init__"], "methods", ["home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.ImageFolderWithIndex.__init__"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "indexs", "=", "None", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "loader", "=", "default_loader", ",", "is_valid_file", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "root", ",", "transform", "=", "transform", ",", "target_transform", "=", "target_transform", ",", "\n", "loader", "=", "loader", ",", "is_valid_file", "=", "is_valid_file", ")", "\n", "if", "indexs", "is", "not", "None", ":", "\n", "            ", "self", ".", "samples", "=", "[", "self", ".", "samples", "[", "i", "]", "for", "i", "in", "indexs", "]", "\n", "self", ".", "targets", "=", "[", "self", ".", "targets", "[", "i", "]", "for", "i", "in", "indexs", "]", "\n", "self", ".", "imgs", "=", "self", ".", "samples", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.kylezheng1997_simmatch.data.datasets.get_keep_index": [[8, 20], ["numpy.array", "range", "len", "min", "keep_indexs.extend", "numpy.where", "max", "numpy.random.shuffle", "round"], "function", ["None"], ["def", "get_keep_index", "(", "labels", ",", "percent", ",", "num_classes", ",", "shuffle", "=", "False", ")", ":", "\n", "    ", "labels", "=", "np", ".", "array", "(", "labels", ")", "\n", "keep_indexs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_classes", ")", ":", "\n", "        ", "idx", "=", "np", ".", "where", "(", "labels", "==", "i", ")", "[", "0", "]", "\n", "num_sample", "=", "len", "(", "idx", ")", "\n", "label_per_class", "=", "min", "(", "max", "(", "1", ",", "round", "(", "percent", "*", "num_sample", ")", ")", ",", "num_sample", ")", "\n", "if", "shuffle", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "idx", ")", "\n", "", "keep_indexs", ".", "extend", "(", "idx", "[", ":", "label_per_class", "]", ")", "\n", "\n", "", "return", "keep_indexs", "\n", "\n"]]}