{"home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.get_counts": [[4, 73], ["cm.ravel", "copy.deepcopy", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "test_df_copy[].sum", "test_df_copy[].sum", "test_df_copy[].sum", "test_df_copy[].sum", "test_df_copy[].sum", "test_df_copy[].sum", "test_df_copy[].sum", "test_df_copy[].sum", "Measure.calculate_average_odds_difference", "Measure.calculate_equal_opportunity_difference", "Measure.calculate_recall", "Measure.calculate_far", "Measure.calculate_precision", "Measure.calculate_accuracy", "Measure.calculate_F1", "Measure.calculate_TPR_difference", "Measure.calculate_FPR_difference", "Measure.calculate_Disparate_Impact", "Measure.calculate_SPD"], "function", ["home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_average_odds_difference", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_equal_opportunity_difference", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_recall", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_far", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_precision", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_accuracy", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_F1", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_TPR_difference", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_FPR_difference", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_Disparate_Impact", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_SPD"], ["def", "get_counts", "(", "y_pred", ",", "cm", ",", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "test_df", ",", "biased_col", ",", "metric", "=", "'aod'", ")", ":", "\n", "    ", "TN", ",", "FP", ",", "FN", ",", "TP", "=", "cm", ".", "ravel", "(", ")", "\n", "\n", "test_df_copy", "=", "copy", ".", "deepcopy", "(", "test_df", ")", "\n", "test_df_copy", "[", "'current_pred_'", "+", "biased_col", "]", "=", "y_pred", "\n", "\n", "test_df_copy", "[", "'TP_'", "+", "biased_col", "+", "\"_1\"", "]", "=", "np", ".", "where", "(", "(", "test_df_copy", "[", "'Probability'", "]", "==", "1", ")", "&", "\n", "(", "test_df_copy", "[", "'current_pred_'", "+", "biased_col", "]", "==", "1", ")", "&", "\n", "(", "test_df_copy", "[", "biased_col", "]", "==", "1", ")", ",", "1", ",", "0", ")", "\n", "\n", "test_df_copy", "[", "'TN_'", "+", "biased_col", "+", "\"_1\"", "]", "=", "np", ".", "where", "(", "(", "test_df_copy", "[", "'Probability'", "]", "==", "0", ")", "&", "\n", "(", "test_df_copy", "[", "'current_pred_'", "+", "biased_col", "]", "==", "0", ")", "&", "\n", "(", "test_df_copy", "[", "biased_col", "]", "==", "1", ")", ",", "1", ",", "0", ")", "\n", "\n", "test_df_copy", "[", "'FN_'", "+", "biased_col", "+", "\"_1\"", "]", "=", "np", ".", "where", "(", "(", "test_df_copy", "[", "'Probability'", "]", "==", "1", ")", "&", "\n", "(", "test_df_copy", "[", "'current_pred_'", "+", "biased_col", "]", "==", "0", ")", "&", "\n", "(", "test_df_copy", "[", "biased_col", "]", "==", "1", ")", ",", "1", ",", "0", ")", "\n", "\n", "test_df_copy", "[", "'FP_'", "+", "biased_col", "+", "\"_1\"", "]", "=", "np", ".", "where", "(", "(", "test_df_copy", "[", "'Probability'", "]", "==", "0", ")", "&", "\n", "(", "test_df_copy", "[", "'current_pred_'", "+", "biased_col", "]", "==", "1", ")", "&", "\n", "(", "test_df_copy", "[", "biased_col", "]", "==", "1", ")", ",", "1", ",", "0", ")", "\n", "\n", "test_df_copy", "[", "'TP_'", "+", "biased_col", "+", "\"_0\"", "]", "=", "np", ".", "where", "(", "(", "test_df_copy", "[", "'Probability'", "]", "==", "1", ")", "&", "\n", "(", "test_df_copy", "[", "'current_pred_'", "+", "biased_col", "]", "==", "1", ")", "&", "\n", "(", "test_df_copy", "[", "biased_col", "]", "==", "0", ")", ",", "1", ",", "0", ")", "\n", "\n", "test_df_copy", "[", "'TN_'", "+", "biased_col", "+", "\"_0\"", "]", "=", "np", ".", "where", "(", "(", "test_df_copy", "[", "'Probability'", "]", "==", "0", ")", "&", "\n", "(", "test_df_copy", "[", "'current_pred_'", "+", "biased_col", "]", "==", "0", ")", "&", "\n", "(", "test_df_copy", "[", "biased_col", "]", "==", "0", ")", ",", "1", ",", "0", ")", "\n", "\n", "test_df_copy", "[", "'FN_'", "+", "biased_col", "+", "\"_0\"", "]", "=", "np", ".", "where", "(", "(", "test_df_copy", "[", "'Probability'", "]", "==", "1", ")", "&", "\n", "(", "test_df_copy", "[", "'current_pred_'", "+", "biased_col", "]", "==", "0", ")", "&", "\n", "(", "test_df_copy", "[", "biased_col", "]", "==", "0", ")", ",", "1", ",", "0", ")", "\n", "\n", "test_df_copy", "[", "'FP_'", "+", "biased_col", "+", "\"_0\"", "]", "=", "np", ".", "where", "(", "(", "test_df_copy", "[", "'Probability'", "]", "==", "0", ")", "&", "\n", "(", "test_df_copy", "[", "'current_pred_'", "+", "biased_col", "]", "==", "1", ")", "&", "\n", "(", "test_df_copy", "[", "biased_col", "]", "==", "0", ")", ",", "1", ",", "0", ")", "\n", "\n", "a", "=", "test_df_copy", "[", "'TP_'", "+", "biased_col", "+", "\"_1\"", "]", ".", "sum", "(", ")", "\n", "b", "=", "test_df_copy", "[", "'TN_'", "+", "biased_col", "+", "\"_1\"", "]", ".", "sum", "(", ")", "\n", "c", "=", "test_df_copy", "[", "'FN_'", "+", "biased_col", "+", "\"_1\"", "]", ".", "sum", "(", ")", "\n", "d", "=", "test_df_copy", "[", "'FP_'", "+", "biased_col", "+", "\"_1\"", "]", ".", "sum", "(", ")", "\n", "e", "=", "test_df_copy", "[", "'TP_'", "+", "biased_col", "+", "\"_0\"", "]", ".", "sum", "(", ")", "\n", "f", "=", "test_df_copy", "[", "'TN_'", "+", "biased_col", "+", "\"_0\"", "]", ".", "sum", "(", ")", "\n", "g", "=", "test_df_copy", "[", "'FN_'", "+", "biased_col", "+", "\"_0\"", "]", ".", "sum", "(", ")", "\n", "h", "=", "test_df_copy", "[", "'FP_'", "+", "biased_col", "+", "\"_0\"", "]", ".", "sum", "(", ")", "\n", "\n", "if", "metric", "==", "'aod'", ":", "\n", "        ", "return", "calculate_average_odds_difference", "(", "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", ")", "\n", "", "elif", "metric", "==", "'eod'", ":", "\n", "        ", "return", "calculate_equal_opportunity_difference", "(", "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", ")", "\n", "", "elif", "metric", "==", "'recall'", ":", "\n", "        ", "return", "calculate_recall", "(", "TP", ",", "FP", ",", "FN", ",", "TN", ")", "\n", "", "elif", "metric", "==", "'far'", ":", "\n", "        ", "return", "calculate_far", "(", "TP", ",", "FP", ",", "FN", ",", "TN", ")", "\n", "", "elif", "metric", "==", "'precision'", ":", "\n", "        ", "return", "calculate_precision", "(", "TP", ",", "FP", ",", "FN", ",", "TN", ")", "\n", "", "elif", "metric", "==", "'accuracy'", ":", "\n", "        ", "return", "calculate_accuracy", "(", "TP", ",", "FP", ",", "FN", ",", "TN", ")", "\n", "", "elif", "metric", "==", "'F1'", ":", "\n", "        ", "return", "calculate_F1", "(", "TP", ",", "FP", ",", "FN", ",", "TN", ")", "\n", "", "elif", "metric", "==", "'TPR'", ":", "\n", "        ", "return", "calculate_TPR_difference", "(", "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", ")", "\n", "", "elif", "metric", "==", "'FPR'", ":", "\n", "        ", "return", "calculate_FPR_difference", "(", "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", ")", "\n", "", "elif", "metric", "==", "\"DI\"", ":", "\n", "        ", "return", "calculate_Disparate_Impact", "(", "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", ")", "\n", "", "elif", "metric", "==", "\"SPD\"", ":", "\n", "        ", "return", "calculate_SPD", "(", "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_average_odds_difference": [[75, 80], ["Measure.calculate_FPR_difference", "Measure.calculate_TPR_difference", "round"], "function", ["home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_FPR_difference", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_TPR_difference"], ["", "", "def", "calculate_average_odds_difference", "(", "TP_male", ",", "TN_male", ",", "FN_male", ",", "FP_male", ",", "TP_female", ",", "TN_female", ",", "FN_female", ",", "FP_female", ")", ":", "\n", "    ", "FPR_diff", "=", "calculate_FPR_difference", "(", "TP_male", ",", "TN_male", ",", "FN_male", ",", "FP_male", ",", "TP_female", ",", "TN_female", ",", "FN_female", ",", "FP_female", ")", "\n", "TPR_diff", "=", "calculate_TPR_difference", "(", "TP_male", ",", "TN_male", ",", "FN_male", ",", "FP_male", ",", "TP_female", ",", "TN_female", ",", "FN_female", ",", "FP_female", ")", "\n", "average_odds_difference", "=", "(", "FPR_diff", "+", "TPR_diff", ")", "/", "2", "\n", "return", "round", "(", "average_odds_difference", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_Disparate_Impact": [[82, 87], ["round", "abs"], "function", ["None"], ["", "def", "calculate_Disparate_Impact", "(", "TP_male", ",", "TN_male", ",", "FN_male", ",", "FP_male", ",", "TP_female", ",", "TN_female", ",", "FN_female", ",", "FP_female", ")", ":", "\n", "    ", "P_male", "=", "(", "TP_male", "+", "FP_male", ")", "/", "(", "TP_male", "+", "TN_male", "+", "FN_male", "+", "FP_male", ")", "\n", "P_female", "=", "(", "TP_female", "+", "FP_female", ")", "/", "(", "TP_female", "+", "TN_female", "+", "FN_female", "+", "FP_female", ")", "\n", "DI", "=", "(", "P_female", "/", "P_male", ")", "\n", "return", "round", "(", "(", "abs", "(", "1", "-", "DI", ")", ")", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_SPD": [[89, 94], ["round", "abs"], "function", ["None"], ["", "def", "calculate_SPD", "(", "TP_male", ",", "TN_male", ",", "FN_male", ",", "FP_male", ",", "TP_female", ",", "TN_female", ",", "FN_female", ",", "FP_female", ")", ":", "\n", "    ", "P_male", "=", "(", "TP_male", "+", "FP_male", ")", "/", "(", "TP_male", "+", "TN_male", "+", "FN_male", "+", "FP_male", ")", "\n", "P_female", "=", "(", "TP_female", "+", "FP_female", ")", "/", "(", "TP_female", "+", "TN_female", "+", "FN_female", "+", "FP_female", ")", "\n", "SPD", "=", "(", "P_female", "-", "P_male", ")", "\n", "return", "round", "(", "abs", "(", "SPD", ")", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_equal_opportunity_difference": [[96, 100], ["Measure.calculate_TPR_difference"], "function", ["home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_TPR_difference"], ["", "def", "calculate_equal_opportunity_difference", "(", "TP_male", ",", "TN_male", ",", "FN_male", ",", "FP_male", ",", "TP_female", ",", "TN_female", ",", "FN_female", ",", "\n", "FP_female", ")", ":", "\n", "\n", "    ", "return", "calculate_TPR_difference", "(", "TP_male", ",", "TN_male", ",", "FN_male", ",", "FP_male", ",", "TP_female", ",", "TN_female", ",", "FN_female", ",", "FP_female", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_TPR_difference": [[102, 107], ["round"], "function", ["None"], ["", "def", "calculate_TPR_difference", "(", "TP_male", ",", "TN_male", ",", "FN_male", ",", "FP_male", ",", "TP_female", ",", "TN_female", ",", "FN_female", ",", "FP_female", ")", ":", "\n", "    ", "TPR_male", "=", "TP_male", "/", "(", "TP_male", "+", "FN_male", "+", "0.00000001", ")", "\n", "TPR_female", "=", "TP_female", "/", "(", "TP_female", "+", "FN_female", "+", "0.00000001", ")", "\n", "diff", "=", "(", "TPR_male", "-", "TPR_female", ")", "\n", "return", "round", "(", "diff", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_FPR_difference": [[109, 114], ["round"], "function", ["None"], ["", "def", "calculate_FPR_difference", "(", "TP_male", ",", "TN_male", ",", "FN_male", ",", "FP_male", ",", "TP_female", ",", "TN_female", ",", "FN_female", ",", "FP_female", ")", ":", "\n", "    ", "FPR_male", "=", "FP_male", "/", "(", "FP_male", "+", "TN_male", "+", "0.00000001", ")", "\n", "FPR_female", "=", "FP_female", "/", "(", "FP_female", "+", "TN_female", "+", "0.00000001", ")", "\n", "diff", "=", "(", "FPR_female", "-", "FPR_male", ")", "\n", "return", "round", "(", "diff", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_recall": [[116, 122], ["round"], "function", ["None"], ["", "def", "calculate_recall", "(", "TP", ",", "FP", ",", "FN", ",", "TN", ")", ":", "\n", "    ", "if", "(", "TP", "+", "FN", ")", "!=", "0", ":", "\n", "        ", "recall", "=", "TP", "/", "(", "TP", "+", "FN", ")", "\n", "", "else", ":", "\n", "        ", "recall", "=", "0", "\n", "", "return", "round", "(", "recall", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_far": [[124, 130], ["round"], "function", ["None"], ["", "def", "calculate_far", "(", "TP", ",", "FP", ",", "FN", ",", "TN", ")", ":", "\n", "    ", "if", "(", "FP", "+", "TN", ")", "!=", "0", ":", "\n", "        ", "far", "=", "FP", "/", "(", "FP", "+", "TN", ")", "\n", "", "else", ":", "\n", "        ", "far", "=", "0", "\n", "", "return", "round", "(", "far", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_precision": [[132, 138], ["round"], "function", ["None"], ["", "def", "calculate_precision", "(", "TP", ",", "FP", ",", "FN", ",", "TN", ")", ":", "\n", "    ", "if", "(", "TP", "+", "FP", ")", "!=", "0", ":", "\n", "        ", "prec", "=", "TP", "/", "(", "TP", "+", "FP", ")", "\n", "", "else", ":", "\n", "        ", "prec", "=", "0", "\n", "", "return", "round", "(", "prec", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_F1": [[140, 145], ["Measure.calculate_precision", "Measure.calculate_recall", "round"], "function", ["home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_precision", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_recall"], ["", "def", "calculate_F1", "(", "TP", ",", "FP", ",", "FN", ",", "TN", ")", ":", "\n", "    ", "precision", "=", "calculate_precision", "(", "TP", ",", "FP", ",", "FN", ",", "TN", ")", "\n", "recall", "=", "calculate_recall", "(", "TP", ",", "FP", ",", "FN", ",", "TN", ")", "\n", "F1", "=", "(", "2", "*", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", ")", "\n", "return", "round", "(", "F1", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_accuracy": [[147, 149], ["round"], "function", ["None"], ["", "def", "calculate_accuracy", "(", "TP", ",", "FP", ",", "FN", ",", "TN", ")", ":", "\n", "    ", "return", "round", "(", "(", "TP", "+", "TN", ")", "/", "(", "TP", "+", "TN", "+", "FP", "+", "FN", ")", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score": [[151, 154], ["copy.deepcopy", "Measure.get_counts"], "function", ["home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.get_counts"], ["", "def", "measure_final_score", "(", "test_df", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "biased_col", ",", "metric", ")", ":", "\n", "    ", "df1", "=", "copy", ".", "deepcopy", "(", "test_df", ")", "\n", "return", "get_counts", "(", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "df1", ",", "biased_col", ",", "metric", "=", "metric", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.flip": [[155, 159], ["X_test.copy", "numpy.where"], "function", ["None"], ["", "def", "flip", "(", "X_test", ",", "keyword", ")", ":", "\n", "    ", "X_flip", "=", "X_test", ".", "copy", "(", ")", "\n", "X_flip", "[", "keyword", "]", "=", "np", ".", "where", "(", "X_flip", "[", "keyword", "]", "==", "1", ",", "0", ",", "1", ")", "\n", "return", "X_flip", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_flip": [[160, 167], ["Measure.flip", "numpy.array", "numpy.array", "numpy.count_nonzero", "clf.predict", "clf.predict"], "function", ["home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.FairSMOTE.flip"], ["", "def", "calculate_flip", "(", "clf", ",", "X_test", ",", "keyword", ")", ":", "\n", "    ", "X_flip", "=", "flip", "(", "X_test", ",", "keyword", ")", "\n", "a", "=", "np", ".", "array", "(", "clf", ".", "predict", "(", "X_test", ")", ")", "\n", "b", "=", "np", ".", "array", "(", "clf", ".", "predict", "(", "X_flip", ")", ")", "\n", "total", "=", "X_test", ".", "shape", "[", "0", "]", "\n", "same", "=", "np", ".", "count_nonzero", "(", "a", "==", "b", ")", "\n", "return", "(", "total", "-", "same", ")", "/", "total", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_flip_proba": [[169, 181], ["Measure.flip", "numpy.array", "numpy.array", "range", "clf.predict_proba", "clf.predict_proba"], "function", ["home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.FairSMOTE.flip"], ["", "def", "calculate_flip_proba", "(", "clf", ",", "X_test", ",", "keyword", ",", "threshold", ")", ":", "\n", "    ", "X_flip", "=", "flip", "(", "X_test", ",", "keyword", ")", "\n", "a", "=", "np", ".", "array", "(", "clf", ".", "predict_proba", "(", "X_test", ")", "[", ":", ",", "0", "]", ")", "\n", "b", "=", "np", ".", "array", "(", "clf", ".", "predict_proba", "(", "X_flip", ")", "[", ":", ",", "0", "]", ")", "\n", "total", "=", "X_test", ".", "shape", "[", "0", "]", "\n", "same", "=", "0", "\n", "for", "i", "in", "range", "(", "total", ")", ":", "\n", "        ", "if", "a", "[", "i", "]", ">", "threshold", "and", "b", "[", "i", "]", ">", "threshold", ":", "\n", "            ", "same", "+=", "1", "\n", "", "elif", "a", "[", "i", "]", "<", "threshold", "and", "b", "[", "i", "]", "<", "threshold", ":", "\n", "            ", "same", "+=", "1", "\n", "", "", "return", "(", "total", "-", "same", ")", "/", "total", "", "", ""]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.FairSMOTE.reg2clf": [[19, 26], ["out.append", "out.append"], "function", ["None"], ["def", "reg2clf", "(", "protected_pred", ",", "threshold", "=", ".5", ")", ":", "\n", "    ", "out", "=", "[", "]", "\n", "for", "each", "in", "protected_pred", ":", "\n", "        ", "if", "each", ">=", "threshold", ":", "\n", "            ", "out", ".", "append", "(", "1", ")", "\n", "", "else", ":", "out", ".", "append", "(", "0", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.FairSMOTE.flip": [[27, 31], ["X_test.copy", "numpy.where"], "function", ["None"], ["", "def", "flip", "(", "X_test", ",", "keyword", ")", ":", "\n", "    ", "X_flip", "=", "X_test", ".", "copy", "(", ")", "\n", "X_flip", "[", "keyword", "]", "=", "np", ".", "where", "(", "X_flip", "[", "keyword", "]", "==", "1", ",", "0", ",", "1", ")", "\n", "return", "X_flip", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.FairSMOTE.calculate_flip": [[32, 39], ["FairSMOTE.flip", "numpy.array", "numpy.array", "numpy.count_nonzero", "clf.predict", "clf.predict"], "function", ["home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.FairSMOTE.flip"], ["", "def", "calculate_flip", "(", "clf", ",", "X_test", ",", "keyword", ")", ":", "\n", "    ", "X_flip", "=", "flip", "(", "X_test", ",", "keyword", ")", "\n", "a", "=", "np", ".", "array", "(", "clf", ".", "predict", "(", "X_test", ")", ")", "\n", "b", "=", "np", ".", "array", "(", "clf", ".", "predict", "(", "X_flip", ")", ")", "\n", "total", "=", "X_test", ".", "shape", "[", "0", "]", "\n", "same", "=", "np", ".", "count_nonzero", "(", "a", "==", "b", ")", "\n", "return", "(", "total", "-", "same", ")", "/", "total", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.FairSMOTE.situation": [[41, 54], ["X_train.copy", "numpy.where", "numpy.array", "numpy.array", "X_rest.drop.drop", "clf.predict", "clf.predict"], "function", ["None"], ["", "def", "situation", "(", "clf", ",", "X_train", ",", "y_train", ",", "keyword", ")", ":", "\n", "    ", "X_flip", "=", "X_train", ".", "copy", "(", ")", "\n", "X_flip", "[", "keyword", "]", "=", "np", ".", "where", "(", "X_flip", "[", "keyword", "]", "==", "1", ",", "0", ",", "1", ")", "\n", "a", "=", "np", ".", "array", "(", "clf", ".", "predict", "(", "X_train", ")", ")", "\n", "b", "=", "np", ".", "array", "(", "clf", ".", "predict", "(", "X_flip", ")", ")", "\n", "same", "=", "(", "a", "==", "b", ")", "\n", "same", "=", "[", "1", "if", "each", "else", "0", "for", "each", "in", "same", "]", "\n", "X_train", "[", "'same'", "]", "=", "same", "\n", "X_train", "[", "'y'", "]", "=", "y_train", "\n", "X_rest", "=", "X_train", "[", "X_train", "[", "'same'", "]", "==", "1", "]", "\n", "y_rest", "=", "X_rest", "[", "'y'", "]", "\n", "X_rest", "=", "X_rest", ".", "drop", "(", "columns", "=", "[", "'same'", ",", "'y'", "]", ")", "\n", "return", "X_rest", ",", "y_rest", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.FairSMOTE.Fair_Smote": [[56, 151], ["pd.concat.dropna", "sklearn.preprocessing.MinMaxScaler", "pandas.DataFrame", "range", "sklearn.preprocessing.MinMaxScaler.fit_transform", "time.time", "sklearn.model_selection.train_test_split", "len", "len", "len", "len", "max", "df_zero_zero_zero[].astype", "df_zero_one_zero[].astype", "df_one_zero_zero[].astype", "df_one_one_zero[].astype", "print", "Generate_Samples.generate_samples", "Generate_Samples.generate_samples", "Generate_Samples.generate_samples", "Generate_Samples.generate_samples", "pandas.concat", "clf2.fit", "print", "FairSMOTE.situation", "clf.fit", "clf.predict", "sklearn.metrics.confusion_matrix", "FairSMOTE.calculate_flip", "fr.append", "print", "acc.append", "pre.append", "recall.append", "f1.append", "aod1.append", "eod1.append", "spd1.append", "di1.append", "print", "sklearn.metrics.accuracy_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "sklearn.metrics.f1_score", "Measure.measure_final_score", "Measure.measure_final_score", "Measure.measure_final_score", "Measure.measure_final_score", "time.time"], "function", ["home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.Generate_Samples.generate_samples", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.Generate_Samples.generate_samples", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.Generate_Samples.generate_samples", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.Generate_Samples.generate_samples", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.FairSMOTE.situation", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.FairSMOTE.calculate_flip", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score"], ["", "def", "Fair_Smote", "(", "df", ",", "base_clf", ",", "keyword", ",", "rep", "=", "10", ")", ":", "\n", "    ", "dataset_orig", "=", "df", ".", "dropna", "(", ")", "\n", "scaler", "=", "MinMaxScaler", "(", ")", "\n", "dataset_orig", "=", "pd", ".", "DataFrame", "(", "scaler", ".", "fit_transform", "(", "dataset_orig", ")", ",", "columns", "=", "dataset_orig", ".", "columns", ")", "\n", "\n", "acc", ",", "pre", ",", "recall", ",", "f1", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "aod1", ",", "eod1", ",", "spd1", ",", "di1", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "fr", "=", "[", "]", "\n", "protected_attribute1", "=", "keyword", "\n", "\n", "for", "i", "in", "range", "(", "rep", ")", ":", "\n", "        ", "start", "=", "time", ".", "time", "(", ")", "\n", "dataset_orig_train", ",", "dataset_orig_test", "=", "train_test_split", "(", "dataset_orig", ",", "test_size", "=", "0.2", ",", "random_state", "=", "i", ")", "\n", "X_train", ",", "y_train", "=", "dataset_orig_train", ".", "loc", "[", ":", ",", "dataset_orig_train", ".", "columns", "!=", "'Probability'", "]", ",", "dataset_orig_train", "[", "\n", "'Probability'", "]", "\n", "X_test", ",", "y_test", "=", "dataset_orig_test", ".", "loc", "[", ":", ",", "dataset_orig_test", ".", "columns", "!=", "'Probability'", "]", ",", "dataset_orig_test", "[", "\n", "'Probability'", "]", "\n", "\n", "zero_zero_zero", "=", "len", "(", "dataset_orig_train", "[", "(", "dataset_orig_train", "[", "'Probability'", "]", "==", "0", ")", "&", "(", "\n", "dataset_orig_train", "[", "protected_attribute1", "]", "==", "0", ")", "]", ")", "\n", "\n", "zero_one_zero", "=", "len", "(", "dataset_orig_train", "[", "(", "dataset_orig_train", "[", "'Probability'", "]", "==", "0", ")", "&", "(", "\n", "dataset_orig_train", "[", "protected_attribute1", "]", "==", "1", ")", "]", ")", "\n", "\n", "one_zero_zero", "=", "len", "(", "dataset_orig_train", "[", "(", "dataset_orig_train", "[", "'Probability'", "]", "==", "1", ")", "&", "(", "\n", "dataset_orig_train", "[", "protected_attribute1", "]", "==", "0", ")", "]", ")", "\n", "\n", "one_one_zero", "=", "len", "(", "dataset_orig_train", "[", "(", "dataset_orig_train", "[", "'Probability'", "]", "==", "1", ")", "&", "(", "\n", "dataset_orig_train", "[", "protected_attribute1", "]", "==", "1", ")", "]", ")", "\n", "\n", "maximum", "=", "max", "(", "zero_zero_zero", ",", "zero_one_zero", ",", "one_zero_zero", ",", "one_one_zero", ")", "\n", "zero_zero_zero_to_be_incresed", "=", "maximum", "-", "zero_zero_zero", "\n", "zero_one_zero_to_be_incresed", "=", "maximum", "-", "zero_one_zero", "\n", "one_zero_zero_to_be_incresed", "=", "maximum", "-", "one_zero_zero", "\n", "one_one_zero_to_be_incresed", "=", "maximum", "-", "one_one_zero", "\n", "df_zero_zero_zero", "=", "dataset_orig_train", "[", "\n", "(", "dataset_orig_train", "[", "'Probability'", "]", "==", "0", ")", "&", "(", "dataset_orig_train", "[", "protected_attribute1", "]", "==", "0", ")", "]", "\n", "\n", "df_zero_one_zero", "=", "dataset_orig_train", "[", "\n", "(", "dataset_orig_train", "[", "'Probability'", "]", "==", "0", ")", "&", "(", "dataset_orig_train", "[", "protected_attribute1", "]", "==", "1", ")", "]", "\n", "\n", "df_one_zero_zero", "=", "dataset_orig_train", "[", "\n", "(", "dataset_orig_train", "[", "'Probability'", "]", "==", "1", ")", "&", "(", "dataset_orig_train", "[", "protected_attribute1", "]", "==", "0", ")", "]", "\n", "\n", "df_one_one_zero", "=", "dataset_orig_train", "[", "\n", "(", "dataset_orig_train", "[", "'Probability'", "]", "==", "1", ")", "&", "(", "dataset_orig_train", "[", "protected_attribute1", "]", "==", "1", ")", "]", "\n", "\n", "df_zero_zero_zero", "[", "protected_attribute1", "]", "=", "df_zero_zero_zero", "[", "protected_attribute1", "]", ".", "astype", "(", "str", ")", "\n", "df_zero_one_zero", "[", "protected_attribute1", "]", "=", "df_zero_one_zero", "[", "protected_attribute1", "]", ".", "astype", "(", "str", ")", "\n", "df_one_zero_zero", "[", "protected_attribute1", "]", "=", "df_one_zero_zero", "[", "protected_attribute1", "]", ".", "astype", "(", "str", ")", "\n", "df_one_one_zero", "[", "protected_attribute1", "]", "=", "df_one_one_zero", "[", "protected_attribute1", "]", ".", "astype", "(", "str", ")", "\n", "\n", "print", "(", "\"Start generating samples...\"", ")", "\n", "df_zero_zero_zero", "=", "generate_samples", "(", "zero_zero_zero_to_be_incresed", ",", "df_zero_zero_zero", ",", "''", ")", "\n", "df_zero_one_zero", "=", "generate_samples", "(", "zero_one_zero_to_be_incresed", ",", "df_zero_one_zero", ",", "''", ")", "\n", "df_one_zero_zero", "=", "generate_samples", "(", "one_zero_zero_to_be_incresed", ",", "df_one_zero_zero", ",", "''", ")", "\n", "df_one_one_zero", "=", "generate_samples", "(", "one_one_zero_to_be_incresed", ",", "df_one_one_zero", ",", "''", ")", "\n", "df", "=", "pd", ".", "concat", "(", "[", "df_zero_zero_zero", ",", "df_zero_one_zero", ",", "\n", "df_one_zero_zero", ",", "df_one_one_zero", "]", ")", "\n", "\n", "df", ".", "columns", "=", "dataset_orig", ".", "columns", "\n", "clf2", "=", "base_clf", "\n", "clf2", ".", "fit", "(", "X_train", ",", "y_train", ")", "\n", "X_train", ",", "y_train", "=", "df", ".", "loc", "[", ":", ",", "df", ".", "columns", "!=", "'Probability'", "]", ",", "df", "[", "'Probability'", "]", "\n", "print", "(", "\"Situational testing...\"", ")", "\n", "X_train", ",", "y_train", "=", "situation", "(", "clf2", ",", "X_train", ",", "y_train", ",", "protected_attribute1", ")", "\n", "X_test", ",", "y_test", "=", "dataset_orig_test", ".", "loc", "[", ":", ",", "dataset_orig_test", ".", "columns", "!=", "'Probability'", "]", ",", "dataset_orig_test", "[", "\n", "'Probability'", "]", "\n", "\n", "clf", "=", "base_clf", "\n", "clf", ".", "fit", "(", "X_train", ",", "y_train", ")", "\n", "y_pred", "=", "clf", ".", "predict", "(", "X_test", ")", "\n", "cm", "=", "confusion_matrix", "(", "y_test", ",", "y_pred", ")", "\n", "\n", "keyword", "=", "protected_attribute1", "\n", "flip_rate", "=", "calculate_flip", "(", "clf", ",", "X_test", ",", "keyword", ")", "\n", "# print(\"FLIP rate1:\", flip_rate)", "\n", "# print(\"# of flips1:\", flip_rate * X_test.shape[0])", "\n", "fr", ".", "append", "(", "flip_rate", ")", "\n", "print", "(", "\"Round\"", ",", "(", "i", "+", "1", ")", ",", "\"finished.\"", ")", "\n", "acc", ".", "append", "(", "accuracy_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "pre", ".", "append", "(", "precision_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "recall", ".", "append", "(", "recall_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "f1", ".", "append", "(", "f1_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "keyword", "=", "protected_attribute1", "\n", "aod1", ".", "append", "(", "\n", "measure_final_score", "(", "dataset_orig_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'aod'", ")", ")", "\n", "eod1", ".", "append", "(", "\n", "measure_final_score", "(", "dataset_orig_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'eod'", ")", ")", "\n", "spd1", ".", "append", "(", "\n", "measure_final_score", "(", "dataset_orig_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'SPD'", ")", ")", "\n", "di1", ".", "append", "(", "measure_final_score", "(", "dataset_orig_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'DI'", ")", ")", "\n", "print", "(", "'Time'", ",", "time", ".", "time", "(", ")", "-", "start", ")", "\n", "", "res1", "=", "[", "acc", ",", "pre", ",", "recall", ",", "f1", ",", "aod1", ",", "eod1", ",", "spd1", ",", "di1", ",", "fr", "]", "\n", "return", "res1", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.Reweighing.reweigh": [[21, 136], ["sklearn.preprocessing.MinMaxScaler", "aif360.algorithms.preprocessing.reweighing.Reweighing", "range", "time.time", "aif360.datasets.BinaryLabelDataset", "aif360.datasets.BinaryLabelDataset.split", "dataset_orig_vt.split", "aif360.algorithms.preprocessing.reweighing.Reweighing.fit", "aif360.algorithms.preprocessing.reweighing.Reweighing.transform", "sklearn.preprocessing.MinMaxScaler.fit_transform", "dataset_orig_train.labels.ravel", "dataset_orig_train.instance_weights.ravel", "copy.deepcopy", "copy.deepcopy.fit", "copy.deepcopy.predict", "dataset_orig_train.copy", "dataset_orig_valid.copy", "sklearn.preprocessing.MinMaxScaler.transform", "[].reshape", "dataset_orig_test.copy", "sklearn.preprocessing.MinMaxScaler.transform", "[].reshape", "numpy.zeros", "numpy.linspace", "enumerate", "sklearn.preprocessing.MinMaxScaler.fit_transform", "RW.transform.labels.ravel", "RW.transform.instance_weights.ravel", "copy.deepcopy", "copy.deepcopy.fit", "copy.deepcopy.predict", "dataset_orig_test.copy", "sklearn.preprocessing.MinMaxScaler.fit_transform", "[].reshape", "sklearn.metrics.confusion_matrix", "acc.append", "pre.append", "recall.append", "f1.append", "aod.append", "eod.append", "spd.append", "di.append", "calculate_flip_proba", "fr.append", "print", "aif360.metrics.ClassificationMetric", "dataset_orig_test.convert_to_dataframe", "dataset_orig_test.copy.convert_to_dataframe", "dataset_orig_train.convert_to_dataframe", "sklearn.metrics.accuracy_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "sklearn.metrics.f1_score", "measure_final_score", "measure_final_score", "measure_final_score", "measure_final_score", "numpy.where", "numpy.where", "copy.deepcopy.predict_proba", "copy.deepcopy.predict_proba", "aif360.metrics.ClassificationMetric.true_positive_rate", "aif360.metrics.ClassificationMetric.true_negative_rate", "copy.deepcopy.predict_proba", "numpy.max"], "function", ["home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.calculate_flip_proba", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score"], ["def", "reweigh", "(", "base", ",", "df", ",", "keyword", "=", "\"sex\"", ",", "rep", "=", "10", ")", ":", "\n", "    ", "sc", "=", "MinMaxScaler", "(", ")", "\n", "privileged_groups", "=", "[", "{", "keyword", ":", "1", "}", "]", "\n", "unprivileged_groups", "=", "[", "{", "keyword", ":", "0", "}", "]", "\n", "RW", "=", "Reweighing", "(", "unprivileged_groups", "=", "unprivileged_groups", ",", "\n", "privileged_groups", "=", "privileged_groups", ")", "\n", "acc", ",", "pre", ",", "recall", ",", "f1", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "aod", ",", "eod", ",", "spd", ",", "di", ",", "fr", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "rep", ")", ":", "\n", "        ", "start", "=", "time", ".", "time", "(", ")", "\n", "dataset_orig", "=", "BinaryLabelDataset", "(", "df", "=", "df", ",", "label_names", "=", "[", "'Probability'", "]", ",", "protected_attribute_names", "=", "[", "keyword", "]", ")", "\n", "dataset_orig_train", ",", "dataset_orig_vt", "=", "dataset_orig", ".", "split", "(", "0.7", ",", "shuffle", "=", "True", ",", "seed", "=", "i", ")", "\n", "dataset_orig_valid", ",", "dataset_orig_test", "=", "dataset_orig_vt", ".", "split", "(", "[", "0.34", "]", ",", "shuffle", "=", "True", ",", "seed", "=", "i", ")", "\n", "\n", "RW", ".", "fit", "(", "dataset_orig_train", ")", "\n", "dataset_transf_train", "=", "RW", ".", "transform", "(", "dataset_orig_train", ")", "\n", "\n", "# Train on original data", "\n", "X_train", "=", "sc", ".", "fit_transform", "(", "dataset_orig_train", ".", "features", ")", "\n", "y_train", "=", "dataset_orig_train", ".", "labels", ".", "ravel", "(", ")", "\n", "w_train", "=", "dataset_orig_train", ".", "instance_weights", ".", "ravel", "(", ")", "\n", "\n", "lmod", "=", "copy", ".", "deepcopy", "(", "base", ")", "\n", "lmod", ".", "fit", "(", "X_train", ",", "y_train", ",", "\n", "sample_weight", "=", "dataset_orig_train", ".", "instance_weights", ")", "\n", "y_train_pred", "=", "lmod", ".", "predict", "(", "X_train", ")", "\n", "\n", "# positive class index", "\n", "pos_ind", "=", "np", ".", "where", "(", "lmod", ".", "classes_", "==", "dataset_orig_train", ".", "favorable_label", ")", "[", "0", "]", "[", "0", "]", "\n", "\n", "dataset_orig_train_pred", "=", "dataset_orig_train", ".", "copy", "(", ")", "\n", "dataset_orig_train_pred", ".", "labels", "=", "y_train_pred", "\n", "\n", "dataset_orig_valid_pred", "=", "dataset_orig_valid", ".", "copy", "(", "deepcopy", "=", "True", ")", "\n", "X_valid", "=", "sc", ".", "transform", "(", "dataset_orig_valid_pred", ".", "features", ")", "\n", "y_valid", "=", "dataset_orig_valid_pred", ".", "labels", "\n", "dataset_orig_valid_pred", ".", "scores", "=", "lmod", ".", "predict_proba", "(", "X_valid", ")", "[", ":", ",", "pos_ind", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "\n", "dataset_orig_test_pred", "=", "dataset_orig_test", ".", "copy", "(", "deepcopy", "=", "True", ")", "\n", "X_test", "=", "sc", ".", "transform", "(", "dataset_orig_test_pred", ".", "features", ")", "\n", "y_test", "=", "dataset_orig_test_pred", ".", "labels", "\n", "dataset_orig_test_pred", ".", "scores", "=", "lmod", ".", "predict_proba", "(", "X_test", ")", "[", ":", ",", "pos_ind", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "\n", "# find optimal thresh", "\n", "num_thresh", "=", "100", "\n", "ba_arr", "=", "np", ".", "zeros", "(", "num_thresh", ")", "\n", "class_thresh_arr", "=", "np", ".", "linspace", "(", "0.01", ",", "0.99", ",", "num_thresh", ")", "\n", "for", "idx", ",", "class_thresh", "in", "enumerate", "(", "class_thresh_arr", ")", ":", "\n", "            ", "fav_inds", "=", "dataset_orig_valid_pred", ".", "scores", ">", "class_thresh", "\n", "dataset_orig_valid_pred", ".", "labels", "[", "fav_inds", "]", "=", "dataset_orig_valid_pred", ".", "favorable_label", "\n", "dataset_orig_valid_pred", ".", "labels", "[", "~", "fav_inds", "]", "=", "dataset_orig_valid_pred", ".", "unfavorable_label", "\n", "\n", "classified_metric_orig_valid", "=", "ClassificationMetric", "(", "dataset_orig_valid", ",", "\n", "dataset_orig_valid_pred", ",", "\n", "unprivileged_groups", "=", "unprivileged_groups", ",", "\n", "privileged_groups", "=", "privileged_groups", ")", "\n", "\n", "ba_arr", "[", "idx", "]", "=", "0.5", "*", "(", "classified_metric_orig_valid", ".", "true_positive_rate", "(", ")", "+", "classified_metric_orig_valid", ".", "true_negative_rate", "(", ")", ")", "\n", "", "best_ind", "=", "np", ".", "where", "(", "ba_arr", "==", "np", ".", "max", "(", "ba_arr", ")", ")", "[", "0", "]", "[", "0", "]", "\n", "best_class_thresh", "=", "class_thresh_arr", "[", "best_ind", "]", "\n", "\n", "# train on transformed data", "\n", "X_train", "=", "sc", ".", "fit_transform", "(", "dataset_transf_train", ".", "features", ")", "\n", "y_train", "=", "dataset_transf_train", ".", "labels", ".", "ravel", "(", ")", "\n", "w_train", "=", "dataset_transf_train", ".", "instance_weights", ".", "ravel", "(", ")", "\n", "\n", "lmod", "=", "copy", ".", "deepcopy", "(", "base", ")", "\n", "lmod", ".", "fit", "(", "X_train", ",", "y_train", ",", "\n", "sample_weight", "=", "dataset_transf_train", ".", "instance_weights", ")", "\n", "y_train_pred", "=", "lmod", ".", "predict", "(", "X_train", ")", "\n", "\n", "dataset_transf_test_pred", "=", "dataset_orig_test", ".", "copy", "(", "deepcopy", "=", "True", ")", "\n", "X_test", "=", "sc", ".", "fit_transform", "(", "dataset_transf_test_pred", ".", "features", ")", "\n", "y_test", "=", "dataset_transf_test_pred", ".", "labels", "\n", "dataset_transf_test_pred", ".", "scores", "=", "lmod", ".", "predict_proba", "(", "X_test", ")", "[", ":", ",", "pos_ind", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "\n", "for", "thresh", "in", "(", "class_thresh_arr", ")", ":", "\n", "            ", "if", "thresh", "==", "best_class_thresh", ":", "\n", "                ", "fav_inds", "=", "dataset_transf_test_pred", ".", "scores", ">", "thresh", "\n", "dataset_transf_test_pred", ".", "labels", "[", "fav_inds", "]", "=", "dataset_transf_test_pred", ".", "favorable_label", "\n", "dataset_transf_test_pred", ".", "labels", "[", "~", "fav_inds", "]", "=", "dataset_transf_test_pred", ".", "unfavorable_label", "\n", "", "", "df_test", "=", "dataset_orig_test", ".", "convert_to_dataframe", "(", ")", "[", "0", "]", "\n", "df_pred", "=", "dataset_transf_test_pred", ".", "convert_to_dataframe", "(", ")", "[", "0", "]", "\n", "df_train", "=", "dataset_orig_train", ".", "convert_to_dataframe", "(", ")", "[", "0", "]", "\n", "\n", "X_test", "=", "(", "df_test", ".", "loc", "[", ":", ",", "df_test", ".", "columns", "!=", "'Probability'", "]", ")", "\n", "X_train", "=", "(", "df_train", ".", "loc", "[", ":", ",", "df_train", ".", "columns", "!=", "'Probability'", "]", ")", "\n", "y_test", "=", "df_test", "[", "\"Probability\"", "]", "\n", "y_train", "=", "df_train", "[", "\"Probability\"", "]", "\n", "y_pred", "=", "df_pred", "[", "\"Probability\"", "]", "\n", "cm", "=", "confusion_matrix", "(", "y_test", ",", "y_pred", ")", "\n", "acc", ".", "append", "(", "accuracy_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "pre", ".", "append", "(", "precision_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "recall", ".", "append", "(", "recall_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "f1", ".", "append", "(", "f1_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "aod", ".", "append", "(", "measure_final_score", "(", "df_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'aod'", ")", ")", "\n", "eod", ".", "append", "(", "measure_final_score", "(", "df_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'eod'", ")", ")", "\n", "spd", ".", "append", "(", "measure_final_score", "(", "df_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'SPD'", ")", ")", "\n", "di", ".", "append", "(", "measure_final_score", "(", "df_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'DI'", ")", ")", "\n", "flip_rate", "=", "calculate_flip_proba", "(", "clf", "=", "lmod", ",", "X_test", "=", "X_test", ",", "keyword", "=", "keyword", ",", "threshold", "=", "best_class_thresh", ")", "\n", "fr", ".", "append", "(", "flip_rate", ")", "\n", "print", "(", "\"Round\"", ",", "(", "i", "+", "1", ")", ",", "\"finished.\"", ")", "\n", "# print('Time',time.time()-start)", "\n", "# print(\" Accuracy\", np.round(acc[-1],3))", "\n", "# print(\" Precision\", np.round(pre[-1], 3))", "\n", "# print(\" Recall\", np.round(recall[-1], 3))", "\n", "# print(\" F1\", np.round(f1[-1], 3))", "\n", "# print(\" AOD\", np.round(aod[-1], 3))", "\n", "# print(\" EOD\", np.round(eod[-1], 3))", "\n", "# print(\" SPD\", np.round(spd[-1], 3))", "\n", "# print(\" DI\", np.round(di[-1], 3))", "\n", "# print(\" FR\", np.round(fr[-1], 3))", "\n", "", "res1", "=", "[", "acc", ",", "pre", ",", "recall", ",", "f1", ",", "aod", ",", "eod", ",", "spd", ",", "di", ",", "fr", "]", "\n", "return", "res1", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.Random.blind_random": [[19, 61], ["df.dropna", "sklearn.preprocessing.MinMaxScaler", "pandas.DataFrame", "range", "sklearn.preprocessing.MinMaxScaler.fit_transform", "time.time", "sklearn.model_selection.train_test_split", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "numpy.random.seed", "numpy.random.randint", "numpy.where", "copy.deepcopy.fit", "copy.deepcopy.predict", "sklearn.metrics.confusion_matrix", "acc.append", "pre.append", "recall.append", "f1.append", "aod.append", "eod.append", "spd.append", "di.append", "calculate_flip", "fr.append", "print", "sklearn.metrics.accuracy_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "sklearn.metrics.f1_score", "measure_final_score", "measure_final_score", "measure_final_score", "measure_final_score", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.FairSMOTE.calculate_flip", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score"], ["def", "blind_random", "(", "base_clf", ",", "df", ",", "keyword", ",", "ratio", "=", ".2", ",", "rep", "=", "10", ")", ":", "\n", "    ", "dataset_orig", "=", "df", ".", "dropna", "(", ")", "\n", "\n", "scaler", "=", "MinMaxScaler", "(", ")", "\n", "dataset_orig", "=", "pd", ".", "DataFrame", "(", "scaler", ".", "fit_transform", "(", "dataset_orig", ")", ",", "columns", "=", "dataset_orig", ".", "columns", ")", "\n", "acc", ",", "pre", ",", "recall", ",", "f1", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "aod", ",", "eod", ",", "spd", ",", "di", ",", "fr", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "rep", ")", ":", "\n", "        ", "start", "=", "time", ".", "time", "(", ")", "\n", "dataset_orig_train", ",", "dataset_orig_test", "=", "train_test_split", "(", "dataset_orig", ",", "test_size", "=", "ratio", ",", "random_state", "=", "i", ")", "\n", "X_train", "=", "copy", ".", "deepcopy", "(", "dataset_orig_train", ".", "loc", "[", ":", ",", "dataset_orig_train", ".", "columns", "!=", "'Probability'", "]", ")", "\n", "y_train", "=", "copy", ".", "deepcopy", "(", "dataset_orig_train", "[", "'Probability'", "]", ")", "\n", "X_test", "=", "copy", ".", "deepcopy", "(", "dataset_orig_test", ".", "loc", "[", ":", ",", "dataset_orig_test", ".", "columns", "!=", "'Probability'", "]", ")", "\n", "y_test", "=", "copy", ".", "deepcopy", "(", "dataset_orig_test", "[", "'Probability'", "]", ")", "\n", "clf", "=", "copy", ".", "deepcopy", "(", "base_clf", ")", "\n", "\n", "X_train_rand", "=", "copy", ".", "deepcopy", "(", "X_train", ")", "\n", "np", ".", "random", ".", "seed", "(", "i", ")", "\n", "thresh", "=", "(", "np", ".", "sum", "(", "X_train", "[", "keyword", "]", ")", "/", "X_train", ".", "shape", "[", "0", "]", ")", "*", "10", "\n", "random_list", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "10", ",", "size", "=", "X_train", ".", "shape", "[", "0", "]", ")", "\n", "X_train_rand", "[", "keyword", "]", "=", "np", ".", "where", "(", "random_list", ">", "thresh", ",", "1", ",", "0", ")", "\n", "# X_train_rand[keyword] = np.random.randint(low=0, high=1, size=X_train.shape[0])", "\n", "\n", "clf", ".", "fit", "(", "X_train_rand", ",", "y_train", ")", "\n", "\n", "y_pred", "=", "clf", ".", "predict", "(", "X_test", ")", "\n", "cm", "=", "confusion_matrix", "(", "y_test", ",", "y_pred", ")", "\n", "\n", "acc", ".", "append", "(", "accuracy_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "pre", ".", "append", "(", "precision_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "recall", ".", "append", "(", "recall_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "f1", ".", "append", "(", "f1_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "aod", ".", "append", "(", "measure_final_score", "(", "dataset_orig_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'aod'", ")", ")", "\n", "eod", ".", "append", "(", "measure_final_score", "(", "dataset_orig_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'eod'", ")", ")", "\n", "spd", ".", "append", "(", "measure_final_score", "(", "dataset_orig_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'SPD'", ")", ")", "\n", "di", ".", "append", "(", "measure_final_score", "(", "dataset_orig_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'DI'", ")", ")", "\n", "flip_rate", "=", "calculate_flip", "(", "clf", ",", "X_test", ",", "keyword", ")", "\n", "fr", ".", "append", "(", "flip_rate", ")", "\n", "print", "(", "\"Round\"", ",", "i", "+", "1", ",", "'finished.'", ")", "\n", "", "res1", "=", "[", "acc", ",", "pre", ",", "recall", ",", "f1", ",", "aod", ",", "eod", ",", "spd", ",", "di", ",", "fr", "]", "\n", "return", "res1", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.Generate_Samples.get_ngbr": [[13, 21], ["random.randint", "knn.kneighbors", "parent_candidate.values.reshape"], "function", ["None"], ["def", "get_ngbr", "(", "df", ",", "knn", ")", ":", "\n", "    ", "rand_sample_idx", "=", "random", ".", "randint", "(", "0", ",", "df", ".", "shape", "[", "0", "]", "-", "1", ")", "\n", "parent_candidate", "=", "df", ".", "iloc", "[", "rand_sample_idx", "]", "\n", "ngbr", "=", "knn", ".", "kneighbors", "(", "parent_candidate", ".", "values", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "3", ",", "return_distance", "=", "False", ")", "\n", "candidate_1", "=", "df", ".", "iloc", "[", "ngbr", "[", "0", "]", "[", "0", "]", "]", "\n", "candidate_2", "=", "df", ".", "iloc", "[", "ngbr", "[", "0", "]", "[", "1", "]", "]", "\n", "candidate_3", "=", "df", ".", "iloc", "[", "ngbr", "[", "0", "]", "[", "2", "]", "]", "\n", "return", "parent_candidate", ",", "candidate_2", ",", "candidate_3", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.Generate_Samples.generate_samples": [[23, 89], ["df.values.tolist", "sklearn.neighbors.NearestNeighbors.fit", "range", "pandas.DataFrame", "Generate_Samples.get_ngbr", "parent_candidate.items", "df.values.tolist.append", "final_df.rename.rename", "final_df.rename.rename", "final_df.rename.rename", "final_df.rename.rename", "final_df.rename.rename", "final_df.rename.rename", "final_df.rename.rename", "final_df.rename.rename", "sklearn.neighbors.NearestNeighbors", "isinstance", "new_candidate.append", "isinstance", "new_candidate.append", "isinstance", "random.choice", "enumerate", "new_candidate.append", "new_candidate.append", "random.random", "temp_lst.append", "abs", "int", "random.random"], "function", ["home.repos.pwc.inspect_result.anonymous12138_biasmitigation.Baseline.Generate_Samples.get_ngbr"], ["", "def", "generate_samples", "(", "no_of_samples", ",", "df", ",", "df_name", ")", ":", "\n", "    ", "total_data", "=", "df", ".", "values", ".", "tolist", "(", ")", "\n", "knn", "=", "NN", "(", "n_neighbors", "=", "5", ",", "algorithm", "=", "'auto'", ")", ".", "fit", "(", "df", ")", "\n", "\n", "for", "_", "in", "range", "(", "no_of_samples", ")", ":", "\n", "        ", "cr", "=", "0.8", "\n", "f", "=", "0.8", "\n", "parent_candidate", ",", "child_candidate_1", ",", "child_candidate_2", "=", "get_ngbr", "(", "df", ",", "knn", ")", "\n", "new_candidate", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "parent_candidate", ".", "items", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "parent_candidate", "[", "key", "]", ",", "bool", ")", ":", "\n", "                ", "new_candidate", ".", "append", "(", "parent_candidate", "[", "key", "]", "if", "cr", "<", "random", ".", "random", "(", ")", "else", "not", "parent_candidate", "[", "key", "]", ")", "\n", "", "elif", "isinstance", "(", "parent_candidate", "[", "key", "]", ",", "str", ")", ":", "\n", "                ", "new_candidate", ".", "append", "(", "\n", "random", ".", "choice", "(", "[", "parent_candidate", "[", "key", "]", ",", "child_candidate_1", "[", "key", "]", ",", "child_candidate_2", "[", "key", "]", "]", ")", ")", "\n", "", "elif", "isinstance", "(", "parent_candidate", "[", "key", "]", ",", "list", ")", ":", "\n", "                ", "temp_lst", "=", "[", "]", "\n", "for", "i", ",", "each", "in", "enumerate", "(", "parent_candidate", "[", "key", "]", ")", ":", "\n", "                    ", "temp_lst", ".", "append", "(", "parent_candidate", "[", "key", "]", "[", "i", "]", "if", "cr", "<", "random", ".", "random", "(", ")", "else", "\n", "int", "(", "parent_candidate", "[", "key", "]", "[", "i", "]", "+", "\n", "f", "*", "(", "child_candidate_1", "[", "key", "]", "[", "i", "]", "-", "child_candidate_2", "[", "key", "]", "[", "i", "]", ")", ")", ")", "\n", "", "new_candidate", ".", "append", "(", "temp_lst", ")", "\n", "", "else", ":", "\n", "                ", "new_candidate", ".", "append", "(", "abs", "(", "parent_candidate", "[", "key", "]", "+", "f", "*", "(", "child_candidate_1", "[", "key", "]", "-", "child_candidate_2", "[", "key", "]", ")", ")", ")", "\n", "", "", "total_data", ".", "append", "(", "new_candidate", ")", "\n", "\n", "", "final_df", "=", "pd", ".", "DataFrame", "(", "total_data", ")", "\n", "if", "df_name", "==", "'Adult'", ":", "\n", "        ", "final_df", "=", "final_df", ".", "rename", "(", "\n", "columns", "=", "{", "0", ":", "\"age\"", ",", "1", ":", "\"education-num\"", ",", "2", ":", "\"race\"", ",", "3", ":", "\"sex\"", ",", "4", ":", "\"capital-gain\"", ",", "5", ":", "\"capital-loss\"", ",", "\n", "6", ":", "\"hours-per-week\"", ",", "7", ":", "\"Probability\"", "}", ",", "errors", "=", "\"raise\"", ")", "\n", "", "if", "df_name", "==", "'Compas'", ":", "\n", "        ", "final_df", "=", "final_df", ".", "rename", "(", "\n", "columns", "=", "{", "0", ":", "\"sex\"", ",", "1", ":", "\"age_cat\"", ",", "2", ":", "\"race\"", ",", "3", ":", "\"priors_count\"", ",", "4", ":", "\"c_charge_degree\"", ",", "5", ":", "\"Probability\"", "}", ",", "\n", "errors", "=", "\"raise\"", ")", "\n", "", "if", "df_name", "==", "'Default'", ":", "\n", "        ", "final_df", "=", "final_df", ".", "rename", "(", "\n", "columns", "=", "{", "0", ":", "\"ID\"", ",", "1", ":", "\"LIMIT_BAL\"", ",", "2", ":", "\"sex\"", ",", "3", ":", "\"EDUCATION\"", ",", "4", ":", "\"MARRIAGE\"", ",", "5", ":", "\"AGE\"", ",", "6", ":", "\"PAY_0\"", ",", "7", ":", "\"PAY_2\"", ",", "\n", "8", ":", "\"PAY_3\"", ",", "9", ":", "\"PAY_4\"", ",", "10", ":", "\"PAY_5\"", ",", "11", ":", "\"PAY_6\"", ",", "12", ":", "\"BILL_AMT1\"", ",", "13", ":", "\"BILL_AMT2\"", ",", "\n", "14", ":", "\"BILL_AMT3\"", ",", "15", ":", "\"BILL_AMT4\"", ",", "16", ":", "\"BILL_AMT5\"", ",", "17", ":", "\"BILL_AMT6\"", ",", "18", ":", "\"PAY_AMT1\"", ",", "19", ":", "\"PAY_AMT2\"", ",", "\n", "20", ":", "\"PAY_AMT3\"", ",", "21", ":", "\"PAY_AMT4\"", ",", "22", ":", "\"PAY_AMT5\"", ",", "23", ":", "\"PAY_AMT6\"", ",", "24", ":", "\"Probability\"", "}", ",", "errors", "=", "\"raise\"", ")", "\n", "", "if", "df_name", "==", "'German'", ":", "\n", "        ", "final_df", "=", "final_df", ".", "rename", "(", "\n", "columns", "=", "{", "0", ":", "\"sex\"", ",", "1", ":", "\"age\"", ",", "2", ":", "\"Probability\"", ",", "3", ":", "\"credit_history=Delay\"", ",", "4", ":", "\"credit_history=None/Paid\"", ",", "\n", "5", ":", "\"credit_history=Other\"", ",", "6", ":", "\"savings=500+\"", ",", "7", ":", "\"savings=<500\"", ",", "8", ":", "\"savings=Unknown/None\"", ",", "\n", "9", ":", "\"employment=1-4 years\"", ",", "10", ":", "\"employment=4+ years\"", ",", "11", ":", "\"employment=Unemployed\"", "}", ",", "errors", "=", "\"raise\"", ")", "\n", "", "if", "df_name", "==", "'Heart'", ":", "\n", "        ", "final_df", "=", "final_df", ".", "rename", "(", "\n", "columns", "=", "{", "0", ":", "\"age\"", ",", "1", ":", "\"sex\"", ",", "2", ":", "\"cp\"", ",", "3", ":", "\"trestbps\"", ",", "4", ":", "\"chol\"", ",", "5", ":", "\"fbs\"", ",", "6", ":", "\"restecg\"", ",", "7", ":", "\"thalach\"", ",", "\n", "8", ":", "\"exang\"", ",", "9", ":", "\"oldpeak\"", ",", "10", ":", "\"slope\"", ",", "11", ":", "\"ca\"", ",", "12", ":", "\"thal\"", ",", "13", ":", "\"Probability\"", "}", ",", "errors", "=", "\"raise\"", ")", "\n", "", "if", "df_name", "==", "'Bank'", ":", "\n", "        ", "final_df", "=", "final_df", ".", "rename", "(", "\n", "columns", "=", "{", "0", ":", "\"age\"", ",", "1", ":", "\"default\"", ",", "2", ":", "\"balance\"", ",", "3", ":", "\"housing\"", ",", "4", ":", "\"loan\"", ",", "5", ":", "\"day\"", ",", "6", ":", "\"duration\"", ",", "\n", "7", ":", "\"campaign\"", ",", "8", ":", "\"pdays\"", ",", "9", ":", "\"previous\"", ",", "10", ":", "\"Probability\"", "}", ",", "errors", "=", "\"raise\"", ")", "\n", "", "if", "df_name", "==", "'Titanic'", ":", "\n", "        ", "final_df", "=", "final_df", ".", "rename", "(", "\n", "columns", "=", "{", "0", ":", "\"Pclass\"", ",", "1", ":", "\"sex\"", ",", "2", ":", "\"Age\"", ",", "3", ":", "\"SibSp\"", ",", "4", ":", "\"Parch\"", ",", "5", ":", "\"Fare\"", ",", "6", ":", "\"Probability\"", "}", ",", "\n", "errors", "=", "\"raise\"", ")", "\n", "", "if", "df_name", "==", "'Student'", ":", "\n", "        ", "final_df", "=", "final_df", ".", "rename", "(", "\n", "columns", "=", "{", "0", ":", "'sex'", ",", "1", ":", "'age'", ",", "2", ":", "'Medu'", ",", "3", ":", "'Fedu'", ",", "4", ":", "'traveltime'", ",", "5", ":", "'studytime'", ",", "6", ":", "'failures'", ",", "\n", "7", ":", "'schoolsup'", ",", "8", ":", "'famsup'", ",", "9", ":", "'paid'", ",", "10", ":", "'activities'", ",", "11", ":", "'nursery'", ",", "12", ":", "'higher'", ",", "\n", "13", ":", "'internet'", ",", "14", ":", "'romantic'", ",", "15", ":", "'famrel'", ",", "16", ":", "'freetime'", ",", "17", ":", "'goout'", ",", "18", ":", "'Dalc'", ",", "19", ":", "'Walc'", ",", "\n", "20", ":", "'health'", ",", "21", ":", "'absences'", ",", "22", ":", "'G1'", ",", "23", ":", "'G2'", ",", "24", ":", "'Probability'", "}", ",", "errors", "=", "\"raise\"", ")", "\n", "\n", "", "return", "final_df", "", "", ""]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.xFAIR.xFAIR.reg2clf": [[24, 31], ["out.append", "out.append"], "function", ["None"], ["def", "reg2clf", "(", "protected_pred", ",", "threshold", "=", ".5", ")", ":", "\n", "    ", "out", "=", "[", "]", "\n", "for", "each", "in", "protected_pred", ":", "\n", "        ", "if", "each", ">=", "threshold", ":", "\n", "            ", "out", ".", "append", "(", "1", ")", "\n", "", "else", ":", "out", ".", "append", "(", "0", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.xFAIR.xFAIR.xFAIR": [[33, 115], ["df.dropna", "sklearn.preprocessing.MinMaxScaler", "pandas.DataFrame", "range", "sklearn.preprocessing.MinMaxScaler.fit_transform", "time.time", "sklearn.model_selection.train_test_split", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "list", "list.remove", "copy.deepcopy", "copy.deepcopy.predict", "copy.deepcopy", "copy.deepcopy.predict", "sklearn.metrics.confusion_matrix", "acc.append", "pre.append", "recall.append", "f1.append", "aod.append", "eod.append", "spd.append", "di.append", "print", "print", "imblearn.over_sampling.SMOTE", "imblearn.over_sampling.SMOTE.fit_resample", "copy.deepcopy", "copy.deepcopy.fit", "copy.deepcopy.predict_proba", "copy.deepcopy", "copy.deepcopy.fit", "copy.deepcopy.predict_proba", "isinstance", "numpy.argsort", "matplotlib.rcParams.update", "matplotlib.title", "matplotlib.barh", "matplotlib.yticks", "matplotlib.xlabel", "matplotlib.show", "isinstance", "isinstance", "xFAIR.reg2clf", "sklearn.metrics.accuracy_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "sklearn.metrics.f1_score", "measure_final_score", "measure_final_score", "measure_final_score", "measure_final_score", "isinstance", "isinstance", "copy.deepcopy.fit", "copy.deepcopy.fit", "isinstance", "isinstance", "copy.deepcopy.fit", "copy.deepcopy.fit", "isinstance", "range", "range", "time.time", "print", "len", "len"], "function", ["home.repos.pwc.inspect_result.anonymous12138_biasmitigation.xFAIR.xFAIR.reg2clf", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score", "home.repos.pwc.inspect_result.anonymous12138_biasmitigation.None.Measure.measure_final_score"], ["", "def", "xFAIR", "(", "df", ",", "base_clf", ",", "base2", ",", "keyword", ",", "ratio", "=", ".2", ",", "rep", "=", "10", ",", "smote1", "=", "True", ",", "verbose", "=", "False", ",", "thresh", "=", ".5", ")", ":", "\n", "    ", "dataset_orig", "=", "df", ".", "dropna", "(", ")", "\n", "scaler", "=", "MinMaxScaler", "(", ")", "\n", "dataset_orig", "=", "pd", ".", "DataFrame", "(", "scaler", ".", "fit_transform", "(", "dataset_orig", ")", ",", "columns", "=", "dataset_orig", ".", "columns", ")", "\n", "acc", ",", "pre", ",", "recall", ",", "f1", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "aod", ",", "eod", ",", "spd", ",", "di", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "rep", ")", ":", "\n", "        ", "start", "=", "time", ".", "time", "(", ")", "\n", "dataset_orig_train", ",", "dataset_orig_test", "=", "train_test_split", "(", "dataset_orig", ",", "test_size", "=", "ratio", ",", "random_state", "=", "i", ")", "\n", "X_train", "=", "copy", ".", "deepcopy", "(", "dataset_orig_train", ".", "loc", "[", ":", ",", "dataset_orig_train", ".", "columns", "!=", "'Probability'", "]", ")", "\n", "y_train", "=", "copy", ".", "deepcopy", "(", "dataset_orig_train", "[", "'Probability'", "]", ")", "\n", "X_test", "=", "copy", ".", "deepcopy", "(", "dataset_orig_test", ".", "loc", "[", ":", ",", "dataset_orig_test", ".", "columns", "!=", "'Probability'", "]", ")", "\n", "y_test", "=", "copy", ".", "deepcopy", "(", "dataset_orig_test", "[", "'Probability'", "]", ")", "\n", "\n", "reduced", "=", "list", "(", "X_train", ".", "columns", ")", "\n", "reduced", ".", "remove", "(", "keyword", ")", "\n", "X_reduced", ",", "y_reduced", "=", "X_train", ".", "loc", "[", ":", ",", "reduced", "]", ",", "X_train", "[", "keyword", "]", "\n", "# Build model to predict the protect attribute", "\n", "clf1", "=", "copy", ".", "deepcopy", "(", "base2", ")", "\n", "if", "smote1", ":", "\n", "            ", "sm", "=", "SMOTE", "(", ")", "\n", "X_trains", ",", "y_trains", "=", "sm", ".", "fit_resample", "(", "X_reduced", ",", "y_reduced", ")", "\n", "clf", "=", "copy", ".", "deepcopy", "(", "base_clf", ")", "\n", "clf", ".", "fit", "(", "X_trains", ",", "y_trains", ")", "\n", "y_proba", "=", "clf", ".", "predict_proba", "(", "X_trains", ")", "\n", "y_proba", "=", "[", "each", "[", "1", "]", "for", "each", "in", "y_proba", "]", "\n", "if", "isinstance", "(", "clf1", ",", "DecisionTreeClassifier", ")", "or", "isinstance", "(", "clf1", ",", "LogisticRegression", ")", ":", "\n", "                ", "clf1", ".", "fit", "(", "X_trains", ",", "y_trains", ")", "\n", "", "else", ":", "\n", "                ", "clf1", ".", "fit", "(", "X_trains", ",", "y_proba", ")", "\n", "", "", "else", ":", "\n", "            ", "clf", "=", "copy", ".", "deepcopy", "(", "base_clf", ")", "\n", "clf", ".", "fit", "(", "X_reduced", ",", "y_reduced", ")", "\n", "y_proba", "=", "clf", ".", "predict_proba", "(", "X_reduced", ")", "\n", "y_proba", "=", "[", "each", "[", "1", "]", "for", "each", "in", "y_proba", "]", "\n", "if", "isinstance", "(", "clf1", ",", "DecisionTreeClassifier", ")", "or", "isinstance", "(", "clf1", ",", "LogisticRegression", ")", ":", "\n", "                ", "clf1", ".", "fit", "(", "X_reduced", ",", "y_reduced", ")", "\n", "", "else", ":", "\n", "                ", "clf1", ".", "fit", "(", "X_reduced", ",", "y_proba", ")", "\n", "#             clf1.fit(X_reduced,y_reduced)", "\n", "\n", "", "", "if", "verbose", ":", "\n", "            ", "if", "isinstance", "(", "clf1", ",", "LinearRegression", ")", ":", "\n", "                ", "importances", "=", "(", "clf1", ".", "coef_", ")", "\n", "", "elif", "isinstance", "(", "clf1", ",", "LogisticRegression", ")", ":", "\n", "                ", "importances", "=", "(", "clf1", ".", "coef_", "[", "0", "]", ")", "\n", "print", "(", "\"coef:\"", ",", "clf1", ".", "coef_", "[", "0", "]", ",", "\"intercept:\"", ",", "clf1", ".", "intercept_", ")", "\n", "", "else", ":", "\n", "                ", "importances", "=", "clf1", ".", "feature_importances_", "\n", "", "indices", "=", "np", ".", "argsort", "(", "importances", ")", "\n", "features", "=", "X_reduced", ".", "columns", "\n", "\n", "plt", ".", "rcParams", ".", "update", "(", "{", "'font.size'", ":", "14", "}", ")", "\n", "plt", ".", "title", "(", "'Feature Importances on sensitive attribute'", ")", "\n", "plt", ".", "barh", "(", "range", "(", "len", "(", "indices", ")", ")", ",", "importances", "[", "indices", "]", ",", "color", "=", "'b'", ",", "align", "=", "'center'", ")", "\n", "plt", ".", "yticks", "(", "range", "(", "len", "(", "indices", ")", ")", ",", "[", "features", "[", "i", "]", "for", "i", "in", "indices", "]", ")", "\n", "plt", ".", "xlabel", "(", "'Relative Importance'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "", "X_test_reduced", "=", "X_test", ".", "loc", "[", ":", ",", "X_test", ".", "columns", "!=", "keyword", "]", "\n", "protected_pred", "=", "clf1", ".", "predict", "(", "X_test_reduced", ")", "\n", "if", "isinstance", "(", "clf1", ",", "DecisionTreeRegressor", ")", "or", "isinstance", "(", "clf1", ",", "LinearRegression", ")", ":", "\n", "            ", "protected_pred", "=", "reg2clf", "(", "protected_pred", ",", "threshold", "=", "thresh", ")", "\n", "# Build model to predict the taget attribute Y", "\n", "", "clf2", "=", "copy", ".", "deepcopy", "(", "base_clf", ")", "\n", "\n", "X_test", ".", "loc", "[", ":", ",", "keyword", "]", "=", "protected_pred", "\n", "y_pred", "=", "clf2", ".", "predict", "(", "X_test", ")", "\n", "cm", "=", "confusion_matrix", "(", "y_test", ",", "y_pred", ")", "\n", "acc", ".", "append", "(", "accuracy_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "pre", ".", "append", "(", "precision_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "recall", ".", "append", "(", "recall_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "f1", ".", "append", "(", "f1_score", "(", "y_test", ",", "y_pred", ")", ")", "\n", "aod", ".", "append", "(", "measure_final_score", "(", "dataset_orig_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'aod'", ")", ")", "\n", "eod", ".", "append", "(", "measure_final_score", "(", "dataset_orig_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'eod'", ")", ")", "\n", "spd", ".", "append", "(", "measure_final_score", "(", "dataset_orig_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'SPD'", ")", ")", "\n", "di", ".", "append", "(", "measure_final_score", "(", "dataset_orig_test", ",", "y_pred", ",", "cm", ",", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "keyword", ",", "'DI'", ")", ")", "\n", "print", "(", "\"Round\"", ",", "(", "i", "+", "1", ")", ",", "\"finished.\"", ")", "\n", "print", "(", "'Time'", ",", "time", ".", "time", "(", ")", "-", "start", ")", "\n", "", "res1", "=", "[", "acc", ",", "pre", ",", "recall", ",", "f1", ",", "aod", ",", "eod", ",", "spd", ",", "di", "]", "\n", "return", "res1", "\n", "\n"]]}