{"home.repos.pwc.inspect_result.csnakajima_pu-learning.None.main.process_args": [[9, 57], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "numpy.random.seed", "torch.manual_seed"], "function", ["None"], ["def", "process_args", "(", "arguments", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "description", "=", "\"PyTorch implementation of unbiased/non-negative/density-ratio PU learning.\"", ",", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\"--method\"", ",", "\"-m\"", ",", "type", "=", "str", ",", "default", "=", "\"DRPU\"", ",", "choices", "=", "[", "\"uPU\"", ",", "\"nnPU\"", ",", "\"PUa\"", ",", "\"DRPU\"", "]", ",", "\n", "help", "=", "\"Learning algorithm\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--dataset\"", ",", "\"-d\"", ",", "type", "=", "str", ",", "default", "=", "\"mnist\"", ",", "choices", "=", "[", "\"gauss\"", ",", "\"gauss_mix\"", ",", "\"mnist\"", ",", "\"fmnist\"", ",", "\"kmnist\"", ",", "\"cifar\"", "]", ",", "\n", "help", "=", "\"Dataset name\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_positive\"", ",", "\"-n\"", ",", "type", "=", "int", ",", "default", "=", "2500", ",", "\n", "help", "=", "\"Number of positively labeled data for training dataset\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--loss\"", ",", "\"-l\"", ",", "type", "=", "str", ",", "default", "=", "\"LSIF\"", ",", "choices", "=", "[", "\"sigmoid\"", ",", "\"logistic\"", ",", "\"savage\"", ",", "\"LSIF\"", "]", ",", "\n", "help", "=", "\"Loss function name\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--alpha\"", ",", "\"-a\"", ",", "type", "=", "float", ",", "default", "=", "None", ",", "\n", "help", "=", "\"Parameter for risk estimator\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--preset\"", ",", "\"-p\"", ",", "action", "=", "\"store_true\"", ",", "\n", "help", "=", "\"Use preset of parameter settings\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--max_epochs\"", ",", "type", "=", "int", ",", "default", "=", "100", ",", "\n", "help", "=", "\"Number of epochs\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--batch_size\"", ",", "type", "=", "int", ",", "default", "=", "500", ",", "\n", "help", "=", "\"Batch size\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lr\"", ",", "type", "=", "float", ",", "default", "=", "2e-5", ",", "\n", "help", "=", "\"Learning rate\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--oracle_prior\"", ",", "action", "=", "\"store_true\"", ",", "\n", "help", "=", "\"Use oracle class-priors (for benchmark data)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--gpu\"", ",", "type", "=", "int", ",", "default", "=", "0", ",", "\n", "help", "=", "\"GPU ID (negative value indicates CPU)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--res_dir\"", ",", "type", "=", "str", ",", "default", "=", "\"results\"", ",", "\n", "help", "=", "\"Directory to output results\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--data_dir\"", ",", "type", "=", "str", ",", "default", "=", "\"dataset\"", ",", "\n", "help", "=", "\"Directory of datasets\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--seed\"", ",", "\"-s\"", ",", "type", "=", "int", ",", "default", "=", "None", ",", "\n", "help", "=", "\"Random seed\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--id\"", ",", "\"-i\"", ",", "type", "=", "int", ",", "default", "=", "None", ",", "\n", "help", "=", "\"Job ID\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", "arguments", ")", "\n", "if", "args", ".", "method", "in", "[", "\"DRPU\"", "]", ":", "\n", "        ", "if", "args", ".", "loss", "not", "in", "[", "\"LSIF\"", "]", ":", "\n", "            ", "args", ".", "loss", "=", "\"LSIF\"", "\n", "", "", "else", ":", "\n", "        ", "if", "args", ".", "loss", "in", "[", "\"LSIF\"", "]", ":", "\n", "            ", "args", ".", "loss", "=", "\"sigmoid\"", "\n", "", "", "if", "args", ".", "seed", "is", "not", "None", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.main.main": [[59, 177], ["main.process_args", "run", "run"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.main.process_args"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "args", "=", "process_args", "(", "args", ")", "\n", "\n", "if", "args", ".", "dataset", "in", "[", "\"gauss\"", ",", "\"gauss_mix\"", "]", ":", "\n", "        ", "true_test_priors", "=", "[", "0.4", ",", "0.6", "]", "\n", "train_size", "=", "(", "200", ",", "1000", ")", "\n", "val_size", "=", "(", "100", ",", "500", ")", "\n", "test_size", "=", "500", "\n", "max_epochs", "=", "200", "\n", "batch_size", "=", "100", "\n", "lr", "=", "2e-5", "\n", "alpha", "=", "None", "\n", "loss_name", "=", "args", ".", "loss", "\n", "true_train_prior", "=", "0.4", "if", "args", ".", "dataset", "==", "\"gauss\"", "else", "0.6", "\n", "\n", "if", "not", "args", ".", "preset", ":", "\n", "            ", "train_size", "=", "(", "args", ".", "num_positive", ",", "train_size", "[", "1", "]", ")", "\n", "max_epochs", "=", "args", ".", "max_epochs", "\n", "batch_size", "=", "args", ".", "batch_size", "\n", "lr", "=", "args", ".", "lr", "\n", "alpha", "=", "args", ".", "alpha", "\n", "loss_name", "=", "\"LSIF\"", "if", "args", ".", "method", "==", "\"DRPU\"", "else", "\"logistic\"", "\n", "", "if", "args", ".", "method", "==", "\"uPU\"", ":", "\n", "            ", "from", "run_synthetic", "import", "uPU", "as", "run", "\n", "", "else", ":", "\n", "            ", "from", "run_synthetic", "import", "DRPU", "as", "run", "\n", "\n", "", "run", "(", "\n", "dataset_name", "=", "args", ".", "dataset", ",", "\n", "train_size", "=", "train_size", ",", "\n", "val_size", "=", "val_size", ",", "\n", "test_size", "=", "test_size", ",", "\n", "alpha", "=", "alpha", ",", "\n", "loss_name", "=", "loss_name", ",", "\n", "max_epochs", "=", "max_epochs", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "lr", "=", "lr", ",", "\n", "true_train_prior", "=", "true_train_prior", ",", "\n", "true_test_priors", "=", "true_test_priors", ",", "\n", "device_num", "=", "args", ".", "gpu", ",", "\n", "res_dir", "=", "args", ".", "res_dir", ",", "\n", "seed", "=", "args", ".", "seed", ",", "\n", "id", "=", "args", ".", "id", "\n", ")", "\n", "\n", "", "else", ":", "\n", "        ", "true_test_priors", "=", "[", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", "]", "\n", "loss_name", "=", "\"LSIF\"", "if", "args", ".", "method", "==", "\"DRPU\"", "else", "\"sigmoid\"", "\n", "if", "args", ".", "dataset", "==", "\"mnist\"", ":", "\n", "            ", "ImageDataset", ".", "pos_labels", "=", "[", "0", ",", "2", ",", "4", ",", "6", ",", "8", "]", "\n", "true_train_prior", "=", "0.5", "if", "args", ".", "oracle_prior", "else", "None", "\n", "train_size", "=", "(", "2500", ",", "50000", ")", "\n", "val_size", "=", "(", "500", ",", "10000", ")", "\n", "max_epochs", "=", "50", "\n", "batch_size", "=", "500", "\n", "lr", "=", "2e-5", "\n", "alpha", "=", "0.475", "if", "args", ".", "method", "==", "\"DRPU\"", "else", "None", "\n", "", "elif", "args", ".", "dataset", "==", "\"fmnist\"", ":", "\n", "            ", "ImageDataset", ".", "pos_labels", "=", "[", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "9", "]", "\n", "true_train_prior", "=", "0.6", "if", "args", ".", "oracle_prior", "else", "None", "\n", "train_size", "=", "(", "2500", ",", "50000", ")", "\n", "val_size", "=", "(", "500", ",", "10000", ")", "\n", "max_epochs", "=", "100", "\n", "batch_size", "=", "500", "\n", "lr", "=", "2e-5", "\n", "alpha", "=", "0.6", "if", "args", ".", "method", "==", "\"DRPU\"", "else", "None", "\n", "", "elif", "args", ".", "dataset", "==", "\"kmnist\"", ":", "\n", "            ", "ImageDataset", ".", "pos_labels", "=", "[", "0", ",", "1", ",", "8", ",", "9", "]", "\n", "true_train_prior", "=", "0.4", "if", "args", ".", "oracle_prior", "else", "None", "\n", "train_size", "=", "(", "2500", ",", "50000", ")", "\n", "val_size", "=", "(", "500", ",", "10000", ")", "\n", "max_epochs", "=", "100", "\n", "batch_size", "=", "500", "\n", "lr", "=", "2e-5", "\n", "alpha", "=", "0.375", "if", "args", ".", "method", "==", "\"DRPU\"", "else", "None", "\n", "", "else", ":", "\n", "            ", "ImageDataset", ".", "pos_labels", "=", "[", "0", ",", "1", ",", "8", ",", "9", "]", "\n", "true_train_prior", "=", "0.4", "if", "args", ".", "oracle_prior", "else", "None", "\n", "train_size", "=", "(", "2500", ",", "45000", ")", "\n", "val_size", "=", "(", "500", ",", "5000", ")", "\n", "max_epochs", "=", "100", "\n", "batch_size", "=", "500", "\n", "lr", "=", "1e-5", "\n", "alpha", "=", "0.425", "if", "args", ".", "method", "==", "\"DRPU\"", "else", "None", "\n", "\n", "", "if", "not", "args", ".", "preset", ":", "\n", "            ", "train_size", "=", "(", "args", ".", "num_positive", ",", "train_size", "[", "1", "]", ")", "\n", "max_epochs", "=", "args", ".", "max_epochs", "\n", "batch_size", "=", "args", ".", "batch_size", "\n", "lr", "=", "args", ".", "lr", "\n", "alpha", "=", "args", ".", "alpha", "\n", "loss_name", "=", "args", ".", "loss", "\n", "\n", "", "if", "args", ".", "method", "==", "\"uPU\"", ":", "\n", "            ", "from", "run_benchmark", "import", "uPU", "as", "run", "\n", "", "elif", "args", ".", "method", "==", "\"nnPU\"", ":", "\n", "            ", "from", "run_benchmark", "import", "nnPU", "as", "run", "\n", "", "elif", "args", ".", "method", "==", "\"PUa\"", ":", "\n", "            ", "from", "run_benchmark", "import", "PUa", "as", "run", "\n", "", "else", ":", "\n", "            ", "from", "run_benchmark", "import", "DRPU", "as", "run", "\n", "\n", "", "run", "(", "\n", "dataset_name", "=", "args", ".", "dataset", ",", "\n", "train_size", "=", "train_size", ",", "\n", "val_size", "=", "val_size", ",", "\n", "alpha", "=", "alpha", ",", "\n", "loss_name", "=", "loss_name", ",", "\n", "max_epochs", "=", "max_epochs", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "lr", "=", "lr", ",", "\n", "true_train_prior", "=", "true_train_prior", ",", "\n", "true_test_priors", "=", "true_test_priors", ",", "\n", "device_num", "=", "args", ".", "gpu", ",", "\n", "res_dir", "=", "args", ".", "res_dir", ",", "\n", "data_dir", "=", "args", ".", "data_dir", ",", "\n", "seed", "=", "args", ".", "seed", ",", "\n", "id", "=", "args", ".", "id", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_synthetic.load_trainset": [[16, 29], ["dataset.get_synthetic_positive", "dataset.get_synthetic_unlabeled", "dataset.get_synthetic_positive", "dataset.get_synthetic_unlabeled", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_synthetic_positive", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_synthetic_unlabeled", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_synthetic_positive", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_synthetic_unlabeled"], ["def", "load_trainset", "(", "dataset_name", ",", "train_size", ",", "val_size", ",", "batch_size", ",", "prior", ")", ":", "\n", "    ", "trainsize_P", ",", "trainsize_U", "=", "train_size", "\n", "valsize_P", ",", "valsize_U", "=", "val_size", "\n", "trainset_P", "=", "get_synthetic_positive", "(", "dataset_name", ",", "trainsize_P", ")", "\n", "trainset_U", "=", "get_synthetic_unlabeled", "(", "dataset_name", ",", "trainsize_U", ",", "prior", ")", "\n", "valset_P", "=", "get_synthetic_positive", "(", "dataset_name", ",", "valsize_P", ")", "\n", "valset_U", "=", "get_synthetic_unlabeled", "(", "dataset_name", ",", "valsize_U", ",", "prior", ")", "\n", "batch_num", "=", "len", "(", "trainset_U", ")", "//", "batch_size", "\n", "trainloader_P", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset_P", ",", "batch_size", "=", "len", "(", "trainset_P", ")", "//", "batch_num", ",", "shuffle", "=", "True", ",", "drop_last", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "trainloader_U", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset_U", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "valloader_P", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "valset_P", ",", "batch_size", "=", "len", "(", "valset_P", ")", "//", "batch_num", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ",", "num_workers", "=", "1", ")", "\n", "valloader_U", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "valset_U", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ",", "num_workers", "=", "1", ")", "\n", "return", "trainloader_P", ",", "trainloader_U", ",", "valloader_P", ",", "valloader_U", ",", "trainset_P", ",", "trainset_U", ",", "valset_P", ",", "valset_U", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_synthetic.load_testset": [[31, 35], ["dataset.get_synthetic_test", "torch.utils.data.DataLoader"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_synthetic_test"], ["", "def", "load_testset", "(", "dataset_name", ",", "test_size", ",", "batch_size", ",", "prior", ")", ":", "\n", "    ", "testset", "=", "get_synthetic_test", "(", "dataset_name", ",", "test_size", ",", "prior", ")", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ",", "num_workers", "=", "1", ")", "\n", "return", "testloader", ",", "testset", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_synthetic.uPU": [[39, 92], ["save.getdirs", "run_synthetic.load_trainset", "[].to", "torch.optim.Adam", "metric.PURiskEstimator", "metric.PURiskEstimator", "algorithm.ERM", "save.save_train_history", "save.output_train_results", "save.save_test_history", "enumerate", "save.output_config", "torch.device", "os.path.join", "dataset.Tensor_to_1darray", "modules.Kernel_MPE.KM2_estimate", "run_synthetic.load_testset", "testloaders.append", "testsets.append", "metric.choose_loss", "save.getdirs", "os.path.join", "os.path.join", "zip", "result.get", "result.get", "algorithm.find_boundary", "save.output_test_results", "save.append_test_results", "os.path.join", "torch.cuda.is_available", "os.getcwd", "numpy.array", "numpy.array", "model.parameters", "metric.choose_loss", "os.path.join", "testsets[].min_max", "os.path.join", "save.getdirs", "model.choose_model", "len", "os.path.join", "dataset.Tensor_to_1darray.", "dataset.Tensor_to_1darray."], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.load_trainset", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.ERM", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_train_history", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_train_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_test_history", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_config", "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.KM2_estimate", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.load_testset", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.choose_loss", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.find_boundary", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_test_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.append_test_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.choose_loss", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.min_max", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.choose_model"], ["", "def", "uPU", "(", "dataset_name", ",", "train_size", ",", "val_size", ",", "test_size", ",", "alpha", ",", "loss_name", ",", "max_epochs", ",", "batch_size", ",", "lr", ",", "true_train_prior", ",", "true_test_priors", ",", "device_num", ",", "res_dir", ",", "seed", ",", "id", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "device_num", ")", "if", "device_num", ">=", "0", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "res_dir", "=", "getdirs", "(", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "res_dir", ",", "\"uPU\"", ",", "dataset_name", ")", ")", "\n", "\n", "trainloader_P", ",", "trainloader_U", ",", "valloader_P", ",", "valloader_U", ",", "trainset_P", ",", "trainset_U", ",", "_", ",", "_", "=", "load_trainset", "(", "dataset_name", ",", "train_size", ",", "val_size", ",", "batch_size", ",", "true_train_prior", ")", "\n", "\n", "if", "alpha", "is", "None", ":", "\n", "        ", "trans", "=", "Tensor_to_1darray", "(", ")", "\n", "pos", "=", "np", ".", "array", "(", "[", "trans", "(", "x", ")", "for", "x", ",", "t", "in", "trainset_P", "]", ")", "[", ":", "2000", "]", "\n", "unl", "=", "np", ".", "array", "(", "[", "trans", "(", "x", ")", "for", "x", ",", "t", "in", "trainset_U", "]", ")", "[", ":", "2000", "]", "\n", "train_prior", "=", "KM2_estimate", "(", "pos", ",", "unl", ")", "\n", "", "else", ":", "\n", "        ", "train_prior", "=", "alpha", "\n", "\n", "", "testloaders", ",", "testsets", "=", "[", "]", ",", "[", "]", "\n", "for", "true_prior", "in", "true_test_priors", ":", "\n", "        ", "testloader", ",", "testset", "=", "load_testset", "(", "dataset_name", ",", "test_size", ",", "batch_size", ",", "true_prior", ")", "\n", "testloaders", ".", "append", "(", "testloader", ")", "\n", "testsets", ".", "append", "(", "testset", ")", "\n", "\n", "", "means", "=", "trainset_U", "[", ":", "]", "[", "0", "]", ".", "to", "(", "device", ")", "\n", "model", "=", "choose_model", "(", "dataset_name", ")", "(", "means", ")", ".", "to", "(", "device", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", "=", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "0.1", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "criterion", "=", "PURiskEstimator", "(", "train_prior", ",", "choose_loss", "(", "loss_name", ")", ")", "\n", "criterion_val", "=", "PURiskEstimator", "(", "train_prior", ",", "loss", "=", "choose_loss", "(", "\"zero-one\"", ")", ")", "\n", "\n", "model", ",", "train_result", ",", "test_results", "=", "ERM", "(", "\n", "model", "=", "model", ",", "\n", "optimizer", "=", "optimizer", ",", "\n", "trainloader_P", "=", "trainloader_P", ",", "\n", "trainloader_U", "=", "trainloader_U", ",", "\n", "valloader_P", "=", "valloader_P", ",", "\n", "valloader_U", "=", "valloader_U", ",", "\n", "testloaders", "=", "testloaders", ",", "\n", "criterion", "=", "criterion", ",", "\n", "criterion_val", "=", "criterion_val", ",", "\n", "max_epochs", "=", "max_epochs", ",", "\n", "device", "=", "device", ",", "\n", "given_thresholds", "=", "[", "0", "]", "*", "len", "(", "true_test_priors", ")", "\n", ")", "\n", "\n", "save_train_history", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"train\"", ",", "\"history_{}\"", ".", "format", "(", "id", ")", ")", ")", ",", "model", ",", "train_result", ")", "\n", "output_train_results", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "train_result", ",", "train_prior", ")", "\n", "save_test_history", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"train\"", ",", "\"history_{}\"", ".", "format", "(", "id", ")", ")", ",", "test_results", ")", "\n", "\n", "for", "i", ",", "(", "true_prior", ",", "result", ")", "in", "enumerate", "(", "zip", "(", "true_test_priors", ",", "test_results", ")", ")", ":", "\n", "        ", "acc", "=", "result", ".", "get", "(", "\"accuracy\"", ")", "\n", "auc", "=", "result", ".", "get", "(", "\"auc\"", ")", "\n", "boundary", "=", "find_boundary", "(", "model", ",", "testsets", "[", "i", "]", ".", "min_max", "(", ")", ",", "device", ")", "\n", "output_test_results", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "i", ",", "true_prior", ",", "acc", ",", "auc", ",", "boundary", "=", "boundary", ")", "\n", "append_test_results", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"test-{}\"", ".", "format", "(", "i", ")", ")", ")", ",", "acc", ",", "auc", ",", "boundary", "=", "boundary", ")", "\n", "\n", "", "output_config", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "train_size", ",", "val_size", ",", "max_epochs", ",", "batch_size", ",", "lr", ",", "alpha", ",", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_synthetic.DRPU": [[96, 146], ["save.getdirs", "run_synthetic.load_trainset", "[].to", "torch.optim.Adam", "metric.BregmanDivergence", "metric.BregmanDivergence", "algorithm.ERM", "algorithm.estimate_train_prior", "save.save_train_history", "save.save_test_history", "save.output_train_results", "enumerate", "save.output_config", "torch.device", "os.path.join", "run_synthetic.load_testset", "testloaders.append", "testsets.append", "metric.choose_loss", "metric.choose_loss", "save.getdirs", "os.path.join", "os.path.join", "zip", "result.get", "result.get", "result.get", "algorithm.find_boundary", "save.output_test_results", "save.append_test_results", "os.path.join", "torch.cuda.is_available", "os.getcwd", "model.parameters", "os.path.join", "testsets[].min_max", "os.path.join", "save.getdirs", "model.choose_model", "os.path.join"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.load_trainset", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.ERM", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.estimate_train_prior", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_train_history", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_test_history", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_train_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_config", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.load_testset", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.choose_loss", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.choose_loss", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.find_boundary", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_test_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.append_test_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.min_max", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.choose_model"], ["", "def", "DRPU", "(", "dataset_name", ",", "train_size", ",", "val_size", ",", "test_size", ",", "alpha", ",", "loss_name", ",", "max_epochs", ",", "batch_size", ",", "lr", ",", "true_train_prior", ",", "true_test_priors", ",", "device_num", ",", "res_dir", ",", "seed", ",", "id", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "device_num", ")", "if", "device_num", ">=", "0", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "res_dir", "=", "getdirs", "(", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "res_dir", ",", "\"DRPU\"", ",", "dataset_name", ")", ")", "\n", "\n", "trainloader_P", ",", "trainloader_U", ",", "valloader_P", ",", "valloader_U", ",", "_", ",", "trainset_U", ",", "_", ",", "_", "=", "load_trainset", "(", "dataset_name", ",", "train_size", ",", "val_size", ",", "batch_size", ",", "true_train_prior", ")", "\n", "\n", "testloaders", ",", "testsets", "=", "[", "]", ",", "[", "]", "\n", "for", "true_prior", "in", "true_test_priors", ":", "\n", "        ", "testloader", ",", "testset", "=", "load_testset", "(", "dataset_name", ",", "test_size", ",", "batch_size", ",", "true_prior", ")", "\n", "testloaders", ".", "append", "(", "testloader", ")", "\n", "testsets", ".", "append", "(", "testset", ")", "\n", "\n", "", "means", "=", "trainset_U", "[", ":", "]", "[", "0", "]", ".", "to", "(", "device", ")", "\n", "model", "=", "choose_model", "(", "dataset_name", ")", "(", "means", ",", "activate_output", "=", "True", ")", ".", "to", "(", "device", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", "=", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "0.1", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "criterion", "=", "BregmanDivergence", "(", "choose_loss", "(", "loss_name", ")", ")", "\n", "criterion_val", "=", "BregmanDivergence", "(", "choose_loss", "(", "loss_name", ")", ")", "\n", "\n", "model", ",", "train_result", ",", "test_results", "=", "ERM", "(", "\n", "model", "=", "model", ",", "\n", "optimizer", "=", "optimizer", ",", "\n", "trainloader_P", "=", "trainloader_P", ",", "\n", "trainloader_U", "=", "trainloader_U", ",", "\n", "valloader_P", "=", "valloader_P", ",", "\n", "valloader_U", "=", "valloader_U", ",", "\n", "testloaders", "=", "testloaders", ",", "\n", "criterion", "=", "criterion", ",", "\n", "criterion_val", "=", "criterion_val", ",", "\n", "max_epochs", "=", "max_epochs", ",", "\n", "device", "=", "device", ",", "\n", "given_thresholds", "=", "None", "\n", ")", "\n", "\n", "train_prior", ",", "preds_P", "=", "estimate_train_prior", "(", "model", ",", "valloader_P", ",", "valloader_U", ",", "device", ")", "\n", "\n", "save_train_history", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"train\"", ",", "\"history_{}\"", ".", "format", "(", "id", ")", ")", ")", ",", "model", ",", "train_result", ")", "\n", "save_test_history", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"train\"", ",", "\"history_{}\"", ".", "format", "(", "id", ")", ")", ",", "test_results", ")", "\n", "output_train_results", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "train_result", ",", "train_prior", ")", "\n", "\n", "for", "i", ",", "(", "true_prior", ",", "result", ")", "in", "enumerate", "(", "zip", "(", "true_test_priors", ",", "test_results", ")", ")", ":", "\n", "        ", "acc", "=", "result", ".", "get", "(", "\"accuracy\"", ")", "\n", "auc", "=", "result", ".", "get", "(", "\"auc\"", ")", "\n", "test_prior", "=", "result", ".", "get", "(", "\"prior\"", ")", "\n", "thresh", "=", "train_prior", "*", "(", "1", "-", "test_prior", ")", "/", "(", "(", "1", "-", "train_prior", ")", "*", "test_prior", "+", "train_prior", "*", "(", "1", "-", "test_prior", ")", ")", "\n", "thresh", "/=", "train_prior", "\n", "boundary", "=", "find_boundary", "(", "model", ",", "testsets", "[", "i", "]", ".", "min_max", "(", ")", ",", "device", ",", "thresh", ")", "\n", "output_test_results", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "i", ",", "true_prior", ",", "acc", ",", "auc", ",", "test_prior", ",", "boundary", "=", "boundary", ")", "\n", "append_test_results", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"test-{}\"", ".", "format", "(", "i", ")", ")", ")", ",", "acc", ",", "auc", ",", "test_prior", ",", "boundary", "=", "boundary", ")", "\n", "\n", "", "output_config", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "train_size", ",", "val_size", ",", "max_epochs", ",", "batch_size", ",", "lr", ",", "alpha", ",", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.ImageDataset.__init__": [[9, 26], ["numpy.array", "dataset.ImageDataset.prior_shift", "dataset.ImageDataset.assign_positive", "numpy.max", "dataset.ImageDataset.__len__", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.ImageDataset.prior_shift", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.ImageDataset.assign_positive", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.__len__"], ["def", "__init__", "(", "self", ",", "num_labeled", "=", "0", ",", "prior", "=", "None", ",", "indices", "=", "None", ",", "train", "=", "True", ")", ":", "\n", "        ", "self", ".", "dataset_type", "=", "\"Image\"", "\n", "if", "indices", "is", "not", "None", ":", "\n", "            ", "assert", "np", ".", "max", "(", "indices", ")", "<", "self", ".", "__len__", "(", ")", "\n", "self", ".", "data", "=", "self", ".", "data", "[", "indices", "]", "\n", "self", ".", "targets", "=", "np", ".", "array", "(", "self", ".", "targets", ")", "[", "indices", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "targets", "=", "np", ".", "array", "(", "self", ".", "targets", ")", "\n", "# prior shift", "\n", "", "if", "prior", "is", "not", "None", ":", "\n", "            ", "assert", "0", "<", "prior", "<", "1", "\n", "self", ".", "prior_shift", "(", "prior", ")", "\n", "", "if", "num_labeled", ">", "0", ":", "\n", "            ", "self", ".", "assign_positive", "(", "num_labeled", ")", "\n", "", "if", "train", "is", "False", ":", "\n", "            ", "self", ".", "data", "=", "self", ".", "data", "[", ":", "5000", "]", "\n", "self", ".", "targets", "=", "self", ".", "targets", "[", ":", "5000", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.ImageDataset.assign_positive": [[27, 35], ["numpy.vectorize", "numpy.random.shuffle", "numpy.where", "len", "numpy.array", "numpy.vectorize."], "methods", ["None"], ["", "", "def", "assign_positive", "(", "self", ",", "num_labeled", ")", ":", "\n", "        ", "isPositive", "=", "np", ".", "vectorize", "(", "lambda", "x", ":", "x", "in", "ImageDataset", ".", "pos_labels", ")", "\n", "indices", "=", "np", ".", "where", "(", "isPositive", "(", "self", ".", "targets", ")", "==", "True", ")", "[", "0", "]", "\n", "assert", "num_labeled", "<=", "len", "(", "indices", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "indices", "=", "indices", "[", ":", "num_labeled", "]", "\n", "self", ".", "data", "=", "self", ".", "data", "[", "indices", "]", "\n", "self", ".", "targets", "=", "np", ".", "array", "(", "self", ".", "targets", ")", "[", "indices", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.ImageDataset.prior_shift": [[36, 51], ["numpy.vectorize", "numpy.random.shuffle", "numpy.random.shuffle", "numpy.concatenate", "numpy.random.shuffle", "numpy.where", "numpy.where", "len", "dataset.ImageDataset.__len__", "numpy.vectorize.", "numpy.vectorize.", "int", "int", "len", "len"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.__len__"], ["", "def", "prior_shift", "(", "self", ",", "prior", ")", ":", "\n", "        ", "isPositive", "=", "np", ".", "vectorize", "(", "lambda", "x", ":", "x", "in", "ImageDataset", ".", "pos_labels", ")", "\n", "pos_indices", "=", "np", ".", "where", "(", "isPositive", "(", "self", ".", "targets", ")", "==", "True", ")", "[", "0", "]", "\n", "neg_indices", "=", "np", ".", "where", "(", "isPositive", "(", "self", ".", "targets", ")", "==", "False", ")", "[", "0", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "pos_indices", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "neg_indices", ")", "\n", "prior_of_dataset", "=", "len", "(", "pos_indices", ")", "/", "self", ".", "__len__", "(", ")", "\n", "if", "prior", "<", "prior_of_dataset", ":", "\n", "            ", "pos_indices", "=", "pos_indices", "[", ":", "int", "(", "prior", "/", "(", "1", "-", "prior", ")", "*", "len", "(", "neg_indices", ")", ")", "]", "\n", "", "else", ":", "\n", "            ", "neg_indices", "=", "neg_indices", "[", ":", "int", "(", "(", "1", "-", "prior", ")", "/", "prior", "*", "len", "(", "pos_indices", ")", ")", "]", "\n", "", "indices", "=", "np", ".", "concatenate", "(", "[", "pos_indices", ",", "neg_indices", "]", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "self", ".", "data", "=", "self", ".", "data", "[", "indices", "]", "\n", "self", ".", "targets", "=", "self", ".", "targets", "[", "indices", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.MNIST.__init__": [[54, 57], ["torchvision.datasets.MNIST.__init__", "dataset.ImageDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "num_labeled", "=", "0", ",", "prior", "=", "None", ",", "indices", "=", "None", ",", "train", "=", "True", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "download", "=", "True", ")", ":", "\n", "        ", "torchvision", ".", "datasets", ".", "MNIST", ".", "__init__", "(", "self", ",", "root", "=", "root", ",", "train", "=", "train", ",", "transform", "=", "transform", ",", "target_transform", "=", "target_transform", ",", "download", "=", "download", ")", "\n", "ImageDataset", ".", "__init__", "(", "self", ",", "num_labeled", ",", "prior", ",", "indices", ",", "train", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.FashionMNIST.__init__": [[60, 63], ["torchvision.datasets.FashionMNIST.__init__", "dataset.ImageDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "num_labeled", "=", "0", ",", "prior", "=", "None", ",", "indices", "=", "None", ",", "train", "=", "True", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "download", "=", "True", ")", ":", "\n", "        ", "torchvision", ".", "datasets", ".", "FashionMNIST", ".", "__init__", "(", "self", ",", "root", "=", "root", ",", "train", "=", "train", ",", "transform", "=", "transform", ",", "target_transform", "=", "target_transform", ",", "download", "=", "download", ")", "\n", "ImageDataset", ".", "__init__", "(", "self", ",", "num_labeled", ",", "prior", ",", "indices", ",", "train", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.KMNIST.__init__": [[66, 69], ["torchvision.datasets.KMNIST.__init__", "dataset.ImageDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "num_labeled", "=", "0", ",", "prior", "=", "None", ",", "indices", "=", "None", ",", "train", "=", "True", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "download", "=", "True", ")", ":", "\n", "        ", "torchvision", ".", "datasets", ".", "KMNIST", ".", "__init__", "(", "self", ",", "root", "=", "root", ",", "train", "=", "train", ",", "transform", "=", "transform", ",", "target_transform", "=", "target_transform", ",", "download", "=", "download", ")", "\n", "ImageDataset", ".", "__init__", "(", "self", ",", "num_labeled", ",", "prior", ",", "indices", ",", "train", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.CIFAR10.__init__": [[72, 75], ["torchvision.datasets.CIFAR10.__init__", "dataset.ImageDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "num_labeled", "=", "0", ",", "prior", "=", "None", ",", "indices", "=", "None", ",", "train", "=", "True", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "download", "=", "True", ")", ":", "\n", "        ", "torchvision", ".", "datasets", ".", "CIFAR10", ".", "__init__", "(", "self", ",", "root", "=", "root", ",", "train", "=", "train", ",", "transform", "=", "transform", ",", "target_transform", "=", "target_transform", ",", "download", "=", "download", ")", "\n", "ImageDataset", ".", "__init__", "(", "self", ",", "num_labeled", ",", "prior", ",", "indices", ",", "train", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.__init__": [[78, 84], ["dataset.SyntheticDataset.generate"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.generate"], ["    ", "def", "__init__", "(", "self", ",", "num", ",", "prior", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "prior", "=", "prior", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "# self.rng = np.random.default_rng()", "\n", "self", ".", "generate", "(", "num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.__len__": [[85, 87], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "targets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.__getitem__": [[88, 92], ["dataset.SyntheticDataset.transform", "dataset.SyntheticDataset.target_transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "instance", "=", "self", ".", "data", "[", "idx", "]", "if", "self", ".", "transform", "is", "None", "else", "self", ".", "transform", "(", "self", ".", "data", "[", "idx", "]", ")", "\n", "label", "=", "self", ".", "targets", "[", "idx", "]", "if", "self", ".", "target_transform", "is", "None", "else", "self", ".", "target_transform", "(", "self", ".", "targets", "[", "idx", "]", ")", "\n", "return", "instance", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.min_max": [[93, 95], ["dataset.SyntheticDataset.data.min", "dataset.SyntheticDataset.data.max"], "methods", ["None"], ["", "def", "min_max", "(", "self", ")", ":", "\n", "        ", "return", "(", "self", ".", "data", ".", "min", "(", ")", ",", "self", ".", "data", ".", "max", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.generate": [[96, 103], ["int", "dataset.SyntheticDataset.random_positives", "dataset.SyntheticDataset.random_negatives", "numpy.concatenate", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.Gaussian_Mixture.random_positives", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.Gaussian_Mixture.random_negatives"], ["", "def", "generate", "(", "self", ",", "num", ")", ":", "\n", "        ", "num_P", "=", "int", "(", "num", "*", "self", ".", "prior", ")", "\n", "num_N", "=", "num", "-", "num_P", "\n", "positives", "=", "self", ".", "random_positives", "(", "num_P", ")", "\n", "negatives", "=", "self", ".", "random_negatives", "(", "num_N", ")", "\n", "self", ".", "data", "=", "np", ".", "concatenate", "(", "[", "positives", ",", "negatives", "]", ")", "\n", "self", ".", "targets", "=", "np", ".", "array", "(", "[", "1", "]", "*", "num_P", "+", "[", "-", "1", "]", "*", "num_N", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.base1": [[104, 108], ["numpy.random.normal"], "methods", ["None"], ["", "def", "base1", "(", "self", ",", "num", "=", "1", ")", ":", "\n", "        ", "mean", "=", "1", "\n", "var", "=", "1", "\n", "return", "np", ".", "random", ".", "normal", "(", "mean", ",", "var", ",", "(", "num", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.base2": [[109, 113], ["numpy.random.normal"], "methods", ["None"], ["", "def", "base2", "(", "self", ",", "num", "=", "1", ")", ":", "\n", "        ", "mean", "=", "-", "1", "\n", "var", "=", "1", "\n", "return", "np", ".", "random", ".", "normal", "(", "mean", ",", "var", ",", "(", "num", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.Gaussian.random_positives": [[116, 119], ["numpy.concatenate", "dataset.Gaussian.base1", "dataset.Gaussian.base2", "int", "int"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.base1", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.base2"], ["    ", "def", "random_positives", "(", "self", ",", "num", ")", ":", "\n", "        ", "theta", "=", "1", "\n", "return", "np", ".", "concatenate", "(", "[", "self", ".", "base1", "(", "int", "(", "num", "*", "theta", ")", ")", ",", "self", ".", "base2", "(", "num", "-", "int", "(", "num", "*", "theta", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.Gaussian.random_negatives": [[120, 123], ["numpy.concatenate", "dataset.Gaussian.base1", "dataset.Gaussian.base2", "int", "int"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.base1", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.base2"], ["", "def", "random_negatives", "(", "self", ",", "num", ")", ":", "\n", "        ", "theta", "=", "0", "\n", "return", "np", ".", "concatenate", "(", "[", "self", ".", "base1", "(", "int", "(", "num", "*", "theta", ")", ")", ",", "self", ".", "base2", "(", "num", "-", "int", "(", "num", "*", "theta", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.Gaussian_Mixture.random_positives": [[126, 129], ["numpy.concatenate", "dataset.Gaussian_Mixture.base1", "dataset.Gaussian_Mixture.base2", "int", "int"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.base1", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.base2"], ["    ", "def", "random_positives", "(", "self", ",", "num", ")", ":", "\n", "        ", "theta", "=", "0.8", "\n", "return", "np", ".", "concatenate", "(", "[", "self", ".", "base1", "(", "int", "(", "num", "*", "theta", ")", ")", ",", "self", ".", "base2", "(", "num", "-", "int", "(", "num", "*", "theta", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.Gaussian_Mixture.random_negatives": [[130, 133], ["numpy.concatenate", "dataset.Gaussian_Mixture.base1", "dataset.Gaussian_Mixture.base2", "int", "int"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.base1", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.SyntheticDataset.base2"], ["", "def", "random_negatives", "(", "self", ",", "num", ")", ":", "\n", "        ", "theta", "=", "0.2", "\n", "return", "np", ".", "concatenate", "(", "[", "self", ".", "base1", "(", "int", "(", "num", "*", "theta", ")", ")", ",", "self", ".", "base2", "(", "num", "-", "int", "(", "num", "*", "theta", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.ndarray_to_Tensor.__init__": [[136, 138], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.ndarray_to_Tensor.__call__": [[139, 141], ["torch.from_numpy().float", "torch.from_numpy"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "torch", ".", "from_numpy", "(", "x", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.to_1dTensor.__call__": [[144, 146], ["x.view"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "view", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.Tensor_to_1darray.__init__": [[149, 151], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.Tensor_to_1darray.__call__": [[152, 157], ["isinstance", "x.view().detach().numpy().copy", "x.view().detach().numpy", "x.view().detach", "x.view"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "isinstance", "(", "x", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "return", "x", "\n", "", "else", ":", "\n", "            ", "return", "x", ".", "view", "(", "-", "1", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.choose_image_dataset": [[159, 167], ["None"], "function", ["None"], ["", "", "", "def", "choose_image_dataset", "(", "dataset_name", ")", ":", "\n", "    ", "datasets", "=", "{", "\n", "\"mnist\"", ":", "MNIST", ",", "\n", "\"fmnist\"", ":", "FashionMNIST", ",", "\n", "\"kmnist\"", ":", "KMNIST", ",", "\n", "\"cifar\"", ":", "CIFAR10", "\n", "}", "\n", "return", "datasets", "[", "dataset_name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.choose_synthetic_dataset": [[169, 175], ["None"], "function", ["None"], ["", "def", "choose_synthetic_dataset", "(", "dataset_name", ")", ":", "\n", "    ", "datasets", "=", "{", "\n", "\"gauss\"", ":", "Gaussian", ",", "\n", "\"gauss_mix\"", ":", "Gaussian_Mixture", "\n", "}", "\n", "return", "datasets", "[", "dataset_name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_image_positive": [[177, 181], ["torchvision.transforms.ToTensor", "torchvision.transforms.Lambda", "dataset.choose_image_dataset"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.choose_image_dataset"], ["", "def", "get_image_positive", "(", "dataset_name", ",", "num_labeled", ",", "indices", "=", "None", ",", "root", "=", "\"dataset\"", ")", ":", "\n", "    ", "transform", "=", "torchvision", ".", "transforms", ".", "ToTensor", "(", ")", "\n", "target_transform", "=", "torchvision", ".", "transforms", ".", "Lambda", "(", "lambda", "x", ":", "1", ")", "\n", "return", "choose_image_dataset", "(", "dataset_name", ")", "(", "root", ",", "num_labeled", ",", "indices", "=", "indices", ",", "train", "=", "True", ",", "transform", "=", "transform", ",", "target_transform", "=", "target_transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_image_unlabeled": [[183, 187], ["torchvision.transforms.ToTensor", "torchvision.transforms.Lambda", "dataset.choose_image_dataset"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.choose_image_dataset"], ["", "def", "get_image_unlabeled", "(", "dataset_name", ",", "indices", "=", "None", ",", "root", "=", "\"dataset\"", ")", ":", "\n", "    ", "transform", "=", "torchvision", ".", "transforms", ".", "ToTensor", "(", ")", "\n", "target_transform", "=", "torchvision", ".", "transforms", ".", "Lambda", "(", "lambda", "x", ":", "-", "1", ")", "\n", "return", "choose_image_dataset", "(", "dataset_name", ")", "(", "root", ",", "indices", "=", "indices", ",", "train", "=", "True", ",", "transform", "=", "transform", ",", "target_transform", "=", "target_transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_image_test": [[189, 193], ["torchvision.transforms.ToTensor", "torchvision.transforms.Lambda", "dataset.choose_image_dataset"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.choose_image_dataset"], ["", "def", "get_image_test", "(", "dataset_name", ",", "prior", ",", "indices", "=", "None", ",", "root", "=", "\"dataset\"", ")", ":", "\n", "    ", "transform", "=", "torchvision", ".", "transforms", ".", "ToTensor", "(", ")", "\n", "target_transform", "=", "torchvision", ".", "transforms", ".", "Lambda", "(", "lambda", "x", ":", "1", "if", "x", "in", "ImageDataset", ".", "pos_labels", "else", "-", "1", ")", "\n", "return", "choose_image_dataset", "(", "dataset_name", ")", "(", "root", ",", "prior", "=", "prior", ",", "indices", "=", "indices", ",", "train", "=", "False", ",", "transform", "=", "transform", ",", "target_transform", "=", "target_transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_synthetic_positive": [[195, 199], ["dataset.ndarray_to_Tensor", "torchvision.transforms.Lambda", "dataset.choose_synthetic_dataset"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.choose_synthetic_dataset"], ["", "def", "get_synthetic_positive", "(", "dataset_name", ",", "num", ")", ":", "\n", "    ", "transform", "=", "ndarray_to_Tensor", "(", ")", "\n", "target_transform", "=", "torchvision", ".", "transforms", ".", "Lambda", "(", "lambda", "x", ":", "1", ")", "\n", "return", "choose_synthetic_dataset", "(", "dataset_name", ")", "(", "num", ",", "prior", "=", "1", ",", "transform", "=", "transform", ",", "target_transform", "=", "target_transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_synthetic_unlabeled": [[201, 205], ["dataset.ndarray_to_Tensor", "torchvision.transforms.Lambda", "dataset.choose_synthetic_dataset"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.choose_synthetic_dataset"], ["", "def", "get_synthetic_unlabeled", "(", "dataset_name", ",", "num", ",", "prior", ")", ":", "\n", "    ", "transform", "=", "ndarray_to_Tensor", "(", ")", "\n", "target_transform", "=", "torchvision", ".", "transforms", ".", "Lambda", "(", "lambda", "x", ":", "-", "1", ")", "\n", "return", "choose_synthetic_dataset", "(", "dataset_name", ")", "(", "num", ",", "prior", ",", "transform", "=", "transform", ",", "target_transform", "=", "target_transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_synthetic_test": [[207, 211], ["dataset.ndarray_to_Tensor", "dataset.choose_synthetic_dataset"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.choose_synthetic_dataset"], ["", "def", "get_synthetic_test", "(", "dataset_name", ",", "num", ",", "prior", ")", ":", "\n", "    ", "transform", "=", "ndarray_to_Tensor", "(", ")", "\n", "target_transform", "=", "None", "\n", "return", "choose_synthetic_dataset", "(", "dataset_name", ")", "(", "num", ",", "prior", ",", "transform", "=", "transform", ",", "target_transform", "=", "target_transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.__init__": [[8, 12], ["dict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "keys", ")", ":", "\n", "        ", "self", ".", "map", "=", "dict", "(", ")", "\n", "for", "k", "in", "keys", ":", "\n", "            ", "self", ".", "map", "[", "k", "]", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append": [[13, 15], ["save.Results.map[].append"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append"], ["", "", "def", "append", "(", "self", ",", "key", ",", "value", ")", ":", "\n", "        ", "self", ".", "map", "[", "key", "]", ".", "append", "(", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get": [[16, 18], ["save.Results.map.get"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get"], ["", "def", "get", "(", "self", ",", "key", ",", "index", "=", "-", "1", ")", ":", "\n", "        ", "return", "self", ".", "map", ".", "get", "(", "key", ",", "[", "0", "]", ")", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.empty": [[19, 21], ["len"], "methods", ["None"], ["", "def", "empty", "(", "self", ",", "key", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "map", "[", "key", "]", ")", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean": [[22, 24], ["numpy.array().mean", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean"], ["", "def", "mean", "(", "self", ",", "key", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "self", ".", "map", "[", "key", "]", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.stdev": [[25, 27], ["numpy.array().std", "numpy.array"], "methods", ["None"], ["", "def", "stdev", "(", "self", ",", "key", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "self", ".", "map", "[", "key", "]", ")", ".", "std", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.save": [[28, 33], ["numpy.savetxt", "numpy.savetxt", "os.path.join", "numpy.array", "os.path.join", "numpy.array"], "methods", ["None"], ["", "def", "save", "(", "self", ",", "key", ",", "path", ",", "index", "=", "None", ")", ":", "\n", "        ", "if", "index", "is", "None", ":", "\n", "            ", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"{}.csv\"", ".", "format", "(", "key", ")", ")", ",", "np", ".", "array", "(", "self", ".", "map", "[", "key", "]", ")", ",", "encoding", "=", "\"utf-8\"", ")", "\n", "", "else", ":", "\n", "            ", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"{}-{}.csv\"", ".", "format", "(", "key", ",", "index", ")", ")", ",", "np", ".", "array", "(", "self", ".", "map", "[", "key", "]", ")", ",", "encoding", "=", "\"utf-8\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.saveall": [[34, 38], ["save.Results.map.keys", "len", "save.Results.save"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.save"], ["", "", "def", "saveall", "(", "self", ",", "path", ",", "index", "=", "None", ")", ":", "\n", "        ", "for", "key", "in", "self", ".", "map", ".", "keys", "(", ")", ":", "\n", "            ", "if", "len", "(", "self", ".", "map", "[", "key", "]", ")", ">", "0", ":", "\n", "                ", "self", ".", "save", "(", "key", ",", "path", ",", "index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.plot": [[39, 52], ["matplotlib.figure", "matplotlib.figure.add_subplot", "plt.figure.add_subplot.set_xlabel", "plt.figure.add_subplot.set_ylabel", "plt.figure.add_subplot.grid", "plt.figure.add_subplot.legend", "matplotlib.figure.savefig", "matplotlib.clf", "matplotlib.close", "plt.figure.add_subplot.plot", "numpy.arange", "numpy.array", "len"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.plot"], ["", "", "", "def", "plot", "(", "self", ",", "keys", ",", "path", ",", "xlabel", "=", "'Epoch'", ",", "ylabel", "=", "'Loss'", ",", "marker", "=", "None", ")", ":", "\n", "# plt.style.use(['seaborn-colorblind'])", "\n", "        ", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "111", ")", "\n", "ax", ".", "set_xlabel", "(", "xlabel", ")", "\n", "ax", ".", "set_ylabel", "(", "ylabel", ")", "\n", "ax", ".", "grid", "(", ")", "\n", "for", "key", "in", "keys", ":", "\n", "            ", "ax", ".", "plot", "(", "np", ".", "arange", "(", "1", ",", "1", "+", "len", "(", "self", ".", "map", "[", "key", "]", ")", ",", "1", ")", ",", "np", ".", "array", "(", "self", ".", "map", "[", "key", "]", ")", ",", "marker", "=", "marker", ",", "label", "=", "key", ")", "\n", "", "ax", ".", "legend", "(", "loc", "=", "\"best\"", ")", "\n", "fig", ".", "savefig", "(", "path", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.plotall": [[53, 55], ["save.Results.plot", "save.Results.map.keys"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.plot"], ["", "def", "plotall", "(", "self", ",", "path", ",", "xlabel", "=", "\"Epoch\"", ",", "ylabel", "=", "\"Loss\"", ",", "marker", "=", "None", ")", ":", "\n", "        ", "self", ".", "plot", "(", "self", ".", "map", ".", "keys", "(", ")", ",", "path", ",", "xlabel", ",", "ylabel", ",", "marker", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_model": [[57, 59], ["torch.save", "model.state_dict", "os.path.join"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.save"], ["", "", "def", "save_model", "(", "model", ",", "path", ")", ":", "\n", "    ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "path", ",", "\"checkpoint.pth.tar\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_train_history": [[61, 65], ["history.saveall", "history.plotall", "save.save_model"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.saveall", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.plotall", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_model"], ["", "def", "save_train_history", "(", "path", ",", "model", ",", "history", ")", ":", "\n", "    ", "history", ".", "saveall", "(", "path", ")", "\n", "history", ".", "plotall", "(", "path", ")", "\n", "save_model", "(", "model", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_test_history": [[67, 70], ["enumerate", "history.saveall"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.saveall"], ["", "def", "save_test_history", "(", "path", ",", "histories", ")", ":", "\n", "    ", "for", "i", ",", "history", "in", "enumerate", "(", "histories", ")", ":", "\n", "        ", "history", ".", "saveall", "(", "path", ",", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_train_results": [[72, 80], ["history.get", "history.get", "open", "print", "print", "print", "print", "print"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get"], ["", "", "def", "output_train_results", "(", "path", ",", "history", ",", "prior", ")", ":", "\n", "    ", "train_loss", ",", "validation_loss", "=", "history", ".", "get", "(", "\"train_loss\"", ")", ",", "history", ".", "get", "(", "\"validation_loss\"", ")", "\n", "with", "open", "(", "path", ",", "mode", "=", "'a'", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "        ", "print", "(", "\"--Training result--\\n\"", ",", "file", "=", "f", ")", "\n", "print", "(", "\"Train loss : {:.9f}\"", ".", "format", "(", "train_loss", ")", ",", "file", "=", "f", ")", "\n", "print", "(", "\"Validation loss : {:.9f}\"", ".", "format", "(", "validation_loss", ")", ",", "file", "=", "f", ")", "\n", "print", "(", "\"Training Prior : {:.6f}\"", ".", "format", "(", "prior", ")", ",", "file", "=", "f", ")", "\n", "print", "(", "\"\"", ",", "file", "=", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_test_results": [[82, 96], ["open", "print", "print", "print", "print", "print", "print", "print", "print"], "function", ["None"], ["", "", "def", "output_test_results", "(", "path", ",", "test_idx", ",", "true_prior", ",", "acc", ",", "auc", ",", "prior", "=", "None", ",", "thresh", "=", "None", ",", "boundary", "=", "None", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "mode", "=", "'a'", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "        ", "if", "test_idx", "==", "0", ":", "\n", "            ", "print", "(", "\"--Test result---\\n\"", ",", "file", "=", "f", ")", "\n", "", "print", "(", "\"Test {} : Dataset prior = {}\"", ".", "format", "(", "test_idx", ",", "true_prior", ")", ",", "file", "=", "f", ")", "\n", "print", "(", "\"Accuracy : {:.6f}\"", ".", "format", "(", "acc", ")", ",", "file", "=", "f", ")", "\n", "print", "(", "\"AUC : {:.6f}\"", ".", "format", "(", "auc", ")", ",", "file", "=", "f", ")", "\n", "if", "prior", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"Prior : {:.6f}\"", ".", "format", "(", "prior", ")", ",", "file", "=", "f", ")", "\n", "", "if", "thresh", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"Thresh : {:.6f}\"", ".", "format", "(", "thresh", ")", ",", "file", "=", "f", ")", "\n", "", "if", "boundary", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"Boundary : {:.6f}\"", ".", "format", "(", "boundary", ")", ",", "file", "=", "f", ")", "\n", "", "print", "(", "\"\"", ",", "file", "=", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.append_test_results": [[98, 112], ["open", "print", "open", "print", "os.path.join", "os.path.join", "open", "print", "open", "print", "open", "print", "os.path.join", "os.path.join", "os.path.join"], "function", ["None"], ["", "", "def", "append_test_results", "(", "path", ",", "acc", ",", "auc", ",", "prior", "=", "None", ",", "thresh", "=", "None", ",", "boundary", "=", "None", ")", ":", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"accuracy.txt\"", ")", ",", "mode", "=", "'a'", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "        ", "print", "(", "acc", ",", "file", "=", "f", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"auc.txt\"", ")", ",", "mode", "=", "'a'", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "        ", "print", "(", "auc", ",", "file", "=", "f", ")", "\n", "", "if", "prior", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"prior.txt\"", ")", ",", "mode", "=", "'a'", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "            ", "print", "(", "prior", ",", "file", "=", "f", ")", "\n", "", "", "if", "thresh", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"thresh.txt\"", ")", ",", "mode", "=", "'a'", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "            ", "print", "(", "thresh", ",", "file", "=", "f", ")", "\n", "", "", "if", "boundary", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"boundary.txt\"", ")", ",", "mode", "=", "'a'", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "            ", "print", "(", "boundary", ",", "file", "=", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_config": [[114, 124], ["open", "print", "print", "print", "print", "print", "print", "print", "print"], "function", ["None"], ["", "", "", "def", "output_config", "(", "path", ",", "train_size", ",", "val_size", ",", "max_epochs", ",", "batch_size", ",", "lr", ",", "alpha", ",", "seed", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "mode", "=", "'a'", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "        ", "print", "(", "\"--Parameters--\"", ",", "file", "=", "f", ")", "\n", "print", "(", "\"train_size = {}\"", ".", "format", "(", "train_size", ")", ",", "file", "=", "f", ")", "\n", "print", "(", "\"validation_size = {}\"", ".", "format", "(", "val_size", ")", ",", "file", "=", "f", ")", "\n", "print", "(", "\"max_epochs = {}\"", ".", "format", "(", "max_epochs", ")", ",", "file", "=", "f", ")", "\n", "print", "(", "\"batch_size = {}\"", ".", "format", "(", "batch_size", ")", ",", "file", "=", "f", ")", "\n", "print", "(", "\"lr = {}\"", ".", "format", "(", "lr", ")", ",", "file", "=", "f", ")", "\n", "print", "(", "\"alpha = {}\"", ".", "format", "(", "alpha", ")", ",", "file", "=", "f", ")", "\n", "print", "(", "\"random seed = {}\"", ".", "format", "(", "seed", ")", ",", "file", "=", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs": [[126, 129], ["os.makedirs"], "function", ["None"], ["", "", "def", "getdirs", "(", "dir_path", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "dir_path", ",", "exist_ok", "=", "True", ")", "\n", "return", "dir_path", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.GaussianBasisFunctions.__init__": [[8, 11], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "means", ",", "var", "=", "1.0", ")", ":", "\n", "        ", "self", ".", "means", "=", "means", "\n", "self", ".", "var", "=", "var", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.GaussianBasisFunctions.__call__": [[12, 16], ["x.view.view.size", "x.view.view.view", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "in_size", "=", "x", ".", "size", "(", "0", ")", "\n", "x", "=", "x", ".", "view", "(", "in_size", ",", "1", ",", "-", "1", ")", "\n", "return", "torch", ".", "exp", "(", "-", "torch", ".", "sum", "(", "(", "x", "-", "self", ".", "means", ")", "**", "2", ",", "2", ")", "/", "(", "2", "*", "self", ".", "var", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.LinearClassifier.__init__": [[19, 25], ["torch.Module.__init__", "model.GaussianBasisFunctions", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Softplus", "torch.Softplus", "torch.Softplus", "means.size"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__"], ["    ", "def", "__init__", "(", "self", ",", "means", ",", "activate_output", "=", "False", ")", ":", "\n", "        ", "super", "(", "LinearClassifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "basis", "=", "GaussianBasisFunctions", "(", "means", ")", "\n", "self", ".", "l1", "=", "nn", ".", "Linear", "(", "means", ".", "size", "(", "0", ")", ",", "1", ")", "\n", "self", ".", "af", "=", "nn", ".", "Softplus", "(", ")", "\n", "self", ".", "activate_output", "=", "activate_output", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.LinearClassifier.forward": [[26, 32], ["model.LinearClassifier.basis", "model.LinearClassifier.l1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "basis", "(", "x", ")", "\n", "x", "=", "self", ".", "l1", "(", "x", ")", "\n", "#if self.activate_output:", "\n", "#    x = self.af(x)", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.LinearClassifier.reweight": [[33, 35], ["None"], "methods", ["None"], ["", "def", "reweight", "(", "self", ")", ":", "\n", "        ", "self", ".", "l1", ".", "weight", ".", "data", "[", "self", ".", "l1", ".", "weight", ".", "data", "<", "0", "]", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.UnivariateNet.__init__": [[38, 45], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Softplus", "torch.Softplus", "torch.Softplus"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__"], ["    ", "def", "__init__", "(", "self", ",", "activate_output", "=", "False", ",", "dim", "=", "1", ")", ":", "\n", "        ", "super", "(", "UnivariateNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "l1", "=", "nn", ".", "Linear", "(", "dim", ",", "4", ",", "bias", "=", "True", ")", "\n", "self", ".", "l2", "=", "nn", ".", "Linear", "(", "4", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "af1", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "af2", "=", "nn", ".", "Softplus", "(", ")", "\n", "self", ".", "activate_output", "=", "activate_output", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.UnivariateNet.forward": [[46, 52], ["model.UnivariateNet.af1", "model.UnivariateNet.l2", "model.UnivariateNet.l1", "model.UnivariateNet.af2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "af1", "(", "self", ".", "l1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "l2", "(", "x", ")", "\n", "if", "self", ".", "activate_output", ":", "\n", "            ", "x", "=", "self", ".", "af2", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.MultiLayerPerceptron.__init__": [[55, 66], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", "=", "784", ",", "activate_output", "=", "False", ")", ":", "\n", "        ", "super", "(", "MultiLayerPerceptron", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "l1", "=", "nn", ".", "Linear", "(", "dim", ",", "300", ")", "\n", "self", ".", "l2", "=", "nn", ".", "Linear", "(", "300", ",", "300", ")", "\n", "self", ".", "l3", "=", "nn", ".", "Linear", "(", "300", ",", "300", ")", "\n", "self", ".", "l4", "=", "nn", ".", "Linear", "(", "300", ",", "1", ")", "\n", "self", ".", "b1", "=", "nn", ".", "BatchNorm1d", "(", "300", ")", "\n", "self", ".", "b2", "=", "nn", ".", "BatchNorm1d", "(", "300", ")", "\n", "self", ".", "b3", "=", "nn", ".", "BatchNorm1d", "(", "300", ")", "\n", "self", ".", "af", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "activate_output", "=", "activate_output", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.MultiLayerPerceptron.forward": [[67, 76], ["model.MultiLayerPerceptron.reshape", "model.MultiLayerPerceptron.af", "model.MultiLayerPerceptron.af", "model.MultiLayerPerceptron.af", "model.MultiLayerPerceptron.l4", "model.MultiLayerPerceptron.size", "model.MultiLayerPerceptron.b1", "model.MultiLayerPerceptron.b2", "model.MultiLayerPerceptron.b3", "model.MultiLayerPerceptron.af", "model.MultiLayerPerceptron.l1", "model.MultiLayerPerceptron.l2", "model.MultiLayerPerceptron.l3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "reshape", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "af", "(", "self", ".", "b1", "(", "self", ".", "l1", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "af", "(", "self", ".", "b2", "(", "self", ".", "l2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "af", "(", "self", ".", "b3", "(", "self", ".", "l3", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "l4", "(", "x", ")", "\n", "if", "self", ".", "activate_output", ":", "\n", "            ", "x", "=", "self", ".", "af", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.LeNet.__init__": [[79, 93], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__"], ["    ", "def", "__init__", "(", "self", ",", "activate_output", "=", "False", ")", ":", "\n", "        ", "super", "(", "LeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "1", ",", "out_channels", "=", "6", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "6", ",", "out_channels", "=", "16", ",", "kernel_size", "=", "5", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "16", ",", "out_channels", "=", "120", ",", "kernel_size", "=", "5", ")", "\n", "self", ".", "b1", "=", "nn", ".", "BatchNorm2d", "(", "6", ")", "\n", "self", ".", "b2", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "mp1", "=", "nn", ".", "MaxPool2d", "(", "2", ")", "\n", "self", ".", "mp2", "=", "nn", ".", "MaxPool2d", "(", "2", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "120", "*", "1", "*", "1", ",", "84", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "84", ",", "1", ")", "\n", "self", ".", "b3", "=", "nn", ".", "BatchNorm1d", "(", "84", ")", "\n", "self", ".", "af", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "activate_output", "=", "activate_output", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.LeNet.forward": [[94, 105], ["model.LeNet.size", "model.LeNet.af", "model.LeNet.af", "model.LeNet.af", "model.LeNet.view", "model.LeNet.af", "model.LeNet.fc2", "model.LeNet.mp1", "model.LeNet.mp2", "model.LeNet.conv3", "model.LeNet.b3", "model.LeNet.af", "model.LeNet.conv1", "model.LeNet.conv2", "model.LeNet.fc1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "in_size", "=", "x", ".", "size", "(", "0", ")", "\n", "x", "=", "self", ".", "af", "(", "self", ".", "mp1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "af", "(", "self", ".", "mp2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "af", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "in_size", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "af", "(", "self", ".", "b3", "(", "self", ".", "fc1", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "if", "self", ".", "activate_output", ":", "\n", "            ", "x", "=", "self", ".", "af", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.ConvPoolNet.__init__": [[108, 126], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__"], ["    ", "def", "__init__", "(", "self", ",", "activate_output", "=", "False", ")", ":", "\n", "        ", "super", "(", "ConvPoolNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "3", ",", "out_channels", "=", "96", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "96", ",", "out_channels", "=", "192", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "192", ",", "out_channels", "=", "192", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "192", ",", "out_channels", "=", "192", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "192", ",", "out_channels", "=", "10", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "mp1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ")", "\n", "self", ".", "mp2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ")", "\n", "self", ".", "b1", "=", "nn", ".", "BatchNorm2d", "(", "96", ")", "\n", "self", ".", "b2", "=", "nn", ".", "BatchNorm2d", "(", "192", ")", "\n", "self", ".", "b3", "=", "nn", ".", "BatchNorm2d", "(", "192", ")", "\n", "self", ".", "b4", "=", "nn", ".", "BatchNorm2d", "(", "192", ")", "\n", "self", ".", "b5", "=", "nn", ".", "BatchNorm2d", "(", "10", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "8", "*", "8", "*", "10", ",", "100", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "100", ",", "1", ")", "\n", "self", ".", "af", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "activate_output", "=", "activate_output", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.ConvPoolNet.forward": [[127, 140], ["model.ConvPoolNet.size", "model.ConvPoolNet.af", "model.ConvPoolNet.af", "model.ConvPoolNet.af", "model.ConvPoolNet.af", "model.ConvPoolNet.af", "model.ConvPoolNet.view", "model.ConvPoolNet.af", "model.ConvPoolNet.fc2", "model.ConvPoolNet.b1", "model.ConvPoolNet.b2", "model.ConvPoolNet.b3", "model.ConvPoolNet.b4", "model.ConvPoolNet.b5", "model.ConvPoolNet.fc1", "model.ConvPoolNet.af", "model.ConvPoolNet.mp1", "model.ConvPoolNet.mp2", "model.ConvPoolNet.conv3", "model.ConvPoolNet.conv4", "model.ConvPoolNet.conv5", "model.ConvPoolNet.conv1", "model.ConvPoolNet.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "in_size", "=", "x", ".", "size", "(", "0", ")", "\n", "x", "=", "self", ".", "af", "(", "self", ".", "b1", "(", "self", ".", "mp1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", ")", "\n", "x", "=", "self", ".", "af", "(", "self", ".", "b2", "(", "self", ".", "mp2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", ")", "\n", "x", "=", "self", ".", "af", "(", "self", ".", "b3", "(", "self", ".", "conv3", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "af", "(", "self", ".", "b4", "(", "self", ".", "conv4", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "af", "(", "self", ".", "b5", "(", "self", ".", "conv5", "(", "x", ")", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "in_size", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "af", "(", "self", ".", "fc1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "if", "self", ".", "activate_output", ":", "\n", "            ", "x", "=", "self", ".", "af", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.choose_model": [[142, 152], ["None"], "function", ["None"], ["", "", "def", "choose_model", "(", "model_name", ")", ":", "\n", "    ", "models", "=", "{", "\n", "\"gauss\"", ":", "LinearClassifier", ",", "\n", "\"gauss_mix\"", ":", "LinearClassifier", ",", "\n", "\"mnist\"", ":", "MultiLayerPerceptron", ",", "\n", "\"fmnist\"", ":", "LeNet", ",", "\n", "\"kmnist\"", ":", "LeNet", ",", "\n", "\"cifar\"", ":", "ConvPoolNet", "\n", "}", "\n", "return", "models", "[", "model_name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.Accuracy.__call__": [[9, 11], ["numpy.mean"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean"], ["    ", "def", "__call__", "(", "self", ",", "y", ",", "t", ")", ":", "\n", "        ", "return", "np", ".", "mean", "(", "y", "*", "t", ">=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.AUROC.__call__": [[14, 18], ["sklearn.metrics.roc_auc_score", "sklearn.metrics.roc_curve"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.AUROC.roc_curve"], ["    ", "def", "__call__", "(", "self", ",", "y", ",", "t", ")", ":", "\n", "        ", "auc", "=", "roc_auc_score", "(", "t", ",", "y", ")", "\n", "self", ".", "fpr", ",", "self", ".", "tpr", ",", "self", ".", "thresh", "=", "roc_curve", "(", "t", ",", "y", ",", "drop_intermediate", "=", "False", ")", "\n", "return", "auc", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.AUROC.roc_curve": [[19, 21], ["None"], "methods", ["None"], ["", "def", "roc_curve", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "fpr", ",", "self", ".", "tpr", ",", "self", ".", "thresh", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.PURiskEstimator.__init__": [[24, 28], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "prior", ",", "loss", ")", ":", "\n", "        ", "self", ".", "prior", "=", "prior", "\n", "self", ".", "loss", "=", "loss", "\n", "self", ".", "L", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.PURiskEstimator.__call__": [[29, 34], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "metric.PURiskEstimator.loss", "metric.PURiskEstimator.loss", "metric.PURiskEstimator.loss"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean"], ["", "def", "__call__", "(", "self", ",", "y_p", ",", "y_u", ")", ":", "\n", "        ", "E_p", "=", "torch", ".", "mean", "(", "self", ".", "loss", "(", "y_p", ")", "-", "self", ".", "loss", "(", "-", "y_p", ")", ")", "\n", "E_u", "=", "torch", ".", "mean", "(", "self", ".", "loss", "(", "-", "y_u", ")", ")", "\n", "self", ".", "L", "=", "self", ".", "prior", "*", "E_p", "+", "E_u", "\n", "return", "self", ".", "L", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.PURiskEstimator.value": [[35, 37], ["metric.PURiskEstimator.L.item"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "L", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeRiskEstimator.__init__": [[40, 44], ["metric.PURiskEstimator.__init__"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__"], ["    ", "def", "__init__", "(", "self", ",", "prior", ",", "loss", ",", "thresh", "=", "0", ",", "weight", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "prior", ",", "loss", ")", "\n", "self", ".", "thresh", "=", "thresh", "\n", "self", ".", "weight", "=", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeRiskEstimator.__call__": [[45, 51], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "metric.NonNegativeRiskEstimator.loss", "metric.NonNegativeRiskEstimator.loss", "metric.NonNegativeRiskEstimator.loss", "max"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean"], ["", "def", "__call__", "(", "self", ",", "y_p", ",", "y_u", ")", ":", "\n", "        ", "E_pp", "=", "torch", ".", "mean", "(", "self", ".", "loss", "(", "y_p", ")", ")", "\n", "E_pn", "=", "torch", ".", "mean", "(", "self", ".", "loss", "(", "-", "y_p", ")", ")", "\n", "E_u", "=", "torch", ".", "mean", "(", "self", ".", "loss", "(", "-", "y_u", ")", ")", "\n", "self", ".", "L", "=", "self", ".", "prior", "*", "E_pp", "+", "max", "(", "0", ",", "E_u", "-", "self", ".", "prior", "*", "E_pn", ")", "\n", "return", "self", ".", "L", "if", "E_u", "-", "self", ".", "prior", "*", "E_pn", ">=", "self", ".", "thresh", "else", "self", ".", "weight", "*", "(", "self", ".", "prior", "*", "E_pn", "-", "E_u", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.AsymmetricNonNegativeRiskEstimator.__init__": [[54, 58], ["metric.NonNegativeRiskEstimator.__init__"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__"], ["    ", "def", "__init__", "(", "self", ",", "train_prior", ",", "test_prior", ",", "loss", ",", "thresh", "=", "0", ",", "weight", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "train_prior", ",", "loss", ",", "thresh", ",", "weight", ")", "\n", "self", ".", "train_prior", "=", "train_prior", "\n", "self", ".", "test_prior", "=", "test_prior", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.AsymmetricNonNegativeRiskEstimator.__call__": [[59, 65], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "metric.AsymmetricNonNegativeRiskEstimator.loss", "metric.AsymmetricNonNegativeRiskEstimator.loss", "metric.AsymmetricNonNegativeRiskEstimator.loss", "max"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean"], ["", "def", "__call__", "(", "self", ",", "y_p", ",", "y_u", ")", ":", "\n", "        ", "E_pp", "=", "torch", ".", "mean", "(", "self", ".", "loss", "(", "y_p", ")", ")", "\n", "E_pn", "=", "torch", ".", "mean", "(", "self", ".", "loss", "(", "-", "y_p", ")", ")", "\n", "E_u", "=", "torch", ".", "mean", "(", "self", ".", "loss", "(", "-", "y_u", ")", ")", "\n", "self", ".", "L", "=", "self", ".", "test_prior", "*", "E_pp", "+", "(", "1", "-", "self", ".", "test_prior", ")", "/", "(", "1", "-", "self", ".", "train_prior", ")", "*", "max", "(", "0", ",", "E_u", "-", "self", ".", "train_prior", "*", "E_pn", ")", "\n", "return", "self", ".", "L", "if", "E_u", "-", "self", ".", "train_prior", "*", "E_pn", ">=", "self", ".", "thresh", "else", "self", ".", "weight", "*", "(", "self", ".", "train_prior", "*", "E_pn", "-", "E_u", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.BregmanDivergence.__init__": [[68, 72], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "f_df", ")", ":", "\n", "        ", "self", ".", "f", "=", "f_df", "[", "0", "]", "\n", "self", ".", "df", "=", "f_df", "[", "1", "]", "\n", "self", ".", "L", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.BregmanDivergence.__call__": [[73, 78], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "metric.BregmanDivergence.df", "metric.BregmanDivergence.f", "metric.BregmanDivergence.df"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean"], ["", "def", "__call__", "(", "self", ",", "y_p", ",", "y_u", ")", ":", "\n", "        ", "E_p", "=", "torch", ".", "mean", "(", "-", "self", ".", "df", "(", "y_p", ")", ")", "\n", "E_u", "=", "torch", ".", "mean", "(", "y_u", "*", "self", ".", "df", "(", "y_u", ")", "-", "self", ".", "f", "(", "y_u", ")", ")", "\n", "self", ".", "L", "=", "E_p", "+", "E_u", "\n", "return", "self", ".", "L", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.BregmanDivergence.value": [[79, 81], ["metric.BregmanDivergence.L.item"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "L", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__": [[84, 91], ["metric.BregmanDivergence.__init__", "metric.NonNegativeBregmanDivergence.f", "metric.NonNegativeBregmanDivergence.f_dual", "metric.NonNegativeBregmanDivergence.f_dual", "metric.NonNegativeBregmanDivergence.df"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__init__"], ["    ", "def", "__init__", "(", "self", ",", "alpha", ",", "f_df", ",", "thresh", "=", "0", ",", "weight", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "f_df", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "thresh", "=", "thresh", "\n", "self", ".", "weight", "=", "weight", "\n", "self", ".", "f_dual", "=", "lambda", "x", ":", "x", "*", "self", ".", "df", "(", "x", ")", "-", "self", ".", "f", "(", "x", ")", "\n", "self", ".", "f_nn", "=", "lambda", "x", ":", "self", ".", "f_dual", "(", "x", ")", "-", "self", ".", "f_dual", "(", "0", "*", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.NonNegativeBregmanDivergence.__call__": [[92, 98], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "metric.NonNegativeBregmanDivergence.f_nn", "metric.NonNegativeBregmanDivergence.f_nn", "metric.NonNegativeBregmanDivergence.f_dual", "max", "metric.NonNegativeBregmanDivergence.df", "metric.NonNegativeBregmanDivergence.f_nn"], "methods", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean"], ["", "def", "__call__", "(", "self", ",", "y_p", ",", "y_u", ")", ":", "\n", "        ", "E_pp", "=", "torch", ".", "mean", "(", "-", "self", ".", "df", "(", "y_p", ")", "+", "self", ".", "alpha", "*", "self", ".", "f_nn", "(", "y_p", ")", ")", "\n", "E_pn", "=", "torch", ".", "mean", "(", "self", ".", "f_nn", "(", "y_p", ")", ")", "\n", "E_u", "=", "torch", ".", "mean", "(", "self", ".", "f_nn", "(", "y_u", ")", ")", "\n", "self", ".", "L", "=", "E_pp", "+", "max", "(", "0", ",", "E_u", "-", "self", ".", "alpha", "*", "E_pn", ")", "+", "self", ".", "f_dual", "(", "0", "*", "E_u", ")", "\n", "return", "self", ".", "L", "if", "E_u", "-", "self", ".", "alpha", "*", "E_pn", ">=", "self", ".", "thresh", "else", "self", ".", "weight", "*", "(", "self", ".", "alpha", "*", "E_pn", "-", "E_u", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.choose_loss": [[100, 110], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.softplus", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.sign", "torch.sign", "torch.sign", "torch.square", "torch.square", "torch.square", "torch.exp", "torch.exp", "torch.exp"], "function", ["None"], ["", "", "def", "choose_loss", "(", "loss_name", ")", ":", "\n", "    ", "losses", "=", "{", "\n", "\"zero-one\"", ":", "lambda", "x", ":", "(", "torch", ".", "sign", "(", "-", "x", ")", "+", "1", ")", "/", "2", ",", "\n", "\"sigmoid\"", ":", "lambda", "x", ":", "torch", ".", "sigmoid", "(", "-", "x", ")", ",", "\n", "\"logistic\"", ":", "lambda", "x", ":", "F", ".", "softplus", "(", "-", "x", ")", ",", "\n", "\"squared\"", ":", "lambda", "x", ":", "torch", ".", "square", "(", "x", "-", "1", ")", "/", "2", ",", "\n", "\"savage\"", ":", "lambda", "x", ":", "4", "/", "torch", ".", "square", "(", "1", "+", "torch", ".", "exp", "(", "x", ")", ")", ",", "\n", "\"LSIF\"", ":", "(", "lambda", "x", ":", "torch", ".", "square", "(", "x", "-", "1", ")", "/", "2", ",", "lambda", "x", ":", "x", "-", "1", ")", "\n", "}", "\n", "return", "losses", "[", "loss_name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.to_ndarray": [[10, 12], ["tensor.to().detach().numpy().copy", "tensor.to().detach().numpy", "tensor.to().detach", "tensor.to"], "function", ["None"], ["def", "to_ndarray", "(", "tensor", ")", ":", "\n", "    ", "return", "tensor", ".", "to", "(", "'cpu'", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.PUsequence": [[14, 16], ["numpy.array"], "function", ["None"], ["", "def", "PUsequence", "(", "num_P", ",", "num_U", ")", ":", "\n", "    ", "return", "np", ".", "array", "(", "[", "1", "]", "*", "num_P", "+", "[", "-", "1", "]", "*", "num_U", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.priorestimator": [[19, 29], ["numpy.count_nonzero", "sklearn.metrics.roc_curve", "numpy.min", "numpy.sqrt", "numpy.sqrt", "numpy.size", "numpy.log", "numpy.log", "numpy.isnan", "numpy.isinf", "numpy.exp"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.AUROC.roc_curve"], ["", "def", "priorestimator", "(", "y", ",", "t", ")", ":", "\n", "    ", "num_P", "=", "np", ".", "count_nonzero", "(", "t", "==", "1", ")", "\n", "delta", "=", "1", "/", "num_P", "\n", "eps", "=", "np", ".", "sqrt", "(", "4", "*", "np", ".", "log", "(", "np", ".", "exp", "(", "1", ")", "*", "num_P", "/", "2", ")", "/", "num_P", ")", "+", "np", ".", "sqrt", "(", "np", ".", "log", "(", "2", "/", "delta", ")", "/", "(", "2", "*", "num_P", ")", ")", "\n", "fpr", ",", "tpr", ",", "thresh", "=", "roc_curve", "(", "t", ",", "y", ",", "drop_intermediate", "=", "False", ")", "\n", "idx", "=", "tpr", ">", "eps", "\n", "ratio", "=", "fpr", "[", "idx", "]", "/", "tpr", "[", "idx", "]", "\n", "ratio", "=", "ratio", "[", "~", "(", "np", ".", "isnan", "(", "ratio", ")", "+", "np", ".", "isinf", "(", "ratio", ")", ")", "]", "\n", "assert", "np", ".", "size", "(", "ratio", ")", ">", "0", "\n", "return", "np", ".", "min", "(", "ratio", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.ERM": [[31, 83], ["save.Results", "range", "model.train", "zip", "save.Results.append", "model.eval", "print", "save.Results", "save.Results", "torch.cat().to", "model().view", "criterion", "criterion.backward", "optimizer.step", "train_loss.append", "numpy.array().mean", "torch.no_grad", "zip", "save.Results.append", "torch.no_grad", "enumerate", "range", "range", "len", "len", "criterion.value", "torch.cat().to", "model().view", "criterion_val", "validation_loss.append", "numpy.array().mean", "algorithm.prediction", "test_results[].append", "test_results[].append", "save.Results.get", "save.Results.get", "len", "len", "torch.cat", "model", "numpy.array", "len", "len", "criterion_val.value", "algorithm.estimate_train_prior", "algorithm.estimate_test_prior", "test_results[].append", "test_results[].append", "torch.cat", "model", "numpy.array"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.BregmanDivergence.value", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.mean", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.prediction", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.BregmanDivergence.value", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.estimate_train_prior", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.estimate_test_prior", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append"], ["", "def", "ERM", "(", "model", ",", "optimizer", ",", "trainloader_P", ",", "trainloader_U", ",", "valloader_P", ",", "valloader_U", ",", "testloaders", ",", "criterion", ",", "criterion_val", ",", "max_epochs", ",", "device", ",", "given_thresholds", "=", "None", ")", ":", "\n", "    ", "train_result", "=", "Results", "(", "[", "\"train_loss\"", ",", "\"validation_loss\"", "]", ")", "\n", "test_results", "=", "[", "Results", "(", "[", "\"accuracy\"", ",", "\"auc\"", ",", "\"prior\"", ",", "\"thresh\"", "]", ")", "for", "i", "in", "range", "(", "len", "(", "testloaders", ")", ")", "]", "if", "given_thresholds", "is", "None", "else", "[", "Results", "(", "[", "\"accuracy\"", ",", "\"auc\"", "]", ")", "for", "i", "in", "range", "(", "len", "(", "testloaders", ")", ")", "]", "\n", "for", "ep", "in", "range", "(", "max_epochs", ")", ":", "\n", "# train step", "\n", "        ", "model", ".", "train", "(", ")", "\n", "train_loss", "=", "[", "]", "\n", "for", "(", "x_p", ",", "t_p", ")", ",", "(", "x_u", ",", "t_u", ")", "in", "zip", "(", "trainloader_P", ",", "trainloader_U", ")", ":", "\n", "            ", "num_P", ",", "num_U", "=", "len", "(", "x_p", ")", ",", "len", "(", "x_u", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x_p", ",", "x_u", "]", ")", ".", "to", "(", "device", ")", "\n", "y", "=", "model", "(", "x", ")", ".", "view", "(", "-", "1", ")", "\n", "y_p", ",", "y_u", "=", "y", "[", ":", "num_P", "]", ",", "y", "[", "num_P", ":", "]", "\n", "loss", "=", "criterion", "(", "y_p", ",", "y_u", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "train_loss", ".", "append", "(", "criterion", ".", "value", "(", ")", ")", "\n", "", "train_result", ".", "append", "(", "\"train_loss\"", ",", "np", ".", "array", "(", "train_loss", ")", ".", "mean", "(", ")", ")", "\n", "\n", "# validation step", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "validation_loss", "=", "[", "]", "\n", "for", "(", "x_p", ",", "t_p", ")", ",", "(", "x_u", ",", "t_u", ")", "in", "zip", "(", "valloader_P", ",", "valloader_U", ")", ":", "\n", "                ", "num_P", ",", "num_U", "=", "len", "(", "x_p", ")", ",", "len", "(", "x_u", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x_p", ",", "x_u", "]", ")", ".", "to", "(", "device", ")", "\n", "y", "=", "model", "(", "x", ")", ".", "view", "(", "-", "1", ")", "\n", "y_p", ",", "y_u", "=", "y", "[", ":", "num_P", "]", ",", "y", "[", "num_P", ":", "]", "\n", "criterion_val", "(", "y_p", ",", "y_u", ")", "\n", "validation_loss", ".", "append", "(", "criterion_val", ".", "value", "(", ")", ")", "\n", "", "train_result", ".", "append", "(", "\"validation_loss\"", ",", "np", ".", "array", "(", "validation_loss", ")", ".", "mean", "(", ")", ")", "\n", "\n", "# test step", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", ",", "testloader", "in", "enumerate", "(", "testloaders", ")", ":", "\n", "                ", "if", "given_thresholds", "is", "None", ":", "\n", "                    ", "train_prior", ",", "preds_P", "=", "estimate_train_prior", "(", "model", ",", "valloader_P", ",", "valloader_U", ",", "device", ")", "\n", "test_prior", "=", "estimate_test_prior", "(", "model", ",", "testloader", ",", "preds_P", ",", "device", ")", "\n", "thresh", "=", "train_prior", "*", "(", "1", "-", "test_prior", ")", "/", "(", "train_prior", "*", "(", "(", "1", "-", "train_prior", ")", "*", "test_prior", "+", "train_prior", "*", "(", "1", "-", "test_prior", ")", ")", "+", "EPS", ")", "\n", "test_results", "[", "i", "]", ".", "append", "(", "\"prior\"", ",", "test_prior", ")", "\n", "test_results", "[", "i", "]", ".", "append", "(", "\"thresh\"", ",", "thresh", ")", "\n", "", "else", ":", "\n", "                    ", "thresh", "=", "given_thresholds", "[", "i", "]", "\n", "", "acc", ",", "auc", "=", "prediction", "(", "model", ",", "testloader", ",", "device", ",", "thresh", ")", "\n", "test_results", "[", "i", "]", ".", "append", "(", "\"accuracy\"", ",", "acc", ")", "\n", "test_results", "[", "i", "]", ".", "append", "(", "\"auc\"", ",", "auc", ")", "\n", "\n", "", "", "if", "ep", "%", "20", "==", "19", ":", "\n", "            ", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "/=", "2", "\n", "\n", "", "print", "(", "\"Epoch {}, Train loss : {:.4f}, Val loss : {:.4f}\"", ".", "format", "(", "ep", ",", "train_result", ".", "get", "(", "\"train_loss\"", ")", ",", "train_result", ".", "get", "(", "\"validation_loss\"", ")", ")", ")", "\n", "\n", "", "return", "model", ",", "train_result", ",", "test_results", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.estimate_train_prior": [[85, 101], ["model.eval", "torch.no_grad", "numpy.concatenate", "numpy.concatenate", "algorithm.priorestimator", "x_p.to", "model().view", "np.concatenate.append", "x_u.to", "model().view", "np.concatenate.append", "numpy.concatenate", "algorithm.PUsequence", "algorithm.to_ndarray", "algorithm.to_ndarray", "len", "len", "model", "model"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.priorestimator", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.PUsequence", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.to_ndarray", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.to_ndarray"], ["", "def", "estimate_train_prior", "(", "model", ",", "valloader_P", ",", "valloader_U", ",", "device", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "preds_P", ",", "preds_U", "=", "[", "]", ",", "[", "]", "\n", "for", "x_p", ",", "t_p", "in", "valloader_P", ":", "\n", "            ", "x", "=", "x_p", ".", "to", "(", "device", ")", "\n", "y", "=", "model", "(", "x", ")", ".", "view", "(", "-", "1", ")", "\n", "preds_P", ".", "append", "(", "to_ndarray", "(", "y", ")", ")", "\n", "", "for", "x_u", ",", "t_u", "in", "valloader_U", ":", "\n", "            ", "x", "=", "x_u", ".", "to", "(", "device", ")", "\n", "y", "=", "model", "(", "x", ")", ".", "view", "(", "-", "1", ")", "\n", "preds_U", ".", "append", "(", "to_ndarray", "(", "y", ")", ")", "\n", "", "preds_P", "=", "np", ".", "concatenate", "(", "preds_P", ")", "\n", "preds_U", "=", "np", ".", "concatenate", "(", "preds_U", ")", "\n", "train_prior", "=", "priorestimator", "(", "np", ".", "concatenate", "(", "[", "preds_P", ",", "preds_U", "]", ")", ",", "PUsequence", "(", "len", "(", "preds_P", ")", ",", "len", "(", "preds_U", ")", ")", ")", "\n", "", "return", "train_prior", ",", "preds_P", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.estimate_test_prior": [[103, 116], ["model.eval", "torch.no_grad", "numpy.concatenate", "numpy.concatenate", "algorithm.priorestimator", "model().view", "np.concatenate.append", "np.concatenate.append", "numpy.concatenate", "algorithm.PUsequence", "data.to", "target.to", "algorithm.to_ndarray", "algorithm.to_ndarray", "len", "len", "model"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.priorestimator", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.PUsequence", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.to_ndarray", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.to_ndarray"], ["", "def", "estimate_test_prior", "(", "model", ",", "testloader", ",", "preds_P", ",", "device", ")", ":", "\n", "    ", "preds_U", ",", "targets", "=", "[", "]", ",", "[", "]", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "target", "in", "testloader", ":", "\n", "            ", "x", ",", "t", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ")", "\n", "y", "=", "model", "(", "x", ")", ".", "view", "(", "-", "1", ")", "\n", "preds_U", ".", "append", "(", "to_ndarray", "(", "y", ")", ")", "\n", "targets", ".", "append", "(", "to_ndarray", "(", "t", ")", ")", "\n", "", "preds_U", "=", "np", ".", "concatenate", "(", "preds_U", ")", "\n", "targets", "=", "np", ".", "concatenate", "(", "targets", ")", "\n", "test_prior", "=", "priorestimator", "(", "np", ".", "concatenate", "(", "[", "preds_P", ",", "preds_U", "]", ")", ",", "PUsequence", "(", "len", "(", "preds_P", ")", ",", "len", "(", "preds_U", ")", ")", ")", "\n", "", "return", "test_prior", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.prediction": [[118, 134], ["metric.Accuracy", "metric.AUROC", "model.eval", "torch.no_grad", "numpy.concatenate", "numpy.concatenate", "metric.Accuracy.", "metric.AUROC.", "model().view", "np.concatenate.append", "np.concatenate.append", "data.to", "target.to", "algorithm.to_ndarray", "algorithm.to_ndarray", "model"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.to_ndarray", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.to_ndarray"], ["", "def", "prediction", "(", "model", ",", "testloader", ",", "device", ",", "thresh", "=", "0", ")", ":", "\n", "    ", "accuracy", "=", "Accuracy", "(", ")", "\n", "auroc", "=", "AUROC", "(", ")", "\n", "preds_U", ",", "targets", "=", "[", "]", ",", "[", "]", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "target", "in", "testloader", ":", "\n", "            ", "x", ",", "t", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ")", "\n", "y", "=", "model", "(", "x", ")", ".", "view", "(", "-", "1", ")", "\n", "preds_U", ".", "append", "(", "to_ndarray", "(", "y", ")", ")", "\n", "targets", ".", "append", "(", "to_ndarray", "(", "t", ")", ")", "\n", "", "preds_U", "=", "np", ".", "concatenate", "(", "preds_U", ")", "\n", "targets", "=", "np", ".", "concatenate", "(", "targets", ")", "\n", "acc", "=", "accuracy", "(", "preds_U", "-", "thresh", ",", "targets", ")", "\n", "auc", "=", "auroc", "(", "preds_U", ",", "targets", ")", "\n", "", "return", "acc", ",", "auc", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.find_boundary": [[136, 144], ["numpy.arange", "torch.from_numpy().float().reshape().to", "algorithm.to_ndarray", "enumerate", "round", "round", "model", "torch.from_numpy().float().reshape", "len", "torch.from_numpy().float", "torch.from_numpy"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.to_ndarray"], ["", "def", "find_boundary", "(", "model", ",", "min_max", ",", "device", ",", "thresh", "=", "0", ")", ":", "\n", "    ", "x", "=", "np", ".", "arange", "(", "round", "(", "min_max", "[", "0", "]", ",", "3", ")", ",", "round", "(", "min_max", "[", "1", "]", ",", "3", ")", ",", "0.01", ")", "\n", "x_tensor", "=", "torch", ".", "from_numpy", "(", "x", ")", ".", "float", "(", ")", ".", "reshape", "(", "len", "(", "x", ")", ",", "1", ")", ".", "to", "(", "device", ")", "\n", "y", "=", "to_ndarray", "(", "model", "(", "x_tensor", ")", ")", "\n", "for", "i", ",", "p", "in", "enumerate", "(", "y", ")", ":", "\n", "        ", "if", "i", ">", "0", "and", "y", "[", "i", "-", "1", "]", "-", "thresh", "<", "0", "and", "y", "[", "i", "]", "-", "thresh", ">=", "0", ":", "\n", "            ", "return", "x", "[", "i", "]", "\n", "", "", "return", "x", "[", "0", "]", "if", "x", "[", "0", "]", "-", "thresh", ">", "0", "else", "x", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.random_split": [[14, 18], ["numpy.arange", "numpy.random.shuffle"], "function", ["None"], ["def", "random_split", "(", "train_size", ",", "val_size", ")", ":", "\n", "    ", "indices", "=", "np", ".", "arange", "(", "train_size", "+", "val_size", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "return", "indices", "[", ":", "train_size", "]", ",", "indices", "[", "-", "val_size", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.load_trainset": [[20, 34], ["run_benchmark.random_split", "dataset.get_image_positive", "dataset.get_image_unlabeled", "dataset.get_image_positive", "dataset.get_image_unlabeled", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.random_split", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_image_positive", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_image_unlabeled", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_image_positive", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_image_unlabeled"], ["", "def", "load_trainset", "(", "dataset_name", ",", "train_size", ",", "val_size", ",", "batch_size", ",", "data_dir", "=", "\"dataset\"", ")", ":", "\n", "    ", "trainsize_P", ",", "trainsize_U", "=", "train_size", "\n", "valsize_P", ",", "valsize_U", "=", "val_size", "\n", "train_indices", ",", "val_indices", "=", "random_split", "(", "trainsize_U", ",", "valsize_U", ")", "\n", "trainset_P", "=", "get_image_positive", "(", "dataset_name", ",", "trainsize_P", ",", "train_indices", ",", "root", "=", "data_dir", ")", "\n", "trainset_U", "=", "get_image_unlabeled", "(", "dataset_name", ",", "train_indices", ",", "root", "=", "data_dir", ")", "\n", "valset_P", "=", "get_image_positive", "(", "dataset_name", ",", "valsize_P", ",", "val_indices", ",", "root", "=", "data_dir", ")", "\n", "valset_U", "=", "get_image_unlabeled", "(", "dataset_name", ",", "val_indices", ",", "root", "=", "data_dir", ")", "\n", "batch_num", "=", "len", "(", "trainset_U", ")", "//", "batch_size", "\n", "trainloader_P", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset_P", ",", "batch_size", "=", "len", "(", "trainset_P", ")", "//", "batch_num", ",", "shuffle", "=", "True", ",", "drop_last", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "trainloader_U", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset_U", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "valloader_P", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "valset_P", ",", "batch_size", "=", "len", "(", "valset_P", ")", "//", "batch_num", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ",", "num_workers", "=", "1", ")", "\n", "valloader_U", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "valset_U", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ",", "num_workers", "=", "1", ")", "\n", "return", "trainloader_P", ",", "trainloader_U", ",", "valloader_P", ",", "valloader_U", ",", "trainset_P", ",", "trainset_U", ",", "valset_P", ",", "valset_U", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.load_testset": [[36, 40], ["dataset.get_image_test", "torch.utils.data.DataLoader"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.dataset.get_image_test"], ["", "def", "load_testset", "(", "dataset_name", ",", "batch_size", ",", "prior", "=", "None", ",", "data_dir", "=", "\"dataset\"", ")", ":", "\n", "    ", "testset", "=", "get_image_test", "(", "dataset_name", ",", "prior", ",", "root", "=", "data_dir", ")", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ",", "num_workers", "=", "1", ")", "\n", "return", "testloader", ",", "testset", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.uPU": [[44, 94], ["save.getdirs", "save.getdirs", "run_benchmark.load_trainset", "torch.optim.Adam", "metric.PURiskEstimator", "metric.PURiskEstimator", "algorithm.ERM", "save.save_train_history", "save.output_train_results", "save.save_test_history", "enumerate", "save.output_config", "torch.device", "os.path.join", "os.path.join", "metric.choose_loss", "save.getdirs", "os.path.join", "save.getdirs", "zip", "result.get", "result.get", "save.output_test_results", "save.append_test_results", "os.path.join", "torch.cuda.is_available", "os.getcwd", "os.getcwd", "dataset.Tensor_to_1darray", "modules.Kernel_MPE.KM2_estimate", "run_benchmark.load_testset", "model.parameters", "metric.choose_loss", "os.path.join", "os.path.join", "os.path.join", "save.getdirs", "numpy.array", "numpy.array", "model.choose_model", "len", "os.path.join", "dataset.Tensor_to_1darray.", "dataset.Tensor_to_1darray."], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.load_trainset", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.ERM", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_train_history", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_train_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_test_history", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_config", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.choose_loss", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_test_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.append_test_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.KM2_estimate", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.load_testset", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.choose_loss", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.choose_model"], ["", "def", "uPU", "(", "dataset_name", ",", "train_size", ",", "val_size", ",", "alpha", ",", "loss_name", ",", "max_epochs", ",", "batch_size", ",", "lr", ",", "true_train_prior", ",", "true_test_priors", ",", "device_num", ",", "res_dir", ",", "data_dir", ",", "seed", ",", "id", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "device_num", ")", "if", "device_num", ">=", "0", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "res_dir", "=", "getdirs", "(", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "res_dir", ",", "\"uPU\"", ",", "dataset_name", ")", ")", "\n", "data_dir", "=", "getdirs", "(", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "data_dir", ")", ")", "\n", "\n", "trainloader_P", ",", "trainloader_U", ",", "valloader_P", ",", "valloader_U", ",", "trainset_P", ",", "trainset_U", ",", "_", ",", "_", "=", "load_trainset", "(", "dataset_name", ",", "train_size", ",", "val_size", ",", "batch_size", ",", "data_dir", ")", "\n", "\n", "if", "true_train_prior", "is", "not", "None", ":", "\n", "        ", "train_prior", "=", "true_train_prior", "\n", "", "elif", "alpha", "is", "None", ":", "\n", "        ", "trans", "=", "Tensor_to_1darray", "(", ")", "\n", "pos", "=", "np", ".", "array", "(", "[", "trans", "(", "x", ")", "for", "x", ",", "t", "in", "trainset_P", "]", ")", "[", ":", "2000", "]", "\n", "unl", "=", "np", ".", "array", "(", "[", "trans", "(", "x", ")", "for", "x", ",", "t", "in", "trainset_U", "]", ")", "[", ":", "2000", "]", "\n", "train_prior", "=", "KM2_estimate", "(", "pos", ",", "unl", ")", "\n", "", "else", ":", "\n", "        ", "train_prior", "=", "alpha", "\n", "\n", "", "testloaders", "=", "[", "load_testset", "(", "dataset_name", ",", "batch_size", ",", "true_prior", ",", "data_dir", ")", "[", "0", "]", "for", "true_prior", "in", "true_test_priors", "]", "\n", "\n", "model", "=", "choose_model", "(", "dataset_name", ")", "(", ")", ".", "to", "(", "device", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", "=", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "0.005", ",", "betas", "=", "(", "0.9", ",", "0.999", ")", ")", "\n", "criterion", "=", "PURiskEstimator", "(", "train_prior", ",", "choose_loss", "(", "loss_name", ")", ")", "\n", "criterion_val", "=", "PURiskEstimator", "(", "train_prior", ",", "loss", "=", "choose_loss", "(", "\"zero-one\"", ")", ")", "\n", "\n", "model", ",", "train_result", ",", "test_results", "=", "ERM", "(", "\n", "model", "=", "model", ",", "\n", "optimizer", "=", "optimizer", ",", "\n", "trainloader_P", "=", "trainloader_P", ",", "\n", "trainloader_U", "=", "trainloader_U", ",", "\n", "valloader_P", "=", "valloader_P", ",", "\n", "valloader_U", "=", "valloader_U", ",", "\n", "testloaders", "=", "testloaders", ",", "\n", "criterion", "=", "criterion", ",", "\n", "criterion_val", "=", "criterion_val", ",", "\n", "max_epochs", "=", "max_epochs", ",", "\n", "device", "=", "device", ",", "\n", "given_thresholds", "=", "[", "0", "]", "*", "len", "(", "true_test_priors", ")", "\n", ")", "\n", "\n", "save_train_history", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"train\"", ",", "\"history_{}\"", ".", "format", "(", "id", ")", ")", ")", ",", "model", ",", "train_result", ")", "\n", "output_train_results", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "train_result", ",", "train_prior", ")", "\n", "save_test_history", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"train\"", ",", "\"history_{}\"", ".", "format", "(", "id", ")", ")", ")", ",", "test_results", ")", "\n", "\n", "for", "i", ",", "(", "true_prior", ",", "result", ")", "in", "enumerate", "(", "zip", "(", "true_test_priors", ",", "test_results", ")", ")", ":", "\n", "        ", "acc", "=", "result", ".", "get", "(", "\"accuracy\"", ")", "\n", "auc", "=", "result", ".", "get", "(", "\"auc\"", ")", "\n", "output_test_results", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "i", ",", "true_prior", ",", "acc", ",", "auc", ")", "\n", "append_test_results", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"test-{}\"", ".", "format", "(", "i", ")", ")", ")", ",", "acc", ",", "auc", ")", "\n", "\n", "", "output_config", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "train_size", ",", "val_size", ",", "max_epochs", ",", "batch_size", ",", "lr", ",", "alpha", ",", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.nnPU": [[98, 148], ["save.getdirs", "save.getdirs", "run_benchmark.load_trainset", "torch.optim.Adam", "metric.NonNegativeRiskEstimator", "metric.PURiskEstimator", "algorithm.ERM", "save.save_train_history", "save.output_train_results", "save.save_test_history", "enumerate", "save.output_config", "torch.device", "os.path.join", "os.path.join", "metric.choose_loss", "save.getdirs", "os.path.join", "save.getdirs", "zip", "result.get", "result.get", "save.output_test_results", "save.append_test_results", "os.path.join", "torch.cuda.is_available", "os.getcwd", "os.getcwd", "dataset.Tensor_to_1darray", "modules.Kernel_MPE.KM2_estimate", "run_benchmark.load_testset", "model.parameters", "metric.choose_loss", "os.path.join", "os.path.join", "os.path.join", "save.getdirs", "numpy.array", "numpy.array", "model.choose_model", "len", "os.path.join", "dataset.Tensor_to_1darray.", "dataset.Tensor_to_1darray."], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.load_trainset", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.ERM", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_train_history", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_train_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_test_history", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_config", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.choose_loss", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_test_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.append_test_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.KM2_estimate", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.load_testset", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.choose_loss", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.choose_model"], ["", "def", "nnPU", "(", "dataset_name", ",", "train_size", ",", "val_size", ",", "alpha", ",", "loss_name", ",", "max_epochs", ",", "batch_size", ",", "lr", ",", "true_train_prior", ",", "true_test_priors", ",", "device_num", ",", "res_dir", ",", "data_dir", ",", "seed", ",", "id", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "device_num", ")", "if", "device_num", ">=", "0", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "res_dir", "=", "getdirs", "(", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "res_dir", ",", "\"nnPU\"", ",", "dataset_name", ")", ")", "\n", "data_dir", "=", "getdirs", "(", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "data_dir", ")", ")", "\n", "\n", "trainloader_P", ",", "trainloader_U", ",", "valloader_P", ",", "valloader_U", ",", "trainset_P", ",", "trainset_U", ",", "_", ",", "_", "=", "load_trainset", "(", "dataset_name", ",", "train_size", ",", "val_size", ",", "batch_size", ",", "data_dir", ")", "\n", "\n", "if", "true_train_prior", "is", "not", "None", ":", "\n", "        ", "train_prior", "=", "true_train_prior", "\n", "", "elif", "alpha", "is", "None", ":", "\n", "        ", "trans", "=", "Tensor_to_1darray", "(", ")", "\n", "pos", "=", "np", ".", "array", "(", "[", "trans", "(", "x", ")", "for", "x", ",", "t", "in", "trainset_P", "]", ")", "[", ":", "2000", "]", "\n", "unl", "=", "np", ".", "array", "(", "[", "trans", "(", "x", ")", "for", "x", ",", "t", "in", "trainset_U", "]", ")", "[", ":", "2000", "]", "\n", "train_prior", "=", "KM2_estimate", "(", "pos", ",", "unl", ")", "\n", "", "else", ":", "\n", "        ", "train_prior", "=", "alpha", "\n", "\n", "", "testloaders", "=", "[", "load_testset", "(", "dataset_name", ",", "batch_size", ",", "true_prior", ",", "data_dir", ")", "[", "0", "]", "for", "true_prior", "in", "true_test_priors", "]", "\n", "\n", "model", "=", "choose_model", "(", "dataset_name", ")", "(", ")", ".", "to", "(", "device", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", "=", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "0.005", ",", "betas", "=", "(", "0.9", ",", "0.999", ")", ")", "\n", "criterion", "=", "NonNegativeRiskEstimator", "(", "train_prior", ",", "choose_loss", "(", "loss_name", ")", ")", "\n", "criterion_val", "=", "PURiskEstimator", "(", "train_prior", ",", "loss", "=", "choose_loss", "(", "\"zero-one\"", ")", ")", "\n", "\n", "model", ",", "train_result", ",", "test_results", "=", "ERM", "(", "\n", "model", "=", "model", ",", "\n", "optimizer", "=", "optimizer", ",", "\n", "trainloader_P", "=", "trainloader_P", ",", "\n", "trainloader_U", "=", "trainloader_U", ",", "\n", "valloader_P", "=", "valloader_P", ",", "\n", "valloader_U", "=", "valloader_U", ",", "\n", "testloaders", "=", "testloaders", ",", "\n", "criterion", "=", "criterion", ",", "\n", "criterion_val", "=", "criterion_val", ",", "\n", "max_epochs", "=", "max_epochs", ",", "\n", "device", "=", "device", ",", "\n", "given_thresholds", "=", "[", "0", "]", "*", "len", "(", "true_test_priors", ")", "\n", ")", "\n", "\n", "save_train_history", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"train\"", ",", "\"history_{}\"", ".", "format", "(", "id", ")", ")", ")", ",", "model", ",", "train_result", ")", "\n", "output_train_results", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "train_result", ",", "train_prior", ")", "\n", "save_test_history", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"train\"", ",", "\"history_{}\"", ".", "format", "(", "id", ")", ")", ")", ",", "test_results", ")", "\n", "\n", "for", "i", ",", "(", "true_prior", ",", "result", ")", "in", "enumerate", "(", "zip", "(", "true_test_priors", ",", "test_results", ")", ")", ":", "\n", "        ", "acc", "=", "result", ".", "get", "(", "\"accuracy\"", ")", "\n", "auc", "=", "result", ".", "get", "(", "\"auc\"", ")", "\n", "output_test_results", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "i", ",", "true_prior", ",", "acc", ",", "auc", ")", "\n", "append_test_results", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"test-{}\"", ".", "format", "(", "i", ")", ")", ")", ",", "acc", ",", "auc", ")", "\n", "\n", "", "output_config", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "train_size", ",", "val_size", ",", "max_epochs", ",", "batch_size", ",", "lr", ",", "alpha", ",", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.PUa": [[152, 205], ["save.getdirs", "save.getdirs", "run_benchmark.load_trainset", "enumerate", "save.output_config", "torch.device", "os.path.join", "os.path.join", "run_benchmark.load_testset", "dataset.Tensor_to_1darray", "modules.Kernel_MPE.KM2_estimate", "torch.optim.Adam", "metric.AsymmetricNonNegativeRiskEstimator", "metric.PURiskEstimator", "algorithm.ERM", "save.save_train_history", "test_results[].saveall", "test_results[].get", "test_results[].get", "save.output_test_results", "save.append_test_results", "os.path.join", "torch.cuda.is_available", "os.getcwd", "os.getcwd", "dataset.Tensor_to_1darray", "modules.Kernel_MPE.KM2_estimate", "numpy.array", "metric.choose_loss", "save.getdirs", "save.output_train_results", "save.getdirs", "os.path.join", "save.getdirs", "numpy.array", "numpy.array", "model.parameters", "metric.choose_loss", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset.Tensor_to_1darray.", "model.choose_model", "len", "dataset.Tensor_to_1darray.", "dataset.Tensor_to_1darray."], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.load_trainset", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_config", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.load_testset", "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.KM2_estimate", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.ERM", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_train_history", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.saveall", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_test_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.append_test_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.KM2_estimate", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.choose_loss", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_train_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.choose_loss", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.choose_model"], ["", "def", "PUa", "(", "dataset_name", ",", "train_size", ",", "val_size", ",", "alpha", ",", "loss_name", ",", "max_epochs", ",", "batch_size", ",", "lr", ",", "true_train_prior", ",", "true_test_priors", ",", "device_num", ",", "res_dir", ",", "data_dir", ",", "seed", ",", "id", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "device_num", ")", "if", "device_num", ">=", "0", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "res_dir", "=", "getdirs", "(", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "res_dir", ",", "\"PUa\"", ",", "dataset_name", ")", ")", "\n", "data_dir", "=", "getdirs", "(", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "data_dir", ")", ")", "\n", "\n", "trainloader_P", ",", "trainloader_U", ",", "valloader_P", ",", "valloader_U", ",", "trainset_P", ",", "trainset_U", ",", "_", ",", "_", "=", "load_trainset", "(", "dataset_name", ",", "train_size", ",", "val_size", ",", "batch_size", ",", "data_dir", ")", "\n", "\n", "if", "true_train_prior", "is", "not", "None", ":", "\n", "        ", "train_prior", "=", "true_train_prior", "\n", "", "elif", "alpha", "is", "None", ":", "\n", "        ", "trans", "=", "Tensor_to_1darray", "(", ")", "\n", "pos", "=", "np", ".", "array", "(", "[", "trans", "(", "x", ")", "for", "x", ",", "t", "in", "trainset_P", "]", ")", "[", ":", "2000", "]", "\n", "unl", "=", "np", ".", "array", "(", "[", "trans", "(", "x", ")", "for", "x", ",", "t", "in", "trainset_U", "]", ")", "[", ":", "2000", "]", "\n", "train_prior", "=", "KM2_estimate", "(", "pos", ",", "unl", ")", "\n", "", "else", ":", "\n", "        ", "train_prior", "=", "alpha", "\n", "\n", "", "for", "i", ",", "true_prior", "in", "enumerate", "(", "true_test_priors", ")", ":", "\n", "        ", "testloader", ",", "testset", "=", "load_testset", "(", "dataset_name", ",", "batch_size", ",", "true_prior", ",", "data_dir", ")", "\n", "trans", "=", "Tensor_to_1darray", "(", ")", "\n", "unl", "=", "np", ".", "array", "(", "[", "trans", "(", "x", ")", "for", "x", ",", "t", "in", "testset", "]", ")", "[", ":", "2000", "]", "\n", "test_prior", "=", "KM2_estimate", "(", "pos", ",", "unl", ")", "\n", "model", "=", "choose_model", "(", "dataset_name", ")", "(", ")", ".", "to", "(", "device", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", "=", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "0.005", ",", "betas", "=", "(", "0.9", ",", "0.999", ")", ")", "\n", "criterion", "=", "AsymmetricNonNegativeRiskEstimator", "(", "train_prior", ",", "test_prior", ",", "choose_loss", "(", "loss_name", ")", ")", "\n", "criterion_val", "=", "PURiskEstimator", "(", "test_prior", ",", "loss", "=", "choose_loss", "(", "\"zero-one\"", ")", ")", "\n", "\n", "model", ",", "train_result", ",", "test_results", "=", "ERM", "(", "\n", "model", "=", "model", ",", "\n", "optimizer", "=", "optimizer", ",", "\n", "trainloader_P", "=", "trainloader_P", ",", "\n", "trainloader_U", "=", "trainloader_U", ",", "\n", "valloader_P", "=", "valloader_P", ",", "\n", "valloader_U", "=", "valloader_U", ",", "\n", "testloaders", "=", "[", "testloader", "]", ",", "\n", "criterion", "=", "criterion", ",", "\n", "criterion_val", "=", "criterion_val", ",", "\n", "max_epochs", "=", "max_epochs", ",", "\n", "device", "=", "device", ",", "\n", "given_thresholds", "=", "[", "0", "]", "*", "len", "(", "true_test_priors", ")", "\n", ")", "\n", "\n", "save_train_history", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"train-{}\"", ".", "format", "(", "i", ")", ",", "\"history_{}\"", ".", "format", "(", "id", ")", ")", ")", ",", "model", ",", "train_result", ")", "\n", "if", "i", "==", "0", ":", "\n", "            ", "output_train_results", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "train_result", ",", "train_prior", ")", "\n", "", "test_results", "[", "0", "]", ".", "saveall", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"train-{}\"", ".", "format", "(", "i", ")", ",", "\"history_{}\"", ".", "format", "(", "id", ")", ")", ")", ",", "i", ")", "\n", "\n", "acc", "=", "test_results", "[", "0", "]", ".", "get", "(", "\"accuracy\"", ")", "\n", "auc", "=", "test_results", "[", "0", "]", ".", "get", "(", "\"auc\"", ")", "\n", "output_test_results", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "i", ",", "true_prior", ",", "acc", ",", "auc", ",", "test_prior", ")", "\n", "append_test_results", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"test-{}\"", ".", "format", "(", "i", ")", ")", ")", ",", "acc", ",", "auc", ",", "test_prior", ")", "\n", "\n", "", "output_config", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "train_size", ",", "val_size", ",", "max_epochs", ",", "batch_size", ",", "lr", ",", "alpha", ",", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.DRPU": [[209, 265], ["save.getdirs", "save.getdirs", "run_benchmark.load_trainset", "torch.optim.Adam", "metric.NonNegativeBregmanDivergence", "metric.BregmanDivergence", "algorithm.ERM", "algorithm.estimate_train_prior", "save.save_train_history", "save.save_test_history", "save.output_train_results", "enumerate", "save.output_config", "torch.device", "os.path.join", "os.path.join", "metric.choose_loss", "metric.choose_loss", "save.getdirs", "save.getdirs", "os.path.join", "zip", "result.get", "result.get", "result.get", "result.get", "save.output_test_results", "save.append_test_results", "os.path.join", "torch.cuda.is_available", "os.getcwd", "os.getcwd", "run_benchmark.load_testset", "model.parameters", "os.path.join", "os.path.join", "os.path.join", "save.getdirs", "model.choose_model", "os.path.join"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.load_trainset", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.ERM", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.algorithm.estimate_train_prior", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_train_history", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.save_test_history", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_train_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_config", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.choose_loss", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.metric.choose_loss", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.get", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.output_test_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.append_test_results", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.run_benchmark.load_testset", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.getdirs", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.model.choose_model"], ["", "def", "DRPU", "(", "dataset_name", ",", "train_size", ",", "val_size", ",", "alpha", ",", "loss_name", ",", "max_epochs", ",", "batch_size", ",", "lr", ",", "true_train_prior", ",", "true_test_priors", ",", "device_num", ",", "res_dir", ",", "data_dir", ",", "seed", ",", "id", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "device_num", ")", "if", "device_num", ">=", "0", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "res_dir", "=", "getdirs", "(", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "res_dir", ",", "\"DRPU\"", ",", "dataset_name", ")", ")", "\n", "data_dir", "=", "getdirs", "(", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "data_dir", ")", ")", "\n", "\n", "trainloader_P", ",", "trainloader_U", ",", "valloader_P", ",", "valloader_U", ",", "_", ",", "_", ",", "_", ",", "_", "=", "load_trainset", "(", "dataset_name", ",", "train_size", ",", "val_size", ",", "batch_size", ",", "data_dir", ")", "\n", "\n", "if", "true_train_prior", "is", "not", "None", ":", "\n", "        ", "alpha", "=", "true_train_prior", "\n", "", "elif", "alpha", "is", "None", ":", "\n", "        ", "alpha", "=", "0", "\n", "\n", "", "testloaders", "=", "[", "load_testset", "(", "dataset_name", ",", "batch_size", ",", "true_prior", ",", "data_dir", ")", "[", "0", "]", "for", "true_prior", "in", "true_test_priors", "]", "\n", "\n", "model", "=", "choose_model", "(", "dataset_name", ")", "(", "activate_output", "=", "True", ")", ".", "to", "(", "device", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", "=", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "0.005", ",", "betas", "=", "(", "0.9", ",", "0.999", ")", ")", "\n", "criterion", "=", "NonNegativeBregmanDivergence", "(", "alpha", ",", "choose_loss", "(", "loss_name", ")", ")", "\n", "criterion_val", "=", "BregmanDivergence", "(", "choose_loss", "(", "loss_name", ")", ")", "\n", "\n", "if", "true_train_prior", "is", "None", ":", "\n", "        ", "given_thresholds", "=", "None", "\n", "", "else", ":", "\n", "        ", "train_prior", "=", "true_train_prior", "\n", "given_thresholds", "=", "[", "train_prior", "*", "(", "1", "-", "test_prior", ")", "/", "(", "train_prior", "*", "(", "(", "1", "-", "train_prior", ")", "*", "test_prior", "+", "train_prior", "*", "(", "1", "-", "test_prior", ")", ")", "+", "EPS", ")", "\n", "for", "test_prior", "in", "true_test_priors", "]", "\n", "\n", "", "model", ",", "train_result", ",", "test_results", "=", "ERM", "(", "\n", "model", "=", "model", ",", "\n", "optimizer", "=", "optimizer", ",", "\n", "trainloader_P", "=", "trainloader_P", ",", "\n", "trainloader_U", "=", "trainloader_U", ",", "\n", "valloader_P", "=", "valloader_P", ",", "\n", "valloader_U", "=", "valloader_U", ",", "\n", "testloaders", "=", "testloaders", ",", "\n", "criterion", "=", "criterion", ",", "\n", "criterion_val", "=", "criterion_val", ",", "\n", "max_epochs", "=", "max_epochs", ",", "\n", "device", "=", "device", ",", "\n", "given_thresholds", "=", "given_thresholds", "\n", ")", "\n", "\n", "train_prior", ",", "preds_P", "=", "estimate_train_prior", "(", "model", ",", "valloader_P", ",", "valloader_U", ",", "device", ")", "\n", "\n", "save_train_history", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"train\"", ",", "\"history_{}\"", ".", "format", "(", "id", ")", ")", ")", ",", "model", ",", "train_result", ")", "\n", "save_test_history", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"train\"", ",", "\"history_{}\"", ".", "format", "(", "id", ")", ")", ")", ",", "test_results", ")", "\n", "output_train_results", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "train_result", ",", "train_prior", ")", "\n", "\n", "for", "i", ",", "(", "true_prior", ",", "result", ")", "in", "enumerate", "(", "zip", "(", "true_test_priors", ",", "test_results", ")", ")", ":", "\n", "        ", "acc", "=", "result", ".", "get", "(", "\"accuracy\"", ")", "\n", "auc", "=", "result", ".", "get", "(", "\"auc\"", ")", "\n", "prior", "=", "result", ".", "get", "(", "\"prior\"", ")", "\n", "thresh", "=", "result", ".", "get", "(", "\"thresh\"", ")", "\n", "output_test_results", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "i", ",", "true_prior", ",", "acc", ",", "auc", ",", "prior", ",", "thresh", ")", "\n", "append_test_results", "(", "getdirs", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"test-{}\"", ".", "format", "(", "i", ")", ")", ")", ",", "acc", ",", "auc", ",", "prior", ",", "thresh", ")", "\n", "\n", "", "output_config", "(", "os", ".", "path", ".", "join", "(", "res_dir", ",", "\"log_{}.txt\"", ".", "format", "(", "id", ")", ")", ",", "train_size", ",", "val_size", ",", "max_epochs", ",", "batch_size", ",", "lr", ",", "alpha", ",", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.find_nearest_valid_distribution": [[16, 47], ["cvxopt.matrix", "cvxopt.matrix", "cvxopt.matrix", "cvxopt.matrix", "cvxopt.spmatrix", "cvxopt.matrix", "cvxopt.solvers.coneqp", "numpy.dot", "numpy.ones", "range", "range", "numpy.zeros", "numpy.dot", "numpy.dot"], "function", ["None"], ["def", "find_nearest_valid_distribution", "(", "u_alpha", ",", "kernel", ",", "initial", "=", "None", ",", "reg", "=", "0", ")", ":", "\n", "    ", "\"\"\" (solution,distance_sqd)=find_nearest_valid_distribution(u_alpha,kernel):\n    Given a n-vector u_alpha summing to 1, with negative terms, \n    finds the distance (squared) to the nearest n-vector summing to 1, \n    with non-neg terms. Distance calculated using nxn matrix kernel. \n    Regularization parameter reg -- \n\n    min_v (u_alpha - v)^\\top K (u_alpha - v) + reg* v^\\top v\"\"\"", "\n", "\n", "P", "=", "matrix", "(", "2", "*", "kernel", ")", "\n", "n", "=", "kernel", ".", "shape", "[", "0", "]", "\n", "q", "=", "matrix", "(", "np", ".", "dot", "(", "-", "2", "*", "kernel", ",", "u_alpha", ")", ")", "\n", "A", "=", "matrix", "(", "np", ".", "ones", "(", "(", "1", ",", "n", ")", ")", ")", "\n", "b", "=", "matrix", "(", "1.", ")", "\n", "G", "=", "spmatrix", "(", "-", "1.", ",", "range", "(", "n", ")", ",", "range", "(", "n", ")", ")", "\n", "h", "=", "matrix", "(", "np", ".", "zeros", "(", "n", ")", ")", "\n", "dims", "=", "{", "'l'", ":", "n", ",", "'q'", ":", "[", "]", ",", "'s'", ":", "[", "]", "}", "\n", "solvers", ".", "options", "[", "'show_progress'", "]", "=", "False", "\n", "solution", "=", "solvers", ".", "coneqp", "(", "\n", "P", ",", "\n", "q", ",", "\n", "G", ",", "\n", "h", ",", "\n", "dims", ",", "\n", "A", ",", "\n", "b", ",", "\n", "initvals", "=", "initial", "\n", ")", "\n", "distance_sqd", "=", "solution", "[", "'primal objective'", "]", "+", "np", ".", "dot", "(", "u_alpha", ".", "T", ",", "\n", "np", ".", "dot", "(", "kernel", ",", "u_alpha", ")", ")", "[", "0", ",", "0", "]", "\n", "return", "(", "solution", ",", "distance_sqd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.get_distance_curve": [[49, 73], ["numpy.array", "Kernel_MPE.find_nearest_valid_distribution", "np.array.append", "math.sqrt", "numpy.concatenate", "numpy.concatenate", "numpy.ones", "numpy.zeros", "numpy.zeros", "numpy.ones"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.find_nearest_valid_distribution", "home.repos.pwc.inspect_result.csnakajima_pu-learning.None.save.Results.append"], ["", "def", "get_distance_curve", "(", "\n", "kernel", ",", "\n", "lambda_values", ",", "\n", "N", ",", "\n", "M", "=", "None", ",", "\n", ")", ":", "\n", "    ", "\"\"\" Given number of elements per class, full kernel (with first N rows corr.\n    to mixture and the last M rows corr. to component, and set of lambda values\n    compute $\\hat d(\\lambda)$ for those values of lambda\"\"\"", "\n", "\n", "d_lambda", "=", "[", "]", "\n", "if", "M", "==", "None", ":", "\n", "        ", "M", "=", "kernel", ".", "shape", "[", "0", "]", "-", "N", "\n", "", "prev_soln", "=", "None", "\n", "for", "lambda_value", "in", "lambda_values", ":", "\n", "        ", "u_lambda", "=", "lambda_value", "/", "N", "*", "np", ".", "concatenate", "(", "(", "np", ".", "ones", "(", "(", "N", ",", "1", ")", ")", ",", "\n", "np", ".", "zeros", "(", "(", "M", ",", "1", ")", ")", ")", ")", "+", "(", "1", "-", "lambda_value", ")", "/", "M", "*", "np", ".", "concatenate", "(", "(", "np", ".", "zeros", "(", "(", "N", ",", "1", ")", ")", ",", "np", ".", "ones", "(", "(", "M", ",", "1", ")", ")", ")", ")", "\n", "(", "solution", ",", "distance_sqd", ")", "=", "find_nearest_valid_distribution", "(", "u_lambda", ",", "kernel", ",", "initial", "=", "prev_soln", ")", "\n", "prev_soln", "=", "solution", "\n", "d_lambda", ".", "append", "(", "sqrt", "(", "distance_sqd", ")", ")", "\n", "", "d_lambda", "=", "np", ".", "array", "(", "d_lambda", ")", "\n", "return", "d_lambda", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.compute_best_rbf_kernel_width": [[78, 104], ["numpy.concatenate", "numpy.dot", "sum", "math.sqrt", "numpy.exp", "numpy.median", "numpy.logspace", "numpy.exp", "numpy.concatenate", "math.sqrt", "numpy.multiply", "numpy.tile", "numpy.tile", "numpy.dot", "numpy.ones", "numpy.dot", "numpy.ones"], "function", ["None"], ["", "def", "compute_best_rbf_kernel_width", "(", "X_mixture", ",", "X_component", ")", ":", "\n", "    ", "N", "=", "X_mixture", ".", "shape", "[", "0", "]", "\n", "M", "=", "X_component", ".", "shape", "[", "0", "]", "\n", "# compute median of pairwise distances", "\n", "X", "=", "np", ".", "concatenate", "(", "(", "X_mixture", ",", "X_component", ")", ")", "\n", "dot_prod_matrix", "=", "np", ".", "dot", "(", "X", ",", "X", ".", "T", ")", "\n", "norms_squared", "=", "sum", "(", "np", ".", "multiply", "(", "X", ",", "X", ")", ".", "T", ")", "\n", "distance_sqd_matrix", "=", "np", ".", "tile", "(", "norms_squared", ",", "(", "N", "+", "M", ",", "1", ")", ")", "+", "np", ".", "tile", "(", "norms_squared", ",", "(", "N", "+", "M", ",", "1", ")", ")", ".", "T", "-", "2", "*", "dot_prod_matrix", "\n", "kernel_width_median", "=", "sqrt", "(", "np", ".", "median", "(", "distance_sqd_matrix", ")", ")", "\n", "kernel_width_vals", "=", "np", ".", "logspace", "(", "-", "1", ",", "1", ",", "5", ")", "*", "kernel_width_median", "\n", "\n", "# Find best kernel width", "\n", "\n", "max_dist_RKHS", "=", "0", "\n", "for", "kernel_width", "in", "kernel_width_vals", ":", "\n", "        ", "kernel", "=", "np", ".", "exp", "(", "-", "distance_sqd_matrix", "/", "(", "2.", "*", "kernel_width", "**", "2.", ")", ")", "\n", "dist_diff", "=", "np", ".", "concatenate", "(", "(", "np", ".", "ones", "(", "(", "N", ",", "1", ")", ")", "/", "N", ",", "\n", "-", "1", "*", "np", ".", "ones", "(", "(", "M", ",", "1", ")", ")", "/", "M", ")", ")", "\n", "distribution_RKHS_distance", "=", "sqrt", "(", "np", ".", "dot", "(", "dist_diff", ".", "T", ",", "\n", "np", ".", "dot", "(", "kernel", ",", "dist_diff", ")", ")", "[", "0", ",", "0", "]", ")", "\n", "if", "distribution_RKHS_distance", ">", "max_dist_RKHS", ":", "\n", "            ", "max_dist_RKHS", "=", "distribution_RKHS_distance", "\n", "best_kernel_width", "=", "kernel_width", "\n", "", "", "kernel", "=", "np", ".", "exp", "(", "-", "distance_sqd_matrix", "/", "(", "2.", "*", "best_kernel_width", "**", "2.", ")", ")", "\n", "return", "best_kernel_width", ",", "kernel", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.mpe": [[106, 143], ["numpy.concatenate", "math.sqrt", "Kernel_MPE.find_nearest_valid_distribution", "math.sqrt", "Kernel_MPE.find_nearest_valid_distribution", "math.sqrt", "numpy.dot", "numpy.ones", "numpy.dot", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.ones", "numpy.ones", "numpy.zeros", "numpy.zeros", "numpy.ones", "numpy.ones", "numpy.zeros", "numpy.zeros", "numpy.ones"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.find_nearest_valid_distribution", "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.find_nearest_valid_distribution"], ["", "def", "mpe", "(", "kernel", ",", "N", ",", "M", ",", "nu", ",", "epsilon", "=", "0.04", ",", "lambda_upper_bound", "=", "8.", ")", ":", "\n", "    ", "\"\"\" Do mixture proportion estimation (as in paper)for N  points from  \n    mixture F and M points from component H, given kernel of size (N+M)x(N+M), \n    with first N points from  the mixture  and last M points from \n    the component, and return estimate of lambda_star where\n    G =lambda_star*F + (1-lambda_star)*H\"\"\"", "\n", "\n", "dist_diff", "=", "np", ".", "concatenate", "(", "(", "np", ".", "ones", "(", "(", "N", ",", "1", ")", ")", "/", "N", ",", "-", "1", "*", "np", ".", "ones", "(", "(", "M", ",", "1", ")", ")", "/", "M", ")", ")", "\n", "distribution_RKHS_distance", "=", "sqrt", "(", "np", ".", "dot", "(", "dist_diff", ".", "T", ",", "\n", "np", ".", "dot", "(", "kernel", ",", "dist_diff", ")", ")", "[", "0", ",", "0", "]", ")", "\n", "lambda_left", "=", "1.", "\n", "lambda_right", "=", "lambda_upper_bound", "\n", "while", "lambda_right", "-", "lambda_left", ">", "epsilon", ":", "\n", "        ", "lambda_value", "=", "(", "lambda_left", "+", "lambda_right", ")", "/", "2.", "\n", "u_lambda", "=", "lambda_value", "/", "N", "*", "np", ".", "concatenate", "(", "(", "np", ".", "ones", "(", "(", "N", ",", "1", ")", ")", ",", "\n", "np", ".", "zeros", "(", "(", "M", ",", "1", ")", ")", ")", ")", "+", "(", "1", "-", "lambda_value", ")", "/", "M", "*", "np", ".", "concatenate", "(", "(", "np", ".", "zeros", "(", "(", "N", ",", "1", ")", ")", ",", "np", ".", "ones", "(", "(", "M", ",", "1", ")", ")", ")", ")", "\n", "(", "solution", ",", "distance_sqd", ")", "=", "find_nearest_valid_distribution", "(", "u_lambda", ",", "kernel", ")", "\n", "d_lambda_1", "=", "sqrt", "(", "distance_sqd", ")", "\n", "\n", "lambda_value", "=", "(", "lambda_left", "+", "lambda_right", ")", "/", "2.", "+", "epsilon", "/", "2.", "\n", "u_lambda", "=", "lambda_value", "/", "N", "*", "np", ".", "concatenate", "(", "(", "np", ".", "ones", "(", "(", "N", ",", "1", ")", ")", ",", "\n", "np", ".", "zeros", "(", "(", "M", ",", "1", ")", ")", ")", ")", "+", "(", "1", "-", "lambda_value", ")", "/", "M", "*", "np", ".", "concatenate", "(", "(", "np", ".", "zeros", "(", "(", "N", ",", "1", ")", ")", ",", "np", ".", "ones", "(", "(", "M", ",", "1", ")", ")", ")", ")", "\n", "(", "solution", ",", "distance_sqd", ")", "=", "find_nearest_valid_distribution", "(", "u_lambda", ",", "kernel", ")", "\n", "d_lambda_2", "=", "sqrt", "(", "distance_sqd", ")", "\n", "\n", "slope_lambda", "=", "(", "d_lambda_2", "-", "d_lambda_1", ")", "*", "2.", "/", "epsilon", "\n", "\n", "if", "slope_lambda", ">", "nu", "*", "distribution_RKHS_distance", ":", "\n", "            ", "lambda_right", "=", "(", "lambda_left", "+", "lambda_right", ")", "/", "2.", "\n", "", "else", ":", "\n", "            ", "lambda_left", "=", "(", "lambda_left", "+", "lambda_right", ")", "/", "2.", "\n", "\n", "", "", "return", "(", "lambda_left", "+", "lambda_right", ")", "/", "2.", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.wrapper": [[145, 170], ["Kernel_MPE.compute_best_rbf_kernel_width", "numpy.array", "Kernel_MPE.get_distance_curve", "numpy.concatenate", "math.sqrt", "Kernel_MPE.mpe", "Kernel_MPE.mpe", "math.sqrt", "numpy.dot", "numpy.min", "numpy.ones", "numpy.dot", "numpy.ones"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.compute_best_rbf_kernel_width", "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.get_distance_curve", "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.mpe", "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.mpe"], ["", "def", "wrapper", "(", "X_mixture", ",", "X_component", ")", ":", "\n", "    ", "\"\"\" Takes in 2 arrays containing the mixture and component data as \n    numpy arrays, and prints the estimate of kappastars using the two gradient \n    thresholds as detailed in the paper as KM1 and KM2\"\"\"", "\n", "\n", "N", "=", "X_mixture", ".", "shape", "[", "0", "]", "\n", "M", "=", "X_component", ".", "shape", "[", "0", "]", "\n", "best_width", ",", "kernel", "=", "compute_best_rbf_kernel_width", "(", "X_mixture", ",", "X_component", ")", "\n", "lambda_values", "=", "np", ".", "array", "(", "[", "1.00", ",", "1.05", "]", ")", "\n", "dists", "=", "get_distance_curve", "(", "kernel", ",", "lambda_values", ",", "N", "=", "N", ",", "M", "=", "M", ")", "\n", "begin_slope", "=", "(", "dists", "[", "1", "]", "-", "dists", "[", "0", "]", ")", "/", "(", "lambda_values", "[", "1", "]", "-", "lambda_values", "[", "0", "]", ")", "\n", "dist_diff", "=", "np", ".", "concatenate", "(", "(", "np", ".", "ones", "(", "(", "N", ",", "1", ")", ")", "/", "N", ",", "-", "1", "*", "np", ".", "ones", "(", "(", "M", ",", "1", ")", ")", "/", "M", ")", ")", "\n", "distribution_RKHS_dist", "=", "sqrt", "(", "np", ".", "dot", "(", "dist_diff", ".", "T", ",", "np", ".", "dot", "(", "kernel", ",", "dist_diff", ")", ")", "[", "0", ",", "0", "]", ")", "\n", "thres_par", "=", "0.2", "\n", "nu1", "=", "(", "1", "-", "thres_par", ")", "*", "begin_slope", "+", "thres_par", "*", "distribution_RKHS_dist", "\n", "nu1", "=", "nu1", "/", "distribution_RKHS_dist", "\n", "lambda_star_est_1", "=", "mpe", "(", "kernel", ",", "N", ",", "M", ",", "nu", "=", "nu1", ")", "\n", "kappa_star_est_1", "=", "(", "lambda_star_est_1", "-", "1", ")", "/", "lambda_star_est_1", "\n", "nu2", "=", "1", "/", "sqrt", "(", "np", ".", "min", "(", "[", "M", ",", "N", "]", ")", ")", "\n", "nu2", "=", "nu2", "/", "distribution_RKHS_dist", "\n", "if", "nu2", ">", "0.9", ":", "\n", "        ", "nu2", "=", "nu1", "\n", "", "lambda_star_est_2", "=", "mpe", "(", "kernel", ",", "N", ",", "M", ",", "nu", "=", "nu2", ")", "\n", "kappa_star_est_2", "=", "(", "lambda_star_est_2", "-", "1", ")", "/", "lambda_star_est_2", "\n", "return", "(", "kappa_star_est_2", ",", "kappa_star_est_1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.KM2_estimate": [[175, 185], ["numpy.random.shuffle", "numpy.random.shuffle", "Kernel_MPE.wrapper", "sklearn.decomposition.PCA", "sklearn.decomposition.PCA.fit", "sklearn.decomposition.PCA.transform", "sklearn.decomposition.PCA.transform", "pca.transform.astype", "pca.transform.astype"], "function", ["home.repos.pwc.inspect_result.csnakajima_pu-learning.modules.Kernel_MPE.wrapper"], ["def", "KM2_estimate", "(", "pos", ",", "unl", ")", ":", "\n", "    ", "np", ".", "random", ".", "shuffle", "(", "pos", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "unl", ")", "\n", "if", "unl", ".", "shape", "[", "1", "]", ">", "50", ":", "\n", "        ", "pca", "=", "PCA", "(", "n_components", "=", "50", ")", "\n", "pca", ".", "fit", "(", "unl", ")", "\n", "pos", "=", "pca", ".", "transform", "(", "pos", ")", "\n", "unl", "=", "pca", ".", "transform", "(", "unl", ")", "\n", "", "KM1", ",", "KM2", "=", "wrapper", "(", "unl", ".", "astype", "(", "np", ".", "float64", ")", ",", "pos", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "return", "KM2", "\n", "\n"]]}