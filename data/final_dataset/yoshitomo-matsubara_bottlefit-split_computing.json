{"home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.None.image_classification.get_argparser": [[27, 43], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["def", "get_argparser", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Knowledge distillation for image classification models'", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "required", "=", "True", ",", "help", "=", "'yaml file path'", ")", "\n", "parser", ".", "add_argument", "(", "'--device'", ",", "default", "=", "'cuda'", ",", "help", "=", "'device'", ")", "\n", "parser", ".", "add_argument", "(", "'--log'", ",", "help", "=", "'log file path'", ")", "\n", "parser", ".", "add_argument", "(", "'--start_epoch'", ",", "default", "=", "0", ",", "type", "=", "int", ",", "metavar", "=", "'N'", ",", "help", "=", "'start epoch'", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "help", "=", "'seed in random number generator'", ")", "\n", "parser", ".", "add_argument", "(", "'-test_only'", ",", "action", "=", "'store_true'", ",", "help", "=", "'only test the models'", ")", "\n", "parser", ".", "add_argument", "(", "'-student_only'", ",", "action", "=", "'store_true'", ",", "help", "=", "'test the student model only'", ")", "\n", "parser", ".", "add_argument", "(", "'-log_config'", ",", "action", "=", "'store_true'", ",", "help", "=", "'log config'", ")", "\n", "# distributed training parameters", "\n", "parser", ".", "add_argument", "(", "'--world_size'", ",", "default", "=", "1", ",", "type", "=", "int", ",", "help", "=", "'number of distributed processes'", ")", "\n", "parser", ".", "add_argument", "(", "'--dist_url'", ",", "default", "=", "'env://'", ",", "help", "=", "'url used to set up distributed training'", ")", "\n", "parser", ".", "add_argument", "(", "'-adjust_lr'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'multiply learning rate by number of distributed processes (world_size)'", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.None.image_classification.load_model": [[45, 54], ["torchdistill.models.official.get_image_classification_model", "torchdistill.common.main_util.load_ckpt", "torchdistill.models.registry.get_model.to", "model_config.get", "torchdistill.models.registry.get_model", "torch.distributed", "torch.distributed"], "function", ["None"], ["", "def", "load_model", "(", "model_config", ",", "device", ",", "distributed", ")", ":", "\n", "    ", "model", "=", "get_image_classification_model", "(", "model_config", ",", "distributed", ")", "\n", "if", "model", "is", "None", ":", "\n", "        ", "repo_or_dir", "=", "model_config", ".", "get", "(", "'repo_or_dir'", ",", "None", ")", "\n", "model", "=", "get_model", "(", "model_config", "[", "'name'", "]", ",", "repo_or_dir", ",", "**", "model_config", "[", "'params'", "]", ")", "\n", "\n", "", "ckpt_file_path", "=", "model_config", "[", "'ckpt'", "]", "\n", "load_ckpt", "(", "ckpt_file_path", ",", "model", "=", "model", ",", "strict", "=", "True", ")", "\n", "return", "model", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.None.image_classification.train_one_epoch": [[56, 72], ["torchdistill.misc.log.MetricLogger", "torchdistill.misc.log.MetricLogger.add_meter", "torchdistill.misc.log.MetricLogger.add_meter", "torchdistill.misc.log.MetricLogger.log_every", "torchdistill.misc.log.SmoothedValue", "torchdistill.misc.log.SmoothedValue", "time.time", "training_box", "training_box.update_params", "torchdistill.misc.log.MetricLogger.update", "torchdistill.misc.log.MetricLogger.meters[].update", "sample_batch.to", "targets.to", "torchdistill.common.main_util.is_main_process", "ValueError", "training_box.item", "torch.isnan", "torch.isinf", "time.time"], "function", ["None"], ["", "def", "train_one_epoch", "(", "training_box", ",", "device", ",", "epoch", ",", "log_freq", ")", ":", "\n", "    ", "metric_logger", "=", "MetricLogger", "(", "delimiter", "=", "'  '", ")", "\n", "metric_logger", ".", "add_meter", "(", "'lr'", ",", "SmoothedValue", "(", "window_size", "=", "1", ",", "fmt", "=", "'{value}'", ")", ")", "\n", "metric_logger", ".", "add_meter", "(", "'img/s'", ",", "SmoothedValue", "(", "window_size", "=", "10", ",", "fmt", "=", "'{value}'", ")", ")", "\n", "header", "=", "'Epoch: [{}]'", ".", "format", "(", "epoch", ")", "\n", "for", "sample_batch", ",", "targets", ",", "supp_dict", "in", "metric_logger", ".", "log_every", "(", "training_box", ".", "train_data_loader", ",", "log_freq", ",", "header", ")", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "sample_batch", ",", "targets", "=", "sample_batch", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "loss", "=", "training_box", "(", "sample_batch", ",", "targets", ",", "supp_dict", ")", "\n", "training_box", ".", "update_params", "(", "loss", ")", "\n", "batch_size", "=", "sample_batch", ".", "shape", "[", "0", "]", "\n", "metric_logger", ".", "update", "(", "loss", "=", "loss", ".", "item", "(", ")", ",", "lr", "=", "training_box", ".", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ")", "\n", "metric_logger", ".", "meters", "[", "'img/s'", "]", ".", "update", "(", "batch_size", "/", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", "\n", "if", "(", "torch", ".", "isnan", "(", "loss", ")", "or", "torch", ".", "isinf", "(", "loss", ")", ")", "and", "is_main_process", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'The training loop was broken due to loss = {}'", ".", "format", "(", "loss", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.None.image_classification.evaluate": [[74, 104], ["torch.inference_mode", "torch.nn.DataParallel.to", "torch.nn.DataParallel.eval", "torchdistill.misc.log.MetricLogger", "torchdistill.misc.log.MetricLogger.log_every", "torchdistill.misc.log.MetricLogger.synchronize_between_processes", "logger.info", "torch.nn.parallel.DistributedDataParallel", "device.type.startswith", "logger.info", "image.to.to", "target.to.to", "torch.nn.DataParallel.", "torchdistill.eval.classification.compute_accuracy", "torchdistill.misc.log.MetricLogger.meters[].update", "torchdistill.misc.log.MetricLogger.meters[].update", "torch.nn.DataParallel", "acc1.item", "acc5.item", "torch.distributed", "torch.distributed", "torch.distributed"], "function", ["None"], ["", "", "", "@", "torch", ".", "inference_mode", "(", ")", "\n", "def", "evaluate", "(", "model", ",", "data_loader", ",", "device", ",", "device_ids", ",", "distributed", ",", "log_freq", "=", "1000", ",", "title", "=", "None", ",", "header", "=", "'Test:'", ")", ":", "\n", "    ", "model", ".", "to", "(", "device", ")", "\n", "if", "distributed", ":", "\n", "        ", "model", "=", "DistributedDataParallel", "(", "model", ",", "device_ids", "=", "device_ids", ")", "\n", "", "elif", "device", ".", "type", ".", "startswith", "(", "'cuda'", ")", ":", "\n", "        ", "model", "=", "DataParallel", "(", "model", ",", "device_ids", "=", "device_ids", ")", "\n", "\n", "", "if", "title", "is", "not", "None", ":", "\n", "        ", "logger", ".", "info", "(", "title", ")", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "metric_logger", "=", "MetricLogger", "(", "delimiter", "=", "'  '", ")", "\n", "for", "image", ",", "target", "in", "metric_logger", ".", "log_every", "(", "data_loader", ",", "log_freq", ",", "header", ")", ":", "\n", "        ", "image", "=", "image", ".", "to", "(", "device", ",", "non_blocking", "=", "True", ")", "\n", "target", "=", "target", ".", "to", "(", "device", ",", "non_blocking", "=", "True", ")", "\n", "output", "=", "model", "(", "image", ")", "\n", "acc1", ",", "acc5", "=", "compute_accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "# FIXME need to take into account that the datasets", "\n", "# could have been padded in distributed setup", "\n", "batch_size", "=", "image", ".", "shape", "[", "0", "]", "\n", "metric_logger", ".", "meters", "[", "'acc1'", "]", ".", "update", "(", "acc1", ".", "item", "(", ")", ",", "n", "=", "batch_size", ")", "\n", "metric_logger", ".", "meters", "[", "'acc5'", "]", ".", "update", "(", "acc5", ".", "item", "(", ")", ",", "n", "=", "batch_size", ")", "\n", "\n", "# gather the stats from all processes", "\n", "", "metric_logger", ".", "synchronize_between_processes", "(", ")", "\n", "top1_accuracy", "=", "metric_logger", ".", "acc1", ".", "global_avg", "\n", "top5_accuracy", "=", "metric_logger", ".", "acc5", ".", "global_avg", "\n", "logger", ".", "info", "(", "' * Acc@1 {:.4f}\\tAcc@5 {:.4f}\\n'", ".", "format", "(", "top1_accuracy", ",", "top5_accuracy", ")", ")", "\n", "return", "metric_logger", ".", "acc1", ".", "global_avg", "\n", "\n"]], "home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.None.image_classification.train": [[106, 142], ["logger.info", "torchdistill.common.file_util.check_if_exists", "time.time", "range", "str", "logger.info", "training_box.clean_modules", "torchdistill.core.training.get_training_box", "torchdistill.core.distillation.get_distillation_box", "torchdistill.common.main_util.load_ckpt", "torchdistill.common.module_util.check_if_wrapped", "training_box.pre_process", "image_classification.train_one_epoch", "image_classification.evaluate", "training_box.post_process", "torch.distributed.barrier", "time.time", "datetime.timedelta", "torchdistill.common.main_util.is_main_process", "logger.info", "logger.info", "torchdistill.common.main_util.save_ckpt", "int", "torch.distributed"], "function", ["home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.None.image_classification.train_one_epoch", "home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.None.image_classification.evaluate"], ["", "def", "train", "(", "teacher_model", ",", "student_model", ",", "dataset_dict", ",", "ckpt_file_path", ",", "device", ",", "device_ids", ",", "distributed", ",", "config", ",", "args", ")", ":", "\n", "    ", "logger", ".", "info", "(", "'Start training'", ")", "\n", "train_config", "=", "config", "[", "'train'", "]", "\n", "lr_factor", "=", "args", ".", "world_size", "if", "distributed", "and", "args", ".", "adjust_lr", "else", "1", "\n", "training_box", "=", "get_training_box", "(", "student_model", ",", "dataset_dict", ",", "train_config", ",", "\n", "device", ",", "device_ids", ",", "distributed", ",", "lr_factor", ")", "if", "teacher_model", "is", "None", "else", "get_distillation_box", "(", "teacher_model", ",", "student_model", ",", "dataset_dict", ",", "train_config", ",", "\n", "device", ",", "device_ids", ",", "distributed", ",", "lr_factor", ")", "\n", "best_val_top1_accuracy", "=", "0.0", "\n", "optimizer", ",", "lr_scheduler", "=", "training_box", ".", "optimizer", ",", "training_box", ".", "lr_scheduler", "\n", "if", "file_util", ".", "check_if_exists", "(", "ckpt_file_path", ")", ":", "\n", "        ", "best_val_top1_accuracy", ",", "_", ",", "_", "=", "load_ckpt", "(", "ckpt_file_path", ",", "optimizer", "=", "optimizer", ",", "lr_scheduler", "=", "lr_scheduler", ")", "\n", "\n", "", "log_freq", "=", "train_config", "[", "'log_freq'", "]", "\n", "student_model_without_ddp", "=", "student_model", ".", "module", "if", "module_util", ".", "check_if_wrapped", "(", "student_model", ")", "else", "student_model", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "start_epoch", ",", "training_box", ".", "num_epochs", ")", ":", "\n", "        ", "training_box", ".", "pre_process", "(", "epoch", "=", "epoch", ")", "\n", "train_one_epoch", "(", "training_box", ",", "device", ",", "epoch", ",", "log_freq", ")", "\n", "val_top1_accuracy", "=", "evaluate", "(", "student_model", ",", "training_box", ".", "val_data_loader", ",", "device", ",", "device_ids", ",", "distributed", ",", "\n", "log_freq", "=", "log_freq", ",", "header", "=", "'Validation:'", ")", "\n", "if", "val_top1_accuracy", ">", "best_val_top1_accuracy", "and", "is_main_process", "(", ")", ":", "\n", "            ", "logger", ".", "info", "(", "'Best top-1 accuracy: {:.4f} -> {:.4f}'", ".", "format", "(", "best_val_top1_accuracy", ",", "val_top1_accuracy", ")", ")", "\n", "logger", ".", "info", "(", "'Updating ckpt at {}'", ".", "format", "(", "ckpt_file_path", ")", ")", "\n", "best_val_top1_accuracy", "=", "val_top1_accuracy", "\n", "save_ckpt", "(", "student_model_without_ddp", ",", "optimizer", ",", "lr_scheduler", ",", "\n", "best_val_top1_accuracy", ",", "config", ",", "args", ",", "ckpt_file_path", ")", "\n", "", "training_box", ".", "post_process", "(", ")", "\n", "\n", "", "if", "distributed", ":", "\n", "        ", "dist", ".", "barrier", "(", ")", "\n", "\n", "", "total_time", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "total_time_str", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "int", "(", "total_time", ")", ")", ")", "\n", "logger", ".", "info", "(", "'Training time {}'", ".", "format", "(", "total_time_str", ")", ")", "\n", "training_box", ".", "clean_modules", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.None.image_classification.main": [[144, 183], ["torchdistill.common.main_util.init_distributed_mode", "logger.info", "torchdistill.common.main_util.set_seed", "torchdistill.common.yaml_util.load_yaml_file", "torch.device", "torchdistill.datasets.util.get_all_datasets", "models_config.get", "image_classification.load_model", "torchdistill.datasets.util.build_data_loader", "test_config.get", "image_classification.evaluate", "torchdistill.common.main_util.is_main_process", "torchdistill.misc.log.setup_log_file", "os.path.expanduser", "image_classification.load_model", "logger.info", "image_classification.train", "torchdistill.common.main_util.load_ckpt", "image_classification.evaluate", "os.path.expanduser", "torchdistill.common.module_util.check_if_wrapped"], "function", ["home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.None.image_classification.load_model", "home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.None.image_classification.evaluate", "home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.None.image_classification.load_model", "home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.None.image_classification.train", "home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.None.image_classification.evaluate"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "log_file_path", "=", "args", ".", "log", "\n", "if", "is_main_process", "(", ")", "and", "log_file_path", "is", "not", "None", ":", "\n", "        ", "setup_log_file", "(", "os", ".", "path", ".", "expanduser", "(", "log_file_path", ")", ")", "\n", "\n", "", "distributed", ",", "device_ids", "=", "init_distributed_mode", "(", "args", ".", "world_size", ",", "args", ".", "dist_url", ")", "\n", "logger", ".", "info", "(", "args", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "set_seed", "(", "args", ".", "seed", ")", "\n", "config", "=", "yaml_util", ".", "load_yaml_file", "(", "os", ".", "path", ".", "expanduser", "(", "args", ".", "config", ")", ")", "\n", "device", "=", "torch", ".", "device", "(", "args", ".", "device", ")", "\n", "dataset_dict", "=", "util", ".", "get_all_datasets", "(", "config", "[", "'datasets'", "]", ")", "\n", "models_config", "=", "config", "[", "'models'", "]", "\n", "teacher_model_config", "=", "models_config", ".", "get", "(", "'teacher_model'", ",", "None", ")", "\n", "teacher_model", "=", "load_model", "(", "teacher_model_config", ",", "device", ",", "distributed", ")", "if", "teacher_model_config", "is", "not", "None", "else", "None", "\n", "student_model_config", "=", "models_config", "[", "'student_model'", "]", "if", "'student_model'", "in", "models_config", "else", "models_config", "[", "'model'", "]", "\n", "ckpt_file_path", "=", "student_model_config", "[", "'ckpt'", "]", "\n", "student_model", "=", "load_model", "(", "student_model_config", ",", "device", ",", "distributed", ")", "\n", "if", "args", ".", "log_config", ":", "\n", "        ", "logger", ".", "info", "(", "config", ")", "\n", "\n", "", "if", "not", "args", ".", "test_only", ":", "\n", "        ", "train", "(", "teacher_model", ",", "student_model", ",", "dataset_dict", ",", "ckpt_file_path", ",", "device", ",", "device_ids", ",", "distributed", ",", "config", ",", "args", ")", "\n", "student_model_without_ddp", "=", "student_model", ".", "module", "if", "module_util", ".", "check_if_wrapped", "(", "student_model", ")", "else", "student_model", "\n", "load_ckpt", "(", "student_model_config", "[", "'ckpt'", "]", ",", "model", "=", "student_model_without_ddp", ",", "strict", "=", "True", ")", "\n", "\n", "", "test_config", "=", "config", "[", "'test'", "]", "\n", "test_data_loader_config", "=", "test_config", "[", "'test_data_loader'", "]", "\n", "test_data_loader", "=", "util", ".", "build_data_loader", "(", "dataset_dict", "[", "test_data_loader_config", "[", "'dataset_id'", "]", "]", ",", "\n", "test_data_loader_config", ",", "distributed", ")", "\n", "log_freq", "=", "test_config", ".", "get", "(", "'log_freq'", ",", "1000", ")", "\n", "if", "not", "args", ".", "student_only", "and", "teacher_model", "is", "not", "None", ":", "\n", "        ", "evaluate", "(", "teacher_model", ",", "test_data_loader", ",", "device", ",", "device_ids", ",", "distributed", ",", "log_freq", "=", "log_freq", ",", "\n", "title", "=", "'[Teacher: {}]'", ".", "format", "(", "teacher_model_config", "[", "'name'", "]", ")", ")", "\n", "", "evaluate", "(", "student_model", ",", "test_data_loader", ",", "device", ",", "device_ids", ",", "distributed", ",", "log_freq", "=", "log_freq", ",", "\n", "title", "=", "'[Student: {}]'", ".", "format", "(", "student_model_config", "[", "'name'", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.custom.model.Bottleneck4ResNet152.__init__": [[11, 87], ["torch.nn.Sequential", "torch.nn.Sequential", "torchdistill.models.custom.bottleneck.base.BottleneckBase.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.MaxPool2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.AvgPool2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.MaxPool2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.AvgPool2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.MaxPool2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.custom.model.Bottleneck4ResNet152.__init__"], ["    ", "def", "__init__", "(", "self", ",", "bottleneck_channel", "=", "12", ",", "bottleneck_idx", "=", "7", ",", "bottleneck_ver", "=", "'2'", ",", "compressor", "=", "None", ",", "decompressor", "=", "None", ")", ":", "\n", "        ", "if", "bottleneck_ver", "==", "'1'", ":", "\n", "            ", "modules", "=", "[", "\n", "nn", ".", "Conv2d", "(", "3", ",", "bottleneck_channel", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "bottleneck_channel", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "bottleneck_channel", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "bottleneck_channel", ",", "64", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "1", ")", "\n", "]", "\n", "", "elif", "bottleneck_ver", "==", "'2'", ":", "\n", "            ", "modules", "=", "[", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "bottleneck_channel", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "bottleneck_channel", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "bottleneck_channel", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "1", ")", "\n", "]", "\n", "", "else", ":", "\n", "            ", "modules", "=", "[", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "bottleneck_channel", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "bottleneck_channel", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "bottleneck_channel", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "1", ")", "\n", "]", "\n", "", "encoder", "=", "nn", ".", "Sequential", "(", "*", "modules", "[", ":", "bottleneck_idx", "]", ")", "\n", "decoder", "=", "nn", ".", "Sequential", "(", "*", "modules", "[", "bottleneck_idx", ":", "]", ")", "\n", "super", "(", ")", ".", "__init__", "(", "encoder", "=", "encoder", ",", "decoder", "=", "decoder", ",", "compressor", "=", "compressor", ",", "decompressor", "=", "decompressor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yoshitomo-matsubara_bottlefit-split_computing.custom.model.custom_resnet152": [[89, 104], ["model.Bottleneck4ResNet152", "torchvision.models.resnet152", "torchdistill.models.custom.bottleneck.classification.resnet.CustomResNet", "torchdistill.models.custom.bottleneck.processor.get_bottleneck_processor", "torchdistill.models.custom.bottleneck.processor.get_bottleneck_processor"], "function", ["None"], ["", "", "@", "register_model_func", "\n", "def", "custom_resnet152", "(", "bottleneck_channel", "=", "12", ",", "bottleneck_idx", "=", "7", ",", "bottleneck_ver", "=", "'2'", ",", "compressor", "=", "None", ",", "decompressor", "=", "None", ",", "\n", "short_module_names", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "short_module_names", "is", "None", ":", "\n", "        ", "short_module_names", "=", "[", "'layer3'", ",", "'layer4'", ",", "'avgpool'", ",", "'fc'", "]", "\n", "\n", "", "if", "compressor", "is", "not", "None", ":", "\n", "        ", "compressor", "=", "get_bottleneck_processor", "(", "compressor", "[", "'name'", "]", ",", "**", "compressor", "[", "'params'", "]", ")", "\n", "\n", "", "if", "decompressor", "is", "not", "None", ":", "\n", "        ", "decompressor", "=", "get_bottleneck_processor", "(", "decompressor", "[", "'name'", "]", ",", "**", "decompressor", "[", "'params'", "]", ")", "\n", "\n", "", "bottleneck", "=", "Bottleneck4ResNet152", "(", "bottleneck_channel", ",", "bottleneck_idx", ",", "bottleneck_ver", ",", "compressor", ",", "decompressor", ")", "\n", "org_model", "=", "resnet152", "(", "**", "kwargs", ")", "\n", "return", "CustomResNet", "(", "bottleneck", ",", "short_module_names", ",", "org_model", ")", "\n", "", ""]]}