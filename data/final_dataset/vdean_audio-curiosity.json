{"home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.MaxAndSkipEnv.__init__": [[9, 15], ["gym.Wrapper.__init__", "collections.deque"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "skip", "=", "4", ")", ":", "\n", "        ", "\"\"\"Return only every `skip`-th frame\"\"\"", "\n", "gym", ".", "Wrapper", ".", "__init__", "(", "self", ",", "env", ")", "\n", "# most recent raw observations (for max pooling across time steps)", "\n", "self", ".", "_obs_buffer", "=", "deque", "(", "maxlen", "=", "2", ")", "\n", "self", ".", "_skip", "=", "skip", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.MaxAndSkipEnv.step": [[16, 37], ["range", "numpy.max", "wrappers.MaxAndSkipEnv.env.step", "acc_info.update", "wrappers.MaxAndSkipEnv._obs_buffer.append", "numpy.stack", "len", "numpy.asarray", "audio.extend"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.step", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.RewardForwardFilter.update"], ["", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "        ", "\"\"\"Repeat action, sum reward, and max over last observations.\"\"\"", "\n", "total_reward", "=", "0.0", "\n", "done", "=", "None", "\n", "acc_info", "=", "{", "}", "\n", "audio", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "self", ".", "_skip", ")", ":", "\n", "            ", "obs", ",", "reward", ",", "done", ",", "info", "=", "self", ".", "env", ".", "step", "(", "action", ")", "\n", "acc_info", ".", "update", "(", "info", ")", "\n", "self", ".", "_obs_buffer", ".", "append", "(", "obs", ")", "\n", "total_reward", "+=", "reward", "\n", "\n", "if", "'audio'", "in", "info", ":", "\n", "# Keep audio from skipped frames", "\n", "                ", "audio", ".", "extend", "(", "info", "[", "'audio'", "]", ")", "\n", "", "if", "done", ":", "\n", "                ", "break", "\n", "", "", "max_frame", "=", "np", ".", "max", "(", "np", ".", "stack", "(", "self", ".", "_obs_buffer", ")", ",", "axis", "=", "0", ")", "\n", "if", "len", "(", "audio", ")", ">", "0", ":", "\n", "            ", "acc_info", "[", "'audio'", "]", "=", "np", ".", "asarray", "(", "audio", ")", "\n", "", "return", "max_frame", ",", "total_reward", ",", "done", ",", "acc_info", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.MaxAndSkipEnv.reset": [[38, 44], ["wrappers.MaxAndSkipEnv._obs_buffer.clear", "wrappers.MaxAndSkipEnv.env.reset", "wrappers.MaxAndSkipEnv._obs_buffer.append"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\"Clear past frame buffer and init. to first obs. from inner env.\"\"\"", "\n", "self", ".", "_obs_buffer", ".", "clear", "(", ")", "\n", "obs", "=", "self", ".", "env", ".", "reset", "(", ")", "\n", "self", ".", "_obs_buffer", ".", "append", "(", "obs", ")", "\n", "return", "obs", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.ProcessFrame84.__init__": [[47, 51], ["gym.ObservationWrapper.__init__", "gym.spaces.Box"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "crop", "=", "True", ")", ":", "\n", "        ", "self", ".", "crop", "=", "crop", "\n", "super", "(", "ProcessFrame84", ",", "self", ")", ".", "__init__", "(", "env", ")", "\n", "self", ".", "observation_space", "=", "gym", ".", "spaces", ".", "Box", "(", "low", "=", "0", ",", "high", "=", "255", ",", "shape", "=", "(", "84", ",", "84", ",", "1", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.ProcessFrame84.observation": [[52, 54], ["wrappers.ProcessFrame84.process"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.ProcessFrame84.process"], ["", "def", "observation", "(", "self", ",", "obs", ")", ":", "\n", "        ", "return", "ProcessFrame84", ".", "process", "(", "obs", ",", "crop", "=", "self", ".", "crop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.ProcessFrame84.process": [[55, 72], ["numpy.array", "numpy.reshape", "numpy.reshape.astype", "numpy.reshape().astype", "PIL.Image.fromarray().resize", "numpy.reshape().astype", "numpy.reshape", "numpy.reshape().astype", "PIL.Image.fromarray", "numpy.reshape", "str", "numpy.reshape"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "process", "(", "frame", ",", "crop", "=", "True", ")", ":", "\n", "        ", "if", "frame", ".", "size", "==", "210", "*", "160", "*", "3", ":", "\n", "            ", "img", "=", "np", ".", "reshape", "(", "frame", ",", "[", "210", ",", "160", ",", "3", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "elif", "frame", ".", "size", "==", "250", "*", "160", "*", "3", ":", "\n", "            ", "img", "=", "np", ".", "reshape", "(", "frame", ",", "[", "250", ",", "160", ",", "3", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "elif", "frame", ".", "size", "==", "224", "*", "240", "*", "3", ":", "\n", "            ", "img", "=", "np", ".", "reshape", "(", "frame", ",", "[", "224", ",", "240", ",", "3", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "            ", "assert", "False", ",", "\"Unknown resolution.\"", "+", "str", "(", "frame", ".", "size", ")", "\n", "", "img", "=", "img", "[", ":", ",", ":", ",", "0", "]", "*", "0.299", "+", "img", "[", ":", ",", ":", ",", "1", "]", "*", "0.587", "+", "img", "[", ":", ",", ":", ",", "2", "]", "*", "0.114", "\n", "size", "=", "(", "84", ",", "110", "if", "crop", "else", "84", ")", "\n", "resized_screen", "=", "np", ".", "array", "(", "Image", ".", "fromarray", "(", "img", ")", ".", "resize", "(", "\n", "size", ",", "resample", "=", "Image", ".", "BILINEAR", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "x_t", "=", "resized_screen", "[", "18", ":", "102", ",", ":", "]", "if", "crop", "else", "resized_screen", "\n", "x_t", "=", "np", ".", "reshape", "(", "x_t", ",", "[", "84", ",", "84", ",", "1", "]", ")", "\n", "return", "x_t", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.ExtraTimeLimit.__init__": [[75, 79], ["gym.Wrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "max_episode_steps", "=", "None", ")", ":", "\n", "        ", "gym", ".", "Wrapper", ".", "__init__", "(", "self", ",", "env", ")", "\n", "self", ".", "_max_episode_steps", "=", "max_episode_steps", "\n", "self", ".", "_elapsed_steps", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.ExtraTimeLimit.step": [[80, 86], ["wrappers.ExtraTimeLimit.env.step"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.step"], ["", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "        ", "observation", ",", "reward", ",", "done", ",", "info", "=", "self", ".", "env", ".", "step", "(", "action", ")", "\n", "self", ".", "_elapsed_steps", "+=", "1", "\n", "if", "self", ".", "_elapsed_steps", ">", "self", ".", "_max_episode_steps", ":", "\n", "            ", "done", "=", "True", "\n", "", "return", "observation", ",", "reward", ",", "done", ",", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.ExtraTimeLimit.reset": [[87, 90], ["wrappers.ExtraTimeLimit.env.reset"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_elapsed_steps", "=", "0", "\n", "return", "self", ".", "env", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.FrameSkip.__init__": [[93, 96], ["gym.Wrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "n", ")", ":", "\n", "        ", "gym", ".", "Wrapper", ".", "__init__", "(", "self", ",", "env", ")", "\n", "self", ".", "n", "=", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.FrameSkip.step": [[97, 113], ["range", "numpy.asarray", "wrappers.FrameSkip.env.step", "audio.extend"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.step"], ["", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "        ", "done", "=", "False", "\n", "totrew", "=", "0", "\n", "audio", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "self", ".", "n", ")", ":", "\n", "#self.env.render()", "\n", "            ", "ob", ",", "rew", ",", "done", ",", "info", "=", "self", ".", "env", ".", "step", "(", "action", ")", "\n", "totrew", "+=", "rew", "\n", "\n", "# Keep audio from skipped frames", "\n", "audio", ".", "extend", "(", "info", "[", "'audio'", "]", ")", "\n", "if", "done", ":", "\n", "                ", "break", "\n", "\n", "", "", "info", "[", "'audio'", "]", "=", "np", ".", "asarray", "(", "audio", ")", "\n", "return", "ob", ",", "totrew", ",", "done", ",", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.RetroALEActions.__init__": [[116, 138], ["gym.ActionWrapper.__init__", "len", "range", "gym.spaces.Discrete", "wrappers.RetroALEActions.__init__.update_actions"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "all_buttons", ",", "n_players", "=", "1", ")", ":", "\n", "        ", "gym", ".", "ActionWrapper", ".", "__init__", "(", "self", ",", "env", ")", "\n", "self", ".", "n_players", "=", "n_players", "\n", "self", ".", "_num_buttons", "=", "len", "(", "all_buttons", ")", "\n", "bs", "=", "[", "-", "1", ",", "0", ",", "4", ",", "5", ",", "6", ",", "7", "]", "\n", "\n", "def", "update_actions", "(", "old_actions", ",", "offset", "=", "0", ")", ":", "\n", "            ", "actions", "=", "[", "]", "\n", "for", "b", "in", "old_actions", ":", "\n", "                ", "for", "button", "in", "bs", ":", "\n", "                    ", "action", "=", "[", "]", "\n", "action", ".", "extend", "(", "b", ")", "\n", "if", "button", "!=", "-", "1", ":", "\n", "                        ", "action", ".", "append", "(", "button", "+", "offset", ")", "\n", "", "actions", ".", "append", "(", "action", ")", "\n", "", "", "return", "actions", "\n", "\n", "", "current_actions", "=", "[", "[", "]", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "n_players", ")", ":", "\n", "            ", "current_actions", "=", "update_actions", "(", "current_actions", ",", "i", "*", "self", ".", "_num_buttons", ")", "\n", "", "self", ".", "_actions", "=", "current_actions", "\n", "self", ".", "action_space", "=", "gym", ".", "spaces", ".", "Discrete", "(", "len", "(", "self", ".", "_actions", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.RetroALEActions.action": [[139, 144], ["numpy.zeros"], "methods", ["None"], ["", "def", "action", "(", "self", ",", "a", ")", ":", "\n", "        ", "mask", "=", "np", ".", "zeros", "(", "self", ".", "_num_buttons", "*", "self", ".", "n_players", ")", "\n", "for", "i", "in", "self", ".", "_actions", "[", "a", "]", ":", "\n", "            ", "mask", "[", "i", "]", "=", "1", "\n", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.StickyActionEnv.__init__": [[147, 151], ["gym.Wrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "p", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "StickyActionEnv", ",", "self", ")", ".", "__init__", "(", "env", ")", "\n", "self", ".", "p", "=", "p", "\n", "self", ".", "last_action", "=", "[", "0", "]", "*", "8", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.StickyActionEnv.reset": [[152, 155], ["wrappers.StickyActionEnv.env.reset"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "last_action", "=", "[", "0", "]", "*", "8", "\n", "return", "self", ".", "env", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.StickyActionEnv.step": [[156, 162], ["wrappers.StickyActionEnv.env.step", "wrappers.StickyActionEnv.unwrapped.np_random.uniform"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.step"], ["", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "        ", "if", "self", ".", "unwrapped", ".", "np_random", ".", "uniform", "(", ")", "<", "self", ".", "p", ":", "\n", "            ", "action", "=", "self", ".", "last_action", "\n", "", "self", ".", "last_action", "=", "action", "\n", "obs", ",", "reward", ",", "done", ",", "info", "=", "self", ".", "env", ".", "step", "(", "action", ")", "\n", "return", "obs", ",", "reward", ",", "done", ",", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.make_retro": [[164, 181], ["retro.make", "wrappers.MaxAndSkipEnv", "wrappers.ProcessFrame84", "FrameStack", "wrappers.RetroALEActions", "wrappers.ExtraTimeLimit", "wrappers.StickyActionEnv"], "function", ["None"], ["", "", "def", "make_retro", "(", "env_name", "=", "\"Breakout\"", ",", "naudio_samples", "=", "None", ",", "\n", "sticky_env", "=", "False", ",", "make_video", "=", "False", ",", "is_baseline", "=", "False", ")", ":", "\n", "    ", "import", "retro", "\n", "from", "baselines", ".", "common", ".", "atari_wrappers", "import", "FrameStack", "\n", "env", "=", "retro", ".", "make", "(", "env_name", "+", "'-Atari2600'", ",", "naudio_samples", "=", "naudio_samples", ",", "\n", "make_video", "=", "make_video", ",", "is_baseline", "=", "is_baseline", ")", "\n", "max_episode_steps", "=", "4500", "\n", "env", "=", "MaxAndSkipEnv", "(", "env", ",", "skip", "=", "4", ")", "\n", "env", "=", "ProcessFrame84", "(", "env", ",", "crop", "=", "False", ")", "\n", "env", "=", "FrameStack", "(", "env", ",", "4", ")", "\n", "if", "not", "sticky_env", ":", "\n", "        ", "env", "=", "ExtraTimeLimit", "(", "env", ",", "max_episode_steps", ")", "\n", "", "if", "sticky_env", ":", "\n", "        ", "env", ".", "_max_episode_steps", "=", "max_episode_steps", "*", "4", "\n", "env", "=", "StickyActionEnv", "(", "env", ")", "\n", "", "env", "=", "RetroALEActions", "(", "env", ",", "env", ".", "buttons", ")", "\n", "return", "env", "\n", "", ""]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.__init__": [[32, 148], ["retro.data.get_romfile_path", "retro.data.get_romfile_path", "retro.data.get_romfile_path", "retro.data.get_romfile_path", "retro.data.get_file_path", "retro.data.get_file_path", "retro.data.get_file_path", "retro.data.get_file_path", "retro.data.GameData", "retro.data.GameData", "retro.data.GameData", "retro.data.GameData", "info.endswith", "scenario.endswith", "retro.get_romfile_system", "retro.get_romfile_system", "retro.get_romfile_system", "retro.get_romfile_system", "gc.collect", "retro.RetroEmulator", "retro.RetroEmulator", "retro.RetroEmulator", "retro.RetroEmulator", "retro_env.RetroEnv.em.configure_data", "retro_env.RetroEnv.em.step", "retro.get_system_info", "retro.get_system_info", "retro.get_system_info", "retro.get_system_info", "len", "retro_env.RetroEnv.data.valid_actions", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "retro_env.RetroEnv.seed", "hasattr", "retro_env.RetroEnv.load_state", "retro.data.get_file_path", "retro.data.get_file_path", "retro.data.get_file_path", "retro.data.get_file_path", "retro.data.get_file_path", "retro.data.get_file_path", "retro.data.get_file_path", "retro.data.get_file_path", "retro_env.RetroEnv.data.load", "gym.spaces.Discrete", "gym.spaces.Discrete", "gym.spaces.Discrete", "gym.spaces.Discrete", "retro_env.RetroEnv.auto_record", "len", "gym.spaces.MultiDiscrete", "gym.spaces.MultiDiscrete", "gym.spaces.MultiDiscrete", "gym.spaces.MultiDiscrete", "gym.spaces.MultiBinary", "gym.spaces.MultiBinary", "gym.spaces.MultiBinary", "gym.spaces.MultiBinary", "retro_env.RetroEnv.get_ram", "retro_env.RetroEnv.get_screen", "retro_env.RetroEnv.auto_record", "range", "open", "json.load", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.step", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.seed", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.load_state", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.auto_record", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.get_ram", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.get_screen", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.auto_record"], ["def", "__init__", "(", "self", ",", "game", ",", "state", "=", "retro", ".", "State", ".", "DEFAULT", ",", "scenario", "=", "None", ",", "info", "=", "None", ",", "use_restricted_actions", "=", "retro", ".", "Actions", ".", "FILTERED", ",", "\n", "record", "=", "False", ",", "players", "=", "1", ",", "inttype", "=", "retro", ".", "data", ".", "Integrations", ".", "STABLE", ",", "obs_type", "=", "retro", ".", "Observations", ".", "IMAGE", ",", "naudio_samples", "=", "None", ",", "make_video", "=", "False", ",", "is_baseline", "=", "False", ")", ":", "\n", "        ", "if", "not", "hasattr", "(", "self", ",", "'spec'", ")", ":", "\n", "            ", "self", ".", "spec", "=", "None", "\n", "", "self", ".", "_obs_type", "=", "obs_type", "\n", "self", ".", "img", "=", "None", "\n", "self", ".", "ram", "=", "None", "\n", "self", ".", "viewer", "=", "None", "\n", "self", ".", "gamename", "=", "game", "\n", "self", ".", "statename", "=", "state", "\n", "self", ".", "initial_state", "=", "None", "\n", "self", ".", "players", "=", "players", "\n", "self", ".", "naudio_samples", "=", "naudio_samples", "\n", "self", ".", "audio_clip", "=", "[", "]", "\n", "self", ".", "make_video", "=", "make_video", "\n", "self", ".", "is_baseline", "=", "is_baseline", "\n", "\n", "metadata", "=", "{", "}", "\n", "rom_path", "=", "retro", ".", "data", ".", "get_romfile_path", "(", "game", ",", "inttype", ")", "\n", "metadata_path", "=", "retro", ".", "data", ".", "get_file_path", "(", "game", ",", "'metadata.json'", ",", "inttype", ")", "\n", "\n", "if", "state", "==", "retro", ".", "State", ".", "NONE", ":", "\n", "            ", "self", ".", "statename", "=", "None", "\n", "", "elif", "state", "==", "retro", ".", "State", ".", "DEFAULT", ":", "\n", "            ", "self", ".", "statename", "=", "None", "\n", "try", ":", "\n", "                ", "with", "open", "(", "metadata_path", ")", "as", "f", ":", "\n", "                    ", "metadata", "=", "json", ".", "load", "(", "f", ")", "\n", "", "if", "'default_player_state'", "in", "metadata", "and", "self", ".", "players", "<=", "len", "(", "metadata", "[", "'default_player_state'", "]", ")", ":", "\n", "                    ", "self", ".", "statename", "=", "metadata", "[", "'default_player_state'", "]", "[", "self", ".", "players", "-", "1", "]", "\n", "", "elif", "'default_state'", "in", "metadata", ":", "\n", "                    ", "self", ".", "statename", "=", "metadata", "[", "'default_state'", "]", "\n", "", "else", ":", "\n", "                    ", "self", ".", "statename", "=", "None", "\n", "", "", "except", "(", "IOError", ",", "json", ".", "JSONDecodeError", ")", ":", "\n", "                ", "pass", "\n", "\n", "", "", "if", "self", ".", "statename", ":", "\n", "            ", "self", ".", "load_state", "(", "self", ".", "statename", ",", "inttype", ")", "\n", "\n", "", "self", ".", "data", "=", "retro", ".", "data", ".", "GameData", "(", ")", "\n", "\n", "if", "info", "is", "None", ":", "\n", "            ", "info", "=", "'data'", "\n", "\n", "", "if", "info", ".", "endswith", "(", "'.json'", ")", ":", "\n", "# assume it's a path", "\n", "            ", "info_path", "=", "info", "\n", "", "else", ":", "\n", "            ", "info_path", "=", "retro", ".", "data", ".", "get_file_path", "(", "game", ",", "info", "+", "'.json'", ",", "inttype", ")", "\n", "\n", "", "if", "scenario", "is", "None", ":", "\n", "            ", "scenario", "=", "'scenario'", "\n", "\n", "", "if", "scenario", ".", "endswith", "(", "'.json'", ")", ":", "\n", "# assume it's a path", "\n", "            ", "scenario_path", "=", "scenario", "\n", "", "else", ":", "\n", "            ", "scenario_path", "=", "retro", ".", "data", ".", "get_file_path", "(", "game", ",", "scenario", "+", "'.json'", ",", "inttype", ")", "\n", "\n", "", "self", ".", "system", "=", "retro", ".", "get_romfile_system", "(", "rom_path", ")", "\n", "\n", "# We can't have more than one emulator per process. Before creating an", "\n", "# emulator, ensure that unused ones are garbage-collected", "\n", "gc", ".", "collect", "(", ")", "\n", "self", ".", "em", "=", "retro", ".", "RetroEmulator", "(", "rom_path", ")", "\n", "self", ".", "em", ".", "configure_data", "(", "self", ".", "data", ")", "\n", "self", ".", "em", ".", "step", "(", ")", "\n", "\n", "core", "=", "retro", ".", "get_system_info", "(", "self", ".", "system", ")", "\n", "self", ".", "buttons", "=", "core", "[", "'buttons'", "]", "\n", "self", ".", "num_buttons", "=", "len", "(", "self", ".", "buttons", ")", "\n", "self", ".", "button_combos", "=", "self", ".", "data", ".", "valid_actions", "(", ")", "\n", "\n", "try", ":", "\n", "            ", "assert", "self", ".", "data", ".", "load", "(", "info_path", ",", "scenario_path", ")", ",", "'Failed to load info (%s) or scenario (%s)'", "%", "(", "info_path", ",", "scenario_path", ")", "\n", "", "except", "Exception", ":", "\n", "            ", "del", "self", ".", "em", "\n", "raise", "\n", "\n", "", "if", "use_restricted_actions", "==", "retro", ".", "Actions", ".", "DISCRETE", ":", "\n", "            ", "combos", "=", "1", "\n", "for", "combo", "in", "self", ".", "button_combos", ":", "\n", "                ", "combos", "*=", "len", "(", "combo", ")", "\n", "", "self", ".", "action_space", "=", "gym", ".", "spaces", ".", "Discrete", "(", "combos", "**", "players", ")", "\n", "", "elif", "use_restricted_actions", "==", "retro", ".", "Actions", ".", "MULTI_DISCRETE", ":", "\n", "            ", "self", ".", "action_space", "=", "gym", ".", "spaces", ".", "MultiDiscrete", "(", "[", "len", "(", "combos", ")", "if", "gym_version", ">=", "(", "0", ",", "9", ",", "6", ")", "else", "(", "0", ",", "len", "(", "combos", ")", "-", "1", ")", "for", "combos", "in", "self", ".", "button_combos", "]", "*", "players", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "action_space", "=", "gym", ".", "spaces", ".", "MultiBinary", "(", "self", ".", "num_buttons", "*", "players", ")", "\n", "\n", "", "kwargs", "=", "{", "}", "\n", "if", "gym_version", ">=", "(", "0", ",", "9", ",", "6", ")", ":", "\n", "            ", "kwargs", "[", "'dtype'", "]", "=", "np", ".", "uint8", "\n", "\n", "", "if", "self", ".", "_obs_type", "==", "retro", ".", "Observations", ".", "RAM", ":", "\n", "            ", "shape", "=", "self", ".", "get_ram", "(", ")", ".", "shape", "\n", "", "else", ":", "\n", "            ", "img", "=", "[", "self", ".", "get_screen", "(", "p", ")", "for", "p", "in", "range", "(", "players", ")", "]", "\n", "shape", "=", "img", "[", "0", "]", ".", "shape", "\n", "", "self", ".", "observation_space", "=", "gym", ".", "spaces", ".", "Box", "(", "low", "=", "0", ",", "high", "=", "255", ",", "shape", "=", "shape", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "use_restricted_actions", "=", "use_restricted_actions", "\n", "self", ".", "movie", "=", "None", "\n", "self", ".", "movie_id", "=", "0", "\n", "self", ".", "movie_path", "=", "None", "\n", "if", "record", "is", "True", ":", "\n", "            ", "self", ".", "auto_record", "(", ")", "\n", "", "elif", "record", "is", "not", "False", ":", "\n", "            ", "self", ".", "auto_record", "(", "record", ")", "\n", "", "self", ".", "seed", "(", ")", "\n", "if", "gym_version", "<", "(", "0", ",", "9", ",", "6", ")", ":", "\n", "            ", "self", ".", "_seed", "=", "self", ".", "seed", "\n", "self", ".", "_step", "=", "self", ".", "step", "\n", "self", ".", "_reset", "=", "self", ".", "reset", "\n", "self", ".", "_render", "=", "self", ".", "render", "\n", "self", ".", "_close", "=", "self", ".", "close", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv._update_obs": [[149, 158], ["retro_env.RetroEnv.get_ram", "retro_env.RetroEnv.get_screen", "ValueError"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.get_ram", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.get_screen"], ["", "", "def", "_update_obs", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_obs_type", "==", "retro", ".", "Observations", ".", "RAM", ":", "\n", "            ", "self", ".", "ram", "=", "self", ".", "get_ram", "(", ")", "\n", "return", "self", ".", "ram", "\n", "", "elif", "self", ".", "_obs_type", "==", "retro", ".", "Observations", ".", "IMAGE", ":", "\n", "            ", "self", ".", "img", "=", "self", ".", "get_screen", "(", ")", "\n", "return", "self", ".", "img", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Unrecognized observation type: {}'", ".", "format", "(", "self", ".", "_obs_type", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.action_to_array": [[159, 184], ["range", "numpy.zeros", "range", "actions.append", "len", "range", "range", "len", "len", "len", "retro_env.RetroEnv.data.filter_action", "int"], "methods", ["None"], ["", "", "def", "action_to_array", "(", "self", ",", "a", ")", ":", "\n", "        ", "actions", "=", "[", "]", "\n", "for", "p", "in", "range", "(", "self", ".", "players", ")", ":", "\n", "            ", "action", "=", "0", "\n", "if", "self", ".", "use_restricted_actions", "==", "retro", ".", "Actions", ".", "DISCRETE", ":", "\n", "                ", "for", "combo", "in", "self", ".", "button_combos", ":", "\n", "                    ", "current", "=", "a", "%", "len", "(", "combo", ")", "\n", "a", "//=", "len", "(", "combo", ")", "\n", "action", "|=", "combo", "[", "current", "]", "\n", "", "", "elif", "self", ".", "use_restricted_actions", "==", "retro", ".", "Actions", ".", "MULTI_DISCRETE", ":", "\n", "                ", "ap", "=", "a", "[", "self", ".", "num_buttons", "*", "p", ":", "self", ".", "num_buttons", "*", "(", "p", "+", "1", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "ap", ")", ")", ":", "\n", "                    ", "buttons", "=", "self", ".", "button_combos", "[", "i", "]", "\n", "action", "|=", "buttons", "[", "ap", "[", "i", "]", "]", "\n", "", "", "else", ":", "\n", "                ", "ap", "=", "a", "[", "self", ".", "num_buttons", "*", "p", ":", "self", ".", "num_buttons", "*", "(", "p", "+", "1", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "ap", ")", ")", ":", "\n", "                    ", "action", "|=", "int", "(", "ap", "[", "i", "]", ")", "<<", "i", "\n", "", "if", "self", ".", "use_restricted_actions", "==", "retro", ".", "Actions", ".", "FILTERED", ":", "\n", "                    ", "action", "=", "self", ".", "data", ".", "filter_action", "(", "action", ")", "\n", "", "", "ap", "=", "np", ".", "zeros", "(", "[", "self", ".", "num_buttons", "]", ",", "np", ".", "uint8", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_buttons", ")", ":", "\n", "                ", "ap", "[", "i", "]", "=", "(", "action", ">>", "i", ")", "&", "1", "\n", "", "actions", ".", "append", "(", "ap", ")", "\n", "", "return", "actions", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.step": [[185, 215], ["enumerate", "retro_env.RetroEnv.em.step", "retro_env.RetroEnv.data.update_ram", "retro_env.RetroEnv._update_obs", "retro_env.RetroEnv.compute_step", "retro_env.RetroEnv.em.get_audio", "RuntimeError", "retro_env.RetroEnv.action_to_array", "retro_env.RetroEnv.em.set_button_mask", "retro_env.RetroEnv.movie.step", "cv2.imwrite", "bool", "dict", "range", "librosa.util.fix_length", "retro_env.RetroEnv.audio_clip.extend", "cv2.cvtColor", "retro_env.RetroEnv.movie.set_key", "int", "str"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.step", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv._update_obs", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.compute_step", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.action_to_array", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.step"], ["", "def", "step", "(", "self", ",", "a", ")", ":", "\n", "        ", "if", "self", ".", "img", "is", "None", "and", "self", ".", "ram", "is", "None", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Please call env.reset() before env.step()'", ")", "\n", "\n", "", "for", "p", ",", "ap", "in", "enumerate", "(", "self", ".", "action_to_array", "(", "a", ")", ")", ":", "\n", "            ", "if", "self", ".", "movie", ":", "\n", "                ", "for", "i", "in", "range", "(", "self", ".", "num_buttons", ")", ":", "\n", "                    ", "self", ".", "movie", ".", "set_key", "(", "i", ",", "ap", "[", "i", "]", ",", "p", ")", "\n", "", "", "self", ".", "em", ".", "set_button_mask", "(", "ap", ",", "p", ")", "\n", "\n", "", "if", "self", ".", "movie", ":", "\n", "            ", "self", ".", "movie", ".", "step", "(", ")", "\n", "", "self", ".", "em", ".", "step", "(", ")", "\n", "self", ".", "data", ".", "update_ram", "(", ")", "\n", "ob", "=", "self", ".", "_update_obs", "(", ")", "\n", "rew", ",", "done", ",", "info", "=", "self", ".", "compute_step", "(", ")", "\n", "\n", "sample", "=", "self", ".", "em", ".", "get_audio", "(", ")", "\n", "\n", "if", "self", ".", "naudio_samples", "is", "not", "None", ":", "\n", "            ", "info", "[", "'audio'", "]", "=", "librosa", ".", "util", ".", "fix_length", "(", "sample", ".", "T", ",", "int", "(", "self", ".", "naudio_samples", ")", ")", ".", "T", "\n", "\n", "if", "self", ".", "make_video", ":", "\n", "                ", "self", ".", "audio_clip", ".", "extend", "(", "sample", ")", "\n", "\n", "", "", "if", "self", ".", "make_video", ":", "\n", "            ", "baseline_str", "=", "'b-'", "if", "self", ".", "is_baseline", "else", "''", "\n", "cv2", ".", "imwrite", "(", "'video_frames/'", "+", "baseline_str", "+", "self", ".", "gamename", "+", "'-'", "+", "str", "(", "self", ".", "n", ")", "+", "'.png'", ",", "cv2", ".", "cvtColor", "(", "ob", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "", "self", ".", "n", "+=", "1", "\n", "return", "ob", ",", "rew", ",", "bool", "(", "done", ")", ",", "dict", "(", "info", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.reset": [[216, 253], ["range", "retro_env.RetroEnv.em.step", "retro_env.RetroEnv.data.reset", "retro_env.RetroEnv.data.update_ram", "retro_env.RetroEnv._update_obs", "retro_env.RetroEnv.em.set_state", "retro_env.RetroEnv.em.set_button_mask", "retro_env.RetroEnv.record_movie", "retro_env.RetroEnv.movie.step", "numpy.asarray", "scipy.write", "os.system", "os.system", "os.system", "print", "sys.exit", "numpy.zeros", "os.path.splitext", "os.path.join", "int", "os.path.basename", "retro_env.RetroEnv.em.get_audio_rate", "str", "str"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.step", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.reset", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv._update_obs", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.record_movie", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.step"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "audio_clip", ":", "\n", "            ", "if", "self", ".", "make_video", ":", "\n", "                ", "baseline_str", "=", "'b-'", "if", "self", ".", "is_baseline", "else", "''", "\n", "path", "=", "baseline_str", "+", "self", ".", "gamename", "+", "'_audio.wav'", "\n", "numpy_audio", "=", "np", ".", "asarray", "(", "self", ".", "audio_clip", ")", "\n", "wv", ".", "write", "(", "path", ",", "int", "(", "self", ".", "em", ".", "get_audio_rate", "(", ")", ")", ",", "numpy_audio", ")", "\n", "\n", "# Combine all saved frames into video", "\n", "cmd1", "=", "'ffmpeg -y -r 60 -f image2 -i video_frames/'", "+", "baseline_str", "+", "self", ".", "gamename", "+", "'-%d.png -vcodec libx264 -crf 25  -pix_fmt yuv420p '", "+", "baseline_str", "+", "self", ".", "gamename", "+", "'_noaudio.mp4 -hide_banner -loglevel panic'", "\n", "# Add audio to video", "\n", "os", ".", "system", "(", "cmd1", ")", "\n", "cmd", "=", "\"ffmpeg -y -i \"", "+", "baseline_str", "+", "self", ".", "gamename", "+", "\"_noaudio.mp4 -i \"", "+", "path", "+", "\" -y -c:v copy -c:a aac -strict experimental -hide_banner -loglevel panic \"", "+", "baseline_str", "+", "self", ".", "gamename", "+", "'-'", "+", "str", "(", "self", ".", "n", ")", "+", "'.mp4'", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "os", ".", "system", "(", "'rm video_frames/'", "+", "baseline_str", "+", "self", ".", "gamename", "+", "'*.png'", ")", "\n", "print", "(", "'saved video to '", ",", "baseline_str", "+", "self", ".", "gamename", "+", "'-'", "+", "str", "(", "self", ".", "n", ")", "+", "'.mp4'", ")", "\n", "sys", ".", "exit", "(", "0", ")", "\n", "\n", "", "", "self", ".", "audio_clip", "=", "[", "]", "\n", "self", ".", "n", "=", "0", "\n", "\n", "\n", "if", "self", ".", "initial_state", ":", "\n", "            ", "self", ".", "em", ".", "set_state", "(", "self", ".", "initial_state", ")", "\n", "", "for", "p", "in", "range", "(", "self", ".", "players", ")", ":", "\n", "            ", "self", ".", "em", ".", "set_button_mask", "(", "np", ".", "zeros", "(", "[", "self", ".", "num_buttons", "]", ",", "np", ".", "uint8", ")", ",", "p", ")", "\n", "", "self", ".", "em", ".", "step", "(", ")", "\n", "if", "self", ".", "movie_path", "is", "not", "None", ":", "\n", "            ", "rel_statename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "self", ".", "statename", ")", ")", "[", "0", "]", "\n", "self", ".", "record_movie", "(", "os", ".", "path", ".", "join", "(", "self", ".", "movie_path", ",", "'%s-%s-%06d.bk2'", "%", "(", "self", ".", "gamename", ",", "rel_statename", ",", "self", ".", "movie_id", ")", ")", ")", "\n", "self", ".", "movie_id", "+=", "1", "\n", "", "if", "self", ".", "movie", ":", "\n", "            ", "self", ".", "movie", ".", "step", "(", ")", "\n", "", "self", ".", "data", ".", "reset", "(", ")", "\n", "self", ".", "data", ".", "update_ram", "(", ")", "\n", "\n", "return", "self", ".", "_update_obs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.seed": [[254, 261], ["gym.utils.seeding.np_random", "gym.utils.seeding.np_random", "gym.utils.seeding.hash_seed", "gym.utils.seeding.hash_seed"], "methods", ["None"], ["", "def", "seed", "(", "self", ",", "seed", "=", "None", ")", ":", "\n", "        ", "self", ".", "np_random", ",", "seed1", "=", "seeding", ".", "np_random", "(", "seed", ")", "\n", "# Derive a random seed. This gets passed as a uint, but gets", "\n", "# checked as an int elsewhere, so we need to keep it below", "\n", "# 2**31.", "\n", "seed2", "=", "seeding", ".", "hash_seed", "(", "seed1", "+", "1", ")", "%", "2", "**", "31", "\n", "return", "[", "seed1", ",", "seed2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.render": [[262, 277], ["retro_env.RetroEnv.get_screen", "retro_env.RetroEnv.viewer.close", "retro_env.RetroEnv.viewer.imshow", "SimpleImageViewer"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.get_screen", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.close"], ["", "def", "render", "(", "self", ",", "mode", "=", "'human'", ",", "close", "=", "False", ")", ":", "\n", "        ", "if", "close", ":", "\n", "            ", "if", "self", ".", "viewer", ":", "\n", "                ", "self", ".", "viewer", ".", "close", "(", ")", "\n", "", "return", "\n", "\n", "", "img", "=", "self", ".", "get_screen", "(", ")", "if", "self", ".", "img", "is", "None", "else", "self", ".", "img", "\n", "if", "mode", "==", "\"rgb_array\"", ":", "\n", "            ", "return", "img", "\n", "", "elif", "mode", "==", "\"human\"", ":", "\n", "            ", "if", "self", ".", "viewer", "is", "None", ":", "\n", "                ", "from", "gym", ".", "envs", ".", "classic_control", ".", "rendering", "import", "SimpleImageViewer", "\n", "self", ".", "viewer", "=", "SimpleImageViewer", "(", ")", "\n", "", "self", ".", "viewer", ".", "imshow", "(", "img", ")", "\n", "return", "self", ".", "viewer", ".", "isopen", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.close": [[278, 281], ["hasattr"], "methods", ["None"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "        ", "if", "hasattr", "(", "self", ",", "'em'", ")", ":", "\n", "            ", "del", "self", ".", "em", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.get_action_meaning": [[282, 289], ["enumerate", "retro_env.RetroEnv.action_to_array", "actions.append", "numpy.extract", "numpy.arange", "len"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.action_to_array"], ["", "", "def", "get_action_meaning", "(", "self", ",", "act", ")", ":", "\n", "        ", "actions", "=", "[", "]", "\n", "for", "p", ",", "action", "in", "enumerate", "(", "self", ".", "action_to_array", "(", "act", ")", ")", ":", "\n", "            ", "actions", ".", "append", "(", "[", "self", ".", "buttons", "[", "i", "]", "for", "i", "in", "np", ".", "extract", "(", "action", ",", "np", ".", "arange", "(", "len", "(", "action", ")", ")", ")", "]", ")", "\n", "", "if", "self", ".", "players", "==", "1", ":", "\n", "            ", "return", "actions", "[", "0", "]", "\n", "", "return", "actions", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.get_ram": [[290, 296], ["sorted", "numpy.concatenate", "numpy.frombuffer", "blocks.append"], "methods", ["None"], ["", "def", "get_ram", "(", "self", ")", ":", "\n", "        ", "blocks", "=", "[", "]", "\n", "for", "offset", "in", "sorted", "(", "self", ".", "data", ".", "memory", ".", "blocks", ")", ":", "\n", "            ", "arr", "=", "np", ".", "frombuffer", "(", "self", ".", "data", ".", "memory", ".", "blocks", "[", "offset", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "blocks", ".", "append", "(", "arr", ")", "\n", "", "return", "np", ".", "concatenate", "(", "blocks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.get_screen": [[297, 311], ["retro_env.RetroEnv.em.get_screen", "retro_env.RetroEnv.data.crop_info"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.get_screen"], ["", "def", "get_screen", "(", "self", ",", "player", "=", "0", ")", ":", "\n", "        ", "img", "=", "self", ".", "em", ".", "get_screen", "(", ")", "\n", "x", ",", "y", ",", "w", ",", "h", "=", "self", ".", "data", ".", "crop_info", "(", "player", ")", "\n", "if", "not", "w", "or", "x", "+", "w", ">", "img", ".", "shape", "[", "1", "]", ":", "\n", "            ", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "w", "+=", "x", "\n", "", "if", "not", "h", "or", "y", "+", "h", ">", "img", ".", "shape", "[", "0", "]", ":", "\n", "            ", "h", "=", "img", ".", "shape", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "h", "+=", "y", "\n", "", "if", "x", "==", "0", "and", "y", "==", "0", "and", "w", "==", "img", ".", "shape", "[", "1", "]", "and", "h", "==", "img", ".", "shape", "[", "0", "]", ":", "\n", "            ", "return", "img", "\n", "", "return", "img", "[", "y", ":", "h", ",", "x", ":", "w", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.load_state": [[312, 320], ["statename.endswith", "gzip.open", "fh.read", "retro.data.get_file_path", "retro.data.get_file_path", "retro.data.get_file_path", "retro.data.get_file_path"], "methods", ["None"], ["", "def", "load_state", "(", "self", ",", "statename", ",", "inttype", "=", "retro", ".", "data", ".", "Integrations", ".", "DEFAULT", ")", ":", "\n", "        ", "if", "not", "statename", ".", "endswith", "(", "'.state'", ")", ":", "\n", "                ", "statename", "+=", "'.state'", "\n", "\n", "", "with", "gzip", ".", "open", "(", "retro", ".", "data", ".", "get_file_path", "(", "self", ".", "gamename", ",", "statename", ",", "inttype", ")", ",", "'rb'", ")", "as", "fh", ":", "\n", "            ", "self", ".", "initial_state", "=", "fh", ".", "read", "(", ")", "\n", "\n", "", "self", ".", "statename", "=", "statename", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.compute_step": [[321, 328], ["retro_env.RetroEnv.data.is_done", "retro_env.RetroEnv.data.current_reward", "retro_env.RetroEnv.data.lookup_all", "retro_env.RetroEnv.data.current_reward", "range"], "methods", ["None"], ["", "def", "compute_step", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "players", ">", "1", ":", "\n", "            ", "reward", "=", "[", "self", ".", "data", ".", "current_reward", "(", "p", ")", "for", "p", "in", "range", "(", "self", ".", "players", ")", "]", "\n", "", "else", ":", "\n", "            ", "reward", "=", "self", ".", "data", ".", "current_reward", "(", ")", "\n", "", "done", "=", "self", ".", "data", ".", "is_done", "(", ")", "\n", "return", "reward", ",", "done", ",", "self", ".", "data", ".", "lookup_all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.record_movie": [[329, 334], ["retro.Movie", "retro.Movie", "retro.Movie", "retro.Movie", "retro_env.RetroEnv.movie.configure", "retro_env.RetroEnv.movie.set_state"], "methods", ["None"], ["", "def", "record_movie", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "movie", "=", "retro", ".", "Movie", "(", "path", ",", "True", ",", "self", ".", "players", ")", "\n", "self", ".", "movie", ".", "configure", "(", "self", ".", "gamename", ",", "self", ".", "em", ")", "\n", "if", "self", ".", "initial_state", ":", "\n", "            ", "self", ".", "movie", ".", "set_state", "(", "self", ".", "initial_state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.stop_record": [[335, 341], ["retro_env.RetroEnv.movie.close"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.close"], ["", "", "def", "stop_record", "(", "self", ")", ":", "\n", "        ", "self", ".", "movie_path", "=", "None", "\n", "self", ".", "movie_id", "=", "0", "\n", "if", "self", ".", "movie", ":", "\n", "            ", "self", ".", "movie", ".", "close", "(", ")", "\n", "self", ".", "movie", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.retro_env.RetroEnv.auto_record": [[342, 346], ["os.getcwd"], "methods", ["None"], ["", "", "def", "auto_record", "(", "self", ",", "path", "=", "None", ")", ":", "\n", "        ", "if", "not", "path", ":", "\n", "            ", "path", "=", "os", ".", "getcwd", "(", ")", "\n", "", "self", ".", "movie_path", "=", "path", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.mpi_utils.MpiAdamOptimizer.__init__": [[9, 12], ["tensorflow.train.AdamOptimizer.__init__"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.__init__"], ["def", "__init__", "(", "self", ",", "comm", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "comm", "=", "comm", "\n", "tf", ".", "train", ".", "AdamOptimizer", ".", "__init__", "(", "self", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.mpi_utils.MpiAdamOptimizer.compute_gradients": [[13, 35], ["tensorflow.train.AdamOptimizer.compute_gradients", "tensorflow.concat", "numpy.zeros", "tensorflow.py_func", "tensorflow.py_func.set_shape", "tensorflow.split", "v.shape.as_list", "int", "mpi_utils.MpiAdamOptimizer.comm.Get_rank", "mpi_utils.MpiAdamOptimizer.comm.Get_size", "sum", "mpi_utils.MpiAdamOptimizer.comm.Allreduce", "numpy.divide", "tensorflow.reshape", "numpy.prod", "float", "tensorflow.reshape", "zip"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.mpi_utils.MpiAdamOptimizer.compute_gradients"], ["", "def", "compute_gradients", "(", "self", ",", "loss", ",", "var_list", ",", "**", "kwargs", ")", ":", "\n", "        ", "grads_and_vars", "=", "tf", ".", "train", ".", "AdamOptimizer", ".", "compute_gradients", "(", "self", ",", "loss", ",", "var_list", ",", "**", "kwargs", ")", "\n", "grads_and_vars", "=", "[", "(", "g", ",", "v", ")", "for", "g", ",", "v", "in", "grads_and_vars", "if", "g", "is", "not", "None", "]", "\n", "flat_grad", "=", "tf", ".", "concat", "(", "[", "tf", ".", "reshape", "(", "g", ",", "(", "-", "1", ",", ")", ")", "for", "g", ",", "v", "in", "grads_and_vars", "]", ",", "axis", "=", "0", ")", "\n", "shapes", "=", "[", "v", ".", "shape", ".", "as_list", "(", ")", "for", "g", ",", "v", "in", "grads_and_vars", "]", "\n", "sizes", "=", "[", "int", "(", "np", ".", "prod", "(", "s", ")", ")", "for", "s", "in", "shapes", "]", "\n", "\n", "_task_id", ",", "num_tasks", "=", "self", ".", "comm", ".", "Get_rank", "(", ")", ",", "self", ".", "comm", ".", "Get_size", "(", ")", "\n", "buf", "=", "np", ".", "zeros", "(", "sum", "(", "sizes", ")", ",", "np", ".", "float32", ")", "\n", "\n", "def", "_collect_grads", "(", "flat_grad", ")", ":", "\n", "            ", "self", ".", "comm", ".", "Allreduce", "(", "flat_grad", ",", "buf", ",", "op", "=", "MPI", ".", "SUM", ")", "\n", "np", ".", "divide", "(", "buf", ",", "float", "(", "num_tasks", ")", ",", "out", "=", "buf", ")", "\n", "return", "buf", "\n", "\n", "", "avg_flat_grad", "=", "tf", ".", "py_func", "(", "_collect_grads", ",", "[", "flat_grad", "]", ",", "tf", ".", "float32", ")", "\n", "avg_flat_grad", ".", "set_shape", "(", "flat_grad", ".", "shape", ")", "\n", "avg_grads", "=", "tf", ".", "split", "(", "avg_flat_grad", ",", "sizes", ",", "axis", "=", "0", ")", "\n", "avg_grads_and_vars", "=", "[", "(", "tf", ".", "reshape", "(", "g", ",", "v", ".", "shape", ")", ",", "v", ")", "\n", "for", "g", ",", "(", "_", ",", "v", ")", "in", "zip", "(", "avg_grads", ",", "grads_and_vars", ")", "]", "\n", "\n", "return", "avg_grads_and_vars", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.make_plots.assign_color": [[12, 23], ["assignments.keys"], "function", ["None"], ["def", "assign_color", "(", "path", ",", "params", ")", ":", "\n", "    ", "assignments", "=", "{", "'joint'", ":", "'tab:gray'", ",", "'disagreement'", ":", "'tab:green'", ",", "\n", "'concat'", ":", "'tab:purple'", ",", "'visual'", ":", "'#ff7f0e'", ",", "'fft'", ":", "'#1f77b4'", "}", "\n", "for", "method", "in", "assignments", ".", "keys", "(", ")", ":", "\n", "        ", "if", "method", "in", "path", "or", "method", "in", "params", ":", "\n", "            ", "if", "'noise'", "in", "params", ":", "\n", "                ", "alpha", "=", "0.5", "\n", "", "else", ":", "\n", "                ", "alpha", "=", "1.0", "\n", "", "return", "assignments", "[", "method", "]", ",", "alpha", "\n", "", "", "return", "None", ",", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.make_plots.assign_label": [[24, 40], ["params.split"], "function", ["None"], ["", "def", "assign_label", "(", "path", ",", "params", ")", ":", "\n", "    ", "if", "'b-'", "in", "path", ":", "\n", "        ", "label", "=", "'Visual prediction curiosity'", "\n", "", "elif", "'concat'", "in", "path", ":", "\n", "        ", "label", "=", "'Audio-visual prediction'", "\n", "", "else", ":", "\n", "        ", "label", "=", "'Audio-visual association (ours)'", "\n", "", "if", "'noise'", "in", "params", ":", "\n", "        ", "if", "'(ours)'", "in", "label", ":", "\n", "            ", "label", "=", "label", "[", ":", "-", "7", "]", "\n", "", "label", "+=", "' '", "+", "params", ".", "split", "(", "'noise'", ")", "[", "1", "]", "+", "'with noise'", "\n", "", "if", "'joint'", "in", "path", ":", "\n", "        ", "label", "=", "'Combined curiosities (ours)'", "\n", "", "if", "'disagreement'", "in", "params", ":", "\n", "        ", "label", "=", "'Disagreement'", "\n", "", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.make_plots.plot_run": [[41, 83], ["ys.split", "min", "numpy.asarray", "numpy.mean", "ax.plot", "open", "len", "make_plots.assign_color", "numpy.std", "ax.fill_between", "pandas.read_csv", "np.asarray.append", "make_plots.assign_label", "len", "len", "print", "ys.split", "sys.exc_info"], "function", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.make_plots.assign_color", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.make_plots.assign_label"], ["", "def", "plot_run", "(", "paths", ",", "x", "=", "'tcount'", ",", "ys", "=", "'eprew'", ",", "label", "=", "''", ",", "assign_colors", "=", "True", ",", "params", "=", "''", ")", ":", "\n", "    ", "for", "y", "in", "ys", ".", "split", "(", "','", ")", ":", "\n", "        ", "all_runs", "=", "[", "]", "\n", "nframes", "=", "None", "\n", "for", "path", "in", "paths", ":", "\n", "            ", "f", "=", "open", "(", "path", "+", "'/progress.csv'", ",", "'r'", ")", "\n", "if", "'concat'", "in", "path", "and", "not", "args", ".", "concat", ":", "\n", "                ", "continue", "\n", "\n", "", "try", ":", "\n", "                ", "df", "=", "pd", ".", "read_csv", "(", "f", ")", "\n", "all_runs", ".", "append", "(", "df", "[", "y", "]", ")", "\n", "nframes", "=", "df", "[", "x", "]", "\n", "", "except", ":", "\n", "                ", "print", "(", "\"Exception while reading file\"", ",", "sys", ".", "exc_info", "(", ")", "[", "0", "]", ",", "path", ")", "\n", "continue", "\n", "\n", "", "", "if", "len", "(", "all_runs", ")", "==", "0", ":", "\n", "            ", "return", "\n", "\n", "", "color", "=", "None", "\n", "alpha", "=", "0.75", "\n", "if", "assign_colors", ":", "\n", "            ", "color", ",", "alpha", "=", "assign_color", "(", "path", ",", "params", ")", "\n", "", "if", "label", "!=", "''", ":", "\n", "            ", "if", "params", "!=", "''", ":", "\n", "                ", "label", "=", "assign_label", "(", "path", ",", "params", ")", "\n", "", "if", "len", "(", "ys", ".", "split", "(", "','", ")", ")", ">", "1", ":", "\n", "                ", "label", "+=", "' '", "+", "y", "\n", "", "", "min_length", "=", "min", "(", "[", "len", "(", "run", ")", "for", "run", "in", "all_runs", "]", ")", "\n", "all_runs", "=", "np", ".", "asarray", "(", "[", "run", "[", ":", "min_length", "]", "for", "run", "in", "all_runs", "]", ")", "\n", "mean_run", "=", "np", ".", "mean", "(", "all_runs", ",", "axis", "=", "0", ")", "\n", "nframes", "=", "nframes", "[", ":", "min_length", "]", "*", "4", "\n", "\n", "ax", ".", "plot", "(", "nframes", ",", "mean_run", ",", "'-'", ",", "label", "=", "label", ",", "color", "=", "color", ",", "alpha", "=", "alpha", ")", "\n", "if", "all_runs", ".", "shape", "[", "0", "]", ">", "1", ":", "\n", "            ", "error", "=", "np", ".", "std", "(", "all_runs", ",", "axis", "=", "0", ")", "\n", "alpha", "=", "0.2", "\n", "if", "'noise'", "in", "params", ":", "\n", "                ", "alpha", "=", "0.1", "\n", "", "ax", ".", "fill_between", "(", "nframes", ",", "mean_run", "-", "error", ",", "mean_run", "+", "error", ",", "\n", "alpha", "=", "alpha", ",", "linewidth", "=", "0.0", ",", "color", "=", "color", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.make_plots.get_paths": [[84, 96], ["paths_str.split", "paths.append", "paths.extend", "os.popen().read().split", "print", "os.popen().read", "os.popen"], "function", ["None"], ["", "", "", "def", "get_paths", "(", "paths_str", ")", ":", "\n", "    ", "paths", "=", "[", "]", "\n", "for", "path", "in", "paths_str", ".", "split", "(", "','", ")", ":", "\n", "        ", "if", "'*'", "in", "path", ":", "\n", "            ", "try", ":", "\n", "                ", "paths", ".", "extend", "(", "os", ".", "popen", "(", "'ls -d logs/*'", "+", "path", "[", "1", ":", "]", "+", "'*/ 2> /dev/null'", ")", ".", "read", "(", ")", ".", "split", "(", ")", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "\"Exception: paths not found\"", ")", "\n", "continue", "\n", "", "", "else", ":", "\n", "            ", "paths", ".", "append", "(", "path", ")", "\n", "", "", "return", "paths", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.make_plots.create_params": [[97, 130], ["float", "get_disagreement_params", "path.split", "[].split", "[].split", "len", "[].split", "path.split", "path.split", "path.split"], "function", ["None"], ["", "def", "create_params", "(", "path", ")", ":", "\n", "    ", "if", "(", "'_s-'", "in", "path", ")", "!=", "args", ".", "sticky", ":", "\n", "        ", "return", "None", "\n", "\n", "", "if", "'noise'", "in", "path", "and", "not", "args", ".", "noise", ":", "\n", "        ", "return", "None", "\n", "\n", "", "if", "'joint'", "in", "path", ":", "\n", "        ", "return", "None", "\n", "\n", "", "if", "args", ".", "mean", ":", "\n", "        ", "params", "=", "'_'", ".", "join", "(", "path", ".", "split", "(", "'_'", ")", "[", "-", "6", ":", "]", ")", "\n", "if", "'noise'", "in", "path", ":", "\n", "            ", "noise_amt", "=", "float", "(", "path", ".", "split", "(", "'noise'", ")", "[", "1", "]", ".", "split", "(", "'-'", ")", "[", "0", "]", ")", "\n", "if", "noise_amt", ">", "0.1", ":", "\n", "                ", "return", "None", "\n", "", "if", "noise_amt", "!=", "0", ":", "\n", "                ", "params", "=", "params", "[", ":", "-", "1", "]", "\n", "params", "+=", "'noise'", "\n", "", "", "if", "'concat'", "in", "path", ":", "\n", "            ", "concat_type_real", "=", "' '", "+", "path", ".", "split", "(", "'concat'", ")", "[", "0", "]", ".", "split", "(", "'breakout'", ")", "[", "-", "1", "]", "[", "1", ":", "-", "1", "]", "\n", "concat_type", "=", "path", ".", "split", "(", "'concat'", ")", "[", "1", "]", ".", "split", "(", "'_'", ")", "[", "0", "]", "[", ":", "-", "1", "]", "\n", "if", "len", "(", "concat_type", ")", "==", "0", "or", "concat_type", "==", "'-both'", ":", "\n", "                ", "params", "+=", "'-concat'", "\n", "", "else", ":", "\n", "                ", "params", "+=", "concat_type", "\n", "", "", "if", "'_s-'", "in", "path", ":", "\n", "            ", "params", "+=", "'_sticky'", "\n", "", "if", "'disagreement'", "in", "path", "or", "'openai'", "in", "path", ":", "\n", "            ", "params", "=", "get_disagreement_params", "(", "path", ")", "\n", "", "if", "'joint'", "in", "path", ":", "\n", "            ", "params", "+=", "'_joint'", "\n", "", "", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.make_plots.create_figure": [[132, 159], ["matplotlib.xlabel", "matplotlib.ylabel", "fig.add_subplot", "matplotlib.tick_params", "matplotlib.grid", "matplotlib.subplots", "numpy.array", "matplotlib.subplots", "matplotlib.subplots", "matplotlib.subplots"], "function", ["None"], ["", "def", "create_figure", "(", ")", ":", "\n", "    ", "if", "args", ".", "all", ":", "\n", "        ", "if", "args", ".", "noise", ":", "\n", "            ", "envs", "=", "[", "'Asterix'", ",", "'MsPacman'", ",", "'SpaceInvaders'", "]", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "1", ",", "3", ",", "sharex", "=", "True", ",", "figsize", "=", "(", "18", ",", "6", ")", ")", "\n", "", "else", ":", "\n", "            ", "envs", "=", "[", "'AirRaid'", ",", "'Alien'", ",", "'Assault'", ",", "'Asterix'", ",", "'Asteroids'", ",", "'Atlantis'", ",", "'BeamRider'", ",", "'Breakout'", ",", "'MsPacman'", ",", "'Qbert'", ",", "'Seaquest'", ",", "'SpaceInvaders'", "]", "\n", "if", "args", ".", "sticky", ":", "\n", "                ", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "2", ",", "6", ",", "sharex", "=", "True", ",", "figsize", "=", "(", "18", ",", "6", ")", ")", "\n", "", "else", ":", "\n", "                ", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "3", ",", "4", ",", "sharex", "=", "True", ",", "figsize", "=", "(", "20", ",", "15", ")", ")", "\n", "", "", "fig", ".", "add_subplot", "(", "111", ",", "frameon", "=", "False", ")", "\n", "# hide tick and tick label of the big axes", "\n", "plt", ".", "tick_params", "(", "axis", "=", "'both'", ",", "which", "=", "'both'", ",", "bottom", "=", "False", ",", "top", "=", "False", ",", "\n", "left", "=", "False", ",", "right", "=", "False", ",", "labelcolor", "=", "'none'", ")", "\n", "plt", ".", "grid", "(", "False", ")", "\n", "", "else", ":", "\n", "        ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "axs", "=", "np", ".", "array", "(", "ax", ")", "\n", "envs", "=", "[", "''", "]", "\n", "", "fsize", "=", "32", "\n", "if", "args", ".", "noise", ":", "\n", "        ", "fsize", "=", "20", "\n", "", "plt", ".", "xlabel", "(", "\"\\nFrames (millions)\\n\"", ",", "fontsize", "=", "fsize", ")", "\n", "plt", ".", "ylabel", "(", "\"Extrinsic Reward Per Episode\\n\"", ",", "fontsize", "=", "fsize", ")", "\n", "return", "fig", ",", "axs", ",", "envs", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.make_plots.finish_plot": [[160, 176], ["matplotlib.savefig", "matplotlib.xlim", "matplotlib.ylim", "str", "str", "len", "path.split"], "function", ["None"], ["", "def", "finish_plot", "(", ")", ":", "\n", "    ", "if", "args", ".", "xlim", ":", "\n", "        ", "plt", ".", "xlim", "(", "(", "-", "5", "*", "1e6", ",", "args", ".", "xlim", "*", "1e6", ")", ")", "\n", "", "if", "args", ".", "ylim", ":", "\n", "        ", "plt", ".", "ylim", "(", "(", "-", "0.0", "*", "args", ".", "ylim", ",", "args", ".", "ylim", ")", ")", "\n", "\n", "", "mean_str", "=", "'_mean'", "if", "args", ".", "mean", "else", "''", "\n", "\n", "if", "args", ".", "all", ":", "\n", "        ", "sticky_str", "=", "'_sticky'", "if", "args", ".", "sticky", "else", "''", "\n", "noise_str", "=", "'_noise'", "if", "args", ".", "noise", "else", "''", "\n", "save_name", "=", "'all'", "+", "sticky_str", "+", "mean_str", "+", "noise_str", "+", "\"_\"", "+", "args", ".", "y", "+", "'.png'", "\n", "", "else", ":", "\n", "        ", "save_name", "=", "path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "+", "'_'", "+", "str", "(", "len", "(", "ps", ")", ")", "+", "'_'", "+", "str", "(", "args", ".", "y", ")", "+", "mean_str", "+", "'.png'", "\n", "", "plt", ".", "savefig", "(", "save_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.PpoOptimizer.__init__": [[20, 74], ["tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "cppo_agent.PpoOptimizer.stochpol.pd.neglogp", "tensorflow.reduce_mean", "tensorflow.exp", "tensorflow.maximum", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "cppo_agent.PpoOptimizer.stochpol.pd.entropy", "tensorflow.reduce_mean", "tensorflow.clip_by_value", "tensorflow.reduce_mean", "tensorflow.to_float", "tensorflow.square", "tensorflow.abs"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "*", ",", "scope", ",", "ob_space", ",", "ac_space", ",", "stochpol", ",", "\n", "ent_coef", ",", "gamma", ",", "lam", ",", "nepochs", ",", "lr", ",", "cliprange", ",", "\n", "nminibatches", ",", "\n", "normrew", ",", "normadv", ",", "use_news", ",", "ext_coeff", ",", "int_coeff", ",", "feature_space", ",", "\n", "nsteps_per_seg", ",", "nsegs_per_env", ",", "intrinsic_model", ",", "log_dir", ",", "checkpoint_path", ")", ":", "\n", "        ", "self", ".", "intrinsic_model", "=", "intrinsic_model", "\n", "self", ".", "log_dir", "=", "log_dir", "\n", "self", ".", "checkpoint_path", "=", "checkpoint_path", "\n", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "            ", "self", ".", "use_recorder", "=", "True", "\n", "self", ".", "n_updates", "=", "0", "\n", "self", ".", "scope", "=", "scope", "\n", "self", ".", "ob_space", "=", "ob_space", "\n", "self", ".", "ac_space", "=", "ac_space", "\n", "self", ".", "stochpol", "=", "stochpol", "\n", "self", ".", "nepochs", "=", "nepochs", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "cliprange", "=", "cliprange", "\n", "self", ".", "nsteps_per_seg", "=", "nsteps_per_seg", "\n", "self", ".", "nsegs_per_env", "=", "nsegs_per_env", "\n", "self", ".", "nminibatches", "=", "nminibatches", "\n", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "lam", "=", "lam", "\n", "self", ".", "normrew", "=", "normrew", "\n", "self", ".", "normadv", "=", "normadv", "\n", "self", ".", "use_news", "=", "use_news", "\n", "self", ".", "ext_coeff", "=", "ext_coeff", "\n", "self", ".", "int_coeff", "=", "int_coeff", "\n", "self", ".", "feature_space", "=", "feature_space", "\n", "self", ".", "ph_adv", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "None", "]", ")", "\n", "self", ".", "ph_ret", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "None", "]", ")", "\n", "self", ".", "ph_rews", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "None", "]", ")", "\n", "self", ".", "ph_oldnlp", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "None", "]", ")", "\n", "self", ".", "ph_oldvpred", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "None", "]", ")", "\n", "self", ".", "ph_lr", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "]", ")", "\n", "self", ".", "ph_cliprange", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "]", ")", "\n", "neglogpac", "=", "self", ".", "stochpol", ".", "pd", ".", "neglogp", "(", "self", ".", "stochpol", ".", "ph_ac", ")", "\n", "entropy", "=", "tf", ".", "reduce_mean", "(", "self", ".", "stochpol", ".", "pd", ".", "entropy", "(", ")", ")", "\n", "vpred", "=", "self", ".", "stochpol", ".", "vpred", "\n", "\n", "vf_loss", "=", "0.5", "*", "tf", ".", "reduce_mean", "(", "(", "vpred", "-", "self", ".", "ph_ret", ")", "**", "2", ")", "\n", "ratio", "=", "tf", ".", "exp", "(", "self", ".", "ph_oldnlp", "-", "neglogpac", ")", "# p_new / p_old", "\n", "negadv", "=", "-", "self", ".", "ph_adv", "\n", "pg_losses1", "=", "negadv", "*", "ratio", "\n", "pg_losses2", "=", "negadv", "*", "tf", ".", "clip_by_value", "(", "ratio", ",", "1.0", "-", "self", ".", "ph_cliprange", ",", "1.0", "+", "self", ".", "ph_cliprange", ")", "\n", "pg_loss_surr", "=", "tf", ".", "maximum", "(", "pg_losses1", ",", "pg_losses2", ")", "\n", "pg_loss", "=", "tf", ".", "reduce_mean", "(", "pg_loss_surr", ")", "\n", "ent_loss", "=", "(", "-", "ent_coef", ")", "*", "entropy", "\n", "approxkl", "=", ".5", "*", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "neglogpac", "-", "self", ".", "ph_oldnlp", ")", ")", "\n", "clipfrac", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "to_float", "(", "tf", ".", "abs", "(", "pg_losses2", "-", "pg_loss_surr", ")", ">", "1e-6", ")", ")", "\n", "\n", "self", ".", "total_loss", "=", "pg_loss", "+", "ent_loss", "+", "vf_loss", "\n", "self", ".", "to_report", "=", "{", "'tot'", ":", "self", ".", "total_loss", ",", "'pg'", ":", "pg_loss", ",", "'vf'", ":", "vf_loss", ",", "'ent'", ":", "entropy", ",", "\n", "'approxkl'", ":", "approxkl", ",", "'clipfrac'", ":", "clipfrac", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.PpoOptimizer.start_interaction": [[75, 124], ["zip", "tensorflow.get_collection", "tensorflow.train.AdamOptimizer.compute_gradients", "tensorflow.train.AdamOptimizer.apply_gradients", "utils.bcast_tf_vars_from_root", "len", "rollouts.Rollout", "numpy.zeros", "numpy.zeros", "time.time", "time.time", "mpi4py.MPI.COMM_WORLD.Get_size", "mpi_utils.MpiAdamOptimizer", "tensorflow.train.AdamOptimizer", "mpi4py.MPI.COMM_WORLD.Get_rank", "getsess().run", "getsess", "tensorflow.get_collection", "print", "cppo_agent.PpoOptimizer.intrinsic_model.saver.restore", "vec_env.ShmemVecEnv", "cppo_agent.RewardForwardFilter", "baselines.common.running_mean_std.RunningMeanStd", "list", "tensorflow.variables_initializer", "tensorflow.train.latest_checkpoint", "getsess", "tensorflow.train.latest_checkpoint", "range", "cppo_agent.PpoOptimizer.to_report.items", "getsess", "tensorflow.get_collection"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.mpi_utils.MpiAdamOptimizer.compute_gradients", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.bcast_tf_vars_from_root"], ["", "", "def", "start_interaction", "(", "self", ",", "env_fns", ",", "intrinsic_model", ",", "nlump", "=", "2", ")", ":", "\n", "        ", "self", ".", "loss_names", ",", "self", ".", "_losses", "=", "zip", "(", "*", "list", "(", "self", ".", "to_report", ".", "items", "(", ")", ")", ")", "\n", "\n", "params", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "TRAINABLE_VARIABLES", ")", "\n", "if", "MPI", ".", "COMM_WORLD", ".", "Get_size", "(", ")", ">", "1", ":", "\n", "            ", "trainer", "=", "MpiAdamOptimizer", "(", "learning_rate", "=", "self", ".", "ph_lr", ",", "comm", "=", "MPI", ".", "COMM_WORLD", ")", "\n", "", "else", ":", "\n", "            ", "trainer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "self", ".", "ph_lr", ")", "\n", "", "gradsandvars", "=", "trainer", ".", "compute_gradients", "(", "self", ".", "total_loss", ",", "params", ")", "\n", "self", ".", "_train", "=", "trainer", ".", "apply_gradients", "(", "gradsandvars", ")", "\n", "if", "MPI", ".", "COMM_WORLD", ".", "Get_rank", "(", ")", "==", "0", ":", "\n", "            ", "getsess", "(", ")", ".", "run", "(", "tf", ".", "variables_initializer", "(", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "GLOBAL_VARIABLES", ")", ")", ")", "\n", "", "bcast_tf_vars_from_root", "(", "getsess", "(", ")", ",", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "GLOBAL_VARIABLES", ")", ")", "\n", "\n", "if", "self", ".", "checkpoint_path", "!=", "''", ":", "\n", "            ", "print", "(", "\"Loading model from\"", ",", "tf", ".", "train", ".", "latest_checkpoint", "(", "self", ".", "checkpoint_path", ")", ")", "\n", "self", ".", "intrinsic_model", ".", "saver", ".", "restore", "(", "getsess", "(", ")", ",", "\n", "tf", ".", "train", ".", "latest_checkpoint", "(", "self", ".", "checkpoint_path", ")", ")", "\n", "\n", "", "self", ".", "all_visited_rooms", "=", "[", "]", "\n", "self", ".", "all_scores", "=", "[", "]", "\n", "self", ".", "nenvs", "=", "nenvs", "=", "len", "(", "env_fns", ")", "\n", "self", ".", "nlump", "=", "nlump", "\n", "self", ".", "lump_stride", "=", "nenvs", "//", "self", ".", "nlump", "\n", "self", ".", "envs", "=", "[", "\n", "VecEnv", "(", "env_fns", "[", "l", "*", "self", ".", "lump_stride", ":", "(", "l", "+", "1", ")", "*", "self", ".", "lump_stride", "]", ",", "\n", "spaces", "=", "[", "self", ".", "ob_space", ",", "self", ".", "ac_space", "]", ")", "for", "l", "in", "range", "(", "self", ".", "nlump", ")", "]", "\n", "\n", "self", ".", "rollout", "=", "Rollout", "(", "ob_space", "=", "self", ".", "ob_space", ",", "ac_space", "=", "self", ".", "ac_space", ",", "nenvs", "=", "nenvs", ",", "\n", "nsteps_per_seg", "=", "self", ".", "nsteps_per_seg", ",", "\n", "nsegs_per_env", "=", "self", ".", "nsegs_per_env", ",", "nlumps", "=", "self", ".", "nlump", ",", "\n", "envs", "=", "self", ".", "envs", ",", "\n", "policy", "=", "self", ".", "stochpol", ",", "\n", "int_rew_coeff", "=", "self", ".", "int_coeff", ",", "\n", "ext_rew_coeff", "=", "self", ".", "ext_coeff", ",", "\n", "record_rollouts", "=", "self", ".", "use_recorder", ",", "\n", "intrinsic_model", "=", "intrinsic_model", ",", "\n", "log_dir", "=", "self", ".", "log_dir", ")", "\n", "\n", "self", ".", "buf_advs", "=", "np", ".", "zeros", "(", "(", "nenvs", ",", "self", ".", "rollout", ".", "nsteps", ")", ",", "np", ".", "float32", ")", "\n", "self", ".", "buf_rets", "=", "np", ".", "zeros", "(", "(", "nenvs", ",", "self", ".", "rollout", ".", "nsteps", ")", ",", "np", ".", "float32", ")", "\n", "\n", "if", "self", ".", "normrew", ":", "\n", "            ", "self", ".", "rff", "=", "RewardForwardFilter", "(", "self", ".", "gamma", ")", "\n", "self", ".", "rff_rms", "=", "RunningMeanStd", "(", ")", "\n", "\n", "", "self", ".", "step_count", "=", "0", "\n", "self", ".", "t_last_update", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "t_start", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.PpoOptimizer.stop_interaction": [[125, 128], ["env.close"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.close"], ["", "def", "stop_interaction", "(", "self", ")", ":", "\n", "        ", "for", "env", "in", "self", ".", "envs", ":", "\n", "            ", "env", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.PpoOptimizer.calculate_advantages": [[129, 141], ["range"], "methods", ["None"], ["", "", "def", "calculate_advantages", "(", "self", ",", "rews", ",", "use_news", ",", "gamma", ",", "lam", ")", ":", "\n", "        ", "nsteps", "=", "self", ".", "rollout", ".", "nsteps", "\n", "lastgaelam", "=", "0", "\n", "for", "t", "in", "range", "(", "nsteps", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "# nsteps-2 ... 0", "\n", "            ", "nextnew", "=", "self", ".", "rollout", ".", "buf_news", "[", ":", ",", "t", "+", "1", "]", "if", "t", "+", "1", "<", "nsteps", "else", "self", ".", "rollout", ".", "buf_new_last", "\n", "if", "not", "use_news", ":", "\n", "                ", "nextnew", "=", "0", "\n", "", "nextvals", "=", "self", ".", "rollout", ".", "buf_vpreds", "[", ":", ",", "t", "+", "1", "]", "if", "t", "+", "1", "<", "nsteps", "else", "self", ".", "rollout", ".", "buf_vpred_last", "\n", "nextnotnew", "=", "1", "-", "nextnew", "\n", "delta", "=", "rews", "[", ":", ",", "t", "]", "+", "gamma", "*", "nextvals", "*", "nextnotnew", "-", "self", ".", "rollout", ".", "buf_vpreds", "[", ":", ",", "t", "]", "\n", "self", ".", "buf_advs", "[", ":", ",", "t", "]", "=", "lastgaelam", "=", "delta", "+", "gamma", "*", "lam", "*", "nextnotnew", "*", "lastgaelam", "\n", "", "self", ".", "buf_rets", "[", ":", "]", "=", "self", ".", "buf_advs", "+", "self", ".", "rollout", ".", "buf_vpreds", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.PpoOptimizer.update": [[142, 225], ["cppo_agent.PpoOptimizer.calculate_advantages", "dict", "max", "numpy.arange", "ph_buf.extend", "range", "dict.update", "mpi4py.MPI.COMM_WORLD.Get_rank", "dict.update", "dict.update", "time.time", "numpy.array", "baselines.common.mpi_moments.mpi_moments", "cppo_agent.PpoOptimizer.rff_rms.update_from_moments", "numpy.copy", "utils.get_mean_and_std", "x.reshape", "cppo_agent.PpoOptimizer.intrinsic_model.get_audio_features", "ph_buf.extend", "numpy.random.shuffle", "range", "zip", "dict.pop", "numpy.array.ravel", "numpy.sqrt", "cppo_agent.PpoOptimizer.buf_advs.mean", "cppo_agent.PpoOptimizer.buf_advs.std", "cppo_agent.PpoOptimizer.buf_rets.mean", "cppo_agent.PpoOptimizer.buf_rets.std", "cppo_agent.PpoOptimizer.rollout.buf_vpreds.mean", "cppo_agent.PpoOptimizer.rollout.buf_vpreds.std", "baselines.common.explained_variance", "numpy.mean", "cppo_agent.PpoOptimizer.rollout.ac_fractions.mean", "cppo_agent.PpoOptimizer.update.resh"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.PpoOptimizer.calculate_advantages", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.RewardForwardFilter.update", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.RewardForwardFilter.update", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.RewardForwardFilter.update", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.get_mean_and_std", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.get_audio_features"], ["", "def", "update", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "normrew", ":", "\n", "            ", "rffs", "=", "np", ".", "array", "(", "[", "self", ".", "rff", ".", "update", "(", "rew", ")", "for", "rew", "in", "self", ".", "rollout", ".", "buf_rews", ".", "T", "]", ")", "\n", "rffs_mean", ",", "rffs_std", ",", "rffs_count", "=", "mpi_moments", "(", "rffs", ".", "ravel", "(", ")", ")", "\n", "self", ".", "rff_rms", ".", "update_from_moments", "(", "rffs_mean", ",", "rffs_std", "**", "2", ",", "rffs_count", ")", "\n", "rews", "=", "self", ".", "rollout", ".", "buf_rews", "/", "np", ".", "sqrt", "(", "self", ".", "rff_rms", ".", "var", ")", "\n", "", "else", ":", "\n", "            ", "rews", "=", "np", ".", "copy", "(", "self", ".", "rollout", ".", "buf_rews", ")", "\n", "", "self", ".", "calculate_advantages", "(", "rews", "=", "rews", ",", "use_news", "=", "self", ".", "use_news", ",", "gamma", "=", "self", ".", "gamma", ",", "lam", "=", "self", ".", "lam", ")", "\n", "\n", "info", "=", "dict", "(", "\n", "advmean", "=", "self", ".", "buf_advs", ".", "mean", "(", ")", ",", "\n", "advstd", "=", "self", ".", "buf_advs", ".", "std", "(", ")", ",", "\n", "retmean", "=", "self", ".", "buf_rets", ".", "mean", "(", ")", ",", "\n", "retstd", "=", "self", ".", "buf_rets", ".", "std", "(", ")", ",", "\n", "vpredmean", "=", "self", ".", "rollout", ".", "buf_vpreds", ".", "mean", "(", ")", ",", "\n", "vpredstd", "=", "self", ".", "rollout", ".", "buf_vpreds", ".", "std", "(", ")", ",", "\n", "ev", "=", "explained_variance", "(", "self", ".", "rollout", ".", "buf_vpreds", ".", "ravel", "(", ")", ",", "self", ".", "buf_rets", ".", "ravel", "(", ")", ")", ",", "\n", "rew_mean", "=", "np", ".", "mean", "(", "self", ".", "rollout", ".", "buf_int_rews", ")", ",", "\n", "action_fraction", "=", "self", ".", "rollout", ".", "ac_fractions", ".", "mean", "(", ")", ",", "\n", "recent_best_ext_ret", "=", "self", ".", "rollout", ".", "current_max", "\n", ")", "\n", "if", "self", ".", "rollout", ".", "best_ext_ret", "is", "not", "None", ":", "\n", "            ", "info", "[", "'best_ext_ret'", "]", "=", "self", ".", "rollout", ".", "best_ext_ret", "\n", "\n", "# normalize advantages", "\n", "", "if", "self", ".", "normadv", ":", "\n", "            ", "m", ",", "s", "=", "get_mean_and_std", "(", "self", ".", "buf_advs", ")", "\n", "self", ".", "buf_advs", "=", "(", "self", ".", "buf_advs", "-", "m", ")", "/", "(", "s", "+", "1e-7", ")", "\n", "", "envsperbatch", "=", "(", "self", ".", "nenvs", "*", "self", ".", "nsegs_per_env", ")", "//", "self", ".", "nminibatches", "\n", "envsperbatch", "=", "max", "(", "1", ",", "envsperbatch", ")", "\n", "envinds", "=", "np", ".", "arange", "(", "self", ".", "nenvs", "*", "self", ".", "nsegs_per_env", ")", "\n", "\n", "def", "resh", "(", "x", ")", ":", "\n", "            ", "if", "self", ".", "nsegs_per_env", "==", "1", ":", "\n", "                ", "return", "x", "\n", "", "sh", "=", "x", ".", "shape", "\n", "return", "x", ".", "reshape", "(", "(", "sh", "[", "0", "]", "*", "self", ".", "nsegs_per_env", ",", "self", ".", "nsteps_per_seg", ")", "+", "sh", "[", "2", ":", "]", ")", "\n", "\n", "", "ph_buf", "=", "[", "\n", "(", "self", ".", "stochpol", ".", "ph_ac", ",", "resh", "(", "self", ".", "rollout", ".", "buf_acs", ")", ")", ",", "\n", "(", "self", ".", "ph_rews", ",", "resh", "(", "self", ".", "rollout", ".", "buf_rews", ")", ")", ",", "\n", "(", "self", ".", "ph_oldvpred", ",", "resh", "(", "self", ".", "rollout", ".", "buf_vpreds", ")", ")", ",", "\n", "(", "self", ".", "ph_oldnlp", ",", "resh", "(", "self", ".", "rollout", ".", "buf_nlps", ")", ")", ",", "\n", "(", "self", ".", "stochpol", ".", "ph_ob", ",", "resh", "(", "self", ".", "rollout", ".", "buf_obs", ")", ")", ",", "\n", "(", "self", ".", "ph_ret", ",", "resh", "(", "self", ".", "buf_rets", ")", ")", ",", "\n", "(", "self", ".", "ph_adv", ",", "resh", "(", "self", ".", "buf_advs", ")", ")", ",", "\n", "]", "\n", "ph_buf", ".", "extend", "(", "[", "\n", "(", "self", ".", "intrinsic_model", ".", "last_ob", ",", "\n", "self", ".", "rollout", ".", "buf_obs_last", ".", "reshape", "(", "[", "self", ".", "nenvs", "*", "self", ".", "nsegs_per_env", ",", "1", ",", "*", "self", ".", "ob_space", ".", "shape", "]", ")", ")", "\n", "]", ")", "\n", "\n", "if", "self", ".", "feature_space", "!=", "'visual'", ":", "\n", "            ", "audio_features", "=", "self", ".", "intrinsic_model", ".", "get_audio_features", "(", "self", ".", "rollout", ".", "buf_audio", ")", "\n", "ph_buf", ".", "extend", "(", "[", "(", "self", ".", "intrinsic_model", ".", "audio_out_features", ",", "audio_features", ")", "]", ")", "\n", "", "mblossvals", "=", "[", "]", "\n", "\n", "for", "_", "in", "range", "(", "self", ".", "nepochs", ")", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "envinds", ")", "\n", "for", "start", "in", "range", "(", "0", ",", "self", ".", "nenvs", "*", "self", ".", "nsegs_per_env", ",", "envsperbatch", ")", ":", "\n", "                ", "end", "=", "start", "+", "envsperbatch", "\n", "mbenvinds", "=", "envinds", "[", "start", ":", "end", "]", "\n", "fd", "=", "{", "ph", ":", "buf", "[", "mbenvinds", "]", "for", "(", "ph", ",", "buf", ")", "in", "ph_buf", "}", "\n", "fd", ".", "update", "(", "{", "self", ".", "ph_lr", ":", "self", ".", "lr", ",", "self", ".", "ph_cliprange", ":", "self", ".", "cliprange", "}", ")", "\n", "mblossvals", ".", "append", "(", "getsess", "(", ")", ".", "run", "(", "self", ".", "_losses", "+", "(", "self", ".", "_train", ",", ")", ",", "fd", ")", "[", ":", "-", "1", "]", ")", "\n", "\n", "", "", "mblossvals", "=", "[", "mblossvals", "[", "0", "]", "]", "\n", "info", ".", "update", "(", "zip", "(", "[", "'opt_'", "+", "ln", "for", "ln", "in", "self", ".", "loss_names", "]", ",", "np", ".", "mean", "(", "[", "mblossvals", "[", "0", "]", "]", ",", "axis", "=", "0", ")", ")", ")", "\n", "info", "[", "\"rank\"", "]", "=", "MPI", ".", "COMM_WORLD", ".", "Get_rank", "(", ")", "\n", "self", ".", "n_updates", "+=", "1", "\n", "info", "[", "\"n_updates\"", "]", "=", "self", ".", "n_updates", "\n", "info", ".", "update", "(", "{", "dn", ":", "(", "np", ".", "mean", "(", "dvs", ")", "if", "len", "(", "dvs", ")", ">", "0", "else", "0", ")", "for", "(", "dn", ",", "dvs", ")", "in", "self", ".", "rollout", ".", "statlists", ".", "items", "(", ")", "}", ")", "\n", "info", ".", "update", "(", "self", ".", "rollout", ".", "stats", ")", "\n", "if", "\"states_visited\"", "in", "info", ":", "\n", "            ", "info", ".", "pop", "(", "\"states_visited\"", ")", "\n", "", "tnow", "=", "time", ".", "time", "(", ")", "\n", "info", "[", "\"ups\"", "]", "=", "1.", "/", "(", "tnow", "-", "self", ".", "t_last_update", ")", "\n", "info", "[", "\"total_secs\"", "]", "=", "tnow", "-", "self", ".", "t_start", "\n", "info", "[", "'tps'", "]", "=", "MPI", ".", "COMM_WORLD", ".", "Get_size", "(", ")", "*", "self", ".", "rollout", ".", "nsteps", "*", "self", ".", "nenvs", "/", "(", "tnow", "-", "self", ".", "t_last_update", ")", "\n", "self", ".", "t_last_update", "=", "tnow", "\n", "\n", "return", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.PpoOptimizer.step": [[226, 230], ["cppo_agent.PpoOptimizer.rollout.collect_rollout", "cppo_agent.PpoOptimizer.update"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.collect_rollout", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.RewardForwardFilter.update"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "self", ".", "rollout", ".", "collect_rollout", "(", "self", ".", "n_updates", ")", "\n", "update_info", "=", "self", ".", "update", "(", ")", "\n", "return", "{", "'update'", ":", "update_info", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.PpoOptimizer.get_var_values": [[231, 233], ["cppo_agent.PpoOptimizer.stochpol.get_var_values"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.PpoOptimizer.get_var_values"], ["", "def", "get_var_values", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "stochpol", ".", "get_var_values", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.PpoOptimizer.set_var_values": [[234, 236], ["cppo_agent.PpoOptimizer.stochpol.set_var_values"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.PpoOptimizer.set_var_values"], ["", "def", "set_var_values", "(", "self", ",", "vv", ")", ":", "\n", "        ", "self", ".", "stochpol", ".", "set_var_values", "(", "vv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.RewardForwardFilter.__init__": [[239, 242], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "gamma", ")", ":", "\n", "        ", "self", ".", "rewems", "=", "None", "\n", "self", ".", "gamma", "=", "gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.RewardForwardFilter.update": [[243, 249], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "rews", ")", ":", "\n", "        ", "if", "self", ".", "rewems", "is", "None", ":", "\n", "            ", "self", ".", "rewems", "=", "rews", "\n", "", "else", ":", "\n", "            ", "self", ".", "rewems", "=", "self", ".", "rewems", "*", "self", ".", "gamma", "+", "rews", "\n", "", "return", "self", ".", "rewems", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.CloudpickleWrapper.__init__": [[26, 28], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "x", ")", ":", "\n", "        ", "self", ".", "x", "=", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.CloudpickleWrapper.__getstate__": [[29, 32], ["cloudpickle.dumps"], "methods", ["None"], ["", "def", "__getstate__", "(", "self", ")", ":", "\n", "        ", "import", "cloudpickle", "\n", "return", "cloudpickle", ".", "dumps", "(", "self", ".", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.CloudpickleWrapper.__setstate__": [[33, 36], ["pickle.loads"], "methods", ["None"], ["", "def", "__setstate__", "(", "self", ",", "ob", ")", ":", "\n", "        ", "import", "pickle", "\n", "self", ".", "x", "=", "pickle", ".", "loads", "(", "ob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.__init__": [[43, 47], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "num_envs", ",", "observation_space", ",", "action_space", ")", ":", "\n", "        ", "self", ".", "num_envs", "=", "num_envs", "\n", "self", ".", "observation_space", "=", "observation_space", "\n", "self", ".", "action_space", "=", "action_space", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.reset": [[48, 59], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Reset all the environments and return an array of\n        observations, or a tuple of observation arrays.\n\n        If step_async is still doing work, that work will\n        be cancelled and step_wait() should not be called\n        until step_async() is invoked again.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.step_async": [[60, 71], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "step_async", "(", "self", ",", "actions", ")", ":", "\n", "        ", "\"\"\"\n        Tell all the environments to start taking a step\n        with the given actions.\n        Call step_wait() to get the results of the step.\n\n        You should not call this if a step_async run is\n        already pending.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.step_wait": [[72, 85], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "step_wait", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Wait for the step taken with step_async().\n\n        Returns (obs, rews, dones, infos):\n         - obs: an array of observations, or a tuple of\n                arrays of observations.\n         - rews: an array of rewards\n         - dones: an array of \"episode done\" booleans\n         - infos: a sequence of info objects\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.close": [[86, 92], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "close", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Clean up the environments' resources.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.step": [[93, 96], ["vec_env.VecEnv.step_async", "vec_env.VecEnv.step_wait"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.step_async", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.step_wait"], ["", "def", "step", "(", "self", ",", "actions", ")", ":", "\n", "        ", "self", ".", "step_async", "(", "actions", ")", "\n", "return", "self", ".", "step_wait", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.render": [[97, 99], ["baselines.logger.warn"], "methods", ["None"], ["", "def", "render", "(", "self", ")", ":", "\n", "        ", "logger", ".", "warn", "(", "'Render not defined for %s'", "%", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.__init__": [[107, 143], ["vec_env.VecEnv.__init__", "zip", "baselines.logger.log", "len", "isinstance", "tuple", "vec_env.CloudpickleWrapper", "multiprocessing.Pipe", "multiprocessing.Process", "vec_env.ShmemVecEnv.procs.append", "vec_env.ShmemVecEnv.parent_pipes.append", "multiprocessing.Process.start", "child_pipe.close", "baselines.logger.scoped_configure", "dummy.close", "multiprocessing.Array", "int", "numpy.prod"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.__init__", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.close", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.close"], ["def", "__init__", "(", "self", ",", "env_fns", ",", "spaces", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        If you don't specify observation_space, we'll have to create a dummy\n        environment to get it.\n        \"\"\"", "\n", "if", "spaces", ":", "\n", "            ", "observation_space", ",", "action_space", "=", "spaces", "\n", "", "else", ":", "\n", "            ", "logger", ".", "log", "(", "'Creating dummy env object to get spaces'", ")", "\n", "with", "logger", ".", "scoped_configure", "(", "format_strs", "=", "[", "]", ")", ":", "\n", "                ", "dummy", "=", "env_fns", "[", "0", "]", "(", ")", "\n", "observation_space", ",", "action_space", "=", "dummy", ".", "observation_space", ",", "dummy", ".", "action_space", "\n", "dummy", ".", "close", "(", ")", "\n", "del", "dummy", "\n", "", "", "VecEnv", ".", "__init__", "(", "self", ",", "len", "(", "env_fns", ")", ",", "observation_space", ",", "action_space", ")", "\n", "\n", "obs_spaces", "=", "observation_space", ".", "spaces", "if", "isinstance", "(", "self", ".", "observation_space", ",", "gym", ".", "spaces", ".", "Tuple", ")", "else", "(", "\n", "self", ".", "observation_space", ",", ")", "\n", "self", ".", "obs_bufs", "=", "[", "tuple", "(", "Array", "(", "_NP_TO_CT", "[", "s", ".", "dtype", ".", "type", "]", ",", "int", "(", "np", ".", "prod", "(", "s", ".", "shape", ")", ")", ")", "for", "s", "in", "obs_spaces", ")", "for", "_", "in", "\n", "env_fns", "]", "\n", "self", ".", "obs_shapes", "=", "[", "s", ".", "shape", "for", "s", "in", "obs_spaces", "]", "\n", "self", ".", "obs_dtypes", "=", "[", "s", ".", "dtype", "for", "s", "in", "obs_spaces", "]", "\n", "\n", "self", ".", "parent_pipes", "=", "[", "]", "\n", "self", ".", "procs", "=", "[", "]", "\n", "for", "env_fn", ",", "obs_buf", "in", "zip", "(", "env_fns", ",", "self", ".", "obs_bufs", ")", ":", "\n", "            ", "wrapped_fn", "=", "CloudpickleWrapper", "(", "env_fn", ")", "\n", "parent_pipe", ",", "child_pipe", "=", "Pipe", "(", ")", "\n", "proc", "=", "Process", "(", "target", "=", "_subproc_worker", ",", "\n", "args", "=", "(", "child_pipe", ",", "parent_pipe", ",", "wrapped_fn", ",", "obs_buf", ",", "self", ".", "obs_shapes", ")", ")", "\n", "proc", ".", "daemon", "=", "True", "\n", "self", ".", "procs", ".", "append", "(", "proc", ")", "\n", "self", ".", "parent_pipes", ".", "append", "(", "parent_pipe", ")", "\n", "proc", ".", "start", "(", ")", "\n", "child_pipe", ".", "close", "(", ")", "\n", "", "self", ".", "waiting_step", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.reset": [[144, 151], ["vec_env.ShmemVecEnv._decode_obses", "baselines.logger.warn", "vec_env.ShmemVecEnv.step_wait", "pipe.send", "pipe.recv"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv._decode_obses", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.step_wait"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "waiting_step", ":", "\n", "            ", "logger", ".", "warn", "(", "'Called reset() while waiting for the step to complete'", ")", "\n", "self", ".", "step_wait", "(", ")", "\n", "", "for", "pipe", "in", "self", ".", "parent_pipes", ":", "\n", "            ", "pipe", ".", "send", "(", "(", "'reset'", ",", "None", ")", ")", "\n", "", "return", "self", ".", "_decode_obses", "(", "[", "pipe", ".", "recv", "(", ")", "for", "pipe", "in", "self", ".", "parent_pipes", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.step_async": [[152, 156], ["zip", "len", "len", "pipe.send"], "methods", ["None"], ["", "def", "step_async", "(", "self", ",", "actions", ")", ":", "\n", "        ", "assert", "len", "(", "actions", ")", "==", "len", "(", "self", ".", "parent_pipes", ")", "\n", "for", "pipe", ",", "act", "in", "zip", "(", "self", ".", "parent_pipes", ",", "actions", ")", ":", "\n", "            ", "pipe", ".", "send", "(", "(", "'step'", ",", "act", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.step_wait": [[157, 161], ["zip", "pipe.recv", "vec_env.ShmemVecEnv._decode_obses", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv._decode_obses"], ["", "", "def", "step_wait", "(", "self", ")", ":", "\n", "        ", "outs", "=", "[", "pipe", ".", "recv", "(", ")", "for", "pipe", "in", "self", ".", "parent_pipes", "]", "\n", "obs", ",", "rews", ",", "dones", ",", "infos", "=", "zip", "(", "*", "outs", ")", "\n", "return", "self", ".", "_decode_obses", "(", "obs", ")", ",", "np", ".", "array", "(", "rews", ")", ",", "np", ".", "array", "(", "dones", ")", ",", "infos", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.close": [[162, 172], ["vec_env.ShmemVecEnv.step_wait", "pipe.send", "pipe.recv", "pipe.close", "proc.join"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.step_wait", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "waiting_step", ":", "\n", "            ", "self", ".", "step_wait", "(", ")", "\n", "", "for", "pipe", "in", "self", ".", "parent_pipes", ":", "\n", "            ", "pipe", ".", "send", "(", "(", "'close'", ",", "None", ")", ")", "\n", "", "for", "pipe", "in", "self", ".", "parent_pipes", ":", "\n", "            ", "pipe", ".", "recv", "(", ")", "\n", "pipe", ".", "close", "(", ")", "\n", "", "for", "proc", "in", "self", ".", "procs", ":", "\n", "            ", "proc", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv._decode_obses": [[173, 184], ["enumerate", "obs.append", "tuple", "numpy.frombuffer().reshape", "numpy.array", "len", "numpy.frombuffer", "b.get_obj"], "methods", ["None"], ["", "", "def", "_decode_obses", "(", "self", ",", "obs", ")", ":", "\n", "        ", "\"\"\"\n        Turn the observation responses into a single numpy\n        array, possibly via shared memory.\n        \"\"\"", "\n", "obs", "=", "[", "]", "\n", "for", "i", ",", "shape", "in", "enumerate", "(", "self", ".", "obs_shapes", ")", ":", "\n", "            ", "bufs", "=", "[", "b", "[", "i", "]", "for", "b", "in", "self", ".", "obs_bufs", "]", "\n", "o", "=", "[", "np", ".", "frombuffer", "(", "b", ".", "get_obj", "(", ")", ",", "dtype", "=", "self", ".", "obs_dtypes", "[", "i", "]", ")", ".", "reshape", "(", "shape", ")", "for", "b", "in", "bufs", "]", "\n", "obs", ".", "append", "(", "np", ".", "array", "(", "o", ")", ")", "\n", "", "return", "tuple", "(", "obs", ")", "if", "len", "(", "obs", ")", ">", "1", "else", "obs", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env._subproc_worker": [[186, 222], ["env_fn_wrapper.x", "parent_pipe.close", "zip", "env_fn_wrapper.x.close", "isinstance", "b.get_obj", "numpy.frombuffer().reshape", "numpy.copyto", "pipe.recv", "pipe.send", "numpy.frombuffer", "vec_env._subproc_worker._write_obs"], "function", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.close", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.close"], ["", "", "def", "_subproc_worker", "(", "pipe", ",", "parent_pipe", ",", "env_fn_wrapper", ",", "obs_buf", ",", "obs_shape", ")", ":", "\n", "    ", "\"\"\"\n    Control a single environment instance using IPC and\n    shared memory.\n\n    If obs_buf is not None, it is a shared-memory buffer\n    for communicating observations.\n    \"\"\"", "\n", "\n", "def", "_write_obs", "(", "obs", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "obs", ",", "tuple", ")", ":", "\n", "            ", "obs", "=", "(", "obs", ",", ")", "\n", "", "for", "o", ",", "b", ",", "s", "in", "zip", "(", "obs", ",", "obs_buf", ",", "obs_shape", ")", ":", "\n", "            ", "dst", "=", "b", ".", "get_obj", "(", ")", "\n", "dst_np", "=", "np", ".", "frombuffer", "(", "dst", ",", "dtype", "=", "_CT_TO_NP", "[", "dst", ".", "_type_", "]", ")", ".", "reshape", "(", "s", ")", "# pylint: disable=W0212", "\n", "np", ".", "copyto", "(", "dst_np", ",", "o", ")", "\n", "\n", "", "", "env", "=", "env_fn_wrapper", ".", "x", "(", ")", "\n", "parent_pipe", ".", "close", "(", ")", "\n", "try", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "cmd", ",", "data", "=", "pipe", ".", "recv", "(", ")", "\n", "if", "cmd", "==", "'reset'", ":", "\n", "                ", "pipe", ".", "send", "(", "_write_obs", "(", "env", ".", "reset", "(", ")", ")", ")", "\n", "", "elif", "cmd", "==", "'step'", ":", "\n", "                ", "obs", ",", "reward", ",", "done", ",", "info", "=", "env", ".", "step", "(", "data", ")", "\n", "if", "done", ":", "\n", "                    ", "obs", "=", "env", ".", "reset", "(", ")", "\n", "", "pipe", ".", "send", "(", "(", "_write_obs", "(", "obs", ")", ",", "reward", ",", "done", ",", "info", ")", ")", "\n", "", "elif", "cmd", "==", "'close'", ":", "\n", "                ", "pipe", ".", "send", "(", "None", ")", "\n", "break", "\n", "", "else", ":", "\n", "                ", "raise", "RuntimeError", "(", "'Got unrecognized cmd %s'", "%", "cmd", ")", "\n", "", "", "", "finally", ":", "\n", "        ", "env", ".", "close", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.__init__": [[9, 54], ["tensorflow.placeholder", "intrinsic_model.IntrinsicModel.get_features", "tensorflow.stop_gradient", "tensorflow.variable_scope", "tensorflow.train.Saver", "intrinsic_model.IntrinsicModel.get_loss", "intrinsic_model.IntrinsicModel.get_loss", "intrinsic_model.IntrinsicModel.get_loss"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.JustPixels.get_features", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.JustPixels.get_loss", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.JustPixels.get_loss", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.JustPixels.get_loss"], ["    ", "def", "__init__", "(", "self", ",", "auxiliary_task", ",", "predict_from_pixels", ",", "feature_space", "=", "'visual'", ",", "\n", "nsteps_per_seg", "=", "None", ",", "feat_dim", "=", "None", ",", "naudio_samples", "=", "None", ",", "\n", "train_discriminator", "=", "False", ",", "scope", "=", "'intrinsic_model'", ",", "\n", "discriminator_weighted", "=", "False", ",", "noise_multiplier", "=", "0.0", ",", "\n", "concat", "=", "False", ",", "log_dir", "=", "''", ",", "make_video", "=", "False", ")", ":", "\n", "        ", "self", ".", "scope", "=", "scope", "\n", "self", ".", "auxiliary_task", "=", "auxiliary_task", "\n", "self", ".", "hidsize", "=", "self", ".", "auxiliary_task", ".", "hidsize", "\n", "self", ".", "feat_dim", "=", "feat_dim", "\n", "self", ".", "naudio_samples", "=", "naudio_samples", "\n", "self", ".", "obs", "=", "self", ".", "auxiliary_task", ".", "obs", "\n", "self", ".", "last_ob", "=", "self", ".", "auxiliary_task", ".", "last_ob", "\n", "self", ".", "ac", "=", "self", ".", "auxiliary_task", ".", "ac", "\n", "self", ".", "ac_space", "=", "self", ".", "auxiliary_task", ".", "ac_space", "\n", "self", ".", "ob_mean", "=", "self", ".", "auxiliary_task", ".", "ob_mean", "\n", "self", ".", "ob_std", "=", "self", ".", "auxiliary_task", ".", "ob_std", "\n", "self", ".", "feature_space", "=", "feature_space", "\n", "self", ".", "nsteps", "=", "nsteps_per_seg", "\n", "self", ".", "train_discriminator", "=", "train_discriminator", "\n", "self", ".", "discriminator_weighted", "=", "discriminator_weighted", "\n", "self", ".", "noise_multiplier", "=", "noise_multiplier", "\n", "self", ".", "concat", "=", "concat", "\n", "self", ".", "log_dir", "=", "log_dir", "\n", "self", ".", "make_video", "=", "make_video", "\n", "\n", "self", ".", "updates", "=", "0", "\n", "\n", "if", "predict_from_pixels", ":", "\n", "            ", "self", ".", "features", "=", "self", ".", "get_features", "(", "self", ".", "obs", ",", "reuse", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "features", "=", "tf", ".", "stop_gradient", "(", "self", ".", "auxiliary_task", ".", "features", ")", "\n", "\n", "", "self", ".", "visual_out_features", "=", "self", ".", "auxiliary_task", ".", "next_features", "\n", "self", ".", "audio_out_features", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "None", ",", "self", ".", "feat_dim", ")", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "self", ".", "scope", "+", "\"_loss\"", ")", ":", "\n", "            ", "if", "feature_space", "==", "'joint'", ":", "\n", "# Multiply by 40 to make visual and audio losses roughly same scale", "\n", "                ", "self", ".", "visual_loss", "=", "40", "*", "self", ".", "get_loss", "(", "local_scope", "=", "'_visual'", ")", "\n", "self", ".", "audio_loss", "=", "self", ".", "get_loss", "(", "local_scope", "=", "'_audio'", ")", "\n", "\n", "self", ".", "loss", "=", "self", ".", "visual_loss", "+", "self", ".", "audio_loss", "\n", "", "else", ":", "\n", "                ", "self", ".", "loss", "=", "self", ".", "get_loss", "(", ")", "\n", "", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "keep_checkpoint_every_n_hours", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.get_features": [[56, 68], ["tensorflow.shape", "utils.flatten_two_dims", "tensorflow.variable_scope", "utils.small_convnet", "utils.unflatten_first_dim", "utils.unflatten_first_dim.get_shape", "tensorflow.to_float"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.flatten_two_dims", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.small_convnet", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.unflatten_first_dim"], ["", "", "def", "get_features", "(", "self", ",", "x", ",", "reuse", ")", ":", "\n", "        ", "nl", "=", "tf", ".", "nn", ".", "leaky_relu", "\n", "x_has_timesteps", "=", "(", "x", ".", "get_shape", "(", ")", ".", "ndims", "==", "5", ")", "\n", "if", "x_has_timesteps", ":", "\n", "            ", "sh", "=", "tf", ".", "shape", "(", "x", ")", "\n", "x", "=", "flatten_two_dims", "(", "x", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "self", ".", "scope", "+", "\"_features\"", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "x", "=", "(", "tf", ".", "to_float", "(", "x", ")", "-", "self", ".", "ob_mean", ")", "/", "self", ".", "ob_std", "\n", "x", "=", "small_convnet", "(", "x", ",", "nl", "=", "nl", ",", "feat_dim", "=", "self", ".", "feat_dim", ",", "last_nl", "=", "nl", ",", "layernormalize", "=", "False", ")", "\n", "", "if", "x_has_timesteps", ":", "\n", "            ", "x", "=", "unflatten_first_dim", "(", "x", ",", "sh", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.get_audio_features": [[71, 94], ["audio.astype.astype.astype", "numpy.zeros", "range", "range", "max", "numpy.fft.rfft", "numpy.reshape", "numpy.max", "int", "numpy.abs"], "methods", ["None"], ["", "def", "get_audio_features", "(", "self", ",", "audio", ")", ":", "\n", "        ", "audio", "=", "audio", ".", "astype", "(", "np", ".", "int16", ")", "\n", "nenvs", "=", "audio", ".", "shape", "[", "0", "]", "\n", "audio_features", "=", "np", ".", "zeros", "(", "(", "nenvs", ",", "self", ".", "nsteps", ",", "self", ".", "feat_dim", ")", ")", "\n", "for", "env", "in", "range", "(", "nenvs", ")", ":", "\n", "            ", "for", "step", "in", "range", "(", "self", ".", "nsteps", ")", ":", "\n", "                ", "window_size", "=", "1", "\n", "\n", "# Handle edge case", "\n", "index_start", "=", "max", "(", "0", ",", "(", "step", "-", "window_size", ")", "*", "self", ".", "naudio_samples", ")", "\n", "index_end", "=", "step", "*", "self", ".", "naudio_samples", "\n", "clip", "=", "audio", "[", "env", ",", "index_start", ":", "index_end", ",", "0", "]", "\n", "if", "clip", ".", "size", "==", "0", ":", "\n", "                    ", "continue", "\n", "\n", "", "fft", "=", "np", ".", "fft", ".", "rfft", "(", "clip", ",", "norm", "=", "'ortho'", ")", "\n", "# Collapse fft result into 512 dimensional vector", "\n", "new_shape", "=", "(", "self", ".", "feat_dim", ",", "int", "(", "fft", ".", "shape", "[", "0", "]", "/", "self", ".", "feat_dim", ")", ")", "\n", "fft_reshaped", "=", "np", ".", "reshape", "(", "fft", "[", "1", ":", "new_shape", "[", "0", "]", "*", "new_shape", "[", "1", "]", "+", "1", "]", ",", "new_shape", ")", "\n", "fft_condensed", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "fft_reshaped", ")", ",", "axis", "=", "1", ")", "\n", "if", "step", "<", "audio_features", ".", "shape", "[", "1", "]", ":", "\n", "                    ", "audio_features", "[", "env", ",", "step", ",", ":", "]", "=", "fft_condensed", "/", "50000", "\n", "", "", "", "return", "audio_features", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.reconstruct_audio": [[96, 103], ["numpy.expand_dims", "numpy.pad", "numpy.concatenate", "numpy.fft.irfft", "int"], "methods", ["None"], ["", "def", "reconstruct_audio", "(", "self", ",", "features", ")", ":", "\n", "        ", "fft_condensed", "=", "np", ".", "expand_dims", "(", "features", "*", "50000", ",", "axis", "=", "1", ")", "\n", "pad_amount", "=", "int", "(", "5301", "/", "self", ".", "feat_dim", ")", "-", "1", "\n", "fft_uncondensed", "=", "np", ".", "pad", "(", "fft_condensed", ",", "(", "(", "0", ",", "0", ")", ",", "(", "0", ",", "pad_amount", ")", ")", ",", "'constant'", ",", "constant_values", "=", "(", "0", ",", "0", ")", ")", "\n", "fft_unsplit", "=", "np", ".", "concatenate", "(", "fft_uncondensed", ")", "\n", "audio", "=", "np", ".", "fft", ".", "irfft", "(", "fft_unsplit", ",", "norm", "=", "'ortho'", ",", "n", "=", "self", ".", "naudio_samples", ")", "\n", "return", "audio", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.compute_discriminator_loss": [[105, 136], ["tensorflow.shape", "tensorflow.random.shuffle", "tensorflow.where", "tensorflow.where", "tensorflow.expand_dims", "intrinsic_model.IntrinsicModel.get_discriminator_predictions", "tensorflow.sigmoid", "tensorflow.clip_by_value", "tensorflow.losses.sigmoid_cross_entropy", "tensorflow.norm", "tensorflow.random_uniform", "tensorflow.where", "tensorflow.ones", "tensorflow.zeros", "tensorflow.reduce_mean"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.get_discriminator_predictions"], ["", "def", "compute_discriminator_loss", "(", "self", ",", "visual_state", ",", "action", ",", "audio_state", ")", ":", "\n", "        ", "\"\"\"\n        Takes in a set of visual states, actions, and audio states.\n        Creates a set of targets by randomly using the true audio_state or a\n        false audio_state sampled from the rest of the audio and creates the\n        discriminator from that.\n        \"\"\"", "\n", "batch_size", "=", "tf", ".", "shape", "(", "visual_state", "[", ":", ",", "0", "]", ")", "\n", "\n", "# Create flags where 1 means use the true state and 0 means misalign the audio.", "\n", "audio_state_flags", "=", "tf", ".", "random_uniform", "(", "batch_size", ",", "minval", "=", "0", ",", "maxval", "=", "1", ")", ">", ".5", "\n", "false_state", "=", "tf", ".", "random", ".", "shuffle", "(", "audio_state", ")", "\n", "self", ".", "combined_states", "=", "tf", ".", "where", "(", "audio_state_flags", ",", "x", "=", "audio_state", ",", "y", "=", "false_state", ")", "\n", "targets", "=", "tf", ".", "where", "(", "audio_state_flags", ",", "x", "=", "tf", ".", "ones", "(", "batch_size", ")", ",", "y", "=", "tf", ".", "zeros", "(", "batch_size", ")", ")", "\n", "self", ".", "discrim_targets", "=", "targets", "\n", "\n", "targets", "=", "tf", ".", "expand_dims", "(", "targets", ",", "axis", "=", "-", "1", ")", "\n", "\n", "predictions", "=", "self", ".", "get_discriminator_predictions", "(", "visual_state", ",", "action", ",", "self", ".", "combined_states", ")", "\n", "self", ".", "discrim_preds_for_loss", "=", "tf", ".", "sigmoid", "(", "predictions", ")", "\n", "self", ".", "discrim_preds_for_loss", "=", "tf", ".", "clip_by_value", "(", "self", ".", "discrim_preds_for_loss", ",", "0.0001", ",", "0.9999", ")", "\n", "\n", "discrim_loss", "=", "tf", ".", "losses", ".", "sigmoid_cross_entropy", "(", "targets", ",", "predictions", ",", "\n", "reduction", "=", "tf", ".", "losses", ".", "Reduction", ".", "NONE", ")", "\n", "self", ".", "discrim_train_loss_unweighted", "=", "discrim_loss", "\n", "self", ".", "state_diff", "=", "tf", ".", "norm", "(", "audio_state", "-", "false_state", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "\n", "if", "self", ".", "discriminator_weighted", ":", "\n", "            ", "weighted_loss", "=", "self", ".", "state_diff", "*", "discrim_loss", "/", "tf", ".", "reduce_mean", "(", "self", ".", "state_diff", ")", "\n", "discrim_loss", "=", "tf", ".", "where", "(", "audio_state_flags", ",", "x", "=", "discrim_loss", ",", "y", "=", "weighted_loss", ")", "\n", "", "return", "discrim_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.get_discriminator_predictions": [[138, 154], ["tensorflow.concat", "tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.stop_gradient", "tensorflow.stop_gradient"], "methods", ["None"], ["", "def", "get_discriminator_predictions", "(", "self", ",", "visual_state", ",", "action", ",", "audio_state", ")", ":", "\n", "        ", "\"\"\"\n        The discriminator takes in visual and audio features and predicts\n        whether they are aligned. The targets are 1 if visual_state and\n        audio_state are aligned and 0 otherwise.\n        \"\"\"", "\n", "cat_features", "=", "tf", ".", "concat", "(", "[", "tf", ".", "stop_gradient", "(", "visual_state", ")", ",", "\n", "tf", ".", "stop_gradient", "(", "action", ")", ",", "\n", "audio_state", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "\"discriminator\"", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "            ", "x", "=", "tf", ".", "layers", ".", "dense", "(", "cat_features", ",", "512", ",", "activation", "=", "tf", ".", "nn", ".", "leaky_relu", ")", "\n", "x", "=", "tf", ".", "layers", ".", "dense", "(", "x", ",", "512", ",", "activation", "=", "tf", ".", "nn", ".", "leaky_relu", ")", "\n", "x", "=", "tf", ".", "layers", ".", "dense", "(", "x", ",", "1", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.gaussian_noise_layer": [[155, 161], ["tensorflow.random_normal", "tensorflow.shape"], "methods", ["None"], ["", "def", "gaussian_noise_layer", "(", "self", ",", "input_layer", ",", "std", ")", ":", "\n", "        ", "if", "std", "==", "0", ":", "\n", "            ", "return", "input_layer", "\n", "", "else", ":", "\n", "            ", "noise", "=", "tf", ".", "random_normal", "(", "shape", "=", "tf", ".", "shape", "(", "input_layer", ")", ",", "mean", "=", "0.0", ",", "stddev", "=", "std", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "input_layer", "+", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.get_loss": [[162, 228], ["tensorflow.one_hot", "tensorflow.shape", "utils.flatten_two_dims", "intrinsic_model.IntrinsicModel.compute_discriminator_loss", "tensorflow.reduce_mean", "intrinsic_model.IntrinsicModel.get_discriminator_predictions", "tensorflow.sigmoid", "tensorflow.reduce_mean", "tensorflow.clip_by_value", "tensorflow.concat", "tensorflow.concat", "tensorflow.variable_scope", "intrinsic_model.IntrinsicModel.gaussian_noise_layer", "tensorflow.layers.dense", "range", "tensorflow.layers.dense", "utils.unflatten_first_dim", "intrinsic_model.IntrinsicModel.get_loss.add_audio"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.flatten_two_dims", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.compute_discriminator_loss", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.get_discriminator_predictions", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.gaussian_noise_layer", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.unflatten_first_dim"], ["", "", "def", "get_loss", "(", "self", ",", "local_scope", "=", "\"\"", ")", ":", "\n", "        ", "visual_std", "=", "15", "*", "self", ".", "noise_multiplier", "\n", "audio_std", "=", "0.2", "*", "self", ".", "noise_multiplier", "\n", "ac", "=", "tf", ".", "one_hot", "(", "self", ".", "ac", ",", "self", ".", "ac_space", ".", "n", ",", "axis", "=", "2", ")", "\n", "sh", "=", "tf", ".", "shape", "(", "ac", ")", "\n", "ac", "=", "flatten_two_dims", "(", "ac", ")", "\n", "\n", "def", "add_ac", "(", "x", ")", ":", "\n", "            ", "return", "tf", ".", "concat", "(", "[", "x", ",", "ac", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "", "def", "add_audio", "(", "x", ")", ":", "\n", "            ", "return", "tf", ".", "concat", "(", "[", "0.1", "*", "x", ",", "self", ".", "audio_out_features", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "self", ".", "scope", "+", "local_scope", ")", ":", "\n", "            ", "if", "self", ".", "concat", ":", "\n", "                ", "x", "=", "flatten_two_dims", "(", "add_audio", "(", "self", ".", "features", ")", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "flatten_two_dims", "(", "self", ".", "features", ")", "\n", "", "x", "=", "self", ".", "gaussian_noise_layer", "(", "x", ",", "visual_std", ")", "\n", "x", "=", "tf", ".", "layers", ".", "dense", "(", "add_ac", "(", "x", ")", ",", "self", ".", "hidsize", ",", "activation", "=", "tf", ".", "nn", ".", "leaky_relu", ")", "\n", "\n", "def", "residual", "(", "x", ")", ":", "\n", "                ", "res", "=", "tf", ".", "layers", ".", "dense", "(", "add_ac", "(", "x", ")", ",", "self", ".", "hidsize", ",", "activation", "=", "tf", ".", "nn", ".", "leaky_relu", ")", "\n", "res", "=", "tf", ".", "layers", ".", "dense", "(", "add_ac", "(", "res", ")", ",", "self", ".", "hidsize", ",", "activation", "=", "None", ")", "\n", "return", "x", "+", "res", "\n", "\n", "", "for", "_", "in", "range", "(", "4", ")", ":", "\n", "                ", "x", "=", "residual", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "concat", ":", "\n", "                ", "output_dim", "=", "1024", "\n", "", "else", ":", "\n", "                ", "output_dim", "=", "self", ".", "feat_dim", "\n", "", "x", "=", "tf", ".", "layers", ".", "dense", "(", "add_ac", "(", "x", ")", ",", "output_dim", ",", "activation", "=", "None", ")", "\n", "x", "=", "unflatten_first_dim", "(", "x", ",", "sh", ")", "\n", "", "self", ".", "tf_predictions", "=", "x", "\n", "\n", "if", "self", ".", "concat", ":", "\n", "            ", "concat_target", "=", "add_audio", "(", "self", ".", "visual_out_features", ")", "\n", "dyn_loss", "=", "tf", ".", "reduce_mean", "(", "(", "x", "-", "tf", ".", "stop_gradient", "(", "self", ".", "gaussian_noise_layer", "(", "concat_target", ",", "visual_std", ")", ")", ")", "**", "2", ",", "-", "1", ")", "\n", "", "elif", "self", ".", "feature_space", "==", "'visual'", "or", "local_scope", "==", "'_visual'", ":", "\n", "            ", "dyn_loss", "=", "tf", ".", "reduce_mean", "(", "(", "x", "-", "tf", ".", "stop_gradient", "(", "self", ".", "gaussian_noise_layer", "(", "self", ".", "visual_out_features", ",", "visual_std", ")", ")", ")", "**", "2", ",", "-", "1", ")", "\n", "return", "dyn_loss", "\n", "", "else", ":", "\n", "            ", "dyn_loss", "=", "tf", ".", "reduce_mean", "(", "(", "x", "-", "tf", ".", "stop_gradient", "(", "self", ".", "gaussian_noise_layer", "(", "self", ".", "audio_out_features", ",", "audio_std", ")", ")", ")", "**", "2", ",", "-", "1", ")", "\n", "\n", "", "if", "not", "self", ".", "train_discriminator", ":", "\n", "            ", "return", "dyn_loss", "\n", "\n", "", "discrim_loss", "=", "self", ".", "compute_discriminator_loss", "(", "\n", "visual_state", "=", "flatten_two_dims", "(", "self", ".", "gaussian_noise_layer", "(", "self", ".", "features", ",", "visual_std", ")", ")", ",", "action", "=", "ac", ",", "\n", "audio_state", "=", "flatten_two_dims", "(", "self", ".", "gaussian_noise_layer", "(", "self", ".", "audio_out_features", ",", "audio_std", ")", ")", ")", "\n", "self", ".", "discrim_train_loss", "=", "tf", ".", "reduce_mean", "(", "unflatten_first_dim", "(", "discrim_loss", ",", "sh", ")", ",", "-", "1", ")", "\n", "\n", "# Run the aligned states through the discriminator and use the scores for the intrinsic reward.", "\n", "discrim_pred_for_x", "=", "self", ".", "get_discriminator_predictions", "(", "\n", "visual_state", "=", "flatten_two_dims", "(", "self", ".", "gaussian_noise_layer", "(", "self", ".", "features", ",", "visual_std", ")", ")", ",", "action", "=", "ac", ",", "\n", "audio_state", "=", "flatten_two_dims", "(", "self", ".", "gaussian_noise_layer", "(", "self", ".", "audio_out_features", ",", "audio_std", ")", ")", ")", "\n", "self", ".", "before_sigmoid_preds", "=", "discrim_pred_for_x", "\n", "discrim_pred_for_x", "=", "tf", ".", "sigmoid", "(", "discrim_pred_for_x", ")", "\n", "discrim_pred_for_x", "=", "tf", ".", "reduce_mean", "(", "unflatten_first_dim", "(", "discrim_pred_for_x", ",", "sh", ")", ",", "-", "1", ")", "\n", "discrim_pred_for_x", "=", "tf", ".", "clip_by_value", "(", "discrim_pred_for_x", ",", "0.0001", ",", "0.9999", ")", "\n", "self", ".", "discriminator_predictions", "=", "discrim_pred_for_x", "\n", "discriminator_reward", "=", "-", "tf", ".", "log", "(", "discrim_pred_for_x", ")", "\n", "\n", "return", "discriminator_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.calculate_loss": [[230, 283], ["intrinsic_model.IntrinsicModel.get_audio_features", "numpy.concatenate", "numpy.concatenate", "range", "numpy.asarray().astype", "numpy.asarray().astype", "intrinsic_model.IntrinsicModel.saver.save", "slice", "print", "numpy.save", "variables_to_run.append", "utils.getsess().run", "numpy.concatenate", "numpy.asarray().astype.extend", "numpy.asarray().astype.extend", "os.system", "utils.getsess", "utils.getsess().run", "numpy.concatenate", "range", "intrinsic_model.IntrinsicModel.reconstruct_audio", "intrinsic_model.IntrinsicModel.reconstruct_audio", "numpy.asarray", "numpy.asarray", "range", "utils.getsess", "utils.getsess", "sli", "sli", "sli", "sli", "sli", "sli", "sli", "sli"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.get_audio_features", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.reconstruct_audio", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.reconstruct_audio"], ["", "def", "calculate_loss", "(", "self", ",", "ob", ",", "last_ob", ",", "acs", ",", "audio", ")", ":", "\n", "        ", "if", "self", ".", "updates", "%", "200", "==", "1", ":", "\n", "            ", "if", "self", ".", "updates", "==", "1", ":", "\n", "                ", "os", ".", "system", "(", "'mkdir -p '", "+", "self", ".", "log_dir", "+", "'/checkpoints/'", ")", "\n", "", "self", ".", "saver", ".", "save", "(", "getsess", "(", ")", ",", "self", ".", "log_dir", "+", "'/checkpoints/model'", ",", "global_step", "=", "self", ".", "updates", ")", "\n", "\n", "", "self", ".", "updates", "+=", "1", "\n", "\n", "n_chunks", "=", "8", "\n", "n", "=", "ob", ".", "shape", "[", "0", "]", "\n", "chunk_size", "=", "n", "//", "n_chunks", "\n", "if", "chunk_size", "==", "0", ":", "\n", "            ", "n_chunks", "=", "1", "\n", "chunk_size", "=", "n", "\n", "\n", "", "sli", "=", "lambda", "i", ":", "slice", "(", "i", "*", "chunk_size", ",", "(", "i", "+", "1", ")", "*", "chunk_size", ")", "\n", "\n", "audio_features", "=", "self", ".", "get_audio_features", "(", "audio", ")", "\n", "if", "self", ".", "make_video", ":", "\n", "            ", "print", "(", "\"saving audio features\"", ")", "\n", "np", ".", "save", "(", "self", ".", "log_dir", "+", "'/audio_features'", ",", "audio_features", ")", "\n", "\n", "", "if", "self", ".", "feature_space", "==", "'joint'", "or", "self", ".", "feature_space", "==", "'visual'", ":", "\n", "            ", "losses", "=", "[", "getsess", "(", ")", ".", "run", "(", "self", ".", "loss", ",", "\n", "{", "self", ".", "audio_out_features", ":", "audio_features", "[", "sli", "(", "i", ")", "]", ",", "\n", "self", ".", "obs", ":", "ob", "[", "sli", "(", "i", ")", "]", ",", "self", ".", "last_ob", ":", "last_ob", "[", "sli", "(", "i", ")", "]", ",", "\n", "self", ".", "ac", ":", "acs", "[", "sli", "(", "i", ")", "]", "}", ")", "for", "i", "in", "range", "(", "n_chunks", ")", "]", "\n", "return", "np", ".", "concatenate", "(", "losses", ",", "0", ")", ",", "None", ",", "None", ",", "None", "\n", "\n", "", "variables_to_run", "=", "[", "self", ".", "loss", ",", "self", ".", "tf_predictions", "]", "\n", "if", "self", ".", "train_discriminator", ":", "\n", "            ", "variables_to_run", ".", "append", "(", "self", ".", "discriminator_predictions", ")", "\n", "", "tf_outputs", "=", "[", "getsess", "(", ")", ".", "run", "(", "variables_to_run", ",", "{", "self", ".", "audio_out_features", ":", "audio_features", "[", "sli", "(", "i", ")", "]", ",", "\n", "self", ".", "obs", ":", "ob", "[", "sli", "(", "i", ")", "]", ",", "self", ".", "last_ob", ":", "last_ob", "[", "sli", "(", "i", ")", "]", ",", "\n", "self", ".", "ac", ":", "acs", "[", "sli", "(", "i", ")", "]", "}", ")", "for", "i", "in", "range", "(", "n_chunks", ")", "]", "\n", "losses", "=", "np", ".", "concatenate", "(", "[", "chunk", "[", "0", "]", "for", "chunk", "in", "tf_outputs", "]", ")", "\n", "predicted_audio_features", "=", "np", ".", "concatenate", "(", "[", "chunk", "[", "1", "]", "for", "chunk", "in", "tf_outputs", "]", ")", "\n", "if", "self", ".", "train_discriminator", ":", "\n", "            ", "discriminator_outputs", "=", "np", ".", "concatenate", "(", "[", "chunk", "[", "2", "]", "for", "chunk", "in", "tf_outputs", "]", ")", "\n", "", "else", ":", "\n", "            ", "discriminator_outputs", "=", "None", "\n", "\n", "", "prediction_audio", "=", "[", "]", "\n", "target_audio", "=", "[", "]", "\n", "for", "step", "in", "range", "(", "audio_features", ".", "shape", "[", "1", "]", ")", ":", "\n", "# Only reconstruct for environment 0", "\n", "            ", "prediction_audio", ".", "extend", "(", "self", ".", "reconstruct_audio", "(", "predicted_audio_features", "[", "0", ",", "step", "]", ")", ")", "\n", "target_audio", ".", "extend", "(", "self", ".", "reconstruct_audio", "(", "audio_features", "[", "0", ",", "step", "]", ")", ")", "\n", "", "prediction_audio", "=", "np", ".", "asarray", "(", "prediction_audio", ")", ".", "astype", "(", "np", ".", "int16", ")", "\n", "target_audio", "=", "np", ".", "asarray", "(", "target_audio", ")", ".", "astype", "(", "np", ".", "int16", ")", "\n", "\n", "# First term is the agent's intrinsic reward; others are used for debug video", "\n", "return", "losses", ",", "prediction_audio", ",", "target_audio", ",", "discriminator_outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.UNet.__init__": [[286, 293], ["isinstance", "intrinsic_model.IntrinsicModel.__init__"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "auxiliary_task", ",", "predict_from_pixels", ",", "feat_dim", "=", "None", ",", "scope", "=", "'pixel_dynamics'", ")", ":", "\n", "        ", "assert", "isinstance", "(", "auxiliary_task", ",", "JustPixels", ")", "\n", "assert", "not", "predict_from_pixels", ",", "\"predict from pixels must be False, it's set up to predict from features that are normalized pixels.\"", "\n", "super", "(", "UNet", ",", "self", ")", ".", "__init__", "(", "auxiliary_task", "=", "auxiliary_task", ",", "\n", "predict_from_pixels", "=", "predict_from_pixels", ",", "\n", "feat_dim", "=", "feat_dim", ",", "\n", "scope", "=", "scope", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.UNet.get_features": [[294, 296], ["None"], "methods", ["None"], ["", "def", "get_features", "(", "self", ",", "x", ",", "reuse", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.UNet.get_loss": [[297, 319], ["tensorflow.one_hot", "tensorflow.shape", "utils.flatten_two_dims", "tensorflow.expand_dims", "tensorflow.reduce_mean", "tensorflow.expand_dims", "tensorflow.variable_scope", "utils.flatten_two_dims", "utils.unet", "utils.unflatten_first_dim", "tensorflow.concat", "utils.unflatten_first_dim.get_shape", "tensorflow.shape", "tensorflow.concat", "tensorflow.stop_gradient", "utils.unflatten_first_dim.get_shape", "tensorflow.zeros", "tensorflow.expand_dims.get_shape"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.flatten_two_dims", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.flatten_two_dims", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.unet", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.unflatten_first_dim"], ["", "def", "get_loss", "(", "self", ")", ":", "\n", "        ", "nl", "=", "tf", ".", "nn", ".", "leaky_relu", "\n", "ac", "=", "tf", ".", "one_hot", "(", "self", ".", "ac", ",", "self", ".", "ac_space", ".", "n", ",", "axis", "=", "2", ")", "\n", "sh", "=", "tf", ".", "shape", "(", "ac", ")", "\n", "ac", "=", "flatten_two_dims", "(", "ac", ")", "\n", "ac_four_dim", "=", "tf", ".", "expand_dims", "(", "tf", ".", "expand_dims", "(", "ac", ",", "1", ")", ",", "1", ")", "\n", "\n", "def", "add_ac", "(", "x", ")", ":", "\n", "            ", "if", "x", ".", "get_shape", "(", ")", ".", "ndims", "==", "2", ":", "\n", "                ", "return", "tf", ".", "concat", "(", "[", "x", ",", "ac", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "elif", "x", ".", "get_shape", "(", ")", ".", "ndims", "==", "4", ":", "\n", "                ", "sh", "=", "tf", ".", "shape", "(", "x", ")", "\n", "return", "tf", ".", "concat", "(", "\n", "[", "x", ",", "ac_four_dim", "+", "tf", ".", "zeros", "(", "[", "sh", "[", "0", "]", ",", "sh", "[", "1", "]", ",", "sh", "[", "2", "]", ",", "ac_four_dim", ".", "get_shape", "(", ")", "[", "3", "]", ".", "value", "]", ",", "tf", ".", "float32", ")", "]", ",", "\n", "axis", "=", "-", "1", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "self", ".", "scope", ")", ":", "\n", "            ", "x", "=", "flatten_two_dims", "(", "self", ".", "features", ")", "\n", "x", "=", "unet", "(", "x", ",", "nl", "=", "nl", ",", "feat_dim", "=", "self", ".", "feat_dim", ",", "cond", "=", "add_ac", ")", "\n", "x", "=", "unflatten_first_dim", "(", "x", ",", "sh", ")", "\n", "", "self", ".", "prediction_pixels", "=", "x", "*", "self", ".", "ob_std", "+", "self", ".", "ob_mean", "\n", "return", "tf", ".", "reduce_mean", "(", "(", "x", "-", "tf", ".", "stop_gradient", "(", "self", ".", "out_features", ")", ")", "**", "2", ",", "[", "2", ",", "3", ",", "4", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.__init__": [[13, 57], ["numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.zeros", "numpy.empty", "numpy.zeros", "rollouts.Rollout.buf_news[].copy", "rollouts.Rollout.buf_vpreds[].copy", "numpy.zeros", "numpy.zeros", "collections.defaultdict", "collections.defaultdict", "recorder.Recorder", "collections.deque", "numpy.clip"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ob_space", ",", "ac_space", ",", "nenvs", ",", "nsteps_per_seg", ",", "nsegs_per_env", ",", "nlumps", ",", "envs", ",", "\n", "policy", ",", "int_rew_coeff", ",", "ext_rew_coeff", ",", "record_rollouts", ",", "intrinsic_model", ",", "log_dir", ")", ":", "\n", "        ", "self", ".", "nenvs", "=", "nenvs", "\n", "self", ".", "nsteps_per_seg", "=", "nsteps_per_seg", "\n", "self", ".", "nsegs_per_env", "=", "nsegs_per_env", "\n", "self", ".", "nsteps", "=", "self", ".", "nsteps_per_seg", "*", "self", ".", "nsegs_per_env", "\n", "self", ".", "ob_space", "=", "ob_space", "\n", "self", ".", "ac_space", "=", "ac_space", "\n", "self", ".", "nlumps", "=", "nlumps", "\n", "self", ".", "lump_stride", "=", "nenvs", "//", "self", ".", "nlumps", "\n", "self", ".", "envs", "=", "envs", "\n", "self", ".", "policy", "=", "policy", "\n", "self", ".", "intrinsic_model", "=", "intrinsic_model", "\n", "self", ".", "log_dir", "=", "log_dir", "\n", "\n", "self", ".", "reward_fun", "=", "lambda", "ext_rew", ",", "int_rew", ":", "ext_rew_coeff", "*", "np", ".", "clip", "(", "ext_rew", ",", "-", "1.", ",", "1.", ")", "+", "int_rew_coeff", "*", "int_rew", "\n", "\n", "self", ".", "buf_vpreds", "=", "np", ".", "empty", "(", "(", "nenvs", ",", "self", ".", "nsteps", ")", ",", "np", ".", "float32", ")", "\n", "self", ".", "buf_nlps", "=", "np", ".", "empty", "(", "(", "nenvs", ",", "self", ".", "nsteps", ")", ",", "np", ".", "float32", ")", "\n", "self", ".", "buf_rews", "=", "np", ".", "empty", "(", "(", "nenvs", ",", "self", ".", "nsteps", ")", ",", "np", ".", "float32", ")", "\n", "self", ".", "buf_int_rews", "=", "np", ".", "empty", "(", "(", "nenvs", ",", "self", ".", "nsteps", ")", ",", "np", ".", "float32", ")", "\n", "self", ".", "buf_ext_rews", "=", "np", ".", "empty", "(", "(", "nenvs", ",", "self", ".", "nsteps", ")", ",", "np", ".", "float32", ")", "\n", "self", ".", "buf_acs", "=", "np", ".", "empty", "(", "(", "nenvs", ",", "self", ".", "nsteps", ",", "*", "self", ".", "ac_space", ".", "shape", ")", ",", "self", ".", "ac_space", ".", "dtype", ")", "\n", "self", ".", "buf_obs", "=", "np", ".", "empty", "(", "(", "nenvs", ",", "self", ".", "nsteps", ",", "*", "self", ".", "ob_space", ".", "shape", ")", ",", "self", ".", "ob_space", ".", "dtype", ")", "\n", "self", ".", "buf_audio", "=", "np", ".", "zeros", "(", "(", "nenvs", ",", "self", ".", "nsteps", "*", "self", ".", "intrinsic_model", ".", "naudio_samples", ",", "2", ")", ")", "\n", "self", ".", "buf_obs_last", "=", "np", ".", "empty", "(", "(", "nenvs", ",", "self", ".", "nsegs_per_env", ",", "*", "self", ".", "ob_space", ".", "shape", ")", ",", "np", ".", "float32", ")", "\n", "\n", "self", ".", "buf_news", "=", "np", ".", "zeros", "(", "(", "nenvs", ",", "self", ".", "nsteps", ")", ",", "np", ".", "float32", ")", "\n", "self", ".", "buf_new_last", "=", "self", ".", "buf_news", "[", ":", ",", "0", ",", "...", "]", ".", "copy", "(", ")", "\n", "self", ".", "buf_vpred_last", "=", "self", ".", "buf_vpreds", "[", ":", ",", "0", ",", "...", "]", ".", "copy", "(", ")", "\n", "\n", "self", ".", "env_results", "=", "[", "None", "]", "*", "self", ".", "nlumps", "\n", "self", ".", "int_rew", "=", "np", ".", "zeros", "(", "(", "nenvs", ",", ")", ",", "np", ".", "float32", ")", "\n", "self", ".", "ac_fractions", "=", "np", ".", "zeros", "(", "(", "nenvs", ")", ",", "np", ".", "float32", ")", "\n", "\n", "self", ".", "recorder", "=", "Recorder", "(", "nenvs", "=", "self", ".", "nenvs", ",", "nlumps", "=", "self", ".", "nlumps", ")", "if", "record_rollouts", "else", "None", "\n", "self", ".", "statlists", "=", "defaultdict", "(", "lambda", ":", "deque", "(", "[", "]", ",", "maxlen", "=", "100", ")", ")", "\n", "self", ".", "stats", "=", "defaultdict", "(", "float", ")", "\n", "self", ".", "best_ext_ret", "=", "None", "\n", "self", ".", "all_visited_rooms", "=", "[", "]", "\n", "self", ".", "all_scores", "=", "[", "]", "\n", "\n", "self", ".", "step_count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.collect_rollout": [[58, 64], ["range", "rollouts.Rollout.calculate_reward", "rollouts.Rollout.update_info", "rollouts.Rollout.rollout_step"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.calculate_reward", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.update_info", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.rollout_step"], ["", "def", "collect_rollout", "(", "self", ",", "n_updates", ")", ":", "\n", "        ", "self", ".", "ep_infos_new", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "self", ".", "nsteps", ")", ":", "\n", "            ", "self", ".", "rollout_step", "(", ")", "\n", "", "self", ".", "calculate_reward", "(", "n_updates", ")", "\n", "self", ".", "update_info", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.calculate_reward": [[65, 81], ["rollouts.Rollout.intrinsic_model.calculate_loss", "rollouts.Rollout.reward_fun", "os.system", "rollouts.Rollout.save_video", "round", "rollouts.Rollout.save_video", "rollouts.Rollout.save_video"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.intrinsic_model.IntrinsicModel.calculate_loss", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.save_video", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.save_video", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.save_video"], ["", "def", "calculate_reward", "(", "self", ",", "n_updates", ")", ":", "\n", "        ", "int_rew", ",", "predicted_audio", ",", "target_audio", ",", "discrim_preds", "=", "self", ".", "intrinsic_model", ".", "calculate_loss", "(", "\n", "ob", "=", "self", ".", "buf_obs", ",", "last_ob", "=", "self", ".", "buf_obs_last", ",", "acs", "=", "self", ".", "buf_acs", ",", "audio", "=", "self", ".", "buf_audio", ")", "\n", "self", ".", "buf_rews", "[", ":", "]", "=", "self", ".", "reward_fun", "(", "int_rew", "=", "int_rew", ",", "ext_rew", "=", "self", ".", "buf_ext_rews", ")", "\n", "# Keep track of intrinsic reward for debugging purposes (used in saved videos, plots)", "\n", "self", ".", "buf_int_rews", "[", ":", "]", "=", "int_rew", "\n", "\n", "# if n_updates is a perfect cube, save a video", "\n", "root", "=", "n_updates", "**", "(", "1", "/", "3", ")", "\n", "if", "n_updates", "==", "0", ":", "\n", "            ", "os", ".", "system", "(", "'mkdir -p '", "+", "self", ".", "log_dir", "+", "'/videos/'", ")", "\n", "", "if", "n_updates", "==", "round", "(", "root", ")", "**", "3", ":", "\n", "            ", "self", ".", "save_video", "(", "n_updates", ",", "discrim_preds", ")", "\n", "if", "predicted_audio", "is", "not", "None", ":", "\n", "                ", "self", ".", "save_video", "(", "n_updates", ",", "discrim_preds", ",", "audio_clip", "=", "predicted_audio", ",", "name", "=", "'_predictions'", ")", "\n", "self", ".", "save_video", "(", "n_updates", ",", "discrim_preds", ",", "audio_clip", "=", "target_audio", ",", "name", "=", "'_targets'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.add_metric_to_frame": [[82, 89], ["str", "cv2.putText", "round", "numpy.max"], "methods", ["None"], ["", "", "", "def", "add_metric_to_frame", "(", "self", ",", "image", ",", "metric", ",", "t", ",", "discriminator", "=", "False", ")", ":", "\n", "        ", "int_rew_str", "=", "str", "(", "round", "(", "metric", "[", "t", "]", ",", "2", ")", ")", "\n", "normalized_reward", "=", "metric", "[", "t", "]", "/", "np", ".", "max", "(", "metric", ")", "\n", "text_color", "=", "(", "0", ",", "255", ",", "255", "*", "(", "1.0", "-", "normalized_reward", ")", ")", "\n", "font", "=", "cv2", ".", "FONT_HERSHEY_SIMPLEX", "\n", "position", "=", "(", "50", ",", "14", ")", "if", "discriminator", "else", "(", "2", ",", "14", ")", "\n", "cv2", ".", "putText", "(", "image", ",", "int_rew_str", ",", "position", ",", "font", ",", "0.4", ",", "text_color", ",", "1", ",", "cv2", ".", "LINE_AA", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.save_video": [[90, 118], ["str", "scipy.write", "cv2.VideoWriter", "range", "cv2.VideoWriter.release", "os.system", "os.system", "os.system", "int", "rollouts.Rollout.buf_audio[].astype", "cv2.VideoWriter_fourcc", "cv2.cvtColor", "rollouts.Rollout.add_metric_to_frame", "cv2.VideoWriter.write", "rollouts.Rollout.add_metric_to_frame", "str"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.add_metric_to_frame", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.add_metric_to_frame"], ["", "def", "save_video", "(", "self", ",", "n_updates", ",", "discrim_preds", ",", "env", "=", "0", ",", "audio_clip", "=", "None", ",", "name", "=", "\"\"", ")", ":", "\n", "        ", "tcount", "=", "str", "(", "int", "(", "n_updates", "*", "self", ".", "nenvs", "*", "self", ".", "nsteps_per_seg", "*", "4", "/", "1000000", ")", ")", "\n", "pathname", "=", "self", ".", "log_dir", "+", "'/videos/'", "+", "str", "(", "n_updates", ")", "+", "'-'", "+", "tcount", "+", "name", "\n", "audio_path", "=", "pathname", "+", "'.wav'", "\n", "out_path", "=", "pathname", "+", "'.mp4'", "\n", "tmp_path", "=", "pathname", "+", "'tmp.mp4'", "\n", "\n", "if", "audio_clip", "is", "None", ":", "\n", "            ", "audio_clip", "=", "self", ".", "buf_audio", "[", "env", "]", ".", "astype", "(", "np", ".", "int16", ")", "\n", "", "frame_rate", "=", "15", "\n", "wv", ".", "write", "(", "audio_path", ",", "self", ".", "intrinsic_model", ".", "naudio_samples", "*", "frame_rate", ",", "audio_clip", ")", "\n", "\n", "video", "=", "cv2", ".", "VideoWriter", "(", "tmp_path", ",", "cv2", ".", "VideoWriter_fourcc", "(", "*", "\"mp4v\"", ")", ",", "frame_rate", ",", "(", "84", ",", "84", ")", ")", "\n", "for", "t", "in", "range", "(", "self", ".", "buf_obs", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "image", "=", "self", ".", "buf_obs", "[", "env", ",", "t", ",", ":", ",", ":", ",", "-", "1", "]", "# Take the latest frame from the stack", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "self", ".", "add_metric_to_frame", "(", "image", ",", "self", ".", "buf_int_rews", "[", "env", "]", ",", "t", ")", "\n", "if", "discrim_preds", "is", "not", "None", ":", "\n", "                ", "self", ".", "add_metric_to_frame", "(", "image", ",", "discrim_preds", "[", "env", "]", ",", "t", ",", "discriminator", "=", "True", ")", "\n", "", "video", ".", "write", "(", "image", ")", "\n", "", "video", ".", "release", "(", ")", "\n", "\n", "# Combine audio and video files", "\n", "cmd", "=", "\"ffmpeg -i \"", "+", "tmp_path", "+", "\" -i \"", "+", "audio_path", "+", "\" -y -c:v copy -c:a aac -strict experimental -hide_banner -loglevel panic \"", "+", "out_path", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "os", ".", "system", "(", "\"rm \"", "+", "audio_path", ")", "\n", "os", ".", "system", "(", "\"rm \"", "+", "tmp_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.rollout_step": [[119, 182], ["range", "rollouts.Rollout.env_get", "slice", "rollouts.Rollout.policy.get_ac_value_nlp", "rollouts.Rollout.env_step", "range", "info.get", "numpy.zeros", "audios.append", "info.get", "info.get", "info.get", "info.get.update", "info.get.update", "rollouts.Rollout.recorder.record", "slice", "rollouts.Rollout.env_get", "numpy.zeros", "action_fractions.append", "action_fractions.append", "rollouts.Rollout.ep_infos_new.append", "rollouts.Rollout.policy.get_ac_value_nlp", "sum", "sum", "info[].values"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.env_get", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cnn_policy.CnnPolicy.get_ac_value_nlp", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.env_step", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.RewardForwardFilter.update", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.RewardForwardFilter.update", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.record", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.env_get", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cnn_policy.CnnPolicy.get_ac_value_nlp"], ["", "def", "rollout_step", "(", "self", ")", ":", "\n", "        ", "t", "=", "self", ".", "step_count", "%", "self", ".", "nsteps", "\n", "s", "=", "t", "%", "self", ".", "nsteps_per_seg", "\n", "for", "l", "in", "range", "(", "self", ".", "nlumps", ")", ":", "\n", "            ", "obs", ",", "prevrews", ",", "news", ",", "infos", "=", "self", ".", "env_get", "(", "l", ")", "\n", "\n", "audios", "=", "[", "]", "\n", "action_fractions", "=", "[", "]", "\n", "for", "info", "in", "infos", ":", "\n", "                ", "audio", "=", "info", ".", "get", "(", "'audio'", ",", "np", ".", "zeros", "(", "(", "self", ".", "intrinsic_model", ".", "naudio_samples", ",", "2", ")", ")", ")", "\n", "padded_audio", "=", "np", ".", "zeros", "(", "(", "self", ".", "intrinsic_model", ".", "naudio_samples", ",", "2", ")", ")", "\n", "padded_audio", "[", ":", "audio", ".", "shape", "[", "0", "]", ",", ":", "audio", ".", "shape", "[", "1", "]", "]", "=", "audio", "\n", "audios", ".", "append", "(", "padded_audio", ")", "\n", "\n", "if", "'actions'", "in", "info", "and", "sum", "(", "info", "[", "'actions'", "]", ")", "!=", "0", ":", "\n", "# Compute fraction of action 0", "\n", "                    ", "fraction", "=", "info", "[", "'actions'", "]", "[", "0", "]", "*", "1.0", "/", "sum", "(", "info", "[", "'actions'", "]", ".", "values", "(", ")", ")", "\n", "action_fractions", ".", "append", "(", "fraction", ")", "\n", "", "else", ":", "\n", "                    ", "action_fractions", ".", "append", "(", "0.0", ")", "\n", "\n", "", "epinfo", "=", "info", ".", "get", "(", "'episode'", ",", "{", "}", ")", "\n", "mzepinfo", "=", "info", ".", "get", "(", "'mz_episode'", ",", "{", "}", ")", "\n", "retroepinfo", "=", "info", ".", "get", "(", "'retro_episode'", ",", "{", "}", ")", "\n", "epinfo", ".", "update", "(", "mzepinfo", ")", "\n", "epinfo", ".", "update", "(", "retroepinfo", ")", "\n", "if", "epinfo", ":", "\n", "                    ", "self", ".", "ep_infos_new", ".", "append", "(", "(", "self", ".", "step_count", ",", "epinfo", ")", ")", "\n", "\n", "", "", "sli", "=", "slice", "(", "l", "*", "self", ".", "lump_stride", ",", "(", "l", "+", "1", ")", "*", "self", ".", "lump_stride", ")", "\n", "\n", "acs", ",", "vpreds", ",", "nlps", "=", "self", ".", "policy", ".", "get_ac_value_nlp", "(", "obs", ")", "\n", "self", ".", "env_step", "(", "l", ",", "acs", ")", "\n", "self", ".", "buf_obs", "[", "sli", ",", "t", "]", "=", "obs", "\n", "self", ".", "buf_news", "[", "sli", ",", "t", "]", "=", "news", "\n", "self", ".", "buf_vpreds", "[", "sli", ",", "t", "]", "=", "vpreds", "\n", "self", ".", "buf_nlps", "[", "sli", ",", "t", "]", "=", "nlps", "\n", "self", ".", "buf_acs", "[", "sli", ",", "t", "]", "=", "acs", "\n", "if", "action_fractions", ":", "\n", "                ", "self", ".", "ac_fractions", "[", "sli", "]", "=", "action_fractions", "\n", "\n", "", "if", "audios", ":", "\n", "                ", "start_index", "=", "(", "t", ")", "*", "self", ".", "intrinsic_model", ".", "naudio_samples", "\n", "end_index", "=", "(", "t", "+", "1", ")", "*", "self", ".", "intrinsic_model", ".", "naudio_samples", "\n", "if", "end_index", "<=", "self", ".", "buf_audio", ".", "shape", "[", "1", "]", ":", "\n", "                    ", "self", ".", "buf_audio", "[", "sli", ",", "start_index", ":", "end_index", "]", "=", "audios", "\n", "\n", "", "", "if", "t", ">", "0", ":", "\n", "                ", "self", ".", "buf_ext_rews", "[", "sli", ",", "t", "-", "1", "]", "=", "prevrews", "\n", "\n", "", "if", "self", ".", "recorder", "is", "not", "None", ":", "\n", "                ", "self", ".", "recorder", ".", "record", "(", "timestep", "=", "self", ".", "step_count", ",", "lump", "=", "l", ",", "acs", "=", "acs", ",", "infos", "=", "infos", ",", "\n", "int_rew", "=", "self", ".", "int_rew", "[", "sli", "]", ",", "ext_rew", "=", "prevrews", ",", "news", "=", "news", ")", "\n", "", "", "self", ".", "step_count", "+=", "1", "\n", "if", "s", "==", "self", ".", "nsteps_per_seg", "-", "1", ":", "\n", "            ", "for", "l", "in", "range", "(", "self", ".", "nlumps", ")", ":", "\n", "                ", "sli", "=", "slice", "(", "l", "*", "self", ".", "lump_stride", ",", "(", "l", "+", "1", ")", "*", "self", ".", "lump_stride", ")", "\n", "nextobs", ",", "ext_rews", ",", "nextnews", ",", "_", "=", "self", ".", "env_get", "(", "l", ")", "\n", "self", ".", "buf_obs_last", "[", "sli", ",", "t", "//", "self", ".", "nsteps_per_seg", "]", "=", "nextobs", "\n", "if", "t", "==", "self", ".", "nsteps", "-", "1", ":", "\n", "                    ", "self", ".", "buf_new_last", "[", "sli", "]", "=", "nextnews", "\n", "self", ".", "buf_ext_rews", "[", "sli", ",", "t", "]", "=", "ext_rews", "\n", "_", ",", "self", ".", "buf_vpred_last", "[", "sli", "]", ",", "_", "=", "self", ".", "policy", ".", "get_ac_value_nlp", "(", "nextobs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.update_info": [[183, 206], ["mpi4py.MPI.COMM_WORLD.allgather", "sorted", "sum", "all_ep_infos[].keys", "rollouts.Rollout.statlists[].extend", "numpy.mean", "rollouts.Rollout.statlists[].extend", "len", "sum", "numpy.max"], "methods", ["None"], ["", "", "", "", "def", "update_info", "(", "self", ")", ":", "\n", "        ", "all_ep_infos", "=", "MPI", ".", "COMM_WORLD", ".", "allgather", "(", "self", ".", "ep_infos_new", ")", "\n", "all_ep_infos", "=", "sorted", "(", "sum", "(", "all_ep_infos", ",", "[", "]", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "0", "]", ")", "\n", "if", "all_ep_infos", ":", "\n", "            ", "all_ep_infos", "=", "[", "i_", "[", "1", "]", "for", "i_", "in", "all_ep_infos", "]", "# remove the step_count", "\n", "keys_", "=", "all_ep_infos", "[", "0", "]", ".", "keys", "(", ")", "\n", "all_ep_infos", "=", "{", "k", ":", "[", "i", "[", "k", "]", "for", "i", "in", "all_ep_infos", "]", "for", "k", "in", "keys_", "}", "\n", "\n", "self", ".", "statlists", "[", "'eprew'", "]", ".", "extend", "(", "all_ep_infos", "[", "'r'", "]", ")", "\n", "self", ".", "stats", "[", "'eprew_recent'", "]", "=", "np", ".", "mean", "(", "all_ep_infos", "[", "'r'", "]", ")", "\n", "self", ".", "statlists", "[", "'eplen'", "]", ".", "extend", "(", "all_ep_infos", "[", "'l'", "]", ")", "\n", "self", ".", "stats", "[", "'epcount'", "]", "+=", "len", "(", "all_ep_infos", "[", "'l'", "]", ")", "\n", "self", ".", "stats", "[", "'tcount'", "]", "+=", "sum", "(", "all_ep_infos", "[", "'l'", "]", ")", "\n", "\n", "current_max", "=", "np", ".", "max", "(", "all_ep_infos", "[", "'r'", "]", ")", "\n", "", "else", ":", "\n", "            ", "current_max", "=", "None", "\n", "", "self", ".", "ep_infos_new", "=", "[", "]", "\n", "\n", "if", "current_max", "is", "not", "None", ":", "\n", "            ", "if", "(", "self", ".", "best_ext_ret", "is", "None", ")", "or", "(", "current_max", ">", "self", ".", "best_ext_ret", ")", ":", "\n", "                ", "self", ".", "best_ext_ret", "=", "current_max", "\n", "", "", "self", ".", "current_max", "=", "current_max", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.env_step": [[207, 210], ["rollouts.Rollout.envs[].step_async"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.step_async"], ["", "def", "env_step", "(", "self", ",", "l", ",", "acs", ")", ":", "\n", "        ", "self", ".", "envs", "[", "l", "]", ".", "step_async", "(", "acs", ")", "\n", "self", ".", "env_results", "[", "l", "]", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.rollouts.Rollout.env_get": [[211, 221], ["rollouts.Rollout.envs[].reset", "numpy.ones", "rollouts.Rollout.envs[].step_wait"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.reset", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.step_wait"], ["", "def", "env_get", "(", "self", ",", "l", ")", ":", "\n", "        ", "if", "self", ".", "step_count", "==", "0", ":", "\n", "            ", "ob", "=", "self", ".", "envs", "[", "l", "]", ".", "reset", "(", ")", "\n", "out", "=", "self", ".", "env_results", "[", "l", "]", "=", "(", "ob", ",", "None", ",", "np", ".", "ones", "(", "self", ".", "lump_stride", ",", "bool", ")", ",", "{", "}", ")", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "env_results", "[", "l", "]", "is", "None", ":", "\n", "                ", "out", "=", "self", ".", "env_results", "[", "l", "]", "=", "self", ".", "envs", "[", "l", "]", ".", "step_wait", "(", ")", "\n", "", "else", ":", "\n", "                ", "out", "=", "self", ".", "env_results", "[", "l", "]", "\n", "", "", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cnn_policy.CnnPolicy.__init__": [[8, 45], ["print", "tensorflow.variable_scope", "baselines.common.distributions.make_pdtype", "tensorflow.placeholder", "cnn_policy.CnnPolicy.ac_pdtype.sample_placeholder", "tensorflow.shape", "utils.flatten_two_dims", "cnn_policy.CnnPolicy.get_features", "utils.unflatten_first_dim", "utils.unflatten_first_dim", "cnn_policy.CnnPolicy.ac_pdtype.pdfromflat", "cnn_policy.CnnPolicy.sample", "cnn_policy.CnnPolicy.entropy", "cnn_policy.CnnPolicy.neglogp", "cnn_policy.CnnPolicy.ac_pdtype.param_shape", "tensorflow.variable_scope", "utils.fc", "utils.fc", "utils.fc", "utils.fc", "utils.unflatten_first_dim"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.flatten_two_dims", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.JustPixels.get_features", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.unflatten_first_dim", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.unflatten_first_dim", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.unflatten_first_dim"], ["    ", "def", "__init__", "(", "self", ",", "ob_space", ",", "ac_space", ",", "hidsize", ",", "\n", "ob_mean", ",", "ob_std", ",", "feat_dim", ",", "layernormalize", ",", "nl", ",", "scope", "=", "\"policy\"", ")", ":", "\n", "        ", "if", "layernormalize", ":", "\n", "            ", "print", "(", "\"Warning: policy is operating on top of layer-normed features. It might slow down the training.\"", ")", "\n", "", "self", ".", "layernormalize", "=", "layernormalize", "\n", "self", ".", "nl", "=", "nl", "\n", "self", ".", "ob_mean", "=", "ob_mean", "\n", "self", ".", "ob_std", "=", "ob_std", "\n", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "            ", "self", ".", "ob_space", "=", "ob_space", "\n", "self", ".", "ac_space", "=", "ac_space", "\n", "self", ".", "ac_pdtype", "=", "make_pdtype", "(", "ac_space", ")", "\n", "self", ".", "ph_ob", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "\n", "shape", "=", "(", "None", ",", "None", ")", "+", "ob_space", ".", "shape", ",", "name", "=", "'ob'", ")", "\n", "self", ".", "ph_ac", "=", "self", ".", "ac_pdtype", ".", "sample_placeholder", "(", "[", "None", ",", "None", "]", ",", "name", "=", "'ac'", ")", "\n", "self", ".", "pd", "=", "self", ".", "vpred", "=", "None", "\n", "self", ".", "hidsize", "=", "hidsize", "\n", "self", ".", "feat_dim", "=", "feat_dim", "\n", "self", ".", "scope", "=", "scope", "\n", "pdparamsize", "=", "self", ".", "ac_pdtype", ".", "param_shape", "(", ")", "[", "0", "]", "\n", "\n", "sh", "=", "tf", ".", "shape", "(", "self", ".", "ph_ob", ")", "\n", "x", "=", "flatten_two_dims", "(", "self", ".", "ph_ob", ")", "\n", "self", ".", "flat_features", "=", "self", ".", "get_features", "(", "x", ",", "reuse", "=", "False", ")", "\n", "self", ".", "features", "=", "unflatten_first_dim", "(", "self", ".", "flat_features", ",", "sh", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "scope", ",", "reuse", "=", "False", ")", ":", "\n", "                ", "x", "=", "fc", "(", "self", ".", "flat_features", ",", "units", "=", "hidsize", ",", "activation", "=", "activ", ")", "\n", "x", "=", "fc", "(", "x", ",", "units", "=", "hidsize", ",", "activation", "=", "activ", ")", "\n", "pdparam", "=", "fc", "(", "x", ",", "name", "=", "'pd'", ",", "units", "=", "pdparamsize", ",", "activation", "=", "None", ")", "\n", "vpred", "=", "fc", "(", "x", ",", "name", "=", "'value_function_output'", ",", "units", "=", "1", ",", "activation", "=", "None", ")", "\n", "", "pdparam", "=", "unflatten_first_dim", "(", "pdparam", ",", "sh", ")", "\n", "self", ".", "vpred", "=", "unflatten_first_dim", "(", "vpred", ",", "sh", ")", "[", ":", ",", ":", ",", "0", "]", "\n", "self", ".", "pd", "=", "pd", "=", "self", ".", "ac_pdtype", ".", "pdfromflat", "(", "pdparam", ")", "\n", "self", ".", "a_samp", "=", "pd", ".", "sample", "(", ")", "\n", "self", ".", "entropy", "=", "pd", ".", "entropy", "(", ")", "\n", "self", ".", "nlp_samp", "=", "pd", ".", "neglogp", "(", "self", ".", "a_samp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cnn_policy.CnnPolicy.get_features": [[46, 59], ["tensorflow.shape", "utils.flatten_two_dims", "tensorflow.variable_scope", "utils.small_convnet", "utils.unflatten_first_dim", "utils.unflatten_first_dim.get_shape", "tensorflow.to_float"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.flatten_two_dims", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.small_convnet", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.unflatten_first_dim"], ["", "", "def", "get_features", "(", "self", ",", "x", ",", "reuse", ")", ":", "\n", "        ", "x_has_timesteps", "=", "(", "x", ".", "get_shape", "(", ")", ".", "ndims", "==", "5", ")", "\n", "if", "x_has_timesteps", ":", "\n", "            ", "sh", "=", "tf", ".", "shape", "(", "x", ")", "\n", "x", "=", "flatten_two_dims", "(", "x", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "self", ".", "scope", "+", "\"_features\"", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "x", "=", "(", "tf", ".", "to_float", "(", "x", ")", "-", "self", ".", "ob_mean", ")", "/", "self", ".", "ob_std", "\n", "x", "=", "small_convnet", "(", "x", ",", "nl", "=", "self", ".", "nl", ",", "feat_dim", "=", "self", ".", "feat_dim", ",", "last_nl", "=", "None", ",", "layernormalize", "=", "self", ".", "layernormalize", ")", "\n", "\n", "", "if", "x_has_timesteps", ":", "\n", "            ", "x", "=", "unflatten_first_dim", "(", "x", ",", "sh", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cnn_policy.CnnPolicy.get_ac_value_nlp": [[60, 65], ["utils.getsess().run", "utils.getsess"], "methods", ["None"], ["", "def", "get_ac_value_nlp", "(", "self", ",", "ob", ")", ":", "\n", "        ", "a", ",", "vpred", ",", "nlp", "=", "getsess", "(", ")", ".", "run", "(", "[", "self", ".", "a_samp", ",", "self", ".", "vpred", ",", "self", ".", "nlp_samp", "]", ",", "\n", "feed_dict", "=", "{", "self", ".", "ph_ob", ":", "ob", "[", ":", ",", "None", "]", "}", ")", "\n", "return", "a", "[", ":", ",", "0", "]", ",", "vpred", "[", ":", ",", "0", "]", ",", "nlp", "[", ":", ",", "0", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.run.Trainer.__init__": [[40, 123], ["run.Trainer._set_env_vars", "cnn_policy.CnnPolicy", "run.Trainer.feature_extractor", "run.Trainer.intrinsic_model", "cppo_agent.PpoOptimizer", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "functools.partial", "functools.partial", "baselines.logger.get_dir", "baselines.logger.get_dir", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.nn.moments"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.run.Trainer._set_env_vars"], ["    ", "def", "__init__", "(", "self", ",", "make_env", ",", "hps", ",", "num_timesteps", ",", "envs_per_process", ")", ":", "\n", "        ", "self", ".", "make_env", "=", "make_env", "\n", "self", ".", "hps", "=", "hps", "\n", "self", ".", "envs_per_process", "=", "envs_per_process", "\n", "self", ".", "num_timesteps", "=", "num_timesteps", "\n", "self", ".", "_set_env_vars", "(", ")", "\n", "\n", "self", ".", "policy", "=", "CnnPolicy", "(", "scope", "=", "'pol'", ",", "\n", "ob_space", "=", "self", ".", "ob_space", ",", "\n", "ac_space", "=", "self", ".", "ac_space", ",", "\n", "hidsize", "=", "512", ",", "\n", "feat_dim", "=", "hps", "[", "'feat_dim'", "]", ",", "\n", "ob_mean", "=", "self", ".", "ob_mean", ",", "\n", "ob_std", "=", "self", ".", "ob_std", ",", "\n", "layernormalize", "=", "False", ",", "\n", "nl", "=", "tf", ".", "nn", ".", "leaky_relu", ")", "\n", "\n", "self", ".", "feature_extractor", "=", "{", "\n", "\"none\"", ":", "FeatureExtractor", ",", "\n", "\"idf\"", ":", "InverseDynamics", ",", "\n", "\"vaesph\"", ":", "partial", "(", "VAE", ",", "spherical_obs", "=", "True", ")", ",", "\n", "\"vaenonsph\"", ":", "partial", "(", "VAE", ",", "spherical_obs", "=", "False", ")", ",", "\n", "\"pix2pix\"", ":", "JustPixels", "\n", "}", "[", "hps", "[", "'feat_learning'", "]", "]", "\n", "self", ".", "feature_extractor", "=", "self", ".", "feature_extractor", "(", "\n", "policy", "=", "self", ".", "policy", ",", "\n", "features_shared_with_policy", "=", "False", ",", "\n", "feat_dim", "=", "hps", "[", "'feat_dim'", "]", ",", "\n", "layernormalize", "=", "hps", "[", "'layernorm'", "]", ")", "\n", "\n", "self", ".", "intrinsic_model", "=", "IntrinsicModel", "if", "hps", "[", "'feat_learning'", "]", "!=", "'pix2pix'", "else", "UNet", "\n", "self", ".", "intrinsic_model", "=", "self", ".", "intrinsic_model", "(", "\n", "auxiliary_task", "=", "self", ".", "feature_extractor", ",", "\n", "predict_from_pixels", "=", "hps", "[", "'dyn_from_pixels'", "]", ",", "\n", "feature_space", "=", "hps", "[", "'feature_space'", "]", ",", "\n", "nsteps_per_seg", "=", "hps", "[", "'nsteps_per_seg'", "]", ",", "\n", "feat_dim", "=", "hps", "[", "'feat_dim'", "]", ",", "\n", "naudio_samples", "=", "hps", "[", "'naudio_samples'", "]", ",", "\n", "train_discriminator", "=", "hps", "[", "'train_discriminator'", "]", ",", "\n", "discriminator_weighted", "=", "hps", "[", "'discriminator_weighted'", "]", ",", "\n", "noise_multiplier", "=", "hps", "[", "'noise_multiplier'", "]", ",", "\n", "concat", "=", "hps", "[", "'concat'", "]", ",", "\n", "log_dir", "=", "logger", ".", "get_dir", "(", ")", ",", "\n", "make_video", "=", "hps", "[", "'checkpoint_path'", "]", "!=", "''", ")", "\n", "\n", "self", ".", "agent", "=", "PpoOptimizer", "(", "scope", "=", "'ppo'", ",", "\n", "ob_space", "=", "self", ".", "ob_space", ",", "\n", "ac_space", "=", "self", ".", "ac_space", ",", "\n", "stochpol", "=", "self", ".", "policy", ",", "\n", "use_news", "=", "hps", "[", "'use_news'", "]", ",", "\n", "gamma", "=", "hps", "[", "'gamma'", "]", ",", "\n", "lam", "=", "hps", "[", "\"lambda\"", "]", ",", "\n", "nepochs", "=", "hps", "[", "'nepochs'", "]", ",", "\n", "nminibatches", "=", "hps", "[", "'nminibatches'", "]", ",", "\n", "lr", "=", "hps", "[", "'lr'", "]", ",", "\n", "cliprange", "=", "0.1", ",", "\n", "nsteps_per_seg", "=", "hps", "[", "'nsteps_per_seg'", "]", ",", "\n", "nsegs_per_env", "=", "hps", "[", "'nsegs_per_env'", "]", ",", "\n", "ent_coef", "=", "hps", "[", "'ent_coeff'", "]", ",", "\n", "normrew", "=", "hps", "[", "'norm_rew'", "]", ",", "\n", "normadv", "=", "hps", "[", "'norm_adv'", "]", ",", "\n", "ext_coeff", "=", "hps", "[", "'ext_coeff'", "]", ",", "\n", "int_coeff", "=", "hps", "[", "'int_coeff'", "]", ",", "\n", "feature_space", "=", "hps", "[", "'feature_space'", "]", ",", "\n", "intrinsic_model", "=", "self", ".", "intrinsic_model", ",", "\n", "log_dir", "=", "logger", ".", "get_dir", "(", ")", ",", "\n", "checkpoint_path", "=", "hps", "[", "'checkpoint_path'", "]", ")", "\n", "\n", "self", ".", "agent", ".", "to_report", "[", "'aux'", "]", "=", "tf", ".", "reduce_mean", "(", "\n", "self", ".", "feature_extractor", ".", "loss", ")", "\n", "self", ".", "agent", ".", "total_loss", "+=", "self", ".", "agent", ".", "to_report", "[", "'aux'", "]", "\n", "if", "hps", "[", "'feature_space'", "]", "==", "'joint'", ":", "\n", "            ", "self", ".", "agent", ".", "to_report", "[", "'dyn_visual_loss'", "]", "=", "tf", ".", "reduce_mean", "(", "self", ".", "intrinsic_model", ".", "visual_loss", ")", "\n", "self", ".", "agent", ".", "to_report", "[", "'dyn_audio_loss'", "]", "=", "tf", ".", "reduce_mean", "(", "self", ".", "intrinsic_model", ".", "audio_loss", ")", "\n", "self", ".", "agent", ".", "to_report", "[", "'discrim_train_loss'", "]", "=", "tf", ".", "reduce_mean", "(", "self", ".", "intrinsic_model", ".", "discrim_train_loss", ")", "\n", "self", ".", "agent", ".", "to_report", "[", "'intrinsic_model_loss'", "]", "=", "tf", ".", "reduce_mean", "(", "self", ".", "intrinsic_model", ".", "loss", ")", "\n", "", "elif", "hps", "[", "'train_discriminator'", "]", ":", "\n", "            ", "self", ".", "agent", ".", "to_report", "[", "'intrinsic_model_loss'", "]", "=", "tf", ".", "reduce_mean", "(", "self", ".", "intrinsic_model", ".", "discrim_train_loss", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "agent", ".", "to_report", "[", "'intrinsic_model_loss'", "]", "=", "tf", ".", "reduce_mean", "(", "self", ".", "intrinsic_model", ".", "loss", ")", "\n", "", "self", ".", "agent", ".", "total_loss", "+=", "self", ".", "agent", ".", "to_report", "[", "'intrinsic_model_loss'", "]", "\n", "self", ".", "agent", ".", "to_report", "[", "'feat_var'", "]", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "nn", ".", "moments", "(", "self", ".", "feature_extractor", ".", "features", ",", "[", "0", ",", "1", "]", ")", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.run.Trainer._set_env_vars": [[124, 132], ["run.Trainer.make_env", "utils.random_agent_ob_mean_std", "functools.partial", "range"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.random_agent_ob_mean_std"], ["", "def", "_set_env_vars", "(", "self", ")", ":", "\n", "        ", "env", "=", "self", ".", "make_env", "(", "0", ",", "add_monitor", "=", "False", ",", "make_video", "=", "False", ")", "\n", "self", ".", "ob_space", ",", "self", ".", "ac_space", "=", "env", ".", "observation_space", ",", "env", ".", "action_space", "\n", "self", ".", "ob_mean", ",", "self", ".", "ob_std", "=", "random_agent_ob_mean_std", "(", "env", ")", "\n", "del", "env", "\n", "self", ".", "envs", "=", "[", "\n", "functools", ".", "partial", "(", "self", ".", "make_env", ",", "i", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "envs_per_process", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.run.Trainer.train": [[134, 150], ["run.Trainer.agent.start_interaction", "utils.getsess", "run.Trainer.agent.stop_interaction", "run.Trainer.agent.step", "baselines.logger.logkvs", "baselines.logger.dumpkvs"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.PpoOptimizer.start_interaction", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.cppo_agent.PpoOptimizer.stop_interaction", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.step"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "agent", ".", "start_interaction", "(", "self", ".", "envs", ",", "\n", "nlump", "=", "self", ".", "hps", "[", "'nlumps'", "]", ",", "\n", "intrinsic_model", "=", "self", ".", "intrinsic_model", ")", "\n", "\n", "sess", "=", "getsess", "(", ")", "\n", "\n", "while", "True", ":", "\n", "            ", "info", "=", "self", ".", "agent", ".", "step", "(", ")", "\n", "if", "info", "[", "'update'", "]", ":", "\n", "                ", "logger", ".", "logkvs", "(", "info", "[", "'update'", "]", ")", "\n", "logger", ".", "dumpkvs", "(", ")", "\n", "", "if", "self", ".", "agent", ".", "rollout", ".", "stats", "[", "'tcount'", "]", ">", "self", ".", "num_timesteps", ":", "\n", "                ", "break", "\n", "\n", "", "", "self", ".", "agent", ".", "stop_interaction", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.run.start_experiment": [[26, 37], ["functools.partial", "run.get_experiment_environment", "run.Trainer", "run.Trainer.train"], "function", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.run.get_experiment_environment", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.run.Trainer.train"], ["def", "start_experiment", "(", "**", "args", ")", ":", "\n", "    ", "make_env", "=", "partial", "(", "make_env_all_params", ",", "add_monitor", "=", "args", "[", "'video_monitor'", "]", ",", "\n", "make_video", "=", "(", "args", "[", "'checkpoint_path'", "]", "!=", "''", ")", ",", "args", "=", "args", ")", "\n", "\n", "log", ",", "tf_sess", "=", "get_experiment_environment", "(", "**", "args", ")", "\n", "with", "log", ",", "tf_sess", ":", "\n", "        ", "trainer", "=", "Trainer", "(", "make_env", "=", "make_env", ",", "\n", "num_timesteps", "=", "args", "[", "'num_timesteps'", "]", ",", "\n", "hps", "=", "args", ",", "\n", "envs_per_process", "=", "args", "[", "'envs_per_process'", "]", ")", "\n", "trainer", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.run.make_env_all_params": [[152, 160], ["wrappers.make_retro", "baselines.bench.Monitor", "os.join", "baselines.logger.get_dir"], "function", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.wrappers.make_retro"], ["", "", "def", "make_env_all_params", "(", "rank", ",", "add_monitor", ",", "make_video", ",", "args", ")", ":", "\n", "    ", "is_baseline", "=", "(", "args", "[", "'feature_space'", "]", "==", "'visual'", ")", "\n", "env", "=", "make_retro", "(", "env_name", "=", "args", "[", "\"env_kind\"", "]", ",", "naudio_samples", "=", "args", "[", "'naudio_samples'", "]", "/", "4", ",", "\n", "sticky_env", "=", "args", "[", "'sticky_env'", "]", ",", "make_video", "=", "make_video", ",", "is_baseline", "=", "is_baseline", ")", "\n", "\n", "if", "add_monitor", ":", "\n", "        ", "env", "=", "Monitor", "(", "env", ",", "osp", ".", "join", "(", "logger", ".", "get_dir", "(", ")", ",", "'%.2i'", "%", "rank", ")", ")", "\n", "", "return", "env", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.run.get_experiment_environment": [[162, 184], ["hash_seed", "set_global_seeds", "setup_mpi_gpus", "datetime.datetime.now().strftime", "baselines.logger.scoped_configure", "setup_tensorflow_session", "mpi4py.MPI.COMM_WORLD.Get_rank", "datetime.datetime.now", "mpi4py.MPI.COMM_WORLD.Get_rank", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.setup_mpi_gpus", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.setup_tensorflow_session"], ["", "def", "get_experiment_environment", "(", "**", "args", ")", ":", "\n", "    ", "from", "utils", "import", "setup_mpi_gpus", ",", "setup_tensorflow_session", "\n", "from", "baselines", ".", "common", "import", "set_global_seeds", "\n", "from", "gym", ".", "utils", ".", "seeding", "import", "hash_seed", "\n", "process_seed", "=", "args", "[", "\"seed\"", "]", "+", "1000", "*", "MPI", ".", "COMM_WORLD", ".", "Get_rank", "(", ")", "\n", "process_seed", "=", "hash_seed", "(", "process_seed", ",", "max_bytes", "=", "4", ")", "\n", "set_global_seeds", "(", "process_seed", ")", "\n", "setup_mpi_gpus", "(", ")", "\n", "\n", "time", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%m-%d-%H-%M-%S\"", ")", "\n", "path_with_args", "=", "'./logs/'", "+", "'_'", ".", "join", "(", "[", "\n", "time", ",", "args", "[", "'exp_name'", "]", ",", "args", "[", "'env_kind'", "]", ",", "args", "[", "'feature_space'", "]", ",", "\n", "str", "(", "args", "[", "'envs_per_process'", "]", ")", ",", "str", "(", "args", "[", "'train_discriminator'", "]", ")", ",", "\n", "str", "(", "args", "[", "'discriminator_weighted'", "]", ")", "\n", "]", ")", "\n", "\n", "format_strs", "=", "[", "'stdout'", ",", "'log'", ",", "'csv'", ",", "'tensorboard'", "\n", "]", "if", "MPI", ".", "COMM_WORLD", ".", "Get_rank", "(", ")", "==", "0", "else", "[", "'log'", "]", "\n", "logger_context", "=", "logger", ".", "scoped_configure", "(", "dir", "=", "path_with_args", ",", "\n", "format_strs", "=", "format_strs", ")", "\n", "tf_context", "=", "setup_tensorflow_session", "(", ")", "\n", "return", "logger_context", ",", "tf_context", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.run.add_environments_params": [[186, 193], ["parser.add_argument", "parser.add_argument", "parser.add_argument"], "function", ["None"], ["", "def", "add_environments_params", "(", "parser", ")", ":", "\n", "    ", "parser", ".", "add_argument", "(", "'--max_episode_steps'", ",", "\n", "help", "=", "'maximum number of timesteps for episode'", ",", "\n", "default", "=", "4500", ",", "\n", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--env_kind'", ",", "type", "=", "str", ",", "default", "=", "\"Breakout\"", ")", "\n", "parser", ".", "add_argument", "(", "'--noop_max'", ",", "type", "=", "int", ",", "default", "=", "30", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.run.add_optimization_params": [[195, 205], ["parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "int"], "function", ["None"], ["", "def", "add_optimization_params", "(", "parser", ")", ":", "\n", "    ", "parser", ".", "add_argument", "(", "'--lambda'", ",", "type", "=", "float", ",", "default", "=", "0.95", ")", "\n", "parser", ".", "add_argument", "(", "'--gamma'", ",", "type", "=", "float", ",", "default", "=", "0.99", ")", "\n", "parser", ".", "add_argument", "(", "'--nminibatches'", ",", "type", "=", "int", ",", "default", "=", "8", ")", "\n", "parser", ".", "add_argument", "(", "'--norm_adv'", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--norm_rew'", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "1e-4", ")", "\n", "parser", ".", "add_argument", "(", "'--ent_coeff'", ",", "type", "=", "float", ",", "default", "=", "0.001", ")", "\n", "parser", ".", "add_argument", "(", "'--nepochs'", ",", "type", "=", "int", ",", "default", "=", "3", ")", "\n", "parser", ".", "add_argument", "(", "'--num_timesteps'", ",", "type", "=", "int", ",", "default", "=", "int", "(", "5e7", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.run.add_rollout_params": [[206, 211], ["parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument"], "function", ["None"], ["", "def", "add_rollout_params", "(", "parser", ")", ":", "\n", "    ", "parser", ".", "add_argument", "(", "'--nsteps_per_seg'", ",", "type", "=", "int", ",", "default", "=", "128", ")", "\n", "parser", ".", "add_argument", "(", "'--nsegs_per_env'", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--envs_per_process'", ",", "type", "=", "int", ",", "default", "=", "128", ")", "\n", "parser", ".", "add_argument", "(", "'--nlumps'", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.FeatureExtractor.__init__": [[7, 37], ["tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.concat", "tensorflow.concat", "auxiliary_tasks.FeatureExtractor.get_loss", "auxiliary_tasks.FeatureExtractor.policy.get_features", "auxiliary_tasks.FeatureExtractor.get_features", "auxiliary_tasks.FeatureExtractor.get_features"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.JustPixels.get_loss", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.JustPixels.get_features", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.JustPixels.get_features", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.JustPixels.get_features"], ["    ", "def", "__init__", "(", "self", ",", "policy", ",", "features_shared_with_policy", ",", "feat_dim", "=", "None", ",", "layernormalize", "=", "None", ",", "\n", "scope", "=", "'feature_extractor'", ")", ":", "\n", "        ", "self", ".", "scope", "=", "scope", "\n", "self", ".", "features_shared_with_policy", "=", "features_shared_with_policy", "\n", "self", ".", "feat_dim", "=", "feat_dim", "\n", "self", ".", "layernormalize", "=", "layernormalize", "\n", "self", ".", "policy", "=", "policy", "\n", "self", ".", "hidsize", "=", "policy", ".", "hidsize", "\n", "self", ".", "ob_space", "=", "policy", ".", "ob_space", "\n", "self", ".", "ac_space", "=", "policy", ".", "ac_space", "\n", "self", ".", "obs", "=", "self", ".", "policy", ".", "ph_ob", "\n", "self", ".", "ob_mean", "=", "self", ".", "policy", ".", "ob_mean", "\n", "self", ".", "ob_std", "=", "self", ".", "policy", ".", "ob_std", "\n", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "            ", "self", ".", "last_ob", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "\n", "shape", "=", "(", "None", ",", "1", ")", "+", "self", ".", "ob_space", ".", "shape", ",", "name", "=", "'last_ob'", ")", "\n", "self", ".", "next_ob", "=", "tf", ".", "concat", "(", "[", "self", ".", "obs", "[", ":", ",", "1", ":", "]", ",", "self", ".", "last_ob", "]", ",", "1", ")", "\n", "\n", "if", "features_shared_with_policy", ":", "\n", "                ", "self", ".", "features", "=", "self", ".", "policy", ".", "features", "\n", "self", ".", "last_features", "=", "self", ".", "policy", ".", "get_features", "(", "self", ".", "last_ob", ",", "reuse", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "features", "=", "self", ".", "get_features", "(", "self", ".", "obs", ",", "reuse", "=", "False", ")", "\n", "self", ".", "last_features", "=", "self", ".", "get_features", "(", "self", ".", "last_ob", ",", "reuse", "=", "True", ")", "\n", "", "self", ".", "next_features", "=", "tf", ".", "concat", "(", "[", "self", ".", "features", "[", ":", ",", "1", ":", "]", ",", "self", ".", "last_features", "]", ",", "1", ")", "\n", "\n", "self", ".", "ac", "=", "self", ".", "policy", ".", "ph_ac", "\n", "self", ".", "scope", "=", "scope", "\n", "\n", "self", ".", "loss", "=", "self", ".", "get_loss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.FeatureExtractor.get_features": [[38, 50], ["tensorflow.shape", "utils.flatten_two_dims", "tensorflow.variable_scope", "utils.small_convnet", "utils.unflatten_first_dim", "utils.unflatten_first_dim.get_shape", "tensorflow.to_float"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.flatten_two_dims", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.small_convnet", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.unflatten_first_dim"], ["", "", "def", "get_features", "(", "self", ",", "x", ",", "reuse", ")", ":", "\n", "        ", "nl", "=", "tf", ".", "nn", ".", "leaky_relu", "\n", "x_has_timesteps", "=", "(", "x", ".", "get_shape", "(", ")", ".", "ndims", "==", "5", ")", "\n", "if", "x_has_timesteps", ":", "\n", "            ", "sh", "=", "tf", ".", "shape", "(", "x", ")", "\n", "x", "=", "flatten_two_dims", "(", "x", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "self", ".", "scope", "+", "\"_features\"", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "x", "=", "(", "tf", ".", "to_float", "(", "x", ")", "-", "self", ".", "ob_mean", ")", "/", "self", ".", "ob_std", "\n", "x", "=", "small_convnet", "(", "x", ",", "nl", "=", "nl", ",", "feat_dim", "=", "self", ".", "feat_dim", ",", "last_nl", "=", "None", ",", "layernormalize", "=", "self", ".", "layernormalize", ")", "\n", "", "if", "x_has_timesteps", ":", "\n", "            ", "x", "=", "unflatten_first_dim", "(", "x", ",", "sh", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.FeatureExtractor.get_loss": [[51, 53], ["tensorflow.zeros"], "methods", ["None"], ["", "def", "get_loss", "(", "self", ")", ":", "\n", "        ", "return", "tf", ".", "zeros", "(", "(", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.InverseDynamics.__init__": [[56, 60], ["auxiliary_tasks.FeatureExtractor.__init__"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "policy", ",", "features_shared_with_policy", ",", "feat_dim", "=", "None", ",", "layernormalize", "=", "None", ")", ":", "\n", "        ", "super", "(", "InverseDynamics", ",", "self", ")", ".", "__init__", "(", "scope", "=", "\"inverse_dynamics\"", ",", "policy", "=", "policy", ",", "\n", "features_shared_with_policy", "=", "features_shared_with_policy", ",", "\n", "feat_dim", "=", "feat_dim", ",", "layernormalize", "=", "layernormalize", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.InverseDynamics.get_loss": [[61, 71], ["tensorflow.variable_scope", "tensorflow.concat", "tensorflow.shape", "utils.flatten_two_dims", "utils.fc", "utils.fc", "utils.unflatten_first_dim", "auxiliary_tasks.InverseDynamics.policy.ac_pdtype.pdfromflat", "auxiliary_tasks.InverseDynamics.neglogp"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.flatten_two_dims", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.unflatten_first_dim"], ["", "def", "get_loss", "(", "self", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "self", ".", "scope", ")", ":", "\n", "            ", "x", "=", "tf", ".", "concat", "(", "[", "self", ".", "features", ",", "self", ".", "next_features", "]", ",", "2", ")", "\n", "sh", "=", "tf", ".", "shape", "(", "x", ")", "\n", "x", "=", "flatten_two_dims", "(", "x", ")", "\n", "x", "=", "fc", "(", "x", ",", "units", "=", "self", ".", "policy", ".", "hidsize", ",", "activation", "=", "activ", ")", "\n", "x", "=", "fc", "(", "x", ",", "units", "=", "self", ".", "ac_space", ".", "n", ",", "activation", "=", "None", ")", "\n", "param", "=", "unflatten_first_dim", "(", "x", ",", "sh", ")", "\n", "idfpd", "=", "self", ".", "policy", ".", "ac_pdtype", ".", "pdfromflat", "(", "param", ")", "\n", "return", "idfpd", ".", "neglogp", "(", "self", ".", "ac", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.VAE.__init__": [[74, 82], ["auxiliary_tasks.FeatureExtractor.__init__", "tensorflow.split", "tensorflow.split"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "policy", ",", "features_shared_with_policy", ",", "feat_dim", "=", "None", ",", "layernormalize", "=", "False", ",", "spherical_obs", "=", "False", ")", ":", "\n", "        ", "assert", "not", "layernormalize", ",", "\"VAE features should already have reasonable size, no need to layer normalize them\"", "\n", "self", ".", "spherical_obs", "=", "spherical_obs", "\n", "super", "(", "VAE", ",", "self", ")", ".", "__init__", "(", "scope", "=", "\"vae\"", ",", "policy", "=", "policy", ",", "\n", "features_shared_with_policy", "=", "features_shared_with_policy", ",", "\n", "feat_dim", "=", "feat_dim", ",", "layernormalize", "=", "False", ")", "\n", "self", ".", "features", "=", "tf", ".", "split", "(", "self", ".", "features", ",", "2", ",", "-", "1", ")", "[", "0", "]", "# use mean only for features exposed to the dynamics", "\n", "self", ".", "next_features", "=", "tf", ".", "split", "(", "self", ".", "next_features", ",", "2", ",", "-", "1", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.VAE.get_features": [[83, 95], ["tensorflow.shape", "utils.flatten_two_dims", "tensorflow.variable_scope", "utils.small_convnet", "utils.unflatten_first_dim", "utils.unflatten_first_dim.get_shape", "tensorflow.to_float"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.flatten_two_dims", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.small_convnet", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.unflatten_first_dim"], ["", "def", "get_features", "(", "self", ",", "x", ",", "reuse", ")", ":", "\n", "        ", "nl", "=", "tf", ".", "nn", ".", "leaky_relu", "\n", "x_has_timesteps", "=", "(", "x", ".", "get_shape", "(", ")", ".", "ndims", "==", "5", ")", "\n", "if", "x_has_timesteps", ":", "\n", "            ", "sh", "=", "tf", ".", "shape", "(", "x", ")", "\n", "x", "=", "flatten_two_dims", "(", "x", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "self", ".", "scope", "+", "\"_features\"", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "x", "=", "(", "tf", ".", "to_float", "(", "x", ")", "-", "self", ".", "ob_mean", ")", "/", "self", ".", "ob_std", "\n", "x", "=", "small_convnet", "(", "x", ",", "nl", "=", "nl", ",", "feat_dim", "=", "2", "*", "self", ".", "feat_dim", ",", "last_nl", "=", "None", ",", "layernormalize", "=", "False", ")", "\n", "", "if", "x_has_timesteps", ":", "\n", "            ", "x", "=", "unflatten_first_dim", "(", "x", ",", "sh", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.VAE.get_loss": [[96, 119], ["tensorflow.variable_scope", "tensorflow.split", "tensorflow.nn.softplus", "tensorflow.distributions.Normal", "tensorflow.shape", "tensorflow.distributions.Normal", "tensorflow.distributions.kl_divergence", "tensorflow.reduce_sum", "tensorflow.distributions.Normal.sample", "auxiliary_tasks.VAE.decoder", "auxiliary_tasks.VAE.add_noise_and_normalize", "auxiliary_tasks.VAE.log_prob", "tensorflow.reduce_sum", "tensorflow.zeros", "tensorflow.ones", "tensorflow.reduce_sum.get_shape", "tensorflow.reduce_sum.get_shape().as_list", "tensorflow.reduce_sum.get_shape"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.VAE.decoder", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.VAE.add_noise_and_normalize"], ["", "def", "get_loss", "(", "self", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "self", ".", "scope", ")", ":", "\n", "            ", "posterior_mean", ",", "posterior_scale", "=", "tf", ".", "split", "(", "self", ".", "features", ",", "2", ",", "-", "1", ")", "\n", "posterior_scale", "=", "tf", ".", "nn", ".", "softplus", "(", "posterior_scale", ")", "\n", "posterior_distribution", "=", "tf", ".", "distributions", ".", "Normal", "(", "loc", "=", "posterior_mean", ",", "scale", "=", "posterior_scale", ")", "\n", "\n", "sh", "=", "tf", ".", "shape", "(", "posterior_mean", ")", "\n", "prior", "=", "tf", ".", "distributions", ".", "Normal", "(", "loc", "=", "tf", ".", "zeros", "(", "sh", ")", ",", "scale", "=", "tf", ".", "ones", "(", "sh", ")", ")", "\n", "\n", "posterior_kl", "=", "tf", ".", "distributions", ".", "kl_divergence", "(", "posterior_distribution", ",", "prior", ")", "\n", "\n", "posterior_kl", "=", "tf", ".", "reduce_sum", "(", "posterior_kl", ",", "[", "-", "1", "]", ")", "\n", "assert", "posterior_kl", ".", "get_shape", "(", ")", ".", "ndims", "==", "2", "\n", "\n", "posterior_sample", "=", "posterior_distribution", ".", "sample", "(", ")", "\n", "reconstruction_distribution", "=", "self", ".", "decoder", "(", "posterior_sample", ")", "\n", "norm_obs", "=", "self", ".", "add_noise_and_normalize", "(", "self", ".", "obs", ")", "\n", "reconstruction_likelihood", "=", "reconstruction_distribution", ".", "log_prob", "(", "norm_obs", ")", "\n", "assert", "reconstruction_likelihood", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "2", ":", "]", "==", "[", "84", ",", "84", ",", "4", "]", "\n", "reconstruction_likelihood", "=", "tf", ".", "reduce_sum", "(", "reconstruction_likelihood", ",", "[", "2", ",", "3", ",", "4", "]", ")", "\n", "\n", "likelihood_lower_bound", "=", "reconstruction_likelihood", "-", "posterior_kl", "\n", "return", "-", "likelihood_lower_bound", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.VAE.add_noise_and_normalize": [[120, 124], ["tensorflow.to_float", "tensorflow.random_uniform", "tensorflow.shape"], "methods", ["None"], ["", "", "def", "add_noise_and_normalize", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "tf", ".", "to_float", "(", "x", ")", "+", "tf", ".", "random_uniform", "(", "shape", "=", "tf", ".", "shape", "(", "x", ")", ",", "minval", "=", "0.", ",", "maxval", "=", "1.", ")", "\n", "x", "=", "(", "x", "-", "self", ".", "ob_mean", ")", "/", "self", ".", "ob_std", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.VAE.decoder": [[125, 146], ["tensorflow.shape", "utils.flatten_two_dims", "tensorflow.variable_scope", "utils.small_deconvnet", "tensorflow.distributions.Normal", "utils.unflatten_first_dim.get_shape", "utils.unflatten_first_dim", "tensorflow.get_variable", "tensorflow.maximum", "tensorflow.nn.softplus", "tensorflow.split", "tensorflow.nn.softplus", "tensorflow.ones_like", "tensorflow.ones_initializer"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.flatten_two_dims", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.small_deconvnet", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.unflatten_first_dim"], ["", "def", "decoder", "(", "self", ",", "z", ")", ":", "\n", "        ", "nl", "=", "tf", ".", "nn", ".", "leaky_relu", "\n", "z_has_timesteps", "=", "(", "z", ".", "get_shape", "(", ")", ".", "ndims", "==", "3", ")", "\n", "if", "z_has_timesteps", ":", "\n", "            ", "sh", "=", "tf", ".", "shape", "(", "z", ")", "\n", "z", "=", "flatten_two_dims", "(", "z", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "self", ".", "scope", "+", "\"decoder\"", ")", ":", "\n", "            ", "z", "=", "small_deconvnet", "(", "z", ",", "nl", "=", "nl", ",", "ch", "=", "4", "if", "self", ".", "spherical_obs", "else", "8", ",", "positional_bias", "=", "True", ")", "\n", "if", "z_has_timesteps", ":", "\n", "                ", "z", "=", "unflatten_first_dim", "(", "z", ",", "sh", ")", "\n", "", "if", "self", ".", "spherical_obs", ":", "\n", "                ", "scale", "=", "tf", ".", "get_variable", "(", "name", "=", "\"scale\"", ",", "shape", "=", "(", ")", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "ones_initializer", "(", ")", ")", "\n", "scale", "=", "tf", ".", "maximum", "(", "scale", ",", "-", "4.", ")", "\n", "scale", "=", "tf", ".", "nn", ".", "softplus", "(", "scale", ")", "\n", "scale", "=", "scale", "*", "tf", ".", "ones_like", "(", "z", ")", "\n", "", "else", ":", "\n", "                ", "z", ",", "scale", "=", "tf", ".", "split", "(", "z", ",", "2", ",", "-", "1", ")", "\n", "scale", "=", "tf", ".", "nn", ".", "softplus", "(", "scale", ")", "\n", "# scale = tf.Print(scale, [scale])", "\n", "", "return", "tf", ".", "distributions", ".", "Normal", "(", "loc", "=", "z", ",", "scale", "=", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.JustPixels.__init__": [[149, 156], ["auxiliary_tasks.FeatureExtractor.__init__"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "policy", ",", "features_shared_with_policy", ",", "feat_dim", "=", "None", ",", "layernormalize", "=", "None", ",", "\n", "scope", "=", "'just_pixels'", ")", ":", "\n", "        ", "assert", "not", "layernormalize", "\n", "assert", "not", "features_shared_with_policy", "\n", "super", "(", "JustPixels", ",", "self", ")", ".", "__init__", "(", "scope", "=", "scope", ",", "policy", "=", "policy", ",", "\n", "features_shared_with_policy", "=", "False", ",", "\n", "feat_dim", "=", "None", ",", "layernormalize", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.JustPixels.get_features": [[157, 161], ["tensorflow.variable_scope", "tensorflow.to_float"], "methods", ["None"], ["", "def", "get_features", "(", "self", ",", "x", ",", "reuse", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "self", ".", "scope", "+", "\"_features\"", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "x", "=", "(", "tf", ".", "to_float", "(", "x", ")", "-", "self", ".", "ob_mean", ")", "/", "self", ".", "ob_std", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.auxiliary_tasks.JustPixels.get_loss": [[162, 164], ["tensorflow.zeros"], "methods", ["None"], ["", "def", "get_loss", "(", "self", ")", ":", "\n", "        ", "return", "tf", ".", "zeros", "(", "(", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.bcast_tf_vars_from_root": [[12, 26], ["mpi4py.MPI.COMM_WORLD.Get_rank", "mpi4py.MPI.COMM_WORLD.bcast", "sess.run", "sess.run", "tensorflow.assign", "mpi4py.MPI.COMM_WORLD.bcast"], "function", ["None"], ["def", "bcast_tf_vars_from_root", "(", "sess", ",", "vars", ")", ":", "\n", "    ", "\"\"\"\n    Send the root node's parameters to every worker.\n\n    Arguments:\n      sess: the TensorFlow session.\n      vars: all parameter variables including optimizer's\n    \"\"\"", "\n", "rank", "=", "MPI", ".", "COMM_WORLD", ".", "Get_rank", "(", ")", "\n", "for", "var", "in", "vars", ":", "\n", "        ", "if", "rank", "==", "0", ":", "\n", "            ", "MPI", ".", "COMM_WORLD", ".", "bcast", "(", "sess", ".", "run", "(", "var", ")", ")", "\n", "", "else", ":", "\n", "            ", "sess", ".", "run", "(", "tf", ".", "assign", "(", "var", ",", "MPI", ".", "COMM_WORLD", ".", "bcast", "(", "None", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.get_mean_and_std": [[28, 44], ["numpy.array", "numpy.zeros", "comm.Allreduce", "numpy.array", "numpy.zeros", "comm.Allreduce", "comm.Get_rank", "comm.Get_size", "numpy.mean", "numpy.mean"], "function", ["None"], ["", "", "", "def", "get_mean_and_std", "(", "array", ")", ":", "\n", "    ", "comm", "=", "MPI", ".", "COMM_WORLD", "\n", "task_id", ",", "num_tasks", "=", "comm", ".", "Get_rank", "(", ")", ",", "comm", ".", "Get_size", "(", ")", "\n", "local_mean", "=", "np", ".", "array", "(", "np", ".", "mean", "(", "array", ")", ")", "\n", "sum_of_means", "=", "np", ".", "zeros", "(", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "comm", ".", "Allreduce", "(", "local_mean", ",", "sum_of_means", ",", "op", "=", "MPI", ".", "SUM", ")", "\n", "mean", "=", "sum_of_means", "/", "num_tasks", "\n", "\n", "n_array", "=", "array", "-", "mean", "\n", "sqs", "=", "n_array", "**", "2", "\n", "local_mean", "=", "np", ".", "array", "(", "np", ".", "mean", "(", "sqs", ")", ")", "\n", "sum_of_means", "=", "np", ".", "zeros", "(", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "comm", ".", "Allreduce", "(", "local_mean", ",", "sum_of_means", ",", "op", "=", "MPI", ".", "SUM", ")", "\n", "var", "=", "sum_of_means", "/", "num_tasks", "\n", "std", "=", "var", "**", "0.5", "\n", "return", "mean", ",", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.guess_available_gpus": [[46, 58], ["os.path.exists", "Exception", "list", "cuda_visible_divices.split.split", "len", "list", "range", "int", "os.listdir", "range"], "function", ["None"], ["", "def", "guess_available_gpus", "(", "n_gpus", "=", "None", ")", ":", "\n", "    ", "if", "n_gpus", "is", "not", "None", ":", "\n", "        ", "return", "list", "(", "range", "(", "n_gpus", ")", ")", "\n", "", "if", "'CUDA_VISIBLE_DEVICES'", "in", "os", ".", "environ", ":", "\n", "        ", "cuda_visible_divices", "=", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "\n", "cuda_visible_divices", "=", "cuda_visible_divices", ".", "split", "(", "','", ")", "\n", "return", "[", "int", "(", "n", ")", "for", "n", "in", "cuda_visible_divices", "]", "\n", "", "nvidia_dir", "=", "'/proc/driver/nvidia/gpus/'", "\n", "if", "os", ".", "path", ".", "exists", "(", "nvidia_dir", ")", ":", "\n", "        ", "n_gpus", "=", "len", "(", "os", ".", "listdir", "(", "nvidia_dir", ")", ")", "\n", "return", "list", "(", "range", "(", "n_gpus", ")", ")", "\n", "", "raise", "Exception", "(", "\"Couldn't guess the available gpus on this machine\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.setup_mpi_gpus": [[60, 71], ["utils.guess_available_gpus", "platform.node", "mpi4py.MPI.COMM_WORLD.allgather", "len", "str", "mpi4py.MPI.COMM_WORLD.Get_rank"], "function", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.guess_available_gpus"], ["", "def", "setup_mpi_gpus", "(", ")", ":", "\n", "    ", "\"\"\"\n    Set CUDA_VISIBLE_DEVICES using MPI.\n    \"\"\"", "\n", "available_gpus", "=", "guess_available_gpus", "(", ")", "\n", "\n", "node_id", "=", "platform", ".", "node", "(", ")", "\n", "nodes_ordered_by_rank", "=", "MPI", ".", "COMM_WORLD", ".", "allgather", "(", "node_id", ")", "\n", "processes_outranked_on_this_node", "=", "[", "n", "for", "n", "in", "nodes_ordered_by_rank", "[", ":", "MPI", ".", "COMM_WORLD", ".", "Get_rank", "(", ")", "]", "if", "n", "==", "node_id", "]", "\n", "local_rank", "=", "len", "(", "processes_outranked_on_this_node", ")", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "str", "(", "available_gpus", "[", "local_rank", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.guess_available_cpus": [[73, 75], ["int", "multiprocessing.cpu_count"], "function", ["None"], ["", "def", "guess_available_cpus", "(", ")", ":", "\n", "    ", "return", "int", "(", "multiprocessing", ".", "cpu_count", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.setup_tensorflow_session": [[77, 85], ["utils.guess_available_cpus", "tensorflow.ConfigProto", "tensorflow.Session"], "function", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.guess_available_cpus"], ["", "def", "setup_tensorflow_session", "(", ")", ":", "\n", "    ", "num_cpu", "=", "guess_available_cpus", "(", ")", "\n", "\n", "tf_config", "=", "tf", ".", "ConfigProto", "(", "\n", "inter_op_parallelism_threads", "=", "num_cpu", ",", "\n", "intra_op_parallelism_threads", "=", "num_cpu", "\n", ")", "\n", "return", "tf", ".", "Session", "(", "config", "=", "tf_config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.random_agent_ob_mean_std": [[87, 105], ["numpy.asarray", "mpi4py.MPI.COMM_WORLD.Bcast", "mpi4py.MPI.COMM_WORLD.Bcast", "env.reset", "mpi4py.MPI.COMM_WORLD.Get_rank", "range", "numpy.mean().astype", "numpy.std().mean().astype", "numpy.empty", "numpy.empty", "env.action_space.sample", "env.step", "obs.append", "env.reset", "numpy.asarray", "numpy.mean", "numpy.std().mean", "numpy.std"], "function", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.reset", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.VecEnv.step", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.vec_env.ShmemVecEnv.reset"], ["", "def", "random_agent_ob_mean_std", "(", "env", ",", "nsteps", "=", "10000", ")", ":", "\n", "    ", "ob", "=", "np", ".", "asarray", "(", "env", ".", "reset", "(", ")", ")", "\n", "if", "MPI", ".", "COMM_WORLD", ".", "Get_rank", "(", ")", "==", "0", ":", "\n", "        ", "obs", "=", "[", "ob", "]", "\n", "for", "_", "in", "range", "(", "nsteps", ")", ":", "\n", "            ", "ac", "=", "env", ".", "action_space", ".", "sample", "(", ")", "\n", "ob", ",", "_", ",", "done", ",", "_", "=", "env", ".", "step", "(", "ac", ")", "\n", "if", "done", ":", "\n", "                ", "ob", "=", "env", ".", "reset", "(", ")", "\n", "", "obs", ".", "append", "(", "np", ".", "asarray", "(", "ob", ")", ")", "\n", "", "mean", "=", "np", ".", "mean", "(", "obs", ",", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "std", "=", "np", ".", "std", "(", "obs", ",", "0", ")", ".", "mean", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "mean", "=", "np", ".", "empty", "(", "shape", "=", "ob", ".", "shape", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "std", "=", "np", ".", "empty", "(", "shape", "=", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "MPI", ".", "COMM_WORLD", ".", "Bcast", "(", "mean", ",", "root", "=", "0", ")", "\n", "MPI", ".", "COMM_WORLD", ".", "Bcast", "(", "std", ",", "root", "=", "0", ")", "\n", "return", "mean", ",", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.layernorm": [[107, 110], ["tensorflow.nn.moments", "tensorflow.sqrt"], "function", ["None"], ["", "def", "layernorm", "(", "x", ")", ":", "\n", "    ", "m", ",", "v", "=", "tf", ".", "nn", ".", "moments", "(", "x", ",", "-", "1", ",", "keep_dims", "=", "True", ")", "\n", "return", "(", "x", "-", "m", ")", "/", "(", "tf", ".", "sqrt", "(", "v", ")", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.flatten_two_dims": [[118, 120], ["tensorflow.reshape", "x.get_shape().as_list", "x.get_shape"], "function", ["None"], ["def", "flatten_two_dims", "(", "x", ")", ":", "\n", "    ", "return", "tf", ".", "reshape", "(", "x", ",", "[", "-", "1", "]", "+", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "2", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.unflatten_first_dim": [[122, 124], ["tensorflow.reshape", "x.get_shape().as_list", "x.get_shape"], "function", ["None"], ["", "def", "unflatten_first_dim", "(", "x", ",", "sh", ")", ":", "\n", "    ", "return", "tf", ".", "reshape", "(", "x", ",", "[", "sh", "[", "0", "]", ",", "sh", "[", "1", "]", "]", "+", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.add_pos_bias": [[126, 131], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.zeros_initializer", "x.get_shape().as_list", "x.get_shape"], "function", ["None"], ["", "def", "add_pos_bias", "(", "x", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name_or_scope", "=", "None", ",", "default_name", "=", "\"pos_bias\"", ")", ":", "\n", "        ", "b", "=", "tf", ".", "get_variable", "(", "name", "=", "\"pos_bias\"", ",", "shape", "=", "[", "1", "]", "+", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "zeros_initializer", "(", ")", ")", "\n", "return", "x", "+", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.small_convnet": [[133, 145], ["bn", "bn", "bn", "tensorflow.reshape", "bn", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "fc", "last_nl", "utils.layernorm", "numpy.prod", "layernorm.get_shape().as_list", "layernorm.get_shape"], "function", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.layernorm"], ["", "", "def", "small_convnet", "(", "x", ",", "nl", ",", "feat_dim", ",", "last_nl", ",", "layernormalize", ",", "batchnorm", "=", "False", ")", ":", "\n", "    ", "bn", "=", "tf", ".", "layers", ".", "batch_normalization", "if", "batchnorm", "else", "lambda", "x", ":", "x", "\n", "x", "=", "bn", "(", "tf", ".", "layers", ".", "conv2d", "(", "x", ",", "filters", "=", "32", ",", "kernel_size", "=", "8", ",", "strides", "=", "(", "4", ",", "4", ")", ",", "activation", "=", "nl", ")", ")", "\n", "x", "=", "bn", "(", "tf", ".", "layers", ".", "conv2d", "(", "x", ",", "filters", "=", "64", ",", "kernel_size", "=", "4", ",", "strides", "=", "(", "2", ",", "2", ")", ",", "activation", "=", "nl", ")", ")", "\n", "x", "=", "bn", "(", "tf", ".", "layers", ".", "conv2d", "(", "x", ",", "filters", "=", "64", ",", "kernel_size", "=", "3", ",", "strides", "=", "(", "1", ",", "1", ")", ",", "activation", "=", "nl", ")", ")", "\n", "x", "=", "tf", ".", "reshape", "(", "x", ",", "(", "-", "1", ",", "np", ".", "prod", "(", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "]", ")", ")", ")", "\n", "x", "=", "bn", "(", "fc", "(", "x", ",", "units", "=", "feat_dim", ",", "activation", "=", "None", ")", ")", "\n", "if", "last_nl", "is", "not", "None", ":", "\n", "        ", "x", "=", "last_nl", "(", "x", ")", "\n", "", "if", "layernormalize", ":", "\n", "        ", "x", "=", "layernorm", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.small_deconvnet": [[147, 162], ["fc", "tensorflow.reshape", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d_transpose", "numpy.prod", "utils.add_pos_bias", "add_pos_bias.get_shape().as_list", "add_pos_bias.get_shape().as_list", "add_pos_bias.get_shape().as_list", "add_pos_bias.get_shape().as_list", "add_pos_bias.get_shape", "add_pos_bias.get_shape", "add_pos_bias.get_shape", "add_pos_bias.get_shape"], "function", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.add_pos_bias"], ["", "def", "small_deconvnet", "(", "z", ",", "nl", ",", "ch", ",", "positional_bias", ")", ":", "\n", "    ", "sh", "=", "(", "8", ",", "8", ",", "64", ")", "\n", "z", "=", "fc", "(", "z", ",", "np", ".", "prod", "(", "sh", ")", ",", "activation", "=", "nl", ")", "\n", "z", "=", "tf", ".", "reshape", "(", "z", ",", "(", "-", "1", ",", "*", "sh", ")", ")", "\n", "z", "=", "tf", ".", "layers", ".", "conv2d_transpose", "(", "z", ",", "128", ",", "kernel_size", "=", "4", ",", "strides", "=", "(", "2", ",", "2", ")", ",", "activation", "=", "nl", ",", "padding", "=", "'same'", ")", "\n", "assert", "z", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "3", "]", "==", "[", "16", ",", "16", "]", "\n", "z", "=", "tf", ".", "layers", ".", "conv2d_transpose", "(", "z", ",", "64", ",", "kernel_size", "=", "8", ",", "strides", "=", "(", "2", ",", "2", ")", ",", "activation", "=", "nl", ",", "padding", "=", "'same'", ")", "\n", "assert", "z", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "3", "]", "==", "[", "32", ",", "32", "]", "\n", "z", "=", "tf", ".", "layers", ".", "conv2d_transpose", "(", "z", ",", "ch", ",", "kernel_size", "=", "8", ",", "strides", "=", "(", "3", ",", "3", ")", ",", "activation", "=", "None", ",", "padding", "=", "'same'", ")", "\n", "assert", "z", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "3", "]", "==", "[", "96", ",", "96", "]", "\n", "z", "=", "z", "[", ":", ",", "6", ":", "-", "6", ",", "6", ":", "-", "6", "]", "\n", "assert", "z", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "3", "]", "==", "[", "84", ",", "84", "]", "\n", "if", "positional_bias", ":", "\n", "        ", "z", "=", "add_pos_bias", "(", "z", ")", "\n", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.unet": [[164, 205], ["tensorflow.pad", "bn", "layers.append", "bn", "layers.append", "bn", "layers.append", "tensorflow.reshape", "fc", "range", "fc", "tensorflow.reshape", "layers.pop", "bn", "layers.pop", "bn", "layers.pop", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "cond", "bn", "tensorflow.layers.dense", "utils.unet.residual"], "function", ["None"], ["", "def", "unet", "(", "x", ",", "nl", ",", "feat_dim", ",", "cond", ",", "batchnorm", "=", "False", ")", ":", "\n", "    ", "bn", "=", "tf", ".", "layers", ".", "batch_normalization", "if", "batchnorm", "else", "lambda", "x", ":", "x", "\n", "layers", "=", "[", "]", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "6", ",", "6", "]", ",", "[", "6", ",", "6", "]", ",", "[", "0", ",", "0", "]", "]", ")", "\n", "x", "=", "bn", "(", "tf", ".", "layers", ".", "conv2d", "(", "cond", "(", "x", ")", ",", "filters", "=", "32", ",", "kernel_size", "=", "8", ",", "strides", "=", "(", "3", ",", "3", ")", ",", "activation", "=", "nl", ",", "padding", "=", "'same'", ")", ")", "\n", "assert", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "3", "]", "==", "[", "32", ",", "32", "]", "\n", "layers", ".", "append", "(", "x", ")", "\n", "x", "=", "bn", "(", "tf", ".", "layers", ".", "conv2d", "(", "cond", "(", "x", ")", ",", "filters", "=", "64", ",", "kernel_size", "=", "8", ",", "strides", "=", "(", "2", ",", "2", ")", ",", "activation", "=", "nl", ",", "padding", "=", "'same'", ")", ")", "\n", "layers", ".", "append", "(", "x", ")", "\n", "assert", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "3", "]", "==", "[", "16", ",", "16", "]", "\n", "x", "=", "bn", "(", "tf", ".", "layers", ".", "conv2d", "(", "cond", "(", "x", ")", ",", "filters", "=", "64", ",", "kernel_size", "=", "4", ",", "strides", "=", "(", "2", ",", "2", ")", ",", "activation", "=", "nl", ",", "padding", "=", "'same'", ")", ")", "\n", "layers", ".", "append", "(", "x", ")", "\n", "assert", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "3", "]", "==", "[", "8", ",", "8", "]", "\n", "\n", "x", "=", "tf", ".", "reshape", "(", "x", ",", "(", "-", "1", ",", "np", ".", "prod", "(", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "]", ")", ")", ")", "\n", "x", "=", "fc", "(", "cond", "(", "x", ")", ",", "units", "=", "feat_dim", ",", "activation", "=", "nl", ")", "\n", "\n", "def", "residual", "(", "x", ")", ":", "\n", "        ", "res", "=", "bn", "(", "tf", ".", "layers", ".", "dense", "(", "cond", "(", "x", ")", ",", "feat_dim", ",", "activation", "=", "tf", ".", "nn", ".", "leaky_relu", ")", ")", "\n", "res", "=", "tf", ".", "layers", ".", "dense", "(", "cond", "(", "res", ")", ",", "feat_dim", ",", "activation", "=", "None", ")", "\n", "return", "x", "+", "res", "\n", "\n", "", "for", "_", "in", "range", "(", "4", ")", ":", "\n", "        ", "x", "=", "residual", "(", "x", ")", "\n", "\n", "", "sh", "=", "(", "8", ",", "8", ",", "64", ")", "\n", "x", "=", "fc", "(", "cond", "(", "x", ")", ",", "np", ".", "prod", "(", "sh", ")", ",", "activation", "=", "nl", ")", "\n", "x", "=", "tf", ".", "reshape", "(", "x", ",", "(", "-", "1", ",", "*", "sh", ")", ")", "\n", "x", "+=", "layers", ".", "pop", "(", ")", "\n", "x", "=", "bn", "(", "tf", ".", "layers", ".", "conv2d_transpose", "(", "cond", "(", "x", ")", ",", "64", ",", "kernel_size", "=", "4", ",", "strides", "=", "(", "2", ",", "2", ")", ",", "activation", "=", "nl", ",", "padding", "=", "'same'", ")", ")", "\n", "assert", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "3", "]", "==", "[", "16", ",", "16", "]", "\n", "x", "+=", "layers", ".", "pop", "(", ")", "\n", "x", "=", "bn", "(", "tf", ".", "layers", ".", "conv2d_transpose", "(", "cond", "(", "x", ")", ",", "32", ",", "kernel_size", "=", "8", ",", "strides", "=", "(", "2", ",", "2", ")", ",", "activation", "=", "nl", ",", "padding", "=", "'same'", ")", ")", "\n", "assert", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "3", "]", "==", "[", "32", ",", "32", "]", "\n", "x", "+=", "layers", ".", "pop", "(", ")", "\n", "x", "=", "tf", ".", "layers", ".", "conv2d_transpose", "(", "cond", "(", "x", ")", ",", "4", ",", "kernel_size", "=", "8", ",", "strides", "=", "(", "3", ",", "3", ")", ",", "activation", "=", "None", ",", "padding", "=", "'same'", ")", "\n", "assert", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "3", "]", "==", "[", "96", ",", "96", "]", "\n", "x", "=", "x", "[", ":", ",", "6", ":", "-", "6", ",", "6", ":", "-", "6", "]", "\n", "assert", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "3", "]", "==", "[", "84", ",", "84", "]", "\n", "assert", "layers", "==", "[", "]", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.utils.tile_images": [[207, 227], ["int", "numpy.concatenate", "len", "len", "max", "numpy.ceil", "numpy.concatenate", "len", "numpy.zeros", "utils.tile_images.row"], "function", ["None"], ["", "def", "tile_images", "(", "array", ",", "n_cols", "=", "None", ",", "max_images", "=", "None", ",", "div", "=", "1", ")", ":", "\n", "    ", "if", "max_images", "is", "not", "None", ":", "\n", "        ", "array", "=", "array", "[", ":", "max_images", "]", "\n", "", "if", "len", "(", "array", ".", "shape", ")", "==", "4", "and", "array", ".", "shape", "[", "3", "]", "==", "1", ":", "\n", "        ", "array", "=", "array", "[", ":", ",", ":", ",", ":", ",", "0", "]", "\n", "", "assert", "len", "(", "array", ".", "shape", ")", "in", "[", "3", ",", "4", "]", ",", "\"wrong number of dimensions - shape {}\"", ".", "format", "(", "array", ".", "shape", ")", "\n", "if", "len", "(", "array", ".", "shape", ")", "==", "4", ":", "\n", "        ", "assert", "array", ".", "shape", "[", "3", "]", "==", "3", ",", "\"wrong number of channels- shape {}\"", ".", "format", "(", "array", ".", "shape", ")", "\n", "", "if", "n_cols", "is", "None", ":", "\n", "        ", "n_cols", "=", "max", "(", "int", "(", "np", ".", "sqrt", "(", "array", ".", "shape", "[", "0", "]", ")", ")", "//", "div", "*", "div", ",", "div", ")", "\n", "", "n_rows", "=", "int", "(", "np", ".", "ceil", "(", "float", "(", "array", ".", "shape", "[", "0", "]", ")", "/", "n_cols", ")", ")", "\n", "\n", "def", "cell", "(", "i", ",", "j", ")", ":", "\n", "        ", "ind", "=", "i", "*", "n_cols", "+", "j", "\n", "return", "array", "[", "ind", "]", "if", "ind", "<", "array", ".", "shape", "[", "0", "]", "else", "np", ".", "zeros", "(", "array", "[", "0", "]", ".", "shape", ")", "\n", "\n", "", "def", "row", "(", "i", ")", ":", "\n", "        ", "return", "np", ".", "concatenate", "(", "[", "cell", "(", "i", ",", "j", ")", "for", "j", "in", "range", "(", "n_cols", ")", "]", ",", "axis", "=", "1", ")", "\n", "\n", "", "return", "np", ".", "concatenate", "(", "[", "row", "(", "i", ")", "for", "i", "in", "range", "(", "n_rows", ")", "]", ",", "axis", "=", "0", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.__init__": [[9, 20], ["recorder.Recorder.get_filename", "mpi4py.MPI.COMM_WORLD.Get_rank", "baselines.logger.info", "range", "range", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.get_filename"], ["    ", "def", "__init__", "(", "self", ",", "nenvs", ",", "nlumps", ")", ":", "\n", "        ", "self", ".", "nenvs", "=", "nenvs", "\n", "self", ".", "nlumps", "=", "nlumps", "\n", "self", ".", "nenvs_per_lump", "=", "nenvs", "//", "nlumps", "\n", "self", ".", "acs", "=", "[", "[", "]", "for", "_", "in", "range", "(", "nenvs", ")", "]", "\n", "self", ".", "int_rews", "=", "[", "[", "]", "for", "_", "in", "range", "(", "nenvs", ")", "]", "\n", "self", ".", "ext_rews", "=", "[", "[", "]", "for", "_", "in", "range", "(", "nenvs", ")", "]", "\n", "self", ".", "ep_infos", "=", "[", "{", "}", "for", "_", "in", "range", "(", "nenvs", ")", "]", "\n", "self", ".", "filenames", "=", "[", "self", ".", "get_filename", "(", "i", ")", "for", "i", "in", "range", "(", "nenvs", ")", "]", "\n", "if", "MPI", ".", "COMM_WORLD", ".", "Get_rank", "(", ")", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\"episode recordings saved to \"", ",", "self", ".", "filenames", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.record": [[21, 42], ["range", "recorder.Recorder.acs[].append", "recorder.Recorder.is_first_episode_step", "recorder.Recorder.int_rews[].append", "recorder.Recorder.ext_rews[].append", "recorder.Recorder.acs[].append", "recorder.Recorder.dump_episode"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.is_first_episode_step", "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.dump_episode"], ["", "", "def", "record", "(", "self", ",", "timestep", ",", "lump", ",", "acs", ",", "infos", ",", "int_rew", ",", "ext_rew", ",", "news", ")", ":", "\n", "        ", "for", "out_index", "in", "range", "(", "self", ".", "nenvs_per_lump", ")", ":", "\n", "            ", "in_index", "=", "out_index", "+", "lump", "*", "self", ".", "nenvs_per_lump", "\n", "if", "timestep", "==", "0", ":", "\n", "                ", "self", ".", "acs", "[", "in_index", "]", ".", "append", "(", "acs", "[", "out_index", "]", ")", "\n", "", "else", ":", "\n", "                ", "if", "self", ".", "is_first_episode_step", "(", "in_index", ")", ":", "\n", "                    ", "try", ":", "\n", "                        ", "self", ".", "ep_infos", "[", "in_index", "]", "[", "'random_state'", "]", "=", "infos", "[", "out_index", "]", "[", "'random_state'", "]", "\n", "", "except", ":", "\n", "                        ", "pass", "\n", "\n", "", "", "self", ".", "int_rews", "[", "in_index", "]", ".", "append", "(", "int_rew", "[", "out_index", "]", ")", "\n", "self", ".", "ext_rews", "[", "in_index", "]", ".", "append", "(", "ext_rew", "[", "out_index", "]", ")", "\n", "\n", "if", "news", "[", "out_index", "]", ":", "\n", "                    ", "self", ".", "ep_infos", "[", "in_index", "]", "[", "'ret'", "]", "=", "infos", "[", "out_index", "]", "[", "'episode'", "]", "[", "'r'", "]", "\n", "self", ".", "ep_infos", "[", "in_index", "]", "[", "'len'", "]", "=", "infos", "[", "out_index", "]", "[", "'episode'", "]", "[", "'l'", "]", "\n", "self", ".", "dump_episode", "(", "in_index", ")", "\n", "\n", "", "self", ".", "acs", "[", "in_index", "]", ".", "append", "(", "acs", "[", "out_index", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.dump_episode": [[43, 55], ["recorder.Recorder.episode_worth_saving", "recorder.Recorder.acs[].clear", "recorder.Recorder.int_rews[].clear", "recorder.Recorder.ext_rews[].clear", "recorder.Recorder.ep_infos[].clear", "open", "pickle.dump"], "methods", ["home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.episode_worth_saving"], ["", "", "", "def", "dump_episode", "(", "self", ",", "i", ")", ":", "\n", "        ", "episode", "=", "{", "'acs'", ":", "self", ".", "acs", "[", "i", "]", ",", "\n", "'int_rew'", ":", "self", ".", "int_rews", "[", "i", "]", ",", "\n", "'info'", ":", "self", ".", "ep_infos", "[", "i", "]", "}", "\n", "filename", "=", "self", ".", "filenames", "[", "i", "]", "\n", "if", "self", ".", "episode_worth_saving", "(", "i", ")", ":", "\n", "            ", "with", "open", "(", "filename", ",", "'ab'", ")", "as", "f", ":", "\n", "                ", "pickle", ".", "dump", "(", "episode", ",", "f", ",", "protocol", "=", "-", "1", ")", "\n", "", "", "self", ".", "acs", "[", "i", "]", ".", "clear", "(", ")", "\n", "self", ".", "int_rews", "[", "i", "]", ".", "clear", "(", ")", "\n", "self", ".", "ext_rews", "[", "i", "]", ".", "clear", "(", ")", "\n", "self", ".", "ep_infos", "[", "i", "]", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.episode_worth_saving": [[56, 58], ["mpi4py.MPI.COMM_WORLD.Get_rank"], "methods", ["None"], ["", "def", "episode_worth_saving", "(", "self", ",", "i", ")", ":", "\n", "        ", "return", "(", "i", "==", "0", "and", "MPI", ".", "COMM_WORLD", ".", "Get_rank", "(", ")", "==", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.is_first_episode_step": [[59, 61], ["len"], "methods", ["None"], ["", "def", "is_first_episode_step", "(", "self", ",", "i", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "int_rews", "[", "i", "]", ")", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.vdean_audio-curiosity.None.recorder.Recorder.get_filename": [[62, 65], ["os.path.join", "baselines.logger.get_dir", "mpi4py.MPI.COMM_WORLD.Get_rank"], "methods", ["None"], ["", "def", "get_filename", "(", "self", ",", "i", ")", ":", "\n", "        ", "filename", "=", "os", ".", "path", ".", "join", "(", "logger", ".", "get_dir", "(", ")", ",", "'env{}_{}.pk'", ".", "format", "(", "MPI", ".", "COMM_WORLD", ".", "Get_rank", "(", ")", ",", "i", ")", ")", "\n", "return", "filename", "\n", "", "", ""]]}