{"home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.None.main.register_args": [[5, 124], ["parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_profile", "parser.Profile", "parser.Profile", "parser.Profile", "parser.Profile", "parser.Profile", "parser.Profile"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_profile"], ["def", "register_args", "(", "parser", ":", "framework", ".", "helpers", ".", "ArgumentParser", ")", ":", "\n", "    ", "parser", ".", "add_argument", "(", "\"-batch_size\"", ",", "default", "=", "128", ")", "\n", "parser", ".", "add_argument", "(", "\"-lr\"", ",", "default", "=", "1e-3", ")", "\n", "parser", ".", "add_argument", "(", "\"-wd\"", ",", "default", "=", "0.0", ")", "\n", "parser", ".", "add_argument", "(", "\"-lr_warmup\"", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\"-test_interval\"", ",", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\"-state_size\"", ",", "default", "=", "128", ")", "\n", "parser", ".", "add_argument", "(", "\"-stop_after\"", ",", "default", "=", "\"None\"", ",", "parser", "=", "parser", ".", "int_or_none_parser", ")", "\n", "parser", ".", "add_argument", "(", "\"-task\"", ",", "default", "=", "\"trafo_scan\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-dropout\"", ",", "default", "=", "0.0", ")", "\n", "parser", ".", "add_argument", "(", "\"-grad_clip\"", ",", "default", "=", "\"1.0\"", ",", "parser", "=", "parser", ".", "float_or_none_parser", ")", "\n", "parser", ".", "add_argument", "(", "\"-scan.train_split\"", ",", "default", "=", "\"simple\"", ",", "parser", "=", "parser", ".", "str_list_parser", ")", "\n", "parser", ".", "add_argument", "(", "\"-scan.length_cutoff\"", ",", "default", "=", "22", ")", "\n", "parser", ".", "add_argument", "(", "\"-layer_sizes\"", ",", "default", "=", "\"800,800,256\"", ",", "parser", "=", "parser", ".", "int_list_parser", ")", "\n", "parser", ".", "add_argument", "(", "\"-transformer.n_heads\"", ",", "default", "=", "4", ")", "\n", "parser", ".", "add_argument", "(", "\"-transformer.variant\"", ",", "default", "=", "\"scaledinit\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-transformer.ff_multiplier\"", ",", "default", "=", "2.0", ")", "\n", "parser", ".", "add_argument", "(", "\"-transformer.encoder_n_layers\"", ",", "default", "=", "3", ")", "\n", "parser", ".", "add_argument", "(", "\"-transformer.decoder_n_layers\"", ",", "default", "=", "\"3\"", ",", "parser", "=", "parser", ".", "int_or_none_parser", ")", "\n", "parser", ".", "add_argument", "(", "\"-transformer.tied_embedding\"", ",", "default", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"-test_batch_size\"", ",", "default", "=", "\"None\"", ",", "parser", "=", "parser", ".", "int_or_none_parser", ")", "\n", "parser", ".", "add_argument", "(", "\"-dm_math.tasks\"", ",", "default", "=", "\"algebra__linear_1d\"", ",", "parser", "=", "parser", ".", "str_list_parser", ")", "\n", "parser", ".", "add_argument", "(", "\"-dm_math.train_splits\"", ",", "default", "=", "\"easy,medium,hard\"", ",", "parser", "=", "parser", ".", "str_list_parser", ")", "\n", "parser", ".", "add_argument", "(", "\"-lr_sched.steps\"", ",", "default", "=", "\"\"", ",", "parser", "=", "parser", ".", "int_list_parser", ")", "\n", "parser", ".", "add_argument", "(", "\"-lr_sched.gamma\"", ",", "default", "=", "0.1", ")", "\n", "parser", ".", "add_argument", "(", "\"-lr_sched.type\"", ",", "default", "=", "\"step\"", ",", "choice", "=", "[", "\"step\"", ",", "\"noam\"", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"-optimizer\"", ",", "default", "=", "\"adam\"", ",", "choice", "=", "[", "\"adam\"", ",", "\"sgd\"", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"-adam.betas\"", ",", "default", "=", "\"0.9,0.999\"", ",", "parser", "=", "parser", ".", "float_list_parser", ")", "\n", "parser", ".", "add_argument", "(", "\"-amp\"", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "\"-cogs.generalization_test_interval\"", ",", "default", "=", "2500", ")", "\n", "parser", ".", "add_argument", "(", "\"-label_smoothing\"", ",", "default", "=", "0.0", ")", "\n", "parser", ".", "add_argument", "(", "\"-pcfg.split\"", ",", "default", "=", "\"simple\"", ",", "choice", "=", "[", "\"simple\"", ",", "\"productivity\"", ",", "\"substitutivity\"", ",", "\n", "\"systematicity\"", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"-cfq.split\"", ",", "default", "=", "\"random\"", ",", "choice", "=", "[", "\"random\"", ",", "\"query_complexity\"", ",", "\"question_complexity\"", ",", "\n", "\"query_pattern\"", ",", "\"question_pattern\"", ",", "\"mcd1\"", ",", "\"mcd2\"", ",", "\n", "\"mcd3\"", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"-max_length_per_batch\"", ",", "default", "=", "\"none\"", ",", "parser", "=", "parser", ".", "int_or_none_parser", ")", "\n", "parser", ".", "add_argument", "(", "\"-log_sample_level_loss\"", ",", "default", "=", "False", ")", "\n", "\n", "parser", ".", "add_profile", "(", "[", "\n", "parser", ".", "Profile", "(", "\"cfq_trafo\"", ",", "{", "\n", "\"task\"", ":", "\"cfq_trafo\"", ",", "\n", "\"transformer.variant\"", ":", "\"noscale\"", ",", "\n", "\"state_size\"", ":", "128", ",", "\n", "\"transformer.n_heads\"", ":", "16", ",", "\n", "\"transformer.ff_multiplier\"", ":", "2", ",", "\n", "\"transformer.encoder_n_layers\"", ":", "2", ",", "\n", "\"transformer.decoder_n_layers\"", ":", "2", ",", "\n", "\"grad_clip\"", ":", "1", ",", "\n", "\"stop_after\"", ":", "50000", ",", "\n", "\"dropout\"", ":", "0.1", ",", "\n", "\"batch_size\"", ":", "512", ",", "\n", "\"lr\"", ":", "1e-4", ",", "\n", "}", ")", ",", "\n", "\n", "parser", ".", "Profile", "(", "\"cfq_universal_trafo\"", ",", "{", "\n", "\"transformer.variant\"", ":", "\"universal_noscale\"", ",", "\n", "\"state_size\"", ":", "256", ",", "\n", "\"transformer.n_heads\"", ":", "4", ",", "\n", "\"transformer.ff_multiplier\"", ":", "2", ",", "\n", "\"transformer.encoder_n_layers\"", ":", "6", ",", "\n", "\"transformer.decoder_n_layers\"", ":", "6", ",", "\n", "}", ",", "include", "=", "\"cfq_trafo\"", ")", ",", "\n", "\n", "parser", ".", "Profile", "(", "\"cogs_trafo_small\"", ",", "{", "\n", "\"task\"", ":", "\"cogs_transformer\"", ",", "\n", "\"state_size\"", ":", "512", ",", "\n", "\"transformer.n_heads\"", ":", "4", ",", "\n", "\"transformer.ff_multiplier\"", ":", "1", ",", "\n", "\"transformer.encoder_n_layers\"", ":", "2", ",", "\n", "\"transformer.decoder_n_layers\"", ":", "2", ",", "\n", "\"grad_clip\"", ":", "\"none\"", ",", "\n", "\"stop_after\"", ":", "50000", ",", "\n", "\"dropout\"", ":", "0.1", ",", "\n", "\"batch_size\"", ":", "128", ",", "\n", "\"lr\"", ":", "2", ",", "\n", "\"lr_sched.type\"", ":", "\"noam\"", ",", "\n", "\"lr_warmup\"", ":", "4000", ",", "\n", "}", ")", ",", "\n", "\n", "parser", ".", "Profile", "(", "\"deepmind_math\"", ",", "{", "\n", "\"task\"", ":", "\"dm_math_transformer\"", ",", "\n", "\"lr\"", ":", "1e-4", ",", "\n", "\"stop_after\"", ":", "50000", ",", "\n", "\"batch_size\"", ":", "256", ",", "\n", "\"mask_loss_weight\"", ":", "0.001", ",", "\n", "\"state_size\"", ":", "512", ",", "\n", "\"transformer.n_heads\"", ":", "8", ",", "\n", "\"transformer.ff_multiplier\"", ":", "4", ",", "\n", "\"transformer.encoder_n_layers\"", ":", "6", ",", "\n", "\"transformer.decoder_n_layers\"", ":", "6", ",", "\n", "\"test_batch_size\"", ":", "1024", ",", "\n", "\"grad_clip\"", ":", "0.1", "\n", "}", ")", ",", "\n", "\n", "parser", ".", "Profile", "(", "\"pcfg_trafo\"", ",", "{", "\n", "\"task\"", ":", "\"pcfg_transformer\"", ",", "\n", "\"state_size\"", ":", "512", ",", "\n", "\"transformer.n_heads\"", ":", "8", ",", "\n", "\"transformer.ff_multiplier\"", ":", "4", ",", "\n", "\"transformer.encoder_n_layers\"", ":", "6", ",", "\n", "\"transformer.decoder_n_layers\"", ":", "6", ",", "\n", "\"lr\"", ":", "1e-3", ",", "\n", "\"grad_clip\"", ":", "\"1\"", ",", "\n", "\"stop_after\"", ":", "1000000", ",", "\n", "\"batch_size\"", ":", "64", "\n", "}", ")", ",", "\n", "\n", "parser", ".", "Profile", "(", "\"trafo_scan\"", ",", "{", "\n", "\"lr\"", ":", "1e-3", ",", "\n", "\"grad_clip\"", ":", "\"5\"", ",", "\n", "\"stop_after\"", ":", "15000", ",", "\n", "\"batch_size\"", ":", "256", ",", "\n", "\"dropout\"", ":", "0.5", ",", "\n", "\"embedding_size\"", ":", "16", ",", "\n", "\"task\"", ":", "\"trafo_scan\"", ",", "\n", "\"state_size\"", ":", "128", ",", "\n", "\"transformer.n_heads\"", ":", "8", ",", "\n", "\"test_batch_size\"", ":", "2048", "\n", "}", ")", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.None.main.main": [[128, 147], ["framework.helpers.TrainingHelper", "task.train", "framework.helpers.TrainingHelper.finish", "constructors.get"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cfq_transformer.CFQTransformer.train", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.finish", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "def", "main", "(", ")", ":", "\n", "    ", "helper", "=", "framework", ".", "helpers", ".", "TrainingHelper", "(", "wandb_project_name", "=", "\"modules\"", ",", "\n", "register_args", "=", "register_args", ",", "extra_dirs", "=", "[", "\"export\"", ",", "\"model_weights\"", "]", ")", "\n", "\n", "def", "invalid_task_error", "(", "_", ")", ":", "\n", "        ", "assert", "False", ",", "f\"Invalid task: {helper.args.task}\"", "\n", "\n", "", "constructors", "=", "{", "\n", "\"pcfg_transformer\"", ":", "tasks", ".", "PCFGTransformer", ",", "\n", "\"cogs_transformer\"", ":", "tasks", ".", "COGSTransformer", ",", "\n", "\"trafo_scan\"", ":", "tasks", ".", "ScanTransformer", ",", "\n", "\"scan_resplit_transformer\"", ":", "tasks", ".", "ScanResplitTransformer", ",", "\n", "\"cfq_trafo\"", ":", "tasks", ".", "CFQTransformer", ",", "\n", "\"dm_math_transformer\"", ":", "tasks", ".", "DMMathTransformer", ",", "\n", "}", "\n", "\n", "task", "=", "constructors", ".", "get", "(", "helper", ".", "args", ".", "task", ",", "invalid_task_error", ")", "(", "helper", ")", "\n", "task", ".", "train", "(", ")", "\n", "helper", ".", "finish", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.None.plot_dataset_stats.get_len": [[59, 88], ["range", "len", "multiprocessing.Queue", "multiprocessing.cpu_count", "len", "ranges.append", "range", "multiprocessing.Queue.put", "multiprocessing.Process", "p.start", "p.join", "multiprocessing.Queue.get", "max", "max", "max", "max"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.start", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["def", "get_len", "(", "ds", ")", ":", "\n", "    ", "nproc", "=", "cpu_count", "(", ")", "*", "2", "\n", "ranges", "=", "[", "]", "\n", "prev", "=", "0", "\n", "step", "=", "len", "(", "ds", ")", "//", "nproc", "\n", "for", "_", "in", "range", "(", "nproc", ")", ":", "\n", "        ", "next", "=", "prev", "+", "step", "\n", "ranges", ".", "append", "(", "[", "prev", ",", "next", "]", ")", "\n", "prev", "=", "next", "\n", "", "ranges", "[", "-", "1", "]", "[", "-", "1", "]", "=", "len", "(", "ds", ")", "\n", "\n", "q", "=", "Queue", "(", ")", "\n", "def", "cnt", "(", "r", ")", ":", "\n", "        ", "mo", "=", "0", "\n", "mi", "=", "0", "\n", "for", "i", "in", "range", "(", "*", "r", ")", ":", "\n", "            ", "mo", "=", "max", "(", "mo", ",", "ds", "[", "i", "]", "[", "\"out_len\"", "]", ")", "\n", "mi", "=", "max", "(", "mi", ",", "ds", "[", "i", "]", "[", "\"in_len\"", "]", ")", "\n", "", "q", ".", "put", "(", "(", "mo", ",", "mi", ")", ")", "\n", "\n", "", "procs", "=", "[", "Process", "(", "target", "=", "cnt", ",", "args", "=", "(", "r", ",", ")", ")", "for", "r", "in", "ranges", "]", "\n", "for", "p", "in", "procs", ":", "\n", "        ", "p", ".", "start", "(", ")", "\n", "\n", "", "for", "p", "in", "procs", ":", "\n", "        ", "p", ".", "join", "(", ")", "\n", "\n", "", "lens", "=", "[", "q", ".", "get", "(", ")", "for", "_", "in", "procs", "]", "\n", "return", "max", "(", "[", "l", "[", "0", "]", "for", "l", "in", "lens", "]", ")", ",", "max", "(", "[", "l", "[", "1", "]", "for", "l", "in", "lens", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.interfaces.model_interface.ModelInterface.create_input": [[7, 9], ["None"], "methods", ["None"], ["    ", "def", "create_input", "(", "self", ",", "data", ":", "Dict", "[", "str", ",", "torch", ".", "Tensor", "]", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.interfaces.model_interface.ModelInterface.decode_outputs": [[10, 12], ["None"], "methods", ["None"], ["", "def", "decode_outputs", "(", "self", ",", "outputs", ":", "Result", ")", "->", "Any", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.interfaces.model_interface.ModelInterface.__call__": [[13, 15], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "data", ":", "Dict", "[", "str", ",", "torch", ".", "Tensor", "]", ")", "->", "Result", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.interfaces.encoder_decoder.EncoderDecoderResult.merge": [[15, 24], ["torch.stack", "torch.stack", "l[].__class__", "len", "sum", "sum", "len", "zip"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "merge", "(", "l", ":", "List", ",", "batch_weights", ":", "Optional", "[", "List", "[", "float", "]", "]", "=", "None", ")", ":", "\n", "        ", "if", "len", "(", "l", ")", "==", "1", ":", "\n", "            ", "return", "l", "[", "0", "]", "\n", "", "batch_weights", "=", "batch_weights", "if", "batch_weights", "is", "not", "None", "else", "[", "1", "]", "*", "len", "(", "l", ")", "\n", "loss", "=", "sum", "(", "[", "r", ".", "loss", "*", "w", "for", "r", ",", "w", "in", "zip", "(", "l", ",", "batch_weights", ")", "]", ")", "/", "sum", "(", "batch_weights", ")", "\n", "out", "=", "torch", ".", "stack", "(", "[", "r", ".", "outputs", "for", "r", "in", "l", "]", ",", "l", "[", "0", "]", ".", "batch_dim", ")", "\n", "lens", "=", "torch", ".", "stack", "(", "[", "r", ".", "out_lengths", "for", "r", "in", "l", "]", ",", "0", ")", "\n", "return", "l", "[", "0", "]", ".", "__class__", "(", "out", ",", "lens", ",", "loss", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.interfaces.result.Result.plot": [[11, 13], ["None"], "methods", ["None"], ["def", "plot", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.interfaces.result.Result.batch_size": [[14, 17], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "batch_size", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "self", ".", "outputs", ".", "shape", "[", "self", ".", "batch_dim", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.interfaces.result.Result.merge": [[18, 26], ["torch.stack", "l[].__class__", "len", "sum", "sum", "len", "zip"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "merge", "(", "l", ":", "List", ",", "batch_weights", ":", "Optional", "[", "List", "[", "float", "]", "]", "=", "None", ")", ":", "\n", "        ", "if", "len", "(", "l", ")", "==", "1", ":", "\n", "            ", "return", "l", "[", "0", "]", "\n", "", "batch_weights", "=", "batch_weights", "if", "batch_weights", "is", "not", "None", "else", "[", "1", "]", "*", "len", "(", "l", ")", "\n", "loss", "=", "sum", "(", "[", "r", ".", "loss", "*", "w", "for", "r", ",", "w", "in", "zip", "(", "l", ",", "batch_weights", ")", "]", ")", "/", "sum", "(", "batch_weights", ")", "\n", "out", "=", "torch", ".", "stack", "(", "[", "r", ".", "outputs", "for", "r", "in", "l", "]", ",", "l", "[", "0", "]", ".", "batch_dim", ")", "\n", "return", "l", "[", "0", "]", ".", "__class__", "(", "out", ",", "loss", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.encoder_decoder_interface.TransformerEncDecInterface.__init__": [[13, 16], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model", ":", "torch", ".", "nn", ".", "Module", ",", "label_smoothing", ":", "float", "=", "0.0", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "label_smoothing", "=", "label_smoothing", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.encoder_decoder_interface.TransformerEncDecInterface.loss": [[17, 22], ["framework.layers.cross_entropy", "framework.layers.cross_entropy.reshape_as", "framework.layers.cross_entropy.sum", "mask.sum"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.layers.cross_entropy_label_smoothing.cross_entropy"], ["", "def", "loss", "(", "self", ",", "outputs", ":", "TransformerResult", ",", "ref", ":", "torch", ".", "Tensor", ",", "mask", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "l", "=", "framework", ".", "layers", ".", "cross_entropy", "(", "outputs", ".", "data", ",", "ref", ",", "reduction", "=", "'none'", ",", "smoothing", "=", "self", ".", "label_smoothing", ")", "\n", "l", "=", "l", ".", "reshape_as", "(", "ref", ")", "*", "mask", "\n", "l", "=", "l", ".", "sum", "(", ")", "/", "mask", ".", "sum", "(", ")", "\n", "return", "l", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.encoder_decoder_interface.TransformerEncDecInterface.decode_outputs": [[23, 25], ["None"], "methods", ["None"], ["", "def", "decode_outputs", "(", "self", ",", "outputs", ":", "EncoderDecoderResult", ")", "->", "Tuple", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ":", "\n", "        ", "return", "outputs", ".", "outputs", ",", "outputs", ".", "out_lengths", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.encoder_decoder_interface.TransformerEncDecInterface.__call__": [[26, 43], ["data[].long", "data[].long", "models.encoder_decoder.add_eos", "models.encoder_decoder.add_eos", "encoder_decoder_interface.TransformerEncDecInterface.model", "encoder_decoder_interface.TransformerEncDecInterface.data.transpose", "encoder_decoder_interface.TransformerEncDecInterface.loss", "encoder_decoder.EncoderDecoderResult", "models.encoder_decoder.add_eos.transpose", "models.encoder_decoder.add_eos.transpose", "encoder_decoder_interface.TransformerEncDecInterface.model.generate_len_mask().transpose", "data[].long.max().item", "encoder_decoder_interface.TransformerEncDecInterface.model.generate_len_mask", "data[].long.max"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.encoder_decoder.add_eos", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.encoder_decoder.add_eos", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TextSequenceTestState.loss", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.generate_len_mask"], ["", "def", "__call__", "(", "self", ",", "data", ":", "Dict", "[", "str", ",", "torch", ".", "Tensor", "]", ",", "train_eos", ":", "bool", "=", "True", ")", "->", "EncoderDecoderResult", ":", "\n", "        ", "in_len", "=", "data", "[", "\"in_len\"", "]", ".", "long", "(", ")", "\n", "out_len", "=", "data", "[", "\"out_len\"", "]", ".", "long", "(", ")", "\n", "in_with_eos", "=", "add_eos", "(", "data", "[", "\"in\"", "]", ",", "data", "[", "\"in_len\"", "]", ",", "self", ".", "model", ".", "encoder_eos", ")", "\n", "out_with_eos", "=", "add_eos", "(", "data", "[", "\"out\"", "]", ",", "data", "[", "\"out_len\"", "]", ",", "self", ".", "model", ".", "decoder_sos_eos", ")", "\n", "in_len", "+=", "1", "\n", "out_len", "+=", "1", "\n", "\n", "res", "=", "self", ".", "model", "(", "in_with_eos", ".", "transpose", "(", "0", ",", "1", ")", ",", "in_len", ",", "out_with_eos", ".", "transpose", "(", "0", ",", "1", ")", ",", "\n", "out_len", ",", "teacher_forcing", "=", "self", ".", "model", ".", "training", ",", "max_len", "=", "out_len", ".", "max", "(", ")", ".", "item", "(", ")", ")", "\n", "\n", "res", ".", "data", "=", "res", ".", "data", ".", "transpose", "(", "0", ",", "1", ")", "\n", "len_mask", "=", "~", "self", ".", "model", ".", "generate_len_mask", "(", "out_with_eos", ".", "shape", "[", "0", "]", ",", "out_len", "if", "train_eos", "else", "(", "out_len", "-", "1", ")", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "loss", "=", "self", ".", "loss", "(", "res", ",", "out_with_eos", ",", "len_mask", ")", "\n", "return", "EncoderDecoderResult", "(", "res", ".", "data", ",", "res", ".", "length", ",", "loss", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.universal_relative_transformer.UniversalRelativeTransformer.__init__": [[8, 15], ["transformer.Transformer.__init__", "universal_transformer.UniversalTransformerEncoderWithLayer", "universal_transformer.UniversalTransformerDecoderWithLayer"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.universal_transformer.UniversalTransformerEncoderWithLayer", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.universal_transformer.UniversalTransformerDecoderWithLayer"], ["    ", "def", "__init__", "(", "self", ",", "d_model", ":", "int", "=", "512", ",", "nhead", ":", "int", "=", "8", ",", "num_encoder_layers", ":", "int", "=", "6", ",", "\n", "num_decoder_layers", ":", "int", "=", "6", ",", "dim_feedforward", ":", "int", "=", "2048", ",", "dropout", ":", "float", "=", "0.1", ",", "\n", "activation", ":", "ActivationFunction", "=", "F", ".", "relu", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "d_model", ",", "nhead", ",", "num_encoder_layers", ",", "num_decoder_layers", ",", "dim_feedforward", ",", "dropout", ",", "activation", ",", "\n", "UniversalTransformerEncoderWithLayer", "(", "RelativeTransformerEncoderLayer", ")", ",", "\n", "UniversalTransformerDecoderWithLayer", "(", "RelativeTransformerDecoderLayer", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.relative_transformer.RelativeTransformerEncoderLayer.__init__": [[13, 27], ["super().__init__", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "relative_transformer.RelativeTransformerEncoderLayer.reset_parameters"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "d_model", ",", "nhead", ",", "dim_feedforward", "=", "2048", ",", "dropout", "=", "0.1", ",", "activation", ":", "ActivationFunction", "=", "F", ".", "relu", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "self_attn", "=", "FixedRelativeMultiheadAttention", "(", "d_model", ",", "nhead", ",", "dropout", "=", "dropout", ")", "\n", "self", ".", "linear1", "=", "torch", ".", "nn", ".", "Linear", "(", "d_model", ",", "dim_feedforward", ")", "\n", "self", ".", "dropout", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "linear2", "=", "torch", ".", "nn", ".", "Linear", "(", "dim_feedforward", ",", "d_model", ")", "\n", "\n", "self", ".", "norm1", "=", "torch", ".", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "norm2", "=", "torch", ".", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "dropout1", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "dropout2", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n", "self", ".", "activation", "=", "activation", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.relative_transformer.RelativeTransformerEncoderLayer.forward": [[28, 36], ["relative_transformer.RelativeTransformerEncoderLayer.self_attn", "relative_transformer.RelativeTransformerEncoderLayer.norm1", "relative_transformer.RelativeTransformerEncoderLayer.linear2", "relative_transformer.RelativeTransformerEncoderLayer.norm2", "multi_head_relative_pos_attention.AttentionMask", "relative_transformer.RelativeTransformerEncoderLayer.dropout1", "relative_transformer.RelativeTransformerEncoderLayer.dropout", "relative_transformer.RelativeTransformerEncoderLayer.dropout2", "relative_transformer.RelativeTransformerEncoderLayer.activation", "relative_transformer.RelativeTransformerEncoderLayer.linear1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "src", ":", "torch", ".", "Tensor", ",", "mask", ":", "Optional", "[", "torch", ".", "Tensor", "]", "=", "None", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "src2", "=", "self", ".", "self_attn", "(", "src", ",", "src", ",", "AttentionMask", "(", "mask", ",", "None", ")", ")", "\n", "src", "=", "src", "+", "self", ".", "dropout1", "(", "src2", ")", "\n", "src", "=", "self", ".", "norm1", "(", "src", ")", "\n", "src2", "=", "self", ".", "linear2", "(", "self", ".", "dropout", "(", "self", ".", "activation", "(", "self", ".", "linear1", "(", "src", ")", ")", ")", ")", "\n", "src", "=", "src", "+", "self", ".", "dropout2", "(", "src2", ")", "\n", "src", "=", "self", ".", "norm2", "(", "src", ")", "\n", "return", "src", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.relative_transformer.RelativeTransformerEncoderLayer.reset_parameters": [[37, 41], ["torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "linear1", ".", "weight", ",", "gain", "=", "torch", ".", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", "\n", "if", "self", ".", "activation", "is", "F", ".", "relu", "else", "1.0", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "linear2", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.relative_transformer.RelativeTransformerDecoderLayer.__init__": [[44, 63], ["super().__init__", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention", "multi_head_attention.MultiHeadAttention", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "relative_transformer.RelativeTransformerDecoderLayer.reset_parameters"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "d_model", ",", "nhead", ",", "dim_feedforward", "=", "2048", ",", "dropout", "=", "0.1", ",", "activation", ":", "ActivationFunction", "=", "F", ".", "relu", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "self_attn", "=", "FixedRelativeMultiheadAttention", "(", "d_model", ",", "nhead", ",", "dropout", "=", "dropout", ")", "\n", "self", ".", "multihead_attn", "=", "MultiHeadAttention", "(", "d_model", ",", "nhead", ",", "dropout", "=", "dropout", ")", "\n", "# Implementation of Feedforward model", "\n", "self", ".", "linear1", "=", "torch", ".", "nn", ".", "Linear", "(", "d_model", ",", "dim_feedforward", ")", "\n", "self", ".", "dropout", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "linear2", "=", "torch", ".", "nn", ".", "Linear", "(", "dim_feedforward", ",", "d_model", ")", "\n", "\n", "self", ".", "norm1", "=", "torch", ".", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "norm2", "=", "torch", ".", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "norm3", "=", "torch", ".", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "dropout1", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "dropout2", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "dropout3", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n", "self", ".", "activation", "=", "activation", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.relative_transformer.RelativeTransformerDecoderLayer.forward": [[64, 79], ["relative_transformer.RelativeTransformerDecoderLayer.self_attn", "relative_transformer.RelativeTransformerDecoderLayer.norm1", "relative_transformer.RelativeTransformerDecoderLayer.multihead_attn", "relative_transformer.RelativeTransformerDecoderLayer.norm2", "relative_transformer.RelativeTransformerDecoderLayer.linear2", "relative_transformer.RelativeTransformerDecoderLayer.norm3", "relative_transformer.RelativeTransformerDecoderLayer.dropout1", "relative_transformer.RelativeTransformerDecoderLayer.dropout2", "relative_transformer.RelativeTransformerDecoderLayer.dropout", "relative_transformer.RelativeTransformerDecoderLayer.dropout3", "multi_head_relative_pos_attention.AttentionMask", "multi_head_relative_pos_attention.AttentionMask", "relative_transformer.RelativeTransformerDecoderLayer.activation", "relative_transformer.RelativeTransformerDecoderLayer.linear1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "tgt", ":", "torch", ".", "Tensor", ",", "memory", ":", "torch", ".", "Tensor", ",", "tgt_mask", ":", "Optional", "[", "torch", ".", "Tensor", "]", "=", "None", ",", "\n", "memory_key_padding_mask", ":", "Optional", "[", "torch", ".", "Tensor", "]", "=", "None", ",", "\n", "full_target", ":", "Optional", "[", "torch", ".", "Tensor", "]", "=", "None", ",", "pos_offset", ":", "int", "=", "0", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "assert", "pos_offset", "==", "0", "or", "tgt_mask", "is", "None", "\n", "tgt2", "=", "self", ".", "self_attn", "(", "tgt", ",", "tgt", "if", "full_target", "is", "None", "else", "full_target", ",", "mask", "=", "AttentionMask", "(", "None", ",", "tgt_mask", ")", ",", "\n", "pos_offset", "=", "pos_offset", ")", "\n", "tgt", "=", "tgt", "+", "self", ".", "dropout1", "(", "tgt2", ")", "\n", "tgt", "=", "self", ".", "norm1", "(", "tgt", ")", "\n", "tgt2", "=", "self", ".", "multihead_attn", "(", "tgt", ",", "memory", ",", "mask", "=", "AttentionMask", "(", "memory_key_padding_mask", ",", "None", ")", ")", "\n", "tgt", "=", "tgt", "+", "self", ".", "dropout2", "(", "tgt2", ")", "\n", "tgt", "=", "self", ".", "norm2", "(", "tgt", ")", "\n", "tgt2", "=", "self", ".", "linear2", "(", "self", ".", "dropout", "(", "self", ".", "activation", "(", "self", ".", "linear1", "(", "tgt", ")", ")", ")", ")", "\n", "tgt", "=", "tgt", "+", "self", ".", "dropout3", "(", "tgt2", ")", "\n", "tgt", "=", "self", ".", "norm3", "(", "tgt", ")", "\n", "return", "tgt", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.relative_transformer.RelativeTransformerDecoderLayer.reset_parameters": [[80, 84], ["torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "linear1", ".", "weight", ",", "gain", "=", "torch", ".", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", "\n", "if", "self", ".", "activation", "is", "F", ".", "relu", "else", "1.0", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "linear2", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.relative_transformer.RelativeTransformer.__init__": [[87, 94], ["transformer.Transformer.__init__", "transformer.TransformerEncoderWithLayer", "transformer.TransformerDecoderWithLayer"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerEncoderWithLayer", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerDecoderWithLayer"], ["    ", "def", "__init__", "(", "self", ",", "d_model", ":", "int", "=", "512", ",", "nhead", ":", "int", "=", "8", ",", "num_encoder_layers", ":", "int", "=", "6", ",", "\n", "num_decoder_layers", ":", "int", "=", "6", ",", "dim_feedforward", ":", "int", "=", "2048", ",", "dropout", ":", "float", "=", "0.1", ",", "\n", "activation", ":", "ActivationFunction", "=", "F", ".", "relu", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "d_model", ",", "nhead", ",", "num_encoder_layers", ",", "num_decoder_layers", ",", "dim_feedforward", ",", "dropout", ",", "activation", ",", "\n", "TransformerEncoderWithLayer", "(", "RelativeTransformerEncoderLayer", ")", ",", "\n", "TransformerDecoderWithLayer", "(", "RelativeTransformerDecoderLayer", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase.__init__": [[16, 26], ["super().__init__", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "math.sqrt"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["    ", "def", "__init__", "(", "self", ",", "state_size", ":", "int", ",", "n_heads", ":", "int", ",", "dropout", ":", "float", "=", "0.1", ")", ":", "\n", "        ", "assert", "state_size", "%", "n_heads", "==", "0", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "state_size", "=", "state_size", "\n", "self", ".", "projection_size", "=", "state_size", "//", "n_heads", "\n", "self", ".", "n_heads", "=", "n_heads", "\n", "self", ".", "scale", "=", "1.0", "/", "math", ".", "sqrt", "(", "self", ".", "projection_size", ")", "\n", "\n", "self", ".", "dropout", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "multi_head_merge", "=", "torch", ".", "nn", ".", "Linear", "(", "n_heads", "*", "self", ".", "projection_size", ",", "state_size", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase._masked_softmax": [[27, 44], ["logits.masked_fill.masked_fill.view", "torch.softmax", "torch.softmax", "torch.softmax", "logits.masked_fill.masked_fill.view", "torch.softmax", "torch.softmax", "torch.softmax", "logits.masked_fill.masked_fill.masked_fill", "logits.masked_fill.masked_fill.masked_fill", "mask.position_mask.unsqueeze().unsqueeze", "float", "mask.src_length_mask.unsqueeze().unsqueeze", "float", "mask.position_mask.unsqueeze", "mask.src_length_mask.unsqueeze"], "methods", ["None"], ["", "def", "_masked_softmax", "(", "self", ",", "logits", ":", "torch", ".", "Tensor", ",", "mask", ":", "Optional", "[", "AttentionMask", "]", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "if", "mask", "is", "None", "or", "(", "mask", ".", "src_length_mask", "is", "None", "and", "mask", ".", "position_mask", "is", "None", ")", ":", "\n", "            ", "return", "F", ".", "softmax", "(", "logits", ",", "-", "1", ")", "\n", "\n", "# Output shape: [n_batch * n_heads, n_time_dest, n_time_src]", "\n", "", "bb", ",", "n_time_dest", ",", "n_time_src", "=", "logits", ".", "shape", "\n", "\n", "logits", "=", "logits", ".", "view", "(", "bb", "//", "self", ".", "n_heads", ",", "self", ".", "n_heads", ",", "n_time_dest", ",", "n_time_src", ")", "\n", "\n", "if", "mask", ".", "position_mask", "is", "not", "None", ":", "\n", "            ", "logits", "=", "logits", ".", "masked_fill", "(", "mask", ".", "position_mask", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", ",", "float", "(", "\"-inf\"", ")", ")", "\n", "\n", "", "if", "mask", ".", "src_length_mask", "is", "not", "None", ":", "\n", "            ", "logits", "=", "logits", ".", "masked_fill", "(", "mask", ".", "src_length_mask", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", ",", "float", "(", "\"-inf\"", ")", ")", "\n", "\n", "", "logits", "=", "F", ".", "softmax", "(", "logits", ",", "-", "1", ")", "\n", "return", "logits", ".", "view", "(", "bb", ",", "n_time_dest", ",", "n_time_src", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase._attention_read": [[45, 54], ["multi_head_attention.MultiHeadAttentionBase._masked_softmax", "multi_head_attention.MultiHeadAttentionBase.dropout", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "multi_head_attention.MultiHeadAttentionBase.view"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase._masked_softmax"], ["", "def", "_attention_read", "(", "self", ",", "mask", ":", "Optional", "[", "AttentionMask", "]", ",", "logits", ":", "torch", ".", "Tensor", ",", "v", ":", "torch", ".", "Tensor", ")", "->", "Tuple", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ":", "\n", "# logits: [n_batch * n_heads, n_out, n_in]", "\n", "# v: [n_nbatch * n_heads, n_in]", "\n", "# Output data shape [n_batch * n_heads, n_time_dest, data_size]", "\n", "# Out attention score shape: [n_batch, n_heads, n_time_dest, n_time_src]", "\n", "        ", "scores", "=", "self", ".", "_masked_softmax", "(", "logits", "*", "self", ".", "scale", ",", "mask", ")", "\n", "scores", "=", "self", ".", "dropout", "(", "scores", ")", "\n", "return", "torch", ".", "bmm", "(", "scores", ",", "v", ")", ",", "scores", ".", "view", "(", "-", "1", ",", "self", ".", "n_heads", ",", "*", "scores", ".", "shape", "[", "1", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase.merged_attention": [[55, 64], ["multi_head_attention.MultiHeadAttentionBase._attention", "data.view().permute().contiguous().view.view().permute().contiguous().view.view().permute().contiguous().view", "multi_head_attention.MultiHeadAttentionBase.multi_head_merge", "data.view().permute().contiguous().view.view().permute().contiguous().view.view().permute().contiguous", "data.view().permute().contiguous().view.view().permute().contiguous().view.view().permute", "data.view().permute().contiguous().view.view().permute().contiguous().view.view"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.RelativeAttentionBase._attention"], ["", "def", "merged_attention", "(", "self", ",", "n_batch", ":", "int", ",", "n_out_steps", ":", "int", ",", "*", "args", ",", "need_weights", ":", "bool", "=", "False", ",", "**", "kwargs", ")", "->", "Union", "[", "torch", ".", "Tensor", ",", "Tuple", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", "]", ":", "\n", "\n", "        ", "data", ",", "scores", "=", "self", ".", "_attention", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "data", "=", "data", ".", "view", "(", "n_batch", ",", "self", ".", "n_heads", ",", "n_out_steps", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "n_batch", ",", "n_out_steps", ",", "-", "1", ")", "\n", "\n", "return", "self", ".", "multi_head_merge", "(", "data", ")", ",", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase.transform_data": [[65, 73], ["proj().view().permute().contiguous().view", "proj().view().permute().contiguous().view.unbind", "proj().view().permute().contiguous", "proj().view().permute", "proj().view", "proj"], "methods", ["None"], ["", "def", "transform_data", "(", "self", ",", "input", ":", "torch", ".", "Tensor", ",", "proj", ":", "Callable", "[", "[", "torch", ".", "Tensor", "]", ",", "torch", ".", "Tensor", "]", ",", "\n", "n_projs", ":", "int", ")", "->", "List", "[", "torch", ".", "Tensor", "]", ":", "\n", "# Input shape: [n_batch, n_steps, n_channels]", "\n", "# Output: Tuple of n_projs tensors of dimension: [n_batch * n_heads, n_steps, projection_size]", "\n", "        ", "n_batch", ",", "n_steps", ",", "_", "=", "input", ".", "shape", "\n", "transformed", "=", "proj", "(", "input", ")", ".", "view", "(", "n_batch", ",", "n_steps", ",", "self", ".", "n_heads", ",", "n_projs", ",", "self", ".", "projection_size", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ".", "contiguous", "(", ")", ".", "view", "(", "n_batch", "*", "self", ".", "n_heads", ",", "n_steps", ",", "n_projs", ",", "self", ".", "projection_size", ")", "\n", "return", "transformed", ".", "unbind", "(", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase.reset_parameters": [[74, 76], ["torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "multi_head_merge", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.AbsPosAttentionBase._attention": [[79, 84], ["multi_head_attention.AbsPosAttentionBase._attention_read", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "k.transpose"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase._attention_read"], ["    ", "def", "_attention", "(", "self", ",", "mask", ":", "Optional", "[", "torch", ".", "Tensor", "]", ",", "q", ":", "torch", ".", "Tensor", ",", "k", ":", "torch", ".", "Tensor", ",", "v", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "# all inputs should have a shape of [n_batch, n_steps, data_size]", "\n", "# Output shape [n_batch * n_heads, n_time_dest, data_size]", "\n", "        ", "return", "self", ".", "_attention_read", "(", "mask", ",", "torch", ".", "bmm", "(", "q", ",", "k", ".", "transpose", "(", "1", ",", "2", ")", ")", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttention.__init__": [[87, 93], ["multi_head_attention.MultiHeadAttentionBase.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "multi_head_attention.MultiHeadAttention.reset_parameters"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "state_size", ":", "int", ",", "n_heads", ":", "int", ",", "dropout", ":", "float", "=", "0.1", ",", "input_size", ":", "Optional", "[", "torch", ".", "Tensor", "]", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "state_size", ",", "n_heads", ",", "dropout", ")", "\n", "self", ".", "data_to_kv", "=", "torch", ".", "nn", ".", "Linear", "(", "state_size", ",", "2", "*", "n_heads", "*", "self", ".", "projection_size", ",", "bias", "=", "False", ")", "\n", "self", ".", "data_to_q", "=", "torch", ".", "nn", ".", "Linear", "(", "state_size", "if", "input_size", "is", "None", "else", "input_size", ",", "\n", "n_heads", "*", "self", ".", "projection_size", ",", "bias", "=", "False", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttention.forward": [[94, 106], ["multi_head_attention.MultiHeadAttention.transform_data", "multi_head_attention.MultiHeadAttention.transform_data", "multi_head_attention.MultiHeadAttention.merged_attention", "scores.mean"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase.transform_data", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase.transform_data", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase.merged_attention"], ["", "def", "forward", "(", "self", ",", "curr_state", ":", "torch", ".", "Tensor", ",", "attend_to", ":", "torch", ".", "Tensor", ",", "mask", ":", "Optional", "[", "AttentionMask", "]", ",", "\n", "need_weights", ":", "bool", "=", "False", ")", ":", "\n", "# Input and output shape: [n_batch, n_steps, data_size]", "\n", "        ", "k", ",", "v", "=", "self", ".", "transform_data", "(", "attend_to", ",", "self", ".", "data_to_kv", ",", "2", ")", "\n", "q", ",", "=", "self", ".", "transform_data", "(", "curr_state", ",", "self", ".", "data_to_q", ",", "1", ")", "\n", "\n", "data", ",", "scores", "=", "self", ".", "merged_attention", "(", "curr_state", ".", "shape", "[", "0", "]", ",", "q", ".", "shape", "[", "1", "]", ",", "mask", ",", "q", ",", "k", ",", "v", ")", "\n", "if", "need_weights", ":", "\n", "# Calculate the mean over the heads", "\n", "            ", "return", "data", ",", "scores", ".", "mean", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttention.reset_parameters": [[107, 113], ["multi_head_attention.MultiHeadAttentionBase.reset_parameters", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.reset_parameters"], ["", "", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "reset_parameters", "(", ")", "\n", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "data_to_q", ".", "weight", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "data_to_kv", ".", "weight", "[", ":", "self", ".", "data_to_kv", ".", "weight", ".", "shape", "[", "0", "]", "//", "2", "]", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "data_to_kv", ".", "weight", "[", "self", ".", "data_to_kv", ".", "weight", ".", "shape", "[", "0", "]", "//", "2", ":", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.universal_transformer.UniversalTransformerEncoder.__init__": [[9, 13], ["super().__init__", "layer"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layer", ",", "depth", ":", "int", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer", "=", "layer", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "layers", "=", "[", "self", ".", "layer", "]", "*", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.universal_transformer.UniversalTransformerEncoder.forward": [[14, 18], ["l"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data", ":", "torch", ".", "Tensor", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "for", "l", "in", "self", ".", "layers", ":", "\n", "            ", "data", "=", "l", "(", "data", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.universal_transformer.UniversalTransformerDecoder.__init__": [[21, 25], ["transformer.TransformerDecoderBase.__init__", "layer"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layer", ",", "depth", ":", "int", ",", "d_model", ":", "int", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "d_model", ")", "\n", "self", ".", "layer", "=", "layer", "(", "d_model", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "layers", "=", "[", "self", ".", "layer", "]", "*", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.universal_transformer.UniversalTransformerDecoder.forward": [[26, 30], ["l"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data", ":", "torch", ".", "Tensor", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "for", "l", "in", "self", ".", "layers", ":", "\n", "            ", "data", "=", "l", "(", "data", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.universal_transformer.UniversalTransformer.__init__": [[41, 48], ["transformer.Transformer.__init__", "universal_transformer.UniversalTransformerEncoderWithLayer", "universal_transformer.UniversalTransformerDecoderWithLayer"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.universal_transformer.UniversalTransformerEncoderWithLayer", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.universal_transformer.UniversalTransformerDecoderWithLayer"], ["    ", "def", "__init__", "(", "self", ",", "d_model", ":", "int", "=", "512", ",", "nhead", ":", "int", "=", "8", ",", "num_encoder_layers", ":", "int", "=", "6", ",", "\n", "num_decoder_layers", ":", "int", "=", "6", ",", "dim_feedforward", ":", "int", "=", "2048", ",", "dropout", ":", "float", "=", "0.1", ",", "\n", "activation", ":", "ActivationFunction", "=", "F", ".", "relu", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "d_model", ",", "nhead", ",", "num_encoder_layers", ",", "num_decoder_layers", ",", "dim_feedforward", ",", "dropout", ",", "activation", ",", "\n", "UniversalTransformerEncoderWithLayer", "(", ")", ",", "\n", "UniversalTransformerDecoderWithLayer", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.universal_transformer.UniversalTransformerEncoderWithLayer": [[32, 34], ["universal_transformer.UniversalTransformerEncoder"], "function", ["None"], ["", "", "def", "UniversalTransformerEncoderWithLayer", "(", "layer", "=", "TransformerEncoderLayer", ")", ":", "\n", "    ", "return", "lambda", "*", "args", ",", "**", "kwargs", ":", "UniversalTransformerEncoder", "(", "layer", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.universal_transformer.UniversalTransformerDecoderWithLayer": [[36, 38], ["universal_transformer.UniversalTransformerDecoder"], "function", ["None"], ["", "def", "UniversalTransformerDecoderWithLayer", "(", "layer", "=", "TransformerDecoderLayer", ")", ":", "\n", "    ", "return", "lambda", "*", "args", ",", "**", "kwargs", ":", "UniversalTransformerDecoder", "(", "layer", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.RelativeAttentionBase.__init__": [[11, 13], ["multi_head_attention.MultiHeadAttentionBase.__init__"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["    ", "def", "__init__", "(", "self", ",", "state_size", ":", "int", ",", "n_heads", ":", "int", ",", "dropout", ":", "float", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "state_size", ",", "n_heads", ",", "dropout", "=", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.RelativeAttentionBase._shift": [[14, 22], ["torch.pad().flatten", "torch.pad().flatten", "torch.pad().flatten", "p.narrow().view_as.narrow().view_as.narrow().view_as", "p.narrow().view_as.narrow().view_as.narrow", "torch.pad", "torch.pad", "torch.pad", "p.narrow().view_as.narrow().view_as.narrow"], "methods", ["None"], ["", "def", "_shift", "(", "self", ",", "posmat", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "# Slice out a matrix diagonally. Each successive row is sliced one position to the left compared.", "\n", "# shape: [n_batch, n_head, n_out, n_in * 2 - 1]", "\n", "# return: [n_batch, n_head, n_out, n_in]", "\n", "        ", "p", "=", "F", ".", "pad", "(", "posmat", ",", "(", "0", ",", "1", ",", "0", ",", "1", ")", ")", ".", "flatten", "(", "-", "2", ")", "# [n_batch, n_head, (n_out + 1) * n_in * 2]", "\n", "p", "=", "p", ".", "narrow", "(", "-", "1", ",", "posmat", ".", "shape", "[", "-", "1", "]", "//", "2", ",", "posmat", ".", "shape", "[", "-", "1", "]", "*", "posmat", ".", "shape", "[", "-", "2", "]", ")", ".", "view_as", "(", "posmat", ")", "\n", "\n", "return", "p", ".", "narrow", "(", "-", "1", ",", "0", ",", "(", "posmat", ".", "shape", "[", "-", "1", "]", "+", "1", ")", "//", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.RelativeAttentionBase._attention": [[23, 44], ["torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "multi_head_relative_pos_attention.RelativeAttentionBase._shift().flatten", "multi_head_relative_pos_attention.RelativeAttentionBase._attention_read", "k_content.transpose", "q_pos.view", "k_pos.transpose", "multi_head_relative_pos_attention.RelativeAttentionBase._shift"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase._attention_read", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.RelativeAttentionBase._shift"], ["", "def", "_attention", "(", "self", ",", "mask", ":", "Optional", "[", "torch", ".", "Tensor", "]", ",", "\n", "q_content", ":", "torch", ".", "Tensor", ",", "k_content", ":", "torch", ".", "Tensor", ",", "\n", "q_pos", ":", "torch", ".", "Tensor", ",", "k_pos", ":", "torch", ".", "Tensor", ",", "\n", "v", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "\n", "# shape of q_content, q_pos, k_pos: [n_batch * n_heads, n_steps, data_size]", "\n", "# k_pos: [n_heads, n_in * 2 - 1, data_size]", "\n", "# Output shape [n_batch * n_heads, n_out, data_size]", "\n", "\n", "        ", "n_batch", "=", "q_content", ".", "shape", "[", "0", "]", "//", "self", ".", "n_heads", "\n", "n_out_steps", "=", "q_content", ".", "shape", "[", "1", "]", "\n", "\n", "# content-content addressing", "\n", "content", "=", "torch", ".", "bmm", "(", "q_content", ",", "k_content", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "\n", "# content-pos addressing.", "\n", "pos", "=", "torch", ".", "matmul", "(", "q_pos", ".", "view", "(", "n_batch", ",", "self", ".", "n_heads", ",", "n_out_steps", ",", "-", "1", ")", ",", "k_pos", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", ")", "# [n_batch, n_head, n_out, n_in * 2 - 1]", "\n", "pos", "=", "self", ".", "_shift", "(", "pos", ")", ".", "flatten", "(", "0", ",", "1", ")", "\n", "\n", "# Logits shape: [n_batch * n_heads, n_out, n_in]", "\n", "return", "self", ".", "_attention_read", "(", "mask", ",", "content", "+", "pos", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.RelativeAttentionBase._get_pos_subset": [[45, 49], ["pos_encoding.narrow"], "methods", ["None"], ["", "def", "_get_pos_subset", "(", "self", ",", "pos_encoding", ":", "torch", ".", "Tensor", ",", "length", ":", "int", ",", "offset", ":", "int", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "l_slice", "=", "2", "*", "length", "-", "1", "\n", "assert", "pos_encoding", ".", "shape", "[", "0", "]", ">", "l_slice", "\n", "return", "pos_encoding", ".", "narrow", "(", "0", ",", "pos_encoding", ".", "shape", "[", "0", "]", "//", "2", "-", "length", "+", "1", "-", "offset", ",", "2", "*", "length", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.__init__": [[52, 67], ["multi_head_relative_pos_attention.RelativeAttentionBase.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.register_buffer", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention._create_buffer", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.FixedRelativeMultiheadAttention._create_buffer"], ["    ", "def", "__init__", "(", "self", ",", "state_size", ":", "int", ",", "n_heads", ":", "int", ",", "dropout", ":", "float", "=", "0.0", ",", "global_pos_bias", ":", "bool", "=", "True", ",", "\n", "global_content_bias", ":", "bool", "=", "True", ",", "input_size", ":", "Optional", "[", "int", "]", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "state_size", ",", "n_heads", ",", "dropout", ")", "\n", "\n", "self", ".", "data_to_kv", "=", "torch", ".", "nn", ".", "Linear", "(", "state_size", ",", "2", "*", "n_heads", "*", "self", ".", "projection_size", ",", "bias", "=", "False", ")", "\n", "self", ".", "data_to_q", "=", "torch", ".", "nn", ".", "Linear", "(", "state_size", "if", "input_size", "is", "None", "else", "input_size", ",", "\n", "n_heads", "*", "self", ".", "projection_size", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "global_content_bias", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "[", "n_heads", ",", "self", ".", "projection_size", "]", ")", ")", "if", "global_content_bias", "else", "None", "\n", "self", ".", "global_pos_bias", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "[", "n_heads", ",", "self", ".", "projection_size", "]", ")", ")", "if", "global_pos_bias", "else", "None", "\n", "\n", "self", ".", "pos_to_pq", "=", "torch", ".", "nn", ".", "Linear", "(", "state_size", ",", "self", ".", "n_heads", "*", "self", ".", "projection_size", ",", "bias", "=", "False", ")", "\n", "self", ".", "register_buffer", "(", "\"pos_encoding\"", ",", "self", ".", "_create_buffer", "(", "1000", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.FixedRelativeMultiheadAttention._create_buffer": [[68, 71], ["framework.layers.sinusoidal_pos_embedding"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.layers.positional_encoding.sinusoidal_pos_embedding"], ["", "def", "_create_buffer", "(", "self", ",", "max_len", ":", "int", ")", ":", "\n", "        ", "return", "framework", ".", "layers", ".", "sinusoidal_pos_embedding", "(", "self", ".", "state_size", ",", "2", "*", "max_len", "-", "1", ",", "-", "max_len", "+", "1", ",", "\n", "device", "=", "self", ".", "data_to_q", ".", "weight", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.get_pos": [[72, 77], ["multi_head_relative_pos_attention.FixedRelativeMultiheadAttention._get_pos_subset", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention._create_buffer", "int", "math.ceil", "math.log2"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.RelativeAttentionBase._get_pos_subset", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.FixedRelativeMultiheadAttention._create_buffer"], ["", "def", "get_pos", "(", "self", ",", "l", ":", "int", ",", "offset", ":", "int", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "if", "self", ".", "pos_encoding", ".", "shape", "[", "0", "]", "<", "2", "*", "(", "l", "+", "offset", ")", "-", "1", ":", "\n", "            ", "self", ".", "pos_encoding", "=", "self", ".", "_create_buffer", "(", "int", "(", "2", "**", "math", ".", "ceil", "(", "math", ".", "log2", "(", "2", "*", "(", "l", "+", "offset", ")", "-", "1", ")", ")", ")", ")", "\n", "\n", "", "return", "self", ".", "_get_pos_subset", "(", "self", ".", "pos_encoding", ",", "l", ",", "offset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.add_head_specific_bias": [[78, 83], ["data.view", "bias.unsqueeze().type_as", "bias.unsqueeze"], "methods", ["None"], ["", "def", "add_head_specific_bias", "(", "self", ",", "data", ":", "torch", ".", "Tensor", ",", "bias", ":", "Optional", "[", "torch", ".", "Tensor", "]", ")", "->", "torch", ".", "Tensor", ":", "\n", "# data [batch * n_heads, len, c]", "\n", "# bias [n_heads, c]", "\n", "        ", "return", "(", "data", ".", "view", "(", "-", "1", ",", "bias", ".", "shape", "[", "0", "]", ",", "*", "data", ".", "shape", "[", "1", ":", "]", ")", "+", "bias", ".", "unsqueeze", "(", "1", ")", ".", "type_as", "(", "data", ")", ")", ".", "view_as", "(", "data", ")", "if", "bias", "is", "not", "None", "else", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.forward": [[84, 108], ["multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.transform_data", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.transform_data", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.pos_to_pq().view().transpose", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.add_head_specific_bias", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.add_head_specific_bias", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.merged_attention", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.pos_to_pq().view", "scores.mean", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.pos_to_pq", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.get_pos"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase.transform_data", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase.transform_data", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.add_head_specific_bias", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.add_head_specific_bias", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_attention.MultiHeadAttentionBase.merged_attention", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.get_pos"], ["", "def", "forward", "(", "self", ",", "curr_state", ":", "torch", ".", "Tensor", ",", "attend_to", ":", "torch", ".", "Tensor", ",", "mask", ":", "Optional", "[", "AttentionMask", "]", ",", "\n", "pos_offset", ":", "int", "=", "0", ",", "need_weights", ":", "bool", "=", "False", ")", ":", "\n", "# curr_state: [batch_size, out_len, c]", "\n", "# attend_to: [batch_size, in_len, c]", "\n", "        ", "batch_size", ",", "in_len", "=", "attend_to", ".", "shape", "[", "0", ":", "2", "]", "\n", "out_len", "=", "curr_state", ".", "shape", "[", "1", "]", "\n", "\n", "k_content", ",", "v", "=", "self", ".", "transform_data", "(", "attend_to", ",", "self", ".", "data_to_kv", ",", "2", ")", "\n", "q", ",", "=", "self", ".", "transform_data", "(", "curr_state", ",", "self", ".", "data_to_q", ",", "1", ")", "\n", "\n", "k_pos", "=", "self", ".", "pos_to_pq", "(", "self", ".", "get_pos", "(", "in_len", ",", "pos_offset", ")", ")", ".", "view", "(", "-", "1", ",", "self", ".", "n_heads", ",", "self", ".", "projection_size", ")", ".", "transpose", "(", "0", ",", "1", ")", "# n_heads, 2*in_len -1 , projection_size", "\n", "\n", "q_content", "=", "self", ".", "add_head_specific_bias", "(", "q", ",", "self", ".", "global_content_bias", ")", "\n", "q_pos", "=", "self", ".", "add_head_specific_bias", "(", "q", ",", "self", ".", "global_pos_bias", ")", "\n", "\n", "data", ",", "scores", "=", "self", ".", "merged_attention", "(", "batch_size", ",", "out_len", ",", "mask", ",", "q_content", ",", "k_content", ",", "q_pos", ",", "k_pos", ",", "v", ",", "\n", "need_weights", "=", "need_weights", ")", "\n", "\n", "if", "need_weights", ":", "\n", "# Calculate the mean over the heads", "\n", "            ", "return", "data", ",", "scores", ".", "mean", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.reset_parameters": [[109, 122], ["super().reset_parameters", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.global_content_bias.fill_", "multi_head_relative_pos_attention.FixedRelativeMultiheadAttention.global_pos_bias.fill_"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.reset_parameters"], ["", "", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "reset_parameters", "(", ")", "\n", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "data_to_q", ".", "weight", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "pos_to_pq", ".", "weight", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "data_to_kv", ".", "weight", "[", ":", "self", ".", "data_to_kv", ".", "weight", ".", "shape", "[", "0", "]", "//", "2", "]", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "data_to_kv", ".", "weight", "[", "self", ".", "data_to_kv", ".", "weight", ".", "shape", "[", "0", "]", "//", "2", ":", "]", ")", "\n", "\n", "if", "self", ".", "global_content_bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "global_content_bias", ".", "fill_", "(", "0", ")", "\n", "\n", "", "if", "self", ".", "global_pos_bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "global_pos_bias", ".", "fill_", "(", "0", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerEncoderLayer.__init__": [[13, 27], ["super().__init__", "multi_head_attention.MultiHeadAttention", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "transformer.TransformerEncoderLayer.reset_parameters"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "d_model", ",", "nhead", ",", "dim_feedforward", "=", "2048", ",", "dropout", "=", "0.1", ",", "activation", ":", "ActivationFunction", "=", "F", ".", "relu", ")", ":", "\n", "        ", "super", "(", "TransformerEncoderLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "self_attn", "=", "MultiHeadAttention", "(", "d_model", ",", "nhead", ",", "dropout", "=", "dropout", ")", "\n", "self", ".", "linear1", "=", "torch", ".", "nn", ".", "Linear", "(", "d_model", ",", "dim_feedforward", ")", "\n", "self", ".", "dropout", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "linear2", "=", "torch", ".", "nn", ".", "Linear", "(", "dim_feedforward", ",", "d_model", ")", "\n", "\n", "self", ".", "norm1", "=", "torch", ".", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "norm2", "=", "torch", ".", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "dropout1", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "dropout2", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n", "self", ".", "activation", "=", "activation", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerEncoderLayer.forward": [[28, 36], ["transformer.TransformerEncoderLayer.self_attn", "transformer.TransformerEncoderLayer.norm1", "transformer.TransformerEncoderLayer.linear2", "transformer.TransformerEncoderLayer.norm2", "multi_head_attention.AttentionMask", "transformer.TransformerEncoderLayer.dropout1", "transformer.TransformerEncoderLayer.dropout", "transformer.TransformerEncoderLayer.dropout2", "transformer.TransformerEncoderLayer.activation", "transformer.TransformerEncoderLayer.linear1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "src", ":", "torch", ".", "Tensor", ",", "mask", ":", "Optional", "[", "torch", ".", "Tensor", "]", "=", "None", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "src2", "=", "self", ".", "self_attn", "(", "src", ",", "src", ",", "AttentionMask", "(", "mask", ",", "None", ")", ")", "\n", "src", "=", "src", "+", "self", ".", "dropout1", "(", "src2", ")", "\n", "src", "=", "self", ".", "norm1", "(", "src", ")", "\n", "src2", "=", "self", ".", "linear2", "(", "self", ".", "dropout", "(", "self", ".", "activation", "(", "self", ".", "linear1", "(", "src", ")", ")", ")", ")", "\n", "src", "=", "src", "+", "self", ".", "dropout2", "(", "src2", ")", "\n", "src", "=", "self", ".", "norm2", "(", "src", ")", "\n", "return", "src", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerEncoderLayer.reset_parameters": [[37, 41], ["torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "linear1", ".", "weight", ",", "gain", "=", "torch", ".", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", "\n", "if", "self", ".", "activation", "is", "F", ".", "relu", "else", "1.0", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "linear2", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerDecoderLayer.__init__": [[44, 62], ["super().__init__", "multi_head_attention.MultiHeadAttention", "multi_head_attention.MultiHeadAttention", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "transformer.TransformerDecoderLayer.reset_parameters"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "d_model", ",", "nhead", ",", "dim_feedforward", "=", "2048", ",", "dropout", "=", "0.1", ",", "activation", ":", "ActivationFunction", "=", "F", ".", "relu", ")", ":", "\n", "        ", "super", "(", "TransformerDecoderLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "self_attn", "=", "MultiHeadAttention", "(", "d_model", ",", "nhead", ",", "dropout", "=", "dropout", ")", "\n", "self", ".", "multihead_attn", "=", "MultiHeadAttention", "(", "d_model", ",", "nhead", ",", "dropout", "=", "dropout", ")", "\n", "self", ".", "linear1", "=", "torch", ".", "nn", ".", "Linear", "(", "d_model", ",", "dim_feedforward", ")", "\n", "self", ".", "dropout", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "linear2", "=", "torch", ".", "nn", ".", "Linear", "(", "dim_feedforward", ",", "d_model", ")", "\n", "\n", "self", ".", "norm1", "=", "torch", ".", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "norm2", "=", "torch", ".", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "norm3", "=", "torch", ".", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "dropout1", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "dropout2", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "dropout3", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n", "self", ".", "activation", "=", "activation", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerDecoderLayer.forward": [[63, 78], ["transformer.TransformerDecoderLayer.self_attn", "transformer.TransformerDecoderLayer.norm1", "transformer.TransformerDecoderLayer.multihead_attn", "transformer.TransformerDecoderLayer.norm2", "transformer.TransformerDecoderLayer.linear2", "transformer.TransformerDecoderLayer.norm3", "transformer.TransformerDecoderLayer.dropout1", "transformer.TransformerDecoderLayer.dropout2", "transformer.TransformerDecoderLayer.dropout", "transformer.TransformerDecoderLayer.dropout3", "multi_head_attention.AttentionMask", "multi_head_attention.AttentionMask", "transformer.TransformerDecoderLayer.activation", "transformer.TransformerDecoderLayer.linear1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "tgt", ":", "torch", ".", "Tensor", ",", "memory", ":", "torch", ".", "Tensor", ",", "tgt_mask", ":", "Optional", "[", "torch", ".", "Tensor", "]", "=", "None", ",", "\n", "memory_key_padding_mask", ":", "Optional", "[", "torch", ".", "Tensor", "]", "=", "None", ",", "\n", "full_target", ":", "Optional", "[", "torch", ".", "Tensor", "]", "=", "None", ",", "pos_offset", ":", "int", "=", "0", ")", "->", "torch", ".", "Tensor", ":", "\n", "\n", "        ", "assert", "pos_offset", "==", "0", "or", "tgt_mask", "is", "None", "\n", "tgt2", "=", "self", ".", "self_attn", "(", "tgt", ",", "tgt", "if", "full_target", "is", "None", "else", "full_target", ",", "mask", "=", "AttentionMask", "(", "None", ",", "tgt_mask", ")", ")", "\n", "tgt", "=", "tgt", "+", "self", ".", "dropout1", "(", "tgt2", ")", "\n", "tgt", "=", "self", ".", "norm1", "(", "tgt", ")", "\n", "tgt2", "=", "self", ".", "multihead_attn", "(", "tgt", ",", "memory", ",", "mask", "=", "AttentionMask", "(", "memory_key_padding_mask", ",", "None", ")", ")", "\n", "tgt", "=", "tgt", "+", "self", ".", "dropout2", "(", "tgt2", ")", "\n", "tgt", "=", "self", ".", "norm2", "(", "tgt", ")", "\n", "tgt2", "=", "self", ".", "linear2", "(", "self", ".", "dropout", "(", "self", ".", "activation", "(", "self", ".", "linear1", "(", "tgt", ")", ")", ")", ")", "\n", "tgt", "=", "tgt", "+", "self", ".", "dropout3", "(", "tgt2", ")", "\n", "tgt", "=", "self", ".", "norm3", "(", "tgt", ")", "\n", "return", "tgt", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerDecoderLayer.reset_parameters": [[79, 83], ["torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain", "torch.nn.init.calculate_gain"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "linear1", ".", "weight", ",", "gain", "=", "torch", ".", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", "\n", "if", "self", ".", "activation", "is", "F", ".", "relu", "else", "1.0", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "linear2", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerDecoderBase.__init__": [[91, 94], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["", "def", "__init__", "(", "self", ",", "d_model", ":", "int", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "d_model", "=", "d_model", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerDecoderBase.create_state": [[95, 98], ["transformer.TransformerDecoderBase.State", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "range", "len"], "methods", ["None"], ["", "def", "create_state", "(", "self", ",", "batch_size", ":", "int", ",", "max_length", ":", "int", ",", "device", ":", "torch", ".", "device", ")", "->", "State", ":", "\n", "        ", "return", "self", ".", "State", "(", "0", ",", "{", "i", ":", "torch", ".", "empty", "(", "[", "batch_size", ",", "max_length", ",", "self", ".", "d_model", "]", ",", "device", "=", "device", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "layers", ")", ")", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerDecoderBase.one_step_forward": [[99, 110], ["enumerate", "l"], "methods", ["None"], ["", "def", "one_step_forward", "(", "self", ",", "state", ":", "State", ",", "data", ":", "torch", ".", "Tensor", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "assert", "data", ".", "shape", "[", "1", "]", "==", "1", ",", "f\"For one-step forward should have one timesteps, but shape is {data.shape}\"", "\n", "assert", "state", ".", "step", "<", "state", ".", "state", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "\n", "for", "i", ",", "l", "in", "enumerate", "(", "self", ".", "layers", ")", ":", "\n", "            ", "state", ".", "state", "[", "i", "]", "[", ":", ",", "state", ".", "step", ":", "state", ".", "step", "+", "1", "]", "=", "data", "\n", "data", "=", "l", "(", "data", ",", "*", "args", ",", "**", "kwargs", ",", "full_target", "=", "state", ".", "state", "[", "i", "]", "[", ":", ",", ":", "state", ".", "step", "+", "1", "]", ",", "\n", "pos_offset", "=", "state", ".", "step", ")", "\n", "\n", "", "state", ".", "step", "+=", "1", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerEncoder.__init__": [[113, 116], ["super().__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "layer", "range"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layer", ",", "n_layers", ":", "int", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layers", "=", "torch", ".", "nn", ".", "ModuleList", "(", "[", "layer", "(", "*", "args", ",", "**", "kwargs", ")", "for", "_", "in", "range", "(", "n_layers", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerEncoder.forward": [[117, 121], ["l"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data", ":", "torch", ".", "Tensor", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "for", "l", "in", "self", ".", "layers", ":", "\n", "            ", "data", "=", "l", "(", "data", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerDecoder.__init__": [[124, 127], ["transformer.TransformerDecoderBase.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "layer", "range"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layer", ",", "n_layers", ":", "int", ",", "d_model", ":", "int", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "d_model", ")", "\n", "self", ".", "layers", "=", "torch", ".", "nn", ".", "ModuleList", "(", "[", "layer", "(", "d_model", ",", "*", "args", ",", "**", "kwargs", ")", "for", "_", "in", "range", "(", "n_layers", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerDecoder.forward": [[128, 132], ["l"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data", ":", "torch", ".", "Tensor", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "for", "l", "in", "self", ".", "layers", ":", "\n", "            ", "data", "=", "l", "(", "data", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.Transformer.__init__": [[143, 153], ["transformer.TransformerEncoderWithLayer", "transformer.TransformerDecoderWithLayer", "super().__init__", "encoder_layer", "decoder_layer"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerEncoderWithLayer", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerDecoderWithLayer", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["    ", "def", "__init__", "(", "self", ",", "d_model", ":", "int", "=", "512", ",", "nhead", ":", "int", "=", "8", ",", "num_encoder_layers", ":", "int", "=", "6", ",", "\n", "num_decoder_layers", ":", "int", "=", "6", ",", "dim_feedforward", ":", "int", "=", "2048", ",", "dropout", ":", "float", "=", "0.1", ",", "\n", "activation", ":", "ActivationFunction", "=", "F", ".", "relu", ",", "encoder_layer", "=", "TransformerEncoderWithLayer", "(", ")", ",", "\n", "decoder_layer", "=", "TransformerDecoderWithLayer", "(", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "encoder_layer", "(", "num_encoder_layers", ",", "d_model", ",", "nhead", ",", "dim_feedforward", ",", "\n", "dropout", ",", "activation", ")", "\n", "self", ".", "decoder", "=", "decoder_layer", "(", "num_decoder_layers", ",", "d_model", ",", "nhead", ",", "dim_feedforward", ",", "\n", "dropout", ",", "activation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.Transformer.forward": [[154, 159], ["transformer.Transformer.encoder", "transformer.Transformer.decoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "src", ":", "torch", ".", "Tensor", ",", "tgt", ":", "torch", ".", "Tensor", ",", "tgt_mask", ":", "Optional", "[", "torch", ".", "Tensor", "]", "=", "None", ",", "\n", "src_length_mask", ":", "Optional", "[", "torch", ".", "Tensor", "]", "=", "None", ")", ":", "\n", "\n", "        ", "memory", "=", "self", ".", "encoder", "(", "src", ",", "src_length_mask", ")", "\n", "return", "self", ".", "decoder", "(", "tgt", ",", "memory", ",", "tgt_mask", ",", "src_length_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.Transformer.generate_square_subsequent_mask": [[160, 162], ["torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["None"], ["", "def", "generate_square_subsequent_mask", "(", "self", ",", "sz", ":", "int", ",", "device", ":", "torch", ".", "device", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "return", "torch", ".", "triu", "(", "torch", ".", "ones", "(", "sz", ",", "sz", ",", "dtype", "=", "torch", ".", "bool", ",", "device", "=", "device", ")", ",", "diagonal", "=", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerEncoderWithLayer": [[134, 136], ["transformer.TransformerEncoder"], "function", ["None"], ["", "", "def", "TransformerEncoderWithLayer", "(", "layer", "=", "TransformerEncoderLayer", ")", ":", "\n", "    ", "return", "lambda", "*", "args", ",", "**", "kwargs", ":", "TransformerEncoder", "(", "layer", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerDecoderWithLayer": [[138, 140], ["transformer.TransformerDecoder"], "function", ["None"], ["", "def", "TransformerDecoderWithLayer", "(", "layer", "=", "TransformerDecoderLayer", ")", ":", "\n", "    ", "return", "lambda", "*", "args", ",", "**", "kwargs", ":", "TransformerDecoder", "(", "layer", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.lockfile.LockFile.__init__": [[8, 11], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "fname", ":", "str", ")", ":", "\n", "        ", "self", ".", "_fname", "=", "fname", "\n", "self", ".", "_fd", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.lockfile.LockFile.acquire": [[12, 30], ["open", "os.chmod", "fcntl.flock", "time.sleep"], "methods", ["None"], ["", "def", "acquire", "(", "self", ")", ":", "\n", "        ", "self", ".", "_fd", "=", "open", "(", "self", ".", "_fname", ",", "\"w\"", ")", "\n", "try", ":", "\n", "            ", "os", ".", "chmod", "(", "self", ".", "_fname", ",", "0o777", ")", "\n", "", "except", "PermissionError", ":", "\n", "# If another user created it already, we don't have the permission to change the access rights.", "\n", "# But it can be ignored because the creator already set it right.", "\n", "            ", "pass", "\n", "\n", "", "while", "True", ":", "\n", "            ", "try", ":", "\n", "                ", "fcntl", ".", "flock", "(", "self", ".", "_fd", ",", "fcntl", ".", "LOCK_EX", "|", "fcntl", ".", "LOCK_NB", ")", "\n", "break", "\n", "", "except", "IOError", "as", "e", ":", "\n", "                ", "if", "e", ".", "errno", "!=", "errno", ".", "EAGAIN", ":", "\n", "                    ", "raise", "\n", "", "else", ":", "\n", "                    ", "time", ".", "sleep", "(", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.lockfile.LockFile.release": [[31, 35], ["fcntl.flock", "lockfile.LockFile._fd.close"], "methods", ["None"], ["", "", "", "", "def", "release", "(", "self", ")", ":", "\n", "        ", "fcntl", ".", "flock", "(", "self", ".", "_fd", ",", "fcntl", ".", "LOCK_UN", ")", "\n", "self", ".", "_fd", ".", "close", "(", ")", "\n", "self", ".", "_fd", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.lockfile.LockFile.__enter__": [[36, 38], ["lockfile.LockFile.acquire"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.lockfile.LockFile.acquire"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "self", ".", "acquire", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.lockfile.LockFile.__exit__": [[39, 41], ["lockfile.LockFile.release"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.lockfile.LockFile.release"], ["", "def", "__exit__", "(", "self", ",", "exc_type", ",", "exc_val", ",", "exc_tb", ")", ":", "\n", "        ", "self", ".", "release", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.average.Average.__init__": [[8, 10], ["average.Average.reset"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.average.Average.add": [[11, 17], ["torch.is_tensor", "data.detach.detach.detach"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "data", ":", "Union", "[", "int", ",", "float", ",", "torch", ".", "Tensor", "]", ")", ":", "\n", "        ", "if", "torch", ".", "is_tensor", "(", "data", ")", ":", "\n", "            ", "data", "=", "data", ".", "detach", "(", ")", "\n", "\n", "", "self", ".", "sum", "+=", "data", "\n", "self", ".", "cnt", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.average.Average.reset": [[18, 21], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "sum", "=", "0", "\n", "self", ".", "cnt", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.average.Average.get": [[22, 28], ["average.Average.reset"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.reset"], ["", "def", "get", "(", "self", ",", "reset", "=", "True", ")", "->", "Union", "[", "float", ",", "torch", ".", "Tensor", "]", ":", "\n", "        ", "res", "=", "self", ".", "sum", "/", "self", ".", "cnt", "\n", "if", "reset", ":", "\n", "            ", "self", ".", "reset", "(", ")", "\n", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.average.Average.state_dict": [[29, 31], ["None"], "methods", ["None"], ["", "def", "state_dict", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "return", "{", "k", ":", "self", ".", "__dict__", "[", "k", "]", "for", "k", "in", "self", ".", "SAVE", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.average.Average.load_state_dict": [[32, 34], ["average.Average.__dict__.update"], "methods", ["None"], ["", "def", "load_state_dict", "(", "self", ",", "state", ":", "Dict", "[", "str", ",", "Any", "]", ")", ":", "\n", "        ", "self", ".", "__dict__", ".", "update", "(", "state", "or", "{", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.average.MovingAverage.__init__": [[39, 42], ["average.Average.__init__"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["def", "__init__", "(", "self", ",", "window_size", ":", "int", ")", ":", "\n", "        ", "self", ".", "window_size", "=", "window_size", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.average.MovingAverage.reset": [[43, 46], ["average.Average.reset"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "history", "=", "[", "]", "\n", "super", "(", ")", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.average.MovingAverage.add": [[47, 54], ["average.Average.add", "average.MovingAverage.history.pop"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add"], ["", "def", "add", "(", "self", ",", "data", ":", "Union", "[", "int", ",", "float", ",", "torch", ".", "Tensor", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "add", "(", "data", ")", "\n", "if", "self", ".", "cnt", ">", "self", ".", "window_size", ":", "\n", "            ", "self", ".", "sum", "-=", "self", ".", "history", ".", "pop", "(", "0", ")", "\n", "self", ".", "cnt", "-=", "1", "\n", "\n", "", "assert", "self", ".", "cnt", "<=", "self", ".", "window_size", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.gpu_allocator.get_memory_usage": [[10, 18], ["subprocess.Popen", "s.strip().split", "int", "int", "[].decode().split", "s.strip", "[].decode", "subprocess.Popen.communicate"], "function", ["None"], ["def", "get_memory_usage", "(", ")", "->", "Optional", "[", "Dict", "[", "int", ",", "int", "]", "]", ":", "\n", "    ", "try", ":", "\n", "        ", "proc", "=", "subprocess", ".", "Popen", "(", "\"nvidia-smi --query-gpu=index,memory.used --format=csv,noheader,nounits\"", ".", "split", "(", "\" \"", ")", ",", "\n", "stdout", "=", "subprocess", ".", "PIPE", ")", "\n", "lines", "=", "[", "s", ".", "strip", "(", ")", ".", "split", "(", "\" \"", ")", "for", "s", "in", "proc", ".", "communicate", "(", ")", "[", "0", "]", ".", "decode", "(", ")", ".", "split", "(", "\"\\n\"", ")", "if", "s", "]", "\n", "return", "{", "int", "(", "g", "[", "0", "]", "[", ":", "-", "1", "]", ")", ":", "int", "(", "g", "[", "1", "]", ")", "for", "g", "in", "lines", "}", "\n", "", "except", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.gpu_allocator.get_free_gpus": [[20, 40], ["subprocess.Popen", "subprocess.Popen", "s.strip", "s.strip().split", "[].decode().split", "[].decode().split", "free.append", "s.strip", "int", "[].decode", "[].decode", "subprocess.Popen.communicate", "subprocess.Popen.communicate"], "function", ["None"], ["", "", "def", "get_free_gpus", "(", ")", "->", "Optional", "[", "List", "[", "int", "]", "]", ":", "\n", "    ", "try", ":", "\n", "        ", "free", "=", "[", "]", "\n", "proc", "=", "subprocess", ".", "Popen", "(", "\"nvidia-smi --query-compute-apps=gpu_uuid --format=csv,noheader,nounits\"", ".", "split", "(", "\" \"", ")", ",", "\n", "stdout", "=", "subprocess", ".", "PIPE", ")", "\n", "uuids", "=", "[", "s", ".", "strip", "(", ")", "for", "s", "in", "proc", ".", "communicate", "(", ")", "[", "0", "]", ".", "decode", "(", ")", ".", "split", "(", "\"\\n\"", ")", "if", "s", "]", "\n", "\n", "proc", "=", "subprocess", ".", "Popen", "(", "\"nvidia-smi --query-gpu=index,uuid --format=csv,noheader,nounits\"", ".", "split", "(", "\" \"", ")", ",", "\n", "stdout", "=", "subprocess", ".", "PIPE", ")", "\n", "\n", "id_uid_pair", "=", "[", "s", ".", "strip", "(", ")", ".", "split", "(", "\", \"", ")", "for", "s", "in", "proc", ".", "communicate", "(", ")", "[", "0", "]", ".", "decode", "(", ")", ".", "split", "(", "\"\\n\"", ")", "if", "s", "]", "\n", "for", "i", "in", "id_uid_pair", ":", "\n", "            ", "id", ",", "uid", "=", "i", "\n", "\n", "if", "uid", "not", "in", "uuids", ":", "\n", "                ", "free", ".", "append", "(", "int", "(", "id", ")", ")", "\n", "\n", "", "", "return", "free", "\n", "", "except", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.gpu_allocator._fix_order": [[42, 44], ["os.environ.get"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "", "def", "_fix_order", "(", ")", ":", "\n", "    ", "os", ".", "environ", "[", "\"CUDA_DEVICE_ORDER\"", "]", "=", "os", ".", "environ", ".", "get", "(", "\"CUDA_DEVICE_ORDER\"", ",", "\"PCI_BUS_ID\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.gpu_allocator._create_gpu_usage": [[46, 53], ["range", "torch.FloatTensor", "torch.FloatTensor.cuda", "gpu_fake_usage.append"], "function", ["None"], ["", "def", "_create_gpu_usage", "(", "n_gpus", ":", "int", ")", ":", "\n", "    ", "global", "gpu_fake_usage", "\n", "\n", "for", "i", "in", "range", "(", "n_gpus", ")", ":", "\n", "        ", "a", "=", "torch", ".", "FloatTensor", "(", "[", "0.0", "]", ")", "\n", "a", ".", "cuda", "(", "i", ")", "\n", "gpu_fake_usage", ".", "append", "(", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.gpu_allocator.allocate": [[55, 100], ["gpu_allocator._fix_order", "utils.lockfile.LockFile", "gpu_allocator.get_free_gpus", "gpu_allocator._create_gpu_usage", "print", "print", "len", "print", "gpu_allocator.get_memory_usage", "get_memory_usage.items", "list", "len", "print", "inv_usages[].append", "sorted", "len", "len", "print", "len", "str", "inv_usages.keys", "len", "len"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.gpu_allocator._fix_order", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.gpu_allocator.get_free_gpus", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.gpu_allocator._create_gpu_usage", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.gpu_allocator.get_memory_usage"], ["", "", "def", "allocate", "(", "n", ":", "int", "=", "1", ")", ":", "\n", "    ", "_fix_order", "(", ")", "\n", "with", "LockFile", "(", "\"/tmp/gpu_allocation_lock\"", ")", ":", "\n", "        ", "if", "\"CUDA_VISIBLE_DEVICES\"", "in", "os", ".", "environ", ":", "\n", "            ", "print", "(", "\"WARNING: trying to allocate %d GPUs, but CUDA_VISIBLE_DEVICES already set to %s\"", "%", "\n", "(", "n", ",", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", ")", ")", "\n", "return", "\n", "\n", "", "allocated", "=", "get_free_gpus", "(", ")", "\n", "if", "allocated", "is", "None", ":", "\n", "            ", "print", "(", "\"WARNING: failed to allocate %d GPUs\"", "%", "n", ")", "\n", "return", "\n", "", "allocated", "=", "allocated", "[", ":", "n", "]", "\n", "\n", "if", "len", "(", "allocated", ")", "<", "n", ":", "\n", "            ", "print", "(", "\"There is no more free GPUs. Allocating the one with least memory usage.\"", ")", "\n", "usage", "=", "get_memory_usage", "(", ")", "\n", "if", "usage", "is", "None", ":", "\n", "                ", "print", "(", "\"WARNING: failed to allocate %d GPUs\"", "%", "n", ")", "\n", "return", "\n", "\n", "", "inv_usages", "=", "{", "}", "\n", "\n", "for", "k", ",", "v", "in", "usage", ".", "items", "(", ")", ":", "\n", "                ", "if", "v", "not", "in", "inv_usages", ":", "\n", "                    ", "inv_usages", "[", "v", "]", "=", "[", "]", "\n", "\n", "", "inv_usages", "[", "v", "]", ".", "append", "(", "k", ")", "\n", "\n", "", "min_usage", "=", "list", "(", "sorted", "(", "inv_usages", ".", "keys", "(", ")", ")", ")", "\n", "min_usage_devs", "=", "[", "]", "\n", "for", "u", "in", "min_usage", ":", "\n", "                ", "min_usage_devs", "+=", "inv_usages", "[", "u", "]", "\n", "\n", "", "min_usage_devs", "=", "[", "m", "for", "m", "in", "min_usage_devs", "if", "m", "not", "in", "allocated", "]", "\n", "\n", "n2", "=", "n", "-", "len", "(", "allocated", ")", "\n", "if", "n2", ">", "len", "(", "min_usage_devs", ")", ":", "\n", "                ", "print", "(", "\"WARNING: trying to allocate %d GPUs but only %d available\"", "%", "(", "n", ",", "len", "(", "min_usage_devs", ")", "+", "len", "(", "allocated", ")", ")", ")", "\n", "n2", "=", "len", "(", "min_usage_devs", ")", "\n", "\n", "", "allocated", "+=", "min_usage_devs", "[", ":", "n2", "]", "\n", "\n", "", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "\",\"", ".", "join", "(", "[", "str", "(", "a", ")", "for", "a", "in", "allocated", "]", ")", "\n", "_create_gpu_usage", "(", "len", "(", "allocated", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.gpu_allocator.use_gpu": [[102, 115], ["gpu_allocator._fix_order", "gpu.lower.lower", "len", "gpu_allocator.allocate", "os.environ.get().split", "gpu.lower.lower", "gpu_allocator._create_gpu_usage", "len", "os.environ.get", "gpu.lower.split"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.gpu_allocator._fix_order", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.gpu_allocator.allocate", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.gpu_allocator._create_gpu_usage", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "", "def", "use_gpu", "(", "gpu", ":", "str", "=", "\"auto\"", ",", "n_autoalloc", ":", "int", "=", "1", ")", ":", "\n", "    ", "_fix_order", "(", ")", "\n", "\n", "gpu", "=", "gpu", ".", "lower", "(", ")", "\n", "if", "gpu", "in", "[", "\"auto\"", ",", "\"\"", "]", ":", "\n", "        ", "allocate", "(", "n_autoalloc", ")", "\n", "", "elif", "gpu", ".", "lower", "(", ")", "==", "\"none\"", ":", "\n", "        ", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "\"\"", "\n", "", "else", ":", "\n", "        ", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "gpu", "\n", "_create_gpu_usage", "(", "len", "(", "gpu", ".", "split", "(", "\",\"", ")", ")", ")", "\n", "\n", "", "return", "len", "(", "os", ".", "environ", ".", "get", "(", "\"CUDA_VISIBLE_DEVICES\"", ",", "\"\"", ")", ".", "split", "(", "\",\"", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.process.run": [[7, 45], ["subprocess.Popen", "print", "open", "open", "cmd.split", "os.path.join", "os.path.isfile", "print", "ctypes.CDLL", "ctypes.CDLL.prctl"], "function", ["None"], ["def", "run", "(", "cmd", ":", "str", ",", "hide_stderr", ":", "bool", "=", "True", ",", "stdout_mode", ":", "str", "=", "\"print\"", ")", ":", "\n", "    ", "libc_search_dirs", "=", "[", "\"/lib\"", ",", "\"/lib/x86_64-linux-gnu\"", ",", "\"/lib/powerpc64le-linux-gnu\"", "]", "\n", "\n", "if", "sys", ".", "platform", "==", "\"linux\"", ":", "\n", "        ", "found", "=", "None", "\n", "for", "d", "in", "libc_search_dirs", ":", "\n", "            ", "file", "=", "os", ".", "path", ".", "join", "(", "d", ",", "\"libc.so.6\"", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "file", ")", ":", "\n", "                ", "found", "=", "file", "\n", "break", "\n", "\n", "", "", "if", "not", "found", ":", "\n", "            ", "print", "(", "\"WARNING: Cannot find libc.so.6. Cannot kill process when parent dies.\"", ")", "\n", "killer", "=", "None", "\n", "", "else", ":", "\n", "            ", "libc", "=", "ctypes", ".", "CDLL", "(", "found", ")", "\n", "PR_SET_PDEATHSIG", "=", "1", "\n", "KILL", "=", "9", "\n", "killer", "=", "lambda", ":", "libc", ".", "prctl", "(", "PR_SET_PDEATHSIG", ",", "KILL", ")", "\n", "", "", "else", ":", "\n", "        ", "print", "(", "\"WARNING: OS not linux. Cannot kill process when parent dies.\"", ")", "\n", "killer", "=", "None", "\n", "\n", "", "if", "hide_stderr", ":", "\n", "        ", "stderr", "=", "open", "(", "os", ".", "devnull", ",", "'w'", ")", "\n", "", "else", ":", "\n", "        ", "stderr", "=", "None", "\n", "\n", "", "if", "stdout_mode", "==", "\"hide\"", ":", "\n", "        ", "stdout", "=", "open", "(", "os", ".", "devnull", ",", "'w'", ")", "\n", "", "elif", "stdout_mode", "==", "\"print\"", ":", "\n", "        ", "stdout", "=", "None", "\n", "", "elif", "stdout_mode", "==", "\"pipe\"", ":", "\n", "        ", "stdout", "=", "subprocess", ".", "PIPE", "\n", "", "else", ":", "\n", "        ", "assert", "False", ",", "\"Invalid stdout mode: %s\"", "%", "stdout_mode", "\n", "\n", "", "return", "subprocess", ".", "Popen", "(", "cmd", ".", "split", "(", "\" \"", ")", ",", "stderr", "=", "stderr", ",", "stdout", "=", "stdout", ",", "preexec_fn", "=", "killer", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.universal.apply_recursive": [[5, 17], ["isinstance", "isinstance", "universal.apply_recursive", "tuple", "isinstance", "universal.apply_recursive", "list", "universal.apply_recursive", "fn", "d.items", "torch.is_tensor"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.universal.apply_recursive", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.universal.apply_recursive", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.universal.apply_recursive"], ["def", "apply_recursive", "(", "d", ",", "fn", ":", "Callable", ",", "filter", ":", "Callable", "=", "None", ")", ":", "\n", "    ", "if", "isinstance", "(", "d", ",", "list", ")", ":", "\n", "        ", "return", "[", "apply_recursive", "(", "da", ",", "fn", ",", "filter", ")", "for", "da", "in", "d", "]", "\n", "", "elif", "isinstance", "(", "d", ",", "tuple", ")", ":", "\n", "        ", "return", "tuple", "(", "apply_recursive", "(", "list", "(", "d", ")", ",", "fn", ",", "filter", ")", ")", "\n", "", "elif", "isinstance", "(", "d", ",", "dict", ")", ":", "\n", "        ", "return", "{", "k", ":", "apply_recursive", "(", "v", ",", "fn", ",", "filter", ")", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", "}", "\n", "", "else", ":", "\n", "        ", "if", "filter", "is", "None", "or", "filter", "(", "d", ")", ":", "\n", "            ", "return", "fn", "(", "d", ")", "\n", "", "else", ":", "\n", "            ", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.universal.apply_to_tensors": [[19, 21], ["universal.apply_recursive"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.universal.apply_recursive"], ["", "", "", "def", "apply_to_tensors", "(", "d", ",", "fn", ":", "Callable", ")", ":", "\n", "    ", "return", "apply_recursive", "(", "d", ",", "fn", ",", "torch", ".", "is_tensor", ")", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.__init__": [[8, 21], ["requests.head", "k.lower", "int", "headers.items", "headers.get"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["    ", "def", "__init__", "(", "self", ",", "url", ")", ":", "\n", "        ", "self", ".", "_url", "=", "url", "\n", "headers", "=", "requests", ".", "head", "(", "url", ",", "headers", "=", "{", "\"Accept-Encoding\"", ":", "\"identity\"", "}", ")", ".", "headers", "\n", "headers", "=", "{", "k", ".", "lower", "(", ")", ":", "v", "for", "k", ",", "v", "in", "headers", ".", "items", "(", ")", "}", "\n", "self", ".", "_seek_supported", "=", "headers", ".", "get", "(", "'accept-ranges'", ")", "==", "'bytes'", "and", "'content-length'", "in", "headers", "\n", "if", "self", ".", "_seek_supported", ":", "\n", "            ", "self", ".", "_size", "=", "int", "(", "headers", "[", "'content-length'", "]", ")", "\n", "", "self", ".", "_curr_pos", "=", "0", "\n", "self", ".", "_buf_start_pos", "=", "0", "\n", "self", ".", "_iter", "=", "None", "\n", "self", ".", "_buffer", "=", "None", "\n", "self", ".", "_buf_size", "=", "0", "\n", "self", ".", "_loaded_all", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream._load_all": [[22, 33], ["download.UrlStream._make_request", "download.UrlStream._buffer.tell", "download.UrlStream._buffer.seek", "download.UrlStream._buffer.tell", "download.UrlStream._buffer.seek", "download.UrlStream._buffer.write"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream._make_request", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.tell", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.seek", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.tell", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.seek"], ["", "def", "_load_all", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_loaded_all", ":", "\n", "            ", "return", "\n", "", "self", ".", "_make_request", "(", ")", "\n", "old_buf_pos", "=", "self", ".", "_buffer", ".", "tell", "(", ")", "\n", "self", ".", "_buffer", ".", "seek", "(", "0", ",", "SEEK_END", ")", "\n", "for", "chunk", "in", "self", ".", "_iter", ":", "\n", "            ", "self", ".", "_buffer", ".", "write", "(", "chunk", ")", "\n", "", "self", ".", "_buf_size", "=", "self", ".", "_buffer", ".", "tell", "(", ")", "\n", "self", ".", "_buffer", ".", "seek", "(", "old_buf_pos", ",", "SEEK_SET", ")", "\n", "self", ".", "_loaded_all", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.seekable": [[34, 36], ["None"], "methods", ["None"], ["", "def", "seekable", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_seek_supported", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.seek": [[37, 60], ["download.UrlStream.tell", "download.UrlStream.seek", "download.UrlStream._load_all", "download.UrlStream._buffer.seek", "download.UrlStream._buffer.tell", "download.UrlStream._load_until", "download.UrlStream._buffer.seek"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.tell", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.seek", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream._load_all", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.seek", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.tell", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream._load_until", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.seek"], ["", "def", "seek", "(", "self", ",", "position", ",", "whence", "=", "SEEK_SET", ")", ":", "\n", "        ", "if", "whence", "==", "SEEK_END", ":", "\n", "            ", "assert", "position", "<=", "0", "\n", "if", "self", ".", "_seek_supported", ":", "\n", "                ", "self", ".", "seek", "(", "self", ".", "_size", "+", "position", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "_load_all", "(", ")", "\n", "self", ".", "_buffer", ".", "seek", "(", "position", ",", "SEEK_END", ")", "\n", "self", ".", "_curr_pos", "=", "self", ".", "_buffer", ".", "tell", "(", ")", "\n", "", "", "elif", "whence", "==", "SEEK_SET", ":", "\n", "            ", "if", "self", ".", "_curr_pos", "!=", "position", ":", "\n", "                ", "self", ".", "_curr_pos", "=", "position", "\n", "if", "self", ".", "_seek_supported", ":", "\n", "                    ", "self", ".", "_iter", "=", "None", "\n", "self", ".", "_buffer", "=", "None", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_load_until", "(", "position", ")", "\n", "self", ".", "_buffer", ".", "seek", "(", "position", ")", "\n", "self", ".", "_curr_pos", "=", "position", "\n", "", "", "", "else", ":", "\n", "            ", "assert", "\"Invalid whence %s\"", "%", "whence", "\n", "\n", "", "return", "self", ".", "tell", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.tell": [[61, 63], ["None"], "methods", ["None"], ["", "def", "tell", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_curr_pos", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream._load_until": [[64, 79], ["download.UrlStream._make_request", "download.UrlStream._buffer.tell", "download.UrlStream._buffer.seek", "download.UrlStream._buffer.seek", "next", "download.UrlStream._buffer.write", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream._make_request", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.tell", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.seek", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.seek"], ["", "def", "_load_until", "(", "self", ",", "goal_position", ")", ":", "\n", "        ", "self", ".", "_make_request", "(", ")", "\n", "old_buf_pos", "=", "self", ".", "_buffer", ".", "tell", "(", ")", "\n", "current_position", "=", "self", ".", "_buffer", ".", "seek", "(", "0", ",", "SEEK_END", ")", "\n", "\n", "goal_position", "=", "goal_position", "-", "self", ".", "_buf_start_pos", "\n", "while", "current_position", "<", "goal_position", ":", "\n", "            ", "try", ":", "\n", "                ", "d", "=", "next", "(", "self", ".", "_iter", ")", "\n", "self", ".", "_buffer", ".", "write", "(", "d", ")", "\n", "current_position", "+=", "len", "(", "d", ")", "\n", "", "except", "StopIteration", ":", "\n", "                ", "break", "\n", "", "", "self", ".", "_buf_size", "=", "current_position", "\n", "self", ".", "_buffer", ".", "seek", "(", "old_buf_pos", ",", "SEEK_SET", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream._new_buffer": [[80, 89], ["io.BytesIO", "download.UrlStream._buffer.seek", "download.UrlStream._buffer.read", "download.UrlStream._buffer.write", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.seek", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.read"], ["", "def", "_new_buffer", "(", "self", ")", ":", "\n", "        ", "remaining", "=", "self", ".", "_buffer", ".", "read", "(", ")", "if", "self", ".", "_buffer", "is", "not", "None", "else", "None", "\n", "self", ".", "_buffer", "=", "BytesIO", "(", ")", "\n", "if", "remaining", "is", "not", "None", ":", "\n", "            ", "self", ".", "_buffer", ".", "write", "(", "remaining", ")", "\n", "", "self", ".", "_buf_start_pos", "=", "self", ".", "_curr_pos", "\n", "self", ".", "_buf_size", "=", "0", "if", "remaining", "is", "None", "else", "len", "(", "remaining", ")", "\n", "self", ".", "_buffer", ".", "seek", "(", "0", ",", "SEEK_SET", ")", "\n", "self", ".", "_loaded_all", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream._make_request": [[90, 104], ["requests.get", "requests.get.iter_content", "download.UrlStream._new_buffer", "download.UrlStream._new_buffer"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.iter_content", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream._new_buffer", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream._new_buffer"], ["", "def", "_make_request", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_iter", "is", "None", ":", "\n", "            ", "h", "=", "{", "\n", "\"User-agent\"", ":", "\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.80 Safari/537.36\"", ",", "\n", "}", "\n", "if", "self", ".", "_seek_supported", ":", "\n", "                ", "h", "[", "\"Range\"", "]", "=", "\"bytes=%d-%d\"", "%", "(", "self", ".", "_curr_pos", ",", "self", ".", "_size", "-", "1", ")", "\n", "\n", "", "r", "=", "requests", ".", "get", "(", "self", ".", "_url", ",", "headers", "=", "h", ",", "stream", "=", "True", ")", "\n", "\n", "self", ".", "_iter", "=", "r", ".", "iter_content", "(", "1024", "*", "1024", ")", "\n", "self", ".", "_new_buffer", "(", ")", "\n", "", "elif", "self", ".", "_seek_supported", "and", "self", ".", "_buf_size", ">", "128", "*", "1024", "*", "1024", ":", "\n", "            ", "self", ".", "_new_buffer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.size": [[105, 111], ["download.UrlStream._load_all"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream._load_all"], ["", "", "def", "size", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_seek_supported", ":", "\n", "            ", "return", "self", ".", "_size", "\n", "", "else", ":", "\n", "            ", "self", ".", "_load_all", "(", ")", "\n", "return", "self", ".", "_buf_size", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.read": [[112, 124], ["download.UrlStream._load_until", "download.UrlStream._buffer.read", "download.UrlStream.size", "min", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream._load_until", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.read", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.size"], ["", "", "def", "read", "(", "self", ",", "size", "=", "None", ")", ":", "\n", "        ", "if", "size", "is", "None", ":", "\n", "            ", "size", "=", "self", ".", "size", "(", ")", "\n", "\n", "", "self", ".", "_load_until", "(", "self", ".", "_curr_pos", "+", "size", ")", "\n", "if", "self", ".", "_seek_supported", ":", "\n", "            ", "self", ".", "_curr_pos", "=", "min", "(", "self", ".", "_curr_pos", "+", "size", ",", "self", ".", "_size", ")", "\n", "\n", "", "read_data", "=", "self", ".", "_buffer", ".", "read", "(", "size", ")", "\n", "if", "not", "self", ".", "_seek_supported", ":", "\n", "            ", "self", ".", "_curr_pos", "+=", "len", "(", "read_data", ")", "\n", "", "return", "read_data", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.iter_content": [[125, 131], ["download.UrlStream.read", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.read"], ["", "def", "iter_content", "(", "self", ",", "block_size", ")", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "d", "=", "self", ".", "read", "(", "block_size", ")", "\n", "if", "not", "len", "(", "d", ")", ":", "\n", "                ", "break", "\n", "", "yield", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.download": [[133, 190], ["download.UrlStream", "[].lower", "url.split", "os.path.exists", "os.makedirs", "gzip.GzipFile", "zipfile.ZipFile.extractall", "base_url.split", "base_url.endswith", "open", "tarfile.open", "open", "download.UrlStream.iter_content", "os.remove", "base_url.split", "os.path.join", "zipfile.ZipFile.read", "f.write", "zipfile.ZipFile", "f.write", "url.split"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.iter_content", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.read"], ["", "", "", "def", "download", "(", "url", ":", "str", ",", "dest", ":", "Optional", "[", "str", "]", "=", "None", ",", "extract", ":", "bool", "=", "True", ",", "ignore_if_exists", ":", "bool", "=", "False", ",", "\n", "compression", ":", "Optional", "[", "str", "]", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Download a file from the internet.\n\n    Args:\n        url: the url to download\n        dest: destination file if extract=False, or destionation dir if extract=True. If None, it will be the last part of URL.\n        extract: extract a tar.gz or zip file?\n        ignore_if_exists: don't do anything if file exists\n\n    Returns:\n        the destination filename.\n    \"\"\"", "\n", "\n", "base_url", "=", "url", ".", "split", "(", "\"?\"", ")", "[", "0", "]", "\n", "\n", "if", "dest", "is", "None", ":", "\n", "        ", "dest", "=", "[", "f", "for", "f", "in", "base_url", ".", "split", "(", "\"/\"", ")", "if", "f", "]", "[", "-", "1", "]", "\n", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "dest", ")", "and", "ignore_if_exists", ":", "\n", "        ", "return", "dest", "\n", "\n", "", "stream", "=", "UrlStream", "(", "url", ")", "\n", "extension", "=", "base_url", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", ".", "lower", "(", ")", "\n", "\n", "if", "extract", "and", "extension", "in", "[", "'gz'", ",", "'bz2'", ",", "'zip'", ",", "'tgz'", ",", "'tar'", "]", ":", "\n", "        ", "os", ".", "makedirs", "(", "dest", ",", "exist_ok", "=", "True", ")", "\n", "\n", "if", "extension", "==", "\"gz\"", "and", "not", "base_url", ".", "endswith", "(", "\".tar.gz\"", ")", ":", "\n", "            ", "decompressed_file", "=", "gzip", ".", "GzipFile", "(", "fileobj", "=", "stream", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dest", ",", "url", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "[", ":", "-", "3", "]", ")", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "while", "True", ":", "\n", "                    ", "d", "=", "decompressed_file", ".", "read", "(", "1024", "*", "1024", ")", "\n", "if", "not", "d", ":", "\n", "                        ", "break", "\n", "", "f", ".", "write", "(", "d", ")", "\n", "", "", "", "else", ":", "\n", "            ", "if", "extension", "in", "[", "'gz'", ",", "'bz2'", ",", "\"tgz\"", ",", "\"tar\"", "]", ":", "\n", "                ", "decompressed_file", "=", "tarfile", ".", "open", "(", "fileobj", "=", "stream", ",", "mode", "=", "'r|'", "+", "\n", "(", "compression", "or", "(", "\n", "\"gz\"", "if", "extension", "==", "\"tgz\"", "else", "extension", ")", ")", ")", "\n", "", "elif", "extension", "==", "'zip'", ":", "\n", "                ", "decompressed_file", "=", "zipfile", ".", "ZipFile", "(", "stream", ",", "mode", "=", "'r'", ")", "\n", "", "else", ":", "\n", "                ", "assert", "False", ",", "\"Invalid extension: %s\"", "%", "extension", "\n", "\n", "", "decompressed_file", ".", "extractall", "(", "dest", ")", "\n", "", "", "else", ":", "\n", "        ", "try", ":", "\n", "            ", "with", "open", "(", "dest", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "for", "d", "in", "stream", ".", "iter_content", "(", "1024", "*", "1024", ")", ":", "\n", "                    ", "f", ".", "write", "(", "d", ")", "\n", "", "", "", "except", ":", "\n", "            ", "os", ".", "remove", "(", "dest", ")", "\n", "raise", "\n", "", "", "return", "dest", "\n", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.set_lr.set_lr": [[4, 7], ["None"], "function", ["None"], ["def", "set_lr", "(", "optim", ":", "torch", ".", "optim", ".", "Optimizer", ",", "lr", ":", "float", ")", ":", "\n", "    ", "for", "param_group", "in", "optim", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.seed.fix": [[10, 19], ["random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "numpy.random.seed"], "function", ["None"], ["def", "fix", "(", "offset", ":", "int", "=", "0", ",", "fix_cudnn", ":", "bool", "=", "True", ")", ":", "\n", "    ", "random", ".", "seed", "(", "0x12345678", "+", "offset", ")", "\n", "torch", ".", "manual_seed", "(", "0x0DABA52", "+", "offset", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "0x0DABA52", "+", "1", "+", "offset", ")", "\n", "np", ".", "random", ".", "seed", "(", "0xC1CAFA52", "+", "offset", ")", "\n", "\n", "if", "fix_cudnn", ":", "\n", "        ", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.seed.get_randstate": [[21, 30], ["numpy.random.RandomState", "torch.utils.data.get_worker_info", "torch.utils.data.get_worker_info", "torch.utils.data.get_worker_info", "torch.utils.data.get_worker_info", "random.randint"], "function", ["None"], ["", "", "def", "get_randstate", "(", "seed", ":", "Optional", "[", "int", "]", "=", "None", ")", "->", "np", ".", "random", ".", "RandomState", ":", "\n", "    ", "if", "seed", "is", "None", ":", "\n", "        ", "worker_info", "=", "torch", ".", "utils", ".", "data", ".", "get_worker_info", "(", ")", "\n", "if", "worker_info", "is", "not", "None", ":", "\n", "            ", "seed", "=", "worker_info", ".", "seed", "\n", "", "else", ":", "\n", "            ", "seed", "=", "random", ".", "randint", "(", "0", ",", "0x7FFFFFFF", ")", "\n", "\n", "", "", "return", "np", ".", "random", ".", "RandomState", "(", "seed", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.port.check_used": [[5, 13], ["socket.socket", "socket.socket.connect_ex", "socket.socket.close"], "function", ["None"], ["def", "check_used", "(", "port", ":", "int", ")", "->", "bool", ":", "\n", "    ", "sock", "=", "socket", ".", "socket", "(", "socket", ".", "AF_INET", ",", "socket", ".", "SOCK_STREAM", ")", "\n", "result", "=", "sock", ".", "connect_ex", "(", "(", "'127.0.0.1'", ",", "port", ")", ")", "\n", "if", "result", "==", "0", ":", "\n", "        ", "sock", ".", "close", "(", ")", "\n", "return", "True", "\n", "", "else", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.port.alloc": [[15, 22], ["port.check_used", "print"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.port.check_used"], ["", "", "def", "alloc", "(", "start_from", ":", "int", "=", "7000", ")", "->", "int", ":", "\n", "    ", "while", "True", ":", "\n", "        ", "if", "check_used", "(", "start_from", ")", ":", "\n", "            ", "print", "(", "\"Port already used: %d\"", "%", "start_from", ")", "\n", "start_from", "+=", "1", "\n", "", "else", ":", "\n", "            ", "return", "start_from", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.port.wait_for": [[24, 32], ["time.time", "port.check_used", "time.sleep", "time.time"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.port.check_used"], ["", "", "", "def", "wait_for", "(", "port", ":", "int", ",", "timeout", ":", "int", "=", "5", ")", "->", "bool", ":", "\n", "    ", "star_time", "=", "time", ".", "time", "(", ")", "\n", "while", "not", "check_used", "(", "port", ")", ":", "\n", "        ", "if", "time", ".", "time", "(", ")", "-", "star_time", ">", "timeout", ":", "\n", "            ", "return", "False", "\n", "\n", "", "time", ".", "sleep", "(", "0.1", ")", "\n", "", "return", "True", "\n", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.__init__": [[5, 7], ["time_meter.ElapsedTimeMeter.reset"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.start": [[8, 10], ["time.time"], "methods", ["None"], ["", "def", "start", "(", "self", ")", ":", "\n", "        ", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter._curr_timer": [[11, 16], ["time.time"], "methods", ["None"], ["", "def", "_curr_timer", "(", "self", ")", "->", "float", ":", "\n", "        ", "if", "self", ".", "start_time", "is", "None", ":", "\n", "            ", "return", "0", "\n", "\n", "", "return", "time", ".", "time", "(", ")", "-", "self", ".", "start_time", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.stop": [[17, 20], ["time_meter.ElapsedTimeMeter._curr_timer"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter._curr_timer"], ["", "def", "stop", "(", "self", ")", ":", "\n", "        ", "self", ".", "sum", "+=", "self", ".", "_curr_timer", "(", ")", "\n", "self", ".", "start_time", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.get": [[21, 26], ["time_meter.ElapsedTimeMeter._curr_timer", "time_meter.ElapsedTimeMeter.reset"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter._curr_timer", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.reset"], ["", "def", "get", "(", "self", ",", "reset", "=", "False", ")", "->", "float", ":", "\n", "        ", "res", "=", "self", ".", "sum", "+", "self", ".", "_curr_timer", "(", ")", "\n", "if", "reset", ":", "\n", "            ", "self", ".", "reset", "(", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.reset": [[27, 30], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "start_time", "=", "None", "\n", "self", ".", "sum", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.__enter__": [[31, 34], ["time_meter.ElapsedTimeMeter.start"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.start"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "assert", "self", ".", "start_time", "is", "None", "\n", "self", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.__exit__": [[35, 37], ["time_meter.ElapsedTimeMeter.stop"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.stop"], ["", "def", "__exit__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "self", ".", "stop", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.parallel_map.parallel_map": [[6, 50], ["min", "enumerate", "torch.multiprocessing.cpu_count", "len", "callback", "q.put", "len", "queues.append", "indices.append", "processes.append", "processes[].start", "queues[].get", "p.join", "len", "enumerate", "sorted", "torch.multiprocessing.Queue", "torch.multiprocessing.Process", "processes.pop", "queues.pop", "indices.pop", "time.sleep", "q.empty", "processes[].join", "ended.append", "q.get"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.start", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["def", "parallel_map", "(", "tasks", ":", "Iterable", ",", "callback", "=", "Callable", "[", "[", "Any", "]", ",", "None", "]", ",", "max_parallel", ":", "int", "=", "32", ")", "->", "List", ":", "\n", "    ", "limit", "=", "min", "(", "multiprocessing", ".", "cpu_count", "(", ")", ",", "max_parallel", ")", "\n", "processes", ":", "List", "[", "multiprocessing", ".", "Process", "]", "=", "[", "]", "\n", "queues", ":", "List", "[", "multiprocessing", ".", "Queue", "]", "=", "[", "]", "\n", "indices", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "tlist", "=", "[", "t", "for", "t", "in", "tasks", "]", "\n", "res", "=", "[", "None", "]", "*", "len", "(", "tlist", ")", "\n", "curr", "=", "0", "\n", "\n", "def", "process_return", "(", "q", ",", "arg", ")", ":", "\n", "        ", "res", "=", "callback", "(", "arg", ")", "\n", "q", ".", "put", "(", "res", ")", "\n", "\n", "\n", "", "while", "curr", "<", "len", "(", "tlist", ")", ":", "\n", "        ", "if", "len", "(", "processes", ")", "==", "limit", ":", "\n", "            ", "ended", "=", "[", "]", "\n", "for", "i", ",", "q", "in", "enumerate", "(", "queues", ")", ":", "\n", "                ", "if", "not", "q", ".", "empty", "(", ")", ":", "\n", "                    ", "processes", "[", "i", "]", ".", "join", "(", ")", "\n", "ended", ".", "append", "(", "i", ")", "\n", "res", "[", "indices", "[", "i", "]", "]", "=", "q", ".", "get", "(", ")", "\n", "\n", "", "", "for", "i", "in", "sorted", "(", "ended", ",", "reverse", "=", "True", ")", ":", "\n", "                ", "processes", ".", "pop", "(", "i", ")", "\n", "queues", ".", "pop", "(", "i", ")", "\n", "indices", ".", "pop", "(", "i", ")", "\n", "\n", "", "if", "not", "ended", ":", "\n", "                ", "time", ".", "sleep", "(", "0.1", ")", "\n", "continue", "\n", "\n", "", "", "queues", ".", "append", "(", "multiprocessing", ".", "Queue", "(", ")", ")", "\n", "indices", ".", "append", "(", "curr", ")", "\n", "processes", ".", "append", "(", "multiprocessing", ".", "Process", "(", "target", "=", "process_return", ",", "args", "=", "(", "queues", "[", "-", "1", "]", ",", "tlist", "[", "curr", "]", ")", ")", ")", "\n", "processes", "[", "-", "1", "]", ".", "start", "(", ")", "\n", "\n", "curr", "+=", "1", "\n", "\n", "", "for", "i", ",", "p", "in", "enumerate", "(", "processes", ")", ":", "\n", "        ", "res", "[", "indices", "[", "i", "]", "]", "=", "queues", "[", "i", "]", ".", "get", "(", ")", "\n", "p", ".", "join", "(", ")", "\n", "\n", "", "return", "res", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.__init__": [[6, 22], ["set", "vocabulary.WordVocabulary._add_set", "vocabulary.WordVocabulary.finalize", "set", "vocabulary.WordVocabulary.split_sentence"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary._add_set", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.finalize", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.split_sentence"], ["    ", "def", "__init__", "(", "self", ",", "list_of_sentences", ":", "Optional", "[", "List", "[", "Union", "[", "str", ",", "List", "[", "str", "]", "]", "]", "]", "=", "None", ",", "allow_any_word", ":", "bool", "=", "False", ",", "\n", "split_punctuation", ":", "bool", "=", "True", ")", ":", "\n", "        ", "self", ".", "words", ":", "Dict", "[", "str", ",", "int", "]", "=", "{", "}", "\n", "self", ".", "inv_words", ":", "Dict", "[", "int", ",", "str", "]", "=", "{", "}", "\n", "self", ".", "to_save", "=", "[", "\"words\"", ",", "\"inv_words\"", ",", "\"_unk_index\"", ",", "\"allow_any_word\"", ",", "\"split_punctuation\"", "]", "\n", "self", ".", "allow_any_word", "=", "allow_any_word", "\n", "self", ".", "initialized", "=", "False", "\n", "self", ".", "split_punctuation", "=", "split_punctuation", "\n", "\n", "if", "list_of_sentences", "is", "not", "None", ":", "\n", "            ", "words", "=", "set", "(", ")", "\n", "for", "s", "in", "list_of_sentences", ":", "\n", "                ", "words", "|=", "set", "(", "self", ".", "split_sentence", "(", "s", ")", ")", "\n", "\n", "", "self", ".", "_add_set", "(", "words", ")", "\n", "self", ".", "finalize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.finalize": [[23, 29], ["vocabulary.WordVocabulary.words.get", "vocabulary.WordVocabulary.words.get"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "", "def", "finalize", "(", "self", ")", ":", "\n", "        ", "self", ".", "_unk_index", "=", "self", ".", "words", ".", "get", "(", "\"<UNK>\"", ",", "self", ".", "words", ".", "get", "(", "\"<unk>\"", ")", ")", "\n", "if", "self", ".", "allow_any_word", ":", "\n", "            ", "assert", "self", ".", "_unk_index", "is", "not", "None", "\n", "\n", "", "self", ".", "initialized", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary._add_word": [[30, 34], ["len"], "methods", ["None"], ["", "def", "_add_word", "(", "self", ",", "w", ":", "str", ")", ":", "\n", "        ", "next_id", "=", "len", "(", "self", ".", "words", ")", "\n", "self", ".", "words", "[", "w", "]", "=", "next_id", "\n", "self", ".", "inv_words", "[", "next_id", "]", "=", "w", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary._add_set": [[35, 38], ["sorted", "vocabulary.WordVocabulary._add_word"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary._add_word"], ["", "def", "_add_set", "(", "self", ",", "words", ":", "Set", "[", "str", "]", ")", ":", "\n", "        ", "for", "w", "in", "sorted", "(", "words", ")", ":", "\n", "            ", "self", ".", "_add_word", "(", "w", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary._process_word": [[39, 43], ["vocabulary.WordVocabulary.words.get"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "", "def", "_process_word", "(", "self", ",", "w", ":", "str", ")", "->", "int", ":", "\n", "        ", "res", "=", "self", ".", "words", ".", "get", "(", "w", ",", "self", ".", "_unk_index", ")", "\n", "assert", "(", "res", "!=", "self", ".", "_unk_index", ")", "or", "self", ".", "allow_any_word", ",", "f\"WARNING: unknown word: '{w}'\"", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary._process_index": [[44, 49], ["vocabulary.WordVocabulary.inv_words.get"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "def", "_process_index", "(", "self", ",", "i", ":", "int", ")", "->", "str", ":", "\n", "        ", "res", "=", "self", ".", "inv_words", ".", "get", "(", "i", ",", "None", ")", "\n", "if", "res", "is", "None", ":", "\n", "            ", "return", "f\"<!INV: {i}!>\"", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.__getitem__": [[50, 55], ["isinstance", "vocabulary.WordVocabulary._process_index", "vocabulary.WordVocabulary._process_word"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary._process_index", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary._process_word"], ["", "def", "__getitem__", "(", "self", ",", "item", ":", "Union", "[", "int", ",", "str", "]", ")", "->", "Union", "[", "str", ",", "int", "]", ":", "\n", "        ", "if", "isinstance", "(", "item", ",", "int", ")", ":", "\n", "            ", "return", "self", ".", "_process_index", "(", "item", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "_process_word", "(", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.split_sentence": [[56, 65], ["isinstance", "re.findall", "sentence.split"], "methods", ["None"], ["", "", "def", "split_sentence", "(", "self", ",", "sentence", ":", "Union", "[", "str", ",", "List", "[", "str", "]", "]", ")", "->", "List", "[", "str", "]", ":", "\n", "        ", "if", "isinstance", "(", "sentence", ",", "list", ")", ":", "\n", "# Already tokenized.", "\n", "            ", "return", "sentence", "\n", "\n", "", "if", "self", ".", "split_punctuation", ":", "\n", "            ", "return", "re", ".", "findall", "(", "r\"\\w+|[^\\w\\s]\"", ",", "sentence", ",", "re", ".", "UNICODE", ")", "\n", "", "else", ":", "\n", "            ", "return", "[", "x", "for", "x", "in", "sentence", ".", "split", "(", "\" \"", ")", "if", "x", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.sentence_to_indices": [[66, 70], ["vocabulary.WordVocabulary.split_sentence", "vocabulary.WordVocabulary._process_word"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.split_sentence", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary._process_word"], ["", "", "def", "sentence_to_indices", "(", "self", ",", "sentence", ":", "Union", "[", "str", ",", "List", "[", "str", "]", "]", ")", "->", "List", "[", "int", "]", ":", "\n", "        ", "assert", "self", ".", "initialized", "\n", "words", "=", "self", ".", "split_sentence", "(", "sentence", ")", "\n", "return", "[", "self", ".", "_process_word", "(", "w", ")", "for", "w", "in", "words", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.indices_to_sentence": [[71, 74], ["vocabulary.WordVocabulary._process_index"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary._process_index"], ["", "def", "indices_to_sentence", "(", "self", ",", "indices", ":", "List", "[", "int", "]", ")", "->", "List", "[", "str", "]", ":", "\n", "        ", "assert", "self", ".", "initialized", "\n", "return", "[", "self", ".", "_process_index", "(", "i", ")", "for", "i", "in", "indices", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.__call__": [[75, 83], ["isinstance", "isinstance", "vocabulary.WordVocabulary.sentence_to_indices", "vocabulary.WordVocabulary.indices_to_sentence", "isinstance"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.sentence_to_indices", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.indices_to_sentence"], ["", "def", "__call__", "(", "self", ",", "seq", ":", "Union", "[", "List", "[", "Union", "[", "str", ",", "int", "]", "]", ",", "str", "]", ")", "->", "List", "[", "Union", "[", "int", ",", "str", "]", "]", ":", "\n", "        ", "if", "seq", "is", "None", "or", "(", "isinstance", "(", "seq", ",", "list", ")", "and", "not", "seq", ")", ":", "\n", "            ", "return", "seq", "\n", "\n", "", "if", "isinstance", "(", "seq", ",", "str", ")", "or", "isinstance", "(", "seq", "[", "0", "]", ",", "str", ")", ":", "\n", "            ", "return", "self", ".", "sentence_to_indices", "(", "seq", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "indices_to_sentence", "(", "seq", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.__len__": [[84, 86], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "len", "(", "self", ".", "words", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.state_dict": [[87, 90], ["None"], "methods", ["None"], ["", "def", "state_dict", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "return", "{", "\n", "k", ":", "self", ".", "__dict__", "[", "k", "]", "for", "k", "in", "self", ".", "to_save", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.load_state_dict": [[92, 95], ["vocabulary.WordVocabulary.__dict__.update"], "methods", ["None"], ["", "def", "load_state_dict", "(", "self", ",", "state", ":", "Dict", "[", "str", ",", "Any", "]", ")", ":", "\n", "        ", "self", ".", "initialized", "=", "True", "\n", "self", ".", "__dict__", ".", "update", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.__add__": [[96, 102], ["vocabulary.WordVocabulary", "vocabulary.WordVocabulary._add_set", "vocabulary.WordVocabulary.finalize", "set", "set", "vocabulary.WordVocabulary.words.keys", "other.words.keys"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary._add_set", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.finalize"], ["", "def", "__add__", "(", "self", ",", "other", ")", ":", "\n", "        ", "res", "=", "WordVocabulary", "(", "allow_any_word", "=", "self", ".", "allow_any_word", "and", "other", ".", "allow_any_word", ",", "\n", "split_punctuation", "=", "self", ".", "split_punctuation", ")", "\n", "res", ".", "_add_set", "(", "set", "(", "self", ".", "words", ".", "keys", "(", ")", ")", "|", "set", "(", "other", ".", "words", ".", "keys", "(", ")", ")", ")", "\n", "res", ".", "finalize", "(", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.mapfrom": [[103, 105], ["vocabulary.WordVocabulary.words.items"], "methods", ["None"], ["", "def", "mapfrom", "(", "self", ",", "other", ")", "->", "Dict", "[", "int", ",", "int", "]", ":", "\n", "        ", "return", "{", "other", ".", "words", "[", "w", "]", ":", "i", "for", "w", ",", "i", "in", "self", ".", "words", ".", "items", "(", ")", "if", "w", "in", "other", ".", "words", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.CharVocabulary.__init__": [[108, 112], ["vocabulary.CharVocabulary.from_set"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.CharVocabulary.from_set"], ["    ", "def", "__init__", "(", "self", ",", "chars", ":", "Optional", "[", "Set", "[", "str", "]", "]", ")", ":", "\n", "        ", "self", ".", "initialized", "=", "False", "\n", "if", "chars", "is", "not", "None", ":", "\n", "            ", "self", ".", "from_set", "(", "chars", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.CharVocabulary.from_set": [[113, 118], ["list", "sorted", "enumerate", "enumerate"], "methods", ["None"], ["", "", "def", "from_set", "(", "self", ",", "chars", ":", "Set", "[", "str", "]", ")", ":", "\n", "        ", "chars", "=", "list", "(", "sorted", "(", "chars", ")", ")", "\n", "self", ".", "to_index", "=", "{", "c", ":", "i", "for", "i", ",", "c", "in", "enumerate", "(", "chars", ")", "}", "\n", "self", ".", "from_index", "=", "{", "i", ":", "c", "for", "i", ",", "c", "in", "enumerate", "(", "chars", ")", "}", "\n", "self", ".", "initialized", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.CharVocabulary.__len__": [[119, 121], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "to_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.CharVocabulary.state_dict": [[122, 125], ["set", "vocabulary.CharVocabulary.to_index.keys"], "methods", ["None"], ["", "def", "state_dict", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "return", "{", "\n", "\"chars\"", ":", "set", "(", "self", ".", "to_index", ".", "keys", "(", ")", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.CharVocabulary.load_state_dict": [[127, 129], ["vocabulary.CharVocabulary.from_set"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.CharVocabulary.from_set"], ["", "def", "load_state_dict", "(", "self", ",", "state", ":", "Dict", "[", "str", ",", "Any", "]", ")", ":", "\n", "        ", "self", ".", "from_set", "(", "state", "[", "\"chars\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.CharVocabulary.str_to_ind": [[130, 132], ["None"], "methods", ["None"], ["", "def", "str_to_ind", "(", "self", ",", "data", ":", "str", ")", "->", "List", "[", "int", "]", ":", "\n", "        ", "return", "[", "self", ".", "to_index", "[", "c", "]", "for", "c", "in", "data", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.CharVocabulary.ind_to_str": [[133, 135], ["None"], "methods", ["None"], ["", "def", "ind_to_str", "(", "self", ",", "data", ":", "List", "[", "int", "]", ")", "->", "str", ":", "\n", "        ", "return", "\"\"", ".", "join", "(", "[", "self", ".", "from_index", "[", "i", "]", "for", "i", "in", "data", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.CharVocabulary._is_string": [[136, 138], ["isinstance"], "methods", ["None"], ["", "def", "_is_string", "(", "self", ",", "i", ")", ":", "\n", "        ", "return", "isinstance", "(", "i", ",", "str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.CharVocabulary.__call__": [[139, 148], ["vocabulary.CharVocabulary._is_string", "vocabulary.CharVocabulary.str_to_ind", "vocabulary.CharVocabulary.ind_to_str", "isinstance"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.ByteVocabulary._is_string", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.CharVocabulary.str_to_ind", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.ByteVocabulary.ind_to_str"], ["", "def", "__call__", "(", "self", ",", "seq", ":", "Union", "[", "List", "[", "int", "]", ",", "str", "]", ")", "->", "Union", "[", "List", "[", "int", "]", ",", "str", "]", ":", "\n", "        ", "assert", "self", ".", "initialized", "\n", "if", "seq", "is", "None", "or", "(", "isinstance", "(", "seq", ",", "list", ")", "and", "not", "seq", ")", ":", "\n", "            ", "return", "seq", "\n", "\n", "", "if", "self", ".", "_is_string", "(", "seq", ")", ":", "\n", "            ", "return", "self", ".", "str_to_ind", "(", "seq", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "ind_to_str", "(", "seq", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.CharVocabulary.__add__": [[149, 151], ["vocabulary.CharVocabulary.__class__", "set", "set", "vocabulary.CharVocabulary.to_index.values", "other.to_index.values"], "methods", ["None"], ["", "", "def", "__add__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "self", ".", "__class__", "(", "set", "(", "self", ".", "to_index", ".", "values", "(", ")", ")", "|", "set", "(", "other", ".", "to_index", ".", "values", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.ByteVocabulary.ind_to_str": [[154, 156], ["bytearray"], "methods", ["None"], ["    ", "def", "ind_to_str", "(", "self", ",", "data", ":", "List", "[", "int", "]", ")", "->", "bytearray", ":", "\n", "        ", "return", "bytearray", "(", "[", "self", ".", "from_index", "[", "i", "]", "for", "i", "in", "data", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.ByteVocabulary._is_string": [[157, 159], ["isinstance"], "methods", ["None"], ["", "def", "_is_string", "(", "self", ",", "i", ")", ":", "\n", "        ", "return", "isinstance", "(", "i", ",", "bytearray", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.dotdict.DotDefaultDict.__getattr__": [[6, 10], ["dotdict.DotDefaultDict.get"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["    ", "def", "__getattr__", "(", "self", ",", "item", ")", ":", "\n", "        ", "if", "item", "not", "in", "self", ":", "\n", "            ", "raise", "AttributeError", "\n", "", "return", "self", ".", "get", "(", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.dotdict.DotDict.__getattr__": [[16, 20], ["dotdict.DotDict.get"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["    ", "def", "__getattr__", "(", "self", ",", "item", ")", ":", "\n", "        ", "if", "item", "not", "in", "self", ":", "\n", "            ", "raise", "AttributeError", "\n", "", "return", "self", ".", "get", "(", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.dotdict.create_recursive_dot_dict": [[25, 51], ["cls", "data.items", "k.split.split", "range", "isinstance", "target.get", "isinstance", "len", "cls"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "def", "create_recursive_dot_dict", "(", "data", ":", "Dict", "[", "str", ",", "Any", "]", ",", "cls", "=", "DotDict", ")", "->", "Union", "[", "DotDict", ",", "DotDefaultDict", "]", ":", "\n", "    ", "\"\"\"\n    Takes a dict of string keys and arbitrary values, and creates a tree of DotDicts.\n\n    The keys might contain . in which case child DotDicts are created.\n\n    :param data: Input dict with string keys potentially containing .s.\n    :param cls: Either DotDict or DotDefaultDict\n    :return: tree DotDict or DotDefaultDict where the keys are split by .\n    \"\"\"", "\n", "res", "=", "cls", "(", ")", "\n", "for", "k", ",", "v", "in", "data", ".", "items", "(", ")", ":", "\n", "        ", "k", "=", "k", ".", "split", "(", "\".\"", ")", "\n", "target", "=", "res", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "k", ")", "-", "1", ")", ":", "\n", "            ", "t2", "=", "target", ".", "get", "(", "k", "[", "i", "]", ")", "\n", "if", "t2", "is", "None", ":", "\n", "                ", "t2", "=", "cls", "(", ")", "\n", "target", "[", "k", "[", "i", "]", "]", "=", "t2", "\n", "\n", "", "assert", "isinstance", "(", "t2", ",", "cls", ")", ",", "f\"Trying to overwrite key {'.'.join(k[:i+1])}\"", "\n", "target", "=", "t2", "\n", "\n", "", "assert", "isinstance", "(", "target", ",", "cls", ")", ",", "f\"Trying to overwrite key {'.'.join(k)}\"", "\n", "target", "[", "k", "[", "-", "1", "]", "]", "=", "v", "\n", "", "return", "res", "\n", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.tensorboard.start": [[12, 42], ["shutil.which", "os.path.isfile", "[].decode", "print", "utils.process.run", "print", "utils.port.alloc", "os.path.expanduser", "print", "int", "utils.port.wait_for", "print", "utils.process.run().communicate", "utils.process.run"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.process.run", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.port.alloc", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.port.wait_for", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.process.run"], ["def", "start", "(", "log_dir", ":", "str", ",", "on_port", ":", "Optional", "[", "int", "]", "=", "None", ")", ":", "\n", "    ", "global", "port", "\n", "\n", "global", "tb_process", "\n", "if", "tb_process", "is", "not", "None", ":", "\n", "        ", "return", "\n", "\n", "", "port", "=", "utils", ".", "port", ".", "alloc", "(", ")", "if", "on_port", "is", "None", "else", "on_port", "\n", "\n", "command", "=", "shutil", ".", "which", "(", "\"tensorboard\"", ")", "\n", "if", "command", "is", "None", ":", "\n", "        ", "command", "=", "os", ".", "path", ".", "expanduser", "(", "\"~/.local/bin/tensorboard\"", ")", "\n", "\n", "", "if", "os", ".", "path", ".", "isfile", "(", "command", ")", ":", "\n", "        ", "print", "(", "\"Found tensorboard in\"", ",", "command", ")", "\n", "", "else", ":", "\n", "        ", "assert", "False", ",", "\"Tensorboard not found.\"", "\n", "\n", "", "extra_flags", "=", "\"\"", "\n", "version", "=", "process", ".", "run", "(", "\"%s --version\"", "%", "command", ",", "hide_stderr", "=", "True", ",", "stdout_mode", "=", "\"pipe\"", ")", ".", "communicate", "(", ")", "[", "0", "]", ".", "decode", "(", ")", "\n", "if", "int", "(", "version", "[", "0", "]", ")", ">", "1", ":", "\n", "        ", "extra_flags", "=", "\"--bind_all\"", "\n", "\n", "", "print", "(", "\"Starting Tensorboard server on %d\"", "%", "port", ")", "\n", "tb_process", "=", "process", ".", "run", "(", "\"%s --port %d --logdir %s %s\"", "%", "(", "command", ",", "port", ",", "log_dir", ",", "extra_flags", ")", ",", "hide_stderr", "=", "True", ",", "\n", "stdout_mode", "=", "\"hide\"", ")", "\n", "if", "not", "utils", ".", "port", ".", "wait_for", "(", "port", ")", ":", "\n", "        ", "print", "(", "\"ERROR: failed to start Tensorboard server. Server not responding.\"", ")", "\n", "return", "\n", "", "print", "(", "\"Done.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.tensorboard.kill_tb": [[43, 48], ["tb_process.kill"], "function", ["None"], ["", "def", "kill_tb", "(", ")", ":", "\n", "    ", "if", "tb_process", "is", "None", ":", "\n", "        ", "return", "\n", "\n", "", "tb_process", ".", "kill", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.CustomPlot.to_tensorboard": [[28, 30], ["None"], "methods", ["None"], ["    ", "def", "to_tensorboard", "(", "self", ",", "name", ":", "str", ",", "summary_writer", ",", "global_step", ":", "int", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.CustomPlot.to_wandb": [[31, 33], ["None"], "methods", ["None"], ["", "def", "to_wandb", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Histogram.__init__": [[36, 42], ["torch.is_tensor", "data.detach().cpu.detach().cpu.detach().cpu", "data.detach().cpu.detach().cpu.detach"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ":", "Union", "[", "torch", ".", "Tensor", ",", "np", ".", "ndarray", "]", ",", "n_bins", ":", "int", "=", "64", ")", ":", "\n", "        ", "if", "torch", ".", "is_tensor", "(", "data", ")", ":", "\n", "            ", "data", "=", "data", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "", "self", ".", "data", "=", "data", "\n", "self", ".", "n_bins", "=", "n_bins", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Histogram.to_tensorboard": [[43, 45], ["summary_writer.add_histogram"], "methods", ["None"], ["", "def", "to_tensorboard", "(", "self", ",", "name", ":", "str", ",", "summary_writer", ",", "global_step", ":", "int", ")", ":", "\n", "        ", "summary_writer", ".", "add_histogram", "(", "name", ",", "self", ".", "data", ",", "global_step", ",", "max_bins", "=", "self", ".", "n_bins", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Histogram.to_wandb": [[46, 48], ["wandb.Histogram"], "methods", ["None"], ["", "def", "to_wandb", "(", "self", ")", ":", "\n", "        ", "return", "wandb", ".", "Histogram", "(", "self", ".", "data", ",", "num_bins", "=", "self", ".", "n_bins", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Image.__init__": [[51, 57], ["torch.is_tensor", "data.detach().cpu().numpy.detach().cpu().numpy.astype", "data.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "data.detach().cpu().numpy.detach().cpu().numpy.detach().cpu", "data.detach().cpu().numpy.detach().cpu().numpy.detach"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ":", "Union", "[", "torch", ".", "Tensor", ",", "np", ".", "ndarray", "]", ",", "caption", ":", "Optional", "[", "str", "]", "=", "None", ")", ":", "\n", "        ", "if", "torch", ".", "is_tensor", "(", "data", ")", ":", "\n", "            ", "data", "=", "data", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "self", ".", "data", "=", "data", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "caption", "=", "caption", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Image.to_tensorboard": [[58, 64], ["summary_writer.add_image", "numpy.transpose"], "methods", ["None"], ["", "def", "to_tensorboard", "(", "self", ",", "name", ",", "summary_writer", ",", "global_step", ")", ":", "\n", "        ", "if", "self", ".", "data", ".", "shape", "[", "-", "1", "]", "in", "[", "1", ",", "3", "]", ":", "\n", "            ", "data", "=", "np", ".", "transpose", "(", "self", ".", "data", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "self", ".", "data", "\n", "", "summary_writer", ".", "add_image", "(", "name", ",", "data", ",", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Image.to_wandb": [[65, 73], ["PIL.Image.fromarray", "wandb.Image", "numpy.transpose", "numpy.ascontiguousarray"], "methods", ["None"], ["", "def", "to_wandb", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "data", ".", "shape", "[", "0", "]", "in", "[", "1", ",", "3", "]", ":", "\n", "            ", "data", "=", "np", ".", "transpose", "(", "self", ".", "data", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "self", ".", "data", "\n", "\n", "", "data", "=", "PIL", ".", "Image", ".", "fromarray", "(", "np", ".", "ascontiguousarray", "(", "(", "data", "*", "255.0", ")", ".", "astype", "(", "np", ".", "uint8", ")", ")", ",", "mode", "=", "\"RGB\"", ")", "\n", "return", "wandb", ".", "Image", "(", "data", ",", "caption", "=", "self", ".", "caption", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Scalars.__init__": [[76, 79], ["sorted", "plot.Scalars.values.keys", "torch.is_tensor", "v.item", "scalar_dict.items"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "scalar_dict", ":", "Dict", "[", "str", ",", "Union", "[", "torch", ".", "Tensor", ",", "np", ".", "ndarray", ",", "int", ",", "float", "]", "]", ")", ":", "\n", "        ", "self", ".", "values", "=", "{", "k", ":", "v", ".", "item", "(", ")", "if", "torch", ".", "is_tensor", "(", "v", ")", "else", "v", "for", "k", ",", "v", "in", "scalar_dict", ".", "items", "(", ")", "}", "\n", "self", ".", "leged", "=", "sorted", "(", "self", ".", "values", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Scalars.to_tensorboard": [[80, 83], ["summary_writer.add_scalars", "plot.Scalars.values.items"], "methods", ["None"], ["", "def", "to_tensorboard", "(", "self", ",", "name", ",", "summary_writer", ",", "global_step", ")", ":", "\n", "        ", "v", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "self", ".", "values", ".", "items", "(", ")", "if", "v", "==", "v", "}", "\n", "summary_writer", ".", "add_scalars", "(", "name", ",", "v", ",", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Scalars.to_wandb": [[84, 86], ["None"], "methods", ["None"], ["", "def", "to_wandb", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Scalar.__init__": [[89, 94], ["torch.is_tensor", "val.item.item.item"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "val", ":", "Union", "[", "torch", ".", "Tensor", ",", "np", ".", "ndarray", ",", "int", ",", "float", "]", ")", ":", "\n", "        ", "if", "torch", ".", "is_tensor", "(", "val", ")", ":", "\n", "            ", "val", "=", "val", ".", "item", "(", ")", "\n", "\n", "", "self", ".", "val", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Scalar.to_tensorboard": [[95, 97], ["summary_writer.add_scalar"], "methods", ["None"], ["", "def", "to_tensorboard", "(", "self", ",", "name", ",", "summary_writer", ",", "global_step", ")", ":", "\n", "        ", "summary_writer", ".", "add_scalar", "(", "name", ",", "self", ".", "val", ",", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Scalar.to_wandb": [[98, 100], ["None"], "methods", ["None"], ["", "def", "to_wandb", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.XYChart.__init__": [[103, 111], ["plot.import_matplotlib"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.import_matplotlib"], ["    ", "def", "__init__", "(", "self", ",", "data", ":", "Dict", "[", "str", ",", "List", "[", "Tuple", "[", "float", ",", "float", "]", "]", "]", ",", "markers", ":", "List", "[", "Tuple", "[", "float", ",", "float", "]", "]", "=", "[", "]", ",", "\n", "xlim", "=", "(", "None", ",", "None", ")", ",", "ylim", "=", "(", "None", ",", "None", ")", ")", ":", "\n", "        ", "import_matplotlib", "(", ")", "\n", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "xlim", "=", "xlim", "\n", "self", ".", "ylim", "=", "ylim", "\n", "self", ".", "markers", "=", "markers", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.XYChart.matplotlib_plot": [[112, 128], ["plt.figure", "list", "plt.legend", "plt.ylim", "plt.xlim", "sorted", "plt.plot", "plt.plot", "plot.XYChart.data.keys"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.plot", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.plot"], ["", "def", "matplotlib_plot", "(", "self", ")", ":", "\n", "        ", "f", "=", "plt", ".", "figure", "(", ")", "\n", "names", "=", "list", "(", "sorted", "(", "self", ".", "data", ".", "keys", "(", ")", ")", ")", "\n", "\n", "for", "n", "in", "names", ":", "\n", "            ", "plt", ".", "plot", "(", "[", "p", "[", "0", "]", "for", "p", "in", "self", ".", "data", "[", "n", "]", "]", ",", "[", "p", "[", "1", "]", "for", "p", "in", "self", ".", "data", "[", "n", "]", "]", ")", "\n", "\n", "", "if", "self", ".", "markers", ":", "\n", "            ", "plt", ".", "plot", "(", "[", "a", "[", "0", "]", "for", "a", "in", "self", ".", "markers", "]", ",", "[", "a", "[", "1", "]", "for", "a", "in", "self", ".", "markers", "]", ",", "linestyle", "=", "''", ",", "marker", "=", "'o'", ",", "\n", "markersize", "=", "2", ",", "zorder", "=", "999999", ")", "\n", "\n", "", "plt", ".", "legend", "(", "names", ")", "\n", "plt", ".", "ylim", "(", "*", "self", ".", "xlim", ")", "\n", "plt", ".", "xlim", "(", "*", "self", ".", "ylim", ")", "\n", "\n", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.XYChart.to_tensorboard": [[129, 131], ["summary_writer.add_figure", "plot.XYChart.matplotlib_plot"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.XYChart.matplotlib_plot"], ["", "def", "to_tensorboard", "(", "self", ",", "name", ",", "summary_writer", ",", "global_step", ")", ":", "\n", "        ", "summary_writer", ".", "add_figure", "(", "name", ",", "self", ".", "matplotlib_plot", "(", ")", ",", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.XYChart.to_wandb": [[132, 134], ["plot.XYChart.matplotlib_plot"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.XYChart.matplotlib_plot"], ["", "def", "to_wandb", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "matplotlib_plot", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Heatmap.__init__": [[138, 151], ["torch.is_tensor", "map.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "map.detach().cpu().numpy.detach().cpu().numpy.detach().cpu", "map.detach().cpu().numpy.detach().cpu().numpy.detach"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "map", ":", "Union", "[", "torch", ".", "Tensor", ",", "np", ".", "ndarray", "]", ",", "xlabel", ":", "str", ",", "ylabel", ":", "str", ",", "\n", "round_decimals", ":", "Optional", "[", "int", "]", "=", "None", ",", "x_marks", ":", "Optional", "[", "List", "[", "str", "]", "]", "=", "None", ",", "\n", "y_marks", ":", "Optional", "[", "List", "[", "str", "]", "]", "=", "None", ")", ":", "\n", "\n", "        ", "if", "torch", ".", "is_tensor", "(", "map", ")", ":", "\n", "            ", "map", "=", "map", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "self", ".", "round_decimals", "=", "round_decimals", "\n", "self", ".", "map", "=", "map", "\n", "self", ".", "xlabel", "=", "xlabel", "\n", "self", ".", "ylabel", "=", "ylabel", "\n", "self", ".", "x_marks", "=", "x_marks", "\n", "self", ".", "y_marks", "=", "y_marks", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Heatmap.to_matplotlib": [[152, 182], ["plt.subplots", "plt.imshow", "plt.xticks", "plt.yticks", "itertools.product", "plt.ylabel", "plt.xlabel", "make_axes_locatable", "make_axes_locatable.append_axes", "plt.colorbar", "plt.tight_layout", "len", "len", "numpy.arange", "numpy.arange", "plot.Heatmap.map.max", "numpy.around", "range", "range", "plt.text", "str", "str", "range", "range"], "methods", ["None"], ["", "def", "to_matplotlib", "(", "self", ")", ":", "\n", "        ", "figure", ",", "ax", "=", "plt", ".", "subplots", "(", "figsize", "=", "(", "self", ".", "map", ".", "shape", "[", "0", "]", "*", "0.25", "+", "2", ",", "self", ".", "map", ".", "shape", "[", "1", "]", "*", "0.15", "+", "1.5", ")", ")", "\n", "im", "=", "plt", ".", "imshow", "(", "self", ".", "map", ",", "interpolation", "=", "'nearest'", ",", "cmap", "=", "plt", ".", "cm", ".", "Blues", ",", "aspect", "=", "'auto'", ")", "\n", "\n", "x_marks", "=", "self", ".", "x_marks", "if", "self", ".", "x_marks", "is", "not", "None", "else", "[", "str", "(", "i", ")", "for", "i", "in", "range", "(", "self", ".", "map", ".", "shape", "[", "1", "]", ")", "]", "\n", "assert", "len", "(", "x_marks", ")", "==", "self", ".", "map", ".", "shape", "[", "1", "]", "\n", "\n", "y_marks", "=", "self", ".", "y_marks", "if", "self", ".", "y_marks", "is", "not", "None", "else", "[", "str", "(", "i", ")", "for", "i", "in", "range", "(", "self", ".", "map", ".", "shape", "[", "0", "]", ")", "]", "\n", "assert", "len", "(", "y_marks", ")", "==", "self", ".", "map", ".", "shape", "[", "0", "]", "\n", "\n", "plt", ".", "xticks", "(", "np", ".", "arange", "(", "self", ".", "map", ".", "shape", "[", "1", "]", ")", ",", "x_marks", ",", "rotation", "=", "45", ",", "fontsize", "=", "8", ",", "ha", "=", "\"right\"", ",", "rotation_mode", "=", "\"anchor\"", ")", "\n", "plt", ".", "yticks", "(", "np", ".", "arange", "(", "self", ".", "map", ".", "shape", "[", "0", "]", ")", ",", "y_marks", ",", "fontsize", "=", "8", ")", "\n", "\n", "# Use white text if squares are dark; otherwise black.", "\n", "threshold", "=", "self", ".", "map", ".", "max", "(", ")", "/", "2.", "\n", "\n", "rmap", "=", "np", ".", "around", "(", "self", ".", "map", ",", "decimals", "=", "self", ".", "round_decimals", ")", "if", "self", ".", "round_decimals", "is", "not", "None", "else", "self", ".", "map", "\n", "for", "i", ",", "j", "in", "itertools", ".", "product", "(", "range", "(", "self", ".", "map", ".", "shape", "[", "0", "]", ")", ",", "range", "(", "self", ".", "map", ".", "shape", "[", "1", "]", ")", ")", ":", "\n", "            ", "color", "=", "\"white\"", "if", "self", ".", "map", "[", "i", ",", "j", "]", ">", "threshold", "else", "\"black\"", "\n", "plt", ".", "text", "(", "j", ",", "i", ",", "rmap", "[", "i", ",", "j", "]", ",", "ha", "=", "\"center\"", ",", "va", "=", "\"center\"", ",", "color", "=", "color", ",", "fontsize", "=", "8", ")", "\n", "\n", "", "plt", ".", "ylabel", "(", "self", ".", "ylabel", ")", "\n", "plt", ".", "xlabel", "(", "self", ".", "xlabel", ")", "\n", "\n", "divider", "=", "make_axes_locatable", "(", "ax", ")", "\n", "cax", "=", "divider", ".", "append_axes", "(", "\"right\"", ",", "size", "=", "0.25", ",", "pad", "=", "0.1", ")", "\n", "plt", ".", "colorbar", "(", "im", ",", "cax", ")", "\n", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "return", "figure", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Heatmap.to_tensorboard": [[183, 185], ["summary_writer.add_figure", "plot.Heatmap.to_matplotlib"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Heatmap.to_matplotlib"], ["", "def", "to_tensorboard", "(", "self", ",", "name", ",", "summary_writer", ",", "global_step", ")", ":", "\n", "        ", "summary_writer", ".", "add_figure", "(", "name", ",", "self", ".", "to_matplotlib", "(", ")", ",", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Heatmap.to_wandb": [[186, 188], ["wandb.Image", "plot.Heatmap.to_matplotlib"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Heatmap.to_matplotlib"], ["", "def", "to_wandb", "(", "self", ")", ":", "\n", "        ", "return", "wandb", ".", "Image", "(", "self", ".", "to_matplotlib", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.ConfusionMatrix.__init__": [[191, 205], ["torch.is_tensor", "numpy.transpose", "plot.Heatmap.__init__", "map.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "map.detach().cpu().numpy.detach().cpu().numpy.astype", "map.detach().cpu().numpy.detach().cpu().numpy.sum().clip", "map.detach().cpu().numpy.detach().cpu().numpy.detach().cpu", "map.detach().cpu().numpy.detach().cpu().numpy.sum", "map.detach().cpu().numpy.detach().cpu().numpy.detach"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["    ", "def", "__init__", "(", "self", ",", "map", ":", "Union", "[", "torch", ".", "Tensor", ",", "np", ".", "ndarray", "]", ",", "class_names", ":", "Optional", "[", "List", "[", "str", "]", "]", "=", "None", ",", "\n", "x_marks", ":", "Optional", "[", "List", "[", "str", "]", "]", "=", "None", ",", "y_marks", ":", "Optional", "[", "List", "[", "str", "]", "]", "=", "None", ")", ":", "\n", "\n", "        ", "if", "torch", ".", "is_tensor", "(", "map", ")", ":", "\n", "            ", "map", "=", "map", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "map", "=", "np", ".", "transpose", "(", "map", ",", "(", "1", ",", "0", ")", ")", "\n", "map", "=", "map", ".", "astype", "(", "'float'", ")", "/", "map", ".", "sum", "(", "axis", "=", "1", ")", ".", "clip", "(", "1e-6", ",", "None", ")", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "\n", "if", "class_names", "is", "not", "None", ":", "\n", "            ", "assert", "x_marks", "is", "None", "and", "y_marks", "is", "None", "\n", "x_marks", "=", "y_marks", "=", "class_names", "\n", "\n", "", "super", "(", ")", ".", "__init__", "(", "map", ",", "\"predicted\"", ",", "\"real\"", ",", "round_decimals", "=", "2", ",", "x_marks", "=", "x_marks", ",", "y_marks", "=", "y_marks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.TextTable.__init__": [[208, 211], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "header", ":", "List", "[", "str", "]", ",", "data", ":", "List", "[", "List", "[", "str", "]", "]", ")", ":", "\n", "        ", "self", ".", "header", "=", "header", "\n", "self", ".", "data", "=", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.TextTable.to_markdown": [[212, 216], ["x.replace"], "methods", ["None"], ["", "def", "to_markdown", "(", "self", ")", ":", "\n", "        ", "res", "=", "\" | \"", ".", "join", "(", "self", ".", "header", ")", "+", "\"\\n\"", "\n", "res", "+=", "\" | \"", ".", "join", "(", "\"---\"", "for", "_", "in", "self", ".", "header", ")", "+", "\"\\n\"", "\n", "return", "res", "+", "\"\\n\"", ".", "join", "(", "[", "\" | \"", ".", "join", "(", "[", "x", ".", "replace", "(", "\"|\"", ",", "\"&#124;\"", ")", "for", "x", "in", "l", "]", ")", "for", "l", "in", "self", ".", "data", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.TextTable.to_tensorboard": [[217, 219], ["summary_writer.add_text", "plot.TextTable.to_markdown"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.TextTable.to_markdown"], ["", "def", "to_tensorboard", "(", "self", ",", "name", ",", "summary_writer", ",", "global_step", ")", ":", "\n", "        ", "summary_writer", ".", "add_text", "(", "name", ",", "self", ".", "to_markdown", "(", ")", ",", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.TextTable.to_wandb": [[220, 222], ["wandb.Table"], "methods", ["None"], ["", "def", "to_wandb", "(", "self", ")", ":", "\n", "        ", "return", "wandb", ".", "Table", "(", "data", "=", "self", ".", "data", ",", "columns", "=", "self", ".", "header", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.PlotAsync.worker": [[225, 232], ["fn"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "worker", "(", "self", ",", "fn", ",", "*", "args", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "self", ".", "result", "=", "fn", "(", "*", "args", ")", "\n", "", "except", ":", "\n", "            ", "self", ".", "failed", "=", "True", "\n", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.PlotAsync.__init__": [[233, 241], ["utils.U.apply_to_tensors", "threading.Thread", "plot.PlotAsync.thread.start", "x.detach().cpu().clone", "x.detach().cpu", "x.detach"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.universal.apply_to_tensors", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.start", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.clone"], ["", "", "def", "__init__", "(", "self", ",", "fn", ":", "Callable", "[", "[", "any", "]", ",", "Dict", "[", "str", ",", "any", "]", "]", ",", "args", ":", "Tuple", "=", "(", ")", ")", ":", "\n", "        ", "self", ".", "result", "=", "None", "\n", "self", ".", "failed", "=", "False", "\n", "\n", "args", "=", "U", ".", "apply_to_tensors", "(", "args", ",", "lambda", "x", ":", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "clone", "(", ")", ")", "\n", "\n", "self", ".", "thread", "=", "threading", ".", "Thread", "(", "target", "=", "self", ".", "worker", ",", "args", "=", "(", "self", ",", "fn", ",", "*", "args", ")", ")", "\n", "self", ".", "thread", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.PlotAsync.get": [[242, 248], ["plot.PlotAsync.thread.join"], "methods", ["None"], ["", "def", "get", "(", "self", ",", "wait", ":", "bool", ")", "->", "Optional", "[", "Dict", "[", "str", ",", "any", "]", "]", ":", "\n", "        ", "if", "(", "self", ".", "result", "is", "None", "and", "not", "wait", ")", "or", "self", ".", "failed", ":", "\n", "            ", "return", "None", "\n", "\n", "", "self", ".", "thread", ".", "join", "(", ")", "\n", "return", "self", ".", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Logger.parse_switch_string": [[251, 270], ["s.split.split.lower", "s.split.split.split"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "parse_switch_string", "(", "s", ":", "str", ")", "->", "Tuple", "[", "bool", ",", "bool", "]", ":", "\n", "        ", "s", "=", "s", ".", "lower", "(", ")", "\n", "if", "s", "==", "\"all\"", ":", "\n", "            ", "return", "True", ",", "True", "\n", "", "elif", "s", "==", "\"none\"", ":", "\n", "            ", "return", "False", ",", "False", "\n", "\n", "", "use_tb", ",", "use_wandb", "=", "False", ",", "False", "\n", "s", "=", "s", ".", "split", "(", "\",\"", ")", "\n", "for", "p", "in", "s", ":", "\n", "            ", "if", "p", "==", "\"tb\"", ":", "\n", "                ", "use_tb", "=", "True", "\n", "", "elif", "p", "==", "\"wandb\"", ":", "\n", "                ", "use_wandb", "=", "True", "\n", "", "else", ":", "\n", "                ", "assert", "False", ",", "\"Invalid visualization switch: %s\"", "%", "p", "\n", "\n", "", "", "return", "use_tb", ",", "use_wandb", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Logger.create_loggers": [[271, 298], ["os.makedirs", "os.path.join", "wandb.init", "bool", "wandb.config.update", "os.path.join", "os.makedirs", "torch.utils.tensorboard.writer.SummaryWriter"], "methods", ["None"], ["", "def", "create_loggers", "(", "self", ")", ":", "\n", "        ", "self", ".", "is_sweep", "=", "False", "\n", "self", ".", "wandb_id", "=", "{", "}", "\n", "global", "wandb", "\n", "\n", "if", "self", ".", "use_wandb", ":", "\n", "            ", "import", "wandb", "\n", "wandb", ".", "init", "(", "**", "self", ".", "wandb_init_args", ")", "\n", "self", ".", "wandb_id", "=", "{", "\n", "\"sweep_id\"", ":", "wandb", ".", "run", ".", "sweep_id", ",", "\n", "\"run_id\"", ":", "wandb", ".", "run", ".", "id", "\n", "}", "\n", "self", ".", "is_sweep", "=", "bool", "(", "wandb", ".", "run", ".", "sweep_id", ")", "\n", "wandb", ".", "config", "[", "\"is_sweep\"", "]", "=", "self", ".", "is_sweep", "\n", "wandb", ".", "config", ".", "update", "(", "self", ".", "wandb_extra_config", ")", "\n", "\n", "self", ".", "save_dir", "=", "os", ".", "path", ".", "join", "(", "wandb", ".", "run", ".", "dir", ")", "\n", "\n", "", "os", ".", "makedirs", "(", "self", ".", "save_dir", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "tb_logdir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "\"tensorboard\"", ")", "\n", "\n", "if", "self", ".", "use_tb", ":", "\n", "            ", "from", "torch", ".", "utils", ".", "tensorboard", "import", "SummaryWriter", "\n", "os", ".", "makedirs", "(", "self", ".", "tb_logdir", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "summary_writer", "=", "SummaryWriter", "(", "log_dir", "=", "self", ".", "tb_logdir", ",", "flush_secs", "=", "30", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "summary_writer", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Logger.__init__": [[299, 314], ["plot.import_matplotlib", "plot.Logger.create_loggers"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.import_matplotlib", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.create_loggers"], ["", "", "def", "__init__", "(", "self", ",", "save_dir", ":", "Optional", "[", "str", "]", "=", "None", ",", "use_tb", ":", "bool", "=", "False", ",", "use_wandb", ":", "bool", "=", "False", ",", "\n", "get_global_step", ":", "Optional", "[", "Callable", "[", "[", "]", ",", "int", "]", "]", "=", "None", ",", "wandb_init_args", "=", "{", "}", ",", "wandb_extra_config", "=", "{", "}", ")", ":", "\n", "        ", "global", "plt", "\n", "global", "wandb", "\n", "\n", "import_matplotlib", "(", ")", "\n", "\n", "self", ".", "use_wandb", "=", "use_wandb", "\n", "self", ".", "use_tb", "=", "use_tb", "\n", "self", ".", "save_dir", "=", "save_dir", "\n", "self", ".", "get_global_step", "=", "get_global_step", "\n", "self", ".", "wandb_init_args", "=", "wandb_init_args", "\n", "self", ".", "wandb_extra_config", "=", "wandb_extra_config", "\n", "\n", "self", ".", "create_loggers", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Logger.flatten_dict": [[315, 325], ["dict_of_elems.items", "isinstance", "plot.Logger.flatten_dict", "plot.Logger.items"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Logger.flatten_dict"], ["", "def", "flatten_dict", "(", "self", ",", "dict_of_elems", ":", "Dict", ")", "->", "Dict", ":", "\n", "        ", "res", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "dict_of_elems", ".", "items", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "v", ",", "dict", ")", ":", "\n", "                ", "v", "=", "self", ".", "flatten_dict", "(", "v", ")", "\n", "for", "k2", ",", "v2", "in", "v", ".", "items", "(", ")", ":", "\n", "                    ", "res", "[", "k", "+", "\"/\"", "+", "k2", "]", "=", "v2", "\n", "", "", "else", ":", "\n", "                ", "res", "[", "k", "]", "=", "v", "\n", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Logger.get_step": [[326, 331], ["plot.Logger.get_global_step"], "methods", ["None"], ["", "def", "get_step", "(", "self", ",", "step", ":", "Optional", "[", "int", "]", "=", "None", ")", "->", "Optional", "[", "int", "]", ":", "\n", "        ", "if", "step", "is", "None", "and", "self", ".", "get_global_step", "is", "not", "None", ":", "\n", "            ", "step", "=", "self", ".", "get_global_step", "(", ")", "\n", "\n", "", "return", "step", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Logger.log": [[332, 346], ["plot.Logger.log_dict", "isinstance", "d.update", "isinstance", "p.get"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Logger.log_dict", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "def", "log", "(", "self", ",", "plotlist", ":", "Union", "[", "List", ",", "Dict", ",", "PlotAsync", "]", ",", "step", ":", "Optional", "[", "int", "]", "=", "None", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "plotlist", ",", "list", ")", ":", "\n", "            ", "plotlist", "=", "[", "plotlist", "]", "\n", "\n", "", "plotlist", "=", "[", "p", ".", "get", "(", "True", ")", "if", "isinstance", "(", "p", ",", "PlotAsync", ")", "else", "p", "for", "p", "in", "plotlist", "if", "p", "]", "\n", "plotlist", "=", "[", "p", "for", "p", "in", "plotlist", "if", "p", "]", "\n", "if", "not", "plotlist", ":", "\n", "            ", "return", "\n", "\n", "", "d", "=", "{", "}", "\n", "for", "p", "in", "plotlist", ":", "\n", "            ", "d", ".", "update", "(", "p", ")", "\n", "\n", "", "self", ".", "log_dict", "(", "d", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Logger.log_dict": [[347, 387], ["plot.Logger.flatten_dict", "plot.Logger.get_step", "plot.Logger.items", "wandb.log", "plot.Logger.items", "v.to_wandb.to_wandb.item", "plot.Logger.items", "isinstance", "plot.Scalar", "plot.Logger.items", "isinstance", "isinstance", "torch.is_tensor", "v.to_wandb.to_wandb.to_wandb", "isinstance", "isinstance", "v.to_wandb.to_wandb.to_tensorboard", "isinstance", "v.to_wandb.to_wandb.nelement", "v.to_wandb.to_wandb.items", "plot.Logger.summary_writer.add_figure", "type", "type"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Logger.flatten_dict", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Logger.get_step", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.log", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.TextTable.to_wandb", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.TextTable.to_tensorboard"], ["", "def", "log_dict", "(", "self", ",", "dict_of_elems", ":", "Dict", ",", "step", ":", "Optional", "[", "int", "]", "=", "None", ")", ":", "\n", "        ", "dict_of_elems", "=", "self", ".", "flatten_dict", "(", "dict_of_elems", ")", "\n", "\n", "if", "not", "dict_of_elems", ":", "\n", "            ", "return", "\n", "\n", "", "dict_of_elems", "=", "{", "k", ":", "v", ".", "item", "(", ")", "if", "torch", ".", "is_tensor", "(", "v", ")", "and", "v", ".", "nelement", "(", ")", "==", "1", "else", "v", "for", "k", ",", "v", "in", "dict_of_elems", ".", "items", "(", ")", "}", "\n", "dict_of_elems", "=", "{", "k", ":", "Scalar", "(", "v", ")", "if", "isinstance", "(", "v", ",", "(", "int", ",", "float", ")", ")", "else", "v", "for", "k", ",", "v", "in", "dict_of_elems", ".", "items", "(", ")", "}", "\n", "\n", "step", "=", "self", ".", "get_step", "(", "step", ")", "\n", "\n", "if", "self", ".", "use_wandb", ":", "\n", "            ", "wandbdict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "dict_of_elems", ".", "items", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "v", ",", "CustomPlot", ")", ":", "\n", "                    ", "v", "=", "v", ".", "to_wandb", "(", ")", "\n", "if", "v", "is", "None", ":", "\n", "                        ", "continue", "\n", "\n", "", "if", "isinstance", "(", "v", ",", "dict", ")", ":", "\n", "                        ", "for", "k2", ",", "v2", "in", "v", ".", "items", "(", ")", ":", "\n", "                            ", "wandbdict", "[", "k", "+", "\"/\"", "+", "k2", "]", "=", "v2", "\n", "", "", "else", ":", "\n", "                        ", "wandbdict", "[", "k", "]", "=", "v", "\n", "", "", "elif", "isinstance", "(", "v", ",", "plt", ".", "Figure", ")", ":", "\n", "                    ", "wandbdict", "[", "k", "]", "=", "v", "\n", "", "else", ":", "\n", "                    ", "assert", "False", ",", "f\"Invalid data type {type(v)}\"", "\n", "\n", "", "", "wandbdict", "[", "\"iteration\"", "]", "=", "step", "\n", "wandb", ".", "log", "(", "wandbdict", ")", "\n", "\n", "", "if", "self", ".", "summary_writer", "is", "not", "None", ":", "\n", "            ", "for", "k", ",", "v", "in", "dict_of_elems", ".", "items", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "v", ",", "CustomPlot", ")", ":", "\n", "                    ", "v", ".", "to_tensorboard", "(", "k", ",", "self", ".", "summary_writer", ",", "step", ")", "\n", "", "elif", "isinstance", "(", "v", ",", "plt", ".", "Figure", ")", ":", "\n", "                    ", "self", ".", "summary_writer", ".", "add_figure", "(", "k", ",", "v", ",", "step", ")", "\n", "", "else", ":", "\n", "                    ", "assert", "False", ",", "f\"Unsupported type {type(v)} for entry {k}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Logger.__call__": [[388, 390], ["plot.Logger.log"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.log"], ["", "", "", "", "def", "__call__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "log", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Logger.flush": [[391, 393], ["None"], "methods", ["None"], ["", "def", "flush", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.Logger.finish": [[394, 396], ["None"], "methods", ["None"], ["", "def", "finish", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.log_fn": [[399, 426], ["plot.AsyncLogger._super_create_loggers", "plot.AsyncLogger.resposne_queue.put", "print", "stop_event.set", "print", "plot.AsyncLogger._super_log", "plot.AsyncLogger.resposne_queue.put", "print", "wandb.join", "plot.AsyncLogger.draw_queue.get", "stop_event.is_set"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["    ", "@", "staticmethod", "\n", "def", "log_fn", "(", "self", ",", "stop_event", ":", "Event", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "self", ".", "_super_create_loggers", "(", ")", "\n", "self", ".", "resposne_queue", ".", "put", "(", "{", "k", ":", "self", ".", "__dict__", "[", "k", "]", "for", "k", "in", "[", "\"save_dir\"", ",", "\"tb_logdir\"", ",", "\"is_sweep\"", "]", "}", ")", "\n", "\n", "while", "True", ":", "\n", "                ", "try", ":", "\n", "                    ", "cmd", "=", "self", ".", "draw_queue", ".", "get", "(", "True", ",", "0.1", ")", "\n", "", "except", "EmptyQueue", ":", "\n", "                    ", "if", "stop_event", ".", "is_set", "(", ")", ":", "\n", "                        ", "break", "\n", "", "else", ":", "\n", "                        ", "continue", "\n", "\n", "", "", "self", ".", "_super_log", "(", "*", "cmd", ")", "\n", "self", ".", "resposne_queue", ".", "put", "(", "True", ")", "\n", "", "", "except", ":", "\n", "            ", "print", "(", "\"Logger process crashed.\"", ")", "\n", "raise", "\n", "", "finally", ":", "\n", "            ", "print", "(", "\"Logger: syncing\"", ")", "\n", "if", "self", ".", "use_wandb", ":", "\n", "                ", "wandb", ".", "join", "(", ")", "\n", "\n", "", "stop_event", ".", "set", "(", ")", "\n", "print", "(", "\"Logger process terminating...\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.create_loggers": [[427, 434], ["torch.multiprocessing.Event", "torch.multiprocessing.Process", "plot.AsyncLogger.proc.start", "atexit.register"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.start", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.register"], ["", "", "def", "create_loggers", "(", "self", ")", ":", "\n", "        ", "self", ".", "_super_create_loggers", "=", "super", "(", ")", ".", "create_loggers", "\n", "self", ".", "stop_event", "=", "Event", "(", ")", "\n", "self", ".", "proc", "=", "Process", "(", "target", "=", "self", ".", "log_fn", ",", "args", "=", "(", "self", ",", "self", ".", "stop_event", ")", ")", "\n", "self", ".", "proc", ".", "start", "(", ")", "\n", "\n", "atexit", ".", "register", "(", "self", ".", "finish", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.__init__": [[435, 446], ["torch.multiprocessing.Queue", "torch.multiprocessing.Queue", "plot.Logger.__init__", "plot.AsyncLogger.__dict__.update", "plot.AsyncLogger.resposne_queue.get"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "queue", "=", "[", "]", "\n", "\n", "self", ".", "draw_queue", "=", "Queue", "(", ")", "\n", "self", ".", "resposne_queue", "=", "Queue", "(", ")", "\n", "self", ".", "_super_log", "=", "super", "(", ")", ".", "log", "\n", "self", ".", "waiting", "=", "0", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "__dict__", ".", "update", "(", "self", ".", "resposne_queue", ".", "get", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.log": [[447, 461], ["plot.AsyncLogger.stop_event.is_set", "utils.U.apply_to_tensors", "plot.AsyncLogger.queue.append", "plot.AsyncLogger.flush", "isinstance", "x.detach().cpu", "x.detach"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.universal.apply_to_tensors", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.flush"], ["", "def", "log", "(", "self", ",", "plotlist", ",", "step", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "stop_event", ".", "is_set", "(", ")", ":", "\n", "            ", "return", "\n", "\n", "", "if", "not", "isinstance", "(", "plotlist", ",", "list", ")", ":", "\n", "            ", "plotlist", "=", "[", "plotlist", "]", "\n", "\n", "", "plotlist", "=", "[", "p", "for", "p", "in", "plotlist", "if", "p", "]", "\n", "if", "not", "plotlist", ":", "\n", "            ", "return", "\n", "\n", "", "plotlist", "=", "U", ".", "apply_to_tensors", "(", "plotlist", ",", "lambda", "x", ":", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", "\n", "self", ".", "queue", ".", "append", "(", "(", "plotlist", ",", "step", ")", ")", "\n", "self", ".", "flush", "(", "wait", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.enqueue": [[462, 465], ["plot.AsyncLogger.draw_queue.put"], "methods", ["None"], ["", "def", "enqueue", "(", "self", ",", "data", ",", "step", ":", "Optional", "[", "int", "]", ")", ":", "\n", "        ", "self", ".", "draw_queue", ".", "put", "(", "(", "data", ",", "step", ")", ")", "\n", "self", ".", "waiting", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.wait_logger": [[466, 483], ["cond", "plot.AsyncLogger.resposne_queue.empty", "print", "plot.AsyncLogger.stop_event.is_set", "sys.stdout.write", "sys.stdout.flush", "plot.AsyncLogger.resposne_queue.get", "plot.AsyncLogger.resposne_queue.empty"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.flush", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "def", "wait_logger", "(", "self", ",", "wait", "=", "False", ")", ":", "\n", "        ", "cond", "=", "(", "lambda", ":", "not", "self", ".", "resposne_queue", ".", "empty", "(", ")", ")", "if", "not", "wait", "else", "(", "lambda", ":", "self", ".", "waiting", ">", "0", ")", "\n", "already_printed", "=", "False", "\n", "while", "cond", "(", ")", "and", "not", "self", ".", "stop_event", ".", "is_set", "(", ")", ":", "\n", "            ", "will_wait", "=", "self", ".", "resposne_queue", ".", "empty", "(", ")", "\n", "if", "will_wait", "and", "not", "already_printed", ":", "\n", "                ", "already_printed", "=", "True", "\n", "sys", ".", "stdout", ".", "write", "(", "\"Warning: waiting for logger... \"", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "", "try", ":", "\n", "                ", "self", ".", "resposne_queue", ".", "get", "(", "True", ",", "0.2", ")", "\n", "", "except", "EmptyQueue", ":", "\n", "                ", "continue", "\n", "", "self", ".", "waiting", "-=", "1", "\n", "\n", "", "if", "already_printed", ":", "\n", "            ", "print", "(", "\"done.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.flush": [[484, 508], ["plot.AsyncLogger.wait_logger", "enumerate", "plot.AsyncLogger.queue.pop", "plot.AsyncLogger.enqueue", "isinstance", "p.get", "print", "plot.AsyncLogger.wait_logger", "plot.AsyncLogger.stop_event.set", "plot.AsyncLogger.proc.join"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.wait_logger", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.enqueue", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.wait_logger"], ["", "", "def", "flush", "(", "self", ",", "wait", ":", "bool", "=", "True", ")", ":", "\n", "        ", "while", "self", ".", "queue", ":", "\n", "            ", "plotlist", ",", "step", "=", "self", ".", "queue", "[", "0", "]", "\n", "\n", "for", "i", ",", "p", "in", "enumerate", "(", "plotlist", ")", ":", "\n", "                ", "if", "isinstance", "(", "p", ",", "PlotAsync", ")", ":", "\n", "                    ", "res", "=", "p", ".", "get", "(", "wait", ")", "\n", "if", "res", "is", "not", "None", ":", "\n", "                        ", "plotlist", "[", "i", "]", "=", "res", "\n", "", "else", ":", "\n", "                        ", "if", "wait", ":", "\n", "                            ", "assert", "p", ".", "failed", "\n", "# Exception in the worker thread", "\n", "print", "(", "\"Exception detected in a PlotAsync object. Syncing logger and ignoring further plots.\"", ")", "\n", "self", ".", "wait_logger", "(", "True", ")", "\n", "self", ".", "stop_event", ".", "set", "(", ")", "\n", "self", ".", "proc", ".", "join", "(", ")", "\n", "\n", "", "return", "\n", "\n", "", "", "", "self", ".", "queue", ".", "pop", "(", "0", ")", "\n", "self", ".", "enqueue", "(", "plotlist", ",", "step", ")", "\n", "\n", "", "self", ".", "wait_logger", "(", "wait", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.finish": [[509, 516], ["plot.AsyncLogger.stop_event.is_set", "plot.AsyncLogger.flush", "plot.AsyncLogger.stop_event.set", "plot.AsyncLogger.proc.join"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.flush"], ["", "def", "finish", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "stop_event", ".", "is_set", "(", ")", ":", "\n", "            ", "return", "\n", "\n", "", "self", ".", "flush", "(", "True", ")", "\n", "self", ".", "stop_event", ".", "set", "(", ")", "\n", "self", ".", "proc", ".", "join", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.import_matplotlib": [[20, 25], ["None"], "function", ["None"], ["def", "import_matplotlib", "(", ")", ":", "\n", "    ", "global", "plt", "\n", "global", "make_axes_locatable", "\n", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "from", "mpl_toolkits", ".", "axes_grid1", "import", "make_axes_locatable", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.layers.positional_encoding.PositionalEncoding.__init__": [[35, 46], ["super().__init__", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "pe.unsqueeze.unsqueeze.unsqueeze", "positional_encoding.PositionalEncoding.register_buffer", "positional_encoding.sinusoidal_pos_embedding"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.layers.positional_encoding.sinusoidal_pos_embedding"], ["def", "__init__", "(", "self", ",", "d_model", ":", "int", ",", "dropout", ":", "float", "=", "0.1", ",", "max_len", ":", "int", "=", "5000", ",", "batch_first", ":", "bool", "=", "False", ",", "\n", "scale", ":", "float", "=", "1", ")", ":", "\n", "        ", "super", "(", "PositionalEncoding", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "torch", ".", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "\n", "pe", "=", "sinusoidal_pos_embedding", "(", "d_model", ",", "max_len", ",", "0", ")", "*", "scale", "\n", "\n", "self", ".", "batch_dim", "=", "0", "if", "batch_first", "else", "1", "\n", "pe", "=", "pe", ".", "unsqueeze", "(", "self", ".", "batch_dim", ")", "\n", "\n", "self", ".", "register_buffer", "(", "'pe'", ",", "pe", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.layers.positional_encoding.PositionalEncoding.get": [[47, 49], ["positional_encoding.PositionalEncoding.pe.narrow"], "methods", ["None"], ["", "def", "get", "(", "self", ",", "n", ":", "int", ",", "offset", ":", "int", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "return", "self", ".", "pe", ".", "narrow", "(", "1", "-", "self", ".", "batch_dim", ",", "start", "=", "offset", ",", "length", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.layers.positional_encoding.PositionalEncoding.forward": [[50, 53], ["positional_encoding.PositionalEncoding.dropout", "positional_encoding.PositionalEncoding.get", "x.size"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.size"], ["", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "offset", ":", "int", "=", "0", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "x", "=", "x", "+", "self", ".", "get", "(", "x", ".", "size", "(", "1", "-", "self", ".", "batch_dim", ")", ",", "offset", ")", "\n", "return", "self", ".", "dropout", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.layers.positional_encoding.sinusoidal_pos_embedding": [[7, 15], ["torch.zeros", "torch.zeros", "torch.exp", "torch.exp", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "math.log"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.log"], ["def", "sinusoidal_pos_embedding", "(", "d_model", ":", "int", ",", "max_len", ":", "int", "=", "5000", ",", "pos_offset", ":", "int", "=", "0", ",", "\n", "device", ":", "Optional", "[", "torch", ".", "device", "]", "=", "None", ")", ":", "\n", "    ", "pe", "=", "torch", ".", "zeros", "(", "max_len", ",", "d_model", ",", "device", "=", "device", ")", "\n", "position", "=", "torch", ".", "arange", "(", "0", ",", "max_len", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", ".", "unsqueeze", "(", "1", ")", "+", "pos_offset", "\n", "div_term", "=", "torch", ".", "exp", "(", "torch", ".", "arange", "(", "0", ",", "d_model", ",", "2", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", "*", "(", "-", "math", ".", "log", "(", "10000.0", ")", "/", "d_model", ")", ")", "\n", "pe", "[", ":", ",", "0", ":", ":", "2", "]", "=", "torch", ".", "sin", "(", "position", "*", "div_term", ")", "\n", "pe", "[", ":", ",", "1", ":", ":", "2", "]", "=", "torch", ".", "cos", "(", "position", "*", "div_term", ")", "\n", "return", "pe", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.layers.cross_entropy_label_smoothing.cross_entropy": [[7, 50], ["target.flatten().long", "input.flatten", "torch.log_softmax", "F.log_softmax.gather().squeeze", "torch.cross_entropy", "F.log_softmax.sum", "torch.where", "torch.where", "tmask.float().sum", "target.flatten().long.nelement", "torch.where.view_as", "target.flatten", "torch.where.view_as", "F.log_softmax.gather", "torch.zeros", "torch.zeros", "target.flatten().long.unsqueeze", "math.log", "math.log", "tmask.float", "torch.where.sum", "torch.where.sum"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.layers.cross_entropy_label_smoothing.cross_entropy", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.log", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.log"], ["def", "cross_entropy", "(", "input", ":", "torch", ".", "Tensor", ",", "target", ":", "torch", ".", "Tensor", ",", "reduction", ":", "str", "=", "\"mean\"", ",", "smoothing", ":", "float", "=", "0", ",", "\n", "ignore_index", ":", "Optional", "[", "int", "]", "=", "None", ")", "->", "torch", ".", "Tensor", ":", "\n", "\n", "# Flatten inputs to 2D", "\n", "    ", "t2", "=", "target", ".", "flatten", "(", ")", ".", "long", "(", ")", "\n", "i2", "=", "input", ".", "flatten", "(", "end_dim", "=", "-", "2", ")", "\n", "\n", "# If no smoothing, use built-in cross_entropy loss", "\n", "if", "smoothing", "==", "0", ":", "\n", "        ", "loss", "=", "F", ".", "cross_entropy", "(", "i2", ",", "t2", ",", "reduction", "=", "reduction", ",", "ignore_index", "=", "-", "100", "if", "ignore_index", "is", "None", "else", "ignore_index", ")", "\n", "if", "reduction", "==", "\"none\"", ":", "\n", "            ", "return", "loss", ".", "view_as", "(", "target", ")", "\n", "", "else", ":", "\n", "            ", "return", "loss", "\n", "\n", "# Calculate the softmax cross entropy loss", "\n", "", "", "i2", "=", "F", ".", "log_softmax", "(", "i2", ",", "-", "1", ")", "\n", "right_class", "=", "i2", ".", "gather", "(", "-", "1", ",", "t2", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", ")", "\n", "others", "=", "i2", ".", "sum", "(", "-", "1", ")", "-", "right_class", "\n", "\n", "# KL divergence", "\n", "loss", "=", "(", "smoothing", "-", "1.0", ")", "*", "right_class", "-", "others", "*", "smoothing", "\n", "optimal_loss", "=", "-", "(", "(", "1.0", "-", "smoothing", ")", "*", "math", ".", "log", "(", "1", "-", "smoothing", ")", "+", "(", "i2", ".", "shape", "[", "1", "]", "-", "1", ")", "*", "smoothing", "*", "math", ".", "log", "(", "smoothing", ")", ")", "\n", "\n", "loss", "=", "loss", "-", "optimal_loss", "\n", "\n", "# Handle masking if igonore_index is specified", "\n", "if", "ignore_index", "is", "not", "None", ":", "\n", "        ", "tmask", "=", "t2", "!=", "ignore_index", "\n", "loss", "=", "torch", ".", "where", "(", "tmask", ",", "loss", ",", "torch", ".", "zeros", "(", "[", "1", "]", ",", "dtype", "=", "loss", ".", "dtype", ",", "device", "=", "loss", ".", "device", ")", ")", "\n", "n_total", "=", "tmask", ".", "float", "(", ")", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "        ", "n_total", "=", "t2", ".", "nelement", "(", ")", "\n", "\n", "# Reduction", "\n", "", "if", "reduction", "==", "\"none\"", ":", "\n", "        ", "return", "loss", ".", "view_as", "(", "target", ")", "\n", "", "elif", "reduction", "==", "\"mean\"", ":", "\n", "        ", "return", "loss", ".", "sum", "(", ")", "/", "n_total", "\n", "", "elif", "reduction", "==", "\"sum\"", ":", "\n", "        ", "return", "loss", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "        ", "assert", "False", ",", "f\"Invalid reduction {reduction}\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.layers.tied_embedding.TiedEmbedding.__init__": [[7, 13], ["super().__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weights", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "# Hack: won't save it as a parameter", "\n", "self", ".", "w", "=", "[", "weights", "]", "\n", "self", ".", "bias", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "self", ".", "w", "[", "0", "]", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.layers.tied_embedding.TiedEmbedding.forward": [[14, 16], ["torch.linear", "torch.linear", "torch.linear"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "t", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "return", "F", ".", "linear", "(", "t", ",", "self", ".", "w", "[", "0", "]", ",", "self", ".", "bias", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.__init__": [[28, 41], ["training_helper.TrainingHelper.create_parser", "training_helper.TrainingHelper.start", "register_args"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.create_parser", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.start", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.None.main.register_args"], ["", "def", "__init__", "(", "self", ",", "register_args", ":", "Optional", "[", "Callable", "[", "[", "ArgumentParser", "]", ",", "None", "]", "]", ",", "\n", "wandb_project_name", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "log_async", ":", "bool", "=", "False", ",", "extra_dirs", ":", "List", "[", "str", "]", "=", "[", "]", ")", ":", "\n", "\n", "        ", "self", ".", "is_sweep", "=", "False", "\n", "self", ".", "log_async", "=", "log_async", "\n", "self", ".", "wandb_project_name", "=", "wandb_project_name", "\n", "self", ".", "all_dirs", "=", "[", "\"checkpoint\"", ",", "\"tensorboard\"", "]", "+", "extra_dirs", "\n", "self", ".", "create_parser", "(", ")", "\n", "\n", "if", "register_args", "is", "not", "None", ":", "\n", "            ", "register_args", "(", "self", ".", "arg_parser", ")", "\n", "", "self", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.print_env_info": [[42, 60], ["print", "print", "print", "subprocess.run", "list", "print", "sorted", "subprocess.run.stdout.decode().strip", "subprocess.run.stdout.decode"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.process.run"], ["", "def", "print_env_info", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "import", "pkg_resources", "\n", "print", "(", "\"---------------- Environment information: ----------------\"", ")", "\n", "installed_packages", "=", "pkg_resources", ".", "working_set", "\n", "print", "(", "list", "(", "sorted", "(", "[", "\"%s==%s\"", "%", "(", "i", ".", "key", ",", "i", ".", "version", ")", "for", "i", "in", "installed_packages", "]", ")", ")", ")", "\n", "print", "(", "\"----------------------------------------------------------\"", ")", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "\n", "", "try", ":", "\n", "            ", "git", "=", "subprocess", ".", "run", "(", "[", "\"git\"", ",", "\"rev-parse\"", ",", "\"--verify\"", ",", "\"HEAD\"", "]", ",", "stderr", "=", "subprocess", ".", "DEVNULL", ",", "\n", "stdout", "=", "subprocess", ".", "PIPE", ")", "\n", "\n", "if", "git", ".", "returncode", "==", "0", ":", "\n", "                ", "print", "(", "f\"Git hash: {git.stdout.decode().strip()}\"", ")", "\n", "", "", "except", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.create_parser": [[61, 75], ["argument_parser.ArgumentParser", "training_helper.TrainingHelper.arg_parser.add_argument", "training_helper.TrainingHelper.arg_parser.add_argument", "training_helper.TrainingHelper.arg_parser.add_argument", "training_helper.TrainingHelper.arg_parser.add_argument", "training_helper.TrainingHelper.arg_parser.add_argument", "training_helper.TrainingHelper.arg_parser.add_argument", "training_helper.TrainingHelper.arg_parser.add_argument", "training_helper.TrainingHelper.arg_parser.add_argument", "training_helper.TrainingHelper.arg_parser.add_argument", "training_helper.TrainingHelper.arg_parser.add_argument", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument"], ["", "", "def", "create_parser", "(", "self", ")", ":", "\n", "        ", "self", ".", "arg_parser", "=", "ArgumentParser", "(", "get_train_dir", "=", "lambda", "x", ":", "os", ".", "path", ".", "join", "(", "\"save\"", ",", "x", ".", "name", ")", "if", "x", ".", "name", "is", "not", "None", "\n", "else", "None", ")", "\n", "self", ".", "arg_parser", ".", "add_argument", "(", "\"-name\"", ",", "type", "=", "str", ",", "help", "=", "\"Train dir name\"", ")", "\n", "self", ".", "arg_parser", ".", "add_argument", "(", "\"-reset\"", ",", "default", "=", "False", ",", "help", "=", "\"reset training - ignore saves\"", ",", "save", "=", "False", ")", "\n", "self", ".", "arg_parser", ".", "add_argument", "(", "\"-log\"", ",", "default", "=", "\"tb\"", ")", "\n", "self", ".", "arg_parser", ".", "add_argument", "(", "\"-save_interval\"", ",", "default", "=", "\"5000\"", ",", "parser", "=", "self", ".", "arg_parser", ".", "int_or_none_parser", ")", "\n", "self", ".", "arg_parser", ".", "add_argument", "(", "\"-wandb_save_interval\"", ",", "default", "=", "\"None\"", ",", "parser", "=", "self", ".", "arg_parser", ".", "int_or_none_parser", ")", "\n", "self", ".", "arg_parser", ".", "add_argument", "(", "\"-seed\"", ",", "default", "=", "\"none\"", ",", "parser", "=", "self", ".", "arg_parser", ".", "int_or_none_parser", ")", "\n", "self", ".", "arg_parser", ".", "add_argument", "(", "\"-gpu\"", ",", "default", "=", "\"auto\"", ",", "help", "=", "\"use this gpu\"", ")", "\n", "self", ".", "arg_parser", ".", "add_argument", "(", "\"-keep_alive\"", ",", "default", "=", "False", ")", "\n", "self", ".", "arg_parser", ".", "add_argument", "(", "\"-sweep_id_for_grid_search\"", ",", "default", "=", "0", ",", "\n", "help", "=", "\"Doesn't do anything, just to run multiple W&B iterations.\"", ")", "\n", "self", ".", "arg_parser", ".", "add_argument", "(", "\"-restore\"", ",", "default", "=", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.create_dirs": [[76, 91], ["training_helper.TrainingHelper.Dirs", "os.path.join", "print", "os.makedirs", "shutil.rmtree"], "methods", ["None"], ["", "def", "create_dirs", "(", "self", ")", ":", "\n", "        ", "self", ".", "dirs", "=", "self", ".", "Dirs", "(", ")", "\n", "self", ".", "dirs", ".", "base", "=", "self", ".", "summary", ".", "save_dir", "\n", "\n", "for", "d", "in", "self", ".", "all_dirs", ":", "\n", "            ", "assert", "d", "not", "in", "self", ".", "dirs", ".", "__dict__", ",", "f\"Directory {d} already exists\"", "\n", "self", ".", "dirs", ".", "__dict__", "[", "d", "]", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dirs", ".", "base", ",", "d", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "reset", ":", "\n", "            ", "print", "(", "\"Resetting training state...\"", ")", "\n", "for", "d", "in", "self", ".", "all_dirs", ":", "\n", "                ", "shutil", ".", "rmtree", "(", "self", ".", "dirs", ".", "__dict__", "[", "d", "]", ",", "ignore_errors", "=", "True", ")", "\n", "\n", "", "", "for", "d", "in", "self", ".", "all_dirs", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "dirs", ".", "__dict__", "[", "d", "]", ",", "exist_ok", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.save_startup_log": [[92, 96], ["training_helper.TrainingHelper.arg_parser.save", "os.path.join", "open", "f.write", "os.path.join", "str", "socket.gethostname", "datetime.datetime.datetime.now"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save"], ["", "", "def", "save_startup_log", "(", "self", ")", ":", "\n", "        ", "self", ".", "arg_parser", ".", "save", "(", "os", ".", "path", ".", "join", "(", "self", ".", "summary", ".", "save_dir", ",", "\"args.json\"", ")", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "summary", ".", "save_dir", ",", "\"startup_log.txt\"", ")", ",", "\"a+\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "f\"{str(datetime.now())} {socket.gethostname()}: {' '.join(sys.argv)}\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.start_tensorboard": [[97, 101], ["os.makedirs", "framework.visualize.tensorboard.start"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.start"], ["", "", "def", "start_tensorboard", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "use_tensorboard", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "dirs", ".", "tensorboard", ",", "exist_ok", "=", "True", ")", "\n", "framework", ".", "visualize", ".", "tensorboard", ".", "start", "(", "log_dir", "=", "self", ".", "dirs", ".", "tensorboard", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.use_cuda": [[102, 104], ["torch.cuda.is_available", "training_helper.TrainingHelper.args.gpu.lower"], "methods", ["None"], ["", "", "def", "use_cuda", "(", "self", ")", "->", "bool", ":", "\n", "        ", "return", "torch", ".", "cuda", ".", "is_available", "(", ")", "and", "self", ".", "args", ".", "gpu", ".", "lower", "(", ")", "!=", "\"none\"", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.setup_environment": [[105, 111], ["utils.use_gpu", "utils.seed.fix", "training_helper.TrainingHelper.use_cuda", "torch.device", "torch.device"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.gpu_allocator.use_gpu", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.seed.fix", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.use_cuda"], ["", "def", "setup_environment", "(", "self", ")", ":", "\n", "        ", "use_gpu", "(", "self", ".", "args", ".", "gpu", ")", "\n", "if", "self", ".", "args", ".", "seed", "is", "not", "None", ":", "\n", "            ", "seed", ".", "fix", "(", "self", ".", "args", ".", "seed", ")", "\n", "\n", "", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda\"", ")", "if", "self", ".", "use_cuda", "(", ")", "else", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.start": [[112, 174], ["training_helper.TrainingHelper.arg_parser.parse_and_try_load", "training_helper.get_plot_config", "data_structures.DotDict", "constructor", "training_helper.TrainingHelper.create_dirs", "training_helper.TrainingHelper.save_startup_log", "training_helper.TrainingHelper.start_tensorboard", "saver.Saver", "copy.deepcopy", "training_helper.TrainingHelper.setup_environment", "saver.Saver.do_load", "training_helper.TrainingHelper.arg_parser.from_dict", "training_helper.TrainingHelper.arg_parser.parse_and_try_load", "training_helper.TrainingHelper.print_env_info", "training_helper.TrainingHelper.arg_parser.to_dict", "training_helper.TrainingHelper.arg_parser.to_dict", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.parse_and_try_load", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.get_plot_config", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.create_dirs", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.save_startup_log", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.start_tensorboard", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.setup_environment", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.do_load", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.from_dict", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.parse_and_try_load", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.print_env_info", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.to_dict", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.to_dict"], ["", "def", "start", "(", "self", ")", ":", "\n", "        ", "self", ".", "args", "=", "self", ".", "arg_parser", ".", "parse_and_try_load", "(", ")", "\n", "self", ".", "restore_pending", "=", "None", "\n", "\n", "if", "self", ".", "args", ".", "restore", ":", "\n", "# Restore args first such that the rest of the config is loaded correctly. Do not restore the GPU settings.", "\n", "            ", "assert", "self", ".", "args", ".", "reset", "is", "False", ",", "\"Cannot restore and reset at the same time\"", "\n", "gpu_backup", "=", "self", ".", "args", ".", "gpu", "\n", "self", ".", "restore_pending", "=", "Saver", ".", "do_load", "(", "self", ".", "args", ".", "restore", ")", "\n", "self", ".", "arg_parser", ".", "from_dict", "(", "self", ".", "restore_pending", "[", "\"run_invariants\"", "]", "[", "\"args\"", "]", ")", "\n", "self", ".", "args", "=", "self", ".", "arg_parser", ".", "parse_and_try_load", "(", ")", "\n", "self", ".", "args", ".", "gpu", "=", "gpu_backup", "\n", "self", ".", "args", ".", "reset", "=", "False", "\n", "\n", "", "self", ".", "use_tensorboard", ",", "self", ".", "use_wandb", "=", "get_plot_config", "(", "self", ".", "args", ")", "\n", "\n", "constructor", "=", "plot", ".", "AsyncLogger", "if", "self", ".", "log_async", "else", "plot", ".", "Logger", "\n", "\n", "assert", "(", "not", "self", ".", "use_wandb", ")", "or", "(", "self", ".", "wandb_project_name", "is", "not", "None", ")", ",", "'Must specify wandb project name if logging to wandb.'", "\n", "\n", "self", ".", "state", "=", "DotDict", "(", ")", "\n", "self", ".", "state", ".", "iter", "=", "0", "\n", "\n", "assert", "self", ".", "args", ".", "name", "is", "not", "None", "or", "self", ".", "use_wandb", ",", "\"Either name must be specified or W&B should be used\"", "\n", "\n", "if", "self", ".", "args", ".", "restore", "and", "self", ".", "restore_pending", "[", "\"run_invariants\"", "]", "[", "\"wandb_id\"", "]", "is", "not", "None", ":", "\n", "            ", "wandb_args", "=", "{", "\n", "\"project\"", ":", "self", ".", "wandb_project_name", ",", "\n", "\"id\"", ":", "self", ".", "restore_pending", "[", "\"run_invariants\"", "]", "[", "\"wandb_id\"", "]", "[", "\"run_id\"", "]", ",", "\n", "\"resume\"", ":", "\"must\"", "\n", "}", "\n", "", "else", ":", "\n", "            ", "wandb_args", "=", "{", "\n", "\"project\"", ":", "self", ".", "wandb_project_name", ",", "\n", "\"config\"", ":", "self", ".", "arg_parser", ".", "to_dict", "(", ")", "\n", "}", "\n", "\n", "", "self", ".", "summary", "=", "constructor", "(", "save_dir", "=", "os", ".", "path", ".", "join", "(", "\"save\"", ",", "self", ".", "args", ".", "name", ")", "if", "self", ".", "args", ".", "name", "is", "not", "None", "else", "None", ",", "\n", "use_tb", "=", "self", ".", "use_tensorboard", ",", "\n", "use_wandb", "=", "self", ".", "use_wandb", ",", "\n", "wandb_init_args", "=", "wandb_args", ",", "\n", "wandb_extra_config", "=", "{", "\n", "\"experiment_name\"", ":", "self", ".", "args", ".", "name", "\n", "}", ",", "\n", "get_global_step", "=", "lambda", ":", "self", ".", "state", ".", "iter", ")", "\n", "\n", "if", "self", ".", "use_wandb", ":", "\n", "            ", "self", ".", "print_env_info", "(", ")", "\n", "\n", "", "self", ".", "run_invariants", "=", "{", "\n", "\"wandb_id\"", ":", "self", ".", "summary", ".", "wandb_id", ",", "\n", "\"args\"", ":", "self", ".", "arg_parser", ".", "to_dict", "(", ")", "\n", "}", "\n", "self", ".", "create_dirs", "(", ")", "\n", "self", ".", "save_startup_log", "(", ")", "\n", "self", ".", "start_tensorboard", "(", ")", "\n", "self", ".", "saver", "=", "Saver", "(", "self", ".", "dirs", ".", "checkpoint", ",", "self", ".", "args", ".", "save_interval", ",", "\n", "keep_every_n_hours", "=", "None", "if", "self", ".", "use_wandb", "else", "4", ")", "\n", "self", ".", "saver", "[", "\"state\"", "]", "=", "self", ".", "state", "\n", "self", ".", "saver", "[", "\"run_invariants\"", "]", "=", "deepcopy", "(", "self", ".", "run_invariants", ")", "\n", "self", ".", "setup_environment", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.wait_for_termination": [[175, 180], ["print", "time.sleep"], "methods", ["None"], ["", "def", "wait_for_termination", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "keep_alive", "and", "self", ".", "use_tensorboard", "and", "not", "self", ".", "use_wandb", ":", "\n", "            ", "print", "(", "\"Done. Waiting for termination\"", ")", "\n", "while", "True", ":", "\n", "                ", "time", ".", "sleep", "(", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.save": [[181, 184], ["training_helper.TrainingHelper.saver.save", "training_helper.TrainingHelper.saver.cleanup"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.cleanup"], ["", "", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "self", ".", "saver", ".", "save", "(", "iter", "=", "self", ".", "state", ".", "iter", ")", "\n", "self", ".", "saver", ".", "cleanup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.tick": [[185, 187], ["training_helper.TrainingHelper.saver.tick"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.tick"], ["", "def", "tick", "(", "self", ")", ":", "\n", "        ", "self", ".", "saver", ".", "tick", "(", "iter", "=", "self", ".", "state", ".", "iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.finish": [[188, 194], ["training_helper.TrainingHelper.summary.finish", "training_helper.TrainingHelper.wait_for_termination", "training_helper.TrainingHelper.save"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.finish", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.wait_for_termination", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save"], ["", "def", "finish", "(", "self", ")", ":", "\n", "        ", "self", ".", "summary", ".", "finish", "(", ")", "\n", "if", "self", ".", "is_sweep", "or", "self", ".", "args", ".", "save_interval", "is", "None", ":", "\n", "            ", "self", ".", "save", "(", ")", "\n", "\n", "", "self", ".", "wait_for_termination", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.to_device": [[195, 197], ["utils.U.apply_to_tensors", "d.to"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.universal.apply_to_tensors"], ["", "def", "to_device", "(", "self", ",", "data", ":", "Any", ")", "->", "Any", ":", "\n", "        ", "return", "U", ".", "apply_to_tensors", "(", "data", ",", "lambda", "d", ":", "d", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.restore": [[198, 209], ["training_helper.TrainingHelper.saver.load_data", "training_helper.TrainingHelper.saver.load", "training_helper.TrainingHelper.saver.register", "copy.deepcopy"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.cfq.CFQ.load_data", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.register"], ["", "def", "restore", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "restore_pending", "is", "not", "None", ":", "\n", "            ", "assert", "self", ".", "saver", ".", "load_data", "(", "self", ".", "restore_pending", ")", ",", "\"Restoring failed.\"", "\n", "self", ".", "restore_pending", "=", "None", "\n", "restored", "=", "True", "\n", "", "else", ":", "\n", "            ", "restored", "=", "self", ".", "saver", ".", "load", "(", ")", "\n", "\n", "", "if", "restored", ":", "\n", "# Do not restore these things", "\n", "            ", "self", ".", "saver", ".", "register", "(", "\"run_invariants\"", ",", "deepcopy", "(", "self", ".", "run_invariants", ")", ",", "replace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.get_storage_path": [[210, 214], ["os.path.join", "os.makedirs", "os.path.dirname"], "methods", ["None"], ["", "", "def", "get_storage_path", "(", "self", ",", "path", ":", "str", ")", "->", "str", ":", "\n", "        ", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dirs", ".", "export", ",", "path", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "path", ")", ",", "exist_ok", "=", "True", ")", "\n", "return", "path", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.get_plot_config": [[19, 22], ["None"], "function", ["None"], ["def", "get_plot_config", "(", "args", ")", ":", "\n", "    ", "assert", "args", ".", "log", "in", "[", "\"all\"", ",", "\"tb\"", ",", "\"wandb\"", "]", "\n", "return", "args", ".", "log", "in", "[", "\"all\"", ",", "\"tb\"", "]", ",", "args", ".", "log", "in", "[", "\"all\"", ",", "\"wandb\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.SaverElement.save": [[9, 11], ["NotImplementedError"], "methods", ["None"], ["    ", "def", "save", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.SaverElement.load": [[12, 14], ["NotImplementedError"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "saved_state", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.PyObjectSaver.__init__": [[17, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "obj", ")", ":", "\n", "        ", "self", ".", "_obj", "=", "obj", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.PyObjectSaver.load": [[20, 41], ["saver.PyObjectSaver.load._load"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "state", ")", ":", "\n", "        ", "def", "_load", "(", "target", ",", "state", ")", ":", "\n", "            ", "if", "hasattr", "(", "target", ",", "\"load_state_dict\"", ")", ":", "\n", "                ", "target", ".", "load_state_dict", "(", "state", ")", "\n", "", "elif", "isinstance", "(", "target", ",", "dict", ")", ":", "\n", "                ", "for", "k", ",", "v", "in", "state", ".", "items", "(", ")", ":", "\n", "                    ", "target", "[", "k", "]", "=", "_load", "(", "target", ".", "get", "(", "k", ")", ",", "v", ")", "\n", "", "", "elif", "isinstance", "(", "target", ",", "list", ")", ":", "\n", "                ", "if", "len", "(", "target", ")", "!=", "len", "(", "state", ")", ":", "\n", "                    ", "target", ".", "clear", "(", ")", "\n", "for", "v", "in", "state", ":", "\n", "                        ", "target", ".", "append", "(", "v", ")", "\n", "", "", "else", ":", "\n", "                    ", "for", "i", ",", "v", "in", "enumerate", "(", "state", ")", ":", "\n", "                        ", "target", "[", "i", "]", "=", "_load", "(", "target", "[", "i", "]", ",", "v", ")", "\n", "", "", "", "else", ":", "\n", "                ", "return", "state", "\n", "", "return", "target", "\n", "\n", "", "_load", "(", "self", ".", "_obj", ",", "state", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.PyObjectSaver.save": [[42, 57], ["saver.PyObjectSaver.save._save"], "methods", ["None"], ["", "def", "save", "(", "self", ")", ":", "\n", "        ", "def", "_save", "(", "target", ")", ":", "\n", "            ", "if", "isinstance", "(", "target", ",", "(", "defaultdict", ",", "dict", ")", ")", ":", "\n", "                ", "res", "=", "target", ".", "__class__", "(", ")", "\n", "res", ".", "update", "(", "{", "k", ":", "_save", "(", "v", ")", "for", "k", ",", "v", "in", "target", ".", "items", "(", ")", "}", ")", "\n", "", "elif", "hasattr", "(", "target", ",", "\"state_dict\"", ")", ":", "\n", "                ", "res", "=", "target", ".", "state_dict", "(", ")", "\n", "", "elif", "isinstance", "(", "target", ",", "list", ")", ":", "\n", "                ", "res", "=", "[", "_save", "(", "v", ")", "for", "v", "in", "target", "]", "\n", "", "else", ":", "\n", "                ", "res", "=", "target", "\n", "\n", "", "return", "res", "\n", "\n", "", "return", "_save", "(", "self", ".", "_obj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.__init__": [[60, 67], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dir", ":", "str", ",", "short_interval", ":", "int", ",", "keep_every_n_hours", ":", "Optional", "[", "int", "]", "=", "4", ",", "keep_last", ":", "int", "=", "1", ")", ":", "\n", "        ", "self", ".", "savers", "=", "{", "}", "\n", "self", ".", "short_interval", "=", "short_interval", "\n", "self", ".", "dir", "=", "dir", "\n", "assert", "keep_last", ">=", "1", "\n", "self", ".", "keep_last", "=", "keep_last", "\n", "self", ".", "_keep_every_n_seconds", "=", "keep_every_n_hours", "*", "3600", "if", "keep_every_n_hours", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.register": [[68, 76], ["isinstance", "saver.PyObjectSaver"], "methods", ["None"], ["", "def", "register", "(", "self", ",", "name", ":", "str", ",", "saver", ",", "replace", ":", "bool", "=", "False", ")", ":", "\n", "        ", "if", "not", "replace", ":", "\n", "            ", "assert", "name", "not", "in", "self", ".", "savers", ",", "\"Saver %s already registered\"", "%", "name", "\n", "\n", "", "if", "isinstance", "(", "saver", ",", "SaverElement", ")", ":", "\n", "            ", "self", ".", "savers", "[", "name", "]", "=", "saver", "\n", "", "else", ":", "\n", "            ", "self", ".", "savers", "[", "name", "]", "=", "PyObjectSaver", "(", "saver", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.__setitem__": [[77, 80], ["saver.Saver.register"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.register"], ["", "", "def", "__setitem__", "(", "self", ",", "key", ":", "str", ",", "value", ")", ":", "\n", "        ", "if", "value", "is", "not", "None", ":", "\n", "            ", "self", ".", "register", "(", "key", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.save": [[81, 109], ["os.path.dirname", "print", "saver.Saver.savers.items", "os.path.join", "os.makedirs", "fns.save", "torch.save", "saver.Saver.model_name_from_index", "print", "os.remove"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.model_name_from_index"], ["", "", "def", "save", "(", "self", ",", "fname", ":", "Optional", "[", "str", "]", "=", "None", ",", "dir", ":", "Optional", "[", "str", "]", "=", "None", ",", "iter", ":", "Optional", "[", "int", "]", "=", "None", ")", ":", "\n", "        ", "state", "=", "{", "}", "\n", "\n", "if", "fname", "is", "None", ":", "\n", "            ", "assert", "iter", "is", "not", "None", ",", "\"If fname is not given, iter should be.\"", "\n", "if", "dir", "is", "None", ":", "\n", "                ", "dir", "=", "self", ".", "dir", "\n", "", "fname", "=", "os", ".", "path", ".", "join", "(", "dir", ",", "self", ".", "model_name_from_index", "(", "iter", ")", ")", "\n", "\n", "", "dname", "=", "os", ".", "path", ".", "dirname", "(", "fname", ")", "\n", "if", "dname", ":", "\n", "            ", "os", ".", "makedirs", "(", "dname", ",", "exist_ok", "=", "True", ")", "\n", "\n", "", "print", "(", "\"Saving %s\"", "%", "fname", ")", "\n", "for", "name", ",", "fns", "in", "self", ".", "savers", ".", "items", "(", ")", ":", "\n", "            ", "state", "[", "name", "]", "=", "fns", ".", "save", "(", ")", "\n", "\n", "", "try", ":", "\n", "            ", "torch", ".", "save", "(", "state", ",", "fname", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "\"WARNING: Save failed. Maybe running out of disk space?\"", ")", "\n", "try", ":", "\n", "                ", "os", ".", "remove", "(", "fname", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "", "return", "None", "\n", "\n", "", "return", "fname", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.tick": [[110, 116], ["saver.Saver.save", "saver.Saver.cleanup"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.cleanup"], ["", "def", "tick", "(", "self", ",", "iter", ":", "int", ")", ":", "\n", "        ", "if", "self", ".", "short_interval", "is", "None", "or", "iter", "%", "self", ".", "short_interval", "!=", "0", ":", "\n", "            ", "return", "\n", "\n", "", "self", ".", "save", "(", "iter", "=", "iter", ")", "\n", "self", ".", "cleanup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.model_name_from_index": [[117, 120], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "model_name_from_index", "(", "index", ":", "int", ")", "->", "str", ":", "\n", "        ", "return", "f\"model-{index}.pth\"", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.get_checkpoint_index_list": [[121, 125], ["list", "reversed", "sorted", "int", "os.listdir", "[].split", "fn.split", "fn.split"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_checkpoint_index_list", "(", "dir", ":", "str", ")", "->", "List", "[", "int", "]", ":", "\n", "        ", "return", "list", "(", "reversed", "(", "sorted", "(", "\n", "[", "int", "(", "fn", ".", "split", "(", "\".\"", ")", "[", "0", "]", ".", "split", "(", "\"-\"", ")", "[", "-", "1", "]", ")", "for", "fn", "in", "os", ".", "listdir", "(", "dir", ")", "if", "fn", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "==", "\"pth\"", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.get_ckpts_in_time_window": [[126, 145], ["time.time", "saver.Saver.get_checkpoint_index_list", "saver.Saver.model_name_from_index", "os.path.getmtime", "res.append", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.get_checkpoint_index_list", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.model_name_from_index"], ["", "def", "get_ckpts_in_time_window", "(", "self", ",", "dir", ":", "str", ",", "index_list", ":", "Optional", "[", "List", "[", "int", "]", "]", "=", "None", ")", ":", "\n", "        ", "if", "index_list", "is", "None", ":", "\n", "            ", "index_list", "=", "Saver", ".", "get_checkpoint_index_list", "(", "dir", ")", "\n", "\n", "", "names", "=", "[", "Saver", ".", "model_name_from_index", "(", "i", ")", "for", "i", "in", "index_list", "]", "\n", "if", "self", ".", "_keep_every_n_seconds", "is", "None", ":", "\n", "            ", "return", "names", "\n", "\n", "", "now", "=", "time", ".", "time", "(", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "name", "in", "names", ":", "\n", "            ", "mtime", "=", "os", ".", "path", ".", "getmtime", "(", "os", ".", "path", ".", "join", "(", "dir", ",", "name", ")", ")", "\n", "if", "now", "-", "mtime", ">", "self", ".", "_keep_every_n_seconds", ":", "\n", "                ", "break", "\n", "\n", "", "res", ".", "append", "(", "name", ")", "\n", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.do_load": [[146, 149], ["torch.load"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load"], ["", "@", "staticmethod", "\n", "def", "do_load", "(", "fname", ")", ":", "\n", "        ", "return", "torch", ".", "load", "(", "fname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.load_last_checkpoint": [[150, 165], ["saver.Saver.get_checkpoint_index_list", "os.path.isdir", "saver.Saver.model_name_from_index", "saver.Saver.do_load", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.get_checkpoint_index_list", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.model_name_from_index", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.do_load"], ["", "def", "load_last_checkpoint", "(", "self", ")", "->", "Optional", "[", "any", "]", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "dir", ")", ":", "\n", "            ", "return", "None", "\n", "\n", "", "last_checkpoint", "=", "Saver", ".", "get_checkpoint_index_list", "(", "self", ".", "dir", ")", "\n", "\n", "if", "last_checkpoint", ":", "\n", "            ", "for", "index", "in", "last_checkpoint", ":", "\n", "                ", "fname", "=", "Saver", ".", "model_name_from_index", "(", "index", ")", "\n", "try", ":", "\n", "                    ", "data", "=", "self", ".", "do_load", "(", "os", ".", "path", ".", "join", "(", "dir", ",", "fname", ")", ")", "\n", "", "except", ":", "\n", "                    ", "continue", "\n", "", "return", "data", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.cleanup": [[166, 173], ["saver.Saver.get_checkpoint_index_list", "saver.Saver.get_ckpts_in_time_window", "os.remove", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.get_checkpoint_index_list", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.get_ckpts_in_time_window"], ["", "def", "cleanup", "(", "self", ")", ":", "\n", "        ", "index_list", "=", "self", ".", "get_checkpoint_index_list", "(", "self", ".", "dir", ")", "\n", "new_files", "=", "self", ".", "get_ckpts_in_time_window", "(", "self", ".", "dir", ",", "index_list", "[", "self", ".", "keep_last", ":", "]", ")", "\n", "new_files", "=", "new_files", "[", ":", "-", "1", "]", "if", "self", ".", "_keep_every_n_seconds", "is", "not", "None", "else", "new_files", "\n", "\n", "for", "f", "in", "new_files", ":", "\n", "            ", "os", ".", "remove", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "f", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.load_data": [[174, 189], ["state.items", "print", "print", "saver.Saver.savers[].load", "print"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load"], ["", "", "def", "load_data", "(", "self", ",", "state", ")", "->", "bool", ":", "\n", "        ", "if", "not", "state", ":", "\n", "            ", "return", "False", "\n", "\n", "", "for", "k", ",", "s", "in", "state", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "not", "in", "self", ".", "savers", ":", "\n", "                ", "print", "(", "\"WARNING: failed to load state of %s. It doesn't exists.\"", "%", "k", ")", "\n", "continue", "\n", "\n", "", "print", "(", "f\"Loading {k}\"", ")", "\n", "if", "not", "self", ".", "savers", "[", "k", "]", ".", "load", "(", "s", ")", ":", "\n", "                ", "print", "(", "f\"Failed to load {k}\"", ")", "\n", "return", "False", "\n", "\n", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.load": [[190, 197], ["saver.Saver.load_data", "saver.Saver.load_last_checkpoint", "saver.Saver.do_load"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.cfq.CFQ.load_data", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.load_last_checkpoint", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.do_load"], ["", "def", "load", "(", "self", ",", "fname", "=", "None", ")", "->", "bool", ":", "\n", "        ", "if", "fname", "is", "None", ":", "\n", "            ", "state", "=", "self", ".", "load_last_checkpoint", "(", ")", "\n", "", "else", ":", "\n", "            ", "state", "=", "self", ".", "do_load", "(", "fname", ")", "\n", "\n", "", "return", "self", ".", "load_data", "(", "state", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.int_list_parser": [[20, 24], ["int", "re.split"], "methods", ["None"], ["@", "staticmethod", "\n", "@", "none_parser", "\n", "def", "int_list_parser", "(", "x", ")", ":", "\n", "        ", "return", "[", "int", "(", "a", ")", "for", "a", "in", "re", ".", "split", "(", "\"[,_ ;]\"", ",", "x", ")", "if", "a", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.str_list_parser": [[25, 29], ["x.split"], "methods", ["None"], ["", "@", "staticmethod", "\n", "@", "none_parser", "\n", "def", "str_list_parser", "(", "x", ")", ":", "\n", "        ", "return", "x", ".", "split", "(", "\",\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.int_or_none_parser": [[30, 34], ["int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "@", "none_parser", "\n", "def", "int_or_none_parser", "(", "x", ")", ":", "\n", "        ", "return", "int", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.float_or_none_parser": [[35, 39], ["float"], "methods", ["None"], ["", "@", "staticmethod", "\n", "@", "none_parser", "\n", "def", "float_or_none_parser", "(", "x", ")", ":", "\n", "        ", "return", "float", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.float_list_parser": [[40, 44], ["float", "re.split"], "methods", ["None"], ["", "@", "staticmethod", "\n", "@", "none_parser", "\n", "def", "float_list_parser", "(", "x", ")", ":", "\n", "        ", "return", "[", "float", "(", "a", ")", "for", "a", "in", "re", ".", "split", "(", "\"[,_ ;]\"", ",", "x", ")", "if", "a", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser._merge_args": [[45, 53], ["new_args.items", "args.get"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "@", "staticmethod", "\n", "def", "_merge_args", "(", "args", ",", "new_args", ",", "arg_schemas", ")", ":", "\n", "        ", "for", "name", ",", "val", "in", "new_args", ".", "items", "(", ")", ":", "\n", "            ", "old", "=", "args", ".", "get", "(", "name", ")", "\n", "if", "old", "is", "None", ":", "\n", "                ", "args", "[", "name", "]", "=", "val", "\n", "", "else", ":", "\n", "                ", "args", "[", "name", "]", "=", "arg_schemas", "[", "name", "]", "[", "\"updater\"", "]", "(", "old", ",", "val", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.__init__": [[75, 83], ["argparse.ArgumentParser", "argument_parser.ArgumentParser.parser.add_argument", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument"], ["", "", "def", "__init__", "(", "self", ",", "description", "=", "None", ",", "get_train_dir", "=", "lambda", "x", ":", "os", ".", "path", ".", "join", "(", "\"save\"", ",", "x", ".", "name", ")", ")", ":", "\n", "        ", "self", ".", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "description", ")", "\n", "self", ".", "profiles", "=", "{", "}", "\n", "self", ".", "args", "=", "{", "}", "\n", "self", ".", "raw", "=", "None", "\n", "self", ".", "parsed", "=", "None", "\n", "self", ".", "get_train_dir", "=", "get_train_dir", "\n", "self", ".", "parser", ".", "add_argument", "(", "\"-profile\"", ",", "\"--profile\"", ",", "type", "=", "str", ",", "help", "=", "\"Pre-defined profiles.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument": [[84, 103], ["argument_parser.ArgumentParser.parser.add_argument", "ArgumentParser._type", "int"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument"], ["", "def", "add_argument", "(", "self", ",", "name", ",", "type", "=", "None", ",", "default", "=", "None", ",", "help", "=", "\"\"", ",", "save", "=", "True", ",", "parser", "=", "lambda", "x", ":", "x", ",", "\n", "updater", "=", "lambda", "old", ",", "new", ":", "new", ",", "choice", "=", "[", "]", ")", ":", "\n", "        ", "assert", "name", "not", "in", "[", "\"profile\"", "]", ",", "\"Argument name %s is reserved\"", "%", "name", "\n", "assert", "not", "(", "type", "is", "None", "and", "default", "is", "None", ")", ",", "\"Either type or default must be given\"", "\n", "\n", "if", "type", "is", "None", ":", "\n", "            ", "type", "=", "ArgumentParser", ".", "_type", "(", "default", ")", "\n", "\n", "", "self", ".", "parser", ".", "add_argument", "(", "name", ",", "\"-\"", "+", "name", ",", "type", "=", "int", "if", "type", "==", "bool", "else", "type", ",", "default", "=", "None", ",", "help", "=", "help", ")", "\n", "if", "name", "[", "0", "]", "==", "'-'", ":", "\n", "            ", "name", "=", "name", "[", "1", ":", "]", "\n", "\n", "", "self", ".", "args", "[", "name", "]", "=", "{", "\n", "\"type\"", ":", "type", ",", "\n", "\"default\"", ":", "int", "(", "default", ")", "if", "type", "==", "bool", "else", "default", ",", "\n", "\"save\"", ":", "save", ",", "\n", "\"parser\"", ":", "parser", ",", "\n", "\"updater\"", ":", "updater", ",", "\n", "\"choice\"", ":", "choice", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_profile": [[105, 111], ["isinstance", "argument_parser.ArgumentParser.add_profile"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_profile"], ["", "def", "add_profile", "(", "self", ",", "prof", ")", ":", "\n", "        ", "if", "isinstance", "(", "prof", ",", "list", ")", ":", "\n", "            ", "for", "p", "in", "prof", ":", "\n", "                ", "self", ".", "add_profile", "(", "p", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "profiles", "[", "prof", ".", "name", "]", "=", "prof", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.do_parse_args": [[112, 148], ["argument_parser.ArgumentParser.parser.parse_args", "argument_parser.ArgumentParser.raw.__dict__.items", "argument_parser.ArgumentParser.raw.__dict__.items", "data_structures.dotdict.create_recursive_dot_dict", "argument_parser.ArgumentParser.raw.profile.split", "loaded.get", "argument_parser.ArgumentParser.profiles.get", "p.get_args.get_args.get_args", "argument_parser.ArgumentParser._merge_args", "profile.get", "argument_parser.ArgumentParser.raw.__dict__.items", "argument_parser.ArgumentParser.profiles.keys"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.dotdict.create_recursive_dot_dict", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser._merge_args", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "", "def", "do_parse_args", "(", "self", ",", "loaded", "=", "{", "}", ")", ":", "\n", "        ", "self", ".", "raw", "=", "self", ".", "parser", ".", "parse_args", "(", ")", "\n", "\n", "profile", "=", "{", "}", "\n", "if", "self", ".", "raw", ".", "profile", ":", "\n", "            ", "if", "loaded", ":", "\n", "                ", "if", "self", ".", "raw", ".", "profile", "!=", "loaded", ".", "get", "(", "\"profile\"", ")", ":", "\n", "                    ", "assert", "False", ",", "\"Loading arguments from file, but a different profile is given.\"", "\n", "", "", "else", ":", "\n", "                ", "for", "pr", "in", "self", ".", "raw", ".", "profile", ".", "split", "(", "\",\"", ")", ":", "\n", "                    ", "p", "=", "self", ".", "profiles", ".", "get", "(", "pr", ")", "\n", "assert", "p", "is", "not", "None", ",", "\"Invalid profile: %s. Valid profiles: %s\"", "%", "(", "pr", ",", "self", ".", "profiles", ".", "keys", "(", ")", ")", "\n", "p", "=", "p", ".", "get_args", "(", "self", ".", "args", ",", "self", ".", "profiles", ")", "\n", "self", ".", "_merge_args", "(", "profile", ",", "p", ",", "self", ".", "args", ")", "\n", "\n", "", "", "", "for", "k", ",", "v", "in", "self", ".", "raw", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "in", "[", "\"profile\"", "]", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "v", "is", "None", ":", "\n", "                ", "if", "k", "in", "loaded", "and", "self", ".", "args", "[", "k", "]", "[", "\"save\"", "]", ":", "\n", "                    ", "self", ".", "raw", ".", "__dict__", "[", "k", "]", "=", "loaded", "[", "k", "]", "\n", "", "else", ":", "\n", "                    ", "self", ".", "raw", ".", "__dict__", "[", "k", "]", "=", "profile", ".", "get", "(", "k", ",", "self", ".", "args", "[", "k", "]", "[", "\"default\"", "]", ")", "\n", "\n", "", "", "", "for", "k", ",", "v", "in", "self", ".", "raw", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "not", "in", "self", ".", "args", ":", "\n", "                ", "continue", "\n", "", "c", "=", "self", ".", "args", "[", "k", "]", "[", "\"choice\"", "]", "\n", "if", "c", "and", "not", "v", "in", "c", ":", "\n", "                ", "assert", "False", ",", "f\"Invalid value {v}. Allowed: {c}\"", "\n", "\n", "", "", "self", ".", "parsed", "=", "create_recursive_dot_dict", "(", "{", "k", ":", "self", ".", "args", "[", "k", "]", "[", "\"parser\"", "]", "(", "self", ".", "args", "[", "k", "]", "[", "\"type\"", "]", "(", "v", ")", ")", "if", "v", "is", "not", "None", "\n", "else", "None", "for", "k", ",", "v", "in", "self", ".", "raw", ".", "__dict__", ".", "items", "(", ")", "if", "k", "in", "self", ".", "args", "}", ")", "\n", "\n", "return", "self", ".", "parsed", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.parse_or_cache": [[149, 152], ["argument_parser.ArgumentParser.do_parse_args"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.do_parse_args"], ["", "def", "parse_or_cache", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "parsed", "is", "None", ":", "\n", "            ", "self", ".", "do_parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.parse": [[153, 156], ["argument_parser.ArgumentParser.parse_or_cache"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.parse_or_cache"], ["", "", "def", "parse", "(", "self", ")", ":", "\n", "        ", "self", ".", "parse_or_cache", "(", ")", "\n", "return", "self", ".", "parsed", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.to_dict": [[157, 160], ["argument_parser.ArgumentParser.parse_or_cache"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.parse_or_cache"], ["", "def", "to_dict", "(", "self", ")", ":", "\n", "        ", "self", ".", "parse_or_cache", "(", ")", "\n", "return", "self", ".", "raw", ".", "__dict__", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.clone": [[161, 169], ["argument_parser.ArgumentParser", "argument_parser.ArgumentParser.args.items", "argument_parser.ArgumentParser.parse", "ArgumentParser.parser.add_argument"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.parse", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.add_argument"], ["", "def", "clone", "(", "self", ")", ":", "\n", "        ", "parser", "=", "ArgumentParser", "(", ")", "\n", "parser", ".", "profiles", "=", "self", ".", "profiles", "\n", "parser", ".", "args", "=", "self", ".", "args", "\n", "for", "name", ",", "a", "in", "self", ".", "args", ".", "items", "(", ")", ":", "\n", "            ", "parser", ".", "parser", ".", "add_argument", "(", "\"-\"", "+", "name", ",", "type", "=", "int", "if", "a", "[", "\"type\"", "]", "==", "bool", "else", "a", "[", "\"type\"", "]", ",", "default", "=", "None", ")", "\n", "", "parser", ".", "parse", "(", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.from_dict": [[170, 172], ["argument_parser.ArgumentParser.do_parse_args"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.do_parse_args"], ["", "def", "from_dict", "(", "self", ",", "dict", ")", ":", "\n", "        ", "return", "self", ".", "do_parse_args", "(", "dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.save": [[173, 177], ["open", "json.dump", "argument_parser.ArgumentParser.to_dict"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.to_dict"], ["", "def", "save", "(", "self", ",", "fname", ")", ":", "\n", "        ", "with", "open", "(", "fname", ",", "'w'", ")", "as", "outfile", ":", "\n", "            ", "json", ".", "dump", "(", "self", ".", "to_dict", "(", ")", ",", "outfile", ",", "indent", "=", "4", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.load": [[178, 185], ["os.path.isfile", "argument_parser.ArgumentParser.from_dict", "open", "json.load"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.from_dict", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load"], ["", "", "def", "load", "(", "self", ",", "fname", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "isfile", "(", "fname", ")", ":", "\n", "            ", "with", "open", "(", "fname", ",", "\"r\"", ")", "as", "data_file", ":", "\n", "                ", "map", "=", "json", ".", "load", "(", "data_file", ")", "\n", "\n", "", "self", ".", "from_dict", "(", "map", ")", "\n", "", "return", "self", ".", "parsed", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.sync": [[186, 199], ["argument_parser.ArgumentParser._get_save_filename", "os.path.isfile", "os.path.dirname", "os.makedirs", "argument_parser.ArgumentParser.save", "argument_parser.ArgumentParser.load"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser._get_save_filename", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load"], ["", "def", "sync", "(", "self", ",", "fname", "=", "None", ")", ":", "\n", "        ", "if", "fname", "is", "None", ":", "\n", "            ", "fname", "=", "self", ".", "_get_save_filename", "(", ")", "\n", "\n", "", "if", "fname", "is", "not", "None", ":", "\n", "            ", "if", "os", ".", "path", ".", "isfile", "(", "fname", ")", ":", "\n", "                ", "self", ".", "load", "(", "fname", ")", "\n", "\n", "", "dir", "=", "os", ".", "path", ".", "dirname", "(", "fname", ")", "\n", "os", ".", "makedirs", "(", "dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "save", "(", "fname", ")", "\n", "", "return", "self", ".", "parsed", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser._get_save_filename": [[200, 204], ["argument_parser.ArgumentParser.get_train_dir", "argument_parser.ArgumentParser.parse", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.parse"], ["", "def", "_get_save_filename", "(", "self", ",", "opt", "=", "None", ")", ":", "\n", "        ", "opt", "=", "self", ".", "parse", "(", ")", "if", "opt", "is", "None", "else", "opt", "\n", "dir", "=", "self", ".", "get_train_dir", "(", "opt", ")", "\n", "return", "None", "if", "dir", "is", "None", "else", "os", ".", "path", ".", "join", "(", "dir", ",", "\"args.json\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.parse_and_sync": [[205, 208], ["argument_parser.ArgumentParser.parse", "argument_parser.ArgumentParser.sync", "argument_parser.ArgumentParser._get_save_filename"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.parse", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.sync", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser._get_save_filename"], ["", "def", "parse_and_sync", "(", "self", ")", ":", "\n", "        ", "opt", "=", "self", ".", "parse", "(", ")", "\n", "return", "self", ".", "sync", "(", "self", ".", "_get_save_filename", "(", "opt", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.parse_and_try_load": [[209, 215], ["argument_parser.ArgumentParser._get_save_filename", "os.path.isfile", "argument_parser.ArgumentParser.load"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser._get_save_filename", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load"], ["", "def", "parse_and_try_load", "(", "self", ")", ":", "\n", "        ", "fname", "=", "self", ".", "_get_save_filename", "(", ")", "\n", "if", "fname", "and", "os", ".", "path", ".", "isfile", "(", "fname", ")", ":", "\n", "            ", "self", ".", "load", "(", "fname", ")", "\n", "\n", "", "return", "self", ".", "parsed", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.none_parser": [[7, 15], ["other_parser", "x.lower"], "function", ["None"], ["def", "none_parser", "(", "other_parser", ")", ":", "\n", "    ", "def", "fn", "(", "x", ")", ":", "\n", "        ", "if", "x", ".", "lower", "(", ")", "==", "\"none\"", ":", "\n", "            ", "return", "None", "\n", "\n", "", "return", "other_parser", "(", "x", ")", "\n", "\n", "", "return", "fn", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.loader.collate.VarLengthCollate.__init__": [[10, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ignore_symbol", "=", "0", ",", "batch_dim", ":", "int", "=", "1", ")", ":", "\n", "        ", "self", ".", "ignore_symbol", "=", "ignore_symbol", "\n", "self", ".", "batch_dim", "=", "batch_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.loader.collate.VarLengthCollate._measure_array_max_dim": [[14, 23], ["list", "range", "batch[].size", "len", "len", "batch[].size", "max", "range", "range", "len", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.size", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.size"], ["", "@", "staticmethod", "\n", "def", "_measure_array_max_dim", "(", "batch", ":", "List", "[", "torch", ".", "Tensor", "]", ")", ":", "\n", "        ", "s", "=", "list", "(", "batch", "[", "0", "]", ".", "size", "(", ")", ")", "\n", "different", "=", "[", "False", "]", "*", "len", "(", "s", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "batch", ")", ")", ":", "\n", "            ", "ns", "=", "batch", "[", "i", "]", ".", "size", "(", ")", "\n", "different", "=", "[", "different", "[", "j", "]", "or", "s", "[", "j", "]", "!=", "ns", "[", "j", "]", "for", "j", "in", "range", "(", "len", "(", "s", ")", ")", "]", "\n", "s", "=", "[", "max", "(", "s", "[", "j", "]", ",", "ns", "[", "j", "]", ")", "for", "j", "in", "range", "(", "len", "(", "s", ")", ")", "]", "\n", "", "return", "s", ",", "different", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.loader.collate.VarLengthCollate._merge_var_len_array": [[24, 38], ["collate.VarLengthCollate._measure_array_max_dim", "batch[].storage()._new_shared", "batch[].new().view().fill_", "enumerate", "functools.reduce", "batch[].new().view().fill_.narrow().squeeze", "enumerate", "this_o.narrow.narrow.copy_", "batch[].storage", "batch[].new().view", "len", "len", "batch[].new().view().fill_.narrow", "this_o.narrow.narrow.narrow", "batch[].new", "d.size"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.loader.collate.VarLengthCollate._measure_array_max_dim", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.size"], ["", "def", "_merge_var_len_array", "(", "self", ",", "batch", ":", "List", "[", "torch", ".", "Tensor", "]", ")", ":", "\n", "        ", "max_size", ",", "different", "=", "self", ".", "_measure_array_max_dim", "(", "batch", ")", "\n", "s", "=", "max_size", "[", ":", "self", ".", "batch_dim", "]", "+", "[", "len", "(", "batch", ")", "]", "+", "max_size", "[", "self", ".", "batch_dim", ":", "]", "\n", "storage", "=", "batch", "[", "0", "]", ".", "storage", "(", ")", ".", "_new_shared", "(", "reduce", "(", "mul", ",", "s", ",", "1", ")", ")", "\n", "out", "=", "batch", "[", "0", "]", ".", "new", "(", "storage", ")", ".", "view", "(", "s", ")", ".", "fill_", "(", "self", ".", "ignore_symbol", "if", "self", ".", "ignore_symbol", "is", "not", "None", "else", "0", ")", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "batch", ")", ":", "\n", "            ", "bdim", "=", "self", ".", "batch_dim", "if", "len", "(", "out", ".", "shape", ")", ">", "self", ".", "batch_dim", "else", "0", "\n", "this_o", "=", "out", ".", "narrow", "(", "bdim", ",", "i", ",", "1", ")", ".", "squeeze", "(", "bdim", ")", "\n", "for", "j", ",", "diff", "in", "enumerate", "(", "different", ")", ":", "\n", "                ", "if", "different", "[", "j", "]", ":", "\n", "                    ", "this_o", "=", "this_o", ".", "narrow", "(", "j", ",", "0", ",", "d", ".", "size", "(", "j", ")", ")", "\n", "\n", "", "", "this_o", ".", "copy_", "(", "d", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.loader.collate.VarLengthCollate.__call__": [[39, 54], ["isinstance", "isinstance", "collate.VarLengthCollate.", "torch.is_tensor", "batch[].keys", "warnings.catch_warnings", "warnings.filterwarnings", "collate.VarLengthCollate.", "collate.VarLengthCollate._merge_var_len_array", "isinstance", "torch.Tensor", "torch.from_numpy", "type"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.loader.collate.VarLengthCollate._merge_var_len_array"], ["", "def", "__call__", "(", "self", ",", "batch", ")", ":", "\n", "        ", "if", "isinstance", "(", "batch", "[", "0", "]", ",", "dict", ")", ":", "\n", "            ", "return", "{", "k", ":", "self", "(", "[", "b", "[", "k", "]", "for", "b", "in", "batch", "]", ")", "for", "k", "in", "batch", "[", "0", "]", ".", "keys", "(", ")", "}", "\n", "", "elif", "isinstance", "(", "batch", "[", "0", "]", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "# If the source data is mmapped from a file, from_numpy will throw a warning that it is readonly.", "\n", "# However it does not matter, since all batches will be merged anyway, which copies the data.", "\n", "                ", "warnings", ".", "filterwarnings", "(", "\"ignore\"", ",", "category", "=", "UserWarning", ")", "\n", "return", "self", "(", "[", "torch", ".", "from_numpy", "(", "a", ")", "for", "a", "in", "batch", "]", ")", "\n", "", "", "elif", "torch", ".", "is_tensor", "(", "batch", "[", "0", "]", ")", ":", "\n", "            ", "return", "self", ".", "_merge_var_len_array", "(", "batch", ")", "\n", "", "elif", "isinstance", "(", "batch", "[", "0", "]", ",", "(", "int", ",", "float", ")", ")", ":", "\n", "            ", "return", "torch", ".", "Tensor", "(", "batch", ")", "\n", "", "else", ":", "\n", "            ", "assert", "False", ",", "\"Unknown type: %s\"", "%", "type", "(", "batch", "[", "0", "]", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.loader.sampler.InfiniteSampler.__init__": [[9, 14], ["super().__init__", "utils.seed.get_randstate"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.seed.get_randstate"], ["    ", "def", "__init__", "(", "self", ",", "data_source", ":", "torch", ".", "utils", ".", "data", ".", "Dataset", ",", "replacement", "=", "True", ",", "seed", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "data_source", ")", "\n", "self", ".", "data_source", "=", "data_source", "\n", "self", ".", "replacement", "=", "replacement", "\n", "self", ".", "seed", "=", "utils", ".", "seed", ".", "get_randstate", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.loader.sampler.InfiniteSampler.__iter__": [[15, 31], ["len", "sampler.InfiniteSampler.seed.randint", "sampler.InfiniteSampler.seed.permutation().tolist", "sampler.InfiniteSampler.seed.permutation"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "n", "=", "len", "(", "self", ".", "data_source", ")", "\n", "if", "self", ".", "replacement", ":", "\n", "            ", "while", "True", ":", "\n", "                ", "yield", "self", ".", "seed", ".", "randint", "(", "0", ",", "n", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "", "", "else", ":", "\n", "            ", "i_list", "=", "None", "\n", "pos", "=", "n", "\n", "while", "True", ":", "\n", "                ", "if", "pos", ">=", "n", ":", "\n", "                    ", "i_list", "=", "self", ".", "seed", ".", "permutation", "(", "n", ")", ".", "tolist", "(", ")", "\n", "pos", "=", "0", "\n", "\n", "", "sample", "=", "i_list", "[", "pos", "]", "\n", "pos", "+=", "1", "\n", "yield", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.loader.sampler.InfiniteSampler.__len__": [[32, 34], ["None"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "0x7FFFFFFF", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_loss_accuracy.plot": [[10, 36], ["matplotlib.scatter", "matplotlib.xscale", "matplotlib.colorbar", "plt.colorbar.ax.set_yticklabels", "fig.axes[].yaxis.set_label_coords", "r.history", "xs.append", "ys.append", "cs.append", "min", "max", "min", "max"], "function", ["None"], ["def", "plot", "(", "runs", ",", "group", ",", "from_iter", ":", "int", "=", "0", ",", "loss_group", "=", "None", ")", ":", "\n", "    ", "xs", "=", "[", "]", "\n", "ys", "=", "[", "]", "\n", "cs", "=", "[", "]", "\n", "\n", "loss_group", "=", "loss_group", "or", "group", "\n", "\n", "for", "r", "in", "runs", ":", "\n", "        ", "hist", "=", "r", ".", "history", "(", "keys", "=", "[", "f\"validation/{group}/accuracy/total\"", ",", "f\"validation/{loss_group}/loss\"", ",", "\"iteration\"", "]", ",", "\n", "pandas", "=", "False", ")", "\n", "for", "p", "in", "hist", ":", "\n", "            ", "if", "p", "[", "\"iteration\"", "]", "<", "from_iter", ":", "\n", "                ", "continue", "\n", "", "xs", ".", "append", "(", "p", "[", "f\"validation/{loss_group}/loss\"", "]", ")", "\n", "ys", ".", "append", "(", "p", "[", "f\"validation/{group}/accuracy/total\"", "]", "*", "100", ")", "\n", "cs", ".", "append", "(", "p", "[", "\"iteration\"", "]", ")", "\n", "", "", "sc", "=", "plt", ".", "scatter", "(", "xs", ",", "ys", ",", "c", "=", "cs", ")", "\n", "plt", ".", "xscale", "(", "'log'", ")", "\n", "cbar", "=", "plt", ".", "colorbar", "(", "sc", ",", "ticks", "=", "[", "min", "(", "cs", ")", ",", "max", "(", "cs", ")", "]", ",", "pad", "=", "0.02", ")", "\n", "cbar", ".", "ax", ".", "set_yticklabels", "(", "[", "f\"{min(cs)//1000}k\"", ",", "f\"{max(cs)//1000}k\"", "]", ")", "\n", "# divider = make_axes_locatable(ax)", "\n", "# cax = divider.append_axes(\"right\", size=0.25, pad=0.1)", "\n", "# plt.colorbar(im, cax)", "\n", "\n", "# plt.tick_params(axis='x', labelsize=8) ", "\n", "fig", ".", "axes", "[", "0", "]", ".", "yaxis", ".", "set_label_coords", "(", "-", "0.120", ",", "0.45", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_loss_accuracy.plot_test_axis_labels": [[37, 40], ["matplotlib.xlabel", "matplotlib.ylabel"], "function", ["None"], ["", "def", "plot_test_axis_labels", "(", ")", ":", "\n", "    ", "plt", ".", "xlabel", "(", "\"Test loss\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Test accuracy [\\%]\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_cogs_early_stopping.download": [[19, 24], ["run.history", "list", "sorted", "points.keys"], "function", ["None"], ["def", "download", "(", "run", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "hist", "=", "run", ".", "history", "(", "*", "args", ",", "**", "kwargs", ",", "pandas", "=", "False", ")", "\n", "points", "=", "{", "p", "[", "\"iteration\"", "]", ":", "p", "for", "p", "in", "hist", "}", "\n", "iters", "=", "list", "(", "sorted", "(", "points", ".", "keys", "(", ")", ")", ")", "\n", "return", "iters", ",", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_cogs_early_stopping.plot_runs": [[25, 58], ["statistics.median", "matplotlib.plot", "matplotlib.fill_between", "p[].get_color", "plot_cogs_early_stopping.download", "plot_cogs_early_stopping.download", "data.append", "lib.StatTracker", "zip", "s.get", "matplotlib.axvline", "s.add", "zip", "zip"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.plot", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.download", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.download", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add"], ["", "def", "plot_runs", "(", "runs", ")", ":", "\n", "    ", "data", "=", "[", "]", "\n", "for", "r", "in", "runs", ":", "\n", "        ", "iters", ",", "points", "=", "download", "(", "r", ",", "keys", "=", "[", "\"validation/gen/accuracy/total\"", ",", "\"iteration\"", "]", ")", "\n", "acc", "=", "[", "points", "[", "i", "]", "[", "\"validation/gen/accuracy/total\"", "]", "for", "i", "in", "iters", "]", "\n", "\n", "# They might be recorded with different frequencies, so query them twice", "\n", "iters2", ",", "points", "=", "download", "(", "r", ",", "keys", "=", "[", "\"validation/val/time_since_best_loss\"", ",", "\"iteration\"", "]", ")", "\n", "\n", "stop_point", "=", "iters2", "[", "-", "1", "]", "\n", "for", "i", "in", "iters2", ":", "\n", "            ", "if", "points", "[", "i", "]", "[", "\"validation/val/time_since_best_loss\"", "]", ">=", "window", ":", "\n", "                ", "stop_point", "=", "i", "\n", "break", "\n", "", "", "data", ".", "append", "(", "(", "iters", ",", "acc", ",", "stop_point", "-", "window", ")", ")", "\n", "\n", "", "for", "d", "in", "data", ":", "\n", "        ", "assert", "d", "[", "0", "]", "==", "data", "[", "0", "]", "[", "0", "]", "\n", "\n", "", "ystat", "=", "[", "lib", ".", "StatTracker", "(", ")", "for", "_", "in", "data", "[", "0", "]", "[", "0", "]", "]", "\n", "for", "d", "in", "data", ":", "\n", "        ", "for", "s", ",", "v", "in", "zip", "(", "ystat", ",", "d", "[", "1", "]", ")", ":", "\n", "            ", "s", ".", "add", "(", "v", ")", "\n", "", "", "ystat", "=", "[", "s", ".", "get", "(", ")", "for", "s", "in", "ystat", "]", "\n", "mean", "=", "[", "s", ".", "mean", "*", "100", "for", "s", "in", "ystat", "]", "\n", "std", "=", "[", "s", ".", "std", "*", "100", "for", "s", "in", "ystat", "]", "\n", "\n", "median_stop_point", "=", "statistics", ".", "median", "(", "[", "d", "[", "2", "]", "for", "d", "in", "data", "]", ")", "\n", "\n", "p", "=", "plt", ".", "plot", "(", "data", "[", "0", "]", "[", "0", "]", ",", "mean", ")", "\n", "plt", ".", "fill_between", "(", "data", "[", "0", "]", "[", "0", "]", ",", "[", "m", "-", "s", "for", "m", ",", "s", "in", "zip", "(", "mean", ",", "std", ")", "]", ",", "[", "m", "+", "s", "for", "m", ",", "s", "in", "zip", "(", "mean", ",", "std", ")", "]", ",", "alpha", "=", "0.3", ")", "\n", "color", "=", "p", "[", "-", "1", "]", ".", "get_color", "(", ")", "\n", "return", "lambda", ":", "plt", ".", "axvline", "(", "x", "=", "median_stop_point", ",", "color", "=", "color", ",", "zorder", "=", "-", "100", ",", "linestyle", "=", "\"--\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_small_batch.average_accuracy": [[25, 33], ["lib.StatTracker", "list", "max", "lib.StatTracker.get", "lib.StatTracker.add"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add"], ["def", "average_accuracy", "(", "runs", ",", "split_name", ")", ":", "\n", "    ", "st", "=", "lib", ".", "StatTracker", "(", ")", "\n", "runs", "=", "list", "(", "runs", ")", "\n", "it", "=", "max", "(", "[", "r", ".", "summary", "[", "\"iteration\"", "]", "for", "r", "in", "runs", "]", ")", "\n", "for", "r", "in", "runs", ":", "\n", "        ", "st", ".", "add", "(", "r", ".", "summary", "[", "f\"validation/{split_name}/accuracy/total\"", "]", ")", "\n", "assert", "r", ".", "summary", "[", "\"iteration\"", "]", "==", "it", "\n", "", "return", "st", ".", "get", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_relatrafo_convergece.calculate_converged_iter": [[32, 53], ["statistics.median", "r.history", "list", "enumerate", "stop_list.append", "sorted", "max", "list.index"], "function", ["None"], ["def", "calculate_converged_iter", "(", "runs", ",", "key", "=", "\"val\"", ",", "threshold", "=", "0.80", ")", ":", "\n", "    ", "stop_list", "=", "[", "]", "\n", "for", "r", "in", "runs", ":", "\n", "        ", "hist", "=", "r", ".", "history", "(", "keys", "=", "[", "f\"validation/{key}/accuracy/total\"", ",", "\"iteration\"", "]", ",", "pandas", "=", "False", ")", "\n", "x", "=", "list", "(", "sorted", "(", "a", "[", "\"iteration\"", "]", "for", "a", "in", "hist", ")", ")", "\n", "y", "=", "[", "None", "for", "_", "in", "x", "]", "\n", "\n", "for", "h", "in", "hist", ":", "\n", "            ", "y", "[", "x", ".", "index", "(", "h", "[", "\"iteration\"", "]", ")", "]", "=", "h", "[", "f\"validation/{key}/accuracy/total\"", "]", "\n", "\n", "", "th", "=", "max", "(", "y", ")", "*", "threshold", "\n", "first", "=", "None", "\n", "for", "i", ",", "a", "in", "enumerate", "(", "y", ")", ":", "\n", "            ", "if", "a", ">=", "th", ":", "\n", "                ", "first", "=", "i", "\n", "break", "\n", "\n", "", "", "interp", "=", "x", "[", "first", "-", "1", "]", "+", "(", "x", "[", "first", "]", "-", "x", "[", "first", "-", "1", "]", ")", "/", "(", "y", "[", "first", "]", "-", "y", "[", "first", "-", "1", "]", ")", "*", "(", "th", "-", "y", "[", "first", "-", "1", "]", ")", "\n", "stop_list", ".", "append", "(", "interp", ")", "\n", "\n", "", "return", "statistics", ".", "median", "(", "stop_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_init_iid.print_table": [[33, 39], ["d.keys", "max", "print", "range", "len", "zip", "data.values"], "function", ["None"], ["def", "print_table", "(", "data", ")", ":", "\n", "    ", "best", "=", "[", "max", "(", "v", "[", "i", "]", ".", "mean", "for", "v", "in", "data", ".", "values", "(", ")", ")", "for", "i", "in", "range", "(", "len", "(", "columns", ")", ")", "]", "\n", "for", "vname", "in", "d", ".", "keys", "(", ")", ":", "\n", "        ", "s", "=", "data", "[", "vname", "]", "\n", "s", "=", "[", "(", "\"{\\\\bf\"", "if", "m", "-", "a", ".", "mean", "<", "0.005", "else", "\"\"", ")", "+", "f\"{a.mean:.2f} $\\\\pm$ {a.std:.2f}\"", "+", "(", "\"}\"", "if", "m", "-", "a", ".", "mean", "<", "0.005", "else", "\"\"", ")", "for", "a", ",", "m", "in", "zip", "(", "s", ",", "best", ")", "]", "\n", "print", "(", "\" & \"", "+", "vname", "+", "\" & \"", "+", "\" & \"", ".", "join", "(", "s", ")", "+", "\" \\\\\\\\\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_big_result_table_iid.average_accuracy": [[21, 41], ["lib.StatTracker", "list", "max", "lib.StatTracker.get", "lib.StatTracker.add", "r.history", "lib.StatTracker.add"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add"], ["def", "average_accuracy", "(", "runs", ",", "split_name", ",", "step", ")", "->", "float", ":", "\n", "    ", "st", "=", "lib", ".", "StatTracker", "(", ")", "\n", "runs", "=", "list", "(", "runs", ")", "\n", "it", "=", "max", "(", "[", "r", ".", "summary", "[", "\"iteration\"", "]", "for", "r", "in", "runs", "]", ")", "\n", "for", "r", "in", "runs", ":", "\n", "        ", "if", "f\"validation/{split_name}/accuracy/total\"", "not", "in", "r", ".", "summary", ":", "\n", "            ", "continue", "\n", "\n", "", "if", "step", "is", "None", ":", "\n", "            ", "st", ".", "add", "(", "r", ".", "summary", "[", "f\"validation/{split_name}/accuracy/total\"", "]", ")", "\n", "assert", "r", ".", "summary", "[", "\"iteration\"", "]", "==", "it", ",", "f\"Inconsistend final iteration for run {r.id}: {r.summary['iteration']} instead of {it}\"", "\n", "", "else", ":", "\n", "            ", "hist", "=", "r", ".", "history", "(", "keys", "=", "[", "f\"validation/{split_name}/accuracy/total\"", ",", "\"iteration\"", "]", ",", "pandas", "=", "False", ")", "\n", "for", "h", "in", "hist", ":", "\n", "                ", "if", "h", "[", "\"iteration\"", "]", "==", "step", ":", "\n", "                    ", "st", ".", "add", "(", "h", "[", "f\"validation/{split_name}/accuracy/total\"", "]", ")", "\n", "break", "\n", "", "", "else", ":", "\n", "                ", "assert", "False", ",", "f\"Step {step} not found.\"", "\n", "", "", "", "return", "st", ".", "get", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_big_result_table_iid.format_results": [[42, 70], ["lib.common.group", "columns.values", "max", "max", "cols.append", "ex_cols.append", "cols.append", "ex_cols.append", "zip", "found.append", "range", "len", "plot_big_result_table_iid.average_accuracy", "plot_big_result_table_iid.average_accuracy"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.common.group", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_big_result_table.average_accuracy", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_big_result_table.average_accuracy"], ["", "def", "format_results", "(", "runs", ",", "split_name", ",", "ex_split_name", ",", "step", ")", "->", "str", ":", "\n", "    ", "run_group", "=", "lib", ".", "common", ".", "group", "(", "runs", ",", "[", "'transformer.variant'", "]", ")", "\n", "\n", "cols", "=", "[", "]", "\n", "ex_cols", "=", "[", "]", "\n", "for", "clist", "in", "columns", ".", "values", "(", ")", ":", "\n", "        ", "found", "=", "[", "]", "\n", "for", "c", "in", "clist", ":", "\n", "            ", "full_name", "=", "f\"transformer.variant_{c}\"", "\n", "if", "full_name", "in", "run_group", ":", "\n", "                ", "found", ".", "append", "(", "(", "\n", "average_accuracy", "(", "run_group", "[", "full_name", "]", ",", "split_name", ",", "step", ")", ",", "\n", "average_accuracy", "(", "run_group", "[", "full_name", "]", ",", "ex_split_name", ",", "step", ")", ",", "\n", ")", ")", "\n", "\n", "", "", "if", "found", ":", "\n", "            ", "max_i", "=", "max", "(", "range", "(", "len", "(", "found", ")", ")", ",", "key", "=", "lambda", "i", ":", "found", "[", "i", "]", "[", "1", "]", ".", "mean", ")", "\n", "cols", ".", "append", "(", "found", "[", "max_i", "]", "[", "0", "]", ")", "\n", "ex_cols", ".", "append", "(", "found", "[", "max_i", "]", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "cols", ".", "append", "(", "None", ")", "\n", "ex_cols", ".", "append", "(", "None", ")", "\n", "\n", "", "", "maxval", "=", "max", "(", "c", ".", "mean", "for", "c", "in", "cols", "if", "c", "is", "not", "None", ")", "\n", "cols", "=", "[", "(", "(", "\"{\\\\bf\"", "if", "c", ".", "mean", ">", "maxval", "-", "0.01", "else", "\"\"", ")", "+", "f\"{c.mean:.2f} $\\\\pm$ {c.std:.2f}\"", "+", "\n", "(", "\"}\"", "if", "c", ".", "mean", ">", "maxval", "-", "0.01", "else", "\"\"", ")", ")", "if", "c", "is", "not", "None", "else", "\"-\"", "for", "c", "in", "cols", "]", "\n", "cols", "=", "[", "c", "+", "(", "f\" ({exc.mean:.2f})\"", "if", "exc", "else", "\"\"", ")", "for", "c", ",", "exc", "in", "zip", "(", "cols", ",", "ex_cols", ")", "]", "\n", "return", "\" & \"", ".", "join", "(", "cols", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_pcfg.get": [[15, 35], ["list", "r.history", "sorted", "acc[].get", "loss[].get", "loss[].add", "acc[].add", "acc.keys", "lib.StatTracker", "lib.StatTracker"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add"], ["def", "get", "(", "runs", ")", ":", "\n", "    ", "acc", "=", "{", "}", "\n", "loss", "=", "{", "}", "\n", "\n", "for", "r", "in", "runs", ":", "\n", "        ", "hist", "=", "r", ".", "history", "(", "keys", "=", "[", "\"validation/val/accuracy/total\"", ",", "\"validation/val/loss\"", ",", "\"iteration\"", "]", ",", "pandas", "=", "False", ")", "\n", "for", "p", "in", "hist", ":", "\n", "            ", "i", "=", "p", "[", "\"iteration\"", "]", "\n", "if", "i", "not", "in", "acc", ":", "\n", "                ", "acc", "[", "i", "]", "=", "lib", ".", "StatTracker", "(", ")", "\n", "loss", "[", "i", "]", "=", "lib", ".", "StatTracker", "(", ")", "\n", "\n", "", "loss", "[", "i", "]", ".", "add", "(", "p", "[", "\"validation/val/loss\"", "]", ")", "\n", "acc", "[", "i", "]", ".", "add", "(", "p", "[", "\"validation/val/accuracy/total\"", "]", "*", "100", ")", "\n", "\n", "", "", "x", "=", "list", "(", "sorted", "(", "acc", ".", "keys", "(", ")", ")", ")", "\n", "acc", "=", "[", "acc", "[", "i", "]", ".", "get", "(", ")", "for", "i", "in", "x", "]", "\n", "loss", "=", "[", "loss", "[", "i", "]", ".", "get", "(", ")", "for", "i", "in", "x", "]", "\n", "\n", "return", "x", ",", "acc", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_big_result_table_with_init.average_accuracy": [[43, 63], ["lib.StatTracker", "list", "max", "lib.StatTracker.get", "lib.StatTracker.add", "r.history", "lib.StatTracker.add"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add"], ["def", "average_accuracy", "(", "runs", ",", "split_name", ",", "step", ")", "->", "float", ":", "\n", "    ", "st", "=", "lib", ".", "StatTracker", "(", ")", "\n", "runs", "=", "list", "(", "runs", ")", "\n", "it", "=", "max", "(", "[", "r", ".", "summary", "[", "\"iteration\"", "]", "for", "r", "in", "runs", "]", ")", "\n", "for", "r", "in", "runs", ":", "\n", "        ", "if", "f\"validation/{split_name}/accuracy/total\"", "not", "in", "r", ".", "summary", ":", "\n", "            ", "continue", "\n", "\n", "", "if", "step", "is", "None", ":", "\n", "            ", "st", ".", "add", "(", "r", ".", "summary", "[", "f\"validation/{split_name}/accuracy/total\"", "]", ")", "\n", "assert", "r", ".", "summary", "[", "\"iteration\"", "]", "==", "it", ",", "f\"Inconsistend final iteration for run {r.id}: {r.summary['iteration']} instead of {it}\"", "\n", "", "else", ":", "\n", "            ", "hist", "=", "r", ".", "history", "(", "keys", "=", "[", "f\"validation/{split_name}/accuracy/total\"", ",", "\"iteration\"", "]", ",", "pandas", "=", "False", ")", "\n", "for", "h", "in", "hist", ":", "\n", "                ", "if", "h", "[", "\"iteration\"", "]", "==", "step", ":", "\n", "                    ", "st", ".", "add", "(", "h", "[", "f\"validation/{split_name}/accuracy/total\"", "]", ")", "\n", "break", "\n", "", "", "else", ":", "\n", "                ", "assert", "False", ",", "f\"Step {step} not found.\"", "\n", "", "", "", "return", "st", ".", "get", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_big_result_table_with_init.format_results": [[64, 106], ["lib.common.group", "columns.values", "rtmp.append", "max", "rows.append", "init_type_table.items", "cols.append", "range", "round", "len", "max", "enumerate", "len", "plot_big_result_table_with_init.average_accuracy", "len", "round", "round"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.common.group", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_big_result_table.average_accuracy"], ["", "def", "format_results", "(", "runs", ",", "title", ",", "split_name", ",", "step", ",", "best_other", ")", "->", "str", ":", "\n", "    ", "run_group", "=", "lib", ".", "common", ".", "group", "(", "runs", ",", "[", "'transformer.variant'", "]", ")", "\n", "variants", "=", "{", "v", "for", "k", ",", "v", "in", "init_type_table", ".", "items", "(", ")", "if", "f\"transformer.variant_{k}\"", "in", "run_group", "}", "\n", "\n", "rtmp", "=", "[", "]", "\n", "for", "i", "in", "init_order", ":", "\n", "        ", "if", "i", "not", "in", "variants", ":", "\n", "            ", "continue", "\n", "\n", "", "cols", "=", "[", "]", "\n", "for", "clist", "in", "columns", ".", "values", "(", ")", ":", "\n", "            ", "cols", ".", "append", "(", "None", ")", "\n", "for", "c", "in", "clist", ":", "\n", "                ", "full_name", "=", "f\"transformer.variant_{c}\"", "\n", "if", "init_type_table", "[", "c", "]", "==", "i", "and", "full_name", "in", "run_group", ":", "\n", "                    ", "assert", "cols", "[", "-", "1", "]", "is", "None", ",", "\"Can't be multiple variants\"", "\n", "cols", "[", "-", "1", "]", "=", "average_accuracy", "(", "run_group", "[", "full_name", "]", ",", "split_name", ",", "step", ")", "\n", "\n", "", "", "", "rtmp", ".", "append", "(", "(", "i", ",", "cols", ")", ")", "\n", "\n", "", "cols", "=", "[", "[", "r", "[", "1", "]", "[", "i", "]", ".", "mean", "for", "r", "in", "rtmp", "if", "r", "[", "1", "]", "[", "i", "]", "]", "for", "i", "in", "range", "(", "len", "(", "columns", ")", ")", "]", "\n", "maxy", "=", "[", "round", "(", "max", "(", "c", ")", ",", "2", ")", "if", "c", "else", "None", "for", "c", "in", "cols", "]", "\n", "\n", "rows", "=", "[", "]", "\n", "for", "i", ",", "cols", "in", "rtmp", ":", "\n", "        ", "maxx", "=", "max", "(", "c", ".", "mean", "for", "c", "in", "cols", "if", "c", "is", "not", "None", ")", "\n", "cols", "=", "[", "(", "(", "\"\\\\bf{\"", "if", "maxy", "[", "ci", "]", "and", "round", "(", "c", ".", "mean", ",", "2", ")", "==", "maxy", "[", "ci", "]", "else", "\"\"", ")", "+", "#(\"\\\\bf{\" if abs(c.mean - maxx) < eps else \"\") + \\", "\n", "#(\"\\\\emph{\" if abs(c.mean - max_all) < eps else \"\") + \\", "\n", "f\"{c.mean:.2f} $\\\\pm$ {c.std:.2f}\"", "+", "#(\"}\" if abs(c.mean - max_all) < eps else \"\") + \\", "\n", "#(\"}\" if abs(c.mean - maxx) < eps else \"\") + \\", "\n", "(", "\"}\"", "if", "maxy", "[", "ci", "]", "and", "round", "(", "c", ".", "mean", ",", "2", ")", "==", "maxy", "[", "ci", "]", "else", "\"\"", ")", ")", "if", "c", "is", "not", "None", "else", "\"-\"", "for", "ci", ",", "c", "in", "enumerate", "(", "cols", ")", "]", "\n", "\n", "rows", ".", "append", "(", "f\"{i} & \"", "+", "\" & \"", ".", "join", "(", "cols", ")", ")", "\n", "\n", "", "res", "=", "f\"\\\\multirow{{{len(rows)}}}{{*}}{{{title}}} & \"", "+", "rows", "[", "0", "]", "+", "f\" & \\\\multirow{{{len(rows)}}}{{*}}{{{best_other}}} \\\\\\\\ \\n\"", "\n", "for", "r", "in", "rows", "[", "1", ":", "]", ":", "\n", "        ", "res", "+=", "f\" & {r} & \\\\\\\\ \\n\"", "\n", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_big_result_table.average_accuracy": [[30, 50], ["lib.StatTracker", "list", "max", "lib.StatTracker.get", "lib.StatTracker.add", "r.history", "lib.StatTracker.add"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add"], ["def", "average_accuracy", "(", "runs", ",", "split_name", ",", "step", ")", "->", "float", ":", "\n", "    ", "st", "=", "lib", ".", "StatTracker", "(", ")", "\n", "runs", "=", "list", "(", "runs", ")", "\n", "it", "=", "max", "(", "[", "r", ".", "summary", "[", "\"iteration\"", "]", "for", "r", "in", "runs", "]", ")", "\n", "for", "r", "in", "runs", ":", "\n", "        ", "if", "f\"validation/{split_name}/accuracy/total\"", "not", "in", "r", ".", "summary", ":", "\n", "            ", "continue", "\n", "\n", "", "if", "step", "is", "None", ":", "\n", "            ", "st", ".", "add", "(", "r", ".", "summary", "[", "f\"validation/{split_name}/accuracy/total\"", "]", ")", "\n", "assert", "r", ".", "summary", "[", "\"iteration\"", "]", "==", "it", ",", "f\"Inconsistend final iteration for run {r.id}: {r.summary['iteration']} instead of {it}\"", "\n", "", "else", ":", "\n", "            ", "hist", "=", "r", ".", "history", "(", "keys", "=", "[", "f\"validation/{split_name}/accuracy/total\"", ",", "\"iteration\"", "]", ",", "pandas", "=", "False", ")", "\n", "for", "h", "in", "hist", ":", "\n", "                ", "if", "h", "[", "\"iteration\"", "]", "==", "step", ":", "\n", "                    ", "st", ".", "add", "(", "h", "[", "f\"validation/{split_name}/accuracy/total\"", "]", ")", "\n", "break", "\n", "", "", "else", ":", "\n", "                ", "assert", "False", ",", "f\"Step {step} not found.\"", "\n", "", "", "", "return", "st", ".", "get", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_big_result_table.format_results": [[51, 68], ["lib.common.group", "columns.values", "max", "cols.append", "found.append", "max", "plot_big_result_table.average_accuracy"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.common.group", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.paper.plot_big_result_table.average_accuracy"], ["", "def", "format_results", "(", "runs", ",", "split_name", ",", "step", ")", "->", "str", ":", "\n", "    ", "run_group", "=", "lib", ".", "common", ".", "group", "(", "runs", ",", "[", "'transformer.variant'", "]", ")", "\n", "\n", "cols", "=", "[", "]", "\n", "for", "clist", "in", "columns", ".", "values", "(", ")", ":", "\n", "        ", "found", "=", "[", "]", "\n", "for", "c", "in", "clist", ":", "\n", "            ", "full_name", "=", "f\"transformer.variant_{c}\"", "\n", "if", "full_name", "in", "run_group", ":", "\n", "                ", "found", ".", "append", "(", "average_accuracy", "(", "run_group", "[", "full_name", "]", ",", "split_name", ",", "step", ")", ")", "\n", "\n", "", "", "cols", ".", "append", "(", "max", "(", "found", ",", "key", "=", "lambda", "x", ":", "x", ".", "mean", ")", "if", "found", "else", "None", ")", "\n", "\n", "", "maxval", "=", "max", "(", "c", ".", "mean", "for", "c", "in", "cols", "if", "c", "is", "not", "None", ")", "\n", "cols", "=", "[", "(", "(", "\"\\\\bf{\"", "if", "c", ".", "mean", "==", "maxval", "else", "\"\"", ")", "+", "f\"{c.mean:.2f} $\\\\pm$ {c.std:.2f}\"", "+", "\n", "(", "\"}\"", "if", "c", ".", "mean", "==", "maxval", "else", "\"\"", ")", ")", "if", "c", "is", "not", "None", "else", "\"-\"", "for", "c", "in", "cols", "]", "\n", "return", "\" & \"", ".", "join", "(", "cols", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.config.get_config": [[4, 7], ["open", "json.load"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load"], ["def", "get_config", "(", ")", ":", "\n", "    ", "with", "open", "(", "'config.json'", ")", "as", "json_file", ":", "\n", "        ", "return", "json", ".", "load", "(", "json_file", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.source.get_sweep_table": [[8, 46], ["gql.gql", "project.split", "api.client.execute", "api.client.execute.get().get().get", "api.client.execute.get().get", "[].strip", "len", "api.client.execute.get", "sweep[].split", "s.startswith", "name[].split"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["def", "get_sweep_table", "(", "api", ":", "wandb", ".", "Api", ",", "project", ":", "str", ")", "->", "Dict", "[", "str", ",", "str", "]", ":", "\n", "    ", "QUERY", "=", "gql", "(", "'''       \n    query Sweep($project: String!, $entity: String) {\n        project(name: $project, entityName: $entity) {\n            sweeps {\n                edges {\n                    node {\n                        name\n                        displayName\n                        config\n                    }\n                }\n            }\n        }\n    }'''", ")", "\n", "\n", "entity", ",", "project", "=", "project", ".", "split", "(", "\"/\"", ")", "\n", "response", "=", "api", ".", "client", ".", "execute", "(", "QUERY", ",", "variable_values", "=", "{", "\n", "'entity'", ":", "entity", ",", "\n", "'project'", ":", "project", ",", "\n", "}", ")", "\n", "\n", "edges", "=", "response", ".", "get", "(", "\"project\"", ",", "{", "}", ")", ".", "get", "(", "\"sweeps\"", ",", "{", "}", ")", ".", "get", "(", "\"edges\"", ")", "\n", "assert", "edges", "\n", "\n", "id_to_name", "=", "{", "}", "\n", "for", "sweep", "in", "edges", ":", "\n", "        ", "sweep", "=", "sweep", "[", "\"node\"", "]", "\n", "\n", "name", "=", "sweep", "[", "\"displayName\"", "]", "\n", "if", "name", "is", "None", ":", "\n", "            ", "name", "=", "[", "s", "for", "s", "in", "sweep", "[", "\"config\"", "]", ".", "split", "(", "\"\\n\"", ")", "if", "s", ".", "startswith", "(", "\"name:\"", ")", "]", "\n", "assert", "len", "(", "name", ")", "==", "1", "\n", "name", "=", "name", "[", "0", "]", ".", "split", "(", "\":\"", ")", "[", "1", "]", ".", "strip", "(", ")", "\n", "\n", "", "id_to_name", "[", "sweep", "[", "\"name\"", "]", "]", "=", "name", "\n", "\n", "", "return", "id_to_name", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.source.invert_sweep_id_table": [[48, 63], ["set", "t.items", "print", "set.add"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add"], ["", "def", "invert_sweep_id_table", "(", "t", ":", "Dict", "[", "str", ",", "str", "]", ")", "->", "Dict", "[", "str", ",", "str", "]", ":", "\n", "    ", "repeats", "=", "set", "(", ")", "\n", "res", "=", "{", "}", "\n", "for", "id", ",", "name", "in", "t", ".", "items", "(", ")", ":", "\n", "        ", "if", "name", "in", "res", ":", "\n", "            ", "repeats", ".", "add", "(", "name", ")", "\n", "\n", "", "res", "[", "name", "]", "=", "id", "\n", "\n", "", "for", "r", "in", "repeats", ":", "\n", "        ", "del", "res", "[", "r", "]", "\n", "\n", "", "print", "(", "\"Removed the following duplicated sweeps:\"", ",", "repeats", ")", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.source.get_runs": [[66, 89], ["wandb.Api", "config.get_config", "filter.update", "list", "all", "print", "source.invert_sweep_id_table", "wandb.Api.runs", "len", "len", "source.get_sweep_table", "len"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.config.get_config", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.source.invert_sweep_id_table", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.source.get_sweep_table"], ["def", "get_runs", "(", "names", ":", "List", "[", "str", "]", ",", "filters", "=", "{", "}", ")", "->", "List", "[", "wandb", ".", "apis", ".", "public", ".", "Run", "]", ":", "\n", "    ", "global", "sweep_table", "\n", "api", "=", "wandb", ".", "Api", "(", ")", "\n", "\n", "config", "=", "get_config", "(", ")", "\n", "project", "=", "config", "[", "\"wandb_project\"", "]", "\n", "\n", "if", "sweep_table", "is", "None", ":", "\n", "        ", "sweep_table", "=", "invert_sweep_id_table", "(", "get_sweep_table", "(", "api", ",", "project", ")", ")", "\n", "\n", "", "for", "n", "in", "names", ":", "\n", "        ", "assert", "n", "in", "sweep_table", ",", "f\"Sweep {n} not found\"", "\n", "\n", "", "sweep_id_list", "=", "[", "sweep_table", "[", "n", "]", "for", "n", "in", "names", "]", "\n", "filter", "=", "{", "\"sweep\"", ":", "{", "\"$in\"", ":", "sweep_id_list", "}", "}", "\n", "filter", ".", "update", "(", "filters", ")", "\n", "res", "=", "list", "(", "api", ".", "runs", "(", "project", ",", "filter", ")", ")", "\n", "\n", "assert", "len", "(", "res", ")", ">", "0", ",", "\"Runs not found.\"", "\n", "assert", "all", "(", "r", ".", "state", "==", "\"finished\"", "for", "r", "in", "res", ")", "\n", "print", "(", "f\"Querying runs {names}: {len(res)} runs loaded\"", ")", "\n", "assert", "len", "(", "res", ")", ">", "0", "\n", "return", "res", "\n", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.common.construct_name": [[6, 8], ["get_name"], "function", ["None"], ["def", "construct_name", "(", "config_names", ":", "List", "[", "str", "]", ",", "get_name", ":", "Callable", "[", "[", "str", "]", ",", "str", "]", ")", "->", "str", ":", "\n", "    ", "return", "\"/\"", ".", "join", "(", "[", "f\"{c}_{get_name(c)}\"", "for", "c", "in", "config_names", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.common.group": [[10, 20], ["common.construct_name", "res[].append", "get_config"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.common.construct_name", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.config.get_config"], ["", "def", "group", "(", "runs", ",", "config_names", ":", "List", "[", "str", "]", ",", "get_config", "=", "lambda", "run", ",", "name", ":", "run", ".", "config", "[", "name", "]", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "    ", "res", "=", "{", "}", "\n", "for", "r", "in", "runs", ":", "\n", "        ", "cval", "=", "construct_name", "(", "config_names", ",", "lambda", "name", ":", "get_config", "(", "r", ",", "name", ")", ")", "\n", "if", "cval", "not", "in", "res", ":", "\n", "            ", "res", "[", "cval", "]", "=", "[", "]", "\n", "\n", "", "res", "[", "cval", "]", ".", "append", "(", "r", ")", "\n", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.common.calc_stat": [[21, 41], ["group_of_runs.items", "r.summary.items", "stats[].add", "filter", "tracker"], "function", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add"], ["", "def", "calc_stat", "(", "group_of_runs", ":", "Dict", "[", "str", ",", "List", "[", "Any", "]", "]", ",", "filter", ",", "tracker", "=", "StatTracker", ")", "->", "Dict", "[", "str", ",", "Dict", "[", "str", ",", "StatTracker", "]", "]", ":", "\n", "    ", "all_stats", "=", "{", "}", "\n", "\n", "for", "k", ",", "rn", "in", "group_of_runs", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "not", "in", "all_stats", ":", "\n", "            ", "all_stats", "[", "k", "]", "=", "{", "}", "\n", "\n", "", "stats", "=", "all_stats", "[", "k", "]", "\n", "\n", "for", "r", "in", "rn", ":", "\n", "            ", "for", "k", ",", "v", "in", "r", ".", "summary", ".", "items", "(", ")", ":", "\n", "                ", "if", "not", "filter", "(", "k", ")", ":", "\n", "                    ", "continue", "\n", "\n", "", "if", "k", "not", "in", "stats", ":", "\n", "                    ", "stats", "[", "k", "]", "=", "tracker", "(", ")", "\n", "\n", "", "stats", "[", "k", "]", ".", "add", "(", "v", ")", "\n", "\n", "", "", "", "return", "all_stats", "\n", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.StatTracker.__init__": [[16, 20], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "sum", "=", "0", "\n", "self", ".", "sqsum", "=", "0", "\n", "self", ".", "n", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.StatTracker.add": [[21, 27], ["isinstance", "v.astype.astype.astype"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "v", ":", "float", ")", ":", "\n", "        ", "if", "isinstance", "(", "v", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "v", "=", "v", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "self", ".", "sum", "=", "self", ".", "sum", "+", "v", "\n", "self", ".", "sqsum", "=", "self", ".", "sqsum", "+", "v", "**", "2", "\n", "self", ".", "n", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.StatTracker.get": [[28, 34], ["stat_tracker.Stat", "numpy.sqrt", "numpy.maximum"], "methods", ["None"], ["", "def", "get", "(", "self", ")", "->", "Stat", ":", "\n", "        ", "assert", "self", ".", "n", ">", "0", "\n", "mean", "=", "self", ".", "sum", "/", "self", ".", "n", "\n", "var", "=", "(", "self", ".", "sqsum", "/", "self", ".", "n", "-", "mean", "**", "2", ")", "*", "self", ".", "n", "/", "(", "self", ".", "n", "-", "1", ")", "if", "self", ".", "n", ">", "1", "else", "0", "\n", "\n", "return", "Stat", "(", "mean", ",", "np", ".", "sqrt", "(", "np", ".", "maximum", "(", "var", ",", "0", ")", ")", ",", "self", ".", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.StatTracker.__repr__": [[35, 38], ["stat_tracker.StatTracker.get"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "def", "__repr__", "(", "self", ")", "->", "str", ":", "\n", "        ", "s", "=", "self", ".", "get", "(", ")", "\n", "return", "f\"Stat(mean: {s.mean}, std: {s.std})\"", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.StatTracker.__add__": [[39, 45], ["stat_tracker.StatTracker"], "methods", ["None"], ["", "def", "__add__", "(", "self", ",", "other", ")", ":", "\n", "        ", "res", "=", "StatTracker", "(", ")", "\n", "res", ".", "sum", "=", "other", ".", "sum", "+", "self", ".", "sum", "\n", "res", ".", "sqsum", "=", "other", ".", "sqsum", "+", "self", ".", "sqsum", "\n", "res", ".", "n", "=", "other", ".", "n", "+", "self", ".", "n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.__init__": [[48, 50], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "elems", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add": [[51, 55], ["isinstance", "stat_tracker.MedianTracker.elems.append", "v.astype.astype.astype"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "v", ":", "float", ")", ":", "\n", "        ", "if", "isinstance", "(", "v", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "v", "=", "v", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "self", ".", "elems", ".", "append", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.get": [[56, 59], ["statistics.median", "len"], "methods", ["None"], ["", "def", "get", "(", "self", ")", "->", "float", ":", "\n", "        ", "assert", "len", "(", "self", ".", "elems", ")", ">", "0", "\n", "return", "statistics", ".", "median", "(", "self", ".", "elems", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.__repr__": [[60, 62], ["stat_tracker.MedianTracker.get"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "def", "__repr__", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "f\"Median({self.get()})\"", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.__add__": [[63, 67], ["stat_tracker.MedianTracker"], "methods", ["None"], ["", "def", "__add__", "(", "self", ",", "other", ")", ":", "\n", "        ", "res", "=", "MedianTracker", "(", ")", "\n", "res", ".", "elems", "=", "self", ".", "elems", "+", "other", ".", "elems", "\n", "return", "res", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.__init__": [[9, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "batch_dim", ":", "int", "=", "1", ")", ":", "\n", "        ", "self", ".", "n_ok", "=", "0", "\n", "self", ".", "n_total", "=", "0", "\n", "self", ".", "batch_dim", "=", "batch_dim", "\n", "self", ".", "time_dim", "=", "1", "-", "self", ".", "batch_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.is_index_tensor": [[15, 17], ["None"], "methods", ["None"], ["", "def", "is_index_tensor", "(", "self", ",", "net_out", ":", "torch", ".", "Tensor", ")", "->", "bool", ":", "\n", "        ", "return", "net_out", ".", "dtype", "in", "[", "torch", ".", "long", ",", "torch", ".", "int", ",", "torch", ".", "int8", ",", "torch", ".", "int16", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.convert_to_index": [[18, 20], ["sequence.SequenceTestState.is_index_tensor", "net_out.argmax"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.is_index_tensor"], ["", "def", "convert_to_index", "(", "self", ",", "net_out", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "return", "net_out", "if", "self", ".", "is_index_tensor", "(", "net_out", ")", "else", "net_out", ".", "argmax", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.compare_direct": [[21, 43], ["sequence.SequenceTestState.convert_to_index", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "ref_len.unsqueeze", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.convert_to_index"], ["", "def", "compare_direct", "(", "self", ",", "net_out", ":", "Tuple", "[", "torch", ".", "Tensor", ",", "Optional", "[", "torch", ".", "Tensor", "]", "]", ",", "ref", ":", "torch", ".", "Tensor", ",", "\n", "ref_len", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "scores", ",", "len", "=", "net_out", "\n", "out", "=", "self", ".", "convert_to_index", "(", "scores", ")", "\n", "\n", "if", "len", "is", "not", "None", ":", "\n", "# Dynamic-length output", "\n", "            ", "if", "out", ".", "shape", "[", "0", "]", ">", "ref", ".", "shape", "[", "0", "]", ":", "\n", "                ", "out", "=", "out", "[", ":", "ref", ".", "shape", "[", "0", "]", "]", "\n", "", "elif", "out", ".", "shape", "[", "0", "]", "<", "ref", ".", "shape", "[", "0", "]", ":", "\n", "                ", "ref", "=", "ref", "[", ":", "out", ".", "shape", "[", "0", "]", "]", "\n", "\n", "", "unused", "=", "torch", ".", "arange", "(", "0", ",", "out", ".", "shape", "[", "0", "]", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "ref", ".", "device", ")", ".", "unsqueeze", "(", "self", ".", "batch_dim", ")", ">=", "ref_len", ".", "unsqueeze", "(", "self", ".", "time_dim", ")", "\n", "\n", "ok_mask", "=", "(", "(", "out", "==", "ref", ")", "|", "unused", ")", ".", "all", "(", "self", ".", "time_dim", ")", "&", "(", "len", "==", "ref_len", ")", "\n", "", "else", ":", "\n", "# Allow fixed lenght output", "\n", "            ", "assert", "out", ".", "shape", "==", "ref", ".", "shape", "\n", "ok_mask", "=", "(", "out", "==", "ref", ")", ".", "all", "(", "self", ".", "time_dim", ")", "\n", "\n", "", "return", "ok_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.compare_output": [[44, 46], ["sequence.SequenceTestState.compare_direct"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.compare_direct"], ["", "def", "compare_output", "(", "self", ",", "net_out", ":", "Tuple", "[", "torch", ".", "Tensor", ",", "Optional", "[", "torch", ".", "Tensor", "]", "]", ",", "data", ":", "Dict", "[", "str", ",", "torch", ".", "Tensor", "]", ")", ":", "\n", "        ", "return", "self", ".", "compare_direct", "(", "net_out", ",", "data", "[", "\"out\"", "]", ",", "data", "[", "\"out_len\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.step": [[47, 52], ["sequence.SequenceTestState.compare_output", "sequence.SequenceTestState.nelement", "sequence.SequenceTestState.long().sum().item", "sequence.SequenceTestState.long().sum", "sequence.SequenceTestState.long"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.compare_output"], ["", "def", "step", "(", "self", ",", "net_out", ":", "Tuple", "[", "torch", ".", "Tensor", ",", "Optional", "[", "torch", ".", "Tensor", "]", "]", ",", "data", ":", "Dict", "[", "str", ",", "torch", ".", "Tensor", "]", ")", ":", "\n", "        ", "ok_mask", "=", "self", ".", "compare_output", "(", "net_out", ",", "data", ")", "\n", "\n", "self", ".", "n_total", "+=", "ok_mask", ".", "nelement", "(", ")", "\n", "self", ".", "n_ok", "+=", "ok_mask", ".", "long", "(", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.accuracy": [[53, 56], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "accuracy", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_ok", "/", "self", ".", "n_total", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.plot": [[57, 59], ["None"], "methods", ["None"], ["", "def", "plot", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "return", "{", "\"accuracy/total\"", ":", "self", ".", "accuracy", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TextSequenceTestState.__init__": [[62, 77], ["sequence.SequenceTestState.__init__"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_to_text", ":", "Callable", "[", "[", "torch", ".", "Tensor", "]", ",", "torch", ".", "Tensor", "]", ",", "\n", "output_to_text", ":", "Callable", "[", "[", "torch", ".", "Tensor", "]", ",", "torch", ".", "Tensor", "]", ",", "batch_dim", ":", "int", "=", "1", ",", "\n", "max_bad_samples", ":", "int", "=", "100", ",", "min_prefix_match_len", ":", "int", "=", "1", ",", "eos_id", ":", "int", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "batch_dim", ")", "\n", "self", ".", "bad_sequences", "=", "[", "]", "\n", "self", ".", "max_bad_samples", "=", "max_bad_samples", "\n", "self", ".", "in_to_text", "=", "input_to_text", "\n", "self", ".", "out_to_text", "=", "output_to_text", "\n", "self", ".", "n_prefix_ok", "=", "0", "\n", "self", ".", "n_oracle_ok", "=", "0", "\n", "self", ".", "oracle_available", "=", "False", "\n", "self", ".", "min_prefix_match_len", "=", "min_prefix_match_len", "\n", "self", ".", "eos_id", "=", "eos_id", "\n", "self", ".", "losses", "=", "[", "]", "\n", "self", ".", "oks", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TextSequenceTestState.set_eos_to_neginf": [[78, 81], ["scores.index_fill", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "float"], "methods", ["None"], ["", "def", "set_eos_to_neginf", "(", "self", ",", "scores", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "id", "=", "self", ".", "eos_id", "if", "self", ".", "eos_id", ">=", "0", "else", "(", "scores", ".", "shape", "[", "-", "1", "]", "+", "self", ".", "eos_id", ")", "\n", "return", "scores", ".", "index_fill", "(", "-", "1", ",", "torch", ".", "tensor", "(", "[", "id", "]", ",", "device", "=", "scores", ".", "device", ")", ",", "float", "(", "\"-inf\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TextSequenceTestState.loss": [[82, 92], ["models.encoder_decoder.add_eos", "torch.cross_entropy", "torch.cross_entropy", "tuple", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "data[].unsqueeze", "net_out.flatten", "models.encoder_decoder.add_eos.long().flatten", "torch.cross_entropy.reshape_as", "torch.cross_entropy.sum", "mask.sum().float", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "models.encoder_decoder.add_eos.long", "range", "mask.sum"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.encoder_decoder.add_eos", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.layers.cross_entropy_label_smoothing.cross_entropy", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.layers.cross_entropy_label_smoothing.cross_entropy"], ["", "def", "loss", "(", "self", ",", "net_out", ":", "torch", ".", "Tensor", ",", "data", ":", "Dict", "[", "str", ",", "torch", ".", "Tensor", "]", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "mask", "=", "torch", ".", "arange", "(", "net_out", ".", "shape", "[", "1", "-", "self", ".", "batch_dim", "]", ",", "device", "=", "net_out", ".", "device", ")", ".", "unsqueeze", "(", "1", ")", "<=", "data", "[", "\"out_len\"", "]", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "ref", "=", "add_eos", "(", "data", "[", "\"out\"", "]", ",", "data", "[", "\"out_len\"", "]", ",", "net_out", ".", "shape", "[", "-", "1", "]", "-", "1", ")", "\n", "l", "=", "F", ".", "cross_entropy", "(", "net_out", ".", "flatten", "(", "end_dim", "=", "-", "2", ")", ",", "ref", ".", "long", "(", ")", ".", "flatten", "(", ")", ",", "reduction", "=", "'none'", ")", "\n", "l", "=", "l", ".", "reshape_as", "(", "ref", ")", "*", "mask", "\n", "nonbatchdims", "=", "tuple", "(", "i", "for", "i", "in", "range", "(", "l", ".", "ndim", ")", "if", "i", "!=", "self", ".", "batch_dim", ")", "\n", "l", "=", "l", ".", "sum", "(", "dim", "=", "nonbatchdims", ")", "/", "mask", ".", "sum", "(", "dim", "=", "nonbatchdims", ")", ".", "float", "(", ")", "\n", "return", "l", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TextSequenceTestState.sample_to_text": [[93, 107], ["sequence.TextSequenceTestState.convert_to_index", "sequence.TextSequenceTestState.out_to_text", "sequence.TextSequenceTestState.out_to_text", "sequence.TextSequenceTestState.in_to_text", "[].cpu().numpy().tolist", "out_len[].item", "[].cpu().numpy().tolist", "[].cpu().numpy().tolist", "[].cpu().numpy", "[].cpu().numpy", "[].cpu().numpy", "[].cpu", "[].cpu", "[].cpu", "data[].select", "sequence.TextSequenceTestState.select", "data[].select", "int", "int", "[].item", "[].item"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.convert_to_index"], ["", "def", "sample_to_text", "(", "self", ",", "net_out", ":", "Tuple", "[", "torch", ".", "Tensor", ",", "Optional", "[", "torch", ".", "Tensor", "]", "]", ",", "data", ":", "Dict", "[", "str", ",", "torch", ".", "Tensor", "]", ",", "\n", "i", ":", "int", ")", "->", "Tuple", "[", "str", ",", "str", ",", "str", "]", ":", "\n", "\n", "        ", "scores", ",", "out_len", "=", "net_out", "\n", "out", "=", "self", ".", "convert_to_index", "(", "scores", ")", "\n", "\n", "t_ref", "=", "self", ".", "out_to_text", "(", "data", "[", "\"out\"", "]", ".", "select", "(", "self", ".", "batch_dim", ",", "i", ")", "[", ":", "int", "(", "data", "[", "\"out_len\"", "]", "[", "i", "]", ".", "item", "(", ")", ")", "]", ".", "\n", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "\n", "out_end", "=", "None", "if", "out_len", "is", "None", "else", "out_len", "[", "i", "]", ".", "item", "(", ")", "\n", "t_out", "=", "self", ".", "out_to_text", "(", "out", ".", "select", "(", "self", ".", "batch_dim", ",", "i", ")", "[", ":", "out_end", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "t_in", "=", "self", ".", "in_to_text", "(", "data", "[", "\"in\"", "]", ".", "select", "(", "self", ".", "batch_dim", ",", "i", ")", "[", ":", "int", "(", "data", "[", "\"in_len\"", "]", "[", "i", "]", ".", "item", "(", ")", ")", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "\n", "tolist", "(", ")", ")", "\n", "return", "t_in", ",", "t_ref", ",", "t_out", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TextSequenceTestState.step": [[108, 141], ["sequence.TextSequenceTestState.compare_output", "torch.minimum", "torch.minimum", "torch.minimum", "torch.minimum", "sequence.TextSequenceTestState.compare_direct", "sequence.TextSequenceTestState.oks.append", "sequence.TextSequenceTestState.nelement", "sequence.TextSequenceTestState.long().sum().item", "sequence.TextSequenceTestState.long().sum().item", "sequence.TextSequenceTestState.is_index_tensor", "sequence.TextSequenceTestState.set_eos_to_neginf().argmax", "sequence.TextSequenceTestState.compare_direct", "sequence.TextSequenceTestState.long().sum().item", "sequence.TextSequenceTestState.losses.append", "torch.minimum", "torch.minimum", "torch.minimum", "torch.minimum", "torch.minimum.clamp", "torch.minimum.clamp", "len", "sequence.TextSequenceTestState.cpu", "sequence.TextSequenceTestState.loss().cpu", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "sequence.TextSequenceTestState.sample_to_text", "sequence.TextSequenceTestState.bad_sequences.append", "sequence.TextSequenceTestState.long().sum", "sequence.TextSequenceTestState.long().sum", "sequence.TextSequenceTestState.set_eos_to_neginf", "data[].clamp_", "sequence.TextSequenceTestState.long().sum", "str", "s.append", "sequence.TextSequenceTestState.loss", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.nonzero", "len", "prefix_ok_mask[].item", "str", "sequence.TextSequenceTestState.long", "sequence.TextSequenceTestState.long", "sequence.TextSequenceTestState.long", "oracle_ok[].item"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.compare_output", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.compare_direct", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.is_index_tensor", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.compare_direct", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TextSequenceTestState.sample_to_text", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TextSequenceTestState.set_eos_to_neginf", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TextSequenceTestState.loss"], ["", "def", "step", "(", "self", ",", "net_out", ":", "Tuple", "[", "torch", ".", "Tensor", ",", "Optional", "[", "torch", ".", "Tensor", "]", "]", ",", "data", ":", "Dict", "[", "str", ",", "torch", ".", "Tensor", "]", ")", ":", "\n", "        ", "ok_mask", "=", "self", ".", "compare_output", "(", "net_out", ",", "data", ")", "\n", "scores", ",", "_", "=", "net_out", "\n", "\n", "if", "not", "self", ".", "is_index_tensor", "(", "scores", ")", ":", "\n", "            ", "self", ".", "oracle_available", "=", "True", "\n", "out_noeos", "=", "self", ".", "set_eos_to_neginf", "(", "scores", ")", ".", "argmax", "(", "-", "1", ")", "\n", "oracle_ok", "=", "self", ".", "compare_direct", "(", "(", "out_noeos", ",", "data", "[", "\"out_len\"", "]", ".", "clamp_", "(", "max", "=", "out_noeos", ".", "shape", "[", "1", "-", "self", ".", "batch_dim", "]", ")", ")", ",", "\n", "data", "[", "\"out\"", "]", ",", "data", "[", "\"out_len\"", "]", ")", "\n", "self", ".", "n_oracle_ok", "+=", "oracle_ok", ".", "long", "(", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "self", ".", "losses", ".", "append", "(", "self", ".", "loss", "(", "net_out", "[", "0", "]", ",", "data", ")", ".", "cpu", "(", ")", ")", "\n", "\n", "", "prefix_len", "=", "data", "[", "\"out_len\"", "]", "if", "net_out", "[", "1", "]", "is", "None", "else", "torch", ".", "minimum", "(", "data", "[", "\"out_len\"", "]", ",", "net_out", "[", "1", "]", ")", "\n", "prefix_len", "=", "torch", ".", "minimum", "(", "prefix_len", ".", "clamp", "(", "min", "=", "self", ".", "min_prefix_match_len", ")", ",", "data", "[", "\"out_len\"", "]", ")", "\n", "prefix_ok_mask", "=", "self", ".", "compare_direct", "(", "(", "net_out", "[", "0", "]", ",", "prefix_len", ")", ",", "data", "[", "\"out\"", "]", ",", "prefix_len", ")", "\n", "\n", "if", "len", "(", "self", ".", "bad_sequences", ")", "<", "self", ".", "max_bad_samples", ":", "\n", "            ", "t", "=", "torch", ".", "nonzero", "(", "~", "ok_mask", ")", ".", "squeeze", "(", "-", "1", ")", "[", ":", "self", ".", "max_bad_samples", "-", "len", "(", "self", ".", "bad_sequences", ")", "]", "\n", "\n", "for", "i", "in", "t", ":", "\n", "                ", "t_in", ",", "t_ref", ",", "t_out", "=", "self", ".", "sample_to_text", "(", "net_out", ",", "data", ",", "i", ")", "\n", "s", "=", "[", "t_in", ",", "t_ref", ",", "t_out", ",", "str", "(", "prefix_ok_mask", "[", "i", "]", ".", "item", "(", ")", ")", "]", "\n", "\n", "if", "self", ".", "oracle_available", ":", "\n", "                    ", "s", ".", "append", "(", "str", "(", "oracle_ok", "[", "i", "]", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "self", ".", "bad_sequences", ".", "append", "(", "s", ")", "\n", "\n", "", "", "self", ".", "oks", ".", "append", "(", "ok_mask", ".", "cpu", "(", ")", ")", "\n", "self", ".", "n_total", "+=", "ok_mask", ".", "nelement", "(", ")", "\n", "self", ".", "n_ok", "+=", "ok_mask", ".", "long", "(", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "n_prefix_ok", "+=", "prefix_ok_mask", ".", "long", "(", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TextSequenceTestState.get_sample_info": [[142, 144], ["torch.cat().numpy().tolist", "torch.cat().numpy().tolist", "torch.cat().numpy().tolist", "torch.cat().numpy().tolist", "torch.cat().numpy().tolist", "torch.cat().numpy().tolist", "torch.cat().numpy().tolist", "torch.cat().numpy().tolist", "torch.cat().numpy", "torch.cat().numpy", "torch.cat().numpy", "torch.cat().numpy", "torch.cat().numpy", "torch.cat().numpy", "torch.cat().numpy", "torch.cat().numpy", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "get_sample_info", "(", "self", ")", "->", "Tuple", "[", "List", "[", "float", "]", ",", "List", "[", "bool", "]", "]", ":", "\n", "        ", "return", "torch", ".", "cat", "(", "self", ".", "losses", ",", "0", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ",", "torch", ".", "cat", "(", "self", ".", "oks", ",", "0", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TextSequenceTestState.plot": [[145, 159], ["sequence.SequenceTestState.plot", "framework.visualize.plot.TextTable", "framework.visualize.plot.Histogram", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.plot"], ["", "def", "plot", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "res", "=", "super", "(", ")", ".", "plot", "(", ")", "\n", "res", "[", "\"mistake_examples\"", "]", "=", "framework", ".", "visualize", ".", "plot", ".", "TextTable", "(", "[", "\"Input\"", ",", "\"Reference\"", ",", "\"Output\"", ",", "\"Prefix match\"", "]", "+", "(", "[", "\"Oracle match\"", "]", "if", "self", ".", "oracle_available", "else", "[", "]", ")", ",", "\n", "self", ".", "bad_sequences", ")", "\n", "res", "[", "\"accuracy/prefix\"", "]", "=", "self", ".", "n_prefix_ok", "/", "self", ".", "n_total", "\n", "\n", "if", "self", ".", "oracle_available", ":", "\n", "            ", "res", "[", "\"accuracy/oracle\"", "]", "=", "self", ".", "n_oracle_ok", "/", "self", ".", "n_total", "\n", "\n", "", "if", "self", ".", "losses", ":", "\n", "            ", "res", "[", "\"loss_histogram\"", "]", "=", "framework", ".", "visualize", ".", "plot", ".", "Histogram", "(", "torch", ".", "cat", "(", "self", ".", "losses", ",", "0", ")", ")", "\n", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TypedTextSequenceTestState.__init__": [[162, 170], ["sequence.TextSequenceTestState.__init__"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_to_text", ":", "Callable", "[", "[", "torch", ".", "Tensor", "]", ",", "torch", ".", "Tensor", "]", ",", "\n", "output_to_text", ":", "Callable", "[", "[", "torch", ".", "Tensor", "]", ",", "torch", ".", "Tensor", "]", ",", "type_names", ":", "List", "[", "str", "]", ",", "batch_dim", ":", "int", "=", "1", ",", "\n", "max_bad_samples", ":", "int", "=", "100", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "input_to_text", ",", "output_to_text", ",", "batch_dim", ",", "max_bad_samples", ")", "\n", "self", ".", "type_names", "=", "type_names", "\n", "\n", "self", ".", "count_per_type", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TypedTextSequenceTestState.step": [[171, 201], ["sequence.TypedTextSequenceTestState.compare_output", "sequence.TypedTextSequenceTestState.convert_to_index", "torch.unique().int().cpu().numpy().tolist", "torch.unique().int().cpu().numpy().tolist", "torch.unique().int().cpu().numpy().tolist", "torch.unique().int().cpu().numpy().tolist", "sequence.TypedTextSequenceTestState.nelement", "sequence.TypedTextSequenceTestState.long().sum().item", "len", "sequence.TypedTextSequenceTestState.count_per_type.get", "mask.float().sum().item", "ok_mask[].float().sum().item", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "sequence.TypedTextSequenceTestState.bad_sequences.append", "torch.unique().int().cpu().numpy", "torch.unique().int().cpu().numpy", "torch.unique().int().cpu().numpy", "torch.unique().int().cpu().numpy", "sequence.TypedTextSequenceTestState.long().sum", "out_len[].item", "mask.float().sum", "ok_mask[].float().sum", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.nonzero", "len", "sequence.TypedTextSequenceTestState.in_to_text", "sequence.TypedTextSequenceTestState.out_to_text", "sequence.TypedTextSequenceTestState.out_to_text", "torch.unique().int().cpu", "torch.unique().int().cpu", "torch.unique().int().cpu", "torch.unique().int().cpu", "sequence.TypedTextSequenceTestState.long", "[].cpu().numpy().tolist", "[].cpu().numpy().tolist", "[].cpu().numpy().tolist", "mask.float", "ok_mask[].float", "int", "torch.unique().int", "torch.unique().int", "torch.unique().int", "torch.unique().int", "[].cpu().numpy", "[].cpu().numpy", "[].item", "[].cpu().numpy", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "[].cpu", "[].cpu", "[].cpu", "data[].select", "data[].select", "sequence.TypedTextSequenceTestState.select", "int", "int", "[].item", "[].item"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.compare_output", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.SequenceTestState.convert_to_index", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "def", "step", "(", "self", ",", "net_out", ":", "Tuple", "[", "torch", ".", "Tensor", ",", "Optional", "[", "torch", ".", "Tensor", "]", "]", ",", "data", ":", "Dict", "[", "str", ",", "torch", ".", "Tensor", "]", ")", ":", "\n", "        ", "ok_mask", "=", "self", ".", "compare_output", "(", "net_out", ",", "data", ")", "\n", "scores", ",", "out_len", "=", "net_out", "\n", "out", "=", "self", ".", "convert_to_index", "(", "scores", ")", "\n", "\n", "if", "len", "(", "self", ".", "bad_sequences", ")", "<", "self", ".", "max_bad_samples", ":", "\n", "            ", "t", "=", "torch", ".", "nonzero", "(", "~", "ok_mask", ")", ".", "squeeze", "(", "-", "1", ")", "[", ":", "self", ".", "max_bad_samples", "-", "len", "(", "self", ".", "bad_sequences", ")", "]", "\n", "\n", "for", "i", "in", "t", ":", "\n", "                ", "out_end", "=", "None", "if", "out_len", "is", "None", "else", "out_len", "[", "i", "]", ".", "item", "(", ")", "\n", "self", ".", "bad_sequences", ".", "append", "(", "(", "\n", "self", ".", "in_to_text", "(", "data", "[", "\"in\"", "]", ".", "select", "(", "self", ".", "batch_dim", ",", "i", ")", "[", ":", "int", "(", "data", "[", "\"in_len\"", "]", "[", "i", "]", ".", "item", "(", ")", ")", "]", ".", "\n", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", ",", "\n", "self", ".", "out_to_text", "(", "data", "[", "\"out\"", "]", ".", "select", "(", "self", ".", "batch_dim", ",", "i", ")", "[", ":", "int", "(", "data", "[", "\"out_len\"", "]", "[", "i", "]", ".", "item", "(", ")", ")", "]", ".", "\n", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", ",", "\n", "self", ".", "type_names", "[", "int", "(", "data", "[", "\"type\"", "]", "[", "i", "]", ".", "item", "(", ")", ")", "]", ",", "\n", "self", ".", "out_to_text", "(", "out", ".", "select", "(", "self", ".", "batch_dim", ",", "i", ")", "[", ":", "out_end", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", ")", ")", "\n", "\n", "", "", "for", "t", "in", "torch", ".", "unique", "(", "data", "[", "\"type\"", "]", ")", ".", "int", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ":", "\n", "            ", "mask", "=", "data", "[", "\"type\"", "]", "==", "t", "\n", "c", "=", "self", ".", "count_per_type", ".", "get", "(", "t", ")", "\n", "if", "c", "is", "None", ":", "\n", "                ", "self", ".", "count_per_type", "[", "t", "]", "=", "c", "=", "{", "\"n_ok\"", ":", "0", ",", "\"n_total\"", ":", "0", "}", "\n", "\n", "", "c", "[", "\"n_total\"", "]", "+=", "mask", ".", "float", "(", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "c", "[", "\"n_ok\"", "]", "+=", "ok_mask", "[", "mask", "]", ".", "float", "(", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "self", ".", "n_total", "+=", "ok_mask", ".", "nelement", "(", ")", "\n", "self", ".", "n_ok", "+=", "ok_mask", ".", "long", "(", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TypedTextSequenceTestState.plot": [[202, 210], ["sequence.TextSequenceTestState.plot", "framework.visualize.plot.TextTable", "sequence.TypedTextSequenceTestState.count_per_type.items"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.plot"], ["", "def", "plot", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "res", "=", "super", "(", ")", ".", "plot", "(", ")", "\n", "res", "[", "\"mistake_examples\"", "]", "=", "framework", ".", "visualize", ".", "plot", ".", "TextTable", "(", "[", "\"Input\"", ",", "\"Reference\"", ",", "\"Type\"", ",", "\"Output\"", "]", ",", "\n", "self", ".", "bad_sequences", ")", "\n", "\n", "for", "t", ",", "data", "in", "self", ".", "count_per_type", ".", "items", "(", ")", ":", "\n", "            ", "res", "[", "f\"accuracy/{self.type_names[t]}\"", "]", "=", "data", "[", "\"n_ok\"", "]", "/", "data", "[", "\"n_total\"", "]", "\n", "", "return", "res", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.scan_length_resplit.ScanLengthResplit._load_dataset": [[18, 71], ["os.makedirs", "os.path.join", "os.path.isfile", "os.path.join", "print", "framework.utils.download", "print", "framework.data_structures.WordVocabulary", "framework.data_structures.WordVocabulary", "max", "max", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.load", "torch.load", "torch.load", "torch.load", "framework.data_structures.WordVocabulary", "framework.data_structures.WordVocabulary", "ScanLengthResplit.in_vocabulary.load_state_dict", "ScanLengthResplit.out_vocabulary.load_state_dict", "open", "ScanLengthResplit.in_vocabulary", "ScanLengthResplit.out_vocabulary", "os.path.split", "line.split.split.split", "line[].replace", "ScanLengthResplit.in_sentences.append", "ScanLengthResplit.out_sentences.append", "len", "len", "ScanLengthResplit.in_vocabulary.state_dict", "ScanLengthResplit.out_vocabulary.state_dict", "l.strip"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.download", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.load_state_dict", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.load_state_dict", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.state_dict", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.state_dict"], ["def", "_load_dataset", "(", "self", ",", "cache_dir", ":", "str", ")", ":", "\n", "        ", "if", "ScanLengthResplit", ".", "in_sentences", ":", "\n", "            ", "return", "\n", "\n", "", "os", ".", "makedirs", "(", "cache_dir", ",", "exist_ok", "=", "True", ")", "\n", "cache_file", "=", "os", ".", "path", ".", "join", "(", "cache_dir", ",", "\"scan.pth\"", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "cache_file", ")", ":", "\n", "            ", "fn", "=", "os", ".", "path", ".", "join", "(", "cache_dir", ",", "os", ".", "path", ".", "split", "(", "self", ".", "URL", ")", "[", "-", "1", "]", ")", "\n", "\n", "print", "(", "\"Downloading\"", ",", "self", ".", "URL", ")", "\n", "download", "(", "self", ".", "URL", ",", "fn", ",", "ignore_if_exists", "=", "True", ")", "\n", "\n", "with", "open", "(", "fn", ")", "as", "f", ":", "\n", "                ", "for", "line", "in", "f", ":", "\n", "                    ", "line", "=", "line", ".", "split", "(", "\"OUT:\"", ")", "\n", "line", "[", "0", "]", "=", "line", "[", "0", "]", ".", "replace", "(", "\"IN:\"", ",", "\"\"", ")", "\n", "line", "=", "[", "l", ".", "strip", "(", ")", "for", "l", "in", "line", "]", "\n", "\n", "ScanLengthResplit", ".", "in_sentences", ".", "append", "(", "line", "[", "0", "]", ")", "\n", "ScanLengthResplit", ".", "out_sentences", ".", "append", "(", "line", "[", "1", "]", ")", "\n", "\n", "", "", "print", "(", "\"Constructing vocabularies\"", ")", "\n", "ScanLengthResplit", ".", "in_vocabulary", "=", "WordVocabulary", "(", "self", ".", "in_sentences", ")", "\n", "ScanLengthResplit", ".", "out_vocabulary", "=", "WordVocabulary", "(", "self", ".", "out_sentences", ")", "\n", "\n", "ScanLengthResplit", ".", "in_sentences", "=", "[", "ScanLengthResplit", ".", "in_vocabulary", "(", "s", ")", "\n", "for", "s", "in", "ScanLengthResplit", ".", "in_sentences", "]", "\n", "ScanLengthResplit", ".", "out_sentences", "=", "[", "ScanLengthResplit", ".", "out_vocabulary", "(", "s", ")", "\n", "for", "s", "in", "ScanLengthResplit", ".", "out_sentences", "]", "\n", "\n", "ScanLengthResplit", ".", "max_in_len", "=", "max", "(", "len", "(", "l", ")", "for", "l", "in", "ScanLengthResplit", ".", "in_sentences", ")", "\n", "ScanLengthResplit", ".", "max_out_len", "=", "max", "(", "len", "(", "l", ")", "for", "l", "in", "ScanLengthResplit", ".", "out_sentences", ")", "\n", "\n", "print", "(", "\"Done.\"", ")", "\n", "torch", ".", "save", "(", "{", "\n", "\"in_sentences\"", ":", "ScanLengthResplit", ".", "in_sentences", ",", "\n", "\"out_sentences\"", ":", "ScanLengthResplit", ".", "out_sentences", ",", "\n", "\"in_voc\"", ":", "ScanLengthResplit", ".", "in_vocabulary", ".", "state_dict", "(", ")", ",", "\n", "\"out_voc\"", ":", "ScanLengthResplit", ".", "out_vocabulary", ".", "state_dict", "(", ")", ",", "\n", "\"max_in_len\"", ":", "ScanLengthResplit", ".", "max_in_len", ",", "\n", "\"max_out_len\"", ":", "ScanLengthResplit", ".", "max_out_len", "\n", "}", ",", "cache_file", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "torch", ".", "load", "(", "cache_file", ")", "\n", "ScanLengthResplit", ".", "in_vocabulary", "=", "WordVocabulary", "(", "None", ")", "\n", "ScanLengthResplit", ".", "out_vocabulary", "=", "WordVocabulary", "(", "None", ")", "\n", "ScanLengthResplit", ".", "in_vocabulary", ".", "load_state_dict", "(", "data", "[", "\"in_voc\"", "]", ")", "\n", "ScanLengthResplit", ".", "out_vocabulary", ".", "load_state_dict", "(", "data", "[", "\"out_voc\"", "]", ")", "\n", "ScanLengthResplit", ".", "in_sentences", "=", "data", "[", "\"in_sentences\"", "]", "\n", "ScanLengthResplit", ".", "out_sentences", "=", "data", "[", "\"out_sentences\"", "]", "\n", "ScanLengthResplit", ".", "max_in_len", "=", "data", "[", "\"max_in_len\"", "]", "\n", "ScanLengthResplit", ".", "max_out_len", "=", "data", "[", "\"max_out_len\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.scan_length_resplit.ScanLengthResplit.__init__": [[73, 93], ["super().__init__", "scan_length_resplit.ScanLengthResplit._load_dataset", "max", "min", "numpy.random.RandomState", "set", "enumerate", "numpy.random.RandomState.choice().tolist", "len", "len", "len", "enumerate", "numpy.random.RandomState.choice", "len", "int", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset._load_dataset"], ["", "", "def", "__init__", "(", "self", ",", "dset", ":", "str", ",", "len_range", ":", "Tuple", "[", "int", ",", "int", "]", ",", "train_proprtion", ":", "float", "=", "0.9", ",", "\n", "cache_dir", ":", "str", "=", "\"./cache/scan_resplit\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cache_dir", "=", "cache_dir", "\n", "self", ".", "_load_dataset", "(", "cache_dir", ")", "\n", "self", ".", "len_range", "=", "len_range", "\n", "\n", "assert", "dset", "in", "[", "\"train\"", ",", "\"test\"", ",", "\"all\"", "]", "\n", "\n", "self", ".", "my_indices", "=", "[", "i", "for", "i", ",", "o", "in", "enumerate", "(", "self", ".", "out_sentences", ")", "if", "len_range", "[", "0", "]", "<=", "len", "(", "o", ")", "<=", "len_range", "[", "1", "]", "]", "\n", "\n", "if", "dset", "!=", "\"all\"", ":", "\n", "            ", "seed", "=", "np", ".", "random", ".", "RandomState", "(", "1234", ")", "\n", "test_indices", "=", "set", "(", "seed", ".", "choice", "(", "len", "(", "self", ".", "my_indices", ")", ",", "int", "(", "len", "(", "self", ".", "my_indices", ")", "*", "(", "1", "-", "train_proprtion", ")", ")", ",", "\n", "replace", "=", "False", ")", ".", "tolist", "(", ")", ")", "\n", "\n", "self", ".", "my_indices", "=", "[", "i", "for", "ii", ",", "i", "in", "enumerate", "(", "self", ".", "my_indices", ")", "if", "(", "ii", "in", "test_indices", ")", "^", "(", "dset", "==", "\"train\"", ")", "]", "\n", "\n", "", "self", ".", "this_max_out_len", "=", "max", "(", "len", "(", "self", ".", "out_sentences", "[", "i", "]", ")", "for", "i", "in", "self", ".", "my_indices", ")", "\n", "self", ".", "this_min_out_len", "=", "min", "(", "len", "(", "self", ".", "out_sentences", "[", "i", "]", ")", "for", "i", "in", "self", ".", "my_indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.scan_length_resplit.ScanLengthResplit.__len__": [[94, 96], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "len", "(", "self", ".", "my_indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.scan_length_resplit.ScanLengthResplit.__getitem__": [[97, 107], ["numpy.asarray", "numpy.asarray", "len", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ":", "int", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "index", "=", "self", ".", "my_indices", "[", "item", "]", "\n", "in_seq", "=", "ScanLengthResplit", ".", "in_sentences", "[", "index", "]", "\n", "out_seq", "=", "ScanLengthResplit", ".", "out_sentences", "[", "index", "]", "\n", "\n", "return", "{", "\n", "\"in\"", ":", "np", ".", "asarray", "(", "in_seq", ",", "np", ".", "int16", ")", ",", "\n", "\"out\"", ":", "np", ".", "asarray", "(", "out_seq", ",", "np", ".", "int16", ")", ",", "\n", "\"in_len\"", ":", "len", "(", "in_seq", ")", ",", "\n", "\"out_len\"", ":", "len", "(", "out_seq", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.scan_length_resplit.ScanLengthResplit.get_output_size": [[109, 111], ["len"], "methods", ["None"], ["", "def", "get_output_size", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "out_vocabulary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.scan_length_resplit.ScanLengthResplit.get_input_size": [[112, 114], ["len"], "methods", ["None"], ["", "def", "get_input_size", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "in_vocabulary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.scan_length_resplit.ScanLengthResplit.start_test": [[115, 118], ["sequence.TextSequenceTestState", "scan_length_resplit.ScanLengthResplit.in_vocabulary", "scan_length_resplit.ScanLengthResplit.out_vocabulary"], "methods", ["None"], ["", "def", "start_test", "(", "self", ")", "->", "TextSequenceTestState", ":", "\n", "        ", "return", "TextSequenceTestState", "(", "lambda", "x", ":", "\" \"", ".", "join", "(", "self", ".", "in_vocabulary", "(", "x", ")", ")", ",", "\n", "lambda", "x", ":", "\" \"", ".", "join", "(", "self", ".", "out_vocabulary", "(", "x", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.scan_length_resplit.ScanLengthResplit.__str__": [[119, 121], ["len"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "f\"ScanLengthResplit(range=[{self.this_min_out_len}, {self.this_max_out_len}], len={len(self)})\"", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.build": [[28, 55], ["print", "framework.data_structures.WordVocabulary", "framework.data_structures.WordVocabulary", "print", "numpy.histogram", "numpy.histogram", "numpy.histogram", "max", "max", "print", "text_dataset.TextDatasetCache.in_vocabulary", "text_dataset.TextDatasetCache.out_vocabulary", "zip", "len", "zip", "len", "zip", "len", "len", "len", "len", "zip", "bins.tolist", "counts.tolist", "bins.tolist", "counts.tolist", "bins.tolist", "counts.tolist"], "methods", ["None"], ["def", "build", "(", "self", ",", "index_table", ":", "IndexTable", ",", "in_sentences", ":", "List", "[", "str", "]", ",", "out_sentences", ":", "List", "[", "str", "]", ",", "\n", "split_punctuation", ":", "bool", "=", "True", ")", ":", "\n", "        ", "self", ".", "version", "=", "VERSION", "\n", "self", ".", "index_table", "=", "index_table", "\n", "\n", "print", "(", "\"Constructing vocabularies\"", ")", "\n", "self", ".", "in_vocabulary", "=", "WordVocabulary", "(", "in_sentences", ",", "split_punctuation", "=", "split_punctuation", ")", "\n", "self", ".", "out_vocabulary", "=", "WordVocabulary", "(", "out_sentences", ",", "split_punctuation", "=", "split_punctuation", ")", "\n", "\n", "self", ".", "in_sentences", "=", "[", "self", ".", "in_vocabulary", "(", "s", ")", "for", "s", "in", "in_sentences", "]", "\n", "self", ".", "out_sentences", "=", "[", "self", ".", "out_vocabulary", "(", "s", ")", "for", "s", "in", "out_sentences", "]", "\n", "\n", "print", "(", "\"Calculating length statistics\"", ")", "\n", "counts", ",", "bins", "=", "np", ".", "histogram", "(", "[", "len", "(", "i", ")", "+", "len", "(", "o", ")", "for", "i", ",", "o", "in", "zip", "(", "self", ".", "in_sentences", ",", "self", ".", "out_sentences", ")", "]", ")", "\n", "self", ".", "sum_len_histogram", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "zip", "(", "bins", ".", "tolist", "(", ")", ",", "counts", ".", "tolist", "(", ")", ")", "}", "\n", "\n", "counts", ",", "bins", "=", "np", ".", "histogram", "(", "[", "len", "(", "i", ")", "for", "i", "in", "self", ".", "in_sentences", "]", ")", "\n", "self", ".", "in_len_histogram", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "zip", "(", "bins", ".", "tolist", "(", ")", ",", "counts", ".", "tolist", "(", ")", ")", "}", "\n", "\n", "counts", ",", "bins", "=", "np", ".", "histogram", "(", "[", "len", "(", "o", ")", "for", "o", "in", "self", ".", "out_sentences", "]", ")", "\n", "self", ".", "out_len_histogram", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "zip", "(", "bins", ".", "tolist", "(", ")", ",", "counts", ".", "tolist", "(", ")", ")", "}", "\n", "\n", "self", ".", "max_in_len", "=", "max", "(", "len", "(", "l", ")", "for", "l", "in", "self", ".", "in_sentences", ")", "\n", "self", ".", "max_out_len", "=", "max", "(", "len", "(", "l", ")", "for", "l", "in", "self", ".", "out_sentences", ")", "\n", "print", "(", "\"Done.\"", ")", "\n", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.state_dict": [[56, 69], ["text_dataset.TextDatasetCache.in_vocabulary.state_dict", "text_dataset.TextDatasetCache.out_vocabulary.state_dict"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.state_dict", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.state_dict"], ["", "def", "state_dict", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "return", "{", "\n", "\"version\"", ":", "self", ".", "version", ",", "\n", "\"index\"", ":", "self", ".", "index_table", ",", "\n", "\"in_sentences\"", ":", "self", ".", "in_sentences", ",", "\n", "\"out_sentences\"", ":", "self", ".", "out_sentences", ",", "\n", "\"in_voc\"", ":", "self", ".", "in_vocabulary", ".", "state_dict", "(", ")", ",", "\n", "\"out_voc\"", ":", "self", ".", "out_vocabulary", ".", "state_dict", "(", ")", ",", "\n", "\"max_in_len\"", ":", "self", ".", "max_in_len", ",", "\n", "\"max_out_len\"", ":", "self", ".", "max_out_len", ",", "\n", "\"in_len_histogram\"", ":", "self", ".", "in_len_histogram", ",", "\n", "\"sum_len_histogram\"", ":", "self", ".", "sum_len_histogram", ",", "\n", "\"out_len_histogram\"", ":", "self", ".", "out_len_histogram", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load_state_dict": [[71, 87], ["data.get", "framework.data_structures.WordVocabulary", "framework.data_structures.WordVocabulary", "text_dataset.TextDatasetCache.in_vocabulary.load_state_dict", "text_dataset.TextDatasetCache.out_vocabulary.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.load_state_dict", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.load_state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "data", ":", "Dict", "[", "str", ",", "Any", "]", ")", ":", "\n", "        ", "self", ".", "version", "=", "data", ".", "get", "(", "\"version\"", ",", "-", "1", ")", "\n", "if", "self", ".", "version", "!=", "VERSION", ":", "\n", "            ", "return", "\n", "", "self", ".", "index_table", "=", "data", "[", "\"index\"", "]", "\n", "self", ".", "in_vocabulary", "=", "WordVocabulary", "(", "None", ")", "\n", "self", ".", "out_vocabulary", "=", "WordVocabulary", "(", "None", ")", "\n", "self", ".", "in_vocabulary", ".", "load_state_dict", "(", "data", "[", "\"in_voc\"", "]", ")", "\n", "self", ".", "out_vocabulary", ".", "load_state_dict", "(", "data", "[", "\"out_voc\"", "]", ")", "\n", "self", ".", "in_sentences", "=", "data", "[", "\"in_sentences\"", "]", "\n", "self", ".", "out_sentences", "=", "data", "[", "\"out_sentences\"", "]", "\n", "self", ".", "max_in_len", "=", "data", "[", "\"max_in_len\"", "]", "\n", "self", ".", "max_out_len", "=", "data", "[", "\"max_out_len\"", "]", "\n", "self", ".", "in_len_histogram", "=", "data", "[", "\"in_len_histogram\"", "]", "\n", "self", ".", "out_len_histogram", "=", "data", "[", "\"out_len_histogram\"", "]", "\n", "self", ".", "sum_len_histogram", "=", "data", "[", "\"sum_len_histogram\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save": [[88, 90], ["torch.save", "torch.save", "torch.save", "torch.save", "text_dataset.TextDatasetCache.state_dict"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.state_dict"], ["", "def", "save", "(", "self", ",", "fn", ":", "str", ")", ":", "\n", "        ", "torch", ".", "save", "(", "self", ".", "state_dict", "(", ")", ",", "fn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load": [[91, 104], ["cls", "cls.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "print"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.load_state_dict", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load"], ["", "@", "classmethod", "\n", "def", "load", "(", "cls", ",", "fn", ":", "str", ")", ":", "\n", "        ", "res", "=", "cls", "(", ")", "\n", "try", ":", "\n", "            ", "data", "=", "torch", ".", "load", "(", "fn", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "f\"Failed to load cache file. {fn}\"", ")", "\n", "res", ".", "version", "=", "-", "1", "\n", "return", "res", "\n", "\n", "", "res", ".", "load_state_dict", "(", "data", ")", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.build_cache": [[109, 111], ["NotImplementedError"], "methods", ["None"], ["def", "build_cache", "(", "self", ")", "->", "TextDatasetCache", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.load_cache_file": [[112, 114], ["text_dataset.TextDatasetCache.load"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load"], ["", "def", "load_cache_file", "(", "self", ",", "file", ")", "->", "TextDatasetCache", ":", "\n", "        ", "return", "TextDatasetCache", ".", "load", "(", "file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset._load_dataset": [[115, 130], ["os.makedirs", "os.path.join", "os.path.isfile", "text_dataset.TextDataset.load_cache_file", "framework.utils.LockFile", "text_dataset.TextDataset.build_cache", "text_dataset.TextDataset.save", "print", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDataset.load_cache_file", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.scan.Scan.build_cache", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save"], ["", "def", "_load_dataset", "(", "self", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "self", ".", "cache_dir", ",", "exist_ok", "=", "True", ")", "\n", "cache_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"cache.pth\"", ")", "\n", "\n", "if", "os", ".", "path", ".", "isfile", "(", "cache_file", ")", ":", "\n", "            ", "res", "=", "self", ".", "load_cache_file", "(", "cache_file", ")", "\n", "if", "res", ".", "version", "==", "VERSION", ":", "\n", "                ", "return", "res", "\n", "", "else", ":", "\n", "                ", "print", "(", "f\"{self.__class__.__name__}: Invalid cache version: {res.version}, current: {VERSION}\"", ")", "\n", "\n", "", "", "with", "framework", ".", "utils", ".", "LockFile", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"lock\"", ")", ")", ":", "\n", "            ", "res", "=", "self", ".", "build_cache", "(", ")", "\n", "res", ".", "save", "(", "cache_file", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.hist_to_text": [[131, 136], ["list", "sorted", "histogram.keys", "numpy.cumsum", "zip", "sum", "histogram.values"], "methods", ["None"], ["", "def", "hist_to_text", "(", "self", ",", "histogram", ":", "Dict", "[", "float", ",", "int", "]", ")", "->", "str", ":", "\n", "        ", "keys", "=", "list", "(", "sorted", "(", "histogram", ".", "keys", "(", ")", ")", ")", "\n", "values", "=", "[", "histogram", "[", "k", "]", "for", "k", "in", "keys", "]", "\n", "percent", "=", "(", "np", ".", "cumsum", "(", "values", ")", "*", "(", "100.0", "/", "sum", "(", "histogram", ".", "values", "(", ")", ")", ")", ")", ".", "tolist", "(", ")", "\n", "return", "\", \"", ".", "join", "(", "f\"{k:.1f}: {v} (>= {p:.1f}%)\"", "for", "k", ",", "v", ",", "p", "in", "zip", "(", "keys", ",", "values", ",", "percent", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.__init__": [[137, 180], ["super().__init__", "os.path.join", "os.makedirs", "isinstance", "isinstance", "TextDataset.static_data.get", "text_dataset.TextDataset._load_dataset", "text_dataset.TextDataset.in_vocabulary.mapfrom", "text_dataset.TextDataset.out_vocabulary.mapfrom", "text_dataset.TextDataset._cache.index_table.items", "print", "print", "print", "print", "print", "print", "len", "len", "text_dataset.TextDataset.hist_to_text", "text_dataset.TextDataset.hist_to_text", "text_dataset.TextDataset.hist_to_text", "t.items", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset._load_dataset", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.mapfrom", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.data_structures.vocabulary.WordVocabulary.mapfrom", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.hist_to_text", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.hist_to_text", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.hist_to_text"], ["", "def", "__init__", "(", "self", ",", "sets", ":", "List", "[", "str", "]", "=", "[", "\"train\"", "]", ",", "split_type", ":", "List", "[", "str", "]", "=", "[", "\"simple\"", "]", ",", "cache_dir", ":", "str", "=", "\"./cache/\"", ",", "\n", "shared_vocabulary", ":", "bool", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "cache_dir", "=", "os", ".", "path", ".", "join", "(", "cache_dir", ",", "self", ".", "__class__", ".", "__name__", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "cache_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "assert", "isinstance", "(", "sets", ",", "List", ")", "\n", "assert", "isinstance", "(", "split_type", ",", "List", ")", "\n", "\n", "self", ".", "_cache", "=", "TextDataset", ".", "static_data", ".", "get", "(", "self", ".", "__class__", ".", "__name__", ")", "\n", "just_loaded", "=", "self", ".", "_cache", "is", "None", "\n", "if", "just_loaded", ":", "\n", "            ", "self", ".", "_cache", "=", "self", ".", "_load_dataset", "(", ")", "\n", "TextDataset", ".", "static_data", "[", "self", ".", "__class__", ".", "__name__", "]", "=", "self", ".", "_cache", "\n", "\n", "", "if", "shared_vocabulary", ":", "\n", "            ", "self", ".", "in_vocabulary", "=", "self", ".", "_cache", ".", "in_vocabulary", "+", "self", ".", "_cache", ".", "out_vocabulary", "\n", "self", ".", "out_vocabulary", "=", "self", ".", "in_vocabulary", "\n", "self", ".", "in_remap", "=", "self", ".", "in_vocabulary", ".", "mapfrom", "(", "self", ".", "_cache", ".", "in_vocabulary", ")", "\n", "self", ".", "out_remap", "=", "self", ".", "out_vocabulary", ".", "mapfrom", "(", "self", ".", "_cache", ".", "out_vocabulary", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "in_vocabulary", "=", "self", ".", "_cache", ".", "in_vocabulary", "\n", "self", ".", "out_vocabulary", "=", "self", ".", "_cache", ".", "out_vocabulary", "\n", "\n", "", "if", "just_loaded", ":", "\n", "            ", "for", "k", ",", "t", "in", "self", ".", "_cache", ".", "index_table", ".", "items", "(", ")", ":", "\n", "                ", "print", "(", "f\"{self.__class__.__name__}: split {k} data:\"", ",", "\n", "\", \"", ".", "join", "(", "[", "f\"{k}: {len(v)}\"", "for", "k", ",", "v", "in", "t", ".", "items", "(", ")", "]", ")", ")", "\n", "", "print", "(", "f\"{self.__class__.__name__}: vocabulary sizes: in: {len(self._cache.in_vocabulary)}, \"", "\n", "f\"out: {len(self._cache.out_vocabulary)}\"", ")", "\n", "print", "(", "f\"{self.__class__.__name__}: max input length: {self._cache.max_in_len}, \"", "\n", "f\"max output length: {self._cache.max_out_len}\"", ")", "\n", "print", "(", "f\"{self.__class__.__name__} sum length histogram: {self.hist_to_text(self._cache.sum_len_histogram)}\"", ")", "\n", "print", "(", "f\"{self.__class__.__name__} in length histogram: {self.hist_to_text(self._cache.in_len_histogram)}\"", ")", "\n", "print", "(", "f\"{self.__class__.__name__} out length histogram: {self.hist_to_text(self._cache.out_len_histogram)}\"", ")", "\n", "\n", "", "self", ".", "my_indices", "=", "[", "]", "\n", "for", "t", "in", "split_type", ":", "\n", "            ", "for", "s", "in", "sets", ":", "\n", "                ", "self", ".", "my_indices", "+=", "self", ".", "_cache", ".", "index_table", "[", "t", "]", "[", "s", "]", "\n", "\n", "", "", "self", ".", "shared_vocabulary", "=", "shared_vocabulary", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.get_seqs": [[181, 190], ["None"], "methods", ["None"], ["", "def", "get_seqs", "(", "self", ",", "abs_index", ":", "int", ")", "->", "Tuple", "[", "List", "[", "int", "]", ",", "List", "[", "int", "]", "]", ":", "\n", "        ", "in_seq", "=", "self", ".", "_cache", ".", "in_sentences", "[", "abs_index", "]", "\n", "out_seq", "=", "self", ".", "_cache", ".", "out_sentences", "[", "abs_index", "]", "\n", "\n", "if", "self", ".", "shared_vocabulary", ":", "\n", "            ", "in_seq", "=", "[", "self", ".", "in_remap", "[", "i", "]", "for", "i", "in", "in_seq", "]", "\n", "out_seq", "=", "[", "self", ".", "out_remap", "[", "i", "]", "for", "i", "in", "out_seq", "]", "\n", "\n", "", "return", "in_seq", ",", "out_seq", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.__len__": [[191, 193], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "len", "(", "self", ".", "my_indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.__getitem__": [[194, 203], ["text_dataset.TextDataset.get_seqs", "numpy.asarray", "numpy.asarray", "len", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.get_seqs"], ["", "def", "__getitem__", "(", "self", ",", "item", ":", "int", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "index", "=", "self", ".", "my_indices", "[", "item", "]", "\n", "in_seq", ",", "out_seq", "=", "self", ".", "get_seqs", "(", "index", ")", "\n", "\n", "return", "{", "\n", "\"in\"", ":", "np", ".", "asarray", "(", "in_seq", ",", "np", ".", "int16", ")", ",", "\n", "\"out\"", ":", "np", ".", "asarray", "(", "out_seq", ",", "np", ".", "int16", ")", ",", "\n", "\"in_len\"", ":", "len", "(", "in_seq", ")", ",", "\n", "\"out_len\"", ":", "len", "(", "out_seq", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.get_output_size": [[205, 207], ["len"], "methods", ["None"], ["", "def", "get_output_size", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_cache", ".", "out_vocabulary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.get_input_size": [[208, 210], ["len"], "methods", ["None"], ["", "def", "get_input_size", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_cache", ".", "in_vocabulary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.start_test": [[211, 214], ["sequence.TextSequenceTestState", "text_dataset.TextDataset.in_vocabulary", "text_dataset.TextDataset.out_vocabulary"], "methods", ["None"], ["", "def", "start_test", "(", "self", ")", "->", "TextSequenceTestState", ":", "\n", "        ", "return", "TextSequenceTestState", "(", "lambda", "x", ":", "\" \"", ".", "join", "(", "self", ".", "in_vocabulary", "(", "x", ")", ")", ",", "\n", "lambda", "x", ":", "\" \"", ".", "join", "(", "self", ".", "out_vocabulary", "(", "x", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.max_in_len": [[215, 218], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "max_in_len", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "self", ".", "_cache", ".", "max_in_len", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.max_out_len": [[219, 222], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "max_out_len", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "self", ".", "_cache", ".", "max_out_len", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.cfq.CFQ.tokenize_punctuation": [[14, 18], ["map"], "methods", ["None"], ["def", "tokenize_punctuation", "(", "self", ",", "text", ")", ":", "\n", "# From https://github.com/google-research/google-research/blob/master/cfq/preprocess.py", "\n", "        ", "text", "=", "map", "(", "lambda", "c", ":", "' %s '", "%", "c", "if", "c", "in", "string", ".", "punctuation", "else", "c", ",", "text", ")", "\n", "return", "' '", ".", "join", "(", "''", ".", "join", "(", "text", ")", ".", "split", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.cfq.CFQ.preprocess_sparql": [[19, 36], ["query.replace.replace.replace", "query.replace.replace.split", "token.startswith", "token.startswith", "tokens.append"], "methods", ["None"], ["", "def", "preprocess_sparql", "(", "self", ",", "query", ")", ":", "\n", "# From https://github.com/google-research/google-research/blob/master/cfq/preprocess.py", "\n", "        ", "\"\"\"Do various preprocessing on the SPARQL query.\"\"\"", "\n", "# Tokenize braces.", "\n", "query", "=", "query", ".", "replace", "(", "'count(*)'", ",", "'count ( * )'", ")", "\n", "\n", "tokens", "=", "[", "]", "\n", "for", "token", "in", "query", ".", "split", "(", ")", ":", "\n", "# Replace 'ns:' prefixes.", "\n", "            ", "if", "token", ".", "startswith", "(", "'ns:'", ")", ":", "\n", "                ", "token", "=", "token", "[", "3", ":", "]", "\n", "# Replace mid prefixes.", "\n", "", "if", "token", ".", "startswith", "(", "'m.'", ")", ":", "\n", "                ", "token", "=", "'m_'", "+", "token", "[", "2", ":", "]", "\n", "", "tokens", ".", "append", "(", "token", ")", "\n", "\n", "", "return", "' '", ".", "join", "(", "tokens", ")", ".", "replace", "(", "'\\\\n'", ",", "' '", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.cfq.CFQ.load_data": [[37, 69], ["open", "mmap.mmap", "tqdm.tqdm.tqdm", "tqdm.tqdm.tqdm.update", "f.fileno", "mmap.mmap.find", "json.loads", "inputs.append", "outputs.append", "len", "tqdm.tqdm.tqdm.update", "this.decode", "cfq.CFQ.tokenize_punctuation", "cfq.CFQ.preprocess_sparql", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.cfq.CFQ.tokenize_punctuation", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.cfq.CFQ.preprocess_sparql"], ["", "def", "load_data", "(", "self", ",", "fname", ":", "str", ")", "->", "Tuple", "[", "List", "[", "str", "]", ",", "List", "[", "str", "]", "]", ":", "\n", "# Split the JSON manually, otherwise it requires infinite RAM and is very slow.", "\n", "        ", "pin", "=", "\"complexityMeasures\"", ".", "encode", "(", ")", "\n", "offset", "=", "1", "\n", "cnt", "=", "0", "\n", "\n", "inputs", "=", "[", "]", "\n", "outputs", "=", "[", "]", "\n", "\n", "with", "open", "(", "fname", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "data", "=", "mmap", ".", "mmap", "(", "f", ".", "fileno", "(", ")", ",", "0", ",", "prot", "=", "mmap", ".", "PROT_READ", ")", "\n", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "data", ")", ")", "\n", "pbar", ".", "update", "(", "offset", ")", "\n", "\n", "while", "True", ":", "\n", "                ", "pos", "=", "data", ".", "find", "(", "pin", ",", "offset", "+", "6", ")", "\n", "if", "pos", "<", "0", ":", "\n", "                    ", "this", "=", "data", "[", "offset", ":", "len", "(", "data", ")", "-", "2", "]", "\n", "", "else", ":", "\n", "                    ", "this", "=", "data", "[", "offset", ":", "pos", "-", "5", "]", "\n", "new_offset", "=", "pos", "-", "4", "\n", "pbar", ".", "update", "(", "new_offset", "-", "offset", ")", "\n", "offset", "=", "new_offset", "\n", "", "d", "=", "json", ".", "loads", "(", "this", ".", "decode", "(", ")", ")", "\n", "inputs", ".", "append", "(", "self", ".", "tokenize_punctuation", "(", "d", "[", "\"questionPatternModEntities\"", "]", ")", ")", "\n", "outputs", ".", "append", "(", "self", ".", "preprocess_sparql", "(", "d", "[", "\"sparqlPatternModEntities\"", "]", ")", ")", "\n", "\n", "cnt", "+=", "1", "\n", "if", "pos", "<", "0", ":", "\n", "                    ", "break", "\n", "\n", "", "", "", "return", "inputs", ",", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.cfq.CFQ.build_cache": [[70, 100], ["os.path.join", "os.listdir", "cfq.CFQ.load_data", "text_dataset.TextDatasetCache().build", "os.path.isdir", "os.path.join", "f[].replace", "os.path.join", "len", "len", "os.path.join", "os.path.basename", "os.path.isfile", "tarfile.open", "tf.extractall", "f.endswith", "open", "json.loads", "text_dataset.TextDatasetCache", "os.path.join", "f.read", "os.path.abspath"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.cfq.CFQ.load_data", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.build", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.read"], ["", "def", "build_cache", "(", "self", ")", "->", "TextDatasetCache", ":", "\n", "        ", "index_table", "=", "{", "}", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"cfq\"", ")", ")", ":", "\n", "            ", "gzfile", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "os", ".", "path", ".", "basename", "(", "self", ".", "URL", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "gzfile", ")", ":", "\n", "                ", "assert", "False", ",", "f\"Please download {self.URL} and place it in the {os.path.abspath(self.cache_dir)} \"", "\"folder. Google login needed.\"", "\n", "\n", "", "with", "tarfile", ".", "open", "(", "gzfile", ",", "\"r\"", ")", "as", "tf", ":", "\n", "                ", "tf", ".", "extractall", "(", "path", "=", "self", ".", "cache_dir", ")", "\n", "\n", "", "", "splitdir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"cfq\"", ",", "\"splits\"", ")", "\n", "for", "f", "in", "os", ".", "listdir", "(", "splitdir", ")", ":", "\n", "            ", "if", "not", "f", ".", "endswith", "(", "\".json\"", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "name", "=", "f", "[", ":", "-", "5", "]", ".", "replace", "(", "\"_split\"", ",", "\"\"", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "splitdir", ",", "f", ")", ",", "\"r\"", ")", "as", "f", ":", "\n", "                ", "ind", "=", "json", ".", "loads", "(", "f", ".", "read", "(", ")", ")", "\n", "\n", "", "index_table", "[", "name", "]", "=", "{", "\n", "\"train\"", ":", "ind", "[", "\"trainIdxs\"", "]", ",", "\n", "\"val\"", ":", "ind", "[", "\"devIdxs\"", "]", ",", "\n", "\"test\"", ":", "ind", "[", "\"testIdxs\"", "]", "\n", "}", "\n", "\n", "", "in_sentences", ",", "out_sentences", "=", "self", ".", "load_data", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"cfq/dataset.json\"", ")", ")", "\n", "assert", "len", "(", "in_sentences", ")", "==", "len", "(", "out_sentences", ")", "\n", "return", "TextDatasetCache", "(", ")", ".", "build", "(", "index_table", ",", "in_sentences", ",", "out_sentences", ",", "split_punctuation", "=", "False", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.lock": [[24, 26], ["framework.utils.LockFile", "os.path.join"], "methods", ["None"], ["def", "lock", "(", "self", ")", "->", "framework", ".", "utils", ".", "LockFile", ":", "\n", "        ", "return", "framework", ".", "utils", ".", "LockFile", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"dm_math_lock\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.download": [[27, 38], ["dm_math.DeepmindMathDataset.lock", "os.makedirs", "os.path.isdir", "os.path.join", "os.path.isfile", "tarfile.open", "tf.extractall", "os.path.join", "os.path.join", "os.path.abspath"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.lock"], ["", "def", "download", "(", "self", ")", ":", "\n", "        ", "with", "self", ".", "lock", "(", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "cache_dir", ",", "exist_ok", "=", "True", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"mathematics_dataset-v1.0\"", ")", ")", ":", "\n", "                ", "if", "not", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"mathematics_dataset-v1.0.tar.gz\"", ")", ")", ":", "\n", "                    ", "assert", "False", ",", "\"Please download https://console.cloud.google.com/storage/browser/_details/\"", "\"mathematics-dataset/mathematics_dataset-v1.0.tar.gz and place it in the\"", "f\" {os.path.abspath(self.cache_dir)} folder.\"", "\n", "\n", "", "with", "tarfile", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"mathematics_dataset-v1.0.tar.gz\"", ")", ",", "\"r\"", ")", "as", "tf", ":", "\n", "                    ", "tf", ".", "extractall", "(", "path", "=", "self", ".", "cache_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.load_file": [[39, 48], ["print", "open", "len", "len", "l.strip", "f.readlines"], "methods", ["None"], ["", "", "", "", "def", "load_file", "(", "self", ",", "path", ":", "str", ")", "->", "Tuple", "[", "List", "[", "str", "]", ",", "List", "[", "str", "]", "]", ":", "\n", "        ", "print", "(", "f\"Loading {path}\"", ")", "\n", "with", "open", "(", "path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "lines", "=", "[", "l", ".", "strip", "(", ")", "for", "l", "in", "f", ".", "readlines", "(", ")", "]", "\n", "\n", "", "q", "=", "lines", "[", ":", ":", "2", "]", "\n", "a", "=", "lines", "[", "1", ":", ":", "2", "]", "\n", "assert", "len", "(", "q", ")", "==", "len", "(", "a", ")", "\n", "return", "q", ",", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.verify_cache_version": [[49, 63], ["dm_math.DeepmindMathDataset.lock", "os.path.isfile", "print", "shutil.rmtree", "os.path.exists", "pickle.dump", "pickle.load", "os.remove", "open", "open"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.lock", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load"], ["", "def", "verify_cache_version", "(", "self", ")", ":", "\n", "        ", "with", "self", ".", "lock", "(", ")", ":", "\n", "            ", "if", "os", ".", "path", ".", "isfile", "(", "self", ".", "version_cache", ")", ":", "\n", "                ", "verfile", "=", "pickle", ".", "load", "(", "open", "(", "self", ".", "version_cache", ",", "'rb'", ")", ")", "\n", "if", "verfile", "[", "\"version\"", "]", "==", "self", ".", "VERSION", ":", "\n", "                    ", "return", "\n", "\n", "# Create new cache", "\n", "", "", "print", "(", "\"Cache version changed. Invalidating the cache...\"", ")", "\n", "shutil", ".", "rmtree", "(", "self", ".", "task_cache", ",", "ignore_errors", "=", "True", ")", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "vocab_cache", ")", ":", "\n", "                ", "os", ".", "remove", "(", "self", ".", "vocab_cache", ")", "\n", "", "pickle", ".", "dump", "(", "{", "\"version\"", ":", "self", ".", "VERSION", "}", ",", "open", "(", "self", ".", "version_cache", ",", "\"wb\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.get_cached": [[64, 81], ["gc.disable", "pickle.load", "gc.enable", "dm_math.DeepmindMathDataset.lock", "open", "os.path.isfile", "construct", "os.makedirs", "gc.disable", "pickle.dump", "gc.enable", "os.path.dirname", "open"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.lock", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.construct"], ["", "", "def", "get_cached", "(", "self", ",", "fname", ":", "str", ",", "construct", ":", "Callable", "[", "[", "]", ",", "Any", "]", ")", "->", "Any", ":", "\n", "# Only one process can check for existence and load the file at once.", "\n", "        ", "with", "self", ".", "lock", "(", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "isfile", "(", "fname", ")", ":", "\n", "                ", "data", "=", "construct", "(", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "fname", ")", ",", "exist_ok", "=", "True", ")", "\n", "gc", ".", "disable", "(", ")", "\n", "pickle", ".", "dump", "(", "data", ",", "open", "(", "fname", ",", "\"wb\"", ")", ",", "protocol", "=", "-", "1", ")", "\n", "gc", ".", "enable", "(", ")", "\n", "return", "data", "\n", "\n", "# Load", "\n", "", "", "gc", ".", "disable", "(", ")", "\n", "data", "=", "pickle", ".", "load", "(", "open", "(", "fname", ",", "\"rb\"", ")", ")", "\n", "gc", ".", "enable", "(", ")", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.create_vocab": [[82, 110], ["print", "os.path.join", "os.listdir", "framework.utils.parallel_map", "set().union", "os.path.join", "os.listdir", "set", "dm_math.DeepmindMathDataset.load_file", "flist.append", "set.update", "set.update", "set", "os.path.join", "set", "set"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.parallel_map.parallel_map", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.load_file"], ["", "def", "create_vocab", "(", "self", ")", "->", "set", ":", "\n", "        ", "print", "(", "\"Constructing vocabulary...\"", ")", "\n", "\n", "flist", "=", "[", "]", "\n", "extracted_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"mathematics_dataset-v1.0\"", ")", "\n", "for", "s", "in", "os", ".", "listdir", "(", "extracted_dir", ")", ":", "\n", "            ", "if", "\"readme\"", "in", "s", ":", "\n", "                ", "continue", "\n", "\n", "", "set_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"mathematics_dataset-v1.0\"", ",", "s", ")", "\n", "\n", "for", "task", "in", "os", ".", "listdir", "(", "set_dir", ")", ":", "\n", "                ", "flist", ".", "append", "(", "os", ".", "path", ".", "join", "(", "set_dir", ",", "task", ")", ")", "\n", "\n", "\n", "", "", "def", "process", "(", "fname", ":", "str", ")", ":", "\n", "            ", "vocabulary", "=", "set", "(", ")", "\n", "questions", ",", "answers", "=", "self", ".", "load_file", "(", "fname", ")", "\n", "for", "q", "in", "questions", ":", "\n", "                ", "vocabulary", ".", "update", "(", "set", "(", "q", ")", ")", "\n", "\n", "", "for", "a", "in", "answers", ":", "\n", "                ", "vocabulary", ".", "update", "(", "set", "(", "a", ")", ")", "\n", "\n", "", "return", "vocabulary", "\n", "\n", "", "vlist", "=", "framework", ".", "utils", ".", "parallel_map", "(", "flist", ",", "process", ")", "\n", "return", "set", "(", ")", ".", "union", "(", "*", "vlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.translate_file": [[111, 148], ["print", "dm_math.DeepmindMathDataset.load_file", "file.tell", "zip", "numpy.asarray().astype().tofile", "cache.clear", "hash", "cache.append", "cache.append", "index.append", "print", "len", "dm_math.DeepmindMathDataset.translate_file.sync"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.load_file", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.download.UrlStream.tell", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.argument_parser.ArgumentParser.sync"], ["", "def", "translate_file", "(", "self", ",", "fname", ":", "str", ",", "file", ",", "known", ":", "set", ")", ":", "\n", "        ", "print", "(", "f\"Translating {fname}\"", ")", "\n", "questions", ",", "answers", "=", "self", ".", "load_file", "(", "fname", ")", "\n", "\n", "index", "=", "[", "]", "\n", "cache", "=", "[", "]", "\n", "offset", "=", "file", ".", "tell", "(", ")", "\n", "\n", "skipped", "=", "0", "\n", "\n", "def", "sync", "(", ")", ":", "\n", "            ", "np", ".", "asarray", "(", "list", "(", "itertools", ".", "chain", ".", "from_iterable", "(", "cache", ")", ")", ",", "dtype", "=", "np", ".", "int8", ")", ".", "astype", "(", "'int8'", ")", ".", "tofile", "(", "file", ")", "\n", "assert", "offset", "==", "file", ".", "tell", "(", ")", "\n", "cache", ".", "clear", "(", ")", "\n", "\n", "", "for", "q", ",", "a", "in", "zip", "(", "questions", ",", "answers", ")", ":", "\n", "            ", "h", "=", "hash", "(", "q", ")", "\n", "if", "h", "in", "known", ":", "\n", "                ", "skipped", "+=", "1", "\n", "continue", "\n", "", "else", ":", "\n", "                ", "known", ".", "add", "(", "h", ")", "\n", "\n", "", "cache", ".", "append", "(", "self", ".", "vocabulary", "(", "q", ")", ")", "\n", "cache", ".", "append", "(", "self", ".", "vocabulary", "(", "a", ")", ")", "\n", "len_total", "=", "len", "(", "q", ")", "+", "len", "(", "a", ")", "\n", "index", ".", "append", "(", "[", "offset", ",", "len_total", ",", "len", "(", "q", ")", "]", ")", "\n", "offset", "+=", "len_total", "\n", "if", "len", "(", "cache", ")", ">", "10000", ":", "\n", "                ", "sync", "(", ")", "\n", "\n", "", "", "if", "skipped", ">", "0", ":", "\n", "            ", "print", "(", "f\"WARNING: removed {skipped} entries from {fname} because of repeats.\"", ")", "\n", "\n", "", "if", "len", "(", "cache", ")", ">", "0", ":", "\n", "            ", "sync", "(", ")", "\n", "", "return", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.get_task_name_list": [[149, 176], ["os.path.join", "set", "os.listdir", "list", "s.startswith", "os.listdir", "sorted", "os.path.join", "f.endswith", "set.add", "set.add", "set.add", "f.find"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add"], ["", "def", "get_task_name_list", "(", "self", ")", "->", "List", "[", "str", "]", ":", "\n", "        ", "extracted_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"mathematics_dataset-v1.0\"", ")", "\n", "res", "=", "set", "(", ")", "\n", "for", "s", "in", "os", ".", "listdir", "(", "extracted_dir", ")", ":", "\n", "            ", "if", "\"readme\"", "in", "s", ":", "\n", "                ", "continue", "\n", "\n", "", "is_train", "=", "s", ".", "startswith", "(", "\"train-\"", ")", "\n", "tname", "=", "s", "[", "6", ":", "]", "if", "is_train", "else", "s", "\n", "\n", "for", "f", "in", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "extracted_dir", ",", "s", ")", ")", ":", "\n", "                ", "assert", "f", ".", "endswith", "(", "\".txt\"", ")", "\n", "f", "=", "f", "[", ":", "-", "4", "]", "\n", "\n", "if", "tname", "==", "\"extrapolate\"", ":", "\n", "                    ", "for", "e", "in", "[", "\"_big\"", ",", "\"_more\"", ",", "\"_longer\"", "]", ":", "\n", "                        ", "i", "=", "f", ".", "find", "(", "e", ")", "\n", "if", "i", ">", "0", ":", "\n", "                            ", "f", "=", "f", "[", ":", "i", "]", "\n", "break", "\n", "\n", "", "", "", "if", "is_train", ":", "\n", "                    ", "res", ".", "add", "(", "f\"{f}_train_{tname}\"", ")", "\n", "res", ".", "add", "(", "f\"{f}_test_{tname}\"", ")", "\n", "", "else", ":", "\n", "                    ", "res", ".", "add", "(", "f\"{f}_{tname}\"", ")", "\n", "", "", "", "return", "list", "(", "sorted", "(", "res", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.split_test": [[177, 186], ["numpy.random.RandomState", "set", "numpy.random.RandomState.choice().tolist", "dm_math.DeepmindMathDataset.split_test.copy_filtered"], "methods", ["None"], ["", "def", "split_test", "(", "self", ",", "data", ":", "List", ")", "->", "Tuple", "[", "List", ",", "List", "]", ":", "\n", "        ", "def", "copy_filtered", "(", "data", ":", "List", ",", "filter", ")", "->", "List", ":", "\n", "            ", "return", "[", "data", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "data", ")", ")", "if", "filter", "(", "i", ")", "]", "\n", "\n", "", "seed", "=", "np", ".", "random", ".", "RandomState", "(", "1234", ")", "\n", "test_indices", "=", "set", "(", "seed", ".", "choice", "(", "len", "(", "data", ")", ",", "10000", ",", "replace", "=", "False", ")", ".", "tolist", "(", ")", ")", "\n", "\n", "return", "copy_filtered", "(", "data", ",", "lambda", "i", ":", "i", "not", "in", "test_indices", ")", ",", "copy_filtered", "(", "data", ",", "lambda", "i", ":", "i", "in", "test_indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.write_index_list": [[187, 191], ["open", "os.path.join", "numpy.asarray().astype().tofile", "numpy.asarray().astype", "numpy.asarray"], "methods", ["None"], ["", "def", "write_index_list", "(", "self", ",", "fname", ":", "str", ",", "ilist", ":", "List", "[", "List", "]", ")", ":", "\n", "        ", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "task_cache", ",", "fname", ")", ",", "\"wb\"", ")", "\n", "for", "l", "in", "ilist", ":", "\n", "            ", "np", ".", "asarray", "(", "l", ",", "dtype", "=", "np", ".", "uint32", ")", ".", "astype", "(", "'uint32'", ")", ".", "tofile", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.collect_missing_tasks": [[192, 194], ["os.path.isfile", "os.path.join"], "methods", ["None"], ["", "", "def", "collect_missing_tasks", "(", "self", ",", "tasks", ":", "List", "[", "str", "]", ")", "->", "List", "[", "str", "]", ":", "\n", "        ", "return", "[", "t", "for", "t", "in", "tasks", "if", "not", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "self", ".", "task_cache", ",", "t", "+", "\".raw\"", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.find_extrapolation_set": [[195, 203], ["os.path.join", "os.listdir", "f.startswith", "os.path.join"], "methods", ["None"], ["", "def", "find_extrapolation_set", "(", "self", ",", "task", ":", "str", ")", "->", "Optional", "[", "str", "]", ":", "\n", "        ", "extrapolate_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"mathematics_dataset-v1.0\"", ",", "f\"extrapolate\"", ")", "\n", "found", "=", "None", "\n", "for", "f", "in", "os", ".", "listdir", "(", "extrapolate_dir", ")", ":", "\n", "            ", "if", "f", ".", "startswith", "(", "task", ")", ":", "\n", "                ", "assert", "found", "is", "None", ",", "f\"Multiple extrapolation sets found for task {task}\"", "\n", "found", "=", "os", ".", "path", ".", "join", "(", "extrapolate_dir", ",", "f", ")", "\n", "", "", "return", "found", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.create_task_cache": [[204, 226], ["open", "data.append", "dm_math.DeepmindMathDataset.find_extrapolation_set", "set", "enumerate", "dm_math.DeepmindMathDataset.write_index_list", "os.path.join", "os.path.join", "os.path.join", "print", "data.append", "dm_math.DeepmindMathDataset.translate_file", "zip", "dm_math.DeepmindMathDataset.write_index_list", "dm_math.DeepmindMathDataset.write_index_list", "dm_math.DeepmindMathDataset.write_index_list", "dm_math.DeepmindMathDataset.split_test", "enumerate", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.find_extrapolation_set", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.write_index_list", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.translate_file", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.write_index_list", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.write_index_list", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.write_index_list", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.split_test"], ["", "def", "create_task_cache", "(", "self", ",", "task", ":", "str", ")", ":", "\n", "        ", "raw_file", "=", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "task_cache", ",", "task", "+", "\".raw\"", ")", ",", "\"wb\"", ")", "\n", "\n", "data", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"mathematics_dataset-v1.0\"", ",", "f\"train-{k}\"", ",", "task", "+", "\".txt\"", ")", "\n", "for", "k", "in", "self", ".", "DIFFICULTIES", "]", "\n", "data", ".", "append", "(", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"mathematics_dataset-v1.0\"", ",", "f\"interpolate\"", ",", "task", "+", "\".txt\"", ")", ")", "\n", "extrapolation", "=", "self", ".", "find_extrapolation_set", "(", "task", ")", "\n", "if", "extrapolation", "is", "not", "None", ":", "\n", "            ", "print", "(", "f\"Found extrapolation set {extrapolation}\"", ")", "\n", "data", ".", "append", "(", "extrapolation", ")", "\n", "\n", "", "known", "=", "set", "(", ")", "\n", "data", "=", "[", "self", ".", "translate_file", "(", "d", ",", "raw_file", ",", "known", ")", "for", "d", "in", "data", "]", "\n", "data", "=", "[", "self", ".", "split_test", "(", "d", ")", "if", "i", "<", "len", "(", "self", ".", "DIFFICULTIES", ")", "else", "d", "for", "i", ",", "d", "in", "enumerate", "(", "data", ")", "]", "\n", "\n", "for", "i", ",", "(", "n", ",", "d", ")", "in", "enumerate", "(", "zip", "(", "self", ".", "DIFFICULTIES", ",", "data", ")", ")", ":", "\n", "            ", "self", ".", "write_index_list", "(", "f\"{task}_train_{n}.idx\"", ",", "d", "[", "0", "]", ")", "\n", "self", ".", "write_index_list", "(", "f\"{task}_test_{n}.idx\"", ",", "d", "[", "1", "]", ")", "\n", "\n", "", "self", ".", "write_index_list", "(", "f\"{task}_interpolate.idx\"", ",", "data", "[", "len", "(", "self", ".", "DIFFICULTIES", ")", "]", ")", "\n", "if", "extrapolation", "is", "not", "None", ":", "\n", "            ", "self", ".", "write_index_list", "(", "f\"{task}_extrapolate.idx\"", ",", "data", "[", "len", "(", "self", ".", "DIFFICULTIES", ")", "+", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.list_task_indices": [[227, 230], ["os.listdir", "file.endswith", "file.startswith", "len"], "methods", ["None"], ["", "", "def", "list_task_indices", "(", "self", ",", "task", ":", "str", ")", ":", "\n", "        ", "return", "[", "file", "[", "len", "(", "task", ")", "+", "1", ":", "-", "4", "]", "for", "file", "in", "os", ".", "listdir", "(", "self", ".", "task_cache", ")", "\n", "if", "file", ".", "endswith", "(", "\".idx\"", ")", "and", "file", ".", "startswith", "(", "task", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.load_task": [[231, 240], ["numpy.memmap", "os.path.join", "numpy.memmap", "os.path.join", "dm_math.DeepmindMathDataset.list_task_indices"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.list_task_indices"], ["", "def", "load_task", "(", "self", ",", "task", ":", "str", ")", ":", "\n", "        ", "if", "task", "in", "DeepmindMathDataset", ".", "raw_data", ":", "\n", "            ", "return", "\n", "\n", "", "DeepmindMathDataset", ".", "raw_data", "[", "task", "]", "=", "np", ".", "memmap", "(", "os", ".", "path", ".", "join", "(", "self", ".", "task_cache", ",", "task", "+", "\".raw\"", ")", ",", "dtype", "=", "'uint8'", ",", "\n", "mode", "=", "'r'", ")", "\n", "DeepmindMathDataset", ".", "index", "[", "task", "]", "=", "{", "\n", "n", ":", "np", ".", "memmap", "(", "os", ".", "path", ".", "join", "(", "self", ".", "task_cache", ",", "task", "+", "f\"_{n}.idx\"", ")", ",", "dtype", "=", "'uint32'", ",", "mode", "=", "\"r\"", ")", "for", "n", "in", "self", ".", "list_task_indices", "(", "task", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.load_vocab": [[242, 253], ["dm_math.DeepmindMathDataset.get_cached", "framework.data_structures.CharVocabulary", "print", "print", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.get_cached"], ["", "def", "load_vocab", "(", "self", ")", ":", "\n", "        ", "if", "DeepmindMathDataset", ".", "vocabulary", "is", "not", "None", ":", "\n", "            ", "return", "\n", "\n", "", "vocabulary", "=", "self", ".", "get_cached", "(", "self", ".", "vocab_cache", ",", "self", ".", "create_vocab", ")", "\n", "DeepmindMathDataset", ".", "vocabulary", "=", "framework", ".", "data_structures", ".", "CharVocabulary", "(", "vocabulary", ")", "\n", "DeepmindMathDataset", ".", "in_vocabulary", "=", "DeepmindMathDataset", ".", "vocabulary", "\n", "DeepmindMathDataset", ".", "out_vocabulary", "=", "DeepmindMathDataset", ".", "vocabulary", "\n", "\n", "print", "(", "f\"Vocabulary: {len(vocabulary)}\"", ")", "\n", "print", "(", "vocabulary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.__len__": [[254, 256], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.__init__": [[257, 304], ["super().__init__", "os.path.join", "os.path.join", "os.path.join", "os.makedirs", "dm_math.DeepmindMathDataset.download", "dm_math.DeepmindMathDataset.verify_cache_version", "os.makedirs", "dm_math.DeepmindMathDataset.get_task_name_list", "print", "dm_math.DeepmindMathDataset.load_vocab", "print", "dm_math.DeepmindMathDataset.lock", "dm_math.DeepmindMathDataset.collect_missing_tasks", "framework.utils.parallel_map", "dm_math.DeepmindMathDataset.load_task", "print", "dm_math.DeepmindMathDataset.table_type.append", "dm_math.DeepmindMathDataset.index_tables.append", "dm_math.DeepmindMathDataset.data_tables.append", "dm_math.DeepmindMathDataset.offset_table.append", "print", "dm_math.DeepmindMathDataset.task_list.index", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.download", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.verify_cache_version", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.get_task_name_list", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.load_vocab", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.lock", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.collect_missing_tasks", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.parallel_map.parallel_map", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.load_task"], ["", "def", "__init__", "(", "self", ",", "tasks", ":", "List", "[", "str", "]", ",", "sets", ":", "List", "[", "str", "]", "=", "[", "\"train_easy\"", ",", "\"train_medium\"", ",", "\"train_hard\"", "]", ",", "\n", "cache_dir", ":", "str", "=", "\"./cache/dm_math/\"", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cache_dir", "=", "cache_dir", "\n", "self", ".", "vocab_cache", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"vocabulary.dat\"", ")", "\n", "self", ".", "version_cache", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"version.dat\"", ")", "\n", "self", ".", "task_cache", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "\"cached_tasks\"", ")", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "cache_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "download", "(", ")", "\n", "self", ".", "verify_cache_version", "(", ")", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "task_cache", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "data_tables", "=", "[", "]", "\n", "self", ".", "index_tables", "=", "[", "]", "\n", "self", ".", "offset_table", "=", "[", "]", "\n", "self", ".", "table_type", "=", "[", "]", "\n", "self", ".", "count", "=", "0", "\n", "\n", "self", ".", "task_list", "=", "self", ".", "get_task_name_list", "(", ")", "\n", "\n", "print", "(", "\"Loading vocabulary\"", ")", "\n", "self", ".", "load_vocab", "(", ")", "\n", "\n", "with", "self", ".", "lock", "(", ")", ":", "\n", "            ", "missing_tasks", "=", "self", ".", "collect_missing_tasks", "(", "tasks", ")", "\n", "framework", ".", "utils", ".", "parallel_map", "(", "missing_tasks", ",", "self", ".", "create_task_cache", ",", "max_parallel", "=", "16", ")", "\n", "\n", "", "for", "t", "in", "tasks", ":", "\n", "            ", "self", ".", "load_task", "(", "t", ")", "\n", "\n", "for", "set", "in", "sets", ":", "\n", "                ", "print", "(", "f\"Loading task {t}, set {set}\"", ")", "\n", "if", "set", "==", "\"extrapolate\"", "and", "set", "not", "in", "DeepmindMathDataset", ".", "index", "[", "t", "]", ":", "\n", "                    ", "print", "(", "f\"No extrapolation set for {t}\"", ")", "\n", "continue", "\n", "\n", "", "self", ".", "table_type", ".", "append", "(", "self", ".", "task_list", ".", "index", "(", "f\"{t}_{set}\"", ")", ")", "\n", "self", ".", "index_tables", ".", "append", "(", "DeepmindMathDataset", ".", "index", "[", "t", "]", "[", "set", "]", ")", "\n", "self", ".", "data_tables", ".", "append", "(", "DeepmindMathDataset", ".", "raw_data", "[", "t", "]", ")", "\n", "self", ".", "offset_table", ".", "append", "(", "self", ".", "count", ")", "\n", "self", ".", "count", "+=", "self", ".", "index_tables", "[", "-", "1", "]", ".", "shape", "[", "0", "]", "//", "3", "\n", "\n", "", "", "print", "(", "f\"Loaded {len(self)} samples\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.get_index": [[305, 312], ["bisect.bisect"], "methods", ["None"], ["", "def", "get_index", "(", "self", ",", "item", ":", "int", ")", "->", "Tuple", "[", "np", ".", "ndarray", ",", "np", ".", "ndarray", ",", "int", "]", ":", "\n", "        ", "table_index", "=", "bisect", ".", "bisect", "(", "self", ".", "offset_table", ",", "item", ")", "-", "1", "\n", "relative_index", "=", "item", "-", "self", ".", "offset_table", "[", "table_index", "]", "\n", "\n", "offset", ",", "t_len", ",", "q_len", "=", "self", ".", "index_tables", "[", "table_index", "]", "[", "relative_index", "*", "3", ":", "(", "relative_index", "+", "1", ")", "*", "3", "]", "\n", "return", "self", ".", "data_tables", "[", "table_index", "]", "[", "offset", ":", "offset", "+", "q_len", "]", ",", "self", ".", "data_tables", "[", "table_index", "]", "[", "offset", "+", "q_len", ":", "offset", "+", "t_len", "]", ",", "self", ".", "table_type", "[", "table_index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.__getitem__": [[313, 321], ["dm_math.DeepmindMathDataset.get_index"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.get_index"], ["", "def", "__getitem__", "(", "self", ",", "item", ":", "int", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "q", ",", "a", ",", "tid", "=", "self", ".", "get_index", "(", "item", ")", "\n", "return", "{", "\n", "\"in\"", ":", "q", ",", "\n", "\"out\"", ":", "a", ",", "\n", "\"in_len\"", ":", "q", ".", "shape", "[", "0", "]", ",", "\n", "\"out_len\"", ":", "a", ".", "shape", "[", "0", "]", ",", "\n", "\"type\"", ":", "tid", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.start_test": [[323, 325], ["sequence.TypedTextSequenceTestState"], "methods", ["None"], ["", "def", "start_test", "(", "self", ")", "->", "TypedTextSequenceTestState", ":", "\n", "        ", "return", "TypedTextSequenceTestState", "(", "self", ".", "in_vocabulary", ".", "ind_to_str", ",", "self", ".", "out_vocabulary", ".", "ind_to_str", ",", "self", ".", "task_list", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.pcfg_set.PCFGSet.build_cache": [[14, 47], ["pcfg_set.PCFGSet.URLS.items", "text_dataset.TextDatasetCache().build", "os.path.join", "os.makedirs", "text_dataset.TextDatasetCache", "os.path.dirname", "print", "framework.utils.download", "open", "open", "len", "len", "os.path.split", "in_sentences.append", "this_set.append", "out_sentences.append", "line.strip", "line.strip", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.build", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.download"], ["def", "build_cache", "(", "self", ")", "->", "TextDatasetCache", ":", "\n", "        ", "index_table", "=", "{", "}", "\n", "in_sentences", "=", "[", "]", "\n", "out_sentences", "=", "[", "]", "\n", "\n", "for", "split_type", ",", "url", "in", "self", ".", "URLS", ".", "items", "(", ")", ":", "\n", "            ", "index_table", "[", "split_type", "]", "=", "{", "}", "\n", "\n", "for", "set", "in", "[", "\"test\"", ",", "\"train\"", "]", "+", "(", "[", "\"dev\"", "]", "if", "split_type", "==", "\"simple\"", "else", "[", "]", ")", ":", "\n", "                ", "set_url", "=", "f\"{url}/{set}\"", "\n", "set_fn", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "split_type", ",", "os", ".", "path", ".", "split", "(", "set_url", ")", "[", "-", "1", "]", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "set_fn", ")", ",", "exist_ok", "=", "True", ")", "\n", "\n", "for", "f", "in", "[", "\"src\"", ",", "\"tgt\"", "]", ":", "\n", "                    ", "full_url", "=", "f\"{set_url}.{f}\"", "\n", "print", "(", "\"Downloading\"", ",", "full_url", ")", "\n", "download", "(", "full_url", ",", "f\"{set_fn}.{f}\"", ",", "ignore_if_exists", "=", "True", ")", "\n", "\n", "", "this_set", "=", "[", "]", "\n", "index_table", "[", "split_type", "]", "[", "set", "]", "=", "this_set", "\n", "\n", "with", "open", "(", "set_fn", "+", "\".src\"", ")", "as", "f", ":", "\n", "                    ", "for", "line", "in", "f", ":", "\n", "                        ", "in_sentences", ".", "append", "(", "line", ".", "strip", "(", ")", ")", "\n", "this_set", ".", "append", "(", "len", "(", "in_sentences", ")", "-", "1", ")", "\n", "\n", "", "", "with", "open", "(", "set_fn", "+", "\".tgt\"", ")", "as", "f", ":", "\n", "                    ", "for", "line", "in", "f", ":", "\n", "                        ", "out_sentences", ".", "append", "(", "line", ".", "strip", "(", ")", ")", "\n", "\n", "", "", "assert", "len", "(", "in_sentences", ")", "==", "len", "(", "out_sentences", ")", "\n", "\n", "", "", "return", "TextDatasetCache", "(", ")", ".", "build", "(", "index_table", ",", "in_sentences", ",", "out_sentences", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.build": [[7, 14], ["super().build"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.build"], ["    ", "def", "build", "(", "self", ",", "index_table", ":", "IndexTable", ",", "in_sentences", ":", "List", "[", "str", "]", ",", "out_sentences", ":", "List", "[", "str", "]", ",", "types", ":", "List", "[", "int", "]", ",", "\n", "type_names", ":", "List", "[", "str", "]", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "build", "(", "index_table", ",", "in_sentences", ",", "out_sentences", ")", "\n", "self", ".", "types", "=", "types", "\n", "self", ".", "type_names", "=", "type_names", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.state_dict": [[15, 20], ["super().state_dict"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.state_dict"], ["", "def", "state_dict", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "res", "=", "super", "(", ")", ".", "state_dict", "(", ")", "\n", "res", "[", "\"types\"", "]", "=", "self", ".", "types", "\n", "res", "[", "\"type_names\"", "]", "=", "self", ".", "type_names", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.load_state_dict": [[21, 26], ["super().load_state_dict"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.load_state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state", ":", "Dict", "[", "str", ",", "Any", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "load_state_dict", "(", "state", ")", "\n", "\n", "self", ".", "types", "=", "state", "[", "\"types\"", "]", "\n", "self", ".", "type_names", "=", "state", "[", "\"type_names\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDataset.load_cache_file": [[32, 34], ["TypedTextDatasetCache.load"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.load"], ["def", "load_cache_file", "(", "self", ",", "file", ")", "->", "TypedTextDatasetCache", ":", "\n", "        ", "return", "TypedTextDatasetCache", ".", "load", "(", "file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDataset.build_cache": [[35, 37], ["NotImplementedError"], "methods", ["None"], ["", "def", "build_cache", "(", "self", ")", "->", "TypedTextDatasetCache", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDataset.__init__": [[38, 40], ["text_dataset.TextDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["", "def", "__init__", "(", "self", ",", "sets", ":", "List", "[", "str", "]", "=", "[", "\"train\"", "]", ",", "cache_dir", ":", "str", "=", "\"./cache/\"", ",", "shared_vocabulary", ":", "bool", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "sets", ",", "[", "\"default\"", "]", ",", "cache_dir", ",", "shared_vocabulary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDataset.__getitem__": [[41, 51], ["typed_text_dataset.TypedTextDataset.get_seqs", "numpy.asarray", "numpy.asarray", "len", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDataset.get_seqs"], ["", "def", "__getitem__", "(", "self", ",", "item", ":", "int", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "index", "=", "self", ".", "my_indices", "[", "item", "]", "\n", "in_seq", ",", "out_seq", "=", "self", ".", "get_seqs", "(", "index", ")", "\n", "\n", "return", "{", "\n", "\"in\"", ":", "np", ".", "asarray", "(", "in_seq", ",", "np", ".", "int16", ")", ",", "\n", "\"out\"", ":", "np", ".", "asarray", "(", "out_seq", ",", "np", ".", "int16", ")", ",", "\n", "\"in_len\"", ":", "len", "(", "in_seq", ")", ",", "\n", "\"out_len\"", ":", "len", "(", "out_seq", ")", ",", "\n", "\"type\"", ":", "self", ".", "_cache", ".", "types", "[", "index", "]", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.cogs.COGS.build_cache": [[13, 53], ["typed_text_dataset.TypedTextDatasetCache().build", "os.path.join", "os.makedirs", "print", "framework.utils.download", "cogs.COGS.NAME_MAP.get", "os.path.dirname", "open", "csv.reader", "typed_text_dataset.TypedTextDatasetCache", "index_table[].append", "in_sentences.append", "out_sentences.append", "type_map.get", "types.append", "len", "len", "len", "len", "type_list.append"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.build", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.download", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["def", "build_cache", "(", "self", ")", "->", "TypedTextDatasetCache", ":", "\n", "\n", "        ", "types", "=", "[", "]", "\n", "type_list", "=", "[", "]", "\n", "type_map", "=", "{", "}", "\n", "\n", "index_table", "=", "{", "}", "\n", "in_sentences", "=", "[", "]", "\n", "out_sentences", "=", "[", "]", "\n", "\n", "for", "st", "in", "self", ".", "SPLT_TYPES", ":", "\n", "            ", "fname", "=", "self", ".", "NAME_MAP", ".", "get", "(", "st", ",", "st", ")", "+", "\".tsv\"", "\n", "split_fn", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "fname", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "split_fn", ")", ",", "exist_ok", "=", "True", ")", "\n", "\n", "full_url", "=", "self", ".", "URL_BASE", "+", "fname", "\n", "print", "(", "\"Downloading\"", ",", "full_url", ")", "\n", "download", "(", "full_url", ",", "split_fn", ",", "ignore_if_exists", "=", "True", ")", "\n", "\n", "index_table", "[", "st", "]", "=", "[", "]", "\n", "\n", "with", "open", "(", "split_fn", ",", "\"r\"", ")", "as", "f", ":", "\n", "                ", "d", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "\"\\t\"", ")", "\n", "for", "line", "in", "d", ":", "\n", "                    ", "i", ",", "o", ",", "t", "=", "line", "\n", "\n", "index_table", "[", "st", "]", ".", "append", "(", "len", "(", "in_sentences", ")", ")", "\n", "in_sentences", ".", "append", "(", "i", ")", "\n", "out_sentences", ".", "append", "(", "o", ")", "\n", "\n", "tind", "=", "type_map", ".", "get", "(", "t", ")", "\n", "if", "tind", "is", "None", ":", "\n", "                        ", "type_map", "[", "t", "]", "=", "tind", "=", "len", "(", "type_list", ")", "\n", "type_list", ".", "append", "(", "t", ")", "\n", "\n", "", "types", ".", "append", "(", "tind", ")", "\n", "\n", "", "assert", "len", "(", "in_sentences", ")", "==", "len", "(", "out_sentences", ")", "\n", "\n", "", "", "return", "TypedTextDatasetCache", "(", ")", ".", "build", "(", "{", "\"default\"", ":", "index_table", "}", ",", "in_sentences", ",", "out_sentences", ",", "types", ",", "type_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.cogs.COGS.start_test": [[54, 58], ["sequence.TypedTextSequenceTestState", "cogs.COGS.in_vocabulary", "cogs.COGS.out_vocabulary"], "methods", ["None"], ["", "def", "start_test", "(", "self", ")", "->", "TypedTextSequenceTestState", ":", "\n", "        ", "return", "TypedTextSequenceTestState", "(", "lambda", "x", ":", "\" \"", ".", "join", "(", "self", ".", "in_vocabulary", "(", "x", ")", ")", ",", "\n", "lambda", "x", ":", "\" \"", ".", "join", "(", "self", ".", "out_vocabulary", "(", "x", ")", ")", ",", "\n", "self", ".", "_cache", ".", "type_names", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.scan.Scan.build_cache": [[26, 55], ["scan.Scan.URLS.items", "text_dataset.TextDatasetCache().build", "split.items", "os.path.join", "print", "framework.utils.download", "text_dataset.TextDatasetCache", "open", "os.path.split", "line.split.split.split", "line[].replace", "in_sentences.append", "out_sentences.append", "this_set.append", "l.strip", "len"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.typed_text_dataset.TypedTextDatasetCache.build", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.dm_math.DeepmindMathDataset.download"], ["def", "build_cache", "(", "self", ")", "->", "TextDatasetCache", ":", "\n", "        ", "index_table", "=", "{", "}", "\n", "in_sentences", "=", "[", "]", "\n", "out_sentences", "=", "[", "]", "\n", "\n", "for", "split_type", ",", "split", "in", "self", ".", "URLS", ".", "items", "(", ")", ":", "\n", "            ", "index_table", "[", "split_type", "]", "=", "{", "}", "\n", "\n", "for", "set", ",", "url", "in", "split", ".", "items", "(", ")", ":", "\n", "                ", "fn", "=", "os", ".", "path", ".", "join", "(", "self", ".", "cache_dir", ",", "os", ".", "path", ".", "split", "(", "url", ")", "[", "-", "1", "]", ")", "\n", "\n", "print", "(", "\"Downloading\"", ",", "url", ")", "\n", "download", "(", "url", ",", "fn", ",", "ignore_if_exists", "=", "True", ")", "\n", "\n", "this_set", "=", "[", "]", "\n", "index_table", "[", "split_type", "]", "[", "set", "]", "=", "this_set", "\n", "\n", "with", "open", "(", "fn", ")", "as", "f", ":", "\n", "                    ", "for", "line", "in", "f", ":", "\n", "                        ", "line", "=", "line", ".", "split", "(", "\"OUT:\"", ")", "\n", "line", "[", "0", "]", "=", "line", "[", "0", "]", ".", "replace", "(", "\"IN:\"", ",", "\"\"", ")", "\n", "line", "=", "[", "l", ".", "strip", "(", ")", "for", "l", "in", "line", "]", "\n", "\n", "in_sentences", ".", "append", "(", "line", "[", "0", "]", ")", "\n", "out_sentences", ".", "append", "(", "line", "[", "1", "]", ")", "\n", "\n", "this_set", ".", "append", "(", "len", "(", "in_sentences", ")", "-", "1", ")", "\n", "\n", "", "", "", "", "return", "TextDatasetCache", "(", ")", ".", "build", "(", "index_table", ",", "in_sentences", ",", "out_sentences", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.dm_math_transformer.DMMathTransformer.create_datasets": [[7, 19], ["dataset.DeepmindMathDataset", "dataset.DeepmindMathDataset", "dataset.DeepmindMathDataset", "dataset.DeepmindMathDataset", "len"], "methods", ["None"], ["    ", "def", "create_datasets", "(", "self", ")", ":", "\n", "        ", "self", ".", "batch_dim", "=", "1", "\n", "self", ".", "train_set", "=", "dataset", ".", "DeepmindMathDataset", "(", "self", ".", "helper", ".", "args", ".", "dm_math", ".", "tasks", ",", "sets", "=", "[", "f\"train_{s}\"", "\n", "for", "s", "in", "self", ".", "helper", ".", "args", ".", "dm_math", ".", "train_splits", "]", ")", "\n", "\n", "self", ".", "valid_sets", ".", "interpolate", "=", "dataset", ".", "DeepmindMathDataset", "(", "self", ".", "helper", ".", "args", ".", "dm_math", ".", "tasks", ",", "sets", "=", "[", "\"interpolate\"", "]", ")", "\n", "self", ".", "valid_sets", ".", "iid", "=", "dataset", ".", "DeepmindMathDataset", "(", "self", ".", "helper", ".", "args", ".", "dm_math", ".", "tasks", ",", "sets", "=", "[", "f\"test_{s}\"", "for", "s", "in", "\n", "self", ".", "helper", ".", "args", ".", "dm_math", ".", "train_splits", "]", ")", "\n", "\n", "extrapolate", "=", "dataset", ".", "DeepmindMathDataset", "(", "self", ".", "helper", ".", "args", ".", "dm_math", ".", "tasks", ",", "sets", "=", "[", "\"extrapolate\"", "]", ")", "\n", "if", "len", "(", "extrapolate", ")", "!=", "0", ":", "\n", "            ", "self", ".", "valid_sets", "[", "\"extrapolate\"", "]", "=", "extrapolate", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.pcfg_transformer.PCFGTransformer.create_datasets": [[11, 16], ["dataset.PCFGSet", "dataset.PCFGSet"], "methods", ["None"], ["def", "create_datasets", "(", "self", ")", ":", "\n", "        ", "self", ".", "batch_dim", "=", "1", "\n", "self", ".", "train_set", "=", "dataset", ".", "PCFGSet", "(", "[", "\"train\"", "]", ",", "split_type", "=", "[", "self", ".", "helper", ".", "args", ".", "pcfg", ".", "split", "]", ",", "shared_vocabulary", "=", "True", ")", "\n", "self", ".", "valid_sets", ".", "val", "=", "dataset", ".", "PCFGSet", "(", "[", "\"test\"", "]", ",", "split_type", "=", "[", "self", ".", "helper", ".", "args", ".", "pcfg", ".", "split", "]", ",", "\n", "shared_vocabulary", "=", "True", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cogs_transofrmer.COGSTransformer.__init__": [[12, 14], ["transformer_mixin.TransformerMixin.__init__"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__"], ["def", "__init__", "(", "self", ",", "helper", ":", "framework", ".", "helpers", ".", "TrainingHelper", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "helper", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cogs_transofrmer.COGSTransformer.create_datasets": [[15, 20], ["dataset.COGS", "dataset.COGS", "dataset.COGS"], "methods", ["None"], ["", "def", "create_datasets", "(", "self", ")", ":", "\n", "        ", "self", ".", "batch_dim", "=", "1", "\n", "self", ".", "train_set", "=", "dataset", ".", "COGS", "(", "[", "\"train\"", "]", ",", "shared_vocabulary", "=", "True", ")", "\n", "self", ".", "valid_sets", ".", "val", "=", "dataset", ".", "COGS", "(", "[", "\"valid\"", "]", ",", "shared_vocabulary", "=", "True", ")", "\n", "self", ".", "slow_valid_set", "=", "dataset", ".", "COGS", "(", "[", "\"gen\"", "]", ",", "shared_vocabulary", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cogs_transofrmer.COGSTransformer.create_loaders": [[21, 24], ["super().create_loaders", "cogs_transofrmer.COGSTransformer.create_valid_loader"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.create_loaders", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.create_valid_loader"], ["", "def", "create_loaders", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "create_loaders", "(", ")", "\n", "self", ".", "slow_valid_loader", "=", "self", ".", "create_valid_loader", "(", "self", ".", "slow_valid_set", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cogs_transofrmer.COGSTransformer.do_generalization_test": [[25, 33], ["cogs_transofrmer.COGSTransformer.validate_on", "d.update", "d.update", "cogs_transofrmer.COGSTransformer.update_best_accuracies", "test.plot().items", "test.plot"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.validate_on", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.update_best_accuracies", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.plot"], ["", "def", "do_generalization_test", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "d", "=", "{", "}", "\n", "test", ",", "loss", "=", "self", ".", "validate_on", "(", "self", ".", "slow_valid_set", ",", "self", ".", "slow_valid_loader", ")", "\n", "\n", "d", "[", "\"validation/gen/loss\"", "]", "=", "loss", "\n", "d", ".", "update", "(", "{", "f\"validation/gen/{k}\"", ":", "v", "for", "k", ",", "v", "in", "test", ".", "plot", "(", ")", ".", "items", "(", ")", "}", ")", "\n", "d", ".", "update", "(", "self", ".", "update_best_accuracies", "(", "\"validation/gen\"", ",", "test", ".", "accuracy", ",", "loss", ")", ")", "\n", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cogs_transofrmer.COGSTransformer.plot": [[34, 40], ["super().plot", "super().plot.update", "cogs_transofrmer.COGSTransformer.do_generalization_test"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.plot", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cogs_transofrmer.COGSTransformer.do_generalization_test"], ["", "def", "plot", "(", "self", ",", "res", ":", "Result", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "d", "=", "super", "(", ")", ".", "plot", "(", "res", ")", "\n", "if", "(", "self", ".", "helper", ".", "state", ".", "iter", "%", "self", ".", "helper", ".", "args", ".", "cogs", ".", "generalization_test_interval", "==", "0", ")", "or", "(", "self", ".", "helper", ".", "state", ".", "iter", "==", "self", ".", "helper", ".", "args", ".", "test_interval", ")", ":", "\n", "            ", "d", ".", "update", "(", "self", ".", "do_generalization_test", "(", ")", ")", "\n", "", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cogs_transofrmer.COGSTransformer.train": [[41, 46], ["super().train", "cogs_transofrmer.COGSTransformer.helper.summary.log", "cogs_transofrmer.COGSTransformer.do_generalization_test"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cfq_transformer.CFQTransformer.train", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.log", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cogs_transofrmer.COGSTransformer.do_generalization_test"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "train", "(", ")", "\n", "if", "self", ".", "helper", ".", "state", ".", "iter", "%", "self", ".", "helper", ".", "args", ".", "cogs", ".", "generalization_test_interval", "!=", "0", ":", "\n", "# Redo the test, but only if it was not already done", "\n", "            ", "self", ".", "helper", ".", "summary", ".", "log", "(", "self", ".", "do_generalization_test", "(", ")", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.scan_transformer.ScanTransformer.create_datasets": [[9, 14], ["dataset.Scan", "dataset.Scan", "dataset.Scan"], "methods", ["None"], ["def", "create_datasets", "(", "self", ")", ":", "\n", "        ", "self", ".", "batch_dim", "=", "1", "\n", "self", ".", "train_set", "=", "dataset", ".", "Scan", "(", "[", "\"train\"", "]", ",", "split_type", "=", "self", ".", "helper", ".", "args", ".", "scan", ".", "train_split", ")", "\n", "self", ".", "valid_sets", ".", "val", "=", "dataset", ".", "Scan", "(", "[", "\"test\"", "]", ",", "split_type", "=", "self", ".", "helper", ".", "args", ".", "scan", ".", "train_split", ")", "\n", "self", ".", "valid_sets", ".", "iid", "=", "dataset", ".", "Scan", "(", "[", "\"test\"", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.scan_resplit_transformer.ScanResplitTransformer.create_datasets": [[6, 11], ["dataset.ScanLengthResplit", "dataset.ScanLengthResplit", "dataset.ScanLengthResplit"], "methods", ["None"], ["    ", "def", "create_datasets", "(", "self", ")", ":", "\n", "        ", "self", ".", "batch_dim", "=", "1", "\n", "self", ".", "train_set", "=", "dataset", ".", "ScanLengthResplit", "(", "\"train\"", ",", "(", "0", ",", "self", ".", "helper", ".", "args", ".", "scan", ".", "length_cutoff", ")", ")", "\n", "self", ".", "valid_sets", ".", "val", "=", "dataset", ".", "ScanLengthResplit", "(", "\"all\"", ",", "(", "self", ".", "helper", ".", "args", ".", "scan", ".", "length_cutoff", "+", "1", ",", "9999", ")", ")", "\n", "self", ".", "valid_sets", ".", "iid", "=", "dataset", ".", "ScanLengthResplit", "(", "\"test\"", ",", "(", "0", ",", "self", ".", "helper", ".", "args", ".", "scan", ".", "length_cutoff", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.create_datasets": [[33, 35], ["NotImplementedError"], "methods", ["None"], ["def", "create_datasets", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.create_model_interface": [[36, 38], ["NotImplementedError"], "methods", ["None"], ["", "def", "create_model_interface", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.create_model": [[39, 41], ["NotImplementedError"], "methods", ["None"], ["", "def", "create_model", "(", "self", ")", "->", "torch", ".", "nn", ".", "Module", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.amp_enabled": [[42, 45], ["torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["None"], ["", "@", "property", "\n", "def", "amp_enabled", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "cuda", ".", "is_available", "(", ")", "and", "self", ".", "helper", ".", "args", ".", "amp", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.time_dim": [[46, 49], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "time_dim", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "1", "-", "self", ".", "batch_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.__init__": [[50, 86], ["framework.data_structures.DotDict", "framework.utils.Average", "framework.utils.ElapsedTimeMeter", "framework.utils.ElapsedTimeMeter", "framework.utils.ElapsedTimeMeter", "framework.utils.Average", "task.Task.create_datasets", "task.Task.create_loaders", "task.Task.create_model", "task.Task.model.to", "task.Task.create_model_interface", "task.Task.create_optimizer", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler", "print", "task.Task.helper.restore", "optimizer.StepLrSched", "optimizer.NoamLRSched", "sum", "p.numel", "task.Task.model.parameters"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cfq_transformer.CFQTransformer.create_datasets", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.create_loaders", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.transformer_mixin.TransformerMixin.create_model", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.transformer_mixin.TransformerMixin.create_model_interface", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.create_optimizer", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.restore"], ["", "def", "__init__", "(", "self", ",", "helper", ":", "framework", ".", "helpers", ".", "TrainingHelper", ")", ":", "\n", "        ", "self", ".", "helper", "=", "helper", "\n", "self", ".", "helper", ".", "state", ".", "best_losses", "=", "{", "}", "\n", "self", ".", "helper", ".", "state", ".", "best_accuracies", "=", "{", "}", "\n", "self", ".", "valid_sets", "=", "framework", ".", "data_structures", ".", "DotDict", "(", ")", "\n", "self", ".", "loss_average", "=", "framework", ".", "utils", ".", "Average", "(", ")", "\n", "self", ".", "forward_time_meter", "=", "framework", ".", "utils", ".", "ElapsedTimeMeter", "(", ")", "\n", "self", ".", "load_time_meter", "=", "framework", ".", "utils", ".", "ElapsedTimeMeter", "(", ")", "\n", "self", ".", "plot_time_meter", "=", "framework", ".", "utils", ".", "ElapsedTimeMeter", "(", ")", "\n", "\n", "if", "self", ".", "helper", ".", "args", ".", "lr_sched", ".", "type", "==", "\"step\"", ":", "\n", "            ", "self", ".", "lr_scheduler", "=", "optimizer", ".", "StepLrSched", "(", "self", ".", "helper", ".", "args", ".", "lr", ",", "self", ".", "helper", ".", "args", ".", "lr_sched", ".", "steps", ",", "\n", "self", ".", "helper", ".", "args", ".", "lr_sched", ".", "gamma", ")", "\n", "\n", "", "elif", "self", ".", "helper", ".", "args", ".", "lr_sched", ".", "type", "==", "\"noam\"", ":", "\n", "            ", "self", ".", "lr_scheduler", "=", "optimizer", ".", "NoamLRSched", "(", "self", ".", "helper", ".", "args", ".", "lr", ",", "self", ".", "helper", ".", "args", ".", "state_size", ",", "\n", "self", ".", "helper", ".", "args", ".", "lr_warmup", ")", "\n", "", "else", ":", "\n", "            ", "assert", "False", "\n", "\n", "", "self", ".", "avg_num_chunks", "=", "framework", ".", "utils", ".", "Average", "(", ")", "\n", "\n", "self", ".", "create_datasets", "(", ")", "\n", "self", ".", "create_loaders", "(", ")", "\n", "self", ".", "model", "=", "self", ".", "create_model", "(", ")", "\n", "self", ".", "model", "=", "self", ".", "model", ".", "to", "(", "self", ".", "helper", ".", "device", ")", "\n", "self", ".", "create_model_interface", "(", ")", "\n", "self", ".", "create_optimizer", "(", ")", "\n", "\n", "self", ".", "scaler", "=", "torch", ".", "cuda", ".", "amp", ".", "GradScaler", "(", "enabled", "=", "self", ".", "amp_enabled", ")", "\n", "self", ".", "helper", ".", "saver", "[", "\"scaler\"", "]", "=", "self", ".", "scaler", "\n", "\n", "print", "(", "f\"Total number of model parameters: {sum(p.numel() for p in self.model.parameters())}\"", ")", "\n", "\n", "self", ".", "helper", ".", "saver", "[", "\"model\"", "]", "=", "self", ".", "model", "\n", "self", ".", "helper", ".", "restore", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.create_valid_loader": [[87, 91], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "framework.loader.collate.VarLengthCollate"], "methods", ["None"], ["", "def", "create_valid_loader", "(", "self", ",", "vset", ":", "torch", ".", "utils", ".", "data", ".", "Dataset", ")", "->", "torch", ".", "utils", ".", "data", ".", "DataLoader", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "vset", ",", "batch_size", "=", "self", ".", "test_batch_size", ",", "\n", "collate_fn", "=", "framework", ".", "loader", ".", "collate", ".", "VarLengthCollate", "(", "batch_dim", "=", "self", ".", "batch_dim", ")", ",", "\n", "num_workers", "=", "self", ".", "VALID_NUM_WORKERS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.replace_valid_set": [[92, 95], ["task.Task.create_valid_loader"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.create_valid_loader"], ["", "def", "replace_valid_set", "(", "self", ",", "name", ":", "str", ",", "vset", ":", "torch", ".", "utils", ".", "data", ".", "Dataset", ")", ":", "\n", "        ", "self", ".", "valid_sets", "[", "name", "]", "=", "vset", "\n", "self", ".", "valid_loaders", "[", "name", "]", "=", "self", ".", "create_valid_loader", "(", "vset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.create_train_loader": [[96, 105], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "framework.loader.sampler.InfiniteSampler", "framework.loader.collate.VarLengthCollate"], "methods", ["None"], ["", "def", "create_train_loader", "(", "self", ",", "loader", ":", "torch", ".", "utils", ".", "data", ".", "Dataset", ",", "seed", ":", "Optional", "[", "int", "]", "=", "None", ")", "->", "torch", ".", "utils", ".", "data", ".", "DataLoader", ":", "\n", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "loader", ",", "batch_size", "=", "self", ".", "helper", ".", "args", ".", "batch_size", ",", "\n", "sampler", "=", "framework", ".", "loader", ".", "sampler", ".", "InfiniteSampler", "(", "\n", "loader", ",", "seed", "=", "seed", ")", ",", "\n", "collate_fn", "=", "framework", ".", "loader", ".", "collate", ".", "VarLengthCollate", "(", "\n", "batch_dim", "=", "self", ".", "batch_dim", ")", ",", "\n", "num_workers", "=", "self", ".", "TRAIN_NUM_WORKERS", ",", "pin_memory", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.set_optimizer_lr": [[106, 110], ["framework.utils.set_lr", "task.Task.helper.summary.log"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.set_lr", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.log"], ["", "def", "set_optimizer_lr", "(", "self", ",", "lr", ":", "float", ")", ":", "\n", "        ", "framework", ".", "utils", ".", "set_lr", "(", "self", ".", "optimizer", ",", "lr", ")", "\n", "if", "self", ".", "helper", ".", "state", ".", "iter", "%", "100", "==", "0", ":", "\n", "            ", "self", ".", "helper", ".", "summary", ".", "log", "(", "{", "\"lr\"", ":", "lr", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.set_linear_warmup": [[111, 119], ["task.Task.set_optimizer_lr"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.set_optimizer_lr"], ["", "", "def", "set_linear_warmup", "(", "self", ",", "curr_step", ":", "int", ",", "n_steps", ":", "int", ",", "final", ":", "float", ")", "->", "float", ":", "\n", "        ", "if", "curr_step", ">=", "n_steps", ":", "\n", "            ", "lr", "=", "final", "\n", "", "else", ":", "\n", "            ", "lr", "=", "final", "/", "n_steps", "*", "(", "curr_step", "+", "1", ")", "\n", "\n", "", "self", ".", "set_optimizer_lr", "(", "lr", ")", "\n", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.set_lr": [[120, 128], ["task.Task.set_linear_warmup", "task.Task.lr_scheduler.get", "task.Task.set_optimizer_lr", "task.Task.lr_scheduler.get"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.set_linear_warmup", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.set_optimizer_lr", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get"], ["", "def", "set_lr", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "helper", ".", "args", ".", "lr_sched", ".", "type", "==", "\"step\"", ":", "\n", "            ", "self", ".", "set_linear_warmup", "(", "self", ".", "helper", ".", "state", ".", "iter", ",", "self", ".", "helper", ".", "args", ".", "lr_warmup", ",", "\n", "self", ".", "lr_scheduler", ".", "get", "(", "self", ".", "helper", ".", "state", ".", "iter", ")", ")", "\n", "", "elif", "self", ".", "helper", ".", "args", ".", "lr_sched", ".", "type", "==", "\"noam\"", ":", "\n", "            ", "self", ".", "set_optimizer_lr", "(", "self", ".", "lr_scheduler", ".", "get", "(", "self", ".", "helper", ".", "state", ".", "iter", ")", ")", "\n", "", "else", ":", "\n", "            ", "assert", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.prepare_data": [[129, 131], ["task.Task.helper.to_device"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.to_device"], ["", "", "def", "prepare_data", "(", "self", ",", "data", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "return", "self", ".", "helper", ".", "to_device", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.validate_on": [[132, 149], ["task.Task.model.eval", "task.Task.model.train", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "set.start_test", "tqdm.tqdm.tqdm", "task.Task.prepare_data", "task.Task.model_interface", "task.Task.model_interface.decode_outputs", "set.start_test.step", "len", "task.Task.loss.sum().item", "task.Task.loss.sum"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cfq_transformer.CFQTransformer.train", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.cogs.COGS.start_test", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.prepare_data", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.encoder_decoder_interface.TransformerEncDecInterface.decode_outputs", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TypedTextSequenceTestState.step"], ["", "def", "validate_on", "(", "self", ",", "set", ":", "torch", ".", "utils", ".", "data", ".", "Dataset", ",", "loader", ":", "torch", ".", "utils", ".", "data", ".", "DataLoader", ")", "->", "Tuple", "[", "Any", ",", "float", "]", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "loss_sum", "=", "0", "\n", "\n", "test", "=", "set", ".", "start_test", "(", ")", "\n", "for", "d", "in", "tqdm", "(", "loader", ")", ":", "\n", "                ", "d", "=", "self", ".", "prepare_data", "(", "d", ")", "\n", "res", "=", "self", ".", "model_interface", "(", "d", ")", "\n", "digits", "=", "self", ".", "model_interface", ".", "decode_outputs", "(", "res", ")", "\n", "loss_sum", "+=", "res", ".", "loss", ".", "sum", "(", ")", ".", "item", "(", ")", "*", "res", ".", "batch_size", "\n", "\n", "test", ".", "step", "(", "digits", ",", "d", ")", "\n", "\n", "", "", "self", ".", "model", ".", "train", "(", ")", "\n", "return", "test", ",", "loss_sum", "/", "len", "(", "set", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.validate_on_name": [[150, 152], ["task.Task.validate_on"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.validate_on"], ["", "def", "validate_on_name", "(", "self", ",", "name", ":", "str", ")", "->", "Tuple", "[", "Any", ",", "float", "]", ":", "\n", "        ", "return", "self", ".", "validate_on", "(", "self", ".", "valid_sets", "[", "name", "]", ",", "self", ".", "valid_loaders", "[", "name", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.update_best_accuracies": [[153, 164], ["task.LastBestMarker", "task.LastBestMarker"], "methods", ["None"], ["", "def", "update_best_accuracies", "(", "self", ",", "name", ":", "str", ",", "accuracy", ":", "float", ",", "loss", ":", "float", ")", ":", "\n", "        ", "if", "name", "not", "in", "self", ".", "helper", ".", "state", ".", "best_losses", "or", "loss", "<", "self", ".", "helper", ".", "state", ".", "best_losses", "[", "name", "]", ".", "loss", ":", "\n", "                ", "self", ".", "helper", ".", "state", ".", "best_losses", "[", "name", "]", "=", "LastBestMarker", "(", "self", ".", "helper", ".", "state", ".", "iter", ",", "loss", ",", "accuracy", ")", "\n", "\n", "", "if", "name", "not", "in", "self", ".", "helper", ".", "state", ".", "best_accuracies", "or", "accuracy", ">", "self", ".", "helper", ".", "state", ".", "best_accuracies", "[", "name", "]", ".", "accuracy", ":", "\n", "            ", "self", ".", "helper", ".", "state", ".", "best_accuracies", "[", "name", "]", "=", "LastBestMarker", "(", "self", ".", "helper", ".", "state", ".", "iter", ",", "loss", ",", "accuracy", ")", "\n", "\n", "", "return", "{", "\n", "f\"{name}/time_since_best_loss\"", ":", "self", ".", "helper", ".", "state", ".", "iter", "-", "self", ".", "helper", ".", "state", ".", "best_losses", "[", "name", "]", ".", "iter", ",", "\n", "f\"{name}/time_since_best_accuracy\"", ":", "self", ".", "helper", ".", "state", ".", "iter", "-", "self", ".", "helper", ".", "state", ".", "best_accuracies", "[", "name", "]", ".", "iter", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.validate_on_names": [[166, 185], ["task.Task.validate_on_name", "print", "charts.update", "charts.update", "len", "len", "task.Task.update_best_accuracies", "test.plot().items", "test.plot"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cfq_transformer.CFQTransformer.validate_on_name", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.update_best_accuracies", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.plot"], ["", "def", "validate_on_names", "(", "self", ",", "name_it", ":", "Iterable", "[", "str", "]", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "charts", "=", "{", "}", "\n", "sum_accuracy", "=", "0", "\n", "sum_all_losses", "=", "0", "\n", "\n", "for", "name", "in", "name_it", ":", "\n", "            ", "test", ",", "loss", "=", "self", ".", "validate_on_name", "(", "name", ")", "\n", "\n", "print", "(", "f\"Validation accuracy on {name}: {test.accuracy}\"", ")", "\n", "charts", "[", "f\"{name}/loss\"", "]", "=", "loss", "\n", "sum_all_losses", "+=", "loss", "\n", "charts", ".", "update", "(", "{", "f\"{name}/{k}\"", ":", "v", "for", "k", ",", "v", "in", "test", ".", "plot", "(", ")", ".", "items", "(", ")", "}", ")", "\n", "sum_accuracy", "+=", "test", ".", "accuracy", "\n", "\n", "charts", ".", "update", "(", "self", ".", "update_best_accuracies", "(", "name", ",", "test", ".", "accuracy", ",", "loss", ")", ")", "\n", "\n", "", "charts", "[", "\"mean_accuracy\"", "]", "=", "sum_accuracy", "/", "len", "(", "self", ".", "valid_sets", ")", "\n", "charts", "[", "\"mean_loss\"", "]", "=", "sum_all_losses", "/", "len", "(", "self", ".", "valid_sets", ")", "\n", "return", "charts", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.validate": [[186, 188], ["task.Task.validate_on_names", "task.Task.valid_sets.keys"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.validate_on_names"], ["", "def", "validate", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "return", "self", ".", "validate_on_names", "(", "self", ".", "valid_sets", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.plot": [[189, 210], ["task.Task.loss_average.add", "plots.update", "task.Task.loss_average.get", "plots.update", "task.Task.avg_num_chunks.get", "res.plot", "task.Task.forward_time_meter.get", "task.Task.load_time_meter.get", "task.Task.plot_time_meter.get", "task.Task.validate().items", "task.Task.validate"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.plot", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.validate"], ["", "def", "plot", "(", "self", ",", "res", ":", "Result", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "plots", "=", "{", "}", "\n", "\n", "self", ".", "loss_average", ".", "add", "(", "res", ".", "loss", ")", "\n", "\n", "if", "self", ".", "helper", ".", "state", ".", "iter", "%", "200", "==", "0", ":", "\n", "            ", "plots", ".", "update", "(", "res", ".", "plot", "(", ")", ")", "\n", "\n", "", "if", "self", ".", "helper", ".", "state", ".", "iter", "%", "20", "==", "0", ":", "\n", "            ", "plots", "[", "\"train/loss\"", "]", "=", "self", ".", "loss_average", ".", "get", "(", ")", "\n", "plots", "[", "\"timing/ms_per_iter\"", "]", "=", "self", ".", "forward_time_meter", ".", "get", "(", "True", ")", "*", "1000", "/", "20", "\n", "plots", "[", "\"timing/ms_per_load\"", "]", "=", "self", ".", "load_time_meter", ".", "get", "(", "True", ")", "*", "1000", "/", "20", "\n", "plots", "[", "\"timing/ms_per_plot\"", "]", "=", "self", ".", "plot_time_meter", ".", "get", "(", "True", ")", "*", "1000", "/", "20", "\n", "\n", "", "if", "self", ".", "helper", ".", "state", ".", "iter", "%", "self", ".", "helper", ".", "args", ".", "test_interval", "==", "0", ":", "\n", "            ", "plots", ".", "update", "(", "{", "f\"validation/{k}\"", ":", "v", "for", "k", ",", "v", "in", "self", ".", "validate", "(", ")", ".", "items", "(", ")", "}", ")", "\n", "\n", "", "if", "self", ".", "helper", ".", "state", ".", "iter", "%", "20", "==", "0", ":", "\n", "            ", "plots", "[", "\"average_num_chunks\"", "]", "=", "self", ".", "avg_num_chunks", ".", "get", "(", ")", "\n", "\n", "", "return", "plots", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.create_loaders": [[211, 215], ["task.Task.create_train_loader", "framework.data_structures.DotDict", "task.Task.valid_loaders.update", "task.Task.create_valid_loader", "task.Task.valid_sets.items"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.create_train_loader", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.create_valid_loader"], ["", "def", "create_loaders", "(", "self", ")", ":", "\n", "        ", "self", ".", "train_loader", "=", "self", ".", "create_train_loader", "(", "self", ".", "train_set", ")", "\n", "self", ".", "valid_loaders", "=", "framework", ".", "data_structures", ".", "DotDict", "(", ")", "\n", "self", ".", "valid_loaders", ".", "update", "(", "{", "k", ":", "self", ".", "create_valid_loader", "(", "v", ")", "for", "k", ",", "v", "in", "self", ".", "valid_sets", ".", "items", "(", ")", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.create_optimizer": [[216, 225], ["task.Task.set_optimizer", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "task.Task.set_optimizer", "task.Task.model.parameters", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "task.Task.model.parameters"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.set_optimizer", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.set_optimizer"], ["", "def", "create_optimizer", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "helper", ".", "args", ".", "optimizer", "==", "\"adam\"", ":", "\n", "            ", "self", ".", "set_optimizer", "(", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "self", ".", "helper", ".", "args", ".", "lr", ",", "\n", "weight_decay", "=", "self", ".", "helper", ".", "args", ".", "wd", ",", "betas", "=", "self", ".", "helper", ".", "args", ".", "adam", ".", "betas", ")", ")", "\n", "", "elif", "self", ".", "helper", ".", "args", ".", "optimizer", "==", "\"sgd\"", ":", "\n", "            ", "self", ".", "set_optimizer", "(", "torch", ".", "optim", ".", "SGD", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "self", ".", "helper", ".", "args", ".", "lr", ",", "\n", "weight_decay", "=", "self", ".", "helper", ".", "args", ".", "wd", ",", "momentum", "=", "0.9", ")", ")", "\n", "", "else", ":", "\n", "            ", "assert", "False", ",", "f\"Unsupported optimizer: {self.helper.args.optimizer}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.set_optimizer": [[226, 229], ["task.Task.helper.saver.register"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.register"], ["", "", "def", "set_optimizer", "(", "self", ",", "optimizer", ":", "torch", ".", "optim", ".", "Optimizer", ")", ":", "\n", "        ", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "helper", ".", "saver", ".", "register", "(", "\"optimizer\"", ",", "self", ".", "optimizer", ",", "replace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.get_train_batch": [[230, 232], ["next"], "methods", ["None"], ["", "def", "get_train_batch", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "return", "next", "(", "self", ".", "data_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.run_model": [[233, 236], ["task.Task.model_interface"], "methods", ["None"], ["", "def", "run_model", "(", "self", ",", "data", ":", "torch", ".", "Tensor", ")", "->", "Tuple", "[", "Result", ",", "Dict", "[", "str", ",", "Any", "]", "]", ":", "\n", "        ", "res", "=", "self", ".", "model_interface", "(", "data", ")", "\n", "return", "res", ",", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.chunk_batch_dim": [[237, 252], ["data.items", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "enumerate", "range", "v.chunk", "v.ndimension"], "methods", ["None"], ["", "def", "chunk_batch_dim", "(", "self", ",", "data", ":", "Dict", "[", "str", ",", "Any", "]", ",", "n", ":", "int", ")", "->", "List", "[", "Dict", "[", "str", ",", "Any", "]", "]", ":", "\n", "        ", "if", "n", "==", "1", ":", "\n", "            ", "return", "[", "data", "]", "\n", "\n", "", "res", "=", "[", "{", "}", "for", "_", "in", "range", "(", "n", ")", "]", "\n", "for", "k", ",", "v", "in", "data", ".", "items", "(", ")", ":", "\n", "            ", "assert", "torch", ".", "is_tensor", "(", "v", ")", ",", "\"Only tensors are supported by autosplitting\"", "\n", "\n", "bd", "=", "self", ".", "batch_dim", "if", "self", ".", "batch_dim", "<", "v", ".", "ndimension", "(", ")", "else", "0", "\n", "assert", "v", ".", "shape", "[", "bd", "]", "%", "n", "==", "0", "\n", "\n", "for", "i", ",", "c", "in", "enumerate", "(", "v", ".", "chunk", "(", "n", ",", "dim", "=", "bd", ")", ")", ":", "\n", "                ", "res", "[", "i", "]", "[", "k", "]", "=", "c", "\n", "\n", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.is_seq2seq_task": [[253, 255], ["None"], "methods", ["None"], ["", "def", "is_seq2seq_task", "(", "self", ",", "data", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "bool", ":", "\n", "        ", "return", "\"in_len\"", "in", "data", "and", "\"out_len\"", "in", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.get_seq_length": [[256, 259], ["max"], "methods", ["None"], ["", "def", "get_seq_length", "(", "self", ",", "data", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "int", ":", "\n", "# This assumes separate encoder and decoder", "\n", "        ", "return", "max", "(", "data", "[", "\"in\"", "]", ".", "shape", "[", "self", ".", "time_dim", "]", ",", "data", "[", "\"out\"", "]", ".", "shape", "[", "self", ".", "time_dim", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.get_n_chunks": [[260, 266], ["task.Task.is_seq2seq_task", "int", "int", "task.Task.get_seq_length"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.is_seq2seq_task", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.get_seq_length"], ["", "def", "get_n_chunks", "(", "self", ",", "data", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "int", ":", "\n", "        ", "max_length_per_batch", "=", "self", ".", "helper", ".", "args", ".", "max_length_per_batch", "or", "self", ".", "MAX_LENGHT_PER_BATCH", "\n", "if", "self", ".", "is_seq2seq_task", "(", "data", ")", "and", "max_length_per_batch", ":", "\n", "# The formula below assumes quadratic memory consumption", "\n", "            ", "return", "int", "(", "2", "**", "int", "(", "self", ".", "get_seq_length", "(", "data", ")", "/", "max_length_per_batch", ")", ")", "\n", "", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.train_step": [[267, 301], ["task.Task.set_lr", "task.Task.prepare_data", "task.Task.optimizer.zero_grad", "task.Task.get_n_chunks", "task.Task.avg_num_chunks.add", "data[].sum", "task.Task.chunk_batch_dim", "task.Task.scaler.unscale_", "task.Task.scaler.step", "task.Task.scaler.update", "res_list[].__class__.merge", "task.Task.get_train_batch", "weights.append", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "torch.isfinite", "task.Task.scaler.scale().backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "task.Task.run_model", "res_list.append", "plots.update", "task.Task.model.parameters", "task.Task.scaler.scale", "d[].sum"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.set_lr", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.prepare_data", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.get_n_chunks", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.lib.stat_tracker.MedianTracker.add", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.chunk_batch_dim", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TypedTextSequenceTestState.step", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.interfaces.result.Result.merge", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.get_train_batch", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.run_model"], ["", "def", "train_step", "(", "self", ")", "->", "Tuple", "[", "Result", ",", "Dict", "[", "str", ",", "Any", "]", "]", ":", "\n", "        ", "plots", "=", "{", "}", "\n", "\n", "with", "self", ".", "forward_time_meter", ":", "\n", "            ", "self", ".", "set_lr", "(", ")", "\n", "data", "=", "self", ".", "prepare_data", "(", "self", ".", "get_train_batch", "(", ")", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", "set_to_none", "=", "True", ")", "\n", "\n", "n_chunks", "=", "self", ".", "get_n_chunks", "(", "data", ")", "\n", "res_list", "=", "[", "]", "\n", "weights", "=", "[", "]", "\n", "\n", "self", ".", "avg_num_chunks", ".", "add", "(", "n_chunks", ")", "\n", "\n", "total_out_len", "=", "data", "[", "\"out_len\"", "]", ".", "sum", "(", ")", "\n", "for", "d", "in", "self", ".", "chunk_batch_dim", "(", "data", ",", "n_chunks", ")", ":", "\n", "                ", "with", "torch", ".", "cuda", ".", "amp", ".", "autocast", "(", "enabled", "=", "self", ".", "amp_enabled", ")", ":", "\n", "                    ", "res", ",", "custom_plots", "=", "self", ".", "run_model", "(", "d", ")", "\n", "res_list", ".", "append", "(", "res", ")", "\n", "plots", ".", "update", "(", "custom_plots", ")", "\n", "", "weights", ".", "append", "(", "(", "d", "[", "\"out_len\"", "]", ".", "sum", "(", ")", "/", "total_out_len", ")", "if", "\"out_len\"", "in", "d", "else", "1", ")", "\n", "assert", "torch", ".", "isfinite", "(", "res_list", "[", "-", "1", "]", ".", "loss", ")", "\n", "self", ".", "scaler", ".", "scale", "(", "res_list", "[", "-", "1", "]", ".", "loss", "*", "weights", "[", "-", "1", "]", ")", ".", "backward", "(", ")", "\n", "\n", "", "self", ".", "scaler", ".", "unscale_", "(", "self", ".", "optimizer", ")", "\n", "if", "self", ".", "helper", ".", "args", ".", "grad_clip", ":", "\n", "                ", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "self", ".", "helper", ".", "args", ".", "grad_clip", ")", "\n", "", "self", ".", "scaler", ".", "step", "(", "self", ".", "optimizer", ")", "\n", "self", ".", "scaler", ".", "update", "(", ")", "\n", "\n", "self", ".", "helper", ".", "state", ".", "iter", "+=", "1", "\n", "res", "=", "res_list", "[", "0", "]", ".", "__class__", ".", "merge", "(", "res_list", ",", "weights", ")", "\n", "\n", "", "return", "res", ",", "plots", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.train": [[302, 319], ["task.Task.loss_average.reset", "iter", "task.Task.load_time_meter.stop", "task.Task.train_step", "plots.update", "task.Task.load_time_meter.start", "task.Task.helper.tick", "task.Task.plot", "task.Task.helper.summary.log"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.reset", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.utils.time_meter.ElapsedTimeMeter.stop", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.train_step", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.start", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.saver.Saver.tick", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.plot", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.visualize.plot.AsyncLogger.log"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "loss_average", ".", "reset", "(", ")", "\n", "\n", "self", ".", "data_iter", "=", "iter", "(", "self", ".", "train_loader", ")", "\n", "\n", "while", "(", "self", ".", "helper", ".", "args", ".", "stop_after", "or", "10e10", ")", ">", "self", ".", "helper", ".", "state", ".", "iter", ":", "\n", "            ", "self", ".", "load_time_meter", ".", "stop", "(", ")", "\n", "\n", "res", ",", "plots", "=", "self", ".", "train_step", "(", ")", "\n", "plots", ".", "update", "(", "self", ".", "plot", "(", "res", ")", ")", "\n", "\n", "with", "self", ".", "plot_time_meter", ":", "\n", "                ", "self", ".", "helper", ".", "summary", ".", "log", "(", "plots", ")", "\n", "\n", "", "self", ".", "load_time_meter", ".", "start", "(", ")", "\n", "\n", "self", ".", "helper", ".", "tick", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.test_batch_size": [[320, 323], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "test_batch_size", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "helper", ".", "args", ".", "test_batch_size", "or", "self", ".", "helper", ".", "args", ".", "batch_size", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.transformer_mixin.TransformerMixin.create_model": [[8, 32], ["dict", "models.TransformerEncDecModel", "len", "len", "dict", "dict", "dict", "dict"], "methods", ["None"], ["    ", "def", "create_model", "(", "self", ")", "->", "torch", ".", "nn", ".", "Module", ":", "\n", "        ", "rel_args", "=", "dict", "(", "pos_embeddig", "=", "(", "lambda", "x", ",", "offset", ":", "x", ")", ",", "embedding_init", "=", "\"xavier\"", ")", "\n", "trafos", "=", "{", "\n", "\"scaledinit\"", ":", "(", "Transformer", ",", "dict", "(", "embedding_init", "=", "\"kaiming\"", ",", "scale_mode", "=", "\"down\"", ")", ")", ",", "\n", "\"opennmt\"", ":", "(", "Transformer", ",", "dict", "(", "embedding_init", "=", "\"xavier\"", ",", "scale_mode", "=", "\"opennmt\"", ")", ")", ",", "\n", "\"noscale\"", ":", "(", "Transformer", ",", "{", "}", ")", ",", "\n", "\"universal_noscale\"", ":", "(", "UniversalTransformer", ",", "{", "}", ")", ",", "\n", "\"universal_scaledinit\"", ":", "(", "UniversalTransformer", ",", "dict", "(", "embedding_init", "=", "\"kaiming\"", ",", "scale_mode", "=", "\"down\"", ")", ")", ",", "\n", "\"universal_opennmt\"", ":", "(", "UniversalTransformer", ",", "dict", "(", "embedding_init", "=", "\"xavier\"", ",", "scale_mode", "=", "\"opennmt\"", ")", ")", ",", "\n", "\"relative\"", ":", "(", "RelativeTransformer", ",", "rel_args", ")", ",", "\n", "\"relative_universal\"", ":", "(", "UniversalRelativeTransformer", ",", "rel_args", ")", "\n", "}", "\n", "\n", "constructor", ",", "args", "=", "trafos", "[", "self", ".", "helper", ".", "args", ".", "transformer", ".", "variant", "]", "\n", "\n", "return", "TransformerEncDecModel", "(", "len", "(", "self", ".", "train_set", ".", "in_vocabulary", ")", ",", "\n", "len", "(", "self", ".", "train_set", ".", "out_vocabulary", ")", ",", "self", ".", "helper", ".", "args", ".", "state_size", ",", "\n", "nhead", "=", "self", ".", "helper", ".", "args", ".", "transformer", ".", "n_heads", ",", "\n", "num_encoder_layers", "=", "self", ".", "helper", ".", "args", ".", "transformer", ".", "encoder_n_layers", ",", "\n", "num_decoder_layers", "=", "self", ".", "helper", ".", "args", ".", "transformer", ".", "decoder_n_layers", "or", "self", ".", "helper", ".", "args", ".", "transformer", ".", "encoder_n_layers", ",", "\n", "ff_multiplier", "=", "self", ".", "helper", ".", "args", ".", "transformer", ".", "ff_multiplier", ",", "\n", "transformer", "=", "constructor", ",", "\n", "tied_embedding", "=", "self", ".", "helper", ".", "args", ".", "transformer", ".", "tied_embedding", ",", "**", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.transformer_mixin.TransformerMixin.create_model_interface": [[33, 35], ["interfaces.TransformerEncDecInterface"], "methods", ["None"], ["", "def", "create_model_interface", "(", "self", ")", ":", "\n", "        ", "self", ".", "model_interface", "=", "TransformerEncDecInterface", "(", "self", ".", "model", ",", "label_smoothing", "=", "self", ".", "helper", ".", "args", ".", "label_smoothing", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cfq_transformer.CFQTransformer.create_datasets": [[15, 20], ["dataset.CFQ", "dataset.CFQ", "dataset.CFQ", "dataset.CFQ", "dataset.CFQ", "dataset.CFQ", "dataset.CFQ", "dataset.CFQ", "dataset.CFQ", "dataset.CFQ", "dataset.CFQ", "dataset.CFQ"], "methods", ["None"], ["def", "create_datasets", "(", "self", ")", ":", "\n", "        ", "self", ".", "batch_dim", "=", "1", "\n", "self", ".", "train_set", "=", "dataset", ".", "CFQ", "(", "[", "\"train\"", "]", ",", "split_type", "=", "[", "self", ".", "helper", ".", "args", ".", "cfq", ".", "split", "]", ")", "\n", "self", ".", "valid_sets", ".", "val", "=", "dataset", ".", "CFQ", "(", "[", "\"val\"", "]", ",", "split_type", "=", "[", "self", ".", "helper", ".", "args", ".", "cfq", ".", "split", "]", ")", "\n", "self", ".", "valid_sets", ".", "test", "=", "dataset", ".", "CFQ", "(", "[", "\"test\"", "]", ",", "split_type", "=", "[", "self", ".", "helper", ".", "args", ".", "cfq", ".", "split", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cfq_transformer.CFQTransformer.__init__": [[21, 24], ["transformer_mixin.TransformerMixin.__init__", "cfq_transformer.CFQTransformer.init_valid_details"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cfq_transformer.CFQTransformer.init_valid_details"], ["", "def", "__init__", "(", "self", ",", "helper", ":", "framework", ".", "helpers", ".", "TrainingHelper", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "helper", ")", "\n", "self", ".", "init_valid_details", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cfq_transformer.CFQTransformer.init_valid_details": [[25, 27], ["None"], "methods", ["None"], ["", "def", "init_valid_details", "(", "self", ")", ":", "\n", "        ", "self", ".", "helper", ".", "state", ".", "full_loss_log", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cfq_transformer.CFQTransformer.validate_on_name": [[28, 39], ["cfq_transformer.CFQTransformer.validate_on", "isinstance", "res.get_sample_info", "[].append", "[].append"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.task.Task.validate_on", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.dataset.sequence.TextSequenceTestState.get_sample_info"], ["", "def", "validate_on_name", "(", "self", ",", "name", ":", "str", ")", "->", "Tuple", "[", "Any", ",", "float", "]", ":", "\n", "        ", "res", ",", "loss", "=", "self", ".", "validate_on", "(", "self", ".", "valid_sets", "[", "name", "]", ",", "self", ".", "valid_loaders", "[", "name", "]", ")", "\n", "if", "self", ".", "helper", ".", "args", ".", "log_sample_level_loss", "and", "isinstance", "(", "res", ",", "dataset", ".", "sequence", ".", "TextSequenceTestState", ")", ":", "\n", "            ", "losses", ",", "oks", "=", "res", ".", "get_sample_info", "(", ")", "\n", "if", "name", "not", "in", "self", ".", "helper", ".", "state", ".", "full_loss_log", ":", "\n", "                ", "self", ".", "helper", ".", "state", ".", "full_loss_log", "[", "name", "]", "=", "[", "]", ",", "[", "]", "\n", "\n", "", "self", ".", "helper", ".", "state", ".", "full_loss_log", "[", "name", "]", "[", "0", "]", ".", "append", "(", "losses", ")", "\n", "self", ".", "helper", ".", "state", ".", "full_loss_log", "[", "name", "]", "[", "1", "]", ".", "append", "(", "oks", ")", "\n", "\n", "", "return", "res", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cfq_transformer.CFQTransformer.save_valid_details": [[40, 45], ["cfq_transformer.CFQTransformer.helper.state.full_loss_log.items", "numpy.asfarray", "numpy.asarray", "torch.save", "cfq_transformer.CFQTransformer.helper.get_storage_path"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.text.text_dataset.TextDatasetCache.save", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.helpers.training_helper.TrainingHelper.get_storage_path"], ["", "def", "save_valid_details", "(", "self", ")", ":", "\n", "        ", "for", "name", ",", "(", "losses", ",", "oks", ")", "in", "self", ".", "helper", ".", "state", ".", "full_loss_log", ".", "items", "(", ")", ":", "\n", "            ", "losses", "=", "np", ".", "asfarray", "(", "losses", ")", "\n", "oks", "=", "np", ".", "asarray", "(", "oks", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "torch", ".", "save", "(", "{", "\"losses\"", ":", "losses", ",", "\"oks\"", ":", "oks", "}", ",", "self", ".", "helper", ".", "get_storage_path", "(", "f\"loss_details/{name}.pth\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cfq_transformer.CFQTransformer.train": [[46, 49], ["super().train", "cfq_transformer.CFQTransformer.save_valid_details"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cfq_transformer.CFQTransformer.train", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.tasks.cfq_transformer.CFQTransformer.save_valid_details"], ["", "", "def", "train", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "train", "(", ")", "\n", "self", ".", "save_valid_details", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerResult.create": [[15, 18], ["transformer_enc_dec.TransformerResult"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "create", "(", "data", ":", "torch", ".", "Tensor", ",", "length", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "return", "TransformerResult", "(", "{", "\"data\"", ":", "data", ",", "\"length\"", ":", "length", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.__init__": [[21, 61], ["super().__init__", "transformer_enc_dec.TransformerEncDecModel.register_buffer", "transformer_enc_dec.TransformerEncDecModel.construct", "transformer_enc_dec.TransformerEncDecModel.reset_parameters", "framework.layers.PositionalEncoding", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "math.sqrt"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.construct", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "n_input_tokens", ":", "int", ",", "n_out_tokens", ":", "int", ",", "state_size", ":", "int", "=", "512", ",", "ff_multiplier", ":", "float", "=", "4", ",", "\n", "max_len", ":", "int", "=", "5000", ",", "transformer", "=", "Transformer", ",", "tied_embedding", ":", "bool", "=", "False", ",", "\n", "pos_embeddig", ":", "Optional", "[", "Callable", "[", "[", "torch", ".", "Tensor", ",", "int", "]", ",", "torch", ".", "Tensor", "]", "]", "=", "None", ",", "\n", "encoder_sos", ":", "bool", "=", "True", ",", "same_enc_dec_embedding", ":", "bool", "=", "False", ",", "embedding_init", ":", "str", "=", "\"pytorch\"", ",", "\n", "in_embedding_size", ":", "Optional", "[", "int", "]", "=", "None", ",", "out_embedding_size", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "scale_mode", ":", "str", "=", "\"none\"", ",", "**", "kwargs", ")", ":", "\n", "        ", "'''\n        Transformer encoder-decoder.\n\n        :param n_input_tokens: Number of channels for the input vectors\n        :param n_out_tokens: Number of channels for the output vectors\n        :param state_size: The size of the internal state of the transformer\n        '''", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "scale_mode", "in", "[", "\"none\"", ",", "\"opennmt\"", ",", "\"down\"", "]", "\n", "assert", "embedding_init", "in", "[", "\"pytorch\"", ",", "\"xavier\"", ",", "\"kaiming\"", "]", "\n", "\n", "assert", "(", "not", "same_enc_dec_embedding", ")", "or", "(", "n_input_tokens", "==", "n_out_tokens", ")", "\n", "\n", "self", ".", "tied_embedding", "=", "tied_embedding", "\n", "\n", "self", ".", "decoder_sos_eos", "=", "n_out_tokens", "\n", "self", ".", "encoder_eos", "=", "n_input_tokens", "\n", "self", ".", "encoder_sos", "=", "n_input_tokens", "+", "1", "if", "encoder_sos", "else", "None", "\n", "self", ".", "state_size", "=", "state_size", "\n", "self", ".", "embedding_init", "=", "embedding_init", "\n", "self", ".", "ff_multiplier", "=", "ff_multiplier", "\n", "self", ".", "n_input_tokens", "=", "n_input_tokens", "\n", "self", ".", "n_out_tokens", "=", "n_out_tokens", "\n", "self", ".", "in_embedding_size", "=", "in_embedding_size", "\n", "self", ".", "out_embedding_size", "=", "out_embedding_size", "\n", "self", ".", "same_enc_dec_embedding", "=", "same_enc_dec_embedding", "\n", "self", ".", "scale_mode", "=", "scale_mode", "\n", "self", ".", "pos", "=", "pos_embeddig", "or", "framework", ".", "layers", ".", "PositionalEncoding", "(", "state_size", ",", "max_len", "=", "max_len", ",", "batch_first", "=", "True", ",", "\n", "scale", "=", "(", "1.0", "/", "math", ".", "sqrt", "(", "state_size", ")", ")", "if", "scale_mode", "==", "\"down\"", "else", "1.0", ")", "\n", "\n", "self", ".", "register_buffer", "(", "'int_seq'", ",", "torch", ".", "arange", "(", "max_len", ",", "dtype", "=", "torch", ".", "long", ")", ")", "\n", "self", ".", "construct", "(", "transformer", ",", "**", "kwargs", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.pos_embed": [[62, 67], ["transformer_enc_dec.TransformerEncDecModel.pos", "math.sqrt"], "methods", ["None"], ["", "def", "pos_embed", "(", "self", ",", "t", ":", "torch", ".", "Tensor", ",", "offset", ":", "int", ",", "scale_offset", ":", "int", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "if", "self", ".", "scale_mode", "==", "\"opennmt\"", ":", "\n", "            ", "t", "=", "t", "*", "math", ".", "sqrt", "(", "t", ".", "shape", "[", "-", "1", "]", ")", "\n", "\n", "", "return", "self", ".", "pos", "(", "t", ",", "offset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.construct": [[68, 88], ["torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "transformer", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "layers.TiedEmbedding", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "int", "int"], "methods", ["None"], ["", "def", "construct", "(", "self", ",", "transformer", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "input_embedding", "=", "torch", ".", "nn", ".", "Embedding", "(", "self", ".", "n_input_tokens", "+", "1", "+", "int", "(", "self", ".", "encoder_sos", "is", "not", "None", ")", ",", "\n", "self", ".", "in_embedding_size", "or", "self", ".", "state_size", ")", "\n", "self", ".", "output_embedding", "=", "self", ".", "input_embedding", "if", "self", ".", "same_enc_dec_embedding", "else", "torch", ".", "nn", ".", "Embedding", "(", "self", ".", "n_out_tokens", "+", "1", ",", "self", ".", "out_embedding_size", "or", "self", ".", "state_size", ")", "\n", "\n", "if", "self", ".", "in_embedding_size", "is", "not", "None", ":", "\n", "            ", "self", ".", "in_embedding_upscale", "=", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "in_embedding_size", ",", "self", ".", "state_size", ")", "\n", "\n", "", "if", "self", ".", "out_embedding_size", "is", "not", "None", ":", "\n", "            ", "self", ".", "out_embedding_upscale", "=", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "out_embedding_size", ",", "self", ".", "state_size", ")", "\n", "\n", "", "if", "self", ".", "tied_embedding", ":", "\n", "            ", "assert", "self", ".", "out_embedding_size", "is", "None", "\n", "self", ".", "output_map", "=", "TiedEmbedding", "(", "self", ".", "output_embedding", ".", "weight", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "output_map", "=", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "state_size", ",", "self", ".", "n_out_tokens", "+", "1", ")", "\n", "\n", "", "self", ".", "trafo", "=", "transformer", "(", "d_model", "=", "self", ".", "state_size", ",", "dim_feedforward", "=", "int", "(", "self", ".", "ff_multiplier", "*", "self", ".", "state_size", ")", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.reset_parameters": [[89, 99], ["torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "embedding_init", "==", "\"xavier\"", ":", "\n", "            ", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "input_embedding", ".", "weight", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "output_embedding", ".", "weight", ")", "\n", "", "elif", "self", ".", "embedding_init", "==", "\"kaiming\"", ":", "\n", "            ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "input_embedding", ".", "weight", ")", "\n", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "output_embedding", ".", "weight", ")", "\n", "\n", "", "if", "not", "self", ".", "tied_embedding", ":", "\n", "            ", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "output_map", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.generate_len_mask": [[100, 102], ["len.unsqueeze"], "methods", ["None"], ["", "", "def", "generate_len_mask", "(", "self", ",", "max_len", ":", "int", ",", "len", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "return", "self", ".", "int_seq", "[", ":", "max_len", "]", ">=", "len", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.output_embed": [[103, 108], ["transformer_enc_dec.TransformerEncDecModel.output_embedding", "transformer_enc_dec.TransformerEncDecModel.out_embedding_upscale"], "methods", ["None"], ["", "def", "output_embed", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "o", "=", "self", ".", "output_embedding", "(", "x", ")", "\n", "if", "self", ".", "out_embedding_size", "is", "not", "None", ":", "\n", "            ", "o", "=", "self", ".", "out_embedding_upscale", "(", "o", ")", "\n", "", "return", "o", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.run_greedy": [[109, 138], ["transformer_enc_dec.TransformerEncDecModel.generate_len_mask", "transformer_enc_dec.TransformerEncDecModel.trafo.encoder", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "transformer_enc_dec.TransformerEncDecModel.pos_embed", "transformer_enc_dec.TransformerEncDecModel.trafo.decoder.create_state", "range", "transformer_enc_dec.TransformerResult.create", "transformer_enc_dec.TransformerEncDecModel.output_embed", "transformer_enc_dec.TransformerEncDecModel.trafo.decoder.one_step_forward", "transformer_enc_dec.TransformerEncDecModel.output_map", "all_outputs.append", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "transformer_enc_dec.TransformerEncDecModel.pos_embed", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "transformer_enc_dec.TransformerEncDecModel.output_embed().unsqueeze", "transformer_enc_dec.TransformerEncDecModel.output_embed"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.generate_len_mask", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.pos_embed", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerDecoderBase.create_state", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerResult.create", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.output_embed", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.TransformerDecoderBase.one_step_forward", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.pos_embed", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.output_embed"], ["", "def", "run_greedy", "(", "self", ",", "src", ":", "torch", ".", "Tensor", ",", "src_len", ":", "torch", ".", "Tensor", ",", "max_len", ":", "int", ")", "->", "TransformerResult", ":", "\n", "        ", "batch_size", "=", "src", ".", "shape", "[", "0", "]", "\n", "n_steps", "=", "src", ".", "shape", "[", "1", "]", "\n", "\n", "in_len_mask", "=", "self", ".", "generate_len_mask", "(", "n_steps", ",", "src_len", ")", "\n", "memory", "=", "self", ".", "trafo", ".", "encoder", "(", "src", ",", "mask", "=", "in_len_mask", ")", "\n", "\n", "running", "=", "torch", ".", "ones", "(", "[", "batch_size", "]", ",", "dtype", "=", "torch", ".", "bool", ",", "device", "=", "src", ".", "device", ")", "\n", "out_len", "=", "torch", ".", "zeros_like", "(", "running", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "\n", "next_tgt", "=", "self", ".", "pos_embed", "(", "self", ".", "output_embed", "(", "torch", ".", "full", "(", "[", "batch_size", ",", "1", "]", ",", "self", ".", "decoder_sos_eos", ",", "dtype", "=", "torch", ".", "long", ",", "\n", "device", "=", "src", ".", "device", ")", ")", ",", "0", ",", "1", ")", "\n", "\n", "all_outputs", "=", "[", "]", "\n", "state", "=", "self", ".", "trafo", ".", "decoder", ".", "create_state", "(", "src", ".", "shape", "[", "0", "]", ",", "max_len", ",", "src", ".", "device", ")", "\n", "\n", "for", "i", "in", "range", "(", "max_len", ")", ":", "\n", "            ", "output", "=", "self", ".", "trafo", ".", "decoder", ".", "one_step_forward", "(", "state", ",", "next_tgt", ",", "memory", ",", "memory_key_padding_mask", "=", "in_len_mask", ")", "\n", "\n", "output", "=", "self", ".", "output_map", "(", "output", ")", "\n", "all_outputs", ".", "append", "(", "output", ")", "\n", "\n", "out_token", "=", "torch", ".", "argmax", "(", "output", "[", ":", ",", "-", "1", "]", ",", "-", "1", ")", "\n", "running", "&=", "out_token", "!=", "self", ".", "decoder_sos_eos", "\n", "\n", "out_len", "[", "running", "]", "=", "i", "+", "1", "\n", "next_tgt", "=", "self", ".", "pos_embed", "(", "self", ".", "output_embed", "(", "out_token", ")", ".", "unsqueeze", "(", "1", ")", ",", "i", "+", "1", ",", "1", ")", "\n", "\n", "", "return", "TransformerResult", ".", "create", "(", "torch", ".", "cat", "(", "all_outputs", ",", "1", ")", ",", "out_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.run_teacher_forcing": [[139, 150], ["transformer_enc_dec.TransformerEncDecModel.output_embed", "transformer_enc_dec.TransformerEncDecModel.pos_embed", "transformer_enc_dec.TransformerEncDecModel.generate_len_mask", "transformer_enc_dec.TransformerEncDecModel.trafo", "transformer_enc_dec.TransformerResult.create", "torch.pad().long", "torch.pad().long", "torch.pad().long", "transformer_enc_dec.TransformerEncDecModel.output_map", "transformer_enc_dec.TransformerEncDecModel.trafo.generate_square_subsequent_mask", "torch.pad", "torch.pad", "torch.pad"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.output_embed", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.pos_embed", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.generate_len_mask", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerResult.create", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.transformer.transformer.Transformer.generate_square_subsequent_mask"], ["", "def", "run_teacher_forcing", "(", "self", ",", "src", ":", "torch", ".", "Tensor", ",", "src_len", ":", "torch", ".", "Tensor", ",", "target", ":", "torch", ".", "Tensor", ",", "\n", "target_len", ":", "torch", ".", "Tensor", ")", "->", "TransformerResult", ":", "\n", "        ", "target", "=", "self", ".", "output_embed", "(", "F", ".", "pad", "(", "target", "[", ":", ",", ":", "-", "1", "]", ",", "(", "1", ",", "0", ")", ",", "value", "=", "self", ".", "decoder_sos_eos", ")", ".", "long", "(", ")", ")", "\n", "target", "=", "self", ".", "pos_embed", "(", "target", ",", "0", ",", "1", ")", "\n", "\n", "in_len_mask", "=", "self", ".", "generate_len_mask", "(", "src", ".", "shape", "[", "1", "]", ",", "src_len", ")", "\n", "\n", "res", "=", "self", ".", "trafo", "(", "src", ",", "target", ",", "src_length_mask", "=", "in_len_mask", ",", "\n", "tgt_mask", "=", "self", ".", "trafo", ".", "generate_square_subsequent_mask", "(", "target", ".", "shape", "[", "1", "]", ",", "src", ".", "device", ")", ")", "\n", "\n", "return", "TransformerResult", ".", "create", "(", "self", ".", "output_map", "(", "res", ")", ",", "target_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.input_embed": [[151, 156], ["transformer_enc_dec.TransformerEncDecModel.input_embedding", "x.long", "transformer_enc_dec.TransformerEncDecModel.in_embedding_upscale"], "methods", ["None"], ["", "def", "input_embed", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "src", "=", "self", ".", "input_embedding", "(", "x", ".", "long", "(", ")", ")", "\n", "if", "self", ".", "in_embedding_size", "is", "not", "None", ":", "\n", "            ", "src", "=", "self", ".", "in_embedding_upscale", "(", "src", ")", "\n", "", "return", "src", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.forward": [[157, 181], ["transformer_enc_dec.TransformerEncDecModel.pos_embed", "torch.pad", "torch.pad", "torch.pad", "transformer_enc_dec.TransformerEncDecModel.input_embed", "transformer_enc_dec.TransformerEncDecModel.run_teacher_forcing", "transformer_enc_dec.TransformerEncDecModel.run_greedy", "target_len.max().item", "target_len.max"], "methods", ["home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.pos_embed", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.input_embed", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.run_teacher_forcing", "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.transformer_enc_dec.TransformerEncDecModel.run_greedy"], ["", "def", "forward", "(", "self", ",", "src", ":", "torch", ".", "Tensor", ",", "src_len", ":", "torch", ".", "Tensor", ",", "target", ":", "torch", ".", "Tensor", ",", "\n", "target_len", ":", "torch", ".", "Tensor", ",", "teacher_forcing", ":", "bool", ",", "max_len", ":", "Optional", "[", "int", "]", "=", "None", ")", "->", "TransformerResult", ":", "\n", "        ", "'''\n        Run transformer encoder-decoder on some input/output pair\n\n        :param src: source tensor. Shape: [N, S], where S in the in sequence length, N is the batch size\n        :param src_len: length of source sequences. Shape: [N], N is the batch size\n        :param target: target tensor. Shape: [N, S], where T in the in sequence length, N is the batch size\n        :param target_len: length of target sequences. Shape: [N], N is the batch size\n        :param teacher_forcing: use teacher forcing or greedy decoding\n        :param max_len: overwrite autodetected max length. Useful for parallel execution\n        :return: prediction of the target tensor. Shape [N, T, C_out]\n        '''", "\n", "\n", "if", "self", ".", "encoder_sos", "is", "not", "None", ":", "\n", "            ", "src", "=", "F", ".", "pad", "(", "src", ",", "(", "1", ",", "0", ")", ",", "value", "=", "self", ".", "encoder_sos", ")", "\n", "src_len", "=", "src_len", "+", "1", "\n", "\n", "", "src", "=", "self", ".", "pos_embed", "(", "self", ".", "input_embed", "(", "src", ")", ",", "0", ",", "0", ")", "\n", "\n", "if", "teacher_forcing", ":", "\n", "            ", "return", "self", ".", "run_teacher_forcing", "(", "src", ",", "src_len", ",", "target", ",", "target_len", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "run_greedy", "(", "src", ",", "src_len", ",", "max_len", "or", "target_len", ".", "max", "(", ")", ".", "item", "(", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.models.encoder_decoder.add_eos": [[5, 9], ["torch.cat", "torch.cat", "torch.cat.scatter_", "lengths.unsqueeze().long", "torch.zeros_like", "torch.zeros_like", "lengths.unsqueeze"], "function", ["None"], ["\n", "\n", "@", "dataclass", "\n", "class", "EncoderDecoderResult", "(", "Result", ")", ":", "\n", "    ", "outputs", ":", "torch", ".", "Tensor", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.step_lr_sched.StepLrSched.__init__": [[6, 9], ["list", "sorted", "range", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "lr", ":", "float", ",", "steps", ":", "List", "[", "int", "]", ",", "gamma", ":", "float", ")", ":", "\n", "        ", "self", ".", "steps", "=", "[", "0", "]", "+", "list", "(", "sorted", "(", "steps", ")", ")", "\n", "self", ".", "lrs", "=", "[", "lr", "*", "(", "gamma", "**", "i", ")", "for", "i", "in", "range", "(", "len", "(", "self", ".", "steps", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.step_lr_sched.StepLrSched.get": [[10, 12], ["bisect.bisect"], "methods", ["None"], ["", "def", "get", "(", "self", ",", "step", ":", "int", ")", "->", "float", ":", "\n", "        ", "return", "self", ".", "lrs", "[", "bisect", ".", "bisect", "(", "self", ".", "steps", ",", "step", ")", "-", "1", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.__init__": [[2, 5], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "lr", ":", "float", ",", "state_size", ":", "int", ",", "warmup_steps", ":", "int", ")", ":", "\n", "        ", "self", ".", "lr", "=", "lr", "/", "(", "state_size", "**", "0.5", ")", "\n", "self", ".", "warmup_steps", "=", "warmup_steps", "\n", "\n"]], "home.repos.pwc.inspect_result.robertcsordas_transformer_generalization.optimizer.noam_lr_sched.NoamLRSched.get": [[6, 11], ["float", "float"], "methods", ["None"], ["", "def", "get", "(", "self", ",", "step", ":", "int", ")", "->", "float", ":", "\n", "        ", "if", "step", ">=", "self", ".", "warmup_steps", ":", "\n", "            ", "return", "self", ".", "lr", "/", "float", "(", "step", "+", "1", ")", "**", "0.5", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "lr", "/", "(", "self", ".", "warmup_steps", "**", "1.5", ")", "*", "float", "(", "step", "+", "1", ")", "\n", "", "", "", ""]]}