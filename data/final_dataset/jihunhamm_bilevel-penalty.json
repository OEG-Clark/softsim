{"home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul": [[11, 18], ["None"], "function", ["None"], ["def", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", ":", "\n", "    ", "xu1", "=", "u1", "#(ub[0]-lb[0])*.5*(tf.tanh(u1)+1.)+lb[0]", "\n", "xu2", "=", "u2", "#(ub[1]-lb[1])*.5*(tf.tanh(u2)+1.)+lb[1]", "\n", "xl1", "=", "v1", "#(ub[2]-lb[2])*.5*(tf.tanh(v1)+1.)+lb[2]", "\n", "xl2", "=", "v2", "#(ub[3]-lb[3])*.5*(tf.tanh(v2)+1.)+lb[3]", "\n", "\n", "return", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv20": [[25, 51], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value"], "function", ["None"], ["", "def", "uv20", "(", "p", ",", "q", ",", "r", ",", "std", ")", ":", "\n", "    ", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "#ulb,uub,vlb,vub = lb[0:2],ub[0:2],lb[2:4],ub[2:4]", "\n", "\n", "xu1_init", ",", "xu2_init", ",", "xl1_init", ",", "xl2_init", "=", "0.5", "*", "np", ".", "ones", "(", "(", "p", ")", ")", ",", "0.5", "*", "np", ".", "ones", "(", "(", "r", ")", ")", ",", "0.5", "*", "np", ".", "ones", "(", "(", "q", ")", ")", ",", "0.5", "*", "np", ".", "ones", "(", "(", "r", ")", ")", "\n", "u1_init", "=", "xu1_init", "#np.arctanh(2.*(xu1_init-lb[0])/(ub[0]-lb[0])-1.)", "\n", "u2_init", "=", "xu2_init", "#np.arctanh(2.*(xu2_init-lb[1])/(ub[1]-lb[1])-1.)", "\n", "v1_init", "=", "xl1_init", "#np.arctanh(2.*(xl1_init-lb[2])/(ub[2]-lb[2])-1.)", "\n", "v2_init", "=", "xl2_init", "#np.arctanh(2.*(xl2_init-lb[3])/(ub[3]-lb[3])-1.)            ", "\n", "\n", "# Random initialization", "\n", "if", "False", ":", "\n", "        ", "u1", "=", "tf", ".", "get_variable", "(", "'u1'", ",", "shape", "=", "(", "p", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "u1_init", ",", "stddev", "=", "std", ")", ")", "\n", "u2", "=", "tf", ".", "get_variable", "(", "'u2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "u2_init", ",", "stddev", "=", "std", ")", ")", "\n", "v1", "=", "tf", ".", "get_variable", "(", "'v1'", ",", "shape", "=", "(", "q", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "v1_init", ",", "stddev", "=", "std", ")", ")", "\n", "v2", "=", "tf", ".", "get_variable", "(", "'v2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "v2_init", ",", "stddev", "=", "std", ")", ")", "\n", "", "else", ":", "\n", "        ", "u1", "=", "tf", ".", "get_variable", "(", "'u1'", ",", "shape", "=", "(", "p", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "u1_init", "+", "std", "*", "(", "lb", "[", "0", "]", "-", "u1_init", ")", ",", "maxval", "=", "u1_init", "+", "std", "*", "(", "ub", "[", "0", "]", "-", "u1_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "0", "]", ",", "ub", "[", "0", "]", ")", ")", "\n", "u2", "=", "tf", ".", "get_variable", "(", "'u2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "u2_init", "+", "std", "*", "(", "lb", "[", "1", "]", "-", "u2_init", ")", ",", "maxval", "=", "u2_init", "+", "std", "*", "(", "ub", "[", "1", "]", "-", "u2_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "1", "]", ",", "ub", "[", "1", "]", ")", ")", "\n", "v1", "=", "tf", ".", "get_variable", "(", "'v1'", ",", "shape", "=", "(", "q", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "v1_init", "+", "std", "*", "(", "lb", "[", "2", "]", "-", "v1_init", ")", ",", "maxval", "=", "v1_init", "+", "std", "*", "(", "ub", "[", "2", "]", "-", "v1_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "2", "]", ",", "ub", "[", "2", "]", ")", ")", "\n", "v2", "=", "tf", ".", "get_variable", "(", "'v2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "v2_init", "+", "std", "*", "(", "lb", "[", "3", "]", "-", "v2_init", ")", ",", "maxval", "=", "v2_init", "+", "std", "*", "(", "ub", "[", "3", "]", "-", "v2_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "3", "]", ",", "ub", "[", "3", "]", ")", ")", "\n", "\n", "", "return", "[", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "lb", "[", "0", ":", "2", "]", ",", "ub", "[", "0", ":", "2", "]", ",", "lb", "[", "2", ":", "4", "]", ",", "ub", "[", "2", ":", "4", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.f20": [[54, 66], ["bilevel_synthetic.uv2xul", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.reduce_sum", "tensorflow.reduce_sum"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "f20", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ")", ":", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "\n", "f", "=", "tf", ".", "reduce_sum", "(", "xl1", "**", "2", "+", "xl2", "**", "2", ")", "+", "tf", ".", "reduce_sum", "(", "xu1", "**", "2", "+", "xu2", "**", "2", ")", "-", "1", "\n", "\n", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.g20": [[68, 80], ["bilevel_synthetic.uv2xul", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "g20", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ")", ":", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "\n", "g", "=", "tf", ".", "reduce_sum", "(", "(", "1.", "-", "xu1", "-", "xl1", ")", "**", "2", ")", "+", "tf", ".", "reduce_sum", "(", "(", "1.", "-", "xu2", "-", "xl2", ")", "**", "2", ")", "\n", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.err20": [[82, 97], ["bilevel_synthetic.uv2xul", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.sqrt", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.ones_like", "tensorflow.ones_like", "tensorflow.ones_like", "tensorflow.ones_like"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "err20", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ")", ":", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "\n", "du1", "=", "tf", ".", "reduce_sum", "(", "(", "xu1", "-", ".5", "*", "tf", ".", "ones_like", "(", "xu1", ")", ")", "**", "2", ")", "\n", "du2", "=", "tf", ".", "reduce_sum", "(", "(", "xu2", "-", ".5", "*", "tf", ".", "ones_like", "(", "xu2", ")", ")", "**", "2", ")", "\n", "dl1", "=", "tf", ".", "reduce_sum", "(", "(", "xl1", "-", ".5", "*", "tf", ".", "ones_like", "(", "xl1", ")", ")", "**", "2", ")", "\n", "dl2", "=", "tf", ".", "reduce_sum", "(", "(", "xl2", "-", ".5", "*", "tf", ".", "ones_like", "(", "xl2", ")", ")", "**", "2", ")", "\n", "\n", "return", "tf", ".", "sqrt", "(", "du1", "+", "du2", "+", "dl1", "+", "dl2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv21": [[103, 129], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value"], "function", ["None"], ["", "def", "uv21", "(", "p", ",", "q", ",", "r", ",", "std", ")", ":", "\n", "    ", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "#ulb,uub,vlb,vub = lb[0:2],ub[0:2],lb[2:4],ub[2:4]", "\n", "\n", "xu1_init", ",", "xu2_init", ",", "xl1_init", ",", "xl2_init", "=", "0.", "*", "np", ".", "ones", "(", "(", "p", ")", ")", ",", "0.", "*", "np", ".", "ones", "(", "(", "r", ")", ")", ",", "0.", "*", "np", ".", "ones", "(", "(", "q", ")", ")", ",", "0.", "*", "np", ".", "ones", "(", "(", "r", ")", ")", "\n", "u1_init", "=", "xu1_init", "#np.arctanh(2.*(xu1_init-lb[0])/(ub[0]-lb[0])-1.)", "\n", "u2_init", "=", "xu2_init", "#np.arctanh(2.*(xu2_init-lb[1])/(ub[1]-lb[1])-1.)", "\n", "v1_init", "=", "xl1_init", "#np.arctanh(2.*(xl1_init-lb[2])/(ub[2]-lb[2])-1.)", "\n", "v2_init", "=", "xl2_init", "#np.arctanh(2.*(xl2_init-lb[3])/(ub[3]-lb[3])-1.)            ", "\n", "\n", "# Random initialization", "\n", "if", "False", ":", "\n", "        ", "u1", "=", "tf", ".", "get_variable", "(", "'u1'", ",", "shape", "=", "(", "p", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "u1_init", ",", "stddev", "=", "std", ")", ")", "\n", "u2", "=", "tf", ".", "get_variable", "(", "'u2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "u2_init", ",", "stddev", "=", "std", ")", ")", "\n", "v1", "=", "tf", ".", "get_variable", "(", "'v1'", ",", "shape", "=", "(", "q", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "v1_init", ",", "stddev", "=", "std", ")", ")", "\n", "v2", "=", "tf", ".", "get_variable", "(", "'v2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "v2_init", ",", "stddev", "=", "std", ")", ")", "\n", "", "else", ":", "\n", "        ", "u1", "=", "tf", ".", "get_variable", "(", "'u1'", ",", "shape", "=", "(", "p", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "u1_init", "+", "std", "*", "(", "lb", "[", "0", "]", "-", "u1_init", ")", ",", "maxval", "=", "u1_init", "+", "std", "*", "(", "ub", "[", "0", "]", "-", "u1_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "0", "]", ",", "ub", "[", "0", "]", ")", ")", "\n", "u2", "=", "tf", ".", "get_variable", "(", "'u2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "u2_init", "+", "std", "*", "(", "lb", "[", "1", "]", "-", "u2_init", ")", ",", "maxval", "=", "u2_init", "+", "std", "*", "(", "ub", "[", "1", "]", "-", "u2_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "1", "]", ",", "ub", "[", "1", "]", ")", ")", "\n", "v1", "=", "tf", ".", "get_variable", "(", "'v1'", ",", "shape", "=", "(", "q", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "v1_init", "+", "std", "*", "(", "lb", "[", "2", "]", "-", "v1_init", ")", ",", "maxval", "=", "v1_init", "+", "std", "*", "(", "ub", "[", "2", "]", "-", "v1_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "2", "]", ",", "ub", "[", "2", "]", ")", ")", "\n", "v2", "=", "tf", ".", "get_variable", "(", "'v2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "v2_init", "+", "std", "*", "(", "lb", "[", "3", "]", "-", "v2_init", ")", ",", "maxval", "=", "v2_init", "+", "std", "*", "(", "ub", "[", "3", "]", "-", "v2_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "3", "]", ",", "ub", "[", "3", "]", ")", ")", "\n", "\n", "", "return", "[", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "lb", "[", "0", ":", "2", "]", ",", "ub", "[", "0", ":", "2", "]", ",", "lb", "[", "2", ":", "4", "]", ",", "ub", "[", "2", ":", "4", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.f21": [[131, 143], ["bilevel_synthetic.uv2xul", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "f21", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ")", ":", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "\n", "f", "=", "1", "*", "tf", ".", "reduce_sum", "(", "xl1", "**", "2", "+", "xl2", "**", "2", ")", "-", "(", "tf", ".", "reduce_sum", "(", "(", "xu1", "-", "xl1", ")", "**", "2", ")", "+", "tf", ".", "reduce_sum", "(", "(", "xu2", "-", "xl2", ")", "**", "2", ")", ")", "\n", "\n", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.g21": [[145, 157], ["bilevel_synthetic.uv2xul", "tensorflow.reduce_sum", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.reduce_sum"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "g21", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ")", ":", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "\n", "g", "=", "tf", ".", "reduce_sum", "(", "(", "xu1", "-", "xl1", ")", "**", "2", ")", "+", "1", "*", "tf", ".", "reduce_sum", "(", "(", "xu2", "-", "xl2", ")", "**", "2", ")", "\n", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.err21": [[159, 174], ["bilevel_synthetic.uv2xul", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.sqrt", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.zeros_like", "tensorflow.zeros_like", "tensorflow.zeros_like", "tensorflow.zeros_like"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "err21", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ")", ":", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "\n", "du1", "=", "tf", ".", "reduce_sum", "(", "(", "xu1", "-", "tf", ".", "zeros_like", "(", "xu1", ")", ")", "**", "2", ")", "\n", "du2", "=", "tf", ".", "reduce_sum", "(", "(", "xu2", "-", "tf", ".", "zeros_like", "(", "xu2", ")", ")", "**", "2", ")", "\n", "dl1", "=", "tf", ".", "reduce_sum", "(", "(", "xl1", "-", "tf", ".", "zeros_like", "(", "xl1", ")", ")", "**", "2", ")", "\n", "dl2", "=", "tf", ".", "reduce_sum", "(", "(", "xl2", "-", "tf", ".", "zeros_like", "(", "xl2", ")", ")", "**", "2", ")", "\n", "\n", "return", "tf", ".", "sqrt", "(", "du1", "+", "du2", "+", "dl1", "+", "dl2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv22": [[180, 206], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value"], "function", ["None"], ["", "def", "uv22", "(", "p", ",", "q", ",", "r", ",", "std", ")", ":", "\n", "    ", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "#ulb,uub,vlb,vub = lb[0:2],ub[0:2],lb[2:4],ub[2:4]", "\n", "\n", "xu1_init", ",", "xu2_init", ",", "xl1_init", ",", "xl2_init", "=", "0.", "*", "np", ".", "ones", "(", "(", "p", ")", ")", ",", "0.", "*", "np", ".", "ones", "(", "(", "r", ")", ")", ",", "0.", "*", "np", ".", "ones", "(", "(", "q", ")", ")", ",", "0.", "*", "np", ".", "ones", "(", "(", "r", ")", ")", "\n", "u1_init", "=", "xu1_init", "#np.arctanh(2.*(xu1_init-lb[0])/(ub[0]-lb[0])-1.)", "\n", "u2_init", "=", "xu2_init", "#np.arctanh(2.*(xu2_init-lb[1])/(ub[1]-lb[1])-1.)", "\n", "v1_init", "=", "xl1_init", "#np.arctanh(2.*(xl1_init-lb[2])/(ub[2]-lb[2])-1.)", "\n", "v2_init", "=", "xl2_init", "#np.arctanh(2.*(xl2_init-lb[3])/(ub[3]-lb[3])-1.)            ", "\n", "\n", "# Random initialization", "\n", "if", "False", ":", "\n", "        ", "u1", "=", "tf", ".", "get_variable", "(", "'u1'", ",", "shape", "=", "(", "p", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "u1_init", ",", "stddev", "=", "std", ")", ")", "\n", "u2", "=", "tf", ".", "get_variable", "(", "'u2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "u2_init", ",", "stddev", "=", "std", ")", ")", "\n", "v1", "=", "tf", ".", "get_variable", "(", "'v1'", ",", "shape", "=", "(", "q", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "v1_init", ",", "stddev", "=", "std", ")", ")", "\n", "v2", "=", "tf", ".", "get_variable", "(", "'v2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "v2_init", ",", "stddev", "=", "std", ")", ")", "\n", "", "else", ":", "\n", "        ", "u1", "=", "tf", ".", "get_variable", "(", "'u1'", ",", "shape", "=", "(", "p", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "u1_init", "+", "std", "*", "(", "lb", "[", "0", "]", "-", "u1_init", ")", ",", "maxval", "=", "u1_init", "+", "std", "*", "(", "ub", "[", "0", "]", "-", "u1_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "0", "]", ",", "ub", "[", "0", "]", ")", ")", "\n", "u2", "=", "tf", ".", "get_variable", "(", "'u2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "u2_init", "+", "std", "*", "(", "lb", "[", "1", "]", "-", "u2_init", ")", ",", "maxval", "=", "u2_init", "+", "std", "*", "(", "ub", "[", "1", "]", "-", "u2_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "1", "]", ",", "ub", "[", "1", "]", ")", ")", "\n", "v1", "=", "tf", ".", "get_variable", "(", "'v1'", ",", "shape", "=", "(", "q", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "v1_init", "+", "std", "*", "(", "lb", "[", "2", "]", "-", "v1_init", ")", ",", "maxval", "=", "v1_init", "+", "std", "*", "(", "ub", "[", "2", "]", "-", "v1_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "2", "]", ",", "ub", "[", "2", "]", ")", ")", "\n", "v2", "=", "tf", ".", "get_variable", "(", "'v2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "v2_init", "+", "std", "*", "(", "lb", "[", "3", "]", "-", "v2_init", ")", ",", "maxval", "=", "v2_init", "+", "std", "*", "(", "ub", "[", "3", "]", "-", "v2_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "3", "]", ",", "ub", "[", "3", "]", ")", ")", "\n", "\n", "", "return", "[", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "lb", "[", "0", ":", "2", "]", ",", "ub", "[", "0", ":", "2", "]", ",", "lb", "[", "2", ":", "4", "]", ",", "ub", "[", "2", ":", "4", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.f22": [[209, 225], ["bilevel_synthetic.uv2xul", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "f22", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", ":", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "#A1 = tf.random.normal((p,np.int(0.5*p)))", "\n", "#A2 = tf.random.normal((r,np.int(0.5*r)))", "\n", "# x^TA^TA*x = ||Ax||_F^2", "\n", "#f = 1.*tf.reduce_sum(xl1**2+xl2**2) - (tf.reduce_sum(tf.matmul(A1,tf.reshape(xu1-xl1,[-1,1]))**2) + tf.reduce_sum(tf.matmul(A2,tf.reshape(xu2-xl2,[-1,1]))**2))", "\n", "f", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "A1", ",", "tf", ".", "reshape", "(", "xl1", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "+", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "A2", ",", "tf", ".", "reshape", "(", "xl2", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "-", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "A1", ",", "tf", ".", "reshape", "(", "xu1", "-", "xl1", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "+", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "A2", ",", "tf", ".", "reshape", "(", "xu2", "-", "xl2", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", ")", "\n", "\n", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.g22": [[227, 239], ["bilevel_synthetic.uv2xul", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "g22", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", ":", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "\n", "g", "=", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "A1", ",", "tf", ".", "reshape", "(", "xu1", "-", "xl1", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "+", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "A2", ",", "tf", ".", "reshape", "(", "xu2", "-", "xl2", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", ")", "\n", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.err22": [[241, 260], ["bilevel_synthetic.uv2xul", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.sqrt", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "err22", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "P1", ",", "P2", ")", ":", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "\n", "#du1 = tf.reduce_sum((xu1-0.*tf.ones_like(xu1))**2)", "\n", "#du2 = tf.reduce_sum((xu2-0.*tf.ones_like(xu2))**2)", "\n", "#dl1 = tf.reduce_sum((xl1-0.*tf.ones_like(xl1))**2)", "\n", "#dl2 = tf.reduce_sum((xl2-0.*tf.ones_like(xl2))**2)", "\n", "du1", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "P1", ",", "tf", ".", "reshape", "(", "xu1", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "\n", "du2", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "P2", ",", "tf", ".", "reshape", "(", "xu2", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "\n", "dl1", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "P1", ",", "tf", ".", "reshape", "(", "xl1", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "\n", "dl2", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "P2", ",", "tf", ".", "reshape", "(", "xl2", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "\n", "\n", "return", "tf", ".", "sqrt", "(", "du1", "+", "du2", "+", "dl1", "+", "dl2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv23": [[265, 291], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value"], "function", ["None"], ["", "def", "uv23", "(", "p", ",", "q", ",", "r", ",", "std", ")", ":", "\n", "    ", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "#ulb,uub,vlb,vub = lb[0:2],ub[0:2],lb[2:4],ub[2:4]", "\n", "\n", "xu1_init", ",", "xu2_init", ",", "xl1_init", ",", "xl2_init", "=", "0.", "*", "np", ".", "ones", "(", "(", "p", ")", ")", ",", "0.", "*", "np", ".", "ones", "(", "(", "r", ")", ")", ",", "0.", "*", "np", ".", "ones", "(", "(", "q", ")", ")", ",", "0.", "*", "np", ".", "ones", "(", "(", "r", ")", ")", "\n", "u1_init", "=", "xu1_init", "#np.arctanh(2.*(xu1_init-lb[0])/(ub[0]-lb[0])-1.)", "\n", "u2_init", "=", "xu2_init", "#np.arctanh(2.*(xu2_init-lb[1])/(ub[1]-lb[1])-1.)", "\n", "v1_init", "=", "xl1_init", "#np.arctanh(2.*(xl1_init-lb[2])/(ub[2]-lb[2])-1.)", "\n", "v2_init", "=", "xl2_init", "#np.arctanh(2.*(xl2_init-lb[3])/(ub[3]-lb[3])-1.)            ", "\n", "\n", "# Random initialization", "\n", "if", "False", ":", "\n", "        ", "u1", "=", "tf", ".", "get_variable", "(", "'u1'", ",", "shape", "=", "(", "p", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "u1_init", ",", "stddev", "=", "std", ")", ")", "\n", "u2", "=", "tf", ".", "get_variable", "(", "'u2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "u2_init", ",", "stddev", "=", "std", ")", ")", "\n", "v1", "=", "tf", ".", "get_variable", "(", "'v1'", ",", "shape", "=", "(", "q", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "v1_init", ",", "stddev", "=", "std", ")", ")", "\n", "v2", "=", "tf", ".", "get_variable", "(", "'v2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "v2_init", ",", "stddev", "=", "std", ")", ")", "\n", "", "else", ":", "\n", "        ", "u1", "=", "tf", ".", "get_variable", "(", "'u1'", ",", "shape", "=", "(", "p", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "u1_init", "+", "std", "*", "(", "lb", "[", "0", "]", "-", "u1_init", ")", ",", "maxval", "=", "u1_init", "+", "std", "*", "(", "ub", "[", "0", "]", "-", "u1_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "0", "]", ",", "ub", "[", "0", "]", ")", ")", "\n", "u2", "=", "tf", ".", "get_variable", "(", "'u2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "u2_init", "+", "std", "*", "(", "lb", "[", "1", "]", "-", "u2_init", ")", ",", "maxval", "=", "u2_init", "+", "std", "*", "(", "ub", "[", "1", "]", "-", "u2_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "1", "]", ",", "ub", "[", "1", "]", ")", ")", "\n", "v1", "=", "tf", ".", "get_variable", "(", "'v1'", ",", "shape", "=", "(", "q", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "v1_init", "+", "std", "*", "(", "lb", "[", "2", "]", "-", "v1_init", ")", ",", "maxval", "=", "v1_init", "+", "std", "*", "(", "ub", "[", "2", "]", "-", "v1_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "2", "]", ",", "ub", "[", "2", "]", ")", ")", "\n", "v2", "=", "tf", ".", "get_variable", "(", "'v2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "v2_init", "+", "std", "*", "(", "lb", "[", "3", "]", "-", "v2_init", ")", ",", "maxval", "=", "v2_init", "+", "std", "*", "(", "ub", "[", "3", "]", "-", "v2_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "3", "]", ",", "ub", "[", "3", "]", ")", ")", "\n", "\n", "", "return", "[", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "lb", "[", "0", ":", "2", "]", ",", "ub", "[", "0", ":", "2", "]", ",", "lb", "[", "2", ":", "4", "]", ",", "ub", "[", "2", ":", "4", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.f23": [[294, 311], ["bilevel_synthetic.uv2xul", "tensorflow.reduce_sum", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "f23", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", ":", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "#A1 = tf.random.normal((p,np.int(0.5*p)))", "\n", "#A2 = tf.random.normal((r,np.int(0.5*r)))", "\n", "# x^TA^TA*x = ||Ax||_F^2", "\n", "#f = 1.*tf.reduce_sum(xl1**2+xl2**2) - (tf.reduce_sum(tf.matmul(A1,tf.reshape(xu1-xl1,[-1,1]))**2) + tf.reduce_sum(tf.matmul(A2,tf.reshape(xu2-xl2,[-1,1]))**2))", "\n", "#f = tf.reduce_sum(tf.matmul(A1,tf.reshape(xl1,[-1,1]))**2) + tf.reduce_sum(tf.matmul(A2,tf.reshape(xl2,[-1,1]))**2) - \\", "\n", "#     (tf.reduce_sum(tf.matmul(A1,tf.reshape(xu1-xl1,[-1,1]))**2) + tf.reduce_sum(tf.matmul(A2,tf.reshape(xu2-xl2,[-1,1]))**2))", "\n", "\n", "f", "=", "tf", ".", "reduce_sum", "(", "xl1", "**", "2", "+", "xl2", "**", "2", ")", "-", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "A1", ",", "tf", ".", "reshape", "(", "xu1", "-", "xl1", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "+", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "A2", ",", "tf", ".", "reshape", "(", "xu2", "-", "xl2", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", ")", "\n", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.g23": [[313, 325], ["bilevel_synthetic.uv2xul", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "g23", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", ":", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "\n", "g", "=", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "A1", ",", "tf", ".", "reshape", "(", "xu1", "-", "xl1", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "+", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "A2", ",", "tf", ".", "reshape", "(", "xu2", "-", "xl2", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", ")", "\n", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.err23": [[327, 346], ["bilevel_synthetic.uv2xul", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.sqrt", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.ones_like", "tensorflow.ones_like"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "err23", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "P1", ",", "P2", ")", ":", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "\n", "#du1 = tf.reduce_sum((xu1-0.*tf.ones_like(xu1))**2)", "\n", "#du2 = tf.reduce_sum((xu2-0.*tf.ones_like(xu2))**2)", "\n", "dl1", "=", "tf", ".", "reduce_sum", "(", "(", "xl1", "-", "0.", "*", "tf", ".", "ones_like", "(", "xl1", ")", ")", "**", "2", ")", "\n", "dl2", "=", "tf", ".", "reduce_sum", "(", "(", "xl2", "-", "0.", "*", "tf", ".", "ones_like", "(", "xl2", ")", ")", "**", "2", ")", "\n", "du1", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "P1", ",", "tf", ".", "reshape", "(", "xu1", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "\n", "du2", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "P2", ",", "tf", ".", "reshape", "(", "xu2", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "\n", "#dl1 = tf.reduce_sum(tf.matmul(P1,tf.reshape(xl1,[-1,1]))**2)", "\n", "#dl2 = tf.reduce_sum(tf.matmul(P2,tf.reshape(xl2,[-1,1]))**2)", "\n", "\n", "return", "tf", ".", "sqrt", "(", "du1", "+", "du2", "+", "dl1", "+", "dl2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv24": [[353, 379], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_uniform_initializer", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value"], "function", ["None"], ["", "def", "uv24", "(", "p", ",", "q", ",", "r", ",", "std", ")", ":", "\n", "    ", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "#ulb,uub,vlb,vub = lb[0:2],ub[0:2],lb[2:4],ub[2:4]", "\n", "\n", "xu1_init", ",", "xu2_init", ",", "xl1_init", ",", "xl2_init", "=", "0.5", "*", "np", ".", "ones", "(", "(", "p", ")", ")", ",", "0.5", "*", "np", ".", "ones", "(", "(", "r", ")", ")", ",", "0.5", "*", "np", ".", "ones", "(", "(", "q", ")", ")", ",", "0.5", "*", "np", ".", "ones", "(", "(", "r", ")", ")", "\n", "u1_init", "=", "xu1_init", "#np.arctanh(2.*(xu1_init-lb[0])/(ub[0]-lb[0])-1.)", "\n", "u2_init", "=", "xu2_init", "#np.arctanh(2.*(xu2_init-lb[1])/(ub[1]-lb[1])-1.)", "\n", "v1_init", "=", "xl1_init", "#np.arctanh(2.*(xl1_init-lb[2])/(ub[2]-lb[2])-1.)", "\n", "v2_init", "=", "xl2_init", "#np.arctanh(2.*(xl2_init-lb[3])/(ub[3]-lb[3])-1.)            ", "\n", "\n", "# Random initialization", "\n", "if", "False", ":", "\n", "        ", "u1", "=", "tf", ".", "get_variable", "(", "'u1'", ",", "shape", "=", "(", "p", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "u1_init", ",", "stddev", "=", "std", ")", ")", "\n", "u2", "=", "tf", ".", "get_variable", "(", "'u2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "u2_init", ",", "stddev", "=", "std", ")", ")", "\n", "v1", "=", "tf", ".", "get_variable", "(", "'v1'", ",", "shape", "=", "(", "q", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "v1_init", ",", "stddev", "=", "std", ")", ")", "\n", "v2", "=", "tf", ".", "get_variable", "(", "'v2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "mean", "=", "v2_init", ",", "stddev", "=", "std", ")", ")", "\n", "", "else", ":", "\n", "        ", "u1", "=", "tf", ".", "get_variable", "(", "'u1'", ",", "shape", "=", "(", "p", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "u1_init", "+", "std", "*", "(", "lb", "[", "0", "]", "-", "u1_init", ")", ",", "maxval", "=", "u1_init", "+", "std", "*", "(", "ub", "[", "0", "]", "-", "u1_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "0", "]", ",", "ub", "[", "0", "]", ")", ")", "\n", "u2", "=", "tf", ".", "get_variable", "(", "'u2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "u2_init", "+", "std", "*", "(", "lb", "[", "1", "]", "-", "u2_init", ")", ",", "maxval", "=", "u2_init", "+", "std", "*", "(", "ub", "[", "1", "]", "-", "u2_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "1", "]", ",", "ub", "[", "1", "]", ")", ")", "\n", "v1", "=", "tf", ".", "get_variable", "(", "'v1'", ",", "shape", "=", "(", "q", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "v1_init", "+", "std", "*", "(", "lb", "[", "2", "]", "-", "v1_init", ")", ",", "maxval", "=", "v1_init", "+", "std", "*", "(", "ub", "[", "2", "]", "-", "v1_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "2", "]", ",", "ub", "[", "2", "]", ")", ")", "\n", "v2", "=", "tf", ".", "get_variable", "(", "'v2'", ",", "shape", "=", "(", "r", ")", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "minval", "=", "v2_init", "+", "std", "*", "(", "lb", "[", "3", "]", "-", "v2_init", ")", ",", "maxval", "=", "v2_init", "+", "std", "*", "(", "ub", "[", "3", "]", "-", "v2_init", ")", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "lb", "[", "3", "]", ",", "ub", "[", "3", "]", ")", ")", "\n", "\n", "", "return", "[", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "lb", "[", "0", ":", "2", "]", ",", "ub", "[", "0", ":", "2", "]", ",", "lb", "[", "2", ":", "4", "]", ",", "ub", "[", "2", ":", "4", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.f24": [[384, 399], ["bilevel_synthetic.uv2xul", "tensorflow.reduce_sum", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "f24", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", ":", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "#A1 = tf.random.normal((p,np.int(0.5*p)))", "\n", "#A2 = tf.random.normal((r,np.int(0.5*r)))", "\n", "# x^TA^TA*x = ||Ax||_F^2", "\n", "#f = 1.*tf.reduce_sum(xl1**2+xl2**2) - (tf.reduce_sum(tf.matmul(A1,tf.reshape(xu1-xl1,[-1,1]))**2) + tf.reduce_sum(tf.matmul(A2,tf.reshape(xu2-xl2,[-1,1]))**2))", "\n", "f", "=", "tf", ".", "reduce_sum", "(", "xl1", "**", "2", ")", "+", "tf", ".", "reduce_sum", "(", "xl2", "**", "2", ")", "+", "tf", ".", "reduce_sum", "(", "xu1", "**", "2", ")", "+", "tf", ".", "reduce_sum", "(", "xu2", "**", "2", ")", "\n", "\n", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.g24": [[401, 413], ["bilevel_synthetic.uv2xul", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "g24", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", ":", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "\n", "g", "=", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "A1", ",", "tf", ".", "reshape", "(", "1.", "-", "xu1", "-", "xl1", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "+", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "A2", ",", "tf", ".", "reshape", "(", "1.", "-", "xu2", "-", "xl2", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", ")", "\n", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.err24": [[415, 435], ["bilevel_synthetic.uv2xul", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.sqrt", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv2xul"], ["", "def", "err24", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "P1", ",", "P2", ")", ":", "\n", "#P = I-A'*inv(AA')*A", "\n", "    ", "p", ",", "q", ",", "r", "=", "u1", ".", "shape", ",", "v1", ".", "shape", ",", "u2", ".", "shape", "\n", "lb", "=", "[", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "-", "5.", "+", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "ub", "=", "[", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "p", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "q", ")", ",", "(", "5.", "-", "eps", ")", "*", "np", ".", "ones", "(", "r", ")", "]", "\n", "#lb = [(-1.+eps)*np.ones(p),(-1.+eps)*np.ones(r),(-1.+eps)*np.ones(q),(-1.+eps)*np.ones(r)] ", "\n", "#ub = [(1.-eps)*np.ones(p),(1.-eps)*np.ones(r),(1.-eps)*np.ones(q),(1.-eps)*np.ones(r)]", "\n", "\n", "xu1", ",", "xu2", ",", "xl1", ",", "xl2", "=", "uv2xul", "(", "lb", ",", "ub", ",", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "\n", "#du1 = tf.reduce_sum((xu1-0.*tf.ones_like(xu1))**2)", "\n", "#du2 = tf.reduce_sum((xu2-0.*tf.ones_like(xu2))**2)", "\n", "#dl1 = tf.reduce_sum((xl1-0.*tf.ones_like(xl1))**2)", "\n", "#dl2 = tf.reduce_sum((xl2-0.*tf.ones_like(xl2))**2)", "\n", "du1", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "P1", ",", "tf", ".", "reshape", "(", "xu1", "-", ".5", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "\n", "du2", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "P2", ",", "tf", ".", "reshape", "(", "xu2", "-", ".5", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "\n", "dl1", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "P1", ",", "tf", ".", "reshape", "(", "xl1", "-", ".5", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "\n", "dl2", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "matmul", "(", "P2", ",", "tf", ".", "reshape", "(", "xl2", "-", ".5", ",", "[", "-", "1", ",", "1", "]", ")", ")", "**", "2", ")", "\n", "\n", "return", "tf", ".", "sqrt", "(", "du1", "+", "du2", "+", "dl1", "+", "dl2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.test_synthetic.main": [[66, 302], ["tensorflow.set_random_seed", "enumerate", "enumerate", "tensorflow.reset_default_graph", "tensorflow.InteractiveSession", "tf.InteractiveSession.close", "bilevel_synthetic.uv20", "bilevel_synthetic.f20", "bilevel_synthetic.g20", "bilevel_synthetic.err20", "bilevel_gd.bilevel_gd", "enumerate", "bilevel_synthetic.uv21", "bilevel_synthetic.f21", "bilevel_synthetic.g21", "bilevel_synthetic.err21", "range", "bilevel_rmd.bilevel_rmd", "enumerate", "numpy.int", "numpy.float32", "numpy.float32", "numpy.matmul", "numpy.matmul", "bilevel_synthetic.uv22", "bilevel_synthetic.f22", "bilevel_synthetic.g22", "bilevel_synthetic.err22", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "print", "tf.InteractiveSession.run", "time.time", "range", "print", "print", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "range", "bilevel_approxgrad_synthetic.bilevel_approxgrad", "enumerate", "numpy.ceil", "numpy.random.normal", "numpy.random.normal", "numpy.matmul", "numpy.matmul", "numpy.float32", "numpy.float32", "bilevel_synthetic.uv22", "bilevel_synthetic.f22", "bilevel_synthetic.g22", "bilevel_synthetic.err22", "tensorflow.global_variables_initializer", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.update", "time.time", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "print", "tf.InteractiveSession.run", "time.time", "range", "print", "print", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "range", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty", "enumerate", "numpy.linalg.inv", "numpy.linalg.inv", "numpy.random.normal", "numpy.random.normal", "numpy.int", "numpy.float32", "numpy.float32", "numpy.matmul", "numpy.matmul", "bilevel_synthetic.uv23", "bilevel_synthetic.f23", "bilevel_synthetic.g23", "bilevel_synthetic.err23", "tf.InteractiveSession.run", "tf.InteractiveSession.run", "print", "tf.InteractiveSession.run", "print", "tensorflow.global_variables_initializer", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.update", "time.time", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "print", "tf.InteractiveSession.run", "time.time", "range", "print", "print", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "range", "numpy.matmul", "numpy.matmul", "numpy.ceil", "numpy.random.normal", "numpy.random.normal", "numpy.matmul", "numpy.matmul", "numpy.int", "numpy.float32", "numpy.float32", "numpy.matmul", "numpy.matmul", "bilevel_synthetic.uv24", "bilevel_synthetic.f24", "bilevel_synthetic.g24", "bilevel_synthetic.err24", "tf.InteractiveSession.run", "print", "tf.InteractiveSession.run", "print", "tensorflow.global_variables_initializer", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.update", "time.time", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "print", "tf.InteractiveSession.run", "time.time", "range", "print", "print", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.linalg.inv", "numpy.linalg.inv", "numpy.ceil", "numpy.random.normal", "numpy.random.normal", "numpy.matmul", "numpy.matmul", "tf.InteractiveSession.run", "print", "tf.InteractiveSession.run", "print", "tensorflow.global_variables_initializer", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.update", "time.time", "numpy.matmul", "numpy.matmul", "numpy.linalg.inv", "numpy.linalg.inv", "tf.InteractiveSession.run", "tf.InteractiveSession.run", "print", "tf.InteractiveSession.run", "print", "numpy.matmul", "numpy.matmul"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv20", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.f20", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.g20", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.err20", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv21", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.f21", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.g21", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.err21", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv22", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.f22", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.g22", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.err22", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv22", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.f22", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.g22", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.err22", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv23", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.f23", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.g23", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.err23", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.uv24", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.f24", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.g24", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.synthetic_examples.bilevel_synthetic.err24", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["def", "main", "(", "argv", "=", "None", ")", ":", "\n", "\n", "    ", "tf", ".", "set_random_seed", "(", "1234", ")", "\n", "\n", "for", "m", ",", "method", "in", "enumerate", "(", "methods", ")", ":", "\n", "        ", "for", "e", ",", "ex", "in", "enumerate", "(", "examples", ")", ":", "\n", "            ", "tf", ".", "reset_default_graph", "(", ")", "\n", "sess", "=", "tf", ".", "InteractiveSession", "(", ")", "\n", "if", "ex", "==", "'SMD20'", ":", "\n", "                ", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "ulb", ",", "uub", ",", "vlb", ",", "vub", "=", "bilevel_synthetic", ".", "uv20", "(", "p", ",", "q", ",", "r", ",", "std", ")", "\n", "f", "=", "bilevel_synthetic", ".", "f20", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "g", "=", "bilevel_synthetic", ".", "g20", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "err", "=", "bilevel_synthetic", ".", "err20", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "", "elif", "ex", "==", "'SMD21'", ":", "\n", "                ", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "ulb", ",", "uub", ",", "vlb", ",", "vub", "=", "bilevel_synthetic", ".", "uv21", "(", "p", ",", "q", ",", "r", ",", "std", ")", "\n", "f", "=", "bilevel_synthetic", ".", "f21", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "g", "=", "bilevel_synthetic", ".", "g21", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "err", "=", "bilevel_synthetic", ".", "err21", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ")", "\n", "", "elif", "ex", "==", "'SMD22'", ":", "\n", "                ", "p_", "=", "np", ".", "int", "(", "np", ".", "ceil", "(", "p", "*", "0.5", ")", ")", "\n", "A1", "=", "np", ".", "float32", "(", "np", ".", "random", ".", "normal", "(", "size", "=", "(", "p_", ",", "p", ")", ")", ")", "\n", "A2", "=", "np", ".", "float32", "(", "np", ".", "random", ".", "normal", "(", "size", "=", "(", "p_", ",", "p", ")", ")", ")", "\n", "# Err = P*u -> Orth proj onto row-space: P = A'*inv(AA')*A ", "\n", "P1", "=", "np", ".", "matmul", "(", "A1", ".", "T", ",", "np", ".", "matmul", "(", "np", ".", "linalg", ".", "inv", "(", "np", ".", "matmul", "(", "A1", ",", "A1", ".", "T", ")", ")", ",", "A1", ")", ")", "\n", "P2", "=", "np", ".", "matmul", "(", "A2", ".", "T", ",", "np", ".", "matmul", "(", "np", ".", "linalg", ".", "inv", "(", "np", ".", "matmul", "(", "A2", ",", "A2", ".", "T", ")", ")", ",", "A2", ")", ")", "\n", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "ulb", ",", "uub", ",", "vlb", ",", "vub", "=", "bilevel_synthetic", ".", "uv22", "(", "p", ",", "q", ",", "r", ",", "std", ")", "\n", "f", "=", "bilevel_synthetic", ".", "f22", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", "\n", "g", "=", "bilevel_synthetic", ".", "g22", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", "\n", "err", "=", "bilevel_synthetic", ".", "err22", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "P1", ",", "P2", ")", "\n", "", "elif", "ex", "==", "'SMD22full'", ":", "\n", "                ", "p_", "=", "p", "#np.int(np.ceil(p*0.5))", "\n", "A1", "=", "np", ".", "float32", "(", "np", ".", "random", ".", "normal", "(", "size", "=", "(", "p_", ",", "p", ")", ")", ")", "\n", "A2", "=", "np", ".", "float32", "(", "np", ".", "random", ".", "normal", "(", "size", "=", "(", "p_", ",", "p", ")", ")", ")", "\n", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "ulb", ",", "uub", ",", "vlb", ",", "vub", "=", "bilevel_synthetic", ".", "uv22", "(", "p", ",", "q", ",", "r", ",", "std", ")", "\n", "f", "=", "bilevel_synthetic", ".", "f22", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", "\n", "g", "=", "bilevel_synthetic", ".", "g22", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", "\n", "err", "=", "bilevel_synthetic", ".", "err22", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", "\n", "", "elif", "ex", "==", "'SMD23'", ":", "\n", "                ", "p_", "=", "np", ".", "int", "(", "np", ".", "ceil", "(", "p", "*", "0.5", ")", ")", "\n", "A1", "=", "np", ".", "float32", "(", "np", ".", "random", ".", "normal", "(", "size", "=", "(", "p_", ",", "p", ")", ")", ")", "\n", "A2", "=", "np", ".", "float32", "(", "np", ".", "random", ".", "normal", "(", "size", "=", "(", "p_", ",", "p", ")", ")", ")", "\n", "# Err = P*u -> Orth proj onto row-space: P = A'*inv(AA')*A ", "\n", "P1", "=", "np", ".", "matmul", "(", "A1", ".", "T", ",", "np", ".", "matmul", "(", "np", ".", "linalg", ".", "inv", "(", "np", ".", "matmul", "(", "A1", ",", "A1", ".", "T", ")", ")", ",", "A1", ")", ")", "\n", "P2", "=", "np", ".", "matmul", "(", "A2", ".", "T", ",", "np", ".", "matmul", "(", "np", ".", "linalg", ".", "inv", "(", "np", ".", "matmul", "(", "A2", ",", "A2", ".", "T", ")", ")", ",", "A2", ")", ")", "\n", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "ulb", ",", "uub", ",", "vlb", ",", "vub", "=", "bilevel_synthetic", ".", "uv23", "(", "p", ",", "q", ",", "r", ",", "std", ")", "\n", "f", "=", "bilevel_synthetic", ".", "f23", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", "\n", "g", "=", "bilevel_synthetic", ".", "g23", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", "\n", "err", "=", "bilevel_synthetic", ".", "err23", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "P1", ",", "P2", ")", "\n", "", "elif", "ex", "==", "'SMD24'", ":", "\n", "                ", "p_", "=", "np", ".", "int", "(", "np", ".", "ceil", "(", "p", "*", "0.5", ")", ")", "\n", "A1", "=", "np", ".", "float32", "(", "np", ".", "random", ".", "normal", "(", "size", "=", "(", "p_", ",", "p", ")", ")", ")", "\n", "A2", "=", "np", ".", "float32", "(", "np", ".", "random", ".", "normal", "(", "size", "=", "(", "p_", ",", "p", ")", ")", ")", "\n", "P1", "=", "np", ".", "matmul", "(", "A1", ".", "T", ",", "np", ".", "matmul", "(", "np", ".", "linalg", ".", "inv", "(", "np", ".", "matmul", "(", "A1", ",", "A1", ".", "T", ")", ")", ",", "A1", ")", ")", "\n", "P2", "=", "np", ".", "matmul", "(", "A2", ".", "T", ",", "np", ".", "matmul", "(", "np", ".", "linalg", ".", "inv", "(", "np", ".", "matmul", "(", "A2", ",", "A2", ".", "T", ")", ")", ",", "A2", ")", ")", "\n", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "ulb", ",", "uub", ",", "vlb", ",", "vub", "=", "bilevel_synthetic", ".", "uv24", "(", "p", ",", "q", ",", "r", ",", "std", ")", "\n", "f", "=", "bilevel_synthetic", ".", "f24", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", "\n", "g", "=", "bilevel_synthetic", ".", "g24", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "A1", ",", "A2", ")", "\n", "err", "=", "bilevel_synthetic", ".", "err24", "(", "u1", ",", "u2", ",", "v1", ",", "v2", ",", "P1", ",", "P2", ")", "\n", "\n", "\n", "\n", "", "if", "method", "==", "'GD'", ":", "## gradient descent", "\n", "                ", "bl", "=", "bilevel_gd", ".", "bilevel_gd", "(", "sess", ",", "f", ",", "g", ",", "[", "u1", ",", "u2", "]", ",", "[", "v1", ",", "v2", "]", ",", "lr_u", ",", "lr_v", ",", "ulb", ",", "uub", ",", "vlb", ",", "vub", ")", "\n", "for", "n", ",", "niter", "in", "enumerate", "(", "Ts", ")", ":", "\n", "                    ", "errs", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "(", "nrec", ",", "ntrial", ")", ")", "\n", "fs", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "(", "nrec", ",", "ntrial", ")", ")", "\n", "gs", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "(", "nrec", ",", "ntrial", ")", ")", "\n", "ts", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "ntrial", ")", "\n", "for", "trial", "in", "range", "(", "ntrial", ")", ":", "\n", "                        ", "print", "(", "'\\n%s, ex=%s, n=%d/%d, trial=%d/%d'", "%", "(", "method", ",", "ex", ",", "n", "+", "1", ",", "nTs", ",", "trial", "+", "1", ",", "ntrial", ")", ")", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "## warm up", "\n", "#for i in range(20): sess.run(bl.min_v)", "\n", "cnt", "=", "0", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "for", "epoch", "in", "range", "(", "nepoch", ")", ":", "\n", "#tick = time.time()        ", "\n", "                            ", "fval", ",", "gval", "=", "bl", ".", "update", "(", "{", "}", ",", "niter", ")", "\n", "if", "epoch", "%", "nstep", "==", "0", ":", "\n", "                                ", "terr", "=", "sess", ".", "run", "(", "err", ")", "\n", "errs", "[", "cnt", ",", "trial", "]", "=", "terr", "\n", "fs", "[", "cnt", ",", "trial", "]", "=", "fval", "\n", "gs", "[", "cnt", ",", "trial", "]", "=", "gval", "\n", "cnt", "+=", "1", "\n", "#if np.isnan(fval) or np.isnan(gval): return#.any()", "\n", "", "if", "False", ":", "#epoch%1000==0:", "\n", "                                ", "u1val", ",", "u2val", ",", "v1val", ",", "v2val", "=", "sess", ".", "run", "(", "[", "u1", ",", "u2", ",", "v1", ",", "v2", "]", ")", "\n", "print", "(", "'epoch %d: f=%f, g=%f, err=%f'", "%", "(", "epoch", ",", "fval", ",", "gval", ",", "terr", ")", ")", "\n", "tu1", ",", "tu2", ",", "tv1", ",", "tv2", "=", "sess", ".", "run", "(", "[", "u1", ",", "u2", ",", "v1", ",", "v2", "]", ")", "\n", "print", "(", "'u1=%f,u2=%f,l1=%f,l2=%f'", "%", "(", "tu1", "[", "0", "]", ",", "tu2", "[", "0", "]", ",", "tv1", "[", "0", "]", ",", "tv2", "[", "0", "]", ")", ")", "\n", "", "", "ts", "[", "trial", "]", "=", "time", ".", "time", "(", ")", "-", "t0", "\n", "print", "(", "'time=%f'", "%", "(", "ts", "[", "trial", "]", ")", ")", "\n", "print", "(", "'epoch %d: f=%f, g=%f, err=%f'", "%", "(", "epoch", ",", "fval", ",", "gval", ",", "terr", ")", ")", "\n", "##tu1,tu2,tv1,tv2 = sess.run([u1,u2,v1,v2])", "\n", "##print('u1=%f,u2=%f,l1=%f,l2=%f'%(tu1,tu2,tv1,tv2))", "\n", "", "if", "True", ":", "\n", "                        ", "np", ".", "save", "(", "'./results/simple_ts_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "ts", ")", "\n", "np", ".", "save", "(", "'./results/simple_errs_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "errs", ")", "\n", "np", ".", "save", "(", "'./results/simple_fs_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "fs", ")", "\n", "np", ".", "save", "(", "'./results/simple_gs_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "gs", ")", "\n", "\n", "\n", "", "", "", "elif", "method", "==", "'RMD'", ":", "## Reverse mode differentiation", "\n", "                ", "bl", "=", "bilevel_rmd", ".", "bilevel_rmd", "(", "sess", ",", "f", ",", "g", ",", "[", "u1", ",", "u2", "]", ",", "[", "v1", ",", "v2", "]", ",", "lr_u", ",", "lr_v", ",", "ulb", ",", "uub", ",", "vlb", ",", "vub", ")", "\n", "for", "n", ",", "niter", "in", "enumerate", "(", "Ts", ")", ":", "\n", "                    ", "errs", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "(", "nrec", ",", "ntrial", ")", ")", "\n", "fs", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "(", "nrec", ",", "ntrial", ")", ")", "\n", "gs", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "(", "nrec", ",", "ntrial", ")", ")", "\n", "ts", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "ntrial", ")", "\n", "for", "trial", "in", "range", "(", "ntrial", ")", ":", "\n", "                        ", "print", "(", "'\\n%s, ex=%s, n=%d/%d, trial=%d/%d'", "%", "(", "method", ",", "ex", ",", "n", "+", "1", ",", "nTs", ",", "trial", "+", "1", ",", "ntrial", ")", ")", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "## warm up", "\n", "#for i in range(20): sess.run(bl.min_v)", "\n", "cnt", "=", "0", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "for", "epoch", "in", "range", "(", "nepoch", ")", ":", "\n", "                            ", "fval", ",", "gval", "=", "bl", ".", "update", "(", "{", "}", ",", "niter", ")", "\n", "if", "epoch", "%", "nstep", "==", "0", ":", "\n", "                                ", "terr", "=", "sess", ".", "run", "(", "err", ")", "\n", "errs", "[", "cnt", ",", "trial", "]", "=", "terr", "\n", "fs", "[", "cnt", ",", "trial", "]", "=", "fval", "\n", "gs", "[", "cnt", ",", "trial", "]", "=", "gval", "\n", "cnt", "+=", "1", "\n", "#if np.isnan(fval) or np.isnan(gval): return#.any()                                    ", "\n", "", "if", "epoch", "%", "1000", "==", "0", ":", "\n", "                                ", "print", "(", "'epoch %d: f=%f, g=%f, err=%f'", "%", "(", "epoch", ",", "fval", ",", "gval", ",", "terr", ")", ")", "\n", "tu1", ",", "tu2", ",", "tv1", ",", "tv2", "=", "sess", ".", "run", "(", "[", "u1", ",", "u2", ",", "v1", ",", "v2", "]", ")", "\n", "print", "(", "'u1=%f,u2=%f,l1=%f,l2=%f'", "%", "(", "tu1", "[", "0", "]", ",", "tu2", "[", "0", "]", ",", "tv1", "[", "0", "]", ",", "tv2", "[", "0", "]", ")", ")", "\n", "", "", "ts", "[", "trial", "]", "=", "time", ".", "time", "(", ")", "-", "t0", "\n", "print", "(", "'time=%f'", "%", "(", "ts", "[", "trial", "]", ")", ")", "\n", "print", "(", "'epoch %d: f=%f, g=%f, err=%f'", "%", "(", "epoch", ",", "fval", ",", "gval", ",", "terr", ")", ")", "\n", "##tu1,tu2,tv1,tv2 = sess.run([u1,u2,v1,v2])", "\n", "##print('u1=%f,u2=%f,l1=%f,l2=%f'%(tu1,tu2,tv1,tv2))", "\n", "\n", "", "if", "True", ":", "\n", "                        ", "np", ".", "save", "(", "'./results/simple_ts_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "ts", ")", "\n", "np", ".", "save", "(", "'./results/simple_errs_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "errs", ")", "\n", "np", ".", "save", "(", "'./results/simple_fs_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "fs", ")", "\n", "np", ".", "save", "(", "'./results/simple_gs_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "gs", ")", "\n", "\n", "\n", "", "", "", "elif", "method", "==", "'ApproxGrad'", ":", "## Approximate hypergradient", "\n", "                ", "bl", "=", "bilevel_approxgrad_synthetic", ".", "bilevel_approxgrad", "(", "sess", ",", "f", ",", "g", ",", "[", "u1", ",", "u2", "]", ",", "[", "v1", ",", "v2", "]", ",", "lr_u", ",", "lr_v", ",", "lr_p", ",", "ulb", ",", "uub", ",", "vlb", ",", "vub", ")", "\n", "for", "n", ",", "niter", "in", "enumerate", "(", "Ts", ")", ":", "\n", "                    ", "errs", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "(", "nrec", ",", "ntrial", ")", ")", "\n", "fs", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "(", "nrec", ",", "ntrial", ")", ")", "\n", "gs", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "(", "nrec", ",", "ntrial", ")", ")", "\n", "ts", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "ntrial", ")", "\n", "for", "trial", "in", "range", "(", "ntrial", ")", ":", "\n", "                        ", "print", "(", "'\\n%s, ex=%s, n=%d/%d, trial=%d/%d'", "%", "(", "method", ",", "ex", ",", "n", "+", "1", ",", "nTs", ",", "trial", "+", "1", ",", "ntrial", ")", ")", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "## warm up", "\n", "#for i in range(20): sess.run(bl.min_v)", "\n", "cnt", "=", "0", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "for", "epoch", "in", "range", "(", "nepoch", ")", ":", "\n", "                            ", "fval", ",", "gval", ",", "hval", "=", "bl", ".", "update", "(", "{", "}", ",", "niter", ",", "niter", ")", "\n", "if", "epoch", "%", "nstep", "==", "0", ":", "\n", "                                ", "terr", "=", "sess", ".", "run", "(", "err", ")", "\n", "errs", "[", "cnt", ",", "trial", "]", "=", "terr", "\n", "fs", "[", "cnt", ",", "trial", "]", "=", "fval", "\n", "gs", "[", "cnt", ",", "trial", "]", "=", "gval", "\n", "cnt", "+=", "1", "\n", "#if np.isnan(fval) or np.isnan(gval): return#.any()                                    ", "\n", "", "if", "epoch", "%", "1000", "==", "0", ":", "\n", "                                ", "print", "(", "'epoch %d: f=%f, g=%f, h=%f, err=%f'", "%", "(", "epoch", ",", "fval", ",", "gval", ",", "hval", ",", "terr", ")", ")", "\n", "tu1", ",", "tu2", ",", "tv1", ",", "tv2", "=", "sess", ".", "run", "(", "[", "u1", ",", "u2", ",", "v1", ",", "v2", "]", ")", "\n", "print", "(", "'u1=%f,u2=%f,l1=%f,l2=%f'", "%", "(", "tu1", "[", "0", "]", ",", "tu2", "[", "0", "]", ",", "tv1", "[", "0", "]", ",", "tv2", "[", "0", "]", ")", ")", "\n", "", "", "ts", "[", "trial", "]", "=", "time", ".", "time", "(", ")", "-", "t0", "\n", "print", "(", "'time=%f'", "%", "(", "ts", "[", "trial", "]", ")", ")", "\n", "print", "(", "'epoch %d: f=%f, g=%f, h=%f, err=%f'", "%", "(", "epoch", ",", "fval", ",", "gval", ",", "hval", ",", "terr", ")", ")", "\n", "##tu1,tu2,tv1,tv2 = sess.run([u1,u2,v1,v2])", "\n", "##print('u1=%f,u2=%f,l1=%f,l2=%f'%(tu1,tu2,tv1,tv2))", "\n", "\n", "", "if", "True", ":", "\n", "                        ", "np", ".", "save", "(", "'./results/simple_ts_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "ts", ")", "\n", "np", ".", "save", "(", "'./results/simple_errs_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "errs", ")", "\n", "np", ".", "save", "(", "'./results/simple_fs_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "fs", ")", "\n", "np", ".", "save", "(", "'./results/simple_gs_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "gs", ")", "\n", "\n", "\n", "", "", "", "elif", "method", "==", "'Penalty'", ":", "## Penalty method", "\n", "                ", "bl", "=", "bilevel_penalty_aug_lag_synthetic", ".", "bilevel_penalty", "(", "sess", ",", "f", ",", "g", ",", "[", "u1", ",", "u2", "]", ",", "[", "v1", ",", "v2", "]", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "c_rho", ",", "ulb", ",", "uub", ",", "vlb", ",", "vub", ")", "\n", "#bl = bilevel_penalty.bilevel_penalty(sess,f,g,[u1,u2],[v1,v2],lr_u,lr_v,rho_0,lamb_0,eps_0,c_rho,c_lamb,c_eps)", "\n", "for", "n", ",", "niter", "in", "enumerate", "(", "Ts", ")", ":", "\n", "                    ", "errs", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "(", "nrec", ",", "ntrial", ")", ")", "\n", "rhos", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "(", "nrec", ",", "ntrial", ")", ")", "\n", "fs", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "(", "nrec", ",", "ntrial", ")", ")", "\n", "gs", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "(", "nrec", ",", "ntrial", ")", ")", "\n", "ftilde", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "(", "nrec", ",", "ntrial", ")", ")", "\n", "ts", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "ntrial", ")", "\n", "for", "trial", "in", "range", "(", "ntrial", ")", ":", "\n", "                        ", "print", "(", "'\\n%s, ex=%s, n=%d/%d, trial=%d/%d'", "%", "(", "method", ",", "ex", ",", "n", "+", "1", ",", "nTs", ",", "trial", "+", "1", ",", "ntrial", ")", ")", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "#bl.reset_optim()", "\n", "## warm up", "\n", "#for i in range(20): sess.run(bl.min_v)", "\n", "cnt", "=", "0", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "for", "epoch", "in", "range", "(", "nepoch", ")", ":", "\n", "                            ", "fval", ",", "gvnorm", ",", "lamb_g", "=", "bl", ".", "update", "(", "{", "}", ",", "niter", ")", "\n", "if", "epoch", "%", "nstep", "==", "0", ":", "\n", "                                ", "rho_t", ",", "lamb_t", ",", "eps_t", "=", "sess", ".", "run", "(", "[", "bl", ".", "rho_t", ",", "bl", ".", "lamb_t", ",", "bl", ".", "eps_t", "]", ")", "\n", "gval", ",", "terr", "=", "sess", ".", "run", "(", "[", "bl", ".", "f", ",", "err", "]", ")", "\n", "errs", "[", "cnt", ",", "trial", "]", "=", "terr", "\n", "fs", "[", "cnt", ",", "trial", "]", "=", "fval", "\n", "gs", "[", "cnt", ",", "trial", "]", "=", "gval", "\n", "ftilde", "[", "cnt", ",", "trial", "]", "=", "fval", "+", "gvnorm", "+", "lamb_g", "\n", "rhos", "[", "cnt", ",", "trial", "]", "=", "rho_t", "\n", "cnt", "+=", "1", "\n", "#if np.isnan(fval) or np.isnan(gval): return#.any()", "\n", "", "if", "False", ":", "#epoch%1000==0:", "\n", "                                ", "print", "(", "'epoch %d (rho=%f, lamb=%f, eps=%f): h=%f + %f + %f= %f, err=%f'", "%", "\n", "(", "epoch", ",", "rho_t", ",", "lamb_t", ",", "eps_t", ",", "fval", ",", "gvnorm", ",", "lamb_g", ",", "fval", "+", "gvnorm", "+", "lamb_g", ",", "terr", ")", ")", "\n", "tu1", ",", "tu2", ",", "tv1", ",", "tv2", "=", "sess", ".", "run", "(", "[", "u1", ",", "u2", ",", "v1", ",", "v2", "]", ")", "\n", "print", "(", "'u1=%f,u2=%f,l1=%f,l2=%f'", "%", "(", "tu1", "[", "0", "]", ",", "tu2", "[", "0", "]", ",", "tv1", "[", "0", "]", ",", "tv2", "[", "0", "]", ")", ")", "\n", "", "", "ts", "[", "trial", "]", "=", "time", ".", "time", "(", ")", "-", "t0", "\n", "print", "(", "'time=%f'", "%", "(", "ts", "[", "trial", "]", ")", ")", "\n", "print", "(", "'epoch %d (rho=%f, lamb=%f, eps=%f): h=%f + %f + %f= %f, err=%f'", "%", "\n", "(", "epoch", ",", "rho_t", ",", "lamb_t", ",", "eps_t", ",", "fval", ",", "gvnorm", ",", "lamb_g", ",", "fval", "+", "gvnorm", "+", "lamb_g", ",", "terr", ")", ")", "\n", "##tu1,tu2,tv1,tv2 = sess.run([u1,u2,v1,v2])", "\n", "##print('u1=%f,u2=%f,l1=%f,l2=%f'%(tu1,tu2,tv1,tv2))", "\n", "\n", "", "if", "True", ":", "\n", "                        ", "np", ".", "save", "(", "'./results/simple_ts_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "ts", ")", "\n", "np", ".", "save", "(", "'./results/simple_errs_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "errs", ")", "\n", "np", ".", "save", "(", "'./results/simple_fs_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "fs", ")", "\n", "np", ".", "save", "(", "'./results/simple_gs_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "gs", ")", "\n", "np", ".", "save", "(", "'./results/simple_ftilde_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "ftilde", ")", "\n", "np", ".", "save", "(", "'./results/simple_rhos_%s_%s_T%d.npy'", "%", "(", "method", ",", "ex", ",", "niter", ")", ",", "rhos", ")", "\n", "\n", "\n", "", "", "", "sess", ".", "close", "(", ")", "\n", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_approxgrad_miniimagenet.get_tasks": [[103, 173], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.arange", "numpy.delete", "numpy.random.shuffle", "range", "numpy.arange", "numpy.random.shuffle", "numpy.arange", "numpy.random.shuffle", "len", "already_selected.append", "numpy.argwhere().flatten", "numpy.random.shuffle", "numpy.zeros", "range", "numpy.zeros", "range", "len", "datagen.flow", "datagen.flow", "numpy.argwhere", "len", "len"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["", "def", "get_tasks", "(", "X", ",", "Y", ",", "num_classes", ",", "test", "=", "False", ")", ":", "\n", "\n", "    ", "train_items_per_class", "=", "ntrain_per_cls", "\n", "\n", "X_train_batch", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "train_items_per_class", ",", "height", ",", "width", ",", "nch", ")", ",", "np", ".", "float32", ")", "\n", "Y_train_batch", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "train_items_per_class", ",", "nclass_per_task", ")", ",", "np", ".", "float32", ")", "\n", "\n", "X_test_batch", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "ntest_per_cls", ",", "height", ",", "width", ",", "nch", ")", ",", "np", ".", "float32", ")", "\n", "Y_test_batch", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "ntest_per_cls", ",", "nclass_per_task", ")", ",", "np", ".", "float32", ")", "\n", "\n", "already_selected", "=", "[", "]", "\n", "for", "batch", "in", "range", "(", "meta_batch_size", ")", ":", "\n", "        ", "class_idx", "=", "np", ".", "arange", "(", "num_classes", ")", "\n", "if", "len", "(", "already_selected", ")", "+", "nclass_per_task", ">=", "len", "(", "class_idx", ")", ":", "\n", "#print(\"here\")", "\n", "            ", "already_selected", "=", "[", "]", "\n", "\n", "", "class_idx", "=", "np", ".", "delete", "(", "class_idx", ",", "already_selected", ")", "\n", "\n", "np", ".", "random", ".", "shuffle", "(", "class_idx", ")", "\n", "selected_idx", "=", "class_idx", "[", ":", "nclass_per_task", "]", "\n", "#print(selected_idx)", "\n", "for", "li_it", "in", "selected_idx", ":", "\n", "            ", "already_selected", ".", "append", "(", "li_it", ")", "\n", "\n", "", "start_train", "=", "0", "\n", "start_test", "=", "0", "\n", "for", "num_cls", "in", "range", "(", "nclass_per_task", ")", ":", "\n", "            ", "idxs", "=", "np", ".", "argwhere", "(", "Y", "==", "selected_idx", "[", "num_cls", "]", ")", ".", "flatten", "(", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "idxs_train", "=", "idxs", "[", ":", "train_items_per_class", "]", "\n", "idxs_test", "=", "idxs", "[", "train_items_per_class", ":", "train_items_per_class", "+", "ntest_per_cls", "]", "\n", "\n", "if", "data_augmentation", "and", "not", "test", ":", "\n", "                ", "for", "train_X_batch", "in", "datagen", ".", "flow", "(", "X", "[", "idxs_train", "]", ",", "batch_size", "=", "len", "(", "idxs_train", ")", ",", "shuffle", "=", "False", ")", ":", "\n", "                    ", "break", "\n", "\n", "", "for", "test_X_batch", "in", "datagen", ".", "flow", "(", "X", "[", "idxs_test", "]", ",", "batch_size", "=", "len", "(", "idxs_test", ")", ",", "shuffle", "=", "False", ")", ":", "\n", "                    ", "break", "\n", "\n", "", "X_train_batch", "[", "batch", "]", "[", "start_train", ":", "start_train", "+", "train_items_per_class", "]", "=", "train_X_batch", "\n", "X_test_batch", "[", "batch", "]", "[", "start_test", ":", "start_test", "+", "ntest_per_cls", "]", "=", "test_X_batch", "\n", "\n", "", "else", ":", "\n", "                ", "X_train_batch", "[", "batch", "]", "[", "start_train", ":", "start_train", "+", "train_items_per_class", "]", "=", "X", "[", "idxs_train", "]", "\n", "X_test_batch", "[", "batch", "]", "[", "start_test", ":", "start_test", "+", "ntest_per_cls", "]", "=", "X", "[", "idxs_test", "]", "\n", "\n", "", "Y_train_batch", "[", "batch", "]", "[", "start_train", ":", "start_train", "+", "train_items_per_class", "]", "=", "np", ".", "zeros", "(", "[", "train_items_per_class", ",", "nclass_per_task", "]", ")", "\n", "for", "j", "in", "range", "(", "train_items_per_class", ")", ":", "\n", "                ", "Y_train_batch", "[", "batch", "]", "[", "start_train", "+", "j", "]", "[", "num_cls", "]", "=", "1", "\n", "\n", "", "Y_test_batch", "[", "batch", "]", "[", "start_test", ":", "start_test", "+", "ntest_per_cls", "]", "=", "np", ".", "zeros", "(", "[", "ntest_per_cls", ",", "nclass_per_task", "]", ")", "\n", "for", "j", "in", "range", "(", "ntest_per_cls", ")", ":", "\n", "                ", "Y_test_batch", "[", "batch", "]", "[", "start_test", "+", "j", "]", "[", "num_cls", "]", "=", "1", "\n", "\n", "", "start_train", "+=", "train_items_per_class", "\n", "start_test", "+=", "ntest_per_cls", "\n", "\n", "", "task_idx_train", "=", "np", ".", "arange", "(", "(", "train_items_per_class", ")", "*", "nclass_per_task", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "task_idx_train", ")", "\n", "X_train_batch", "[", "batch", "]", "=", "X_train_batch", "[", "batch", "]", "[", "task_idx_train", "]", "\n", "Y_train_batch", "[", "batch", "]", "=", "Y_train_batch", "[", "batch", "]", "[", "task_idx_train", "]", "\n", "\n", "task_idx_test", "=", "np", ".", "arange", "(", "(", "ntest_per_cls", ")", "*", "nclass_per_task", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "task_idx_test", ")", "\n", "X_test_batch", "[", "batch", "]", "=", "X_test_batch", "[", "batch", "]", "[", "task_idx_test", "]", "\n", "Y_test_batch", "[", "batch", "]", "=", "Y_test_batch", "[", "batch", "]", "[", "task_idx_test", "]", "\n", "\n", "#print(sorted(already_selected), len(np.unique(already_selected)))", "\n", "", "return", "X_train_batch", ",", "Y_train_batch", ",", "X_test_batch", ",", "Y_test_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_approxgrad_miniimagenet.conv_block": [[195, 202], ["tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.contrib.layers.batch_norm", "tensorflow.nn.relu", "tensorflow.contrib.layers.max_pool2d"], "function", ["None"], ["def", "conv_block", "(", "inputs", ",", "out_channels", ",", "name", "=", "'conv'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "conv", "=", "tf", ".", "layers", ".", "conv2d", "(", "inputs", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "padding", "=", "'SAME'", ")", "\n", "conv", "=", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "conv", ",", "updates_collections", "=", "None", ",", "decay", "=", "0.99", ",", "scale", "=", "True", ",", "center", "=", "True", ",", "is_training", "=", "istraining_ph", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "relu", "(", "conv", ")", "\n", "conv", "=", "tf", ".", "contrib", ".", "layers", ".", "max_pool2d", "(", "conv", ",", "2", ")", "\n", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_approxgrad_miniimagenet.conv_block_new": [[203, 210], ["tensorflow.variable_scope", "tensorflow.contrib.layers.conv2d", "tensorflow.nn.max_pool", "tensorflow.nn.relu"], "function", ["None"], ["", "", "def", "conv_block_new", "(", "inputs", ",", "out_channels", ",", "name", "=", "'conv'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "conv", "=", "tcl", ".", "conv2d", "(", "inputs", ",", "out_channels", ",", "3", ",", "activation_fn", "=", "None", ",", "normalizer_fn", "=", "tcl", ".", "batch_norm", ")", "\n", "if", "name", "!=", "'conv_4'", ":", "\n", "            ", "conv", "=", "tf", ".", "nn", ".", "relu", "(", "conv", ")", "\n", "", "conv", "=", "tf", ".", "nn", ".", "max_pool", "(", "conv", ",", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "'VALID'", ")", "\n", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_approxgrad_miniimagenet.encoder": [[211, 219], ["tensorflow.variable_scope", "test_approxgrad_miniimagenet.conv_block_new", "test_approxgrad_miniimagenet.conv_block_new", "test_approxgrad_miniimagenet.conv_block_new", "test_approxgrad_miniimagenet.conv_block_new", "tensorflow.contrib.layers.flatten"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["", "", "def", "encoder", "(", "x", ",", "h_dim", "=", "32", ",", "z_dim", "=", "32", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "net", "=", "conv_block_new", "(", "x", ",", "h_dim", ",", "name", "=", "'conv_1'", ")", "\n", "net", "=", "conv_block_new", "(", "net", ",", "h_dim", ",", "name", "=", "'conv_2'", ")", "\n", "net", "=", "conv_block_new", "(", "net", ",", "z_dim", ",", "name", "=", "'conv_3'", ")", "\n", "net", "=", "conv_block_new", "(", "net", ",", "z_dim", ",", "name", "=", "'conv_4'", ")", "\n", "net", "=", "tf", ".", "contrib", ".", "layers", ".", "flatten", "(", "net", ")", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_approxgrad_miniimagenet.make_resnet_filter": [[220, 248], ["tensorflow.variable_scope", "test_approxgrad_miniimagenet.make_resnet_filter.residual_block"], "function", ["None"], ["", "", "def", "make_resnet_filter", "(", "ins", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "def", "residual_block", "(", "x", ",", "n_filters", ",", "name", "=", "'res'", ")", ":", "\n", "\n", "        ", "def", "conv_block_resnet", "(", "xx", ",", "name", "=", "'res'", ")", ":", "\n", "            ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "                ", "out", "=", "tcl", ".", "conv2d", "(", "xx", ",", "n_filters", ",", "3", ",", "activation_fn", "=", "None", ",", "normalizer_fn", "=", "tcl", ".", "batch_norm", ")", "\n", "return", "tf", ".", "nn", ".", "leaky_relu", "(", "out", ",", "0.1", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "            ", "skip_c", "=", "tcl", ".", "conv2d", "(", "x", ",", "n_filters", ",", "1", ",", "activation_fn", "=", "None", ")", "\n", "out", "=", "x", "\n", "for", "idx", "in", "range", "(", "3", ")", ":", "\n", "                ", "out", "=", "conv_block_resnet", "(", "out", ",", "name", "+", "'_conv_'", "+", "str", "(", "idx", ")", ")", "\n", "\n", "", "add", "=", "tf", ".", "add", "(", "skip_c", ",", "out", ")", "\n", "\n", "return", "tf", ".", "nn", ".", "max_pool", "(", "add", ",", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "'SAME'", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "'resnet_filter'", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "x", "=", "residual_block", "(", "ins", ",", "64", ",", "name", "=", "'res_1'", ")", "\n", "x", "=", "residual_block", "(", "x", ",", "96", ",", "name", "=", "'res_2'", ")", "\n", "x", "=", "residual_block", "(", "x", ",", "128", ",", "name", "=", "'res_3'", ")", "\n", "x", "=", "residual_block", "(", "x", ",", "256", ",", "name", "=", "'res_4'", ")", "\n", "x", "=", "tcl", ".", "conv2d", "(", "x", ",", "2048", ",", "1", ")", "\n", "x", "=", "tf", ".", "nn", ".", "avg_pool", "(", "x", ",", "[", "1", ",", "6", ",", "6", ",", "1", "]", ",", "[", "1", ",", "6", ",", "6", ",", "1", "]", ",", "'VALID'", ")", "\n", "x", "=", "tcl", ".", "conv2d", "(", "x", ",", "384", ",", "1", ",", "activation_fn", "=", "None", ")", "\n", "x", "=", "tf", ".", "reshape", "(", "x", ",", "(", "-", "1", ",", "384", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_approxgrad_miniimagenet.top_layer": [[249, 264], ["tensorflow.sqrt", "tensorflow.sqrt", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.matmul"], "function", ["None"], ["", "", "def", "top_layer", "(", "ins", ",", "K", "=", "5", ")", ":", "\n", "\n", "    ", "if", "conv", ":", "\n", "        ", "W_top", "=", "tf", ".", "get_variable", "(", "'W_top'", ",", "[", "800", ",", "K", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b_top", "=", "tf", ".", "get_variable", "(", "'b_top'", ",", "[", "K", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.001", ")", ")", "\n", "", "else", ":", "\n", "        ", "W_top", "=", "tf", ".", "get_variable", "(", "'W_top'", ",", "[", "384", ",", "K", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b_top", "=", "tf", ".", "get_variable", "(", "'b_top'", ",", "[", "K", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.001", ")", ")", "\n", "\n", "", "wat", "=", "0.001", "\n", "ins_norm", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "ins", "**", "2", ",", "axis", "=", "1", ",", "keep_dims", "=", "True", ")", "+", "wat", "**", "2", ")", "\n", "W_top_norm", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "W_top", "**", "2", ",", "axis", "=", "0", ",", "keep_dims", "=", "True", ")", "+", "b_top", "**", "2", ")", "\n", "\n", "out", "=", "10.", "*", "(", "tf", ".", "matmul", "(", "ins", ",", "W_top", ")", "+", "wat", "*", "b_top", ")", "/", "(", "ins_norm", "*", "W_top_norm", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.bilevel_approxgrad_metalearning.bilevel_meta.__init__": [[9, 50], ["tensorflow.reduce_mean", "tensorflow.reduce_mean", "bilevel_approxgrad_multivar.bilevel_approxgrad_multivar.bilevel_approxgrad_multivar", "tensorflow.train.AdamOptimizer().minimize", "range", "tensorflow.train.AdamOptimizer", "opt_v[].minimize", "tensorflow.variables_initializer", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "numpy.ones", "numpy.ones", "tensorflow.train.AdamOptimizer", "range", "range", "range", "opt_v[].variables", "tensorflow.nn.softmax_cross_entropy_with_logits", "range", "tensorflow.nn.softmax_cross_entropy_with_logits", "range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "x_train_ph", ",", "x_test_ph", ",", "y_train_ph", ",", "y_test_ph", ",", "\n", "cls_train", ",", "cls_test", ",", "var_filt", ",", "var_cls", ",", "\n", "ntask", ",", "ntrain_per_task", ",", "ntest_per_task", ",", "nclass_per_task", ",", "\n", "lr_u", ",", "lr_v", ",", "lr_p", ",", "sig", ",", "istraining_ph", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "x_train_ph", "=", "x_train_ph", "\n", "self", ".", "x_test_ph", "=", "x_test_ph", "\n", "self", ".", "y_train_ph", "=", "y_train_ph", "\n", "self", ".", "y_test_ph", "=", "y_test_ph", "\n", "\n", "self", ".", "cls_train", "=", "cls_train", "\n", "self", ".", "cls_test", "=", "cls_test", "\n", "\n", "self", ".", "var_filt", "=", "var_filt", "# u", "\n", "self", ".", "var_cls", "=", "var_cls", "# v", "\n", "\n", "self", ".", "ntask", "=", "ntask", "\n", "self", ".", "ntrain_per_task", "=", "ntrain_per_task", "\n", "self", ".", "ntest_per_task", "=", "ntest_per_task", "\n", "self", ".", "nclass_per_task", "=", "nclass_per_task", "\n", "\n", "self", ".", "lr_u", "=", "lr_u", "\n", "self", ".", "lr_v", "=", "lr_v", "\n", "self", ".", "lr_p", "=", "lr_p", "\n", "self", ".", "istraining_ph", "=", "istraining_ph", "\n", "\n", "self", ".", "f", "=", "tf", ".", "reduce_mean", "(", "[", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_test", "[", "i", "]", ",", "labels", "=", "self", ".", "y_test_ph", "[", "i", ",", ":", "]", ")", ")", "for", "i", "in", "range", "(", "self", ".", "ntask", ")", "]", ")", "\n", "self", ".", "g", "=", "tf", ".", "reduce_mean", "(", "[", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_train", "[", "i", "]", ",", "labels", "=", "self", ".", "y_train_ph", "[", "i", ",", ":", "]", ")", ")", "for", "i", "in", "range", "(", "self", ".", "ntask", ")", "]", ")", "\n", "\n", "self", ".", "bl", "=", "bilevel_approxgrad_multivar", "(", "sess", ",", "self", ".", "f", ",", "self", ".", "g", ",", "[", "self", ".", "var_filt", "]", ",", "self", ".", "var_cls", ",", "[", "lr_u", "]", ",", "lr_v", "*", "np", ".", "ones", "(", "self", ".", "ntask", ")", ",", "lr_p", "*", "np", ".", "ones", "(", "self", ".", "ntask", ")", ",", "sig", ")", "\n", "\n", "self", ".", "min_u", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_u", ")", ".", "minimize", "(", "self", ".", "g", ",", "var_list", "=", "self", ".", "var_filt", ")", "\n", "\n", "opt_v", "=", "[", "[", "]", "for", "i", "in", "range", "(", "ntask", ")", "]", "\n", "self", ".", "reset_opt_v", "=", "[", "[", "]", "for", "i", "in", "range", "(", "ntask", ")", "]", "\n", "self", ".", "min_v", "=", "[", "[", "]", "for", "i", "in", "range", "(", "ntask", ")", "]", "\n", "for", "i", "in", "range", "(", "ntask", ")", ":", "\n", "            ", "opt_v", "[", "i", "]", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_v", ")", "\n", "self", ".", "min_v", "[", "i", "]", "=", "opt_v", "[", "i", "]", ".", "minimize", "(", "self", ".", "g", ",", "var_list", "=", "self", ".", "var_cls", "[", "i", "]", ")", "\n", "self", ".", "reset_opt_v", "[", "i", "]", "=", "tf", ".", "variables_initializer", "(", "opt_v", "[", "i", "]", ".", "variables", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.bilevel_approxgrad_metalearning.bilevel_meta.reset_v_func": [[51, 56], ["range", "bilevel_approxgrad_metalearning.bilevel_meta.sess.run", "bilevel_approxgrad_metalearning.bilevel_meta.sess.run"], "methods", ["None"], ["", "", "def", "reset_v_func", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "ntask", ")", ":", "\n", "            ", "for", "var", "in", "self", ".", "var_cls", "[", "i", "]", ":", "\n", "                ", "self", ".", "sess", ".", "run", "(", "var", ".", "initializer", ")", "\n", "", "self", ".", "sess", ".", "run", "(", "self", ".", "reset_opt_v", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.bilevel_approxgrad_metalearning.bilevel_meta.update_pretrain_u": [[57, 68], ["feed_dict.update", "feed_dict.update", "range", "feed_dict.update", "bilevel_approxgrad_metalearning.bilevel_meta.sess.run", "bilevel_approxgrad_metalearning.bilevel_meta.sess.run"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["", "", "def", "update_pretrain_u", "(", "self", ",", "x_train", ",", "y_train", ",", "niter", "=", "1", ")", ":", "\n", "        ", "feed_dict", "=", "{", "}", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "x_train_u", ":", "x_train", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "y_train_u", ":", "y_train", "}", ")", "\n", "\n", "for", "it", "in", "range", "(", "niter", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_pretrain_u", ",", "feed_dict", ")", "\n", "\n", "", "feed_dict", ".", "update", "(", "{", "self", ".", "istraining_ph", ":", "False", "}", ")", "\n", "l1", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "pretrain_u", ",", "feed_dict", "=", "feed_dict", ")", "\n", "return", "l1", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.bilevel_approxgrad_metalearning.bilevel_meta.update": [[69, 74], ["bilevel_approxgrad_metalearning.bilevel_meta.bl.update"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["", "def", "update", "(", "self", ",", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "niter1", "=", "1", ",", "niter2", "=", "1", ")", ":", "\n", "\n", "        ", "feed_dict", "=", "{", "self", ".", "x_train_ph", ":", "x_train", ",", "self", ".", "y_train_ph", ":", "y_train", ",", "self", ".", "x_test_ph", ":", "x_test", ",", "self", ".", "y_test_ph", ":", "y_test", "}", "\n", "fval", ",", "gval", ",", "hval", "=", "self", ".", "bl", ".", "update", "(", "feed_dict", ",", "niter1", ",", "niter2", ")", "\n", "return", "[", "fval", ",", "gval", ",", "hval", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.bilevel_approxgrad_metalearning.bilevel_meta.update_simple": [[75, 88], ["feed_dict.update", "feed_dict.update", "range", "bilevel_approxgrad_metalearning.bilevel_meta.sess.run", "feed_dict.update", "bilevel_approxgrad_metalearning.bilevel_meta.sess.run", "bilevel_approxgrad_metalearning.bilevel_meta.sess.run"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["", "def", "update_simple", "(", "self", ",", "x_train", ",", "y_train", ",", "niter", "=", "1", ")", ":", "\n", "        ", "feed_dict", "=", "{", "}", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "x_train_ph", ":", "x_train", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "y_train_ph", ":", "y_train", "}", ")", "\n", "\n", "for", "it", "in", "range", "(", "niter", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_v", ",", "feed_dict", ")", "\n", "", "self", ".", "sess", ".", "run", "(", "self", ".", "min_u", ",", "feed_dict", ")", "\n", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "istraining_ph", ":", "False", "}", ")", "\n", "l1", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "g", ",", "feed_dict", "=", "feed_dict", ")", "\n", "\n", "return", "l1", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.bilevel_approxgrad_metalearning.bilevel_meta.update_cls_simple": [[89, 101], ["feed_dict.update", "feed_dict.update", "range", "feed_dict.update", "bilevel_approxgrad_metalearning.bilevel_meta.sess.run", "bilevel_approxgrad_metalearning.bilevel_meta.sess.run"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["", "def", "update_cls_simple", "(", "self", ",", "x_train", ",", "y_train", ",", "niter", "=", "1", ")", ":", "\n", "        ", "feed_dict", "=", "{", "}", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "x_train_ph", ":", "x_train", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "y_train_ph", ":", "y_train", "}", ")", "\n", "\n", "for", "it", "in", "range", "(", "niter", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_v", ",", "feed_dict", ")", "\n", "\n", "", "feed_dict", ".", "update", "(", "{", "self", ".", "istraining_ph", ":", "False", "}", ")", "\n", "l1", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "g", ",", "feed_dict", "=", "feed_dict", ")", "\n", "\n", "return", "l1", "", "", "", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_approxgrad_omniglot.get_tasks": [[85, 151], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.delete", "numpy.random.shuffle", "range", "numpy.arange", "numpy.random.shuffle", "numpy.arange", "numpy.random.shuffle", "numpy.arange", "len", "print", "already_selected.append", "numpy.argwhere().flatten", "numpy.random.shuffle", "numpy.zeros", "range", "numpy.zeros", "range", "numpy.arange", "len", "numpy.argwhere"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["def", "get_tasks", "(", "X", ",", "Y", ",", "for_train", "=", "True", ")", ":", "\n", "\n", "    ", "X_train", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "ntrain_per_cls", ",", "height", ",", "width", ",", "nch", ")", ",", "np", ".", "float32", ")", "\n", "Y_train", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "ntrain_per_cls", ",", "nclass_per_task", ")", ",", "np", ".", "float32", ")", "\n", "\n", "X_test", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "ntest_per_cls", ",", "height", ",", "width", ",", "nch", ")", ",", "np", ".", "float32", ")", "\n", "Y_test", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "ntest_per_cls", ",", "nclass_per_task", ")", ",", "np", ".", "float32", ")", "\n", "\n", "already_selected", "=", "[", "]", "\n", "for", "batch", "in", "range", "(", "meta_batch_size", ")", ":", "\n", "\n", "        ", "if", "for_train", ":", "\n", "            ", "class_idx", "=", "np", ".", "arange", "(", "test_classes_start", "*", "4", ")", "#4800", "\n", "start_in", "=", "0", "\n", "", "else", ":", "\n", "            ", "class_idx", "=", "test_classes_start", "*", "4", "+", "np", ".", "arange", "(", "(", "1623", "-", "test_classes_start", ")", "*", "4", ")", "#4800 + 423*4", "\n", "start_in", "=", "test_classes_start", "*", "4", "\n", "\n", "", "if", "len", "(", "already_selected", ")", "+", "nclass_per_task", ">=", "len", "(", "class_idx", ")", ":", "\n", "            ", "print", "(", "\"here\"", ")", "\n", "already_selected", "=", "[", "]", "\n", "\n", "", "class_idx", "=", "np", ".", "delete", "(", "class_idx", ",", "already_selected", ")", "\n", "\n", "np", ".", "random", ".", "shuffle", "(", "class_idx", ")", "\n", "\n", "selected_idx", "=", "class_idx", "[", ":", "nclass_per_task", "]", "\n", "for", "li_it", "in", "selected_idx", ":", "\n", "            ", "already_selected", ".", "append", "(", "li_it", "-", "start_in", ")", "\n", "#print(sorted(selected_idx))", "\n", "\n", "", "start_train", "=", "0", "\n", "start_test", "=", "0", "\n", "for", "num_cls", "in", "range", "(", "nclass_per_task", ")", ":", "\n", "\n", "            ", "idxs", "=", "np", ".", "argwhere", "(", "Y", "==", "selected_idx", "[", "num_cls", "]", ")", ".", "flatten", "(", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "idxs_train", "=", "idxs", "[", ":", "ntrain_per_cls", "]", "\n", "idxs_test", "=", "idxs", "[", "ntrain_per_cls", ":", "ntrain_per_cls", "+", "ntest_per_cls", "]", "\n", "\n", "X_train", "[", "batch", "]", "[", "start_train", ":", "start_train", "+", "ntrain_per_cls", "]", "=", "X", "[", "idxs_train", "]", "\n", "X_test", "[", "batch", "]", "[", "start_test", ":", "start_test", "+", "ntest_per_cls", "]", "=", "X", "[", "idxs_test", "]", "\n", "\n", "Y_train", "[", "batch", "]", "[", "start_train", ":", "start_train", "+", "ntrain_per_cls", "]", "=", "np", ".", "zeros", "(", "[", "ntrain_per_cls", ",", "nclass_per_task", "]", ")", "\n", "for", "j", "in", "range", "(", "ntrain_per_cls", ")", ":", "\n", "                ", "Y_train", "[", "batch", "]", "[", "start_train", "+", "j", "]", "[", "num_cls", "]", "=", "1", "\n", "\n", "", "Y_test", "[", "batch", "]", "[", "start_test", ":", "start_test", "+", "ntest_per_cls", "]", "=", "np", ".", "zeros", "(", "[", "ntest_per_cls", ",", "nclass_per_task", "]", ")", "\n", "for", "j", "in", "range", "(", "ntest_per_cls", ")", ":", "\n", "                ", "Y_test", "[", "batch", "]", "[", "start_test", "+", "j", "]", "[", "num_cls", "]", "=", "1", "\n", "\n", "", "start_train", "+=", "ntrain_per_cls", "\n", "start_test", "+=", "ntest_per_cls", "\n", "\n", "", "task_idx_train", "=", "np", ".", "arange", "(", "(", "ntrain_per_cls", ")", "*", "nclass_per_task", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "task_idx_train", ")", "\n", "X_train", "[", "batch", "]", "=", "X_train", "[", "batch", "]", "[", "task_idx_train", "]", "\n", "Y_train", "[", "batch", "]", "=", "Y_train", "[", "batch", "]", "[", "task_idx_train", "]", "\n", "\n", "task_idx_test", "=", "np", ".", "arange", "(", "(", "ntest_per_cls", ")", "*", "nclass_per_task", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "task_idx_test", ")", "\n", "X_test", "[", "batch", "]", "=", "X_test", "[", "batch", "]", "[", "task_idx_test", "]", "\n", "Y_test", "[", "batch", "]", "=", "Y_test", "[", "batch", "]", "[", "task_idx_test", "]", "\n", "\n", "#print(sorted(already_selected), len(np.unique(already_selected)))", "\n", "", "return", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_approxgrad_omniglot.make_filter1": [[174, 201], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.layers.dropout", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.layers.dropout", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.layers.dropout", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.layers.dropout", "tensorflow.reshape", "tensorflow.nn.bias_add", "tensorflow.nn.bias_add", "tensorflow.nn.bias_add", "tensorflow.nn.bias_add", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.nn.conv2d", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.nn.conv2d", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.nn.conv2d", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.nn.conv2d"], "function", ["None"], ["def", "make_filter1", "(", "ins", ")", ":", "\n", "    ", "W1", "=", "tf", ".", "get_variable", "(", "'W1'", ",", "[", "3", ",", "3", ",", "1", ",", "64", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b1", "=", "tf", ".", "get_variable", "(", "'b1'", ",", "[", "64", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "c1", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "bias_add", "(", "tf", ".", "nn", ".", "conv2d", "(", "ins", ",", "W1", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ",", "b1", ")", ")", "\n", "p1", "=", "tf", ".", "nn", ".", "max_pool", "(", "c1", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "'VALID'", ")", "\n", "p1", "=", "tf", ".", "layers", ".", "dropout", "(", "p1", ",", "rate", "=", "0.25", ",", "training", "=", "istraining_ph", ")", "\n", "\n", "W2", "=", "tf", ".", "get_variable", "(", "'W2'", ",", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b2", "=", "tf", ".", "get_variable", "(", "'b2'", ",", "[", "64", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "c2", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "bias_add", "(", "tf", ".", "nn", ".", "conv2d", "(", "p1", ",", "W2", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ",", "b2", ")", ")", "\n", "p2", "=", "tf", ".", "nn", ".", "max_pool", "(", "c2", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "'VALID'", ")", "\n", "p2", "=", "tf", ".", "layers", ".", "dropout", "(", "p2", ",", "rate", "=", "0.25", ",", "training", "=", "istraining_ph", ")", "\n", "\n", "W3", "=", "tf", ".", "get_variable", "(", "'W3'", ",", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b3", "=", "tf", ".", "get_variable", "(", "'b3'", ",", "[", "64", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "c3", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "bias_add", "(", "tf", ".", "nn", ".", "conv2d", "(", "p2", ",", "W3", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ",", "b3", ")", ")", "\n", "p3", "=", "tf", ".", "nn", ".", "max_pool", "(", "c3", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "'VALID'", ")", "\n", "p3", "=", "tf", ".", "layers", ".", "dropout", "(", "p3", ",", "rate", "=", "0.25", ",", "training", "=", "istraining_ph", ")", "\n", "\n", "W4", "=", "tf", ".", "get_variable", "(", "'W4'", ",", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b4", "=", "tf", ".", "get_variable", "(", "'b4'", ",", "[", "64", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "c4", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "bias_add", "(", "tf", ".", "nn", ".", "conv2d", "(", "p3", ",", "W4", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ",", "b4", ")", ")", "\n", "p4", "=", "tf", ".", "nn", ".", "max_pool", "(", "c4", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "'VALID'", ")", "\n", "p4", "=", "tf", ".", "layers", ".", "dropout", "(", "p4", ",", "rate", "=", "0.25", ",", "training", "=", "istraining_ph", ")", "\n", "a4", "=", "tf", ".", "reshape", "(", "p4", ",", "[", "-", "1", ",", "64", "]", ")", "\n", "out", "=", "a4", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_approxgrad_omniglot.make_classifier1": [[202, 207], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.bias_add", "tensorflow.matmul", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer"], "function", ["None"], ["", "def", "make_classifier1", "(", "ins", ",", "d", "=", "64", ",", "K", "=", "nclass_per_task", ")", ":", "\n", "    ", "W1", "=", "tf", ".", "get_variable", "(", "'W1'", ",", "[", "d", ",", "K", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b1", "=", "tf", ".", "get_variable", "(", "'b1'", ",", "[", "K", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "out", "=", "tf", ".", "nn", ".", "bias_add", "(", "tf", ".", "matmul", "(", "ins", ",", "W1", ")", ",", "b1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_approxgrad_omniglot.conv_block_old": [[208, 215], ["tensorflow.variable_scope", "tensorflow.contrib.layers.conv2d", "tensorflow.nn.relu", "tensorflow.contrib.layers.xavier_initializer_conv2d"], "function", ["None"], ["", "def", "conv_block_old", "(", "inputs", ",", "out_channels", ",", "name", "=", "'conv'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "conv", "=", "tcl", ".", "conv2d", "(", "inputs", ",", "out_channels", ",", "3", ",", "stride", "=", "2", ",", "activation_fn", "=", "None", ",", "normalizer_fn", "=", "tcl", ".", "batch_norm", ",", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer_conv2d", "(", "tf", ".", "float32", ")", ")", "\n", "if", "name", "!=", "'conv_4'", ":", "\n", "            ", "conv", "=", "tf", ".", "nn", ".", "relu", "(", "conv", ")", "\n", "\n", "", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_approxgrad_omniglot.conv_block_new": [[216, 223], ["tensorflow.variable_scope", "tensorflow.contrib.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.nn.relu", "tensorflow.contrib.layers.xavier_initializer_conv2d"], "function", ["None"], ["", "", "def", "conv_block_new", "(", "inputs", ",", "out_channels", ",", "name", "=", "'conv'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "conv", "=", "tcl", ".", "conv2d", "(", "inputs", ",", "out_channels", ",", "3", ",", "activation_fn", "=", "None", ",", "normalizer_fn", "=", "tcl", ".", "batch_norm", ",", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer_conv2d", "(", "tf", ".", "float32", ")", ")", "\n", "if", "name", "!=", "'conv_4'", ":", "\n", "            ", "conv", "=", "tf", ".", "nn", ".", "relu", "(", "conv", ")", "\n", "", "conv", "=", "tf", ".", "layers", ".", "max_pooling2d", "(", "conv", ",", "pool_size", "=", "2", ",", "strides", "=", "2", ")", "\n", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_approxgrad_omniglot.encoder": [[224, 232], ["tensorflow.variable_scope", "test_approxgrad_omniglot.conv_block_new", "test_approxgrad_omniglot.conv_block_new", "test_approxgrad_omniglot.conv_block_new", "test_approxgrad_omniglot.conv_block_new", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new"], ["", "", "def", "encoder", "(", "x", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "net", "=", "conv_block_new", "(", "x", ",", "64", ",", "name", "=", "'conv_1'", ")", "\n", "net", "=", "conv_block_new", "(", "net", ",", "64", ",", "name", "=", "'conv_2'", ")", "\n", "net", "=", "conv_block_new", "(", "net", ",", "64", ",", "name", "=", "'conv_3'", ")", "\n", "net", "=", "conv_block_new", "(", "net", ",", "64", ",", "name", "=", "'conv_4'", ")", "\n", "net", "=", "tf", ".", "reshape", "(", "net", ",", "(", "-", "1", ",", "64", ")", ")", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_approxgrad_omniglot.top_layer": [[233, 243], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.sqrt", "tensorflow.sqrt", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.matmul"], "function", ["None"], ["", "", "def", "top_layer", "(", "ins", ",", "K", "=", "20", ")", ":", "\n", "    ", "W_top", "=", "tf", ".", "get_variable", "(", "'W_top'", ",", "[", "64", ",", "K", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b_top", "=", "tf", ".", "get_variable", "(", "'b_top'", ",", "[", "K", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.001", ")", ")", "\n", "\n", "wat", "=", "0.001", "\n", "ins_norm", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "ins", "**", "2", ",", "axis", "=", "1", ",", "keep_dims", "=", "True", ")", "+", "wat", "**", "2", ")", "\n", "W_top_norm", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "W_top", "**", "2", ",", "axis", "=", "0", ",", "keep_dims", "=", "True", ")", "+", "b_top", "**", "2", ")", "\n", "\n", "out", "=", "10.", "*", "(", "tf", ".", "matmul", "(", "ins", ",", "W_top", ")", "+", "wat", "*", "b_top", ")", "/", "(", "ins_norm", "*", "W_top_norm", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_approxgrad_omniglot.top_layer_norm": [[244, 251], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.matmul", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer"], "function", ["None"], ["", "def", "top_layer_norm", "(", "ins", ",", "K", "=", "20", ")", ":", "\n", "    ", "W_top", "=", "tf", ".", "get_variable", "(", "'W_top'", ",", "[", "64", ",", "K", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b_top", "=", "tf", ".", "get_variable", "(", "'b_top'", ",", "[", "K", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.001", ")", ")", "\n", "\n", "out", "=", "(", "tf", ".", "matmul", "(", "ins", ",", "W_top", ")", "+", "b_top", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.test_bilevel_poisoning_targeted.get_balanced_set": [[8, 27], ["len", "int", "range", "numpy.arange", "numpy.random.shuffle", "numpy.unique", "numpy.argwhere().flatten", "numpy.random.shuffle", "len", "numpy.array", "numpy.array", "numpy.concatenate", "numpy.concatenate", "numpy.argwhere"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["def", "get_balanced_set", "(", "X", ",", "Y", ",", "points", ")", ":", "\n", "    ", "classes", "=", "len", "(", "np", ".", "unique", "(", "Y", ")", ")", "\n", "num_per_class", "=", "int", "(", "points", "/", "classes", ")", "\n", "for", "i", "in", "range", "(", "classes", ")", ":", "\n", "        ", "clss", "=", "np", ".", "argwhere", "(", "Y", "==", "i", ")", ".", "flatten", "(", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "clss", ")", "\n", "clss", "=", "clss", "[", ":", "num_per_class", "]", "\n", "if", "i", "==", "0", ":", "\n", "            ", "X_", "=", "np", ".", "array", "(", "X", "[", "clss", "]", ")", "\n", "Y_", "=", "np", ".", "array", "(", "Y", "[", "clss", "]", ")", "\n", "", "else", ":", "\n", "            ", "X_", "=", "np", ".", "concatenate", "(", "[", "X_", ",", "X", "[", "clss", "]", "]", ")", "\n", "Y_", "=", "np", ".", "concatenate", "(", "[", "Y_", ",", "Y", "[", "clss", "]", "]", ")", "\n", "\n", "", "", "idx", "=", "np", ".", "arange", "(", "len", "(", "X_", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idx", ")", "\n", "X_", "=", "X_", "[", "idx", "]", "\n", "Y_", "=", "Y_", "[", "idx", "]", "\n", "return", "X_", ",", "Y_", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.bilevel_poisoning_approxgrad_untargeted.bilevel_poisoning.__init__": [[10, 52], ["tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.nn.softmax", "tensorflow.nn.softmax", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.assign", "tensorflow.assign", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "bilevel_approxgrad.bilevel_approxgrad.bilevel_approxgrad", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "x_train_tf", ",", "x_val_tf", ",", "x_test_tf", ",", "x_poison_tf", ",", "x_original_tf", ",", "y_train_tf", ",", "y_val_tf", ",", "y_test_tf", ",", "y_poison_tf", ",", "\n", "Npoison", ",", "height", ",", "width", ",", "nch", ",", "\n", "var_cls", ",", "sig", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "x_train_tf", "=", "x_train_tf", "\n", "self", ".", "x_val_tf", "=", "x_val_tf", "\n", "self", ".", "x_test_tf", "=", "x_test_tf", "\n", "self", ".", "x_poison_tf", "=", "x_poison_tf", "\n", "self", ".", "x_original_tf", "=", "x_original_tf", "\n", "\n", "self", ".", "y_train_tf", "=", "y_train_tf", "\n", "self", ".", "y_val_tf", "=", "y_val_tf", "\n", "self", ".", "y_test_tf", "=", "y_test_tf", "\n", "self", ".", "y_poison_tf", "=", "y_poison_tf", "\n", "\n", "self", ".", "cls_train", "=", "tf", ".", "matmul", "(", "self", ".", "x_train_tf", ",", "var_cls", ")", "\n", "self", ".", "cls_val", "=", "tf", ".", "matmul", "(", "self", ".", "x_val_tf", ",", "var_cls", ")", "\n", "self", ".", "cls_test", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "matmul", "(", "self", ".", "x_test_tf", ",", "var_cls", ")", ")", "\n", "\n", "self", ".", "Npoison", "=", "Npoison", "\n", "self", ".", "height", "=", "height", "\n", "self", ".", "width", "=", "width", "\n", "self", ".", "nch", "=", "nch", "\n", "\n", "self", ".", "sig", "=", "sig", "\n", "\n", "self", ".", "u", "=", "tf", ".", "get_variable", "(", "'u'", ",", "shape", "=", "(", "Npoison", ",", "self", ".", "height", "*", "self", ".", "width", "*", "self", ".", "nch", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "0", ",", "1", ")", ")", "\n", "self", ".", "assign_u", "=", "tf", ".", "assign", "(", "self", ".", "u", ",", "self", ".", "x_poison_tf", ")", "\n", "self", ".", "cls_poison", "=", "tf", ".", "matmul", "(", "self", ".", "u", ",", "var_cls", ")", "\n", "\n", "self", ".", "v", "=", "[", "var_cls", "]", "\n", "\n", "self", ".", "f", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_val", ",", "labels", "=", "self", ".", "y_val_tf", ")", ")", "#+ 0.0001*tf.reduce_sum(tf.square(x_original_tf-self.u_all))", "\n", "\n", "self", ".", "weight_decay", "=", "tf", ".", "nn", ".", "l2_loss", "(", "var_cls", ")", "\n", "self", ".", "g", "=", "0.5", "*", "0.01", "*", "self", ".", "weight_decay", "+", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "tf", ".", "concat", "(", "[", "self", ".", "cls_poison", ",", "self", ".", "cls_train", "]", ",", "0", ")", ",", "labels", "=", "tf", ".", "concat", "(", "[", "self", ".", "y_poison_tf", ",", "self", ".", "y_train_tf", "]", ",", "0", ")", ")", ")", "\n", "\n", "self", ".", "bl", "=", "bilevel_approxgrad", "(", "sess", ",", "self", ".", "f", ",", "self", ".", "g", ",", "self", ".", "u", ",", "self", ".", "v", ",", "self", ".", "sig", ")", "\n", "\n", "self", ".", "loss_simple", "=", "0.5", "*", "0.01", "*", "self", ".", "weight_decay", "+", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_train", ",", "labels", "=", "self", ".", "y_train_tf", ")", ")", "\n", "self", ".", "optim_simple", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "1E-3", ")", ".", "minimize", "(", "self", ".", "loss_simple", ",", "var_list", "=", "self", ".", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.bilevel_poisoning_approxgrad_untargeted.bilevel_poisoning.train": [[53, 62], ["bilevel_poisoning_approxgrad_untargeted.bilevel_poisoning.sess.run", "bilevel_poisoning_approxgrad_untargeted.bilevel_poisoning.bl.update", "bilevel_poisoning_approxgrad_untargeted.bilevel_poisoning.sess.run"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["", "def", "train", "(", "self", ",", "x_train", ",", "y_train", ",", "x_val", ",", "y_val", ",", "x_poisoned", ",", "y_poisoned", ",", "x_original", ",", "lr_u", ",", "lr_v", ",", "lr_p", ",", "niter1", "=", "1", ",", "niter2", "=", "1", ")", ":", "\n", "\n", "        ", "self", ".", "sess", ".", "run", "(", "self", ".", "assign_u", ",", "feed_dict", "=", "{", "self", ".", "x_poison_tf", ":", "x_poisoned", "}", ")", "\n", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", ",", "self", ".", "y_train_tf", ":", "y_train", ",", "self", ".", "x_val_tf", ":", "x_val", ",", "self", ".", "y_val_tf", ":", "y_val", ",", "self", ".", "y_poison_tf", ":", "y_poisoned", ",", "self", ".", "x_original_tf", ":", "x_original", "}", "\n", "\n", "fval", ",", "gval", ",", "hval", "=", "self", ".", "bl", ".", "update", "(", "feed_dict", ",", "lr_u", ",", "lr_v", ",", "lr_p", ",", "niter1", ",", "niter2", ")", "\n", "new_x_poisoned", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "u", ")", "\n", "\n", "return", "[", "fval", ",", "gval", ",", "hval", ",", "new_x_poisoned", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.bilevel_poisoning_approxgrad_untargeted.bilevel_poisoning.train_simple": [[63, 70], ["range", "print", "print", "print", "bilevel_poisoning_approxgrad_untargeted.bilevel_poisoning.sess.run", "bilevel_poisoning_approxgrad_untargeted.bilevel_poisoning.eval_accuracy", "bilevel_poisoning_approxgrad_untargeted.bilevel_poisoning.eval_accuracy"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.bilevel_poisoning.eval_accuracy", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.bilevel_poisoning.eval_accuracy"], ["", "def", "train_simple", "(", "self", ",", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "nepochs", ")", ":", "\n", "        ", "for", "epoch", "in", "range", "(", "nepochs", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "optim_simple", ",", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", ",", "self", ".", "y_train_tf", ":", "y_train", "}", ")", "\n", "\n", "", "print", "(", "\"Accuracy simple\"", ")", "\n", "print", "(", "\"Train Accuracy:\"", ",", "self", ".", "eval_accuracy", "(", "x_train", ",", "y_train", ")", ")", "\n", "print", "(", "\"Test Accuracy:\"", ",", "self", ".", "eval_accuracy", "(", "x_test", ",", "y_test", ")", ",", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.bilevel_poisoning_approxgrad_untargeted.bilevel_poisoning.eval_accuracy": [[71, 77], ["bilevel_poisoning_approxgrad_untargeted.bilevel_poisoning.sess.run", "numpy.sum", "numpy.float32", "len", "numpy.argmax", "numpy.argmax"], "methods", ["None"], ["", "def", "eval_accuracy", "(", "self", ",", "x_test", ",", "y_test", ")", ":", "\n", "        ", "acc", "=", "0", "\n", "pred", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "cls_test", ",", "{", "self", ".", "x_test_tf", ":", "x_test", "}", ")", "\n", "acc", "+=", "np", ".", "sum", "(", "np", ".", "argmax", "(", "pred", ",", "1", ")", "==", "np", ".", "argmax", "(", "y_test", ",", "1", ")", ")", "\n", "acc", "/=", "np", ".", "float32", "(", "len", "(", "x_test", ")", ")", "\n", "return", "acc", "", "", "", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.bilevel_importance.bilevel_importance.__init__": [[9, 34], ["tensorflow.placeholder", "tensorflow.Variable", "tensorflow.assign", "tensorflow.reduce_mean", "bilevel_approxgrad.bilevel_approxgrad.bilevel_approxgrad", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer().minimize", "numpy.zeros", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.tanh", "tensorflow.multiply", "tensorflow.train.AdamOptimizer", "tensorflow.nn.softmax_cross_entropy_with_logits"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "x_train_tf", ",", "x_test_tf", ",", "y_train_tf", ",", "y_test_tf", ",", "cls_train", ",", "cls_test", ",", "var_cls", ",", "\n", "batch_size", ",", "sig", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "x_train_tf", "=", "x_train_tf", "\n", "self", ".", "x_test_tf", "=", "x_test_tf", "\n", "self", ".", "y_train_tf", "=", "y_train_tf", "\n", "self", ".", "y_test_tf", "=", "y_test_tf", "\n", "self", ".", "cls_train", "=", "cls_train", "\n", "self", ".", "cls_test", "=", "cls_test", "\n", "self", ".", "var_cls", "=", "var_cls", "# v", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "\n", "self", ".", "importance_atanh_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "self", ".", "batch_size", "]", ",", "'importance_atanh_tf'", ")", "\n", "self", ".", "importance_atanh", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "(", "self", ".", "batch_size", ")", ",", "np", ".", "float32", ")", ",", "name", "=", "'importance_atanh'", ")", "\n", "self", ".", "assign_importance_atanh", "=", "tf", ".", "assign", "(", "self", ".", "importance_atanh", ",", "self", ".", "importance_atanh_tf", ")", "\n", "importance", "=", "0.5", "*", "(", "tf", ".", "tanh", "(", "self", ".", "importance_atanh", ")", "+", "1.", ")", "# between 0 and 1", "\n", "\n", "self", ".", "f", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_test", ",", "labels", "=", "self", ".", "y_test_tf", ")", ")", "\n", "self", ".", "g", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "importance", ",", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_train", ",", "labels", "=", "self", ".", "y_train_tf", ")", ")", ")", "/", "tf", ".", "reduce_sum", "(", "importance", ")", "\n", "\n", "self", ".", "bl", "=", "bilevel_approxgrad", "(", "sess", ",", "self", ".", "f", ",", "self", ".", "g", ",", "self", ".", "importance_atanh", ",", "var_cls", ",", "sig", ")", "\n", "\n", "self", ".", "loss_simple", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_train", ",", "labels", "=", "self", ".", "y_train_tf", ")", ")", "\n", "self", ".", "optim_simple", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "1E-3", ")", ".", "minimize", "(", "self", ".", "loss_simple", ",", "var_list", "=", "self", ".", "var_cls", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.bilevel_importance.bilevel_importance.train": [[35, 44], ["bilevel_importance.bilevel_importance.sess.run", "bilevel_importance.bilevel_importance.bl.update", "bilevel_importance.bilevel_importance.sess.run"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["", "def", "train", "(", "self", ",", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "importance_atanh", ",", "lr_u", ",", "lr_v", ",", "lr_p", ",", "niter1", "=", "1", ",", "niter2", "=", "1", ")", ":", "\n", "\n", "        ", "self", ".", "sess", ".", "run", "(", "self", ".", "assign_importance_atanh", ",", "feed_dict", "=", "{", "self", ".", "importance_atanh_tf", ":", "importance_atanh", "}", ")", "\n", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", ",", "self", ".", "y_train_tf", ":", "y_train", ",", "self", ".", "x_test_tf", ":", "x_test", ",", "self", ".", "y_test_tf", ":", "y_test", "}", "\n", "\n", "fval", ",", "gval", ",", "hval", "=", "self", ".", "bl", ".", "update", "(", "feed_dict", ",", "lr_u", ",", "lr_v", ",", "lr_p", ",", "niter1", ",", "niter2", ")", "\n", "timp_atanh", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "importance_atanh", ")", "\n", "\n", "return", "[", "fval", ",", "gval", ",", "hval", ",", "timp_atanh", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.bilevel_importance.bilevel_importance.train_simple": [[45, 64], ["int", "range", "bilevel_importance.bilevel_importance.eval_simple", "numpy.arange", "numpy.random.shuffle", "range", "float", "range", "bilevel_importance.bilevel_importance.sess.run", "bilevel_importance.bilevel_importance.sess.run", "print", "min"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple"], ["", "def", "train_simple", "(", "self", ",", "x_train", ",", "y_train", ",", "nepochs", ")", ":", "\n", "        ", "batch_size", "=", "self", ".", "batch_size", "\n", "Ntrain", "=", "x_train", ".", "shape", "[", "0", "]", "\n", "nb_batches", "=", "int", "(", "float", "(", "Ntrain", ")", "/", "batch_size", ")", "\n", "if", "Ntrain", "%", "batch_size", "!=", "0", ":", "\n", "            ", "nb_batches", "+=", "1", "\n", "\n", "", "for", "epoch", "in", "range", "(", "nepochs", ")", ":", "\n", "            ", "ind_shuf", "=", "np", ".", "arange", "(", "Ntrain", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "ind_shuf", ")", "\n", "for", "batch", "in", "range", "(", "nb_batches", ")", ":", "\n", "                ", "ind_batch", "=", "range", "(", "batch_size", "*", "batch", ",", "min", "(", "batch_size", "*", "(", "1", "+", "batch", ")", ",", "Ntrain", ")", ")", "\n", "ind_tr", "=", "ind_shuf", "[", "ind_batch", "]", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "optim_simple", ",", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", "[", "ind_tr", ",", ":", "]", ",", "self", ".", "y_train_tf", ":", "y_train", "[", "ind_tr", ",", ":", "]", "}", ")", "\n", "", "if", "epoch", "%", "50", "==", "0", ":", "\n", "                ", "l", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "loss_simple", ",", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", "[", "ind_tr", ",", ":", "]", ",", "self", ".", "y_train_tf", ":", "y_train", "[", "ind_tr", ",", ":", "]", "}", ")", "\n", "print", "(", "'epoch=%d/%d, loss=%f'", "%", "(", "epoch", ",", "nepochs", ",", "l", ")", ")", "\n", "\n", "", "", "return", "self", ".", "eval_simple", "(", "x_train", ",", "y_train", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.bilevel_importance.bilevel_importance.eval_simple": [[65, 83], ["int", "range", "numpy.float32", "print", "numpy.ones", "range", "bilevel_importance.bilevel_importance.sess.run", "numpy.sum", "numpy.argmax", "float", "min", "numpy.argmax", "numpy.argmax"], "methods", ["None"], ["", "def", "eval_simple", "(", "self", ",", "x_test", ",", "y_test", ")", ":", "\n", "        ", "batch_size", "=", "self", ".", "batch_size", "\n", "Ntest", "=", "x_test", ".", "shape", "[", "0", "]", "\n", "nb_batches", "=", "int", "(", "float", "(", "Ntest", ")", "/", "batch_size", ")", "\n", "if", "Ntest", "%", "batch_size", "!=", "0", ":", "\n", "            ", "nb_batches", "+=", "1", "\n", "\n", "", "acc", "=", "0", "\n", "preds", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "Ntest", ",", "np", ".", "int32", ")", "\n", "for", "batch", "in", "range", "(", "nb_batches", ")", ":", "\n", "            ", "ind_batch", "=", "range", "(", "batch_size", "*", "batch", ",", "min", "(", "batch_size", "*", "(", "1", "+", "batch", ")", ",", "Ntest", ")", ")", "\n", "pred", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "cls_test", ",", "{", "self", ".", "x_test_tf", ":", "x_test", "[", "ind_batch", ",", ":", "]", "}", ")", "\n", "acc", "+=", "np", ".", "sum", "(", "np", ".", "argmax", "(", "pred", ",", "1", ")", "==", "np", ".", "argmax", "(", "y_test", "[", "ind_batch", ",", ":", "]", ",", "1", ")", ")", "\n", "preds", "[", "ind_batch", "]", "=", "np", ".", "argmax", "(", "pred", ",", "1", ")", "\n", "\n", "", "acc", "/=", "np", ".", "float32", "(", "nb_batches", "*", "batch_size", ")", "\n", "print", "(", "'mean acc = %f'", "%", "(", "acc", ")", ")", "\n", "return", "[", "acc", ",", "preds", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.pre_process_svhn_data.load_data": [[4, 7], ["scipy.io.loadmat"], "function", ["None"], ["def", "load_data", "(", "path", ")", ":", "\n", "    ", "data", "=", "loadmat", "(", "path", ")", "\n", "return", "data", "[", "'X'", "]", ",", "data", "[", "'y'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.pre_process_svhn_data.balanced_subsample": [[30, 42], ["numpy.unique", "numpy.random.choice", "np.random.choice.tolist", "numpy.where"], "function", ["None"], ["def", "balanced_subsample", "(", "y", ",", "s", ")", ":", "\n", "    ", "\"\"\"Return a balanced subsample of the population\"\"\"", "\n", "sample", "=", "[", "]", "\n", "# For every label in the dataset", "\n", "for", "label", "in", "np", ".", "unique", "(", "y", ")", ":", "\n", "# Get the index of all images with a specific label", "\n", "        ", "images", "=", "np", ".", "where", "(", "y", "==", "label", ")", "[", "0", "]", "\n", "# Draw a random sample from the images", "\n", "random_sample", "=", "np", ".", "random", ".", "choice", "(", "images", ",", "size", "=", "s", ",", "replace", "=", "False", ")", "\n", "# Add the random sample to our subsample list", "\n", "sample", "+=", "random_sample", ".", "tolist", "(", ")", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.pre_process_svhn_data.humansize": [[61, 69], ["None"], "function", ["None"], ["def", "humansize", "(", "nbytes", ")", ":", "\n", "    ", "if", "nbytes", "==", "0", ":", "return", "'0 B'", "\n", "i", "=", "0", "\n", "while", "nbytes", ">=", "1024", ":", "\n", "        ", "nbytes", "/=", "1024.", "\n", "i", "+=", "1", "\n", "", "f", "=", "(", "'%.2f'", "%", "nbytes", ")", ".", "rstrip", "(", "'0'", ")", ".", "rstrip", "(", "'.'", ")", "\n", "return", "'%s %s'", "%", "(", "f", ",", "suffixes", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.ApproxGrad.pre_process_svhn_data.rgb2gray": [[70, 74], ["numpy.expand_dims", "numpy.dot"], "function", ["None"], ["", "def", "rgb2gray", "(", "images", ")", ":", "\n", "    ", "\"\"\"Convert images from rbg to grayscale\n    \"\"\"", "\n", "return", "np", ".", "expand_dims", "(", "np", ".", "dot", "(", "images", ",", "[", "0.2989", ",", "0.5870", ",", "0.1140", "]", ")", ",", "axis", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_miniimagenet.get_tasks_old": [[107, 166], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.arange", "numpy.random.shuffle", "range", "numpy.arange", "numpy.random.shuffle", "numpy.arange", "numpy.random.shuffle", "numpy.argwhere().flatten", "numpy.random.shuffle", "numpy.zeros", "range", "numpy.zeros", "range", "datagen.flow", "datagen.flow", "numpy.argwhere", "len", "len"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["", "def", "get_tasks_old", "(", "X", ",", "Y", ",", "num_classes", ",", "test", "=", "False", ")", ":", "\n", "\n", "    ", "train_items_per_class", "=", "ntrain_per_cls", "\n", "\n", "X_train_batch", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "train_items_per_class", ",", "height", ",", "width", ",", "nch", ")", ",", "np", ".", "float32", ")", "\n", "Y_train_batch", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "train_items_per_class", ",", "nclass_per_task", ")", ",", "np", ".", "float32", ")", "\n", "\n", "X_test_batch", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "ntest_per_cls", ",", "height", ",", "width", ",", "nch", ")", ",", "np", ".", "float32", ")", "\n", "Y_test_batch", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "ntest_per_cls", ",", "nclass_per_task", ")", ",", "np", ".", "float32", ")", "\n", "\n", "for", "batch", "in", "range", "(", "meta_batch_size", ")", ":", "\n", "        ", "class_idx", "=", "np", ".", "arange", "(", "num_classes", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "class_idx", ")", "\n", "selected_idx", "=", "class_idx", "[", ":", "nclass_per_task", "]", "\n", "\n", "start_train", "=", "0", "\n", "start_test", "=", "0", "\n", "for", "num_cls", "in", "range", "(", "nclass_per_task", ")", ":", "\n", "            ", "idxs", "=", "np", ".", "argwhere", "(", "Y", "==", "selected_idx", "[", "num_cls", "]", ")", ".", "flatten", "(", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "idxs_train", "=", "idxs", "[", ":", "train_items_per_class", "]", "\n", "idxs_test", "=", "idxs", "[", "train_items_per_class", ":", "train_items_per_class", "+", "ntest_per_cls", "]", "\n", "\n", "if", "data_augmentation", "and", "not", "test", ":", "\n", "                ", "for", "train_X_batch", "in", "datagen", ".", "flow", "(", "X", "[", "idxs_train", "]", ",", "batch_size", "=", "len", "(", "idxs_train", ")", ",", "shuffle", "=", "False", ")", ":", "\n", "                    ", "break", "\n", "\n", "", "for", "test_X_batch", "in", "datagen", ".", "flow", "(", "X", "[", "idxs_test", "]", ",", "batch_size", "=", "len", "(", "idxs_test", ")", ",", "shuffle", "=", "False", ")", ":", "\n", "                    ", "break", "\n", "\n", "", "X_train_batch", "[", "batch", "]", "[", "start_train", ":", "start_train", "+", "train_items_per_class", "]", "=", "train_X_batch", "\n", "X_test_batch", "[", "batch", "]", "[", "start_test", ":", "start_test", "+", "ntest_per_cls", "]", "=", "test_X_batch", "\n", "\n", "", "else", ":", "\n", "                ", "X_train_batch", "[", "batch", "]", "[", "start_train", ":", "start_train", "+", "train_items_per_class", "]", "=", "X", "[", "idxs_train", "]", "\n", "X_test_batch", "[", "batch", "]", "[", "start_test", ":", "start_test", "+", "ntest_per_cls", "]", "=", "X", "[", "idxs_test", "]", "\n", "\n", "", "Y_train_batch", "[", "batch", "]", "[", "start_train", ":", "start_train", "+", "train_items_per_class", "]", "=", "np", ".", "zeros", "(", "[", "train_items_per_class", ",", "nclass_per_task", "]", ")", "\n", "for", "j", "in", "range", "(", "train_items_per_class", ")", ":", "\n", "                ", "Y_train_batch", "[", "batch", "]", "[", "start_train", "+", "j", "]", "[", "num_cls", "]", "=", "1", "\n", "\n", "", "Y_test_batch", "[", "batch", "]", "[", "start_test", ":", "start_test", "+", "ntest_per_cls", "]", "=", "np", ".", "zeros", "(", "[", "ntest_per_cls", ",", "nclass_per_task", "]", ")", "\n", "for", "j", "in", "range", "(", "ntest_per_cls", ")", ":", "\n", "                ", "Y_test_batch", "[", "batch", "]", "[", "start_test", "+", "j", "]", "[", "num_cls", "]", "=", "1", "\n", "\n", "", "start_train", "+=", "train_items_per_class", "\n", "start_test", "+=", "ntest_per_cls", "\n", "\n", "", "task_idx_train", "=", "np", ".", "arange", "(", "(", "train_items_per_class", ")", "*", "nclass_per_task", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "task_idx_train", ")", "\n", "X_train_batch", "[", "batch", "]", "=", "X_train_batch", "[", "batch", "]", "[", "task_idx_train", "]", "\n", "Y_train_batch", "[", "batch", "]", "=", "Y_train_batch", "[", "batch", "]", "[", "task_idx_train", "]", "\n", "\n", "task_idx_test", "=", "np", ".", "arange", "(", "(", "ntest_per_cls", ")", "*", "nclass_per_task", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "task_idx_test", ")", "\n", "X_test_batch", "[", "batch", "]", "=", "X_test_batch", "[", "batch", "]", "[", "task_idx_test", "]", "\n", "Y_test_batch", "[", "batch", "]", "=", "Y_test_batch", "[", "batch", "]", "[", "task_idx_test", "]", "\n", "\n", "", "return", "X_train_batch", ",", "Y_train_batch", ",", "X_test_batch", ",", "Y_test_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_miniimagenet.get_tasks": [[167, 237], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.arange", "numpy.delete", "numpy.random.shuffle", "range", "numpy.arange", "numpy.random.shuffle", "numpy.arange", "numpy.random.shuffle", "len", "already_selected.append", "numpy.argwhere().flatten", "numpy.random.shuffle", "numpy.zeros", "range", "numpy.zeros", "range", "len", "datagen.flow", "datagen.flow", "numpy.argwhere", "len", "len"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["", "def", "get_tasks", "(", "X", ",", "Y", ",", "num_classes", ",", "test", "=", "False", ")", ":", "\n", "\n", "    ", "train_items_per_class", "=", "ntrain_per_cls", "\n", "\n", "X_train_batch", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "train_items_per_class", ",", "height", ",", "width", ",", "nch", ")", ",", "np", ".", "float32", ")", "\n", "Y_train_batch", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "train_items_per_class", ",", "nclass_per_task", ")", ",", "np", ".", "float32", ")", "\n", "\n", "X_test_batch", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "ntest_per_cls", ",", "height", ",", "width", ",", "nch", ")", ",", "np", ".", "float32", ")", "\n", "Y_test_batch", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "ntest_per_cls", ",", "nclass_per_task", ")", ",", "np", ".", "float32", ")", "\n", "\n", "already_selected", "=", "[", "]", "\n", "for", "batch", "in", "range", "(", "meta_batch_size", ")", ":", "\n", "        ", "class_idx", "=", "np", ".", "arange", "(", "num_classes", ")", "\n", "if", "len", "(", "already_selected", ")", "+", "nclass_per_task", ">=", "len", "(", "class_idx", ")", ":", "\n", "#print(\"here\")", "\n", "            ", "already_selected", "=", "[", "]", "\n", "\n", "", "class_idx", "=", "np", ".", "delete", "(", "class_idx", ",", "already_selected", ")", "\n", "\n", "np", ".", "random", ".", "shuffle", "(", "class_idx", ")", "\n", "selected_idx", "=", "class_idx", "[", ":", "nclass_per_task", "]", "\n", "#print(selected_idx)", "\n", "for", "li_it", "in", "selected_idx", ":", "\n", "            ", "already_selected", ".", "append", "(", "li_it", ")", "\n", "\n", "", "start_train", "=", "0", "\n", "start_test", "=", "0", "\n", "for", "num_cls", "in", "range", "(", "nclass_per_task", ")", ":", "\n", "            ", "idxs", "=", "np", ".", "argwhere", "(", "Y", "==", "selected_idx", "[", "num_cls", "]", ")", ".", "flatten", "(", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "idxs_train", "=", "idxs", "[", ":", "train_items_per_class", "]", "\n", "idxs_test", "=", "idxs", "[", "train_items_per_class", ":", "train_items_per_class", "+", "ntest_per_cls", "]", "\n", "\n", "if", "data_augmentation", "and", "not", "test", ":", "\n", "                ", "for", "train_X_batch", "in", "datagen", ".", "flow", "(", "X", "[", "idxs_train", "]", ",", "batch_size", "=", "len", "(", "idxs_train", ")", ",", "shuffle", "=", "False", ")", ":", "\n", "                    ", "break", "\n", "\n", "", "for", "test_X_batch", "in", "datagen", ".", "flow", "(", "X", "[", "idxs_test", "]", ",", "batch_size", "=", "len", "(", "idxs_test", ")", ",", "shuffle", "=", "False", ")", ":", "\n", "                    ", "break", "\n", "\n", "", "X_train_batch", "[", "batch", "]", "[", "start_train", ":", "start_train", "+", "train_items_per_class", "]", "=", "train_X_batch", "\n", "X_test_batch", "[", "batch", "]", "[", "start_test", ":", "start_test", "+", "ntest_per_cls", "]", "=", "test_X_batch", "\n", "\n", "", "else", ":", "\n", "                ", "X_train_batch", "[", "batch", "]", "[", "start_train", ":", "start_train", "+", "train_items_per_class", "]", "=", "X", "[", "idxs_train", "]", "\n", "X_test_batch", "[", "batch", "]", "[", "start_test", ":", "start_test", "+", "ntest_per_cls", "]", "=", "X", "[", "idxs_test", "]", "\n", "\n", "", "Y_train_batch", "[", "batch", "]", "[", "start_train", ":", "start_train", "+", "train_items_per_class", "]", "=", "np", ".", "zeros", "(", "[", "train_items_per_class", ",", "nclass_per_task", "]", ")", "\n", "for", "j", "in", "range", "(", "train_items_per_class", ")", ":", "\n", "                ", "Y_train_batch", "[", "batch", "]", "[", "start_train", "+", "j", "]", "[", "num_cls", "]", "=", "1", "\n", "\n", "", "Y_test_batch", "[", "batch", "]", "[", "start_test", ":", "start_test", "+", "ntest_per_cls", "]", "=", "np", ".", "zeros", "(", "[", "ntest_per_cls", ",", "nclass_per_task", "]", ")", "\n", "for", "j", "in", "range", "(", "ntest_per_cls", ")", ":", "\n", "                ", "Y_test_batch", "[", "batch", "]", "[", "start_test", "+", "j", "]", "[", "num_cls", "]", "=", "1", "\n", "\n", "", "start_train", "+=", "train_items_per_class", "\n", "start_test", "+=", "ntest_per_cls", "\n", "\n", "", "task_idx_train", "=", "np", ".", "arange", "(", "(", "train_items_per_class", ")", "*", "nclass_per_task", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "task_idx_train", ")", "\n", "X_train_batch", "[", "batch", "]", "=", "X_train_batch", "[", "batch", "]", "[", "task_idx_train", "]", "\n", "Y_train_batch", "[", "batch", "]", "=", "Y_train_batch", "[", "batch", "]", "[", "task_idx_train", "]", "\n", "\n", "task_idx_test", "=", "np", ".", "arange", "(", "(", "ntest_per_cls", ")", "*", "nclass_per_task", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "task_idx_test", ")", "\n", "X_test_batch", "[", "batch", "]", "=", "X_test_batch", "[", "batch", "]", "[", "task_idx_test", "]", "\n", "Y_test_batch", "[", "batch", "]", "=", "Y_test_batch", "[", "batch", "]", "[", "task_idx_test", "]", "\n", "\n", "#print(sorted(already_selected), len(np.unique(already_selected)))", "\n", "", "return", "X_train_batch", ",", "Y_train_batch", ",", "X_test_batch", ",", "Y_test_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_miniimagenet.conv_block": [[261, 268], ["tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.contrib.layers.batch_norm", "tensorflow.nn.relu", "tensorflow.contrib.layers.max_pool2d"], "function", ["None"], ["def", "conv_block", "(", "inputs", ",", "out_channels", ",", "name", "=", "'conv'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "conv", "=", "tf", ".", "layers", ".", "conv2d", "(", "inputs", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "padding", "=", "'SAME'", ")", "\n", "conv", "=", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "conv", ",", "updates_collections", "=", "None", ",", "decay", "=", "0.99", ",", "scale", "=", "True", ",", "center", "=", "True", ",", "is_training", "=", "istraining_ph", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "relu", "(", "conv", ")", "\n", "conv", "=", "tf", ".", "contrib", ".", "layers", ".", "max_pool2d", "(", "conv", ",", "2", ")", "\n", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_miniimagenet.conv_block_new": [[269, 276], ["tensorflow.variable_scope", "tensorflow.contrib.layers.conv2d", "tensorflow.nn.max_pool", "tensorflow.nn.relu"], "function", ["None"], ["", "", "def", "conv_block_new", "(", "inputs", ",", "out_channels", ",", "name", "=", "'conv'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "conv", "=", "tcl", ".", "conv2d", "(", "inputs", ",", "out_channels", ",", "3", ",", "activation_fn", "=", "None", ",", "normalizer_fn", "=", "tcl", ".", "batch_norm", ")", "\n", "if", "name", "!=", "'conv_4'", ":", "\n", "            ", "conv", "=", "tf", ".", "nn", ".", "relu", "(", "conv", ")", "\n", "", "conv", "=", "tf", ".", "nn", ".", "max_pool", "(", "conv", ",", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "'VALID'", ")", "\n", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_miniimagenet.encoder": [[277, 285], ["tensorflow.variable_scope", "test_bilevel_few_shot_learning_miniimagenet.conv_block_new", "test_bilevel_few_shot_learning_miniimagenet.conv_block_new", "test_bilevel_few_shot_learning_miniimagenet.conv_block_new", "test_bilevel_few_shot_learning_miniimagenet.conv_block_new", "tensorflow.contrib.layers.flatten"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["", "", "def", "encoder", "(", "x", ",", "h_dim", "=", "32", ",", "z_dim", "=", "32", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "net", "=", "conv_block_new", "(", "x", ",", "h_dim", ",", "name", "=", "'conv_1'", ")", "\n", "net", "=", "conv_block_new", "(", "net", ",", "h_dim", ",", "name", "=", "'conv_2'", ")", "\n", "net", "=", "conv_block_new", "(", "net", ",", "z_dim", ",", "name", "=", "'conv_3'", ")", "\n", "net", "=", "conv_block_new", "(", "net", ",", "z_dim", ",", "name", "=", "'conv_4'", ")", "\n", "net", "=", "tf", ".", "contrib", ".", "layers", ".", "flatten", "(", "net", ")", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_miniimagenet.make_resnet_filter": [[286, 314], ["tensorflow.variable_scope", "test_bilevel_few_shot_learning_miniimagenet.make_resnet_filter.residual_block"], "function", ["None"], ["", "", "def", "make_resnet_filter", "(", "ins", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "def", "residual_block", "(", "x", ",", "n_filters", ",", "name", "=", "'res'", ")", ":", "\n", "\n", "        ", "def", "conv_block_resnet", "(", "xx", ",", "name", "=", "'res'", ")", ":", "\n", "            ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "                ", "out", "=", "tcl", ".", "conv2d", "(", "xx", ",", "n_filters", ",", "3", ",", "activation_fn", "=", "None", ",", "normalizer_fn", "=", "tcl", ".", "batch_norm", ")", "\n", "return", "tf", ".", "nn", ".", "leaky_relu", "(", "out", ",", "0.1", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "            ", "skip_c", "=", "tcl", ".", "conv2d", "(", "x", ",", "n_filters", ",", "1", ",", "activation_fn", "=", "None", ")", "\n", "out", "=", "x", "\n", "for", "idx", "in", "range", "(", "3", ")", ":", "\n", "                ", "out", "=", "conv_block_resnet", "(", "out", ",", "name", "+", "'_conv_'", "+", "str", "(", "idx", ")", ")", "\n", "\n", "", "add", "=", "tf", ".", "add", "(", "skip_c", ",", "out", ")", "\n", "\n", "return", "tf", ".", "nn", ".", "max_pool", "(", "add", ",", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "'SAME'", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "'resnet_filter'", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "x", "=", "residual_block", "(", "ins", ",", "64", ",", "name", "=", "'res_1'", ")", "\n", "x", "=", "residual_block", "(", "x", ",", "96", ",", "name", "=", "'res_2'", ")", "\n", "x", "=", "residual_block", "(", "x", ",", "128", ",", "name", "=", "'res_3'", ")", "\n", "x", "=", "residual_block", "(", "x", ",", "256", ",", "name", "=", "'res_4'", ")", "\n", "x", "=", "tcl", ".", "conv2d", "(", "x", ",", "2048", ",", "1", ")", "\n", "x", "=", "tf", ".", "nn", ".", "avg_pool", "(", "x", ",", "[", "1", ",", "6", ",", "6", ",", "1", "]", ",", "[", "1", ",", "6", ",", "6", ",", "1", "]", ",", "'VALID'", ")", "\n", "x", "=", "tcl", ".", "conv2d", "(", "x", ",", "384", ",", "1", ",", "activation_fn", "=", "None", ")", "\n", "x", "=", "tf", ".", "reshape", "(", "x", ",", "(", "-", "1", ",", "384", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_miniimagenet.top_layer": [[315, 330], ["tensorflow.sqrt", "tensorflow.sqrt", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.matmul"], "function", ["None"], ["", "", "def", "top_layer", "(", "ins", ",", "K", "=", "5", ")", ":", "\n", "\n", "    ", "if", "conv", ":", "\n", "        ", "W_top", "=", "tf", ".", "get_variable", "(", "'W_top'", ",", "[", "800", ",", "K", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b_top", "=", "tf", ".", "get_variable", "(", "'b_top'", ",", "[", "K", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.001", ")", ")", "\n", "", "else", ":", "\n", "        ", "W_top", "=", "tf", ".", "get_variable", "(", "'W_top'", ",", "[", "384", ",", "K", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b_top", "=", "tf", ".", "get_variable", "(", "'b_top'", ",", "[", "K", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.001", ")", ")", "\n", "\n", "", "wat", "=", "0.001", "\n", "ins_norm", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "ins", "**", "2", ",", "axis", "=", "1", ",", "keep_dims", "=", "True", ")", "+", "wat", "**", "2", ")", "\n", "W_top_norm", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "W_top", "**", "2", ",", "axis", "=", "0", ",", "keep_dims", "=", "True", ")", "+", "b_top", "**", "2", ")", "\n", "\n", "out", "=", "10.", "*", "(", "tf", ".", "matmul", "(", "ins", ",", "W_top", ")", "+", "wat", "*", "b_top", ")", "/", "(", "ins_norm", "*", "W_top_norm", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_meta_commonfilter.bilevel_meta.__init__": [[12, 54], ["tensorflow.reduce_mean", "tensorflow.reduce_mean", "bilevel_penalty_multivar_augm_lag.bilevel_penalty", "tensorflow.train.AdamOptimizer().minimize", "range", "tensorflow.train.AdamOptimizer", "opt_v[].minimize", "tensorflow.variables_initializer", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "numpy.ones", "tensorflow.train.AdamOptimizer", "range", "range", "range", "opt_v[].variables", "tensorflow.nn.softmax_cross_entropy_with_logits", "range", "tensorflow.nn.softmax_cross_entropy_with_logits", "range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "x_train_ph", ",", "x_test_ph", ",", "y_train_ph", ",", "y_test_ph", ",", "\n", "cls_train", ",", "cls_test", ",", "var_filt", ",", "var_cls", ",", "\n", "ntask", ",", "ntrain_per_task", ",", "ntest_per_task", ",", "nclass_per_task", ",", "\n", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ",", "istraining_ph", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "x_train_ph", "=", "x_train_ph", "\n", "self", ".", "x_test_ph", "=", "x_test_ph", "\n", "self", ".", "y_train_ph", "=", "y_train_ph", "\n", "self", ".", "y_test_ph", "=", "y_test_ph", "\n", "\n", "self", ".", "cls_train", "=", "cls_train", "\n", "self", ".", "cls_test", "=", "cls_test", "\n", "\n", "self", ".", "var_filt", "=", "var_filt", "# u", "\n", "self", ".", "var_cls", "=", "var_cls", "# v", "\n", "\n", "self", ".", "ntask", "=", "ntask", "\n", "self", ".", "ntrain_per_task", "=", "ntrain_per_task", "\n", "self", ".", "ntest_per_task", "=", "ntest_per_task", "\n", "self", ".", "nclass_per_task", "=", "nclass_per_task", "\n", "\n", "self", ".", "lr_u", "=", "lr_u", "\n", "self", ".", "lr_v", "=", "lr_v", "\n", "self", ".", "istraining_ph", "=", "istraining_ph", "\n", "\n", "\n", "\n", "self", ".", "f", "=", "tf", ".", "reduce_mean", "(", "[", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_test", "[", "i", "]", ",", "labels", "=", "self", ".", "y_test_ph", "[", "i", ",", ":", "]", ")", ")", "for", "i", "in", "range", "(", "self", ".", "ntask", ")", "]", ")", "\n", "\n", "self", ".", "g", "=", "tf", ".", "reduce_mean", "(", "[", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_train", "[", "i", "]", ",", "labels", "=", "self", ".", "y_train_ph", "[", "i", ",", ":", "]", ")", ")", "for", "i", "in", "range", "(", "self", ".", "ntask", ")", "]", ")", "\n", "\n", "self", ".", "bl", "=", "bilevel_penalty", "(", "sess", ",", "self", ".", "f", ",", "self", ".", "g", ",", "[", "self", ".", "var_filt", "]", ",", "self", ".", "var_cls", ",", "[", "lr_u", "]", ",", "lr_v", "*", "np", ".", "ones", "(", "self", ".", "ntask", ")", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ")", "\n", "\n", "self", ".", "min_u", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_u", ")", ".", "minimize", "(", "self", ".", "g", ",", "var_list", "=", "self", ".", "var_filt", ")", "\n", "\n", "opt_v", "=", "[", "[", "]", "for", "i", "in", "range", "(", "ntask", ")", "]", "\n", "self", ".", "reset_opt_v", "=", "[", "[", "]", "for", "i", "in", "range", "(", "ntask", ")", "]", "\n", "self", ".", "min_v", "=", "[", "[", "]", "for", "i", "in", "range", "(", "ntask", ")", "]", "\n", "for", "i", "in", "range", "(", "ntask", ")", ":", "\n", "            ", "opt_v", "[", "i", "]", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "1E-3", ")", "\n", "self", ".", "min_v", "[", "i", "]", "=", "opt_v", "[", "i", "]", ".", "minimize", "(", "self", ".", "g", ",", "var_list", "=", "self", ".", "var_cls", "[", "i", "]", ")", "\n", "self", ".", "reset_opt_v", "[", "i", "]", "=", "tf", ".", "variables_initializer", "(", "opt_v", "[", "i", "]", ".", "variables", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_meta_commonfilter.bilevel_meta.reset_v_func": [[55, 60], ["range", "bilevel_meta_commonfilter.bilevel_meta.sess.run", "bilevel_meta_commonfilter.bilevel_meta.sess.run"], "methods", ["None"], ["\n", "", "", "def", "reset_v_func", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "ntask", ")", ":", "\n", "            ", "for", "var", "in", "self", ".", "var_cls", "[", "i", "]", ":", "\n", "                ", "self", ".", "sess", ".", "run", "(", "var", ".", "initializer", ")", "\n", "", "self", ".", "sess", ".", "run", "(", "self", ".", "reset_opt_v", "[", "i", "]", ")", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_meta_commonfilter.bilevel_meta.update_pretrain_u": [[61, 72], ["feed_dict.update", "feed_dict.update", "range", "feed_dict.update", "bilevel_meta_commonfilter.bilevel_meta.sess.run", "bilevel_meta_commonfilter.bilevel_meta.sess.run"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["\n", "", "", "def", "update_pretrain_u", "(", "self", ",", "x_train", ",", "y_train", ",", "niter", "=", "1", ")", ":", "\n", "        ", "feed_dict", "=", "{", "}", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "x_train_u", ":", "x_train", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "y_train_u", ":", "y_train", "}", ")", "\n", "\n", "for", "it", "in", "range", "(", "niter", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_pretrain_u", ",", "feed_dict", ")", "\n", "\n", "", "feed_dict", ".", "update", "(", "{", "self", ".", "istraining_ph", ":", "False", "}", ")", "\n", "l1", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "pretrain_u", ",", "feed_dict", "=", "feed_dict", ")", "\n", "return", "l1", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_meta_commonfilter.bilevel_meta.update": [[73, 78], ["bilevel_meta_commonfilter.bilevel_meta.bl.update"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["\n", "", "def", "update", "(", "self", ",", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "niter", "=", "1", ")", ":", "\n", "\n", "        ", "feed_dict", "=", "{", "self", ".", "x_train_ph", ":", "x_train", ",", "self", ".", "y_train_ph", ":", "y_train", ",", "self", ".", "x_test_ph", ":", "x_test", ",", "self", ".", "y_test_ph", ":", "y_test", "}", "\n", "f", ",", "gvnorm", ",", "gvnu", ",", "lamb_g", "=", "self", ".", "bl", ".", "update", "(", "feed_dict", ",", "niter", ")", "\n", "return", "[", "f", ",", "gvnorm", ",", "gvnu", ",", "lamb_g", "]", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_meta_commonfilter.bilevel_meta.update_simple": [[79, 92], ["feed_dict.update", "feed_dict.update", "range", "bilevel_meta_commonfilter.bilevel_meta.sess.run", "feed_dict.update", "bilevel_meta_commonfilter.bilevel_meta.sess.run", "bilevel_meta_commonfilter.bilevel_meta.sess.run"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["\n", "", "def", "update_simple", "(", "self", ",", "x_train", ",", "y_train", ",", "niter", "=", "1", ")", ":", "\n", "        ", "feed_dict", "=", "{", "}", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "x_train_ph", ":", "x_train", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "y_train_ph", ":", "y_train", "}", ")", "\n", "\n", "for", "it", "in", "range", "(", "niter", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_v", ",", "feed_dict", ")", "\n", "", "self", ".", "sess", ".", "run", "(", "self", ".", "min_u", ",", "feed_dict", ")", "\n", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "istraining_ph", ":", "False", "}", ")", "\n", "l1", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "g", ",", "feed_dict", "=", "feed_dict", ")", "\n", "\n", "return", "l1", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_meta_commonfilter.bilevel_meta.update_cls_simple": [[93, 105], ["feed_dict.update", "feed_dict.update", "range", "feed_dict.update", "bilevel_meta_commonfilter.bilevel_meta.sess.run", "bilevel_meta_commonfilter.bilevel_meta.sess.run"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["\n", "", "def", "update_cls_simple", "(", "self", ",", "x_train", ",", "y_train", ",", "niter", "=", "1", ")", ":", "\n", "        ", "feed_dict", "=", "{", "}", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "x_train_ph", ":", "x_train", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "y_train_ph", ":", "y_train", "}", ")", "\n", "\n", "for", "it", "in", "range", "(", "niter", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_v", ",", "feed_dict", ")", "\n", "\n", "", "feed_dict", ".", "update", "(", "{", "self", ".", "istraining_ph", ":", "False", "}", ")", "\n", "l1", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "g", ",", "feed_dict", "=", "feed_dict", ")", "\n", "\n", "return", "l1", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_meta_commonfilter.l2norm_sq": [[7, 9], ["tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.square"], "function", ["None"], ["def", "l2norm_sq", "(", "xs", ")", ":", "\n", "    ", "return", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "t", ")", ")", "for", "t", "in", "xs", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.get_tasks": [[93, 159], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.delete", "numpy.random.shuffle", "range", "numpy.arange", "numpy.random.shuffle", "numpy.arange", "numpy.random.shuffle", "numpy.arange", "len", "print", "already_selected.append", "numpy.argwhere().flatten", "numpy.random.shuffle", "numpy.zeros", "range", "numpy.zeros", "range", "numpy.arange", "len", "numpy.argwhere"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["def", "get_tasks", "(", "X", ",", "Y", ",", "for_train", "=", "True", ")", ":", "\n", "\n", "    ", "X_train", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "ntrain_per_cls", ",", "height", ",", "width", ",", "nch", ")", ",", "np", ".", "float32", ")", "\n", "Y_train", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "ntrain_per_cls", ",", "nclass_per_task", ")", ",", "np", ".", "float32", ")", "\n", "\n", "X_test", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "ntest_per_cls", ",", "height", ",", "width", ",", "nch", ")", ",", "np", ".", "float32", ")", "\n", "Y_test", "=", "np", ".", "zeros", "(", "(", "meta_batch_size", ",", "nclass_per_task", "*", "ntest_per_cls", ",", "nclass_per_task", ")", ",", "np", ".", "float32", ")", "\n", "\n", "already_selected", "=", "[", "]", "\n", "for", "batch", "in", "range", "(", "meta_batch_size", ")", ":", "\n", "\n", "        ", "if", "for_train", ":", "\n", "            ", "class_idx", "=", "np", ".", "arange", "(", "test_classes_start", "*", "4", ")", "#4800", "\n", "start_in", "=", "0", "\n", "", "else", ":", "\n", "            ", "class_idx", "=", "test_classes_start", "*", "4", "+", "np", ".", "arange", "(", "(", "1623", "-", "test_classes_start", ")", "*", "4", ")", "#4800 + 423*4", "\n", "start_in", "=", "test_classes_start", "*", "4", "\n", "\n", "", "if", "len", "(", "already_selected", ")", "+", "nclass_per_task", ">=", "len", "(", "class_idx", ")", ":", "\n", "            ", "print", "(", "\"here\"", ")", "\n", "already_selected", "=", "[", "]", "\n", "\n", "", "class_idx", "=", "np", ".", "delete", "(", "class_idx", ",", "already_selected", ")", "\n", "\n", "np", ".", "random", ".", "shuffle", "(", "class_idx", ")", "\n", "\n", "selected_idx", "=", "class_idx", "[", ":", "nclass_per_task", "]", "\n", "for", "li_it", "in", "selected_idx", ":", "\n", "            ", "already_selected", ".", "append", "(", "li_it", "-", "start_in", ")", "\n", "#print(sorted(selected_idx))", "\n", "\n", "", "start_train", "=", "0", "\n", "start_test", "=", "0", "\n", "for", "num_cls", "in", "range", "(", "nclass_per_task", ")", ":", "\n", "\n", "            ", "idxs", "=", "np", ".", "argwhere", "(", "Y", "==", "selected_idx", "[", "num_cls", "]", ")", ".", "flatten", "(", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "idxs_train", "=", "idxs", "[", ":", "ntrain_per_cls", "]", "\n", "idxs_test", "=", "idxs", "[", "ntrain_per_cls", ":", "ntrain_per_cls", "+", "ntest_per_cls", "]", "\n", "\n", "X_train", "[", "batch", "]", "[", "start_train", ":", "start_train", "+", "ntrain_per_cls", "]", "=", "X", "[", "idxs_train", "]", "\n", "X_test", "[", "batch", "]", "[", "start_test", ":", "start_test", "+", "ntest_per_cls", "]", "=", "X", "[", "idxs_test", "]", "\n", "\n", "Y_train", "[", "batch", "]", "[", "start_train", ":", "start_train", "+", "ntrain_per_cls", "]", "=", "np", ".", "zeros", "(", "[", "ntrain_per_cls", ",", "nclass_per_task", "]", ")", "\n", "for", "j", "in", "range", "(", "ntrain_per_cls", ")", ":", "\n", "                ", "Y_train", "[", "batch", "]", "[", "start_train", "+", "j", "]", "[", "num_cls", "]", "=", "1", "\n", "\n", "", "Y_test", "[", "batch", "]", "[", "start_test", ":", "start_test", "+", "ntest_per_cls", "]", "=", "np", ".", "zeros", "(", "[", "ntest_per_cls", ",", "nclass_per_task", "]", ")", "\n", "for", "j", "in", "range", "(", "ntest_per_cls", ")", ":", "\n", "                ", "Y_test", "[", "batch", "]", "[", "start_test", "+", "j", "]", "[", "num_cls", "]", "=", "1", "\n", "\n", "", "start_train", "+=", "ntrain_per_cls", "\n", "start_test", "+=", "ntest_per_cls", "\n", "\n", "", "task_idx_train", "=", "np", ".", "arange", "(", "(", "ntrain_per_cls", ")", "*", "nclass_per_task", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "task_idx_train", ")", "\n", "X_train", "[", "batch", "]", "=", "X_train", "[", "batch", "]", "[", "task_idx_train", "]", "\n", "Y_train", "[", "batch", "]", "=", "Y_train", "[", "batch", "]", "[", "task_idx_train", "]", "\n", "\n", "task_idx_test", "=", "np", ".", "arange", "(", "(", "ntest_per_cls", ")", "*", "nclass_per_task", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "task_idx_test", ")", "\n", "X_test", "[", "batch", "]", "=", "X_test", "[", "batch", "]", "[", "task_idx_test", "]", "\n", "Y_test", "[", "batch", "]", "=", "Y_test", "[", "batch", "]", "[", "task_idx_test", "]", "\n", "\n", "#print(sorted(already_selected), len(np.unique(already_selected)))", "\n", "", "return", "X_train", ",", "Y_train", ",", "X_test", ",", "Y_test", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.make_filter1": [[185, 212], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.layers.dropout", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.layers.dropout", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.layers.dropout", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.relu", "tensorflow.nn.max_pool", "tensorflow.layers.dropout", "tensorflow.reshape", "tensorflow.nn.bias_add", "tensorflow.nn.bias_add", "tensorflow.nn.bias_add", "tensorflow.nn.bias_add", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.nn.conv2d", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.nn.conv2d", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.nn.conv2d", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.nn.conv2d"], "function", ["None"], ["def", "make_filter1", "(", "ins", ")", ":", "\n", "    ", "W1", "=", "tf", ".", "get_variable", "(", "'W1'", ",", "[", "3", ",", "3", ",", "1", ",", "64", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b1", "=", "tf", ".", "get_variable", "(", "'b1'", ",", "[", "64", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "c1", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "bias_add", "(", "tf", ".", "nn", ".", "conv2d", "(", "ins", ",", "W1", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ",", "b1", ")", ")", "\n", "p1", "=", "tf", ".", "nn", ".", "max_pool", "(", "c1", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "'VALID'", ")", "\n", "p1", "=", "tf", ".", "layers", ".", "dropout", "(", "p1", ",", "rate", "=", "0.25", ",", "training", "=", "istraining_ph", ")", "\n", "\n", "W2", "=", "tf", ".", "get_variable", "(", "'W2'", ",", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b2", "=", "tf", ".", "get_variable", "(", "'b2'", ",", "[", "64", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "c2", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "bias_add", "(", "tf", ".", "nn", ".", "conv2d", "(", "p1", ",", "W2", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ",", "b2", ")", ")", "\n", "p2", "=", "tf", ".", "nn", ".", "max_pool", "(", "c2", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "'VALID'", ")", "\n", "p2", "=", "tf", ".", "layers", ".", "dropout", "(", "p2", ",", "rate", "=", "0.25", ",", "training", "=", "istraining_ph", ")", "\n", "\n", "W3", "=", "tf", ".", "get_variable", "(", "'W3'", ",", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b3", "=", "tf", ".", "get_variable", "(", "'b3'", ",", "[", "64", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "c3", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "bias_add", "(", "tf", ".", "nn", ".", "conv2d", "(", "p2", ",", "W3", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ",", "b3", ")", ")", "\n", "p3", "=", "tf", ".", "nn", ".", "max_pool", "(", "c3", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "'VALID'", ")", "\n", "p3", "=", "tf", ".", "layers", ".", "dropout", "(", "p3", ",", "rate", "=", "0.25", ",", "training", "=", "istraining_ph", ")", "\n", "\n", "W4", "=", "tf", ".", "get_variable", "(", "'W4'", ",", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b4", "=", "tf", ".", "get_variable", "(", "'b4'", ",", "[", "64", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "c4", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "bias_add", "(", "tf", ".", "nn", ".", "conv2d", "(", "p3", ",", "W4", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ",", "b4", ")", ")", "\n", "p4", "=", "tf", ".", "nn", ".", "max_pool", "(", "c4", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "'VALID'", ")", "\n", "p4", "=", "tf", ".", "layers", ".", "dropout", "(", "p4", ",", "rate", "=", "0.25", ",", "training", "=", "istraining_ph", ")", "\n", "a4", "=", "tf", ".", "reshape", "(", "p4", ",", "[", "-", "1", ",", "64", "]", ")", "\n", "out", "=", "a4", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.make_classifier1": [[213, 218], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.bias_add", "tensorflow.matmul", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer"], "function", ["None"], ["", "def", "make_classifier1", "(", "ins", ",", "d", "=", "64", ",", "K", "=", "nclass_per_task", ")", ":", "\n", "    ", "W1", "=", "tf", ".", "get_variable", "(", "'W1'", ",", "[", "d", ",", "K", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b1", "=", "tf", ".", "get_variable", "(", "'b1'", ",", "[", "K", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "out", "=", "tf", ".", "nn", ".", "bias_add", "(", "tf", ".", "matmul", "(", "ins", ",", "W1", ")", ",", "b1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_old": [[219, 226], ["tensorflow.variable_scope", "tensorflow.contrib.layers.conv2d", "tensorflow.nn.relu", "tensorflow.contrib.layers.xavier_initializer_conv2d"], "function", ["None"], ["", "def", "conv_block_old", "(", "inputs", ",", "out_channels", ",", "name", "=", "'conv'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "conv", "=", "tcl", ".", "conv2d", "(", "inputs", ",", "out_channels", ",", "3", ",", "stride", "=", "2", ",", "activation_fn", "=", "None", ",", "normalizer_fn", "=", "tcl", ".", "batch_norm", ",", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer_conv2d", "(", "tf", ".", "float32", ")", ")", "\n", "if", "name", "!=", "'conv_4'", ":", "\n", "            ", "conv", "=", "tf", ".", "nn", ".", "relu", "(", "conv", ")", "\n", "\n", "", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new": [[227, 234], ["tensorflow.variable_scope", "tensorflow.contrib.layers.conv2d", "tensorflow.layers.max_pooling2d", "tensorflow.nn.relu", "tensorflow.contrib.layers.xavier_initializer_conv2d"], "function", ["None"], ["", "", "def", "conv_block_new", "(", "inputs", ",", "out_channels", ",", "name", "=", "'conv'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "conv", "=", "tcl", ".", "conv2d", "(", "inputs", ",", "out_channels", ",", "3", ",", "activation_fn", "=", "None", ",", "normalizer_fn", "=", "tcl", ".", "batch_norm", ",", "weights_initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer_conv2d", "(", "tf", ".", "float32", ")", ")", "\n", "if", "name", "!=", "'conv_4'", ":", "\n", "            ", "conv", "=", "tf", ".", "nn", ".", "relu", "(", "conv", ")", "\n", "", "conv", "=", "tf", ".", "layers", ".", "max_pooling2d", "(", "conv", ",", "pool_size", "=", "2", ",", "strides", "=", "2", ")", "\n", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.encoder": [[235, 243], ["tensorflow.variable_scope", "test_bilevel_few_shot_learning_omniglot.conv_block_new", "test_bilevel_few_shot_learning_omniglot.conv_block_new", "test_bilevel_few_shot_learning_omniglot.conv_block_new", "test_bilevel_few_shot_learning_omniglot.conv_block_new", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.conv_block_new"], ["", "", "def", "encoder", "(", "x", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "net", "=", "conv_block_new", "(", "x", ",", "64", ",", "name", "=", "'conv_1'", ")", "\n", "net", "=", "conv_block_new", "(", "net", ",", "64", ",", "name", "=", "'conv_2'", ")", "\n", "net", "=", "conv_block_new", "(", "net", ",", "64", ",", "name", "=", "'conv_3'", ")", "\n", "net", "=", "conv_block_new", "(", "net", ",", "64", ",", "name", "=", "'conv_4'", ")", "\n", "net", "=", "tf", ".", "reshape", "(", "net", ",", "(", "-", "1", ",", "64", ")", ")", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_few_shot_learning_omniglot.top_layer": [[244, 254], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.sqrt", "tensorflow.sqrt", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.matmul"], "function", ["None"], ["", "", "def", "top_layer", "(", "ins", ",", "K", "=", "20", ")", ":", "\n", "    ", "W_top", "=", "tf", ".", "get_variable", "(", "'W_top'", ",", "[", "64", ",", "K", "]", ",", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.01", ")", ")", "\n", "b_top", "=", "tf", ".", "get_variable", "(", "'b_top'", ",", "[", "K", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.001", ")", ")", "\n", "\n", "wat", "=", "0.001", "\n", "ins_norm", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "ins", "**", "2", ",", "axis", "=", "1", ",", "keep_dims", "=", "True", ")", "+", "wat", "**", "2", ")", "\n", "W_top_norm", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "W_top", "**", "2", ",", "axis", "=", "0", ",", "keep_dims", "=", "True", ")", "+", "b_top", "**", "2", ")", "\n", "\n", "out", "=", "10.", "*", "(", "tf", ".", "matmul", "(", "ins", ",", "W_top", ")", "+", "wat", "*", "b_top", ")", "/", "(", "ins_norm", "*", "W_top_norm", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_poisoning.bilevel_poisoning.__init__": [[10, 50], ["tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.nn.softmax", "tensorflow.nn.softmax", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.assign", "tensorflow.assign", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "bilevel_penalty_aug_lag.bilevel_penalty", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat"], "methods", ["None"], ["\n", "    ", "def", "__init__", "(", "self", ",", "sess", ",", "x_train_tf", ",", "x_val_tf", ",", "x_test_tf", ",", "x_poison_tf", ",", "x_original_tf", ",", "y_train_tf", ",", "y_val_tf", ",", "y_test_tf", ",", "y_poison_tf", ",", "\n", "Npoison", ",", "height", ",", "width", ",", "nch", ",", "\n", "#model,", "\n", "var_cls", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "x_train_tf", "=", "x_train_tf", "\n", "self", ".", "x_val_tf", "=", "x_val_tf", "\n", "self", ".", "x_test_tf", "=", "x_test_tf", "\n", "self", ".", "x_poison_tf", "=", "x_poison_tf", "\n", "self", ".", "x_original_tf", "=", "x_original_tf", "\n", "\n", "self", ".", "y_train_tf", "=", "y_train_tf", "\n", "self", ".", "y_val_tf", "=", "y_val_tf", "\n", "self", ".", "y_test_tf", "=", "y_test_tf", "\n", "self", ".", "y_poison_tf", "=", "y_poison_tf", "\n", "\n", "\n", "self", ".", "cls_train", "=", "tf", ".", "matmul", "(", "self", ".", "x_train_tf", ",", "var_cls", ")", "\n", "self", ".", "cls_val", "=", "tf", ".", "matmul", "(", "self", ".", "x_val_tf", ",", "var_cls", ")", "\n", "self", ".", "cls_test", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "matmul", "(", "self", ".", "x_test_tf", ",", "var_cls", ")", ")", "\n", "\n", "self", ".", "Npoison", "=", "Npoison", "\n", "self", ".", "height", "=", "height", "\n", "self", ".", "width", "=", "width", "\n", "self", ".", "nch", "=", "nch", "\n", "\n", "self", ".", "u", "=", "tf", ".", "get_variable", "(", "'u'", ",", "shape", "=", "(", "Npoison", ",", "self", ".", "height", "*", "self", ".", "width", "*", "self", ".", "nch", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "0", ",", "1", ")", ")", "\n", "self", ".", "assign_u", "=", "tf", ".", "assign", "(", "self", ".", "u", ",", "self", ".", "x_poison_tf", ")", "\n", "self", ".", "cls_poison", "=", "tf", ".", "matmul", "(", "self", ".", "u", ",", "var_cls", ")", "\n", "\n", "self", ".", "v", "=", "var_cls", "\n", "\n", "self", ".", "f", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_val", ",", "labels", "=", "self", ".", "y_val_tf", ")", ")", "\n", "\n", "self", ".", "weight_decay", "=", "tf", ".", "nn", ".", "l2_loss", "(", "var_cls", ")", "\n", "\n", "self", ".", "g", "=", "0.5", "*", "0.01", "*", "self", ".", "weight_decay", "+", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "tf", ".", "concat", "(", "[", "self", ".", "cls_poison", ",", "self", ".", "cls_train", "]", ",", "0", ")", ",", "labels", "=", "tf", ".", "concat", "(", "[", "self", ".", "y_poison_tf", ",", "self", ".", "y_train_tf", "]", ",", "0", ")", ")", ")", "\n", "\n", "self", ".", "bl", "=", "bilevel_penalty", "(", "sess", ",", "self", ".", "f", ",", "self", ".", "g", ",", "self", ".", "u", ",", "self", ".", "v", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ")", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_poisoning.bilevel_poisoning.train_together": [[51, 60], ["bilevel_poisoning.bilevel_poisoning.sess.run", "bilevel_poisoning.bilevel_poisoning.bl.update", "bilevel_poisoning.bilevel_poisoning.sess.run"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["\n", "self", ".", "loss_simple", "=", "0.5", "*", "0.01", "*", "self", ".", "weight_decay", "+", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_train", ",", "labels", "=", "self", ".", "y_train_tf", ")", ")", "\n", "self", ".", "optim_simple", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "1E-3", ")", ".", "minimize", "(", "self", ".", "loss_simple", ",", "var_list", "=", "self", ".", "v", ")", "\n", "\n", "\n", "", "def", "train_together", "(", "self", ",", "x_train", ",", "y_train", ",", "x_val", ",", "y_val", ",", "x_poisoned", ",", "y_poisoned", ",", "x_original", ",", "niter", "=", "1", ")", ":", "\n", "\n", "        ", "self", ".", "sess", ".", "run", "(", "self", ".", "assign_u", ",", "feed_dict", "=", "{", "self", ".", "x_poison_tf", ":", "x_poisoned", "}", ")", "\n", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", ",", "self", ".", "y_train_tf", ":", "y_train", ",", "self", ".", "x_val_tf", ":", "x_val", ",", "self", ".", "y_val_tf", ":", "y_val", ",", "self", ".", "y_poison_tf", ":", "y_poisoned", ",", "self", ".", "x_original_tf", ":", "x_original", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_poisoning.bilevel_poisoning.train_simple": [[61, 68], ["range", "print", "print", "print", "bilevel_poisoning.bilevel_poisoning.sess.run", "bilevel_poisoning.bilevel_poisoning.eval_accuracy", "bilevel_poisoning.bilevel_poisoning.eval_accuracy"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.bilevel_poisoning.eval_accuracy", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.bilevel_poisoning.eval_accuracy"], ["f", ",", "gvnorm", ",", "gv_nu", ",", "lamb_g", "=", "self", ".", "bl", ".", "update", "(", "feed_dict", ",", "niter", ")", "\n", "new_x_poisoned", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "u", ")", "\n", "\n", "return", "[", "f", ",", "gvnorm", ",", "gv_nu", ",", "lamb_g", ",", "new_x_poisoned", "]", "\n", "\n", "", "def", "train_simple", "(", "self", ",", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "nepochs", ")", ":", "\n", "        ", "for", "epoch", "in", "range", "(", "nepochs", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "optim_simple", ",", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", ",", "self", ".", "y_train_tf", ":", "y_train", "}", ")", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_poisoning.bilevel_poisoning.eval_accuracy": [[69, 75], ["bilevel_poisoning.bilevel_poisoning.sess.run", "numpy.sum", "numpy.float32", "len", "numpy.argmax", "numpy.argmax"], "methods", ["None"], ["\n", "", "print", "(", "\"Accuracy simple\"", ")", "\n", "print", "(", "\"Train Accuracy:\"", ",", "self", ".", "eval_accuracy", "(", "x_train", ",", "y_train", ")", ")", "\n", "print", "(", "\"Test Accuracy:\"", ",", "self", ".", "eval_accuracy", "(", "x_test", ",", "y_test", ")", ",", "\"\\n\"", ")", "\n", "\n", "", "def", "eval_accuracy", "(", "self", ",", "x_test", ",", "y_test", ")", ":", "\n", "        ", "acc", "=", "0", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_poisoning.bilevel_poisoning.eval_accuracy_per_class": [[81, 89], ["numpy.argmax", "range", "numpy.argwhere().flatten", "bilevel_poisoning.bilevel_poisoning.sess.run", "acc.append", "numpy.argwhere", "numpy.sum", "float", "len", "numpy.argmax", "numpy.argmax"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["", "def", "eval_accuracy_per_class", "(", "self", ",", "x_test", ",", "y_test", ")", ":", "\n", "        ", "acc", "=", "[", "]", "\n", "all_lables", "=", "np", ".", "argmax", "(", "y_test", ",", "1", ")", "\n", "for", "label", "in", "range", "(", "10", ")", ":", "\n", "            ", "ind", "=", "np", ".", "argwhere", "(", "all_lables", "==", "label", ")", ".", "flatten", "(", ")", "\n", "pred", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "cls_test", ",", "{", "self", ".", "x_test_tf", ":", "x_test", "[", "ind", "]", "}", ")", "\n", "acc", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "argmax", "(", "pred", ",", "1", ")", "==", "np", ".", "argmax", "(", "y_test", "[", "ind", "]", ",", "1", ")", ")", "/", "float", "(", "len", "(", "ind", ")", ")", ")", "\n", "", "return", "acc", "", "", "", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_poisoning_targeted.get_balanced_set": [[13, 32], ["len", "int", "range", "numpy.arange", "numpy.random.shuffle", "numpy.unique", "numpy.argwhere().flatten", "numpy.random.shuffle", "len", "numpy.array", "numpy.array", "numpy.concatenate", "numpy.concatenate", "numpy.argwhere"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["np", ".", "random", ".", "shuffle", "(", "clss", ")", "\n", "clss", "=", "clss", "[", ":", "num_per_class", "]", "\n", "if", "i", "==", "0", ":", "\n", "            ", "X_", "=", "np", ".", "array", "(", "X", "[", "clss", "]", ")", "\n", "Y_", "=", "np", ".", "array", "(", "Y", "[", "clss", "]", ")", "\n", "", "else", ":", "\n", "            ", "X_", "=", "np", ".", "concatenate", "(", "[", "X_", ",", "X", "[", "clss", "]", "]", ")", "\n", "Y_", "=", "np", ".", "concatenate", "(", "[", "Y_", ",", "Y", "[", "clss", "]", "]", ")", "\n", "\n", "", "", "idx", "=", "np", ".", "arange", "(", "len", "(", "X_", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idx", ")", "\n", "X_", "=", "X_", "[", "idx", "]", "\n", "Y_", "=", "Y_", "[", "idx", "]", "\n", "return", "X_", ",", "Y_", "\n", "\n", "", "train_points", "=", "1000", "\n", "val_points", "=", "4000", "\n", "test_points", "=", "5000", "\n", "poisoned_points", "=", "50", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_importance_aug_lag.bilevel_importance.__init__": [[9, 35], ["tensorflow.placeholder", "tensorflow.Variable", "tensorflow.assign", "tensorflow.reduce_mean", "bilevel_penalty", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer().minimize", "numpy.zeros", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.tanh", "tensorflow.multiply", "tensorflow.train.AdamOptimizer", "tensorflow.nn.softmax_cross_entropy_with_logits"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "x_train_tf", ",", "x_test_tf", ",", "y_train_tf", ",", "y_test_tf", ",", "cls_train", ",", "cls_test", ",", "var_cls", ",", "batch_size", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "x_train_tf", "=", "x_train_tf", "\n", "self", ".", "x_test_tf", "=", "x_test_tf", "\n", "self", ".", "y_train_tf", "=", "y_train_tf", "\n", "self", ".", "y_test_tf", "=", "y_test_tf", "\n", "self", ".", "cls_train", "=", "cls_train", "\n", "self", ".", "cls_test", "=", "cls_test", "\n", "self", ".", "var_cls", "=", "var_cls", "# v", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "\n", "self", ".", "importance_atanh_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "self", ".", "batch_size", "]", ",", "'importance_atanh_tf'", ")", "\n", "self", ".", "importance_atanh", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "(", "self", ".", "batch_size", ")", ",", "np", ".", "float32", ")", ",", "name", "=", "'importance_atanh'", ")", "\n", "self", ".", "assign_importance_atanh", "=", "tf", ".", "assign", "(", "self", ".", "importance_atanh", ",", "self", ".", "importance_atanh_tf", ")", "\n", "importance", "=", "0.5", "*", "(", "tf", ".", "tanh", "(", "self", ".", "importance_atanh", ")", "+", "1.", ")", "# between 0 and 1", "\n", "\n", "self", ".", "f", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_test", ",", "labels", "=", "self", ".", "y_test_tf", ")", ")", "\n", "self", ".", "g", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "importance", ",", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_train", ",", "labels", "=", "self", ".", "y_train_tf", ")", ")", ")", "/", "tf", ".", "reduce_sum", "(", "importance", ")", "\n", "\n", "self", ".", "bl", "=", "bilevel_penalty", "(", "sess", ",", "self", ".", "f", ",", "self", ".", "g", ",", "self", ".", "importance_atanh", ",", "var_cls", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ")", "\n", "\n", "self", ".", "loss_simple", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_train", ",", "labels", "=", "self", ".", "y_train_tf", ")", ")", "\n", "self", ".", "optim_simple", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr_v", ")", ".", "minimize", "(", "self", ".", "loss_simple", ",", "var_list", "=", "self", ".", "var_cls", ")", "\n", "\n", "", "def", "train", "(", "self", ",", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "importance_atanh", ",", "niter", "=", "1", ",", "update", "=", "0", ")", ":", "\n", "        ", "gvnorm", "=", "0", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_importance_aug_lag.bilevel_importance.train": [[36, 47], ["bilevel_importance_aug_lag.bilevel_importance.sess.run", "bilevel_importance_aug_lag.bilevel_importance.bl.update", "bilevel_importance_aug_lag.bilevel_importance.sess.run"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["self", ".", "sess", ".", "run", "(", "self", ".", "assign_importance_atanh", ",", "feed_dict", "=", "{", "self", ".", "importance_atanh_tf", ":", "importance_atanh", "}", ")", "\n", "\n", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", ",", "self", ".", "y_train_tf", ":", "y_train", ",", "self", ".", "x_test_tf", ":", "x_test", ",", "self", ".", "y_test_tf", ":", "y_test", "}", "\n", "\n", "#Penalty Method", "\n", "f", ",", "gvnorm", ",", "gv_nu", ",", "lamb_g", "=", "self", ".", "bl", ".", "update", "(", "feed_dict", ",", "niter", ",", "update", ")", "\n", "\n", "timp_atanh", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "importance_atanh", ")", "\n", "\n", "return", "[", "f", ",", "gvnorm", ",", "gv_nu", ",", "lamb_g", ",", "timp_atanh", "]", "\n", "\n", "", "def", "train_simple", "(", "self", ",", "x_train", ",", "y_train", ",", "nepochs", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_importance_aug_lag.bilevel_importance.train_simple": [[48, 66], ["int", "range", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "numpy.floor", "numpy.arange", "numpy.random.shuffle", "range", "range", "bilevel_importance_aug_lag.bilevel_importance.sess.run", "bilevel_importance_aug_lag.bilevel_importance.sess.run", "print", "float", "min"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple"], ["        ", "batch_size", "=", "self", ".", "batch_size", "\n", "Ntrain", "=", "x_train", ".", "shape", "[", "0", "]", "\n", "nb_batches", "=", "int", "(", "np", ".", "floor", "(", "float", "(", "Ntrain", ")", "/", "batch_size", ")", ")", "\n", "for", "epoch", "in", "range", "(", "nepochs", ")", ":", "\n", "            ", "ind_shuf", "=", "np", ".", "arange", "(", "Ntrain", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "ind_shuf", ")", "\n", "for", "batch", "in", "range", "(", "nb_batches", ")", ":", "\n", "                ", "ind_batch", "=", "range", "(", "batch_size", "*", "batch", ",", "min", "(", "batch_size", "*", "(", "1", "+", "batch", ")", ",", "Ntrain", ")", ")", "\n", "ind_tr", "=", "ind_shuf", "[", "ind_batch", "]", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "optim_simple", ",", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", "[", "ind_tr", ",", ":", "]", ",", "self", ".", "y_train_tf", ":", "y_train", "[", "ind_tr", ",", ":", "]", "}", ")", "\n", "", "if", "epoch", "%", "50", "==", "0", ":", "\n", "                ", "l", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "loss_simple", ",", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", "[", "ind_tr", ",", ":", "]", ",", "self", ".", "y_train_tf", ":", "y_train", "[", "ind_tr", ",", ":", "]", "}", ")", "\n", "print", "(", "'epoch=%d/%d, loss=%f'", "%", "(", "epoch", ",", "nepochs", ",", "l", ")", ")", "\n", "\n", "", "", "return", "self", ".", "eval_simple", "(", "x_train", ",", "y_train", ")", "\n", "\n", "", "def", "eval_simple", "(", "self", ",", "x_test", ",", "y_test", ")", ":", "\n", "        ", "batch_size", "=", "self", ".", "batch_size", "\n", "Ntest", "=", "x_test", ".", "shape", "[", "0", "]", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.bilevel_importance_aug_lag.bilevel_importance.eval_simple": [[67, 83], ["int", "range", "numpy.float32", "print", "numpy.floor", "numpy.ones", "range", "bilevel_importance_aug_lag.bilevel_importance.sess.run", "numpy.sum", "numpy.argmax", "min", "float", "numpy.argmax", "numpy.argmax"], "methods", ["None"], ["nb_batches", "=", "int", "(", "np", ".", "floor", "(", "float", "(", "Ntest", ")", "/", "batch_size", ")", ")", "\n", "acc", "=", "0", "\n", "preds", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "Ntest", ",", "np", ".", "int32", ")", "\n", "if", "Ntest", "%", "int", "(", "batch_size", ")", "is", "not", "0", ":", "\n", "            ", "nb_batches", "+=", "1", "\n", "\n", "", "for", "batch", "in", "range", "(", "nb_batches", ")", ":", "\n", "            ", "ind_batch", "=", "range", "(", "batch_size", "*", "batch", ",", "min", "(", "batch_size", "*", "(", "1", "+", "batch", ")", ",", "Ntest", ")", ")", "\n", "pred", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "cls_test", ",", "{", "self", ".", "x_test_tf", ":", "x_test", "[", "ind_batch", ",", ":", "]", "}", ")", "\n", "acc", "+=", "np", ".", "sum", "(", "np", ".", "argmax", "(", "pred", ",", "1", ")", "==", "np", ".", "argmax", "(", "y_test", "[", "ind_batch", ",", ":", "]", ",", "1", ")", ")", "\n", "preds", "[", "ind_batch", "]", "=", "np", ".", "argmax", "(", "pred", ",", "1", ")", "\n", "\n", "", "acc", "/=", "np", ".", "float32", "(", "nb_batches", "*", "batch_size", ")", "\n", "print", "(", "'mean acc = %f'", "%", "(", "acc", ")", ")", "\n", "return", "[", "acc", ",", "preds", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_importance_learning_cifar10.main": [[43, 172], ["tensorflow.set_random_seed", "tensorflow.Session", "keras.datasets.cifar10.load_data", "X_train_all.astype.astype", "X_test.astype.astype", "keras.utils.to_categorical", "keras.utils.to_categorical", "len", "len", "int", "range", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "cleverhans.utils_keras.KerasModelWrapper().get_logits", "cleverhans.utils_keras.KerasModelWrapper().get_logits", "bilevel_importance_aug_lag.bilevel_importance", "tf.Session.run", "bilevel_importance_aug_lag.bilevel_importance.train_simple", "tf.Session.close", "numpy.argmax", "numpy.zeros", "tensorflow.variable_scope", "cifar10_keras_model.CIFAR", "tensorflow.global_variables_initializer", "numpy.arctanh", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "numpy.arctanh", "range", "len", "numpy.random.randint", "cleverhans.utils_keras.KerasModelWrapper", "cleverhans.utils_keras.KerasModelWrapper", "numpy.ones", "numpy.ones", "numpy.arctanh", "numpy.where", "int", "numpy.arange", "numpy.random.shuffle", "range", "numpy.floor", "range", "numpy.random.choice", "datagen.flow", "datagen.flow", "bilevel_importance_aug_lag.bilevel_importance.train", "numpy.maximum", "numpy.arctanh", "tf.Session.run", "print", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "print", "print", "numpy.argmax", "min", "numpy.mean", "numpy.minimum", "float", "len", "len", "numpy.tanh", "numpy.mean", "len", "numpy.float", "numpy.where"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.pre_process_svhn_data.load_data", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.train_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.cifar10_experiments.cifar10_keras_model.CIFAR", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.train", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple"], ["def", "main", "(", "argv", "=", "None", ")", ":", "\n", "\n", "    ", "tf", ".", "set_random_seed", "(", "1234", ")", "\n", "sess", "=", "tf", ".", "Session", "(", "config", "=", "config", ")", "\n", "\n", "## Read data", "\n", "(", "X_train_all", ",", "Y_train_all", ")", ",", "(", "X_test", ",", "Y_test", ")", "=", "cifar10", ".", "load_data", "(", ")", "\n", "\n", "X_train_all", "=", "X_train_all", ".", "astype", "(", "'float32'", ")", "\n", "X_test", "=", "X_test", ".", "astype", "(", "'float32'", ")", "\n", "X_train_all", "/=", "255", "\n", "X_test", "/=", "255", "\n", "\n", "Y_train_all", "=", "keras", ".", "utils", ".", "to_categorical", "(", "Y_train_all", ",", "nclass", ")", "\n", "Y_test", "=", "keras", ".", "utils", ".", "to_categorical", "(", "Y_test", ",", "nclass", ")", "\n", "\n", "points", "=", "40000", "\n", "val_points", "=", "10000", "\n", "\n", "X_train", "=", "X_train_all", "[", ":", "points", "]", "\n", "Y_train", "=", "Y_train_all", "[", ":", "points", "]", "\n", "X_val", "=", "X_train_all", "[", "points", ":", "points", "+", "val_points", "]", "\n", "Y_val", "=", "Y_train_all", "[", "points", ":", "points", "+", "val_points", "]", "\n", "\n", "Ntrain", "=", "len", "(", "X_train", ")", "\n", "Nval", "=", "len", "(", "X_val", ")", "\n", "\n", "corrupt", "=", "int", "(", "0.25", "*", "len", "(", "X_train", ")", ")", "\n", "for", "i", "in", "range", "(", "corrupt", ")", ":", "\n", "        ", "curr_class", "=", "np", ".", "argmax", "(", "Y_train", "[", "i", "]", ")", "\n", "Y_train", "[", "i", "]", "=", "np", ".", "zeros", "(", "10", ")", "\n", "\n", "#random label", "\n", "j", "=", "curr_class", "\n", "while", "j", "==", "curr_class", ":", "\n", "            ", "j", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "10", ")", "\n", "\n", "#shift 1 label", "\n", "#j = (curr_class + 1)%10", "\n", "\n", "", "Y_train", "[", "i", "]", "[", "j", "]", "=", "1", "\n", "\n", "\n", "", "x_train_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "batch_size", ",", "height", ",", "width", ",", "nch", ")", ")", "\n", "y_train_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "batch_size", ",", "nclass", ")", ")", "\n", "\n", "x_val_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "height", ",", "width", ",", "nch", ")", ")", "\n", "y_val_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "nclass", ")", ")", "\n", "\n", "scope_model", "=", "'cifar_classifier'", "\n", "with", "tf", ".", "variable_scope", "(", "scope_model", ",", "reuse", "=", "False", ")", ":", "\n", "        ", "model", "=", "CIFAR", "(", "X_train", ",", "nclass", ")", "\n", "\n", "", "cls_train", "=", "KerasModelWrapper", "(", "model", ")", ".", "get_logits", "(", "x_train_tf", ")", "\n", "cls_test", "=", "KerasModelWrapper", "(", "model", ")", ".", "get_logits", "(", "x_val_tf", ")", "\n", "\n", "var_cls", "=", "model", ".", "trainable_weights", "\n", "\n", "#########################################################################################################", "\n", "## Bilevel training", "\n", "#########################################################################################################", "\n", "bl_imp", "=", "bilevel_importance", "(", "sess", ",", "x_train_tf", ",", "x_val_tf", ",", "y_train_tf", ",", "y_val_tf", ",", "cls_train", ",", "cls_test", ",", "var_cls", ",", "\n", "batch_size", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ")", "\n", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "# Pretrain lower level", "\n", "bl_imp", ".", "train_simple", "(", "X_val", ",", "Y_val", ",", "101", ")", "\n", "\n", "if", "False", ":", "\n", "        ", "importance_atanh", "=", "np", ".", "ones", "(", "(", "Ntrain", ")", ")", "*", "0.8", "\n", "importance_atanh", "=", "np", ".", "arctanh", "(", "2.", "*", "importance_atanh", "-", "1.", ")", "\n", "", "else", ":", "\n", "# Predictions based on pretrained model", "\n", "        ", "print", "(", "\"Test Accuracy\"", ")", "\n", "_", ",", "__", "=", "bl_imp", ".", "eval_simple", "(", "X_test", ",", "Y_test", ")", "\n", "print", "(", "\"Train Accuracy\"", ")", "\n", "_", ",", "y_train_init", "=", "bl_imp", ".", "eval_simple", "(", "X_train", ",", "Y_train", ")", "\n", "\n", "importance_atanh", "=", "np", ".", "ones", "(", "(", "Ntrain", ")", ")", "*", "np", ".", "arctanh", "(", "2.", "*", "0.2", "-", "1.", ")", "#0.2", "\n", "ind_correct", "=", "np", ".", "where", "(", "np", ".", "argmax", "(", "Y_train", ",", "1", ")", "==", "y_train_init", ")", "[", "0", "]", "\n", "importance_atanh", "[", "ind_correct", "]", "=", "np", ".", "arctanh", "(", "2.", "*", "0.8", "-", "1.", ")", "#0.8", "\n", "\n", "", "if", "True", ":", "\n", "        ", "for", "epoch", "in", "range", "(", "nepochs", ")", ":", "\n", "            ", "nb_batches", "=", "int", "(", "np", ".", "floor", "(", "float", "(", "Ntrain", ")", "/", "batch_size", ")", ")", "\n", "ind_shuf", "=", "np", ".", "arange", "(", "Ntrain", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "ind_shuf", ")", "\n", "\n", "for", "batch", "in", "range", "(", "nb_batches", ")", ":", "\n", "                ", "ind_batch", "=", "range", "(", "batch_size", "*", "batch", ",", "min", "(", "batch_size", "*", "(", "1", "+", "batch", ")", ",", "Ntrain", ")", ")", "\n", "ind_tr", "=", "ind_shuf", "[", "ind_batch", "]", "\n", "ind_val", "=", "np", ".", "random", ".", "choice", "(", "Nval", ",", "size", "=", "(", "batch_size", ")", ",", "replace", "=", "False", ")", "\n", "\n", "# Using data augmentation", "\n", "\n", "for", "train_X_batch", ",", "train_Y_batch", "in", "datagen", ".", "flow", "(", "X_train", "[", "ind_tr", "]", ",", "Y_train", "[", "ind_tr", "]", ",", "batch_size", "=", "len", "(", "ind_tr", ")", ",", "shuffle", "=", "False", ")", ":", "\n", "                    ", "break", "\n", "\n", "", "for", "val_X_batch", ",", "val_Y_batch", "in", "datagen", ".", "flow", "(", "X_val", "[", "ind_val", "]", ",", "Y_val", "[", "ind_val", "]", ",", "batch_size", "=", "len", "(", "ind_val", ")", ",", "shuffle", "=", "False", ")", ":", "\n", "                    ", "break", "\n", "\n", "", "f", ",", "gvnorm", ",", "gv_nu", ",", "lamb_g", ",", "timp_atanh", "=", "bl_imp", ".", "train", "(", "train_X_batch", ",", "train_Y_batch", ",", "val_X_batch", ",", "val_Y_batch", ",", "importance_atanh", "[", "ind_tr", "]", ",", "niter", ")", "\n", "#f, gvnorm, gv_nu, lamb_g, timp_atanh = bl_imp.train(X_train[ind_tr], Y_train[ind_tr], X_val[ind_val], Y_val[ind_val], importance_atanh[ind_tr], niter)", "\n", "\n", "importance_atanh", "[", "ind_tr", "]", "=", "timp_atanh", "\n", "\n", "## Renormalize importance_atanh", "\n", "", "if", "True", ":", "\n", "                ", "importance", "=", "0.5", "*", "(", "np", ".", "tanh", "(", "importance_atanh", ")", "+", "1.", ")", "\n", "importance", "=", "0.5", "*", "importance", "/", "np", ".", "mean", "(", "importance", ")", "\n", "importance", "=", "np", ".", "maximum", "(", ".00001", ",", "np", ".", "minimum", "(", ".99999", ",", "importance", ")", ")", "\n", "importance_atanh", "=", "np", ".", "arctanh", "(", "2.", "*", "importance", "-", "1.", ")", "\n", "\n", "", "if", "epoch", "%", "1", "==", "0", ":", "\n", "                ", "rho_t", ",", "lamb_t", ",", "eps_t", "=", "sess", ".", "run", "(", "[", "bl_imp", ".", "bl", ".", "rho_t", ",", "bl_imp", ".", "bl", ".", "lamb_t", ",", "bl_imp", ".", "bl", ".", "eps_t", "]", ")", "\n", "print", "(", "'epoch %d (rho=%f, lamb=%f, eps=%f): h=%f + %f + %f + %f= %f'", "%", "\n", "(", "epoch", ",", "rho_t", ",", "lamb_t", ",", "eps_t", ",", "f", ",", "gvnorm", ",", "gv_nu", ",", "lamb_g", ",", "f", "+", "gvnorm", "+", "gv_nu", "+", "lamb_g", ")", ")", "\n", "print", "(", "\"Test Accuracy\"", ")", "\n", "bl_imp", ".", "eval_simple", "(", "X_test", ",", "Y_test", ")", "\n", "print", "(", "\"Train Accuracy\"", ")", "\n", "bl_imp", ".", "eval_simple", "(", "X_train", ",", "Y_train", ")", "\n", "print", "(", "\"Val Accuracy\"", ")", "\n", "bl_imp", ".", "eval_simple", "(", "X_val", ",", "Y_val", ")", "\n", "print", "(", "'mean ai=%f, mean I(ai>0.1)=%f'", "%", "(", "np", ".", "mean", "(", "importance", ")", ",", "len", "(", "np", ".", "where", "(", "importance", ">", "0.1", ")", "[", "0", "]", ")", "/", "np", ".", "float", "(", "X_train", ".", "shape", "[", "0", "]", ")", ")", ")", "\n", "print", "(", "niter", ",", "\"\\n\"", ")", "\n", "\n", "", "", "", "sess", ".", "close", "(", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.test_bilevel_importance_learning_svhn.main": [[35, 155], ["tensorflow.set_random_seed", "tensorflow.Session", "range", "tf.Session.close", "h5py.File", "h5py.File.close", "int", "numpy.array", "numpy.array", "len", "len", "int", "range", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "cleverhans.utils_keras.KerasModelWrapper().get_logits", "cleverhans.utils_keras.KerasModelWrapper().get_logits", "bilevel_importance_aug_lag.bilevel_importance", "tf.Session.run", "bilevel_importance_aug_lag.bilevel_importance.train_simple", "numpy.argmax", "numpy.zeros", "tensorflow.variable_scope", "svhn_keras_model.svhn_model", "tensorflow.global_variables_initializer", "numpy.arctanh", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "numpy.arctanh", "range", "len", "len", "numpy.random.randint", "cleverhans.utils_keras.KerasModelWrapper", "cleverhans.utils_keras.KerasModelWrapper", "numpy.ones", "numpy.ones", "numpy.arctanh", "numpy.where", "int", "numpy.arange", "numpy.random.shuffle", "range", "range", "numpy.random.choice", "bilevel_importance_aug_lag.bilevel_importance.train", "numpy.maximum", "numpy.arctanh", "tf.Session.run", "print", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "print", "print", "numpy.argmax", "float", "min", "numpy.mean", "numpy.minimum", "numpy.tanh", "numpy.mean", "len", "numpy.float", "numpy.where"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.train_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.svhn_experiments.svhn_keras_model.svhn_model", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.train", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple"], ["def", "main", "(", "argv", "=", "None", ")", ":", "\n", "\n", "    ", "tf", ".", "set_random_seed", "(", "1234", ")", "\n", "sess", "=", "tf", ".", "Session", "(", "config", "=", "config", ")", "\n", "\n", "for", "ti", "in", "range", "(", "1", ")", ":", "\n", "\n", "        ", "h5f", "=", "h5py", ".", "File", "(", "'SVHN_single_grey_without_extra.h5'", ",", "'r'", ")", "\n", "\n", "# Load the training, test and validation set", "\n", "X_train", "=", "h5f", "[", "'X_train'", "]", "[", ":", "]", "\n", "Y_train", "=", "h5f", "[", "'y_train'", "]", "[", ":", "]", "\n", "X_test", "=", "h5f", "[", "'X_test'", "]", "[", ":", "]", "\n", "Y_test", "=", "h5f", "[", "'y_test'", "]", "[", ":", "]", "\n", "X_val", "=", "h5f", "[", "'X_val'", "]", "[", ":", "]", "\n", "Y_val", "=", "h5f", "[", "'y_val'", "]", "[", ":", "]", "\n", "\n", "h5f", ".", "close", "(", ")", "\n", "\n", "#Make dataset divisible by batch size", "\n", "pts", "=", "int", "(", "len", "(", "X_train", ")", "/", "batch_size", ")", "\n", "X_train", "=", "np", ".", "array", "(", "X_train", "[", ":", "pts", "*", "batch_size", "]", ")", "\n", "Y_train", "=", "np", ".", "array", "(", "Y_train", "[", ":", "pts", "*", "batch_size", "]", ")", "\n", "\n", "Ntrain", "=", "len", "(", "X_train", ")", "\n", "Nval", "=", "len", "(", "X_val", ")", "\n", "\n", "corrupt", "=", "int", "(", "0.5", "*", "len", "(", "X_train", ")", ")", "\n", "for", "i", "in", "range", "(", "corrupt", ")", ":", "\n", "            ", "curr_class", "=", "np", ".", "argmax", "(", "Y_train", "[", "i", "]", ")", "\n", "Y_train", "[", "i", "]", "=", "np", ".", "zeros", "(", "10", ")", "\n", "\n", "#random label", "\n", "j", "=", "curr_class", "\n", "while", "j", "==", "curr_class", ":", "\n", "                ", "j", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "10", ")", "\n", "\n", "", "Y_train", "[", "i", "]", "[", "j", "]", "=", "1", "\n", "\n", "## Define model", "\n", "", "x_train_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "height", ",", "width", ",", "nch", ")", ")", "\n", "y_train_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "nclass", ")", ")", "\n", "\n", "x_val_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "height", ",", "width", ",", "nch", ")", ")", "\n", "y_val_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "nclass", ")", ")", "\n", "\n", "scope_model", "=", "'svhn_classifier'", "\n", "with", "tf", ".", "variable_scope", "(", "scope_model", ",", "reuse", "=", "False", ")", ":", "\n", "            ", "model", "=", "svhn_model", "(", "X_train", ",", "nclass", ")", "\n", "\n", "", "cls_train", "=", "KerasModelWrapper", "(", "model", ")", ".", "get_logits", "(", "x_train_tf", ")", "\n", "cls_test", "=", "KerasModelWrapper", "(", "model", ")", ".", "get_logits", "(", "x_val_tf", ")", "\n", "\n", "var_cls", "=", "model", ".", "trainable_weights", "\n", "\n", "\n", "#########################################################################################################", "\n", "## Bilevel training", "\n", "#########################################################################################################", "\n", "bl_imp", "=", "bilevel_importance", "(", "sess", ",", "x_train_tf", ",", "x_val_tf", ",", "y_train_tf", ",", "y_val_tf", ",", "cls_train", ",", "cls_test", ",", "var_cls", ",", "\n", "batch_size", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ")", "\n", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "## Pre-Train with val data", "\n", "bl_imp", ".", "train_simple", "(", "X_val", ",", "Y_val", ",", "200", ")", "\n", "if", "False", ":", "\n", "            ", "importance_atanh", "=", "np", ".", "ones", "(", "(", "Ntrain", ")", ")", "*", "0.8", "\n", "importance_atanh", "=", "np", ".", "arctanh", "(", "2.", "*", "importance_atanh", "-", "1.", ")", "\n", "", "else", ":", "\n", "# Predictions based on valididation set pretrained model", "\n", "            ", "print", "(", "\"Test Accuracy\"", ")", "\n", "_", ",", "__", "=", "bl_imp", ".", "eval_simple", "(", "X_test", ",", "Y_test", ")", "\n", "print", "(", "\"Train Accuracy\"", ")", "\n", "_", ",", "y_train_init", "=", "bl_imp", ".", "eval_simple", "(", "X_train", ",", "Y_train", ")", "\n", "\n", "#Initialize importance ", "\n", "importance_atanh", "=", "np", ".", "ones", "(", "(", "Ntrain", ")", ")", "*", "np", ".", "arctanh", "(", "2.", "*", "0.2", "-", "1.", ")", "\n", "ind_correct", "=", "np", ".", "where", "(", "np", ".", "argmax", "(", "Y_train", ",", "1", ")", "==", "y_train_init", ")", "[", "0", "]", "\n", "importance_atanh", "[", "ind_correct", "]", "=", "np", ".", "arctanh", "(", "2.", "*", "0.8", "-", "1.", ")", "\n", "\n", "", "if", "True", ":", "\n", "#Start Bilevel Training", "\n", "            ", "for", "epoch", "in", "range", "(", "nepochs", ")", ":", "\n", "                ", "nb_batches", "=", "int", "(", "float", "(", "Ntrain", ")", "/", "batch_size", ")", "\n", "if", "Ntrain", "%", "batch_size", "!=", "0", ":", "\n", "                    ", "nb_batches", "+=", "1", "\n", "\n", "", "ind_shuf", "=", "np", ".", "arange", "(", "Ntrain", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "ind_shuf", ")", "\n", "for", "batch", "in", "range", "(", "nb_batches", ")", ":", "\n", "                    ", "ind_batch", "=", "range", "(", "batch_size", "*", "batch", ",", "min", "(", "batch_size", "*", "(", "1", "+", "batch", ")", ",", "Ntrain", ")", ")", "\n", "ind_val", "=", "np", ".", "random", ".", "choice", "(", "Nval", ",", "size", "=", "(", "batch_size", ")", ",", "replace", "=", "False", ")", "\n", "ind_tr", "=", "ind_shuf", "[", "ind_batch", "]", "\n", "\n", "f", ",", "gvnorm", ",", "gv_nu", ",", "lamb_g", ",", "timp_atanh", "=", "bl_imp", ".", "train", "(", "X_train", "[", "ind_tr", "]", ",", "Y_train", "[", "ind_tr", "]", ",", "X_val", "[", "ind_val", "]", ",", "Y_val", "[", "ind_val", "]", ",", "importance_atanh", "[", "ind_tr", "]", ",", "niter", ")", "\n", "importance_atanh", "[", "ind_tr", "]", "=", "timp_atanh", "\n", "\n", "## Renormalize importance_atanh", "\n", "", "if", "True", ":", "\n", "                    ", "importance", "=", "0.5", "*", "(", "np", ".", "tanh", "(", "importance_atanh", ")", "+", "1.", ")", "\n", "importance", "=", "0.5", "*", "importance", "/", "np", ".", "mean", "(", "importance", ")", "\n", "importance", "=", "np", ".", "maximum", "(", ".00001", ",", "np", ".", "minimum", "(", ".99999", ",", "importance", ")", ")", "\n", "importance_atanh", "=", "np", ".", "arctanh", "(", "2.", "*", "importance", "-", "1.", ")", "\n", "\n", "", "if", "epoch", "%", "1", "==", "0", ":", "\n", "                    ", "rho_t", ",", "lamb_t", ",", "eps_t", "=", "sess", ".", "run", "(", "[", "bl_imp", ".", "bl", ".", "rho_t", ",", "bl_imp", ".", "bl", ".", "lamb_t", ",", "bl_imp", ".", "bl", ".", "eps_t", "]", ")", "\n", "print", "(", "corrupt", ",", "'epoch %d (rho=%f, lamb=%f, eps=%f): h=%f + %f + %f + %f= %f'", "%", "\n", "(", "epoch", ",", "rho_t", ",", "lamb_t", ",", "eps_t", ",", "f", ",", "gvnorm", ",", "gv_nu", ",", "lamb_g", ",", "f", "+", "gvnorm", "+", "lamb_g", "+", "gv_nu", ")", ")", "\n", "print", "(", "\"Test Accuracy\"", ")", "\n", "bl_imp", ".", "eval_simple", "(", "X_test", ",", "Y_test", ")", "\n", "print", "(", "\"Train Accuracy\"", ")", "\n", "bl_imp", ".", "eval_simple", "(", "X_train", ",", "Y_train", ")", "\n", "print", "(", "\"Val Accuracy\"", ")", "\n", "bl_imp", ".", "eval_simple", "(", "X_val", ",", "Y_val", ")", "\n", "print", "(", "'mean ai=%f, mean I(ai>0.1)=%f'", "%", "(", "np", ".", "mean", "(", "importance", ")", ",", "len", "(", "np", ".", "where", "(", "importance", ">", "0.1", ")", "[", "0", "]", ")", "/", "np", ".", "float", "(", "X_train", ".", "shape", "[", "0", "]", ")", ")", ")", "\n", "print", "(", "corrupt", ",", "niter", ",", "\"\\n\"", ")", "\n", "\n", "", "", "", "", "sess", ".", "close", "(", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.pre_process_svhn_data.load_data": [[4, 7], ["scipy.io.loadmat"], "function", ["None"], ["def", "load_data", "(", "path", ")", ":", "\n", "    ", "data", "=", "loadmat", "(", "path", ")", "\n", "return", "data", "[", "'X'", "]", ",", "data", "[", "'y'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.pre_process_svhn_data.balanced_subsample": [[30, 42], ["numpy.unique", "numpy.random.choice", "np.random.choice.tolist", "numpy.where"], "function", ["None"], ["def", "balanced_subsample", "(", "y", ",", "s", ")", ":", "\n", "    ", "\"\"\"Return a balanced subsample of the population\"\"\"", "\n", "sample", "=", "[", "]", "\n", "# For every label in the dataset", "\n", "for", "label", "in", "np", ".", "unique", "(", "y", ")", ":", "\n", "# Get the index of all images with a specific label", "\n", "        ", "images", "=", "np", ".", "where", "(", "y", "==", "label", ")", "[", "0", "]", "\n", "# Draw a random sample from the images", "\n", "random_sample", "=", "np", ".", "random", ".", "choice", "(", "images", ",", "size", "=", "s", ",", "replace", "=", "False", ")", "\n", "# Add the random sample to our subsample list", "\n", "sample", "+=", "random_sample", ".", "tolist", "(", ")", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.pre_process_svhn_data.humansize": [[61, 69], ["None"], "function", ["None"], ["def", "humansize", "(", "nbytes", ")", ":", "\n", "    ", "if", "nbytes", "==", "0", ":", "return", "'0 B'", "\n", "i", "=", "0", "\n", "while", "nbytes", ">=", "1024", ":", "\n", "        ", "nbytes", "/=", "1024.", "\n", "i", "+=", "1", "\n", "", "f", "=", "(", "'%.2f'", "%", "nbytes", ")", ".", "rstrip", "(", "'0'", ")", ".", "rstrip", "(", "'.'", ")", "\n", "return", "'%s %s'", "%", "(", "f", ",", "suffixes", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.pre_process_svhn_data.rgb2gray": [[70, 74], ["numpy.expand_dims", "numpy.dot"], "function", ["None"], ["", "def", "rgb2gray", "(", "images", ")", ":", "\n", "    ", "\"\"\"Convert images from rbg to grayscale\n    \"\"\"", "\n", "return", "np", ".", "expand_dims", "(", "np", ".", "dot", "(", "images", ",", "[", "0.2989", ",", "0.5870", ",", "0.1140", "]", ")", ",", "axis", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.bilevel_poisoning.__init__": [[18, 84], ["tensorflow.placeholder", "keras.models.Model", "tensorflow.get_collection", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.train.RMSPropOptimizer", "bilevel_poisoning.bilevel_poisoning.optimizer_min_dogfish.minimize", "tensorflow.get_variable", "tensorflow.assign", "cleverhans.utils_keras.KerasModelWrapper().get_layer", "tensorflow.norm", "tensorflow.add_n", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "bilevel_penalty_aug_lag.bilevel_penalty", "keras.layers.GlobalAveragePooling2D", "tensorflow.variable_scope", "bilevel_poisoning.make_classifier", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.variable_scope", "bilevel_poisoning.make_classifier", "tensorflow.variable_scope", "bilevel_poisoning.make_classifier", "costs.append", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.square", "tensorflow.square", "tensorflow.nn.softmax_cross_entropy_with_logits", "cleverhans.utils_keras.KerasModelWrapper", "tensorflow.nn.l2_loss", "tensorflow.clip_by_value", "tensorflow.concat", "tensorflow.concat"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.make_classifier", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.make_classifier", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.make_classifier"], ["self", ".", "x_val_tf", "=", "x_val_tf", "\n", "self", ".", "x_test_tf", "=", "x_test_tf", "\n", "self", ".", "x_poison_tf", "=", "x_poison_tf", "\n", "self", ".", "x_original_tf", "=", "x_original_tf", "\n", "\n", "self", ".", "y_train_tf", "=", "y_train_tf", "\n", "self", ".", "y_val_tf", "=", "y_val_tf", "\n", "self", ".", "y_test_tf", "=", "y_test_tf", "\n", "self", ".", "y_poison_tf", "=", "y_poison_tf", "\n", "\n", "\n", "self", ".", "cls_train", "=", "tf", ".", "matmul", "(", "self", ".", "x_train_tf", ",", "var_cls", ")", "\n", "self", ".", "cls_val", "=", "tf", ".", "matmul", "(", "self", ".", "x_val_tf", ",", "var_cls", ")", "\n", "self", ".", "cls_test", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "matmul", "(", "self", ".", "x_test_tf", ",", "var_cls", ")", ")", "\n", "\n", "self", ".", "Npoison", "=", "Npoison", "\n", "self", ".", "height", "=", "height", "\n", "self", ".", "width", "=", "width", "\n", "self", ".", "nch", "=", "nch", "\n", "\n", "self", ".", "u", "=", "tf", ".", "get_variable", "(", "'u'", ",", "shape", "=", "(", "Npoison", ",", "self", ".", "height", "*", "self", ".", "width", "*", "self", ".", "nch", ")", ",", "constraint", "=", "lambda", "t", ":", "tf", ".", "clip_by_value", "(", "t", ",", "0", ",", "1", ")", ")", "\n", "self", ".", "assign_u", "=", "tf", ".", "assign", "(", "self", ".", "u", ",", "self", ".", "x_poison_tf", ")", "\n", "self", ".", "cls_poison", "=", "tf", ".", "matmul", "(", "self", ".", "u", ",", "var_cls", ")", "\n", "\n", "self", ".", "v", "=", "var_cls", "\n", "\n", "self", ".", "f", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_val", ",", "labels", "=", "self", ".", "y_val_tf", ")", ")", "\n", "\n", "self", ".", "weight_decay", "=", "tf", ".", "nn", ".", "l2_loss", "(", "var_cls", ")", "\n", "\n", "self", ".", "g", "=", "0.5", "*", "0.01", "*", "self", ".", "weight_decay", "+", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "tf", ".", "concat", "(", "[", "self", ".", "cls_poison", ",", "self", ".", "cls_train", "]", ",", "0", ")", ",", "labels", "=", "tf", ".", "concat", "(", "[", "self", ".", "y_poison_tf", ",", "self", ".", "y_train_tf", "]", ",", "0", ")", ")", ")", "\n", "\n", "self", ".", "bl", "=", "bilevel_penalty", "(", "sess", ",", "self", ".", "f", ",", "self", ".", "g", ",", "self", ".", "u", ",", "self", ".", "v", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ")", "\n", "\n", "self", ".", "loss_simple", "=", "0.5", "*", "0.01", "*", "self", ".", "weight_decay", "+", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_train", ",", "labels", "=", "self", ".", "y_train_tf", ")", ")", "\n", "self", ".", "optim_simple", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "1E-3", ")", ".", "minimize", "(", "self", ".", "loss_simple", ",", "var_list", "=", "self", ".", "v", ")", "\n", "\n", "\n", "", "def", "train_together", "(", "self", ",", "x_train", ",", "y_train", ",", "x_val", ",", "y_val", ",", "x_poisoned", ",", "y_poisoned", ",", "x_original", ",", "niter", "=", "1", ")", ":", "\n", "\n", "        ", "self", ".", "sess", ".", "run", "(", "self", ".", "assign_u", ",", "feed_dict", "=", "{", "self", ".", "x_poison_tf", ":", "x_poisoned", "}", ")", "\n", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", ",", "self", ".", "y_train_tf", ":", "y_train", ",", "self", ".", "x_val_tf", ":", "x_val", ",", "self", ".", "y_val_tf", ":", "y_val", ",", "self", ".", "y_poison_tf", ":", "y_poisoned", ",", "self", ".", "x_original_tf", ":", "x_original", "}", "\n", "\n", "f", ",", "gvnorm", ",", "gv_nu", ",", "lamb_g", "=", "self", ".", "bl", ".", "update", "(", "feed_dict", ",", "niter", ")", "\n", "new_x_poisoned", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "u", ")", "\n", "\n", "return", "[", "f", ",", "gvnorm", ",", "gv_nu", ",", "lamb_g", ",", "new_x_poisoned", "]", "\n", "\n", "", "def", "train_simple", "(", "self", ",", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "nepochs", ")", ":", "\n", "        ", "for", "epoch", "in", "range", "(", "nepochs", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "optim_simple", ",", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", ",", "self", ".", "y_train_tf", ":", "y_train", "}", ")", "\n", "\n", "", "print", "(", "\"Accuracy simple\"", ")", "\n", "print", "(", "\"Train Accuracy:\"", ",", "self", ".", "eval_accuracy", "(", "x_train", ",", "y_train", ")", ")", "\n", "print", "(", "\"Test Accuracy:\"", ",", "self", ".", "eval_accuracy", "(", "x_test", ",", "y_test", ")", ",", "\"\\n\"", ")", "\n", "\n", "", "def", "eval_accuracy", "(", "self", ",", "x_test", ",", "y_test", ")", ":", "\n", "        ", "acc", "=", "0", "\n", "pred", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "cls_test", ",", "{", "self", ".", "x_test_tf", ":", "x_test", "}", ")", "\n", "acc", "+=", "np", ".", "sum", "(", "np", ".", "argmax", "(", "pred", ",", "1", ")", "==", "np", ".", "argmax", "(", "y_test", ",", "1", ")", ")", "\n", "acc", "/=", "np", ".", "float32", "(", "len", "(", "x_test", ")", ")", "\n", "return", "acc", "\n", "\n", "", "def", "eval_accuracy_per_class", "(", "self", ",", "x_test", ",", "y_test", ")", ":", "\n", "        ", "acc", "=", "[", "]", "\n", "all_lables", "=", "np", ".", "argmax", "(", "y_test", ",", "1", ")", "\n", "for", "label", "in", "range", "(", "10", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.bilevel_poisoning.train": [[85, 98], ["bilevel_poisoning.bilevel_poisoning.sess.run", "numpy.array", "numpy.array", "bilevel_poisoning.bilevel_poisoning.bl.update", "bilevel_poisoning.bilevel_poisoning.sess.run"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["            ", "ind", "=", "np", ".", "argwhere", "(", "all_lables", "==", "label", ")", ".", "flatten", "(", ")", "\n", "pred", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "cls_test", ",", "{", "self", ".", "x_test_tf", ":", "x_test", "[", "ind", "]", "}", ")", "\n", "acc", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "argmax", "(", "pred", ",", "1", ")", "==", "np", ".", "argmax", "(", "y_test", "[", "ind", "]", ",", "1", ")", ")", "/", "float", "(", "len", "(", "ind", ")", ")", ")", "\n", "", "return", "acc", "", "", "", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.bilevel_poisoning.train_simple": [[99, 115], ["range", "print", "print", "print", "bilevel_poisoning.bilevel_poisoning.eval_accuracy", "range", "bilevel_poisoning.bilevel_poisoning.eval_accuracy", "bilevel_poisoning.bilevel_poisoning.eval_accuracy", "bilevel_poisoning.bilevel_poisoning.sess.run", "bilevel_poisoning.bilevel_poisoning.sess.run", "print"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.bilevel_poisoning.eval_accuracy", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.bilevel_poisoning.eval_accuracy", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.bilevel_poisoning.eval_accuracy"], []], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.bilevel_poisoning.eval_accuracy": [[116, 126], ["numpy.array", "numpy.array", "bilevel_poisoning.bilevel_poisoning.sess.run", "numpy.sum", "float", "numpy.argmax", "numpy.argmax"], "methods", ["None"], []], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.bilevel_poisoning.find_correct_example": [[127, 132], ["range", "len", "bilevel_poisoning.bilevel_poisoning.sess.run", "numpy.argmax", "numpy.argmax", "Y_set[].reshape", "numpy.argmax", "numpy.argmax", "X_set[].reshape", "Y_set[].reshape"], "methods", ["None"], []], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.bilevel_poisoning.find_closest_example": [[134, 144], ["numpy.argmax", "numpy.argwhere().flatten", "range", "numpy.ones", "len", "bilevel_poisoning.bilevel_poisoning.sess.run", "numpy.argsort", "numpy.argmax", "numpy.argwhere", "len", "Y_set[].reshape", "X_set[].reshape"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], []], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.clean_label_attacks.bilevel_poisoning.make_classifier": [[10, 15], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.bias_add", "tensorflow.matmul", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer"], "function", ["None"], ["\n", "    ", "def", "__init__", "(", "self", ",", "sess", ",", "x_train_tf", ",", "x_val_tf", ",", "x_test_tf", ",", "x_poison_tf", ",", "x_original_tf", ",", "y_train_tf", ",", "y_val_tf", ",", "y_test_tf", ",", "y_poison_tf", ",", "\n", "Npoison", ",", "height", ",", "width", ",", "nch", ",", "\n", "#model,", "\n", "var_cls", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.mnist_experiments.MNIST_keras_model.mnist_model": [[5, 27], ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Dropout", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Dropout", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Dropout", "keras.layers.Dense", "keras.layers.Dropout", "keras.layers.Dense"], "function", ["None"], ["def", "mnist_model", "(", "x", ",", "num_classes", ")", ":", "\n", "    ", "model", "=", "Sequential", "(", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "64", ",", "kernel_size", "=", "(", "5", ",", "5", ")", ",", "activation", "=", "'relu'", ",", "input_shape", "=", "x", ".", "shape", "[", "1", ":", "]", ")", ")", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "model", ".", "add", "(", "Dropout", "(", "0.25", ")", ")", "\n", "\n", "model", ".", "add", "(", "Conv2D", "(", "128", ",", "(", "5", ",", "5", ")", ",", "activation", "=", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "model", ".", "add", "(", "Dropout", "(", "0.25", ")", ")", "\n", "\n", "model", ".", "add", "(", "Flatten", "(", ")", ")", "\n", "\n", "model", ".", "add", "(", "Dense", "(", "512", ",", "activation", "=", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Dropout", "(", "0.5", ")", ")", "\n", "\n", "model", ".", "add", "(", "Dense", "(", "256", ",", "activation", "=", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Dropout", "(", "0.5", ")", ")", "\n", "\n", "model", ".", "add", "(", "Dense", "(", "num_classes", ",", "activation", "=", "'softmax'", ")", ")", "\n", "\n", "model", ".", "compile", "(", "optimizer", "=", "'adam'", ",", "loss", "=", "'categorical_crossentropy'", ",", "metrics", "=", "[", "'accuracy'", "]", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.mnist_experiments.MNIST_keras_model.mnist_model_logistic_reg": [[28, 34], ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.layers.Dense"], "function", ["None"], ["", "def", "mnist_model_logistic_reg", "(", "x", ",", "num_classes", ")", ":", "\n", "    ", "model", "=", "Sequential", "(", ")", "\n", "model", ".", "add", "(", "Dense", "(", "num_classes", ",", "activation", "=", "'softmax'", ",", "input_shape", "=", "x", ".", "shape", "[", "1", ":", "]", ")", ")", "\n", "\n", "model", ".", "compile", "(", "optimizer", "=", "'adam'", ",", "loss", "=", "'categorical_crossentropy'", ",", "metrics", "=", "[", "'accuracy'", "]", ")", "\n", "return", "model", "", "", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.__init__": [[9, 33], ["tensorflow.placeholder", "tensorflow.Variable", "tensorflow.assign", "tensorflow.reduce_mean", "bilevel_penalty", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer().minimize", "numpy.zeros", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.tanh", "tensorflow.multiply", "tensorflow.train.AdamOptimizer", "tensorflow.nn.softmax_cross_entropy_with_logits"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "x_train_tf", ",", "x_test_tf", ",", "y_train_tf", ",", "y_test_tf", ",", "cls_train", ",", "cls_test", ",", "var_cls", ",", "batch_size", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "x_train_tf", "=", "x_train_tf", "\n", "self", ".", "x_test_tf", "=", "x_test_tf", "\n", "self", ".", "y_train_tf", "=", "y_train_tf", "\n", "self", ".", "y_test_tf", "=", "y_test_tf", "\n", "self", ".", "cls_train", "=", "cls_train", "\n", "self", ".", "cls_test", "=", "cls_test", "\n", "self", ".", "var_cls", "=", "var_cls", "# v", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "\n", "self", ".", "importance_atanh_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "self", ".", "batch_size", "]", ",", "'importance_atanh_tf'", ")", "\n", "self", ".", "importance_atanh", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "(", "self", ".", "batch_size", ")", ",", "np", ".", "float32", ")", ",", "name", "=", "'importance_atanh'", ")", "\n", "self", ".", "assign_importance_atanh", "=", "tf", ".", "assign", "(", "self", ".", "importance_atanh", ",", "self", ".", "importance_atanh_tf", ")", "\n", "importance", "=", "0.5", "*", "(", "tf", ".", "tanh", "(", "self", ".", "importance_atanh", ")", "+", "1.", ")", "# between 0 and 1", "\n", "\n", "self", ".", "f", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_test", ",", "labels", "=", "self", ".", "y_test_tf", ")", ")", "\n", "self", ".", "g", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "importance", ",", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_train", ",", "labels", "=", "self", ".", "y_train_tf", ")", ")", ")", "/", "tf", ".", "reduce_sum", "(", "importance", ")", "\n", "\n", "self", ".", "bl", "=", "bilevel_penalty", "(", "sess", ",", "self", ".", "f", ",", "self", ".", "g", ",", "self", ".", "importance_atanh", ",", "var_cls", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ")", "\n", "\n", "self", ".", "loss_simple", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "self", ".", "cls_train", ",", "labels", "=", "self", ".", "y_train_tf", ")", ")", "\n", "self", ".", "optim_simple", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr_v", ")", ".", "minimize", "(", "self", ".", "loss_simple", ",", "var_list", "=", "self", ".", "var_cls", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.train": [[34, 46], ["bilevel_importance_aug_lag.bilevel_importance.sess.run", "bilevel_importance_aug_lag.bilevel_importance.bl.update", "bilevel_importance_aug_lag.bilevel_importance.sess.run"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["", "def", "train", "(", "self", ",", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "importance_atanh", ",", "niter", "=", "1", ",", "update", "=", "0", ")", ":", "\n", "        ", "gvnorm", "=", "0", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "assign_importance_atanh", ",", "feed_dict", "=", "{", "self", ".", "importance_atanh_tf", ":", "importance_atanh", "}", ")", "\n", "\n", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", ",", "self", ".", "y_train_tf", ":", "y_train", ",", "self", ".", "x_test_tf", ":", "x_test", ",", "self", ".", "y_test_tf", ":", "y_test", "}", "\n", "\n", "#Penalty Method", "\n", "f", ",", "gvnorm", ",", "gv_nu", ",", "lamb_g", "=", "self", ".", "bl", ".", "update", "(", "feed_dict", ",", "niter", ",", "update", ")", "\n", "\n", "timp_atanh", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "importance_atanh", ")", "\n", "\n", "return", "[", "f", ",", "gvnorm", ",", "gv_nu", ",", "lamb_g", ",", "timp_atanh", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.train_simple": [[47, 63], ["int", "range", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "numpy.floor", "numpy.arange", "numpy.random.shuffle", "range", "range", "bilevel_importance_aug_lag.bilevel_importance.sess.run", "bilevel_importance_aug_lag.bilevel_importance.sess.run", "print", "float", "min"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple"], ["", "def", "train_simple", "(", "self", ",", "x_train", ",", "y_train", ",", "nepochs", ")", ":", "\n", "        ", "batch_size", "=", "self", ".", "batch_size", "\n", "Ntrain", "=", "x_train", ".", "shape", "[", "0", "]", "\n", "nb_batches", "=", "int", "(", "np", ".", "floor", "(", "float", "(", "Ntrain", ")", "/", "batch_size", ")", ")", "\n", "for", "epoch", "in", "range", "(", "nepochs", ")", ":", "\n", "            ", "ind_shuf", "=", "np", ".", "arange", "(", "Ntrain", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "ind_shuf", ")", "\n", "for", "batch", "in", "range", "(", "nb_batches", ")", ":", "\n", "                ", "ind_batch", "=", "range", "(", "batch_size", "*", "batch", ",", "min", "(", "batch_size", "*", "(", "1", "+", "batch", ")", ",", "Ntrain", ")", ")", "\n", "ind_tr", "=", "ind_shuf", "[", "ind_batch", "]", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "optim_simple", ",", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", "[", "ind_tr", ",", ":", "]", ",", "self", ".", "y_train_tf", ":", "y_train", "[", "ind_tr", ",", ":", "]", "}", ")", "\n", "", "if", "epoch", "%", "50", "==", "0", ":", "\n", "                ", "l", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "loss_simple", ",", "feed_dict", "=", "{", "self", ".", "x_train_tf", ":", "x_train", "[", "ind_tr", ",", ":", "]", ",", "self", ".", "y_train_tf", ":", "y_train", "[", "ind_tr", ",", ":", "]", "}", ")", "\n", "print", "(", "'epoch=%d/%d, loss=%f'", "%", "(", "epoch", ",", "nepochs", ",", "l", ")", ")", "\n", "\n", "", "", "return", "self", ".", "eval_simple", "(", "x_train", ",", "y_train", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple": [[64, 82], ["int", "range", "numpy.float32", "print", "numpy.floor", "numpy.ones", "range", "bilevel_importance_aug_lag.bilevel_importance.sess.run", "numpy.sum", "numpy.argmax", "int", "min", "float", "numpy.argmax", "numpy.argmax"], "methods", ["None"], ["", "def", "eval_simple", "(", "self", ",", "x_test", ",", "y_test", ")", ":", "\n", "        ", "batch_size", "=", "self", ".", "batch_size", "\n", "Ntest", "=", "x_test", ".", "shape", "[", "0", "]", "\n", "nb_batches", "=", "int", "(", "np", ".", "floor", "(", "float", "(", "Ntest", ")", "/", "batch_size", ")", ")", "\n", "acc", "=", "0", "\n", "preds", "=", "np", ".", "nan", "*", "np", ".", "ones", "(", "Ntest", ",", "np", ".", "int32", ")", "\n", "if", "Ntest", "%", "int", "(", "batch_size", ")", "is", "not", "0", ":", "\n", "            ", "nb_batches", "+=", "1", "\n", "\n", "", "for", "batch", "in", "range", "(", "nb_batches", ")", ":", "\n", "            ", "ind_batch", "=", "range", "(", "batch_size", "*", "batch", ",", "min", "(", "batch_size", "*", "(", "1", "+", "batch", ")", ",", "Ntest", ")", ")", "\n", "pred", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "cls_test", ",", "{", "self", ".", "x_test_tf", ":", "x_test", "[", "ind_batch", ",", ":", "]", "}", ")", "\n", "acc", "+=", "np", ".", "sum", "(", "np", ".", "argmax", "(", "pred", ",", "1", ")", "==", "np", ".", "argmax", "(", "y_test", "[", "ind_batch", ",", ":", "]", ",", "1", ")", ")", "\n", "preds", "[", "ind_batch", "]", "=", "np", ".", "argmax", "(", "pred", ",", "1", ")", "\n", "\n", "", "acc", "/=", "np", ".", "float32", "(", "nb_batches", "*", "batch_size", ")", "\n", "print", "(", "'mean acc = %f'", "%", "(", "acc", ")", ")", "\n", "return", "[", "acc", ",", "preds", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.test_bilevel_importance_learning_mnist.main": [[32, 171], ["tensorflow.set_random_seed", "tensorflow.Session", "keras.datasets.mnist.load_data", "X_train_all.astype.reshape", "X_test.astype.reshape", "X_train_all.astype.astype", "X_test.astype.astype", "keras.utils.to_categorical", "keras.utils.to_categorical", "len", "len", "int", "range", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "cleverhans.utils_keras.KerasModelWrapper().get_logits", "cleverhans.utils_keras.KerasModelWrapper().get_logits", "tensorflow.trainable_variables", "print", "bilevel_importance_aug_lag.bilevel_importance", "tf.Session.run", "bilevel_importance_aug_lag.bilevel_importance.train_simple", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "numpy.argwhere().flatten", "print", "tf.Session.run", "bilevel_importance_aug_lag.bilevel_importance.train_simple", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "tf.Session.close", "len", "len", "numpy.argmax", "numpy.zeros", "tensorflow.variable_scope", "MNIST_keras_model.mnist_model_logistic_reg", "variable.get_shape", "print", "print", "print", "tensorflow.global_variables_initializer", "numpy.arctanh", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "numpy.arctanh", "range", "len", "tensorflow.global_variables_initializer", "numpy.concatenate", "numpy.concatenate", "len", "numpy.random.randint", "cleverhans.utils_keras.KerasModelWrapper", "cleverhans.utils_keras.KerasModelWrapper", "len", "print", "numpy.ones", "numpy.ones", "numpy.arctanh", "numpy.where", "int", "numpy.arange", "numpy.random.shuffle", "range", "numpy.argwhere", "numpy.floor", "range", "numpy.random.choice", "bilevel_importance_aug_lag.bilevel_importance.train", "numpy.maximum", "numpy.arctanh", "tf.Session.run", "print", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "print", "bilevel_importance_aug_lag.bilevel_importance.eval_simple", "print", "print", "numpy.argmax", "min", "numpy.mean", "numpy.minimum", "float", "numpy.tanh", "numpy.mean", "len", "numpy.float", "numpy.where"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.Penalty.pre_process_svhn_data.load_data", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.train_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.train_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.mnist_experiments.MNIST_keras_model.mnist_model_logistic_reg", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.train", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.small_scale.bilevel_importance_aug_lag.bilevel_importance.eval_simple"], ["def", "main", "(", "argv", "=", "None", ")", ":", "\n", "\n", "    ", "tf", ".", "set_random_seed", "(", "1234", ")", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "\n", "## Read data", "\n", "(", "X_train_all", ",", "Y_train_all", ")", ",", "(", "X_test", ",", "Y_test", ")", "=", "mnist", ".", "load_data", "(", ")", "\n", "\n", "X_train_all", "=", "X_train_all", ".", "reshape", "(", "len", "(", "X_train_all", ")", ",", "28", "*", "28", "*", "1", ")", "\n", "X_test", "=", "X_test", ".", "reshape", "(", "len", "(", "X_test", ")", ",", "28", "*", "28", "*", "1", ")", "\n", "\n", "X_train_all", "=", "X_train_all", ".", "astype", "(", "'float32'", ")", "\n", "X_test", "=", "X_test", ".", "astype", "(", "'float32'", ")", "\n", "X_train_all", "/=", "255", "\n", "X_test", "/=", "255", "\n", "\n", "Y_train_all", "=", "keras", ".", "utils", ".", "to_categorical", "(", "Y_train_all", ",", "nclass", ")", "\n", "Y_test", "=", "keras", ".", "utils", ".", "to_categorical", "(", "Y_test", ",", "nclass", ")", "\n", "\n", "points", "=", "5000", "\n", "val_points", "=", "5000", "\n", "\n", "X_train", "=", "X_train_all", "[", ":", "points", "]", "\n", "Y_train", "=", "Y_train_all", "[", ":", "points", "]", "\n", "X_val", "=", "X_train_all", "[", "points", ":", "points", "+", "val_points", "]", "\n", "Y_val", "=", "Y_train_all", "[", "points", ":", "points", "+", "val_points", "]", "\n", "\n", "Ntrain", "=", "len", "(", "X_train", ")", "\n", "Nval", "=", "len", "(", "X_val", ")", "\n", "\n", "corrupt", "=", "int", "(", "0.5", "*", "len", "(", "X_train", ")", ")", "\n", "for", "i", "in", "range", "(", "corrupt", ")", ":", "\n", "        ", "curr_class", "=", "np", ".", "argmax", "(", "Y_train", "[", "i", "]", ")", "\n", "Y_train", "[", "i", "]", "=", "np", ".", "zeros", "(", "10", ")", "\n", "\n", "#random label", "\n", "j", "=", "curr_class", "\n", "while", "j", "==", "curr_class", ":", "\n", "            ", "j", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "10", ")", "\n", "\n", "", "Y_train", "[", "i", "]", "[", "j", "]", "=", "1", "\n", "\n", "## Define model", "\n", "", "x_train_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "height", "*", "width", "*", "nch", ")", ")", "\n", "y_train_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "nclass", ")", ")", "\n", "\n", "x_val_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "height", "*", "width", "*", "nch", ")", ")", "\n", "y_val_tf", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "nclass", ")", ")", "\n", "\n", "scope_model", "=", "'mnist_classifier'", "\n", "with", "tf", ".", "variable_scope", "(", "scope_model", ",", "reuse", "=", "False", ")", ":", "\n", "        ", "model", "=", "mnist_model_logistic_reg", "(", "X_train", ",", "nclass", ")", "\n", "\n", "", "cls_train", "=", "KerasModelWrapper", "(", "model", ")", ".", "get_logits", "(", "x_train_tf", ")", "\n", "cls_test", "=", "KerasModelWrapper", "(", "model", ")", ".", "get_logits", "(", "x_val_tf", ")", "\n", "\n", "var_cls", "=", "model", ".", "trainable_weights", "\n", "\n", "total_parameters", "=", "0", "\n", "for", "variable", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "# shape is an array of tf.Dimension", "\n", "        ", "shape", "=", "variable", ".", "get_shape", "(", ")", "\n", "print", "(", "shape", ")", "\n", "print", "(", "len", "(", "shape", ")", ")", "\n", "variable_parameters", "=", "1", "\n", "for", "dim", "in", "shape", ":", "\n", "            ", "print", "(", "dim", ")", "\n", "variable_parameters", "*=", "dim", ".", "value", "\n", "", "print", "(", "variable_parameters", ")", "\n", "total_parameters", "+=", "variable_parameters", "\n", "", "print", "(", "total_parameters", ")", "\n", "\n", "#########################################################################################################", "\n", "## Bilevel training", "\n", "#########################################################################################################", "\n", "bl_imp", "=", "bilevel_importance", "(", "sess", ",", "x_train_tf", ",", "x_val_tf", ",", "y_train_tf", ",", "y_val_tf", ",", "cls_train", ",", "cls_test", ",", "var_cls", ",", "\n", "batch_size", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ")", "\n", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "## Pre-train with val data", "\n", "bl_imp", ".", "train_simple", "(", "X_val", ",", "Y_val", ",", "100", ")", "\n", "bl_imp", ".", "eval_simple", "(", "X_test", ",", "Y_test", ")", "\n", "\n", "if", "False", ":", "\n", "        ", "importance_atanh", "=", "np", ".", "ones", "(", "(", "Ntrain", ")", ")", "*", "0.8", "\n", "importance_atanh", "=", "np", ".", "arctanh", "(", "2.", "*", "importance_atanh", "-", "1.", ")", "\n", "", "else", ":", "\n", "# Predictions based on valid-pretrained model?", "\n", "        ", "print", "(", "\"Test Accuracy\"", ")", "\n", "_", ",", "__", "=", "bl_imp", ".", "eval_simple", "(", "X_test", ",", "Y_test", ")", "\n", "print", "(", "\"Train Accuracy\"", ")", "\n", "_", ",", "y_train_init", "=", "bl_imp", ".", "eval_simple", "(", "X_train", ",", "Y_train", ")", "\n", "\n", "importance_atanh", "=", "np", ".", "ones", "(", "(", "Ntrain", ")", ")", "*", "np", ".", "arctanh", "(", "2.", "*", "0.4", "-", "1.", ")", "\n", "ind_correct", "=", "np", ".", "where", "(", "np", ".", "argmax", "(", "Y_train", ",", "1", ")", "==", "y_train_init", ")", "[", "0", "]", "\n", "importance_atanh", "[", "ind_correct", "]", "=", "np", ".", "arctanh", "(", "2.", "*", "0.6", "-", "1.", ")", "\n", "\n", "", "if", "True", ":", "\n", "        ", "for", "epoch", "in", "range", "(", "nepochs", ")", ":", "\n", "            ", "nb_batches", "=", "int", "(", "np", ".", "floor", "(", "float", "(", "Ntrain", ")", "/", "batch_size", ")", ")", "\n", "ind_shuf", "=", "np", ".", "arange", "(", "Ntrain", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "ind_shuf", ")", "\n", "for", "batch", "in", "range", "(", "nb_batches", ")", ":", "\n", "                ", "ind_batch", "=", "range", "(", "batch_size", "*", "batch", ",", "min", "(", "batch_size", "*", "(", "1", "+", "batch", ")", ",", "Ntrain", ")", ")", "\n", "ind_val", "=", "np", ".", "random", ".", "choice", "(", "Nval", ",", "size", "=", "(", "batch_size", ")", ",", "replace", "=", "False", ")", "\n", "ind_tr", "=", "ind_shuf", "[", "ind_batch", "]", "\n", "\n", "f", ",", "gvnorm", ",", "gv_nu", ",", "lamb_g", ",", "timp_atanh", "=", "bl_imp", ".", "train", "(", "X_train", "[", "ind_tr", "]", ",", "Y_train", "[", "ind_tr", "]", ",", "X_val", "[", "ind_val", "]", ",", "Y_val", "[", "ind_val", "]", ",", "importance_atanh", "[", "ind_tr", "]", ",", "niter", ")", "\n", "importance_atanh", "[", "ind_tr", "]", "=", "timp_atanh", "\n", "\n", "## Renormalize importance_atanh", "\n", "", "if", "True", ":", "\n", "                ", "importance", "=", "0.5", "*", "(", "np", ".", "tanh", "(", "importance_atanh", ")", "+", "1.", ")", "\n", "importance", "=", "0.5", "*", "importance", "/", "np", ".", "mean", "(", "importance", ")", "\n", "importance", "=", "np", ".", "maximum", "(", ".00001", ",", "np", ".", "minimum", "(", ".99999", ",", "importance", ")", ")", "\n", "importance_atanh", "=", "np", ".", "arctanh", "(", "2.", "*", "importance", "-", "1.", ")", "\n", "\n", "", "if", "epoch", "%", "1", "==", "0", ":", "\n", "                ", "rho_t", ",", "lamb_t", ",", "eps_t", "=", "sess", ".", "run", "(", "[", "bl_imp", ".", "bl", ".", "rho_t", ",", "bl_imp", ".", "bl", ".", "lamb_t", ",", "bl_imp", ".", "bl", ".", "eps_t", "]", ")", "\n", "print", "(", "'epoch %d (rho=%f, lamb=%f, eps=%f): h=%f + %f + %f + %f= %f'", "%", "\n", "(", "epoch", ",", "rho_t", ",", "lamb_t", ",", "eps_t", ",", "f", ",", "gvnorm", ",", "gv_nu", ",", "lamb_g", ",", "f", "+", "gvnorm", "+", "lamb_g", "+", "gv_nu", ")", ")", "\n", "print", "(", "\"Test Accuracy\"", ")", "\n", "bl_imp", ".", "eval_simple", "(", "X_test", ",", "Y_test", ")", "\n", "print", "(", "\"Train Accuracy\"", ")", "\n", "bl_imp", ".", "eval_simple", "(", "X_train", ",", "Y_train", ")", "\n", "print", "(", "\"Val Accuracy\"", ")", "\n", "bl_imp", ".", "eval_simple", "(", "X_val", ",", "Y_val", ")", "\n", "print", "(", "'mean ai=%f, mean I(ai>0.1)=%f'", "%", "(", "np", ".", "mean", "(", "importance", ")", ",", "len", "(", "np", ".", "where", "(", "importance", ">", "0.1", ")", "[", "0", "]", ")", "/", "np", ".", "float", "(", "X_train", ".", "shape", "[", "0", "]", ")", ")", ")", "\n", "print", "(", "\"\\n\"", ")", "\n", "\n", "", "", "", "ind", "=", "np", ".", "argwhere", "(", "importance", ">", "0.9", ")", ".", "flatten", "(", ")", "\n", "print", "(", "len", "(", "ind", ")", ")", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "bl_imp", ".", "train_simple", "(", "np", ".", "concatenate", "(", "[", "X_train", "[", "ind", "]", ",", "X_val", "]", ")", ",", "np", ".", "concatenate", "(", "[", "Y_train", "[", "ind", "]", ",", "Y_val", "]", ")", ",", "500", ")", "\n", "bl_imp", ".", "eval_simple", "(", "X_test", ",", "Y_test", ")", "\n", "\n", "sess", ".", "close", "(", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.cifar10_experiments.cifar10_keras_model.CIFAR": [[5, 40], ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Dropout", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Dropout", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Dropout", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dropout", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dropout", "keras.layers.Dense", "keras.layers.Activation"], "function", ["None"], ["def", "CIFAR", "(", "x", ",", "num_classes", ")", ":", "\n", "    ", "Keras_model", "=", "Sequential", "(", ")", "\n", "Keras_model", ".", "add", "(", "Conv2D", "(", "48", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "'same'", ",", "input_shape", "=", "x", ".", "shape", "[", "1", ":", "]", ")", ")", "\n", "Keras_model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "Keras_model", ".", "add", "(", "Conv2D", "(", "48", ",", "(", "3", ",", "3", ")", ")", ")", "\n", "Keras_model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "Keras_model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "Keras_model", ".", "add", "(", "Dropout", "(", "0.25", ")", ")", "\n", "\n", "Keras_model", ".", "add", "(", "Conv2D", "(", "96", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "'same'", ")", ")", "\n", "Keras_model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "Keras_model", ".", "add", "(", "Conv2D", "(", "96", ",", "(", "3", ",", "3", ")", ")", ")", "\n", "Keras_model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "Keras_model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "Keras_model", ".", "add", "(", "Dropout", "(", "0.25", ")", ")", "\n", "\n", "Keras_model", ".", "add", "(", "Conv2D", "(", "192", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "'same'", ")", ")", "\n", "Keras_model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "Keras_model", ".", "add", "(", "Conv2D", "(", "192", ",", "(", "3", ",", "3", ")", ")", ")", "\n", "Keras_model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "Keras_model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "Keras_model", ".", "add", "(", "Dropout", "(", "0.25", ")", ")", "\n", "\n", "Keras_model", ".", "add", "(", "Flatten", "(", ")", ")", "\n", "Keras_model", ".", "add", "(", "Dense", "(", "512", ")", ")", "\n", "Keras_model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "Keras_model", ".", "add", "(", "Dropout", "(", "0.5", ")", ")", "\n", "Keras_model", ".", "add", "(", "Dense", "(", "256", ")", ")", "\n", "Keras_model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "Keras_model", ".", "add", "(", "Dropout", "(", "0.5", ")", ")", "\n", "Keras_model", ".", "add", "(", "Dense", "(", "num_classes", ")", ")", "\n", "Keras_model", ".", "add", "(", "Activation", "(", "'softmax'", ")", ")", "\n", "# Compile the model", "\n", "Keras_model", ".", "compile", "(", "optimizer", "=", "'adam'", ",", "loss", "=", "'categorical_crossentropy'", ",", "metrics", "=", "[", "'accuracy'", "]", ")", "\n", "return", "Keras_model", "", "", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.svhn_experiments.svhn_keras_model.svhn_model": [[5, 31], ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Dropout", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Dropout", "keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.MaxPooling2D", "keras.layers.Dropout", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Dropout", "keras.layers.Dense"], "function", ["None"], ["def", "svhn_model", "(", "x", ",", "num_classes", ")", ":", "\n", "    ", "model", "=", "Sequential", "(", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "32", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "padding", "=", "\"same\"", ",", "activation", "=", "'relu'", ",", "input_shape", "=", "x", ".", "shape", "[", "1", ":", "]", ")", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "32", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "padding", "=", "\"same\"", ",", "activation", "=", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "model", ".", "add", "(", "Dropout", "(", "0.3", ")", ")", "\n", "\n", "model", ".", "add", "(", "Conv2D", "(", "64", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "\"same\"", ",", "activation", "=", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "64", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "\"same\"", ",", "activation", "=", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "model", ".", "add", "(", "Dropout", "(", "0.3", ")", ")", "\n", "\n", "model", ".", "add", "(", "Conv2D", "(", "128", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "\"same\"", ",", "activation", "=", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "128", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "\"same\"", ",", "activation", "=", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "model", ".", "add", "(", "Dropout", "(", "0.3", ")", ")", "\n", "\n", "model", ".", "add", "(", "Flatten", "(", ")", ")", "\n", "\n", "model", ".", "add", "(", "Dense", "(", "512", ",", "activation", "=", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Dropout", "(", "0.3", ")", ")", "\n", "\n", "model", ".", "add", "(", "Dense", "(", "num_classes", ",", "activation", "=", "'softmax'", ")", ")", "\n", "\n", "model", ".", "compile", "(", "optimizer", "=", "'adam'", ",", "loss", "=", "'categorical_crossentropy'", ",", "metrics", "=", "[", "'accuracy'", "]", ")", "\n", "return", "model", "", "", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_synthetic.bilevel_penalty.__init__": [[27, 84], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.gradients", "len", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.compute_gradients", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer.compute_gradients", "tensorflow.reduce_sum", "tensorflow.placeholder_with_default", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.train.AdamOptimizer().minimize", "bilevel_penalty_aug_lag_synthetic.l2norm_sq", "tensorflow.Variable", "tensorflow.assign", "numpy.zeros", "range", "tensorflow.reduce_sum", "range", "tensorflow.assign", "tensorflow.assign", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "range", "tensorflow.clip_by_value", "range", "tensorflow.clip_by_value", "range", "tensorflow.square", "tensorflow.square", "len", "len"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag.l2norm_sq"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "f", ",", "g", ",", "u", ",", "v", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "c_rho", ",", "ulb", "=", "None", ",", "uub", "=", "None", ",", "vlb", "=", "None", ",", "vub", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "f", "=", "f", "\n", "self", ".", "g", "=", "g", "\n", "\n", "self", ".", "c_rho", "=", "c_rho", "\n", "#self.c_lamb = c_lamb", "\n", "#self.c_eps = c_eps", "\n", "\n", "self", ".", "rho_t", "=", "tf", ".", "Variable", "(", "rho_0", ",", "'rho_t'", ")", "\n", "self", ".", "lamb_t", "=", "tf", ".", "Variable", "(", "lamb_0", ",", "'lamb_t'", ")", "\n", "self", ".", "eps_t", "=", "tf", ".", "Variable", "(", "eps_0", ",", "'eps_t'", ")", "\n", "\n", "self", ".", "lr_u_t", "=", "tf", ".", "Variable", "(", "lr_u", ",", "'lr_u_t'", ")", "\n", "self", ".", "lr_v_t", "=", "tf", ".", "Variable", "(", "lr_v", ",", "'lr_v_t'", ")", "\n", "\n", "self", ".", "dgdv", "=", "tf", ".", "gradients", "(", "g", ",", "v", ")", "\n", "self", ".", "gvnorm", "=", "0.5", "*", "self", ".", "rho_t", "*", "l2norm_sq", "(", "self", ".", "dgdv", ")", "\n", "self", ".", "lamb_g", "=", "self", ".", "lamb_t", "*", "g", "\n", "\n", "n", "=", "len", "(", "self", ".", "dgdv", ")", "\n", "self", ".", "nu_t", "=", "[", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "self", ".", "dgdv", "[", "i", "]", ".", "shape", ",", "dtype", "=", "np", ".", "float32", ")", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "self", ".", "gvnu", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "self", ".", "dgdv", "[", "i", "]", "*", "self", ".", "nu_t", "[", "i", "]", ")", "for", "i", "in", "range", "(", "n", ")", "]", ")", "\n", "\n", "self", ".", "update_nu", "=", "[", "tf", ".", "assign", "(", "self", ".", "nu_t", "[", "i", "]", ",", "self", ".", "nu_t", "[", "i", "]", "+", "self", ".", "rho_t", "*", "self", ".", "dgdv", "[", "i", "]", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "\n", "if", "ulb", "is", "not", "None", ":", "\n", "            ", "self", ".", "clip_u", "=", "[", "tf", ".", "assign", "(", "u", "[", "i", "]", ",", "tf", ".", "clip_by_value", "(", "u", "[", "i", "]", ",", "ulb", "[", "i", "]", ",", "uub", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "u", ")", ")", "]", "\n", "", "else", ":", "self", ".", "clip_u", "=", "None", "\n", "if", "vlb", "is", "not", "None", ":", "\n", "            ", "self", ".", "clip_v", "=", "[", "tf", ".", "assign", "(", "v", "[", "i", "]", ",", "tf", ".", "clip_by_value", "(", "v", "[", "i", "]", ",", "vlb", "[", "i", "]", ",", "vub", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "v", ")", ")", "]", "\n", "", "else", ":", "self", ".", "clip_v", "=", "None", "\n", "\n", "\n", "h_upper", "=", "f", "+", "self", ".", "gvnu", "+", "self", ".", "gvnorm", "#+ self.lamb_g # No lamb_g term", "\n", "h_lower", "=", "f", "+", "self", ".", "gvnu", "+", "self", ".", "gvnorm", "+", "self", ".", "lamb_g", "\n", "\n", "optim_u", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_u_t", ")", "\n", "optim_v", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_v_t", ")", "\n", "\n", "self", ".", "min_u", "=", "optim_u", ".", "minimize", "(", "h_upper", ",", "var_list", "=", "u", ")", "\n", "self", ".", "min_v", "=", "optim_v", ".", "minimize", "(", "h_lower", ",", "var_list", "=", "v", ")", "\n", "\n", "tgrad_and_var_u", "=", "optim_u", ".", "compute_gradients", "(", "h_upper", ",", "var_list", "=", "u", ")", "\n", "self", ".", "hunorm", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "t", "[", "0", "]", ")", ")", "for", "t", "in", "tgrad_and_var_u", "]", ")", "\n", "tgrad_and_var_v", "=", "optim_v", ".", "compute_gradients", "(", "h_lower", ",", "var_list", "=", "v", ")", "\n", "self", ".", "hvnorm", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "t", "[", "0", "]", ")", ")", "for", "t", "in", "tgrad_and_var_v", "]", ")", "\n", "\n", "#self.del_v,_ = zip(*(optim_v.compute_gradients(loss, var_list=v)", "\n", "#self.loss_simple = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits=g,labels=self.y_train_tf))", "\n", "\n", "## singlelevel: min_u,v [f(u,v) + l*g(u,v)]", "\n", "self", ".", "lamb_ph", "=", "tf", ".", "placeholder_with_default", "(", "1.", ",", "shape", "=", "(", ")", ")", "\n", "self", ".", "loss_singlelevel", "=", "f", "+", "self", ".", "lamb_ph", "*", "g", "\n", "self", ".", "min_u_singlelevel", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr_u", ")", ".", "minimize", "(", "self", ".", "loss_singlelevel", ",", "var_list", "=", "u", ")", "\n", "self", ".", "min_v_singlelevel", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr_v", ")", ".", "minimize", "(", "self", ".", "loss_singlelevel", ",", "var_list", "=", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_synthetic.bilevel_penalty.update": [[90, 111], ["range", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.sess.run", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "feed_dict", ",", "niter", "=", "1", ")", ":", "\n", "\n", "        ", "for", "it", "in", "range", "(", "niter", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_v", ",", "feed_dict", ")", "\n", "if", "False", ":", "#self.clip_v is not None:", "\n", "                ", "self", ".", "sess", ".", "run", "(", "self", ".", "clip_v", ")", "\n", "", "", "self", ".", "sess", ".", "run", "(", "self", ".", "min_u", ",", "feed_dict", ")", "\n", "if", "False", ":", "#self.clip_u is not None:", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "clip_u", ")", "\n", "\n", "", "f", ",", "gvnorm", ",", "lamb_g", ",", "gvnu", ",", "hunorm", ",", "hvnorm", ",", "eps_t", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "f", ",", "self", ".", "gvnorm", ",", "self", ".", "lamb_g", ",", "self", ".", "gvnu", ",", "self", ".", "hunorm", ",", "self", ".", "hvnorm", ",", "self", ".", "eps_t", "]", ",", "feed_dict", ")", "\n", "\n", "## Check convergence and update params", "\n", "if", "(", "hunorm", "**", "2", "+", "hvnorm", "**", "2", "<", "eps_t", "**", "2", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "[", "tf", ".", "assign", "(", "self", ".", "rho_t", ",", "self", ".", "c_rho", "*", "self", ".", "rho_t", ")", ",", "tf", ".", "assign", "(", "self", ".", "lamb_t", ",", "self", ".", "lamb_t", "/", "self", ".", "c_rho", ")", ",", "tf", ".", "assign", "(", "self", ".", "eps_t", ",", "self", ".", "eps_t", "/", "self", ".", "c_rho", ")", "]", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "update_nu", ",", "feed_dict", ")", "\n", "# Reduce step size", "\n", "if", "True", ":", "\n", "                ", "self", ".", "sess", ".", "run", "(", "[", "tf", ".", "assign", "(", "self", ".", "lr_u_t", ",", "self", ".", "lr_u_t", "/", "self", ".", "c_rho", ")", ",", "tf", ".", "assign", "(", "self", ".", "lr_v_t", ",", "self", ".", "lr_v_t", "/", "self", ".", "c_rho", ")", "]", ")", "\n", "\n", "", "", "return", "[", "f", ",", "gvnorm", "+", "gvnu", ",", "lamb_g", "]", "#[f,gvnorm,gvnu,lamb_g]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_synthetic.bilevel_penalty.update_singlelevel": [[113, 122], ["bilevel_penalty_aug_lag_synthetic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_synthetic.bilevel_penalty.sess.run"], "methods", ["None"], ["", "def", "update_singlelevel", "(", "self", ",", "feed_dict", ",", "lamb", ")", ":", "\n", "        ", "feed_dict", "[", "self", ".", "lamb_ph", "]", "=", "lamb", "\n", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "min_u_singlelevel", ",", "self", ".", "min_v_singlelevel", "]", ",", "feed_dict", ")", "\n", "if", "False", ":", "#self.clip_u is not None:", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "clip_u", ")", "\n", "", "if", "False", ":", "#self.clip_v is not None:", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "clip_v", ")", "\n", "\n", "", "return", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "f", ",", "self", ".", "g", "]", ",", "feed_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_synthetic.l2norm_sq": [[6, 8], ["tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.square"], "function", ["None"], ["def", "l2norm_sq", "(", "xs", ")", ":", "\n", "    ", "return", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "t", ")", ")", "for", "t", "in", "xs", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_synthetic.l2norm_sq_diff": [[9, 11], ["tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.square", "range", "len"], "function", ["None"], ["", "def", "l2norm_sq_diff", "(", "xs", ",", "ys", ")", ":", "\n", "    ", "return", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "xs", "[", "i", "]", "-", "ys", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "xs", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_synthetic.l2norm_sq_adiff": [[12, 14], ["tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.square", "range", "len", "tensorflow.exp"], "function", ["None"], ["", "def", "l2norm_sq_adiff", "(", "a", ",", "xs", ",", "ys", ")", ":", "\n", "    ", "return", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "tf", ".", "exp", "(", "a", "[", "i", "]", ")", "*", "(", "xs", "[", "i", "]", "-", "ys", "[", "i", "]", ")", ")", ")", "for", "i", "in", "range", "(", "len", "(", "xs", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_synthetic.assign_list": [[15, 17], ["tensorflow.assign", "range", "len"], "function", ["None"], ["", "def", "assign_list", "(", "xs", ",", "ys", ")", ":", "\n", "    ", "return", "[", "tf", ".", "assign", "(", "xs", "[", "i", "]", ",", "ys", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "xs", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_synthetic.addmult_lists": [[18, 23], ["range", "len", "tsum.append"], "function", ["None"], ["", "def", "addmult_lists", "(", "x", ",", "a", ",", "y", ")", ":", "\n", "    ", "tsum", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "x", ")", ")", ":", "\n", "        ", "tsum", ".", "append", "(", "x", "[", "i", "]", "+", "a", "*", "y", "[", "i", "]", ")", "\n", "", "return", "tsum", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_multivar_augm_lag.bilevel_penalty.__init__": [[9, 65], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "range", "tensorflow.gradients", "len", "tensorflow.reduce_sum", "range", "range", "range", "range", "len", "bilevel_penalty_multivar_augm_lag.l2norm_sq", "tensorflow.Variable", "tensorflow.assign", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.assign", "tensorflow.assign", "len", "tensorflow.train.AdamOptimizer", "optim_u[].minimize", "len", "tensorflow.train.AdamOptimizer", "optim_v[].minimize", "len", "optim_u[].compute_gradients", "tensorflow.reduce_sum", "len", "optim_v[].compute_gradients", "tensorflow.reduce_sum", "range", "tensorflow.reduce_sum", "range", "range", "range", "range", "range", "range", "range", "range", "range", "numpy.ones", "range", "len", "len", "len", "len", "len", "len", "len", "len", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.square", "tensorflow.square"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag.l2norm_sq"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "f", ",", "g", ",", "us", ",", "vs", ",", "lr_us", ",", "lr_vs", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "f", "=", "f", "\n", "self", ".", "g", "=", "g", "\n", "\n", "self", ".", "c_rho", "=", "c_rho", "\n", "self", ".", "c_lamb", "=", "c_lamb", "\n", "self", ".", "c_eps", "=", "c_eps", "\n", "\n", "self", ".", "rho_t", "=", "tf", ".", "Variable", "(", "rho_0", ",", "'rho_t'", ")", "\n", "self", ".", "lamb_t", "=", "tf", ".", "Variable", "(", "lamb_0", ",", "'lamb_t'", ")", "\n", "self", ".", "eps_t", "=", "tf", ".", "Variable", "(", "eps_0", ",", "'eps_t'", ")", "\n", "\n", "v_flat", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", ":", "\n", "            ", "v_flat", "+=", "vs", "[", "i", "]", "\n", "\n", "", "self", ".", "dgdv", "=", "tf", ".", "gradients", "(", "g", ",", "v_flat", ")", "\n", "self", ".", "gvnorm", "=", "0.5", "*", "self", ".", "rho_t", "*", "l2norm_sq", "(", "self", ".", "dgdv", ")", "\n", "self", ".", "lamb_g", "=", "self", ".", "lamb_t", "*", "g", "\n", "\n", "n", "=", "len", "(", "self", ".", "dgdv", ")", "\n", "self", ".", "nu_t", "=", "[", "tf", ".", "Variable", "(", "np", ".", "ones", "(", "self", ".", "dgdv", "[", "i", "]", ".", "shape", ",", "dtype", "=", "np", ".", "float32", ")", "*", "nu_0", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "self", ".", "gvnu", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "self", ".", "dgdv", "[", "i", "]", "*", "self", ".", "nu_t", "[", "i", "]", ")", "for", "i", "in", "range", "(", "n", ")", "]", ")", "\n", "self", ".", "update_nu", "=", "[", "tf", ".", "assign", "(", "self", ".", "nu_t", "[", "i", "]", ",", "self", ".", "nu_t", "[", "i", "]", "+", "self", ".", "rho_t", "*", "self", ".", "dgdv", "[", "i", "]", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "\n", "self", ".", "lr_us_t", "=", "[", "tf", ".", "Variable", "(", "lr_us", "[", "i", "]", ",", "dtype", "=", "np", ".", "float32", ")", "for", "i", "in", "range", "(", "len", "(", "lr_us", ")", ")", "]", "\n", "self", ".", "lr_vs_t", "=", "[", "tf", ".", "Variable", "(", "lr_vs", "[", "i", "]", ",", "dtype", "=", "np", ".", "float32", ")", "for", "i", "in", "range", "(", "len", "(", "lr_vs", ")", ")", "]", "\n", "self", ".", "lr_us_update", "=", "[", "tf", ".", "assign", "(", "self", ".", "lr_us_t", "[", "i", "]", ",", "self", ".", "lr_us_t", "[", "i", "]", "*", "0.99", ")", "for", "i", "in", "range", "(", "len", "(", "lr_us", ")", ")", "]", "\n", "self", ".", "lr_vs_update", "=", "[", "tf", ".", "assign", "(", "self", ".", "lr_vs_t", "[", "i", "]", ",", "self", ".", "lr_vs_t", "[", "i", "]", "*", "0.99", ")", "for", "i", "in", "range", "(", "len", "(", "lr_vs", ")", ")", "]", "\n", "\n", "h_upper", "=", "f", "+", "self", ".", "gvnu", "+", "self", ".", "gvnorm", "\n", "h_lower", "=", "f", "+", "self", ".", "gvnu", "+", "self", ".", "gvnorm", "+", "self", ".", "lamb_g", "\n", "\n", "optim_u", "=", "[", "[", "]", "for", "i", "in", "range", "(", "len", "(", "us", ")", ")", "]", "\n", "self", ".", "min_u", "=", "[", "[", "]", "for", "i", "in", "range", "(", "len", "(", "us", ")", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "us", ")", ")", ":", "\n", "            ", "optim_u", "[", "i", "]", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_us_t", "[", "i", "]", ")", "\n", "self", ".", "min_u", "[", "i", "]", "=", "optim_u", "[", "i", "]", ".", "minimize", "(", "h_upper", ",", "var_list", "=", "us", "[", "i", "]", ")", "\n", "\n", "", "optim_v", "=", "[", "[", "]", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", "]", "\n", "self", ".", "min_v", "=", "[", "[", "]", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", ":", "\n", "            ", "optim_v", "[", "i", "]", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_vs_t", "[", "i", "]", ")", "\n", "self", ".", "min_v", "[", "i", "]", "=", "optim_v", "[", "i", "]", ".", "minimize", "(", "h_lower", ",", "var_list", "=", "vs", "[", "i", "]", ")", "\n", "\n", "", "self", ".", "hunorm", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "us", ")", ")", ":", "\n", "            ", "tgrad_and_var_u", "=", "optim_u", "[", "i", "]", ".", "compute_gradients", "(", "h_upper", ",", "var_list", "=", "us", "[", "i", "]", ")", "\n", "self", ".", "hunorm", "+=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "t", "[", "0", "]", ")", ")", "for", "t", "in", "tgrad_and_var_u", "]", ")", "\n", "\n", "", "self", ".", "hvnorm", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", ":", "\n", "            ", "tgrad_and_var_v", "=", "optim_v", "[", "i", "]", ".", "compute_gradients", "(", "h_lower", ",", "var_list", "=", "vs", "[", "i", "]", ")", "\n", "self", ".", "hvnorm", "+=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "t", "[", "0", "]", ")", ")", "for", "t", "in", "tgrad_and_var_v", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_multivar_augm_lag.bilevel_penalty.update": [[66, 82], ["range", "bilevel_penalty_multivar_augm_lag.bilevel_penalty.sess.run", "bilevel_penalty_multivar_augm_lag.bilevel_penalty.sess.run", "bilevel_penalty_multivar_augm_lag.bilevel_penalty.sess.run", "bilevel_penalty_multivar_augm_lag.bilevel_penalty.sess.run", "bilevel_penalty_multivar_augm_lag.bilevel_penalty.sess.run", "bilevel_penalty_multivar_augm_lag.bilevel_penalty.sess.run", "bilevel_penalty_multivar_augm_lag.bilevel_penalty.sess.run", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign"], "methods", ["None"], ["", "", "def", "update", "(", "self", ",", "feed_dict", ",", "niter", "=", "1", ")", ":", "\n", "\n", "        ", "for", "it", "in", "range", "(", "niter", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_v", ",", "feed_dict", ")", "\n", "", "self", ".", "sess", ".", "run", "(", "self", ".", "min_u", ",", "feed_dict", ")", "\n", "\n", "f", ",", "gvnorm", ",", "lamb_g", ",", "gvnu", ",", "hunorm", ",", "hvnorm", ",", "eps_t", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "f", ",", "self", ".", "gvnorm", ",", "self", ".", "lamb_g", ",", "self", ".", "gvnu", ",", "self", ".", "hunorm", ",", "self", ".", "hvnorm", ",", "self", ".", "eps_t", "]", ",", "feed_dict", ")", "\n", "\n", "## Check convergence and update params", "\n", "if", "(", "hunorm", "**", "2", "+", "hvnorm", "**", "2", "<", "eps_t", "**", "2", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "[", "tf", ".", "assign", "(", "self", ".", "rho_t", ",", "self", ".", "c_rho", "*", "self", ".", "rho_t", ")", ",", "tf", ".", "assign", "(", "self", ".", "lamb_t", ",", "self", ".", "c_lamb", "*", "self", ".", "lamb_t", ")", ",", "tf", ".", "assign", "(", "self", ".", "eps_t", ",", "self", ".", "c_eps", "*", "self", ".", "eps_t", ")", "]", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "update_nu", ",", "feed_dict", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "lr_us_update", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "lr_vs_update", ")", "\n", "\n", "", "return", "[", "f", ",", "gvnorm", ",", "gvnu", ",", "lamb_g", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_multivar_augm_lag.l2norm_sq": [[4, 6], ["tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.square"], "function", ["None"], ["def", "l2norm_sq", "(", "xs", ")", ":", "\n", "    ", "return", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "t", ")", ")", "for", "t", "in", "xs", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_syntheic.bilevel_penalty.__init__": [[27, 84], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.gradients", "len", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.compute_gradients", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer.compute_gradients", "tensorflow.reduce_sum", "tensorflow.placeholder_with_default", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.train.AdamOptimizer().minimize", "bilevel_penalty_aug_lag_syntheic.l2norm_sq", "tensorflow.Variable", "tensorflow.assign", "numpy.zeros", "range", "tensorflow.reduce_sum", "range", "tensorflow.assign", "tensorflow.assign", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "range", "tensorflow.clip_by_value", "range", "tensorflow.clip_by_value", "range", "tensorflow.square", "tensorflow.square", "len", "len"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag.l2norm_sq"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "f", ",", "g", ",", "u", ",", "v", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "c_rho", ",", "ulb", "=", "None", ",", "uub", "=", "None", ",", "vlb", "=", "None", ",", "vub", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "f", "=", "f", "\n", "self", ".", "g", "=", "g", "\n", "\n", "self", ".", "c_rho", "=", "c_rho", "\n", "#self.c_lamb = c_lamb", "\n", "#self.c_eps = c_eps", "\n", "\n", "self", ".", "rho_t", "=", "tf", ".", "Variable", "(", "rho_0", ",", "'rho_t'", ")", "\n", "self", ".", "lamb_t", "=", "tf", ".", "Variable", "(", "lamb_0", ",", "'lamb_t'", ")", "\n", "self", ".", "eps_t", "=", "tf", ".", "Variable", "(", "eps_0", ",", "'eps_t'", ")", "\n", "\n", "self", ".", "lr_u_t", "=", "tf", ".", "Variable", "(", "lr_u", ",", "'lr_u_t'", ")", "\n", "self", ".", "lr_v_t", "=", "tf", ".", "Variable", "(", "lr_v", ",", "'lr_v_t'", ")", "\n", "\n", "self", ".", "dgdv", "=", "tf", ".", "gradients", "(", "g", ",", "v", ")", "\n", "self", ".", "gvnorm", "=", "0.5", "*", "self", ".", "rho_t", "*", "l2norm_sq", "(", "self", ".", "dgdv", ")", "\n", "self", ".", "lamb_g", "=", "self", ".", "lamb_t", "*", "g", "\n", "\n", "n", "=", "len", "(", "self", ".", "dgdv", ")", "\n", "self", ".", "nu_t", "=", "[", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "self", ".", "dgdv", "[", "i", "]", ".", "shape", ",", "dtype", "=", "np", ".", "float32", ")", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "self", ".", "gvnu", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "self", ".", "dgdv", "[", "i", "]", "*", "self", ".", "nu_t", "[", "i", "]", ")", "for", "i", "in", "range", "(", "n", ")", "]", ")", "\n", "\n", "self", ".", "update_nu", "=", "[", "tf", ".", "assign", "(", "self", ".", "nu_t", "[", "i", "]", ",", "self", ".", "nu_t", "[", "i", "]", "+", "self", ".", "rho_t", "*", "self", ".", "dgdv", "[", "i", "]", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "\n", "if", "ulb", "is", "not", "None", ":", "\n", "            ", "self", ".", "clip_u", "=", "[", "tf", ".", "assign", "(", "u", "[", "i", "]", ",", "tf", ".", "clip_by_value", "(", "u", "[", "i", "]", ",", "ulb", "[", "i", "]", ",", "uub", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "u", ")", ")", "]", "\n", "", "else", ":", "self", ".", "clip_u", "=", "None", "\n", "if", "vlb", "is", "not", "None", ":", "\n", "            ", "self", ".", "clip_v", "=", "[", "tf", ".", "assign", "(", "v", "[", "i", "]", ",", "tf", ".", "clip_by_value", "(", "v", "[", "i", "]", ",", "vlb", "[", "i", "]", ",", "vub", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "v", ")", ")", "]", "\n", "", "else", ":", "self", ".", "clip_v", "=", "None", "\n", "\n", "\n", "h_upper", "=", "f", "+", "self", ".", "gvnu", "+", "self", ".", "gvnorm", "#+ self.lamb_g # No lamb_g term", "\n", "h_lower", "=", "f", "+", "self", ".", "gvnu", "+", "self", ".", "gvnorm", "+", "self", ".", "lamb_g", "\n", "\n", "optim_u", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_u_t", ")", "\n", "optim_v", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_v_t", ")", "\n", "\n", "self", ".", "min_u", "=", "optim_u", ".", "minimize", "(", "h_upper", ",", "var_list", "=", "u", ")", "\n", "self", ".", "min_v", "=", "optim_v", ".", "minimize", "(", "h_lower", ",", "var_list", "=", "v", ")", "\n", "\n", "tgrad_and_var_u", "=", "optim_u", ".", "compute_gradients", "(", "h_upper", ",", "var_list", "=", "u", ")", "\n", "self", ".", "hunorm", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "t", "[", "0", "]", ")", ")", "for", "t", "in", "tgrad_and_var_u", "]", ")", "\n", "tgrad_and_var_v", "=", "optim_v", ".", "compute_gradients", "(", "h_lower", ",", "var_list", "=", "v", ")", "\n", "self", ".", "hvnorm", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "t", "[", "0", "]", ")", ")", "for", "t", "in", "tgrad_and_var_v", "]", ")", "\n", "\n", "#self.del_v,_ = zip(*(optim_v.compute_gradients(loss, var_list=v)", "\n", "#self.loss_simple = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits=g,labels=self.y_train_tf))", "\n", "\n", "## singlelevel: min_u,v [f(u,v) + l*g(u,v)]", "\n", "self", ".", "lamb_ph", "=", "tf", ".", "placeholder_with_default", "(", "1.", ",", "shape", "=", "(", ")", ")", "\n", "self", ".", "loss_singlelevel", "=", "f", "+", "self", ".", "lamb_ph", "*", "g", "\n", "self", ".", "min_u_singlelevel", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr_u", ")", ".", "minimize", "(", "self", ".", "loss_singlelevel", ",", "var_list", "=", "u", ")", "\n", "self", ".", "min_v_singlelevel", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr_v", ")", ".", "minimize", "(", "self", ".", "loss_singlelevel", ",", "var_list", "=", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_syntheic.bilevel_penalty.update": [[90, 111], ["range", "bilevel_penalty_aug_lag_syntheic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_syntheic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_syntheic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_syntheic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_syntheic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_syntheic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_syntheic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_syntheic.bilevel_penalty.sess.run", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "feed_dict", ",", "niter", "=", "1", ")", ":", "\n", "\n", "        ", "for", "it", "in", "range", "(", "niter", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_v", ",", "feed_dict", ")", "\n", "if", "False", ":", "#self.clip_v is not None:", "\n", "                ", "self", ".", "sess", ".", "run", "(", "self", ".", "clip_v", ")", "\n", "", "", "self", ".", "sess", ".", "run", "(", "self", ".", "min_u", ",", "feed_dict", ")", "\n", "if", "False", ":", "#self.clip_u is not None:", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "clip_u", ")", "\n", "\n", "", "f", ",", "gvnorm", ",", "lamb_g", ",", "gvnu", ",", "hunorm", ",", "hvnorm", ",", "eps_t", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "f", ",", "self", ".", "gvnorm", ",", "self", ".", "lamb_g", ",", "self", ".", "gvnu", ",", "self", ".", "hunorm", ",", "self", ".", "hvnorm", ",", "self", ".", "eps_t", "]", ",", "feed_dict", ")", "\n", "\n", "## Check convergence and update params", "\n", "if", "(", "hunorm", "**", "2", "+", "hvnorm", "**", "2", "<", "eps_t", "**", "2", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "[", "tf", ".", "assign", "(", "self", ".", "rho_t", ",", "self", ".", "c_rho", "*", "self", ".", "rho_t", ")", ",", "tf", ".", "assign", "(", "self", ".", "lamb_t", ",", "self", ".", "lamb_t", "/", "self", ".", "c_rho", ")", ",", "tf", ".", "assign", "(", "self", ".", "eps_t", ",", "self", ".", "eps_t", "/", "self", ".", "c_rho", ")", "]", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "update_nu", ",", "feed_dict", ")", "\n", "# Reduce step size", "\n", "if", "True", ":", "\n", "                ", "self", ".", "sess", ".", "run", "(", "[", "tf", ".", "assign", "(", "self", ".", "lr_u_t", ",", "self", ".", "lr_u_t", "/", "self", ".", "c_rho", ")", ",", "tf", ".", "assign", "(", "self", ".", "lr_v_t", ",", "self", ".", "lr_v_t", "/", "self", ".", "c_rho", ")", "]", ")", "\n", "\n", "", "", "return", "[", "f", ",", "gvnorm", "+", "gvnu", ",", "lamb_g", "]", "#[f,gvnorm,gvnu,lamb_g]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_syntheic.bilevel_penalty.update_singlelevel": [[113, 122], ["bilevel_penalty_aug_lag_syntheic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_syntheic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_syntheic.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag_syntheic.bilevel_penalty.sess.run"], "methods", ["None"], ["", "def", "update_singlelevel", "(", "self", ",", "feed_dict", ",", "lamb", ")", ":", "\n", "        ", "feed_dict", "[", "self", ".", "lamb_ph", "]", "=", "lamb", "\n", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "min_u_singlelevel", ",", "self", ".", "min_v_singlelevel", "]", ",", "feed_dict", ")", "\n", "if", "False", ":", "#self.clip_u is not None:", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "clip_u", ")", "\n", "", "if", "False", ":", "#self.clip_v is not None:", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "clip_v", ")", "\n", "\n", "", "return", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "f", ",", "self", ".", "g", "]", ",", "feed_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_syntheic.l2norm_sq": [[6, 8], ["tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.square"], "function", ["None"], ["def", "l2norm_sq", "(", "xs", ")", ":", "\n", "    ", "return", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "t", ")", ")", "for", "t", "in", "xs", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_syntheic.l2norm_sq_diff": [[9, 11], ["tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.square", "range", "len"], "function", ["None"], ["", "def", "l2norm_sq_diff", "(", "xs", ",", "ys", ")", ":", "\n", "    ", "return", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "xs", "[", "i", "]", "-", "ys", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "xs", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_syntheic.l2norm_sq_adiff": [[12, 14], ["tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.square", "range", "len", "tensorflow.exp"], "function", ["None"], ["", "def", "l2norm_sq_adiff", "(", "a", ",", "xs", ",", "ys", ")", ":", "\n", "    ", "return", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "tf", ".", "exp", "(", "a", "[", "i", "]", ")", "*", "(", "xs", "[", "i", "]", "-", "ys", "[", "i", "]", ")", ")", ")", "for", "i", "in", "range", "(", "len", "(", "xs", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_syntheic.assign_list": [[15, 17], ["tensorflow.assign", "range", "len"], "function", ["None"], ["", "def", "assign_list", "(", "xs", ",", "ys", ")", ":", "\n", "    ", "return", "[", "tf", ".", "assign", "(", "xs", "[", "i", "]", ",", "ys", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "xs", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag_syntheic.addmult_lists": [[18, 23], ["range", "len", "tsum.append"], "function", ["None"], ["", "def", "addmult_lists", "(", "x", ",", "a", ",", "y", ")", ":", "\n", "    ", "tsum", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "x", ")", ")", ":", "\n", "        ", "tsum", ".", "append", "(", "x", "[", "i", "]", "+", "a", "*", "y", "[", "i", "]", ")", "\n", "", "return", "tsum", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag.bilevel_penalty.__init__": [[9, 53], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.assign", "tensorflow.assign", "tensorflow.gradients", "len", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "bilevel_penalty_aug_lag.bilevel_penalty.optim_v.minimize", "bilevel_penalty_aug_lag.bilevel_penalty.optim_u.minimize", "bilevel_penalty_aug_lag.bilevel_penalty.optim_u.compute_gradients", "tensorflow.reduce_sum", "bilevel_penalty_aug_lag.bilevel_penalty.optim_v.compute_gradients", "tensorflow.reduce_sum", "bilevel_penalty_aug_lag.l2norm_sq", "tensorflow.Variable", "tensorflow.assign", "range", "tensorflow.reduce_sum", "range", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "numpy.ones", "range", "tensorflow.square", "tensorflow.square"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag.l2norm_sq"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "f", ",", "g", ",", "u", ",", "v", ",", "lr_u", ",", "lr_v", ",", "rho_0", ",", "lamb_0", ",", "eps_0", ",", "nu_0", ",", "c_rho", ",", "c_lamb", ",", "c_eps", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "f", "=", "f", "\n", "self", ".", "g", "=", "g", "\n", "\n", "self", ".", "c_rho", "=", "c_rho", "\n", "self", ".", "c_lamb", "=", "c_lamb", "\n", "self", ".", "c_eps", "=", "c_eps", "\n", "\n", "self", ".", "rho_t", "=", "tf", ".", "Variable", "(", "rho_0", ",", "'rho_t'", ")", "\n", "self", ".", "lamb_t", "=", "tf", ".", "Variable", "(", "lamb_0", ",", "'lamb_t'", ")", "\n", "self", ".", "eps_t", "=", "tf", ".", "Variable", "(", "eps_0", ",", "'eps_t'", ")", "\n", "\n", "self", ".", "lr_u_t", "=", "tf", ".", "Variable", "(", "lr_u", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "lr_v_t", "=", "tf", ".", "Variable", "(", "lr_v", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "lr_u_update", "=", "tf", ".", "assign", "(", "self", ".", "lr_u_t", ",", "self", ".", "lr_u_t", "*", "0.9", ")", "\n", "self", ".", "lr_v_update", "=", "tf", ".", "assign", "(", "self", ".", "lr_v_t", ",", "self", ".", "lr_v_t", "*", "0.9", ")", "\n", "\n", "self", ".", "v", "=", "v", "\n", "\n", "self", ".", "dgdv", "=", "tf", ".", "gradients", "(", "g", ",", "self", ".", "v", ")", "\n", "self", ".", "gvnorm", "=", "0.5", "*", "self", ".", "rho_t", "*", "l2norm_sq", "(", "self", ".", "dgdv", ")", "\n", "self", ".", "lamb_g", "=", "self", ".", "lamb_t", "*", "g", "\n", "\n", "n", "=", "len", "(", "self", ".", "dgdv", ")", "\n", "self", ".", "nu_t", "=", "[", "tf", ".", "Variable", "(", "np", ".", "ones", "(", "self", ".", "dgdv", "[", "i", "]", ".", "shape", ",", "dtype", "=", "np", ".", "float32", ")", "*", "nu_0", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "self", ".", "gvnu", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "self", ".", "dgdv", "[", "i", "]", "*", "self", ".", "nu_t", "[", "i", "]", ")", "for", "i", "in", "range", "(", "n", ")", "]", ")", "\n", "\n", "self", ".", "update_nu", "=", "[", "tf", ".", "assign", "(", "self", ".", "nu_t", "[", "i", "]", ",", "self", ".", "nu_t", "[", "i", "]", "+", "self", ".", "rho_t", "*", "self", ".", "dgdv", "[", "i", "]", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "\n", "h_upper", "=", "f", "+", "self", ".", "gvnu", "+", "self", ".", "gvnorm", "\n", "h_lower", "=", "f", "+", "self", ".", "gvnu", "+", "self", ".", "gvnorm", "+", "self", ".", "lamb_g", "\n", "\n", "self", ".", "optim_u", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_u_t", ")", "\n", "self", ".", "optim_v", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_v_t", ")", "\n", "\n", "self", ".", "min_v", "=", "self", ".", "optim_v", ".", "minimize", "(", "h_lower", ",", "var_list", "=", "self", ".", "v", ")", "\n", "self", ".", "min_u", "=", "self", ".", "optim_u", ".", "minimize", "(", "h_upper", ",", "var_list", "=", "u", ")", "\n", "\n", "tgrad_and_var_u", "=", "self", ".", "optim_u", ".", "compute_gradients", "(", "h_upper", ",", "var_list", "=", "u", ")", "\n", "self", ".", "hunorm", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "t", "[", "0", "]", ")", ")", "for", "t", "in", "tgrad_and_var_u", "]", ")", "\n", "tgrad_and_var_v", "=", "self", ".", "optim_v", ".", "compute_gradients", "(", "h_lower", ",", "var_list", "=", "self", ".", "v", ")", "\n", "self", ".", "hvnorm", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "t", "[", "0", "]", ")", ")", "for", "t", "in", "tgrad_and_var_v", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag.bilevel_penalty.update": [[54, 71], ["range", "bilevel_penalty_aug_lag.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag.bilevel_penalty.sess.run", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "feed_dict", ",", "niter", "=", "1", ",", "update", "=", "0", ")", ":", "\n", "\n", "        ", "for", "it", "in", "range", "(", "niter", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_v", ",", "feed_dict", ")", "\n", "", "self", ".", "sess", ".", "run", "(", "self", ".", "min_u", ",", "feed_dict", ")", "\n", "\n", "f", ",", "gvnorm", ",", "lamb_g", ",", "gvnu", ",", "hunorm", ",", "hvnorm", ",", "eps_t", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "f", ",", "self", ".", "gvnorm", ",", "self", ".", "lamb_g", ",", "self", ".", "gvnu", ",", "self", ".", "hunorm", ",", "self", ".", "hvnorm", ",", "self", ".", "eps_t", "]", ",", "feed_dict", ")", "\n", "\n", "## Check convergence and update params", "\n", "if", "(", "hunorm", "**", "2", "+", "hvnorm", "**", "2", "<", "eps_t", "**", "2", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "[", "tf", ".", "assign", "(", "self", ".", "rho_t", ",", "self", ".", "c_rho", "*", "self", ".", "rho_t", ")", ",", "tf", ".", "assign", "(", "self", ".", "lamb_t", ",", "self", ".", "c_lamb", "*", "self", ".", "lamb_t", ")", ",", "tf", ".", "assign", "(", "self", ".", "eps_t", ",", "self", ".", "c_eps", "*", "self", ".", "eps_t", ")", "]", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "update_nu", ",", "feed_dict", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "lr_u_update", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "lr_v_update", ")", "\n", "\n", "\n", "", "return", "[", "f", ",", "gvnorm", ",", "gvnu", ",", "lamb_g", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag.bilevel_penalty.reset_penalty_parameters": [[72, 79], ["bilevel_penalty_aug_lag.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag.bilevel_penalty.sess.run", "bilevel_penalty_aug_lag.bilevel_penalty.sess.run", "tensorflow.variables_initializer"], "methods", ["None"], ["", "def", "reset_penalty_parameters", "(", "self", ")", ":", "\n", "        ", "self", ".", "sess", ".", "run", "(", "self", ".", "rho_t", ".", "initializer", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "lamb_t", ".", "initializer", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "eps_t", ".", "initializer", ")", "\n", "self", ".", "sess", ".", "run", "(", "tf", ".", "variables_initializer", "(", "self", ".", "nu_t", ")", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "lr_u_t", ".", "initializer", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "lr_v_t", ".", "initializer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag.bilevel_penalty.reset_lower_level": [[80, 82], ["bilevel_penalty_aug_lag.bilevel_penalty.sess.run", "tensorflow.variables_initializer"], "methods", ["None"], ["", "def", "reset_lower_level", "(", "self", ")", ":", "\n", "        ", "self", ".", "sess", ".", "run", "(", "tf", ".", "variables_initializer", "(", "self", ".", "v", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.penalty.bilevel_penalty_aug_lag.l2norm_sq": [[4, 6], ["tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.square"], "function", ["None"], ["def", "l2norm_sq", "(", "xs", ")", ":", "\n", "    ", "return", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "t", ")", ")", "for", "t", "in", "xs", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.rmd.bilevel_rmd.bilevel_rmd.__init__": [[54, 131], ["len", "len", "range", "range", "tensorflow.gradients", "tensorflow.get_variable", "bilevel_rmd.unflatten", "tensorflow.get_variable", "bilevel_rmd.unflatten", "tensorflow.gradients", "tensorflow.gradients", "tensorflow.assign", "tensorflow.assign", "bilevel_rmd._jacobian_vector_product", "tensorflow.assign", "bilevel_rmd._hessian_vector_product", "tensorflow.assign", "tensorflow.assign", "bilevel_rmd.flatten", "bilevel_rmd.flatten", "tensorflow.train.GradientDescentOptimizer", "list", "tensorflow.train.GradientDescentOptimizer.apply_gradients", "tensorflow.assign", "tensorflow.assign", "range", "tensorflow.get_variable", "range", "range", "tensorflow.assign", "tensorflow.assign", "range", "tensorflow.assign", "zip", "tensorflow.clip_by_value", "range", "tensorflow.clip_by_value", "range", "range", "range", "range", "range", "range", "range", "bilevel_rmd.flatten", "bilevel_rmd.flatten", "range", "len", "len", "str", "str"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.unflatten", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.unflatten", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic._jacobian_vector_product", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic._hessian_vector_product", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "f", ",", "g", ",", "u", ",", "v", ",", "lr_u", ",", "lr_v", ",", "ulb", "=", "None", ",", "uub", "=", "None", ",", "vlb", "=", "None", ",", "vub", "=", "None", ",", "Tmax", "=", "50", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "f", "=", "f", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "u", "=", "u", "\n", "self", ".", "v", "=", "v", "\n", "n", "=", "len", "(", "v", ")", "\n", "m", "=", "len", "(", "u", ")", "\n", "\n", "if", "ulb", "is", "not", "None", ":", "\n", "            ", "self", ".", "clip_u", "=", "[", "tf", ".", "assign", "(", "u", "[", "i", "]", ",", "tf", ".", "clip_by_value", "(", "u", "[", "i", "]", ",", "ulb", "[", "i", "]", ",", "uub", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "u", ")", ")", "]", "\n", "", "else", ":", "self", ".", "clip_u", "=", "None", "\n", "if", "vlb", "is", "not", "None", ":", "\n", "            ", "self", ".", "clip_v", "=", "[", "tf", ".", "assign", "(", "v", "[", "i", "]", ",", "tf", ".", "clip_by_value", "(", "v", "[", "i", "]", ",", "vlb", "[", "i", "]", ",", "vub", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "v", ")", ")", "]", "\n", "", "else", ":", "self", ".", "clip_v", "=", "None", "\n", "\n", "\n", "#self.t = tf.get_variable('t',shape=(1),dtype=tf.int16,initializer=tf.zeros_initializer)", "\n", "self", ".", "vs", "=", "[", "[", "[", "]", "for", "i", "in", "range", "(", "n", ")", "]", "for", "t", "in", "range", "(", "Tmax", ")", "]", "\n", "for", "t", "in", "range", "(", "Tmax", ")", ":", "\n", "            ", "self", ".", "vs", "[", "t", "]", "=", "[", "tf", ".", "get_variable", "(", "'v'", "+", "str", "(", "t", ")", "+", "'_'", "+", "str", "(", "i", ")", ",", "shape", "=", "(", "v", "[", "i", "]", ".", "shape", ")", ",", "initializer", "=", "tf", ".", "zeros_initializer", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "## Copy current v to vs[t]", "\n", "", "self", ".", "write_v", "=", "[", "[", "[", "]", "for", "i", "in", "range", "(", "n", ")", "]", "for", "t", "in", "range", "(", "Tmax", ")", "]", "\n", "self", ".", "read_v", "=", "[", "[", "[", "]", "for", "i", "in", "range", "(", "n", ")", "]", "for", "t", "in", "range", "(", "Tmax", ")", "]", "\n", "for", "t", "in", "range", "(", "Tmax", ")", ":", "\n", "            ", "self", ".", "write_v", "[", "t", "]", "=", "[", "tf", ".", "assign", "(", "self", ".", "vs", "[", "t", "]", "[", "i", "]", ",", "self", ".", "v", "[", "i", "]", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "self", ".", "read_v", "[", "t", "]", "=", "[", "tf", ".", "assign", "(", "self", ".", "v", "[", "i", "]", ",", "self", ".", "vs", "[", "t", "]", "[", "i", "]", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "\n", "## min_v g", "\n", "#self.min_v = tf.train.AdamOptimizer(lr_v).minimize(g,var_list=v)", "\n", "#self.min_v = tf.train.GradientDescentOptimizer(lr_v).minimize(g,var_list=v)        ", "\n", "", "gv", "=", "tf", ".", "gradients", "(", "g", ",", "self", ".", "v", ")", "\n", "self", ".", "min_v", "=", "[", "tf", ".", "assign", "(", "self", ".", "v", "[", "i", "]", ",", "self", ".", "v", "[", "i", "]", "-", "lr_v", "*", "gv", "[", "i", "]", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "\n", "## RMD ", "\n", "## Phi = v - lr_v*gv", "\n", "## A = I - lr_v*gvv, B = -lr_v*guv", "\n", "\n", "## q_T := fv(u,v_T), p_T:=fu(u,v_T)\\\\", "\n", "## p_{t-1} = p_t + B_t q_t = p - lr_v guv*q", "\n", "## q_{t-1} = A_t q_t = q - lr_v gvv*q", "\n", "## return p", "\n", "\n", "#self.q = [tf.get_variable('qvec'+str(i),shape=(v[i].shape),initializer=tf.zeros_initializer) for i in range(n)]", "\n", "#self.p = [tf.get_variable('pvec'+str(i),shape=(u[i].shape),initializer=tf.zeros_initializer) for i in range(m)]", "\n", "self", ".", "q_flat", "=", "tf", ".", "get_variable", "(", "'qvec'", ",", "shape", "=", "(", "flatten", "(", "self", ".", "v", ")", ".", "shape", ")", ",", "initializer", "=", "tf", ".", "zeros_initializer", ")", "\n", "self", ".", "q", "=", "unflatten", "(", "self", ".", "q_flat", ",", "self", ".", "v", ")", "\n", "self", ".", "p_flat", "=", "tf", ".", "get_variable", "(", "'pvec'", ",", "shape", "=", "(", "flatten", "(", "self", ".", "u", ")", ".", "shape", ")", ",", "initializer", "=", "tf", ".", "zeros_initializer", ")", "\n", "self", ".", "p", "=", "unflatten", "(", "self", ".", "p_flat", ",", "self", ".", "u", ")", "\n", "\n", "fu", "=", "tf", ".", "gradients", "(", "f", ",", "self", ".", "u", ")", "\n", "fv", "=", "tf", ".", "gradients", "(", "f", ",", "self", ".", "v", ")", "\n", "#self.init_q = [tf.assign(self.q[i],fv[i]) for i in range(n)] # q = dfdv", "\n", "#self.init_p  = [tf.assign(self.p[i],fu[i]) for i in range(m)] # p = dfdu", "\n", "self", ".", "init_q", "=", "tf", ".", "assign", "(", "self", ".", "q_flat", ",", "flatten", "(", "fv", ")", ")", "\n", "self", ".", "init_p", "=", "tf", ".", "assign", "(", "self", ".", "p_flat", ",", "flatten", "(", "fu", ")", ")", "\n", "#self.init_p = [self.p[i].initializer for i in range(m)] # p = 0", "\n", "\n", "## p <- p - lr_v*guv*q", "\n", "guvq", "=", "_jacobian_vector_product", "(", "g", ",", "u", ",", "v", ",", "self", ".", "q_flat", ")", "\n", "#self.update_p = [tf.assign(self.p[i],self.p[i]-lr_v*guvq[i]) for i in range(m)]", "\n", "self", ".", "update_p", "=", "tf", ".", "assign", "(", "self", ".", "p_flat", ",", "self", ".", "p_flat", "-", "lr_v", "*", "guvq", ")", "\n", "## q <- q - lr_v*gvv*q", "\n", "gvvq", "=", "_hessian_vector_product", "(", "g", ",", "v", ",", "self", ".", "q_flat", ")", "\n", "#self.update_q = [tf.assign(self.q[i],self.q[i]-lr_v*gvvq[i]) for i in range(n)]", "\n", "self", ".", "update_q", "=", "tf", ".", "assign", "(", "self", ".", "q_flat", ",", "self", ".", "q_flat", "-", "lr_v", "*", "gvvq", ")", "\n", "\n", "#self.min_u = tf.train.GradientDescentOptimizer(lr_u).minimize(f,var_list=u)        ", "\n", "#self.min_u = tf.train.AdamOptimizer(lr_u).minimize(f,var_list=u)", "\n", "if", "True", ":", "\n", "            ", "self", ".", "min_u", "=", "[", "tf", ".", "assign", "(", "self", ".", "u", "[", "i", "]", ",", "self", ".", "u", "[", "i", "]", "-", "lr_u", "*", "self", ".", "p", "[", "i", "]", ")", "for", "i", "in", "range", "(", "m", ")", "]", "\n", "", "else", ":", "\n", "#opt = tf.train.AdamOptimizer(lr_u)", "\n", "            ", "opt", "=", "tf", ".", "train", ".", "GradientDescentOptimizer", "(", "lr_u", ")", "\n", "grads_and_vars", "=", "list", "(", "zip", "(", "self", ".", "p", ",", "u", ")", ")", "\n", "self", ".", "min_u", "=", "opt", ".", "apply_gradients", "(", "grads_and_vars", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.rmd.bilevel_rmd.bilevel_rmd.update": [[134, 165], ["range", "bilevel_rmd.bilevel_rmd.sess.run", "bilevel_rmd.bilevel_rmd.sess.run", "range", "bilevel_rmd.bilevel_rmd.sess.run", "bilevel_rmd.bilevel_rmd.sess.run", "bilevel_rmd.bilevel_rmd.sess.run", "bilevel_rmd.bilevel_rmd.sess.run", "bilevel_rmd.bilevel_rmd.sess.run", "bilevel_rmd.bilevel_rmd.sess.run", "bilevel_rmd.bilevel_rmd.sess.run", "bilevel_rmd.bilevel_rmd.sess.run", "bilevel_rmd.bilevel_rmd.sess.run", "bilevel_rmd.bilevel_rmd.sess.run"], "methods", ["None"], ["", "", "def", "update", "(", "self", ",", "feed_dict", ",", "niter", "=", "1", ")", ":", "\n", "\n", "## min_v g", "\n", "        ", "for", "it", "in", "range", "(", "niter", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_v", ",", "feed_dict", ")", "# v <- v - lr_v*dg/dv", "\n", "if", "self", ".", "clip_v", "is", "not", "None", ":", "\n", "                ", "self", ".", "sess", ".", "run", "(", "self", ".", "clip_v", ")", "\n", "", "self", ".", "sess", ".", "run", "(", "self", ".", "write_v", "[", "it", "]", ",", "feed_dict", ")", "# vs[t] <- v", "\n", "\n", "## reverse mode", "\n", "#self.sess.run(self.init_psum)", "\n", "", "self", ".", "sess", ".", "run", "(", "self", ".", "init_p", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "init_q", ")", "\n", "#for it in range(niter-1,0,-1): ", "\n", "#for it in range(niter-1,-1,-1): ", "\n", "for", "it", "in", "range", "(", "niter", "-", "2", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "read_v", "[", "it", "]", ",", "feed_dict", ")", "# v <- vs[t]", "\n", "#self.sess.run(self.read_v[it-1],feed_dict)  # v <- vs[t-1]", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "update_p", ",", "feed_dict", ")", "# p <- p - lr_v*guv*q", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "update_q", ",", "feed_dict", ")", "# q <- q - lr_v*gvv*q", "\n", "#self.sess.run(self.sum_p,feed_dict) # psum <= psum + p", "\n", "\n", "## min_u  ", "\n", "", "self", ".", "sess", ".", "run", "(", "self", ".", "read_v", "[", "niter", "-", "1", "]", ",", "feed_dict", ")", "# v <- vs[T-1]", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "min_u", ",", "feed_dict", ")", "# u <- u - lamb*psum", "\n", "if", "self", ".", "clip_u", "is", "not", "None", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "clip_u", ")", "\n", "\n", "", "fval", ",", "gval", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "f", ",", "self", ".", "g", "]", ",", "feed_dict", ")", "\n", "\n", "return", "[", "fval", ",", "gval", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.rmd.bilevel_rmd.replace_none_with_zero": [[9, 11], ["None"], "function", ["None"], ["def", "replace_none_with_zero", "(", "l", ")", ":", "\n", "    ", "return", "[", "0", "if", "i", "==", "None", "else", "i", "for", "i", "in", "l", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.rmd.bilevel_rmd.flatten": [[13, 15], ["tensorflow.concat", "tensorflow.reshape"], "function", ["None"], ["", "def", "flatten", "(", "var", ")", ":", "\n", "    ", "return", "tf", ".", "concat", "(", "[", "tf", ".", "reshape", "(", "_var", ",", "[", "-", "1", "]", ")", "for", "_var", "in", "var", "]", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.rmd.bilevel_rmd.unflatten": [[17, 30], ["tensorflow.size", "tensorflow.reshape", "range", "len"], "function", ["None"], ["", "def", "unflatten", "(", "var", ",", "ref_list", ")", ":", "\n", "    ", "var_list", "=", "[", "[", "]", "for", "i", "in", "range", "(", "len", "(", "ref_list", ")", ")", "]", "\n", "start", "=", "0", "\n", "it", "=", "0", "\n", "for", "list_i", "in", "ref_list", ":", "\n", "        ", "sh", "=", "list_i", ".", "shape", "\n", "#sh_flatten = tf.reshape(list_i, [-1]).shape[0]", "\n", "sh_flatten", "=", "tf", ".", "size", "(", "list_i", ")", "#tf.reshape(list_i, [-1]).shape[0].value", "\n", "sliced", "=", "var", "[", "start", ":", "start", "+", "sh_flatten", "]", "\n", "var_list", "[", "it", "]", "=", "tf", ".", "reshape", "(", "sliced", ",", "sh", ")", "\n", "start", "+=", "sh_flatten", "\n", "it", "+=", "1", "\n", "", "return", "var_list", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.rmd.bilevel_rmd._hessian_vector_product": [[32, 38], ["bilevel_rmd.flatten", "tensorflow.reduce_sum", "bilevel_rmd.flatten", "tensorflow.gradients", "tensorflow.gradients"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["", "def", "_hessian_vector_product", "(", "g", ",", "v", ",", "p_flat", ")", ":", "\n", "\n", "    ", "gv", "=", "flatten", "(", "tf", ".", "gradients", "(", "g", ",", "v", ")", ")", "\n", "gvp", "=", "tf", ".", "reduce_sum", "(", "gv", "*", "p_flat", ")", "#tf.math.multiply(gv, p))", "\n", "gvvp", "=", "flatten", "(", "tf", ".", "gradients", "(", "gvp", ",", "v", ")", ")", "\n", "return", "gvvp", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.rmd.bilevel_rmd._jacobian_vector_product": [[40, 46], ["bilevel_rmd.flatten", "tensorflow.reduce_sum", "bilevel_rmd.flatten", "tensorflow.gradients", "tensorflow.gradients"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["", "def", "_jacobian_vector_product", "(", "g", ",", "u", ",", "v", ",", "p_flat", ")", ":", "\n", "\n", "    ", "gv", "=", "flatten", "(", "tf", ".", "gradients", "(", "g", ",", "v", ")", ")", "\n", "gvp", "=", "tf", ".", "reduce_sum", "(", "gv", "*", "p_flat", ")", "#tf.math.multiply(gv, p))", "\n", "guvp", "=", "flatten", "(", "tf", ".", "gradients", "(", "gvp", ",", "u", ")", ")", "\n", "return", "guvp", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad.bilevel_approxgrad.__init__": [[26, 57], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "bilevel_approxgrad.bilevel_approxgrad.optim_v.minimize", "bilevel_approxgrad._hessian_vector_product", "tensorflow.gradients", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.gradients", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.get_variable", "range", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer", "str", "len", "tensorflow.square", "range", "range", "len", "len"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic._hessian_vector_product"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "f", ",", "g", ",", "u", ",", "v", ",", "sig", "=", "1E-10", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "f", "=", "f", "\n", "self", ".", "g", "=", "g", "\n", "\n", "self", ".", "lr_u", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "self", ".", "lr_v", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "self", ".", "lr_p", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "\n", "self", ".", "p", "=", "[", "tf", ".", "get_variable", "(", "'pvec'", "+", "str", "(", "i", ")", ",", "shape", "=", "(", "v", "[", "i", "]", ".", "shape", ")", ",", "initializer", "=", "tf", ".", "zeros_initializer", ")", "for", "i", "in", "range", "(", "len", "(", "v", ")", ")", "]", "\n", "self", ".", "sig", "=", "sig", "\n", "\n", "## min_v g", "\n", "self", ".", "optim_v", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_v", ")", "\n", "self", ".", "min_v", "=", "self", ".", "optim_v", ".", "minimize", "(", "self", ".", "g", ",", "var_list", "=", "v", ")", "\n", "\n", "## solve gvv*p = fv:   ", "\n", "## min_p   0.5*p'*gvv*p - p'*fv or \\|gvv*p - fv\\|^2 or p <- p - c*[gvv*p - fv]??", "\n", "self", ".", "gvvp", "=", "_hessian_vector_product", "(", "self", ".", "g", ",", "v", ",", "self", ".", "p", ")", "\n", "self", ".", "fv", "=", "tf", ".", "gradients", "(", "self", ".", "f", ",", "v", ")", "\n", "\n", "self", ".", "h", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "self", ".", "gvvp", "[", "i", "]", "+", "self", ".", "sig", "*", "self", ".", "p", "[", "i", "]", "-", "self", ".", "fv", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "v", ")", ")", "]", ")", "\n", "self", ".", "min_p", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_p", ")", ".", "minimize", "(", "self", ".", "h", ",", "var_list", "=", "self", ".", "p", ")", "\n", "\n", "#Computing the", "\n", "## min_u  [f - gv*p]:  u <- u - [fu - guv*p]", "\n", "gv", "=", "tf", ".", "gradients", "(", "self", ".", "g", ",", "v", ")", "\n", "gvp", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "gv", "[", "i", "]", "*", "self", ".", "p", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "v", ")", ")", "]", ")", "\n", "f_", "=", "self", ".", "f", "-", "gvp", "# df_du = fu - guv*p = fu - guv*inv(gvv)*fv", "\n", "self", ".", "min_u", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_u", ")", ".", "minimize", "(", "f_", ",", "var_list", "=", "u", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad.bilevel_approxgrad.update": [[59, 78], ["feed_dict.update", "range", "feed_dict.update", "range", "feed_dict.update", "bilevel_approxgrad.bilevel_approxgrad.sess.run", "bilevel_approxgrad.bilevel_approxgrad.sess.run", "bilevel_approxgrad.bilevel_approxgrad.sess.run", "bilevel_approxgrad.bilevel_approxgrad.sess.run"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update"], ["", "def", "update", "(", "self", ",", "feed_dict", ",", "lr_u", ",", "lr_v", ",", "lr_p", ",", "niter1", "=", "1", ",", "niter2", "=", "1", ")", ":", "\n", "\n", "## min_v g", "\n", "        ", "feed_dict", ".", "update", "(", "{", "self", ".", "lr_v", ":", "lr_v", "}", ")", "\n", "for", "it", "in", "range", "(", "niter1", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_v", ",", "feed_dict", ")", "\n", "\n", "## solve gvv*p = fv    ", "\n", "", "feed_dict", ".", "update", "(", "{", "self", ".", "lr_p", ":", "lr_p", "}", ")", "\n", "for", "it", "in", "range", "(", "niter2", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_p", ",", "feed_dict", ")", "\n", "\n", "## min_u  [f - gv*p]:  u <- u - [fu - guv*p]", "\n", "", "feed_dict", ".", "update", "(", "{", "self", ".", "lr_u", ":", "lr_u", "}", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "min_u", ",", "feed_dict", ")", "\n", "\n", "fval", ",", "gval", ",", "hval", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "f", ",", "self", ".", "g", ",", "self", ".", "h", "]", ",", "feed_dict", ")", "\n", "\n", "return", "[", "fval", ",", "gval", ",", "hval", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad._hessian_vector_product": [[4, 22], ["len", "tensorflow.gradients", "tensorflow.reduce_sum", "tensorflow.gradients", "len", "ValueError", "len", "tensorflow.reduce_sum", "tensorflow.multiply", "zip"], "function", ["None"], ["def", "_hessian_vector_product", "(", "ys", ",", "xs", ",", "v", ")", ":", "\n", "\n", "    ", "length", "=", "len", "(", "xs", ")", "\n", "if", "len", "(", "v", ")", "!=", "length", ":", "\n", "        ", "raise", "ValueError", "(", "\"xs and v must have the same length.\"", ")", "\n", "\n", "# First backprop", "\n", "", "grads", "=", "tf", ".", "gradients", "(", "ys", ",", "xs", ")", "\n", "\n", "assert", "len", "(", "grads", ")", "==", "length", "\n", "elemwise_products", "=", "tf", ".", "reduce_sum", "(", "[", "\n", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "grad_elem", ",", "v_elem", ")", ")", "\n", "for", "grad_elem", ",", "v_elem", "in", "zip", "(", "grads", ",", "v", ")", "\n", "if", "grad_elem", "is", "not", "None", "\n", "]", ")", "\n", "\n", "# Second backprop", "\n", "return", "tf", ".", "gradients", "(", "elemwise_products", ",", "xs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_multivar.bilevel_approxgrad_multivar.__init__": [[25, 68], ["range", "tensorflow.reduce_sum", "range", "range", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "len", "tensorflow.train.AdamOptimizer", "optim_v[].minimize", "bilevel_approxgrad_multivar._hessian_vector_product", "tensorflow.gradients", "tensorflow.reduce_sum", "len", "tensorflow.train.AdamOptimizer", "optim_p[].minimize", "tensorflow.gradients", "tensorflow.reduce_sum", "len", "tensorflow.train.AdamOptimizer", "optim_u[].minimize", "range", "range", "range", "range", "range", "tensorflow.get_variable", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "len", "len", "len", "len", "len", "range", "len", "len", "len", "tensorflow.reduce_sum", "len", "len", "len", "len", "tensorflow.reduce_sum", "len", "len", "len", "len", "str", "len", "tensorflow.square", "range", "range", "len", "len", "str"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic._hessian_vector_product"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "f", ",", "g", ",", "us", ",", "vs", ",", "lr_us", ",", "lr_vs", ",", "lr_ps", ",", "sig", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "f", "=", "f", "\n", "self", ".", "g", "=", "g", "\n", "\n", "self", ".", "lr_vs_t", "=", "[", "tf", ".", "Variable", "(", "lr_vs", "[", "i", "]", ",", "dtype", "=", "np", ".", "float32", ")", "for", "i", "in", "range", "(", "len", "(", "lr_vs", ")", ")", "]", "\n", "self", ".", "lr_us_t", "=", "[", "tf", ".", "Variable", "(", "lr_us", "[", "i", "]", ",", "dtype", "=", "np", ".", "float32", ")", "for", "i", "in", "range", "(", "len", "(", "lr_us", ")", ")", "]", "\n", "self", ".", "lr_ps_t", "=", "[", "tf", ".", "Variable", "(", "lr_ps", "[", "i", "]", ",", "dtype", "=", "np", ".", "float32", ")", "for", "i", "in", "range", "(", "len", "(", "lr_ps", ")", ")", "]", "\n", "\n", "optim_v", "=", "[", "[", "]", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", "]", "\n", "self", ".", "min_v", "=", "[", "[", "]", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", ":", "\n", "            ", "optim_v", "[", "i", "]", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_vs_t", "[", "i", "]", ")", "\n", "self", ".", "min_v", "[", "i", "]", "=", "optim_v", "[", "i", "]", ".", "minimize", "(", "self", ".", "g", ",", "var_list", "=", "vs", "[", "i", "]", ")", "\n", "\n", "", "self", ".", "ps", "=", "[", "[", "tf", ".", "get_variable", "(", "'pvec_'", "+", "str", "(", "i", ")", "+", "'_'", "+", "str", "(", "j", ")", ",", "shape", "=", "(", "vs", "[", "i", "]", "[", "j", "]", ".", "shape", ")", ",", "initializer", "=", "tf", ".", "zeros_initializer", ")", "for", "j", "in", "range", "(", "len", "(", "vs", "[", "i", "]", ")", ")", "]", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", "]", "\n", "self", ".", "sig", "=", "sig", "\n", "\n", "gvvps", "=", "[", "_hessian_vector_product", "(", "self", ".", "g", ",", "vs", "[", "i", "]", ",", "self", ".", "ps", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", "]", "\n", "fvs", "=", "[", "tf", ".", "gradients", "(", "self", ".", "f", ",", "vs", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", "]", "\n", "\n", "self", ".", "hs", "=", "[", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "gvvps", "[", "i", "]", "[", "j", "]", "+", "self", ".", "sig", "*", "self", ".", "ps", "[", "i", "]", "[", "j", "]", "-", "fvs", "[", "i", "]", "[", "j", "]", ")", ")", "for", "j", "in", "range", "(", "len", "(", "vs", "[", "i", "]", ")", ")", "]", ")", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", "]", "\n", "self", ".", "h", "=", "tf", ".", "reduce_sum", "(", "self", ".", "hs", ")", "\n", "\n", "optim_p", "=", "[", "[", "]", "for", "i", "in", "range", "(", "len", "(", "self", ".", "ps", ")", ")", "]", "\n", "self", ".", "min_p", "=", "[", "[", "]", "for", "i", "in", "range", "(", "len", "(", "self", ".", "ps", ")", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "ps", ")", ")", ":", "\n", "            ", "optim_p", "[", "i", "]", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_ps_t", "[", "i", "]", ")", "\n", "self", ".", "min_p", "[", "i", "]", "=", "optim_p", "[", "i", "]", ".", "minimize", "(", "self", ".", "hs", "[", "i", "]", ",", "var_list", "=", "self", ".", "ps", "[", "i", "]", ")", "\n", "\n", "#Computing the", "\n", "## min_u  [f - gv*p]:  u <- u - [fu - guv*p]", "\n", "", "gvs", "=", "[", "tf", ".", "gradients", "(", "self", ".", "g", ",", "vs", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", "]", "\n", "gvps", "=", "[", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "gvs", "[", "i", "]", "[", "j", "]", "*", "self", ".", "ps", "[", "i", "]", "[", "j", "]", ")", "for", "j", "in", "range", "(", "len", "(", "vs", "[", "i", "]", ")", ")", "]", ")", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", "]", "\n", "#gvp = tf.reduce_sum(gv*self.p)", "\n", "f_", "=", "[", "self", ".", "f", "-", "gvps", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "vs", ")", ")", "]", "# df_du = fu - guv*p = fu - guv*inv(gvv)*fv", "\n", "\n", "optim_u", "=", "[", "[", "]", "for", "i", "in", "range", "(", "len", "(", "us", ")", ")", "]", "\n", "self", ".", "min_u", "=", "[", "[", "]", "for", "i", "in", "range", "(", "len", "(", "us", ")", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "us", ")", ")", ":", "\n", "            ", "optim_u", "[", "i", "]", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr_us_t", "[", "i", "]", ")", "\n", "self", ".", "min_u", "[", "i", "]", "=", "optim_u", "[", "i", "]", ".", "minimize", "(", "f_", "[", "i", "]", ",", "var_list", "=", "us", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_multivar.bilevel_approxgrad_multivar.update": [[70, 83], ["range", "range", "bilevel_approxgrad_multivar.bilevel_approxgrad_multivar.sess.run", "bilevel_approxgrad_multivar.bilevel_approxgrad_multivar.sess.run", "bilevel_approxgrad_multivar.bilevel_approxgrad_multivar.sess.run", "bilevel_approxgrad_multivar.bilevel_approxgrad_multivar.sess.run"], "methods", ["None"], ["", "", "def", "update", "(", "self", ",", "feed_dict", ",", "niter1", "=", "1", ",", "niter2", "=", "1", ")", ":", "\n", "\n", "        ", "for", "it", "in", "range", "(", "niter1", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_v", ",", "feed_dict", ")", "\n", "\n", "", "for", "it", "in", "range", "(", "niter2", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_p", ",", "feed_dict", ")", "\n", "\n", "", "self", ".", "sess", ".", "run", "(", "self", ".", "min_u", ",", "feed_dict", ")", "\n", "\n", "fval", ",", "gval", ",", "hval", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "f", ",", "self", ".", "g", ",", "self", ".", "h", "]", ",", "feed_dict", ")", "\n", "\n", "return", "[", "fval", ",", "gval", ",", "hval", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_multivar._hessian_vector_product": [[4, 22], ["len", "tensorflow.gradients", "tensorflow.reduce_sum", "tensorflow.gradients", "len", "ValueError", "len", "tensorflow.reduce_sum", "tensorflow.multiply", "zip"], "function", ["None"], ["def", "_hessian_vector_product", "(", "ys", ",", "xs", ",", "v", ")", ":", "\n", "\n", "    ", "length", "=", "len", "(", "xs", ")", "\n", "if", "len", "(", "v", ")", "!=", "length", ":", "\n", "        ", "raise", "ValueError", "(", "\"xs and v must have the same length.\"", ")", "\n", "\n", "# First backprop", "\n", "", "grads", "=", "tf", ".", "gradients", "(", "ys", ",", "xs", ")", "\n", "\n", "assert", "len", "(", "grads", ")", "==", "length", "\n", "elemwise_products", "=", "tf", ".", "reduce_sum", "(", "[", "\n", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "grad_elem", ",", "v_elem", ")", ")", "\n", "for", "grad_elem", ",", "v_elem", "in", "zip", "(", "grads", ",", "v", ")", "\n", "if", "grad_elem", "is", "not", "None", "\n", "]", ")", "\n", "\n", "# Second backprop", "\n", "return", "tf", ".", "gradients", "(", "elemwise_products", ",", "xs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.bilevel_approxgrad.__init__": [[41, 79], ["tensorflow.get_variable", "bilevel_approxgrad_synthetic.unflatten", "tensorflow.train.AdamOptimizer().minimize", "bilevel_approxgrad_synthetic._hessian_vector_product", "bilevel_approxgrad_synthetic.flatten", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.gradients", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.get_variable", "tensorflow.gradients", "tensorflow.square", "tensorflow.assign", "tensorflow.assign", "range", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer", "tensorflow.clip_by_value", "range", "tensorflow.clip_by_value", "range", "str", "len", "bilevel_approxgrad_synthetic.flatten", "range", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.unflatten", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic._hessian_vector_product", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "f", ",", "g", ",", "u", ",", "v", ",", "lr_u", ",", "lr_v", ",", "lr_p", ",", "ulb", "=", "None", ",", "uub", "=", "None", ",", "vlb", "=", "None", ",", "vub", "=", "None", ",", "sig", "=", "1E-6", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "f", "=", "f", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "u", "=", "u", "\n", "self", ".", "v", "=", "v", "\n", "\n", "if", "ulb", "is", "not", "None", ":", "\n", "            ", "self", ".", "clip_u", "=", "[", "tf", ".", "assign", "(", "u", "[", "i", "]", ",", "tf", ".", "clip_by_value", "(", "u", "[", "i", "]", ",", "ulb", "[", "i", "]", ",", "uub", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "u", ")", ")", "]", "\n", "", "else", ":", "self", ".", "clip_u", "=", "None", "\n", "if", "vlb", "is", "not", "None", ":", "\n", "            ", "self", ".", "clip_v", "=", "[", "tf", ".", "assign", "(", "v", "[", "i", "]", ",", "tf", ".", "clip_by_value", "(", "v", "[", "i", "]", ",", "vlb", "[", "i", "]", ",", "vub", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "v", ")", ")", "]", "\n", "", "else", ":", "self", ".", "clip_v", "=", "None", "\n", "\n", "self", ".", "q", "=", "[", "tf", ".", "get_variable", "(", "'qvec'", "+", "str", "(", "i", ")", ",", "shape", "=", "(", "v", "[", "i", "]", ".", "shape", ")", ",", "initializer", "=", "tf", ".", "zeros_initializer", ")", "for", "i", "in", "range", "(", "len", "(", "v", ")", ")", "]", "\n", "self", ".", "p_flat", "=", "tf", ".", "get_variable", "(", "'pvec'", ",", "shape", "=", "(", "flatten", "(", "self", ".", "q", ")", ".", "shape", ")", ",", "initializer", "=", "tf", ".", "zeros_initializer", ")", "\n", "self", ".", "p", "=", "unflatten", "(", "self", ".", "p_flat", ",", "self", ".", "v", ")", "\n", "self", ".", "sig", "=", "sig", "\n", "\n", "## min_v g", "\n", "self", ".", "min_v", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr_v", ")", ".", "minimize", "(", "self", ".", "g", ",", "var_list", "=", "self", ".", "v", ")", "\n", "\n", "## solve gvv*p = fv:   ", "\n", "## min_p   \\|gvv*p - fv\\|^2 ", "\n", "self", ".", "gvvp", "=", "_hessian_vector_product", "(", "self", ".", "g", ",", "self", ".", "v", ",", "self", ".", "p_flat", ")", "\n", "self", ".", "fv", "=", "flatten", "(", "tf", ".", "gradients", "(", "self", ".", "f", ",", "self", ".", "v", ")", ")", "\n", "\n", "self", ".", "h", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "self", ".", "gvvp", "+", "self", ".", "sig", "*", "self", ".", "p_flat", "-", "self", ".", "fv", ")", ")", "\n", "\n", "self", ".", "min_p", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr_p", ")", ".", "minimize", "(", "self", ".", "h", ",", "var_list", "=", "self", ".", "p_flat", ")", "\n", "\n", "#Computing the", "\n", "## min_u  [f - gv*p]:  u <- u - [fu - guv*p]", "\n", "self", ".", "gv", "=", "tf", ".", "gradients", "(", "self", ".", "g", ",", "self", ".", "v", ")", "\n", "self", ".", "gvp", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_sum", "(", "self", ".", "gv", "[", "i", "]", "*", "self", ".", "p", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "self", ".", "v", ")", ")", "]", ")", "\n", "self", ".", "f_", "=", "self", ".", "f", "-", "self", ".", "gvp", "# df_du = fu - guv*p = fu - guv*inv(gvv)*fv", "\n", "self", ".", "min_u", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr_u", ")", ".", "minimize", "(", "self", ".", "f_", ",", "var_list", "=", "self", ".", "u", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.bilevel_approxgrad.update": [[81, 101], ["range", "range", "bilevel_approxgrad_synthetic.bilevel_approxgrad.sess.run", "bilevel_approxgrad_synthetic.bilevel_approxgrad.sess.run", "bilevel_approxgrad_synthetic.bilevel_approxgrad.sess.run", "bilevel_approxgrad_synthetic.bilevel_approxgrad.sess.run", "bilevel_approxgrad_synthetic.bilevel_approxgrad.sess.run", "bilevel_approxgrad_synthetic.bilevel_approxgrad.sess.run"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "feed_dict", ",", "niter1", "=", "1", ",", "niter2", "=", "1", ")", ":", "\n", "\n", "## min_v g", "\n", "        ", "for", "it", "in", "range", "(", "niter1", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_v", ",", "feed_dict", ")", "\n", "if", "False", ":", "#self.clip_v is not None:", "\n", "                ", "self", ".", "sess", ".", "run", "(", "self", ".", "clip_v", ")", "\n", "\n", "## solve gvv*p = fv    ", "\n", "", "", "for", "it", "in", "range", "(", "niter2", "+", "1", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_p", ",", "feed_dict", ")", "\n", "\n", "## min_u  [f - gv*p]:  u <- u - [fu - guv*p]", "\n", "", "self", ".", "sess", ".", "run", "(", "self", ".", "min_u", ",", "feed_dict", ")", "\n", "if", "False", ":", "#self.clip_u is not None:", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "clip_u", ")", "\n", "\n", "", "fval", ",", "gval", ",", "hval", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "f", ",", "self", ".", "g", ",", "self", ".", "h", "]", ",", "feed_dict", ")", "\n", "\n", "return", "[", "fval", ",", "gval", ",", "hval", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten": [[3, 5], ["tensorflow.concat", "tensorflow.reshape"], "function", ["None"], ["def", "flatten", "(", "var", ")", ":", "\n", "    ", "return", "tf", ".", "concat", "(", "[", "tf", ".", "reshape", "(", "_var", ",", "[", "-", "1", "]", ")", "for", "_var", "in", "var", "]", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.unflatten": [[7, 20], ["tensorflow.size", "tensorflow.reshape", "range", "len"], "function", ["None"], ["", "def", "unflatten", "(", "var", ",", "ref_list", ")", ":", "\n", "    ", "var_list", "=", "[", "[", "]", "for", "i", "in", "range", "(", "len", "(", "ref_list", ")", ")", "]", "\n", "start", "=", "0", "\n", "it", "=", "0", "\n", "for", "list_i", "in", "ref_list", ":", "\n", "        ", "sh", "=", "list_i", ".", "shape", "\n", "#sh_flatten = tf.reshape(list_i, [-1]).shape[0]", "\n", "sh_flatten", "=", "tf", ".", "size", "(", "list_i", ")", "#tf.reshape(list_i, [-1]).shape[0].value", "\n", "sliced", "=", "var", "[", "start", ":", "start", "+", "sh_flatten", "]", "\n", "var_list", "[", "it", "]", "=", "tf", ".", "reshape", "(", "sliced", ",", "sh", ")", "\n", "start", "+=", "sh_flatten", "\n", "it", "+=", "1", "\n", "", "return", "var_list", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic._hessian_vector_product": [[22, 28], ["bilevel_approxgrad_synthetic.flatten", "tensorflow.reduce_sum", "bilevel_approxgrad_synthetic.flatten", "tensorflow.gradients", "tensorflow.gradients"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["", "def", "_hessian_vector_product", "(", "g", ",", "v", ",", "p_flat", ")", ":", "\n", "\n", "    ", "gv", "=", "flatten", "(", "tf", ".", "gradients", "(", "g", ",", "v", ")", ")", "\n", "gvp", "=", "tf", ".", "reduce_sum", "(", "gv", "*", "p_flat", ")", "#tf.math.multiply(gv, p))", "\n", "gvvp", "=", "flatten", "(", "tf", ".", "gradients", "(", "gvp", ",", "v", ")", ")", "\n", "return", "gvvp", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic._jacobian_vector_product": [[30, 36], ["bilevel_approxgrad_synthetic.flatten", "tensorflow.reduce_sum", "bilevel_approxgrad_synthetic.flatten", "tensorflow.gradients", "tensorflow.gradients"], "function", ["home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten", "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.approxgrad.bilevel_approxgrad_synthetic.flatten"], ["", "def", "_jacobian_vector_product", "(", "g", ",", "u", ",", "v", ",", "p_flat", ")", ":", "\n", "\n", "    ", "gv", "=", "flatten", "(", "tf", ".", "gradients", "(", "g", ",", "v", ")", ")", "\n", "gvp", "=", "tf", ".", "reduce_sum", "(", "gv", "*", "p_flat", ")", "#tf.math.multiply(gv, p))", "\n", "guvp", "=", "flatten", "(", "tf", ".", "gradients", "(", "gvp", ",", "u", ")", ")", "\n", "return", "guvp", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.__init__": [[11, 29], ["tensorflow.train.AdamOptimizer().minimize", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.assign", "tensorflow.assign", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.clip_by_value", "range", "tensorflow.clip_by_value", "range", "len", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "f", ",", "g", ",", "u", ",", "v", ",", "lr_u", ",", "lr_v", ",", "ulb", "=", "None", ",", "uub", "=", "None", ",", "vlb", "=", "None", ",", "vub", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "f", "=", "f", "\n", "self", ".", "g", "=", "g", "\n", "\n", "if", "ulb", "is", "not", "None", ":", "\n", "            ", "self", ".", "clip_u", "=", "[", "tf", ".", "assign", "(", "u", "[", "i", "]", ",", "tf", ".", "clip_by_value", "(", "u", "[", "i", "]", ",", "ulb", "[", "i", "]", ",", "uub", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "u", ")", ")", "]", "\n", "", "else", ":", "self", ".", "clip_u", "=", "None", "\n", "if", "vlb", "is", "not", "None", ":", "\n", "            ", "self", ".", "clip_v", "=", "[", "tf", ".", "assign", "(", "v", "[", "i", "]", ",", "tf", ".", "clip_by_value", "(", "v", "[", "i", "]", ",", "vlb", "[", "i", "]", ",", "vub", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "v", ")", ")", "]", "\n", "", "else", ":", "self", ".", "clip_v", "=", "None", "\n", "\n", "## min_u f", "\n", "self", ".", "min_u", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr_u", ")", ".", "minimize", "(", "f", ",", "var_list", "=", "u", ")", "\n", "\n", "## min_v g", "\n", "self", ".", "min_v", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr_v", ")", ".", "minimize", "(", "g", ",", "var_list", "=", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihunhamm_bilevel-penalty.gd.bilevel_gd.bilevel_gd.update": [[32, 48], ["range", "bilevel_gd.bilevel_gd.sess.run", "bilevel_gd.bilevel_gd.sess.run", "bilevel_gd.bilevel_gd.sess.run", "bilevel_gd.bilevel_gd.sess.run", "bilevel_gd.bilevel_gd.sess.run"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "feed_dict", ",", "niter", "=", "1", ")", ":", "\n", "\n", "## min_v g", "\n", "        ", "for", "it", "in", "range", "(", "niter", ")", ":", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "min_v", ",", "feed_dict", ")", "\n", "if", "False", ":", "#self.clip_v is not None:", "\n", "                ", "self", ".", "sess", ".", "run", "(", "self", ".", "clip_v", ")", "\n", "\n", "## min_u f", "\n", "", "", "self", ".", "sess", ".", "run", "(", "self", ".", "min_u", ",", "feed_dict", ")", "\n", "if", "False", ":", "#self.clip_u is not None:", "\n", "            ", "self", ".", "sess", ".", "run", "(", "self", ".", "clip_u", ")", "\n", "\n", "", "fval", ",", "gval", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "f", ",", "self", ".", "g", "]", ",", "feed_dict", ")", "\n", "\n", "return", "[", "fval", ",", "gval", "]", "\n", "\n"]]}