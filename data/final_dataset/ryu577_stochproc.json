{"home.repos.pwc.inspect_result.ryu577_stochproc.queueing.mm1.mm1_queue": [[5, 35], ["numpy.random.exponential", "numpy.cumsum", "range", "numpy.diff", "numpy.concatenate", "matplotlib.plot", "matplotlib.axhline", "matplotlib.show", "len", "customers_in_system.append", "state_change_times.append", "numpy.cumsum", "numpy.random.exponential", "state_change_times.append", "customers_in_system.append"], "function", ["None"], ["def", "mm1_queue", "(", "lmb", "=", "1", ",", "mu", "=", "3", ")", ":", "\n", "    ", "\"\"\"\n    Simulates the number of customers in the system for \n    an M/M/1 queue and compares with the closed form.\n    \"\"\"", "\n", "arrival_intervals", "=", "np", ".", "random", ".", "exponential", "(", "scale", "=", "1", "/", "lmb", ",", "size", "=", "2000", ")", "\n", "arrival_times", "=", "np", ".", "cumsum", "(", "arrival_intervals", ")", "\n", "n", "=", "0", "\n", "customers_in_system", "=", "[", "]", "\n", "state_change_times", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "arrival_times", ")", ")", ":", "\n", "        ", "customers_in_system", ".", "append", "(", "n", ")", "\n", "state_change_times", ".", "append", "(", "arrival_times", "[", "i", "-", "1", "]", ")", "\n", "n", "+=", "1", "\n", "prev_activity_time", "=", "arrival_times", "[", "i", "-", "1", "]", "\n", "while", "n", ">", "0", ":", "\n", "            ", "next_service_time", "=", "np", ".", "random", ".", "exponential", "(", "scale", "=", "1", "/", "mu", ")", "\n", "prev_activity_time", "+=", "next_service_time", "\n", "if", "prev_activity_time", ">", "arrival_times", "[", "i", "]", ":", "\n", "                ", "break", "\n", "", "else", ":", "\n", "                ", "state_change_times", ".", "append", "(", "prev_activity_time", ")", "\n", "customers_in_system", ".", "append", "(", "n", ")", "\n", "n", "-=", "1", "\n", "", "", "", "intervals", "=", "np", ".", "diff", "(", "state_change_times", ")", "\n", "state_change_intervals", "=", "np", ".", "concatenate", "(", "(", "[", "arrival_times", "[", "0", "]", "]", ",", "intervals", ")", ",", "axis", "=", "0", ")", "\n", "avgs", "=", "np", ".", "cumsum", "(", "state_change_intervals", "*", "customers_in_system", ")", "/", "state_change_times", "\n", "plt", ".", "plot", "(", "state_change_times", ",", "avgs", ")", "\n", "plt", ".", "axhline", "(", "lmb", "/", "(", "mu", "-", "lmb", ")", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.simulation.var_redctn.tst_importance_sampl": [[5, 15], ["print", "print", "numpy.random.normal", "print", "str", "str", "scipy.stats.distributions.norm.pdf", "str", "scipy.stats.distributions.norm.pdf", "scipy.stats.distributions.norm.cdf", "sum", "numpy.random.normal"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.cdf"], ["def", "tst_importance_sampl", "(", ")", ":", "\n", "\t", "\"\"\"\n\tReducing variance using importance sampling.\n\t\"\"\"", "\n", "print", "(", "\"Probability that std normal will be greater than 2 is:\"", "+", "str", "(", "(", "1", "-", "norm", ".", "cdf", "(", "2", ",", "0", ",", "1", ")", ")", ")", ")", "\n", "print", "(", "\"What we get from direct simulation:\"", "+", "str", "(", "sum", "(", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "size", "=", "10000", ")", ">", "2", ")", "/", "10000", ")", ")", "\n", "summ", "=", "0", "\n", "for", "x", "in", "np", ".", "random", ".", "normal", "(", "2", ",", "1", ",", "size", "=", "10000", ")", ":", "\n", "\t\t", "summ", "+=", "(", "x", ">", "2", ")", "*", "norm", ".", "pdf", "(", "x", ",", "0", ",", "1", ")", "/", "norm", ".", "pdf", "(", "x", ",", "2", ",", "1", ")", "\n", "", "print", "(", "\"With importance sampling:\"", "+", "str", "(", "summ", "/", "10000", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.critical_interval": [[6, 18], ["min", "max", "max", "min", "max"], "function", ["None"], ["def", "critical_interval", "(", "ts1", ",", "w", ",", "delt", ")", ":", "\n", "    ", "t_end_prev", "=", "0", "\n", "critical", "=", "0", "\n", "for", "t1", "in", "ts1", ":", "\n", "        ", "t_start", "=", "min", "(", "t1", ",", "t1", "+", "w", ")", "\n", "t_start", "=", "max", "(", "t_start", ",", "0", ")", "\n", "t_end", "=", "max", "(", "t1", ",", "t1", "+", "w", ")", "\n", "t_end", "=", "min", "(", "t_end", ",", "delt", ")", "\n", "t_start", "=", "max", "(", "t_start", ",", "t_end_prev", ")", "\n", "critical", "+=", "(", "t_end", "-", "t_start", ")", "\n", "t_end_prev", "=", "t_end", "\n", "", "return", "critical", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.critical_events": [[20, 38], ["len", "len", "len", "len"], "function", ["None"], ["", "def", "critical_events", "(", "ts1", ",", "ts2", ",", "w", ")", ":", "\n", "    ", "\"\"\"\n    ts2 rains down upon ts1.\n    \"\"\"", "\n", "if", "len", "(", "ts1", ")", "==", "0", "or", "len", "(", "ts2", ")", "==", "0", ":", "\n", "        ", "return", "0", "\n", "", "j", "=", "0", ";", "critical", "=", "0", "\n", "for", "t", "in", "ts2", ":", "\n", "#First time an entry in ts1 crosses", "\n", "#current entry of ts2", "\n", "# ts1[j-1].....t......ts1[j]", "\n", "        ", "while", "j", "<", "len", "(", "ts1", ")", "and", "t", ">", "ts1", "[", "j", "]", ":", "\n", "            ", "j", "+=", "1", "\n", "", "if", "w", ">", "0", "and", "j", ">", "0", ":", "\n", "            ", "critical", "+=", "ts1", "[", "j", "-", "1", "]", "+", "w", ">=", "t", "\n", "", "elif", "j", "<", "len", "(", "ts1", ")", "and", "w", "<", "0", ":", "\n", "            ", "critical", "+=", "ts1", "[", "j", "]", "+", "w", "<=", "t", "\n", "", "", "return", "critical", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.correlation_score": [[40, 46], ["auto_correlation.critical_interval", "auto_correlation.critical_events", "scipy.stats.binom_test", "print", "len", "str", "str", "str", "len"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.critical_interval", "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.critical_events"], ["", "def", "correlation_score", "(", "ts1", ",", "ts2", ",", "w", ",", "delt", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "interv", "=", "critical_interval", "(", "ts1", ",", "w", ",", "delt", ")", "\n", "evnts", "=", "critical_events", "(", "ts1", ",", "ts2", ",", "w", ")", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "str", "(", "evnts", ")", "+", "\",\"", "+", "str", "(", "len", "(", "ts2", ")", ")", "+", "\",\"", "+", "str", "(", "interv", "/", "delt", ")", ")", "\n", "", "return", "binom_test", "(", "evnts", ",", "len", "(", "ts2", ")", ",", "interv", "/", "delt", ",", "alternative", "=", "'greater'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.p_vals_lomax_renewal": [[48, 78], ["range", "print", "numpy.array", "numpy.array", "numpy.array", "auto_correlation.correlation_score", "p_vals.append", "numpy.random.exponential", "len", "str", "numpy.random.gamma", "numpy.random.uniform", "np.array.append", "np.array.append"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.correlation_score"], ["", "def", "p_vals_lomax_renewal", "(", "theta", "=", "10.0", ",", "k", "=", "2", ",", "n_sim", "=", "3000", ",", "null", "=", "False", ",", "window", "=", "4", ",", "intr_strt", "=", "400", ",", "intr_end", "=", "500", ",", "\n", "verbose", "=", "False", ")", ":", "\n", "    ", "p_vals", "=", "[", "]", "\n", "e_n", "=", "0", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "t", "=", "0", "\n", "ts1", "=", "[", "]", ";", "ts2", "=", "[", "]", "\n", "while", "t", "<", "intr_end", ":", "\n", "## Move this lambda condition outside the while", "\n", "## if you want the mixed Poisson. This currently", "\n", "## is the Lomax renewal process.", "\n", "            ", "if", "null", ":", "\n", "                ", "lm", "=", "(", "k", "-", "1", ")", "/", "theta", "\n", "", "else", ":", "\n", "                ", "lm", "=", "np", ".", "random", ".", "gamma", "(", "k", ",", "1", "/", "theta", ")", "\n", "", "t", "+=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lm", ")", "\n", "toss", "=", "np", ".", "random", ".", "uniform", "(", ")", "<", "0.5", "\n", "if", "toss", "and", "t", ">", "intr_strt", "and", "t", "<", "intr_end", ":", "\n", "                ", "ts1", ".", "append", "(", "t", ")", "\n", "", "elif", "t", ">", "intr_strt", "and", "t", "<", "intr_end", ":", "\n", "                ", "ts2", ".", "append", "(", "t", ")", "\n", "", "", "e_n", "+=", "len", "(", "ts2", ")", "/", "n_sim", "\n", "ts1", "=", "np", ".", "array", "(", "ts1", ")", ";", "ts1", "-=", "intr_strt", "\n", "ts2", "=", "np", ".", "array", "(", "ts2", ")", ";", "ts2", "-=", "intr_strt", "\n", "p_val", "=", "correlation_score", "(", "ts1", ",", "ts2", ",", "window", ",", "(", "intr_end", "-", "intr_strt", ")", ",", "verbose", "=", "verbose", ")", "\n", "p_vals", ".", "append", "(", "p_val", ")", "\n", "", "print", "(", "\"mean:\"", "+", "str", "(", "e_n", ")", ")", "\n", "return", "np", ".", "array", "(", "p_vals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.rejectn_rate": [[80, 86], ["numpy.arange", "numpy.zeros", "len", "len"], "function", ["None"], ["", "def", "rejectn_rate", "(", "p_vals", ")", ":", "\n", "    ", "alpha_hats", "=", "np", ".", "arange", "(", "0", ",", "1.00001", ",", "0.00001", ")", "\n", "alphas", "=", "np", ".", "zeros", "(", "len", "(", "alpha_hats", ")", ")", "\n", "for", "p_val", "in", "p_vals", ":", "\n", "        ", "alphas", "+=", "(", "p_val", "<=", "alpha_hats", ")", "/", "len", "(", "p_vals", ")", "\n", "", "return", "alphas", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.get_p_vals": [[87, 93], ["auto_correlation.p_vals_lomax_renewal", "auto_correlation.p_vals_lomax_renewal", "auto_correlation.p_vals_lomax_renewal", "auto_correlation.p_vals_lomax_renewal"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.renewal.lomax.p_vals_lomax_renewal", "home.repos.pwc.inspect_result.ryu577_stochproc.renewal.lomax.p_vals_lomax_renewal", "home.repos.pwc.inspect_result.ryu577_stochproc.renewal.lomax.p_vals_lomax_renewal", "home.repos.pwc.inspect_result.ryu577_stochproc.renewal.lomax.p_vals_lomax_renewal"], ["", "def", "get_p_vals", "(", ")", ":", "\n", "    ", "p_vals_nul", "=", "p_vals_lomax_renewal", "(", "theta", "=", "3", ",", "k", "=", "3", ",", "null", "=", "True", ",", "window", "=", ".1", ")", "\n", "#(theta:1,corln:0.807);(2,0.6);(3,0.44);(4,0.37);(5,0.28) ", "\n", "p_vals_alt1", "=", "p_vals_lomax_renewal", "(", "theta", "=", "1", ",", "k", "=", "1", "/", "1.5", "+", "1", ",", "window", "=", ".1", ")", "\n", "p_vals_alt2", "=", "p_vals_lomax_renewal", "(", "theta", "=", "2", ",", "k", "=", "2", "/", "1.5", "+", "1", ",", "window", "=", ".1", ")", "\n", "p_vals_alt3", "=", "p_vals_lomax_renewal", "(", "theta", "=", "3", ",", "k", "=", "3", ",", "window", "=", ".1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.plot_pvals": [[95, 103], ["matplotlib.hist", "matplotlib.hist", "matplotlib.hist", "matplotlib.hist", "matplotlib.legend", "matplotlib.show"], "function", ["None"], ["", "def", "plot_pvals", "(", "p_vals_nul", ",", "p_vals_alt1", ",", "p_vals_alt2", ",", "p_vals_alt3", ")", ":", "\n", "    ", "plt", ".", "hist", "(", "p_vals_nul", ",", "alpha", "=", "0.5", ",", "label", "=", "\"null\"", ",", "histtype", "=", "'step'", ",", "fill", "=", "False", ",", "stacked", "=", "True", ",", "color", "=", "'green'", ")", "\n", "plt", ".", "hist", "(", "p_vals_alt1", ",", "alpha", "=", "0.5", ",", "label", "=", "\"theta:0.3\"", ",", "histtype", "=", "'step'", ",", "fill", "=", "False", ",", "stacked", "=", "True", ",", "color", "=", "'red'", ")", "\n", "plt", ".", "hist", "(", "p_vals_alt2", ",", "alpha", "=", "0.5", ",", "label", "=", "\"theta:0.2\"", ",", "histtype", "=", "'step'", ",", "fill", "=", "False", ",", "stacked", "=", "True", ",", "color", "=", "'orange'", ")", "\n", "plt", ".", "hist", "(", "p_vals_alt3", ",", "alpha", "=", "0.5", ",", "label", "=", "\"theta:0.1\"", ",", "histtype", "=", "'step'", ",", "fill", "=", "False", ",", "stacked", "=", "True", ",", "color", "=", "(", "251", "/", "255", ",", "206", "/", "255", ",", "177", "/", "255", ")", ")", "\n", "#plt.hist([p_vals_nul,p_vals_alt1,p_vals_alt2],alpha=0.5,label=\"theta:0.2\",density=True, histtype='bar')", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.plot_power": [[105, 116], ["auto_correlation.rejectn_rate", "auto_correlation.rejectn_rate", "auto_correlation.rejectn_rate", "auto_correlation.rejectn_rate", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.show"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.rejectn_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.rejectn_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.rejectn_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.rejectn_rate"], ["", "def", "plot_power", "(", "p_vals_nul", ",", "p_vals_alt1", ",", "p_vals_alt2", ",", "p_vals_alt3", ")", ":", "\n", "    ", "alphas", "=", "rejectn_rate", "(", "p_vals_nul", ")", "\n", "power1", "=", "rejectn_rate", "(", "p_vals_alt1", ")", "\n", "power2", "=", "rejectn_rate", "(", "p_vals_alt2", ")", "\n", "power3", "=", "rejectn_rate", "(", "p_vals_alt3", ")", "\n", "plt", ".", "plot", "(", "alphas", ",", "power1", ",", "label", "=", "\"theta:0.3\"", ")", "\n", "plt", ".", "plot", "(", "alphas", ",", "power2", ",", "label", "=", "\"theta:0.2\"", ")", "\n", "plt", ".", "plot", "(", "alphas", ",", "power3", ",", "label", "=", "\"theta:0.1\"", ")", "\n", "plt", ".", "plot", "(", "[", "0", ",", "1", "]", ",", "[", "0", ",", "1", "]", ",", "'k-'", ",", "lw", "=", "2", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.tst_critical_interv": [[121, 130], ["auto_correlation.critical_interval", "print", "auto_correlation.critical_interval", "print", "auto_correlation.critical_interval", "print", "auto_correlation.critical_interval"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.critical_interval", "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.critical_interval", "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.critical_interval", "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.critical_interval"], ["", "def", "tst_critical_interv", "(", ")", ":", "\n", "##### For critical interval.", "\n", "    ", "res", "=", "critical_interval", "(", "[", "1", ",", "2", ",", "3", "]", ",", "1", ",", "4", ")", "\n", "print", "(", "res", "==", "3", ")", "\n", "res", "=", "critical_interval", "(", "[", "1", ",", "3", "]", ",", "-", "5", ",", "4", ")", "\n", "print", "(", "res", "==", "3", ")", "\n", "res", "=", "critical_interval", "(", "[", "1", ",", "3", "]", ",", "-", "5", ",", "4", ")", "\n", "print", "(", "res", "==", "3", ")", "\n", "res", "=", "critical_interval", "(", "[", "1", ",", "3", "]", ",", "1", ",", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.tst_critical_evnts": [[131, 139], ["auto_correlation.critical_events", "print", "auto_correlation.critical_events", "print", "auto_correlation.critical_events", "print"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.critical_events", "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.critical_events", "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.critical_events"], ["", "def", "tst_critical_evnts", "(", ")", ":", "\n", "##### For critical events.", "\n", "    ", "res", "=", "critical_events", "(", "[", "1", ",", "2", ",", "3", "]", ",", "[", ".5", ",", "1.5", ",", "2.5", "]", ",", ".5", ")", "\n", "print", "(", "res", "==", "0", ")", "\n", "res", "=", "critical_events", "(", "[", "1", ",", "2", ",", "3", "]", ",", "[", ".5", ",", "1.5", ",", "2.5", "]", ",", "1", ")", "\n", "print", "(", "res", "==", "2", ")", "\n", "res", "=", "critical_events", "(", "[", "1", ",", "2", ",", "3", "]", ",", "[", ".5", ",", "1.5", ",", "2.5", "]", ",", "-", "1", ")", "\n", "print", "(", "res", "==", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.tst_sim_renewal_process": [[142, 164], ["range", "print", "scipy.stats.lomax.rvs", "numpy.cumsum", "sum", "sum", "numpy.sqrt", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "tst_sim_renewal_process", "(", ")", ":", "\n", "    ", "k", "=", "0.8", "\n", "lmb", "=", "2.0", "\n", "s_n1n2", "=", "0", ";", "s_n1", "=", "0", ";", "s_n2", "=", "0", ";", "s_n1_sq", "=", "0", ";", "s_n2_sq", "=", "0", "\n", "n_sim", "=", "5000", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "intervals", "=", "lomax", ".", "rvs", "(", "c", "=", "k", ",", "scale", "=", "(", "1", "/", "lmb", ")", ",", "size", "=", "800", ")", "\n", "#intervals = np.random.exponential(scale=1,size=1000)", "\n", "time_stamps", "=", "np", ".", "cumsum", "(", "intervals", ")", "\n", "n1", "=", "sum", "(", "(", "time_stamps", ">", "400", ")", "*", "(", "time_stamps", "<", "900", ")", ")", "\n", "n2", "=", "sum", "(", "(", "time_stamps", ">", "900", ")", "*", "(", "time_stamps", "<", "1400", ")", ")", "\n", "s_n1n2", "+=", "n1", "*", "n2", "\n", "s_n1_sq", "+=", "n1", "*", "n1", "\n", "s_n2_sq", "+=", "n2", "*", "n2", "\n", "s_n1", "+=", "n1", "\n", "s_n2", "+=", "n2", "\n", "\n", "", "cov", "=", "s_n1n2", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "*", "(", "s_n2", "/", "n_sim", ")", "\n", "v_n1", "=", "s_n1_sq", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "**", "2", "\n", "v_n2", "=", "s_n2_sq", "/", "n_sim", "-", "(", "s_n2", "/", "n_sim", ")", "**", "2", "\n", "corln", "=", "cov", "/", "np", ".", "sqrt", "(", "v_n1", "*", "v_n2", ")", "\n", "print", "(", "\"correlation: \"", "+", "str", "(", "corln", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.tst_sim_2": [[167, 191], ["range", "print", "scipy.stats.lomax.rvs", "scipy.stats.lomax.rvs", "numpy.cumsum", "numpy.cumsum", "sum", "sum", "numpy.sqrt", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "tst_sim_2", "(", ")", ":", "\n", "    ", "k", "=", "0.8", "\n", "lmb", "=", "2.0", "\n", "\n", "s_n1n2", "=", "0", ";", "s_n1", "=", "0", ";", "s_n2", "=", "0", ";", "s_n1_sq", "=", "0", ";", "s_n2_sq", "=", "0", "\n", "n_sim", "=", "5000", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "intervals1", "=", "lomax", ".", "rvs", "(", "c", "=", "k", ",", "scale", "=", "(", "1", "/", "lmb", ")", ",", "size", "=", "800", ")", "\n", "intervals2", "=", "lomax", ".", "rvs", "(", "c", "=", "k", ",", "scale", "=", "(", "1", "/", "lmb", ")", ",", "size", "=", "800", ")", "\n", "#intervals = np.random.exponential(scale=1,size=1000)", "\n", "time_stamps1", "=", "np", ".", "cumsum", "(", "intervals1", ")", "\n", "time_stamps2", "=", "np", ".", "cumsum", "(", "intervals2", ")", "\n", "n1", "=", "sum", "(", "(", "time_stamps1", ">", "400", ")", "*", "(", "time_stamps1", "<", "900", ")", ")", "\n", "n2", "=", "sum", "(", "(", "time_stamps2", ">", "400", ")", "*", "(", "time_stamps2", "<", "900", ")", ")", "\n", "s_n1n2", "+=", "n1", "*", "n2", "\n", "s_n1_sq", "+=", "n1", "*", "n1", "\n", "s_n2_sq", "+=", "n2", "*", "n2", "\n", "s_n1", "+=", "n1", "\n", "s_n2", "+=", "n2", "\n", "", "cov", "=", "s_n1n2", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "*", "(", "s_n2", "/", "n_sim", ")", "\n", "v_n1", "=", "s_n1_sq", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "**", "2", "\n", "v_n2", "=", "s_n2_sq", "/", "n_sim", "-", "(", "s_n2", "/", "n_sim", ")", "**", "2", "\n", "corln", "=", "cov", "/", "np", ".", "sqrt", "(", "v_n1", "*", "v_n2", ")", "\n", "print", "(", "\"correlation: \"", "+", "str", "(", "corln", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.tst_sim_3": [[195, 217], ["range", "print", "scipy.stats.lomax.rvs", "numpy.cumsum", "numpy.random.choice", "sum", "sum", "numpy.sqrt", "str", "len"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "tst_sim_3", "(", "k", "=", "7.0", ",", "theta", "=", "0.5", ")", ":", "\n", "    ", "s_n1n2", "=", "0", ";", "s_n1", "=", "0", ";", "s_n2", "=", "0", ";", "s_n1_sq", "=", "0", ";", "s_n2_sq", "=", "0", "\n", "n_sim", "=", "5000", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "intervals", "=", "lomax", ".", "rvs", "(", "c", "=", "k", ",", "scale", "=", "theta", ",", "size", "=", "2000", ")", "\n", "#intervals = np.random.exponential(scale=1,size=1000)", "\n", "time_stamps", "=", "np", ".", "cumsum", "(", "intervals", ")", "\n", "bi_furcator", "=", "np", ".", "random", ".", "choice", "(", "2", ",", "size", "=", "len", "(", "time_stamps", ")", ")", "\n", "time_stamps1", "=", "time_stamps", "[", "bi_furcator", "==", "1", "]", "\n", "time_stamps2", "=", "time_stamps", "[", "bi_furcator", "==", "0", "]", "\n", "n1", "=", "sum", "(", "(", "time_stamps1", ">", "50", ")", "*", "(", "time_stamps1", "<", "90", ")", ")", "\n", "n2", "=", "sum", "(", "(", "time_stamps2", ">", "50", ")", "*", "(", "time_stamps2", "<", "90", ")", ")", "\n", "s_n1n2", "+=", "n1", "*", "n2", "\n", "s_n1_sq", "+=", "n1", "*", "n1", "\n", "s_n2_sq", "+=", "n2", "*", "n2", "\n", "s_n1", "+=", "n1", "\n", "s_n2", "+=", "n2", "\n", "", "cov", "=", "s_n1n2", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "*", "(", "s_n2", "/", "n_sim", ")", "\n", "v_n1", "=", "s_n1_sq", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "**", "2", "\n", "v_n2", "=", "s_n2_sq", "/", "n_sim", "-", "(", "s_n2", "/", "n_sim", ")", "**", "2", "\n", "corln", "=", "cov", "/", "np", ".", "sqrt", "(", "v_n1", "*", "v_n2", ")", "\n", "print", "(", "\"correlation: \"", "+", "str", "(", "corln", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.lomax_renewal_correlation": [[221, 237], ["range", "print", "print", "scipy.stats.lomax.rvs", "numpy.cumsum", "sum", "str", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "lomax_renewal_correlation", "(", "k", "=", "2.0", ",", "theta", "=", "1.0", ")", ":", "\n", "    ", "s_n1", "=", "0", "\n", "n_sim", "=", "5000", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "intervals", "=", "lomax", ".", "rvs", "(", "c", "=", "k", ",", "scale", "=", "theta", ",", "size", "=", "1200", ")", "\n", "#intervals = np.random.exponential(scale=1,size=1000)", "\n", "time_stamps", "=", "np", ".", "cumsum", "(", "intervals", ")", "\n", "#n1 = sum((time_stamps>100) * (time_stamps<200))", "\n", "n1", "=", "sum", "(", "time_stamps", "<", "100", ")", "\n", "s_n1", "+=", "n1", "\n", "\n", "", "e_n1", "=", "s_n1", "/", "n_sim", "\n", "\n", "print", "(", "\"simulated mean: \"", "+", "str", "(", "e_n1", ")", ")", "\n", "#print(\"actual mean-1: \" +str(k*200/theta))", "\n", "print", "(", "\"actual mean-2: \"", "+", "str", "(", "(", "k", "-", "1", ")", "*", "200", "/", "theta", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.mixed_poisson_correlation": [[242, 269], ["range", "print", "print", "print", "numpy.random.gamma", "numpy.sqrt", "numpy.random.exponential", "str", "str", "str", "numpy.random.uniform"], "function", ["None"], ["", "def", "mixed_poisson_correlation", "(", "k", "=", "2.0", ",", "theta", "=", "0.01", ")", ":", "\n", "    ", "s_n1n2", "=", "0", ";", "s_n1", "=", "0", ";", "s_n2", "=", "0", ";", "s_n1_sq", "=", "0", ";", "s_n2_sq", "=", "0", "\n", "n_sim", "=", "3000", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "t", "=", "0", ";", "n1", "=", "0", ";", "n2", "=", "0", "\n", "lm", "=", "np", ".", "random", ".", "gamma", "(", "k", ",", "theta", ")", "\n", "#lm=1.2", "\n", "while", "t", "<", "130", ":", "\n", "            ", "t", "+=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lm", ")", "\n", "toss", "=", "np", ".", "random", ".", "uniform", "(", ")", "<", "0.5", "\n", "n1", "+=", "(", "t", ">", "100", ")", "*", "(", "t", "<", "110", ")", "*", "toss", "\n", "#n2+=(t>120)*(t<130)", "\n", "n2", "+=", "(", "t", ">", "100", ")", "*", "(", "t", "<", "110", ")", "*", "(", "1", "-", "toss", ")", "\n", "", "s_n1", "+=", "n1", "\n", "s_n2", "+=", "n2", "\n", "s_n1n2", "+=", "n1", "*", "n2", "\n", "s_n1_sq", "+=", "n1", "*", "n1", "\n", "s_n2_sq", "+=", "n2", "*", "n2", "\n", "\n", "", "e_n1", "=", "s_n1", "/", "n_sim", "\n", "cov", "=", "s_n1n2", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "*", "(", "s_n2", "/", "n_sim", ")", "\n", "v_n1", "=", "s_n1_sq", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "**", "2", "\n", "v_n2", "=", "s_n2_sq", "/", "n_sim", "-", "(", "s_n2", "/", "n_sim", ")", "**", "2", "\n", "corln", "=", "cov", "/", "np", ".", "sqrt", "(", "v_n1", "*", "v_n2", ")", "\n", "print", "(", "\"Correlation: \"", "+", "str", "(", "corln", ")", ")", "\n", "print", "(", "\"Simulated mean: \"", "+", "str", "(", "2", "*", "e_n1", ")", ")", "\n", "print", "(", "\"Theoretical mean:\"", "+", "str", "(", "k", "*", "10", "*", "theta", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.lomax_renewal_stats": [[272, 307], ["range", "print", "matplotlib.plot", "matplotlib.show", "numpy.sqrt", "numpy.array", "numpy.array", "numpy.random.exponential", "numpy.random.gamma", "numpy.random.uniform"], "function", ["None"], ["", "def", "lomax_renewal_stats", "(", "theta", "=", "10", ",", "k", "=", "2", ",", "n_sim", "=", "3000", ",", "null", "=", "False", ",", "window", "=", "4", ",", "delt", "=", "500", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "e_n1", "=", "e_n2", "=", "e_n3", "=", "e_n4", "=", "e_n5", "=", "0", "\n", "s_n1n2", "=", "0", ";", "s_n1", "=", "0", ";", "s_n2", "=", "0", ";", "s_n1_sq", "=", "0", ";", "s_n2_sq", "=", "0", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "t", "=", "0", ";", "n1", "=", "n2", "=", "0", "\n", "while", "t", "<", "delt", ":", "\n", "## Move this lambda condition outside the while", "\n", "## if you want the mixed Poisson. This currently", "\n", "## is the Lomax renewal process.", "\n", "            ", "if", "null", ":", "\n", "                ", "lm", "=", "k", "*", "theta", "\n", "", "else", ":", "\n", "                ", "lm", "=", "np", ".", "random", ".", "gamma", "(", "k", ",", "1", "/", "theta", ")", "\n", "", "t", "+=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lm", ")", "\n", "e_n1", "+=", "(", "(", "t", ">", "0", ")", "*", "(", "t", "<", "100", ")", ")", "/", "n_sim", "\n", "e_n2", "+=", "(", "(", "t", ">", "100", ")", "*", "(", "t", "<", "200", ")", ")", "/", "n_sim", "\n", "e_n3", "+=", "(", "(", "t", ">", "200", ")", "*", "(", "t", "<", "300", ")", ")", "/", "n_sim", "\n", "e_n4", "+=", "(", "(", "t", ">", "300", ")", "*", "(", "t", "<", "400", ")", ")", "/", "n_sim", "\n", "e_n5", "+=", "(", "(", "t", ">", "400", ")", "*", "(", "t", "<", "500", ")", ")", "/", "n_sim", "\n", "toss", "=", "np", ".", "random", ".", "uniform", "(", ")", "<", "0.5", "\n", "n1", "+=", "(", "t", ">", "400", ")", "*", "(", "t", "<", "500", ")", "*", "toss", "\n", "n2", "+=", "(", "t", ">", "400", ")", "*", "(", "t", "<", "500", ")", "*", "(", "1", "-", "toss", ")", "\n", "", "s_n1", "+=", "n1", "\n", "s_n2", "+=", "n2", "\n", "s_n1n2", "+=", "n1", "*", "n2", "\n", "s_n1_sq", "+=", "n1", "*", "n1", "\n", "s_n2_sq", "+=", "n2", "*", "n2", "\n", "", "cov", "=", "s_n1n2", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "*", "(", "s_n2", "/", "n_sim", ")", "\n", "v_n1", "=", "s_n1_sq", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "**", "2", "\n", "v_n2", "=", "s_n2_sq", "/", "n_sim", "-", "(", "s_n2", "/", "n_sim", ")", "**", "2", "\n", "corln", "=", "cov", "/", "np", ".", "sqrt", "(", "v_n1", "*", "v_n2", ")", "\n", "print", "(", "corln", ")", "\n", "plt", ".", "plot", "(", "np", ".", "array", "(", "[", "0", ",", "100", ",", "200", ",", "300", ",", "400", "]", ")", ",", "np", ".", "array", "(", "[", "e_n1", ",", "e_n2", ",", "e_n3", ",", "e_n4", ",", "e_n5", "]", ")", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.lomax_exponmix": [[308, 318], ["numpy.random.gamma", "numpy.random.exponential", "numpy.mean", "scipy.stats.lomax.rvs", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "lomax_exponmix", "(", ")", ":", "\n", "#### Verify Lomax equivalence with exponential-mix.", "\n", "    ", "k", "=", "4", ";", "theta", "=", "0.1", "\n", "## In numpy's definition, the scale, theta is inverse of Ross definition.", "\n", "lm", "=", "np", ".", "random", ".", "gamma", "(", "k", ",", "1", "/", "theta", ",", "size", "=", "1000", ")", "\n", "lomax_mix", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lm", ")", "\n", "mean1", "=", "np", ".", "mean", "(", "lomax_mix", ")", "\n", "lomax_direct", "=", "lomax", ".", "rvs", "(", "c", "=", "k", ",", "scale", "=", "theta", ",", "size", "=", "1000", ")", "\n", "mean2", "=", "np", ".", "mean", "(", "lomax_direct", ")", "\n", "mean3", "=", "theta", "/", "(", "k", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.rate_simulation.rate_sim": [[12, 46], ["range", "print", "str", "numpy.random.uniform", "numpy.random.choice", "numpy.random.choice"], "function", ["None"], ["def", "rate_sim", "(", ")", ":", "\n", "    ", "total_failure_time", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "10000", ")", ":", "\n", "        ", "time_to_failure", "=", "0", "\n", "failed", "=", "False", "\n", "while", "not", "failed", ":", "\n", "# Customer enters randomly sometime in the month.", "\n", "            ", "customer_enters_at_time", "=", "np", ".", "random", ".", "uniform", "(", ")", "*", "30", "\n", "# If he enters between days 24 and 29, he is randomly allocated to node 1 or 3", "\n", "# Otherwise, he is randomly allocated to node 1, 2 or 3.", "\n", "if", "(", "20", "<", "customer_enters_at_time", "and", "customer_enters_at_time", "<", "25", ")", "or", "(", "29", "<", "customer_enters_at_time", "and", "customer_enters_at_time", "<", "30", ")", ":", "\n", "                ", "node_allotted", "=", "np", ".", "random", ".", "choice", "(", "[", "2", ",", "3", "]", ")", "\n", "", "else", ":", "\n", "                ", "node_allotted", "=", "np", ".", "random", ".", "choice", "(", "3", ")", "+", "1", "\n", "", "if", "node_allotted", "==", "3", ":", "\n", "                ", "time_to_failure", "+=", "(", "30", "-", "customer_enters_at_time", ")", "\n", "", "elif", "node_allotted", "==", "2", ":", "\n", "                ", "if", "customer_enters_at_time", ">", "10", ":", "\n", "                    ", "time_to_failure", "+=", "(", "30", "-", "customer_enters_at_time", ")", "\n", "", "else", ":", "\n", "                    ", "time_to_failure", "+=", "(", "10", "-", "customer_enters_at_time", ")", "\n", "failed", "=", "True", "\n", "", "", "elif", "node_allotted", "==", "1", ":", "\n", "                ", "if", "customer_enters_at_time", "<", "20", ":", "\n", "                    ", "time_to_failure", "+=", "(", "20", "-", "customer_enters_at_time", ")", "\n", "failed", "=", "True", "\n", "", "else", ":", "\n", "                    ", "time_to_failure", "+=", "(", "29", "-", "customer_enters_at_time", ")", "\n", "failed", "=", "True", "\n", "", "", "", "total_failure_time", "+=", "time_to_failure", "\n", "\n", "", "print", "(", "\"MTBF:\"", "+", "str", "(", "total_failure_time", "/", "10000", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.vm_reboot_rate.est_moments": [[4, 14], ["range", "numpy.random.uniform", "numpy.random.exponential", "lmbs.append", "numpy.mean", "numpy.var", "numpy.random.exponential"], "function", ["None"], ["def", "est_moments", "(", "eps", "=", "0.3", ",", "lmb", "=", "7.0", ",", "t", "=", "1.0", ",", "n_sim", "=", "1000", ")", ":", "\n", "    ", "lmbs", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "u", "=", "np", ".", "random", ".", "uniform", "(", "eps", ",", "1", ")", "\n", "sum_t", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lmb", ")", ";", "cnt", "=", "0", "\n", "while", "sum_t", "<", "u", ":", "\n", "            ", "cnt", "+=", "1", "\n", "sum_t", "+=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lmb", ")", "\n", "", "lmbs", ".", "append", "(", "cnt", "/", "u", ")", "\n", "", "return", "np", ".", "mean", "(", "lmbs", ")", ",", "np", ".", "var", "(", "lmbs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.correlation.tst_sim_renewal_process": [[12, 34], ["range", "print", "scipy.stats.lomax.rvs", "numpy.cumsum", "sum", "sum", "numpy.sqrt", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["def", "tst_sim_renewal_process", "(", ")", ":", "\n", "    ", "k", "=", "0.8", "\n", "lmb", "=", "2.0", "\n", "s_n1n2", "=", "0", ";", "s_n1", "=", "0", ";", "s_n2", "=", "0", ";", "s_n1_sq", "=", "0", ";", "s_n2_sq", "=", "0", "\n", "n_sim", "=", "5000", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "intervals", "=", "lomax", ".", "rvs", "(", "c", "=", "k", ",", "scale", "=", "(", "1", "/", "lmb", ")", ",", "size", "=", "800", ")", "\n", "#intervals = np.random.exponential(scale=1,size=1000)", "\n", "time_stamps", "=", "np", ".", "cumsum", "(", "intervals", ")", "\n", "n1", "=", "sum", "(", "(", "time_stamps", ">", "400", ")", "*", "(", "time_stamps", "<", "900", ")", ")", "\n", "n2", "=", "sum", "(", "(", "time_stamps", ">", "900", ")", "*", "(", "time_stamps", "<", "1400", ")", ")", "\n", "s_n1n2", "+=", "n1", "*", "n2", "\n", "s_n1_sq", "+=", "n1", "*", "n1", "\n", "s_n2_sq", "+=", "n2", "*", "n2", "\n", "s_n1", "+=", "n1", "\n", "s_n2", "+=", "n2", "\n", "\n", "", "cov", "=", "s_n1n2", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "*", "(", "s_n2", "/", "n_sim", ")", "\n", "v_n1", "=", "s_n1_sq", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "**", "2", "\n", "v_n2", "=", "s_n2_sq", "/", "n_sim", "-", "(", "s_n2", "/", "n_sim", ")", "**", "2", "\n", "corln", "=", "cov", "/", "np", ".", "sqrt", "(", "v_n1", "*", "v_n2", ")", "\n", "print", "(", "\"correlation: \"", "+", "str", "(", "corln", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.correlation.tst_sim_2": [[37, 60], ["range", "print", "scipy.stats.lomax.rvs", "scipy.stats.lomax.rvs", "numpy.cumsum", "numpy.cumsum", "sum", "sum", "numpy.sqrt", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "tst_sim_2", "(", ")", ":", "\n", "    ", "k", "=", "0.8", "\n", "lmb", "=", "2.0", "\n", "s_n1n2", "=", "0", ";", "s_n1", "=", "0", ";", "s_n2", "=", "0", ";", "s_n1_sq", "=", "0", ";", "s_n2_sq", "=", "0", "\n", "n_sim", "=", "5000", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "intervals1", "=", "lomax", ".", "rvs", "(", "c", "=", "k", ",", "scale", "=", "(", "1", "/", "lmb", ")", ",", "size", "=", "800", ")", "\n", "intervals2", "=", "lomax", ".", "rvs", "(", "c", "=", "k", ",", "scale", "=", "(", "1", "/", "lmb", ")", ",", "size", "=", "800", ")", "\n", "#intervals = np.random.exponential(scale=1,size=1000)", "\n", "time_stamps1", "=", "np", ".", "cumsum", "(", "intervals1", ")", "\n", "time_stamps2", "=", "np", ".", "cumsum", "(", "intervals2", ")", "\n", "n1", "=", "sum", "(", "(", "time_stamps1", ">", "400", ")", "*", "(", "time_stamps1", "<", "900", ")", ")", "\n", "n2", "=", "sum", "(", "(", "time_stamps2", ">", "400", ")", "*", "(", "time_stamps2", "<", "900", ")", ")", "\n", "s_n1n2", "+=", "n1", "*", "n2", "\n", "s_n1_sq", "+=", "n1", "*", "n1", "\n", "s_n2_sq", "+=", "n2", "*", "n2", "\n", "s_n1", "+=", "n1", "\n", "s_n2", "+=", "n2", "\n", "", "cov", "=", "s_n1n2", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "*", "(", "s_n2", "/", "n_sim", ")", "\n", "v_n1", "=", "s_n1_sq", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "**", "2", "\n", "v_n2", "=", "s_n2_sq", "/", "n_sim", "-", "(", "s_n2", "/", "n_sim", ")", "**", "2", "\n", "corln", "=", "cov", "/", "np", ".", "sqrt", "(", "v_n1", "*", "v_n2", ")", "\n", "print", "(", "\"correlation: \"", "+", "str", "(", "corln", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.correlation.tst_sim_3": [[64, 86], ["range", "print", "scipy.stats.lomax.rvs", "numpy.cumsum", "numpy.random.choice", "sum", "sum", "numpy.sqrt", "str", "len"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "tst_sim_3", "(", "k", "=", "7.0", ",", "theta", "=", "0.5", ")", ":", "\n", "    ", "s_n1n2", "=", "0", ";", "s_n1", "=", "0", ";", "s_n2", "=", "0", ";", "s_n1_sq", "=", "0", ";", "s_n2_sq", "=", "0", "\n", "n_sim", "=", "5000", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "intervals", "=", "lomax", ".", "rvs", "(", "c", "=", "k", ",", "scale", "=", "theta", ",", "size", "=", "2000", ")", "\n", "#intervals = np.random.exponential(scale=1,size=1000)", "\n", "time_stamps", "=", "np", ".", "cumsum", "(", "intervals", ")", "\n", "bi_furcator", "=", "np", ".", "random", ".", "choice", "(", "2", ",", "size", "=", "len", "(", "time_stamps", ")", ")", "\n", "time_stamps1", "=", "time_stamps", "[", "bi_furcator", "==", "1", "]", "\n", "time_stamps2", "=", "time_stamps", "[", "bi_furcator", "==", "0", "]", "\n", "n1", "=", "sum", "(", "(", "time_stamps1", ">", "50", ")", "*", "(", "time_stamps1", "<", "90", ")", ")", "\n", "n2", "=", "sum", "(", "(", "time_stamps2", ">", "50", ")", "*", "(", "time_stamps2", "<", "90", ")", ")", "\n", "s_n1n2", "+=", "n1", "*", "n2", "\n", "s_n1_sq", "+=", "n1", "*", "n1", "\n", "s_n2_sq", "+=", "n2", "*", "n2", "\n", "s_n1", "+=", "n1", "\n", "s_n2", "+=", "n2", "\n", "", "cov", "=", "s_n1n2", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "*", "(", "s_n2", "/", "n_sim", ")", "\n", "v_n1", "=", "s_n1_sq", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "**", "2", "\n", "v_n2", "=", "s_n2_sq", "/", "n_sim", "-", "(", "s_n2", "/", "n_sim", ")", "**", "2", "\n", "corln", "=", "cov", "/", "np", ".", "sqrt", "(", "v_n1", "*", "v_n2", ")", "\n", "print", "(", "\"correlation: \"", "+", "str", "(", "corln", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.correlation.lomax_renewal_correlation": [[90, 106], ["range", "print", "print", "scipy.stats.lomax.rvs", "numpy.cumsum", "sum", "str", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "lomax_renewal_correlation", "(", "k", "=", "2.0", ",", "theta", "=", "1.0", ")", ":", "\n", "    ", "s_n1", "=", "0", "\n", "n_sim", "=", "5000", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "intervals", "=", "lomax", ".", "rvs", "(", "c", "=", "k", ",", "scale", "=", "theta", ",", "size", "=", "1200", ")", "\n", "#intervals = np.random.exponential(scale=1,size=1000)", "\n", "time_stamps", "=", "np", ".", "cumsum", "(", "intervals", ")", "\n", "#n1 = sum((time_stamps>100) * (time_stamps<200))", "\n", "n1", "=", "sum", "(", "time_stamps", "<", "100", ")", "\n", "s_n1", "+=", "n1", "\n", "\n", "", "e_n1", "=", "s_n1", "/", "n_sim", "\n", "\n", "print", "(", "\"simulated mean: \"", "+", "str", "(", "e_n1", ")", ")", "\n", "#print(\"actual mean-1: \" +str(k*200/theta))", "\n", "print", "(", "\"actual mean-2: \"", "+", "str", "(", "(", "k", "-", "1", ")", "*", "200", "/", "theta", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.correlation.mixed_poisson_correlation": [[111, 138], ["range", "print", "print", "print", "numpy.random.gamma", "numpy.sqrt", "numpy.random.exponential", "str", "str", "str", "numpy.random.uniform"], "function", ["None"], ["", "def", "mixed_poisson_correlation", "(", "k", "=", "2.0", ",", "theta", "=", "0.01", ")", ":", "\n", "    ", "s_n1n2", "=", "0", ";", "s_n1", "=", "0", ";", "s_n2", "=", "0", ";", "s_n1_sq", "=", "0", ";", "s_n2_sq", "=", "0", "\n", "n_sim", "=", "3000", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "t", "=", "0", ";", "n1", "=", "0", ";", "n2", "=", "0", "\n", "lm", "=", "np", ".", "random", ".", "gamma", "(", "k", ",", "theta", ")", "\n", "#lm=1.2", "\n", "while", "t", "<", "130", ":", "\n", "            ", "t", "+=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lm", ")", "\n", "toss", "=", "np", ".", "random", ".", "uniform", "(", ")", "<", "0.5", "\n", "n1", "+=", "(", "t", ">", "100", ")", "*", "(", "t", "<", "110", ")", "*", "toss", "\n", "#n2+=(t>120)*(t<130)", "\n", "n2", "+=", "(", "t", ">", "100", ")", "*", "(", "t", "<", "110", ")", "*", "(", "1", "-", "toss", ")", "\n", "", "s_n1", "+=", "n1", "\n", "s_n2", "+=", "n2", "\n", "s_n1n2", "+=", "n1", "*", "n2", "\n", "s_n1_sq", "+=", "n1", "*", "n1", "\n", "s_n2_sq", "+=", "n2", "*", "n2", "\n", "\n", "", "e_n1", "=", "s_n1", "/", "n_sim", "\n", "cov", "=", "s_n1n2", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "*", "(", "s_n2", "/", "n_sim", ")", "\n", "v_n1", "=", "s_n1_sq", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "**", "2", "\n", "v_n2", "=", "s_n2_sq", "/", "n_sim", "-", "(", "s_n2", "/", "n_sim", ")", "**", "2", "\n", "corln", "=", "cov", "/", "np", ".", "sqrt", "(", "v_n1", "*", "v_n2", ")", "\n", "print", "(", "\"Correlation: \"", "+", "str", "(", "corln", ")", ")", "\n", "print", "(", "\"Simulated mean: \"", "+", "str", "(", "2", "*", "e_n1", ")", ")", "\n", "print", "(", "\"Theoretical mean:\"", "+", "str", "(", "k", "*", "10", "*", "theta", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.air_sim_non_renewal.sim_alternating": [[6, 25], ["range", "print", "numpy.random.uniform"], "function", ["None"], ["def", "sim_alternating", "(", ")", ":", "\n", "    ", "\"\"\"\n    This is not a renewal process.\n    \"\"\"", "\n", "catches", "=", "0", "\n", "for", "_", "in", "range", "(", "100000", ")", ":", "\n", "        ", "j", "=", "np", ".", "random", ".", "uniform", "(", ")", "*", "1000", "\n", "# j = np.random.exponential(500)", "\n", "t_i", "=", "0", "\n", "i", "=", "0", "\n", "while", "t_i", "<", "j", "+", "100", ":", "\n", "            ", "if", "i", "%", "2", "==", "0", ":", "\n", "                ", "t_i", "+=", "10", "\n", "", "else", ":", "\n", "                ", "t_i", "+=", "20", "\n", "", "if", "j", "<", "t_i", "and", "t_i", "<", "j", "+", "1", ":", "\n", "                ", "catches", "+=", "1", "\n", "", "i", "+=", "1", "\n", "", "", "print", "(", "catches", "/", "100000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.air_sim_non_renewal.sim_alternating_exp": [[27, 46], ["range", "print", "numpy.random.uniform", "numpy.random.exponential", "numpy.random.exponential"], "function", ["None"], ["", "def", "sim_alternating_exp", "(", ")", ":", "\n", "    ", "\"\"\"\n    This is not a renewal process.\n    \"\"\"", "\n", "catches", "=", "0", "\n", "for", "_", "in", "range", "(", "100000", ")", ":", "\n", "        ", "j", "=", "np", ".", "random", ".", "uniform", "(", ")", "*", "1000", "\n", "# j = np.random.exponential(500)", "\n", "t_i", "=", "0", "\n", "i", "=", "0", "\n", "while", "t_i", "<", "j", "+", "100", ":", "\n", "            ", "if", "i", "%", "2", "==", "1", ":", "\n", "                ", "t_i", "+=", "np", ".", "random", ".", "exponential", "(", "10", ")", "\n", "", "else", ":", "\n", "                ", "t_i", "+=", "np", ".", "random", ".", "exponential", "(", "20", ")", "\n", "", "if", "j", "<", "t_i", "and", "t_i", "<", "j", "+", "1", ":", "\n", "                ", "catches", "+=", "1", "\n", "", "i", "+=", "1", "\n", "", "", "print", "(", "catches", "/", "100000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.air_sim_non_renewal.sim_normal": [[48, 58], ["range", "print", "numpy.random.uniform", "numpy.random.normal"], "function", ["None"], ["", "def", "sim_normal", "(", ")", ":", "\n", "    ", "catches", "=", "0", "\n", "for", "_", "in", "range", "(", "10000", ")", ":", "\n", "        ", "j", "=", "np", ".", "random", ".", "uniform", "(", ")", "*", "1000", "\n", "t_i", "=", "0", "\n", "while", "t_i", "<", "j", "+", "500", ":", "\n", "            ", "t_i", "+=", "np", ".", "random", ".", "normal", "(", "10", ",", "1", ")", "\n", "if", "j", "<", "t_i", "and", "t_i", "<", "j", "+", "1", ":", "\n", "                ", "catches", "+=", "1", "\n", "", "", "", "print", "(", "catches", "/", "10000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.air_sim_non_renewal.generate_cov": [[60, 67], ["range", "numpy.concatenate", "acc.append", "numpy.ones"], "function", ["None"], ["", "def", "generate_cov", "(", "dim", ",", "_corr", "=", "0.5", ")", ":", "\n", "    ", "acc", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "dim", ")", ":", "\n", "        ", "row", "=", "np", ".", "ones", "(", "(", "1", ",", "dim", ")", ")", "*", "_corr", "\n", "row", "[", "0", "]", "[", "i", "]", "=", "1", "\n", "acc", ".", "append", "(", "row", ")", "\n", "", "return", "np", ".", "concatenate", "(", "acc", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.air_sim_non_renewal.gen_corr_normal": [[69, 81], ["range", "numpy.concatenate", "air_sim_non_renewal.generate_cov", "numpy.linalg.cholesky", "numpy.transpose", "acc.append", "numpy.ones", "numpy.reshape", "numpy.dot", "numpy.random.normal", "numpy.transpose"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.air_sim_non_renewal.generate_cov"], ["", "def", "gen_corr_normal", "(", "n_dist", "=", "3", ",", "nn", "=", "5", ",", "corr", "=", "0.9", ",", "mu", "=", "10", ")", ":", "\n", "    ", "acc", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_dist", ")", ":", "\n", "        ", "acc", ".", "append", "(", "np", ".", "reshape", "(", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "nn", ")", ",", "(", "nn", ",", "-", "1", ")", ")", ")", "\n", "\n", "# Compute", "\n", "", "all_norm", "=", "np", ".", "concatenate", "(", "acc", ",", "axis", "=", "1", ")", "\n", "cov", "=", "generate_cov", "(", "n_dist", ",", "corr", ")", "\n", "c", "=", "np", ".", "linalg", ".", "cholesky", "(", "cov", ")", "\n", "y", "=", "np", ".", "transpose", "(", "0", "+", "np", ".", "dot", "(", "c", ",", "np", ".", "transpose", "(", "all_norm", ")", ")", ")", "\n", "y", "+=", "np", ".", "ones", "(", "y", ".", "shape", ")", "*", "mu", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.renewal_not_well_into_lifetime.sim_weibull": [[6, 22], ["print", "range", "print", "scipy.special.gamma", "numpy.log", "numpy.random.uniform"], "function", ["None"], ["def", "sim_weibull", "(", "intr_strt", "=", "20", ",", "win_size", "=", "10", ",", "k", "=", "5.5", ",", "lmb", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    [1] https://numpy.org/doc/stable/reference/random/generated/numpy.random.weibull.html\n    [2] https://en.wikipedia.org/wiki/Weibull_distribution#:~:text=The%20Weibull%20distribution%20is%20the%20maximum%20entropy%20distribution%20for%20a,ln(%CE%BBk)%20%E2%88%92%20.\n    \"\"\"", "\n", "mean", "=", "lmb", "*", "gamma", "(", "1", "+", "1", "/", "k", ")", "\n", "print", "(", "1", "/", "mean", ")", "\n", "catches", "=", "0", "\n", "for", "_", "in", "range", "(", "10000", ")", ":", "\n", "        ", "j", "=", "intr_strt", "\n", "t_i", "=", "0", "\n", "while", "t_i", "<", "j", "+", "50", ":", "\n", "            ", "t_i", "+=", "lmb", "*", "(", "-", "np", ".", "log", "(", "np", ".", "random", ".", "uniform", "(", ")", ")", ")", "**", "(", "1", "/", "k", ")", "\n", "if", "j", "<", "t_i", "and", "t_i", "<", "j", "+", "win_size", ":", "\n", "                ", "catches", "+=", "1", "\n", "", "", "", "print", "(", "catches", "/", "10000", "/", "win_size", ")", "\n", "# 1.1241876", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.renewal_not_well_into_lifetime.sim_lomax": [[26, 39], ["scipy.stats.lomax.stats", "print", "range", "print", "scipy.stats.lomax.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "sim_lomax", "(", "intr_strt", "=", "20", ")", ":", "\n", "    ", "c", "=", "1.88", "\n", "mean", ",", "var", ",", "skew", ",", "kurt", "=", "lomax", ".", "stats", "(", "c", ",", "moments", "=", "'mvsk'", ")", "\n", "print", "(", "1", "/", "mean", ")", "\n", "catches", "=", "0", "\n", "for", "_", "in", "range", "(", "10000", ")", ":", "\n", "        ", "j", "=", "intr_strt", "\n", "t_i", "=", "0", "\n", "while", "t_i", "<", "j", "+", "50", ":", "\n", "            ", "t_i", "+=", "lomax", ".", "rvs", "(", "c", ")", "\n", "if", "j", "<", "t_i", "and", "t_i", "<", "j", "+", "1", ":", "\n", "                ", "catches", "+=", "1", "\n", "", "", "", "print", "(", "catches", "/", "10000", ")", "\n", "# 0.8799999999999998", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.air_sim_renewal.sim_bimodal": [[6, 20], ["range", "print", "numpy.random.uniform", "numpy.random.uniform"], "function", ["None"], ["def", "sim_bimodal", "(", ")", ":", "\n", "    ", "catches", "=", "0", "\n", "for", "_", "in", "range", "(", "50000", ")", ":", "\n", "        ", "j", "=", "np", ".", "random", ".", "uniform", "(", ")", "*", "1000", "#+ np.random.normal(3,10)", "\n", "#j = np.random.exponential(500)", "\n", "t_i", "=", "0", "\n", "while", "t_i", "<", "j", "+", "100", ":", "\n", "            ", "if", "np", ".", "random", ".", "uniform", "(", ")", "<", "0.5", ":", "\n", "                ", "t_i", "+=", "10", "\n", "", "else", ":", "\n", "                ", "t_i", "+=", "20", "\n", "", "if", "j", "<", "t_i", "and", "t_i", "<", "j", "+", "1", ":", "\n", "                ", "catches", "+=", "1", "\n", "", "", "", "print", "(", "catches", "/", "50000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.air_sim_renewal.sim_poisson": [[22, 32], ["range", "print", "numpy.random.normal", "numpy.random.exponential", "numpy.random.uniform"], "function", ["None"], ["", "def", "sim_poisson", "(", ")", ":", "\n", "    ", "catches", "=", "0", "\n", "for", "_", "in", "range", "(", "10000", ")", ":", "\n", "        ", "j", "=", "np", ".", "random", ".", "uniform", "(", ")", "*", "1000", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "10", ")", "\n", "t_i", "=", "0", "\n", "while", "t_i", "<", "j", "+", "500", ":", "\n", "            ", "t_i", "+=", "np", ".", "random", ".", "exponential", "(", "15", ")", "\n", "if", "j", "<", "t_i", "and", "t_i", "<", "j", "+", "1", ":", "\n", "                ", "catches", "+=", "1", "\n", "", "", "", "print", "(", "catches", "/", "10000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.air_sim_renewal.sim_poisson_v2": [[34, 53], ["range", "print", "print", "numpy.random.uniform", "numpy.random.exponential", "max", "max"], "function", ["None"], ["", "def", "sim_poisson_v2", "(", ")", ":", "\n", "    ", "catches", "=", "0", "\n", "catches2", "=", "0", "\n", "total_t", "=", "0", "\n", "for", "_", "in", "range", "(", "100000", ")", ":", "\n", "        ", "j", "=", "np", ".", "random", ".", "uniform", "(", ")", "*", "1000", "\n", "t_i", "=", "0", "\n", "tt", "=", "0", "\n", "catches1", "=", "-", "1", "\n", "while", "t_i", "<", "j", "+", "500", ":", "\n", "            ", "t_i", "+=", "np", ".", "random", ".", "exponential", "(", "15", ")", "\n", "if", "j", "<", "t_i", "and", "t_i", "<", "j", "+", "30", ":", "\n", "                ", "tt", "=", "t_i", "\n", "catches", "+=", "1", "\n", "catches1", "+=", "1", "\n", "", "total_t", "+=", "max", "(", "(", "tt", "-", "j", ")", ",", "0", ")", "\n", "catches2", "+=", "max", "(", "0", ",", "catches1", ")", "\n", "", "", "print", "(", "catches", "/", "100000", "/", "30", ")", "\n", "print", "(", "catches2", "/", "total_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.air_sim_renewal.sim_weibull_min": [[55, 68], ["scipy.stats.weibull_min.stats", "print", "range", "print", "numpy.random.uniform", "scipy.stats.weibull_min.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "sim_weibull_min", "(", ")", ":", "\n", "    ", "c", "=", "1.79", "\n", "mean", ",", "var", ",", "skew", ",", "kurt", "=", "weibull_min", ".", "stats", "(", "c", ",", "moments", "=", "'mvsk'", ")", "\n", "print", "(", "1", "/", "mean", ")", "\n", "catches", "=", "0", "\n", "for", "_", "in", "range", "(", "10000", ")", ":", "\n", "        ", "j", "=", "np", ".", "random", ".", "uniform", "(", ")", "*", "1000", "\n", "t_i", "=", "0", "\n", "while", "t_i", "<", "j", "+", "500", ":", "\n", "            ", "t_i", "+=", "weibull_min", ".", "rvs", "(", "c", ")", "\n", "if", "j", "<", "t_i", "and", "t_i", "<", "j", "+", "1", ":", "\n", "                ", "catches", "+=", "1", "\n", "", "", "", "print", "(", "catches", "/", "10000", ")", "\n", "# 1.1241876", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.air_sim_renewal.sim_weibull_min_v2": [[72, 93], ["scipy.stats.weibull_min.stats", "range", "print", "print", "numpy.random.uniform", "scipy.stats.weibull_min.rvs", "max", "max"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "sim_weibull_min_v2", "(", ")", ":", "\n", "    ", "c", "=", "1.79", "\n", "mean", ",", "var", ",", "skew", ",", "kurt", "=", "weibull_min", ".", "stats", "(", "c", ",", "moments", "=", "'mvsk'", ")", "\n", "catches", "=", "0", "\n", "catches2", "=", "0", "\n", "total_t", "=", "0", "\n", "for", "_", "in", "range", "(", "20000", ")", ":", "\n", "        ", "j", "=", "np", ".", "random", ".", "uniform", "(", ")", "*", "50", "\n", "t_i", "=", "0", "\n", "tt", "=", "0", "\n", "catches1", "=", "-", "1", "\n", "while", "t_i", "<", "j", "+", "100", ":", "\n", "            ", "t_i", "+=", "weibull_min", ".", "rvs", "(", "c", ")", "\n", "if", "j", "<", "t_i", "and", "t_i", "<", "j", "+", "30", ":", "\n", "                ", "tt", "=", "t_i", "\n", "catches", "+=", "1", "\n", "catches1", "+=", "1", "\n", "", "total_t", "+=", "max", "(", "(", "tt", "-", "j", ")", ",", "0", ")", "\n", "catches2", "+=", "max", "(", "0", ",", "catches1", ")", "\n", "", "", "print", "(", "catches", "/", "20000", "/", "30", ")", "\n", "print", "(", "catches2", "/", "total_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.air_sim_renewal.sim_lomax": [[95, 108], ["scipy.stats.lomax.stats", "print", "range", "print", "numpy.random.uniform", "scipy.stats.lomax.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "sim_lomax", "(", ")", ":", "\n", "    ", "c", "=", "1.88", "\n", "mean", ",", "var", ",", "skew", ",", "kurt", "=", "lomax", ".", "stats", "(", "c", ",", "moments", "=", "'mvsk'", ")", "\n", "print", "(", "1", "/", "mean", ")", "\n", "catches", "=", "0", "\n", "for", "_", "in", "range", "(", "10000", ")", ":", "\n", "        ", "j", "=", "np", ".", "random", ".", "uniform", "(", ")", "*", "1000", "\n", "t_i", "=", "0", "\n", "while", "t_i", "<", "j", "+", "500", ":", "\n", "            ", "t_i", "+=", "lomax", ".", "rvs", "(", "c", ")", "\n", "if", "j", "<", "t_i", "and", "t_i", "<", "j", "+", "1", ":", "\n", "                ", "catches", "+=", "1", "\n", "", "", "", "print", "(", "catches", "/", "10000", ")", "\n", "# 0.8799999999999998", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.sim_evnts.air_sim_renewal.sim_lomax_v2": [[112, 132], ["range", "print", "print", "numpy.random.uniform", "scipy.stats.lomax.rvs", "max", "max"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "sim_lomax_v2", "(", ")", ":", "\n", "    ", "c", "=", "1.88", "\n", "catches", "=", "0", "\n", "catches2", "=", "0", "\n", "total_t", "=", "0", "\n", "for", "_", "in", "range", "(", "20000", ")", ":", "\n", "        ", "j", "=", "np", ".", "random", ".", "uniform", "(", ")", "*", "1000", "\n", "t_i", "=", "0", "\n", "tt", "=", "0", "\n", "catches1", "=", "-", "1", "\n", "while", "t_i", "<", "j", "+", "100", ":", "\n", "            ", "t_i", "+=", "lomax", ".", "rvs", "(", "c", ")", "\n", "if", "j", "<", "t_i", "and", "t_i", "<", "j", "+", "30", ":", "\n", "                ", "tt", "=", "t_i", "\n", "catches", "+=", "1", "\n", "catches1", "+=", "1", "\n", "", "total_t", "+=", "max", "(", "(", "tt", "-", "j", ")", ",", "0", ")", "\n", "catches2", "+=", "max", "(", "0", ",", "catches1", ")", "\n", "", "", "print", "(", "catches", "/", "20000", "/", "30", ")", "\n", "print", "(", "catches2", "/", "total_t", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.ryu577_stochproc.renewal.lomax.lomax_renewal_stats": [[6, 42], ["range", "print", "matplotlib.plot", "matplotlib.show", "numpy.sqrt", "numpy.array", "numpy.array", "numpy.random.exponential", "numpy.random.gamma", "numpy.random.uniform"], "function", ["None"], ["def", "lomax_renewal_stats", "(", "theta", "=", "10", ",", "k", "=", "2", ",", "n_sim", "=", "3000", ",", "null", "=", "False", ",", "window", "=", "4", ",", "delt", "=", "500", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "e_n1", "=", "e_n2", "=", "e_n3", "=", "e_n4", "=", "e_n5", "=", "0", "\n", "s_n1n2", "=", "0", ";", "s_n1", "=", "0", ";", "s_n2", "=", "0", ";", "s_n1_sq", "=", "0", ";", "s_n2_sq", "=", "0", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "t", "=", "0", ";", "n1", "=", "n2", "=", "0", "\n", "while", "t", "<", "delt", ":", "\n", "## Move this lambda condition outside the while", "\n", "## if you want the mixed Poisson. This currently", "\n", "## is the Lomax renewal process.", "\n", "            ", "if", "null", ":", "\n", "                ", "lm", "=", "k", "*", "theta", "\n", "", "else", ":", "\n", "                ", "lm", "=", "np", ".", "random", ".", "gamma", "(", "k", ",", "1", "/", "theta", ")", "\n", "", "t", "+=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lm", ")", "\n", "e_n1", "+=", "(", "(", "t", ">", "0", ")", "*", "(", "t", "<", "100", ")", ")", "/", "n_sim", "\n", "e_n2", "+=", "(", "(", "t", ">", "100", ")", "*", "(", "t", "<", "200", ")", ")", "/", "n_sim", "\n", "e_n3", "+=", "(", "(", "t", ">", "200", ")", "*", "(", "t", "<", "300", ")", ")", "/", "n_sim", "\n", "e_n4", "+=", "(", "(", "t", ">", "300", ")", "*", "(", "t", "<", "400", ")", ")", "/", "n_sim", "\n", "e_n5", "+=", "(", "(", "t", ">", "400", ")", "*", "(", "t", "<", "500", ")", ")", "/", "n_sim", "\n", "toss", "=", "np", ".", "random", ".", "uniform", "(", ")", "<", "0.5", "\n", "n1", "+=", "(", "t", ">", "400", ")", "*", "(", "t", "<", "500", ")", "*", "toss", "\n", "n2", "+=", "(", "t", ">", "400", ")", "*", "(", "t", "<", "500", ")", "*", "(", "1", "-", "toss", ")", "\n", "", "s_n1", "+=", "n1", "\n", "s_n2", "+=", "n2", "\n", "s_n1n2", "+=", "n1", "*", "n2", "\n", "s_n1_sq", "+=", "n1", "*", "n1", "\n", "s_n2_sq", "+=", "n2", "*", "n2", "\n", "", "cov", "=", "s_n1n2", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "*", "(", "s_n2", "/", "n_sim", ")", "\n", "v_n1", "=", "s_n1_sq", "/", "n_sim", "-", "(", "s_n1", "/", "n_sim", ")", "**", "2", "\n", "v_n2", "=", "s_n2_sq", "/", "n_sim", "-", "(", "s_n2", "/", "n_sim", ")", "**", "2", "\n", "corln", "=", "cov", "/", "np", ".", "sqrt", "(", "v_n1", "*", "v_n2", ")", "\n", "print", "(", "corln", ")", "\n", "plt", ".", "plot", "(", "np", ".", "array", "(", "[", "0", ",", "100", ",", "200", ",", "300", ",", "400", "]", ")", ",", "np", ".", "array", "(", "[", "e_n1", ",", "e_n2", ",", "e_n3", ",", "e_n4", ",", "e_n5", "]", ")", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.renewal.lomax.p_vals_lomax_renewal": [[44, 74], ["range", "print", "numpy.array", "numpy.array", "numpy.array", "hypothtst.correlation_score", "p_vals.append", "numpy.random.exponential", "len", "str", "numpy.random.gamma", "numpy.random.uniform", "np.array.append", "np.array.append"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.point_processes.auto_correlation.correlation_score"], ["", "def", "p_vals_lomax_renewal", "(", "theta", "=", "10.0", ",", "k", "=", "2", ",", "n_sim", "=", "3000", ",", "null", "=", "False", ",", "window", "=", "4", ",", "intr_strt", "=", "400", ",", "intr_end", "=", "500", ",", "split_p", "=", "0.5", ",", "\n", "verbose", "=", "False", ")", ":", "\n", "    ", "p_vals", "=", "[", "]", "\n", "e_n", "=", "0", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "t", "=", "0", "\n", "ts1", "=", "[", "]", ";", "ts2", "=", "[", "]", "\n", "while", "t", "<", "intr_end", ":", "\n", "## Move this lambda condition outside the while", "\n", "## if you want the mixed Poisson. This currently", "\n", "## is the Lomax renewal process.", "\n", "            ", "if", "null", ":", "\n", "                ", "lm", "=", "(", "k", "-", "1", ")", "/", "theta", "\n", "", "else", ":", "\n", "                ", "lm", "=", "np", ".", "random", ".", "gamma", "(", "k", ",", "1", "/", "theta", ")", "\n", "", "t", "+=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lm", ")", "\n", "toss", "=", "np", ".", "random", ".", "uniform", "(", ")", "<", "split_p", "\n", "if", "toss", "and", "t", ">", "intr_strt", "and", "t", "<", "intr_end", ":", "\n", "                ", "ts1", ".", "append", "(", "t", ")", "\n", "", "elif", "t", ">", "intr_strt", "and", "t", "<", "intr_end", ":", "\n", "                ", "ts2", ".", "append", "(", "t", ")", "\n", "", "", "e_n", "+=", "len", "(", "ts2", ")", "/", "n_sim", "\n", "ts1", "=", "np", ".", "array", "(", "ts1", ")", ";", "ts1", "-=", "intr_strt", "\n", "ts2", "=", "np", ".", "array", "(", "ts2", ")", ";", "ts2", "-=", "intr_strt", "\n", "p_val", "=", "ppr", ".", "correlation_score", "(", "ts1", ",", "ts2", ",", "window", ",", "(", "intr_end", "-", "intr_strt", ")", ",", "verbose", "=", "verbose", ")", "\n", "p_vals", ".", "append", "(", "p_val", ")", "\n", "", "print", "(", "\"mean for second process:\"", "+", "str", "(", "e_n", ")", ")", "\n", "return", "np", ".", "array", "(", "p_vals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.expon_based_estimators.expon_frac": [[4, 10], ["int", "range", "numpy.floor", "numpy.log"], "function", ["None"], ["def", "expon_frac", "(", "q", ",", "n", ")", ":", "\n", "    ", "lt", "=", "int", "(", "np", ".", "floor", "(", "q", "*", "(", "n", "-", "1", ")", ")", ")", "\n", "summ", "=", "0", "\n", "for", "ix", "in", "range", "(", "lt", "+", "1", ")", ":", "\n", "        ", "summ", "+=", "1", "/", "(", "n", "-", "ix", ")", "\n", "", "return", "(", "-", "np", ".", "log", "(", "1", "-", "q", ")", "-", "summ", ")", "*", "(", "n", "-", "lt", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.expon_based_estimators.expon_fracs": [[13, 22], ["int", "range", "numpy.floor", "numpy.log"], "function", ["None"], ["", "def", "expon_fracs", "(", "q", ",", "n", ")", ":", "\n", "    ", "lt", "=", "int", "(", "np", ".", "floor", "(", "q", "*", "(", "n", "-", "1", ")", ")", ")", "\n", "summ", "=", "0", "\n", "for", "ix", "in", "range", "(", "lt", "+", "1", ")", ":", "\n", "        ", "summ", "+=", "1", "/", "(", "n", "-", "ix", ")", "\n", "", "beta", "=", "np", ".", "log", "(", "1", "-", "q", ")", "+", "summ", "\n", "f", "=", "-", "(", "beta", "/", "2", ")", "\n", "g", "=", "-", "(", "beta", "/", "2", ")", "*", "(", "n", "-", "lt", "-", "2", ")", "\n", "return", "f", ",", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.expon_based_estimators.prcntl": [[24, 34], ["sorted", "len", "int", "numpy.floor", "numpy.modf", "expon_based_estimators.expon_frac"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.expon_frac"], ["", "def", "prcntl", "(", "a", ",", "q", ",", "interpolate", "=", "2", ")", ":", "\n", "    ", "a", "=", "sorted", "(", "a", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "lt", "=", "int", "(", "np", ".", "floor", "(", "q", "*", "(", "n", "-", "1", ")", ")", ")", "\n", "frac", "=", "0", "\n", "if", "interpolate", "==", "1", ":", "\n", "        ", "frac", "=", "np", ".", "modf", "(", "q", "*", "(", "n", "-", "1", ")", ")", "[", "0", "]", "\n", "", "elif", "interpolate", "==", "2", ":", "\n", "        ", "frac", "=", "expon_frac", "(", "q", ",", "n", ")", "\n", "", "return", "a", "[", "lt", "]", "*", "(", "1", "-", "frac", ")", "+", "a", "[", "lt", "+", "1", "]", "*", "frac", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.expon_based_estimators.prcntl2": [[36, 45], ["sorted", "len", "int", "numpy.floor", "expon_based_estimators.prcntl", "expon_based_estimators.expon_fracs", "len"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.prcntl", "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.expon_based_estimators.expon_fracs"], ["", "def", "prcntl2", "(", "a", ",", "q", ")", ":", "\n", "    ", "a", "=", "sorted", "(", "a", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "lt", "=", "int", "(", "np", ".", "floor", "(", "q", "*", "(", "n", "-", "1", ")", ")", ")", "\n", "if", "lt", "+", "2", ">", "len", "(", "a", ")", "-", "1", ":", "\n", "        ", "return", "prcntl", "(", "a", ",", "q", ",", "2", ")", "\n", "", "else", ":", "\n", "        ", "f", ",", "g", "=", "expon_fracs", "(", "q", ",", "n", ")", "\n", "return", "a", "[", "lt", "]", "*", "(", "1", "-", "f", "-", "g", ")", "+", "a", "[", "lt", "+", "1", "]", "*", "f", "+", "a", "[", "lt", "+", "2", "]", "*", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.expon_based_estimators.prcntl3": [[47, 53], ["len", "range", "numpy.mean", "numpy.log"], "function", ["None"], ["", "", "def", "prcntl3", "(", "a", ",", "q", ")", ":", "\n", "    ", "n", "=", "len", "(", "a", ")", "\n", "summ", "=", "0", "\n", "for", "ix", "in", "range", "(", "n", ")", ":", "\n", "        ", "summ", "+=", "1", "/", "(", "n", "-", "ix", ")", "\n", "", "return", "np", ".", "mean", "(", "a", ")", "*", "(", "-", "np", ".", "log", "(", "1", "-", "q", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.expon_based_estimators.prcntl4": [[55, 70], ["sorted", "len", "int", "range", "range", "numpy.floor", "numpy.log"], "function", ["None"], ["", "def", "prcntl4", "(", "a", ",", "q", ")", ":", "\n", "    ", "a", "=", "sorted", "(", "a", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "lt", "=", "int", "(", "np", ".", "floor", "(", "q", "*", "(", "n", "-", "1", ")", ")", ")", "\n", "i", "=", "lt", "+", "1", "\n", "summ", "=", "0", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "        ", "summ", "+=", "1", "/", "(", "n", "-", "j", ")", "\n", "", "b", "=", "summ", "+", "np", ".", "log", "(", "1", "-", "q", ")", "\n", "u", "=", "(", "1", "+", "b", ")", "*", "a", "[", "i", "-", "1", "]", "\n", "summ2", "=", "0", "\n", "for", "j", "in", "range", "(", "i", ",", "n", ")", ":", "\n", "        ", "summ2", "+=", "a", "[", "j", "]", "\n", "", "u", "=", "u", "-", "b", "/", "(", "n", "-", "i", ")", "*", "summ2", "\n", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.expon_based_estimators.prcntl5": [[72, 86], ["sorted", "len", "range", "range", "numpy.log"], "function", ["None"], ["", "def", "prcntl5", "(", "a", ",", "q", ")", ":", "\n", "    ", "a", "=", "sorted", "(", "a", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "i", "=", "2", "\n", "summ", "=", "0", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "        ", "summ", "+=", "1", "/", "(", "n", "-", "j", ")", "\n", "", "b", "=", "summ", "+", "np", ".", "log", "(", "1", "-", "q", ")", "\n", "u", "=", "(", "1", "+", "b", ")", "*", "a", "[", "i", "-", "1", "]", "\n", "summ2", "=", "0", "\n", "for", "j", "in", "range", "(", "i", ",", "n", ")", ":", "\n", "        ", "summ2", "+=", "a", "[", "j", "]", "\n", "", "u", "=", "u", "-", "b", "/", "(", "n", "-", "i", ")", "*", "summ2", "\n", "return", "u", "\n", "", ""]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.some_distributions.rvs_fn1": [[5, 7], ["scipy.stats.norm.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["def", "rvs_fn1", "(", "n", ")", ":", "\n", "    ", "return", "norm", ".", "rvs", "(", "10", ",", "1", ",", "size", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.some_distributions.rvs_fn2": [[9, 11], ["scipy.stats.lognorm.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "rvs_fn2", "(", "n", ")", ":", "\n", "    ", "return", "lognorm", ".", "rvs", "(", "1", ",", "0", ",", "size", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.some_distributions.rvs_fn3": [[13, 15], ["numpy.random.exponential"], "function", ["None"], ["", "def", "rvs_fn3", "(", "n", ")", ":", "\n", "    ", "return", "np", ".", "random", ".", "exponential", "(", "size", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.some_distributions.rvs_fn4": [[17, 19], ["scipy.stats.lomax.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "rvs_fn4", "(", "n", ")", ":", "\n", "    ", "return", "lomax", ".", "rvs", "(", "c", "=", ".9", ",", "size", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.some_distributions.rvs_fn5": [[21, 23], ["scipy.stats.weibull_min.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "rvs_fn5", "(", "n", ")", ":", "\n", "    ", "return", "weibull_min", ".", "rvs", "(", "c", "=", "5", ",", "size", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.some_distributions.ppf_fn1": [[25, 27], ["scipy.stats.norm.ppf"], "function", ["None"], ["", "def", "ppf_fn1", "(", "q", ")", ":", "\n", "    ", "return", "norm", ".", "ppf", "(", "q", ",", "10", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.some_distributions.ppf_fn2": [[29, 31], ["scipy.stats.lognorm.ppf"], "function", ["None"], ["", "def", "ppf_fn2", "(", "q", ")", ":", "\n", "    ", "return", "lognorm", ".", "ppf", "(", "q", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.some_distributions.ppf_fn3": [[33, 35], ["scipy.stats.expon.ppf"], "function", ["None"], ["", "def", "ppf_fn3", "(", "q", ")", ":", "\n", "    ", "return", "expon", ".", "ppf", "(", "q", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.some_distributions.ppf_fn4": [[37, 39], ["scipy.stats.lomax.ppf"], "function", ["None"], ["", "def", "ppf_fn4", "(", "q", ")", ":", "\n", "    ", "return", "lomax", ".", "ppf", "(", "q", ",", "c", "=", ".9", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.some_distributions.ppf_fn5": [[41, 43], ["scipy.stats.weibull_min.ppf"], "function", ["None"], ["", "def", "ppf_fn5", "(", "q", ")", ":", "\n", "    ", "return", "weibull_min", ".", "ppf", "(", "q", ",", "c", "=", "5", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.perf_measurer.PrcntlEstPerfMeasurer.__init__": [[8, 22], ["numpy.arange"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n", "=", "15", ",", "\n", "rvs_fn", "=", "rvs_fn2", ",", "\n", "ppf_fn", "=", "ppf_fn2", ",", "\n", "qs", "=", "np", ".", "arange", "(", "0.3", ",", "0.7", ",", "0.03", ")", ",", "\n", "prcntl_estimator", "=", "prcntl", ",", "\n", "prll_wrlds", "=", "30000", ",", "\n", "verbose", "=", "True", ")", ":", "\n", "        ", "self", ".", "n", "=", "n", "\n", "self", ".", "rvs_fn", "=", "rvs_fn", "\n", "self", ".", "ppf_fn", "=", "ppf_fn", "\n", "self", ".", "qs", "=", "qs", "\n", "self", ".", "prcntl_estimator", "=", "prcntl_estimator", "\n", "self", ".", "prll_wrlds", "=", "prll_wrlds", "\n", "self", ".", "verbose", "=", "verbose", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.perf_measurer.PrcntlEstPerfMeasurer.simulate": [[23, 47], ["range", "perf_measurer.PrcntlEstPerfMeasurer.u_errs.append", "perf_measurer.PrcntlEstPerfMeasurer.u_stds.append", "perf_measurer.PrcntlEstPerfMeasurer.u_medians.append", "perf_measurer.PrcntlEstPerfMeasurer.u_coff_vars.append", "perf_measurer.PrcntlEstPerfMeasurer.u_mses.append", "perf_measurer.PrcntlEstPerfMeasurer.rvs_fn", "perf_measurer.PrcntlEstPerfMeasurer.ppf_fn", "perf_measurer.PrcntlEstPerfMeasurer.prcntl_estimator", "errs.append", "ests.append", "numpy.mean", "numpy.std", "numpy.median", "numpy.sqrt", "print", "numpy.std", "numpy.mean", "numpy.var", "str", "numpy.mean"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.bare_bones_simulator.rvs_fn", "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.bare_bones_simulator.ppf_fn"], ["", "def", "simulate", "(", "self", ")", ":", "\n", "        ", "self", ".", "u_errs", "=", "[", "]", "\n", "self", ".", "u_stds", "=", "[", "]", "\n", "self", ".", "u_coff_vars", "=", "[", "]", "\n", "self", ".", "u_medians", "=", "[", "]", "\n", "self", ".", "u_mses", "=", "[", "]", "\n", "\n", "for", "q", "in", "self", ".", "qs", ":", "\n", "            ", "errs", "=", "[", "]", "\n", "ests", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "self", ".", "prll_wrlds", ")", ":", "\n", "                ", "x", "=", "self", ".", "rvs_fn", "(", "self", ".", "n", ")", "\n", "real_val", "=", "self", ".", "ppf_fn", "(", "q", ")", "\n", "est_val", "=", "self", ".", "prcntl_estimator", "(", "x", ",", "q", ")", "\n", "err", "=", "(", "real_val", "-", "est_val", ")", "\n", "errs", ".", "append", "(", "err", ")", "\n", "ests", ".", "append", "(", "est_val", ")", "\n", "", "self", ".", "u_errs", ".", "append", "(", "np", ".", "mean", "(", "errs", ")", ")", "\n", "self", ".", "u_stds", ".", "append", "(", "np", ".", "std", "(", "ests", ")", ")", "\n", "self", ".", "u_medians", ".", "append", "(", "np", ".", "median", "(", "errs", ")", ")", "\n", "self", ".", "u_coff_vars", ".", "append", "(", "np", ".", "std", "(", "ests", ")", "/", "np", ".", "mean", "(", "ests", ")", ")", "\n", "self", ".", "u_mses", ".", "append", "(", "np", ".", "sqrt", "(", "np", ".", "var", "(", "ests", ")", "+", "np", ".", "mean", "(", "errs", ")", "**", "2", ")", ")", "\n", "if", "self", ".", "verbose", ":", "\n", "                ", "print", "(", "\"Finished processing percentile: \"", "+", "str", "(", "q", ")", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_1": [[4, 14], ["sorted", "len", "int", "numpy.floor"], "function", ["None"], ["def", "est_1", "(", "a", ",", "p", ")", ":", "\n", "#TODO: replace this with quick find.", "\n", "    ", "a", "=", "sorted", "(", "a", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "j", "=", "int", "(", "np", ".", "floor", "(", "p", "*", "n", ")", ")", "\n", "g", "=", "n", "*", "p", "-", "j", "\n", "gamma", "=", "1", "-", "(", "g", "==", "0", ")", "*", "1.0", "\n", "# The indexing here is one off from the R documentation because", "\n", "# python starts at 0", "\n", "return", "a", "[", "j", "-", "1", "]", "*", "(", "1", "-", "gamma", ")", "+", "a", "[", "j", "]", "*", "gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.tst_est_1": [[16, 20], ["estimate.est_1", "estimate.est_1", "estimate.est_1"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_1", "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_1", "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_1"], ["", "def", "tst_est_1", "(", ")", ":", "\n", "    ", "assert", "est_1", "(", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ",", ".60", ")", "==", "3.0", "\n", "assert", "est_1", "(", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ",", ".59", ")", "==", "3.0", "\n", "assert", "est_1", "(", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ",", ".61", ")", "==", "4.0", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_2": [[22, 35], ["sorted", "len", "int", "numpy.floor"], "function", ["None"], ["", "def", "est_2", "(", "a", ",", "p", ")", ":", "\n", "#TODO: replace this with quick find.", "\n", "    ", "a", "=", "sorted", "(", "a", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "j", "=", "int", "(", "np", ".", "floor", "(", "p", "*", "n", ")", ")", "\n", "g", "=", "n", "*", "p", "-", "j", "\n", "if", "g", "==", "0", ":", "\n", "        ", "gamma", "=", "0.5", "\n", "", "else", ":", "\n", "        ", "gamma", "=", "1", "\n", "# The indexing here is one off from the R documentation because", "\n", "# python starts at 0", "\n", "", "return", "a", "[", "j", "-", "1", "]", "*", "(", "1", "-", "gamma", ")", "+", "a", "[", "j", "]", "*", "gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.tst_est_2": [[37, 41], ["estimate.est_1", "estimate.est_1", "estimate.est_1"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_1", "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_1", "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_1"], ["", "def", "tst_est_2", "(", ")", ":", "\n", "    ", "assert", "est_1", "(", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ",", ".60", ")", "==", "3.0", "\n", "assert", "est_1", "(", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ",", ".59", ")", "==", "3.5", "\n", "assert", "est_1", "(", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ",", ".61", ")", "==", "4.0", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_3": [[43, 56], ["sorted", "len", "int", "numpy.floor"], "function", ["None"], ["", "def", "est_3", "(", "a", ",", "p", ")", ":", "\n", "#TODO: replace this with quick find.", "\n", "    ", "a", "=", "sorted", "(", "a", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "j", "=", "int", "(", "np", ".", "floor", "(", "p", "*", "n", ")", ")", "\n", "g", "=", "n", "*", "p", "-", "j", "\n", "if", "g", "==", "0", "and", "j", "%", "2", "==", "0", ":", "\n", "        ", "gamma", "=", "0", "\n", "", "else", ":", "\n", "        ", "gamma", "=", "1", "\n", "# The indexing here is one off from the R documentation because", "\n", "# python starts at 0", "\n", "", "return", "a", "[", "j", "-", "1", "]", "*", "(", "1", "-", "gamma", ")", "+", "a", "[", "j", "]", "*", "gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_4": [[58, 64], ["sorted", "len", "int", "numpy.floor"], "function", ["None"], ["", "def", "est_4", "(", "a", ",", "p", ")", ":", "\n", "    ", "a", "=", "sorted", "(", "a", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "j", "=", "int", "(", "np", ".", "floor", "(", "p", "*", "n", ")", ")", "\n", "gamma", "=", "n", "*", "p", "-", "j", "\n", "return", "a", "[", "j", "-", "1", "]", "*", "(", "1", "-", "gamma", ")", "+", "a", "[", "j", "]", "*", "gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_5": [[66, 73], ["sorted", "len", "int", "numpy.floor"], "function", ["None"], ["", "def", "est_5", "(", "a", ",", "p", ")", ":", "\n", "    ", "m", "=", "0.5", "\n", "a", "=", "sorted", "(", "a", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "j", "=", "int", "(", "np", ".", "floor", "(", "p", "*", "n", "+", "m", ")", ")", "\n", "gamma", "=", "n", "*", "p", "-", "j", "\n", "return", "a", "[", "j", "-", "1", "]", "*", "(", "1", "-", "gamma", ")", "+", "a", "[", "j", "]", "*", "gamma", "+", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_6": [[75, 82], ["sorted", "len", "int", "numpy.floor"], "function", ["None"], ["", "def", "est_6", "(", "a", ",", "p", ")", ":", "\n", "    ", "m", "=", "p", "\n", "a", "=", "sorted", "(", "a", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "j", "=", "int", "(", "np", ".", "floor", "(", "p", "*", "n", "+", "m", ")", ")", "\n", "gamma", "=", "n", "*", "p", "-", "j", "\n", "return", "a", "[", "j", "-", "1", "]", "*", "(", "1", "-", "gamma", ")", "+", "a", "[", "j", "]", "*", "gamma", "+", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_7": [[84, 86], ["numpy.percentile"], "function", ["None"], ["", "def", "est_7", "(", "a", ",", "p", ")", ":", "\n", "    ", "return", "np", ".", "percentile", "(", "a", ",", "p", "*", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_8": [[88, 95], ["sorted", "len", "int", "numpy.floor"], "function", ["None"], ["", "def", "est_8", "(", "a", ",", "p", ")", ":", "\n", "    ", "m", "=", "(", "p", "+", "1", ")", "/", "3", "\n", "a", "=", "sorted", "(", "a", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "j", "=", "int", "(", "np", ".", "floor", "(", "p", "*", "n", "+", "m", ")", ")", "\n", "gamma", "=", "n", "*", "p", "-", "j", "\n", "return", "a", "[", "j", "-", "1", "]", "*", "(", "1", "-", "gamma", ")", "+", "a", "[", "j", "]", "*", "gamma", "+", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.estimate.est_9": [[97, 104], ["sorted", "len", "int", "numpy.floor"], "function", ["None"], ["", "def", "est_9", "(", "a", ",", "p", ")", ":", "\n", "    ", "m", "=", "p", "/", "4", "+", "3", "/", "8", "\n", "a", "=", "sorted", "(", "a", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "j", "=", "int", "(", "np", ".", "floor", "(", "p", "*", "n", "+", "m", ")", ")", "\n", "gamma", "=", "n", "*", "p", "-", "j", "\n", "return", "a", "[", "j", "-", "1", "]", "*", "(", "1", "-", "gamma", ")", "+", "a", "[", "j", "]", "*", "gamma", "+", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.probability_qns.gamma_max.tst_approaches": [[7, 51], ["time.process_time", "print", "numpy.array", "np.array.argmax", "collections.Counter", "time.process_time", "collections.OrderedDict", "print", "print", "print", "time.process_time", "time.process_time", "print", "time.process_time", "time.process_time", "print", "time.process_time", "time.process_time", "print", "scipy.stats.gamma", "scipy.stats.gamma", "scipy.stats.gamma", "sorted", "len", "print", "len", "print", "scipy.integrate.dblquad", "scipy.integrate.quad", "pdf.rvs", "scipy.integrate.quad", "scipy.integrate.dblquad", "scipy.integrate.dblquad", "scipy.integrate.dblquad", "scipy.integrate.quad", "scipy.integrate.quad", "pdfs[].sf", "gamma_max.tst_approaches.fn1"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["def", "tst_approaches", "(", ")", ":", "\n", "    ", "start", "=", "time", ".", "process_time", "(", ")", "\n", "print", "(", "\"Run sampling based approach\"", ")", "\n", "pdfs", "=", "[", "gamma", "(", "a", "=", "5", ",", "scale", "=", "1.0", "/", "10", ")", ",", "gamma", "(", "a", "=", "5", ",", "scale", "=", "1.0", "/", "10", ")", ",", "gamma", "(", "a", "=", "5", ",", "scale", "=", "1.0", "/", "10", ")", "]", "\n", "sampleSize", "=", "100000", "\n", "samples", "=", "np", ".", "array", "(", "[", "pdf", ".", "rvs", "(", "size", "=", "sampleSize", ")", "for", "pdf", "in", "pdfs", "]", ")", "\n", "max_idx", "=", "samples", ".", "argmax", "(", "axis", "=", "0", ")", "\n", "occurCount", "=", "Counter", "(", "max_idx", ")", "\n", "prob", "=", "[", "(", "key", ",", "occurCount", "[", "key", "]", "/", "sampleSize", ")", "for", "key", "in", "occurCount", "]", "\n", "end", "=", "time", ".", "process_time", "(", ")", "\n", "sortedProb", "=", "OrderedDict", "(", "sorted", "(", "prob", ")", ")", "\n", "print", "(", "sortedProb", ")", "\n", "print", "(", "\"execution time {} seconds\"", ".", "format", "(", "end", "-", "start", ")", ")", "\n", "\n", "print", "(", "\"\\nRun numerical integration based approach\"", ")", "\n", "start", "=", "time", ".", "process_time", "(", ")", "\n", "if", "len", "(", "pdfs", ")", "==", "2", ":", "\n", "        ", "P_0_largest", "=", "quad", "(", "lambda", "x", ":", "pdfs", "[", "1", "]", ".", "pdf", "(", "x", ")", "*", "pdfs", "[", "0", "]", ".", "sf", "(", "x", ")", ",", "0", ",", "np", ".", "inf", ")", "[", "0", "]", "\n", "P_1_largest", "=", "1", "-", "P_0_largest", "\n", "print", "(", "{", "0", ":", "P_0_largest", ",", "1", ":", "P_1_largest", "}", ")", "\n", "\n", "", "if", "len", "(", "pdfs", ")", "==", "3", ":", "\n", "        ", "P_0_largest", "=", "dblquad", "(", "lambda", "x", ",", "y", ":", "pdfs", "[", "1", "]", ".", "pdf", "(", "x", ")", "*", "pdfs", "[", "2", "]", ".", "pdf", "(", "y", ")", "*", "pdfs", "[", "0", "]", ".", "sf", "(", "max", "(", "x", ",", "y", ")", ")", ",", "0", ",", "np", ".", "inf", ",", "0", ",", "np", ".", "inf", ")", "[", "0", "]", "\n", "P_1_largest", "=", "dblquad", "(", "lambda", "x", ",", "y", ":", "pdfs", "[", "0", "]", ".", "pdf", "(", "x", ")", "*", "pdfs", "[", "2", "]", ".", "pdf", "(", "x", ")", "*", "pdfs", "[", "1", "]", ".", "sf", "(", "max", "(", "x", ",", "y", ")", ")", ",", "0", ",", "np", ".", "inf", ",", "0", ",", "np", ".", "inf", ")", "[", "0", "]", "\n", "P_2_largest", "=", "dblquad", "(", "lambda", "x", ",", "y", ":", "pdfs", "[", "0", "]", ".", "pdf", "(", "x", ")", "*", "pdfs", "[", "1", "]", ".", "pdf", "(", "x", ")", "*", "pdfs", "[", "2", "]", ".", "sf", "(", "max", "(", "x", ",", "y", ")", ")", ",", "0", ",", "np", ".", "inf", ",", "0", ",", "np", ".", "inf", ")", "[", "0", "]", "\n", "# P_2_largest = 1-P_0_largest-P_1_largest", "\n", "print", "(", "{", "0", ":", "P_0_largest", ",", "1", ":", "P_1_largest", ",", "2", ":", "P_2_largest", "}", ")", "\n", "\n", "", "end", "=", "time", ".", "process_time", "(", ")", "\n", "print", "(", "\"execution time {} seconds\"", ".", "format", "(", "end", "-", "start", ")", ")", "\n", "\n", "start", "=", "time", ".", "process_time", "(", ")", "\n", "dblquad", "(", "lambda", "x", ",", "y", ":", "pdfs", "[", "1", "]", ".", "pdf", "(", "x", ")", "*", "pdfs", "[", "2", "]", ".", "pdf", "(", "y", ")", "*", "pdfs", "[", "0", "]", ".", "sf", "(", "max", "(", "x", ",", "y", ")", ")", ",", "0", ",", "np", ".", "inf", ",", "0", ",", "np", ".", "inf", ")", "[", "0", "]", "\n", "end", "=", "time", ".", "process_time", "(", ")", "\n", "print", "(", "\"execution time {} seconds\"", ".", "format", "(", "end", "-", "start", ")", ")", "\n", "\n", "start", "=", "time", ".", "process_time", "(", ")", "\n", "def", "fn1", "(", "x1", ")", ":", "\n", "        ", "return", "quad", "(", "lambda", "x", ":", "pdfs", "[", "1", "]", ".", "pdf", "(", "x", ")", "*", "pdfs", "[", "2", "]", ".", "sf", "(", "x", ")", ",", "x1", ",", "np", ".", "inf", ")", "[", "0", "]", "+", "quad", "(", "lambda", "x", ":", "pdfs", "[", "2", "]", ".", "pdf", "(", "x", ")", "*", "pdfs", "[", "1", "]", ".", "sf", "(", "x", ")", ",", "x1", ",", "np", ".", "inf", ")", "[", "0", "]", "\n", "\n", "", "quad", "(", "lambda", "x", ":", "fn1", "(", "x", ")", "*", "pdfs", "[", "0", "]", ".", "pdf", "(", "x", ")", ",", "0", ",", "np", ".", "inf", ")", "[", "0", "]", "\n", "end", "=", "time", ".", "process_time", "(", ")", "\n", "print", "(", "\"execution time {} seconds\"", ".", "format", "(", "end", "-", "start", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.famous_problems.coupon_collectors.double_harmonic": [[3, 9], ["range", "range"], "function", ["None"], ["def", "double_harmonic", "(", "n", ")", ":", "\n", "    ", "res", "=", "0", "\n", "for", "k", "in", "range", "(", "1", ",", "n", "+", "1", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "1", ",", "k", "+", "1", ")", ":", "\n", "            ", "res", "+=", "1", "/", "j", "/", "k", "\n", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.famous_problems.coupon_collectors.s_harmonic": [[10, 15], ["range"], "function", ["None"], ["", "def", "s_harmonic", "(", "n", ")", ":", "\n", "    ", "res", "=", "0", "\n", "for", "k", "in", "range", "(", "1", ",", "n", "+", "1", ")", ":", "\n", "        ", "res", "+=", "1", "/", "k", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.famous_problems.coupon_collectors.s_harmonic_sq": [[16, 21], ["range"], "function", ["None"], ["", "def", "s_harmonic_sq", "(", "n", ")", ":", "\n", "    ", "res", "=", "0", "\n", "for", "k", "in", "range", "(", "1", ",", "n", "+", "1", ")", ":", "\n", "        ", "res", "+=", "1", "/", "k", "/", "k", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.famous_problems.coupon_collectors.var1": [[22, 24], ["coupon_collectors.s_harmonic_sq", "coupon_collectors.s_harmonic"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.famous_problems.coupon_collectors.s_harmonic_sq", "home.repos.pwc.inspect_result.ryu577_stochproc.famous_problems.coupon_collectors.s_harmonic"], ["", "def", "var1", "(", "n", ")", ":", "\n", "    ", "return", "n", "**", "2", "*", "s_harmonic_sq", "(", "n", ")", "-", "n", "*", "s_harmonic", "(", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.famous_problems.coupon_collectors.var2": [[25, 29], ["coupon_collectors.s_harmonic", "coupon_collectors.double_harmonic"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.famous_problems.coupon_collectors.s_harmonic", "home.repos.pwc.inspect_result.ryu577_stochproc.famous_problems.coupon_collectors.double_harmonic"], ["", "def", "var2", "(", "n", ")", ":", "\n", "    ", "e_t", "=", "n", "*", "s_harmonic", "(", "n", ")", "\n", "return", "2", "*", "n", "**", "2", "*", "double_harmonic", "(", "n", ")", "-", "e_t", "-", "e_t", "**", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.MarkovSequence.__init__": [[9, 13], ["smallmarkov.MarkovSequence.get_coef_matrix"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.MarkovSequence.get_coef_matrix"], ["    ", "def", "__init__", "(", "self", ",", "trnsn_matrix", ")", ":", "\n", "        ", "self", ".", "trnsn_matrix", "=", "trnsn_matrix", "\n", "self", ".", "seq_len", "=", "trnsn_matrix", ".", "shape", "[", "0", "]", "\n", "self", ".", "get_coef_matrix", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.MarkovSequence.__mul__": [[14, 16], ["smallmarkov.get_winner_prob"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.simulation.get_winner_prob"], ["", "def", "__mul__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "get_winner_prob", "(", "self", ",", "other", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.MarkovSequence.__rmul__": [[17, 19], ["smallmarkov.get_winner_prob"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.simulation.get_winner_prob"], ["", "def", "__rmul__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "get_winner_prob", "(", "other", ",", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.MarkovSequence.get_coef_matrix": [[20, 43], ["numpy.linalg.eig", "range", "len", "numpy.linalg.inv", "numpy.dot", "smallmarkov.get_generalized_coefficients", "numpy.array", "numpy.array", "numpy.array", "numpy.diag"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_generalized_coefficients"], ["", "def", "get_coef_matrix", "(", "self", ")", ":", "\n", "        ", "a", "=", "self", ".", "trnsn_matrix", "\n", "[", "eig_a", ",", "eig_vec_a", "]", "=", "np", ".", "linalg", ".", "eig", "(", "a", ")", "\n", "self", ".", "eigs", "=", "eig_a", "\n", "use_eig_mat", "=", "True", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "eig_a", ")", ")", ":", "\n", "            ", "if", "eig_a", "[", "i", "]", "==", "eig_a", "[", "i", "-", "1", "]", ":", "\n", "                ", "use_eig_mat", "=", "False", "\n", "break", "\n", "#exploit already calculated eigen vectors if possible.", "\n", "", "", "if", "use_eig_mat", ":", "\n", "            ", "eig_vec_a_inv", "=", "np", ".", "linalg", ".", "inv", "(", "eig_vec_a", ")", "\n", "# Taking the first row since we start in [1,0,0]", "\n", "first_row_e", "=", "np", ".", "array", "(", "eig_vec_a", "[", "0", "]", ")", "[", "0", "]", "\n", "self", ".", "coef_matrix", "=", "np", ".", "dot", "(", "np", ".", "diag", "(", "first_row_e", ")", ",", "eig_vec_a_inv", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "coef_matrix", "=", "get_generalized_coefficients", "(", "self", ".", "trnsn_matrix", ",", "self", ".", "eigs", ")", "\n", "", "self", ".", "ultimate_coefs", "=", "np", ".", "array", "(", "self", ".", "coef_matrix", ".", "T", "[", "self", ".", "seq_len", "-", "1", "]", ")", "[", "0", "]", "\n", "self", ".", "penultimate_coefs", "=", "np", ".", "array", "(", "self", ".", "coef_matrix", ".", "T", "[", "self", ".", "seq_len", "-", "2", "]", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_winner_prob": [[45, 53], ["smallmarkov.flip_seq", "smallmarkov.mult_seq", "numpy.copy", "numpy.copy", "numpy.copy", "numpy.copy"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.flip_seq", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.mult_seq"], ["", "", "def", "get_winner_prob", "(", "win_seq", ",", "lose_seq", ",", "win_prob", "=", "0.5", ")", ":", "\n", "    ", "a_c", ",", "a_e", "=", "np", ".", "copy", "(", "win_seq", ".", "penultimate_coefs", ")", ",", "np", ".", "copy", "(", "win_seq", ".", "eigs", ")", "\n", "a_c", "=", "a_c", "/", "a_e", "\n", "#a_c = flip_seq(a_c, a_e)", "\n", "b_c", ",", "b_e", "=", "np", ".", "copy", "(", "lose_seq", ".", "ultimate_coefs", ")", ",", "np", ".", "copy", "(", "lose_seq", ".", "eigs", ")", "\n", "b_c", "=", "flip_seq", "(", "b_c", ",", "b_e", ")", "\n", "ans", "=", "mult_seq", "(", "a_c", ",", "a_e", ",", "b_c", ",", "b_e", ")", "\n", "return", "ans", "*", "win_prob", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_consecutive_heads_mat": [[55, 62], ["numpy.matrix", "range", "numpy.zeros"], "function", ["None"], ["", "def", "get_consecutive_heads_mat", "(", "numstates", "=", "3", ",", "p", "=", "0.5", ")", ":", "\n", "    ", "trnsn_mat", "=", "np", ".", "matrix", "(", "np", ".", "zeros", "(", "(", "numstates", ",", "numstates", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "trnsn_mat", ".", "shape", "[", "0", "]", "-", "1", ")", ":", "\n", "        ", "trnsn_mat", "[", "i", ",", "0", "]", "=", "(", "1", "-", "p", ")", "\n", "trnsn_mat", "[", "i", ",", "i", "+", "1", "]", "=", "p", "\n", "", "trnsn_mat", "[", "numstates", "-", "1", ",", "numstates", "-", "1", "]", "=", "1.0", "\n", "return", "trnsn_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_running_total_heads_mat": [[64, 70], ["range", "numpy.matrix", "numpy.eye"], "function", ["None"], ["", "def", "get_running_total_heads_mat", "(", "numstates", "=", "4", ",", "p", "=", "0.5", ")", ":", "\n", "    ", "trnsn_mat", "=", "np", ".", "eye", "(", "numstates", ")", "*", "(", "1", "-", "p", ")", "\n", "for", "i", "in", "range", "(", "numstates", "-", "1", ")", ":", "\n", "        ", "trnsn_mat", "[", "i", ",", "i", "+", "1", "]", "=", "p", "\n", "", "trnsn_mat", "[", "numstates", "-", "1", ",", "numstates", "-", "1", "]", "=", "1.0", "\n", "return", "np", ".", "matrix", "(", "trnsn_mat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_coefs": [[72, 82], ["numpy.matrix", "numpy.linalg.eig", "numpy.linalg.inv", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "get_coefs", "(", "a", "=", "np", ".", "matrix", "(", "[", "[", ".5", ",", ".5", ",", "0", "]", ",", "[", ".5", ",", "0", ",", ".5", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", ",", "\n", "ix", "=", "None", ")", ":", "\n", "    ", "if", "ix", "is", "None", ":", "\n", "        ", "ix", "=", "a", ".", "shape", "[", "0", "]", "-", "1", "\n", "", "[", "eig_a", ",", "eig_vec_a", "]", "=", "np", ".", "linalg", ".", "eig", "(", "a", ")", "\n", "eig_vec_a_inv", "=", "np", ".", "linalg", ".", "inv", "(", "eig_vec_a", ")", "\n", "first_row_e", "=", "np", ".", "array", "(", "eig_vec_a", "[", "0", "]", ")", "[", "0", "]", "\n", "last_col_e_inv", "=", "np", ".", "array", "(", "eig_vec_a_inv", ".", "T", "[", "ix", "]", ")", "[", "0", "]", "\n", "coefs", "=", "first_row_e", "*", "last_col_e_inv", "\n", "return", "coefs", ",", "eig_a", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.mult_seq": [[84, 113], ["smallmarkov.get_n_powers", "smallmarkov.get_n_powers", "range", "len", "range", "len", "int", "int", "abs", "smallmarkov.asymmetric_sum"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_n_powers", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_n_powers", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.asymmetric_sum"], ["", "def", "mult_seq", "(", "a_c", ",", "a_e", ",", "b_c", ",", "b_e", ")", ":", "\n", "    ", "\"\"\"\n    Multiplies the probabilities of two\n    markov chain probability sequences\n    to get the overall prob\n    of the event. \n    args:\n        a_c: Winning sequence coefficients.\n        a_e: Winning sequence eigen values.\n        b_c: Losing sequence coefficients.\n        b_e: Losing sequence eigen values.\n    \"\"\"", "\n", "reslt", "=", "0", "\n", "n_powers_a", "=", "get_n_powers", "(", "a_e", ")", "\n", "n_powers_b", "=", "get_n_powers", "(", "b_e", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "a_c", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "len", "(", "b_c", ")", ")", ":", "\n", "            ", "term", "=", "a_c", "[", "i", "]", "*", "b_c", "[", "j", "]", "\n", "eig_pdt", "=", "a_e", "[", "i", "]", "*", "b_e", "[", "j", "]", "\n", "#n = int(n_powers_a[i] + n_powers_b[j])", "\n", "m", "=", "int", "(", "n_powers_a", "[", "i", "]", ")", "\n", "l", "=", "int", "(", "n_powers_b", "[", "j", "]", ")", "\n", "if", "abs", "(", "term", ")", ">", "1e-5", ":", "\n", "#term = term * (eig_pdt) /(1-eig_pdt)", "\n", "#lmb_term = sum_inf_n_powklambda_pown(eig_pdt, n)", "\n", "                ", "lmb_term", "=", "asymmetric_sum", "(", "eig_pdt", ",", "l", ",", "m", ")", "\n", "term", "=", "term", "*", "lmb_term", "\n", "", "reslt", "+=", "term", "\n", "", "", "return", "reslt", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.asymmetric_sum": [[115, 125], ["range", "smallmarkov.sum_inf_n_powklambda_pown", "smallmarkov.ncr", "pow"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.sum_inf_n_powklambda_pown", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.ncr"], ["", "def", "asymmetric_sum", "(", "lmb", ",", "l", ",", "m", ")", ":", "\n", "    ", "reslt", "=", "0.0", "\n", "if", "l", "+", "m", "==", "0", ":", "\n", "        ", "return", "lmb", "/", "(", "1", "-", "lmb", ")", "\n", "", "for", "r", "in", "range", "(", "m", "+", "1", ")", ":", "\n", "        ", "inf_term", "=", "sum_inf_n_powklambda_pown", "(", "lmb", ",", "r", "+", "l", ")", "\n", "if", "r", "+", "l", "==", "0", ":", "\n", "            ", "inf_term", "-=", "1", "\n", "", "reslt", "+=", "ncr", "(", "m", ",", "r", ")", "*", "pow", "(", "-", "1", ",", "r", "+", "m", ")", "*", "inf_term", "\n", "", "return", "reslt", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.flip_seq": [[127, 136], ["None"], "function", ["None"], ["", "def", "flip_seq", "(", "a_c", ",", "a_e", ")", ":", "\n", "    ", "\"\"\"\n    Flips a sequence from the probabilities\n    of being in a state to not benig in the state.\n    \"\"\"", "\n", "a_c", "[", "a_e", "<", "1", "]", "=", "-", "a_c", "[", "a_e", "<", "1", "]", "\n", "a_c", "[", "a_e", "==", "1", "]", "=", "1", "-", "a_c", "[", "a_e", "==", "1", "]", "\n", "#mult_seq(a_c, a_e, b_c, b_e)", "\n", "return", "a_c", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.run_prob_3heads_b4_2heads": [[138, 147], ["numpy.matrix", "smallmarkov.get_coefs", "numpy.matrix", "smallmarkov.get_coefs", "numpy.array", "numpy.array", "sum", "sum", "sum", "range", "range"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_coefs", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_coefs"], ["", "def", "run_prob_3heads_b4_2heads", "(", ")", ":", "\n", "    ", "a", "=", "np", ".", "matrix", "(", "[", "[", ".5", ",", ".5", ",", "0", "]", ",", "[", ".5", ",", "0", ",", ".5", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "a_c", ",", "a_e", "=", "get_coefs", "(", "a", ")", "\n", "b", "=", "np", ".", "matrix", "(", "[", "[", ".5", ",", ".5", ",", "0", ",", "0", "]", ",", "[", ".5", ",", "0", ",", ".5", ",", "0", "]", ",", "[", "0.5", ",", "0.0", ",", "0", ",", ".5", "]", ",", "[", "0", ",", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "b_c", ",", "b_e", "=", "get_coefs", "(", "b", ",", "2", ")", "\n", "## We don't want the first mc to reach it's absorbing state.", "\n", "p_n", "=", "np", ".", "array", "(", "[", "sum", "(", "a_c", "*", "a_e", "**", "i", ")", "for", "i", "in", "range", "(", "2", ",", "81", ")", "]", ")", "\n", "q_n_minus_1", "=", "np", ".", "array", "(", "[", "sum", "(", "b_c", "*", "b_e", "**", "i", ")", "for", "i", "in", "range", "(", "1", ",", "80", ")", "]", ")", "\n", "return", "sum", "(", "(", "1", "-", "p_n", ")", "*", "q_n_minus_1", ")", "/", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.run_prob_3heads_b4_2heads_v2": [[149, 153], ["smallmarkov.MarkovSequence", "smallmarkov.MarkovSequence", "smallmarkov.get_winner_prob", "smallmarkov.get_consecutive_heads_mat", "smallmarkov.get_consecutive_heads_mat"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.simulation.get_winner_prob", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_consecutive_heads_mat", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_consecutive_heads_mat"], ["", "def", "run_prob_3heads_b4_2heads_v2", "(", ")", ":", "\n", "    ", "lose_seq", "=", "MarkovSequence", "(", "get_consecutive_heads_mat", "(", "3", ")", ")", "\n", "win_seq", "=", "MarkovSequence", "(", "get_consecutive_heads_mat", "(", "4", ")", ")", "\n", "return", "get_winner_prob", "(", "win_seq", ",", "lose_seq", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.run_prob_2running_b4_3consecutive": [[155, 167], ["smallmarkov.get_running_total_heads_mat", "smallmarkov.get_consecutive_heads_mat", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "sum", "numpy.dot", "range", "numpy.dot", "range", "numpy.linalg.matrix_power", "numpy.linalg.matrix_power"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_running_total_heads_mat", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_consecutive_heads_mat"], ["", "def", "run_prob_2running_b4_3consecutive", "(", ")", ":", "\n", "    ", "three_total_mat", "=", "get_running_total_heads_mat", "(", "4", ")", "\n", "two_consecutive_mat", "=", "get_consecutive_heads_mat", "(", "3", ")", "\n", "start1", "=", "np", ".", "array", "(", "[", "1", ",", "0", ",", "0", ",", "0", "]", ")", "\n", "start2", "=", "np", ".", "array", "(", "[", "1", ",", "0", ",", "0", "]", ")", "\n", "p_n", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start1", ",", "np", ".", "linalg", ".", "matrix_power", "(", "three_total_mat", ",", "i", ")", ")", "[", "0", ",", "3", "]", "for", "i", "in", "range", "(", "1", ",", "41", ")", "]", ")", "\n", "q_n_minus_1", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start2", ",", "np", ".", "linalg", ".", "matrix_power", "(", "two_consecutive_mat", ",", "i", ")", ")", "[", "0", ",", "1", "]", "for", "i", "in", "range", "(", "40", ")", "]", ")", "\n", "return", "sum", "(", "(", "1", "-", "p_n", ")", "*", "q_n_minus_1", ")", "/", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.run_prob_3running_b4_2running": [[169, 181], ["smallmarkov.get_running_total_heads_mat", "smallmarkov.get_running_total_heads_mat", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "sum", "numpy.dot", "range", "numpy.dot", "range", "numpy.linalg.matrix_power", "numpy.linalg.matrix_power"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_running_total_heads_mat", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_running_total_heads_mat"], ["", "def", "run_prob_3running_b4_2running", "(", ")", ":", "\n", "    ", "thr_running_mat", "=", "get_running_total_heads_mat", "(", "4", ")", "\n", "two_running_mat", "=", "get_running_total_heads_mat", "(", "3", ")", "\n", "start1", "=", "np", ".", "array", "(", "[", "1", ",", "0", ",", "0", ",", "0", "]", ")", "\n", "start2", "=", "np", ".", "array", "(", "[", "1", ",", "0", ",", "0", "]", ")", "\n", "pn", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start2", ",", "np", ".", "linalg", ".", "matrix_power", "(", "two_running_mat", ",", "i", ")", ")", "[", "0", ",", "2", "]", "for", "i", "in", "range", "(", "1", ",", "31", ")", "]", ")", "\n", "q_n_minus_1", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start1", ",", "np", ".", "linalg", ".", "matrix_power", "(", "thr_running_mat", ",", "i", ")", ")", "[", "0", ",", "2", "]", "for", "i", "in", "range", "(", "30", ")", "]", ")", "\n", "return", "sum", "(", "(", "1", "-", "pn", ")", "*", "q_n_minus_1", ")", "/", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_probs": [[183, 209], ["numpy.zeros", "smallmarkov.get_consecutive_heads_mat", "numpy.zeros", "smallmarkov.get_consecutive_heads_mat", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "sum", "sum", "numpy.dot", "range", "numpy.dot", "range", "numpy.dot", "range", "numpy.dot", "range", "numpy.linalg.matrix_power", "numpy.linalg.matrix_power", "numpy.linalg.matrix_power", "numpy.linalg.matrix_power"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_consecutive_heads_mat", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_consecutive_heads_mat"], ["", "def", "get_probs", "(", "p1", "=", "0.5", ",", "p2", "=", "0.5", ",", "n1", "=", "3", ",", "n2", "=", "4", ",", "tosses", "=", "100", ")", ":", "\n", "    ", "\"\"\"\n    Gets the probabilities of 3 consecutive heads before 2,\n    2 consecutive before 3 and draw. \n    args:\n        p1: P(heads) for the player needing 2 heads.\n        p2: P(heads) for the player needing 3 heads.\n    \"\"\"", "\n", "start1", "=", "np", ".", "zeros", "(", "n1", ")", "\n", "start1", "[", "0", "]", "=", "1", "\n", "m_3", "=", "get_consecutive_heads_mat", "(", "n1", ",", "p1", ")", "\n", "start2", "=", "np", ".", "zeros", "(", "n2", ")", "\n", "start2", "[", "0", "]", "=", "1", "\n", "m_4", "=", "get_consecutive_heads_mat", "(", "n2", ",", "p2", ")", "\n", "# p_n must always be one toss ahead of q_n_minus_1. So, when p_n is at toss 1, q_n_minus_1 ", "\n", "# should be at 0. When it is at 2, q_n_minus_1 should be at 1 and so on.", "\n", "# that is why p_n starts with 1 and goes to 100 while q_n_minus_1 starts with 0 and goes to 99.", "\n", "p_n", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start1", ",", "np", ".", "linalg", ".", "matrix_power", "(", "m_3", ",", "n", ")", ")", "[", "0", ",", "n1", "-", "1", "]", "for", "n", "in", "range", "(", "1", ",", "tosses", "+", "1", ")", "]", ")", "\n", "q_n_minus_1", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start2", ",", "np", ".", "linalg", ".", "matrix_power", "(", "m_4", ",", "n", ")", ")", "[", "0", ",", "n2", "-", "2", "]", "for", "n", "in", "range", "(", "tosses", ")", "]", ")", "\n", "p1wins", "=", "sum", "(", "q_n_minus_1", "*", "(", "1", "-", "p_n", ")", ")", "*", "p2", "\n", "p_n", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start2", ",", "np", ".", "linalg", ".", "matrix_power", "(", "m_4", ",", "n", ")", ")", "[", "0", ",", "n2", "-", "1", "]", "for", "n", "in", "range", "(", "1", ",", "tosses", "+", "1", ")", "]", ")", "\n", "q_n_minus_1", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start1", ",", "np", ".", "linalg", ".", "matrix_power", "(", "m_3", ",", "n", ")", ")", "[", "0", ",", "n1", "-", "2", "]", "for", "n", "in", "range", "(", "tosses", ")", "]", ")", "\n", "p2wins", "=", "sum", "(", "q_n_minus_1", "*", "(", "1", "-", "p_n", ")", ")", "*", "p1", "\n", "return", "p1wins", ",", "p2wins", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.plot_probs": [[211, 244], ["smallmarkov.get_consecutive_heads_mat", "smallmarkov.get_consecutive_heads_mat", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "matplotlib.plot", "matplotlib.xlabel", "numpy.array", "matplotlib.plot", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.show", "numpy.arange", "numpy.arange", "numpy.dot", "range", "numpy.dot", "range", "numpy.dot", "range", "numpy.dot", "range", "numpy.dot", "range", "numpy.linalg.matrix_power", "numpy.linalg.matrix_power", "numpy.linalg.matrix_power", "numpy.linalg.matrix_power", "numpy.linalg.matrix_power"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_consecutive_heads_mat", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_consecutive_heads_mat"], ["", "def", "plot_probs", "(", ")", ":", "\n", "    ", "m_4", "=", "get_consecutive_heads_mat", "(", "4", ")", "\n", "m_3", "=", "get_consecutive_heads_mat", "(", "3", ")", "\n", "start1", "=", "np", ".", "array", "(", "[", "1", ",", "0", ",", "0", ",", "0", "]", ")", "\n", "start2", "=", "np", ".", "array", "(", "[", "1", ",", "0", ",", "0", "]", ")", "\n", "p_n", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start1", ",", "np", ".", "linalg", ".", "matrix_power", "(", "m_4", ",", "i", ")", ")", "[", "0", ",", "0", "]", "for", "i", "in", "range", "(", "40", ")", "]", ")", "\n", "#plt.plot(np.arange(40), p_n, color='red',label='P(state 0)')", "\n", "\n", "p_n", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start1", ",", "np", ".", "linalg", ".", "matrix_power", "(", "m_4", ",", "i", ")", ")", "[", "0", ",", "1", "]", "for", "i", "in", "range", "(", "40", ")", "]", ")", "\n", "#plt.plot(np.arange(40), p_n, color='yellow',label='P(state 1)')", "\n", "p_n", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start1", ",", "np", ".", "linalg", ".", "matrix_power", "(", "m_4", ",", "i", ")", ")", "[", "0", ",", "2", "]", "for", "i", "in", "range", "(", "40", ")", "]", ")", "\n", "#plt.plot(np.arange(40), p_n, color='orange',label='P(state 2)')", "\n", "p_n", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start1", ",", "np", ".", "linalg", ".", "matrix_power", "(", "m_4", ",", "i", ")", ")", "[", "0", ",", "3", "]", "for", "i", "in", "range", "(", "40", ")", "]", ")", "\n", "#plt.plot(np.arange(40), p_n, color='green',label='P(state 3)')", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "40", ")", ",", "p_n", ",", "color", "=", "'green'", ",", "label", "=", "'P(Seq-1 reaches 3 consecutive heads)'", ")", "\n", "plt", ".", "xlabel", "(", "'Number of tosses'", ")", "\n", "#plt.ylabel('Probabilities of being in various states')", "\n", "\n", "q_n", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start2", ",", "np", ".", "linalg", ".", "matrix_power", "(", "m_3", ",", "i", ")", ")", "[", "0", ",", "2", "]", "for", "i", "in", "range", "(", "40", ")", "]", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "40", ")", ",", "q_n", ",", "color", "=", "'red'", ",", "label", "=", "'P(Seq-2 reaches 2 consecutive heads)'", ")", "\n", "plt", ".", "ylabel", "(", "'Probs of both seqs being in their target (absorbing) states'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.plot_probs2": [[246, 266], ["numpy.arange", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.axhline", "matplotlib.axvline", "matplotlib.axvline", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.show", "smallmarkov.get_probs", "p_wins.append", "p_losses.append", "p_draws.append"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_probs"], ["", "def", "plot_probs2", "(", ")", ":", "\n", "    ", "ps", "=", "np", ".", "arange", "(", "0", ",", "1", ",", "0.01", ")", "\n", "p_wins", "=", "[", "]", "\n", "p_losses", "=", "[", "]", "\n", "p_draws", "=", "[", "]", "\n", "for", "p", "in", "ps", ":", "\n", "        ", "win", ",", "loss", "=", "get_probs", "(", "p2", "=", "p", ")", "\n", "p_wins", ".", "append", "(", "win", ")", "\n", "p_losses", ".", "append", "(", "loss", ")", "\n", "p_draws", ".", "append", "(", "1", "-", "win", "-", "loss", ")", "\n", "", "plt", ".", "plot", "(", "ps", ",", "p_wins", ",", "label", "=", "'3ConsecHeadsWins'", ")", "\n", "plt", ".", "plot", "(", "ps", ",", "p_losses", ",", "color", "=", "'orange'", ",", "label", "=", "'2ConsecHeadsWins'", ")", "\n", "plt", ".", "plot", "(", "ps", ",", "p_draws", ",", "color", "=", "'silver'", ",", "label", "=", "'draw'", ")", "\n", "plt", ".", "axhline", "(", "0.450595", ",", "color", "=", "'grey'", ")", "\n", "plt", ".", "axvline", "(", "0.768482", ",", "color", "=", "'grey'", ")", "\n", "plt", ".", "axvline", "(", "0.5", ",", "color", "=", "'grey'", ")", "\n", "plt", ".", "xlabel", "(", "'Probability of heads for sequence needing 3 tosses'", ")", "\n", "plt", ".", "ylabel", "(", "'Probabilities of either sequence winning'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.plot_nHb4npl1H": [[268, 290], ["numpy.arange", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.axhline", "matplotlib.axhline", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.show", "smallmarkov.MarkovSequence", "smallmarkov.MarkovSequence", "win_probs.append", "lose_probs.append", "draw_probs.append", "smallmarkov.get_consecutive_heads_mat", "smallmarkov.get_consecutive_heads_mat"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_consecutive_heads_mat", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_consecutive_heads_mat"], ["", "def", "plot_nHb4npl1H", "(", ")", ":", "\n", "    ", "ns", "=", "np", ".", "arange", "(", "2", ",", "15", ")", "\n", "win_probs", "=", "[", "]", "\n", "lose_probs", "=", "[", "]", "\n", "draw_probs", "=", "[", "]", "\n", "for", "n", "in", "ns", ":", "\n", "        ", "lose_seq", "=", "MarkovSequence", "(", "get_consecutive_heads_mat", "(", "n", ")", ")", "\n", "win_seq", "=", "MarkovSequence", "(", "get_consecutive_heads_mat", "(", "n", "+", "1", ")", ")", "\n", "ww", "=", "win_seq", "*", "lose_seq", "\n", "ll", "=", "lose_seq", "*", "win_seq", "\n", "win_probs", ".", "append", "(", "ww", ")", "\n", "lose_probs", ".", "append", "(", "ll", ")", "\n", "draw_probs", ".", "append", "(", "1", "-", "ll", "-", "ww", ")", "\n", "", "plt", ".", "plot", "(", "ns", ",", "win_probs", ",", "label", "=", "'(n+1) H before n H'", ")", "\n", "plt", ".", "plot", "(", "ns", ",", "lose_probs", ",", "label", "=", "'n H before (n+1) H'", ")", "\n", "plt", ".", "plot", "(", "ns", ",", "draw_probs", ",", "label", "=", "'draw'", ")", "\n", "plt", ".", "axhline", "(", "0.333", ",", "color", "=", "'grey'", ")", "\n", "plt", ".", "axhline", "(", "0.666", ",", "color", "=", "'grey'", ")", "\n", "plt", ".", "xlabel", "(", "'Number of consecutive heads required for smaller sequence'", ")", "\n", "plt", ".", "ylabel", "(", "'Probability smaller sequence wins'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.ncr": [[292, 297], ["min", "functools.reduce", "functools.reduce", "range", "range"], "function", ["None"], ["", "def", "ncr", "(", "n", ",", "r", ")", ":", "\n", "    ", "r", "=", "min", "(", "r", ",", "n", "-", "r", ")", "\n", "numer", "=", "reduce", "(", "op", ".", "mul", ",", "range", "(", "n", ",", "n", "-", "r", ",", "-", "1", ")", ",", "1", ")", "\n", "denom", "=", "reduce", "(", "op", ".", "mul", ",", "range", "(", "1", ",", "r", "+", "1", ")", ",", "1", ")", "\n", "return", "numer", "//", "denom", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.sum_inf_n_powklambda_pown": [[299, 309], ["range", "smallmarkov.ncr", "smallmarkov.sum_inf_n_powklambda_pown"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.ncr", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.sum_inf_n_powklambda_pown"], ["", "def", "sum_inf_n_powklambda_pown", "(", "lmb", ",", "k", ")", ":", "\n", "    ", "\"\"\"\n    Look in Topics>InfSeries>Sumn^klmb^n\n    \"\"\"", "\n", "if", "k", "==", "0", ":", "\n", "        ", "return", "1", "/", "(", "1", "-", "lmb", ")", "\n", "", "res", "=", "0.0", "\n", "for", "r", "in", "range", "(", "k", ")", ":", "\n", "        ", "res", "+=", "ncr", "(", "k", ",", "r", ")", "*", "sum_inf_n_powklambda_pown", "(", "lmb", ",", "r", ")", "\n", "", "return", "res", "*", "lmb", "/", "(", "1", "-", "lmb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_generalized_coefficients": [[311, 332], ["numpy.zeros", "smallmarkov.get_n_powers", "numpy.ones", "range", "numpy.matrix", "numpy.matrix", "numpy.linalg.solve", "np.matrix.append", "np.matrix.append", "numpy.linalg.eig", "numpy.array", "numpy.dot"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_n_powers"], ["", "def", "get_generalized_coefficients", "(", "trnsn_mat", ",", "eigs", "=", "None", ")", ":", "\n", "    ", "n", "=", "trnsn_mat", ".", "shape", "[", "0", "]", "\n", "if", "eigs", "is", "None", ":", "\n", "        ", "eigs", "=", "np", ".", "linalg", ".", "eig", "(", "trnsn_mat", ")", "[", "0", "]", "\n", "", "start_state", "=", "np", ".", "zeros", "(", "n", ")", "\n", "start_state", "[", "0", "]", "=", "1.0", "#Assume system starts in most primitive state.", "\n", "rhs", "=", "[", "start_state", "]", "\n", "nu_eig_pows", "=", "get_n_powers", "(", "eigs", ")", "\n", "lhs_col", "=", "np", ".", "ones", "(", "n", ")", "\n", "lhs_col", "[", "nu_eig_pows", ">", "0", "]", "=", "0", "\n", "lhs", "=", "[", "lhs_col", "]", "\n", "for", "i", "in", "range", "(", "n", "-", "1", ")", ":", "\n", "        ", "start_state", "=", "np", ".", "array", "(", "np", ".", "dot", "(", "start_state", ",", "trnsn_mat", ")", ")", "[", "0", "]", "\n", "rhs", ".", "append", "(", "start_state", ")", "\n", "lhs_col", "=", "eigs", "**", "(", "i", "+", "1", ")", "\n", "lhs_col", "=", "lhs_col", "*", "(", "i", "+", "1", ")", "**", "nu_eig_pows", "\n", "lhs", ".", "append", "(", "lhs_col", ")", "\n", "", "rhs", "=", "np", ".", "matrix", "(", "rhs", ")", "\n", "lhs", "=", "np", ".", "matrix", "(", "lhs", ")", "\n", "# Pre-multiple [lm1**n, n*lm1**n,...] with this matrix.", "\n", "return", "np", ".", "linalg", ".", "solve", "(", "lhs", ",", "rhs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_n_powers": [[334, 345], ["len", "numpy.zeros", "range"], "function", ["None"], ["", "def", "get_n_powers", "(", "eig", ")", ":", "\n", "    ", "n", "=", "len", "(", "eig", ")", "\n", "enn_x", "=", "np", ".", "zeros", "(", "n", ")", "\n", "x", "=", "1", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "        ", "if", "eig", "[", "i", "]", "==", "eig", "[", "i", "-", "1", "]", ":", "\n", "            ", "enn_x", "[", "i", "]", "=", "x", "\n", "x", "+=", "1", "\n", "", "else", ":", "\n", "            ", "x", "=", "1", "\n", "", "", "return", "enn_x", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.bigmarkov.State.__init__": [[6, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n1", ",", "n2", ")", ":", "\n", "        ", "self", ".", "n1", "=", "n1", "# n1 in [0, 3]", "\n", "self", ".", "n2", "=", "n2", "# n2 in [0,2]", "\n", "self", ".", "id", "=", "n2", "*", "4", "+", "n1", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.bigmarkov.State.__str__": [[11, 13], ["str", "str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "self", ".", "n1", ")", "+", "\",\"", "+", "str", "(", "self", ".", "n2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.bigmarkov.Transition.__init__": [[16, 20], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "source", ",", "desti", ",", "prob", ")", ":", "\n", "        ", "self", ".", "source", "=", "source", "\n", "self", ".", "desti", "=", "desti", "\n", "self", ".", "prob", "=", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.bigmarkov.Transition.__str__": [[21, 24], ["str", "str", "str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"souce:\"", "+", "str", "(", "self", ".", "source", ")", "+", "\", desti:\"", "+", "str", "(", "self", ".", "desti", ")", "+", "\", prob:\"", "+", "str", "(", "self", ".", "prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.bigmarkov.getTransitions": [[26, 50], ["bigmarkov.Transition", "bigmarkov.Transition", "bigmarkov.Transition", "bigmarkov.Transition", "bigmarkov.Transition", "bigmarkov.Transition", "bigmarkov.Transition", "bigmarkov.State", "bigmarkov.State", "bigmarkov.State", "bigmarkov.State"], "function", ["None"], ["", "", "def", "getTransitions", "(", "source", ")", ":", "\n", "    ", "n1", "=", "source", ".", "n1", "\n", "n2", "=", "source", ".", "n2", "\n", "if", "n1", "==", "3", "and", "n2", "==", "2", ":", "\n", "        ", "return", "[", "\n", "#Transition(source,State(0, 0), 1),", "\n", "Transition", "(", "source", ",", "source", ",", "1", ")", ",", "\n", "]", "\n", "\n", "", "if", "n1", "==", "3", ":", "\n", "        ", "return", "[", "\n", "Transition", "(", "source", ",", "source", ",", "1", ")", ",", "\n", "]", "\n", "\n", "", "if", "n2", "==", "2", ":", "\n", "        ", "return", "[", "\n", "Transition", "(", "source", ",", "source", ",", "1", ")", ",", "\n", "]", "\n", "\n", "", "return", "[", "\n", "Transition", "(", "source", ",", "State", "(", "n1", "+", "1", ",", "n2", "+", "1", ")", ",", "0.25", ")", ",", "\n", "Transition", "(", "source", ",", "State", "(", "n1", "+", "1", ",", "0", ")", ",", "0.25", ")", ",", "\n", "Transition", "(", "source", ",", "State", "(", "0", ",", "n2", "+", "1", ")", ",", "0.25", ")", ",", "\n", "Transition", "(", "source", ",", "State", "(", "0", ",", "0", ")", ",", "0.25", ")", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.bigmarkov.construct_big_matrix": [[53, 67], ["numpy.zeros", "range", "numpy.eye", "numpy.linalg.solve", "print", "numpy.eye", "str"], "function", ["None"], ["", "def", "construct_big_matrix", "(", ")", ":", "\n", "    ", "m", "=", "np", ".", "zeros", "(", "(", "12", ",", "12", ")", ")", "\n", "state2index", "=", "{", "(", "0", ",", "0", ")", ":", "0", ",", "(", "1", ",", "0", ")", ":", "1", ",", "(", "2", ",", "0", ")", ":", "2", ",", "(", "0", ",", "1", ")", ":", "3", ",", "(", "1", ",", "1", ")", ":", "4", ",", "(", "2", ",", "1", ")", ":", "5", ",", "(", "0", ",", "2", ")", ":", "6", ",", "(", "1", ",", "2", ")", ":", "7", ",", "(", "2", ",", "2", ")", ":", "8", ",", "(", "3", ",", "0", ")", ":", "9", ",", "(", "3", ",", "1", ")", ":", "10", ",", "(", "3", ",", "2", ")", ":", "11", "}", "\n", "index2state", "=", "[", "(", "0", ",", "0", ")", ",", "(", "1", ",", "0", ")", ",", "(", "2", ",", "0", ")", ",", "(", "0", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "2", ",", "1", ")", ",", "(", "0", ",", "2", ")", ",", "(", "1", ",", "2", ")", ",", "(", "2", ",", "2", ")", ",", "(", "3", ",", "0", ")", ",", "(", "3", ",", "1", ")", ",", "(", "3", ",", "2", ")", "]", "\n", "for", "i", "in", "range", "(", "6", ")", ":", "\n", "        ", "m", "[", "i", ",", "0", "]", "=", "0.25", "\n", "m", "[", "i", ",", "state2index", "[", "(", "index2state", "[", "i", "]", "[", "0", "]", "+", "1", ",", "0", ")", "]", "]", "=", "0.25", "\n", "m", "[", "i", ",", "state2index", "[", "(", "0", ",", "index2state", "[", "i", "]", "[", "1", "]", "+", "1", ")", "]", "]", "=", "0.25", "\n", "m", "[", "i", ",", "state2index", "[", "(", "index2state", "[", "i", "]", "[", "0", "]", "+", "1", ",", "index2state", "[", "i", "]", "[", "1", "]", "+", "1", ")", "]", "]", "=", "0.25", "\n", "", "m", "[", "6", ":", ",", "6", ":", "]", "=", "np", ".", "eye", "(", "6", ")", "\n", "q", "=", "m", "[", ":", "6", ",", ":", "6", "]", "\n", "r", "=", "m", "[", ":", "6", ",", "6", ":", "]", "\n", "u", "=", "np", ".", "linalg", ".", "solve", "(", "np", ".", "eye", "(", "6", ")", "-", "q", ",", "r", ")", "\n", "print", "(", "\"Probability you win:\"", "+", "str", "(", "u", "[", "0", ",", "3", "]", "+", "u", "[", "0", ",", "4", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.bigmarkov.run_bigmarkov": [[69, 89], ["range", "numpy.zeros", "print", "numpy.zeros", "range", "range", "numpy.dot", "bigmarkov.getTransitions", "print", "bigmarkov.State", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.bigmarkov.getTransitions"], ["", "def", "run_bigmarkov", "(", ")", ":", "\n", "    ", "totalTrans", "=", "[", "]", "\n", "for", "n2", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "        ", "for", "n1", "in", "range", "(", "0", ",", "4", ")", ":", "\n", "            ", "trans", "=", "getTransitions", "(", "State", "(", "n1", ",", "n2", ")", ")", "\n", "totalTrans", "=", "totalTrans", "+", "trans", "\n", "", "", "m", "=", "np", ".", "zeros", "(", "[", "12", ",", "12", "]", ")", "\n", "for", "t", "in", "totalTrans", ":", "\n", "        ", "m", "[", "t", ".", "desti", ".", "id", ",", "t", ".", "source", ".", "id", "]", "=", "t", ".", "prob", "\n", "", "print", "(", "m", ")", "\n", "start", "=", "np", ".", "zeros", "(", "[", "12", "]", ")", "\n", "start", "[", "0", "]", "=", "1", "\n", "for", "i", "in", "range", "(", "0", ",", "10000", ")", ":", "\n", "        ", "if", "i", "%", "100", "==", "0", ":", "\n", "# print(start)", "\n", "            ", "print", "(", "\"step \"", "+", "str", "(", "i", ")", "+", "\": win prob for state (3,0) is \"", "+", "str", "(", "start", "[", "3", "]", ")", "+", "\",\"", "+", "\" win prob for state (3,1) is \"", "+", "str", "(", "start", "[", "7", "]", ")", "+", "\",\"", "+", "\" win prob for state (3,2) is \"", "+", "str", "(", "start", "[", "11", "]", ")", ")", "\n", "", "start", "=", "np", ".", "dot", "(", "m", ",", "start", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.simulation.play": [[4, 32], ["numpy.random.uniform", "numpy.random.uniform", "min", "min"], "function", ["None"], ["def", "play", "(", ")", ":", "\n", "    ", "victor", "=", "2", "\n", "pl1", "=", "0", "\n", "pl2", "=", "0", "\n", "while", "victor", "==", "2", ":", "\n", "        ", "toss1", "=", "(", "np", ".", "random", ".", "uniform", "(", ")", "<", "0.5", ")", "\n", "toss2", "=", "(", "np", ".", "random", ".", "uniform", "(", ")", "<", "0.5", ")", "\n", "if", "toss1", ":", "\n", "            ", "pl1", "+=", "1", "\n", "pl1", "=", "min", "(", "pl1", ",", "2", ")", "\n", "#else:", "\n", "#    pl1 = 0", "\n", "", "if", "toss2", ":", "\n", "            ", "pl2", "+=", "1", "\n", "pl2", "=", "min", "(", "pl2", ",", "3", ")", "\n", "#else:", "\n", "#    pl2 = 0", "\n", "", "if", "pl1", "==", "2", "and", "pl2", "==", "3", ":", "\n", "            ", "victor", "=", "0", "\n", "\n", "", "if", "pl1", "==", "2", "and", "pl2", "<", "3", ":", "\n", "            ", "victor", "=", "0", "\n", "\n", "", "if", "pl2", "==", "3", "and", "pl1", "<", "2", ":", "\n", "            ", "victor", "=", "1", "\n", "# elif pl1 == 2 and pl2 == 3:", "\n", "#    pl1 = pl2 = 0", "\n", "", "", "return", "victor", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.simulation.get_winner_prob": [[34, 39], ["range", "simulation.play"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.simulation.play"], ["", "def", "get_winner_prob", "(", "N", "=", "1000", ")", ":", "\n", "    ", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "cnt", "+=", "play", "(", ")", "\n", "", "return", "cnt", "/", "N", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.simulation.run_multiple_sim": [[41, 47], ["range", "print", "print", "prob.append", "numpy.average", "numpy.std", "simulation.get_winner_prob"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.simulation.get_winner_prob"], ["", "def", "run_multiple_sim", "(", ")", ":", "\n", "    ", "prob", "=", "[", "]", "\n", "for", "l", "in", "range", "(", "1000", ")", ":", "\n", "        ", "prob", ".", "append", "(", "get_winner_prob", "(", ")", ")", "\n", "", "print", "(", "np", ".", "average", "(", "prob", ")", ")", "\n", "print", "(", "np", ".", "std", "(", "prob", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.simulation.play1": [[49, 57], ["numpy.random.uniform"], "function", ["None"], ["", "def", "play1", "(", "cur_toss", "=", "'x'", ")", ":", "\n", "    ", "curr_bool", "=", "(", "np", ".", "random", ".", "uniform", "(", ")", "<", "0.5", ")", "\n", "if", "curr_bool", ":", "\n", "        ", "nxt_toss", "=", "'h'", "\n", "", "else", ":", "\n", "        ", "nxt_toss", "=", "'t'", "\n", "", "seq", "=", "cur_toss", "+", "nxt_toss", "\n", "return", "seq", ",", "nxt_toss", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.simulation.get_loser_state_prob": [[59, 75], ["numpy.zeros", "range", "print", "str", "simulation.play1", "simulation.play1"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.simulation.play1", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.simulation.play1"], ["", "def", "get_loser_state_prob", "(", ")", ":", "\n", "    ", "set1", "=", "{", "'hh'", ":", "0", ",", "'ht'", ":", "1", ",", "'th'", ":", "2", ",", "'tt'", ":", "3", "}", "\n", "a", "=", "np", ".", "zeros", "(", "4", ")", "\n", "for", "i", "in", "range", "(", "1000000", ")", ":", "\n", "        ", "cur1", "=", "cur2", "=", "'x'", "\n", "while", "True", ":", "\n", "            ", "seq1", ",", "cur1", "=", "play1", "(", "cur1", ")", "\n", "seq2", ",", "cur2", "=", "play1", "(", "cur2", ")", "\n", "#print(seq1 + \"\\t\" + seq2)", "\n", "if", "seq1", "==", "'hh'", ":", "\n", "                ", "a", "[", "set1", "[", "seq2", "]", "]", "+=", "1", "\n", "break", "\n", "", "elif", "seq2", "==", "'hh'", ":", "\n", "                ", "a", "[", "set1", "[", "seq1", "]", "]", "+=", "1", "\n", "break", "\n", "", "", "", "print", "(", "str", "(", "a", "/", "1000000", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.gamblersruin.walk_matrix": [[14, 31], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.linalg.solve", "numpy.eye"], "function", ["None"], ["def", "walk_matrix", "(", "bottom", ",", "target", ",", "p", "=", "0.5", ")", ":", "\n", "    ", "state_size", "=", "bottom", "+", "target", "+", "1", "\n", "transient_size", "=", "state_size", "-", "2", "\n", "absorbing_size", "=", "2", "\n", "m", "=", "np", ".", "zeros", "(", "(", "state_size", ",", "state_size", ")", ")", "\n", "q", "=", "np", ".", "zeros", "(", "(", "transient_size", ",", "transient_size", ")", ")", "\n", "r", "=", "np", ".", "zeros", "(", "(", "transient_size", ",", "absorbing_size", ")", ")", "\n", "m", "[", "0", ",", "0", "]", "=", "1", "\n", "m", "[", "state_size", "-", "1", ",", "state_size", "-", "1", "]", "=", "1", "\n", "r", "[", "0", ",", "0", "]", "=", "1", "-", "p", ";", "m", "[", "0", ",", "1", "]", "=", "1", "-", "p", "\n", "r", "[", "transient_size", "-", "1", ",", "1", "]", "=", "p", ";", "m", "[", "state_size", "-", "2", ",", "state_size", "-", "1", "]", "=", "p", "\n", "for", "i", "in", "range", "(", "transient_size", "-", "1", ")", ":", "\n", "        ", "q", "[", "i", ",", "i", "+", "1", "]", "=", "p", ";", "m", "[", "i", "+", "1", ",", "i", "+", "2", "]", "=", "p", "\n", "q", "[", "i", "+", "1", ",", "i", "]", "=", "1", "-", "p", ";", "m", "[", "i", "+", "2", ",", "i", "+", "1", "]", "=", "1", "-", "p", "\n", "", "probs", "=", "np", ".", "linalg", ".", "solve", "(", "np", ".", "eye", "(", "transient_size", ")", "-", "q", ",", "r", ")", "[", "bottom", "-", "1", "]", "\n", "#probs = sp.linalg.solve_banded((1,1),np.eye(transient_size)-q,r)[bottom-1]", "\n", "return", "probs", ",", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.gamblersruin.simulate_gambler": [[33, 60], ["numpy.zeros", "range", "range", "numpy.random.uniform", "numpy.random.uniform"], "function", ["None"], ["", "def", "simulate_gambler", "(", "k1", "=", "2", ",", "k2", "=", "3", ")", ":", "\n", "# 0 for g1, 1 for g2 and 2 for draw.", "\n", "    ", "results", "=", "np", ".", "zeros", "(", "3", ")", "\n", "for", "i", "in", "range", "(", "10000", ")", ":", "\n", "        ", "g1", "=", "g2", "=", "0", "\n", "for", "j", "in", "range", "(", "4000", ")", ":", "\n", "            ", "if", "np", ".", "random", ".", "uniform", "(", ")", ">", "0.5", ":", "\n", "                ", "g1", "+=", "1", "\n", "", "else", ":", "\n", "                ", "g1", "-=", "1", "\n", "", "if", "np", ".", "random", ".", "uniform", "(", ")", ">", "0.5", ":", "\n", "                ", "g2", "+=", "1", "\n", "", "else", ":", "\n", "                ", "g2", "-=", "1", "\n", "", "if", "g1", "==", "2", "and", "g2", "==", "3", ":", "\n", "                ", "results", "[", "2", "]", "+=", "1", "\n", "break", "\n", "", "elif", "g1", "==", "2", ":", "\n", "                ", "results", "[", "0", "]", "+=", "1", "\n", "break", "\n", "", "elif", "g2", "==", "3", ":", "\n", "                ", "results", "[", "1", "]", "+=", "1", "\n", "break", "\n", "", "elif", "g1", "<", "-", "300", "and", "g2", "<", "-", "300", ":", "\n", "                ", "results", "[", "0", "]", "+=", "1", "\n", "break", "\n", "", "", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.gamblersruin.binom_term": [[62, 69], ["range", "range", "numpy.exp", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log"], "function", ["None"], ["", "def", "binom_term", "(", "n", ",", "k", ",", "p", ")", ":", "\n", "    ", "ans", "=", "0", "\n", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "        ", "ans", "+=", "np", ".", "log", "(", "(", "n", "-", "i", ")", ")", "+", "np", ".", "log", "(", "p", ")", "-", "np", ".", "log", "(", "k", "-", "i", ")", "\n", "", "for", "i", "in", "range", "(", "n", "-", "k", ")", ":", "\n", "        ", "ans", "+=", "np", ".", "log", "(", "n", "-", "k", "-", "i", ")", "+", "np", ".", "log", "(", "1", "-", "p", ")", "-", "np", ".", "log", "(", "n", "-", "k", "-", "i", ")", "\n", "", "return", "np", ".", "exp", "(", "ans", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.gamblersruin.win_sequence": [[71, 77], ["numpy.zeros", "range", "int", "gamblersruin.binom_term"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.gamblersruin.binom_term"], ["", "def", "win_sequence", "(", "k", ",", "p", "=", "0.5", ",", "size", "=", "1000", ")", ":", "\n", "    ", "seq", "=", "np", ".", "zeros", "(", "size", ")", "\n", "for", "l", "in", "range", "(", "int", "(", "(", "size", "-", "k", ")", "/", "2", ")", ")", ":", "\n", "#seq[k+2*l] = k/(k+l)*comb(k+2*l-1,l)*p**(k+l)*(1-p)**l", "\n", "        ", "seq", "[", "k", "+", "2", "*", "l", "]", "=", "k", "/", "(", "k", "+", "l", ")", "*", "binom_term", "(", "k", "+", "2", "*", "l", "-", "1", ",", "l", ",", "p", ")", "*", "p", "**", "k", "*", "(", "1", "-", "p", ")", "**", "(", "1", "-", "k", ")", "\n", "", "return", "seq", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.gamblersruin.gambler_race": [[79, 91], ["gamblersruin.win_sequence", "gamblersruin.win_sequence", "range", "len"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.gamblersruin.win_sequence", "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.gamblersruin.win_sequence"], ["", "def", "gambler_race", "(", "k1", "=", "2", ",", "k2", "=", "3", ",", "size", "=", "1000", ")", ":", "\n", "    ", "a1", "=", "win_sequence", "(", "k2", ",", "0.5", ",", "size", ")", "\n", "cum_a1", "=", "0", ";", "cum_a2", "=", "0", "\n", "a2", "=", "win_sequence", "(", "k1", ",", "0.5", ",", "size", ")", "\n", "ans1", "=", "0", ";", "ans2", "=", "0", "\n", "for", "n", "in", "range", "(", "len", "(", "a1", ")", ")", ":", "\n", "        ", "cum_a1", "+=", "a1", "[", "n", "]", "\n", "cum_a2", "+=", "a2", "[", "n", "]", "\n", "ans1", "+=", "(", "1", "-", "cum_a1", ")", "*", "a2", "[", "n", "]", "\n", "ans2", "+=", "(", "1", "-", "cum_a2", ")", "*", "a1", "[", "n", "]", "\n", "", "residue", "=", "1", "-", "ans1", "-", "ans2", "\n", "return", "ans1", ",", "residue", ",", "ans1", "+", "residue", "/", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.gamblersruin.gambler_race_v2": [[93, 98], ["numpy.array", "numpy.array", "sum", "numpy.concatenate", "range", "range", "numpy.cumsum", "scipy.special.comb", "scipy.special.comb", "scipy.special.comb", "scipy.special.comb"], "function", ["None"], ["", "def", "gambler_race_v2", "(", ")", ":", "\n", "    ", "a_t", "=", "np", ".", "array", "(", "[", "(", "comb", "(", "2", "*", "t", "+", "1", ",", "t", ")", "-", "comb", "(", "2", "*", "t", "+", "1", ",", "t", "-", "1", ")", ")", "/", "2", "**", "(", "2", "*", "t", "+", "2", ")", "for", "t", "in", "range", "(", "500", ")", "]", ")", "\n", "b_t", "=", "np", ".", "array", "(", "[", "(", "comb", "(", "2", "*", "t", "+", "2", ",", "t", ")", "-", "comb", "(", "2", "*", "t", "+", "2", ",", "t", "-", "1", ")", ")", "/", "2", "**", "(", "2", "*", "t", "+", "3", ")", "for", "t", "in", "range", "(", "500", ")", "]", ")", "\n", "b_sum", "=", "1", "-", "np", ".", "concatenate", "(", "(", "[", "0", "]", ",", "np", ".", "cumsum", "(", "b_t", ")", ")", ")", "\n", "return", "sum", "(", "a_t", "*", "b_sum", "[", ":", "500", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.gamblersruin.gamblers_race_closed_form": [[100, 103], ["numpy.array", "numpy.array", "numpy.sqrt", "range", "numpy.sqrt", "range", "scipy.special.gamma", "scipy.special.gamma", "scipy.special.gamma", "scipy.special.gamma"], "function", ["None"], ["", "def", "gamblers_race_closed_form", "(", ")", ":", "\n", "    ", "seq1", "=", "1", "-", "np", ".", "array", "(", "[", "(", "3", "*", "t", "+", "4", ")", "*", "gamma", "(", "t", "+", "1.5", ")", "/", "gamma", "(", "t", "+", "3", ")", "/", "np", ".", "sqrt", "(", "np", ".", "pi", ")", "for", "t", "in", "range", "(", "20", ")", "]", ")", "\n", "seq2", "=", "1", "-", "np", ".", "array", "(", "[", "(", "3", "*", "t", "+", "7", ")", "*", "gamma", "(", "t", "+", "2.5", ")", "/", "gamma", "(", "t", "+", "4", ")", "/", "np", ".", "sqrt", "(", "np", ".", "pi", ")", "for", "t", "in", "range", "(", "20", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.gamblersruin.draw_recurrence_relation": [[105, 115], ["numpy.array", "numpy.array", "range", "print", "numpy.array"], "function", ["None"], ["", "def", "draw_recurrence_relation", "(", ")", ":", "\n", "    ", "k", "=", "3", "\n", "d_k_1", "=", "np", ".", "array", "(", "[", "16", ",", "-", "5", "]", ")", "\n", "d_k_2", "=", "np", ".", "array", "(", "[", "4", ",", "-", "1", "]", ")", "\n", "for", "k1", "in", "range", "(", "15", ")", ":", "\n", "        ", "d_k", "=", "(", "2", "*", "(", "6", "*", "k", "**", "2", "-", "12", "*", "k", "+", "5", ")", "*", "d_k_1", "-", "(", "k", "-", "2", ")", "*", "(", "2", "*", "k", "-", "1", ")", "*", "d_k_2", "-", "np", ".", "array", "(", "[", "8", ",", "0", "]", ")", ")", "/", "k", "/", "(", "2", "*", "k", "-", "3", ")", "\n", "print", "(", "d_k", "[", "0", "]", "/", "d_k", "[", "1", "]", ")", "\n", "d_k_2", "=", "d_k_1", "\n", "d_k_1", "=", "d_k", "\n", "k", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.pois_diff_sf": [[7, 31], ["int", "numpy.floor", "numpy.floor", "scipy.stats.poisson.pmf", "scipy.stats.poisson.sf", "scipy.stats.poisson.pmf", "scipy.stats.poisson.sf"], "function", ["None"], ["def", "pois_diff_sf", "(", "d", ",", "lmb1", ",", "lmb2", ",", "t", "=", "10e3", "/", "4", "/", "100", ",", "s", "=", "15e3", "/", "4", "/", "100", ",", "terms", "=", "1000", ")", ":", "\n", "    ", "\"\"\"\n    Calculates the survival function of the random variable:\n    Poisson(lmb1*t)/t-Poisson(lmb2*s)/s at the value, d.\n    \"\"\"", "\n", "ans", "=", "0", "\n", "#Do the summation for terms around the mean.", "\n", "mean", "=", "int", "(", "lmb2", "*", "s", ")", "\n", "#Calculate the double summation.", "\n", "term", "=", "1e-3", ";", "i", "=", "mean", "\n", "while", "term", ">", "1e-8", ":", "\n", "        ", "j", "=", "np", ".", "floor", "(", "t", "*", "(", "d", "+", "i", "/", "s", ")", ")", "\n", "term", "=", "poisson", ".", "pmf", "(", "i", ",", "lmb1", "*", "s", ")", "*", "poisson", ".", "sf", "(", "j", ",", "lmb2", "*", "t", ")", "\n", "ans", "+=", "term", "\n", "i", "+=", "1", "\n", "", "term", "=", "1e-3", ";", "i", "=", "mean", "-", "1", "\n", "while", "term", ">", "1e-8", "and", "i", ">", "0", ":", "\n", "        ", "j", "=", "np", ".", "floor", "(", "t", "*", "(", "d", "+", "i", "/", "s", ")", ")", "\n", "term", "=", "poisson", ".", "pmf", "(", "i", ",", "lmb1", "*", "s", ")", "*", "poisson", ".", "sf", "(", "j", ",", "lmb2", "*", "t", ")", "\n", "ans", "+=", "term", "\n", "i", "-=", "1", "\n", "", "return", "ans", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.pois_diff_surv_inv": [[33, 41], ["scipy.optimize.bisect", "rate.pois_diff_sf"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.pois_diff_sf"], ["", "def", "pois_diff_surv_inv", "(", "p", ",", "lmb1", ",", "lmb2", ",", "t1", "=", "10e3", "/", "4", "/", "100", ",", "t2", "=", "15e3", "/", "4", "/", "100", ")", ":", "\n", "    ", "\"\"\"\n    The inverse of the survival function of distribution\n    defining the difference of two scaled poisson distributions,\n    Poisson(lmb1*t1)/t1-Poisson(lmb2*t2)/t2\n    \"\"\"", "\n", "sf", "=", "lambda", "d", ":", "pois_diff_sf", "(", "d", ",", "lmb1", ",", "lmb2", ",", "t1", ",", "t2", ")", "-", "p", "\n", "return", "bisect", "(", "sf", ",", "-", "50", ",", "50", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.beta": [[43, 51], ["rate.pois_diff_surv_inv", "rate.cdf_alternate"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.pois_diff_surv_inv", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.cdf_alternate"], ["", "def", "beta", "(", "lmb", ",", "effect", ",", "t1", ",", "t2", ",", "alpha", ")", ":", "\n", "    ", "\"\"\"\n    Calculates the beta (type-2 error; \n    P(alternate is true but fail to reject null))\n    1-beta becomes the power of the test.\n    \"\"\"", "\n", "s_inv", "=", "pois_diff_surv_inv", "(", "alpha", ",", "lmb", ",", "lmb", ",", "t1", ",", "t2", ")", "\n", "return", "cdf_alternate", "(", "s_inv", ",", "lmb", ",", "effect", ",", "t1", ",", "t2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.pois_diff_cdf": [[53, 62], ["scipy.stats.poisson.rvs", "scipy.stats.poisson.rvs", "sum"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "pois_diff_cdf", "(", "d", ",", "lmb", ",", "t", ",", "s", ",", "nsim", "=", "100000", ")", ":", "\n", "    ", "\"\"\"\n    Returns the probability that N_1/t-N_2/s<d\n    where N_1~Pois(lmb*t) and N_2~Pois(lmb*s) using\n    simulation.\n    \"\"\"", "\n", "n1", "=", "poisson", ".", "rvs", "(", "lmb", "*", "t", ",", "size", "=", "nsim", ")", "\n", "n2", "=", "poisson", ".", "rvs", "(", "lmb", "*", "s", ",", "size", "=", "nsim", ")", "\n", "return", "sum", "(", "n1", "/", "t", "-", "n2", "/", "s", "<=", "d", ")", "/", "nsim", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.cdf_alternate": [[64, 70], ["rate.pois_diff_sf"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.pois_diff_sf"], ["", "def", "cdf_alternate", "(", "z", ",", "lmb", ",", "effect", ",", "t1", "=", "10e3", "/", "4", "/", "100", ",", "t2", "=", "15e3", "/", "4", "/", "100", ")", ":", "\n", "    ", "\"\"\"\n    The CDF of the random variable Poisson(lmb1*t1)/t1-Poisson(lmb2*t2)/t2\n    where lmb1 = lmb and lmb2 = lmb+effect.\n    \"\"\"", "\n", "return", "1", "-", "pois_diff_sf", "(", "z", ",", "lmb", ",", "lmb", "+", "effect", ",", "t1", ",", "t2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.rate_hypothesis_test_1": [[72, 97], ["scipy.stats.poisson.rvs", "scipy.stats.poisson.rvs", "rate.pois_diff_sf", "PoissonTest.p_value", "rate.pois_diff_cdf"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.pois_diff_sf", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.poisson_test.PoissonTest.p_value", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.pois_diff_cdf"], ["", "def", "rate_hypothesis_test_1", "(", "lmb", "=", "12.0", ",", "mu", "=", "13.0", ",", "t", "=", "10e3", "/", "4", "/", "100", ",", "s", "=", "15e3", "/", "4", "/", "100", ")", ":", "\n", "    ", "\"\"\"\n    Calculates the p-value for hypothesis test-1 based on rate difference.\n    args:\n        lmb: The rate in interruptions per 100 VM years for first group.\n        mu: The rate in interruptions per 100 VM years for second group.\n        t: The time for which first group runs in 100 VM years. Default assuming\n           10K VMs for 3 months; time in 100 VM years.\n        s: The time for which the second group runs in 100 VM years.\n           Default assuming 15K VMs for 3 months; time in 100 VM years.\n    \"\"\"", "\n", "pois1", "=", "poisson", ".", "rvs", "(", "lmb", "*", "t", ")", "\n", "pois2", "=", "poisson", ".", "rvs", "(", "mu", "*", "s", ")", "\n", "# Get the estimated rates.", "\n", "lmb_est", "=", "pois1", "/", "t", "\n", "mu_est", "=", "pois2", "/", "s", "\n", "lmb_mix", "=", "(", "pois1", "+", "pois2", ")", "/", "(", "s", "+", "t", ")", "\n", "d", "=", "mu_est", "-", "lmb_est", "\n", "## Uses simulation", "\n", "p_val1", "=", "1", "-", "pois_diff_cdf", "(", "d", ",", "lmb_mix", ",", "t", ",", "s", ")", "\n", "## Uses the summation", "\n", "p_val2", "=", "pois_diff_sf", "(", "d", ",", "lmb_mix", ",", "lmb_mix", ",", "t", ",", "s", ")", "\n", "## p-value using poisson test method.", "\n", "p_val3", "=", "PoissonTest", ".", "p_value", "(", "pois1", ",", "pois2", ",", "t", ",", "s", ")", "\n", "return", "d", ",", "p_val1", ",", "p_val2", ",", "p_val3", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.confusion_matrix": [[101, 119], ["numpy.zeros", "range", "scipy.stats.poisson.rvs", "scipy.stats.poisson.rvs", "rate.pois_diff_sf", "numpy.array", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.pois_diff_sf"], ["", "def", "confusion_matrix", "(", "t1", "=", "10e3", "/", "4", "/", "100", ",", "t2", "=", "15e3", "/", "4", "/", "100", ")", ":", "\n", "## Broken method. Don't use.", "\n", "    ", "confusion", "=", "np", ".", "zeros", "(", "(", "2", ",", "2", ")", ")", "\n", "for", "_", "in", "range", "(", "10000", ")", ":", "\n", "        ", "lmb1", "=", "lmb2", "=", "12.0", "\n", "confusion_term", "=", "0", "\n", "if", "np", ".", "random", ".", "uniform", "(", ")", ">", "0.5", ":", "\n", "            ", "lmb2", "+=", "0.2", "\n", "confusion_term", "=", "1", "\n", "", "n1", "=", "poisson", ".", "rvs", "(", "lmb1", "*", "t1", ")", "\n", "n2", "=", "poisson", ".", "rvs", "(", "lmb2", "*", "t2", ")", "\n", "lmb1_hat", "=", "n1", "/", "t1", "\n", "lmb2_hat", "=", "n2", "/", "t2", "\n", "lmb_hat", "=", "(", "n1", "+", "n2", ")", "/", "(", "t1", "+", "t2", ")", "\n", "d_stat", "=", "lmb2_hat", "-", "lmb1_hat", "\n", "p_accept_alternate", "=", "pois_diff_sf", "(", "d_stat", ",", "lmb_hat", ",", "lmb_hat", ",", "t1", ",", "t2", ")", "\n", "confusion", "[", "confusion_term", ",", "]", "+=", "np", ".", "array", "(", "[", "p_accept_alternate", ",", "1", "-", "p_accept_alternate", "]", ")", "\n", "", "return", "confusion", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.collect_data": [[129, 137], ["numpy.zeros", "range", "range", "rate.pois_diff_sf"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.pois_diff_sf"], ["def", "collect_data", "(", ")", ":", "\n", "    ", "lmb", "=", "20.0", "\n", "d", "=", "2.0", "\n", "res", "=", "np", ".", "zeros", "(", "(", "20", ",", "20", ")", ")", "\n", "for", "t", "in", "range", "(", "20", ")", ":", "\n", "        ", "for", "s", "in", "range", "(", "20", ")", ":", "\n", "            ", "res", "[", "t", ",", "s", "]", "=", "pois_diff_sf", "(", "d", ",", "lmb", ",", "lmb", ",", "t", "+", "1", ",", "s", "+", "1", ")", "\n", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.make_plot": [[139, 156], ["numpy.arange", "numpy.arange", "numpy.meshgrid", "rate.collect_data", "matplotlib.figure", "plt.figure.gca", "fig.gca.plot_surface", "plt.figure.colorbar", "matplotlib.show"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.collect_data"], ["", "def", "make_plot", "(", ")", ":", "\n", "    ", "ts", "=", "np", ".", "arange", "(", "20", ")", "\n", "ss", "=", "np", ".", "arange", "(", "20", ")", "\n", "# Make data.", "\n", "X", "=", "ts", "\n", "Y", "=", "ss", "\n", "X", ",", "Y", "=", "np", ".", "meshgrid", "(", "X", ",", "Y", ")", "\n", "res", "=", "collect_data", "(", ")", "\n", "Z", "=", "res", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "fig", ".", "gca", "(", "projection", "=", "'3d'", ")", "\n", "# Plot the surface.", "\n", "surf", "=", "ax", ".", "plot_surface", "(", "X", ",", "Y", ",", "Z", ",", "cmap", "=", "cm", ".", "coolwarm", ",", "\n", "linewidth", "=", "0", ",", "antialiased", "=", "False", ")", "\n", "# Add a color bar which maps values to colors.", "\n", "fig", ".", "colorbar", "(", "surf", ",", "shrink", "=", "0.5", ",", "aspect", "=", "5", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.plot_alpha_beta": [[158, 163], ["numpy.arange", "numpy.array", "matplotlib.plot", "matplotlib.show", "rate.beta"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.beta"], ["", "def", "plot_alpha_beta", "(", ")", ":", "\n", "    ", "alphas", "=", "np", ".", "arange", "(", "0", ",", "1", ",", ".1", ")", "\n", "betas", "=", "np", ".", "array", "(", "[", "beta", "(", "10.0", ",", "1", ",", "25", ",", "25", ",", "i", ")", "for", "i", "in", "alphas", "]", ")", "\n", "plt", ".", "plot", "(", "alphas", ",", "1", "-", "betas", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.poisson_test.PoissonTest.conditional_pmf": [[6, 21], ["range", "range", "numpy.exp", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "conditional_pmf", "(", "n", ",", "n2", ",", "t1", ",", "t2", ")", ":", "\n", "        ", "\"\"\"\n        Calculates P(N_1=n_1|N=n) where N=N_1+N_2\n        \"\"\"", "\n", "t", "=", "t1", "+", "t2", ";", "n1", "=", "n", "-", "n2", "\n", "res", "=", "0", "\n", "for", "i", "in", "range", "(", "n1", ")", ":", "\n", "            ", "res", "+=", "np", ".", "log", "(", "t1", ")", "-", "np", ".", "log", "(", "t", ")", "-", "np", ".", "log", "(", "n1", "-", "i", ")", "+", "np", ".", "log", "(", "n", "-", "i", ")", "\n", "", "for", "i", "in", "range", "(", "n2", ")", ":", "\n", "            ", "res", "+=", "np", ".", "log", "(", "t2", ")", "-", "np", ".", "log", "(", "t", ")", "-", "np", ".", "log", "(", "n2", "-", "i", ")", "+", "np", ".", "log", "(", "n", "-", "n1", "-", "i", ")", "\n", "#return t1**n1*t2**n2/t**n/comb(n,n1)", "\n", "", "return", "np", ".", "exp", "(", "res", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.poisson_test.PoissonTest.p_value": [[22, 31], ["int", "range", "numpy.ceil", "int", "poisson_test.PoissonTest.conditional_pmf"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.poisson_test.PoissonTest.conditional_pmf"], ["", "@", "staticmethod", "\n", "def", "p_value", "(", "n1", ",", "n2", ",", "t1", ",", "t2", ")", ":", "\n", "        ", "n", "=", "n1", "+", "n2", ";", "t", "=", "t1", "+", "t2", "\n", "delta", "=", "n2", "/", "n", "-", "t2", "/", "t", "\n", "k_lo", "=", "int", "(", "np", ".", "ceil", "(", "delta", "*", "n", "+", "t2", "*", "n", "/", "t", ")", ")", "\n", "p_val", "=", "0", "\n", "for", "k", "in", "range", "(", "k_lo", ",", "int", "(", "n", "+", "1", ")", ")", ":", "\n", "            ", "p_val", "+=", "PoissonTest", ".", "conditional_pmf", "(", "n1", "+", "k", ",", "k", ",", "t1", ",", "t2", ")", "\n", "", "return", "p_val", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.naive_binned_test.simulate_rateratio_test": [[9, 23], ["scipy.stats.poisson.rvs", "scipy.stats.poisson.rvs", "scipy.stats.binom_test"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["def", "simulate_rateratio_test", "(", "lmb1", ",", "t1", ",", "lmb2", ",", "t2", ")", ":", "\n", "    ", "\"\"\"\n    Simulates data from two Poisson distributions\n    and finds the p-value for a one-sided test.\n    args:\n        lmb1: The failure rate for first population.\n        t1: The time observed for first population.\n        lmb2: The failure rate for second population.\n        t2: The time observed for second population\n    \"\"\"", "\n", "n1", "=", "poisson", ".", "rvs", "(", "lmb1", "*", "t1", ")", "\n", "n2", "=", "poisson", ".", "rvs", "(", "lmb2", "*", "t2", ")", "\n", "p_val", "=", "binom_test", "(", "n2", ",", "n1", "+", "n2", ",", "t2", "/", "(", "t1", "+", "t2", ")", ",", "alternative", "=", "'greater'", ")", "\n", "return", "p_val", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.naive_binned_test.simulate_binned_t_test": [[25, 51], ["int", "int", "scipy.stats.poisson.rvs", "scipy.stats.poisson.rvs", "numpy.mean", "numpy.std", "numpy.mean", "numpy.std", "print", "scipy.stats.ttest_ind_from_stats"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "simulate_binned_t_test", "(", "lmb1", ",", "t1", ",", "lmb2", ",", "t2", ",", "bin_size", "=", "1.0", ")", ":", "\n", "    ", "\"\"\"\n    Simulates data from two Poisson distributions,\n    bins them as per the bin-size and finds the p-value\n    by passing the binned AIR estimate vectors to a two-\n    sided t-test.\n    args:\n        lmb1: The failure rate for first population.\n        t1: The time observed for first population.\n        lmb2: The failure rate for second population.\n        t2: The time observed for second population\n        bin_size: The bins into which data is partitioned.\n    \"\"\"", "\n", "num_bins1", "=", "int", "(", "t1", "/", "bin_size", ")", "\n", "num_bins2", "=", "int", "(", "t2", "/", "bin_size", ")", "\n", "if", "num_bins1", "<", "2", "or", "num_bins2", "<", "2", ":", "\n", "        ", "print", "(", "\"Not enough bins!\"", ")", "\n", "return", "\n", "", "n1", "=", "poisson", ".", "rvs", "(", "lmb1", "*", "t1", "/", "num_bins1", ",", "size", "=", "num_bins1", ")", "\n", "n2", "=", "poisson", ".", "rvs", "(", "lmb2", "*", "t2", "/", "num_bins2", ",", "size", "=", "num_bins2", ")", "\n", "mean1", "=", "np", ".", "mean", "(", "n1", "/", "bin_size", ")", ";", "std1", "=", "np", ".", "std", "(", "n1", "/", "bin_size", ")", "\n", "mean2", "=", "np", ".", "mean", "(", "n2", "/", "bin_size", ")", ";", "std2", "=", "np", ".", "std", "(", "n2", "/", "bin_size", ")", "\n", "p_val", "=", "stats", ".", "ttest_ind_from_stats", "(", "mean1", "=", "mean1", ",", "std1", "=", "std1", ",", "nobs1", "=", "20", ",", "mean2", "=", "mean2", ",", "std2", "=", "std2", ",", "nobs2", "=", "20", ",", "equal_var", "=", "False", ")", ".", "pvalue", "/", "2", "\n", "return", "p_val", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.naive_binned_test.est_rejection_rate": [[53, 77], ["numpy.arange", "numpy.zeros", "range", "len", "fn"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.experiments.count_distributions.fn"], ["", "def", "est_rejection_rate", "(", "lmb1", "=", "12.0", ",", "lmb2", "=", "12.0", ",", "\n", "t1", "=", "2.5", ",", "t2", "=", "2.5", ",", "n", "=", "100000", ",", "\n", "thresh", "=", "np", ".", "arange", "(", "0.001", ",", "1.0", ",", "0.01", ")", ",", "\n", "fn", "=", "simulate_rateratio_test", ")", ":", "\n", "    ", "\"\"\"\n    Given various values of alpha, gets the percentage of time\n    the second sample is deemed to have a greater AIR than the\n    first sample.\n    args:\n        lmb1: The failure rate of the first population.\n        lmb2: The failure rate of the second population.\n        t1: The time data is collected for first population.\n        t2: The time data is collected for the second population.\n        n: The number of simulations.\n        thresh: The alpha levels.\n        fn: The test to generate simulated p_value.\n            for example: simulate_binned_t_test, simulate_rateratio_test.\n    \"\"\"", "\n", "reject_rate", "=", "np", ".", "zeros", "(", "len", "(", "thresh", ")", ")", "\n", "for", "_", "in", "range", "(", "n", ")", ":", "\n", "#n1 is control, n2 is treatment.", "\n", "        ", "p_val", "=", "fn", "(", "lmb1", ",", "t1", ",", "lmb2", ",", "t2", ")", "\n", "reject_rate", "+=", "(", "p_val", "<", "thresh", ")", "\n", "", "return", "reject_rate", "/", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.naive_binned_test.get_beta": [[79, 103], ["numpy.arange", "naive_binned_test.est_rejection_rate", "numpy.argmin", "min", "Exception", "naive_binned_test.est_rejection_rate", "numpy.argmin"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.est_rejection_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.est_rejection_rate"], ["", "def", "get_beta", "(", "t1", "=", "25", ",", "t2", "=", "25", ",", "fn", "=", "simulate_binned_t_test", ",", "lmb_base", "=", "12", ",", "alpha", "=", "0.05", ",", "effect", "=", "3", ")", ":", "\n", "    ", "\"\"\"\n    Obtains the beta (false negative rate) given the observation\n    durations for treatment and control and hypothesis test to simulate.\n    args:\n        t1: VM-duration observed in treatment.\n        t2: VM-duration observed in control.\n        fn: The test to generate simulated p_value.\n            for example: simulate_binned_t_test, simulate_rateratio_test.\n    \"\"\"", "\n", "alphas", "=", "np", ".", "arange", "(", "0.001", ",", "1.0", ",", "0.01", ")", "\n", "## For small samples, the actual false positive rate differs from the alphas we set.", "\n", "# so, we choose the alpha that gives us a false positive rate of 5%.", "\n", "real_alphas", "=", "est_rejection_rate", "(", "lmb1", "=", "lmb_base", ",", "lmb2", "=", "lmb_base", ",", "t1", "=", "t1", ",", "t2", "=", "t2", ",", "fn", "=", "fn", ")", "\n", "errs", "=", "(", "real_alphas", "-", "alpha", ")", "**", "2", "\n", "if", "min", "(", "errs", ")", ">", "0.001", ":", "\n", "        ", "raise", "Exception", "(", "\"Too far!\"", ")", "\n", "", "set_alpha", "=", "real_alphas", "[", "np", ".", "argmin", "(", "errs", ")", "]", "\n", "set_alpha_idx", "=", "np", ".", "argmin", "(", "errs", ")", "\n", "## Find all betas at various values of alpha.", "\n", "betas", "=", "1", "-", "est_rejection_rate", "(", "lmb1", "=", "lmb_base", ",", "lmb2", "=", "lmb_base", "+", "effect", ",", "t1", "=", "t1", ",", "t2", "=", "t2", ",", "fn", "=", "fn", ")", "\n", "# Select the beta at the alpha level that gives us 5% false positive rate.", "\n", "beta", "=", "betas", "[", "set_alpha_idx", "]", "\n", "return", "beta", ",", "set_alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.naive_binned_test.get_ctrl_sample": [[105, 112], ["naive_binned_test.get_beta"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.naive_binned_test.get_beta"], ["", "def", "get_ctrl_sample", "(", "t1", "=", "25", ",", "fn", "=", "simulate_rateratio_test", ",", "\n", "lmb_base", "=", "12", ",", "alpha", "=", "0.05", ",", "beta", "=", "0.05", ",", "effect", "=", "3", ")", ":", "\n", "    ", "t2", "=", "1.0", ";", "beta_tmp", "=", "1.0", "\n", "while", "beta_tmp", ">", "beta", ":", "\n", "        ", "beta_tmp", "=", "get_beta", "(", "t1", "=", "t1", ",", "t2", "=", "t2", ",", "fn", "=", "fn", ",", "lmb_base", "=", "lmb_base", ",", "alpha", "=", "alpha", ",", "effect", "=", "effect", ")", "[", "0", "]", "\n", "t2", "+=", "1", "\n", "", "return", "t2", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.naive_binned_test.compare_tests": [[116, 141], ["numpy.array", "numpy.zeros", "numpy.zeros", "range", "print", "print", "len", "len", "int", "scipy.stats.poisson.rvs", "scipy.stats.poisson.rvs", "sum", "sum", "pois_diff_sf", "numpy.mean", "numpy.std", "numpy.mean", "numpy.std", "scipy.stats.ttest_ind_from_stats"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate.pois_diff_sf"], ["", "def", "compare_tests", "(", "n", "=", "1e4", ",", "alpha", "=", "np", ".", "array", "(", "[", ".01", ",", ".25", ",", ".3", ",", ".4", ",", ".45", ",", ".5", "]", ")", ",", "\n", "lmb", "=", "12.0", ",", "mu", "=", "12.0", ")", ":", "\n", "    ", "cnt", "=", "np", ".", "zeros", "(", "len", "(", "alpha", ")", ")", ";", "cnt1", "=", "np", ".", "zeros", "(", "len", "(", "alpha", ")", ")", "\n", "for", "_", "in", "range", "(", "int", "(", "n", ")", ")", ":", "\n", "        ", "t", "=", "10e3", "/", "4", "/", "1000", ";", "s", "=", "10e3", "/", "4", "/", "1000", "\n", "n1s", "=", "poisson", ".", "rvs", "(", "lmb", "*", "t", ",", "size", "=", "20", ")", "\n", "n2s", "=", "poisson", ".", "rvs", "(", "mu", "*", "s", ",", "size", "=", "20", ")", "\n", "rate1", "=", "n1s", "/", "t", "\n", "rate2", "=", "n2s", "/", "s", "\n", "n1", "=", "sum", "(", "n1s", ")", ";", "n2", "=", "sum", "(", "n2s", ")", "\n", "d", "=", "n2", "/", "(", "20", "*", "s", ")", "-", "n1", "/", "(", "20", "*", "t", ")", "\n", "lmb_mix", "=", "(", "n1", "+", "n2", ")", "/", "(", "t", "+", "s", ")", "/", "20", "\n", "p_val2", "=", "pois_diff_sf", "(", "d", ",", "lmb_mix", ",", "lmb_mix", ",", "t", ",", "s", ")", "\n", "#if p_val2 < alpha:# and n2/s>n1/t:", "\n", "cnt1", "+=", "p_val2", "<", "alpha", "\n", "mean1", "=", "np", ".", "mean", "(", "rate1", ")", ";", "std1", "=", "np", ".", "std", "(", "rate1", ")", "\n", "mean2", "=", "np", ".", "mean", "(", "rate2", ")", ";", "std2", "=", "np", ".", "std", "(", "rate2", ")", "\n", "#if mean2>mean1:", "\n", "t_score", "=", "stats", ".", "ttest_ind_from_stats", "(", "mean1", "=", "mean1", ",", "std1", "=", "std1", ",", "nobs1", "=", "20", ",", "mean2", "=", "mean2", ",", "std2", "=", "std2", ",", "nobs2", "=", "20", ",", "equal_var", "=", "False", ")", "\n", "#if t_score.pvalue/2 < alpha:", "\n", "cnt", "+=", "t_score", ".", "pvalue", "/", "2", "<", "alpha", "\n", "", "print", "(", "cnt", "/", "n", ")", "\n", "print", "(", "cnt1", "/", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.naive_binned_test.plot_alpha_beta_curves": [[143, 154], ["numpy.array", "numpy.array", "plt.plot", "numpy.array", "numpy.array", "plt.plot", "plt.xlabel", "plt.ylabel", "plt.legend", "plt.show"], "function", ["None"], ["", "def", "plot_alpha_beta_curves", "(", ")", ":", "\n", "    ", "xs1", "=", "np", ".", "array", "(", "[", "0", ",", "0.000181818", ",", "0.000363636", ",", "0.001818182", ",", "0.010590909", ",", "0.038863636", ",", "0.041545455", ",", "0.127454545", ",", "0.128045455", ",", "0.283136364", ",", "0.283363636", ",", "0.509136364", ",", "1", "]", ")", "\n", "ys1", "=", "np", ".", "array", "(", "[", "1", ",", "0.656846154", ",", "0.441192308", ",", "0.309461538", ",", "0.103076923", ",", "0.097307692", ",", "0.036307692", ",", "0.009846154", ",", "0.009769231", ",", "0.0015", ",", "0.0015", ",", "0.000230769", ",", "0", "]", ")", "\n", "plt", ".", "plot", "(", "xs1", ",", "ys1", ",", "label", "=", "'Poisson difference test'", ")", "\n", "xs2", "=", "np", ".", "array", "(", "[", "0", ",", "0.022909091", ",", "0.044363636", ",", "0.064681818", ",", "0.086727273", ",", "0.207772727", ",", "0.229", ",", "0.248818182", ",", "0.268636364", ",", "0.309045455", ",", "0.349818182", ",", "0.408409091", ",", "0.446409091", ",", "0.504272727", ",", "0.603045455", ",", "0.661181818", ",", "0.702045455", ",", "0.798363636", ",", "0.839954545", ",", "1", "]", ")", "\n", "ys2", "=", "np", ".", "array", "(", "[", "1", ",", "0.147846154", ",", "0.089769231", ",", "0.064", ",", "0.049807692", ",", "0.016576923", ",", "0.014538462", ",", "0.012807692", ",", "0.011038462", ",", "0.008230769", ",", "0.006307692", ",", "0.004807692", ",", "0.003730769", ",", "0.002692308", ",", "0.001346154", ",", "0.001", ",", "0.000846154", ",", "0.000461538", ",", "0.000307692", ",", "0", "]", ")", "\n", "plt", ".", "plot", "(", "xs2", ",", "ys2", ",", "label", "=", "'Time binned Welch test'", ")", "\n", "plt", ".", "xlabel", "(", "'false positive rate (alpha)'", ")", "\n", "plt", ".", "ylabel", "(", "'false negative rate (beta)'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.naive_binned_test.get_full_betas_grid": [[160, 169], ["numpy.zeros", "range", "numpy.savetxt", "range", "naive_binned_test.get_beta", "print", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.naive_binned_test.get_beta"], ["", "def", "get_full_betas_grid", "(", ")", ":", "\n", "    ", "binom_tst", "=", "np", ".", "zeros", "(", "(", "20", ",", "20", ")", ")", "\n", "for", "i", "in", "range", "(", "3", ",", "20", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "i", ",", "20", ")", ":", "\n", "            ", "binom_tst", "[", "i", ",", "j", "]", "=", "get_beta", "(", "t1", "=", "i", ",", "t2", "=", "j", ",", "\n", "fn", "=", "simulate_rateratio_test", ")", "\n", "print", "(", "str", "(", "binom_tst", "[", "i", ",", "j", "]", ")", "+", "\",\"", ")", "\n", "#print()", "\n", "", "", "np", ".", "savetxt", "(", "'binom_tst1.csv'", ",", "binom_tst", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.binom_test.binom_tst_beta": [[6, 11], ["scipy.stats.binom.isf", "scipy.stats.binom.cdf"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.cdf"], ["def", "binom_tst_beta", "(", "p_null", "=", "0.5", ",", "p_alt", "=", "0.6", ",", "n", "=", "10", ",", "alpha_hat", "=", "0.05", ")", ":", "\n", "    ", "if", "n", "==", "0", ":", "\n", "        ", "return", "1.0", "\n", "", "x_a", "=", "binom", ".", "isf", "(", "alpha_hat", ",", "n", ",", "p_null", ")", "\n", "return", "binom", ".", "cdf", "(", "x_a", ",", "n", ",", "p_alt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.binom_test.binom_tst_beta_sim": [[13, 20], ["scipy.stats.binom.rvs", "numpy.array", "sum", "len", "scipy.stats.binom_test"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "binom_tst_beta_sim", "(", "p_null", "=", "0.5", ",", "p_alt", "=", "0.6", ",", "n", "=", "10", ",", "alpha_hat", "=", "0.05", ",", "n_sim", "=", "1000", ")", ":", "\n", "#Generate from the alternate.", "\n", "    ", "rvs", "=", "binom", ".", "rvs", "(", "n", ",", "p_alt", ",", "size", "=", "n_sim", ")", "\n", "#Check against the null.", "\n", "p_vals", "=", "np", ".", "array", "(", "[", "binom_test", "(", "i", ",", "n", ",", "p_null", ",", "alternative", "=", "'greater'", ")", "for", "i", "in", "rvs", "]", ")", "\n", "return", "sum", "(", "p_vals", ">", "alpha_hat", ")", "/", "len", "(", "rvs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.alpha_beta_curve": [[10, 33], ["numpy.concatenate", "numpy.zeros", "range", "numpy.zeros", "range", "len", "rvs_fn", "rvs_fn", "hypoth_fn", "len", "rvs_fn", "rvs_fn", "hypoth_fn", "numpy.arange", "numpy.arange", "numpy.arange"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.bare_bones_simulator.rvs_fn", "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.bare_bones_simulator.rvs_fn", "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.bare_bones_simulator.rvs_fn", "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.bare_bones_simulator.rvs_fn"], ["def", "alpha_beta_curve", "(", "rvs_fn", ",", "n_sim", "=", "10000", ",", "lmb", "=", "20", ",", "t1", "=", "10", ",", "t2", "=", "3", ",", "scale", "=", "1.0", ",", "dellmb", "=", "10.0", ",", "hypoth_fn", "=", "rateratio_test", ")", ":", "\n", "## First the null hypothesis..", "\n", "    ", "alpha_hats", "=", "np", ".", "concatenate", "(", "(", "np", ".", "arange", "(", "0.000000000001", ",", "0.0099", ",", "0.0000001", ")", ",", "\n", "np", ".", "arange", "(", "0.01", ",", "1.00", ",", "0.001", ")", ",", "\n", "np", ".", "arange", "(", "0.991", ",", "1.00", ",", "0.001", ")", ")", ",", "axis", "=", "0", ")", "\n", "alphas", "=", "np", ".", "zeros", "(", "len", "(", "alpha_hats", ")", ")", "\n", "\n", "## First generate from null and find alpha_hat and alpha.", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "m1", "=", "rvs_fn", "(", "lmb", ",", "t1", ")", "\n", "m2", "=", "rvs_fn", "(", "lmb", ",", "t2", ")", "\n", "p_val", "=", "hypoth_fn", "(", "m1", ",", "t1", ",", "m2", ",", "t2", ",", "scale", ")", "\n", "alphas", "+=", "(", "p_val", "<", "alpha_hats", ")", "/", "n_sim", "\n", "\n", "## Now the alternate hypothesis", "\n", "", "betas", "=", "np", ".", "zeros", "(", "len", "(", "alpha_hats", ")", ")", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "m1", "=", "rvs_fn", "(", "lmb", ",", "t1", ")", "\n", "m2", "=", "rvs_fn", "(", "(", "lmb", "+", "dellmb", ")", ",", "t2", ")", "\n", "p_val", "=", "hypoth_fn", "(", "m1", ",", "t1", ",", "m2", ",", "t2", ",", "scale", ")", "\n", "betas", "+=", "1", "/", "n_sim", "-", "(", "p_val", "<", "alpha_hats", ")", "/", "n_sim", "\n", "", "return", "alphas", ",", "betas", ",", "alpha_hats", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.alpha_beta_tracer": [[35, 57], ["numpy.concatenate", "numpy.zeros", "range", "numpy.zeros", "range", "len", "rvs_fn_1", "rvs_fn_1", "hypoth_tst", "len", "rvs_fn_1", "rvs_fn_2", "hypoth_tst", "numpy.arange", "numpy.arange", "numpy.arange"], "function", ["None"], ["", "def", "alpha_beta_tracer", "(", "rvs_fn_1", ",", "rvs_fn_2", ",", "t1", "=", "10", ",", "t2", "=", "10", ",", "n_sim", "=", "10000", ",", "scale", "=", "1.0", ",", "hypoth_tst", "=", "rateratio_test", ")", ":", "\n", "## First the null hypothesis..", "\n", "    ", "alpha_hats", "=", "np", ".", "concatenate", "(", "(", "np", ".", "arange", "(", "0.000000000001", ",", "0.0099", ",", "0.0000001", ")", ",", "\n", "np", ".", "arange", "(", "0.01", ",", "1.00", ",", "0.001", ")", ",", "\n", "np", ".", "arange", "(", "0.991", ",", "1.00", ",", "0.001", ")", ")", ",", "axis", "=", "0", ")", "\n", "alphas", "=", "np", ".", "zeros", "(", "len", "(", "alpha_hats", ")", ")", "\n", "## First generate from null and find alpha_hat and alpha.", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "m1", "=", "rvs_fn_1", "(", "t1", ")", "\n", "m2", "=", "rvs_fn_1", "(", "t2", ")", "\n", "p_val", "=", "hypoth_tst", "(", "m1", ",", "t1", ",", "m2", ",", "t2", ",", "scale", ")", "\n", "alphas", "+=", "(", "p_val", "<", "alpha_hats", ")", "/", "n_sim", "\n", "\n", "## Now the alternate hypothesis", "\n", "", "betas", "=", "np", ".", "zeros", "(", "len", "(", "alpha_hats", ")", ")", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "#TODO: recycle the m1 or m2 from alpha simulation.", "\n", "        ", "m1", "=", "rvs_fn_1", "(", "t1", ")", "\n", "m2", "=", "rvs_fn_2", "(", "t2", ")", "\n", "p_val", "=", "hypoth_tst", "(", "m1", ",", "t1", ",", "m2", ",", "t2", ",", "scale", ")", "\n", "betas", "+=", "1", "/", "n_sim", "-", "(", "p_val", "<", "alpha_hats", ")", "/", "n_sim", "\n", "", "return", "alphas", ",", "betas", ",", "alpha_hats", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.run_simulns": [[67, 79], ["datetime.datetime.now", "hypoth_tst_simulator.alpha_beta_curve", "datetime.datetime.now", "print", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.alpha_beta_curve"], ["", "def", "run_simulns", "(", "fn", ",", "hypoth_fn", "=", "rateratio_test", ",", "n_sim", "=", "50000", ",", "lmb", "=", "20.0", ",", "t1", "=", "10.0", ",", "t2", "=", "3.0", ",", "scale", "=", "1.0", ")", ":", "\n", "    ", "time1", "=", "datetime", ".", "now", "(", ")", "\n", "alphas1", ",", "betas1", ",", "alpha_hats1", "=", "alpha_beta_curve", "(", "fn", ",", "\n", "n_sim", "=", "n_sim", ",", "\n", "lmb", "=", "lmb", ",", "\n", "t1", "=", "t1", ",", "t2", "=", "t2", ",", "\n", "scale", "=", "scale", ",", "hypoth_fn", "=", "hypoth_fn", ")", "\n", "time2", "=", "datetime", ".", "now", "(", ")", "\n", "time_del", "=", "(", "time2", "-", "time1", ")", ".", "seconds", "\n", "print", "(", "\"Time taken in seconds: \"", "+", "str", "(", "time_del", ")", ")", "\n", "return", "alphas1", ",", "betas1", ",", "alpha_hats1", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson": [[9, 30], ["numpy.array", "rate_test.est_rejection_rate"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.est_rejection_rate"], ["    ", "@", "staticmethod", "\n", "def", "beta_on_poisson", "(", "t1", "=", "25", ",", "t2", "=", "25", ",", "lmb_base", "=", "12", ",", "alpha", "=", "0.05", ",", "effect", "=", "3", ",", "\n", "thresh", "=", "None", ",", "n", "=", "10000", ")", ":", "\n", "        ", "\"\"\"\n        Obtains the beta (false negative rate) given the observation\n        durations for treatment and control and hypothesis test to simulate.\n        args:\n            t1: VM-duration observed in treatment.\n            t2: VM-duration observed in control.\n            fn: The test to generate simulated p_value.\n                for example: simulate_binned_t_test, simulate_rateratio_test.\n        \"\"\"", "\n", "if", "thresh", "is", "None", ":", "\n", "            ", "thresh", "=", "np", ".", "array", "(", "[", "alpha", "]", ")", "\n", "## Find all betas at various values of alpha.", "\n", "", "betas", "=", "1", "-", "est_rejection_rate", "(", "lmb1", "=", "lmb_base", ",", "lmb2", "=", "lmb_base", "+", "effect", ",", "t1", "=", "t1", ",", "t2", "=", "t2", ",", "\n", "fn", "=", "UMPPoisson", ".", "poisson_one_sim", ",", "thresh", "=", "thresh", ",", "n", "=", "n", ")", "\n", "# Select the beta at the alpha level that gives us 5% false positive rate.", "\n", "##TODO: Change this to closest instead of exact match.", "\n", "beta", "=", "betas", "[", "thresh", "==", "alpha", "]", "[", "0", "]", "\n", "return", "beta", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form": [[31, 54], ["int", "scipy.stats.poisson.pmf", "numpy.isnan", "int", "scipy.stats.poisson.pmf", "stochproc.hypothesis.binom_test.binom_tst_beta", "stochproc.hypothesis.binom_test.binom_tst_beta"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.binom_test.binom_tst_beta", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.binom_test.binom_tst_beta"], ["", "@", "staticmethod", "\n", "def", "beta_on_poisson_closed_form", "(", "t1", "=", "25", ",", "t2", "=", "25", ",", "lmb_base", "=", "12", ",", "effect", "=", "3", ",", "alpha", "=", "0.05", ",", "tol", "=", "1e-7", ")", ":", "\n", "        ", "poisson_mu", "=", "lmb_base", "*", "t1", "+", "(", "lmb_base", "+", "effect", ")", "*", "t2", "\n", "beta", "=", "0.0", ";", "prob_mass", "=", "0.0", "\n", "p_null", "=", "t2", "/", "(", "t1", "+", "t2", ")", "\n", "mu_2", "=", "t2", "*", "(", "lmb_base", "+", "effect", ")", ";", "mu_1", "=", "t1", "*", "lmb_base", "\n", "p_alt", "=", "mu_2", "/", "(", "mu_1", "+", "mu_2", ")", "\n", "int_poisson_mu", "=", "int", "(", "poisson_mu", ")", ";", "pmf", "=", "1.0", "\n", "while", "pmf", ">", "tol", "and", "int_poisson_mu", ">=", "0", ":", "\n", "            ", "pmf", "=", "poisson", ".", "pmf", "(", "int_poisson_mu", ",", "poisson_mu", ")", "\n", "prob_mass", "+=", "pmf", "\n", "beta", "+=", "pmf", "*", "binom_tst_beta", "(", "p_null", ",", "p_alt", ",", "int_poisson_mu", ",", "alpha", ")", "\n", "if", "np", ".", "isnan", "(", "beta", ")", ":", "\n", "                ", "break", "\n", "", "int_poisson_mu", "-=", "1", "\n", "", "int_poisson_mu", "=", "int", "(", "poisson_mu", ")", "+", "1", ";", "pmf", "=", "1.0", "\n", "while", "pmf", ">", "tol", ":", "\n", "            ", "pmf", "=", "poisson", ".", "pmf", "(", "int_poisson_mu", ",", "poisson_mu", ")", "\n", "prob_mass", "+=", "pmf", "\n", "beta", "+=", "pmf", "*", "binom_tst_beta", "(", "p_null", ",", "p_alt", ",", "int_poisson_mu", ",", "alpha", ")", "\n", "int_poisson_mu", "+=", "1", "\n", "", "return", "beta", ",", "prob_mass", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form2": [[55, 84], ["int", "int", "range", "int", "range", "scipy.stats.binom.isf", "scipy.stats.binom.isf", "scipy.stats.poisson.pmf", "scipy.stats.poisson.pmf", "scipy.stats.poisson.pmf", "scipy.stats.poisson.pmf"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "beta_on_poisson_closed_form2", "(", "t1", "=", "25", ",", "t2", "=", "25", ",", "lmb_base", "=", "12", ",", "effect", "=", "3", ",", "alpha", "=", "0.05", ")", ":", "\n", "        ", "beta", "=", "0", ";", "n", "=", "0", "\n", "beta_n", "=", "0", ";", "beta_del", "=", "0", "\n", "p", "=", "lmb_base", "*", "t1", "/", "(", "lmb_base", "*", "t1", "+", "(", "lmb_base", "+", "effect", ")", "*", "t2", ")", "\n", "q", "=", "t1", "/", "(", "t1", "+", "t2", ")", "\n", "mu_1", "=", "t1", "*", "(", "lmb_base", "+", "effect", ")", ";", "mu_2", "=", "t2", "*", "lmb_base", "\n", "poisson_mu", "=", "lmb_base", "*", "t1", "+", "(", "lmb_base", "+", "effect", ")", "*", "t2", "\n", "int_poisson_mu", "=", "int", "(", "poisson_mu", ")", "\n", "n", "=", "int_poisson_mu", "-", "1", "\n", "while", "beta_del", ">", "1e-9", "or", "n", "==", "int_poisson_mu", "-", "1", ":", "\n", "            ", "n", "+=", "1", "\n", "surv_inv", "=", "int", "(", "binom", ".", "isf", "(", "alpha", ",", "n", ",", "q", ")", ")", "\n", "beta_del", "=", "0", "\n", "for", "j", "in", "range", "(", "surv_inv", "+", "1", ")", ":", "\n", "                ", "beta_n", "=", "poisson", ".", "pmf", "(", "j", ",", "(", "lmb_base", "+", "effect", ")", "*", "t2", ")", "*", "poisson", ".", "pmf", "(", "n", "-", "j", ",", "lmb_base", "*", "t1", ")", "\n", "beta_del", "+=", "beta_n", "\n", "beta", "+=", "beta_n", "\n", "", "", "n", "=", "int_poisson_mu", "\n", "while", "beta_del", ">", "1e-9", "or", "n", "==", "int_poisson_mu", ":", "\n", "            ", "n", "-=", "1", "\n", "surv_inv", "=", "int", "(", "binom", ".", "isf", "(", "alpha", ",", "n", ",", "q", ")", ")", "\n", "beta_del", "=", "0", "\n", "for", "j", "in", "range", "(", "surv_inv", "+", "1", ")", ":", "\n", "                ", "beta_n", "=", "poisson", ".", "pmf", "(", "j", ",", "(", "lmb_base", "+", "effect", ")", "*", "t2", ")", "*", "poisson", ".", "pmf", "(", "n", "-", "j", ",", "lmb_base", "*", "t1", ")", "\n", "beta_del", "+=", "beta_n", "\n", "beta", "+=", "beta_n", "\n", "", "", "return", "beta", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form3": [[85, 106], ["int", "scipy.stats.poisson.pmf", "int", "scipy.stats.poisson.pmf", "scipy.stats.poisson.sf", "scipy.stats.poisson.sf"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "beta_on_poisson_closed_form3", "(", "t1", "=", "25", ",", "t2", "=", "25", ",", "lmb_base", "=", "12", ",", "effect", "=", "3", ")", ":", "\n", "## This method is only for alpha=0.5", "\n", "        ", "poisson_mu", "=", "(", "lmb_base", "+", "effect", ")", "*", "t2", "\n", "poisson_mu_base", "=", "lmb_base", "*", "t1", "\n", "prob_mass", "=", "0.0", "\n", "int_poisson_mu", "=", "int", "(", "poisson_mu", ")", ";", "pmf", "=", "1.0", "\n", "beta", "=", "0", "\n", "while", "pmf", ">", "1e-7", "and", "int_poisson_mu", ">=", "0", ":", "\n", "            ", "pmf", "=", "poisson", ".", "pmf", "(", "int_poisson_mu", ",", "poisson_mu", ")", "\n", "prob_mass", "+=", "pmf", "\n", "beta", "+=", "pmf", "*", "poisson", ".", "sf", "(", "int_poisson_mu", "-", "1", ",", "poisson_mu_base", ")", "\n", "int_poisson_mu", "-=", "1", "\n", "", "int_poisson_mu", "=", "int", "(", "poisson_mu", ")", "+", "1", ";", "pmf", "=", "1.0", "\n", "while", "pmf", ">", "1e-7", ":", "\n", "            ", "pmf", "=", "poisson", ".", "pmf", "(", "int_poisson_mu", ",", "poisson_mu", ")", "\n", "prob_mass", "+=", "pmf", "\n", "beta", "+=", "pmf", "*", "poisson", ".", "sf", "(", "int_poisson_mu", "-", "1", ",", "poisson_mu_base", ")", "\n", "int_poisson_mu", "+=", "1", "\n", "", "return", "beta", ",", "prob_mass", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_negbinom_closed_form": [[107, 112], ["rate_test.UMPPoisson.beta_on_negbinom_closed_form2"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_negbinom_closed_form2"], ["", "@", "staticmethod", "\n", "def", "beta_on_negbinom_closed_form", "(", "t1", "=", "25", ",", "t2", "=", "25", ",", "theta_base", "=", "10", ",", "m", "=", "100.0", ",", "deltheta", "=", "3", ",", "alpha", "=", "0.05", ",", "cut_dat", "=", "1e4", ")", ":", "\n", "        ", "del_lmb", "=", "m", "*", "deltheta", "/", "theta_base", "/", "(", "theta_base", "-", "deltheta", ")", "\n", "return", "UMPPoisson", ".", "beta_on_negbinom_closed_form2", "(", "t1", ",", "t2", ",", "theta_base", ",", "m", ",", "del_lmb", ",", "alpha", ",", "cut_dat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_negbinom_closed_form2": [[113, 184], ["int", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.concatenate", "numpy.concatenate", "int", "range", "numpy.array.append", "numpy.array.append", "int", "range", "numpy.array.append", "numpy.array.append", "scipy.stats.binom.isf", "scipy.stats.binom.isf", "scipy.stats.nbinom.pmf", "scipy.stats.nbinom.pmf", "scipy.stats.nbinom.pmf", "scipy.stats.nbinom.pmf"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "beta_on_negbinom_closed_form2", "(", "t1", "=", "25", ",", "t2", "=", "25", ",", "theta_base", "=", "10", ",", "m", "=", "100.0", ",", "effect", "=", "3", ",", "alpha", "=", "0.05", ",", "cut_dat", "=", "1e4", ")", ":", "\n", "        ", "beta", "=", "0", ";", "n", "=", "0", "\n", "beta_n", "=", "0", ";", "beta_del", "=", "0", "\n", "q", "=", "t1", "/", "(", "t1", "+", "t2", ")", "\n", "lmb_base", "=", "m", "/", "theta_base", "\n", "mu_1", "=", "t1", "*", "(", "lmb_base", "+", "effect", ")", ";", "mu_2", "=", "t2", "*", "lmb_base", "\n", "p1", "=", "theta_base", "/", "(", "theta_base", "+", "t1", ")", "\n", "del_theta", "=", "theta_base", "**", "2", "*", "effect", "/", "(", "m", "+", "theta_base", "*", "effect", ")", "\n", "theta2", "=", "theta_base", "-", "del_theta", "\n", "p2", "=", "theta2", "/", "(", "t2", "+", "theta2", ")", "\n", "poisson_mu", "=", "lmb_base", "*", "t1", "+", "(", "lmb_base", "+", "effect", ")", "*", "t2", "\n", "int_poisson_mu", "=", "int", "(", "poisson_mu", ")", "\n", "n", "=", "int_poisson_mu", "-", "1", "\n", "dels1", "=", "[", "]", ";", "ns1", "=", "[", "]", "\n", "if", "effect", "==", "0", ":", "\n", "            ", "nbinom_s1", "=", "{", "}", ";", "nbinom_s2", "=", "nbinom_s1", "\n", "", "else", ":", "\n", "            ", "nbinom_s1", "=", "{", "}", ";", "nbinom_s2", "=", "{", "}", "\n", "", "while", "(", "beta_del", ">", "1e-9", "or", "n", "==", "int_poisson_mu", "-", "1", ")", ":", "\n", "            ", "n", "+=", "1", "\n", "if", "n", "-", "int_poisson_mu", ">", "cut_dat", ":", "\n", "                ", "break", "\n", "", "surv_inv", "=", "int", "(", "binom", ".", "isf", "(", "alpha", ",", "n", ",", "q", ")", ")", "\n", "beta_del", "=", "0", "\n", "for", "j", "in", "range", "(", "surv_inv", "+", "1", ")", ":", "\n", "#for j in range(n+1):", "\n", "                ", "if", "j", "in", "nbinom_s1", ":", "\n", "                    ", "nb1", "=", "nbinom_s1", "[", "j", "]", "\n", "", "else", ":", "\n", "                    ", "nb1", "=", "nbinom", ".", "pmf", "(", "j", ",", "m", ",", "p2", ")", "\n", "nbinom_s1", "[", "j", "]", "=", "nb1", "\n", "", "if", "n", "-", "j", "in", "nbinom_s2", ":", "\n", "                    ", "nb2", "=", "nbinom_s2", "[", "n", "-", "j", "]", "\n", "", "else", ":", "\n", "                    ", "nb2", "=", "nbinom", ".", "pmf", "(", "n", "-", "j", ",", "m", ",", "p1", ")", "\n", "nbinom_s2", "[", "n", "-", "j", "]", "=", "nb2", "\n", "", "beta_n", "=", "nb1", "*", "nb2", "\n", "beta_del", "+=", "beta_n", "\n", "beta", "+=", "beta_n", "\n", "", "dels1", ".", "append", "(", "beta_del", ")", ";", "ns1", ".", "append", "(", "n", ")", "\n", "", "n", "=", "int_poisson_mu", "\n", "dels2", "=", "[", "]", ";", "ns2", "=", "[", "]", "\n", "while", "beta_del", ">", "1e-9", "or", "n", "==", "int_poisson_mu", ":", "\n", "            ", "n", "-=", "1", "\n", "if", "int_poisson_mu", "-", "n", ">", "cut_dat", ":", "\n", "                ", "break", "\n", "", "surv_inv", "=", "int", "(", "binom", ".", "isf", "(", "alpha", ",", "n", ",", "q", ")", ")", "\n", "beta_del", "=", "0", "\n", "for", "j", "in", "range", "(", "surv_inv", "+", "1", ")", ":", "\n", "#for j in range(n+1):", "\n", "                ", "if", "j", "in", "nbinom_s1", ":", "\n", "                    ", "nb1", "=", "nbinom_s1", "[", "j", "]", "\n", "", "else", ":", "\n", "                    ", "nb1", "=", "nbinom", ".", "pmf", "(", "j", ",", "m", ",", "p2", ")", "\n", "nbinom_s1", "[", "j", "]", "=", "nb1", "\n", "", "if", "n", "-", "j", "in", "nbinom_s2", ":", "\n", "                    ", "nb2", "=", "nbinom_s2", "[", "n", "-", "j", "]", "\n", "", "else", ":", "\n", "                    ", "nb2", "=", "nbinom", ".", "pmf", "(", "n", "-", "j", ",", "m", ",", "p1", ")", "\n", "nbinom_s2", "[", "n", "-", "j", "]", "=", "nb2", "\n", "", "beta_n", "=", "nb1", "*", "nb2", "\n", "beta_del", "+=", "beta_n", "\n", "beta", "+=", "beta_n", "\n", "", "dels2", ".", "append", "(", "beta_del", ")", ";", "ns2", ".", "append", "(", "n", ")", "\n", "", "dels1", "=", "np", ".", "array", "(", "dels1", ")", ";", "dels2", "=", "np", ".", "array", "(", "dels2", ")", ";", "dels2", "=", "dels2", "[", ":", ":", "-", "1", "]", "\n", "ns1", "=", "np", ".", "array", "(", "ns1", ")", ";", "ns2", "=", "np", ".", "array", "(", "ns2", ")", ";", "ns2", "=", "ns2", "[", ":", ":", "-", "1", "]", "\n", "ns", "=", "np", ".", "concatenate", "(", "(", "ns2", ",", "ns1", ")", ",", "axis", "=", "0", ")", "\n", "dels", "=", "np", ".", "concatenate", "(", "(", "dels2", ",", "dels1", ")", ",", "axis", "=", "0", ")", "\n", "return", "beta", ",", "dels", ",", "ns", ",", "int_poisson_mu", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_negbinom_closed_form3": [[185, 206], ["int", "print", "scipy.stats.nbinom.pmf", "scipy.stats.nbinom.sf"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "beta_on_negbinom_closed_form3", "(", "t1", "=", "25", ",", "t2", "=", "25", ",", "theta_base", "=", "10", ",", "m", "=", "100.0", ",", "deltheta", "=", "3", ")", ":", "\n", "        ", "\"\"\"\n        This method only works for alpha=0.5.\n        \"\"\"", "\n", "if", "deltheta", ">", "theta_base", ":", "\n", "#TODO: Replace this with exception.", "\n", "            ", "print", "(", "\"deltheta must be smaller than theta.\"", ")", "\n", "return", "\n", "", "theta_alt", "=", "theta_base", "-", "deltheta", "\n", "neg_binom_ix", "=", "0", "\n", "p2", "=", "theta_alt", "/", "(", "t2", "+", "theta_alt", ")", "\n", "p1", "=", "theta_base", "/", "(", "t1", "+", "theta_base", ")", "\n", "mode1", "=", "int", "(", "p1", "*", "(", "m", "-", "1", ")", "/", "(", "1", "-", "p1", ")", ")", "\n", "beta", "=", "0", ";", "del_beta", "=", "1", "\n", "while", "del_beta", ">", "1e-7", "or", "neg_binom_ix", "<", "mode1", "or", "neg_binom_ix", "<", "1000", ":", "\n", "            ", "del_beta", "=", "nbinom", ".", "pmf", "(", "neg_binom_ix", ",", "m", ",", "p2", ")", "*", "nbinom", ".", "sf", "(", "neg_binom_ix", "-", "1", ",", "m", ",", "p1", ")", "\n", "beta", "+=", "del_beta", "\n", "neg_binom_ix", "+=", "1", "\n", "", "return", "beta", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.alpha_on_determinist_compound_closed_form": [[207, 242], ["numpy.arange", "numpy.zeros", "int", "numpy.ones", "len", "len", "sum", "scipy.stats.binom.isf", "scipy.stats.binom.sf", "scipy.stats.poisson.pmf", "print", "int", "scipy.stats.binom.isf", "scipy.stats.binom.sf", "scipy.stats.poisson.pmf", "numpy.isnan", "len", "print", "sum", "print", "str", "int", "sum", "str", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "alpha_on_determinist_compound_closed_form", "(", "lmb", "=", "10.0", ",", "t1", "=", "10", ",", "t2", "=", "10", ",", "l", "=", "3", ",", "verbose", "=", "False", ")", ":", "\n", "        ", "alpha_hats", "=", "np", ".", "arange", "(", "0.00001", ",", "1.0", ",", "0.01", ")", "\n", "#alpha_hats = np.array([0.05])", "\n", "p", "=", "t2", "/", "(", "t1", "+", "t2", ")", "\n", "alphas", "=", "np", ".", "zeros", "(", "len", "(", "alpha_hats", ")", ")", "\n", "k", "=", "int", "(", "lmb", "*", "(", "t1", "+", "t2", ")", ")", "\n", "alpha_dels", "=", "np", ".", "ones", "(", "len", "(", "alpha_hats", ")", ")", "\n", "total_pois_mass", "=", "0.0", "\n", "#TODO: Replace this with other condition.", "\n", "while", "sum", "(", "alpha_dels", ")", ">", "1e-7", "*", "len", "(", "alpha_dels", ")", ":", "\n", "            ", "isfs", "=", "binom", ".", "isf", "(", "alpha_hats", ",", "k", "*", "l", ",", "p", ")", "\n", "cdfs", "=", "binom", ".", "sf", "(", "(", "isfs", "/", "l", ")", ".", "astype", "(", "int", ")", ",", "k", ",", "p", ")", "\n", "pmf", "=", "poisson", ".", "pmf", "(", "k", ",", "lmb", "*", "(", "t1", "+", "t2", ")", ")", "\n", "total_pois_mass", "+=", "pmf", "\n", "alpha_dels", "=", "pmf", "*", "cdfs", "\n", "alphas", "+=", "alpha_dels", "\n", "if", "verbose", "and", "(", "k", "-", "int", "(", "lmb", "*", "(", "t1", "+", "t2", ")", ")", ")", "%", "100", "==", "0", ":", "\n", "                ", "print", "(", "\"k=\"", "+", "str", "(", "k", "-", "int", "(", "lmb", "*", "(", "t1", "+", "t2", ")", ")", ")", "+", "\" alpha_dels sum: \"", "+", "str", "(", "sum", "(", "alpha_dels", ")", ")", ")", "\n", "", "k", "+=", "1", "\n", "", "if", "verbose", ":", "\n", "            ", "print", "(", "\"Completed first loop\"", ")", "\n", "", "k", "=", "int", "(", "lmb", "*", "(", "t1", "+", "t2", ")", ")", "-", "1", "\n", "while", "k", ">=", "0", ":", "\n", "            ", "isfs", "=", "binom", ".", "isf", "(", "alpha_hats", ",", "k", "*", "l", ",", "p", ")", "\n", "cdfs", "=", "binom", ".", "sf", "(", "(", "isfs", "/", "l", ")", ".", "astype", "(", "int", ")", ",", "k", ",", "p", ")", "\n", "pmf", "=", "poisson", ".", "pmf", "(", "k", ",", "lmb", "*", "(", "t1", "+", "t2", ")", ")", "\n", "total_pois_mass", "+=", "pmf", "\n", "alpha_dels", "=", "pmf", "*", "cdfs", "\n", "if", "np", ".", "isnan", "(", "sum", "(", "alpha_dels", ")", ")", ":", "\n", "                ", "print", "(", "k", ")", "\n", "", "alphas", "+=", "alpha_dels", "\n", "k", "-=", "1", "\n", "", "return", "alphas", ",", "alpha_hats", ",", "total_pois_mass", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.poisson_one_sim": [[243, 258], ["scipy.stats.poisson.rvs", "scipy.stats.poisson.rvs", "scipy.stats.binom_test"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "@", "staticmethod", "\n", "def", "poisson_one_sim", "(", "lmb1", ",", "t1", ",", "lmb2", ",", "t2", ",", "alternative", "=", "'greater'", ")", ":", "\n", "        ", "\"\"\"\n        Simulates data from two Poisson distributions\n        and finds the p-value for a one-sided test.\n        args:\n            lmb1: The failure rate for first population.\n            t1: The time observed for first population.\n            lmb2: The failure rate for second population.\n            t2: The time observed for second population\n        \"\"\"", "\n", "n1", "=", "poisson", ".", "rvs", "(", "lmb1", "*", "t1", ")", "\n", "n2", "=", "poisson", ".", "rvs", "(", "lmb2", "*", "t2", ")", "\n", "p_val", "=", "binom_test", "(", "n2", ",", "n1", "+", "n2", ",", "t2", "/", "(", "t1", "+", "t2", ")", ",", "alternative", "=", "alternative", ")", "\n", "return", "p_val", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.p_n1": [[260, 263], ["scipy.special.comb"], "function", ["None"], ["", "", "def", "p_n1", "(", "t1", ",", "t2", ",", "n1", ",", "n2", ")", ":", "\n", "    ", "n", "=", "n1", "+", "n2", ";", "t", "=", "t1", "+", "t2", "\n", "return", "t1", "**", "n1", "*", "t2", "**", "n2", "/", "(", "t", "**", "n", "*", "comb", "(", "n", ",", "n1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.rateratio_test": [[265, 269], ["scipy.stats.binom_test"], "function", ["None"], ["", "def", "rateratio_test", "(", "n1", ",", "t1", ",", "n2", ",", "t2", ",", "scale", "=", "1.0", ")", ":", "\n", "    ", "n2", ",", "n1", "=", "n2", "/", "scale", ",", "n1", "/", "scale", "\n", "p_val", "=", "binom_test", "(", "n2", ",", "n1", "+", "n2", ",", "t2", "/", "(", "t1", "+", "t2", ")", ",", "alternative", "=", "'greater'", ")", "\n", "return", "p_val", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.rateratio_test_two_sided": [[270, 274], ["scipy.stats.binom_test"], "function", ["None"], ["", "def", "rateratio_test_two_sided", "(", "n1", ",", "t1", ",", "n2", ",", "t2", ",", "scale", "=", "1.0", ")", ":", "\n", "    ", "n2", ",", "n1", "=", "n2", "/", "scale", ",", "n1", "/", "scale", "\n", "p_val", "=", "binom_test", "(", "n2", ",", "n1", "+", "n2", ",", "t2", "/", "(", "t1", "+", "t2", ")", ",", "alternative", "=", "'two-sided'", ")", "\n", "return", "p_val", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.est_rejection_rate": [[276, 300], ["numpy.arange", "numpy.zeros", "range", "len", "fn"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.experiments.count_distributions.fn"], ["", "def", "est_rejection_rate", "(", "lmb1", "=", "12.0", ",", "lmb2", "=", "12.0", ",", "\n", "t1", "=", "2.5", ",", "t2", "=", "2.5", ",", "n", "=", "10000", ",", "\n", "thresh", "=", "np", ".", "arange", "(", "0.001", ",", "1.0", ",", "0.01", ")", ",", "\n", "fn", "=", "UMPPoisson", ".", "poisson_one_sim", ")", ":", "\n", "    ", "\"\"\"\n    Given various values of alpha, gets the percentage of time\n    the second sample is deemed to have a greater AIR than the\n    first sample.\n    args:\n        lmb1: The failure rate of the first population.\n        lmb2: The failure rate of the second population.\n        t1: The time data is collected for first population.\n        t2: The time data is collected for the second population.\n        n: The number of simulations.\n        thresh: The alpha levels.\n        fn: The test to generate simulated p_value.\n            for example: simulate_binned_t_test, simulate_rateratio_test.\n    \"\"\"", "\n", "reject_rate", "=", "np", ".", "zeros", "(", "len", "(", "thresh", ")", ")", "\n", "for", "_", "in", "range", "(", "n", ")", ":", "\n", "#n1 is control, n2 is treatment.", "\n", "        ", "p_val", "=", "fn", "(", "lmb1", ",", "t1", ",", "lmb2", ",", "t2", ")", "\n", "reject_rate", "+=", "(", "p_val", "<", "thresh", ")", "\n", "", "return", "reject_rate", "/", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.bake_time": [[302, 314], ["rate_test.UMPPoisson.beta_on_poisson", "betas.append", "numpy.array"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson"], ["", "def", "bake_time", "(", "t1", "=", "25", ",", "\n", "lmb_base", "=", "12", ",", "alpha", "=", "0.05", ",", "\n", "beta", "=", "0.05", ",", "effect", "=", "3", ",", "n", "=", "1000", ")", ":", "\n", "    ", "t2", "=", "1.0", ";", "beta_tmp", "=", "1.0", "\n", "betas", "=", "[", "]", "\n", "while", "beta_tmp", ">", "beta", ":", "\n", "        ", "beta_tmp", "=", "UMPPoisson", ".", "beta_on_poisson", "(", "t1", "=", "t1", ",", "t2", "=", "t2", ",", "lmb_base", "=", "lmb_base", ",", "\n", "alpha", "=", "alpha", ",", "effect", "=", "effect", ",", "n", "=", "n", ")", "\n", "betas", ".", "append", "(", "beta_tmp", ")", "\n", "t2", "+=", "1", "\n", "", "return", "t2", ",", "np", ".", "array", "(", "betas", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.bake_time_v2": [[316, 328], ["betas.append", "numpy.array", "rate_test.UMPPoisson.beta_on_poisson_closed_form"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form"], ["", "def", "bake_time_v2", "(", "t1", "=", "25", ",", "\n", "lmb_base", "=", "12", ",", "alpha", "=", "0.05", ",", "\n", "beta", "=", "0.05", ",", "effect", "=", "3", ")", ":", "\n", "    ", "t2", "=", "1.0", ";", "beta_tmp", "=", "1.0", "\n", "betas", "=", "[", "]", "\n", "while", "beta_tmp", ">", "beta", ":", "\n", "        ", "beta_tmp", "=", "UMPPoisson", ".", "beta_on_poisson_closed_form", "(", "t1", "=", "t1", ",", "t2", "=", "t2", ",", "lmb_base", "=", "lmb_base", ",", "\n", "alpha", "=", "alpha", ",", "effect", "=", "effect", ")", "[", "0", "]", "\n", "betas", ".", "append", "(", "beta_tmp", ")", "\n", "t2", "+=", "1", "\n", "", "return", "t2", ",", "np", ".", "array", "(", "betas", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.bake_time_v3": [[330, 341], ["scipy.optimize.bisect", "fn", "fn", "rate_test.UMPPoisson.beta_on_poisson_closed_form"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.experiments.count_distributions.fn", "home.repos.pwc.inspect_result.ryu577_stochproc.experiments.count_distributions.fn", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form"], ["", "def", "bake_time_v3", "(", "t1", "=", "25", ",", "\n", "lmb_base", "=", "12", ",", "alpha", "=", "0.05", ",", "\n", "beta", "=", "0.05", ",", "effect", "=", "3", ")", ":", "\n", "    ", "fn", "=", "lambda", "t2", ":", "UMPPoisson", ".", "beta_on_poisson_closed_form", "(", "t1", "=", "t1", ",", "t2", "=", "t2", ",", "lmb_base", "=", "lmb_base", ",", "\n", "alpha", "=", "alpha", ",", "effect", "=", "effect", ")", "[", "0", "]", "-", "beta", "\n", "if", "fn", "(", "100", ")", "*", "fn", "(", ".01", ")", ">", "0", ":", "\n", "        ", "return", "100", "\n", "", "root", "=", "optimize", ".", "bisect", "(", "fn", ",", ".01", ",", "200", ")", "\n", "#root = optimize.root(fn,x0=5).x[0]", "\n", "return", "root", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.experiments": [[343, 367], ["rate_test.UMPPoisson.beta_on_poisson_closed_form", "rate_test.UMPPoisson.beta_on_poisson_closed_form", "rate_test.UMPPoisson.beta_on_poisson_closed_form2", "rate_test.UMPPoisson.beta_on_negbinom_closed_form2", "matplotlib.plot", "matplotlib.axvline", "matplotlib.show"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form2", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_negbinom_closed_form2"], ["", "def", "experiments", "(", ")", ":", "\n", "##t1 and t2 are in 100-VM-days", "\n", "### lmb_base: 1 failure per 100-VM-days.", "\n", "## 10 nodes per hw and 10 VMs per node. So, 100 VMs per day.", "\n", "    ", "UMPPoisson", ".", "beta_on_poisson_closed_form", "(", "t1", "=", "1.0", ",", "t2", "=", "1.0", ",", "lmb_base", "=", "20", ",", "alpha", "=", "0.1", ",", "effect", "=", "20", ")", "\n", "\n", "## We need 20 events per 100-VM-days.", "\n", "n", "=", "660", "\n", "UMPPoisson", ".", "beta_on_poisson_closed_form", "(", "t1", "=", "n", "/", "10", ",", "t2", "=", "n", "/", "10", ",", "lmb_base", "=", "20", ",", "alpha", "=", "0.1", ",", "effect", "=", "20", "*", ".1", ")", "\n", "\n", "UMPPoisson", ".", "beta_on_poisson_closed_form2", "(", "t1", "=", "1.0", ",", "t2", "=", "1.0", ",", "lmb_base", "=", "20", ",", "alpha", "=", "0.1", ",", "effect", "=", "20", ")", "\n", "\n", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "\n", "res", "=", "UMPPoisson", ".", "beta_on_negbinom_closed_form2", "(", "t1", "=", "200", ",", "t2", "=", "200", ",", "cut_dat", "=", "1000", ")", "\n", "plt", ".", "plot", "(", "res", "[", "2", "]", ",", "res", "[", "1", "]", ")", "\n", "plt", ".", "axvline", "(", "res", "[", "3", "]", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.binom_partial_sum": [[371, 376], ["range", "int", "scipy.special.comb"], "function", ["None"], ["def", "binom_partial_sum", "(", "n", ",", "p", "=", ".5", ")", ":", "\n", "    ", "b_sum", "=", "0", "\n", "for", "j", "in", "range", "(", "int", "(", "n", "/", "1.5", ")", "+", "1", ")", ":", "\n", "        ", "b_sum", "+=", "comb", "(", "n", ",", "j", ")", "*", "(", "1", "+", "p", ")", "**", "j", "\n", "", "return", "b_sum", "/", "(", "2", "+", "p", ")", "**", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.neg_binom_tst.CompareTests.__init__": [[11, 18], ["numpy.concatenate", "numpy.arange", "numpy.arange", "numpy.arange"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "r0", "=", "1.4", ",", "mu", "=", "0.7", ",", "rr", "=", "1.15", ",", "k", "=", "0.4", ")", ":", "\n", "        ", "self", ".", "t", "=", "mu", "/", "r0", "\n", "self", ".", "r1", "=", "r0", "*", "rr", "\n", "self", ".", "r0", "=", "r0", ";", "self", ".", "mu", "=", "mu", ";", "self", ".", "rr", "=", "1.15", ";", "self", ".", "k", "=", "k", "\n", "self", ".", "alpha_hats", "=", "np", ".", "concatenate", "(", "(", "np", ".", "arange", "(", "0.000000000001", ",", "0.0099", ",", "0.0000001", ")", ",", "\n", "np", ".", "arange", "(", "0.01", ",", "1.00", ",", "0.001", ")", ",", "\n", "np", ".", "arange", "(", "0.991", ",", "1.00", ",", "0.001", ")", ")", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.neg_binom_tst.CompareTests.plot_tests": [[19, 72], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "stochproc.count_distributions.negative_binomial.NegativeBinomial", "stochproc.count_distributions.negative_binomial.NegativeBinomial", "range", "matplotlib.plot", "matplotlib.plot", "pyray.plotting.matplot_utils.newline", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.show", "numpy.argmin", "numpy.argmin", "len", "len", "len", "len", "range", "range", "range", "neg_binom_tst.wald_tst", "neg_binom_tst.rate_tst", "neg_binom_tst.wald_tst", "neg_binom_tst.rate_tst", "stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.neg_binom_tst.wald_tst", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.neg_binom_tst.rate_tst", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.neg_binom_tst.wald_tst", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.neg_binom_tst.rate_tst", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "plot_tests", "(", "self", ",", "n_sim", "=", "1000", ",", "n0", "=", "1035", ",", "n1", "=", "1035", ")", ":", "\n", "        ", "c", "=", "self", "\n", "self", ".", "alphas_wald", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "alpha_hats", ")", ")", "\n", "self", ".", "alphas_rate", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "alpha_hats", ")", ")", "\n", "self", ".", "betas_wald", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "alpha_hats", ")", ")", "\n", "self", ".", "betas_rate", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "alpha_hats", ")", ")", "\n", "nb_null", "=", "NegativeBinomial", "(", "mu", "=", "c", ".", "mu", ",", "k", "=", "c", ".", "k", ",", "t", "=", "c", ".", "t", ")", "\n", "nb_alt", "=", "NegativeBinomial", "(", "mu", "=", "c", ".", "mu", "*", "c", ".", "rr", ",", "k", "=", "c", ".", "k", ",", "t", "=", "c", ".", "t", ")", "\n", "recall", "=", "0", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "            ", "x_s", "=", "0", "\n", "for", "i", "in", "range", "(", "n0", ")", ":", "\n", "                ", "x_i", "=", "nb_null", ".", "rvs", "(", ")", "\n", "#x_i = poisson.rvs(c.mu)", "\n", "x_s", "+=", "x_i", "\n", "", "x_s_1", "=", "0", "\n", "for", "i", "in", "range", "(", "n1", ")", ":", "\n", "                ", "x_i", "=", "nb_null", ".", "rvs", "(", ")", "\n", "#x_i = poisson.rvs(c.mu)", "\n", "x_s_1", "+=", "x_i", "\n", "", "y_s", "=", "0", "\n", "for", "j", "in", "range", "(", "n1", ")", ":", "\n", "                ", "y_j", "=", "nb_alt", ".", "rvs", "(", ")", "\n", "#y_j = poisson.rvs(c.mu*c.rr)", "\n", "y_s", "+=", "y_j", "\n", "", "mu_est", "=", "x_s", "/", "n0", "\n", "p_val_wald_null", "=", "wald_tst", "(", "x_s", ",", "x_s_1", ",", "mu_est", ",", "n0", ",", "n1", ")", "\n", "p_val_rate_null", "=", "rate_tst", "(", "x_s", ",", "x_s_1", ",", "n0", ",", "n1", ")", "\n", "c", ".", "alphas_wald", "+=", "(", "p_val_wald_null", "<", "c", ".", "alpha_hats", ")", "/", "n_sim", "\n", "c", ".", "alphas_rate", "+=", "(", "p_val_rate_null", "<", "c", ".", "alpha_hats", ")", "/", "n_sim", "\n", "p_val_wald_alt", "=", "wald_tst", "(", "x_s", ",", "y_s", ",", "mu_est", ",", "n0", ",", "n1", ")", "\n", "p_val_rate_alt", "=", "rate_tst", "(", "x_s", ",", "y_s", ",", "n0", ",", "n1", ")", "\n", "c", ".", "betas_wald", "+=", "1", "/", "n_sim", "-", "(", "p_val_wald_alt", "<", "c", ".", "alpha_hats", ")", "/", "n_sim", "\n", "c", ".", "betas_rate", "+=", "1", "/", "n_sim", "-", "(", "p_val_rate_alt", "<", "c", ".", "alpha_hats", ")", "/", "n_sim", "\n", "recall", "+=", "p_val_wald_alt", "<", "0.05", "\n", "## This error rate should match with the paper.", "\n", "#print(type_2_errs/1000)", "\n", "", "plt", ".", "plot", "(", "c", ".", "alphas_wald", ",", "c", ".", "betas_wald", ",", "label", "=", "'wald test'", ")", "\n", "plt", ".", "plot", "(", "c", ".", "alphas_rate", ",", "c", ".", "betas_rate", ",", "label", "=", "'rate test'", ")", "\n", "p1", "=", "[", "1", ",", "0", "]", "\n", "p2", "=", "[", "0", ",", "1", "]", "\n", "newline", "(", "p1", ",", "p2", ")", "\n", "plt", ".", "xlabel", "(", "'Alpha'", ")", "\n", "plt", ".", "ylabel", "(", "'Beta'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "wald_5prct_ix", "=", "np", ".", "argmin", "(", "(", "self", ".", "alphas_rate", "-", "0.05", ")", "**", "2", ")", "\n", "rate_5prct_ix", "=", "np", ".", "argmin", "(", "(", "self", ".", "alphas_wald", "-", "0.05", ")", "**", "2", ")", "\n", "self", ".", "beta_5prct_rate", "=", "self", ".", "betas_rate", "[", "wald_5prct_ix", "]", "\n", "self", ".", "beta_5prct_wald", "=", "self", ".", "betas_wald", "[", "wald_5prct_ix", "]", "\n", "self", ".", "alpha_5prct_rate", "=", "self", ".", "alphas_rate", "[", "rate_5prct_ix", "]", "\n", "self", ".", "alpha_5prct_wald", "=", "self", ".", "alphas_wald", "[", "wald_5prct_ix", "]", "\n", "return", "recall", "/", "1000", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.neg_binom_tst.wald_tst": [[74, 85], ["neg_binom_tst.CompareTests", "numpy.sqrt", "scipy.stats.norm.sf", "numpy.log", "numpy.log"], "function", ["None"], ["", "", "def", "wald_tst", "(", "x_s", ",", "y_s", ",", "mu", ",", "n0", ",", "n1", ")", ":", "\n", "    ", "c", "=", "CompareTests", "(", ")", "\n", "r0_est", "=", "x_s", "/", "c", ".", "t", "/", "n0", "\n", "r1_est", "=", "y_s", "/", "c", ".", "t", "/", "n1", "\n", "tht", "=", "n1", "/", "n0", "\n", "var_null", "=", "(", "(", "1", "+", "tht", ")", "**", "2", "/", "(", "mu", "*", "tht", ")", "/", "(", "r0_est", "+", "r1_est", "*", "tht", ")", "+", "(", "1", "+", "tht", ")", "*", "c", ".", "k", "/", "tht", ")", "/", "n0", "\n", "#var_null = (4/mu/(r0_est+r1_est))/n0", "\n", "st_dev_null", "=", "np", ".", "sqrt", "(", "var_null", ")", "\n", "z_stat", "=", "(", "np", ".", "log", "(", "r1_est", ")", "-", "np", ".", "log", "(", "r0_est", ")", ")", "/", "st_dev_null", "\n", "p_val", "=", "norm", ".", "sf", "(", "z_stat", ")", "\n", "return", "p_val", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.neg_binom_tst.rate_tst": [[87, 91], ["scipy.stats.binom_test"], "function", ["None"], ["", "def", "rate_tst", "(", "x_s", ",", "y_s", ",", "n0", "=", "10", ",", "n1", "=", "10", ")", ":", "\n", "    ", "p", "=", "n1", "/", "(", "n0", "+", "n1", ")", "\n", "p_val", "=", "binom_test", "(", "y_s", ",", "x_s", "+", "y_s", ",", "p", ",", "alternative", "=", "'greater'", ")", "\n", "return", "p_val", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.experiments.count_distributions.weibull_to_count": [[21, 27], ["distributions.weibull.Weibull.mean_s", "numpy.array", "numpy.mean", "print", "sum", "str", "range", "numpy.cumsum", "distributions.weibull.Weibull.samples_"], "function", ["None"], ["def", "weibull_to_count", "(", "k", "=", "0.4", ",", "lmb", "=", "1.0", ",", "durtn", "=", "20.0", ")", ":", "\n", "    ", "mean", "=", "Weibull", ".", "mean_s", "(", "k", ",", "lmb", ")", "\n", "aa1", "=", "np", ".", "array", "(", "[", "sum", "(", "np", ".", "cumsum", "(", "Weibull", ".", "samples_", "(", "k", ",", "lmb", ",", "size", "=", "100", ")", ")", "<", "durtn", ")", "for", "_", "in", "range", "(", "1000", ")", "]", ")", "\n", "expctd_mean", "=", "durtn", "/", "mean", "\n", "actual_mean", "=", "np", ".", "mean", "(", "aa1", ")", "\n", "print", "(", "\"Diff:\"", "+", "str", "(", "actual_mean", "-", "expctd_mean", ")", ")", "\n", "#var = np.var(aa1)", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.experiments.count_distributions.fn": [[55, 57], ["scipy.stats.binom.cdf", "scipy.stats.binom.isf"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.cdf"], ["def", "fn", "(", "alp", ",", "n", "=", "10", ")", ":", "\n", "    ", "return", "binom", ".", "cdf", "(", "binom", ".", "isf", "(", "alp", ",", "n", ",", ".5", ")", ",", "n", ",", ".5", "+", ".1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.experiments.count_distributions.mixed_conditional": [[76, 78], ["scipy.special.binom", "scipy.special.binom", "scipy.special.binom"], "function", ["None"], ["def", "mixed_conditional", "(", "j", ",", "n", "=", "100", ",", "m", "=", "5", ")", ":", "\n", "    ", "return", "(", "2", "*", "m", "-", "1", ")", "/", "(", "n", "+", "2", "*", "m", "-", "1", ")", "*", "bn", "(", "n", ",", "j", ")", "*", "bn", "(", "2", "*", "m", "-", "2", ",", "m", "-", "1", ")", "/", "bn", "(", "n", "+", "2", "*", "m", "-", "2", ",", "j", "+", "m", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.experiments.count_distributions.nbinom_sum": [[87, 92], ["range", "scipy.stats.nbinom.pmf", "scipy.stats.nbinom.pmf"], "function", ["None"], ["def", "nbinom_sum", "(", "n", ",", "m1", ",", "p1", ",", "m2", ",", "p2", ")", ":", "\n", "    ", "summ", "=", "0", "\n", "for", "i", "in", "range", "(", "n", "+", "1", ")", ":", "\n", "        ", "summ", "+=", "nbinom", ".", "pmf", "(", "i", ",", "m1", ",", "p1", ")", "*", "nbinom", ".", "pmf", "(", "n", "-", "i", ",", "m2", ",", "p2", ")", "\n", "", "return", "summ", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.experiments.count_distributions.conditional_prob": [[94, 96], ["count_distributions.nbinom_sum", "scipy.stats.nbinom.pmf", "scipy.stats.nbinom.pmf"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.experiments.count_distributions.nbinom_sum"], ["", "def", "conditional_prob", "(", "j", ",", "n", "=", "50", ",", "m1", "=", "10", ",", "p1", "=", ".5", ",", "m2", "=", "10", ",", "p2", "=", ".6", ")", ":", "\n", "    ", "return", "nbinom", ".", "pmf", "(", "j", ",", "m1", ",", "p1", ")", "*", "nbinom", ".", "pmf", "(", "n", "-", "j", ",", "m2", ",", "p2", ")", "/", "nbinom_sum", "(", "n", ",", "m1", ",", "p1", ",", "m2", ",", "p2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.experiments.binom_sum_experiments.binom_partial_sum": [[6, 11], ["range", "int", "scipy.special.comb", "numpy.ceil"], "function", ["None"], ["def", "binom_partial_sum", "(", "n", ",", "p", "=", ".5", ")", ":", "\n", "    ", "b_sum", "=", "0", "\n", "for", "j", "in", "range", "(", "int", "(", "np", ".", "ceil", "(", "n", "/", "2", ")", ")", "+", "1", ")", ":", "\n", "        ", "b_sum", "+=", "comb", "(", "n", ",", "j", ")", "*", "(", "1", "+", "p", ")", "**", "j", "\n", "", "return", "b_sum", "**", "(", "1", "/", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.experiments.binom_sum_experiments.binom_approx": [[12, 19], ["numpy.sqrt", "numpy.exp", "scipy.special.erf", "scipy.special.erf", "numpy.sqrt", "numpy.sqrt", "numpy.log", "numpy.log", "numpy.log"], "function", ["None"], ["", "def", "binom_approx", "(", "m", ",", "p", "=", ".5", ")", ":", "\n", "\t", "alpha", "=", "1", "+", "p", "\n", "n", "=", "m", "/", "2", "\n", "trm", "=", "np", ".", "exp", "(", "n", "*", "np", ".", "log", "(", "alpha", ")", "**", "2", "/", "4", ")", "/", "2", "*", "(", "erf", "(", "(", "n", "*", "np", ".", "log", "(", "alpha", ")", "+", "2", "*", "n", "+", "1", ")", "/", "2", "/", "np", ".", "sqrt", "(", "n", ")", ")", "-", "erf", "(", "(", "n", "*", "np", ".", "log", "(", "alpha", ")", "-", "1", ")", "/", "2", "/", "np", ".", "sqrt", "(", "n", ")", ")", ")", "\n", "return", "trm", "**", "(", "1", "/", "m", ")", "*", "2", "*", "np", ".", "sqrt", "(", "alpha", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.experiments.binom_sum_experiments.partial_sum_closed_form": [[27, 29], ["scipy.special.comb", "scipy.special.hyp2f1"], "function", ["None"], ["def", "partial_sum_closed_form", "(", "n", ",", "p", "=", "0.5", ")", ":", "\n", "    ", "return", "1", "-", "comb", "(", "n", ",", "n", "/", "2", "+", "1", ")", "*", "hyp2f1", "(", "1", ",", "1", "-", "n", "/", "2", ",", "n", "/", "2", "+", "2", ",", "-", "p", "-", "1", ")", "*", "(", "1", "+", "p", ")", "**", "(", "n", "/", "2", "+", "1", ")", "/", "(", "2", "+", "p", ")", "**", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.experiments.mxd_poisson_tracer.rvs_mxd_poisson": [[21, 24], ["scipy.stats.nbinom.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["def", "rvs_mxd_poisson", "(", "t", ",", "theta", "=", "5", ",", "m", "=", "100", ")", ":", "\n", "    ", "p", "=", "theta", "/", "(", "theta", "+", "t", ")", "\n", "return", "nbinom", ".", "rvs", "(", "m", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.experiments.mxd_poisson_tracer.rvs_comp_poisson": [[30, 35], ["stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs_s_1", "numpy.log", "scipy.stats.logser.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs_s_1", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["def", "rvs_comp_poisson", "(", "t", ",", "theta", "=", "5", ",", "m", "=", "100", ")", ":", "\n", "    ", "p", "=", "t", "/", "(", "theta", "+", "t", ")", "\n", "lamb", "=", "-", "m", "*", "np", ".", "log", "(", "1", "-", "p", ")", "\n", "log_rvs", "=", "lambda", ":", "logser", ".", "rvs", "(", "p", ")", "\n", "return", "CompoundPoisson", ".", "rvs_s_1", "(", "log_rvs", ",", "lamb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.experiments.tst_binom_properties.tst": [[6, 8], ["binom.isf", "binom.isf"], "function", ["None"], ["def", "tst", "(", "alp", ",", "l", ",", "k", ",", "p", ")", ":", "\n", "    ", "return", "binom", ".", "isf", "(", "alp", ",", "l", "*", "k", ",", "p", ")", ",", "l", "*", "binom", ".", "isf", "(", "alp", ",", "k", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.experiments.k_of_n_expr.plot_air_systems": [[5, 15], ["numpy.arange", "numpy.arange", "matplotlib.legend", "matplotlib.show", "matplotlib.plot", "rel_rates.append", "stochproc.birth_death_processes.reliability.k_of_n.k_of_n_rate", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_rate"], ["def", "plot_air_systems", "(", ")", ":", "\n", "    ", "lmb", "=", "3", "\n", "mus", "=", "np", ".", "arange", "(", "1", ",", "20", ",", "1", ")", "\n", "for", "n", "in", "np", ".", "arange", "(", "3", ",", "15", ",", "2", ")", ":", "\n", "        ", "rel_rates", "=", "[", "]", "\n", "for", "mu", "in", "mus", ":", "\n", "            ", "rel_rates", ".", "append", "(", "k_of_n_rate", "(", "n", "//", "2", "+", "1", ",", "n", ",", "lmb", ",", "mu", ")", "/", "lmb", ")", "\n", "", "plt", ".", "plot", "(", "mus", ",", "rel_rates", ",", "label", "=", "\"n=\"", "+", "str", "(", "n", ")", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.qq_plots.compound_poisson_distribns.CompBinom.qq_comp_binom_poiss_comp_determn_poiss": [[9, 18], ["numpy.arange", "numpy.zeros", "range", "len", "int", "scipy.stats.poisson.isf", "stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs_s"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs_s"], ["    ", "@", "staticmethod", "\n", "def", "qq_comp_binom_poiss_comp_determn_poiss", "(", "l", ",", "p", ",", "poisson_mu", "=", "4.0", ",", "n_sim", "=", "1000", ",", "alpha_hats", "=", "np", ".", "arange", "(", "0.0001", ",", "1.0", ",", "1e-3", ")", ")", ":", "\n", "        ", "alphas", "=", "np", ".", "zeros", "(", "len", "(", "alpha_hats", ")", ")", "\n", "isfs", "=", "int", "(", "l", "*", "p", ")", "*", "poisson", ".", "isf", "(", "alpha_hats", ",", "poisson_mu", ")", "\n", "for", "_", "in", "range", "(", "n_sim", ")", ":", "\n", "            ", "comp_binom_rv", "=", "CompoundPoisson", ".", "rvs_s", "(", "poisson_mu", ",", "l", ",", "p", ",", "compound", "=", "'binom'", ")", "\n", "alphas", "+=", "(", "comp_binom_rv", ">", "isfs", ")", "/", "n_sim", "\n", "", "return", "alphas", ",", "alpha_hats", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.qq_plots.compound_poisson_distribns.CompBinom.make_matplotlib_dark": [[20, 32], ["mpl.rcParams.update", "matplotlib.subplots", "ax.set_axis_bgcolor", "ax.set_facecolor", "matplotlib.subplots"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "make_matplotlib_dark", "(", ")", ":", "\n", "        ", "mpl", ".", "rcParams", ".", "update", "(", "{", "'text.color'", ":", "\"white\"", ",", "\n", "'axes.labelcolor'", ":", "\"white\"", ",", "\n", "'xtick.color'", ":", "\"white\"", ",", "\n", "'ytick.color'", ":", "\"white\"", ",", "\n", "\"axes.edgecolor\"", ":", "\"white\"", "}", ")", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "facecolor", "=", "'black'", ")", "\n", "ax", ".", "set_axis_bgcolor", "(", "\"black\"", ")", "\n", "ax", ".", "set_facecolor", "(", "\"black\"", ")", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.qq_plots.compound_poisson_distribns.CompBinom.make_qq_plot": [[33, 58], ["seaborn.color_palette", "color_list.as_hex.as_hex.as_hex", "range", "pyray.newline", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.show", "numpy.array", "len", "len", "compound_poisson_distribns.CompBinom.qq_comp_binom_poiss_comp_determn_poiss", "numpy.array", "matplotlib.plot", "matplotlib.plot", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.qq_plots.compound_poisson_distribns.CompBinom.qq_comp_binom_poiss_comp_determn_poiss"], ["", "@", "staticmethod", "\n", "def", "make_qq_plot", "(", "p", ",", "poisson_mu", ",", "black_plot", "=", "False", ",", "use_heatmap", "=", "True", ",", "l_vals", "=", "None", ")", ":", "\n", "        ", "if", "use_heatmap", "and", "l_vals", "is", "None", ":", "\n", "            ", "l_vals", "=", "np", ".", "array", "(", "[", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", "19", ",", "23", ",", "31", ",", "37", ",", "41", ",", "43", ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", "73", ",", "79", ",", "83", ",", "101", ",", "113", ",", "137", "]", ")", "\n", "", "elif", "l_vals", "is", "None", ":", "\n", "            ", "l_vals", "=", "np", ".", "array", "(", "[", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", "19", ",", "23", ",", "31", "]", ")", "\n", "# See: https://seaborn.pydata.org/tutorial/color_palettes.html", "\n", "", "color_list", "=", "sns", ".", "color_palette", "(", "\"RdBu_r\"", ",", "len", "(", "l_vals", ")", ")", "\n", "color_list", "=", "color_list", ".", "as_hex", "(", ")", "\n", "for", "l", "in", "range", "(", "len", "(", "l_vals", ")", ")", ":", "\n", "            ", "alphas", ",", "alpha_hats", "=", "CompBinom", ".", "qq_comp_binom_poiss_comp_determn_poiss", "(", "l_vals", "[", "l", "]", ",", "p", ",", "poisson_mu", ")", "\n", "if", "not", "use_heatmap", ":", "\n", "                ", "plt", ".", "plot", "(", "alpha_hats", ",", "alphas", ",", "label", "=", "'l= '", "+", "str", "(", "l_vals", "[", "l", "]", ")", ")", "#,color=color_list[l])", "\n", "", "else", ":", "\n", "                ", "plt", ".", "plot", "(", "alpha_hats", ",", "alphas", ",", "label", "=", "'l= '", "+", "str", "(", "l_vals", "[", "l", "]", ")", ",", "color", "=", "color_list", "[", "l", "]", ")", "\n", "", "", "p1", "=", "[", "0", ",", "0", "]", "\n", "p2", "=", "[", "1", ",", "1", "]", "\n", "matplot_utils", ".", "newline", "(", "p1", ",", "p2", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "#plt.title(\"QQ plot between compound binomial and deterministically \\", "\n", "#                compounded process\")", "\n", "plt", ".", "xlabel", "(", "\"Deterministically compounded Poisson quantile\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Binomially compounded Poisson quantile\"", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.qq_plots.compound_poisson_distribns.CompBinom.plot_l_deltas": [[59, 76], ["numpy.arange", "numpy.arange", "numpy.zeros", "range", "len", "len", "compound_poisson_distribns.CompBinom.qq_comp_binom_poiss_comp_determn_poiss", "sum", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.show", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.qq_plots.compound_poisson_distribns.CompBinom.qq_comp_binom_poiss_comp_determn_poiss"], ["", "@", "staticmethod", "\n", "def", "plot_l_deltas", "(", "p", "=", "0.5", ",", "poisson_mu", "=", "100.0", ",", "plot", "=", "True", ")", ":", "\n", "#l_vals = np.array([3,5,7,11,13,17,19,23,31,37,41,43,47,53,59,61,67,71,73,79,83,101,113,137])", "\n", "        ", "l_vals", "=", "np", ".", "arange", "(", "3", ",", "100", ",", "1", ")", "\n", "alpha_hats", "=", "np", ".", "arange", "(", "0.0001", ",", "1.0", ",", "1e-3", ")", "\n", "deviatns", "=", "np", ".", "zeros", "(", "len", "(", "l_vals", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "l_vals", ")", ")", ":", "\n", "            ", "alphas", ",", "alpha_hats", "=", "CompBinom", ".", "qq_comp_binom_poiss_comp_determn_poiss", "(", "l_vals", "[", "i", "]", ",", "p", ",", "poisson_mu", ",", "alpha_hats", "=", "alpha_hats", ")", "\n", "deviatns", "[", "i", "]", "=", "sum", "(", "(", "alphas", "-", "alpha_hats", ")", "**", "2", ")", "\n", "", "if", "plot", ":", "\n", "            ", "plt", ".", "plot", "(", "l_vals", ",", "deviatns", ")", "\n", "plt", ".", "title", "(", "\"For Poisson mu:\"", "+", "str", "(", "poisson_mu", ")", "+", "\" and binomial p= \"", "+", "str", "(", "p", ")", ")", "\n", "plt", ".", "xlabel", "(", "\"Binomial num tosses: l\"", ")", "\n", "plt", ".", "ylabel", "(", "\"SSE between alpha and alpha_hat\"", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "return", "l_vals", ",", "deviatns", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.qq_plots.compound_poisson_distribns.CompBinom.plot_l_deltas_for_configurations": [[77, 99], ["compound_poisson_distribns.CompBinom.plot_l_deltas", "matplotlib.plot", "compound_poisson_distribns.CompBinom.plot_l_deltas", "matplotlib.plot", "compound_poisson_distribns.CompBinom.plot_l_deltas", "matplotlib.plot", "compound_poisson_distribns.CompBinom.plot_l_deltas", "matplotlib.plot", "compound_poisson_distribns.CompBinom.plot_l_deltas", "matplotlib.plot", "compound_poisson_distribns.CompBinom.plot_l_deltas", "matplotlib.plot", "matplotlib.legend", "matplotlib.show", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.qq_plots.compound_poisson_distribns.CompBinom.plot_l_deltas", "home.repos.pwc.inspect_result.ryu577_stochproc.qq_plots.compound_poisson_distribns.CompBinom.plot_l_deltas", "home.repos.pwc.inspect_result.ryu577_stochproc.qq_plots.compound_poisson_distribns.CompBinom.plot_l_deltas", "home.repos.pwc.inspect_result.ryu577_stochproc.qq_plots.compound_poisson_distribns.CompBinom.plot_l_deltas", "home.repos.pwc.inspect_result.ryu577_stochproc.qq_plots.compound_poisson_distribns.CompBinom.plot_l_deltas", "home.repos.pwc.inspect_result.ryu577_stochproc.qq_plots.compound_poisson_distribns.CompBinom.plot_l_deltas"], ["", "@", "staticmethod", "\n", "def", "plot_l_deltas_for_configurations", "(", ")", ":", "\n", "        ", "p", "=", "0.1", ";", "poisson_mu", "=", "17", "\n", "ls", ",", "devtns", "=", "CompBinom", ".", "plot_l_deltas", "(", "p", "=", "p", ",", "poisson_mu", "=", "poisson_mu", ",", "plot", "=", "False", ")", "\n", "plt", ".", "plot", "(", "ls", ",", "devtns", ",", "label", "=", "\"For Poisson mu:\"", "+", "str", "(", "poisson_mu", ")", "+", "\" and binomial p= \"", "+", "str", "(", "p", ")", ")", "\n", "p", "=", "0.14285714", ";", "#poisson_mu=60", "\n", "ls", ",", "devtns", "=", "CompBinom", ".", "plot_l_deltas", "(", "p", "=", "p", ",", "poisson_mu", "=", "poisson_mu", ",", "plot", "=", "False", ")", "\n", "plt", ".", "plot", "(", "ls", ",", "devtns", ",", "label", "=", "\"For Poisson mu:\"", "+", "str", "(", "poisson_mu", ")", "+", "\" and binomial p= \"", "+", "str", "(", "p", ")", ")", "\n", "p", "=", "0.2", ";", "#poisson_mu=60", "\n", "ls", ",", "devtns", "=", "CompBinom", ".", "plot_l_deltas", "(", "p", "=", "p", ",", "poisson_mu", "=", "poisson_mu", ",", "plot", "=", "False", ")", "\n", "plt", ".", "plot", "(", "ls", ",", "devtns", ",", "label", "=", "\"For Poisson mu:\"", "+", "str", "(", "poisson_mu", ")", "+", "\" and binomial p= \"", "+", "str", "(", "p", ")", ")", "\n", "p", "=", "0.25", ";", "#poisson_mu=60", "\n", "ls", ",", "devtns", "=", "CompBinom", ".", "plot_l_deltas", "(", "p", "=", "p", ",", "poisson_mu", "=", "poisson_mu", ",", "plot", "=", "False", ")", "\n", "plt", ".", "plot", "(", "ls", ",", "devtns", ",", "label", "=", "\"For Poisson mu:\"", "+", "str", "(", "poisson_mu", ")", "+", "\" and binomial p= \"", "+", "str", "(", "p", ")", ")", "\n", "p", "=", "0.33333", ";", "#poisson_mu=60", "\n", "ls", ",", "devtns", "=", "CompBinom", ".", "plot_l_deltas", "(", "p", "=", "p", ",", "poisson_mu", "=", "poisson_mu", ",", "plot", "=", "False", ")", "\n", "plt", ".", "plot", "(", "ls", ",", "devtns", ",", "label", "=", "\"For Poisson mu:\"", "+", "str", "(", "poisson_mu", ")", "+", "\" and binomial p= \"", "+", "str", "(", "p", ")", ")", "\n", "p", "=", "0.5", ";", "#poisson_mu=60", "\n", "ls", ",", "devtns", "=", "CompBinom", ".", "plot_l_deltas", "(", "p", "=", "p", ",", "poisson_mu", "=", "poisson_mu", ",", "plot", "=", "False", ")", "\n", "plt", ".", "plot", "(", "ls", ",", "devtns", ",", "label", "=", "\"For Poisson mu:\"", "+", "str", "(", "poisson_mu", ")", "+", "\" and binomial p= \"", "+", "str", "(", "p", ")", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.cad_sim.IntervalData.__init__": [[25, 39], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "lmb_off", ",", "lmb_on", ",", "lmb_down", ",", "lmb_up", ",", "t_stop", ")", ":", "\n", "        ", "\"\"\"\n        lmb_off: Rate at which customer turns VM off when its ON.\n        lmb_on: Rate at which customer turns VM on when its OFF.\n        lmb_down: The rate at which VM goes down when running. This\n                  is the \"AIR\" in Azure.\n        lmb_up: Rate at which VM comes back up when down.\n        t_stop: The time at which we stop simulating.\n        \"\"\"", "\n", "self", ".", "lmb_off", "=", "lmb_off", "\n", "self", ".", "lmb_on", "=", "lmb_on", "\n", "self", ".", "lmb_down", "=", "lmb_down", "\n", "self", ".", "lmb_up", "=", "lmb_up", "\n", "self", ".", "t_stop", "=", "t_stop", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.cad_sim.IntervalData.data_gen": [[40, 47], ["stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "cad_sim.combine_intervals"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.cad_sim.combine_intervals"], ["", "def", "data_gen", "(", "self", ")", ":", "\n", "        ", "up_down_dat", "=", "birth_death_gen", "(", "self", ".", "lmb_down", ",", "self", ".", "lmb_up", ",", "self", ".", "t_stop", ")", "\n", "start_stop_dat", "=", "birth_death_gen", "(", "self", ".", "lmb_off", ",", "self", ".", "lmb_on", ",", "self", ".", "t_stop", ")", "\n", "start_stop_dat", ".", "loc", "[", "start_stop_dat", ".", "state", "==", "\"up\"", ",", "\"state\"", "]", "=", "\"running\"", "\n", "start_stop_dat", ".", "loc", "[", "start_stop_dat", ".", "state", "==", "\"down\"", ",", "\"state\"", "]", "=", "\"stopped\"", "\n", "start_stop_dat", ".", "loc", "[", "0", ",", "\"start\"", "]", "=", "-", "1e-3", "\n", "self", ".", "interval_dat", "=", "combine_intervals", "(", "start_stop_dat", ",", "up_down_dat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.cad_sim.birth_death_availability": [[4, 22], ["range", "numpy.random.exponential", "numpy.random.exponential"], "function", ["None"], ["def", "birth_death_availability", "(", ")", ":", "\n", "    ", "availab", "=", "0", "\n", "nsim", "=", "10000", "\n", "lmb", "=", "10.0", "\n", "mu", "=", "2.0", "\n", "t", "=", "1000", "\n", "for", "_", "in", "range", "(", "nsim", ")", ":", "\n", "        ", "up", "=", "True", "\n", "cum_t", "=", "0", "\n", "while", "cum_t", "<", "t", ":", "\n", "            ", "state", "=", "\"up\"", "if", "up", "else", "\"down\"", "\n", "t1", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lmb", ")", "if", "up", "else", "np", ".", "random", ".", "exponential", "(", "1", "/", "mu", ")", "\n", "cum_t", "+=", "t1", "\n", "up", "=", "not", "up", "\n", "", "if", "state", "==", "\"up\"", ":", "\n", "            ", "availab", "+=", "1", "\n", "", "", "return", "availab", "/", "nsim", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.cad_sim.combine_intervals": [[49, 67], ["pd.concat", "uniond.sort_values.sort_values", "numpy.concatenate", "states.append"], "function", ["None"], ["", "", "def", "combine_intervals", "(", "start_stop_dat", ",", "up_down_dat", ")", ":", "\n", "    ", "uniond", "=", "pd", ".", "concat", "(", "(", "start_stop_dat", "[", "[", "\"start\"", ",", "\"state\"", "]", "]", ",", "up_down_dat", "[", "[", "\"start\"", ",", "\"state\"", "]", "]", ")", ")", "\n", "uniond", "=", "uniond", ".", "sort_values", "(", "by", "=", "[", "\"start\"", "]", ")", "\n", "uniond", "[", "\"end\"", "]", "=", "np", ".", "concatenate", "(", "(", "uniond", ".", "start", "[", "1", ":", "]", ",", "[", "1000", "]", ")", ")", "\n", "uniond", "=", "uniond", ".", "loc", "[", "uniond", ".", "state", "!=", "\"stopped\"", "]", "\n", "#Remove the dummy VM-start", "\n", "uniond", "=", "uniond", "[", "1", ":", "]", "\n", "states", "=", "[", "]", "\n", "state", "=", "True", "\n", "for", "st", "in", "uniond", ".", "state", ":", "\n", "        ", "if", "st", "==", "\"stopped\"", ":", "\n", "            ", "state", "=", "False", "\n", "", "elif", "st", "==", "\"started\"", ":", "\n", "            ", "state", "=", "True", "\n", "", "states", ".", "append", "(", "state", ")", "\n", "", "uniond", "=", "uniond", "[", "states", "]", "\n", "return", "uniond", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.cad_sim.tst_gen_cad_data": [[69, 73], ["cad_sim.IntervalData", "cad_sim.IntervalData.data_gen"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.cad_sim.IntervalData.data_gen"], ["", "def", "tst_gen_cad_data", "(", ")", ":", "\n", "    ", "ida", "=", "IntervalData", "(", ".9", ",", "9.0", ",", ".01", ",", "100", ",", "1000", ")", "\n", "ida", ".", "data_gen", "(", ")", "\n", "cad_dat", "=", "ida", ".", "interval_dat", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.birth_death_gen.birth_death_gen": [[6, 31], ["pandas.DataFrame", "starts.append", "numpy.random.exponential", "ts.append", "states.append", "ends.append", "min"], "function", ["None"], ["def", "birth_death_gen", "(", "lmb", "=", "1.0", ",", "mu", "=", "2.0", ",", "t", "=", "10000", ")", ":", "\n", "    ", "\"\"\"\n    Simulates from a birth and death process\n    like VM life, where the VM suffers interruptions at the\n    rate lmb when its running and recovery happens at the\n    rate mu once its down. The intervals start at 0 and end\n    at time t.\n    \"\"\"", "\n", "up", "=", "True", "\n", "ts", "=", "[", "]", "\n", "cum_t", "=", "0", "\n", "states", "=", "[", "]", "\n", "starts", "=", "[", "]", ";", "ends", "=", "[", "]", "\n", "while", "cum_t", "<", "t", ":", "\n", "        ", "starts", ".", "append", "(", "cum_t", ")", "\n", "rate", "=", "lmb", "if", "up", "else", "mu", "\n", "state", "=", "\"up\"", "if", "up", "else", "\"down\"", "\n", "t1", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "rate", ")", "\n", "ts", ".", "append", "(", "t1", ")", "\n", "states", ".", "append", "(", "state", ")", "\n", "cum_t", "+=", "t1", "\n", "up", "=", "not", "up", "\n", "ends", ".", "append", "(", "min", "(", "cum_t", ",", "t", ")", ")", "\n", "", "dat", "=", "pd", ".", "DataFrame", "(", "{", "\"durtn\"", ":", "ts", ",", "\"state\"", ":", "states", ",", "\"start\"", ":", "starts", ",", "\"end\"", ":", "ends", "}", ")", "\n", "return", "dat", "\n", "", ""]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.system_interruption_rate.single_machine_transitions": [[6, 26], ["pandas.DataFrame", "numpy.random.exponential", "dat_lst.append", "numpy.random.exponential", "dat_lst.append"], "function", ["None"], ["def", "single_machine_transitions", "(", "t", ",", "lmb", "=", "1", "/", "10", ",", "mu", "=", "1", "/", "10", ")", ":", "\n", "\t", "\"\"\"\n\tGenerates the raw state transition data for \n\ta machine with failure rate lmb and repair rate mu.\n\t\"\"\"", "\n", "cols", "=", "[", "'start'", ",", "'end'", ",", "'duration'", ",", "'status'", "]", "\n", "dat_lst", "=", "[", "]", "\n", "running_time", "=", "0", "\n", "while", "True", ":", "\n", "\t\t", "up_time", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lmb", ")", "\n", "dat_lst", ".", "append", "(", "[", "running_time", ",", "running_time", "+", "up_time", ",", "up_time", ",", "0", "]", ")", "\n", "running_time", "+=", "up_time", "\n", "if", "running_time", ">", "t", ":", "\n", "\t\t\t", "break", "\n", "", "down_time", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "mu", ")", "\n", "dat_lst", ".", "append", "(", "[", "running_time", ",", "running_time", "+", "down_time", ",", "down_time", ",", "1", "]", ")", "\n", "running_time", "+=", "down_time", "\n", "if", "running_time", ">", "t", ":", "\n", "\t\t\t", "break", "\n", "", "", "return", "pd", ".", "DataFrame", "(", "dat_lst", ",", "columns", "=", "cols", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.system_interruption_rate.state_change_times": [[28, 51], ["pandas.DataFrame", "numpy.array", "numpy.array", "range", "res.sort_values.sort_values", "system_interruption_rate.single_machine_transitions", "sum", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.ones", "len", "numpy.ones", "len"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.system_interruption_rate.single_machine_transitions"], ["", "def", "state_change_times", "(", "n", "=", "3", ")", ":", "\n", "    ", "\"\"\"\n    Returns the times at which the state of the k-of-n system change\n    as a data frame. At the start of a new downtime, the number of\n    components down decreases by 1 and at the end of a new downtime,\n    it increases by 1.\n    \"\"\"", "\n", "res", "=", "pd", ".", "DataFrame", "(", "columns", "=", "[", "'time'", ",", "'status'", "]", ")", "\n", "times", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "statuses", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "total_durtn", "=", "0", "\n", "for", "_", "in", "range", "(", "n", ")", ":", "\n", "        ", "df", "=", "single_machine_transitions", "(", "1000", ",", "1", "/", "10", ",", "1", "/", "10", ")", "\n", "total_durtn", "+=", "sum", "(", "df", "[", "'duration'", "]", ")", "\n", "df", "=", "df", "[", "df", "[", "'status'", "]", "==", "1", "]", "\n", "times", "=", "np", ".", "concatenate", "(", "(", "times", ",", "df", "[", "'start'", "]", ")", ",", "axis", "=", "0", ")", "\n", "statuses", "=", "np", ".", "concatenate", "(", "(", "statuses", ",", "np", ".", "ones", "(", "len", "(", "df", "[", "'start'", "]", ")", ")", ")", ",", "axis", "=", "0", ")", "\n", "times", "=", "np", ".", "concatenate", "(", "(", "times", ",", "df", "[", "'end'", "]", ")", ",", "axis", "=", "0", ")", "\n", "statuses", "=", "np", ".", "concatenate", "(", "(", "statuses", ",", "-", "1", "*", "np", ".", "ones", "(", "len", "(", "df", "[", "'start'", "]", ")", ")", ")", ",", "axis", "=", "0", ")", "\n", "", "res", "[", "'time'", "]", "=", "times", "\n", "res", "[", "'status'", "]", "=", "statuses", "\n", "res", "=", "res", ".", "sort_values", "(", "by", "=", "'time'", ")", "\n", "return", "res", ",", "total_durtn", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.system_interruption_rate.n_machine_transitions": [[53, 66], ["system_interruption_rate.state_change_times", "len", "pandas.DataFrame", "numpy.array", "numpy.array", "numpy.cumsum"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.tests.simulation.state_change_times"], ["", "def", "n_machine_transitions", "(", "n", "=", "3", ")", ":", "\n", "    ", "\"\"\"\n    Converts the transition data for the individual machines into \n    the transition data for the entire system. Here, states are defined\n    as the number of machines down at any given time.\n    \"\"\"", "\n", "trnstns", ",", "durtn", "=", "state_change_times", "(", "n", ")", "\n", "rows", "=", "len", "(", "trnstns", ")", "\n", "out", "=", "pd", ".", "DataFrame", "(", "columns", "=", "[", "'start'", ",", "'end'", ",", "'down_vms'", "]", ")", "\n", "out", "[", "'down_vms'", "]", "=", "np", ".", "cumsum", "(", "trnstns", "[", "'status'", "]", ")", "[", ":", "rows", "-", "1", "]", "#Remove the last row.", "\n", "out", "[", "'start'", "]", "=", "np", ".", "array", "(", "trnstns", "[", "'time'", "]", "[", ":", "rows", "-", "1", "]", ")", "\n", "out", "[", "'end'", "]", "=", "np", ".", "array", "(", "trnstns", "[", "'time'", "]", "[", "1", ":", "]", ")", "\n", "return", "out", ",", "durtn", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.system_interruption_rate.count_intervals": [[68, 87], ["dat.iterrows"], "function", ["None"], ["", "def", "count_intervals", "(", "dat", ")", ":", "\n", "    ", "\"\"\"\n    We will have instances of continuous downtimes being split into different\n    state transitions. For example, if a 2 out of 3 system transitions\n    from 2 down to 3 down and then back to 2 down, we want to treat those\n    three transitions as a single DOWN event for the system. This method helps with\n    that.\n    \"\"\"", "\n", "prev_start", "=", "0", "\n", "prev_end", "=", "0", "\n", "intervals", "=", "0", "\n", "for", "_", ",", "row", "in", "dat", ".", "iterrows", "(", ")", ":", "\n", "        ", "curr_start", "=", "row", "[", "'start'", "]", "\n", "curr_end", "=", "row", "[", "'end'", "]", "\n", "if", "curr_start", ">", "prev_end", ":", "\n", "            ", "intervals", "+=", "1", "\n", "", "prev_start", "=", "curr_start", "\n", "prev_end", "=", "curr_end", "\n", "", "return", "intervals", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.system_interruption_rate.k_of_n_system": [[89, 101], ["system_interruption_rate.n_machine_transitions", "system_interruption_rate.count_intervals"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.tests.simulation.n_machine_transitions", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.system_interruption_rate.count_intervals"], ["", "def", "k_of_n_system", "(", "k", "=", "2", ",", "n", "=", "3", ")", ":", "\n", "    ", "\"\"\"\n    Calculates the simulated interruption rate for a k-out-of-n\n    system.\n    \"\"\"", "\n", "dat", ",", "durtn", "=", "n_machine_transitions", "(", "n", ")", "\n", "sys_down", "=", "dat", "[", "dat", "[", "'down_vms'", "]", ">=", "2", "]", "\n", "downs", "=", "count_intervals", "(", "sys_down", ")", "\n", "# We took total duration here, so time system was measured is", "\n", "# the average of those durations.", "\n", "rate", "=", "downs", "/", "(", "durtn", "/", "n", ")", "\n", "return", "rate", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.system_interruption_rate.closed_form": [[103, 105], ["scipy.special.comb"], "function", ["None"], ["", "def", "closed_form", "(", "k", "=", "2", ",", "n", "=", "2", ",", "lmb", "=", "0.1", ",", "mu", "=", "0.1", ")", ":", "\n", "    ", "return", "n", "*", "lmb", "**", "k", "*", "mu", "**", "(", "n", "-", "k", "+", "1", ")", "/", "(", "lmb", "+", "mu", ")", "**", "n", "*", "comb", "(", "n", "-", "1", ",", "k", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.system_interruption_rate.main": [[107, 116], ["system_interruption_rate.closed_form", "system_interruption_rate.k_of_n_system", "print", "print", "str", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.tests.simulation.k_of_n_system"], ["", "def", "main", "(", ")", ":", "\n", "    ", "\"\"\"\n    Verifies the closed form interruption rate for a k-of-n\n    system matches the simulated hazard rate for the same system.\n    \"\"\"", "\n", "closed_form_rate", "=", "closed_form", "(", ")", "\n", "simulated_rate", "=", "k_of_n_system", "(", ")", "\n", "print", "(", "\"The closed form gives us:\"", "+", "str", "(", "closed_form_rate", ")", ")", "\n", "print", "(", "\"And the simulated result is:\"", "+", "str", "(", "simulated_rate", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.single_machine": [[7, 28], ["numpy.random.exponential", "numpy.random.exponential"], "function", ["None"], ["def", "single_machine", "(", "t", ",", "lmb", "=", "1", "/", "10", ",", "mu", "=", "1", "/", "3", ")", ":", "\n", "\t", "\"\"\"\n\tSimulates a single machine. Tells you if the machine is UP\n\tor DOWN at time t. The mean time to failure (MTTF)\n\tfor the machine is exponential with rate lambda. The mean\n\ttime to repair once the machine goes down is another exponential\n\twith mean mu. \n\t\"\"\"", "\n", "running_time", "=", "0", "\n", "while", "True", ":", "\n", "\t\t", "up", "=", "True", "\n", "up_time", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lmb", ")", "\n", "running_time", "+=", "up_time", "\n", "if", "running_time", ">", "t", ":", "\n", "\t\t\t", "break", "\n", "", "up", "=", "False", "\n", "down_time", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "mu", ")", "\n", "running_time", "+=", "down_time", "\n", "if", "running_time", ">", "t", ":", "\n", "\t\t\t", "break", "\n", "", "", "return", "up", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.updown": [[29, 38], ["range", "range", "ups_arr.append", "numpy.std", "machinerepair.single_machine"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.single_machine"], ["", "def", "updown", "(", "t", ")", ":", "\n", "\t", "ups", "=", "0", "\n", "ups_arr", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "1", ")", ":", "\n", "\t\t", "for", "i", "in", "range", "(", "1000", ")", ":", "\n", "\t\t\t", "upp", "=", "single_machine", "(", "t", ")", "\n", "ups", "+=", "upp", "\n", "", "ups_arr", ".", "append", "(", "upp", "/", "1000", ")", "\n", "", "return", "ups", "/", "1000", ",", "np", ".", "std", "(", "ups_arr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.closed_form": [[40, 42], ["numpy.exp"], "function", ["None"], ["", "def", "closed_form", "(", "t", ",", "lmb", "=", "1", "/", "10", ",", "mu", "=", "1", "/", "3", ")", ":", "\n", "\t", "return", "mu", "/", "(", "mu", "+", "lmb", ")", "+", "lmb", "/", "(", "lmb", "+", "mu", ")", "*", "np", ".", "exp", "(", "-", "(", "lmb", "+", "mu", ")", "*", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.plot_one_mc_sim": [[44, 59], ["range", "numpy.arange", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.show", "range", "matplotlib.plot", "machinerepair.closed_form", "machinerepair.updown", "probs.append", "stds.append", "numpy.arange"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.updown"], ["", "def", "plot_one_mc_sim", "(", ")", ":", "\n", "\t", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "\t\t", "probs", "=", "[", "]", "\n", "stds", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "1", ",", "100", ")", ":", "\n", "\t\t\t", "prob", ",", "std", "=", "updown", "(", "t", ")", "\n", "probs", ".", "append", "(", "prob", ")", "\n", "stds", ".", "append", "(", "std", ")", "\n", "", "plt", ".", "plot", "(", "np", ".", "arange", "(", "1", ",", "100", ")", ",", "probs", ",", "alpha", "=", "0.4", ",", "color", "=", "'pink'", ")", "\n", "\n", "", "xs", "=", "np", ".", "arange", "(", "1", ",", "100", ")", "\n", "plt", ".", "plot", "(", "xs", ",", "closed_form", "(", "xs", ")", ",", "color", "=", "'red'", ")", "\n", "plt", ".", "xlabel", "(", "'Time'", ")", "\n", "plt", ".", "ylabel", "(", "'Reliability of system'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.k_of_n_sys": [[61, 66], ["range", "scipy.special.comb"], "function", ["None"], ["", "def", "k_of_n_sys", "(", "p", ",", "k", "=", "2", ",", "n", "=", "3", ")", ":", "\n", "\t", "res", "=", "0", "\n", "for", "l", "in", "range", "(", "k", ",", "n", "+", "1", ")", ":", "\n", "\t\t", "res", "+=", "comb", "(", "n", ",", "l", ")", "*", "p", "**", "l", "*", "(", "1", "-", "p", ")", "**", "(", "n", "-", "l", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.two_of_three_with_network": [[67, 69], ["None"], "function", ["None"], ["", "def", "two_of_three_with_network", "(", "p", ",", "s", ")", ":", "\n", "\t", "return", "3", "*", "p", "**", "2", "*", "(", "1", "-", "p", ")", "*", "s", "+", "p", "**", "3", "*", "(", "1", "-", "(", "1", "-", "s", ")", "**", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.k_of_n_w_network": [[71, 76], ["range", "machinerepair.is_master_available", "scipy.special.comb"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.is_master_available"], ["", "def", "k_of_n_w_network", "(", "p", ",", "s", ",", "k", "=", "2", ",", "n", "=", "3", ")", ":", "\n", "\t", "res", "=", "0", "\n", "for", "l", "in", "range", "(", "k", ",", "n", "+", "1", ")", ":", "\n", "\t\t", "res", "+=", "comb", "(", "n", ",", "l", ")", "*", "p", "**", "l", "*", "(", "1", "-", "p", ")", "**", "(", "n", "-", "l", ")", "*", "is_master_available", "(", "s", ",", "k", ",", "l", ",", "0.5", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.is_master_available": [[78, 96], ["range", "numpy.zeros", "range", "range", "max", "numpy.random.uniform"], "function", ["None"], ["", "def", "is_master_available", "(", "s", ",", "k", "=", "2", ",", "l", "=", "3", ",", "s1", "=", "None", ",", "\n", "sure_conncn", "=", "{", "}", ",", "nsim", "=", "30000", ")", ":", "\n", "\t", "res", "=", "0", "\n", "if", "s1", "is", "None", ":", "\n", "\t\t", "s1", "=", "s", "\n", "", "for", "sim", "in", "range", "(", "nsim", ")", ":", "\n", "\t\t", "arr", "=", "np", ".", "zeros", "(", "l", ")", "\n", "succ", "=", "0", "\n", "for", "i", "in", "range", "(", "l", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "i", "+", "1", ",", "l", ")", ":", "\n", "\t\t\t\t", "if", "np", ".", "random", ".", "uniform", "(", ")", "<", "s1", "or", "(", "i", ",", "j", ")", "in", "sure_conncn", ":", "\n", "\t\t\t\t\t", "if", "(", "i", ",", "j", ")", "not", "in", "sure_conncn", ":", "\n", "\t\t\t\t\t\t", "succ", "+=", "1", "\n", "", "arr", "[", "i", "]", "+=", "1", "\n", "arr", "[", "j", "]", "+=", "1", "\n", "", "", "", "if", "max", "(", "arr", ")", "<", "k", "-", "1", ":", "\n", "\t\t\t", "res", "+=", "s", "**", "succ", "*", "(", "1", "-", "s", ")", "**", "(", "l", "*", "(", "l", "-", "1", ")", "/", "2", "-", "succ", ")", "/", "s1", "**", "succ", "/", "(", "1", "-", "s1", ")", "**", "(", "l", "*", "(", "l", "-", "1", ")", "/", "2", "-", "succ", ")", "\n", "", "", "return", "1", "-", "res", "/", "nsim", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.three_of_four_connectivity": [[98, 105], ["scipy.special.comb", "scipy.special.comb", "scipy.special.comb", "scipy.special.comb", "scipy.special.comb"], "function", ["None"], ["", "def", "three_of_four_connectivity", "(", "q", ")", ":", "\n", "\t", "\"\"\"\n\tSee WorkProjects/PFFC/Test1\n\t\"\"\"", "\n", "return", "12", "/", "15", "*", "comb", "(", "6", ",", "2", ")", "*", "q", "**", "2", "*", "(", "1", "-", "q", ")", "**", "4", "+", "comb", "(", "6", ",", "3", ")", "*", "q", "**", "3", "*", "(", "1", "-", "q", ")", "**", "3", "+", "comb", "(", "6", ",", "4", ")", "*", "q", "**", "4", "*", "(", "1", "-", "q", ")", "**", "2", "+", "comb", "(", "6", ",", "5", ")", "*", "q", "**", "5", "*", "(", "1", "-", "q", ")", "+", "comb", "(", "6", ",", "6", ")", "*", "q", "**", "6", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.two_of_three_reliability_mc": [[107, 114], ["range", "machinerepair.single_machine", "machinerepair.single_machine", "machinerepair.single_machine"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.single_machine", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.single_machine", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.single_machine"], ["", "def", "two_of_three_reliability_mc", "(", "t", "=", "10", ",", "mu", "=", "0.7", ",", "lmb", "=", "9.3", ")", ":", "\n", "\t", "sys_work", "=", "0", "\n", "for", "i", "in", "range", "(", "1000", ")", ":", "\n", "\t\t", "summ", "=", "single_machine", "(", "t", ",", "lmb", ",", "mu", ")", "+", "single_machine", "(", "t", ",", "lmb", ",", "mu", ")", "+", "single_machine", "(", "t", ",", "lmb", ",", "mu", ")", "\n", "if", "summ", ">=", "2", ":", "\n", "\t\t\t", "sys_work", "+=", "1", "\n", "", "", "return", "sys_work", "/", "1000", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.two_of_three_reliability": [[116, 119], ["machinerepair.closed_form", "machinerepair.k_of_n_sys"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.k_of_n_sys"], ["", "def", "two_of_three_reliability", "(", "t", "=", "10", ",", "mu", "=", "0.7", ",", "lmb", "=", "9.3", ")", ":", "\n", "\t", "p", "=", "closed_form", "(", "t", ",", "lmb", ",", "mu", ")", "\n", "return", "k_of_n_sys", "(", "p", ",", "2", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.two_of_three_reliability_mc_importance": [[121, 132], ["machinerepair.closed_form", "machinerepair.closed_form", "range", "machinerepair.single_machine", "machinerepair.single_machine", "machinerepair.single_machine"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.single_machine", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.single_machine", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.single_machine"], ["", "def", "two_of_three_reliability_mc_importance", "(", "t", "=", "10", ",", "mu", "=", "0.7", ",", "lmb", "=", "9.3", ")", ":", "\n", "\t", "sys_work", "=", "0", "\n", "p", "=", "closed_form", "(", "t", ",", "lmb", ",", "mu", ")", "\n", "q", "=", "closed_form", "(", "t", ",", "lmb", ",", "mu", "*", "5", ")", "\n", "for", "i", "in", "range", "(", "1000", ")", ":", "\n", "\t\t", "summ", "=", "single_machine", "(", "t", ",", "lmb", ",", "mu", "*", "5", ")", "+", "single_machine", "(", "t", ",", "lmb", ",", "mu", "*", "5", ")", "+", "single_machine", "(", "t", ",", "lmb", ",", "mu", "*", "5", ")", "\n", "if", "summ", "==", "2", ":", "\n", "\t\t\t", "sys_work", "+=", "(", "p", "**", "2", "*", "(", "1", "-", "p", ")", ")", "/", "(", "q", "**", "2", "*", "(", "1", "-", "q", ")", ")", "\n", "", "elif", "summ", "==", "3", ":", "\n", "\t\t\t", "sys_work", "+=", "p", "**", "3", "/", "q", "**", "3", "\n", "", "", "return", "sys_work", "/", "1000", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.cross_dc_network_av": [[134, 151], ["range", "numpy.array", "numpy.ones", "range", "range", "machinerepair.to_binary", "machinerepair.is_master", "np.array.append", "len", "len", "sum", "len"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.to_binary", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.is_master"], ["", "def", "cross_dc_network_av", "(", "k", "=", "4", ",", "n", "=", "4", ",", "q", "=", "0.5", ",", "dbl_nodes", "=", "2", ")", ":", "\n", "\t", "edges", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "\t\t", "for", "j", "in", "range", "(", "i", "+", "1", ",", "n", ")", ":", "\n", "\t\t\t", "edges", ".", "append", "(", "(", "i", ",", "j", ")", ")", "\n", "", "", "edges", "=", "np", ".", "array", "(", "edges", ")", "\n", "ans", "=", "0.0", "\n", "wts", "=", "np", ".", "ones", "(", "n", ")", "\n", "wts", "[", ":", "dbl_nodes", "]", "=", "2", "\n", "for", "e_idx", "in", "range", "(", "2", "**", "len", "(", "edges", ")", ")", ":", "\n", "\t\t", "arr", "=", "to_binary", "(", "e_idx", ",", "len", "(", "edges", ")", ")", "\n", "active_edges", "=", "edges", "[", "arr", ">", "0", "]", "\n", "#print(str(active_edges))", "\n", "if", "is_master", "(", "active_edges", ",", "k", ",", "n", ",", "wts", ")", ":", "\n", "\t\t\t", "up_edges", "=", "sum", "(", "arr", ")", "\n", "ans", "+=", "q", "**", "up_edges", "*", "(", "1", "-", "q", ")", "**", "(", "len", "(", "edges", ")", "-", "up_edges", ")", "\n", "", "", "return", "ans", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.to_binary": [[153, 165], ["numpy.zeros", "int"], "function", ["None"], ["", "def", "to_binary", "(", "n", ",", "dim", ")", ":", "\n", "        ", "\"\"\"\n        Obtains the binary representation of an integer.\n        \"\"\"", "\n", "raw", "=", "np", ".", "zeros", "(", "dim", ")", "\n", "temp", "=", "n", "%", "(", "2", "**", "dim", ")", "\n", "indx", "=", "0", "\n", "while", "temp", ">", "0", ":", "\n", "            ", "raw", "[", "indx", "]", "=", "temp", "%", "2", "\n", "temp", "=", "int", "(", "temp", "/", "2", ")", "\n", "indx", "=", "indx", "+", "1", "\n", "", "return", "raw", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.is_master": [[167, 175], ["numpy.ones", "numpy.zeros", "max", "max"], "function", ["None"], ["", "def", "is_master", "(", "conn", "=", "[", "(", "0", ",", "1", ")", ",", "(", "1", ",", "2", ")", ",", "(", "1", ",", "3", ")", "]", ",", "k", "=", "3", ",", "l", "=", "4", ",", "wts", "=", "np", ".", "ones", "(", "3", ")", ")", ":", "\n", "\t", "if", "max", "(", "wts", ")", ">=", "k", ":", "\n", "\t\t", "return", "True", "\n", "", "arr", "=", "np", ".", "zeros", "(", "l", ")", "\n", "for", "s", "in", "conn", ":", "\n", "\t\t", "arr", "[", "s", "[", "0", "]", "]", "+=", "wts", "[", "s", "[", "0", "]", "]", "\n", "arr", "[", "s", "[", "1", "]", "]", "+=", "wts", "[", "s", "[", "1", "]", "]", "\n", "", "return", "max", "(", "arr", ")", ">=", "(", "k", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.three_of_five_w_seven_replicas": [[178, 197], ["machinerepair.cross_dc_network_av", "machinerepair.cross_dc_network_av", "machinerepair.cross_dc_network_av", "machinerepair.cross_dc_network_av"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.cross_dc_network_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.cross_dc_network_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.cross_dc_network_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.cross_dc_network_av"], ["", "def", "three_of_five_w_seven_replicas", "(", "p", ",", "q", ")", ":", "\n", "\t", "\"\"\"\n\tWhen we have seven replicas, three \n\tof the five rows will have one each\n\tand the other two will have two each.\n\tA hero is defined as a row with two replicas\n\tand a Joe is defined as a row with one replica.\n\targs:\n\t\tp: The row reliability.\n\t\tq: The cross-dc network reliability.\n\t\"\"\"", "\n", "one_hero_two_joes", "=", "6", "*", "p", "**", "3", "*", "(", "1", "-", "p", ")", "**", "2", "*", "(", "3", "*", "q", "**", "2", "*", "(", "1", "-", "q", ")", "+", "2", "*", "q", "*", "(", "1", "-", "q", ")", "**", "2", "+", "q", "**", "3", ")", "\n", "one_hero_three_joes", "=", "2", "*", "p", "**", "4", "*", "(", "1", "-", "p", ")", "*", "cross_dc_network_av", "(", "3", ",", "4", ",", "q", ",", "1", ")", "\n", "two_heroes_no_joe", "=", "p", "**", "2", "*", "(", "1", "-", "p", ")", "**", "3", "*", "q", "\n", "two_heroes_one_joe", "=", "3", "*", "p", "**", "3", "*", "(", "1", "-", "p", ")", "**", "2", "*", "cross_dc_network_av", "(", "4", ",", "3", ",", "q", ",", "2", ")", "\n", "two_heroes_two_joes", "=", "3", "*", "p", "**", "4", "*", "(", "1", "-", "p", ")", "*", "cross_dc_network_av", "(", "4", ",", "4", ",", "q", ",", "2", ")", "\n", "two_heroes_three_joes", "=", "p", "**", "5", "*", "cross_dc_network_av", "(", "4", ",", "5", ",", "q", ",", "2", ")", "\n", "return", "one_hero_two_joes", "+", "one_hero_three_joes", "+", "two_heroes_no_joe", "+", "two_heroes_one_joe", "+", "two_heroes_two_joes", "+", "two_heroes_three_joes", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.plot_two_of_three_reliability": [[201, 211], ["matplotlib.plot", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.savefig", "matplotlib.close", "machinerepair.k_of_n_sys", "matplotlib.axvline"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.k_of_n_sys"], ["def", "plot_two_of_three_reliability", "(", "ps", ",", "name", "=", "'plots\\\\0'", ",", "plot_pt5", "=", "True", ")", ":", "\n", "\t", "plt", ".", "plot", "(", "ps", ",", "k_of_n_sys", "(", "ps", ",", "2", ",", "3", ")", ")", "\n", "plt", ".", "plot", "(", "ps", ",", "ps", ")", "\n", "if", "plot_pt5", ":", "\n", "\t\t", "plt", ".", "axvline", "(", "0.5", ")", "\n", "", "plt", ".", "title", "(", "'Two out of three reliability'", ")", "\n", "plt", ".", "xlabel", "(", "'Component level reliability'", ")", "\n", "plt", ".", "ylabel", "(", "'System level reliability'", ")", "\n", "plt", ".", "savefig", "(", "name", "+", "'.png'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.make_video": [[213, 217], ["numpy.arange", "range", "machinerepair.plot_two_of_three_reliability", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.plot_two_of_three_reliability"], ["", "def", "make_video", "(", ")", ":", "\n", "\t", "ps", "=", "np", ".", "arange", "(", "0", ",", "1", ",", "1e-3", ")", "\n", "for", "i", "in", "range", "(", "33", ")", ":", "\n", "\t\t", "plot_two_of_three_reliability", "(", "ps", "[", "30", "*", "i", ":", "]", ",", "'plots\\\\im'", "+", "str", "(", "i", ")", ",", "i", "*", "30", "<", "500", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.generic_sim.Trnstn.__init__": [[6, 11], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "abs_t", ",", "rel_t", ",", "up", ",", "ix", ")", ":", "\n", "        ", "self", ".", "abs_t", "=", "abs_t", "\n", "self", ".", "rel_t", "=", "rel_t", "\n", "self", ".", "up", "=", "up", "\n", "self", ".", "ix", "=", "ix", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.generic_sim.Trnstn.__eq__": [[12, 14], ["None"], "methods", ["None"], ["", "def", "__eq__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "(", "self", ".", "abs_t", "==", "other", ".", "abs_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.generic_sim.Trnstn.__ne__": [[15, 17], ["None"], "methods", ["None"], ["", "def", "__ne__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "self", ".", "abs_t", "!=", "other", ".", "abs_t", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.generic_sim.Trnstn.__lt__": [[18, 20], ["None"], "methods", ["None"], ["", "def", "__lt__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "(", "self", ".", "abs_t", "<", "other", ".", "abs_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.generic_sim.Trnstn.__le__": [[21, 23], ["None"], "methods", ["None"], ["", "def", "__le__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "(", "self", ".", "abs_t", "<=", "other", ".", "abs_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.generic_sim.Trnstn.__gt__": [[24, 26], ["None"], "methods", ["None"], ["", "def", "__gt__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "(", "self", ".", "abs_t", ">", "other", ".", "abs_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.generic_sim.Trnstn.__ge__": [[27, 29], ["None"], "methods", ["None"], ["", "def", "__ge__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "(", "self", ".", "abs_t", ">=", "other", ".", "abs_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.generic_sim.sim_series": [[31, 86], ["range", "print", "numpy.array", "len", "algorith.data_structs.heap.heap.Heap", "numpy.random.exponential", "generic_sim.Trnstn", "algorith.data_structs.heap.heap.Heap.push", "algorith.data_structs.heap.heap.Heap.pop", "numpy.random.exponential", "generic_sim.Trnstn", "algorith.data_structs.heap.heap.Heap.push"], "function", ["None"], ["", "", "def", "sim_series", "(", ")", ":", "\n", "    ", "dwn_evnts", "=", "0", "\n", "up_t", "=", "0", "\n", "for", "ii", "in", "range", "(", "10", ")", ":", "\n", "        ", "sim_until", "=", "1e4", "\n", "rates", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1.1", ",", "1.2", "]", ",", "[", "2", ",", "2", ",", "2", "]", "]", ")", "\n", "n", "=", "len", "(", "rates", "[", "0", "]", ")", "\n", "hp", "=", "Heap", "(", ")", "\n", "prev_t", "=", "0", "\n", "j", "=", "0", "\n", "for", "i", "in", "rates", "[", "0", "]", ":", "\n", "            ", "t_rand", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "i", ")", "\n", "trnstn", "=", "Trnstn", "(", "t_rand", ",", "t_rand", ",", "0", ",", "j", ")", "\n", "j", "+=", "1", "\n", "hp", ".", "push", "(", "trnstn", ")", "\n", "\n", "", "t", "=", "0", "\n", "ups", "=", "n", "\n", "dwns", "=", "0", "\n", "t_up", "=", "0", "\n", "t_dwn", "=", "0", "\n", "\n", "totl_t", "=", "0", "\n", "\n", "while", "t", "<", "sim_until", ":", "\n", "            ", "curr_trnstn", "=", "hp", ".", "pop", "(", ")", "\n", "t", "=", "curr_trnstn", ".", "abs_t", "\n", "nxt_state", "=", "(", "curr_trnstn", ".", "up", "+", "1", ")", "%", "2", "\n", "lmbd", "=", "rates", "[", "nxt_state", "]", "[", "curr_trnstn", ".", "ix", "]", "\n", "delt", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lmbd", ")", "\n", "nxt_trnstn", "=", "Trnstn", "(", "t", "+", "delt", ",", "delt", ",", "nxt_state", ",", "curr_trnstn", ".", "ix", ")", "\n", "hp", ".", "push", "(", "nxt_trnstn", ")", "\n", "delt_1", "=", "(", "curr_trnstn", ".", "abs_t", "-", "prev_t", ")", "\n", "t_up", "+=", "ups", "*", "delt_1", "\n", "t_dwn", "+=", "(", "n", "-", "ups", ")", "*", "delt_1", "\n", "# Just as a sanity check, this should equal t afer loop.", "\n", "totl_t", "+=", "(", "t", "-", "prev_t", ")", "\n", "# if all n components are UP and you're transitioning,", "\n", "# you can only be transitioning DOWN (series system).", "\n", "if", "ups", "==", "n", ":", "\n", "                ", "up_t", "+=", "(", "t", "-", "prev_t", ")", "\n", "", "if", "curr_trnstn", ".", "up", "==", "1", ":", "\n", "                ", "ups", "+=", "1", "\n", "", "else", ":", "\n", "                ", "if", "ups", "==", "n", ":", "\n", "                    ", "dwn_evnts", "+=", "1", "\n", "", "ups", "-=", "1", "\n", "", "if", "t", "<", "sim_until", ":", "\n", "                ", "prev_t", "=", "t", "\n", "\n", "", "", "if", "ups", "==", "n", ":", "\n", "            ", "up_t", "+=", "(", "sim_until", "-", "prev_t", ")", "\n", "\n", "# After loop, t==totl_t > sim_until > prev_t", "\n", "", "", "print", "(", "dwn_evnts", "/", "up_t", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.spare_racks.Rack.__init__": [[6, 12], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ix", ",", "is_spare", ",", "lmb", ",", "mu", ",", "av", "=", "1", ")", ":", "\n", "        ", "self", ".", "ix", "=", "ix", "\n", "self", ".", "is_spare", "=", "is_spare", "\n", "self", ".", "lmb", "=", "lmb", "\n", "self", ".", "mu", "=", "mu", "\n", "self", ".", "av", "=", "av", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.spare_racks.Evnt.__init__": [[15, 20], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "change_t", ",", "type", "=", "'rack_state_ch'", ",", "rack", "=", "None", ")", ":", "\n", "        ", "self", ".", "change_t", "=", "change_t", "\n", "self", ".", "type", "=", "type", "\n", "if", "type", "==", "'rack_state_ch'", ":", "\n", "            ", "self", ".", "rack", "=", "rack", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.spare_racks.Evnt.__eq__": [[21, 23], ["None"], "methods", ["None"], ["", "", "def", "__eq__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "(", "self", ".", "change_t", "==", "other", ".", "change_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.spare_racks.Evnt.__ne__": [[24, 26], ["None"], "methods", ["None"], ["", "def", "__ne__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "self", ".", "change_t", "!=", "other", ".", "change_t", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.spare_racks.Evnt.__lt__": [[27, 29], ["None"], "methods", ["None"], ["", "def", "__lt__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "(", "self", ".", "change_t", "<", "other", ".", "change_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.spare_racks.Evnt.__le__": [[30, 32], ["None"], "methods", ["None"], ["", "def", "__le__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "(", "self", ".", "change_t", "<=", "other", ".", "change_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.spare_racks.Evnt.__gt__": [[33, 35], ["None"], "methods", ["None"], ["", "def", "__gt__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "(", "self", ".", "change_t", ">", "other", ".", "change_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.spare_racks.Evnt.__ge__": [[36, 38], ["None"], "methods", ["None"], ["", "def", "__ge__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "(", "self", ".", "change_t", ">=", "other", ".", "change_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.spare_racks.sim_rack_proc": [[40, 107], ["numpy.ones", "spare_racks.Evnt", "algorith.data_structs.heap.heap.Heap", "algorith.data_structs.heap.heap.Heap.push", "range", "numpy.ones", "set", "len", "racks.append", "algorith.data_structs.heap.heap.Heap.pop", "spare_racks.Rack", "numpy.random.exponential", "spare_racks.Evnt", "algorith.data_structs.heap.heap.Heap.push", "spare_racks.Rack", "len", "numpy.random.exponential", "algorith.data_structs.heap.heap.Heap.push", "len", "set.pop", "numpy.random.exponential", "spare_racks.Evnt", "algorith.data_structs.heap.heap.Heap.push", "set.add", "numpy.random.exponential", "algorith.data_structs.heap.heap.Heap.push", "len"], "function", ["None"], ["", "", "def", "sim_rack_proc", "(", "num_racks", "=", "10", ",", "have_spare", "=", "True", ")", ":", "\n", "    ", "lmbds", "=", "np", ".", "ones", "(", "num_racks", ")", "\n", "mus", "=", "np", ".", "ones", "(", "num_racks", ")", "*", "2", "\n", "if", "have_spare", ":", "\n", "        ", "spare_ixs", "=", "{", "len", "(", "lmbds", ")", "-", "1", "}", "\n", "", "else", ":", "\n", "        ", "spare_ixs", "=", "set", "(", ")", "\n", "", "racks", "=", "[", "]", "\n", "end_t", "=", "100000", "\n", "terminal_evnt", "=", "Evnt", "(", "end_t", ",", "\"terminal\"", ",", "None", ")", "\n", "hp", "=", "Heap", "(", ")", "\n", "hp", ".", "push", "(", "terminal_evnt", ")", "\n", "ups", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "lmbds", ")", ")", ":", "\n", "        ", "if", "i", "not", "in", "spare_ixs", ":", "\n", "            ", "rck", "=", "Rack", "(", "i", ",", "0", ",", "lmbds", "[", "i", "]", ",", "mus", "[", "i", "]", ",", "1", ")", "\n", "t_dwn", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lmbds", "[", "i", "]", ")", "\n", "ev", "=", "Evnt", "(", "t_dwn", ",", "rack", "=", "rck", ")", "\n", "hp", ".", "push", "(", "ev", ")", "\n", "ups", "+=", "1", "\n", "", "else", ":", "\n", "            ", "rck", "=", "Rack", "(", "i", ",", "1", ",", "lmbds", "[", "i", "]", ",", "mus", "[", "i", "]", ",", "1", ")", "\n", "", "racks", ".", "append", "(", "rck", ")", "\n", "\n", "", "no_sh_dwns", "=", "0", "\n", "prev_t", "=", "0", "\n", "total_up_t", "=", "0", "\n", "while", "True", ":", "\n", "        ", "ev", "=", "hp", ".", "pop", "(", ")", "\n", "curr_t", "=", "ev", ".", "change_t", "\n", "total_up_t", "+=", "(", "curr_t", "-", "prev_t", ")", "*", "ups", "\n", "if", "ev", ".", "type", "==", "\"terminal\"", ":", "\n", "            ", "break", "\n", "", "elif", "ev", ".", "type", "==", "'rack_state_ch'", ":", "\n", "# UP going DOWN", "\n", "            ", "if", "ev", ".", "rack", ".", "av", "==", "1", ":", "\n", "                ", "ev", ".", "rack", ".", "av", "=", "0", "\n", "nx_t", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "ev", ".", "rack", ".", "mu", ")", "\n", "ev", ".", "change_t", "=", "curr_t", "+", "nx_t", "\n", "if", "len", "(", "spare_ixs", ")", "==", "1", ":", "\n", "                    ", "ev", ".", "rack", ".", "is_spare", "=", "1", "\n", "spare_ix", "=", "spare_ixs", ".", "pop", "(", ")", "\n", "rck", "=", "racks", "[", "spare_ix", "]", "\n", "rck", ".", "is_spare", "=", "0", "\n", "nx_t", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "rck", ".", "lmb", ")", "\n", "ev1", "=", "Evnt", "(", "curr_t", "+", "nx_t", ",", "rack", "=", "rck", ")", "\n", "hp", ".", "push", "(", "ev1", ")", "\n", "", "elif", "len", "(", "spare_ixs", ")", "==", "0", ":", "\n", "                    ", "ups", "-=", "1", "\n", "no_sh_dwns", "+=", "1", "\n", "", "hp", ".", "push", "(", "ev", ")", "\n", "# DOWN going UP", "\n", "", "else", ":", "\n", "                ", "ev", ".", "rack", ".", "av", "=", "1", "\n", "# For now we assume that if the spare comes", "\n", "# back and there are still racks down, their", "\n", "# VMs are not service healed to this freshly", "\n", "# available rack.", "\n", "if", "ev", ".", "rack", ".", "is_spare", "==", "1", ":", "\n", "                    ", "spare_ixs", ".", "add", "(", "ev", ".", "rack", ".", "ix", ")", "\n", "", "else", ":", "\n", "                    ", "ups", "+=", "1", "\n", "nx_t", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "ev", ".", "rack", ".", "lmb", ")", "\n", "ev", ".", "change_t", "=", "curr_t", "+", "nx_t", "\n", "hp", ".", "push", "(", "ev", ")", "\n", "", "", "", "prev_t", "=", "curr_t", "\n", "", "return", "no_sh_dwns", ",", "total_up_t", ",", "no_sh_dwns", "/", "total_up_t", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_av": [[9, 11], ["scipy.stats.binom.sf"], "function", ["None"], ["def", "k_of_n_av", "(", "k", ",", "n", ",", "p", ")", ":", "\n", "    ", "return", "binom", ".", "sf", "(", "k", "-", "1", ",", "n", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_rate": [[13, 16], ["scipy.stats.binom.sf", "scipy.stats.binom.pmf"], "function", ["None"], ["", "def", "k_of_n_rate", "(", "k", "=", "2", ",", "n", "=", "3", ",", "lmb", "=", "2", ",", "mu", "=", "6", ")", ":", "\n", "    ", "p", "=", "mu", "/", "(", "lmb", "+", "mu", ")", "\n", "return", "n", "*", "lmb", "*", "p", "*", "binom", ".", "pmf", "(", "k", "-", "1", ",", "n", "-", "1", ",", "p", ")", "/", "binom", ".", "sf", "(", "k", "-", "1", ",", "n", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_repair_rate": [[19, 24], ["k_of_n.k_of_n_av", "k_of_n.k_of_n_rate"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_rate"], ["", "def", "k_of_n_repair_rate", "(", "k", "=", "2", ",", "n", "=", "3", ",", "lmb", "=", "2", ",", "mu", "=", "6", ")", ":", "\n", "## Per equation 9.33 of Ross", "\n", "    ", "p", "=", "mu", "/", "(", "lmb", "+", "mu", ")", "\n", "av", "=", "k_of_n_av", "(", "k", ",", "n", ",", "p", ")", "\n", "return", "k_of_n_rate", "(", "k", ",", "n", ",", "lmb", ",", "mu", ")", "*", "av", "/", "(", "1", "-", "av", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_sim": [[26, 43], ["range", "pandas.concat", "dat.sort_values.sort_values", "algorith.arrays.birth_death.cad_as_violations.system_down_intervals", "sum", "sum", "stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "nodes.append", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.birth_death_gen.birth_death_gen"], ["", "def", "k_of_n_sim", "(", "k", "=", "2", ",", "n", "=", "3", ",", "lmb", "=", "2", ",", "mu", "=", "6", ")", ":", "\n", "    ", "nodes", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n", ")", ":", "\n", "        ", "node1", "=", "birth_death_gen", "(", "lmb", ",", "mu", ",", "1e4", ")", "\n", "node1", "=", "node1", "[", "(", "node1", ".", "start", ">", "7e3", ")", "&", "(", "node1", ".", "state", "==", "\"down\"", ")", "]", "\n", "nodes", ".", "append", "(", "node1", ")", "\n", "", "dat", "=", "pd", ".", "concat", "(", "nodes", ")", "\n", "dat", "=", "dat", ".", "sort_values", "(", "by", "=", "[", "'start'", "]", ")", "\n", "dat1", "=", "system_down_intervals", "(", "np", ".", "array", "(", "dat", ".", "start", ")", ",", "np", ".", "array", "(", "dat", ".", "end", ")", ",", "n", "-", "k", "+", "1", ")", "\n", "interruptions", "=", "sum", "(", "dat1", ".", "down", ")", "\n", "dat1", "=", "dat1", "[", "dat1", ".", "down", "==", "1", "]", "\n", "down_time", "=", "sum", "(", "dat1", ".", "end", "-", "dat1", ".", "start", ")", "\n", "up_time", "=", "3000", "-", "down_time", "\n", "rate", "=", "interruptions", "/", "(", "up_time", ")", "\n", "av", "=", "up_time", "/", "3000", "\n", "return", "av", ",", "rate", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.tst_av_2_of_3": [[47, 86], ["stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "pandas.concat", "node_dat.sort_values.sort_values", "algorith.arrays.birth_death.cad_as_violations.complete_intervals", "range", "sum", "print", "print", "k_of_n.k_of_n_av", "k_of_n.k_of_n_rate", "print", "print", "len", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_rate"], ["", "def", "tst_av_2_of_3", "(", ")", ":", "\n", "    ", "\"\"\"\n    Check that the simulated availability of a 2-of-3\n    system matches the closed form expression.\n    \"\"\"", "\n", "lmb", "=", "2", "\n", "mu", "=", "6", "\n", "node1", "=", "birth_death_gen", "(", "lmb", ",", "mu", ",", "1e4", ")", "\n", "node2", "=", "birth_death_gen", "(", "lmb", ",", "mu", ",", "1e4", ")", "\n", "node3", "=", "birth_death_gen", "(", "lmb", ",", "mu", ",", "1e4", ")", "\n", "\n", "node1", "=", "node1", "[", "node1", ".", "start", ">", "7e3", "]", "\n", "node2", "=", "node2", "[", "node2", ".", "start", ">", "7e3", "]", "\n", "node3", "=", "node3", "[", "node3", ".", "start", ">", "7e3", "]", "\n", "\n", "node_dat", "=", "pd", ".", "concat", "(", "[", "node1", ",", "node2", ",", "node3", "]", ")", "\n", "node_dat", "=", "node_dat", "[", "node_dat", ".", "state", "==", "\"down\"", "]", "\n", "node_dat", "=", "node_dat", ".", "sort_values", "(", "by", "=", "[", "'start'", "]", ")", "\n", "\n", "dd", "=", "complete_intervals", "(", "node_dat", ")", "\n", "down_evnts", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "dd", ")", ")", ":", "\n", "        ", "if", "dd", ".", "vms_down", "[", "i", "]", "==", "2", ":", "\n", "            ", "if", "dd", ".", "vms_down", "[", "i", "-", "1", "]", "<", "2", ":", "\n", "                ", "down_evnts", "+=", "1", "\n", "\n", "#up_durtn = sum(ups.end-ups.start)", "\n", "", "", "", "dd", "=", "dd", "[", "dd", ".", "vms_down", ">=", "2", "]", "\n", "down_durtn", "=", "sum", "(", "dd", ".", "end", "-", "dd", ".", "start", ")", "\n", "up_durtn", "=", "3000", "-", "down_durtn", "\n", "print", "(", "\"Simulated availability: \"", "+", "str", "(", "1", "-", "down_durtn", "/", "3000", ")", ")", "\n", "print", "(", "\"Failure rate: \"", "+", "str", "(", "down_evnts", "/", "up_durtn", ")", ")", "\n", "\n", "### Closed form..", "\n", "p", "=", "mu", "/", "(", "lmb", "+", "mu", ")", "\n", "av", "=", "k_of_n_av", "(", "2", ",", "3", ",", "p", ")", "\n", "rate", "=", "k_of_n_rate", "(", "2", ",", "3", ",", "lmb", ",", "mu", ")", "\n", "print", "(", "\"Closed form availability: \"", "+", "str", "(", "av", ")", ")", "\n", "print", "(", "\"Closed form rate: \"", "+", "str", "(", "rate", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.tst_2_of_2": [[88, 104], ["stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "pandas.concat", "dat.sort_values.sort_values", "algorith.arrays.birth_death.cad_as_violations.complete_intervals", "interrupts", "sum", "print", "print"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.interrupts"], ["", "def", "tst_2_of_2", "(", ")", ":", "\n", "    ", "node1", "=", "birth_death_gen", "(", "1", ",", "2", ",", "1e4", ")", "\n", "node1", "=", "node1", "[", "(", "node1", ".", "start", ">", "7e3", ")", "&", "(", "node1", ".", "state", "==", "\"down\"", ")", "]", "\n", "node2", "=", "birth_death_gen", "(", "1", ",", "2", ",", "1e4", ")", "\n", "node2", "=", "node2", "[", "(", "node2", ".", "start", ">", "7e3", ")", "&", "(", "node2", ".", "state", "==", "\"down\"", ")", "]", "\n", "dat", "=", "pd", ".", "concat", "(", "[", "node1", ",", "node2", "]", ")", "\n", "dat", "=", "dat", ".", "sort_values", "(", "by", "=", "[", "'start'", "]", ")", "\n", "\n", "res", "=", "complete_intervals", "(", "dat", ")", "\n", "downs", "=", "interrupts", "(", "res", ".", "down", ",", "1", ")", "\n", "down_durtns", "=", "(", "res", ".", "end", "-", "res", ".", "start", ")", "[", "res", ".", "down", ">=", "1", "]", "\n", "down_durtn", "=", "sum", "(", "down_durtns", ")", "\n", "lmb", "=", "downs", "/", "(", "3000", "-", "down_durtn", ")", "\n", "mu", "=", "downs", "/", "down_durtn", "\n", "print", "(", "lmb", ")", "\n", "print", "(", "mu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.LPodKOfN.__init__": [[143, 149], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "k", ",", "n", ",", "l", ",", "mc_rates", ",", "pod_rates", ")", ":", "\n", "        ", "self", ".", "k", "=", "k", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "l", "=", "l", "\n", "self", ".", "lmb_mc", ",", "self", ".", "mu_mc", "=", "mc_rates", "\n", "self", ".", "lmb_pod", ",", "self", ".", "mu_pod", "=", "pod_rates", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.LPodKOfN.sim": [[150, 173], ["numpy.ceil", "int", "int", "range", "range", "pandas.concat", "dat.sort_values.sort_values.sort_values", "algorith.arrays.birth_death.cad_as_violations.num_down_w_times_v1", "pandas.DataFrame", "l_pod_k_of_n.sim_one_pod", "nodes.append", "l_pod_k_of_n.sim_one_pod", "nodes.append", "numpy.array", "numpy.array", "numpy.array", "len"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.sim_one_pod", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.sim_one_pod"], ["", "def", "sim", "(", "self", ",", "durtn", ")", ":", "\n", "        ", "sim_durtn", "=", "durtn", "\n", "ceil", "=", "np", ".", "ceil", "(", "self", ".", "n", "/", "self", ".", "l", ")", "\n", "flr", "=", "ceil", "-", "1", "\n", "h", "=", "int", "(", "self", ".", "n", "-", "self", ".", "l", "*", "flr", ")", "\n", "j", "=", "int", "(", "self", ".", "l", "*", "ceil", "-", "self", ".", "n", ")", "\n", "nodes", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "h", ")", ":", "\n", "            ", "pod_nodes", "=", "sim_one_pod", "(", "ceil", ",", "self", ".", "lmb_mc", ",", "self", ".", "mu_mc", ",", "\n", "self", ".", "lmb_pod", ",", "self", ".", "mu_pod", ",", "\n", "durtn", ",", "sim_durtn", ")", "\n", "nodes", ".", "append", "(", "pod_nodes", ")", "\n", "", "for", "_", "in", "range", "(", "j", ")", ":", "\n", "            ", "pod_nodes", "=", "sim_one_pod", "(", "flr", ",", "self", ".", "lmb_mc", ",", "self", ".", "mu_mc", ",", "\n", "self", ".", "lmb_pod", ",", "self", ".", "mu_pod", ",", "\n", "durtn", ",", "sim_durtn", ")", "\n", "nodes", ".", "append", "(", "pod_nodes", ")", "\n", "", "dat", "=", "pd", ".", "concat", "(", "nodes", ")", "\n", "dat", "=", "dat", ".", "sort_values", "(", "by", "=", "[", "'start'", "]", ")", "\n", "ds", ",", "ts", "=", "num_down_w_times_v1", "(", "np", ".", "array", "(", "dat", ".", "start", ")", ",", "\n", "np", ".", "array", "(", "dat", ".", "end", ")", ",", "np", ".", "array", "(", "dat", ".", "down", ")", ")", "\n", "self", ".", "res_df", "=", "pd", ".", "DataFrame", "(", "{", "'start'", ":", "ts", "[", ":", "len", "(", "ts", ")", "-", "1", "]", ",", "'end'", ":", "ts", "[", "1", ":", "]", ",", "\n", "'down'", ":", "ds", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av": [[13, 38], ["numpy.ceil", "int", "int", "range", "range", "scipy.stats.binom.sf", "scipy.stats.binom.pmf", "scipy.stats.binom.pmf"], "function", ["None"], ["def", "l_pod_k_of_n_av", "(", "l", ",", "n", ",", "k", ",", "p", ",", "q", ",", "pod_less_mcs", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    See here: https://math.stackexchange.com/questions/3825082/reliability-of-an-l-pod-k-of-n-system?noredirect=1#comment7888736_3825082\n    Answer matches with legacy method: pffc_resiliency(3,7,.9,.8,1)==l_pod_k_of_n(3,7,4,0.9,0.8)\n    args:\n        pod_less_mcs: This is a parameter for the AIR formula. \n                Machines for whom the pod is garunteed to work.\n    \"\"\"", "\n", "ceil", "=", "np", ".", "ceil", "(", "n", "/", "l", ")", "\n", "flr", "=", "ceil", "-", "1", "\n", "## Num of hero and joe pods.", "\n", "# A hero pod has one more machine", "\n", "# than a joe pod.", "\n", "h", "=", "int", "(", "n", "-", "l", "*", "flr", ")", "\n", "j", "=", "int", "(", "l", "*", "ceil", "-", "n", ")", "\n", "prob", "=", "0.0", "\n", "## All combinations of hero and joe pod availability.", "\n", "for", "h1", "in", "range", "(", "h", "+", "1", ")", ":", "\n", "        ", "for", "j1", "in", "range", "(", "j", "+", "1", ")", ":", "\n", "#Num of available machines with these many pods.", "\n", "            ", "nn", "=", "h1", "*", "ceil", "+", "j1", "*", "flr", "+", "pod_less_mcs", "\n", "if", "nn", ">=", "k", ":", "\n", "## We get a k of nn system among the machines.", "\n", "                ", "prob", "+=", "binom", ".", "pmf", "(", "h1", ",", "h", ",", "q", ")", "*", "binom", ".", "pmf", "(", "j1", ",", "j", ",", "q", ")", "*", "binom", ".", "sf", "(", "k", "-", "1", ",", "nn", ",", "p", ")", "\n", "", "", "", "return", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_rate": [[40, 98], ["numpy.ceil", "int", "int", "l_pod_k_of_n.l_pod_k_of_n_av", "stochproc.birth_death_processes.reliability.k_of_n.k_of_n_av", "l_pod_k_of_n.l_pod_k_of_n_av", "l_pod_k_of_n.l_pod_k_of_n_av", "l_pod_k_of_n.l_pod_k_of_n_av", "l_pod_k_of_n.l_pod_k_of_n_av", "l_pod_k_of_n.l_pod_k_of_n_av", "l_pod_k_of_n.l_pod_k_of_n_av", "l_pod_k_of_n.l_pod_k_of_n_av", "l_pod_k_of_n.l_pod_k_of_n_av", "stochproc.birth_death_processes.reliability.k_of_n.k_of_n_av", "stochproc.birth_death_processes.reliability.k_of_n.k_of_n_av"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_av"], ["", "def", "l_pod_k_of_n_rate", "(", "l", ",", "n", ",", "k", ",", "lmb_mc", ",", "mu_mc", ",", "lmb_pod", ",", "mu_pod", ")", ":", "\n", "    ", "p", "=", "mu_mc", "/", "(", "mu_mc", "+", "lmb_mc", ")", "\n", "q", "=", "mu_pod", "/", "(", "mu_pod", "+", "lmb_pod", ")", "\n", "ceil", "=", "np", ".", "ceil", "(", "n", "/", "l", ")", "\n", "flr", "=", "ceil", "-", "1", "\n", "## Num of hero and joe pods.", "\n", "# A hero pod has one more machine ", "\n", "# than a joe pod.", "\n", "h", "=", "int", "(", "n", "-", "l", "*", "flr", ")", "\n", "j", "=", "int", "(", "l", "*", "ceil", "-", "n", ")", "\n", "#Total number of machines in hero and", "\n", "# joe pods.", "\n", "n_h", "=", "h", "*", "ceil", "\n", "n_j", "=", "j", "*", "flr", "\n", "# Numerator of the AIR term.", "\n", "#First, the hero pods", "\n", "if", "l", ">", "1", ":", "\n", "        ", "numr1", "=", "h", "*", "(", "l_pod_k_of_n_av", "(", "l", "-", "1", ",", "n", "-", "ceil", ",", "k", ",", "p", ",", "q", ",", "ceil", ")", "-", "l_pod_k_of_n_av", "(", "l", "-", "1", ",", "n", "-", "ceil", ",", "k", ",", "p", ",", "q", ")", ")", "\n", "", "else", ":", "\n", "        ", "numr1", "=", "k_of_n_av", "(", "k", ",", "n", ",", "p", ")", "\n", "#Next, the joe pods", "\n", "", "if", "l", ">", "1", ":", "\n", "        ", "numr2", "=", "j", "*", "(", "l_pod_k_of_n_av", "(", "l", "-", "1", ",", "n", "-", "flr", ",", "k", ",", "p", ",", "q", ",", "flr", ")", "-", "l_pod_k_of_n_av", "(", "l", "-", "1", ",", "n", "-", "flr", ",", "k", ",", "p", ",", "q", ")", ")", "\n", "", "else", ":", "\n", "        ", "numr2", "=", "0", "\n", "#Next, the hero machines", "\n", "", "if", "l", ">", "1", ":", "\n", "## Condition on the pod of the hero machine in qn.", "\n", "        ", "hero_mc_up", "=", "q", "*", "l_pod_k_of_n_av", "(", "l", ",", "n", "-", "1", ",", "k", "-", "1", ",", "p", ",", "q", ")", "#        + (1-q)*l_pod_k_of_n_av(l-1,n-ceil,k,p,q)", "\n", "hero_mc_down", "=", "q", "*", "l_pod_k_of_n_av", "(", "l", ",", "n", "-", "1", ",", "k", ",", "p", ",", "q", ")", "#        + (1-q)*l_pod_k_of_n_av(l-1,n-ceil,k,p,q)", "\n", "numr3", "=", "n_h", "*", "(", "hero_mc_up", "-", "hero_mc_down", ")", "\n", "", "else", ":", "\n", "        ", "numr3", "=", "n_h", "*", "q", "*", "(", "k_of_n_av", "(", "k", "-", "1", ",", "n", "-", "1", ",", "p", ")", "-", "k_of_n_av", "(", "k", ",", "n", "-", "1", ",", "p", ")", ")", "\n", "#Next, the joe machines", "\n", "## First, availability when this Joe M/C is up.", "\n", "# Note that the second part is not needed since ", "\n", "# it cancels out with the next term.", "\n", "", "if", "l", ">", "1", ":", "\n", "        ", "joe_mc_up", "=", "q", "*", "l_pod_k_of_n_av", "(", "l", "-", "1", ",", "n", "-", "flr", ",", "k", "-", "1", ",", "p", ",", "q", ",", "flr", "-", "1", ")", "\n", "#           +(1-q)*l_pod_k_of_n_av(l-1,n-flr,k,p,q)", "\n", "#", "\n", "## Next, the availability when this Joe M/C is down.", "\n", "joe_mc_down", "=", "q", "*", "l_pod_k_of_n_av", "(", "l", "-", "1", ",", "n", "-", "flr", ",", "k", ",", "p", ",", "q", ",", "flr", "-", "1", ")", "\n", "#            +(1-q)*l_pod_k_of_n_av(l-1,n-flr,k,p,q)", "\n", "#", "\n", "numr4", "=", "n_j", "*", "(", "joe_mc_up", "-", "joe_mc_down", ")", "\n", "", "else", ":", "\n", "## If there is only one pod, there will be no Joe machines.", "\n", "        ", "numr4", "=", "0", "\n", "## Now the final numerator:", "\n", "", "numr", "=", "q", "*", "lmb_pod", "*", "(", "numr1", "+", "numr2", ")", "+", "p", "*", "lmb_mc", "*", "(", "numr3", "+", "numr4", ")", "\n", "## Now the denominator, which is just reliability", "\n", "denom", "=", "l_pod_k_of_n_av", "(", "l", ",", "n", ",", "k", ",", "p", ",", "q", ")", "\n", "return", "numr", "/", "denom", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av_legacy": [[100, 124], ["l_pod_k_of_n.striping", "numpy.array", "algorith.arrays.num_systems.dynamic_base.GenBase", "int", "range", "numpy.prod", "algorith.arrays.num_systems.dynamic_base.GenBase.add_one", "sum", "scipy.special.comb", "range", "algorith.arrays.num_systems.dynamic_base.to_binary", "range", "numpy.prod", "sum", "sum", "int"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.striping", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.to_binary"], ["", "def", "l_pod_k_of_n_av_legacy", "(", "n", "=", "7", ",", "l", "=", "3", ",", "k", "=", "4", ")", ":", "\n", "    ", "\"\"\"\n    This has an exponential complexity with l.\n    \"\"\"", "\n", "p_n", "=", "0.9", ";", "p_r", "=", "0.9", "\n", "h", ",", "j", ",", "alpha", ",", "beta", "=", "striping", "(", "l", ",", "n", ")", "\n", "machines_per_pod", "=", "np", ".", "array", "(", "[", "(", "alpha", "if", "i", "<", "h", "else", "beta", ")", "for", "i", "in", "range", "(", "int", "(", "h", "+", "j", ")", ")", "]", ")", "\n", "arr", "=", "GenBase", "(", "machines_per_pod", ")", "\n", "tot", "=", "int", "(", "np", ".", "prod", "(", "arr", ".", "bases", "+", "1", ")", ")", "\n", "prob", "=", "0.0", "\n", "for", "_", "in", "range", "(", "tot", "-", "1", ")", ":", "\n", "        ", "arr", ".", "add_one", "(", ")", "\n", "up_nodes", "=", "sum", "(", "arr", ".", "arr_vals", ")", "\n", "binoms", "=", "comb", "(", "arr", ".", "bases", ",", "arr", ".", "arr_vals", ")", "\n", "wt", "=", "np", ".", "prod", "(", "binoms", ")", "*", "p_n", "**", "(", "up_nodes", ")", "*", "(", "1", "-", "p_n", ")", "**", "(", "n", "-", "up_nodes", ")", "\n", "for", "j", "in", "range", "(", "2", "**", "l", ")", ":", "\n", "            ", "aa", "=", "to_binary", "(", "j", ",", "n", ")", "\n", "if", "sum", "(", "arr", ".", "arr_vals", "*", "aa", ")", ">=", "k", ":", "\n", "                ", "rows_up", "=", "sum", "(", "aa", ")", "\n", "wts", "=", "arr", ".", "arr_vals", "[", "aa", ">", "0", "]", "\n", "wts", "=", "wts", "[", "wts", ">", "0", "]", "##Controvertial.", "\n", "", "prob", "+=", "wt", "*", "p_r", "**", "rows_up", "*", "(", "1", "-", "p_r", ")", "**", "(", "n", "-", "rows_up", ")", "\n", "", "", "return", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.striping": [[126, 140], ["numpy.ceil", "float"], "function", ["None"], ["", "def", "striping", "(", "l", "=", "3", ",", "n", "=", "7", ")", ":", "\n", "    ", "\"\"\"\n    Given the number of PF-rows and replicas, uniformly\n    distributes the PF-rows among the replicas. With a uniform\n    striping, we will have two kinds of rows, one kind having\n    one more replica than the other kind. This method returns\n    the number of rows of each kind (h and j) and the number\n    of replicas in each of the row-kinds.\n    \"\"\"", "\n", "alpha", "=", "np", ".", "ceil", "(", "float", "(", "n", ")", "/", "l", ")", "\n", "beta", "=", "alpha", "-", "1", "\n", "h", "=", "n", "-", "l", "*", "(", "alpha", "-", "1", ")", "\n", "j", "=", "l", "*", "alpha", "-", "n", "\n", "return", "(", "h", ",", "j", ",", "alpha", ",", "beta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_sim": [[178, 207], ["numpy.ceil", "int", "int", "range", "range", "pandas.concat", "dat.sort_values.sort_values", "algorith.arrays.birth_death.cad_as_violations.num_down_w_times_v1", "pandas.DataFrame", "sum", "l_pod_k_of_n.interrupts", "l_pod_k_of_n.sim_one_pod", "nodes.append", "l_pod_k_of_n.sim_one_pod", "nodes.append", "numpy.array", "numpy.array", "numpy.array", "len"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.interrupts", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.sim_one_pod", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.sim_one_pod"], ["", "", "def", "l_pod_k_of_n_sim", "(", "l", ",", "n", ",", "k", ",", "lmb_mc", ",", "mu_mc", ",", "lmb_pod", ",", "mu_pod", ",", "\n", "durtn", "=", "9000", ",", "sim_durtn", "=", "1e4", ")", ":", "\n", "    ", "ceil", "=", "np", ".", "ceil", "(", "n", "/", "l", ")", "\n", "flr", "=", "ceil", "-", "1", "\n", "h", "=", "int", "(", "n", "-", "l", "*", "flr", ")", "\n", "j", "=", "int", "(", "l", "*", "ceil", "-", "n", ")", "\n", "nodes", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "h", ")", ":", "\n", "        ", "pod_nodes", "=", "sim_one_pod", "(", "ceil", ",", "lmb_mc", ",", "mu_mc", ",", "lmb_pod", ",", "mu_pod", ",", "\n", "durtn", ",", "sim_durtn", ")", "\n", "nodes", ".", "append", "(", "pod_nodes", ")", "\n", "", "for", "_", "in", "range", "(", "j", ")", ":", "\n", "        ", "pod_nodes", "=", "sim_one_pod", "(", "flr", ",", "lmb_mc", ",", "mu_mc", ",", "lmb_pod", ",", "mu_pod", ",", "\n", "durtn", ",", "sim_durtn", ")", "\n", "nodes", ".", "append", "(", "pod_nodes", ")", "\n", "", "dat", "=", "pd", ".", "concat", "(", "nodes", ")", "\n", "dat", "=", "dat", ".", "sort_values", "(", "by", "=", "[", "'start'", "]", ")", "\n", "ds", ",", "ts", "=", "num_down_w_times_v1", "(", "np", ".", "array", "(", "dat", ".", "start", ")", ",", "\n", "np", ".", "array", "(", "dat", ".", "end", ")", ",", "np", ".", "array", "(", "dat", ".", "down", ")", ")", "\n", "res_df", "=", "pd", ".", "DataFrame", "(", "{", "'start'", ":", "ts", "[", ":", "len", "(", "ts", ")", "-", "1", "]", ",", "'end'", ":", "ts", "[", "1", ":", "]", ",", "'down'", ":", "ds", "}", ")", "\n", "durtns", "=", "res_df", ".", "end", "-", "res_df", ".", "start", "\n", "res_df", "=", "res_df", "[", "durtns", ">", "0", "]", "\n", "downs", "=", "res_df", "[", "res_df", ".", "down", ">=", "n", "-", "k", "+", "1", "]", "\n", "down_durtn", "=", "sum", "(", "downs", ".", "end", "-", "downs", ".", "start", ")", "\n", "up_durtn", "=", "durtn", "-", "down_durtn", "\n", "av", "=", "up_durtn", "/", "durtn", "\n", "downs", "=", "interrupts", "(", "res_df", ".", "down", ",", "n", "-", "k", "+", "1", ")", "\n", "air", "=", "downs", "/", "up_durtn", "\n", "return", "av", ",", "air", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.sim_one_pod": [[209, 238], ["range", "pandas.concat", "dat.sort_values.sort_values", "stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "pandas.concat", "pod_dat.sort_values.sort_values", "algorith.arrays.birth_death.cad_as_violations.num_down_w_times_v1", "pandas.DataFrame", "print", "int", "stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "nodes.append", "algorith.arrays.birth_death.cad_as_violations.complete_intervals", "numpy.array", "numpy.array", "numpy.array", "len"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.birth_death_gen.birth_death_gen"], ["", "def", "sim_one_pod", "(", "machines", ",", "lmb_mc", ",", "mu_mc", ",", "lmb_pod", ",", "mu_pod", ",", "\n", "durtn", "=", "9000", ",", "sim_durtn", "=", "1e4", ")", ":", "\n", "    ", "if", "durtn", ">", "sim_durtn", ":", "\n", "        ", "print", "(", "\"taking entire duration\"", ")", "\n", "durtn", "=", "sim_durtn", "\n", "", "nodes", "=", "[", "]", "\n", "cut_pt", "=", "sim_durtn", "-", "durtn", "\n", "for", "_", "in", "range", "(", "int", "(", "machines", ")", ")", ":", "\n", "        ", "node1", "=", "birth_death_gen", "(", "lmb_mc", ",", "mu_mc", ",", "sim_durtn", ")", "\n", "node1", "=", "node1", "[", "(", "node1", ".", "start", ">", "cut_pt", ")", "&", "(", "node1", ".", "state", "==", "\"down\"", ")", "]", "\n", "nodes", ".", "append", "(", "node1", ")", "\n", "", "dat", "=", "pd", ".", "concat", "(", "nodes", ")", "\n", "dat", "=", "dat", ".", "sort_values", "(", "by", "=", "[", "'start'", "]", ")", "\n", "dat1", "=", "complete_intervals", "(", "dat", ")", "[", "[", "'start'", ",", "'end'", ",", "'down'", "]", "]", "\n", "# Now simulate the pod..", "\n", "pod1", "=", "birth_death_gen", "(", "lmb_pod", ",", "mu_pod", ",", "sim_durtn", ")", "\n", "pod1", "=", "pod1", "[", "(", "pod1", ".", "start", ">", "cut_pt", ")", "&", "(", "pod1", ".", "state", "==", "\"down\"", ")", "]", "\n", "pod1", "[", "\"down\"", "]", "=", "machines", "\n", "pod1", "=", "pod1", "[", "[", "'start'", ",", "'end'", ",", "'down'", "]", "]", "\n", "pod_dat", "=", "pd", ".", "concat", "(", "[", "dat1", ",", "pod1", "]", ")", "\n", "pod_dat", "=", "pod_dat", ".", "sort_values", "(", "by", "=", "[", "'start'", "]", ")", "\n", "ds", ",", "ts", "=", "num_down_w_times_v1", "(", "np", ".", "array", "(", "pod_dat", ".", "start", ")", ",", "\n", "np", ".", "array", "(", "pod_dat", ".", "end", ")", ",", "\n", "np", ".", "array", "(", "pod_dat", ".", "down", ")", ")", "\n", "ds", "[", "ds", ">", "machines", "]", "=", "machines", "\n", "res_df", "=", "pd", ".", "DataFrame", "(", "{", "'start'", ":", "ts", "[", ":", "len", "(", "ts", ")", "-", "1", "]", ",", "'end'", ":", "ts", "[", "1", ":", "]", ",", "'down'", ":", "ds", "}", ")", "\n", "durtns", "=", "res_df", ".", "end", "-", "res_df", ".", "start", "\n", "res_df", "=", "res_df", "[", "durtns", ">", "0", "]", "\n", "return", "res_df", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.interrupts": [[240, 248], ["numpy.array"], "function", ["None"], ["", "def", "interrupts", "(", "downs", ",", "k", ")", ":", "\n", "    ", "prev_dwn", "=", "0", "\n", "interrupts", "=", "0", "\n", "for", "dwn", "in", "np", ".", "array", "(", "downs", ")", ":", "\n", "        ", "if", "prev_dwn", "<", "k", "and", "dwn", ">=", "k", ":", "\n", "            ", "interrupts", "+=", "1", "\n", "", "prev_dwn", "=", "dwn", "\n", "", "return", "interrupts", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.tst": [[250, 293], ["l_pod_k_of_n.l_pod_k_of_n_sim", "l_pod_k_of_n.l_pod_k_of_n_av", "l_pod_k_of_n.l_pod_k_of_n_rate", "stochproc.birth_death_processes.reliability.k_of_n.k_of_n_rate", "l_pod_k_of_n.l_pod_k_of_n_sim", "l_pod_k_of_n.l_pod_k_of_n_rate", "l_pod_k_of_n.l_pod_k_of_n_sim", "l_pod_k_of_n.l_pod_k_of_n_av", "l_pod_k_of_n.l_pod_k_of_n_rate", "stochproc.birth_death_processes.reliability.k_of_n.k_of_n_rate", "l_pod_k_of_n.l_pod_k_of_n_sim", "l_pod_k_of_n.l_pod_k_of_n_rate", "l_pod_k_of_n.l_pod_k_of_n_av", "stochproc.birth_death_processes.reliability.k_of_n.k_of_n_rate", "l_pod_k_of_n.l_pod_k_of_n_sim", "l_pod_k_of_n.l_pod_k_of_n_rate", "l_pod_k_of_n.l_pod_k_of_n_rate", "stochproc.birth_death_processes.reliability.k_of_n.k_of_n_rate", "l_pod_k_of_n.l_pod_k_of_n_rate", "stochproc.birth_death_processes.reliability.k_of_n.k_of_n_rate", "l_pod_k_of_n.l_pod_k_of_n_rate", "stochproc.birth_death_processes.reliability.k_of_n.k_of_n_rate", "l_pod_k_of_n.l_pod_k_of_n_av", "stochproc.birth_death_processes.reliability.k_of_n.k_of_n_av", "l_pod_k_of_n.l_pod_k_of_n_sim", "l_pod_k_of_n.l_pod_k_of_n_av", "l_pod_k_of_n.l_pod_k_of_n_sim"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_sim", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_sim", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_sim", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_sim", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_sim", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.k_of_n.k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_sim", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_av", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_sim"], ["", "def", "tst", "(", ")", ":", "\n", "    ", "av_sim", "=", "l_pod_k_of_n_sim", "(", "1", ",", "3", ",", "2", ",", "1", ",", "2", ",", "1", ",", "2", ")", "\n", "av_real", "=", "l_pod_k_of_n_av", "(", "1", ",", "3", ",", "2", ",", "0.66666", ",", "0.666666", ")", "\n", "\n", "### with one pod that's almost always available, we get a k-of-n system.", "\n", "## Note that the rate does not depend on mu of pods (last argument).", "\n", "l_pod_k_of_n_rate", "(", "1", ",", "3", ",", "2", ",", "1", ",", "2", ",", ".01", ",", "1", ")", "\n", "k_of_n_rate", "(", "2", ",", "3", ",", "1", ",", "2", ")", "\n", "\n", "l", "=", "3", ";", "n", "=", "3", ";", "k", "=", "2", ";", "p", "=", "2", "/", "(", "1", "+", "2", ")", ";", "q", "=", "2", "/", "(", "1", "+", "2", ")", "\n", "diff", "=", "(", "l_pod_k_of_n_sim", "(", "3", ",", "3", ",", "2", ",", "1", ",", "2", ",", "1", ",", "2", ")", "[", "0", "]", "-", "l_pod_k_of_n_av", "(", "l", ",", "n", ",", "k", ",", "p", ",", "q", ")", ")", "/", "l_pod_k_of_n_av", "(", "l", ",", "n", ",", "k", ",", "p", ",", "q", ")", "\n", "\n", "l_pod_k_of_n_sim", "(", "1", ",", "2", ",", "2", ",", "1", ",", "2", ",", "1", ",", "2", ")", "\n", ".6666667", "*", "k_of_n_av", "(", "2", ",", "2", ",", ".6666666", ")", "\n", "\n", "l_pod_k_of_n_sim", "(", "1", ",", "3", ",", "2", ",", "1", ",", "2", ",", "1", ",", "2", ")", "[", "1", "]", "\n", "l_pod_k_of_n_rate", "(", "1", ",", "3", ",", "2", ",", "1", ",", "2", ",", "1", ",", "2", ")", "\n", "\n", "\n", "### with n==l pods, we get k-of-n system.", "\n", "av", ",", "rate", "=", "l_pod_k_of_n_sim", "(", "3", ",", "3", ",", "2", ",", "1", ",", "2", ",", "1", ",", "2", ")", "\n", "av1", "=", "l_pod_k_of_n_av", "(", "3", ",", "3", ",", "2", ",", ".6666666", ",", ".66666666", ")", "\n", "rate1", "=", "l_pod_k_of_n_rate", "(", "3", ",", "3", ",", "2", ",", "1", ",", "2", ",", "1", ",", "2", ")", "\n", "rate2", "=", "k_of_n_rate", "(", "2", ",", "3", ",", "2", ",", "1.6", ")", "\n", "\n", "\n", "l_pod_k_of_n_sim", "(", "2", ",", "3", ",", "2", ",", "1", ",", "2", ",", ".0001", ",", "2", ")", "\n", "l_pod_k_of_n_rate", "(", "2", ",", "3", ",", "2", ",", "1", ",", "2", ",", ".0001", ",", "2", ")", "\n", "l_pod_k_of_n_av", "(", "3", ",", "3", ",", "2", ",", ".6666666", ",", "2", "/", "2.0001", ")", "\n", "k_of_n_rate", "(", "2", ",", "3", ",", "1", ",", "2", ")", "\n", "\n", "l_pod_k_of_n_sim", "(", "2", ",", "7", ",", "5", ",", "1", ",", "2", ",", "1", ",", "2", ")", "\n", "l_pod_k_of_n_rate", "(", "2", ",", "7", ",", "5", ",", "1", ",", "2", ",", "1", ",", "2", ")", "\n", "\n", "l_pod_k_of_n_rate", "(", "2", ",", "7", ",", "4", ",", "1", ",", "2", ",", ".00001", ",", "2", ")", "\n", "k_of_n_rate", "(", "4", ",", "7", ",", "1", ",", "2", ")", "\n", "\n", "l_pod_k_of_n_rate", "(", "3", ",", "9", ",", "4", ",", ".00001", ",", "2", ",", "1", ",", "2", ")", "\n", "k_of_n_rate", "(", "2", ",", "3", ",", "1", ",", "2", ")", "\n", "\n", "l_pod_k_of_n_rate", "(", "3", ",", "8", ",", "4", ",", ".00001", ",", "2", ",", "1", ",", "2", ")", "\n", "k_of_n_rate", "(", "2", ",", "3", ",", "1", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.tst2": [[295, 304], ["range", "print", "l_pod_k_of_n.l_pod_k_of_n_rate", "print", "l_pod_k_of_n.l_pod_k_of_n_sim"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_rate", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.l_pod_k_of_n.l_pod_k_of_n_sim"], ["", "def", "tst2", "(", ")", ":", "\n", "    ", "summ", "=", "0", "\n", "for", "_", "in", "range", "(", "100", ")", ":", "\n", "        ", "summ", "+=", "l_pod_k_of_n_sim", "(", "4", ",", "8", ",", "5", ",", "1", ",", "2", ",", "1", ",", "2", ",", "durtn", "=", "9e3", ",", "sim_durtn", "=", "1e4", ")", "[", "1", "]", "\n", "\n", "", "print", "(", "summ", "/", "100", ")", "\n", "\n", "real_rate", "=", "l_pod_k_of_n_rate", "(", "4", ",", "8", ",", "5", ",", "1", ",", "2", ",", "1", ",", "2", ")", "\n", "print", "(", "real_rate", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.fiji_repair_process.fiji_repair_availability": [[9, 76], ["print", "algorith.data_structs.heap.heap.Heap", "range", "algorith.data_structs.heap.heap.Heap", "algorith.data_structs.heap.heap.Heap.push", "range", "algorith.data_structs.heap.heap.Heap", "str", "numpy.random.exponential", "algorith.data_structs.heap.heap.Heap.peek", "algorith.data_structs.heap.heap.Heap.pop", "algorith.data_structs.heap.heap.Heap.push", "algorith.data_structs.heap.heap.Heap.push", "algorith.data_structs.heap.heap.Heap.pop", "len", "algorith.data_structs.heap.heap.Heap.pop", "min", "numpy.random.uniform", "numpy.random.uniform", "min", "numpy.random.exponential", "algorith.data_structs.heap.heap.Heap"], "function", ["None"], ["def", "fiji_repair_availability", "(", "n", "=", "8", ",", "sh_durtn", "=", "30", ",", "sh_air", "=", "7", ",", "buffer", "=", "True", ",", "\n", "sim_epochs", "=", "100", ",", "repair_sla_days", "=", "1", ")", ":", "\n", "# Mean time between failures for reboots due to service healing.", "\n", "    ", "mtbf", "=", "365", "*", "1440", "*", "100", "/", "sh_air", "\n", "# Do we have a one node buffer or not.", "\n", "\n", "azure_sh_av", "=", "mtbf", "/", "(", "mtbf", "+", "sh_durtn", ")", "\n", "print", "(", "\"Availability contribution in Azure due to SH: \"", "+", "str", "(", "azure_sh_av", ")", ")", "\n", "tech_arrival", "=", "np", ".", "inf", ";", "prev_tech_arrival", "=", "0", "\n", "down_heap", "=", "Heap", "(", ")", "\n", "for", "_", "in", "range", "(", "n", ")", ":", "\n", "        ", "down_heap", ".", "push", "(", "np", ".", "random", ".", "exponential", "(", "mtbf", ")", ")", "\n", "\n", "", "to_repair", "=", "Heap", "(", ")", "\n", "\n", "curr_t", "=", "0", ";", "downs", "=", "0", "\n", "down_inter", "=", "0", ";", "up_inter", "=", "0", ";", "tot_inter", "=", "0", "\n", "\n", "# Simulate until some large time.", "\n", "while", "curr_t", "<", "mtbf", "*", "sim_epochs", ":", "\n", "        ", "while", "down_heap", ".", "peek", "(", ")", "<", "tech_arrival", ":", "\n", "            ", "t", "=", "down_heap", ".", "pop", "(", ")", "\n", "downs", "+=", "1", ";", "to_repair", ".", "push", "(", "t", ")", "\n", "curr_t", "=", "t", "\n", "if", "downs", "==", "1", ":", "\n", "# One node goes down, tech is scheduled to arrive in 14 days.", "\n", "                ", "tech_arrival", "=", "min", "(", "tech_arrival", ",", "t", "+", "14", "*", "1400", ")", "\n", "", "elif", "downs", "==", "2", ":", "\n", "# If two nodes fail, tech arrival is updated to one day from now.", "\n", "                ", "tech_arrival", "=", "min", "(", "tech_arrival", ",", "t", "+", "repair_sla_days", "*", "1440", ")", "\n", "", "", "curr_t", "=", "tech_arrival", "\n", "for", "_", "in", "range", "(", "downs", ")", ":", "\n", "            ", "down_heap", ".", "push", "(", "curr_t", "+", "np", ".", "random", ".", "exponential", "(", "mtbf", ")", ")", "\n", "", "tot_inter", "=", "n", "*", "curr_t", "\n", "up_slb_nodes", "=", "3", ";", "up_hosting_nodes", "=", "n", "\n", "if", "buffer", ":", "\n", "#If we have one node in the buffer, ", "\n", "# the first failure will be service healable.", "\n", "# But was it a non SLB node? If not, there is no impact.", "\n", "            ", "if", "np", ".", "random", ".", "uniform", "(", ")", "<", "up_hosting_nodes", "/", "(", "up_slb_nodes", "+", "up_hosting_nodes", ")", ":", "\n", "                ", "down_inter", "+=", "sh_durtn", "\n", "up_hosting_nodes", "-=", "1", "\n", "", "else", ":", "\n", "                ", "up_slb_nodes", "-=", "1", "\n", "# First time stamp would have been service healed,", "\n", "# which is already accounted for. So pop it.", "\n", "", "to_repair", ".", "pop", "(", ")", "\n", "# For the remaining failures, nodes have", "\n", "# been down since the times in the heap.", "\n", "", "while", "len", "(", "to_repair", ".", "h_arr", ")", ">", "0", ":", "\n", "            ", "t1", "=", "to_repair", ".", "pop", "(", ")", "\n", "if", "np", ".", "random", ".", "uniform", "(", ")", "<", "up_hosting_nodes", "/", "(", "up_slb_nodes", "+", "up_hosting_nodes", ")", ":", "\n", "                ", "down_inter", "+=", "(", "curr_t", "-", "t1", ")", "\n", "up_hosting_nodes", "-=", "1", "\n", "", "else", ":", "\n", "                ", "up_slb_nodes", "-=", "1", "\n", "# If we're left with less than 2 SLB nodes, ", "\n", "# everything was down before the tech arrived ", "\n", "# since the second one went down.", "\n", "if", "up_slb_nodes", "<", "2", ":", "\n", "                    ", "down_inter", "+=", "(", "curr_t", "-", "t1", ")", "*", "n", "\n", "to_repair", "=", "Heap", "(", ")", "\n", "", "", "", "prev_tech_arrival", "=", "tech_arrival", "\n", "to_repair", "=", "Heap", "(", ")", "\n", "tech_arrival", "=", "np", ".", "inf", "\n", "downs", "=", "0", "\n", "", "return", "1", "-", "down_inter", "/", "tot_inter", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.fiji_repair_process.overall_metrics": [[78, 98], ["fiji_repair_process.fiji_repair_availability", "fiji_repair_process.fiji_repair_availability", "stochproc.birth_death_processes.reliability.series_parallel.series", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.fiji_repair_process.fiji_repair_availability", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.fiji_repair_process.fiji_repair_availability", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.series_parallel.series"], ["", "def", "overall_metrics", "(", "sla_days", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    What impact does SLA for SH policy have on overall availability?\n    \"\"\"", "\n", "lmb_sh", "=", "4.22", "\n", "a_sh", "=", "fiji_repair_availability", "(", "sh_air", "=", "lmb_sh", ",", "\n", "sim_epochs", "=", "5000", ",", "n", "=", "5", ",", "\n", "repair_sla_days", "=", "\n", "sla_days", ")", "\n", "a_sh_1day", "=", "fiji_repair_availability", "(", "sh_air", "=", "lmb_sh", ",", "\n", "sim_epochs", "=", "5000", ",", "n", "=", "5", ",", "\n", "repair_sla_days", "=", "1", ")", "\n", "mu_sh", "=", "lmb_sh", "*", "a_sh", "/", "(", "1", "-", "a_sh", ")", "\n", "a_t", "=", "0.9997831556492641", "\n", "lmb_t", "=", "39.54458631633028", "\n", "a_nosh", "=", "a_t", "/", "a_sh_1day", "\n", "lmb_nosh", "=", "lmb_t", "-", "lmb_sh", "\n", "mu_nosh", "=", "lmb_nosh", "*", "a_nosh", "/", "(", "1", "-", "a_nosh", ")", "\n", "lmb_new", ",", "mu_new", ",", "a_new", "=", "series", "(", "np", ".", "array", "(", "[", "lmb_nosh", ",", "lmb_sh", "]", ")", ",", "np", ".", "array", "(", "[", "mu_nosh", ",", "mu_sh", "]", ")", ")", "\n", "return", "lmb_new", ",", "mu_new", ",", "a_new", ",", "36500", "*", "1440", "/", "mu_sh", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.fiji_repair_process.fiji_longdown_rate": [[100, 132], ["range", "print", "print", "len", "numpy.random.exponential", "numpy.random.gamma", "trntns.append", "trntns.append", "trntns.append", "min"], "function", ["None"], ["", "def", "fiji_longdown_rate", "(", "theta", "=", "0.2", ",", "days", "=", "14", ")", ":", "\n", "    ", "period", "=", "1000000", "\n", "n_sim", "=", "1000", "\n", "s_evnts", "=", "0", "\n", "for", "i", "in", "range", "(", "n_sim", ")", ":", "\n", "        ", "trntns", "=", "[", "]", "\n", "tech_arrival", "=", "np", ".", "inf", "\n", "num_dwn", "=", "0", "\n", "t", "=", "0", "\n", "evnts", "=", "0", "\n", "lm", "=", "np", ".", "random", ".", "gamma", "(", "1.4", "*", "theta", ",", "1", "/", "theta", ")", "*", "7", "/", "36500", "\n", "# lm = 5/(36500/7)", "\n", "while", "t", "<", "period", ":", "\n", "            ", "t_del", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lm", ")", "\n", "t", "+=", "t_del", "\n", "if", "t", ">", "tech_arrival", ":", "\n", "                ", "trntns", ".", "append", "(", "[", "tech_arrival", ",", "0", "]", ")", "\n", "trntns", ".", "append", "(", "[", "t", ",", "1", "]", ")", "\n", "num_dwn", "=", "1", "\n", "tech_arrival", "=", "t", "+", "days", "\n", "", "else", ":", "\n", "                ", "num_dwn", "+=", "1", "\n", "if", "num_dwn", ">=", "2", ":", "\n", "                    ", "tech_arrival", "=", "min", "(", "tech_arrival", ",", "t", "+", "1", ")", "\n", "evnts", "+=", "1", "\n", "", "trntns", ".", "append", "(", "[", "t", ",", "num_dwn", "]", ")", "\n", "", "", "s_evnts", "+=", "evnts", "\n", "\n", "", "evnts_per_t_days", "=", "s_evnts", "/", "n_sim", "\n", "evnts_per_cent", "=", "evnts_per_t_days", "*", "36500", "/", "period", "\n", "print", "(", "evnts_per_cent", ")", "\n", "print", "(", "len", "(", "trntns", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.fiji_repair_process.tst_neg_binom": [[134, 146], ["print", "numpy.random.gamma", "numpy.random.exponential"], "function", ["None"], ["", "def", "tst_neg_binom", "(", ")", ":", "\n", "    ", "period", "=", "1000", "\n", "evnts", "=", "0", "\n", "t", "=", "0", "\n", "while", "t", "<", "period", ":", "\n", "        ", "theta", "=", "0.5", "\n", "lm", "=", "np", ".", "random", ".", "gamma", "(", "5", "*", "theta", ",", "1", "/", "theta", ")", "\n", "#lm = 5", "\n", "t_del", "=", "np", ".", "random", ".", "exponential", "(", "1", "/", "lm", ")", "\n", "t", "+=", "t_del", "\n", "evnts", "+=", "1", "\n", "", "print", "(", "evnts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.series_parallel.series": [[4, 11], ["sum", "numpy.prod", "numpy.prod"], "function", ["None"], ["def", "series", "(", "lmbs", ",", "mus", ")", ":", "\n", "    ", "fail_rate", "=", "sum", "(", "lmbs", ")", "\n", "tmp_arr", "=", "mus", "/", "(", "mus", "+", "lmbs", ")", "\n", "factor", "=", "np", ".", "prod", "(", "tmp_arr", ")", "/", "(", "1", "-", "np", ".", "prod", "(", "tmp_arr", ")", ")", "\n", "repair_rate", "=", "fail_rate", "*", "factor", "\n", "reliability", "=", "repair_rate", "/", "(", "repair_rate", "+", "fail_rate", ")", "\n", "return", "fail_rate", ",", "repair_rate", ",", "reliability", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.series_parallel.parallel": [[13, 20], ["sum", "numpy.prod", "numpy.prod"], "function", ["None"], ["", "def", "parallel", "(", "lmbs", ",", "mus", ")", ":", "\n", "    ", "repair_rate", "=", "sum", "(", "mus", ")", "\n", "tmp_arr", "=", "lmbs", "/", "(", "mus", "+", "lmbs", ")", "\n", "factor", "=", "np", ".", "prod", "(", "tmp_arr", ")", "/", "(", "1", "-", "np", ".", "prod", "(", "tmp_arr", ")", ")", "\n", "fail_rate", "=", "factor", "*", "repair_rate", "\n", "reliability", "=", "repair_rate", "/", "(", "repair_rate", "+", "fail_rate", ")", "\n", "return", "fail_rate", ",", "repair_rate", ",", "reliability", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs_s": [[8, 21], ["numpy.random.poisson", "range", "numpy.random.binomial", "scipy.stats.logser.rvs", "numpy.random.binomial"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["    ", "@", "staticmethod", "\n", "def", "rvs_s", "(", "lmb", "=", "10", ",", "binom_n", "=", "23", ",", "binom_p", "=", "0.2", ",", "compound", "=", "'binom'", ")", ":", "\n", "        ", "N", "=", "np", ".", "random", ".", "poisson", "(", "lmb", ")", "\n", "rv", "=", "0", "\n", "for", "_", "in", "range", "(", "N", ")", ":", "\n", "            ", "if", "compound", "==", "'binom'", ":", "\n", "                ", "vms", "=", "np", ".", "random", ".", "binomial", "(", "binom_n", ",", "binom_p", ")", "\n", "", "elif", "compound", "==", "'binom_pl1'", ":", "\n", "                ", "vms", "=", "np", ".", "random", ".", "binomial", "(", "binom_n", ",", "binom_p", ")", "+", "1", "\n", "", "else", ":", "\n", "                ", "vms", "=", "logser", ".", "rvs", "(", ".8", ")", "\n", "", "rv", "+=", "vms", "\n", "", "return", "rv", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs_s_1": [[22, 29], ["numpy.random.poisson", "range", "compound_rvs"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "rvs_s_1", "(", "compound_rvs", ",", "lmb", "=", "10", ")", ":", "\n", "        ", "n", "=", "np", ".", "random", ".", "poisson", "(", "lmb", ")", "\n", "rv", "=", "0", "\n", "for", "_", "in", "range", "(", "n", ")", ":", "\n", "            ", "rv", "+=", "compound_rvs", "(", ")", "\n", "", "return", "rv", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.__init__": [[30, 33], ["None"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "lmb", "=", "10", ",", "comp", "=", "logser", ")", ":", "\n", "        ", "self", ".", "lmb", "=", "lmb", "\n", "self", ".", "comp", "=", "comp", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs": [[34, 37], ["None"], "methods", ["None"], ["", "def", "rvs", "(", "self", ")", ":", "\n", "#return CompoundPoisson.rvs_s(self.n,self.p)", "\n", "        ", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.cdf": [[38, 41], ["sum", "numpy.array", "compound_poisson.CompoundPoisson.rvs", "range"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "cdf", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "sum", "(", "np", ".", "array", "(", "[", "self", ".", "rvs", "(", ")", "for", "i", "in", "range", "(", "10000", ")", "]", ")", "<", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.verify_variance": [[43, 60], ["range", "numpy.array", "numpy.mean", "numpy.var", "print", "print", "np.array.append", "compound_poisson.CompoundPoisson.rvs_s", "str", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs_s"], ["", "", "def", "verify_variance", "(", ")", ":", "\n", "    ", "binom_n", "=", "23", ";", "binom_p", "=", "0.2", "\n", "rvs", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "50000", ")", ":", "\n", "        ", "rvs", ".", "append", "(", "CompoundPoisson", ".", "rvs_s", "(", "binom_n", ",", "binom_p", ")", ")", "\n", "\n", "", "rvs", "=", "np", ".", "array", "(", "rvs", ")", "\n", "\n", "np", ".", "mean", "(", "rvs", ")", "\n", "measured_var", "=", "np", ".", "var", "(", "rvs", ")", "\n", "\n", "binom_e_ysq", "=", "binom_n", "*", "binom_p", "*", "(", "1", "-", "binom_p", ")", "+", "(", "binom_n", "*", "binom_p", ")", "**", "2", "\n", "\n", "theoretic_var", "=", "binom_e_ysq", "*", "10", "\n", "\n", "print", "(", "\"Measured variance:\"", "+", "str", "(", "measured_var", ")", ")", "\n", "print", "(", "\"Theoretical variance:\"", "+", "str", "(", "theoretic_var", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.binom.expctd_cond_gr_m": [[4, 11], ["int", "sum", "numpy.arange", "scipy.stats.binom.sf", "binom.expctd_cond_leq_m", "scipy.stats.binom.pmf", "scipy.stats.binom.sf", "scipy.stats.binom.cdf", "scipy.stats.binom.sf", "numpy.arange"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.kusto_plugin.air_savings.expctd_cond_leq_m", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.cdf"], ["def", "expctd_cond_gr_m", "(", "m", ",", "n", ",", "p", ")", ":", "\n", "    ", "if", "m", "<", "int", "(", "n", "*", "p", ")", ":", "\n", "        ", "return", "sum", "(", "binom", ".", "pmf", "(", "np", ".", "arange", "(", "m", "+", "1", ",", "n", "+", "1", ")", ",", "n", ",", "p", ")", "/", "binom", ".", "sf", "(", "m", ",", "n", ",", "p", ")", "*", "np", ".", "arange", "(", "m", "+", "1", ",", "n", "+", "1", ")", ")", "\n", "", "else", ":", "\n", "        ", "return", "n", "*", "p", "/", "binom", ".", "sf", "(", "m", ",", "n", ",", "p", ")", "-", "binom", ".", "cdf", "(", "m", ",", "n", ",", "p", ")", "/", "binom", ".", "sf", "(", "m", ",", "n", ",", "p", ")", "*", "expctd_cond_leq_m", "(", "m", ",", "n", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.binom.expctd_cond_leq_m": [[13, 20], ["int", "sum", "numpy.arange", "scipy.stats.binom.cdf", "binom.expctd_cond_gr_m", "scipy.stats.binom.pmf", "scipy.stats.binom.cdf", "scipy.stats.binom.sf", "scipy.stats.binom.cdf", "numpy.arange"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.cdf", "home.repos.pwc.inspect_result.ryu577_stochproc.kusto_plugin.air_savings.expctd_cond_gr_m", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.cdf", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.cdf"], ["", "", "def", "expctd_cond_leq_m", "(", "m", ",", "n", ",", "p", ")", ":", "\n", "    ", "if", "m", "<=", "int", "(", "n", "/", "2", ")", ":", "\n", "        ", "return", "sum", "(", "binom", ".", "pmf", "(", "np", ".", "arange", "(", "m", "+", "1", ")", ",", "n", ",", "p", ")", "/", "binom", ".", "cdf", "(", "m", ",", "n", ",", "p", ")", "*", "np", ".", "arange", "(", "m", "+", "1", ")", ")", "\n", "", "else", ":", "\n", "        ", "return", "n", "*", "p", "/", "binom", ".", "cdf", "(", "m", ",", "n", ",", "p", ")", "-", "binom", ".", "sf", "(", "m", ",", "n", ",", "p", ")", "/", "binom", ".", "cdf", "(", "m", ",", "n", ",", "p", ")", "*", "expctd_cond_gr_m", "(", "m", ",", "n", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.interarrival_weibull.InterarrivalWeibull.rvs_s": [[8, 18], ["range", "numpy.array", "stochproc.distributions.weibull.Weibull.samples_", "numpy.cumsum", "sum", "cnts.append"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "rvs_s", "(", "k", "=", "0.4", ",", "lmb", "=", "1.0", ",", "durtn", "=", "20.0", ",", "size", "=", "1000", ")", ":", "\n", "        ", "cnts", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "size", ")", ":", "\n", "            ", "w_rvs", "=", "Weibull", ".", "samples_", "(", "k", ",", "lmb", ",", "size", "=", "100", ")", "\n", "w_arrivals", "=", "np", ".", "cumsum", "(", "w_rvs", ")", "\n", "# TODO: Need to ensure that durtn is less than the cumsum of the Weibulls", "\n", "cnt", "=", "sum", "(", "w_arrivals", "<", "durtn", ")", "\n", "cnts", ".", "append", "(", "cnt", ")", "\n", "", "return", "np", ".", "array", "(", "cnts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.interarrival_weibull.InterarrivalWeibull.rvs1_s": [[19, 26], ["stochproc.distributions.weibull.Weibull.samples_", "stochproc.distributions.weibull.Weibull.samples_"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "rvs1_s", "(", "k", "=", "0.4", ",", "lmb", "=", "1.0", ",", "durtn", "=", "20.0", ")", ":", "\n", "        ", "w_rvs", "=", "Weibull", ".", "samples_", "(", "k", ",", "lmb", ",", "size", "=", "1", ")", "[", "0", "]", ";", "cnt", "=", "0", "\n", "while", "w_rvs", "<", "durtn", ":", "\n", "            ", "w_rvs", "+=", "Weibull", ".", "samples_", "(", "k", ",", "lmb", ",", "size", "=", "1", ")", "[", "0", "]", "\n", "cnt", "+=", "1", "\n", "", "return", "cnt", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.interarrival_weibull.InterarrivalWeibull.rvs2_s": [[27, 35], ["numpy.array", "sum", "range", "numpy.cumsum", "stochproc.distributions.weibull.Weibull.samples_"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "rvs2_s", "(", "k", "=", "0.4", ",", "lmb", "=", "1.0", ",", "durtn", "=", "20.0", ",", "size", "=", "1000", ")", ":", "\n", "        ", "\"\"\"\n        Same as rvs (which is more explicit and maintainable), \n        just including this one here to test for speed.\n        \"\"\"", "\n", "return", "np", ".", "array", "(", "[", "sum", "(", "np", ".", "cumsum", "(", "Weibull", ".", "samples_", "(", "k", ",", "lmb", ",", "size", "=", "100", ")", ")", "<", "durtn", ")", "for", "_", "in", "range", "(", "1000", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.interarrival_weibull.InterarrivalWeibull.__init__": [[36, 44], ["scipy.special.gamma"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "k", ",", "lmb", ",", "durtn", ")", ":", "\n", "        ", "\"\"\"\n        k<1 means decreasing haz rate, positively correlated events and overdispersed (var>mean)\n        k>1 means increasing haz rate, negatively correlated events and underdispersed (var<mean)\n        \"\"\"", "\n", "self", ".", "k", "=", "k", ";", "self", ".", "lmb", "=", "lmb", ";", "self", ".", "durtn", "=", "durtn", "\n", "self", ".", "weib_mean", "=", "self", ".", "lmb", "*", "gamma", "(", "1", "+", "1", "/", "self", ".", "k", ")", "\n", "self", ".", "naive_calc_mean", "=", "self", ".", "durtn", "/", "self", ".", "weib_mean", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.interarrival_weibull.InterarrivalWeibull.rvs": [[45, 47], ["interarrival_weibull.InterarrivalWeibull.rvs_s"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs_s"], ["", "def", "rvs", "(", "self", ",", "size", "=", "10", ")", ":", "\n", "        ", "return", "InterarrivalWeibull", ".", "rvs_s", "(", "self", ".", "k", ",", "self", ".", "lmb", ",", "self", ".", "durtn", ",", "size", "=", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.interarrival_weibull.InterarrivalWeibull.rvs1": [[48, 50], ["interarrival_weibull.InterarrivalWeibull.rvs1_s"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.interarrival_weibull.InterarrivalWeibull.rvs1_s"], ["", "def", "rvs1", "(", "self", ")", ":", "\n", "        ", "return", "InterarrivalWeibull", ".", "rvs1_s", "(", "self", ".", "k", ",", "self", ".", "lmb", ",", "self", ".", "durtn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.interarrival_weibull.plot_mean_with_k": [[53, 68], ["numpy.arange", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.axvline", "matplotlib.legend", "matplotlib.show", "numpy.mean", "scipy.special.gamma", "actual_means.append", "expctd_means.append", "numpy.arange", "numpy.arange", "interarrival_weibull.InterarrivalWeibull.rvs_s"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs_s"], ["", "", "def", "plot_mean_with_k", "(", ")", ":", "\n", "    ", "actual_means", "=", "[", "]", ";", "expctd_means", "=", "[", "]", "\n", "for", "k", "in", "np", ".", "arange", "(", "0.1", ",", "4.0", ",", "0.1", ")", ":", "\n", "        ", "actual_mean", "=", "np", ".", "mean", "(", "InterarrivalWeibull", ".", "rvs_s", "(", "k", ",", "durtn", "=", "20.0", ")", ")", "\n", "w_mean", "=", "gamma", "(", "1", "+", "1", "/", "k", ")", "\n", "expctd_mean", "=", "20.0", "/", "w_mean", "\n", "actual_means", ".", "append", "(", "actual_mean", ")", "\n", "expctd_means", ".", "append", "(", "expctd_mean", ")", "\n", "", "plt", ".", "plot", "(", "np", ".", "arange", "(", "0.1", ",", "4.0", ",", "0.1", ")", ",", "actual_means", ",", "label", "=", "'actual'", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "0.1", ",", "4.0", ",", "0.1", ")", ",", "expctd_means", ",", "label", "=", "'expected'", ")", "\n", "plt", ".", "xlabel", "(", "'Shape parameter of Weibull'", ")", "\n", "plt", ".", "ylabel", "(", "'Number of events in 20 units of time'", ")", "\n", "plt", ".", "axvline", "(", "1.0", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs_s": [[6, 9], ["scipy.stats.nbinom.rvs"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["    ", "@", "staticmethod", "\n", "def", "rvs_s", "(", "n", ",", "p", ",", "size", "=", "1000", ")", ":", "\n", "        ", "return", "nbinom", ".", "rvs", "(", "n", ",", "p", ",", "size", "=", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.__init__": [[10, 16], ["None"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "mu", ",", "k", ",", "t", ")", ":", "\n", "## mu and k is the parametrization ", "\n", "# used by Zhu and Lakkis.", "\n", "        ", "self", ".", "mu", "=", "mu", ";", "self", ".", "k", "=", "k", ";", "self", ".", "t", "=", "t", "\n", "self", ".", "m", "=", "1", "/", "k", ";", "self", ".", "theta", "=", "self", ".", "m", "*", "self", ".", "t", "/", "self", ".", "mu", "\n", "self", ".", "p", "=", "1", "/", "(", "1", "+", "self", ".", "k", "*", "self", ".", "mu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs": [[17, 19], ["scipy.stats.nbinom.rvs"], "methods", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "rvs", "(", "self", ")", ":", "\n", "        ", "return", "nbinom", ".", "rvs", "(", "self", ".", "m", ",", "self", ".", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.p_n1_pl_n2": [[21, 29], ["range", "scipy.stats.nbinom.pmf", "scipy.stats.nbinom.pmf"], "function", ["None"], ["", "", "def", "p_n1_pl_n2", "(", "n", ",", "theta", ",", "m", ",", "t1", ",", "t2", ")", ":", "\n", "    ", "summ", "=", "0", "\n", "p1", "=", "theta", "/", "(", "t1", "+", "theta", ")", "\n", "p2", "=", "theta", "/", "(", "t2", "+", "theta", ")", "\n", "for", "j", "in", "range", "(", "n", "+", "1", ")", ":", "\n", "        ", "summ", "+=", "nbinom", ".", "pmf", "(", "j", ",", "m", ",", "p1", ")", "*", "nbinom", ".", "pmf", "(", "n", "-", "j", ",", "m", ",", "p2", ")", "\n", "", "return", "summ", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.rvs_mxd_poisson": [[31, 34], ["scipy.stats.nbinom.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "rvs_mxd_poisson", "(", "t", ",", "theta", "=", "5", ",", "m", "=", "100", ")", ":", "\n", "    ", "p", "=", "theta", "/", "(", "theta", "+", "t", ")", "\n", "return", "nbinom", ".", "rvs", "(", "m", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.markov_chains.markov_chains.TimeToAbsorbing": [[7, 35], ["numpy.matrix", "numpy.matrix", "numpy.diag", "numpy.delete", "numpy.delete", "numpy.delete", "numpy.linalg.solve", "numpy.insert", "numpy.dot", "numpy.eye"], "function", ["None"], ["def", "TimeToAbsorbing", "(", "\n", "p", "=", "np", ".", "matrix", "(", "[", "\n", "[", "0", ",", ".2", ",", ".4", ",", ".3", ",", ".1", ",", "0", ",", "0", "]", ",", "\n", "[", ".2", ",", "0", ",", ".3", ",", ".4", ",", "0", ",", ".1", ",", "0", "]", ",", "\n", "[", ".1", ",", ".3", ",", "0", ",", ".5", ",", "0", ",", ".1", ",", "0", "]", ",", "\n", "[", ".2", ",", ".3", ",", ".2", ",", "0", ",", ".1", ",", ".1", ",", ".1", "]", ",", "\n", "[", ".2", ",", ".2", ",", "0", ",", ".5", ",", "0", ",", ".1", ",", "0", "]", ",", "\n", "[", ".2", ",", ".3", ",", "0", ",", ".1", ",", "0", ",", "0", ",", ".4", "]", ",", "\n", "[", ".2", ",", ".1", ",", ".2", ",", ".3", ",", "0", ",", ".2", ",", "0", "]", "\n", "]", ")", ",", "\n", "t", "=", "np", ".", "matrix", "(", "[", "\n", "[", "1", ",", "2", ",", "3", ",", "1", ",", "1", ",", "3", ",", "2", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "1", ",", "1", ",", "3", ",", "2", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "1", ",", "1", ",", "3", ",", "2", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "1", ",", "1", ",", "3", ",", "2", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "1", ",", "1", ",", "3", ",", "2", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "1", ",", "1", ",", "3", ",", "2", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "1", ",", "1", ",", "3", ",", "2", "]", "\n", "]", ")", ",", "\n", "absorbing_state", "=", "1", "\n", ")", ":", "\n", "    ", "rhs", "=", "np", ".", "diag", "(", "np", ".", "dot", "(", "p", ",", "t", ".", "T", ")", ")", "\n", "rhs", "=", "np", ".", "delete", "(", "rhs", ",", "absorbing_state", ")", "\n", "q", "=", "np", ".", "delete", "(", "p", ",", "np", ".", "s_", "[", "absorbing_state", "]", ",", "1", ")", "\n", "q", "=", "np", ".", "delete", "(", "q", ",", "np", ".", "s_", "[", "absorbing_state", "]", ",", "0", ")", "\n", "lhs", "=", "(", "np", ".", "eye", "(", "q", ".", "shape", "[", "0", "]", ")", "-", "q", ")", "\n", "x", "=", "np", ".", "linalg", ".", "solve", "(", "lhs", ",", "rhs", ")", "\n", "return", "np", ".", "insert", "(", "x", ",", "absorbing_state", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.markov_chains.markov_chains.MonteCarlo": [[37, 70], ["numpy.matrix", "numpy.matrix", "range", "print", "str", "numpy.random.choice", "str", "str", "numpy.array"], "function", ["None"], ["", "def", "MonteCarlo", "(", "\n", "p", "=", "np", ".", "matrix", "(", "[", "\n", "[", "0", ",", ".2", ",", ".4", ",", ".4", "]", ",", "\n", "[", ".2", ",", "0", ",", ".4", ",", ".4", "]", ",", "\n", "[", ".2", ",", ".3", ",", "0", ",", ".5", "]", ",", "\n", "[", ".3", ",", ".4", ",", ".3", ",", "0", "]", "\n", "]", ")", ",", "\n", "t", "=", "np", ".", "matrix", "(", "[", "\n", "[", "1", ",", "2", ",", "3", ",", "1", "]", ",", "\n", "[", "5", ",", "1", ",", "7", ",", "1", "]", ",", "\n", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "[", "1", ",", "1", ",", "1", ",", "1", "]", "\n", "]", ")", ",", "\n", "starting_state", "=", "2", ",", "\n", "absorbing_state", "=", "3", "\n", ")", ":", "\n", "    ", "sum_times", "=", "0", "\n", "states", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "10000", ")", ":", "\n", "        ", "curr_state", "=", "starting_state", "\n", "hist", "=", "str", "(", "starting_state", ")", "\n", "while", "curr_state", "!=", "absorbing_state", ":", "\n", "#next_state = np.random.choice(p.shape[0], p=np.array(p[curr_state,])[0])", "\n", "            ", "next_state", "=", "np", ".", "random", ".", "choice", "(", "p", ".", "shape", "[", "0", "]", ",", "p", "=", "np", ".", "array", "(", "p", "[", "curr_state", ",", "]", ")", ")", "\n", "sum_times", "=", "sum_times", "+", "t", "[", "curr_state", ",", "next_state", "]", "\n", "curr_state", "=", "next_state", "\n", "hist", "=", "hist", "+", "\",\"", "+", "str", "(", "curr_state", ")", "\n", "", "if", "hist", "in", "states", ":", "\n", "            ", "states", "[", "hist", "]", "=", "states", "[", "hist", "]", "+", "1", "\n", "", "else", ":", "\n", "            ", "states", "[", "hist", "]", "=", "1", "\n", "", "", "print", "(", "\"Simulation: \"", "+", "str", "(", "sum_times", "/", "10000", ")", ")", "\n", "return", "states", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.markov_chains.markov_chains.SteadyStateMonteCarlo": [[75, 106], ["numpy.matrix", "numpy.matrix", "numpy.zeros", "numpy.zeros", "range", "numpy.random.choice", "numpy.array", "sum", "numpy.multiply", "sum", "numpy.linalg.svd", "sum", "numpy.sum", "numpy.multiply", "numpy.array", "numpy.multiply", "numpy.eye"], "function", ["None"], ["def", "SteadyStateMonteCarlo", "(", "\n", "p", "=", "np", ".", "matrix", "(", "[", "\n", "[", "0", ",", ".2", ",", ".4", ",", ".4", "]", ",", "\n", "[", ".2", ",", "0", ",", ".4", ",", ".4", "]", ",", "\n", "[", ".2", ",", ".3", ",", "0", ",", ".5", "]", ",", "\n", "[", ".3", ",", ".4", ",", ".3", ",", "0", "]", "\n", "]", ")", ",", "\n", "t", "=", "np", ".", "matrix", "(", "[", "\n", "[", "2", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "[", "1", ",", "1", ",", "5", ",", "1", "]", ",", "\n", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "[", "1", ",", "1", ",", "1", ",", "1", "]", "\n", "]", ")", ",", "\n", "starting_state", "=", "2", "\n", ")", ":", "\n", "    ", "states", "=", "np", ".", "zeros", "(", "p", ".", "shape", "[", "0", "]", ")", "\n", "states_w_times", "=", "np", ".", "zeros", "(", "p", ".", "shape", "[", "0", "]", ")", "\n", "curr_state", "=", "starting_state", "\n", "for", "i", "in", "range", "(", "10000", ")", ":", "\n", "      ", "next_state", "=", "np", ".", "random", ".", "choice", "(", "p", ".", "shape", "[", "0", "]", ",", "p", "=", "np", ".", "array", "(", "p", "[", "curr_state", ",", "]", ")", "[", "0", "]", ")", "\n", "states", "[", "curr_state", "]", "=", "states", "[", "curr_state", "]", "+", "1", "\n", "states_w_times", "[", "curr_state", "]", "=", "states_w_times", "[", "curr_state", "]", "+", "t", "[", "curr_state", ",", "next_state", "]", "\n", "curr_state", "=", "next_state", "\n", "", "p_times_t", "=", "np", ".", "array", "(", "np", ".", "sum", "(", "np", ".", "multiply", "(", "p", ",", "t", ")", ",", "axis", "=", "1", ")", ".", "T", ")", "[", "0", "]", "\n", "# Solve for pi by finding the null space of (P-I)", "\n", "pis", "=", "np", ".", "linalg", ".", "svd", "(", "p", "-", "np", ".", "eye", "(", "p", ".", "shape", "[", "0", "]", ")", ")", "[", "0", "]", "[", ":", ",", "p", ".", "shape", "[", "0", "]", "-", "1", "]", "\n", "pis", "=", "pis", "/", "sum", "(", "pis", ")", "\n", "res", "=", "[", "states_w_times", "/", "sum", "(", "states_w_times", ")", ",", "pis", ",", "p_times_t", "]", "\n", "props1", "=", "np", ".", "multiply", "(", "res", "[", "1", "]", ".", "T", ",", "res", "[", "2", "]", ")", "/", "sum", "(", "np", ".", "multiply", "(", "res", "[", "1", "]", ".", "T", ",", "res", "[", "2", "]", ")", ".", "T", ")", "\n", "props2", "=", "res", "[", "0", "]", "\n", "return", "[", "props1", ",", "props2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.kusto_plugin.air_savings.expctd_cond_gr_m": [[4, 11], ["int", "sum", "numpy.arange", "scipy.stats.binom.sf", "air_savings.expctd_cond_leq_m", "scipy.stats.binom.pmf", "scipy.stats.binom.sf", "scipy.stats.binom.cdf", "scipy.stats.binom.sf", "numpy.arange"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.kusto_plugin.air_savings.expctd_cond_leq_m", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.cdf"], ["def", "expctd_cond_gr_m", "(", "m", ",", "n", ",", "p", ")", ":", "\n", "    ", "if", "m", ">", "int", "(", "n", "/", "2", ")", ":", "\n", "        ", "return", "sum", "(", "binom", ".", "pmf", "(", "np", ".", "arange", "(", "m", "+", "1", ",", "n", "+", "1", ")", ",", "n", ",", "p", ")", "/", "binom", ".", "sf", "(", "m", ",", "n", ",", "p", ")", "*", "np", ".", "arange", "(", "m", "+", "1", ",", "n", "+", "1", ")", ")", "\n", "", "else", ":", "\n", "        ", "return", "n", "*", "p", "/", "binom", ".", "sf", "(", "m", ",", "n", ",", "p", ")", "-", "binom", ".", "cdf", "(", "m", ",", "n", ",", "p", ")", "/", "binom", ".", "sf", "(", "m", ",", "n", ",", "p", ")", "*", "expctd_cond_leq_m", "(", "m", ",", "n", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.kusto_plugin.air_savings.expctd_cond_leq_m": [[13, 20], ["int", "sum", "numpy.arange", "scipy.stats.binom.cdf", "air_savings.expctd_cond_gr_m", "scipy.stats.binom.pmf", "scipy.stats.binom.cdf", "scipy.stats.binom.sf", "scipy.stats.binom.cdf", "numpy.arange"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.cdf", "home.repos.pwc.inspect_result.ryu577_stochproc.kusto_plugin.air_savings.expctd_cond_gr_m", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.cdf", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.compound_poisson.CompoundPoisson.cdf"], ["", "", "def", "expctd_cond_leq_m", "(", "m", ",", "n", ",", "p", ")", ":", "\n", "    ", "if", "m", "<=", "int", "(", "n", "/", "2", ")", ":", "\n", "        ", "return", "sum", "(", "binom", ".", "pmf", "(", "np", ".", "arange", "(", "m", "+", "1", ")", ",", "n", ",", "p", ")", "/", "binom", ".", "cdf", "(", "m", ",", "n", ",", "p", ")", "*", "np", ".", "arange", "(", "m", "+", "1", ")", ")", "\n", "", "else", ":", "\n", "        ", "return", "n", "*", "p", "/", "binom", ".", "cdf", "(", "m", ",", "n", ",", "p", ")", "-", "binom", ".", "sf", "(", "m", ",", "n", ",", "p", ")", "/", "binom", ".", "cdf", "(", "m", ",", "n", ",", "p", ")", "*", "expctd_cond_gr_m", "(", "m", ",", "n", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.fd_splitting.fn_right": [[6, 8], ["None"], "function", ["None"], ["def", "fn_right", "(", "p", ")", ":", "\n", "    ", "return", "(", "3", "*", "p", "**", "2", "*", "(", "1", "-", "p", ")", "+", "p", "**", "3", ")", "**", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.fd_splitting.fn_left": [[9, 11], ["None"], "function", ["None"], ["", "def", "fn_left", "(", "p", ")", ":", "\n", "    ", "return", "20", "*", "p", "**", "3", "*", "(", "1", "-", "p", ")", "**", "3", "+", "15", "*", "p", "**", "4", "*", "(", "1", "-", "p", ")", "**", "2", "+", "6", "*", "p", "**", "5", "*", "(", "1", "-", "p", ")", "+", "p", "**", "6", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.hypothesis_testing_failure_rate.tst_binom_tst": [[15, 19], ["binom_tst_beta", "binom_tst_beta_sim", "abs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.binom_test.binom_tst_beta", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.binom_test.binom_tst_beta_sim"], ["def", "tst_binom_tst", "(", ")", ":", "\n", "\t", "beta_1", "=", "binom_tst_beta", "(", "p_null", "=", "0.5", ",", "p_alt", "=", "0.6", ",", "n", "=", "10", ",", "alpha_hat", "=", "0.05", ")", "\n", "beta_2", "=", "binom_tst_beta_sim", "(", "p_null", "=", "0.5", ",", "p_alt", "=", "0.6", ",", "n", "=", "10", ",", "alpha_hat", "=", "0.05", ",", "n_sim", "=", "50000", ")", "\n", "assert", "abs", "(", "beta_1", "-", "beta_2", ")", "/", "beta_1", "<", "1e-2", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.hypothesis_testing_failure_rate.tst_ump_poisson_on_poisson": [[21, 36], ["UMPPoisson.beta_on_poisson_closed_form", "alpha_beta_curve", "numpy.argmin", "print", "UMPPoisson.beta_on_poisson_closed_form3", "poisson.rvs", "abs", "abs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.alpha_beta_curve", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form3", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "tst_ump_poisson_on_poisson", "(", ")", ":", "\n", "\t", "beta_1", "=", "UMPPoisson", ".", "beta_on_poisson_closed_form", "(", "t1", "=", "25", ",", "t2", "=", "25", ",", "lmb_base", "=", "12", ",", "effect", "=", "3", ",", "alpha", "=", "0.5", ")", "\n", "\n", "dist_rvs_poisson", "=", "lambda", "lmb", ",", "t", ":", "poisson", ".", "rvs", "(", "lmb", "*", "t", ")", "\n", "alphas", ",", "betas", ",", "alpha_hats", "=", "alpha_beta_curve", "(", "dist_rvs_poisson", ",", "n_sim", "=", "10000", ",", "lmb", "=", "12", ",", "t1", "=", "25", ",", "t2", "=", "25", ",", "scale", "=", "1.0", ",", "dellmb", "=", "3.0", ")", "\n", "\n", "ix", "=", "np", ".", "argmin", "(", "(", "alphas", "-", "0.5", ")", "**", "2", ")", "\n", "print", "(", "alphas", "[", "ix", "]", ")", "\n", "beta_2", "=", "betas", "[", "ix", "]", "\n", "\n", "beta_3", "=", "UMPPoisson", ".", "beta_on_poisson_closed_form3", "(", "t1", "=", "25", ",", "t2", "=", "25", ",", "lmb_base", "=", "12", ",", "effect", "=", "3", ")", "\n", "assert", "abs", "(", "beta_2", "-", "beta_1", ")", "/", "beta_2", "<", "1e-3", "and", "abs", "(", "beta_3", "-", "beta_1", ")", "/", "beta_3", "<", "1e-3", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.hypothesis_testing_failure_rate.tst_ump_poisson_on_comp_poisson": [[39, 51], ["UMPPoisson.beta_on_poisson_closed_form", "alpha_beta_curve", "numpy.argmin", "print", "stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs_s"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.alpha_beta_curve", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs_s"], ["", "def", "tst_ump_poisson_on_comp_poisson", "(", ")", ":", "\n", "## Only works for l=1!\t", "\n", "\t", "l", "=", "1", ";", "p", "=", ".3", "\n", "beta_1", "=", "UMPPoisson", ".", "beta_on_poisson_closed_form", "(", "t1", "=", "25", ",", "t2", "=", "25", ",", "lmb_base", "=", "12", "*", "l", "*", "p", ",", "effect", "=", "1", "*", "l", "*", "p", ",", "alpha", "=", "0.1", ")", "\n", "dist_rvs_compound", "=", "lambda", "lmb", ",", "t", ":", "CompoundPoisson", ".", "rvs_s", "(", "lmb", "*", "t", ",", "l", ",", "p", ",", "compound", "=", "'binom'", ")", "\n", "alphas", ",", "betas", ",", "alpha_hats", "=", "alpha_beta_curve", "(", "dist_rvs_compound", ",", "n_sim", "=", "10000", ",", "lmb", "=", "12", ",", "t1", "=", "25", ",", "t2", "=", "25", ",", "scale", "=", "1.0", ",", "dellmb", "=", "1", ")", "\n", "ix", "=", "np", ".", "argmin", "(", "(", "alpha_hats", "-", "0.1", ")", "**", "2", ")", "\n", "print", "(", "alpha_hats", "[", "ix", "]", ")", "\n", "beta_2", "=", "betas", "[", "ix", "]", "\n", "assert", "(", "beta_2", "-", "beta_1", ")", "/", "beta_1", "<", "1e-3", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.hypothesis_testing_failure_rate.tst_ump_poisson_on_neg_binom": [[54, 73], ["alpha_beta_tracer", "numpy.argmin", "print", "print", "UMPPoisson.beta_on_negbinom_closed_form3", "UMPPoisson.beta_on_negbinom_closed_form", "UMPPoisson.beta_on_negbinom_closed_form", "stochproc.count_distributions.negative_binomial.rvs_mxd_poisson", "stochproc.count_distributions.negative_binomial.rvs_mxd_poisson", "abs", "abs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.alpha_beta_tracer", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_negbinom_closed_form3", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_negbinom_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_negbinom_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.rvs_mxd_poisson", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.rvs_mxd_poisson"], ["", "def", "tst_ump_poisson_on_neg_binom", "(", ")", ":", "\n", "\t", "beta_1", "=", "UMPPoisson", ".", "beta_on_negbinom_closed_form", "(", "t1", "=", "10", ",", "t2", "=", "10", ",", "theta_base", "=", "5", ",", "m", "=", "100.0", ",", "deltheta", "=", "1", ",", "alpha", "=", "0.1", ",", "cut_dat", "=", "1e4", ")", "[", "0", "]", "\n", "\n", "beta_1_50", "=", "UMPPoisson", ".", "beta_on_negbinom_closed_form", "(", "t1", "=", "10", ",", "t2", "=", "10", ",", "theta_base", "=", "5", ",", "m", "=", "100.0", ",", "deltheta", "=", "1", ",", "alpha", "=", "0.5", ",", "cut_dat", "=", "1e4", ")", "[", "0", "]", "\n", "\n", "rvs_mxd_poisson_0", "=", "lambda", "t", ":", "rvs_mxd_poisson", "(", "t", ",", "5", ",", "100", ")", "\n", "rvs_mxd_poisson_1", "=", "lambda", "t", ":", "rvs_mxd_poisson", "(", "t", ",", "4", ",", "100", ")", "\n", "\n", "alphas2", ",", "betas2", ",", "alpha_hats2", "=", "alpha_beta_tracer", "(", "rvs_mxd_poisson_0", ",", "rvs_mxd_poisson_1", ",", "t1", "=", "10", ",", "t2", "=", "10", ")", "\n", "ix", "=", "np", ".", "argmin", "(", "(", "alpha_hats2", "-", "0.1", ")", "**", "2", ")", "\n", "print", "(", "alpha_hats2", "[", "ix", "]", ")", "\n", "beta_2", "=", "betas2", "[", "ix", "]", "\n", "print", "(", "beta_2", ")", "\n", "\n", "beta_3", "=", "UMPPoisson", ".", "beta_on_negbinom_closed_form3", "(", "t1", "=", "10", ",", "t2", "=", "10", ",", "theta_base", "=", "5", ",", "m", "=", "100.0", ",", "deltheta", "=", "1", ")", "\n", "assert", "abs", "(", "beta_1", "-", "beta_2", ")", "/", "beta_1", "<", "1e-3", "and", "abs", "(", "beta_1_50", "-", "beta_3", ")", "/", "beta_1_50", "<", "1e-9", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.hypothesis_testing_failure_rate.tst_ump_poisson_on_determinist_cmpnd_alpha": [[80, 99], ["stochproc.UMPPoisson.alpha_on_determinist_compound_closed_form", "numpy.argmin", "print", "alpha_beta_curve", "numpy.argmin", "print", "stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs_s", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.show", "abs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.alpha_on_determinist_compound_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.alpha_beta_curve", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs_s"], ["", "def", "tst_ump_poisson_on_determinist_cmpnd_alpha", "(", "plot", "=", "False", ")", ":", "\n", "\t", "alphas", ",", "alpha_hats", ",", "pois_mas", "=", "xtst", ".", "UMPPoisson", ".", "alpha_on_determinist_compound_closed_form", "(", "lmb", "=", "10.0", ",", "t1", "=", "10", ",", "t2", "=", "10", ",", "l", "=", "3", ")", "\n", "ix", "=", "np", ".", "argmin", "(", "(", "alpha_hats", "-", "0.05", ")", "**", "2", ")", "\n", "print", "(", "alpha_hats", "[", "ix", "]", ")", "\n", "alpha", "=", "alphas", "[", "ix", "]", "\n", "l", "=", "3", ";", "p", "=", "1.0", "\n", "dist_rvs_compound", "=", "lambda", "lmb", ",", "t", ":", "CompoundPoisson", ".", "rvs_s", "(", "lmb", "*", "t", ",", "l", ",", "p", ",", "compound", "=", "'binom'", ")", "\n", "alphas1", ",", "betas1", ",", "alpha_hats1", "=", "alpha_beta_curve", "(", "dist_rvs_compound", ",", "n_sim", "=", "10000", ",", "lmb", "=", "10", ",", "t1", "=", "10", ",", "t2", "=", "10", ",", "scale", "=", "1.0", ",", "dellmb", "=", "0", ")", "\n", "ix", "=", "np", ".", "argmin", "(", "(", "alpha_hats1", "-", "0.05", ")", "**", "2", ")", "\n", "print", "(", "alpha_hats1", "[", "ix", "]", ")", "\n", "alpha1", "=", "alphas1", "[", "ix", "]", "\n", "if", "plot", ":", "\n", "\t\t", "plt", ".", "plot", "(", "alpha_hats", ",", "alphas", ",", "label", "=", "'Closed form'", ")", "\n", "plt", ".", "plot", "(", "alpha_hats1", ",", "alphas1", ",", "label", "=", "'Simulated'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "assert", "abs", "(", "alpha1", "-", "alpha", ")", "/", "alpha1", "<", "1e-3", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.hypothesis_testing_failure_rate.weird_behavior": [[101, 109], ["UMPPoisson.beta_on_poisson_closed_form", "UMPPoisson.beta_on_poisson_closed_form"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form"], ["", "def", "weird_behavior", "(", ")", ":", "\n", "\t", "UMPPoisson", ".", "beta_on_poisson_closed_form", "(", "t1", "=", "0.5", ",", "t2", "=", "0.1", ",", "lmb_base", "=", "2", ",", "alpha", "=", "0.1", ",", "effect", "=", "10.0", ")", "\n", "#Out[19]: (0.7202482866175243, 0.9999999865720979)", "\n", "UMPPoisson", ".", "beta_on_poisson_closed_form", "(", "t1", "=", "0.6", ",", "t2", "=", "0.1", ",", "lmb_base", "=", "2", ",", "alpha", "=", "0.1", ",", "effect", "=", "10.0", ")", "\n", "#Out[19]: (0.7359201224192129, 0.9999999938916904)", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.hypothesis_testing_failure_rate.weird_behavior2": [[114, 123], ["UMPPoisson.beta_on_poisson_closed_form", "UMPPoisson.beta_on_poisson_closed_form"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form"], ["", "def", "weird_behavior2", "(", ")", ":", "\n", "\t", "UMPPoisson", ".", "beta_on_poisson_closed_form", "(", "t1", "=", "0.5", ",", "t2", "=", "0.23", ",", "lmb_base", "=", "2", ",", "alpha", "=", "0.1", ",", "effect", "=", "10.0", ")", "\n", "#Out[22]: (0.46287986945821635, 0.9999999800514148)", "\n", "\n", "UMPPoisson", ".", "beta_on_poisson_closed_form", "(", "t1", "=", "0.5", ",", "t2", "=", "0.3", ",", "lmb_base", "=", "2", ",", "alpha", "=", "0.1", ",", "effect", "=", "10.0", ")", "\n", "#Out[23]: (0.500373244503035, 0.9999999794679547)", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.hypothesis_testing_failure_rate.beta_with_t": [[126, 139], ["numpy.arange", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.plot", "matplotlib.show", "UMPPoisson.beta_on_poisson_closed_form", "betas.append"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson_closed_form"], ["", "def", "beta_with_t", "(", ")", ":", "\n", "\t", "betas", "=", "[", "]", "\n", "ts", "=", "np", ".", "arange", "(", "1.5", ",", "6.5", ",", "0.1", ")", "\n", "for", "t", "in", "ts", ":", "\n", "\t\t", "beta", "=", "UMPPoisson", ".", "beta_on_poisson_closed_form", "(", "t1", "=", "t", ",", "t2", "=", "t", ",", "lmb_base", "=", "10", ",", "alpha", "=", "0.1", ",", "effect", "=", "5.0", ")", "\n", "betas", ".", "append", "(", "beta", "[", "0", "]", ")", "\n", "", "plt", ".", "xlabel", "(", "'VM centuries in both groups'", ")", "\n", "plt", ".", "ylabel", "(", "'False negative rate for the test holding false positive at 15%'", ")", "\n", "plt", ".", "plot", "(", "ts", ",", "betas", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.hypothesis_testing_failure_rate.concrete_case_rising_beta": [[141, 157], ["UMPPoisson.beta_on_poisson", "UMPPoisson.beta_on_poisson", "numpy.arange", "scipy.stats.binom.sf", "matplotlib.plot", "matplotlib.plot", "matplotlib.show", "scipy.stats.binom.isf"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_poisson"], ["", "def", "concrete_case_rising_beta", "(", ")", ":", "\n", "\t", "UMPPoisson", ".", "beta_on_poisson", "(", "t1", "=", "0.695", ",", "t2", "=", "0.23", ",", "lmb_base", "=", "2", ",", "alpha", "=", "0.1", ",", "effect", "=", "10.0", ")", "\n", "UMPPoisson", ".", "beta_on_poisson", "(", "t1", "=", "0.4988", ",", "t2", "=", "0.23", ",", "lmb_base", "=", "2", ",", "alpha", "=", "0.1", ",", "effect", "=", "10.0", ")", "\n", "alpha_hats", "=", "np", ".", "arange", "(", "0.001", ",", "1.0", ",", "0.0001", ")", "\n", "alphas", "=", "binom", ".", "sf", "(", "binom", ".", "isf", "(", "alpha_hats", ",", "10", ",", "0.5", ")", ",", "10", ",", "0.5", ")", "\n", "plt", ".", "plot", "(", "alpha_hats", ",", "alphas", ")", "\n", "x1", ",", "y1", "=", "[", "0", ",", "1", "]", ",", "[", "0", ",", "1", "]", "\n", "x2", ",", "y2", "=", "[", "0", ",", "1", "]", ",", "[", "0", ",", "1", "]", "\n", "plt", ".", "plot", "(", "x1", ",", "y1", ",", "marker", "=", "'o'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.plots.plot_alpha_hats_w_alpha_determinst_poisson": [[15, 41], ["stochproc.UMPPoisson.alpha_on_determinist_compound_closed_form", "stochproc.UMPPoisson.alpha_on_determinist_compound_closed_form", "stochproc.UMPPoisson.alpha_on_determinist_compound_closed_form", "stochproc.UMPPoisson.alpha_on_determinist_compound_closed_form", "stochproc.UMPPoisson.alpha_on_determinist_compound_closed_form", "stochproc.UMPPoisson.alpha_on_determinist_compound_closed_form", "seaborn.color_palette", "color_list.as_hex.as_hex", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.show"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.alpha_on_determinist_compound_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.alpha_on_determinist_compound_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.alpha_on_determinist_compound_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.alpha_on_determinist_compound_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.alpha_on_determinist_compound_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.alpha_on_determinist_compound_closed_form"], ["def", "plot_alpha_hats_w_alpha_determinst_poisson", "(", ")", ":", "\n", "\t", "alphas1", ",", "alpha_hats1", ",", "pois_mas", "=", "xtst", ".", "UMPPoisson", ".", "alpha_on_determinist_compound_closed_form", "(", "lmb", "=", "10.0", ",", "t1", "=", "10", ",", "t2", "=", "10", ",", "l", "=", "1", ")", "\n", "alphas2", ",", "alpha_hats2", ",", "pois_mas", "=", "xtst", ".", "UMPPoisson", ".", "alpha_on_determinist_compound_closed_form", "(", "lmb", "=", "10.0", ",", "t1", "=", "10", ",", "t2", "=", "10", ",", "l", "=", "2", ")", "\n", "alphas3", ",", "alpha_hats3", ",", "pois_mas", "=", "xtst", ".", "UMPPoisson", ".", "alpha_on_determinist_compound_closed_form", "(", "lmb", "=", "10.0", ",", "t1", "=", "10", ",", "t2", "=", "10", ",", "l", "=", "3", ")", "\n", "alphas4", ",", "alpha_hats4", ",", "pois_mas", "=", "xtst", ".", "UMPPoisson", ".", "alpha_on_determinist_compound_closed_form", "(", "lmb", "=", "10.0", ",", "t1", "=", "10", ",", "t2", "=", "10", ",", "l", "=", "4", ")", "\n", "alphas5", ",", "alpha_hats5", ",", "pois_mas", "=", "xtst", ".", "UMPPoisson", ".", "alpha_on_determinist_compound_closed_form", "(", "lmb", "=", "10.0", ",", "t1", "=", "10", ",", "t2", "=", "10", ",", "l", "=", "5", ")", "\n", "alphas6", ",", "alpha_hats6", ",", "pois_mas", "=", "xtst", ".", "UMPPoisson", ".", "alpha_on_determinist_compound_closed_form", "(", "lmb", "=", "10.0", ",", "t1", "=", "10", ",", "t2", "=", "10", ",", "l", "=", "6", ")", "\n", "\n", "color_list", "=", "sns", ".", "color_palette", "(", "\"RdBu_r\"", ",", "6", ")", "\n", "color_list", "=", "color_list", ".", "as_hex", "(", ")", "\n", "plt", ".", "plot", "(", "alpha_hats1", ",", "alphas1", ",", "label", "=", "'l=1'", ",", "color", "=", "color_list", "[", "0", "]", ")", "\n", "plt", ".", "plot", "(", "alpha_hats2", ",", "alphas2", ",", "label", "=", "'l=2'", ",", "color", "=", "color_list", "[", "1", "]", ")", "\n", "plt", ".", "plot", "(", "alpha_hats3", ",", "alphas3", ",", "label", "=", "'l=3'", ",", "color", "=", "color_list", "[", "2", "]", ")", "\n", "plt", ".", "plot", "(", "alpha_hats4", ",", "alphas4", ",", "label", "=", "'l=4'", ",", "color", "=", "color_list", "[", "3", "]", ")", "\n", "plt", ".", "plot", "(", "alpha_hats5", ",", "alphas5", ",", "label", "=", "'l=5'", ",", "color", "=", "color_list", "[", "4", "]", ")", "\n", "plt", ".", "plot", "(", "alpha_hats6", ",", "alphas6", ",", "label", "=", "'l=6'", ",", "color", "=", "color_list", "[", "5", "]", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "\"Type-1 error rate\"", ")", "\n", "plt", ".", "ylabel", "(", "\"False positive rate\"", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.plots.qq_plot": [[43, 45], ["stochproc.CompBinom.make_qq_plot"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.qq_plots.compound_poisson_distribns.CompBinom.make_qq_plot"], ["", "def", "qq_plot", "(", ")", ":", "\n", "\t", "cpd", ".", "CompBinom", ".", "make_qq_plot", "(", "0.5", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.plots.binom_comp_poisson_alpha_beta": [[47, 101], ["stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "print", "stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "print", "stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "print", "stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "print", "stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "print", "stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "print", "stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "print", "stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "print", "seaborn.color_palette", "color_list.as_hex.as_hex", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.show", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.show", "scipy.stats.poisson.rvs", "stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs_s", "stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs_s", "stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs_s", "stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs_s", "stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs_s", "stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs_s", "stochproc.count_distributions.compound_poisson.CompoundPoisson.rvs_s"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.hypoth_tst_simulator.run_simulns", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs_s", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs_s", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs_s", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs_s", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs_s", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs_s", "home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs_s"], ["", "def", "binom_comp_poisson_alpha_beta", "(", ")", ":", "\n", "\t", "dist_rvs_poisson", "=", "lambda", "lmb", ",", "t", ":", "poisson", ".", "rvs", "(", "lmb", "*", "t", ")", "\n", "alphas1", ",", "betas1", ",", "alpha_hats1", "=", "run_simulns", "(", "fn", "=", "dist_rvs_poisson", ")", "\n", "print", "(", "\"Poisson done!\"", ")", "\n", "dist_rvs_compound", "=", "lambda", "lmb", ",", "t", ":", "CompoundPoisson", ".", "rvs_s", "(", "lmb", "*", "t", ",", "2", ",", ".4", ",", "compound", "=", "'binom'", ")", "\n", "alphas2", ",", "betas2", ",", "alpha_hats2", "=", "run_simulns", "(", "fn", "=", "dist_rvs_compound", ",", "n_sim", "=", "50000", ")", "\n", "print", "(", "\"l=2 done\"", ")", "\n", "dist_rvs_compound", "=", "lambda", "lmb", ",", "t", ":", "CompoundPoisson", ".", "rvs_s", "(", "lmb", "*", "t", ",", "3", ",", ".4", ",", "compound", "=", "'binom'", ")", "\n", "alphas3", ",", "betas3", ",", "alpha_hats3", "=", "run_simulns", "(", "fn", "=", "dist_rvs_compound", ",", "n_sim", "=", "5000", ")", "\n", "print", "(", "\"l=3 done\"", ")", "\n", "dist_rvs_compound", "=", "lambda", "lmb", ",", "t", ":", "CompoundPoisson", ".", "rvs_s", "(", "lmb", "*", "t", ",", "4", ",", ".4", ",", "compound", "=", "'binom'", ")", "\n", "alphas4", ",", "betas4", ",", "alpha_hats4", "=", "run_simulns", "(", "fn", "=", "dist_rvs_compound", ",", "n_sim", "=", "5000", ")", "\n", "print", "(", "\"l=4 done\"", ")", "\n", "dist_rvs_compound", "=", "lambda", "lmb", ",", "t", ":", "CompoundPoisson", ".", "rvs_s", "(", "lmb", "*", "t", ",", "5", ",", ".4", ",", "compound", "=", "'binom'", ")", "\n", "alphas5", ",", "betas5", ",", "alpha_hats5", "=", "run_simulns", "(", "fn", "=", "dist_rvs_compound", ",", "n_sim", "=", "5000", ")", "\n", "print", "(", "\"l=5 done\"", ")", "\n", "dist_rvs_compound", "=", "lambda", "lmb", ",", "t", ":", "CompoundPoisson", ".", "rvs_s", "(", "lmb", "*", "t", ",", "6", ",", ".4", ",", "compound", "=", "'binom'", ")", "\n", "alphas6", ",", "betas6", ",", "alpha_hats6", "=", "run_simulns", "(", "fn", "=", "dist_rvs_compound", ",", "n_sim", "=", "5000", ")", "\n", "print", "(", "\"l=5 done\"", ")", "\n", "dist_rvs_compound", "=", "lambda", "lmb", ",", "t", ":", "CompoundPoisson", ".", "rvs_s", "(", "lmb", "*", "t", ",", "10", ",", ".4", ",", "compound", "=", "'binom'", ")", "\n", "alphas10", ",", "betas10", ",", "alpha_hats10", "=", "run_simulns", "(", "fn", "=", "dist_rvs_compound", ",", "n_sim", "=", "5000", ")", "\n", "print", "(", "\"l=10 done\"", ")", "\n", "dist_rvs_compound", "=", "lambda", "lmb", ",", "t", ":", "CompoundPoisson", ".", "rvs_s", "(", "lmb", "*", "t", ",", "20", ",", ".4", ",", "compound", "=", "'binom'", ")", "\n", "alphas20", ",", "betas20", ",", "alpha_hats20", "=", "run_simulns", "(", "fn", "=", "dist_rvs_compound", ",", "n_sim", "=", "5000", ")", "\n", "print", "(", "\"all done\"", ")", "\n", "\n", "color_list", "=", "sns", ".", "color_palette", "(", "\"RdBu_r\"", ",", "20", ")", "\n", "color_list", "=", "color_list", ".", "as_hex", "(", ")", "\n", "\n", "plt", ".", "plot", "(", "alphas1", ",", "betas1", ",", "label", "=", "'UMP poisson on poisson'", ",", "color", "=", "'black'", ")", "\n", "plt", ".", "plot", "(", "alphas2", ",", "betas2", ",", "label", "=", "'UMP poisson on compound poisson l=2'", ",", "color", "=", "color_list", "[", "1", "]", ")", "\n", "plt", ".", "plot", "(", "alphas3", ",", "betas3", ",", "label", "=", "'UMP poisson on compound poisson l=3'", ",", "color", "=", "color_list", "[", "2", "]", ")", "\n", "plt", ".", "plot", "(", "alphas4", ",", "betas4", ",", "label", "=", "'UMP poisson on compound poisson l=4'", ",", "color", "=", "color_list", "[", "3", "]", ")", "\n", "plt", ".", "plot", "(", "alphas5", ",", "betas5", ",", "label", "=", "'UMP poisson on compound poisson l=5'", ",", "color", "=", "color_list", "[", "4", "]", ")", "\n", "plt", ".", "plot", "(", "alphas6", ",", "betas6", ",", "label", "=", "'UMP poisson on compound poisson l=6'", ",", "color", "=", "color_list", "[", "5", "]", ")", "\n", "plt", ".", "plot", "(", "alphas10", ",", "betas10", ",", "label", "=", "'UMP poisson on compound poisson l=10'", ",", "color", "=", "color_list", "[", "9", "]", ")", "\n", "plt", ".", "plot", "(", "alphas20", ",", "betas20", ",", "label", "=", "'UMP poisson on compound poisson l=20'", ",", "color", "=", "color_list", "[", "19", "]", ")", "\n", "plt", ".", "xlabel", "(", "'Alpha'", ")", "\n", "plt", ".", "ylabel", "(", "'Beta'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "plt", ".", "plot", "(", "alpha_hats1", ",", "alphas1", ",", "label", "=", "'UMP poisson on poisson'", ")", "\n", "plt", ".", "plot", "(", "alpha_hats2", ",", "alphas2", ",", "label", "=", "'UMP poisson on compound poisson l=2'", ",", "color", "=", "color_list", "[", "1", "]", ")", "\n", "plt", ".", "plot", "(", "alpha_hats3", ",", "alphas3", ",", "label", "=", "'UMP poisson on compound poisson l=3'", ",", "color", "=", "color_list", "[", "2", "]", ")", "\n", "plt", ".", "plot", "(", "alpha_hats4", ",", "alphas4", ",", "label", "=", "'UMP poisson on compound poisson l=4'", ",", "color", "=", "color_list", "[", "3", "]", ")", "\n", "plt", ".", "plot", "(", "alpha_hats5", ",", "alphas5", ",", "label", "=", "'UMP poisson on compound poisson l=5'", ",", "color", "=", "color_list", "[", "4", "]", ")", "\n", "plt", ".", "plot", "(", "alpha_hats6", ",", "alphas6", ",", "label", "=", "'UMP poisson on compound poisson l=6'", ",", "color", "=", "color_list", "[", "5", "]", ")", "\n", "plt", ".", "plot", "(", "alpha_hats10", ",", "alphas10", ",", "label", "=", "'UMP poisson on compound poisson l=10'", ",", "color", "=", "color_list", "[", "9", "]", ")", "\n", "plt", ".", "plot", "(", "alpha_hats20", ",", "alphas20", ",", "label", "=", "'UMP poisson on compound poisson l=20'", ",", "color", "=", "color_list", "[", "19", "]", ")", "\n", "plt", ".", "xlabel", "(", "'Type-1 error'", ")", "\n", "plt", ".", "ylabel", "(", "'False positive rate'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.plots.binom_tst_on_nbd_beta": [[103, 128], ["numpy.array", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.plot", "numpy.array", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.plot", "matplotlib.show", "betas_m.append", "betas_t.append", "stochproc.UMPPoisson.beta_on_negbinom_closed_form", "stochproc.UMPPoisson.beta_on_negbinom_closed_form"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_negbinom_closed_form", "home.repos.pwc.inspect_result.ryu577_stochproc.hypothesis.rate_test.UMPPoisson.beta_on_negbinom_closed_form"], ["", "def", "binom_tst_on_nbd_beta", "(", ")", ":", "\n", "\t", "ms", "=", "np", ".", "array", "(", "[", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",", "80", ",", "90", ",", "100", ",", "120", ",", "150", ",", "200", ",", "250", ",", "320", ",", "500", ",", "700", ",", "1000", "]", ")", "\n", "betas_m", "=", "[", "]", "\n", "##Changing m", "\n", "for", "m", "in", "ms", ":", "\n", "\t\t", "beta_m_10", "=", "xtst", ".", "UMPPoisson", ".", "beta_on_negbinom_closed_form", "(", "t1", "=", "30", ",", "t2", "=", "30", ",", "theta_base", "=", "5", ",", "m", "=", "m", ",", "deltheta", "=", "1", ",", "alpha", "=", "0.05", ",", "cut_dat", "=", "1e4", ")", "[", "0", "]", "\n", "betas_m", ".", "append", "(", "beta_m_10", ")", "\n", "", "plt", ".", "xlabel", "(", "\"The m parameter of both groups\"", ")", "\n", "plt", ".", "ylabel", "(", "\"False negative rate for type-1 error=0.05\"", ")", "\n", "plt", ".", "plot", "(", "ms", ",", "betas_m", ")", "\n", "\n", "\n", "ts", "=", "np", ".", "array", "(", "[", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",", "80", ",", "90", ",", "100", ",", "120", ",", "150", ",", "200", ",", "250", ",", "320", ",", "500", ",", "700", ",", "1000", ",", "1500", ",", "2000", ",", "4000", "]", ")", "\n", "betas_t", "=", "[", "]", "\n", "##Changing m", "\n", "for", "t", "in", "ts", ":", "\n", "\t\t", "beta_t_10", "=", "xtst", ".", "UMPPoisson", ".", "beta_on_negbinom_closed_form", "(", "t1", "=", "t", ",", "t2", "=", "t", ",", "theta_base", "=", "5", ",", "m", "=", "10", ",", "deltheta", "=", "1", ",", "alpha", "=", "0.05", ",", "cut_dat", "=", "1e4", ")", "[", "0", "]", "\n", "betas_t", ".", "append", "(", "beta_t_10", ")", "\n", "\n", "", "plt", ".", "xlabel", "(", "\"Time period of observation in both groups\"", ")", "\n", "plt", ".", "ylabel", "(", "\"False negative rate for type-1 error=0.05\"", ")", "\n", "plt", ".", "plot", "(", "ts", ",", "betas_t", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.tests.tst_eigen_coefs": [[15, 21], ["numpy.matrix", "get_coefs", "numpy.array", "numpy.array", "numpy.linalg.inv", "numpy.linalg.eig", "numpy.linalg.eig"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_coefs"], ["def", "tst_eigen_coefs", "(", ")", ":", "\n", "\t", "coef", "=", "np", ".", "array", "(", "np", ".", "linalg", ".", "inv", "(", "np", ".", "linalg", ".", "eig", "(", "a", ")", "[", "1", "]", ")", ".", "T", "[", "2", "]", ")", "[", "0", "]", "*", "np", ".", "array", "(", "np", ".", "linalg", ".", "eig", "(", "a", ")", "[", "1", "]", "[", "0", "]", ")", "[", "0", "]", "\n", "#sum(coef*np.linalg.eig(a)[0]**5) == np.dot(a,np.dot(a,np.dot(a,np.dot(a,a))))[0,2]", "\n", "a", "=", "np", ".", "matrix", "(", "[", "[", ".5", ",", ".5", ",", "0", "]", ",", "[", ".5", ",", "0", ",", ".5", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "a_c", ",", "a_e", "=", "get_coefs", "(", "a", ")", "\n", "assert", "coef", "[", "0", "]", "==", "a_c", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.tests.tst_diagonalizable": [[22, 27], ["numpy.matrix", "numpy.dot", "numpy.dot", "numpy.linalg.inv", "numpy.diag", "numpy.linalg.eig", "numpy.linalg.eig", "numpy.linalg.eig"], "function", ["None"], ["", "def", "tst_diagonalizable", "(", ")", ":", "\n", "\t", "a", "=", "np", ".", "matrix", "(", "[", "[", ".5", ",", ".5", ",", "0", "]", ",", "[", ".5", ",", "0", ",", ".5", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "## Get back A from its eigen decomposition.", "\n", "a1", "=", "np", ".", "dot", "(", "np", ".", "dot", "(", "np", ".", "linalg", ".", "eig", "(", "a", ")", "[", "1", "]", ",", "np", ".", "diag", "(", "np", ".", "linalg", ".", "eig", "(", "a", ")", "[", "0", "]", ")", ")", ",", "np", ".", "linalg", ".", "inv", "(", "np", ".", "linalg", ".", "eig", "(", "a", ")", "[", "1", "]", ")", ")", "\n", "assert", "a", "[", "0", ",", "0", "]", "==", "a1", "[", "0", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.tests.tst_powers1": [[28, 31], ["get_n_powers"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_n_powers"], ["", "def", "tst_powers1", "(", ")", ":", "\n", "\t", "powrs", "=", "get_n_powers", "(", "[", ".5", ",", ".5", ",", "1", "]", ")", "\n", "assert", "powrs", "[", "1", "]", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.tests.tst_powers2": [[32, 35], ["get_n_powers"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.get_n_powers"], ["", "def", "tst_powers2", "(", ")", ":", "\n", "\t", "powrs", "=", "get_n_powers", "(", "[", ".5", ",", ".5", ",", "1", ",", ".4", ",", ".4", ",", ".4", ",", "1", "]", ")", "\n", "assert", "powrs", "[", "5", "]", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.tests.tst_power_series": [[36, 38], ["abs", "sum_inf_n_powklambda_pown"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.competitivecointoss.smallmarkov.sum_inf_n_powklambda_pown"], ["", "def", "tst_power_series", "(", ")", ":", "\n", "\t", "assert", "abs", "(", "sum_inf_n_powklambda_pown", "(", ".25", ",", "3", ")", "-", ".25", "/", ".75", "**", "4", "*", "(", "2", "+", ".25", "**", "2", ")", ")", "<", "1e-13", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.tests.tst_k_of_n_netwrk": [[39, 41], ["abs", "is_master_available"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.is_master_available"], ["", "def", "tst_k_of_n_netwrk", "(", ")", ":", "\n", "\t", "assert", "abs", "(", "is_master_available", "(", "0.97", ",", "2", ",", "3", ",", "0.5", ")", "-", "(", "1", "-", "(", "1", "-", "0.97", ")", "**", "3", ")", ")", "<", "1e-4", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.tests.tst_three_of_four_sim": [[42, 44], ["abs", "three_of_four_connectivity", "is_master_available"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.three_of_four_connectivity", "home.repos.pwc.inspect_result.ryu577_stochproc.reliability.machinerepair.is_master_available"], ["", "def", "tst_three_of_four_sim", "(", ")", ":", "\n", "\t", "assert", "abs", "(", "three_of_four_connectivity", "(", "0.5", ")", "-", "is_master_available", "(", "0.5", ",", "3", ",", "4", ",", "sure_conncn", "=", "{", "}", ",", "nsim", "=", "1000000", ")", ")", "<", "1e-3", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.tests.tst_winning_at_nth_toss": [[45, 53], ["numpy.array", "numpy.matrix", "numpy.array", "numpy.array", "sum", "numpy.dot", "range", "numpy.dot", "range", "numpy.linalg.matrix_power", "numpy.linalg.matrix_power", "numpy.diff"], "function", ["None"], ["", "def", "tst_winning_at_nth_toss", "(", ")", ":", "\n", "\t", "start2", "=", "np", ".", "array", "(", "[", "1", ",", "0", ",", "0", ",", "0", "]", ")", "\n", "m_4", "=", "np", ".", "matrix", "(", "[", "[", ".5", ",", ".5", ",", "0", ",", "0", "]", ",", "[", ".5", ",", "0", ",", ".5", ",", "0", "]", ",", "[", ".5", ",", "0", ",", "0", ",", ".5", "]", ",", "[", "0", ",", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "q_n", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start2", ",", "np", ".", "linalg", ".", "matrix_power", "(", "m_4", ",", "n", ")", ")", "[", "0", ",", "3", "]", "for", "n", "in", "range", "(", "100", ")", "]", ")", "\n", "q_n_minus_1", "=", "np", ".", "array", "(", "[", "np", ".", "dot", "(", "start2", ",", "np", ".", "linalg", ".", "matrix_power", "(", "m_4", ",", "n", ")", ")", "[", "0", ",", "2", "]", "for", "n", "in", "range", "(", "100", ")", "]", ")", "\n", "assert", "sum", "(", "np", ".", "diff", "(", "q_n", ")", "[", ":", "20", "]", "-", "q_n_minus_1", "[", ":", "20", "]", "/", "2", ")", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.simulation.state_change_times": [[6, 21], ["pandas.DataFrame", "numpy.array", "numpy.array", "range", "res.sort_values.sort_values", "stochproc.birth_death_processes.birth_death_gen.birth_death_gen", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.ones", "len", "numpy.ones", "len"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.birth_death_processes.birth_death_gen.birth_death_gen"], ["pl1", "=", "0", "\n", "pl2", "=", "0", "\n", "while", "victor", "==", "2", ":", "\n", "        ", "toss1", "=", "(", "np", ".", "random", ".", "uniform", "(", ")", "<", "0.5", ")", "\n", "toss2", "=", "(", "np", ".", "random", ".", "uniform", "(", ")", "<", "0.5", ")", "\n", "if", "toss1", ":", "\n", "            ", "pl1", "+=", "1", "\n", "pl1", "=", "min", "(", "pl1", ",", "2", ")", "\n", "#else:", "\n", "#    pl1 = 0", "\n", "", "if", "toss2", ":", "\n", "            ", "pl2", "+=", "1", "\n", "pl2", "=", "min", "(", "pl2", ",", "3", ")", "\n", "#else:", "\n", "#    pl2 = 0", "\n", "", "if", "pl1", "==", "2", "and", "pl2", "==", "3", ":", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.simulation.n_machine_transitions": [[23, 31], ["simulation.state_change_times", "len", "pandas.DataFrame", "numpy.array", "numpy.array", "numpy.cumsum"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.tests.simulation.state_change_times"], ["\n", "", "if", "pl1", "==", "2", "and", "pl2", "<", "3", ":", "\n", "            ", "victor", "=", "0", "\n", "\n", "", "if", "pl2", "==", "3", "and", "pl1", "<", "2", ":", "\n", "            ", "victor", "=", "1", "\n", "# elif pl1 == 2 and pl2 == 3:", "\n", "#    pl1 = pl2 = 0", "\n", "", "", "return", "victor", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.tests.simulation.k_of_n_system": [[33, 36], ["simulation.n_machine_transitions"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.tests.simulation.n_machine_transitions"], ["\n", "", "def", "get_winner_prob", "(", "N", "=", "1000", ")", ":", "\n", "    ", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.prcntl_bias": [[9, 23], ["int", "range", "numpy.floor", "numpy.log", "numpy.modf", "stochproc.quantile.expon_based_estimators.expon_frac", "exponential.expon_low_mse_frac"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.expon_frac", "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.expon_low_mse_frac"], ["def", "prcntl_bias", "(", "q", ",", "n", ",", "interpolate", "=", "1", ")", ":", "\n", "    ", "lt", "=", "int", "(", "np", ".", "floor", "(", "q", "*", "(", "n", "-", "1", ")", ")", ")", "\n", "summ", "=", "0", "\n", "for", "ix", "in", "range", "(", "lt", "+", "1", ")", ":", "\n", "        ", "summ", "+=", "1", "/", "(", "n", "-", "ix", ")", "\n", "", "if", "interpolate", "==", "1", ":", "\n", "        ", "summ", "+=", "np", ".", "modf", "(", "q", "*", "(", "n", "-", "1", ")", ")", "[", "0", "]", "/", "(", "n", "-", "lt", "-", "1", ")", "\n", "", "elif", "interpolate", "==", "2", ":", "\n", "        ", "summ", "+=", "expon_frac", "(", "q", ",", "n", ")", "/", "(", "n", "-", "lt", "-", "1", ")", "\n", "", "elif", "interpolate", "==", "3", ":", "\n", "        ", "summ", "+=", "1", "/", "(", "n", "-", "lt", "-", "1", ")", "\n", "", "elif", "interpolate", "==", "4", ":", "\n", "        ", "summ", "+=", "expon_low_mse_frac", "(", "q", ",", "n", ")", "/", "(", "n", "-", "lt", "-", "1", ")", "\n", "", "return", "-", "np", ".", "log", "(", "1", "-", "q", ")", "-", "summ", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.prcntl_var": [[26, 40], ["int", "range", "numpy.floor", "numpy.modf", "stochproc.quantile.expon_based_estimators.expon_frac", "exponential.expon_low_mse_frac"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.expon_frac", "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.expon_low_mse_frac"], ["", "def", "prcntl_var", "(", "q", ",", "n", ",", "interpolate", "=", "1", ")", ":", "\n", "    ", "lt", "=", "int", "(", "np", ".", "floor", "(", "q", "*", "(", "n", "-", "1", ")", ")", ")", "\n", "summ", "=", "0", "\n", "for", "ix", "in", "range", "(", "lt", "+", "1", ")", ":", "\n", "        ", "summ", "+=", "1", "/", "(", "n", "-", "ix", ")", "**", "2", "\n", "", "if", "interpolate", "==", "1", ":", "\n", "        ", "summ", "+=", "(", "np", ".", "modf", "(", "q", "*", "(", "n", "-", "1", ")", ")", "[", "0", "]", "/", "(", "n", "-", "lt", "-", "1", ")", ")", "**", "2", "\n", "", "elif", "interpolate", "==", "2", ":", "\n", "        ", "summ", "+=", "(", "expon_frac", "(", "q", ",", "n", ")", "/", "(", "n", "-", "lt", "-", "1", ")", ")", "**", "2", "\n", "", "elif", "interpolate", "==", "3", ":", "\n", "        ", "summ", "+=", "(", "1", "/", "(", "n", "-", "lt", "-", "1", ")", ")", "**", "2", "\n", "", "elif", "interpolate", "==", "4", ":", "\n", "        ", "summ", "+=", "(", "expon_low_mse_frac", "(", "q", ",", "n", ")", "/", "(", "n", "-", "lt", "-", "1", ")", ")", "**", "2", "\n", "", "return", "summ", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.expon_low_mse_frac": [[43, 46], ["int", "numpy.floor", "exponential.prcntl_bias"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.prcntl_bias"], ["", "def", "expon_low_mse_frac", "(", "q", ",", "n", ")", ":", "\n", "    ", "lt", "=", "int", "(", "np", ".", "floor", "(", "q", "*", "(", "n", "-", "1", ")", ")", ")", "\n", "return", "(", "lt", "-", "1", ")", "/", "2", "*", "prcntl_bias", "(", "q", ",", "n", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.analyze_bias": [[48, 86], ["numpy.arange", "matplotlib.style.use", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.axhline", "print", "matplotlib.axvline", "matplotlib.title", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.legend", "exponential.prcntl_bias", "exponential.prcntl_bias", "exponential.prcntl_bias", "exponential.prcntl_bias", "numpy.sqrt", "numpy.sqrt", "exponential.prcntl_bias", "numpy.sqrt", "exponential.prcntl_bias", "scipy.optimize.root_scalar", "matplotlib.savefig", "matplotlib.close", "exponential.prcntl_var", "exponential.prcntl_var", "exponential.prcntl_var", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.prcntl_bias", "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.prcntl_bias", "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.prcntl_bias", "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.prcntl_bias", "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.prcntl_bias", "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.prcntl_bias", "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.prcntl_var", "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.prcntl_var", "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.prcntl_var"], ["", "def", "analyze_bias", "(", "n", "=", "55", ",", "save_close", "=", "True", ")", ":", "\n", "    ", "qs", "=", "np", ".", "arange", "(", "0.01", ",", "1.0", ",", "0.01", ")", "\n", "# biases for linear interpolation.", "\n", "biases1", "=", "[", "prcntl_bias", "(", "q", ",", "n", ",", "1", ")", "for", "q", "in", "qs", "]", "\n", "# biases for no interpolation", "\n", "biases2", "=", "[", "prcntl_bias", "(", "q", ",", "n", ",", "0", ")", "for", "q", "in", "qs", "]", "\n", "# biases for low bias strategy: its always zero. So we over-write it.", "\n", "biases3", "=", "[", "prcntl_bias", "(", "q", ",", "n", ",", "2", ")", "for", "q", "in", "qs", "]", "\n", "# biases for other no interpolation strategy.", "\n", "biases3", "=", "[", "prcntl_bias", "(", "q", ",", "n", ",", "3", ")", "for", "q", "in", "qs", "]", "\n", "# st deviations for linear interpolation", "\n", "st_devs", "=", "[", "np", ".", "sqrt", "(", "prcntl_var", "(", "q", ",", "n", ",", "1", ")", ")", "for", "q", "in", "qs", "]", "\n", "st_devs1", "=", "[", "np", ".", "sqrt", "(", "prcntl_var", "(", "q", ",", "n", ",", "2", ")", ")", "for", "q", "in", "qs", "]", "\n", "biases4", "=", "[", "prcntl_bias", "(", "q", ",", "n", ",", "4", ")", "for", "q", "in", "qs", "]", "\n", "st_devs2", "=", "[", "np", ".", "sqrt", "(", "prcntl_var", "(", "q", ",", "n", ",", "4", ")", ")", "for", "q", "in", "qs", "]", "\n", "\n", "plt", ".", "style", ".", "use", "(", "'dark_background'", ")", "\n", "plt", ".", "plot", "(", "qs", ",", "biases1", ",", "label", "=", "\"Linear interpolation strategy\"", ")", "\n", "plt", ".", "plot", "(", "qs", ",", "biases2", ",", "label", "=", "\"No interpolation strategy\"", ")", "\n", "plt", ".", "plot", "(", "qs", ",", "biases3", ",", "label", "=", "\"No interpolation strategy other\"", ")", "\n", "plt", ".", "plot", "(", "qs", ",", "st_devs", ",", "label", "=", "\"st_dev of linear interpolation\"", ")", "\n", "plt", ".", "plot", "(", "qs", ",", "st_devs1", ",", "label", "=", "\"st_dev of low bias\"", ")", "\n", "plt", ".", "plot", "(", "qs", ",", "biases4", ",", "label", "=", "\"Bias of low MSE strategy\"", ")", "\n", "plt", ".", "plot", "(", "qs", ",", "st_devs2", ",", "label", "=", "\"st dev of low MSE strategy\"", ")", "\n", "\n", "#plt.plot(np.arange(0.1,1.0,0.01), biases3)", "\n", "plt", ".", "axhline", "(", "0", ",", "color", "=", "\"white\"", ")", "\n", "fn1", "=", "lambda", "q", ":", "prcntl_bias", "(", "q", ",", "n", ")", "\n", "rt", "=", "root_scalar", "(", "fn1", ",", "bracket", "=", "[", "0", ",", "1", "]", ",", "method", "=", "'bisect'", ")", ".", "root", "\n", "print", "(", "\"Unbiased percentile: \"", "+", "str", "(", "rt", ")", ")", "\n", "plt", ".", "axvline", "(", "rt", ",", "color", "=", "\"white\"", ")", "\n", "plt", ".", "title", "(", "\"Sample size n=\"", "+", "str", "(", "n", ")", "+", "\" \\nPercentile with no bias is: \"", "+", "str", "(", "\"{:.2f}\"", ".", "format", "(", "rt", "*", "100", ")", ")", ")", "\n", "plt", ".", "xlabel", "(", "\"Percentile (q)\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Bias for the exponential distribution\"", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "if", "save_close", ":", "\n", "        ", "plt", ".", "savefig", "(", "'plots/sample_'", "+", "str", "(", "n", ")", "+", "'.png'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.exponential.proj_var": [[92, 101], ["range", "numpy.log"], "function", ["None"], ["", "def", "proj_var", "(", "n", ",", "q", ",", "i", ")", ":", "\n", "    ", "v", "=", "0", "\n", "b", "=", "0", "\n", "for", "j", "in", "range", "(", "1", ",", "i", "+", "1", ")", ":", "\n", "        ", "v", "+=", "1", "/", "(", "n", "-", "j", ")", "**", "2", "\n", "b", "+=", "1", "/", "(", "n", "-", "j", ")", "\n", "", "b", "+=", "np", ".", "log", "(", "1", "-", "q", ")", "\n", "v", "+=", "b", "**", "2", "/", "(", "n", "-", "i", ")", "\n", "return", "v", "\n", "", ""]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.histogram_percentiles.ppf_fn2": [[13, 15], ["scipy.stats.lognorm.ppf"], "function", ["None"], ["def", "ppf_fn2", "(", "q", ")", ":", "\n", "    ", "return", "lognorm", ".", "ppf", "(", "q", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.histogram_percentiles.ppf_fn4": [[16, 18], ["scipy.stats.lomax.ppf"], "function", ["None"], ["", "def", "ppf_fn4", "(", "q", ")", ":", "\n", "    ", "return", "lomax", ".", "ppf", "(", "q", ",", "c", "=", ".9", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.histogram_percentiles.rvs_fn2": [[19, 21], ["scipy.stats.lognorm.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "rvs_fn2", "(", "n", ")", ":", "\n", "    ", "return", "lognorm", ".", "rvs", "(", "1", ",", "0", ",", "size", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.histogram_percentiles.rvs_fn4": [[22, 24], ["scipy.stats.lomax.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "rvs_fn4", "(", "n", ")", ":", "\n", "    ", "return", "lomax", ".", "rvs", "(", "c", "=", ".9", ",", "size", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.lognorm_median.estimate_median": [[6, 17], ["len", "int", "int", "sorted", "numpy.floor", "numpy.ceil"], "function", ["None"], ["def", "estimate_median", "(", "x", ",", "is_sorted", "=", "False", ")", ":", "\n", "    ", "n", "=", "len", "(", "x", ")", "\n", "if", "not", "is_sorted", ":", "\n", "        ", "x", "=", "sorted", "(", "x", ")", "\n", "# For odd n, both ceiling and floor will be the median.", "\n", "# For even n, we'll end up averaging two numbers.", "\n", "", "lo", "=", "int", "(", "np", ".", "floor", "(", "(", "n", "+", "1", ")", "/", "2", ")", ")", "\n", "hi", "=", "int", "(", "np", ".", "ceil", "(", "(", "n", "+", "1", ")", "/", "2", ")", ")", "\n", "x1", "=", "x", "[", "lo", "]", "\n", "x2", "=", "x", "[", "hi", "]", "\n", "return", "(", "x1", "+", "x2", ")", "/", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.lognorm_median.plot_bias": [[19, 47], ["numpy.arange", "scipy.stats.lognorm.ppf", "range", "print", "matplotlib.hist", "matplotlib.axvline", "matplotlib.axvline", "matplotlib.axvline", "matplotlib.legend", "matplotlib.title", "matplotlib.savefig", "matplotlib.close", "print", "scipy.stats.lognorm.rvs", "numpy.median", "errs.append", "ests.append", "numpy.mean", "numpy.mean", "numpy.median", "numpy.arange", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "plot_bias", "(", ")", ":", "\n", "    ", "for", "sampl", "in", "np", ".", "arange", "(", "10", ",", "45", ",", "5", ")", ":", "\n", "        ", "errs", "=", "[", "]", "\n", "ests", "=", "[", "]", "\n", "real_val", "=", "lognorm", ".", "ppf", "(", "0.5", ",", "1", ",", "0", ")", "\n", "for", "_", "in", "range", "(", "100000", ")", ":", "\n", "            ", "x", "=", "lognorm", ".", "rvs", "(", "1", ",", "0", ",", "size", "=", "sampl", ")", "\n", "#est_val = estimate_median(x)", "\n", "est_val", "=", "np", ".", "median", "(", "x", ")", "\n", "err", "=", "(", "real_val", "-", "est_val", ")", "/", "real_val", "\n", "errs", ".", "append", "(", "err", ")", "\n", "ests", ".", "append", "(", "est_val", ")", "\n", "\n", "", "print", "(", "np", ".", "mean", "(", "errs", ")", ")", "\n", "\n", "plt", ".", "hist", "(", "ests", ",", "bins", "=", "np", ".", "arange", "(", "0", ",", "4", ",", ".1", ")", ")", "\n", "plt", ".", "axvline", "(", "real_val", ",", "label", "=", "\"actual median\"", ",", "color", "=", "\"black\"", ")", "\n", "plt", ".", "axvline", "(", "np", ".", "mean", "(", "ests", ")", ",", "\n", "label", "=", "\"avg estimated value of median on sample size: \"", "\n", "+", "str", "(", "sampl", ")", ",", "color", "=", "\"purple\"", ")", "\n", "plt", ".", "axvline", "(", "np", ".", "median", "(", "ests", ")", ",", "\n", "label", "=", "\"median estimated value of median on sample size: \"", "\n", "+", "str", "(", "sampl", ")", ",", "color", "=", "\"orange\"", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "title", "(", "\"Sample size = \"", "+", "str", "(", "sampl", ")", ")", "\n", "plt", ".", "savefig", "(", "'plots/sample_'", "+", "str", "(", "sampl", ")", "+", "'.png'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "print", "(", "'processed sample size '", "+", "str", "(", "sampl", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.prcntl": [[6, 16], ["sorted", "len", "int", "numpy.floor", "numpy.modf", "calc_bias_var_mse.expon_frac"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.expon_frac"], ["def", "prcntl", "(", "a", ",", "q", ",", "interpolate", "=", "1", ")", ":", "\n", "    ", "a", "=", "sorted", "(", "a", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "lt", "=", "int", "(", "np", ".", "floor", "(", "q", "*", "(", "n", "-", "1", ")", ")", ")", "\n", "frac", "=", "0", "\n", "if", "interpolate", "==", "1", ":", "\n", "        ", "frac", "=", "np", ".", "modf", "(", "q", "*", "(", "n", "-", "1", ")", ")", "[", "0", "]", "\n", "", "elif", "interpolate", "==", "2", ":", "\n", "        ", "frac", "=", "expon_frac", "(", "q", ",", "n", ")", "\n", "", "return", "a", "[", "lt", "]", "*", "(", "1", "-", "frac", ")", "+", "a", "[", "lt", "+", "1", "]", "*", "frac", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.rvs_fn1": [[18, 20], ["scipy.stats.norm.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "rvs_fn1", "(", "n", ")", ":", "\n", "    ", "return", "norm", ".", "rvs", "(", "10", ",", "1", ",", "size", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.rvs_fn2": [[21, 23], ["scipy.stats.lognorm.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "rvs_fn2", "(", "n", ")", ":", "\n", "    ", "return", "lognorm", ".", "rvs", "(", "1", ",", "0", ",", "size", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.rvs_fn3": [[24, 26], ["numpy.random.exponential"], "function", ["None"], ["", "def", "rvs_fn3", "(", "n", ")", ":", "\n", "    ", "return", "np", ".", "random", ".", "exponential", "(", "size", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.rvs_fn4": [[27, 29], ["scipy.stats.lomax.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "rvs_fn4", "(", "n", ")", ":", "\n", "    ", "return", "lomax", ".", "rvs", "(", "c", "=", ".9", ",", "size", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.rvs_fn5": [[30, 32], ["scipy.stats.weibull_min.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["", "def", "rvs_fn5", "(", "n", ")", ":", "\n", "    ", "return", "weibull_min", ".", "rvs", "(", "c", "=", ".5", ",", "size", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.ppf_fn1": [[33, 35], ["scipy.stats.norm.ppf"], "function", ["None"], ["", "def", "ppf_fn1", "(", "q", ")", ":", "\n", "    ", "return", "norm", ".", "ppf", "(", "q", ",", "10", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.ppf_fn2": [[36, 38], ["scipy.stats.lognorm.ppf"], "function", ["None"], ["", "def", "ppf_fn2", "(", "q", ")", ":", "\n", "    ", "return", "lognorm", ".", "ppf", "(", "q", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.ppf_fn3": [[39, 41], ["scipy.stats.expon.ppf"], "function", ["None"], ["", "def", "ppf_fn3", "(", "q", ")", ":", "\n", "    ", "return", "expon", ".", "ppf", "(", "q", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.ppf_fn4": [[42, 44], ["scipy.stats.lomax.ppf"], "function", ["None"], ["", "def", "ppf_fn4", "(", "q", ")", ":", "\n", "    ", "return", "lomax", ".", "ppf", "(", "q", ",", "c", "=", ".9", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.ppf_fn5": [[45, 47], ["scipy.stats.weibull_min.ppf"], "function", ["None"], ["", "def", "ppf_fn5", "(", "q", ")", ":", "\n", "    ", "return", "weibull_min", ".", "ppf", "(", "q", ",", "c", "=", ".5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.calc_bias_var_mse.expon_frac": [[48, 57], ["int", "range", "numpy.floor", "numpy.log"], "function", ["None"], ["", "def", "expon_frac", "(", "q", ",", "n", ")", ":", "\n", "    ", "\"\"\"\n    TODO: Move this inside the library.\n    \"\"\"", "\n", "lt", "=", "int", "(", "np", ".", "floor", "(", "q", "*", "(", "n", "-", "1", ")", ")", ")", "\n", "summ", "=", "0", "\n", "for", "ix", "in", "range", "(", "lt", "+", "1", ")", ":", "\n", "        ", "summ", "+=", "1", "/", "(", "n", "-", "ix", ")", "\n", "", "return", "(", "-", "np", ".", "log", "(", "1", "-", "q", ")", "-", "summ", ")", "*", "(", "n", "-", "lt", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.bare_bones_simulator.rvs_fn": [[6, 8], ["scipy.stats.lognorm.rvs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.count_distributions.negative_binomial.NegativeBinomial.rvs"], ["def", "rvs_fn", "(", "n", ")", ":", "\n", "    ", "return", "lognorm", ".", "rvs", "(", "1", ",", "0", ",", "size", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.est_percentile.bare_bones_simulator.ppf_fn": [[10, 12], ["scipy.stats.lognorm.ppf"], "function", ["None"], ["", "def", "ppf_fn", "(", "q", ")", ":", "\n", "    ", "return", "lognorm", ".", "ppf", "(", "q", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.compare_r_estimators.run1.main1": [[22, 89], ["matplotlib.subplots", "matplotlib.subplots", "matplotlib.subplots", "matplotlib.subplots", "range", "run1.make_lines", "fig1.savefig", "fig2.savefig", "fig3.savefig", "fig4.savefig", "matplotlib.xlabel", "matplotlib.show", "len", "stochproc.quantile.perf_measurer.PrcntlEstPerfMeasurer", "stochproc.quantile.perf_measurer.PrcntlEstPerfMeasurer.simulate", "prf_results.append", "ax1.plot", "ax2.plot", "ax3.plot", "ax4.plot", "numpy.savetxt", "numpy.savetxt", "numpy.savetxt", "numpy.savetxt", "numpy.savetxt", "print", "print", "print", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.compare_r_estimators.run1.make_lines", "home.repos.pwc.inspect_result.ryu577_stochproc.quantile.perf_measurer.PrcntlEstPerfMeasurer.simulate"], ["def", "main1", "(", ")", ":", "\n", "    ", "prcntl_estimators", "=", "[", "prcntl", ",", "est_1", ",", "est_7", ",", "\n", "est_2", ",", "est_3", ",", "est_4", ",", "\n", "est_5", ",", "est_6", ",", "\n", "est_8", ",", "est_9", "]", "\n", "\n", "names", "=", "[", "\"expon_bias\"", ",", "\"r_strat1\"", ",", "\n", "\"r_strat7\"", ",", "\n", "\"r_strat2\"", ",", "\"r_strat3\"", ",", "\n", "\"r_strat4\"", ",", "\"r_strat5\"", ",", "\n", "\"r_strat6\"", ",", "\n", "\"r_strat8\"", ",", "\"r_strat9\"", "]", "\n", "\n", "prf_results", "=", "[", "]", "\n", "\n", "#fig1, (ax1, ax3) = plt.subplots(2, 1)", "\n", "#fig2, (ax2, ax4) = plt.subplots(2, 1)", "\n", "fig1", ",", "ax1", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "fig2", ",", "ax2", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "fig3", ",", "ax3", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "fig4", ",", "ax4", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "\n", "for", "ix", "in", "range", "(", "len", "(", "prcntl_estimators", ")", ")", ":", "\n", "        ", "prcntl_est", "=", "prcntl_estimators", "[", "ix", "]", "\n", "name", "=", "names", "[", "ix", "]", "\n", "prf1", "=", "PrcntlEstPerfMeasurer", "(", "n", "=", "15", ",", "\n", "rvs_fn", "=", "rvs_fn", ",", "\n", "ppf_fn", "=", "ppf_fn", ",", "\n", "qs", "=", "qs", ",", "\n", "prcntl_estimator", "=", "prcntl_est", ",", "\n", "prll_wrlds", "=", "30000", ")", "\n", "prf1", ".", "simulate", "(", ")", "\n", "prf_results", ".", "append", "(", "prf1", ")", "\n", "ax1", ".", "plot", "(", "qs", ",", "prf1", ".", "u_errs", ",", "label", "=", "\"Bias for \"", "+", "name", ")", "\n", "ax2", ".", "plot", "(", "qs", ",", "prf1", ".", "u_stds", ",", "label", "=", "\"Standard deviation for \"", "+", "name", ")", "\n", "ax3", ".", "plot", "(", "qs", ",", "prf1", ".", "u_medians", ",", "label", "=", "\"DelMedian for \"", "+", "name", ")", "\n", "ax4", ".", "plot", "(", "qs", ",", "prf1", ".", "u_mses", ",", "label", "=", "\"MSE for \"", "+", "name", ")", "\n", "\n", "np", ".", "savetxt", "(", "data_save_dir", "+", "\"\\\\qs.csv\"", ",", "qs", ",", "delimiter", "=", "\",\"", ")", "\n", "base_path", "=", "data_save_dir", "+", "distr_name", "+", "\"\\\\\"", "+", "name", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "base_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "base_path", ")", "\n", "", "np", ".", "savetxt", "(", "data_save_dir", "+", "distr_name", "+", "\"\\\\\"", "+", "\n", "name", "+", "\"\\\\u_errs.csv\"", ",", "prf1", ".", "u_errs", ",", "delimiter", "=", "\",\"", ")", "\n", "np", ".", "savetxt", "(", "data_save_dir", "+", "distr_name", "+", "\"\\\\\"", "+", "\n", "name", "+", "\"\\\\u_stds.csv\"", ",", "prf1", ".", "u_stds", ",", "delimiter", "=", "\",\"", ")", "\n", "np", ".", "savetxt", "(", "data_save_dir", "+", "distr_name", "+", "\"\\\\\"", "+", "\n", "name", "+", "\"\\\\u_medians.csv\"", ",", "prf1", ".", "u_medians", ",", "delimiter", "=", "\",\"", ")", "\n", "np", ".", "savetxt", "(", "data_save_dir", "+", "distr_name", "+", "\"\\\\\"", "+", "\n", "name", "+", "\"\\\\u_mses.csv\"", ",", "prf1", ".", "u_mses", ",", "delimiter", "=", "\",\"", ")", "\n", "\n", "print", "(", "\"###############\"", ")", "\n", "print", "(", "\"Finished processing \"", "+", "name", ")", "\n", "print", "(", "\"###############\"", ")", "\n", "\n", "", "make_lines", "(", "ax1", ",", "ax2", ",", "ax3", ",", "ax4", ")", "\n", "base_path", "=", "plots_save_dir", "+", "distr_name", "+", "\"\\\\\"", "+", "name", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "base_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "base_path", ")", "\n", "", "fig1", ".", "savefig", "(", "plots_save_dir", "+", "distr_name", "+", "\"\\\\\"", "+", "name", "+", "\"\\\\biases.png\"", ")", "\n", "fig2", ".", "savefig", "(", "plots_save_dir", "+", "distr_name", "+", "\"\\\\\"", "+", "name", "+", "\"\\\\st_devs.png\"", ")", "\n", "fig3", ".", "savefig", "(", "plots_save_dir", "+", "distr_name", "+", "\"\\\\\"", "+", "\n", "name", "+", "\"\\\\del_medians.png\"", ")", "\n", "fig4", ".", "savefig", "(", "plots_save_dir", "+", "distr_name", "+", "\"\\\\\"", "+", "name", "+", "\"\\\\mses.png\"", ")", "\n", "plt", ".", "xlabel", "(", "\"Percentile (q)\"", ")", "\n", "plt", ".", "show", "(", ")", "\n", "return", "prf_results", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.compare_r_estimators.run1.make_plots_from_disk": [[91, 118], ["matplotlib.subplots", "matplotlib.subplots", "matplotlib.subplots", "matplotlib.subplots", "numpy.genfromtxt", "run1.make_lines", "matplotlib.show", "numpy.genfromtxt", "numpy.genfromtxt", "numpy.genfromtxt", "numpy.genfromtxt", "ax1.plot", "ax2.plot", "ax3.plot", "ax4.plot"], "function", ["home.repos.pwc.inspect_result.ryu577_stochproc.compare_r_estimators.run1.make_lines"], ["", "def", "make_plots_from_disk", "(", ")", ":", "\n", "    ", "fig1", ",", "ax1", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "fig2", ",", "ax2", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "fig3", ",", "ax3", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "fig4", ",", "ax4", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "names", "=", "[", "\"expon_bias\"", ",", "\"r_strat1\"", ",", "\n", "\"r_strat7\"", ",", "\n", "\"r_strat2\"", ",", "\"r_strat3\"", ",", "\n", "\"r_strat4\"", ",", "\"r_strat5\"", ",", "\n", "\"r_strat6\"", ",", "\n", "\"r_strat8\"", ",", "\"r_strat9\"", "]", "\n", "qs", "=", "genfromtxt", "(", "data_save_dir", "+", "\"\\\\qs.csv\"", ",", "delimiter", "=", "\",\"", ")", "\n", "for", "name", "in", "names", ":", "\n", "        ", "u_errs", "=", "genfromtxt", "(", "data_save_dir", "+", "distr_name", "+", "\"\\\\\"", "+", "\n", "name", "+", "\"\\\\u_errs.csv\"", ",", "delimiter", "=", "','", ")", "\n", "u_stds", "=", "genfromtxt", "(", "data_save_dir", "+", "distr_name", "+", "\"\\\\\"", "+", "\n", "name", "+", "\"\\\\u_stds.csv\"", ",", "delimiter", "=", "','", ")", "\n", "u_medians", "=", "genfromtxt", "(", "data_save_dir", "+", "distr_name", "+", "\"\\\\\"", "+", "\n", "name", "+", "\"\\\\u_medians.csv\"", ",", "delimiter", "=", "','", ")", "\n", "u_mses", "=", "genfromtxt", "(", "data_save_dir", "+", "distr_name", "+", "\"\\\\\"", "+", "\n", "name", "+", "\"\\\\u_mses.csv\"", ",", "delimiter", "=", "','", ")", "\n", "ax1", ".", "plot", "(", "qs", ",", "u_errs", ",", "label", "=", "\"Bias for \"", "+", "name", ")", "\n", "ax2", ".", "plot", "(", "qs", ",", "u_stds", ",", "label", "=", "\"Standard deviation for \"", "+", "name", ")", "\n", "ax3", ".", "plot", "(", "qs", ",", "u_medians", ",", "label", "=", "\"DelMedian for \"", "+", "name", ")", "\n", "ax4", ".", "plot", "(", "qs", ",", "u_mses", ",", "label", "=", "\"MSE for \"", "+", "name", ")", "\n", "", "make_lines", "(", "ax1", ",", "ax2", ",", "ax3", ",", "ax4", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ryu577_stochproc.compare_r_estimators.run1.make_lines": [[120, 133], ["ax1.axhline", "ax1.axvline", "ax2.axhline", "ax2.axvline", "ax3.axhline", "ax3.axvline", "ax4.axhline", "ax4.axvline", "ax1.legend", "ax2.legend", "ax3.legend", "ax4.legend"], "function", ["None"], ["", "def", "make_lines", "(", "ax1", ",", "ax2", ",", "ax3", ",", "ax4", ")", ":", "\n", "    ", "ax1", ".", "axhline", "(", "0", ",", "color", "=", "\"black\"", ")", "\n", "ax1", ".", "axvline", "(", "0.5", ",", "color", "=", "\"black\"", ")", "\n", "ax2", ".", "axhline", "(", "0", ",", "color", "=", "\"black\"", ")", "\n", "ax2", ".", "axvline", "(", "0.5", ",", "color", "=", "\"black\"", ")", "\n", "ax3", ".", "axhline", "(", "0", ",", "color", "=", "\"black\"", ")", "\n", "ax3", ".", "axvline", "(", "0.5", ",", "color", "=", "\"black\"", ")", "\n", "ax4", ".", "axhline", "(", "0", ",", "color", "=", "\"black\"", ")", "\n", "ax4", ".", "axvline", "(", "0.5", ",", "color", "=", "\"black\"", ")", "\n", "ax1", ".", "legend", "(", ")", "\n", "ax2", ".", "legend", "(", ")", "\n", "ax3", ".", "legend", "(", ")", "\n", "ax4", ".", "legend", "(", ")", "\n", "", ""]]}