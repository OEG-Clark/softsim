{"home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REModel_KG.__init__": [[10, 54], ["torch.Module.__init__", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "print", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Embedding", "torch.Embedding", "torch.Linear", "torch.Linear", "numpy.load", "torch.Linear", "torch.Linear", "transformers.BertModel.from_pretrained", "print", "torch.load", "torch.load", "torch.load", "torch.load", "models.REModel_KG.bert.load_state_dict", "transformers.BertModel.from_pretrained", "print", "torch.Linear", "torch.Linear", "print", "exit"], "methods", ["home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.dataset.REBagDataset_KG.__init__"], ["def", "__init__", "(", "self", ",", "args", ",", "weight", "=", "None", ")", ":", "\n", "        ", "super", "(", "REModel_KG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "kg_method", "=", "args", ".", "kg_method", "\n", "self", ".", "training", "=", "True", "\n", "self", ".", "direct_feature", "=", "args", ".", "direct_feature", "\n", "if", "weight", "is", "None", ":", "\n", "            ", "self", ".", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"CrossEntropy Loss has weight!\"", ")", "\n", "self", ".", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", "weight", "=", "weight", ")", "\n", "\n", "", "scale", "=", "2", "if", "args", ".", "entity_marker", "else", "1", "\n", "if", "args", ".", "entity_embedding_load_path", "!=", "None", ":", "\n", "            ", "pretrained_entity_embedding", "=", "torch", ".", "FloatTensor", "(", "np", ".", "load", "(", "args", ".", "entity_embedding_load_path", ")", ")", "\n", "#print('forgot to add entity embedding!')", "\n", "self", ".", "entity_embedding", "=", "nn", ".", "Embedding", ".", "from_pretrained", "(", "pretrained_entity_embedding", ",", "freeze", "=", "args", ".", "freeze_entity", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "entity_embedding", "=", "nn", ".", "Embedding", "(", "args", ".", "entity_num", ",", "args", ".", "entity_embedding_size", ")", "\n", "", "if", "self", ".", "direct_feature", "and", "self", ".", "kg_method", "!=", "'None'", ":", "\n", "            ", "if", "self", ".", "kg_method", "in", "[", "'ComplEx_cat'", ",", "'TransE'", "]", ":", "\n", "                ", "self", ".", "rel_fc", "=", "nn", ".", "Linear", "(", "args", ".", "hidden_size", "*", "scale", "+", "2", "*", "self", ".", "entity_embedding", ".", "weight", ".", "shape", "[", "1", "]", ",", "args", ".", "rel_num", ")", "\n", "", "elif", "self", ".", "kg_method", "in", "[", "'RotatE'", "]", ":", "\n", "                ", "pass", "\n", "", "elif", "self", ".", "kg_method", "in", "[", "'TransE_re'", "]", ":", "\n", "                ", "self", ".", "rel_fc", "=", "nn", ".", "Linear", "(", "args", ".", "hidden_size", "*", "scale", "+", "self", ".", "entity_embedding", ".", "weight", ".", "shape", "[", "1", "]", ",", "args", ".", "rel_num", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "'not defined method'", ",", "self", ".", "kg_method", ")", "\n", "exit", "(", "0", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "rel_fc", "=", "nn", ".", "Linear", "(", "args", ".", "hidden_size", "*", "scale", ",", "args", ".", "rel_num", ")", "\n", "", "self", ".", "generate_rep", "=", "{", "'TransE'", ":", "self", ".", "TransE", ",", "'TransE_re'", ":", "self", ".", "TransE_re", ",", "'ComplEx_cat'", ":", "self", ".", "ComplEx_cat", "}", "\n", "\n", "\n", "if", "args", ".", "ckpt_to_load", "==", "\"cnn\"", ":", "\n", "            ", "self", ".", "bert", "=", "None", "\n", "", "elif", "args", ".", "ckpt_to_load", "!=", "\"None\"", ":", "\n", "            ", "self", ".", "bert", "=", "BertModel", ".", "from_pretrained", "(", "'bert-base-uncased'", ")", "\n", "print", "(", "\"********* load from ckpt/\"", "+", "args", ".", "ckpt_to_load", "+", "\" ***********\"", ")", "\n", "ckpt", "=", "torch", ".", "load", "(", "\"../../../pretrain/ckpt/\"", "+", "args", ".", "ckpt_to_load", ")", "\n", "self", ".", "bert", ".", "load_state_dict", "(", "ckpt", "[", "\"bert-base\"", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "bert", "=", "BertModel", ".", "from_pretrained", "(", "'bert-base-uncased'", ")", "\n", "print", "(", "\"*******No ckpt to load, Let's use bert base!*******\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REModel_KG.forward": [[55, 81], ["models.REModel_KG.bert", "torch.max", "torch.max", "torch.max", "torch.max", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.REModel_KG.kfeature", "models.REModel_KG.rel_fc", "models.REModel_KG.loss", "input_ids.size"], "methods", ["home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REModel_KG.kfeature"], ["", "", "def", "forward", "(", "self", ",", "label", ",", "input_ids", ",", "mask", ",", "h_pos", ",", "t_pos", ",", "head_id", ",", "tail_id", ")", ":", "\n", "# bert encode", "\n", "        ", "outputs", "=", "self", ".", "bert", "(", "input_ids", ",", "mask", ")", "\n", "\n", "# entity marker", "\n", "if", "self", ".", "args", ".", "entity_marker", ":", "\n", "            ", "indice", "=", "torch", ".", "arange", "(", "input_ids", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "h_state", "=", "outputs", "[", "0", "]", "[", "indice", ",", "h_pos", "]", "\n", "t_state", "=", "outputs", "[", "0", "]", "[", "indice", ",", "t_pos", "]", "\n", "state", "=", "torch", ".", "cat", "(", "(", "h_state", ",", "t_state", ")", ",", "1", ")", "#(batch_size, hidden_size*2)", "\n", "", "else", ":", "\n", "#[CLS]", "\n", "            ", "state", "=", "outputs", "[", "0", "]", "[", ":", ",", "0", ",", ":", "]", "#(batch_size, hidden_size)", "\n", "\n", "# linear map", "\n", "", "if", "self", ".", "direct_feature", ":", "\n", "            ", "logits", "=", "self", ".", "kfeature", "(", "state", ",", "head_id", ",", "tail_id", ",", "self", ".", "kg_method", ")", "\n", "", "else", ":", "\n", "            ", "logits", "=", "self", ".", "rel_fc", "(", "state", ")", "\n", "", "_", ",", "output", "=", "torch", ".", "max", "(", "logits", ",", "1", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "loss", "=", "self", ".", "loss", "(", "logits", ",", "label", ")", "\n", "return", "loss", ",", "output", "\n", "", "else", ":", "\n", "            ", "return", "logits", ",", "output", "\n", "", "", "def", "kfeature", "(", "self", ",", "rep", ",", "head_id", ",", "tail_id", ",", "kg_method", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REModel_KG.kfeature": [[81, 91], ["models.REModel_KG.entity_embedding", "models.REModel_KG.entity_embedding", "models.REModel_KG.rel_fc"], "methods", ["None"], ["", "", "def", "kfeature", "(", "self", ",", "rep", ",", "head_id", ",", "tail_id", ",", "kg_method", ")", ":", "\n", "#print('head_id',head_id)", "\n", "#print('tail_id',tail_id)", "\n", "        ", "head", "=", "self", ".", "entity_embedding", "(", "head_id", ")", "\n", "tail", "=", "self", ".", "entity_embedding", "(", "tail_id", ")", "\n", "#print('head_sum',torch.sum(head))", "\n", "#print('tail_sum',torch.sum(tail))", "\n", "kg_rep", "=", "self", ".", "generate_rep", "[", "kg_method", "]", "(", "rep", ",", "head", ",", "tail", ")", "\n", "logits", "=", "self", ".", "rel_fc", "(", "kg_rep", ")", "\n", "return", "logits", "\n", "", "def", "TransE", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REModel_KG.TransE": [[91, 94], ["torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "TransE", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n", "        ", "kg_rep", "=", "torch", ".", "cat", "(", "[", "rep", ",", "head", ",", "tail", "]", ",", "axis", "=", "1", ")", "\n", "return", "kg_rep", "\n", "", "def", "TransE_re", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REModel_KG.TransE_re": [[94, 97], ["torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "TransE_re", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n", "        ", "kg_rep", "=", "torch", ".", "cat", "(", "[", "rep", ",", "tail", "-", "head", "]", ",", "axis", "=", "1", ")", "\n", "return", "kg_rep", "\n", "", "def", "ComplEx_cat", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REModel_KG.ComplEx_cat": [[97, 100], ["torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "ComplEx_cat", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n", "        ", "kg_rep", "=", "torch", ".", "cat", "(", "[", "rep", ",", "head", ",", "tail", "]", ",", "axis", "=", "1", ")", "\n", "return", "kg_rep", "\n", "", "", "class", "REBagModel_KG", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.__init__": [[103, 152], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "transformers.BertModel.from_pretrained", "torch.Dropout", "torch.Dropout", "torch.Softmax", "torch.Softmax", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "print", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Embedding", "torch.Embedding", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "print", "torch.load", "torch.load", "torch.load", "torch.load", "models.REBagModel_KG.bert.load_state_dict", "print", "numpy.load", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "int", "int", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "int"], "methods", ["home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.dataset.REBagDataset_KG.__init__"], ["def", "__init__", "(", "self", ",", "args", ",", "weight", "=", "None", ")", ":", "\n", "        ", "super", "(", "REBagModel_KG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "kg_method", "=", "args", ".", "kg_method", "\n", "self", ".", "training", "=", "True", "\n", "self", ".", "direct_feature", "=", "args", ".", "direct_feature", "\n", "self", ".", "use_seg", "=", "args", ".", "use_seg", "\n", "if", "weight", "is", "None", ":", "\n", "            ", "self", ".", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"CrossEntropy Loss has weight!\"", ")", "\n", "self", ".", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", "weight", "=", "weight", ")", "\n", "\n", "", "scale", "=", "2", "if", "args", ".", "entity_marker", "else", "1", "\n", "self", ".", "rel_fc", "=", "nn", ".", "Linear", "(", "args", ".", "hidden_size", "*", "scale", ",", "args", ".", "rel_num", ")", "\n", "if", "args", ".", "entity_embedding_load_path", "!=", "None", ":", "\n", "            ", "pretrained_entity_embedding", "=", "torch", ".", "FloatTensor", "(", "np", ".", "load", "(", "args", ".", "entity_embedding_load_path", ")", ")", "\n", "self", ".", "entity_embedding", "=", "nn", ".", "Embedding", ".", "from_pretrained", "(", "pretrained_entity_embedding", ",", "freeze", "=", "args", ".", "freeze_entity", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "entity_embedding", "=", "nn", ".", "Embedding", "(", "args", ".", "entity_num", ",", "args", ".", "entity_embedding_size", ")", "\n", "", "if", "not", "self", ".", "direct_feature", ":", "\n", "            ", "if", "self", ".", "kg_method", "in", "[", "'ComplEx'", "]", ":", "\n", "                ", "self", ".", "transfer_re", "=", "nn", ".", "Linear", "(", "args", ".", "hidden_size", "*", "scale", ",", "int", "(", "self", ".", "entity_embedding", ".", "weight", ".", "shape", "[", "1", "]", "/", "2", ")", ")", "\n", "self", ".", "transfer_im", "=", "nn", ".", "Linear", "(", "args", ".", "hidden_size", "*", "scale", ",", "int", "(", "self", ".", "entity_embedding", ".", "weight", ".", "shape", "[", "1", "]", "/", "2", ")", ")", "\n", "", "elif", "self", ".", "kg_method", "in", "[", "'RotatE'", "]", ":", "\n", "                ", "self", ".", "transfer_phase", "=", "nn", ".", "Linear", "(", "args", ".", "hidden_size", "*", "scale", ",", "int", "(", "self", ".", "entity_embedding", ".", "weight", ".", "shape", "[", "1", "]", "/", "2", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "transfer", "=", "nn", ".", "Linear", "(", "args", ".", "hidden_size", "*", "scale", ",", "self", ".", "entity_embedding", ".", "weight", ".", "shape", "[", "1", "]", ")", "\n", "", "", "if", "self", ".", "use_seg", ":", "\n", "            ", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "args", ".", "hidden_size", ",", "args", ".", "hidden_size", ")", "\n", "if", "self", ".", "direct_feature", "and", "self", ".", "kg_method", "in", "[", "'TransE_re'", ",", "'transre_entity_name'", "]", ":", "\n", "                ", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "args", ".", "hidden_size", ",", "args", ".", "hidden_size", "*", "scale", "+", "self", ".", "entity_embedding", ".", "weight", ".", "shape", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "args", ".", "hidden_size", ",", "args", ".", "hidden_size", "*", "scale", ")", "\n", "", "self", ".", "fc1_att", "=", "nn", ".", "Linear", "(", "args", ".", "hidden_size", ",", "args", ".", "hidden_size", ")", "\n", "self", ".", "fc2_att", "=", "nn", ".", "Linear", "(", "args", ".", "hidden_size", ",", "args", ".", "hidden_size", ")", "\n", "\n", "", "self", ".", "bert", "=", "BertModel", ".", "from_pretrained", "(", "'bert-base-uncased'", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "-", "1", ")", "\n", "if", "args", ".", "ckpt_to_load", "!=", "\"None\"", ":", "\n", "            ", "print", "(", "\"********* load from ckpt/\"", "+", "args", ".", "ckpt_to_load", "+", "\" ***********\"", ")", "\n", "ckpt", "=", "torch", ".", "load", "(", "\"../../../pretrain/ckpt/\"", "+", "args", ".", "ckpt_to_load", ")", "\n", "self", ".", "bert", ".", "load_state_dict", "(", "ckpt", "[", "\"bert-base\"", "]", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"*******No ckpt to load, Let's use bert base!*******\"", ")", "\n", "", "self", ".", "generate_attn", "=", "{", "'TransE'", ":", "self", ".", "TransE", ",", "'DistMult'", ":", "self", ".", "DistMult", ",", "'ComplEx'", ":", "self", ".", "ComplEx", ",", "'RotatE'", ":", "self", ".", "RotatE", "}", "\n", "self", ".", "generate_rep", "=", "{", "'TransE_re'", ":", "self", ".", "TransE_re", ",", "'transre_entity_name'", ":", "self", ".", "TransE_re", "}", "\n", "self", ".", "pi", "=", "3.14159265358979323846", "\n", "", "def", "forward", "(", "self", ",", "label", ",", "scope", ",", "input_ids", ",", "mask", ",", "h_pos", ",", "t_pos", ",", "head_id", ",", "tail_id", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.forward": [[152, 182], ["models.REBagModel_KG.bert", "torch.max", "torch.max", "torch.max", "torch.max", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.REBagModel_KG.seg", "models.REBagModel_KG.loss", "models.REBagModel_KG.katt", "models.REBagModel_KG.kfeature", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "input_ids.size"], "methods", ["home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.seg", "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.katt", "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REModel_KG.kfeature"], ["", "def", "forward", "(", "self", ",", "label", ",", "scope", ",", "input_ids", ",", "mask", ",", "h_pos", ",", "t_pos", ",", "head_id", ",", "tail_id", ")", ":", "\n", "# bert encode", "\n", "        ", "outputs", "=", "self", ".", "bert", "(", "input_ids", ",", "mask", ")", "\n", "#print(label.shape, len(scope), input_ids.shape, mask.shape, h_pos.shape, t_pos.shape, head_id.shape, tail_id.shape)", "\n", "# entity marker", "\n", "#print(scope[-1][-1], input_ids.shape)", "\n", "if", "self", ".", "args", ".", "entity_marker", ":", "\n", "            ", "indice", "=", "torch", ".", "arange", "(", "input_ids", ".", "size", "(", ")", "[", "0", "]", ")", ".", "cuda", "(", ")", "\n", "h_state", "=", "outputs", "[", "0", "]", "[", "indice", ",", "h_pos", "]", "\n", "t_state", "=", "outputs", "[", "0", "]", "[", "indice", ",", "t_pos", "]", "\n", "state", "=", "torch", ".", "cat", "(", "(", "h_state", ",", "t_state", ")", ",", "1", ")", "#(batch_size, hidden_size*2)", "\n", "", "else", ":", "\n", "#[CLS]", "\n", "            ", "state", "=", "outputs", "[", "0", "]", "[", ":", ",", "0", ",", ":", "]", "#(batch_size, hidden_size)", "\n", "", "if", "self", ".", "use_seg", ":", "\n", "            ", "logits", "=", "self", ".", "seg", "(", "outputs", "[", "0", "]", ",", "state", ",", "scope", ",", "head_id", ",", "tail_id", ",", "self", ".", "kg_method", ")", "\n", "", "elif", "not", "self", ".", "direct_feature", ":", "\n", "            ", "logits", "=", "self", ".", "katt", "(", "state", ",", "scope", ",", "head_id", ",", "tail_id", ",", "self", ".", "kg_method", ")", "\n", "", "else", ":", "\n", "            ", "logits", "=", "self", ".", "kfeature", "(", "state", ",", "scope", ",", "head_id", ",", "tail_id", ",", "self", ".", "kg_method", ")", "\n", "#print('logits sum',torch.sum(logits))", "\n", "#exit(0)", "\n", "", "_", ",", "output", "=", "torch", ".", "max", "(", "logits", ",", "1", ")", "\n", "if", "self", ".", "training", ":", "\n", "#print('shape',logits.shape, label.shape)", "\n", "\n", "            ", "loss", "=", "self", ".", "loss", "(", "logits", ",", "label", ")", "\n", "return", "loss", ",", "output", "\n", "", "else", ":", "\n", "            ", "return", "logits", ",", "output", "\n", "", "", "def", "krep", "(", "self", ",", "rep", ",", "head_id", ",", "tail_id", ",", "kg_method", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.krep": [[182, 187], ["models.REBagModel_KG.entity_embedding", "models.REBagModel_KG.entity_embedding"], "methods", ["None"], ["", "", "def", "krep", "(", "self", ",", "rep", ",", "head_id", ",", "tail_id", ",", "kg_method", ")", ":", "\n", "        ", "head", "=", "self", ".", "entity_embedding", "(", "head_id", ")", "\n", "tail", "=", "self", ".", "entity_embedding", "(", "tail_id", ")", "\n", "kg_rep", "=", "self", ".", "generate_rep", "[", "kg_method", "]", "(", "rep", ",", "head", ",", "tail", ")", "\n", "return", "kg_rep", "\n", "", "def", "TransE_re", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.TransE_re": [[187, 190], ["torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "TransE_re", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n", "        ", "kg_rep", "=", "torch", ".", "cat", "(", "[", "rep", ",", "tail", "-", "head", "]", ",", "axis", "=", "1", ")", "\n", "return", "kg_rep", "\n", "", "def", "seg", "(", "self", ",", "seq", ",", "rep", ",", "scope", ",", "head_id", ",", "tail_id", ",", "kg_method", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.seg": [[190, 207], ["models.REBagModel_KG.fc2_att", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "models.REBagModel_KG.drop", "models.REBagModel_KG.rel_fc", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "models.REBagModel_KG.krep", "models.REBagModel_KG.fc2", "len", "models.REBagModel_KG.append", "models.REBagModel_KG.fc1_att", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "bag_mat.mean", "models.REBagModel_KG.fc1"], "methods", ["home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.krep"], ["", "def", "seg", "(", "self", ",", "seq", ",", "rep", ",", "scope", ",", "head_id", ",", "tail_id", ",", "kg_method", ")", ":", "\n", "        ", "A", "=", "self", ".", "fc2_att", "(", "torch", ".", "tanh", "(", "self", ".", "fc1_att", "(", "seq", ")", ")", ")", "\n", "P", "=", "torch", ".", "softmax", "(", "A", ",", "1", ")", "\n", "U", "=", "torch", ".", "sum", "(", "P", "*", "seq", ",", "1", ")", "\n", "if", "self", ".", "direct_feature", "and", "kg_method", "in", "[", "'TransE_re'", ",", "'transre_entity_name'", "]", ":", "\n", "            ", "rep", "=", "self", ".", "krep", "(", "rep", ",", "head_id", ",", "tail_id", ",", "kg_method", ")", "\n", "", "G", "=", "torch", ".", "sigmoid", "(", "self", ".", "fc2", "(", "torch", ".", "tanh", "(", "self", ".", "fc1", "(", "U", ")", ")", ")", ")", "\n", "rep", "=", "G", "*", "rep", "\n", "\n", "bag_rep", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "scope", ")", ")", ":", "\n", "            ", "bag_mat", "=", "rep", "[", "scope", "[", "i", "]", "[", "0", "]", ":", "scope", "[", "i", "]", "[", "1", "]", "]", "# (n, H)", "\n", "bag_rep", ".", "append", "(", "bag_mat", ".", "mean", "(", "0", ")", ")", "\n", "", "bag_rep", "=", "torch", ".", "stack", "(", "bag_rep", ",", "0", ")", "# (B, H)", "\n", "bag_rep", "=", "self", ".", "drop", "(", "bag_rep", ")", "\n", "bag_logits", "=", "self", ".", "rel_fc", "(", "bag_rep", ")", "\n", "return", "bag_logits", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.att": [[208, 225], ["torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "range", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "models.REBagModel_KG.drop", "models.REBagModel_KG.rel_fc", "query.cuda.cuda.cuda", "len", "len", "models.REBagModel_KG.softmax", "models.REBagModel_KG.append", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "rep.size", "models.REBagModel_KG.unsqueeze"], "methods", ["None"], ["", "def", "att", "(", "self", ",", "rep", ",", "scope", ",", "label", ")", ":", "\n", "        ", "query", "=", "torch", ".", "zeros", "(", "(", "rep", ".", "size", "(", "0", ")", ")", ")", ".", "long", "(", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "query", "=", "query", ".", "cuda", "(", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "scope", ")", ")", ":", "\n", "            ", "query", "[", "scope", "[", "i", "]", "[", "0", "]", ":", "scope", "[", "i", "]", "[", "1", "]", "]", "=", "label", "[", "i", "]", "\n", "", "att_mat", "=", "self", ".", "rel_fc", ".", "weight", ".", "data", "[", "query", "]", "\n", "att_score", "=", "(", "rep", "*", "att_mat", ")", ".", "sum", "(", "-", "1", ")", "\n", "bag_rep", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "scope", ")", ")", ":", "\n", "            ", "bag_mat", "=", "rep", "[", "scope", "[", "i", "]", "[", "0", "]", ":", "scope", "[", "i", "]", "[", "1", "]", "]", "# (n, H)", "\n", "softmax_att_score", "=", "self", ".", "softmax", "(", "att_score", "[", "scope", "[", "i", "]", "[", "0", "]", ":", "scope", "[", "i", "]", "[", "1", "]", "]", ")", "# (n)", "\n", "bag_rep", ".", "append", "(", "(", "softmax_att_score", ".", "unsqueeze", "(", "-", "1", ")", "*", "bag_mat", ")", ".", "sum", "(", "0", ")", ")", "# (n, 1) * (n, H) -> (n, H) -> (H)", "\n", "", "bag_rep", "=", "torch", ".", "stack", "(", "bag_rep", ",", "0", ")", "# (B, H)", "\n", "bag_rep", "=", "self", ".", "drop", "(", "bag_rep", ")", "\n", "bag_logits", "=", "self", ".", "rel_fc", "(", "bag_rep", ")", "\n", "return", "bag_logits", "\n", "", "def", "katt", "(", "self", ",", "rep", ",", "scope", ",", "head_id", ",", "tail_id", ",", "kg_method", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.katt": [[225, 243], ["models.REBagModel_KG.entity_embedding", "models.REBagModel_KG.entity_embedding", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "models.REBagModel_KG.drop", "models.REBagModel_KG.rel_fc", "len", "models.REBagModel_KG.softmax", "models.REBagModel_KG.append", "models.REBagModel_KG.unsqueeze"], "methods", ["None"], ["", "def", "katt", "(", "self", ",", "rep", ",", "scope", ",", "head_id", ",", "tail_id", ",", "kg_method", ")", ":", "\n", "#print('head_id',head_id)", "\n", "#print('tail_id',tail_id)", "\n", "        ", "head", "=", "self", ".", "entity_embedding", "(", "head_id", ")", "\n", "tail", "=", "self", ".", "entity_embedding", "(", "tail_id", ")", "\n", "#print('head_sum',torch.sum(head))", "\n", "#print('tail_sum',torch.sum(tail))", "\n", "att_score", "=", "self", ".", "generate_attn", "[", "kg_method", "]", "(", "rep", ",", "head", ",", "tail", ")", "\n", "#print('att_score sum',torch.sum(att_score))", "\n", "bag_rep", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "scope", ")", ")", ":", "\n", "            ", "bag_mat", "=", "rep", "[", "scope", "[", "i", "]", "[", "0", "]", ":", "scope", "[", "i", "]", "[", "1", "]", "]", "# (n, H)", "\n", "softmax_att_score", "=", "self", ".", "softmax", "(", "att_score", "[", "scope", "[", "i", "]", "[", "0", "]", ":", "scope", "[", "i", "]", "[", "1", "]", "]", ")", "# (n)", "\n", "bag_rep", ".", "append", "(", "(", "softmax_att_score", ".", "unsqueeze", "(", "-", "1", ")", "*", "bag_mat", ")", ".", "sum", "(", "0", ")", ")", "# (n, 1) * (n, H) -> (n, H) -> (H)", "\n", "", "bag_rep", "=", "torch", ".", "stack", "(", "bag_rep", ",", "0", ")", "# (B, H)", "\n", "bag_rep", "=", "self", ".", "drop", "(", "bag_rep", ")", "\n", "bag_logits", "=", "self", ".", "rel_fc", "(", "bag_rep", ")", "\n", "return", "bag_logits", "\n", "", "def", "TransE", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.TransE": [[243, 247], ["models.REBagModel_KG.transfer"], "methods", ["None"], ["", "def", "TransE", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n", "        ", "att_mat", "=", "tail", "-", "head", "\n", "att_score", "=", "(", "self", ".", "transfer", "(", "rep", ")", "*", "att_mat", ")", ".", "sum", "(", "1", ")", "\n", "return", "att_score", "\n", "", "def", "DistMult", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.DistMult": [[247, 250], ["models.REBagModel_KG.transfer"], "methods", ["None"], ["", "def", "DistMult", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n", "        ", "att_score", "=", "(", "self", ".", "transfer", "(", "rep", ")", "*", "head", "*", "tail", ")", ".", "sum", "(", "1", ")", "\n", "return", "att_score", "\n", "", "def", "ComplEx", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.ComplEx": [[250, 260], ["models.REBagModel_KG.transfer_re", "models.REBagModel_KG.transfer_im", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "score.sum.sum.sum"], "methods", ["None"], ["", "def", "ComplEx", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n", "        ", "re_relation", "=", "self", ".", "transfer_re", "(", "rep", ")", "\n", "im_relation", "=", "self", ".", "transfer_im", "(", "rep", ")", "\n", "re_head", ",", "im_head", "=", "torch", ".", "chunk", "(", "head", ",", "2", ",", "dim", "=", "1", ")", "\n", "re_tail", ",", "im_tail", "=", "torch", ".", "chunk", "(", "tail", ",", "2", ",", "dim", "=", "1", ")", "\n", "re_score", "=", "re_relation", "*", "re_tail", "+", "im_relation", "*", "im_tail", "\n", "im_score", "=", "re_relation", "*", "im_tail", "-", "im_relation", "*", "re_tail", "\n", "score", "=", "re_head", "*", "re_score", "+", "im_head", "*", "im_score", "\n", "score", "=", "score", ".", "sum", "(", "dim", "=", "1", ")", "\n", "return", "score", "\n", "", "def", "RotatE", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.RotatE": [[260, 274], ["torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "score.norm.norm.norm", "models.REBagModel_KG.transfer_phase", "score.norm.norm.sum"], "methods", ["None"], ["", "def", "RotatE", "(", "self", ",", "rep", ",", "head", ",", "tail", ")", ":", "\n", "        ", "phase_relation", "=", "torch", ".", "tanh", "(", "self", ".", "transfer_phase", "(", "rep", ")", ")", "\n", "re_relation", "=", "torch", ".", "cos", "(", "phase_relation", ")", "\n", "im_relation", "=", "torch", ".", "sin", "(", "phase_relation", ")", "\n", "re_head", ",", "im_head", "=", "torch", ".", "chunk", "(", "head", ",", "2", ",", "dim", "=", "1", ")", "\n", "re_tail", ",", "im_tail", "=", "torch", ".", "chunk", "(", "tail", ",", "2", ",", "dim", "=", "1", ")", "\n", "re_score", "=", "re_relation", "*", "re_tail", "+", "im_relation", "*", "im_tail", "\n", "im_score", "=", "re_relation", "*", "im_tail", "-", "im_relation", "*", "re_tail", "\n", "re_score", "=", "re_score", "-", "re_head", "\n", "im_score", "=", "im_score", "-", "im_head", "\n", "score", "=", "torch", ".", "stack", "(", "[", "re_score", ",", "im_score", "]", ",", "dim", "=", "0", ")", "\n", "score", "=", "score", ".", "norm", "(", "dim", "=", "0", ")", "\n", "score", "=", "-", "score", ".", "sum", "(", "dim", "=", "1", ")", "\n", "return", "score", "\n", "", "def", "att_test", "(", "self", ",", "rep", ",", "scope", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.models.REBagModel_KG.att_test": [[274, 286], ["torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "models.REBagModel_KG.rel_fc.weight.data.transpose", "len", "models.REBagModel_KG.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "models.REBagModel_KG.softmax", "logit_for_each_rel.diag.diag.diag", "torch.stack.append", "torch.stack.append", "att_score[].transpose", "models.REBagModel_KG.rel_fc"], "methods", ["None"], ["", "def", "att_test", "(", "self", ",", "rep", ",", "scope", ")", ":", "\n", "        ", "bag_logits", "=", "[", "]", "\n", "att_score", "=", "torch", ".", "matmul", "(", "rep", ",", "self", ".", "rel_fc", ".", "weight", ".", "data", ".", "transpose", "(", "0", ",", "1", ")", ")", "# (nsum, H) * (H, N) -> (nsum, N)", "\n", "for", "i", "in", "range", "(", "len", "(", "scope", ")", ")", ":", "\n", "            ", "bag_mat", "=", "rep", "[", "scope", "[", "i", "]", "[", "0", "]", ":", "scope", "[", "i", "]", "[", "1", "]", "]", "# (n, H)", "\n", "softmax_att_score", "=", "self", ".", "softmax", "(", "att_score", "[", "scope", "[", "i", "]", "[", "0", "]", ":", "scope", "[", "i", "]", "[", "1", "]", "]", ".", "transpose", "(", "0", ",", "1", ")", ")", "# (N, (softmax)n) ", "\n", "rep_for_each_rel", "=", "torch", ".", "matmul", "(", "softmax_att_score", ",", "bag_mat", ")", "# (N, n) * (n, H) -> (N, H)", "\n", "logit_for_each_rel", "=", "self", ".", "softmax", "(", "self", ".", "rel_fc", "(", "rep_for_each_rel", ")", ")", "# ((each rel)N, (logit)N)", "\n", "logit_for_each_rel", "=", "logit_for_each_rel", ".", "diag", "(", ")", "# (N)", "\n", "bag_logits", ".", "append", "(", "logit_for_each_rel", ")", "\n", "", "bag_logits", "=", "torch", ".", "stack", "(", "bag_logits", ",", "0", ")", "\n", "return", "bag_logits", "", "", "", ""]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.main.MyDataParallel.__getattr__": [[29, 31], ["getattr"], "methods", ["None"], ["    ", "def", "__getattr__", "(", "self", ",", "name", ")", ":", "\n", "        ", "return", "getattr", "(", "self", ".", "module", ",", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.main.f1_score": [[33, 74], ["collections.Counter", "collections.Counter", "collections.Counter", "range", "collections.Counter", "collections.Counter", "collections.Counter", "range", "len", "sum", "sum", "sum", "sum", "sum", "sum", "collections.Counter.values", "collections.Counter.values", "collections.Counter.values", "collections.Counter.values", "collections.Counter.values", "collections.Counter.values"], "function", ["None"], ["", "", "def", "f1_score", "(", "output", ",", "label", ",", "rel_num", ")", ":", "\n", "    ", "correct_by_relation", "=", "Counter", "(", ")", "\n", "guess_by_relation", "=", "Counter", "(", ")", "\n", "gold_by_relation", "=", "Counter", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "        ", "guess", "=", "output", "[", "i", "]", "\n", "gold", "=", "label", "[", "i", "]", "\n", "if", "gold", "==", "0", "and", "guess", "==", "0", ":", "\n", "            ", "continue", "\n", "", "if", "gold", "==", "0", "and", "guess", "!=", "0", ":", "\n", "            ", "guess_by_relation", "[", "guess", "]", "+=", "1", "\n", "", "if", "gold", "!=", "0", "and", "guess", "==", "0", ":", "\n", "            ", "gold_by_relation", "[", "gold", "]", "+=", "1", "\n", "", "if", "gold", "!=", "0", "and", "guess", "!=", "0", ":", "\n", "            ", "guess_by_relation", "[", "guess", "]", "+=", "1", "\n", "gold_by_relation", "[", "gold", "]", "+=", "1", "\n", "if", "gold", "==", "guess", ":", "\n", "                ", "correct_by_relation", "[", "gold", "]", "+=", "1", "\n", "\n", "", "", "", "f1_by_relation", "=", "Counter", "(", ")", "\n", "recall_by_relation", "=", "Counter", "(", ")", "\n", "prec_by_relation", "=", "Counter", "(", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "rel_num", ")", ":", "\n", "        ", "recall", "=", "0", "\n", "if", "gold_by_relation", "[", "i", "]", ">", "0", ":", "\n", "            ", "recall", "=", "correct_by_relation", "[", "i", "]", "/", "gold_by_relation", "[", "i", "]", "\n", "", "precision", "=", "0", "\n", "if", "guess_by_relation", "[", "i", "]", ">", "0", ":", "\n", "            ", "precision", "=", "correct_by_relation", "[", "i", "]", "/", "guess_by_relation", "[", "i", "]", "\n", "", "if", "recall", "+", "precision", ">", "0", ":", "\n", "            ", "f1_by_relation", "[", "i", "]", "=", "2", "*", "recall", "*", "precision", "/", "(", "recall", "+", "precision", ")", "\n", "", "recall_by_relation", "[", "i", "]", "=", "recall", "\n", "prec_by_relation", "[", "i", "]", "=", "precision", "\n", "\n", "", "micro_f1", "=", "0", "\n", "if", "sum", "(", "guess_by_relation", ".", "values", "(", ")", ")", "!=", "0", "and", "sum", "(", "correct_by_relation", ".", "values", "(", ")", ")", "!=", "0", ":", "\n", "        ", "recall", "=", "sum", "(", "correct_by_relation", ".", "values", "(", ")", ")", "/", "sum", "(", "gold_by_relation", ".", "values", "(", ")", ")", "\n", "prec", "=", "sum", "(", "correct_by_relation", ".", "values", "(", ")", ")", "/", "sum", "(", "guess_by_relation", ".", "values", "(", ")", ")", "\n", "micro_f1", "=", "2", "*", "recall", "*", "prec", "/", "(", "recall", "+", "prec", ")", "\n", "", "return", "micro_f1", ",", "f1_by_relation", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.main.set_seed": [[75, 80], ["random.seed", "numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all"], "function", ["None"], ["", "def", "set_seed", "(", "args", ")", ":", "\n", "    ", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.main.train": [[82, 208], ["model.train", "model.zero_grad", "print", "print", "range", "print", "open", "open.write", "open.write", "open.close", "len", "transformers.AdamW", "transformers.get_linear_schedule_with_warmup", "apex.amp.initialize", "open.write", "open.write", "model.parameters", "torch.SGD", "model.train", "model", "optim.Adam.step", "model.zero_grad", "output.cpu().detach().numpy.cpu().detach().numpy", "batch[].cpu().numpy", "sys.stdout.write", "sys.stdout.flush", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "print", "print", "model.eval", "eval_func", "print", "print", "model.parameters", "torch.Adam", "torch.utils.clip_grad_norm_", "loss.backward", "transformers.get_linear_schedule_with_warmup.step", "print", "print", "apex.amp.scale_loss", "scaled_loss.backward", "apex.amp.master_params", "output.cpu().detach().numpy.cpu().detach", "batch[].cpu", "print", "print", "print", "exit", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "str", "str", "model.named_parameters", "model.named_parameters", "any", "model.state_dict", "model.state_dict", "time.ctime", "time.ctime", "time.ctime", "time.ctime", "any", "output.cpu().detach().numpy.cpu"], "function", ["home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.main.train", "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.main.train"], ["", "def", "train", "(", "args", ",", "model", ",", "train_dataloader", ",", "dev_dataloader", ",", "test_dataloader", ",", "devBagTest", "=", "None", ",", "testBagTest", "=", "None", ")", ":", "\n", "# total step", "\n", "    ", "step_tot", "=", "len", "(", "train_dataloader", ")", "*", "args", ".", "max_epoch", "\n", "\n", "# optimizer", "\n", "if", "args", ".", "optim", "==", "\"adamw\"", ":", "\n", "        ", "no_decay", "=", "[", "'bias'", ",", "'LayerNorm.weight'", "]", "\n", "optimizer_grouped_parameters", "=", "[", "\n", "{", "'params'", ":", "[", "p", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "not", "any", "(", "nd", "in", "n", "for", "nd", "in", "no_decay", ")", "]", ",", "'weight_decay'", ":", "args", ".", "weight_decay", "}", ",", "\n", "{", "'params'", ":", "[", "p", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "any", "(", "nd", "in", "n", "for", "nd", "in", "no_decay", ")", "]", ",", "'weight_decay'", ":", "0.0", "}", "\n", "]", "\n", "optimizer", "=", "AdamW", "(", "optimizer_grouped_parameters", ",", "lr", "=", "args", ".", "lr", ",", "eps", "=", "args", ".", "adam_epsilon", ",", "correct_bias", "=", "False", ")", "\n", "scheduler", "=", "get_linear_schedule_with_warmup", "(", "optimizer", ",", "num_warmup_steps", "=", "args", ".", "warmup_steps", ",", "num_training_steps", "=", "step_tot", ")", "\n", "", "elif", "args", ".", "optim", "==", "\"sgd\"", ":", "\n", "        ", "params", "=", "model", ".", "parameters", "(", ")", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "params", ",", "args", ".", "lr", ")", "\n", "", "elif", "args", ".", "optim", "==", "\"adam\"", ":", "\n", "        ", "params", "=", "model", ".", "parameters", "(", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "params", ",", "args", ".", "lr", ")", "\n", "\n", "# amp training", "\n", "", "if", "args", ".", "optim", "==", "\"adamw\"", ":", "\n", "        ", "model", ",", "optimizer", "=", "amp", ".", "initialize", "(", "model", ",", "optimizer", ",", "opt_level", "=", "\"O1\"", ")", "\n", "\n", "# Data parallel", "\n", "#model = MyDataParallel(model, device_ids=[0, 1])", "\n", "#model = DistributedDataParallel(model)", "\n", "", "model", ".", "train", "(", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "\n", "print", "(", "\"Begin train...\"", ")", "\n", "print", "(", "\"We will train model in %d steps\"", "%", "step_tot", ")", "\n", "global_step", "=", "0", "\n", "best_dev_score", "=", "0", "\n", "best_test_score", "=", "0", "\n", "best_epoch", "=", "0", "\n", "for", "i", "in", "range", "(", "args", ".", "max_epoch", ")", ":", "\n", "# dev", "\n", "\n", "        ", "for", "batch", "in", "train_dataloader", ":", "\n", "            ", "inputs", "=", "{", "\n", "\"label\"", ":", "batch", "[", "0", "]", ",", "\n", "\"input_ids\"", ":", "batch", "[", "3", "]", ",", "\n", "\"mask\"", ":", "batch", "[", "4", "]", ",", "\n", "\"h_pos\"", ":", "batch", "[", "5", "]", ",", "\n", "\"t_pos\"", ":", "batch", "[", "6", "]", ",", "\n", "'head_id'", ":", "batch", "[", "7", "]", ",", "\n", "'tail_id'", ":", "batch", "[", "8", "]", "\n", "}", "\n", "if", "args", ".", "use_bag", ":", "\n", "                ", "inputs", "[", "\"scope\"", "]", "=", "batch", "[", "2", "]", "\n", "", "model", ".", "training", "=", "True", "\n", "model", ".", "train", "(", ")", "\n", "loss", ",", "output", "=", "model", "(", "**", "inputs", ")", "\n", "if", "args", ".", "optim", "==", "\"adamw\"", ":", "\n", "                ", "with", "amp", ".", "scale_loss", "(", "loss", ",", "optimizer", ")", "as", "scaled_loss", ":", "\n", "                    ", "scaled_loss", ".", "backward", "(", ")", "\n", "", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "amp", ".", "master_params", "(", "optimizer", ")", ",", "args", ".", "max_grad_norm", ")", "\n", "", "else", ":", "\n", "                ", "loss", ".", "backward", "(", ")", "\n", "", "optimizer", ".", "step", "(", ")", "\n", "if", "args", ".", "optim", "==", "\"adamw\"", ":", "\n", "                ", "scheduler", ".", "step", "(", ")", "\n", "", "model", ".", "zero_grad", "(", ")", "\n", "global_step", "+=", "1", "\n", "\n", "output", "=", "output", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "label", "=", "batch", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "try", ":", "\n", "                ", "crr", "=", "(", "output", "==", "label", ")", ".", "sum", "(", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "crr", ")", "\n", "print", "(", "output", ")", "\n", "print", "(", "label", ")", "\n", "exit", "(", "0", ")", "\n", "", "tot", "=", "label", ".", "shape", "[", "0", "]", "\n", "\n", "sys", ".", "stdout", ".", "write", "(", "\"epoch: %d, loss: %.6f, acc: %.3f\\r\"", "%", "(", "i", ",", "loss", ",", "crr", "/", "tot", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "print", "(", "\"\"", ")", "\n", "print", "(", "\"deving....\"", ")", "\n", "model", ".", "training", "=", "False", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "\"semeval\"", "or", "args", ".", "dataset", "==", "\"tacred\"", ":", "\n", "                ", "eval_func", "=", "eval_F1", "\n", "", "elif", "args", ".", "dataset", "==", "\"wiki80\"", "or", "args", ".", "dataset", "==", "\"chemprot\"", ":", "\n", "                ", "eval_func", "=", "eval_ACC", "\n", "", "elif", "args", ".", "dataset", "==", "\"nyt\"", "or", "args", ".", "dataset", "==", "\"gids\"", ":", "\n", "                ", "eval_func", "=", "eval_AP", "\n", "\n", "", "score", "=", "eval_func", "(", "args", ",", "model", ",", "dev_dataloader", ")", "\n", "print", "(", "'score'", ",", "score", ")", "\n", "if", "score", ">", "best_dev_score", ":", "\n", "                ", "best_dev_score", "=", "score", "\n", "best_test_score", "=", "score", "#eval_func(args, model, test_dataloader)", "\n", "best_epoch", "=", "i", "\n", "print", "(", "\"Best Dev score: %.3f,\\tTest score: %.3f\"", "%", "(", "best_dev_score", ",", "best_test_score", ")", ")", "\n", "temp", "=", "'_bag_kg.mdl'", "if", "args", ".", "use_bag", "else", "'_kg.mdl'", "\n", "if", "args", ".", "direct_feature", ":", "\n", "                    ", "temp", "=", "'_direct_'", "+", "temp", "\n", "", "if", "args", ".", "use_seg", ":", "\n", "                    ", "temp", "=", "'_seg'", "+", "temp", "\n", "", "if", "args", ".", "ckpt_to_load", "!=", "'None'", ":", "\n", "                    ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "'../../save/nyt/'", "+", "args", ".", "prefix", "+", "args", ".", "dataset", "+", "'_'", "+", "args", ".", "ckpt_to_load", "+", "'_'", "+", "args", ".", "kg_method", "+", "temp", ")", "\n", "", "else", ":", "\n", "                    ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "'../../save/nyt/'", "+", "args", ".", "prefix", "+", "args", ".", "dataset", "+", "'_'", "+", "'bert-base-uncased'", "+", "'_'", "+", "args", ".", "kg_method", "+", "temp", ")", "\n", "", "", "else", ":", "\n", "                ", "print", "(", "\"Dev score: %.3f\"", "%", "score", ")", "\n", "", "print", "(", "\"-----------------------------------------------------------\"", ")", "\n", "", "", "print", "(", "\"@RESULT: \"", "+", "args", ".", "dataset", "+", "\" Test score is %.3f\"", "%", "best_test_score", ")", "\n", "f", "=", "open", "(", "\"../log/re_log\"", ",", "'a+'", ")", "\n", "temp", "=", "'_bag_kg.mdl'", "if", "args", ".", "use_bag", "else", "'_kg.mdl'", "\n", "if", "args", ".", "direct_feature", ":", "\n", "        ", "temp", "=", "'_direct_'", "+", "temp", "\n", "", "if", "args", ".", "use_seg", ":", "\n", "        ", "temp", "=", "'_seg'", "+", "temp", "\n", "", "if", "args", ".", "ckpt_to_load", "==", "\"None\"", ":", "\n", "        ", "f", ".", "write", "(", "args", ".", "prefix", "+", "args", ".", "dataset", "+", "'_'", "+", "'bert-base-uncased'", "+", "'_'", "+", "args", ".", "kg_method", "+", "temp", "+", "'\\t'", "+", "str", "(", "time", ".", "ctime", "(", ")", ")", "+", "\"\\n\"", ")", "\n", "", "else", ":", "\n", "        ", "f", ".", "write", "(", "args", ".", "prefix", "+", "args", ".", "dataset", "+", "'_'", "+", "'bert-base-uncased'", "+", "'_'", "+", "args", ".", "kg_method", "+", "temp", "+", "'\\t'", "+", "str", "(", "time", ".", "ctime", "(", ")", ")", "+", "\"\\n\"", ")", "\n", "", "f", ".", "write", "(", "\"@RESULT: Best Dev score is %.3f, Test score is %.3f\\n, at epoch %d\"", "%", "(", "best_dev_score", ",", "best_test_score", ",", "best_epoch", ")", ")", "\n", "f", ".", "write", "(", "\"--------------------------------------------------------------\\n\"", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.main.eval_AP": [[210, 255], ["numpy.array", "numpy.zeros", "tot_labels.astype.astype", "sklearn.metrics.average_precision_score", "sklearn.metrics.average_precision_score", "model", "tot_label.extend", "scipy.special.softmax.extend", "json.load", "numpy.zeros", "numpy.zeros", "scipy.special.softmax", "range", "batch[].cpu().detach().tolist", "logits.cpu().detach().tolist", "print", "print", "exit", "open", "len", "numpy.mean", "len", "len", "len", "len", "len", "batch[].cpu().detach", "logits.cpu().detach", "range", "len", "batch[].cpu", "logits.cpu"], "function", ["None"], ["", "def", "eval_AP", "(", "args", ",", "model", ",", "dataloader", ",", "return_output", "=", "False", ")", ":", "\n", "    ", "tot_label", "=", "[", "]", "\n", "tot_logits", "=", "[", "]", "\n", "for", "batch", "in", "dataloader", ":", "\n", "        ", "inputs", "=", "{", "\n", "\"label\"", ":", "batch", "[", "0", "]", ",", "\n", "\"input_ids\"", ":", "batch", "[", "3", "]", ",", "\n", "\"mask\"", ":", "batch", "[", "4", "]", ",", "\n", "\"h_pos\"", ":", "batch", "[", "5", "]", ",", "\n", "\"t_pos\"", ":", "batch", "[", "6", "]", ",", "\n", "'head_id'", ":", "batch", "[", "7", "]", ",", "\n", "'tail_id'", ":", "batch", "[", "8", "]", "\n", "}", "\n", "if", "args", ".", "use_bag", ":", "\n", "            ", "inputs", "[", "\"scope\"", "]", "=", "batch", "[", "2", "]", "\n", "", "logits", ",", "output", "=", "model", "(", "**", "inputs", ")", "\n", "tot_label", ".", "extend", "(", "batch", "[", "0", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "tolist", "(", ")", ")", "\n", "tot_logits", ".", "extend", "(", "logits", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "tolist", "(", ")", ")", "\n", "", "tot_logits", "=", "np", ".", "array", "(", "tot_logits", ")", "\n", "tot_labels", "=", "np", ".", "zeros", "(", "tot_logits", ".", "shape", ")", "\n", "try", ":", "\n", "        ", "tot_labels", "[", "range", "(", "len", "(", "tot_labels", ")", ")", ",", "tot_label", "]", "=", "1", "\n", "", "except", ":", "\n", "        ", "print", "(", "tot_labels", ".", "shape", ",", "len", "(", "tot_label", ")", ")", "\n", "print", "(", "logits", ".", "shape", ")", "\n", "exit", "(", "0", ")", "\n", "\n", "", "if", "not", "args", ".", "use_bag", ":", "\n", "        ", "test_scope", "=", "json", ".", "load", "(", "open", "(", "'../../data/'", "+", "args", ".", "dataset", "+", "'/scope_test.json'", ")", ")", "\n", "new_logits", "=", "np", ".", "zeros", "(", "(", "len", "(", "test_scope", ")", ",", "len", "(", "tot_labels", "[", "0", "]", ")", ")", ")", "\n", "new_labels", "=", "np", ".", "zeros", "(", "(", "len", "(", "test_scope", ")", ",", "len", "(", "tot_labels", "[", "0", "]", ")", ")", ")", "\n", "tot_logits", "=", "softmax", "(", "tot_logits", ",", "axis", "=", "1", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "test_scope", ")", ")", ":", "\n", "            ", "new_logits", "[", "i", "]", "=", "np", ".", "mean", "(", "tot_logits", "[", "test_scope", "[", "i", "]", "[", "0", "]", ":", "test_scope", "[", "i", "]", "[", "1", "]", "]", ",", "axis", "=", "0", ")", "\n", "new_labels", "[", "i", "]", "=", "tot_labels", "[", "test_scope", "[", "i", "]", "[", "0", "]", "]", "\n", "", "tot_logits", "=", "new_logits", "\n", "tot_labels", "=", "new_labels", "\n", "\n", "", "tot_labels", "=", "tot_labels", ".", "astype", "(", "np", ".", "int", ")", "\n", "ap", "=", "average_precision_score", "(", "tot_labels", ",", "tot_logits", ",", "average", "=", "'micro'", ")", "\n", "ap2", "=", "average_precision_score", "(", "tot_labels", "[", ":", ",", "1", ":", "]", ",", "tot_logits", "[", ":", ",", "1", ":", "]", ",", "average", "=", "'micro'", ")", "\n", "if", "return_output", ":", "\n", "        ", "return", "ap2", ",", "tot_logits", ",", "tot_labels", "\n", "", "else", ":", "\n", "        ", "return", "ap2", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.main.eval_F1": [[256, 276], ["main.f1_score", "model", "tot_label.extend", "tot_output.extend", "batch[].cpu().tolist", "output.cpu().detach().tolist", "batch[].cpu", "output.cpu().detach", "output.cpu"], "function", ["home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.main.f1_score"], ["", "", "def", "eval_F1", "(", "args", ",", "model", ",", "dataloader", ")", ":", "\n", "    ", "tot_label", "=", "[", "]", "\n", "tot_output", "=", "[", "]", "\n", "for", "batch", "in", "dataloader", ":", "\n", "        ", "inputs", "=", "{", "\n", "\"label\"", ":", "batch", "[", "0", "]", ",", "\n", "\"input_ids\"", ":", "batch", "[", "3", "]", ",", "\n", "\"mask\"", ":", "batch", "[", "4", "]", ",", "\n", "\"h_pos\"", ":", "batch", "[", "5", "]", ",", "\n", "\"t_pos\"", ":", "batch", "[", "6", "]", ",", "\n", "'head_id'", ":", "batch", "[", "7", "]", ",", "\n", "'tail_id'", ":", "batch", "[", "8", "]", "\n", "}", "\n", "if", "args", ".", "use_bag", ":", "\n", "            ", "inputs", "[", "\"scope\"", "]", "=", "batch", "[", "2", "]", "\n", "", "_", ",", "output", "=", "model", "(", "**", "inputs", ")", "\n", "tot_label", ".", "extend", "(", "batch", "[", "0", "]", ".", "cpu", "(", ")", ".", "tolist", "(", ")", ")", "\n", "tot_output", ".", "extend", "(", "output", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "tolist", "(", ")", ")", "\n", "", "f1", ",", "_", "=", "f1_score", "(", "tot_output", ",", "tot_label", ",", "args", ".", "rel_num", ")", "\n", "return", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.main.eval_ACC": [[278, 303], ["model", "output.cpu().detach().numpy.cpu().detach().numpy", "batch[].cpu().numpy", "sys.stdout.write", "sys.stdout.flush", "output.cpu().detach().numpy.cpu().detach", "batch[].cpu", "output.cpu().detach().numpy.cpu"], "function", ["None"], ["", "def", "eval_ACC", "(", "args", ",", "model", ",", "dataloader", ")", ":", "\n", "    ", "tot", "=", "0.0", "\n", "crr", "=", "0.0", "\n", "for", "batch", "in", "dataloader", ":", "\n", "        ", "inputs", "=", "{", "\n", "\"label\"", ":", "batch", "[", "0", "]", ",", "\n", "\"input_ids\"", ":", "batch", "[", "3", "]", ",", "\n", "\"mask\"", ":", "batch", "[", "4", "]", ",", "\n", "\"h_pos\"", ":", "batch", "[", "5", "]", ",", "\n", "\"t_pos\"", ":", "batch", "[", "6", "]", ",", "\n", "'head_id'", ":", "batch", "[", "7", "]", ",", "\n", "'tail_id'", ":", "batch", "[", "8", "]", "\n", "}", "\n", "if", "args", ".", "use_bag", ":", "\n", "            ", "inputs", "[", "\"scope\"", "]", "=", "batch", "[", "2", "]", "\n", "", "_", ",", "output", "=", "model", "(", "**", "inputs", ")", "\n", "output", "=", "output", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "label", "=", "batch", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "crr", "+=", "(", "output", "==", "label", ")", ".", "sum", "(", ")", "\n", "tot", "+=", "label", ".", "shape", "[", "0", "]", "\n", "\n", "sys", ".", "stdout", ".", "write", "(", "\"acc: %.3f\\r\"", "%", "(", "crr", "/", "tot", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "", "return", "crr", "/", "tot", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.dataset.REDataset.__init__": [[20, 80], ["utils.utils.EntityMarker", "len", "os.path.exists", "os.path.exists", "print", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "enumerate", "print", "open", "f.readlines", "os.path.join", "json.load", "Exception", "os.path.join", "json.load", "print", "min", "min", "min", "os.path.join", "json.loads", "torch.utils.data.append", "open", "open", "utils.utils.EntityMarker.tokenize", "len", "os.path.join", "os.path.join", "utils.utils.EntityMarker.tokenize", "utils.utils.EntityMarker.tokenize", "utils.utils.EntityMarker.tokenizer.tokenize", "utils.utils.EntityMarker.tokenizer.tokenize", "utils.utils.EntityMarker.tokenize_OMOT", "utils.utils.EntityMarker.tokenize_OMOT", "Exception"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "path", ",", "name", ",", "args", ")", ":", "\n", "        ", "data", "=", "[", "]", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "name", ")", ")", "as", "f", ":", "\n", "            ", "all_lines", "=", "f", ".", "readlines", "(", ")", "\n", "for", "line", "in", "all_lines", ":", "\n", "                ", "ins", "=", "json", ".", "loads", "(", "line", ")", "\n", "data", ".", "append", "(", "ins", ")", "\n", "\n", "\n", "", "", "entityMarker", "=", "EntityMarker", "(", "args", ")", "\n", "tot_instance", "=", "len", "(", "data", ")", "\n", "\n", "# load rel2id and type2id", "\n", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"rel2id.json\"", ")", ")", ":", "\n", "            ", "rel2id", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"rel2id.json\"", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Error: There is no `rel2id.json` in \"", "+", "path", "+", "\".\"", ")", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"type2id.json\"", ")", ")", ":", "\n", "            ", "type2id", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"type2id.json\"", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"Warning: There is no `type2id.json` in \"", "+", "path", "+", "\", If you want to train model using `OT`, `CT` settings, please firstly run `utils.py` to get `type2id.json`.\"", ")", "\n", "\n", "", "print", "(", "\"pre process \"", "+", "name", ")", "\n", "# pre process data", "\n", "self", ".", "input_ids", "=", "np", ".", "zeros", "(", "(", "tot_instance", ",", "args", ".", "max_length", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "mask", "=", "np", ".", "zeros", "(", "(", "tot_instance", ",", "args", ".", "max_length", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "h_pos", "=", "np", ".", "zeros", "(", "(", "tot_instance", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "t_pos", "=", "np", ".", "zeros", "(", "(", "tot_instance", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "label", "=", "np", ".", "zeros", "(", "(", "tot_instance", ")", ",", "dtype", "=", "int", ")", "\n", "\n", "for", "i", ",", "ins", "in", "enumerate", "(", "data", ")", ":", "\n", "            ", "self", ".", "label", "[", "i", "]", "=", "rel2id", "[", "ins", "[", "\"relation\"", "]", "]", "\n", "# tokenize", "\n", "if", "args", ".", "mode", "==", "\"CM\"", ":", "\n", "                ", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize", "(", "data", "[", "i", "]", "[", "\"token\"", "]", ",", "data", "[", "i", "]", "[", "'h'", "]", "[", "'pos'", "]", ",", "data", "[", "i", "]", "[", "'t'", "]", "[", "'pos'", "]", ")", "\n", "", "elif", "args", ".", "mode", "==", "\"OC\"", ":", "\n", "                ", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize", "(", "data", "[", "i", "]", "[", "\"token\"", "]", ",", "data", "[", "i", "]", "[", "'h'", "]", "[", "'pos'", "]", ",", "data", "[", "i", "]", "[", "'t'", "]", "[", "'pos'", "]", ",", "None", ",", "None", ",", "True", ",", "True", ")", "\n", "", "elif", "args", ".", "mode", "==", "\"CT\"", ":", "\n", "                ", "h_type", "=", "\"[unused%d]\"", "%", "(", "type2id", "[", "'subj_'", "+", "ins", "[", "'h'", "]", "[", "'type'", "]", "]", "+", "10", ")", "\n", "t_type", "=", "\"[unused%d]\"", "%", "(", "type2id", "[", "'obj_'", "+", "ins", "[", "'t'", "]", "[", "'type'", "]", "]", "+", "10", ")", "\n", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize", "(", "data", "[", "i", "]", "[", "\"token\"", "]", ",", "data", "[", "i", "]", "[", "'h'", "]", "[", "'pos'", "]", ",", "data", "[", "i", "]", "[", "'t'", "]", "[", "'pos'", "]", ",", "h_type", ",", "t_type", ")", "\n", "", "elif", "args", ".", "mode", "==", "\"OM\"", ":", "\n", "                ", "head", "=", "entityMarker", ".", "tokenizer", ".", "tokenize", "(", "ins", "[", "'h'", "]", "[", "'name'", "]", ")", "\n", "tail", "=", "entityMarker", ".", "tokenizer", ".", "tokenize", "(", "ins", "[", "'t'", "]", "[", "'name'", "]", ")", "\n", "h_first", "=", "ins", "[", "'h'", "]", "[", "'pos'", "]", "[", "0", "]", "<", "ins", "[", "'t'", "]", "[", "'pos'", "]", "[", "0", "]", "\n", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize_OMOT", "(", "head", ",", "tail", ",", "h_first", ")", "\n", "", "elif", "args", ".", "mode", "==", "\"OT\"", ":", "\n", "                ", "h_type", "=", "\"[unused%d]\"", "%", "(", "type2id", "[", "'subj_'", "+", "ins", "[", "'h'", "]", "[", "'type'", "]", "]", "+", "10", ")", "\n", "t_type", "=", "\"[unused%d]\"", "%", "(", "type2id", "[", "'obj_'", "+", "ins", "[", "'t'", "]", "[", "'type'", "]", "]", "+", "10", ")", "\n", "h_first", "=", "ins", "[", "'h'", "]", "[", "'pos'", "]", "[", "0", "]", "<", "ins", "[", "'t'", "]", "[", "'pos'", "]", "[", "0", "]", "\n", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize_OMOT", "(", "[", "h_type", ",", "]", ",", "[", "t_type", ",", "]", ",", "h_first", ")", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "\"No such mode! Please make sure that `mode` takes the value in {CM,OC,CT,OM,OT}\"", ")", "\n", "\n", "", "length", "=", "min", "(", "len", "(", "ids", ")", ",", "args", ".", "max_length", ")", "\n", "self", ".", "input_ids", "[", "i", "]", "[", "0", ":", "length", "]", "=", "ids", "[", "0", ":", "length", "]", "\n", "self", ".", "mask", "[", "i", "]", "[", "0", ":", "length", "]", "=", "1", "\n", "self", ".", "h_pos", "[", "i", "]", "=", "min", "(", "ph", ",", "args", ".", "max_length", "-", "1", ")", "\n", "self", ".", "t_pos", "[", "i", "]", "=", "min", "(", "pt", ",", "args", ".", "max_length", "-", "1", ")", "\n", "", "print", "(", "\"The number of sentence in which tokenizer can't find head/tail entity is %d\"", "%", "entityMarker", ".", "err", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.dataset.REDataset.__len__": [[81, 83], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "input_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.dataset.REDataset.__getitem__": [[84, 92], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "input_ids", "=", "self", ".", "input_ids", "[", "index", "]", "\n", "mask", "=", "self", ".", "mask", "[", "index", "]", "\n", "h_pos", "=", "self", ".", "h_pos", "[", "index", "]", "\n", "t_pos", "=", "self", ".", "t_pos", "[", "index", "]", "\n", "label", "=", "self", ".", "label", "[", "index", "]", "\n", "\n", "return", "input_ids", ",", "mask", ",", "h_pos", ",", "t_pos", ",", "label", ",", "index", "\n", "", "", "class", "REBagDataset", "(", "data", ".", "Dataset", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.dataset.REBagDataset.__init__": [[95, 167], ["utils.utils.EntityMarker", "len", "os.path.exists", "os.path.exists", "print", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "print", "enumerate", "print", "open", "f.readlines", "os.path.join", "json.load", "Exception", "os.path.join", "json.load", "print", "json.load", "json.load", "len", "min", "min", "min", "os.path.join", "json.loads", "torch.utils.data.append", "open", "open", "open", "open", "json.load", "json.load", "utils.utils.EntityMarker.tokenize", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "open", "open", "json.load", "json.load", "print", "utils.utils.EntityMarker.tokenize", "os.path.join", "os.path.join", "open", "open", "utils.utils.EntityMarker.tokenize", "os.path.join", "os.path.join", "utils.utils.EntityMarker.tokenizer.tokenize", "utils.utils.EntityMarker.tokenizer.tokenize", "utils.utils.EntityMarker.tokenize_OMOT", "utils.utils.EntityMarker.tokenize_OMOT", "Exception"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "path", ",", "name", ",", "args", ")", ":", "\n", "        ", "data", "=", "[", "]", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "name", ")", ")", "as", "f", ":", "\n", "            ", "all_lines", "=", "f", ".", "readlines", "(", ")", "\n", "for", "line", "in", "all_lines", ":", "\n", "                ", "ins", "=", "json", ".", "loads", "(", "line", ")", "\n", "data", ".", "append", "(", "ins", ")", "\n", "\n", "\n", "", "", "entityMarker", "=", "EntityMarker", "(", "args", ")", "\n", "tot_instance", "=", "len", "(", "data", ")", "\n", "\n", "# load rel2id and type2id", "\n", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"rel2id.json\"", ")", ")", ":", "\n", "            ", "rel2id", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"rel2id.json\"", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Error: There is no `rel2id.json` in \"", "+", "path", "+", "\".\"", ")", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"type2id.json\"", ")", ")", ":", "\n", "            ", "type2id", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"type2id.json\"", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"Warning: There is no `type2id.json` in \"", "+", "path", "+", "\", If you want to train model using `OT`, `CT` settings, please firstly run `utils.py` to get `type2id.json`.\"", ")", "\n", "\n", "", "print", "(", "\"pre process \"", "+", "name", ")", "\n", "# pre process data", "\n", "self", ".", "bag_size", "=", "args", ".", "bag_size", "\n", "self", ".", "input_ids", "=", "np", ".", "zeros", "(", "(", "tot_instance", ",", "args", ".", "max_length", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "mask", "=", "np", ".", "zeros", "(", "(", "tot_instance", ",", "args", ".", "max_length", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "h_pos", "=", "np", ".", "zeros", "(", "(", "tot_instance", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "t_pos", "=", "np", ".", "zeros", "(", "(", "tot_instance", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "label", "=", "np", ".", "zeros", "(", "(", "tot_instance", ")", ",", "dtype", "=", "int", ")", "\n", "if", "'test'", "in", "name", ":", "\n", "            ", "self", ".", "scope", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"scope_test.json\"", ")", ")", ")", "\n", "self", ".", "bag_name", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"triple_test.json\"", ")", ")", ")", "\n", "", "elif", "'dev'", "in", "name", ":", "\n", "            ", "self", ".", "scope", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"scope_dev.json\"", ")", ")", ")", "\n", "self", ".", "bag_name", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"triple_dev.json\"", ")", ")", ")", "\n", "", "elif", "'train'", "in", "name", ":", "\n", "            ", "self", ".", "scope", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"scope_train.json\"", ")", ")", ")", "\n", "self", ".", "bag_name", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"triple_train.json\"", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'out of format to load data'", ",", "name", ")", "\n", "", "print", "(", "'scope'", ",", "name", ",", "len", "(", "self", ".", "scope", ")", ",", "self", ".", "scope", "[", "0", "]", ",", "self", ".", "scope", "[", "-", "1", "]", ")", "\n", "for", "i", ",", "ins", "in", "enumerate", "(", "data", ")", ":", "\n", "            ", "self", ".", "label", "[", "i", "]", "=", "rel2id", "[", "ins", "[", "\"relation\"", "]", "]", "\n", "# tokenize", "\n", "if", "args", ".", "mode", "==", "\"CM\"", ":", "\n", "                ", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize", "(", "data", "[", "i", "]", "[", "\"token\"", "]", ",", "data", "[", "i", "]", "[", "'h'", "]", "[", "'pos'", "]", ",", "data", "[", "i", "]", "[", "'t'", "]", "[", "'pos'", "]", ")", "\n", "", "elif", "args", ".", "mode", "==", "\"OC\"", ":", "\n", "                ", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize", "(", "data", "[", "i", "]", "[", "\"token\"", "]", ",", "data", "[", "i", "]", "[", "'h'", "]", "[", "'pos'", "]", ",", "data", "[", "i", "]", "[", "'t'", "]", "[", "'pos'", "]", ",", "None", ",", "None", ",", "True", ",", "True", ")", "\n", "", "elif", "args", ".", "mode", "==", "\"CT\"", ":", "\n", "                ", "h_type", "=", "\"[unused%d]\"", "%", "(", "type2id", "[", "'subj_'", "+", "ins", "[", "'h'", "]", "[", "'type'", "]", "]", "+", "10", ")", "\n", "t_type", "=", "\"[unused%d]\"", "%", "(", "type2id", "[", "'obj_'", "+", "ins", "[", "'t'", "]", "[", "'type'", "]", "]", "+", "10", ")", "\n", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize", "(", "data", "[", "i", "]", "[", "\"token\"", "]", ",", "data", "[", "i", "]", "[", "'h'", "]", "[", "'pos'", "]", ",", "data", "[", "i", "]", "[", "'t'", "]", "[", "'pos'", "]", ",", "h_type", ",", "t_type", ")", "\n", "", "elif", "args", ".", "mode", "==", "\"OM\"", ":", "\n", "                ", "head", "=", "entityMarker", ".", "tokenizer", ".", "tokenize", "(", "ins", "[", "'h'", "]", "[", "'name'", "]", ")", "\n", "tail", "=", "entityMarker", ".", "tokenizer", ".", "tokenize", "(", "ins", "[", "'t'", "]", "[", "'name'", "]", ")", "\n", "h_first", "=", "ins", "[", "'h'", "]", "[", "'pos'", "]", "[", "0", "]", "<", "ins", "[", "'t'", "]", "[", "'pos'", "]", "[", "0", "]", "\n", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize_OMOT", "(", "head", ",", "tail", ",", "h_first", ")", "\n", "", "elif", "args", ".", "mode", "==", "\"OT\"", ":", "\n", "                ", "h_type", "=", "\"[unused%d]\"", "%", "(", "type2id", "[", "'subj_'", "+", "ins", "[", "'h'", "]", "[", "'type'", "]", "]", "+", "10", ")", "\n", "t_type", "=", "\"[unused%d]\"", "%", "(", "type2id", "[", "'obj_'", "+", "ins", "[", "'t'", "]", "[", "'type'", "]", "]", "+", "10", ")", "\n", "h_first", "=", "ins", "[", "'h'", "]", "[", "'pos'", "]", "[", "0", "]", "<", "ins", "[", "'t'", "]", "[", "'pos'", "]", "[", "0", "]", "\n", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize_OMOT", "(", "[", "h_type", ",", "]", ",", "[", "t_type", ",", "]", ",", "h_first", ")", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "\"No such mode! Please make sure that `mode` takes the value in {CM,OC,CT,OM,OT}\"", ")", "\n", "\n", "", "length", "=", "min", "(", "len", "(", "ids", ")", ",", "args", ".", "max_length", ")", "\n", "self", ".", "input_ids", "[", "i", "]", "[", "0", ":", "length", "]", "=", "ids", "[", "0", ":", "length", "]", "\n", "self", ".", "mask", "[", "i", "]", "[", "0", ":", "length", "]", "=", "1", "\n", "self", ".", "h_pos", "[", "i", "]", "=", "min", "(", "ph", ",", "args", ".", "max_length", "-", "1", ")", "\n", "self", ".", "t_pos", "[", "i", "]", "=", "min", "(", "pt", ",", "args", ".", "max_length", "-", "1", ")", "\n", "", "print", "(", "\"The number of sentence in which tokenizer can't find head/tail entity is %d\"", "%", "entityMarker", ".", "err", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.dataset.REBagDataset.__len__": [[168, 170], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "scope", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.dataset.REBagDataset.__getitem__": [[171, 194], ["random.sample", "range", "print", "exit", "len", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "scope", "=", "self", ".", "scope", "[", "index", "]", "\n", "bag_name", "=", "self", ".", "bag_name", "[", "index", "]", "\n", "if", "self", ".", "bag_size", ">", "0", "and", "scope", "[", "1", "]", "-", "scope", "[", "0", "]", ">", "self", ".", "bag_size", ":", "\n", "            ", "count", "=", "self", ".", "bag_size", "\n", "to_select", "=", "random", ".", "sample", "(", "range", "(", "scope", "[", "0", "]", ",", "scope", "[", "1", "]", ")", ",", "self", ".", "bag_size", ")", "\n", "input_ids", "=", "self", ".", "input_ids", "[", "to_select", "]", "\n", "mask", "=", "self", ".", "mask", "[", "to_select", "]", "\n", "h_pos", "=", "self", ".", "h_pos", "[", "to_select", "]", "\n", "t_pos", "=", "self", ".", "t_pos", "[", "to_select", "]", "\n", "", "else", ":", "\n", "            ", "input_ids", "=", "self", ".", "input_ids", "[", "scope", "[", "0", "]", ":", "scope", "[", "1", "]", "]", "\n", "mask", "=", "self", ".", "mask", "[", "scope", "[", "0", "]", ":", "scope", "[", "1", "]", "]", "\n", "h_pos", "=", "self", ".", "h_pos", "[", "scope", "[", "0", "]", ":", "scope", "[", "1", "]", "]", "\n", "t_pos", "=", "self", ".", "t_pos", "[", "scope", "[", "0", "]", ":", "scope", "[", "1", "]", "]", "\n", "count", "=", "scope", "[", "1", "]", "-", "scope", "[", "0", "]", "\n", "", "try", ":", "\n", "            ", "label", "=", "self", ".", "label", "[", "scope", "[", "0", "]", "]", "\n", "", "except", ":", "\n", "            ", "print", "(", "scope", ",", "len", "(", "self", ".", "label", ")", ",", "index", ",", "self", ".", "scope", "[", "index", "]", ",", "len", "(", "self", ".", "scope", ")", ")", "\n", "exit", "(", "0", ")", "\n", "\n", "", "return", "label", ",", "bag_name", ",", "count", ",", "input_ids", ",", "mask", ",", "h_pos", ",", "t_pos", "\n", "", "@", "staticmethod", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.dataset.REBagDataset.collate_fn": [[194, 224], ["list", "numpy.array", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "torch.tensor().long().cuda", "torch.tensor().long().cuda", "torch.tensor().long().cuda", "zip", "scope.append", "len", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "data", ")", ":", "\n", "        ", "data", "=", "list", "(", "zip", "(", "*", "data", ")", ")", "\n", "label", ",", "bag_name", ",", "count", "=", "data", "[", ":", "3", "]", "\n", "\n", "label", "=", "np", ".", "array", "(", "label", ")", "\n", "input_ids", "=", "np", ".", "concatenate", "(", "data", "[", "3", "]", ",", "axis", "=", "0", ")", "\n", "mask", "=", "np", ".", "concatenate", "(", "data", "[", "4", "]", ",", "axis", "=", "0", ")", "\n", "h_pos", "=", "np", ".", "concatenate", "(", "data", "[", "5", "]", ")", "\n", "t_pos", "=", "np", ".", "concatenate", "(", "data", "[", "6", "]", ")", "\n", "\n", "scope", "=", "[", "]", "# (B, 2)", "\n", "start", "=", "0", "\n", "for", "c", "in", "count", ":", "\n", "            ", "scope", ".", "append", "(", "(", "start", ",", "start", "+", "c", ")", ")", "\n", "start", "+=", "c", "\n", "", "assert", "(", "start", "==", "len", "(", "input_ids", ")", ")", "\n", "\n", "#scope = torch.tensor(scope).long()", "\n", "#print(label[0],type(label))", "\n", "label", "=", "torch", ".", "tensor", "(", "label", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "# (B)", "\n", "#print(input_ids[0],type(input_ids))", "\n", "input_ids", "=", "torch", ".", "tensor", "(", "input_ids", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "#print(mask[0],type(mask))", "\n", "mask", "=", "torch", ".", "tensor", "(", "mask", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "#print(h_pos[0],type(h_pos))", "\n", "#h_pos = torch.tensor(h_pos).long().cuda()", "\n", "#print(t_pos[0],type(t_pos))", "\n", "#t_pos = torch.tensor(t_pos).long().cuda()", "\n", "return", "label", ",", "bag_name", ",", "scope", ",", "input_ids", ",", "mask", ",", "h_pos", ",", "t_pos", "\n", "", "", "class", "REBagDataset_KG", "(", "data", ".", "Dataset", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.dataset.REBagDataset_KG.__init__": [[227, 304], ["utils.utils.EntityMarker", "len", "os.path.exists", "os.path.exists", "print", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "json.load", "print", "enumerate", "print", "open", "f.readlines", "os.path.join", "json.load", "Exception", "os.path.join", "json.load", "print", "open", "json.load", "json.load", "len", "min", "min", "min", "os.path.join", "json.loads", "torch.utils.data.append", "open", "open", "os.path.join", "open", "open", "json.load", "json.load", "utils.utils.EntityMarker.tokenize", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "open", "open", "json.load", "json.load", "print", "utils.utils.EntityMarker.tokenize", "os.path.join", "os.path.join", "open", "open", "utils.utils.EntityMarker.tokenize", "os.path.join", "os.path.join", "utils.utils.EntityMarker.tokenizer.tokenize", "utils.utils.EntityMarker.tokenizer.tokenize", "utils.utils.EntityMarker.tokenize_OMOT", "utils.utils.EntityMarker.tokenize_OMOT", "Exception"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "path", ",", "name", ",", "args", ")", ":", "\n", "        ", "data", "=", "[", "]", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "name", ")", ")", "as", "f", ":", "\n", "            ", "all_lines", "=", "f", ".", "readlines", "(", ")", "\n", "for", "line", "in", "all_lines", ":", "\n", "                ", "ins", "=", "json", ".", "loads", "(", "line", ")", "\n", "data", ".", "append", "(", "ins", ")", "\n", "\n", "", "", "self", ".", "use_bag", "=", "args", ".", "use_bag", "\n", "entityMarker", "=", "EntityMarker", "(", "args", ")", "\n", "tot_instance", "=", "len", "(", "data", ")", "\n", "\n", "# load rel2id and type2id", "\n", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"rel2id.json\"", ")", ")", ":", "\n", "            ", "rel2id", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"rel2id.json\"", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Error: There is no `rel2id.json` in \"", "+", "path", "+", "\".\"", ")", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"type2id.json\"", ")", ")", ":", "\n", "            ", "type2id", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"type2id.json\"", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"Warning: There is no `type2id.json` in \"", "+", "path", "+", "\", If you want to train model using `OT`, `CT` settings, please firstly run `utils.py` to get `type2id.json`.\"", ")", "\n", "\n", "", "print", "(", "\"pre process \"", "+", "name", ")", "\n", "# pre process data", "\n", "self", ".", "bag_size", "=", "args", ".", "bag_size", "\n", "self", ".", "input_ids", "=", "np", ".", "zeros", "(", "(", "tot_instance", ",", "args", ".", "max_length", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "mask", "=", "np", ".", "zeros", "(", "(", "tot_instance", ",", "args", ".", "max_length", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "h_pos", "=", "np", ".", "zeros", "(", "(", "tot_instance", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "t_pos", "=", "np", ".", "zeros", "(", "(", "tot_instance", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "label", "=", "np", ".", "zeros", "(", "(", "tot_instance", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "head_id", "=", "np", ".", "zeros", "(", "(", "tot_instance", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "tail_id", "=", "np", ".", "zeros", "(", "(", "tot_instance", ")", ",", "dtype", "=", "int", ")", "\n", "self", ".", "entity2id", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"entity2id.json\"", ")", ")", ")", "\n", "if", "'test'", "in", "name", ":", "\n", "            ", "self", ".", "scope", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"scope_test.json\"", ")", ")", ")", "\n", "self", ".", "bag_name", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"triple_test.json\"", ")", ")", ")", "\n", "", "elif", "'dev'", "in", "name", ":", "\n", "            ", "self", ".", "scope", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"scope_dev.json\"", ")", ")", ")", "\n", "self", ".", "bag_name", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"triple_dev.json\"", ")", ")", ")", "\n", "", "elif", "'train'", "in", "name", ":", "\n", "            ", "self", ".", "scope", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"scope_train.json\"", ")", ")", ")", "\n", "self", ".", "bag_name", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "\"triple_train.json\"", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'out of format to load data'", ",", "name", ")", "\n", "", "print", "(", "'scope'", ",", "name", ",", "len", "(", "self", ".", "scope", ")", ",", "self", ".", "scope", "[", "0", "]", ",", "self", ".", "scope", "[", "-", "1", "]", ")", "\n", "for", "i", ",", "ins", "in", "enumerate", "(", "data", ")", ":", "\n", "            ", "self", ".", "label", "[", "i", "]", "=", "rel2id", "[", "ins", "[", "\"relation\"", "]", "]", "\n", "# tokenize", "\n", "if", "args", ".", "mode", "==", "\"CM\"", ":", "\n", "                ", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize", "(", "data", "[", "i", "]", "[", "\"token\"", "]", ",", "data", "[", "i", "]", "[", "'h'", "]", "[", "'pos'", "]", ",", "data", "[", "i", "]", "[", "'t'", "]", "[", "'pos'", "]", ")", "\n", "", "elif", "args", ".", "mode", "==", "\"OC\"", ":", "\n", "                ", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize", "(", "data", "[", "i", "]", "[", "\"token\"", "]", ",", "data", "[", "i", "]", "[", "'h'", "]", "[", "'pos'", "]", ",", "data", "[", "i", "]", "[", "'t'", "]", "[", "'pos'", "]", ",", "None", ",", "None", ",", "True", ",", "True", ")", "\n", "", "elif", "args", ".", "mode", "==", "\"CT\"", ":", "\n", "                ", "h_type", "=", "\"[unused%d]\"", "%", "(", "type2id", "[", "'subj_'", "+", "ins", "[", "'h'", "]", "[", "'type'", "]", "]", "+", "10", ")", "\n", "t_type", "=", "\"[unused%d]\"", "%", "(", "type2id", "[", "'obj_'", "+", "ins", "[", "'t'", "]", "[", "'type'", "]", "]", "+", "10", ")", "\n", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize", "(", "data", "[", "i", "]", "[", "\"token\"", "]", ",", "data", "[", "i", "]", "[", "'h'", "]", "[", "'pos'", "]", ",", "data", "[", "i", "]", "[", "'t'", "]", "[", "'pos'", "]", ",", "h_type", ",", "t_type", ")", "\n", "", "elif", "args", ".", "mode", "==", "\"OM\"", ":", "\n", "                ", "head", "=", "entityMarker", ".", "tokenizer", ".", "tokenize", "(", "ins", "[", "'h'", "]", "[", "'name'", "]", ")", "\n", "tail", "=", "entityMarker", ".", "tokenizer", ".", "tokenize", "(", "ins", "[", "'t'", "]", "[", "'name'", "]", ")", "\n", "h_first", "=", "ins", "[", "'h'", "]", "[", "'pos'", "]", "[", "0", "]", "<", "ins", "[", "'t'", "]", "[", "'pos'", "]", "[", "0", "]", "\n", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize_OMOT", "(", "head", ",", "tail", ",", "h_first", ")", "\n", "", "elif", "args", ".", "mode", "==", "\"OT\"", ":", "\n", "                ", "h_type", "=", "\"[unused%d]\"", "%", "(", "type2id", "[", "'subj_'", "+", "ins", "[", "'h'", "]", "[", "'type'", "]", "]", "+", "10", ")", "\n", "t_type", "=", "\"[unused%d]\"", "%", "(", "type2id", "[", "'obj_'", "+", "ins", "[", "'t'", "]", "[", "'type'", "]", "]", "+", "10", ")", "\n", "h_first", "=", "ins", "[", "'h'", "]", "[", "'pos'", "]", "[", "0", "]", "<", "ins", "[", "'t'", "]", "[", "'pos'", "]", "[", "0", "]", "\n", "ids", ",", "ph", ",", "pt", "=", "entityMarker", ".", "tokenize_OMOT", "(", "[", "h_type", ",", "]", ",", "[", "t_type", ",", "]", ",", "h_first", ")", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "\"No such mode! Please make sure that `mode` takes the value in {CM,OC,CT,OM,OT}\"", ")", "\n", "", "self", ".", "head_id", "[", "i", "]", "=", "self", ".", "entity2id", "[", "data", "[", "i", "]", "[", "'h'", "]", "[", "'id'", "]", "]", "\n", "self", ".", "tail_id", "[", "i", "]", "=", "self", ".", "entity2id", "[", "data", "[", "i", "]", "[", "'t'", "]", "[", "'id'", "]", "]", "\n", "\n", "length", "=", "min", "(", "len", "(", "ids", ")", ",", "args", ".", "max_length", ")", "\n", "self", ".", "input_ids", "[", "i", "]", "[", "0", ":", "length", "]", "=", "ids", "[", "0", ":", "length", "]", "\n", "self", ".", "mask", "[", "i", "]", "[", "0", ":", "length", "]", "=", "1", "\n", "self", ".", "h_pos", "[", "i", "]", "=", "min", "(", "ph", ",", "args", ".", "max_length", "-", "1", ")", "\n", "self", ".", "t_pos", "[", "i", "]", "=", "min", "(", "pt", ",", "args", ".", "max_length", "-", "1", ")", "\n", "", "print", "(", "\"The number of sentence in which tokenizer can't find head/tail entity is %d\"", "%", "entityMarker", ".", "err", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.dataset.REBagDataset_KG.__len__": [[305, 310], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "use_bag", ":", "\n", "            ", "return", "len", "(", "self", ".", "scope", ")", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "input_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.dataset.REBagDataset_KG.__getitem__": [[311, 343], ["random.sample", "range", "range", "print", "exit", "len", "len"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "self", ".", "use_bag", ":", "\n", "            ", "scope", "=", "self", ".", "scope", "[", "index", "]", "\n", "bag_name", "=", "self", ".", "bag_name", "[", "index", "]", "\n", "if", "self", ".", "bag_size", ">", "0", "and", "scope", "[", "1", "]", "-", "scope", "[", "0", "]", ">", "self", ".", "bag_size", ":", "\n", "                ", "count", "=", "self", ".", "bag_size", "\n", "to_select", "=", "random", ".", "sample", "(", "range", "(", "scope", "[", "0", "]", ",", "scope", "[", "1", "]", ")", ",", "self", ".", "bag_size", ")", "\n", "", "else", ":", "\n", "                ", "count", "=", "scope", "[", "1", "]", "-", "scope", "[", "0", "]", "\n", "to_select", "=", "range", "(", "scope", "[", "0", "]", ",", "scope", "[", "1", "]", ")", "\n", "", "input_ids", "=", "self", ".", "input_ids", "[", "to_select", "]", "\n", "mask", "=", "self", ".", "mask", "[", "to_select", "]", "\n", "h_pos", "=", "self", ".", "h_pos", "[", "to_select", "]", "\n", "t_pos", "=", "self", ".", "t_pos", "[", "to_select", "]", "\n", "head_id", "=", "self", ".", "head_id", "[", "to_select", "]", "\n", "tail_id", "=", "self", ".", "tail_id", "[", "to_select", "]", "\n", "try", ":", "\n", "                ", "label", "=", "self", ".", "label", "[", "scope", "[", "0", "]", "]", "\n", "", "except", ":", "\n", "                ", "print", "(", "scope", ",", "len", "(", "self", ".", "label", ")", ",", "index", ",", "self", ".", "scope", "[", "index", "]", ",", "len", "(", "self", ".", "scope", ")", ")", "\n", "exit", "(", "0", ")", "\n", "\n", "", "return", "label", ",", "bag_name", ",", "count", ",", "input_ids", ",", "mask", ",", "h_pos", ",", "t_pos", ",", "head_id", ",", "tail_id", "\n", "", "else", ":", "\n", "            ", "label", "=", "self", ".", "label", "[", "index", "]", "\n", "input_ids", "=", "self", ".", "input_ids", "[", "index", "]", "\n", "mask", "=", "self", ".", "mask", "[", "index", "]", "\n", "h_pos", "=", "self", ".", "h_pos", "[", "index", "]", "\n", "t_pos", "=", "self", ".", "t_pos", "[", "index", "]", "\n", "head_id", "=", "self", ".", "head_id", "[", "index", "]", "\n", "tail_id", "=", "self", ".", "tail_id", "[", "index", "]", "\n", "return", "label", ",", "None", ",", "None", ",", "input_ids", ",", "mask", ",", "h_pos", ",", "t_pos", ",", "head_id", ",", "tail_id", "\n", "", "", "@", "staticmethod", "\n"]], "home.repos.pwc.inspect_result.zig-kwin-hu_how-KG-ATT-help.nyt.dataset.REBagDataset_KG.collate_fn": [[343, 387], ["list", "numpy.array", "torch.tensor().long().cuda", "torch.tensor().long().cuda", "torch.tensor().long().cuda", "torch.tensor().long().cuda", "torch.tensor().long().cuda", "torch.tensor().long().cuda", "torch.tensor().long().cuda", "zip", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "torch.tensor().long().cuda", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "torch.tensor().long().cuda.append", "len", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "collate_fn", "(", "data", ")", ":", "\n", "        ", "data", "=", "list", "(", "zip", "(", "*", "data", ")", ")", "\n", "label", ",", "bag_name", ",", "count", "=", "data", "[", ":", "3", "]", "\n", "\n", "label", "=", "np", ".", "array", "(", "label", ")", "\n", "\n", "if", "count", "[", "0", "]", ":", "\n", "            ", "input_ids", "=", "np", ".", "concatenate", "(", "data", "[", "3", "]", ",", "axis", "=", "0", ")", "\n", "mask", "=", "np", ".", "concatenate", "(", "data", "[", "4", "]", ",", "axis", "=", "0", ")", "\n", "h_pos", "=", "np", ".", "concatenate", "(", "data", "[", "5", "]", ")", "\n", "t_pos", "=", "np", ".", "concatenate", "(", "data", "[", "6", "]", ")", "\n", "head_id", "=", "np", ".", "concatenate", "(", "data", "[", "7", "]", ")", "\n", "tail_id", "=", "np", ".", "concatenate", "(", "data", "[", "8", "]", ")", "\n", "scope", "=", "[", "]", "# (B, 2)", "\n", "start", "=", "0", "\n", "for", "c", "in", "count", ":", "\n", "                ", "scope", ".", "append", "(", "[", "start", ",", "start", "+", "c", "]", ")", "\n", "start", "+=", "c", "\n", "", "assert", "(", "start", "==", "len", "(", "input_ids", ")", ")", "\n", "scope", "=", "torch", ".", "tensor", "(", "scope", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "input_ids", "=", "np", ".", "array", "(", "data", "[", "3", "]", ")", "\n", "mask", "=", "np", ".", "array", "(", "data", "[", "4", "]", ")", "\n", "h_pos", "=", "np", ".", "array", "(", "data", "[", "5", "]", ")", "\n", "t_pos", "=", "np", ".", "array", "(", "data", "[", "6", "]", ")", "\n", "head_id", "=", "np", ".", "array", "(", "data", "[", "7", "]", ")", "\n", "tail_id", "=", "np", ".", "array", "(", "data", "[", "8", "]", ")", "\n", "scope", "=", "None", "\n", "#scope = torch.tensor(scope).long()", "\n", "#print(label[0],type(label))", "\n", "", "label", "=", "torch", ".", "tensor", "(", "label", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "# (B)", "\n", "#print(input_ids[0],type(input_ids))", "\n", "input_ids", "=", "torch", ".", "tensor", "(", "input_ids", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "#print(mask[0],type(mask))", "\n", "mask", "=", "torch", ".", "tensor", "(", "mask", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "#print(h_pos[0],type(h_pos))", "\n", "h_pos", "=", "torch", ".", "tensor", "(", "h_pos", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "#print(t_pos[0],type(t_pos))", "\n", "t_pos", "=", "torch", ".", "tensor", "(", "t_pos", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "head_id", "=", "torch", ".", "tensor", "(", "head_id", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "tail_id", "=", "torch", ".", "tensor", "(", "tail_id", ")", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "#print('collate', len(label), len(bag_name), len(scope), len(input_ids), len(mask))", "\n", "return", "label", ",", "bag_name", ",", "scope", ",", "input_ids", ",", "mask", ",", "h_pos", ",", "t_pos", ",", "head_id", ",", "tail_id", "\n", "", "", ""]]}