{"home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.clean_console": [[13, 19], ["os.system"], "function", ["None"], ["def", "clean_console", "(", ")", ":", "\n", "    ", "\"\"\"\n    Cleans the system's console using the 'cls' or 'clear' command.\n    :return:\n    \"\"\"", "\n", "os", ".", "system", "(", "'cls'", "if", "os", ".", "name", "==", "'nt'", "else", "'clear'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.log_and_print": [[21, 30], ["log.info", "print"], "function", ["None"], ["", "def", "log_and_print", "(", "msg", ",", "log", ")", ":", "\n", "    ", "\"\"\"\n    Prints a message to the log (into level) and also to the console.\n    :param str msg: the messaged to be logged / displayed.\n    :param Logger log: the log in which to save the message.\n    :return:\n    \"\"\"", "\n", "log", ".", "info", "(", "msg", ")", "\n", "print", "(", "msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line": [[32, 52], ["print", "print", "file.write", "file.write"], "function", ["None"], ["", "def", "print_line", "(", "msg", ",", "file", "=", "None", ",", "write_console", "=", "True", ",", "newline", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Prints a message to a file as a line and optionally to the console.\n    :param str msg: the message to be saved / displayed.\n    :param stream file: the file on which to save the message line.\n    :param bool write_console: whether to print the message to the screen.\n    :param bool newline: whether to write a new line character at the end of printing the message.\n    :return:\n    \"\"\"", "\n", "if", "file", "is", "not", "None", ":", "\n", "        ", "if", "newline", ":", "\n", "            ", "file", ".", "write", "(", "msg", "+", "'\\n'", ")", "\n", "", "else", ":", "\n", "            ", "file", ".", "write", "(", "msg", ")", "\n", "", "if", "not", "write_console", ":", "\n", "            ", "return", "\n", "", "", "if", "newline", ":", "\n", "        ", "print", "(", "msg", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "msg", ",", "end", "=", "''", ",", "flush", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.record_video": [[54, 68], ["gym.wrappers.monitoring.video_recorder.ImageEncoder", "gym.wrappers.monitoring.video_recorder.ImageEncoder.close", "gym.wrappers.monitoring.video_recorder.ImageEncoder.capture_frame"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.close", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.capture_frame"], ["", "", "def", "record_video", "(", "buffer", ",", "file_path", ",", "fps", ")", ":", "\n", "    ", "\"\"\"\n    Records the given image buffer to a video file.\n    :param array_like buffer: the list containing the sequential image frames to be recorded.\n    :param str file_path: the path to the video file.\n    :param int fps: the video frames-per-second.\n    :return:\n    \"\"\"", "\n", "\n", "# creates video encoder and adds each frame in the buffer", "\n", "video_recorder", "=", "ImageEncoder", "(", "file_path", ",", "buffer", "[", "0", "]", ".", "shape", ",", "fps", ",", "fps", ")", "\n", "for", "frame", "in", "buffer", ":", "\n", "        ", "video_recorder", ".", "capture_frame", "(", "frame", ")", "\n", "", "video_recorder", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.save_image": [[70, 79], ["numpy.fliplr", "PIL.Image.fromarray().save", "numpy.rot90", "env.env.env.game_state.getScreenRGB", "PIL.Image.fromarray"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.save"], ["", "def", "save_image", "(", "env", ",", "file_path", ")", ":", "\n", "    ", "\"\"\"\n    Saves a screenshot of the given Gym environment monitor.\n    :param Monitor env: the Gym environment monitor from which to extract the image.\n    :param str file_path: the path to the image file.\n    :return:\n    \"\"\"", "\n", "image_rotated", "=", "np", ".", "fliplr", "(", "np", ".", "rot90", "(", "env", ".", "env", ".", "env", ".", "game_state", ".", "getScreenRGB", "(", ")", ",", "3", ")", ")", "\n", "fromarray", "(", "image_rotated", ")", ".", "save", "(", "file_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.dict_to_list": [[81, 88], ["dct.items"], "function", ["None"], ["", "def", "dict_to_list", "(", "dct", ")", ":", "\n", "    ", "\"\"\"\n    Converts the given dictionary into a list of key-value pairs.\n    :param dict dct: the dictionary to be converted.\n    :return list: a list of key-value tuples.\n    \"\"\"", "\n", "return", "[", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "dct", ".", "items", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.list_to_dict": [[90, 100], ["collections.OrderedDict"], "function", ["None"], ["", "def", "list_to_dict", "(", "lst", ")", ":", "\n", "    ", "\"\"\"\n    Converts the given list of key-value tuples into an ordered dictionary.\n    :param list lst: a list of key-value tuples to be converted.\n    :return OrderedDict: an ordered dictionary containing the elements in the list.\n    \"\"\"", "\n", "dct", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "lst", ":", "\n", "        ", "dct", "[", "k", "]", "=", "v", "\n", "", "return", "dct", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.clean_directory": [[102, 115], ["os.listdir", "os.path.join", "os.path.isfile", "os.unlink", "print"], "function", ["None"], ["", "def", "clean_directory", "(", "dir_path", ")", ":", "\n", "    ", "\"\"\"\n    Deletes all files in the given directory.\n    :param str dir_path: the path to the directory we want to clean.\n    :return:\n    \"\"\"", "\n", "for", "the_file", "in", "os", ".", "listdir", "(", "dir_path", ")", ":", "\n", "        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "dir_path", ",", "the_file", ")", "\n", "try", ":", "\n", "            ", "if", "os", ".", "path", ".", "isfile", "(", "file_path", ")", ":", "\n", "                ", "os", ".", "unlink", "(", "file_path", ")", "\n", "", "", "except", "Exception", "as", "e", ":", "\n", "            ", "print", "(", "e", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.bin.replay_visualizer.process_keys": [[25, 37], ["pygame.event.get", "exit"], "function", ["None"], ["def", "process_keys", "(", ")", ":", "\n", "    ", "global", "advance_time", ",", "advance_episode", "\n", "\n", "# prevent events from going to the game", "\n", "for", "event", "in", "pygame", ".", "event", ".", "get", "(", ")", ":", "\n", "        ", "if", "event", ".", "type", "==", "pygame", ".", "QUIT", ":", "\n", "            ", "exit", "(", ")", "\n", "", "if", "event", ".", "type", "==", "pygame", ".", "KEYDOWN", ":", "\n", "            ", "if", "event", ".", "key", "==", "pygame", ".", "K_SPACE", ":", "\n", "                ", "advance_time", "=", "True", "\n", "", "elif", "event", ".", "key", "==", "pygame", ".", "K_s", ":", "\n", "                ", "advance_episode", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.bin.report.ExplainerMonitor.__init__": [[26, 29], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "# just sets a property with this name so that the explainer can capture environment image frames", "\n", "        ", "self", ".", "video_recorder", "=", "explainer", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.bin.report.run_episodes": [[31, 75], ["range", "len", "new_episode_func", "env.reset", "helper.get_state_from_observation", "interestingness_xrl.util.clean_console", "print", "range", "env.step", "helper.get_state_from_observation", "helper.get_reward", "update_func", "ValueError", "ValueError", "ValueError", "helper.update_stats"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.reset", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_state_from_observation", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.clean_console", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_state_from_observation", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_reward", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.update_stats"], ["", "", "def", "run_episodes", "(", "name", ",", "new_episode_func", ",", "update_func", ")", ":", "\n", "    ", "global", "behavior_tracker", ",", "helper", "\n", "\n", "for", "e", "in", "range", "(", "behavior_tracker", ".", "num_episodes", ")", ":", "\n", "\n", "# gets state and action sequence", "\n", "        ", "s_seq", "=", "behavior_tracker", ".", "s_s", "[", "e", "]", "\n", "a_seq", "=", "behavior_tracker", ".", "s_a", "[", "e", "]", "\n", "seq_len", "=", "len", "(", "s_seq", ")", "\n", "\n", "# signals new episode", "\n", "new_episode_func", "(", "e", ",", "seq_len", ")", "\n", "\n", "old_obs", "=", "env", ".", "reset", "(", ")", "\n", "helper", ".", "get_state_from_observation", "(", "old_obs", ",", "0", ",", "False", ")", "\n", "\n", "clean_console", "(", ")", "\n", "print", "(", "'Processing {} episode {}...'", ".", "format", "(", "name", ",", "e", ")", ")", "\n", "\n", "for", "t", "in", "range", "(", "seq_len", ")", ":", "\n", "\n", "# gets state-action pair", "\n", "            ", "old_s", "=", "s_seq", "[", "t", "]", "\n", "a", "=", "a_seq", "[", "t", "]", "\n", "\n", "# steps the environment, gets next state", "\n", "obs", ",", "r", ",", "done", ",", "_", "=", "env", ".", "step", "(", "a", ")", "\n", "s", "=", "helper", ".", "get_state_from_observation", "(", "obs", ",", "r", ",", "done", ")", "\n", "r", "=", "helper", ".", "get_reward", "(", "old_s", ",", "a", ",", "r", ",", "s", ",", "done", ")", "\n", "\n", "# checks possible synchronization errors", "\n", "if", "done", "and", "t", "!=", "seq_len", "-", "1", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'Environment ended at {}, before tracked behavior which ended at: {}'", ".", "format", "(", "t", ",", "seq_len", "-", "1", ")", ")", "\n", "", "if", "t", "==", "seq_len", "-", "1", "and", "not", "done", ":", "\n", "                ", "raise", "ValueError", "(", "'Environment did not end at {} like it was supposed to'", ".", "format", "(", "t", ")", ")", "\n", "", "if", "not", "done", "and", "s", "!=", "s_seq", "[", "t", "+", "1", "]", ":", "\n", "                ", "raise", "ValueError", "(", "'Environment state {} does not match tracked state {}'", ".", "format", "(", "s", ",", "s_seq", "[", "t", "+", "1", "]", ")", ")", "\n", "\n", "", "if", "name", "==", "'analysis'", "and", "explanation_t", "==", "ReportType", ".", "Heatmaps", ":", "\n", "                ", "helper", ".", "update_stats", "(", "e", ",", "t", ",", "old_obs", ",", "obs", ",", "old_s", ",", "a", ",", "r", ",", "s", ")", "\n", "", "update_func", "(", "t", ",", "old_obs", ",", "old_s", ",", "a", ",", "r", ",", "s", ")", "\n", "\n", "old_obs", "=", "obs", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.bin.agent_runner.video_schedule": [[23, 27], ["int"], "function", ["None"], ["def", "video_schedule", "(", "config", ",", "videos", ")", ":", "\n", "# linear capture schedule", "\n", "    ", "return", "lambda", "e", ":", "videos", "and", "(", "e", "==", "config", ".", "num_episodes", "-", "1", "or", "e", "%", "int", "(", "config", ".", "num_episodes", "/", "config", ".", "num_recorded_videos", ")", "==", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.bin.agent_runner.run_trial": [[29, 141], ["interestingness_xrl.scenarios.create_helper", "EnvironmentConfiguration.load_json.save_json", "interestingness_xrl.scenarios.create_helper.save_state_features", "interestingness_xrl.scenarios.create_helper.register_gym_environment", "gym.make", "agent_runner.video_schedule", "gym.wrappers.Monitor", "video_schedule.", "gym.wrappers.Monitor.seed", "numpy.random.RandomState", "interestingness_xrl.scenarios.create_agent", "interestingness_xrl.learning.behavior_tracker.BehaviorTracker", "range", "agent.save", "interestingness_xrl.learning.behavior_tracker.BehaviorTracker.save", "interestingness_xrl.learning.write_table_csv", "interestingness_xrl.scenarios.create_helper.save_stats", "print", "gym.wrappers.Monitor.close", "os.path.join", "interestingness_xrl.scenarios.configurations.EnvironmentConfiguration.load_json", "interestingness_xrl.scenarios.get_agent_output_dir", "os.path.exists", "os.makedirs", "os.path.join", "os.path.join", "agent.load", "gym.wrappers.Monitor.reset", "interestingness_xrl.scenarios.create_helper.get_state_from_observation", "exploration_strategy.update", "video_schedule.", "interestingness_xrl.learning.behavior_tracker.BehaviorTracker.new_episode", "os.path.join", "os.path.join", "interestingness_xrl.scenarios.get_agent_output_dir", "ValueError", "interestingness_xrl.scenarios.configurations.EnvironmentConfiguration.load_json", "video_schedule.", "interestingness_xrl.scenarios.create_helper.update_stats_episode", "agent.act", "gym.wrappers.Monitor.step", "interestingness_xrl.scenarios.create_helper.get_state_from_observation", "interestingness_xrl.scenarios.create_helper.get_reward", "agent.update", "interestingness_xrl.learning.behavior_tracker.BehaviorTracker.add_sample", "interestingness_xrl.scenarios.create_helper.update_stats", "recorded_episodes.append", "os.path.exists", "os.path.exists", "os.path.exists"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.create_helper", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis.save_json", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.save_state_features", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.register_gym_environment", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.bin.agent_runner.video_schedule", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.create_agent", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.save", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.save", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.write_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.save_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.close", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.load_json", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.get_agent_output_dir", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.reset", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_state_from_observation", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QLearningAgent.update", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.behavior_tracker.BehaviorTracker.new_episode", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.get_agent_output_dir", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.load_json", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.update_stats_episode", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QValueBasedAgent.act", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_state_from_observation", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_reward", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QLearningAgent.update", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.update_stats"], ["", "def", "run_trial", "(", "args", ")", ":", "\n", "# tries to get agent type", "\n", "    ", "agent_t", "=", "args", ".", "agent", "\n", "results_dir", "=", "''", "\n", "if", "agent_t", "==", "AgentType", ".", "Testing", ":", "\n", "\n", "# tries to load config from provided results dir path", "\n", "        ", "results_dir", "=", "args", ".", "results", "if", "args", ".", "results", "is", "not", "None", "else", "get_agent_output_dir", "(", "DEFAULT_CONFIG", ",", "AgentType", ".", "Learning", ")", "\n", "config_file", "=", "join", "(", "results_dir", ",", "'config.json'", ")", "\n", "if", "not", "exists", "(", "results_dir", ")", "or", "not", "exists", "(", "config_file", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'Could not load configuration from: {}.'", ".", "format", "(", "config_file", ")", ")", "\n", "", "config", "=", "EnvironmentConfiguration", ".", "load_json", "(", "config_file", ")", "\n", "\n", "# if testing, we want to force a seed different than training (diff. test environments)", "\n", "config", ".", "seed", "+=", "1", "\n", "\n", "", "else", ":", "\n", "# tries to load env config from provided file path", "\n", "        ", "config_file", "=", "args", ".", "config", "\n", "config", "=", "DEFAULT_CONFIG", "if", "config_file", "is", "None", "or", "not", "exists", "(", "config_file", ")", "else", "EnvironmentConfiguration", ".", "load_json", "(", "config_file", ")", "\n", "\n", "# creates env helper", "\n", "", "helper", "=", "create_helper", "(", "config", ")", "\n", "\n", "# checks for provided output dir", "\n", "output_dir", "=", "args", ".", "output", "if", "args", ".", "output", "is", "not", "None", "else", "get_agent_output_dir", "(", "config", ",", "agent_t", ",", "args", ".", "trial", ")", "\n", "if", "not", "exists", "(", "output_dir", ")", ":", "\n", "        ", "makedirs", "(", "output_dir", ")", "\n", "\n", "# saves / copies configs to file", "\n", "", "config", ".", "save_json", "(", "join", "(", "output_dir", ",", "'config.json'", ")", ")", "\n", "helper", ".", "save_state_features", "(", "join", "(", "output_dir", ",", "'state_features.csv'", ")", ")", "\n", "\n", "# register environment in Gym according to env config", "\n", "env_id", "=", "'{}-{}-v0'", ".", "format", "(", "config", ".", "gym_env_id", ",", "args", ".", "trial", ")", "\n", "helper", ".", "register_gym_environment", "(", "env_id", ",", "False", ",", "FPS", ",", "SHOW_SCORE_BAR", ")", "\n", "\n", "# create environment and monitor", "\n", "env", "=", "gym", ".", "make", "(", "env_id", ")", "\n", "# todo", "\n", "config", ".", "num_episodes", "=", "100", "\n", "video_callable", "=", "video_schedule", "(", "config", ",", "args", ".", "record", ")", "\n", "env", "=", "Monitor", "(", "env", ",", "directory", "=", "output_dir", ",", "force", "=", "True", ",", "video_callable", "=", "video_callable", ")", "\n", "\n", "# adds reference to monitor to allow for gym environments to update video frames", "\n", "if", "video_callable", "(", "0", ")", ":", "\n", "        ", "env", ".", "env", ".", "monitor", "=", "env", "\n", "\n", "# initialize seeds (one for the environment, another for the agent)", "\n", "", "env", ".", "seed", "(", "config", ".", "seed", "+", "args", ".", "trial", ")", "\n", "agent_rng", "=", "np", ".", "random", ".", "RandomState", "(", "config", ".", "seed", "+", "args", ".", "trial", ")", "\n", "\n", "# creates the agent", "\n", "agent", ",", "exploration_strategy", "=", "create_agent", "(", "helper", ",", "agent_t", ",", "agent_rng", ")", "\n", "\n", "# if testing, loads tables from file (some will be filled by the agent during the interaction)", "\n", "if", "agent_t", "==", "AgentType", ".", "Testing", ":", "\n", "        ", "agent", ".", "load", "(", "results_dir", ",", ")", "\n", "\n", "# runs episodes", "\n", "", "behavior_tracker", "=", "BehaviorTracker", "(", "config", ".", "num_episodes", ")", "\n", "recorded_episodes", "=", "[", "]", "\n", "for", "e", "in", "range", "(", "config", ".", "num_episodes", ")", ":", "\n", "\n", "# checks whether to activate video monitoring", "\n", "        ", "env", ".", "env", ".", "monitor", "=", "env", "if", "video_callable", "(", "e", ")", "else", "None", "\n", "\n", "# reset environment", "\n", "old_obs", "=", "env", ".", "reset", "(", ")", "\n", "old_s", "=", "helper", ".", "get_state_from_observation", "(", "old_obs", ",", "0", ",", "False", ")", "\n", "\n", "if", "args", ".", "verbose", ":", "\n", "            ", "helper", ".", "update_stats_episode", "(", "e", ")", "\n", "", "exploration_strategy", ".", "update", "(", "e", ")", "\n", "\n", "t", "=", "0", "\n", "done", "=", "False", "\n", "while", "not", "done", ":", "\n", "# select action", "\n", "            ", "a", "=", "agent", ".", "act", "(", "old_s", ")", "\n", "\n", "# observe transition", "\n", "obs", ",", "r", ",", "done", ",", "_", "=", "env", ".", "step", "(", "a", ")", "\n", "s", "=", "helper", ".", "get_state_from_observation", "(", "obs", ",", "r", ",", "done", ")", "\n", "r", "=", "helper", ".", "get_reward", "(", "old_s", ",", "a", ",", "r", ",", "s", ",", "done", ")", "\n", "\n", "# update agent and stats", "\n", "agent", ".", "update", "(", "old_s", ",", "a", ",", "r", ",", "s", ")", "\n", "behavior_tracker", ".", "add_sample", "(", "old_s", ",", "a", ")", "\n", "helper", ".", "update_stats", "(", "e", ",", "t", ",", "old_obs", ",", "obs", ",", "old_s", ",", "a", ",", "r", ",", "s", ")", "\n", "\n", "old_s", "=", "s", "\n", "old_obs", "=", "obs", "\n", "t", "+=", "1", "\n", "\n", "# adds to recorded episodes list", "\n", "", "if", "video_callable", "(", "e", ")", ":", "\n", "            ", "recorded_episodes", ".", "append", "(", "e", ")", "\n", "\n", "# signals new episode to tracker", "\n", "", "behavior_tracker", ".", "new_episode", "(", ")", "\n", "\n", "# writes results to files", "\n", "", "agent", ".", "save", "(", "output_dir", ")", "\n", "behavior_tracker", ".", "save", "(", "output_dir", ")", "\n", "write_table_csv", "(", "recorded_episodes", ",", "join", "(", "output_dir", ",", "'rec_episodes.csv'", ")", ")", "\n", "helper", ".", "save_stats", "(", "join", "(", "output_dir", ",", "'results'", ")", ",", "CLEAR_RESULTS", ")", "\n", "print", "(", "'\\nResults of trial {} written to:\\n\\t\\'{}\\''", ".", "format", "(", "args", ".", "trial", ",", "output_dir", ")", ")", "\n", "\n", "env", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.bin.manual_player.process_keys": [[23, 39], ["pygame.event.get", "exit", "pressed.append", "frogger.ACTION_NO_MOVE_KEY"], "function", ["None"], ["def", "process_keys", "(", ")", ":", "\n", "    ", "global", "save_features", ",", "save_environment", "\n", "\n", "# prevent events from going to the game", "\n", "pressed", "=", "[", "]", "\n", "for", "event", "in", "pygame", ".", "event", ".", "get", "(", ")", ":", "\n", "        ", "if", "event", ".", "type", "==", "pygame", ".", "QUIT", ":", "\n", "            ", "exit", "(", ")", "\n", "", "if", "event", ".", "type", "==", "pygame", ".", "KEYDOWN", ":", "\n", "            ", "if", "event", ".", "key", "==", "pygame", ".", "K_f", ":", "\n", "                ", "save_features", "=", "True", "\n", "", "elif", "event", ".", "key", "==", "pygame", ".", "K_e", ":", "\n", "                ", "save_environment", "=", "True", "\n", "", "else", ":", "\n", "                ", "pressed", ".", "append", "(", "event", ".", "key", ")", "\n", "", "", "", "return", "pressed", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.bin.manual_player.select_action": [[41, 50], ["manual_player.process_keys", "enumerate", "process_keys.append"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.bin.manual_player.process_keys"], ["", "def", "select_action", "(", "actions_keys", ")", ":", "\n", "# checks if pressed key corresponds to any action", "\n", "    ", "pressed", "=", "process_keys", "(", ")", "\n", "if", "REAL_TIME", ":", "\n", "        ", "pressed", ".", "append", "(", "ACTION_NO_MOVE_KEY", ")", "\n", "", "for", "_a", ",", "action", "in", "enumerate", "(", "actions_keys", ")", ":", "\n", "        ", "if", "action", "in", "pressed", ":", "\n", "            ", "return", "_a", "\n", "", "", "return", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.bin.analyzer.analyze": [[28, 46], ["analysis.analyze", "os.path.join", "analysis.save_visual_report", "analysis.save_json", "analysis.save_report", "print", "os.path.exists", "os.makedirs", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.analyze", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.save_visual_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis.save_json", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.save_report"], ["def", "analyze", "(", "analysis", ",", "output_dir", ",", "name", ")", ":", "\n", "    ", "\"\"\"\n    Performs the given analysis, saves results to json, text and visual reports.\n    :param AnalysisBase analysis: the analysis to be performed.\n    :param str output_dir: the output directory in which to save results.\n    :param str name: the name of the analysis used for file and directory naming.\n    :return:\n    \"\"\"", "\n", "analysis", ".", "analyze", "(", ")", "\n", "results_dir", "=", "join", "(", "output_dir", ",", "name", ")", "\n", "if", "not", "exists", "(", "results_dir", ")", ":", "\n", "        ", "makedirs", "(", "results_dir", ")", "\n", "\n", "", "analysis", ".", "save_visual_report", "(", "results_dir", ",", "False", ")", "\n", "analysis", ".", "save_json", "(", "join", "(", "results_dir", ",", "'{}.json'", ".", "format", "(", "name", ")", ")", ")", "\n", "analysis", ".", "save_report", "(", "join", "(", "results_dir", ",", "'{}.txt'", ".", "format", "(", "name", ")", ")", ",", "True", ")", "\n", "\n", "print", "(", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.__init__": [[13, 54], ["len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "name", ",", "num_states", ",", "actions", ",", "rewards", ",", "gym_env_id", ",", "\n", "max_steps_per_episode", "=", "300", ",", "num_episodes", "=", "1000", ",", "num_recorded_videos", "=", "10", ",", "\n", "seed", "=", "0", ",", "max_temp", "=", "20", ",", "min_temp", "=", "0.05", ",", "discount", "=", ".9", ",", "learn_rate", "=", ".3", ",", "initial_q_value", "=", "0.", ",", "\n", "cell_size", "=", "(", "20", ",", "20", ")", ",", "env_size", "=", "(", "10", ",", "10", ")", ",", "img_tile_size", "=", "(", "20", ",", "20", ")", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new configuration with the given parameters.\n        :param str name: the name of the configuration.\n        :param OrderedDict actions: the actions available for the agent in a 'action_name : [keyboard_codes]' fashion.\n        :param dict rewards: the reward function in an 'element_name : value' fashion.\n        :param str gym_env_id: the name identifier for the gym environment.\n        :param int max_steps_per_episode: the maximum number of steps in one episode.\n        :param int num_episodes: the number of episodes used to train/test the agent.\n        :param int num_recorded_videos: the number of videos to record during the agent run.\n        :param int seed: the seed used for the random number generator used by the agent.\n        :param float max_temp: the maximum temperature of the Soft-max action-selection strategy (start of training).\n        :param float min_temp: the minimum temperature of the Soft-max action-selection strategy (end of training).\n        :param float discount: the discount factor in [0, 1] (how important are the future rewards?).\n        :param float learn_rate: the agent's learning rate (the weight associated to a new sample during learning).\n        :param float initial_q_value: the value used to initialize the q-function (e.g., for optimistic initialization).\n        :param tuple cell_size: the (width, height) of an agent cell in this environment.\n        :param tuple env_size: the (num_cols, num_rows) in the environment.\n        :param tuple img_tile_size: the (width, height) size for observation tiles.\n        \"\"\"", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "num_states", "=", "num_states", "\n", "self", ".", "num_actions", "=", "len", "(", "actions", ")", "\n", "self", ".", "actions", "=", "actions", "\n", "self", ".", "rewards", "=", "rewards", "\n", "self", ".", "gym_env_id", "=", "gym_env_id", "\n", "self", ".", "num_episodes", "=", "num_episodes", "\n", "self", ".", "num_recorded_videos", "=", "num_recorded_videos", "\n", "self", ".", "seed", "=", "seed", "\n", "self", ".", "max_temp", "=", "max_temp", "\n", "self", ".", "min_temp", "=", "min_temp", "\n", "self", ".", "discount", "=", "discount", "\n", "self", ".", "learn_rate", "=", "learn_rate", "\n", "self", ".", "initial_q_value", "=", "initial_q_value", "\n", "self", ".", "max_steps_per_episode", "=", "max_steps_per_episode", "\n", "self", ".", "cell_size", "=", "cell_size", "\n", "self", ".", "env_size", "=", "env_size", "\n", "self", ".", "obs_tile_size", "=", "img_tile_size", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names": [[55, 62], ["list", "configurations.EnvironmentConfiguration.actions.keys"], "methods", ["None"], ["", "def", "get_action_names", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Gets a list with the names of the actions available to the agent.\n        :return list: a list with the names of the actions available to the agent, in the order they were added to the\n        actions dictionary.\n        \"\"\"", "\n", "return", "list", "(", "self", ".", "actions", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.save_json": [[63, 80], ["interestingness_xrl.util.dict_to_list", "jsonpickle.set_preferred_backend", "jsonpickle.set_encoder_options", "open", "jsonpickle.encode", "json_file.write"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.dict_to_list"], ["", "def", "save_json", "(", "self", ",", "json_file_path", ")", ":", "\n", "        ", "\"\"\"\n        Saves a text file representing this configuration in a JSON format.\n        :param str json_file_path: the path to the JSON file in which to save this configuration.\n        :return:\n        \"\"\"", "\n", "# transform ordered dicts to list for a more clear json", "\n", "actions", "=", "self", ".", "actions", "\n", "self", ".", "actions", "=", "dict_to_list", "(", "actions", ")", "\n", "\n", "jsonpickle", ".", "set_preferred_backend", "(", "'json'", ")", "\n", "jsonpickle", ".", "set_encoder_options", "(", "'json'", ",", "sort_keys", "=", "True", ",", "indent", "=", "4", ")", "\n", "with", "open", "(", "json_file_path", ",", "'w'", ")", "as", "json_file", ":", "\n", "            ", "json_str", "=", "jsonpickle", ".", "encode", "(", "self", ")", "\n", "json_file", ".", "write", "(", "json_str", ")", "\n", "\n", "", "self", ".", "actions", "=", "actions", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.load_json": [[81, 94], ["open", "jsonpickle.decode", "jsonpickle.decode._after_loaded_json", "json_file.read"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase._after_loaded_json"], ["", "@", "staticmethod", "\n", "def", "load_json", "(", "json_file_path", ")", ":", "\n", "        ", "\"\"\"\n        Loads a configuration object from the given JSON formatted file.\n        :param str json_file_path: the path to the JSON file from which to load a configuration.\n        :rtype: EnvironmentConfiguration\n        :return: the configuration object stored in the given JSON file.\n        \"\"\"", "\n", "with", "open", "(", "json_file_path", ")", "as", "json_file", ":", "\n", "            ", "config", "=", "jsonpickle", ".", "decode", "(", "json_file", ".", "read", "(", ")", ")", "\n", "config", ".", "_after_loaded_json", "(", ")", "\n", "\n", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration._after_loaded_json": [[95, 98], ["interestingness_xrl.util.list_to_dict"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.list_to_dict"], ["", "def", "_after_loaded_json", "(", "self", ")", ":", "\n", "# convert lists to ordered dictionaries", "\n", "        ", "self", ".", "actions", "=", "list_to_dict", "(", "self", ".", "actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.AnalysisConfiguration.__init__": [[105, 146], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "min_count", "=", "10", ",", "certain_trans_max_disp", "=", "0.001", ",", "trans_min_states", "=", "5", ",", "\n", "uncertain_trans_min_disp", "=", "0.2", ",", "rwd_outlier_stds", "=", "2", ",", "freq_min_state_count", "=", "3000", ",", "infreq_max_state_count", "=", "3", ",", "\n", "min_feat_set_count", "=", "3000", ",", "assoc_min_feat_set_jacc", "=", "0.75", ",", "assoc_min_feat_rule_conf", "=", "0.9", ",", "\n", "no_assoc_max_feat_set_jacc", "=", "0.04", ",", "certain_exec_max_disp", "=", "0.3", ",", "uncertain_exec_min_disp", "=", "0.9", ",", "\n", "value_outlier_stds", "=", "1.6", ",", "pred_error_outlier_stds", "=", "2", ",", "max_time_step", "=", "0.5", ",", "val_diff_var_outlier_stds", "=", "2", ",", "\n", "action_jsd_threshold", "=", "0.05", ")", ":", "\n", "# general", "\n", "        ", "self", ".", "min_count", "=", "min_count", "\n", "\n", "# transition", "\n", "self", ".", "trans_min_states", "=", "trans_min_states", "\n", "self", ".", "certain_trans_max_disp", "=", "certain_trans_max_disp", "\n", "self", ".", "uncertain_trans_min_disp", "=", "uncertain_trans_min_disp", "\n", "\n", "# reward", "\n", "self", ".", "rwd_outlier_stds", "=", "rwd_outlier_stds", "\n", "\n", "# state frequency", "\n", "self", ".", "freq_min_state_count", "=", "freq_min_state_count", "\n", "self", ".", "infreq_max_state_count", "=", "infreq_max_state_count", "\n", "self", ".", "min_feat_set_count", "=", "min_feat_set_count", "\n", "self", ".", "assoc_min_feat_set_jacc", "=", "assoc_min_feat_set_jacc", "\n", "self", ".", "assoc_min_feat_rule_conf", "=", "assoc_min_feat_rule_conf", "\n", "self", ".", "no_assoc_max_feat_set_jacc", "=", "no_assoc_max_feat_set_jacc", "\n", "\n", "# state-action frequency", "\n", "self", ".", "certain_exec_max_disp", "=", "certain_exec_max_disp", "\n", "self", ".", "uncertain_exec_min_disp", "=", "uncertain_exec_min_disp", "\n", "\n", "# value", "\n", "self", ".", "value_outlier_stds", "=", "value_outlier_stds", "\n", "self", ".", "pred_error_outlier_stds", "=", "pred_error_outlier_stds", "\n", "\n", "# recency", "\n", "self", ".", "max_time_step", "=", "max_time_step", "\n", "\n", "# transition value", "\n", "self", ".", "val_diff_var_outlier_stds", "=", "val_diff_var_outlier_stds", "\n", "\n", "# contradictions", "\n", "self", ".", "action_jsd_threshold", "=", "action_jsd_threshold", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.AnalysisConfiguration.save_json": [[147, 158], ["jsonpickle.set_preferred_backend", "jsonpickle.set_encoder_options", "open", "jsonpickle.encode", "json_file.write"], "methods", ["None"], ["", "def", "save_json", "(", "self", ",", "json_file_path", ")", ":", "\n", "        ", "\"\"\"\n        Saves a text file representing this configuration in a JSON format.\n        :param str json_file_path: the path to the JSON file in which to save this configuration.\n        :return:\n        \"\"\"", "\n", "jsonpickle", ".", "set_preferred_backend", "(", "'json'", ")", "\n", "jsonpickle", ".", "set_encoder_options", "(", "'json'", ",", "sort_keys", "=", "True", ",", "indent", "=", "4", ")", "\n", "with", "open", "(", "json_file_path", ",", "'w'", ")", "as", "json_file", ":", "\n", "            ", "json_str", "=", "jsonpickle", ".", "encode", "(", "self", ")", "\n", "json_file", ".", "write", "(", "json_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.AnalysisConfiguration.load_json": [[159, 168], ["open", "jsonpickle.decode", "json_file.read"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "load_json", "(", "json_file_path", ")", ":", "\n", "        ", "\"\"\"\n        Loads an analysis object from the given JSON formatted file.\n        :param str json_file_path: the path to the JSON file from which to load a configuration.\n        :return AnalysisConfig: the configuration object stored in the given JSON file.\n        \"\"\"", "\n", "with", "open", "(", "json_file_path", ")", "as", "json_file", ":", "\n", "            ", "return", "jsonpickle", ".", "decode", "(", "json_file", ".", "read", "(", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.__init__": [[33, 50], ["interestingness_xrl.learning.stats_collector.StatsCollector", "scenario_helper.ScenarioHelper._add_variable", "scenario_helper.ScenarioHelper._add_variable", "scenario_helper.ScenarioHelper._add_variable", "scenario_helper.ScenarioHelper._add_variable", "scenario_helper.ScenarioHelper._add_variable"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new environment helper according to the given configuration.\n        :param EnvironmentConfiguration config: the configuration with all necessary parametrization.\n        \"\"\"", "\n", "self", ".", "config", "=", "config", "\n", "\n", "# to be set if we want to collect agent stats", "\n", "self", ".", "agent", "=", "None", "\n", "\n", "# default stats to be collected from the agent", "\n", "self", ".", "stats_collector", "=", "StatsCollector", "(", ")", "\n", "self", ".", "_add_variable", "(", "TIME_STEPS_VAR", ",", "StatType", ".", "last", ")", "\n", "self", ".", "_add_variable", "(", "REWARD_VAR", ",", "StatType", ".", "sum", ")", "\n", "self", ".", "_add_variable", "(", "EXPLORATION_VAR", ",", "StatType", ".", "last", ")", "\n", "self", ".", "_add_variable", "(", "STATE_VALUE_VAR", ",", "StatType", ".", "mean", ")", "\n", "self", ".", "_add_variable", "(", "STATE_COUNT_VAR", ",", "StatType", ".", "mean", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.register_gym_environment": [[51, 62], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "register_gym_environment", "(", "self", ",", "env_id", "=", "'my-env-v0'", ",", "display_screen", "=", "False", ",", "fps", "=", "30", ",", "show_score_bar", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Registers an OpenAI gym environment in the system (if needed).\n        :param str env_id: the environment id to be registered.\n        :param bool display_screen: whether to display the environment screen.\n        :param int fps: the number of frames-per-second that the environment should be recorded.\n        :param bool show_score_bar: whether to show the score bar at the top of the screen.\n        :return:\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_agent_cell_location": [[63, 71], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_agent_cell_location", "(", "self", ",", "obs", ")", ":", "\n", "        ", "\"\"\"\n        Gets the (col, row) coordinates of the agent's cell in the environment, according to the given observation.\n        :param np.ndarray obs: the observation matrix / game state provided to the agent.\n        :return int, int: the (column, row) coordinates of the cell where the agent is located.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_cell_coordinates": [[72, 80], ["None"], "methods", ["None"], ["", "def", "get_cell_coordinates", "(", "self", ",", "col", ",", "row", ")", ":", "\n", "        ", "\"\"\"\n        Gets the game (x, y) coordinates of the given cell.\n        :param int col: the column coordinate of the cell.\n        :param int row: the row coordinate of the cell.\n        :return int, int: the (x, y) game coordinates of the required cell.\n        \"\"\"", "\n", "return", "col", "*", "self", ".", "config", ".", "cell_size", "[", "0", "]", ",", "row", "*", "self", ".", "config", ".", "cell_size", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_state_from_observation": [[81, 99], ["scenario_helper.ScenarioHelper.is_terminal_state", "scenario_helper.ScenarioHelper.get_features_from_observation", "scenario_helper.ScenarioHelper.get_features_bins", "interestingness_xrl.learning.get_discretized_index", "scenario_helper.ScenarioHelper.get_terminal_state"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.is_terminal_state", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_from_observation", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_discretized_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_terminal_state"], ["", "def", "get_state_from_observation", "(", "self", ",", "obs", ",", "rwd", ",", "done", ")", ":", "\n", "        ", "\"\"\"\n        Discretizes the given observation by calculating the state index.\n        :param np.ndarray obs: the observation matrix / game state provided to the agent.\n        :param float rwd: the reward resulting from the update.\n        :param bool done: whether the underlying world engine reported that the gym environment has ended.\n        :return int: the index of the discretized state corresponding to the given observation.\n        \"\"\"", "\n", "\n", "# tests for terminal / absorbing state", "\n", "if", "self", ".", "is_terminal_state", "(", "obs", ",", "rwd", ",", "done", ")", ":", "\n", "            ", "return", "self", ".", "get_terminal_state", "(", ")", "\n", "\n", "", "obs_vec", "=", "self", ".", "get_features_from_observation", "(", "obs", ")", "\n", "feats_nbins", "=", "self", ".", "get_features_bins", "(", ")", "\n", "\n", "# gets discretized index", "\n", "return", "get_discretized_index", "(", "obs_vec", ",", "feats_nbins", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_state_from_features": [[100, 107], ["interestingness_xrl.learning.get_discretized_index", "scenario_helper.ScenarioHelper.get_features_bins"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_discretized_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins"], ["", "def", "get_state_from_features", "(", "self", ",", "obs_vec", ")", ":", "\n", "        ", "\"\"\"\n        Gets the state index corresponding to the given set of discretized features.\n        :param array_like obs_vec: the discretized features for which to calculate the state index.\n        :return int: the state index corresponding to the discretized features.\n        \"\"\"", "\n", "return", "get_discretized_index", "(", "obs_vec", ",", "self", ".", "get_features_bins", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_features_from_observation": [[108, 118], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_features_from_observation", "(", "self", ",", "obs", ",", "agent_x", "=", "-", "1", ",", "agent_y", "=", "-", "1", ")", ":", "\n", "        ", "\"\"\"\n        Transforms the given observation of the environment into a set of discretized state features.\n        :param np.ndarray obs: the observation matrix / game state provided to the agent.\n        :param int agent_x: the X location of the agent in the environment. If -1, it has to be collected from the observation.\n        :param int agent_y: the Y location of the agent in the environment. If -1, it has to be collected from the observation.\n        :return array: an array containing the discretized state features.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_features_bins": [[119, 126], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_features_bins", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Gets an array containing the number of bins (elements) for each state feature.\n        :return array: an array containing the number of bins (elements) for each state feature.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_terminal_state": [[127, 134], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_terminal_state", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Gets a generic terminal state used for this environment.\n        :return int: the state index corresponding to the terminal state.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.is_terminal_state": [[135, 145], ["None"], "methods", ["None"], ["", "def", "is_terminal_state", "(", "self", ",", "obs", ",", "rwd", ",", "done", ")", ":", "\n", "        ", "\"\"\"\n        Determines whether the given gym update corresponds to a terminal state in this environment.\n        :param ndarray obs: the observation provided to the agent.\n        :param float rwd: the reward resulting from the update.\n        :param bool done: whether the underlying world engine reported that the gym environment has ended.\n        :return bool: whether the given gym update corresponds to a terminal state.\n        \"\"\"", "\n", "# default is just to return according to done", "\n", "return", "done", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_reward": [[146, 158], ["None"], "methods", ["None"], ["", "def", "get_reward", "(", "self", ",", "s", ",", "a", ",", "rwd", ",", "ns", ",", "done", ")", ":", "\n", "        ", "\"\"\"\n        Computes the 'learning' reward given all transition information, including the original game's reward.\n        :param int s: the previous state, from which the action was executed.\n        :param int a: the action executed by the agent.\n        :param int ns: the next state, resulting from the update.\n        :param float rwd: the reward resulting from the update.\n        :param bool done: whether the underlying world engine reported that the gym environment has ended.\n        :return:\n        \"\"\"", "\n", "# default is to simply return the game's original reward", "\n", "return", "rwd", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_feature_label": [[159, 168], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_feature_label", "(", "self", ",", "obs_feat_idx", ",", "obs_feat_val", ")", ":", "\n", "        ", "\"\"\"\n        Gets the label corresponding to the given feature.\n        :param int obs_feat_idx: the discretized feature index.\n        :param int obs_feat_val: the discretized feature value.\n        :return str the label corresponding to the given feature:\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_features_labels": [[169, 178], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_features_labels", "(", "self", ",", "obs_vec", ",", "short", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Gets a description for each of the given state features to the standard output.\n        :param np.ndarray obs_vec: an array of discretized features, i.e., containing the indexes to the features' elements.\n        :param bool short: whether to return a shortened version of the labels.\n        :return list: a list containing a textual description for each of the given state features.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.print_features": [[179, 188], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "print_features", "(", "self", ",", "obs_vec", ",", "columns", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Prints a description of the given state features to the standard output.\n        :param np.ndarray obs_vec: an array of discretized features, i.e., containing the indexes to the features' elements.\n        :param bool columns: whether to print features organized in columns.\n        :return:\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_transaction": [[189, 198], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_transaction", "(", "self", ",", "obs_vec", ",", "short", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Converts the given set of discretized features into an item-set-like transaction to be used in pattern mining.\n        :param np.ndarray obs_vec: an array of discretized features, i.e., containing the indexes to the features' elements.\n        :param bool short: whether to return a shortened version of the labels.\n        :return:\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_feature_dissimilarity": [[199, 213], ["set", "set", "len", "len", "enumerate", "enumerate"], "methods", ["None"], ["", "def", "get_feature_dissimilarity", "(", "self", ",", "obs_vec1", ",", "obs_vec2", ")", ":", "\n", "        ", "\"\"\"\n        Gets the dissimilarity (distance) between the two given observation-feature vectors.\n        :param np.ndarray obs_vec1: an array of discretized features, i.e., containing the indexes to the features' elements.\n        :param np.ndarray obs_vec2: an array of discretized features, i.e., containing the indexes to the features' elements.\n        :rtype: float\n        :return: a number in [0,1], indicating how different the two observation-features are.\n        \"\"\"", "\n", "# default returns division of intersection and union of features", "\n", "obs_vec1_feats", "=", "set", "(", "[", "'{}:{}'", ".", "format", "(", "i", ",", "feat", ")", "for", "i", ",", "feat", "in", "enumerate", "(", "obs_vec1", ")", "]", ")", "\n", "obs_vec2_feats", "=", "set", "(", "[", "'{}:{}'", ".", "format", "(", "i", ",", "feat", ")", "for", "i", ",", "feat", "in", "enumerate", "(", "obs_vec2", ")", "]", ")", "\n", "union", "=", "obs_vec1_feats", "|", "obs_vec2_feats", "\n", "inter", "=", "obs_vec1_feats", "&", "obs_vec2_feats", "\n", "return", "1.", "-", "len", "(", "inter", ")", "/", "len", "(", "union", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_observation_dissimilarity": [[214, 224], ["numpy.linalg.norm"], "methods", ["None"], ["", "def", "get_observation_dissimilarity", "(", "self", ",", "obs1", ",", "obs2", ")", ":", "\n", "        ", "\"\"\"\n        Gets the dissimilarity (distance) between the two given observations.\n        :param np.ndarray obs1: the first observation as provided to the agent.\n        :param np.ndarray obs2: the second observation as provided to the agent.\n        :rtype: float\n        :return: a number in [0,1], indicating how different the two observations are.\n        \"\"\"", "\n", "# default is the norm/Euclidean distance between the arrays", "\n", "return", "np", ".", "linalg", ".", "norm", "(", "obs1", "-", "obs2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.act_reactive": [[225, 236], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "act_reactive", "(", "self", ",", "s", ",", "rng", ")", ":", "\n", "        ", "\"\"\"\n        Chooses an action to be executed by the agent. It corresponds to a known (not learned) strategy for this\n        environment.\n        :param int s: the state that the agent is going to react to.\n        :param np.random.RandomState rng: the random number generator to be used to select actions stochastically.\n        :rtype: int\n        :return: the index of the action to be executed by the agent.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_known_goal_states": [[237, 244], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_known_goal_states", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Gets the expected / known goal states associated with this environment.\n        :return array: an int array containing the known goal states' indexes.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_known_feature_action_assocs": [[245, 253], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_known_feature_action_assocs", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Gets the known associations between action execution and feature states in this environment, i.e., the actions\n        that are expected to be executed if some feature is present in the agent's state.\n        :return array: an array containing the known feature-action associations in the format (feature, value, action).\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable": [[254, 262], ["scenario_helper.ScenarioHelper.stats_collector.add_variable"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_variable"], ["", "def", "_add_variable", "(", "self", ",", "name", ",", "stat_t", ")", ":", "\n", "        ", "\"\"\"\n        Adds a new variable to be tracked.\n        :param str name: the name of the variable\n        :param int stat_t: the type of statistic we are interested in gathering from this variable at the end of episodes.\n        :return:\n        \"\"\"", "\n", "self", ".", "stats_collector", ".", "add_variable", "(", "name", ",", "self", ".", "config", ".", "num_episodes", ",", "self", ".", "config", ".", "max_steps_per_episode", ",", "stat_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.update_stats": [[263, 295], ["scenario_helper.ScenarioHelper.stats_collector.add_sample", "scenario_helper.ScenarioHelper.stats_collector.add_sample", "scenario_helper.ScenarioHelper.stats_collector.add_sample", "scenario_helper.ScenarioHelper.stats_collector.add_sample", "scenario_helper.ScenarioHelper.stats_collector.add_sample", "isinstance", "isinstance", "numpy.max", "isinstance"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample"], ["", "def", "update_stats", "(", "self", ",", "e", ",", "t", ",", "obs", ",", "n_obs", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "        ", "\"\"\"\n        Updates statistics collected for this environment based on the given agent update information.\n        :param int e: the episode number in which the transition was observed.\n        :param int t: the time-step in which the transition was observed.\n        :param ndarray obs: the previous observation provided to the agent.\n        :param ndarray n_obs: the current observation provided to the agent.\n        :param int s: the state at time-step t (from which the agent departed).\n        :param int a: the action executed by the agent at time-step t.\n        :param float r: the reward that the agent has received.\n        :param int ns: the state that resulted from the action execution.\n        :return:\n        \"\"\"", "\n", "# gets info from the agent if available", "\n", "self", ".", "stats_collector", ".", "add_sample", "(", "REWARD_VAR", ",", "e", ",", "r", ")", "\n", "if", "self", ".", "agent", "is", "None", ":", "\n", "            ", "return", "\n", "\n", "# gets exploration variable if available", "\n", "", "explore_var", "=", "self", ".", "agent", ".", "exploration_strategy", ".", "temp", "if", "isinstance", "(", "self", ".", "agent", ".", "exploration_strategy", ",", "SoftMaxExploration", ")", "else", "self", ".", "agent", ".", "exploration_strategy", ".", "eps", "if", "isinstance", "(", "self", ".", "agent", ".", "exploration_strategy", ",", "EpsilonGreedyExploration", ")", "else", "0", "\n", "\n", "# gets state value variable if available", "\n", "value_var", "=", "np", ".", "max", "(", "self", ".", "agent", ".", "q", "[", "s", "]", ")", "if", "isinstance", "(", "self", ".", "agent", ",", "QValueBasedAgent", ")", "else", "0", "\n", "\n", "# collects agent-related stats", "\n", "self", ".", "stats_collector", ".", "add_sample", "(", "TIME_STEPS_VAR", ",", "e", ",", "t", ")", "\n", "self", ".", "stats_collector", ".", "add_sample", "(", "EXPLORATION_VAR", ",", "e", ",", "explore_var", ")", "\n", "self", ".", "stats_collector", ".", "add_sample", "(", "STATE_VALUE_VAR", ",", "e", ",", "value_var", ")", "\n", "self", ".", "stats_collector", ".", "add_sample", "(", "STATE_COUNT_VAR", ",", "e", ",", "self", ".", "agent", ".", "c_s", "[", "s", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.update_stats_episode": [[296, 305], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "update_stats_episode", "(", "self", ",", "e", ",", "path", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Updates statistics collected for one episode.\n        :param int e: the number of the episode.\n        :param str path: the path (directory or file) in which to save the statistical information.\n        :return:\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_stats": [[306, 330], ["scenario_helper.ScenarioHelper.stats_collector.all_variables", "os.path.exists", "os.makedirs", "scenario_helper.ScenarioHelper.stats_collector.save_mean_image", "scenario_helper.ScenarioHelper.stats_collector.save_across_trials_image", "scenario_helper.ScenarioHelper.stats_collector.save", "scenario_helper.ScenarioHelper.stats_collector.save", "shutil.rmtree", "os.makedirs", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "var_name.lower", "var_name.lower", "var_name.lower", "var_name.lower"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.all_variables", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.save_mean_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.save_across_trials_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.save", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.save"], ["", "def", "save_stats", "(", "self", ",", "path", ",", "clear", "=", "True", ",", "img_format", "=", "'pdf'", ")", ":", "\n", "        ", "\"\"\"\n        Finalizes all collected statistics for this environment.\n        :param str path: the path (directory or file) in which to save the statistical information.\n        :param bool clear: whether to delete the contents of the results directory.\n        :param str img_format: the image format (extension) for the image files.\n        :return:\n        \"\"\"", "\n", "# checks dir", "\n", "if", "not", "exists", "(", "path", ")", ":", "\n", "            ", "makedirs", "(", "path", ")", "\n", "", "elif", "clear", ":", "\n", "            ", "rmtree", "(", "path", ")", "\n", "makedirs", "(", "path", ")", "\n", "\n", "# prints all stats individually to an image file, CSV and binary files", "\n", "", "t", "=", "self", ".", "config", ".", "num_episodes", "\n", "for", "var_name", "in", "self", ".", "stats_collector", ".", "all_variables", "(", ")", ":", "\n", "            ", "self", ".", "stats_collector", ".", "save_mean_image", "(", "\n", "var_name", ",", "t", ",", "join", "(", "path", ",", "'avg {}.{}'", ".", "format", "(", "var_name", ".", "lower", "(", ")", ",", "img_format", ")", ")", ",", "'Time-step'", ")", "\n", "self", ".", "stats_collector", ".", "save_across_trials_image", "(", "\n", "var_name", ",", "t", ",", "join", "(", "path", ",", "'evo {}.{}'", ".", "format", "(", "var_name", ".", "lower", "(", ")", ",", "img_format", ")", ")", ",", "x_label", "=", "'Episode'", ")", "\n", "self", ".", "stats_collector", ".", "save", "(", "var_name", ",", "t", ",", "join", "(", "path", ",", "var_name", ".", "lower", "(", ")", ")", ",", "False", ")", "\n", "self", ".", "stats_collector", ".", "save", "(", "var_name", ",", "t", ",", "join", "(", "path", ",", "var_name", ".", "lower", "(", ")", ")", ",", "True", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.load_stats": [[331, 343], ["scenario_helper.ScenarioHelper.stats_collector.all_variables", "os.path.join", "var_name.lower", "ValueError", "scenario_helper.ScenarioHelper.stats_collector.load", "scenario_helper.ScenarioHelper.stats_collector.load", "scenario_helper.ScenarioHelper.stats_collector.get_type", "scenario_helper.ScenarioHelper.stats_collector.get_type"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.all_variables", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_type", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_type"], ["", "", "def", "load_stats", "(", "self", ",", "path", ")", ":", "\n", "        ", "\"\"\"\n        Tries to load statistics collected previously for all variables of this environment.\n        :param str path: the path (directory or file) from which to load the statistical information.\n        :return:\n        \"\"\"", "\n", "# tries to load all variables from file (first tries loading binary files over CSV text)", "\n", "for", "var_name", "in", "self", ".", "stats_collector", ".", "all_variables", "(", ")", ":", "\n", "            ", "file_path", "=", "join", "(", "path", ",", "var_name", ".", "lower", "(", ")", ")", "\n", "if", "not", "self", ".", "stats_collector", ".", "load", "(", "var_name", ",", "file_path", ",", "self", ".", "stats_collector", ".", "get_type", "(", "var_name", ")", ",", "True", ")", "and", "not", "self", ".", "stats_collector", ".", "load", "(", "var_name", ",", "file_path", ",", "self", ".", "stats_collector", ".", "get_type", "(", "var_name", ")", ",", "False", ")", ":", "\n", "                ", "raise", "ValueError", "(", "'Could not load variable {} from: {}.'", ".", "format", "(", "var_name", ",", "file_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._print_stats": [[344, 355], ["scenario_helper.ScenarioHelper.stats_collector.get_mean", "interestingness_xrl.util.print_line", "var_name.lower"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_mean", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line"], ["", "", "", "def", "_print_stats", "(", "self", ",", "e", ",", "selected_var_names", ",", "file", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Prints the current stats of a selected number of variables to the screen.\n        :param int e: the number of the episode.\n        :param list selected_var_names: a list of the names of the variables for which to print the statistics.\n        :param stream file: the file on which to save the message line.\n        :return:\n        \"\"\"", "\n", "for", "var_name", "in", "selected_var_names", ":", "\n", "            ", "avg", ",", "std", "=", "self", ".", "stats_collector", ".", "get_mean", "(", "var_name", ",", "e", ")", "\n", "print_line", "(", "'Avg {}: {:.2f} \u00b1 {:.2f}'", ".", "format", "(", "var_name", ".", "lower", "(", ")", ",", "avg", ",", "std", ")", ",", "file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_state_features": [[356, 365], ["None"], "methods", ["None"], ["", "", "@", "abstractmethod", "\n", "def", "save_state_features", "(", "self", ",", "out_file", ",", "delimiter", "=", "CSV_DELIMITER", ")", ":", "\n", "        ", "\"\"\"\n        Saves a description of all states in terms of the elements in each corresponding feature to a CSV file.\n        :param str out_file: the path to the output CSV file in which to save the states' descriptions.\n        :param str delimiter: the CSV field delimiter.\n        :return:\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image": [[366, 376], ["scenario_helper.ScenarioHelper.get_features_image", "pygame.image.save"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.save"], ["", "def", "save_features_image", "(", "self", ",", "obs_vec", ",", "out_file", ")", ":", "\n", "        ", "\"\"\"\n        Saves the given observation features into an image file, i.e., the features are saved in a visual form.\n        :param np.ndarray obs_vec: an array of discretized features, i.e., containing the indexes to the features' elements.\n        :param str out_file: the path to the output file in which to save the features image.\n        :return:\n        \"\"\"", "\n", "# default is to get features image and save to file", "\n", "surf", "=", "self", ".", "get_features_image", "(", "obs_vec", ")", "\n", "pygame", ".", "image", ".", "save", "(", "surf", ",", "out_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_features_image": [[377, 385], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_features_image", "(", "self", ",", "obs_vec", ")", ":", "\n", "        ", "\"\"\"\n        Converts the given observation into an image representation.\n        :param np.ndarray obs_vec: an array of discretized features, i.e., containing the indexes to the features' elements.\n        :return Surface: a surface object containing an image of the observation.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_video": [[386, 404], ["interestingness_xrl.util.record_video", "scenario_helper.ScenarioHelper.get_features_image", "pygame.surfarray.array3d().astype", "numpy.fliplr", "frame_buffer.append", "numpy.rot90", "pygame.surfarray.array3d"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.record_video", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_image"], ["", "def", "save_features_video", "(", "self", ",", "obs_vec_seq", ",", "out_file", ",", "fps", "=", "30", ")", ":", "\n", "        ", "\"\"\"\n        Converts a given sequence of observations into a video file.\n        :param list obs_vec_seq: a sequence of arrays of discretized features, i.e., containing the indexes to the features' elements.\n        :param str out_file: the path to the video file in which to save the observation features sequence.\n        :param int fps: the number of frames-per-second to be recorded in the video.\n        \"\"\"", "\n", "\n", "# converts each observation vector to a feature image", "\n", "frame_buffer", "=", "[", "]", "\n", "for", "obs_vec", "in", "obs_vec_seq", ":", "\n", "            ", "surf", "=", "self", ".", "get_features_image", "(", "obs_vec", ")", "\n", "frame", "=", "pygame", ".", "surfarray", ".", "array3d", "(", "surf", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "frame", "=", "np", ".", "fliplr", "(", "np", ".", "rot90", "(", "frame", ",", "3", ")", ")", "\n", "frame_buffer", ".", "append", "(", "frame", ")", "\n", "\n", "# records frame buffer to video file", "\n", "", "record_video", "(", "frame_buffer", ",", "out_file", ",", "fps", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.ReactiveStrategy.__init__": [[46, 54], ["interestingness_xrl.learning.explorations.ExplorationStrategy.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.ReactiveStrategy.explore": [[55, 57], ["__init__.ReactiveStrategy.helper.act_reactive"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.act_reactive"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.AgentType.get_name": [[69, 82], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.ReportType.get_name": [[93, 104], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.create_helper": [[106, 116], ["isinstance", "interestingness_xrl.scenarios.frogger.scenario_helper.FroggerHelper"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.create_agent": [[118, 164], ["interestingness_xrl.learning.explorations.ExpDecaySoftMax", "interestingness_xrl.learning.agents.QLearningAgent", "interestingness_xrl.learning.explorations.SoftMaxExploration", "interestingness_xrl.learning.agents.QValueBasedAgent", "interestingness_xrl.learning.agents.RandomAgent", "__init__.ReactiveStrategy", "interestingness_xrl.learning.agents.QValueBasedAgent", "interestingness_xrl.learning.explorations.ManualExploration", "interestingness_xrl.learning.agents.QLearningAgent", "config.get_action_names", "config.get_action_names", "config.get_action_names", "config.get_action_names", "config.get_action_names"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__._get_base_dir": [[166, 174], ["os.path.join"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.get_agent_output_dir": [[176, 186], ["os.path.join", "__init__._get_base_dir", "__init__.AgentType.get_name", "str"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__._get_base_dir", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatType.get_name"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.get_observations_output_dir": [[188, 196], ["os.path.join"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.get_analysis_output_dir": [[198, 206], ["os.path.join"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.get_analysis_config": [[208, 219], ["isinstance"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.get_explanation_output_dir": [[221, 230], ["os.path.join", "__init__.ReportType.get_name"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatType.get_name"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.create_explainer": [[232, 258], ["interestingness_xrl.explainability.explanation.heatmaps.HeatmapsExplainer", "interestingness_xrl.explainability.explanation.highlights.HighlightsExplainer", "interestingness_xrl.explainability.explanation.sequences.SequencesExplainer", "interestingness_xrl.explainability.explanation.tracker.AspectsTrackerExplainer"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.configurations.FroggerConfiguration.__init__": [[18, 59], ["interestingness_xrl.scenarios.configurations.EnvironmentConfiguration.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["\n", "self", ".", "name", "=", "name", "\n", "self", ".", "num_states", "=", "num_states", "\n", "self", ".", "num_actions", "=", "len", "(", "actions", ")", "\n", "self", ".", "actions", "=", "actions", "\n", "self", ".", "rewards", "=", "rewards", "\n", "self", ".", "gym_env_id", "=", "gym_env_id", "\n", "self", ".", "num_episodes", "=", "num_episodes", "\n", "self", ".", "num_recorded_videos", "=", "num_recorded_videos", "\n", "self", ".", "seed", "=", "seed", "\n", "self", ".", "max_temp", "=", "max_temp", "\n", "self", ".", "min_temp", "=", "min_temp", "\n", "self", ".", "discount", "=", "discount", "\n", "self", ".", "learn_rate", "=", "learn_rate", "\n", "self", ".", "initial_q_value", "=", "initial_q_value", "\n", "self", ".", "max_steps_per_episode", "=", "max_steps_per_episode", "\n", "self", ".", "cell_size", "=", "cell_size", "\n", "self", ".", "env_size", "=", "env_size", "\n", "self", ".", "obs_tile_size", "=", "img_tile_size", "\n", "\n", "", "def", "get_action_names", "(", "self", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.__init__": [[80, 123], ["interestingness_xrl.scenarios.scenario_helper.ScenarioHelper.__init__", "scenario_helper.FroggerHelper.get_state_from_features", "scenario_helper.FroggerHelper.get_state_from_features", "range", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "scenario_helper.FroggerHelper._add_variable", "len", "scenario_helper.FroggerHelper._add_variable", "str"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_state_from_features", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_state_from_features", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._add_variable"], ["\n", "", "def", "get_state_from_observation", "(", "self", ",", "obs", ",", "rwd", ",", "done", ")", ":", "\n", "        ", "\"\"\"\n        Discretizes the given observation by calculating the state index.\n        :param np.ndarray obs: the observation matrix / game state provided to the agent.\n        :param float rwd: the reward resulting from the update.\n        :param bool done: whether the underlying world engine reported that the gym environment has ended.\n        :return int: the index of the discretized state corresponding to the given observation.\n        \"\"\"", "\n", "\n", "# tests for terminal / absorbing state", "\n", "if", "self", ".", "is_terminal_state", "(", "obs", ",", "rwd", ",", "done", ")", ":", "\n", "            ", "return", "self", ".", "get_terminal_state", "(", ")", "\n", "\n", "", "obs_vec", "=", "self", ".", "get_features_from_observation", "(", "obs", ")", "\n", "feats_nbins", "=", "self", ".", "get_features_bins", "(", ")", "\n", "\n", "# gets discretized index", "\n", "return", "get_discretized_index", "(", "obs_vec", ",", "feats_nbins", ")", "\n", "\n", "", "def", "get_state_from_features", "(", "self", ",", "obs_vec", ")", ":", "\n", "        ", "\"\"\"\n        Gets the state index corresponding to the given set of discretized features.\n        :param array_like obs_vec: the discretized features for which to calculate the state index.\n        :return int: the state index corresponding to the discretized features.\n        \"\"\"", "\n", "return", "get_discretized_index", "(", "obs_vec", ",", "self", ".", "get_features_bins", "(", ")", ")", "\n", "\n", "", "@", "abstractmethod", "\n", "def", "get_features_from_observation", "(", "self", ",", "obs", ",", "agent_x", "=", "-", "1", ",", "agent_y", "=", "-", "1", ")", ":", "\n", "        ", "\"\"\"\n        Transforms the given observation of the environment into a set of discretized state features.\n        :param np.ndarray obs: the observation matrix / game state provided to the agent.\n        :param int agent_x: the X location of the agent in the environment. If -1, it has to be collected from the observation.\n        :param int agent_y: the Y location of the agent in the environment. If -1, it has to be collected from the observation.\n        :return array: an array containing the discretized state features.\n        \"\"\"", "\n", "pass", "\n", "\n", "", "@", "abstractmethod", "\n", "def", "get_features_bins", "(", "self", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.register_gym_environment": [[124, 136], ["register"], "methods", ["None"], ["\n", "pass", "\n", "\n", "", "@", "abstractmethod", "\n", "def", "get_terminal_state", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Gets a generic terminal state used for this environment.\n        :return int: the state index corresponding to the terminal state.\n        \"\"\"", "\n", "pass", "\n", "\n", "", "def", "is_terminal_state", "(", "self", ",", "obs", ",", "rwd", ",", "done", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_state_from_observation": [[138, 140], ["scenario_helper.FroggerHelper.is_win_state", "super().get_state_from_observation"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.is_win_state", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_state_from_observation"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_agent_cell_location": [[141, 149], ["frogger.FroggerState.from_observation", "max", "max", "min", "min", "int", "int"], "methods", ["None"], ["\n", "# default is just to return according to done", "\n", "return", "done", "\n", "\n", "", "def", "get_reward", "(", "self", ",", "s", ",", "a", ",", "rwd", ",", "ns", ",", "done", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_cell_coordinates": [[150, 152], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_from_observation": [[153, 284], ["frogger.FroggerState.from_observation", "range", "enumerate", "len"], "methods", ["None"], ["\n", "# default is to simply return the game's original reward", "\n", "return", "rwd", "\n", "\n", "", "@", "abstractmethod", "\n", "def", "get_feature_label", "(", "self", ",", "obs_feat_idx", ",", "obs_feat_val", ")", ":", "\n", "        ", "\"\"\"\n        Gets the label corresponding to the given feature.\n        :param int obs_feat_idx: the discretized feature index.\n        :param int obs_feat_val: the discretized feature value.\n        :return str the label corresponding to the given feature:\n        \"\"\"", "\n", "pass", "\n", "\n", "", "@", "abstractmethod", "\n", "def", "get_features_labels", "(", "self", ",", "obs_vec", ",", "short", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Gets a description for each of the given state features to the standard output.\n        :param np.ndarray obs_vec: an array of discretized features, i.e., containing the indexes to the features' elements.\n        :param bool short: whether to return a shortened version of the labels.\n        :return list: a list containing a textual description for each of the given state features.\n        \"\"\"", "\n", "pass", "\n", "\n", "", "@", "abstractmethod", "\n", "def", "print_features", "(", "self", ",", "obs_vec", ",", "columns", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Prints a description of the given state features to the standard output.\n        :param np.ndarray obs_vec: an array of discretized features, i.e., containing the indexes to the features' elements.\n        :param bool columns: whether to print features organized in columns.\n        :return:\n        \"\"\"", "\n", "pass", "\n", "\n", "", "@", "abstractmethod", "\n", "def", "get_transaction", "(", "self", ",", "obs_vec", ",", "short", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Converts the given set of discretized features into an item-set-like transaction to be used in pattern mining.\n        :param np.ndarray obs_vec: an array of discretized features, i.e., containing the indexes to the features' elements.\n        :param bool short: whether to return a shortened version of the labels.\n        :return:\n        \"\"\"", "\n", "pass", "\n", "\n", "", "def", "get_feature_dissimilarity", "(", "self", ",", "obs_vec1", ",", "obs_vec2", ")", ":", "\n", "        ", "\"\"\"\n        Gets the dissimilarity (distance) between the two given observation-feature vectors.\n        :param np.ndarray obs_vec1: an array of discretized features, i.e., containing the indexes to the features' elements.\n        :param np.ndarray obs_vec2: an array of discretized features, i.e., containing the indexes to the features' elements.\n        :rtype: float\n        :return: a number in [0,1], indicating how different the two observation-features are.\n        \"\"\"", "\n", "# default returns division of intersection and union of features", "\n", "obs_vec1_feats", "=", "set", "(", "[", "'{}:{}'", ".", "format", "(", "i", ",", "feat", ")", "for", "i", ",", "feat", "in", "enumerate", "(", "obs_vec1", ")", "]", ")", "\n", "obs_vec2_feats", "=", "set", "(", "[", "'{}:{}'", ".", "format", "(", "i", ",", "feat", ")", "for", "i", ",", "feat", "in", "enumerate", "(", "obs_vec2", ")", "]", ")", "\n", "union", "=", "obs_vec1_feats", "|", "obs_vec2_feats", "\n", "inter", "=", "obs_vec1_feats", "&", "obs_vec2_feats", "\n", "return", "1.", "-", "len", "(", "inter", ")", "/", "len", "(", "union", ")", "\n", "\n", "", "def", "get_observation_dissimilarity", "(", "self", ",", "obs1", ",", "obs2", ")", ":", "\n", "        ", "\"\"\"\n        Gets the dissimilarity (distance) between the two given observations.\n        :param np.ndarray obs1: the first observation as provided to the agent.\n        :param np.ndarray obs2: the second observation as provided to the agent.\n        :rtype: float\n        :return: a number in [0,1], indicating how different the two observations are.\n        \"\"\"", "\n", "# default is the norm/Euclidean distance between the arrays", "\n", "return", "np", ".", "linalg", ".", "norm", "(", "obs1", "-", "obs2", ")", "\n", "\n", "", "@", "abstractmethod", "\n", "def", "act_reactive", "(", "self", ",", "s", ",", "rng", ")", ":", "\n", "        ", "\"\"\"\n        Chooses an action to be executed by the agent. It corresponds to a known (not learned) strategy for this\n        environment.\n        :param int s: the state that the agent is going to react to.\n        :param np.random.RandomState rng: the random number generator to be used to select actions stochastically.\n        :rtype: int\n        :return: the index of the action to be executed by the agent.\n        \"\"\"", "\n", "pass", "\n", "\n", "", "@", "abstractmethod", "\n", "def", "get_known_goal_states", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Gets the expected / known goal states associated with this environment.\n        :return array: an int array containing the known goal states' indexes.\n        \"\"\"", "\n", "pass", "\n", "\n", "", "@", "abstractmethod", "\n", "def", "get_known_feature_action_assocs", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Gets the known associations between action execution and feature states in this environment, i.e., the actions\n        that are expected to be executed if some feature is present in the agent's state.\n        :return array: an array containing the known feature-action associations in the format (feature, value, action).\n        \"\"\"", "\n", "pass", "\n", "\n", "", "def", "_add_variable", "(", "self", ",", "name", ",", "stat_t", ")", ":", "\n", "        ", "\"\"\"\n        Adds a new variable to be tracked.\n        :param str name: the name of the variable\n        :param int stat_t: the type of statistic we are interested in gathering from this variable at the end of episodes.\n        :return:\n        \"\"\"", "\n", "self", ".", "stats_collector", ".", "add_variable", "(", "name", ",", "self", ".", "config", ".", "num_episodes", ",", "self", ".", "config", ".", "max_steps_per_episode", ",", "stat_t", ")", "\n", "\n", "", "def", "update_stats", "(", "self", ",", "e", ",", "t", ",", "obs", ",", "n_obs", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "        ", "\"\"\"\n        Updates statistics collected for this environment based on the given agent update information.\n        :param int e: the episode number in which the transition was observed.\n        :param int t: the time-step in which the transition was observed.\n        :param ndarray obs: the previous observation provided to the agent.\n        :param ndarray n_obs: the current observation provided to the agent.\n        :param int s: the state at time-step t (from which the agent departed).\n        :param int a: the action executed by the agent at time-step t.\n        :param float r: the reward that the agent has received.\n        :param int ns: the state that resulted from the action execution.\n        :return:\n        \"\"\"", "\n", "# gets info from the agent if available", "\n", "self", ".", "stats_collector", ".", "add_sample", "(", "REWARD_VAR", ",", "e", ",", "r", ")", "\n", "if", "self", ".", "agent", "is", "None", ":", "\n", "            ", "return", "\n", "\n", "# gets exploration variable if available", "\n", "", "explore_var", "=", "self", ".", "agent", ".", "exploration_strategy", ".", "temp", "if", "isinstance", "(", "self", ".", "agent", ".", "exploration_strategy", ",", "SoftMaxExploration", ")", "else", "self", ".", "agent", ".", "exploration_strategy", ".", "eps"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins": [[285, 288], ["len", "len"], "methods", ["None"], ["if", "isinstance", "(", "self", ".", "agent", ".", "exploration_strategy", ",", "EpsilonGreedyExploration", ")", "else", "0", "\n", "\n", "# gets state value variable if available", "\n", "value_var", "=", "np", ".", "max", "(", "self", ".", "agent", ".", "q", "[", "s", "]", ")", "if", "isinstance", "(", "self", ".", "agent", ",", "QValueBasedAgent", ")", "else", "0", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_terminal_state": [[289, 291], ["None"], "methods", ["None"], ["\n", "# collects agent-related stats", "\n", "self", ".", "stats_collector", ".", "add_sample", "(", "TIME_STEPS_VAR", ",", "e", ",", "t", ")", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.is_terminal_state": [[292, 302], ["None"], "methods", ["None"], ["self", ".", "stats_collector", ".", "add_sample", "(", "EXPLORATION_VAR", ",", "e", ",", "explore_var", ")", "\n", "self", ".", "stats_collector", ".", "add_sample", "(", "STATE_VALUE_VAR", ",", "e", ",", "value_var", ")", "\n", "self", ".", "stats_collector", ".", "add_sample", "(", "STATE_COUNT_VAR", ",", "e", ",", "self", ".", "agent", ".", "c_s", "[", "s", "]", ")", "\n", "\n", "", "@", "abstractmethod", "\n", "def", "update_stats_episode", "(", "self", ",", "e", ",", "path", "=", "None", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.is_win_state": [[303, 315], ["frogger.FroggerState.from_observation"], "methods", ["None"], ["\n", "pass", "\n", "\n", "", "def", "save_stats", "(", "self", ",", "path", ",", "clear", "=", "True", ",", "img_format", "=", "'pdf'", ")", ":", "\n", "        ", "\"\"\"\n        Finalizes all collected statistics for this environment.\n        :param str path: the path (directory or file) in which to save the statistical information.\n        :param bool clear: whether to delete the contents of the results directory.\n        :param str img_format: the image format (extension) for the image files.\n        :return:\n        \"\"\"", "\n", "# checks dir", "\n", "if", "not", "exists", "(", "path", ")", ":", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_observation_dissimilarity": [[316, 319], ["min", "abs"], "methods", ["None"], ["            ", "makedirs", "(", "path", ")", "\n", "", "elif", "clear", ":", "\n", "            ", "rmtree", "(", "path", ")", "\n", "makedirs", "(", "path", ")", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_feature_label": [[320, 322], ["None"], "methods", ["None"], ["\n", "# prints all stats individually to an image file, CSV and binary files", "\n", "", "t", "=", "self", ".", "config", ".", "num_episodes", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels": [[323, 328], ["range", "len", "len", "scenario_helper.FroggerHelper.get_feature_label"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_feature_label"], ["for", "var_name", "in", "self", ".", "stats_collector", ".", "all_variables", "(", ")", ":", "\n", "            ", "self", ".", "stats_collector", ".", "save_mean_image", "(", "\n", "var_name", ",", "t", ",", "join", "(", "path", ",", "'avg {}.{}'", ".", "format", "(", "var_name", ".", "lower", "(", ")", ",", "img_format", ")", ")", ",", "'Time-step'", ")", "\n", "self", ".", "stats_collector", ".", "save_across_trials_image", "(", "\n", "var_name", ",", "t", ",", "join", "(", "path", ",", "'evo {}.{}'", ".", "format", "(", "var_name", ".", "lower", "(", ")", ",", "img_format", ")", ")", ",", "x_label", "=", "'Episode'", ")", "\n", "self", ".", "stats_collector", ".", "save", "(", "var_name", ",", "t", ",", "join", "(", "path", ",", "var_name", ".", "lower", "(", ")", ")", ",", "False", ")", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.print_features": [[329, 340], ["range", "print", "range", "print", "range", "len", "print", "len", "print", "len", "print", "DIRS[].upper().ljust", "scenario_helper.FroggerHelper.get_feature_label().ljust", "scenario_helper.FroggerHelper.get_feature_label", "DIRS[].upper", "scenario_helper.FroggerHelper.get_feature_label"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_feature_label", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_feature_label"], ["self", ".", "stats_collector", ".", "save", "(", "var_name", ",", "t", ",", "join", "(", "path", ",", "var_name", ".", "lower", "(", ")", ")", ",", "True", ",", "True", ")", "\n", "\n", "", "", "def", "load_stats", "(", "self", ",", "path", ")", ":", "\n", "        ", "\"\"\"\n        Tries to load statistics collected previously for all variables of this environment.\n        :param str path: the path (directory or file) from which to load the statistical information.\n        :return:\n        \"\"\"", "\n", "# tries to load all variables from file (first tries loading binary files over CSV text)", "\n", "for", "var_name", "in", "self", ".", "stats_collector", ".", "all_variables", "(", ")", ":", "\n", "            ", "file_path", "=", "join", "(", "path", ",", "var_name", ".", "lower", "(", ")", ")", "\n", "if", "not", "self", ".", "stats_collector", ".", "load", "(", "var_name", ",", "file_path", ",", "self", ".", "stats_collector", ".", "get_type", "(", "var_name", ")", ",", "True", ")", "and"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_image": [[341, 366], ["pygame.init", "pygame.Surface", "os.path.join", "pygame.Surface.blit", "scenario_helper.FroggerHelper.get_feature_label", "pygame.Surface.blit", "scenario_helper.FroggerHelper.get_feature_label", "pygame.Surface.blit", "scenario_helper.FroggerHelper.get_feature_label", "pygame.Surface.blit", "scenario_helper.FroggerHelper.get_feature_label", "pygame.Surface.blit", "os.path.dirname", "scenario_helper.FroggerHelper._load_img", "scenario_helper.FroggerHelper._load_img", "scenario_helper.FroggerHelper._load_img", "scenario_helper.FroggerHelper._load_img", "scenario_helper.FroggerHelper._load_img", "os.path.abspath", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_feature_label", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_feature_label", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_feature_label", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_feature_label", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper._load_img", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper._load_img", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper._load_img", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper._load_img", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper._load_img"], ["not", "self", ".", "stats_collector", ".", "load", "(", "var_name", ",", "file_path", ",", "self", ".", "stats_collector", ".", "get_type", "(", "var_name", ")", ",", "False", ")", ":", "\n", "                ", "raise", "ValueError", "(", "'Could not load variable {} from: {}.'", ".", "format", "(", "var_name", ",", "file_path", ")", ")", "\n", "\n", "", "", "", "def", "_print_stats", "(", "self", ",", "e", ",", "selected_var_names", ",", "file", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Prints the current stats of a selected number of variables to the screen.\n        :param int e: the number of the episode.\n        :param list selected_var_names: a list of the names of the variables for which to print the statistics.\n        :param stream file: the file on which to save the message line.\n        :return:\n        \"\"\"", "\n", "for", "var_name", "in", "selected_var_names", ":", "\n", "            ", "avg", ",", "std", "=", "self", ".", "stats_collector", ".", "get_mean", "(", "var_name", ",", "e", ")", "\n", "print_line", "(", "'Avg {}: {:.2f} \u00b1 {:.2f}'", ".", "format", "(", "var_name", ".", "lower", "(", ")", ",", "avg", ",", "std", ")", ",", "file", ")", "\n", "\n", "", "", "@", "abstractmethod", "\n", "def", "save_state_features", "(", "self", ",", "out_file", ",", "delimiter", "=", "CSV_DELIMITER", ")", ":", "\n", "        ", "\"\"\"\n        Saves a description of all states in terms of the elements in each corresponding feature to a CSV file.\n        :param str out_file: the path to the output CSV file in which to save the states' descriptions.\n        :param str delimiter: the CSV field delimiter.\n        :return:\n        \"\"\"", "\n", "pass", "\n", "\n", "", "def", "save_features_image", "(", "self", ",", "obs_vec", ",", "out_file", ")", ":", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_known_goal_states": [[367, 379], ["list", "itertools.product", "goal_states.append", "scenario_helper.FroggerHelper.get_state_from_features"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.get_state_from_features"], ["        ", "\"\"\"\n        Saves the given observation features into an image file, i.e., the features are saved in a visual form.\n        :param np.ndarray obs_vec: an array of discretized features, i.e., containing the indexes to the features' elements.\n        :param str out_file: the path to the output file in which to save the features image.\n        :return:\n        \"\"\"", "\n", "# default is to get features image and save to file", "\n", "surf", "=", "self", ".", "get_features_image", "(", "obs_vec", ")", "\n", "pygame", ".", "image", ".", "save", "(", "surf", ",", "out_file", ")", "\n", "\n", "", "@", "abstractmethod", "\n", "def", "get_features_image", "(", "self", ",", "obs_vec", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_known_feature_action_assocs": [[380, 397], ["feat_action_assocs.append", "feat_action_assocs.append", "feat_action_assocs.append", "feat_action_assocs.append", "feat_action_assocs.append"], "methods", ["None"], ["\n", "pass", "\n", "\n", "", "def", "save_features_video", "(", "self", ",", "obs_vec_seq", ",", "out_file", ",", "fps", "=", "30", ")", ":", "\n", "        ", "\"\"\"\n        Converts a given sequence of observations into a video file.\n        :param list obs_vec_seq: a sequence of arrays of discretized features, i.e., containing the indexes to the features' elements.\n        :param str out_file: the path to the video file in which to save the observation features sequence.\n        :param int fps: the number of frames-per-second to be recorded in the video.\n        \"\"\"", "\n", "\n", "# converts each observation vector to a feature image", "\n", "frame_buffer", "=", "[", "]", "\n", "for", "obs_vec", "in", "obs_vec_seq", ":", "\n", "            ", "surf", "=", "self", ".", "get_features_image", "(", "obs_vec", ")", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.update_stats": [[398, 471], ["super().update_stats", "frogger.FroggerState.from_observation", "scenario_helper.FroggerHelper.stats_collector.add_sample", "range", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "len", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "int", "scenario_helper.FroggerHelper.stats_collector.add_sample", "frogger.FroggerState.from_observation", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "str", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample", "scenario_helper.FroggerHelper.stats_collector.add_sample"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.update_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample"], ["frame", "=", "pygame", ".", "surfarray", ".", "array3d", "(", "surf", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "frame", "=", "np", ".", "fliplr", "(", "np", ".", "rot90", "(", "frame", ",", "3", ")", ")", "\n", "frame_buffer", ".", "append", "(", "frame", ")", "\n", "\n", "# records frame buffer to video file", "\n", "", "record_video", "(", "frame_buffer", ",", "out_file", ",", "fps", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.update_stats_episode": [[472, 477], ["interestingness_xrl.util.clean_console", "print", "scenario_helper.FroggerHelper._print_stats"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.clean_console", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._print_stats"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.save_stats": [[478, 488], ["super().save_stats", "open", "interestingness_xrl.util.print_line", "list", "list.sort", "scenario_helper.FroggerHelper._print_stats", "os.path.join", "scenario_helper.FroggerHelper.stats_collector.all_variables"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.save_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper._print_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.all_variables"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.save_state_features": [[489, 518], ["scenario_helper.FroggerHelper.get_features_bins", "range", "range", "pandas.DataFrame", "pandas.DataFrame.to_csv", "len", "range", "len", "range", "range", "interestingness_xrl.learning.get_discretized_index", "scenario_helper.FroggerHelper.get_feature_label", "scenario_helper.FroggerHelper.get_feature_label", "scenario_helper.FroggerHelper.get_feature_label", "scenario_helper.FroggerHelper.get_feature_label"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_discretized_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_feature_label", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_feature_label", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_feature_label", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_feature_label"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper._load_img": [[519, 522], ["pygame.image.load", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.filter_closed": [[8, 19], ["list", "freq_sets.keys", "set", "list", "freq_sets.keys", "set", "set.issubset"], "function", ["None"], ["def", "filter_closed", "(", "freq_sets", ",", "counts", ")", ":", "\n", "    ", "\"\"\"\n    Given a list of all frequent item-sets and their counts, compute the set of closed frequent sets.\n    This is only a very simplistic (naive) implementation for demonstration purposes!\n    \"\"\"", "\n", "for", "super_set_lst", "in", "list", "(", "freq_sets", ".", "keys", "(", ")", ")", ":", "\n", "        ", "super_set", "=", "set", "(", "super_set_lst", ")", "\n", "for", "sub_set_lst", "in", "list", "(", "freq_sets", ".", "keys", "(", ")", ")", ":", "\n", "            ", "sub_set", "=", "set", "(", "sub_set_lst", ")", "\n", "if", "super_set", "!=", "sub_set", "and", "counts", "[", "super_set_lst", "]", "==", "counts", "[", "sub_set_lst", "]", "and", "sub_set", ".", "issubset", "(", "super_set", ")", ":", "\n", "                ", "del", "freq_sets", "[", "sub_set_lst", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.filter_maximal": [[21, 32], ["list", "freq_sets.keys", "set", "list", "freq_sets.keys", "set", "set.issubset"], "function", ["None"], ["", "", "", "", "def", "filter_maximal", "(", "freq_sets", ")", ":", "\n", "    ", "\"\"\"\n    Given a list of all frequent item-sets and their counts, compute the set of maximal frequent sets.\n    This is only a very naive implementation for demonstration purposes!\n    \"\"\"", "\n", "for", "super_set_lst", "in", "list", "(", "freq_sets", ".", "keys", "(", ")", ")", ":", "\n", "        ", "super_set", "=", "set", "(", "super_set_lst", ")", "\n", "for", "sub_set_lst", "in", "list", "(", "freq_sets", ".", "keys", "(", ")", ")", ":", "\n", "            ", "sub_set", "=", "set", "(", "sub_set_lst", ")", "\n", "if", "super_set", "!=", "sub_set", "and", "sub_set", ".", "issubset", "(", "super_set", ")", ":", "\n", "                ", "del", "freq_sets", "[", "sub_set_lst", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.generate_association_rules": [[34, 59], ["patterns.keys", "range", "len", "itertools.combinations", "tuple", "tuple", "sorted", "sorted", "float", "rules.append", "set", "set"], "function", ["None"], ["", "", "", "", "def", "generate_association_rules", "(", "patterns", ",", "counts", ",", "threshold", ")", ":", "\n", "    ", "\"\"\"\n    Gets a list of association rules in the form (left, right, count, confidence) given a set of frequent itemsets.\n    :param dict patterns: the frequent itemsets and corresponding index from which to derive the association rules.\n    :param dict counts: the frequency counts associated with each pattern and sub-pattern.\n    :param float threshold: the minimum confidence for a rule to be considered pertinent.\n    :return list: a list of association rules in the form (left, right, count, confidence).\n    \"\"\"", "\n", "rules", "=", "[", "]", "\n", "for", "itemset", "in", "patterns", ".", "keys", "(", ")", ":", "\n", "        ", "upper_support", "=", "counts", "[", "itemset", "]", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "itemset", ")", ")", ":", "\n", "            ", "for", "antecedent", "in", "combinations", "(", "itemset", ",", "i", ")", ":", "\n", "                ", "antecedent", "=", "tuple", "(", "sorted", "(", "antecedent", ")", ")", "\n", "consequent", "=", "tuple", "(", "sorted", "(", "set", "(", "itemset", ")", "-", "set", "(", "antecedent", ")", ")", ")", "\n", "\n", "if", "antecedent", "in", "counts", ":", "\n", "                    ", "lower_support", "=", "counts", "[", "antecedent", "]", "\n", "confidence", "=", "float", "(", "upper_support", ")", "/", "lower_support", "\n", "\n", "if", "confidence", ">=", "threshold", ":", "\n", "                        ", "rules", ".", "append", "(", "(", "antecedent", ",", "consequent", ",", "counts", "[", "itemset", "]", ",", "confidence", ")", ")", "\n", "\n", "", "", "", "", "", "return", "rules", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.find_patterns_above": [[61, 73], ["jaccard_mining._find_patterns_above_recursive"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._find_patterns_above_recursive"], ["", "def", "find_patterns_above", "(", "tree", ",", "jacc_threshold", ")", ":", "\n", "    ", "\"\"\"\n    Finds all interesting patterns (itemsets) in the given tree with a Jaccard index above or equal to a threshold.\n    :param FPTree tree: the tree containing the prefix counts.\n    :param float jacc_threshold: the value of the index above which an itemset is a pattern.\n    :return dict, dict, dict: the patterns found, the non-patterns found (and tested) and the itemset counts (tested).\n    \"\"\"", "\n", "counts", "=", "{", "}", "\n", "patterns", "=", "{", "}", "\n", "no_patterns", "=", "{", "}", "\n", "_find_patterns_above_recursive", "(", "tree", ",", "jacc_threshold", ",", "tree", ".", "root", ",", "(", ")", ",", "counts", ",", "patterns", ",", "no_patterns", ")", "\n", "return", "patterns", ",", "no_patterns", ",", "counts", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._find_patterns_above_recursive": [[75, 102], ["jaccard_mining._find_patterns_above_recursive", "jaccard_mining._find_patterns_above_recursive", "jaccard_mining.get_jaccard"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._find_patterns_above_recursive", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._find_patterns_above_recursive", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.get_jaccard"], ["", "def", "_find_patterns_above_recursive", "(", "tree", ",", "jacc_threshold", ",", "node", ",", "itemset", ",", "counts", ",", "patterns", ",", "no_patterns", ")", ":", "\n", "    ", "for", "child", "in", "node", ".", "children", ":", "\n", "\n", "# creates new pattern by adding item (correct order is maintained)", "\n", "        ", "new_itemset", "=", "itemset", "+", "(", "child", ".", "value", ",", ")", "\n", "\n", "# gets Jaccard index (checks if already calculated)", "\n", "if", "new_itemset", "in", "patterns", ":", "\n", "            ", "keep_search", "=", "True", "\n", "", "elif", "new_itemset", "in", "no_patterns", ":", "\n", "            ", "keep_search", "=", "False", "\n", "", "else", ":", "\n", "# calculates index and adds to corresponding table", "\n", "            ", "jacc", "=", "get_jaccard", "(", "tree", ",", "new_itemset", ",", "counts", ")", "\n", "if", "jacc", ">=", "jacc_threshold", ":", "\n", "                ", "patterns", "[", "new_itemset", "]", "=", "jacc", "\n", "keep_search", "=", "True", "\n", "", "else", ":", "\n", "                ", "no_patterns", "[", "new_itemset", "]", "=", "jacc", "\n", "keep_search", "=", "False", "\n", "\n", "# checks keep searching with new pattern", "\n", "", "", "if", "keep_search", ":", "\n", "            ", "_find_patterns_above_recursive", "(", "tree", ",", "jacc_threshold", ",", "child", ",", "new_itemset", ",", "counts", ",", "patterns", ",", "no_patterns", ")", "\n", "\n", "# in any case keep looking with original pattern", "\n", "", "_find_patterns_above_recursive", "(", "tree", ",", "jacc_threshold", ",", "child", ",", "itemset", ",", "counts", ",", "patterns", ",", "no_patterns", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.get_pattern_tree": [[104, 109], ["pyfpgrowth.pyfpgrowth.FPNode", "jaccard_mining._insert_pattern_tree"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._insert_pattern_tree"], ["", "", "def", "get_pattern_tree", "(", "patterns", ")", ":", "\n", "    ", "root", "=", "FPNode", "(", "None", ",", "None", ",", "None", ")", "\n", "for", "pattern", "in", "patterns", ":", "\n", "        ", "_insert_pattern_tree", "(", "root", ",", "pattern", ")", "\n", "", "return", "root", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._insert_pattern_tree": [[111, 120], ["node.get_child", "jaccard_mining._insert_pattern_tree", "len", "node.add_child"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._insert_pattern_tree"], ["", "def", "_insert_pattern_tree", "(", "node", ",", "itemset", ")", ":", "\n", "    ", "if", "len", "(", "itemset", ")", "==", "0", ":", "\n", "        ", "return", "node", "\n", "\n", "", "item", "=", "itemset", "[", "0", "]", "\n", "child", "=", "node", ".", "get_child", "(", "item", ")", "\n", "if", "child", "is", "None", ":", "\n", "        ", "child", "=", "node", ".", "add_child", "(", "item", ")", "\n", "", "return", "_insert_pattern_tree", "(", "child", ",", "itemset", "[", "1", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._get_pattern_itemset": [[122, 129], ["itemset.reverse", "tuple", "itemset.append"], "function", ["None"], ["", "def", "_get_pattern_itemset", "(", "node", ")", ":", "\n", "    ", "itemset", "=", "[", "]", "\n", "while", "node", ".", "parent", "is", "not", "None", ":", "\n", "        ", "itemset", ".", "append", "(", "node", ".", "value", ")", "\n", "node", "=", "node", ".", "parent", "\n", "", "itemset", ".", "reverse", "(", ")", "\n", "return", "tuple", "(", "itemset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.find_patterns_below": [[131, 155], ["jaccard_mining.find_patterns_above", "jaccard_mining.get_pattern_tree", "list", "list.sort", "list.sort", "pyfpgrowth.pyfpgrowth.FPNode", "tree.frequent.keys", "jaccard_mining._find_patterns_below_recursive", "tuple"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.find_patterns_above", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.get_pattern_tree", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._find_patterns_below_recursive"], ["", "def", "find_patterns_below", "(", "tree", ",", "jacc_threshold", ")", ":", "\n", "    ", "\"\"\"\n    Finds all interesting patterns (itemsets) in the given tree with a Jaccard index below the given threshold. The\n    patterns are minimal, i.e., all super-patterns are also patterns.\n    :param FPTree tree: the tree containing the prefix counts.\n    :param float jacc_threshold: the value of the index below which an itemset is a pattern.\n    :return list: the patterns found.\n    \"\"\"", "\n", "# first find all patterns above the threshold", "\n", "patterns_above", ",", "_", ",", "_", "=", "find_patterns_above", "(", "tree", ",", "jacc_threshold", ")", "\n", "\n", "# creates a pattern tree from the found patterns", "\n", "root", "=", "get_pattern_tree", "(", "patterns_above", ")", "\n", "\n", "# searches for all minimal patterns using a parallel search tree", "\n", "all_items", "=", "list", "(", "tree", ".", "frequent", ".", "keys", "(", ")", ")", "\n", "all_items", ".", "sort", "(", ")", "\n", "all_items", ".", "sort", "(", "key", "=", "lambda", "x", ":", "tree", ".", "frequent", "[", "x", "]", ",", "reverse", "=", "True", ")", "\n", "search_root", "=", "FPNode", "(", "None", ",", "None", ",", "None", ")", "\n", "patterns_below", "=", "[", "]", "\n", "for", "item", "in", "all_items", ":", "\n", "        ", "_find_patterns_below_recursive", "(", "root", ",", "search_root", ",", "item", ",", "tuple", "(", ")", ",", "patterns_below", ")", "\n", "\n", "", "return", "patterns_below", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._find_patterns_below_recursive": [[157, 170], ["node.get_child", "patterns.append", "search_node.add_child", "node.get_child", "jaccard_mining._find_patterns_below_recursive"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._find_patterns_below_recursive"], ["", "def", "_find_patterns_below_recursive", "(", "node", ",", "search_node", ",", "item", ",", "itemset", ",", "patterns", ")", ":", "\n", "    ", "child", "=", "node", ".", "get_child", "(", "item", ")", "\n", "if", "child", "is", "None", ":", "\n", "\n", "        ", "patterns", ".", "append", "(", "itemset", "+", "(", "item", ",", ")", ")", "\n", "\n", "", "else", ":", "\n", "\n", "        ", "for", "search_child", "in", "search_node", ".", "children", ":", "\n", "            ", "child", "=", "node", ".", "get_child", "(", "search_child", ".", "value", ")", "\n", "_find_patterns_below_recursive", "(", "child", ",", "search_child", ",", "item", ",", "itemset", "+", "(", "child", ".", "value", ",", ")", ",", "patterns", ")", "\n", "\n", "", "search_node", ".", "add_child", "(", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.get_jaccard": [[172, 204], ["range", "len", "sub_itemsets.extend", "tuple", "float", "len", "itertools.combinations", "jaccard_mining.get_count", "len", "tuple"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.get_count"], ["", "", "def", "get_jaccard", "(", "tree", ",", "itemset", ",", "counts", ")", ":", "\n", "    ", "\"\"\"\n    Gets the Jaccard index of the given itemset.\n    :param FPTree tree: the tree containing the prefix counts.\n    :param Iterable itemset: the itemset that we want to get the Jaccard index.\n    :param dict counts: a dictionary (possibly empty) containing the counts of the sub-itemsets.\n    :return float: the Jaccard index of the given itemset.\n    \"\"\"", "\n", "if", "len", "(", "itemset", ")", "==", "0", ":", "\n", "        ", "return", "0.", "\n", "\n", "# gets all sub-combinations", "\n", "", "sub_itemsets", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "itemset", ")", "+", "1", ")", ":", "\n", "        ", "sub_itemsets", ".", "extend", "(", "combinations", "(", "itemset", ",", "i", ")", ")", "\n", "\n", "# gets denominator's sum", "\n", "", "sum_count", "=", "0", "\n", "for", "sub_itemset", "in", "sub_itemsets", ":", "\n", "        ", "sub_itemset", "=", "tuple", "(", "sub_itemset", ")", "\n", "if", "sub_itemset", "in", "counts", ":", "\n", "            ", "count", "=", "counts", "[", "sub_itemset", "]", "\n", "", "else", ":", "\n", "# gets count from tree", "\n", "            ", "count", "=", "get_count", "(", "tree", ",", "sub_itemset", ")", "\n", "counts", "[", "sub_itemset", "]", "=", "count", "\n", "\n", "# adds count to sum (if even itemset, then count is negated)", "\n", "", "sum_count", "+=", "-", "count", "if", "len", "(", "sub_itemset", ")", "%", "2", "==", "0", "else", "count", "\n", "\n", "# returns the Jaccard index", "\n", "", "return", "float", "(", "counts", "[", "tuple", "(", "itemset", ")", "]", ")", "/", "sum_count", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.get_count": [[206, 224], ["len", "jaccard_mining._get_count_recursive"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._get_count_recursive"], ["", "def", "get_count", "(", "tree", ",", "itemset", ")", ":", "\n", "    ", "\"\"\"\n    Gets the number of times that the itemset was added into the tree.\n    :param FPTree tree: the tree containing the prefix counts.\n    :param Iterable itemset: the itemset that we want to get the count.\n    :return int: the itemset count.\n    \"\"\"", "\n", "if", "len", "(", "itemset", ")", "==", "0", ":", "\n", "        ", "return", "0", "\n", "\n", "# gets next item and goes through all its node links", "\n", "", "next_item", "=", "itemset", "[", "0", "]", "\n", "count", "=", "0", "\n", "node", "=", "tree", ".", "headers", "[", "next_item", "]", "\n", "while", "node", "is", "not", "None", ":", "\n", "        ", "count", "+=", "_get_count_recursive", "(", "tree", ",", "node", ",", "itemset", "[", "1", ":", "]", ")", "\n", "node", "=", "node", ".", "link", "\n", "", "return", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._get_count_recursive": [[226, 248], ["len", "jaccard_mining._get_count_recursive", "jaccard_mining._get_count_recursive"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._get_count_recursive", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._get_count_recursive"], ["", "def", "_get_count_recursive", "(", "tree", ",", "node", ",", "itemset", ")", ":", "\n", "    ", "if", "len", "(", "itemset", ")", "==", "0", ":", "\n", "        ", "return", "node", ".", "count", "\n", "\n", "", "count", "=", "0", "\n", "next_item", "=", "itemset", "[", "0", "]", "\n", "next_item_count", "=", "tree", ".", "frequent", "[", "next_item", "]", "\n", "for", "child", "in", "node", ".", "children", ":", "\n", "\n", "# if child node corresponds to item, remove it from sequence and keep searching", "\n", "        ", "if", "child", ".", "value", "==", "next_item", ":", "\n", "            ", "count", "+=", "_get_count_recursive", "(", "tree", ",", "child", ",", "itemset", "[", "1", ":", "]", ")", "\n", "\n", "# else if count of child node's item is less, it means there's no node down corresponding to the item", "\n", "", "elif", "tree", ".", "frequent", "[", "child", ".", "value", "]", "<", "next_item_count", ":", "\n", "            ", "continue", "\n", "\n", "# otherwise keep looking for the item along the child's path", "\n", "", "else", ":", "\n", "            ", "count", "+=", "_get_count_recursive", "(", "tree", ",", "child", ",", "itemset", ")", "\n", "\n", "", "", "return", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.print_tree": [[250, 257], ["jaccard_mining._print_tree_recursive"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._print_tree_recursive"], ["", "def", "print_tree", "(", "tree", ")", ":", "\n", "    ", "\"\"\"\n    Utility method that prints the tree to the console in a horizontal layout.\n    :param FPTree tree: the tree to be printed.\n    :return:\n    \"\"\"", "\n", "_print_tree_recursive", "(", "tree", ".", "root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._print_tree_recursive": [[259, 263], ["print", "jaccard_mining._print_tree_recursive"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining._print_tree_recursive"], ["", "def", "_print_tree_recursive", "(", "node", ",", "depth", "=", "0", ")", ":", "\n", "    ", "print", "(", "'{}{}:{}'", ".", "format", "(", "'\\t'", "*", "depth", ",", "node", ".", "value", ",", "node", ".", "count", ")", ")", "\n", "for", "child", "in", "node", ".", "children", ":", "\n", "        ", "_print_tree_recursive", "(", "child", ",", "depth", "+", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.prefix_span": [[12, 33], ["prefixspan.generate_item_supports", "result.append", "result.extend", "prefixspan._prefix_span_internal", "prefixspan.project_database"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.generate_item_supports", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan._prefix_span_internal", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.project_database"], ["def", "prefix_span", "(", "dataset", ",", "min_support", ",", "min_length", "=", "1", ",", "max_length", "=", "9999999", ")", ":", "\n", "    ", "\"\"\"\n    The PrefixSpan algorithm. Computes the frequent sequences in a sequence dataset for a given min_support\n    See: https://github.com/sequenceanalysis/sequenceanalysis.github.io/blob/master/notebooks/part2.ipynb\n    :param list dataset: a list of sequences, for which the frequent (sub-)sequences are computed\n    :param int min_support: the minimum support that makes a sequence frequent.\n    :param int min_length: the minimum sequence length.\n    :param int max_length: the maximum sequence length.\n    :return list: a list of tuples (s, c), where s is a frequent sequence, and c is the count for that sequence.\n    \"\"\"", "\n", "result", "=", "[", "]", "\n", "item_counts", "=", "generate_item_supports", "(", "dataset", ")", "\n", "for", "item", ",", "count", "in", "item_counts", ":", "\n", "        ", "if", "count", ">=", "min_support", ":", "\n", "            ", "new_prefix", "=", "[", "(", "item", ",", ")", "]", "\n", "if", "min_length", "<=", "1", ":", "\n", "                ", "result", ".", "append", "(", "(", "new_prefix", ",", "count", ")", ")", "\n", "", "if", "max_length", ">", "1", ":", "\n", "                ", "result", ".", "extend", "(", "_prefix_span_internal", "(", "\n", "project_database", "(", "dataset", ",", "(", "item", ",", ")", ",", "False", ")", ",", "min_support", ",", "min_length", ",", "max_length", ",", "new_prefix", ")", ")", "\n", "", "", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.project_sequence": [[35, 54], ["enumerate", "result.append", "all", "tuple", "tuple"], "function", ["None"], ["", "def", "project_sequence", "(", "sequence", ",", "prefix", ",", "new_event", ")", ":", "\n", "    ", "\"\"\"\n    Projects a sequence according to a given prefix, as done in PrefixSpan.\n    See: https://github.com/sequenceanalysis/sequenceanalysis.github.io/blob/master/notebooks/part2.ipynb\n    :param list sequence: the sequence the projection is built from.\n    :param tuple prefix: the prefix that is searched for in the sequence.\n    :param bool new_event: if set to True, the first itemset is ignored.\n    :return: If the sequence does not contain the prefix, then None.\n    Otherwise, a new sequence starting from the position of the prefix, including the itemset that includes the prefix.\n    \"\"\"", "\n", "result", "=", "None", "\n", "for", "i", ",", "itemset", "in", "enumerate", "(", "sequence", ")", ":", "\n", "        ", "if", "result", "is", "None", ":", "\n", "            ", "if", "(", "not", "new_event", ")", "or", "i", ">", "0", ":", "\n", "                ", "if", "all", "(", "x", "in", "itemset", "for", "x", "in", "prefix", ")", ":", "\n", "                    ", "result", "=", "[", "tuple", "(", "itemset", ")", "]", "\n", "", "", "", "else", ":", "\n", "            ", "result", ".", "append", "(", "tuple", "(", "itemset", ")", ")", "\n", "", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.project_database": [[56, 71], ["prefixspan.project_sequence", "projected_db.append"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.project_sequence"], ["", "def", "project_database", "(", "dataset", ",", "prefix", ",", "new_event", ")", ":", "\n", "    ", "\"\"\"\n    Projects a dataset according to a given prefix, as done in PrefixSpan.\n    See: https://github.com/sequenceanalysis/sequenceanalysis.github.io/blob/master/notebooks/part2.ipynb\n    :param list dataset: the dataset the projection is built from.\n    :param tuple prefix: the prefix that is searched for in the sequence.\n    :param bool new_event: if set to True, the first itemset is ignored.\n    :return list: a (potentially empty) list of sequences.\n    \"\"\"", "\n", "projected_db", "=", "[", "]", "\n", "for", "sequence", "in", "dataset", ":", "\n", "        ", "seq_projected", "=", "project_sequence", "(", "sequence", ",", "prefix", ",", "new_event", ")", "\n", "if", "seq_projected", "is", "not", "None", ":", "\n", "            ", "projected_db", ".", "append", "(", "seq_projected", ")", "\n", "", "", "return", "projected_db", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.generate_items": [[73, 79], ["sorted", "set"], "function", ["None"], ["", "def", "generate_items", "(", "dataset", ")", ":", "\n", "    ", "\"\"\"\n    See: https://github.com/sequenceanalysis/sequenceanalysis.github.io/blob/master/notebooks/part2.ipynb\n    Generates a list of all items that are contained in a dataset\n    \"\"\"", "\n", "return", "sorted", "(", "set", "(", "[", "item", "for", "sublist1", "in", "dataset", "for", "sublist2", "in", "sublist1", "for", "item", "in", "sublist2", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.generate_item_supports": [[81, 99], ["collections.defaultdict", "sorted", "set", "collections.defaultdict.items", "all", "set.add"], "function", ["None"], ["", "def", "generate_item_supports", "(", "dataset", ",", "ignore_first_event", "=", "False", ",", "prefix", "=", "(", ")", ")", ":", "\n", "    ", "\"\"\"\n    See: https://github.com/sequenceanalysis/sequenceanalysis.github.io/blob/master/notebooks/part2.ipynb\n    Computes a defaultdict that maps each item in the dataset to its support\n    \"\"\"", "\n", "result", "=", "defaultdict", "(", "int", ")", "\n", "for", "sequence", "in", "dataset", ":", "\n", "        ", "if", "ignore_first_event", ":", "\n", "            ", "sequence", "=", "sequence", "[", "1", ":", "]", "\n", "", "co_occurring_items", "=", "set", "(", ")", "\n", "for", "itemset", "in", "sequence", ":", "\n", "            ", "if", "all", "(", "x", "in", "itemset", "for", "x", "in", "prefix", ")", ":", "\n", "                ", "for", "item", "in", "itemset", ":", "\n", "                    ", "if", "item", "not", "in", "prefix", ":", "\n", "                        ", "co_occurring_items", ".", "add", "(", "item", ")", "\n", "", "", "", "", "for", "item", "in", "co_occurring_items", ":", "\n", "            ", "result", "[", "item", "]", "+=", "1", "\n", "", "", "return", "sorted", "(", "result", ".", "items", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan._prefix_span_internal": [[101, 130], ["prefixspan.generate_item_supports", "prefixspan.generate_item_supports", "copy.deepcopy", "len", "copy.deepcopy", "copy.deepcopy.append", "len", "result.append", "result.extend", "result.append", "result.extend", "prefixspan._prefix_span_internal", "prefixspan._prefix_span_internal", "prefixspan.project_database", "prefixspan.project_database"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.generate_item_supports", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.generate_item_supports", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan._prefix_span_internal", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan._prefix_span_internal", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.project_database", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.project_database"], ["", "def", "_prefix_span_internal", "(", "dataset", ",", "min_support", ",", "min_length", ",", "max_length", ",", "prev_prefixes", "=", "[", "]", ")", ":", "\n", "    ", "result", "=", "[", "]", "\n", "\n", "# Add a new item to the last element (==same time)", "\n", "item_count_same_event", "=", "generate_item_supports", "(", "dataset", ",", "False", ",", "prefix", "=", "prev_prefixes", "[", "-", "1", "]", ")", "\n", "for", "item", ",", "count", "in", "item_count_same_event", ":", "\n", "        ", "if", "(", "count", ">=", "min_support", ")", "and", "item", ">", "prev_prefixes", "[", "-", "1", "]", "[", "-", "1", "]", ":", "\n", "            ", "new_prefix", "=", "copy", ".", "deepcopy", "(", "prev_prefixes", ")", "\n", "new_prefix", "[", "-", "1", "]", "+=", "(", "item", ",", ")", "\n", "prefix_len", "=", "len", "(", "new_prefix", ")", "\n", "if", "prefix_len", ">=", "min_length", ":", "\n", "                ", "result", ".", "append", "(", "(", "new_prefix", ",", "count", ")", ")", "\n", "", "if", "prefix_len", "<", "max_length", ":", "\n", "                ", "result", ".", "extend", "(", "_prefix_span_internal", "(", "\n", "project_database", "(", "dataset", ",", "new_prefix", "[", "-", "1", "]", ",", "False", ")", ",", "min_support", ",", "min_length", ",", "max_length", ",", "new_prefix", ")", ")", "\n", "\n", "# Add a new event to the prefix", "\n", "", "", "", "item_count_subsequent_events", "=", "generate_item_supports", "(", "dataset", ",", "True", ")", "\n", "for", "item", ",", "count", "in", "item_count_subsequent_events", ":", "\n", "        ", "if", "count", ">=", "min_support", ":", "\n", "            ", "new_prefix", "=", "copy", ".", "deepcopy", "(", "prev_prefixes", ")", "\n", "new_prefix", ".", "append", "(", "(", "item", ",", ")", ")", "\n", "prefix_len", "=", "len", "(", "new_prefix", ")", "\n", "if", "prefix_len", ">=", "min_length", ":", "\n", "                ", "result", ".", "append", "(", "(", "new_prefix", ",", "count", ")", ")", "\n", "", "if", "prefix_len", "<", "max_length", ":", "\n", "                ", "result", ".", "extend", "(", "_prefix_span_internal", "(", "\n", "project_database", "(", "dataset", ",", "(", "item", ",", ")", ",", "True", ")", ",", "min_support", ",", "min_length", ",", "max_length", ",", "new_prefix", ")", ")", "\n", "", "", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.filter_closed": [[132, 143], ["list", "list", "prefixspan.is_sub_sequence", "result.remove"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.is_sub_sequence"], ["", "def", "filter_closed", "(", "result", ")", ":", "\n", "    ", "\"\"\"\n    See: https://github.com/sequenceanalysis/sequenceanalysis.github.io/blob/master/notebooks/part2.ipynb\n    Given a list of all frequent sequences and their counts, compute the set of closed frequent sequence (as a list)\n    This is only a very simplistic (naive) implementation for demonstration purposes!\n    \"\"\"", "\n", "for", "super_sequence", ",", "count_seq", "in", "list", "(", "result", ")", ":", "\n", "        ", "for", "sub_sequence", ",", "count_sub_seq", "in", "list", "(", "result", ")", ":", "\n", "            ", "if", "sub_sequence", "!=", "super_sequence", "and", "count_seq", "==", "count_sub_seq", "and", "is_sub_sequence", "(", "super_sequence", ",", "sub_sequence", ")", ":", "\n", "                ", "result", ".", "remove", "(", "(", "sub_sequence", ",", "count_sub_seq", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.filter_maximal": [[145, 155], ["list", "list", "prefixspan.is_sub_sequence", "result.remove"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.is_sub_sequence"], ["", "", "", "", "def", "filter_maximal", "(", "result", ")", ":", "\n", "    ", "\"\"\"\n    See: https://github.com/sequenceanalysis/sequenceanalysis.github.io/blob/master/notebooks/part2.ipynb\n    Given a list of all frequent sequences and their counts, compute the set of maximal frequent sequence (as a list)\n    This is only a very naive implementation for demonstration purposes!\n    \"\"\"", "\n", "for", "super_sequence", ",", "count_seq", "in", "list", "(", "result", ")", ":", "\n", "        ", "for", "sub_sequence", ",", "count_sub_seq", "in", "list", "(", "result", ")", ":", "\n", "            ", "if", "sub_sequence", "!=", "super_sequence", "and", "is_sub_sequence", "(", "super_sequence", ",", "sub_sequence", ")", ":", "\n", "                ", "result", ".", "remove", "(", "(", "sub_sequence", ",", "count_sub_seq", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.is_sub_sequence": [[157, 164], ["list", "prefixspan._is_sub_sequence_recursive"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan._is_sub_sequence_recursive"], ["", "", "", "", "def", "is_sub_sequence", "(", "main_sequence", ",", "sub_sequence", ")", ":", "\n", "    ", "\"\"\"\n    See: https://github.com/sequenceanalysis/sequenceanalysis.github.io/blob/master/notebooks/part2.ipynb\n    This is a simple recursive method that checks if subsequence is a sub_sequence of main_sequence\n    \"\"\"", "\n", "sub_sequence_clone", "=", "list", "(", "sub_sequence", ")", "# clone the sequence, because we will alter it", "\n", "return", "_is_sub_sequence_recursive", "(", "main_sequence", ",", "sub_sequence_clone", ")", "# start recursion", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan._is_sub_sequence_recursive": [[166, 182], ["set", "range", "sub_sequence_clone.pop", "len", "set().issuperset", "prefixspan._is_sub_sequence_recursive", "set"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan._is_sub_sequence_recursive"], ["", "def", "_is_sub_sequence_recursive", "(", "main_sequence", ",", "sub_sequence_clone", ",", "start", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    See: https://github.com/sequenceanalysis/sequenceanalysis.github.io/blob/master/notebooks/part2.ipynb\n    Function for the recursive call of is_sub_sequence, not intended for external calls\n    \"\"\"", "\n", "# Check if empty: End of recursion, all itemsets have been found", "\n", "if", "not", "sub_sequence_clone", ":", "\n", "        ", "return", "True", "\n", "# retrieves element of the subsequence and removes is from subsequence", "\n", "", "first_elem", "=", "set", "(", "sub_sequence_clone", ".", "pop", "(", "0", ")", ")", "\n", "# Search for the first itemset...", "\n", "for", "i", "in", "range", "(", "start", ",", "len", "(", "main_sequence", ")", ")", ":", "\n", "        ", "if", "set", "(", "main_sequence", "[", "i", "]", ")", ".", "issuperset", "(", "first_elem", ")", ":", "\n", "# and recurse", "\n", "            ", "return", "_is_sub_sequence_recursive", "(", "main_sequence", ",", "sub_sequence_clone", ",", "i", "+", "1", ")", "\n", "", "", "return", "False", "\n", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_variation_ratio": [[9, 20], ["numpy.sum", "float", "numpy.max"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_distribution_evenness": [[22, 44], ["len", "float", "numpy.true_divide", "numpy.nonzero", "len", "len", "numpy.array", "numpy.sum", "numpy.log", "numpy.log", "numpy.log", "numpy.sum"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_outliers_double_mads": [[46, 66], ["numpy.median", "numpy.abs", "numpy.median", "numpy.median", "[].tolist", "numpy.ones", "len", "numpy.where"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_outliers_dist_mean": [[68, 83], ["numpy.mean", "numpy.std", "[].tolist", "len", "numpy.where"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_jensen_shannon_divergence": [[85, 104], ["numpy.sum", "__init__.get_jensen_shannon_divergence._kl_div"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_pairwise_jensen_shannon_divergence": [[106, 124], ["numpy.log2", "__init__.get_jensen_shannon_divergence._kl_div"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.group_by_key": [[126, 137], ["data.sort", "itertools.groupby", "operator.itemgetter"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_diff_means": [[139, 155], ["numpy.sqrt().item", "numpy.sqrt"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer.__init__": [[21, 62], ["interestingness_xrl.explainability.explanation.Explainer.__init__", "set", "enumerate", "sequences.SequencesExplainer.get_sequence_name"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer.get_sequence_name"], ["def", "__init__", "(", "self", ",", "env", ",", "helper", ",", "full_analysis", ",", "output_dir", ",", "recorded_episodes", ",", "\n", "fps", ",", "additional_time_steps", ",", "max_videos_per_sequence", ",", "max_between_states", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new highlights recorder.\n        :param Env env: the Gym environment to be tracked, from which the frames are extracted.\n        :param ScenarioHelper helper: the helper containing all necessary methods to extract information from the env.\n        :param FullAnalysis full_analysis: the full analysis over the agent's history of interaction with the environment.\n        :param str output_dir: the path to the output directory in which to save the videos.\n        :param list recorded_episodes: the episodes in which episodes are to be recorded.\n        :param int fps: the frames-per-second at which videos are to be recorded.\n        :param int additional_time_steps: the number of environment time-steps to be recorded before and after a sequence in each video.\n        :param int max_videos_per_sequence: the maximum number of highlights to be recorded for the same file name.\n        :param int max_between_states: maximum number of not-in-sequence states allowed between 2 states in a sequence.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "env", ",", "helper", ",", "full_analysis", ",", "output_dir", ",", "recorded_episodes", ")", "\n", "\n", "self", ".", "fps", "=", "fps", "\n", "self", ".", "additional_time_steps", "=", "additional_time_steps", "\n", "self", ".", "max_videos_per_sequence", "=", "max_videos_per_sequence", "\n", "self", ".", "max_between_sequence_states", "=", "max_between_states", "\n", "\n", "# initializes structures", "\n", "self", ".", "total_videos", "=", "{", "}", "\n", "self", ".", "captured_videos", "=", "set", "(", ")", "\n", "\n", "# creates a dictionary containing the several possible sequences to be recorded", "\n", "self", ".", "sequences", "=", "{", "}", "\n", "for", "i", ",", "seq_info", "in", "enumerate", "(", "self", ".", "full_analysis", ".", "sequence_analysis", ".", "certain_seqs_to_subgoal", ")", ":", "\n", "            ", "name", ",", "trans_seq", "=", "self", ".", "get_sequence_name", "(", "i", ",", "seq_info", ")", "\n", "self", ".", "sequences", "[", "name", "]", "=", "trans_seq", "\n", "\n", "# initializes structures", "\n", "", "self", ".", "candidate_highlights", "=", "{", "}", "\n", "self", ".", "cur_time_step_frames", "=", "[", "]", "\n", "self", ".", "time_step_frames_buffer", "=", "[", "]", "\n", "self", ".", "episodes_record_infos", "=", "[", "]", "\n", "self", ".", "highlights_frames", "=", "{", "}", "\n", "\n", "self", ".", "active_sequences", "=", "{", "}", "\n", "self", ".", "active_sequences_idxs", "=", "{", "}", "\n", "self", ".", "active_sequences_between_states", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer.new_analysis_episode": [[63, 72], ["super().new_analysis_episode", "sequences.SequencesExplainer._set_collect_frames"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.new_analysis_episode", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer._set_collect_frames"], ["", "def", "new_analysis_episode", "(", "self", ",", "e", ",", "length", ")", ":", "\n", "        ", "super", "(", ")", ".", "new_analysis_episode", "(", "e", ",", "length", ")", "\n", "\n", "# turns-off frame collection for analysis", "\n", "self", ".", "_set_collect_frames", "(", "False", ")", "\n", "\n", "self", ".", "active_sequences_idxs", "=", "{", "}", "\n", "self", ".", "active_sequences_between_states", "=", "{", "}", "\n", "self", ".", "cur_time_step_frames", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer.update_analysis": [[73, 166], ["list", "sequences.SequencesExplainer.sequences.items", "sequences.SequencesExplainer.active_sequences_idxs.items", "range", "sequences.SequencesExplainer._stop_tracking", "sequences.SequencesExplainer._start_tracking", "len", "len", "sequences.SequencesExplainer._get_seq_distances", "sequences.SequencesExplainer._get_diversity", "range", "sequences.SequencesExplainer._stop_tracking", "len", "sequences.SequencesExplainer._get_diversity", "len", "sequences.SequencesExplainer.candidate_highlights[].append"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer._stop_tracking", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer._start_tracking", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer._get_seq_distances", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer._get_diversity", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer._stop_tracking", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer._get_diversity"], ["", "def", "update_analysis", "(", "self", ",", "t", ",", "obs", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "# ignore new or active sequences if short length", "\n", "        ", "if", "t", "+", "self", ".", "additional_time_steps", ">=", "self", ".", "e_length", ":", "\n", "            ", "return", "\n", "\n", "# checks to see if old sequences have updated or have to be discarded", "\n", "", "for", "seq_name", ",", "idx", "in", "list", "(", "self", ".", "active_sequences_idxs", ".", "items", "(", ")", ")", ":", "\n", "\n", "# if end state of transition is the same, continue looking, sequence did not advance", "\n", "            ", "_", ",", "_", ",", "nst", "=", "self", ".", "sequences", "[", "seq_name", "]", "[", "idx", "]", "\n", "if", "nst", "==", "ns", ":", "\n", "                ", "continue", "\n", "\n", "# if a state transition was achieved, increment idx", "\n", "", "advanced", "=", "False", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "sequences", "[", "seq_name", "]", ")", "-", "1", ",", "idx", "-", "1", ",", "-", "1", ")", ":", "\n", "                ", "st", ",", "ac", ",", "nst", "=", "self", ".", "sequences", "[", "seq_name", "]", "[", "i", "]", "\n", "# if st == s and ac == a and nst == ns:", "\n", "# if ac == a and nst == ns:", "\n", "if", "nst", "!=", "ns", ":", "\n", "                    ", "continue", "\n", "\n", "", "self", ".", "active_sequences_idxs", "[", "seq_name", "]", "=", "i", "\n", "self", ".", "active_sequences_between_states", "[", "seq_name", "]", "=", "0", "\n", "advanced", "=", "True", "\n", "\n", "# check sequence ended", "\n", "if", "i", "!=", "len", "(", "self", ".", "sequences", "[", "seq_name", "]", ")", "-", "1", ":", "\n", "                    ", "continue", "\n", "\n", "", "seq_obs", ",", "initial_time_step", "=", "self", ".", "active_sequences", "[", "seq_name", "]", "\n", "final_time_step", "=", "t", "+", "self", ".", "additional_time_steps", "\n", "seq_info", "=", "(", "seq_obs", ",", "initial_time_step", ",", "final_time_step", ",", "self", ".", "e", ")", "\n", "\n", "# checks max budget for this sequence and whether to replace some sequence with a better one", "\n", "highlight_idx", "=", "len", "(", "self", ".", "candidate_highlights", "[", "seq_name", "]", ")", "if", "seq_name", "in", "self", ".", "candidate_highlights", "else", "0", "\n", "if", "highlight_idx", "==", "self", ".", "max_videos_per_sequence", ":", "\n", "\n", "# gets distances between all candidate sequences", "\n", "                    ", "seq_distances", "=", "self", ".", "_get_seq_distances", "(", "seq_name", ",", "seq_info", ")", "\n", "\n", "# iteratively tries to improve diversity by replacing one of the highlights", "\n", "highlight_idx", "=", "-", "1", "\n", "max_diversity", "=", "self", ".", "_get_diversity", "(", "seq_distances", ",", "self", ".", "max_videos_per_sequence", ")", "\n", "for", "seq_idx", "in", "range", "(", "self", ".", "max_videos_per_sequence", ")", ":", "\n", "                        ", "diversity", "=", "self", ".", "_get_diversity", "(", "seq_distances", ",", "seq_idx", ")", "\n", "if", "diversity", ">", "max_diversity", ":", "\n", "                            ", "max_diversity", "=", "diversity", "\n", "highlight_idx", "=", "seq_idx", "\n", "\n", "# if there was improvement, adds highlight recording info to the list at the correct index", "\n", "", "", "", "if", "highlight_idx", "!=", "-", "1", ":", "\n", "\n", "                    ", "if", "seq_name", "not", "in", "self", ".", "candidate_highlights", ":", "\n", "                        ", "self", ".", "candidate_highlights", "[", "seq_name", "]", "=", "[", "None", "]", "\n", "", "elif", "highlight_idx", "==", "len", "(", "self", ".", "candidate_highlights", "[", "seq_name", "]", ")", ":", "\n", "                        ", "self", ".", "candidate_highlights", "[", "seq_name", "]", ".", "append", "(", "None", ")", "\n", "\n", "", "self", ".", "candidate_highlights", "[", "seq_name", "]", "[", "highlight_idx", "]", "=", "seq_info", "\n", "\n", "# stop tracking this sequence", "\n", "", "self", ".", "_stop_tracking", "(", "seq_name", ")", "\n", "break", "\n", "\n", "# otherwise increment in-between states", "\n", "", "if", "not", "advanced", ":", "\n", "                ", "self", ".", "active_sequences_between_states", "[", "seq_name", "]", "+=", "1", "\n", "\n", "# if sequence is no longer valid, stop tracking it", "\n", "if", "self", ".", "active_sequences_between_states", "[", "seq_name", "]", ">", "self", ".", "max_between_sequence_states", ":", "\n", "                    ", "self", ".", "_stop_tracking", "(", "seq_name", ")", "\n", "\n", "# tries to see if a new sequence has initiated", "\n", "", "", "", "for", "seq_name", ",", "seq", "in", "self", ".", "sequences", ".", "items", "(", ")", ":", "\n", "\n", "# ignore active sequences", "\n", "            ", "if", "seq_name", "in", "self", ".", "active_sequences_idxs", ":", "\n", "                ", "continue", "\n", "\n", "# ignore sequences with a maximum number of videos already recorded", "\n", "", "if", "seq_name", "in", "self", ".", "total_videos", "and", "self", ".", "total_videos", "[", "seq_name", "]", "==", "self", ".", "max_videos_per_sequence", ":", "\n", "                ", "continue", "\n", "\n", "# ignore sequences already recorded in this episode", "\n", "", "if", "seq_name", "in", "self", ".", "captured_videos", ":", "\n", "                ", "continue", "\n", "\n", "# if first transition was achieved, start tracking sequence", "\n", "", "st", ",", "ac", ",", "nst", "=", "self", ".", "sequences", "[", "seq_name", "]", "[", "0", "]", "\n", "if", "st", "==", "s", "and", "ac", "==", "a", "and", "nst", "==", "ns", ":", "\n", "                ", "self", ".", "_start_tracking", "(", "seq_name", ",", "t", ",", "obs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer.finalize_analysis": [[167, 192], ["sequences.SequencesExplainer.candidate_highlights.items", "enumerate", "os.path.join", "pandas.DataFrame", "pandas.DataFrame.to_csv", "enumerate", "sequences.SequencesExplainer.episodes_record_infos[].sort", "collections.deque", "range", "sequences.SequencesExplainer.episodes_record_infos[].append", "sequences_infos.append"], "methods", ["None"], ["", "", "", "def", "finalize_analysis", "(", "self", ")", ":", "\n", "\n", "        ", "sequences_infos", "=", "[", "]", "\n", "\n", "# organizes recordings by episode and time-step", "\n", "self", ".", "episodes_record_infos", "=", "[", "[", "]", "for", "_", "in", "range", "(", "self", ".", "e", "+", "1", ")", "]", "\n", "for", "seq_name", ",", "record_infos", "in", "self", ".", "candidate_highlights", ".", "items", "(", ")", ":", "\n", "            ", "for", "idx", ",", "record_info", "in", "enumerate", "(", "record_infos", ")", ":", "\n", "# retrieves highlight record info", "\n", "                ", "obs", ",", "initial_time_step", ",", "final_time_step", ",", "episode", "=", "record_info", "\n", "\n", "# adds record info to list", "\n", "self", ".", "episodes_record_infos", "[", "episode", "]", ".", "append", "(", "(", "initial_time_step", ",", "final_time_step", ",", "seq_name", ",", "idx", ")", ")", "\n", "sequences_infos", ".", "append", "(", "[", "seq_name", ",", "idx", ",", "episode", ",", "initial_time_step", ",", "final_time_step", "]", ")", "\n", "\n", "# sorts and converts lists to queues", "\n", "", "", "for", "episode", ",", "record_infos", "in", "enumerate", "(", "self", ".", "episodes_record_infos", ")", ":", "\n", "            ", "self", ".", "episodes_record_infos", "[", "episode", "]", ".", "sort", "(", "key", "=", "lambda", "i", ":", "i", "[", "0", "]", ")", "\n", "self", ".", "episodes_record_infos", "[", "episode", "]", "=", "deque", "(", "self", ".", "episodes_record_infos", "[", "episode", "]", ")", "\n", "\n", "# save highlight frames to csv file in format (aspect, idx, episode, frame_start, frame_end)", "\n", "", "file_name", "=", "join", "(", "self", ".", "output_dir", ",", "'highlights.csv'", ")", "\n", "df", "=", "pd", ".", "DataFrame", "(", "sequences_infos", ",", "\n", "columns", "=", "(", "'sequence'", ",", "'idx'", ",", "'episode'", ",", "'initial time-step'", ",", "'final time-step'", ")", ")", "\n", "df", ".", "to_csv", "(", "file_name", ",", "index", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer.new_explain_episode": [[193, 203], ["super().new_explain_episode", "len", "sequences.SequencesExplainer._set_collect_frames"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.new_explain_episode", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer._set_collect_frames"], ["", "def", "new_explain_episode", "(", "self", ",", "e", ",", "length", ")", ":", "\n", "        ", "super", "(", ")", ".", "new_explain_episode", "(", "e", ",", "length", ")", "\n", "\n", "self", ".", "time_step_frames_buffer", "=", "[", "]", "\n", "self", ".", "cur_time_step_frames", "=", "[", "]", "\n", "\n", "# activates frame recording only if episode contains highlight from first time-step", "\n", "if", "len", "(", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", ")", ">", "0", ":", "\n", "            ", "initial_time_step", ",", "*", "_", "=", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", "[", "0", "]", "\n", "self", ".", "_set_collect_frames", "(", "initial_time_step", "==", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer.update_explanation": [[204, 236], ["sequences.SequencesExplainer._is_collecting_frames", "sequences.SequencesExplainer.time_step_frames_buffer.append", "sequences.SequencesExplainer._set_collect_frames", "sequences.SequencesExplainer.capture_frame", "len", "sequences.SequencesExplainer.episodes_record_infos[].popleft", "len", "sequences.SequencesExplainer._set_collect_frames", "range", "len"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer._is_collecting_frames", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer._set_collect_frames", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.capture_frame", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer._set_collect_frames"], ["", "", "def", "update_explanation", "(", "self", ",", "t", ",", "obs", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "# captures an additional frame", "\n", "        ", "if", "self", ".", "_is_collecting_frames", "(", ")", ":", "\n", "            ", "self", ".", "capture_frame", "(", ")", "\n", "\n", "# adds time-step frames to buffer", "\n", "", "self", ".", "time_step_frames_buffer", ".", "append", "(", "self", ".", "cur_time_step_frames", ")", "\n", "self", ".", "cur_time_step_frames", "=", "[", "]", "\n", "\n", "# checks existing recording times", "\n", "while", "len", "(", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", ")", ">", "0", ":", "\n", "            ", "initial_time_step", ",", "final_time_step", ",", "seq_name", ",", "idx", "=", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", "[", "0", "]", "\n", "\n", "# if first record time hasn't been reached, no need to search further", "\n", "if", "final_time_step", ">", "t", ":", "\n", "                ", "break", "\n", "\n", "# pops info from queue", "\n", "", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", ".", "popleft", "(", ")", "\n", "\n", "# adds frames to highlight list for this sequence", "\n", "if", "seq_name", "not", "in", "self", ".", "highlights_frames", ":", "\n", "                ", "self", ".", "highlights_frames", "[", "seq_name", "]", "=", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "self", ".", "candidate_highlights", "[", "seq_name", "]", ")", ")", "]", "\n", "", "self", ".", "highlights_frames", "[", "seq_name", "]", "[", "idx", "]", "=", "self", ".", "time_step_frames_buffer", "[", "initial_time_step", ":", "final_time_step", "+", "1", "]", "\n", "\n", "# checks if frame recording needs to be activated", "\n", "", "self", ".", "_set_collect_frames", "(", "False", ")", "\n", "if", "len", "(", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", ")", ">", "0", ":", "\n", "            ", "initial_time_step", ",", "*", "_", "=", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", "[", "0", "]", "\n", "if", "t", ">=", "initial_time_step", "-", "1", ":", "\n", "                ", "self", ".", "_set_collect_frames", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer.close": [[237, 248], ["sequences.SequencesExplainer.highlights_frames.keys", "print", "enumerate", "os.path.join", "sequences.SequencesExplainer._create_highlight", "sequences.SequencesExplainer._record_video"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._create_highlight", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._record_video"], ["", "", "", "def", "close", "(", "self", ")", ":", "\n", "\n", "# records all highlights to video files", "\n", "        ", "for", "seq_name", "in", "self", ".", "highlights_frames", ".", "keys", "(", ")", ":", "\n", "            ", "print", "(", "'Creating {} videos...'", ".", "format", "(", "seq_name", ")", ")", "\n", "\n", "# creates faded highlight and records individual highlight video", "\n", "for", "idx", ",", "time_steps_frames", "in", "enumerate", "(", "self", ".", "highlights_frames", "[", "seq_name", "]", ")", ":", "\n", "                ", "file_name", "=", "join", "(", "self", ".", "output_dir", ",", "'{}-video{}'", ".", "format", "(", "seq_name", ",", "idx", ")", ")", "\n", "highlight", "=", "self", ".", "_create_highlight", "(", "time_steps_frames", ")", "\n", "self", ".", "_record_video", "(", "file_name", ",", "highlight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer._new_frame": [[249, 252], ["sequences.SequencesExplainer.cur_time_step_frames.append"], "methods", ["None"], ["", "", "", "def", "_new_frame", "(", "self", ",", "frame", ")", ":", "\n", "# adds frame to the current time-step list", "\n", "        ", "self", ".", "cur_time_step_frames", ".", "append", "(", "frame", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer._start_tracking": [[253, 257], ["max"], "methods", ["None"], ["", "def", "_start_tracking", "(", "self", ",", "name", ",", "start_time", ",", "obs", ")", ":", "\n", "        ", "self", ".", "active_sequences", "[", "name", "]", "=", "(", "obs", ",", "max", "(", "0", ",", "start_time", "-", "self", ".", "additional_time_steps", ")", ")", "\n", "self", ".", "active_sequences_idxs", "[", "name", "]", "=", "0", "\n", "self", ".", "active_sequences_between_states", "[", "name", "]", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer._stop_tracking": [[258, 262], ["None"], "methods", ["None"], ["", "def", "_stop_tracking", "(", "self", ",", "name", ")", ":", "\n", "        ", "del", "self", ".", "active_sequences", "[", "name", "]", "\n", "del", "self", ".", "active_sequences_idxs", "[", "name", "]", "\n", "del", "self", ".", "active_sequences_between_states", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer.get_sequence_name": [[263, 273], ["trans_seq.append"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_sequence_name", "(", "seq_idx", ",", "seq_info", ")", ":", "\n", "        ", "s", ",", "_", ",", "seq", ",", "_", "=", "seq_info", "\n", "name", "=", "'#{}-s{}'", ".", "format", "(", "seq_idx", ",", "s", ")", "\n", "trans_seq", "=", "[", "]", "\n", "for", "a", ",", "ns", "in", "seq", ":", "\n", "            ", "name", "+=", "'-a{}-s{}'", ".", "format", "(", "a", ",", "ns", ")", "\n", "trans_seq", ".", "append", "(", "(", "s", ",", "a", ",", "ns", ")", ")", "\n", "s", "=", "ns", "\n", "", "return", "name", ",", "trans_seq", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer.get_sequence_file_name": [[274, 277], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_sequence_file_name", "(", "seq_name", ",", "video_num", ")", ":", "\n", "        ", "return", "'{}-video{}.{}'", ".", "format", "(", "seq_name", ",", "video_num", ",", "VIDEO_EXTENSION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer._get_seq_distances": [[278, 306], ["numpy.zeros", "range", "len", "range", "len", "len", "len", "abs", "sequences.SequencesExplainer.helper.get_observation_dissimilarity"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_observation_dissimilarity"], ["", "def", "_get_seq_distances", "(", "self", ",", "seq_name", ",", "new_seq_info", ")", ":", "\n", "        ", "\"\"\"\n        Creates a table with the dissimilarities between all sequences of the given name.\n        :param str seq_name: the name of the sequence.\n        :param tuple new_seq_info: the information about the new candidate sequence in the form\n        (seq_obs, initial_time_step, final_time_step, episode).\n        :rtype: np.ndarray\n        :return: a table with the dissimilarities between all sequences.\n        \"\"\"", "\n", "\n", "seq_infos", "=", "self", ".", "candidate_highlights", "[", "seq_name", "]", "+", "[", "new_seq_info", "]", "\n", "obs_distances", "=", "np", ".", "zeros", "(", "(", "len", "(", "seq_infos", ")", ",", "len", "(", "seq_infos", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "seq_infos", ")", ")", ":", "\n", "            ", "len_i", "=", "seq_infos", "[", "i", "]", "[", "2", "]", "-", "seq_infos", "[", "i", "]", "[", "1", "]", "\n", "obs_i", "=", "seq_infos", "[", "i", "]", "[", "0", "]", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ",", "len", "(", "seq_infos", ")", ")", ":", "\n", "                ", "len_j", "=", "seq_infos", "[", "j", "]", "[", "2", "]", "-", "seq_infos", "[", "j", "]", "[", "1", "]", "\n", "obs_j", "=", "seq_infos", "[", "j", "]", "[", "0", "]", "\n", "\n", "# first criterion is diff in sequence length", "\n", "dist", "=", "abs", "(", "len_i", "-", "len_j", ")", "/", "self", ".", "config", ".", "max_steps_per_episode", "\n", "\n", "# second is diff of observation of first step in sequence", "\n", "if", "dist", "==", "0", ":", "\n", "                    ", "dist", "=", "self", ".", "helper", ".", "get_observation_dissimilarity", "(", "obs_i", ",", "obs_j", ")", "\n", "\n", "", "obs_distances", "[", "i", "]", "[", "j", "]", "=", "dist", "\n", "", "", "return", "obs_distances", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer._get_diversity": [[307, 329], ["range", "range", "min", "max"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_get_diversity", "(", "distances", ",", "exclude_idx", ")", ":", "\n", "        ", "\"\"\"\n        Calculates the diversity of the given observations.\n        :param np.ndarray distances: a table with the dissimilarities between all sequences.\n        :param int exclude_idx: the index of the sequence to be excluded from the diversity calculation.\n        :rtype: float\n        :return: a number in [0,1] indicating the diversity of the sequences, given by the product between the\n        maximum and the minimum sequence distance.\n        \"\"\"", "\n", "min_dist", "=", "2.", "\n", "max_dist", "=", "-", "1.", "\n", "for", "i", "in", "range", "(", "distances", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "i", "==", "exclude_idx", ":", "\n", "                ", "continue", "\n", "", "for", "j", "in", "range", "(", "i", "+", "1", ",", "distances", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "if", "j", "==", "exclude_idx", ":", "\n", "                    ", "continue", "\n", "", "dist", "=", "distances", "[", "i", "]", "[", "j", "]", "\n", "min_dist", "=", "min", "(", "min_dist", ",", "dist", ")", "\n", "max_dist", "=", "max", "(", "max_dist", ",", "dist", ")", "\n", "", "", "return", "max_dist", "*", "min_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer._record_video": [[330, 341], ["interestingness_xrl.util.record_video", "numpy.savez_compressed"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.record_video"], ["", "def", "_record_video", "(", "self", ",", "file_name", ",", "frames", ",", "save_np_binary", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Saves the given frames into a video file and (optionally) a numpy binary compressed file.\n        :param str file_name: the path to the file, without extension.\n        :param list frames: a list containing the sequence of frames to be saved.\n        :param bool save_np_binary: whether to save the frames into a numpy binary file.\n        :return:\n        \"\"\"", "\n", "if", "save_np_binary", ":", "\n", "            ", "np", ".", "savez_compressed", "(", "'{}.{}'", ".", "format", "(", "file_name", ",", "NUMPY_EXTENSION", ")", ",", "frames", ")", "\n", "", "record_video", "(", "frames", ",", "'{}.{}'", ".", "format", "(", "file_name", ",", "VIDEO_EXTENSION", ")", ",", "self", ".", "fps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer._create_highlight": [[342, 369], ["numpy.array", "numpy.sum", "numpy.sum", "numpy.sum", "len", "frame_list.append", "interestingness_xrl.explainability.explanation.fade_frame", "len", "interestingness_xrl.explainability.explanation.fade_frame"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.fade_frame", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.fade_frame"], ["", "def", "_create_highlight", "(", "self", ",", "time_steps_frames", ")", ":", "\n", "        ", "\"\"\"\n        Creates a fade-in / fade-out frame sequence from the given frame array.\n        :param list time_steps_frames: the list containing all time-steps frames.\n        :rtype: list\n        :return: a list of frames with fade-in / fade-out effects.\n        \"\"\"", "\n", "num_frames", "=", "np", ".", "array", "(", "[", "len", "(", "time_step_frames", ")", "for", "time_step_frames", "in", "time_steps_frames", "]", ")", "\n", "total_frames", "=", "np", ".", "sum", "(", "num_frames", ")", "\n", "fade_in_frames", "=", "np", ".", "sum", "(", "num_frames", "[", ":", "self", ".", "additional_time_steps", "]", ")", "\n", "fade_out_frames", "=", "np", ".", "sum", "(", "num_frames", "[", "len", "(", "num_frames", ")", "-", "self", ".", "additional_time_steps", ":", "]", ")", "\n", "\n", "i", "=", "0", "\n", "frame_list", "=", "[", "]", "\n", "for", "time_step_frames", "in", "time_steps_frames", ":", "\n", "            ", "for", "frame", "in", "time_step_frames", ":", "\n", "# checks if frame is simply to be copied to the video or faded", "\n", "                ", "if", "i", "<", "fade_in_frames", ":", "\n", "                    ", "frame", "=", "fade_frame", "(", "frame", ",", "1", "-", "(", "i", "/", "fade_in_frames", ")", ")", "\n", "", "elif", "i", ">=", "total_frames", "-", "fade_out_frames", ":", "\n", "                    ", "frame", "=", "fade_frame", "(", "frame", ",", "(", "i", "-", "(", "total_frames", "-", "fade_out_frames", ")", ")", "/", "fade_out_frames", ")", "\n", "\n", "# adds frame to list", "\n", "", "frame_list", ".", "append", "(", "frame", ")", "\n", "i", "+=", "1", "\n", "\n", "", "", "return", "frame_list", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.tracker.AspectsTrackerExplainer.__init__": [[20, 40], ["interestingness_xrl.explainability.explanation.Explainer.__init__", "pygame.init", "range"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "env", ",", "helper", ",", "full_analysis", ",", "output_dir", ",", "recorded_episodes", ",", "fps", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new aspects tracker explainer.\n        :param Env env: the Gym environment to be tracked, from which the frames are extracted.\n        :param ScenarioHelper helper: the helper containing all necessary methods to extract information from the env.\n        :param FullAnalysis full_analysis: the full analysis over the agent's history of interaction with the environment.\n        :param str output_dir: the path to the output directory in which to save the videos.\n        :param list recorded_episodes: the episodes in which episodes are to be recorded.\n        :param int fps: the frames-per-second at which videos are to be recorded.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "env", ",", "helper", ",", "full_analysis", ",", "output_dir", ",", "recorded_episodes", ")", "\n", "\n", "self", ".", "fps", "=", "fps", "\n", "\n", "# initializes structures", "\n", "pygame", ".", "init", "(", ")", "\n", "self", ".", "video_recorders", "=", "{", "}", "\n", "self", ".", "maps", "=", "{", "}", "\n", "self", ".", "aspects_cache", "=", "[", "None", "for", "_", "in", "range", "(", "self", ".", "config", ".", "num_states", ")", "]", "\n", "self", ".", "cur_time_step_frames", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.tracker.AspectsTrackerExplainer.new_analysis_episode": [[41, 69], ["super().new_analysis_episode", "tracker.AspectsTrackerExplainer.close", "tracker.AspectsTrackerExplainer.full_analysis.get_interestingness_names_grouped().items", "tracker.AspectsTrackerExplainer.env.render", "os.path.join", "tracker.AspectsTrackerExplainer.full_analysis.get_interestingness_names_grouped", "os.path.exists", "os.makedirs", "os.path.join", "gym.wrappers.monitoring.video_recorder.ImageEncoder", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.new_analysis_episode", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.close", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.get_interestingness_names_grouped"], ["", "def", "new_analysis_episode", "(", "self", ",", "e", ",", "length", ")", ":", "\n", "        ", "super", "(", ")", ".", "new_analysis_episode", "(", "e", ",", "length", ")", "\n", "\n", "# finalize previous episode videos", "\n", "self", ".", "close", "(", ")", "\n", "\n", "# ignores if not recording episode", "\n", "if", "e", "not", "in", "self", ".", "recorded_episodes", ":", "\n", "            ", "self", ".", "env", ".", "env", ".", "monitor", "=", "None", "\n", "return", "\n", "", "self", ".", "env", ".", "env", ".", "monitor", "=", "self", ".", "monitor", "\n", "\n", "# gets shape from rendered frame", "\n", "video_frame_size", "=", "self", ".", "env", ".", "render", "(", "mode", "=", "'rgb_array'", ")", ".", "shape", "\n", "self", ".", "video_recorders", "=", "{", "}", "\n", "for", "group", ",", "aspect_names", "in", "self", ".", "full_analysis", ".", "get_interestingness_names_grouped", "(", ")", ".", "items", "(", ")", ":", "\n", "# creates output paths", "\n", "            ", "dir_path", "=", "join", "(", "self", ".", "output_dir", ",", "group", ")", "\n", "if", "not", "exists", "(", "dir_path", ")", ":", "\n", "                ", "makedirs", "(", "dir_path", ")", "\n", "\n", "# creates video recorders and maps for each interestingness aspect", "\n", "", "for", "aspect_name", "in", "aspect_names", ":", "\n", "                ", "file_path", "=", "join", "(", "dir_path", ",", "'{}-e-{}.mp4'", ".", "format", "(", "aspect_name", ",", "e", ")", ")", "\n", "self", ".", "video_recorders", "[", "aspect_name", "]", "=", "ImageEncoder", "(", "file_path", ",", "video_frame_size", ",", "self", ".", "fps", ",", "self", ".", "fps", ")", "\n", "self", ".", "maps", "[", "aspect_name", "]", "=", "np", ".", "zeros", "(", "self", ".", "config", ".", "env_size", ",", "np", ".", "int", ")", "\n", "\n", "", "", "self", ".", "cur_time_step_frames", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.tracker.AspectsTrackerExplainer._new_frame": [[70, 73], ["tracker.AspectsTrackerExplainer.cur_time_step_frames.append"], "methods", ["None"], ["", "def", "_new_frame", "(", "self", ",", "frame", ")", ":", "\n", "# adds frame to the current time-step list", "\n", "        ", "self", ".", "cur_time_step_frames", ".", "append", "(", "frame", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.tracker.AspectsTrackerExplainer.update_analysis": [[74, 106], ["print", "tracker.AspectsTrackerExplainer.capture_frame", "tracker.AspectsTrackerExplainer._reset_maps", "range", "tracker.AspectsTrackerExplainer.maps.keys", "range", "tracker.AspectsTrackerExplainer._overlay_time_step_frames", "tracker.AspectsTrackerExplainer.helper.get_cell_coordinates", "tracker.AspectsTrackerExplainer.helper.get_features_from_observation", "interestingness_xrl.learning.get_discretized_index", "tracker.AspectsTrackerExplainer._get_aspects", "tracker.AspectsTrackerExplainer._get_video_name_key"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.capture_frame", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.tracker.AspectsTrackerExplainer._reset_maps", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.tracker.AspectsTrackerExplainer._overlay_time_step_frames", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_cell_coordinates", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_from_observation", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_discretized_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.tracker.AspectsTrackerExplainer._get_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.tracker.AspectsTrackerExplainer._get_video_name_key"], ["", "def", "update_analysis", "(", "self", ",", "t", ",", "obs", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "# ignores episodes not recorded", "\n", "        ", "if", "self", ".", "e", "not", "in", "self", ".", "recorded_episodes", ":", "\n", "            ", "return", "\n", "\n", "", "print", "(", "'t: {}'", ".", "format", "(", "t", ")", ")", "\n", "\n", "# captures an additional frame", "\n", "self", ".", "capture_frame", "(", ")", "\n", "\n", "# gets maps for each aspect by placing agent in each possible location", "\n", "self", ".", "_reset_maps", "(", ")", "\n", "for", "col", "in", "range", "(", "self", ".", "num_cols", ")", ":", "\n", "            ", "for", "row", "in", "range", "(", "self", ".", "num_rows", ")", ":", "\n", "                ", "x", ",", "y", "=", "self", ".", "helper", ".", "get_cell_coordinates", "(", "col", ",", "row", ")", "\n", "\n", "# gets state from observation in desired location", "\n", "obs_vec", "=", "self", ".", "helper", ".", "get_features_from_observation", "(", "obs", ",", "x", ",", "y", ")", "\n", "s", "=", "get_discretized_index", "(", "obs_vec", ",", "self", ".", "feats_nbins", ")", "\n", "\n", "# for each interesting aspect found for this state (location)", "\n", "for", "aspect_name", "in", "self", ".", "_get_aspects", "(", "s", ")", ":", "\n", "# increment counter for respective map", "\n", "                    ", "self", ".", "maps", "[", "self", ".", "_get_video_name_key", "(", "aspect_name", ")", "]", "[", "col", "]", "[", "row", "]", "+=", "1", "\n", "\n", "# overlays maps for each aspect tracked for each frame", "\n", "", "", "", "for", "aspect_name", "in", "self", ".", "maps", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "_overlay_time_step_frames", "(", "aspect_name", ")", "\n", "\n", "# resets frame buffer", "\n", "", "self", ".", "cur_time_step_frames", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.tracker.AspectsTrackerExplainer._get_aspects": [[107, 116], ["range", "tracker.AspectsTrackerExplainer.full_analysis.get_interesting_aspects_grouped().items", "aspects.extend", "tracker.AspectsTrackerExplainer.full_analysis.get_interesting_aspects_grouped"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.get_interesting_aspects_grouped"], ["", "def", "_get_aspects", "(", "self", ",", "s", ")", ":", "\n", "        ", "if", "self", ".", "aspects_cache", "[", "s", "]", "is", "None", ":", "\n", "# collects aspects found for the given state (location) and any possible action", "\n", "            ", "aspects", "=", "[", "]", "\n", "for", "a", "in", "range", "(", "self", ".", "config", ".", "num_actions", ")", ":", "\n", "                ", "for", "_", ",", "aspect_names", "in", "self", ".", "full_analysis", ".", "get_interesting_aspects_grouped", "(", "s", ",", "a", ",", "np", ".", "nan", ",", "-", "1", ")", ".", "items", "(", ")", ":", "\n", "                    ", "aspects", ".", "extend", "(", "aspect_names", ")", "\n", "", "", "self", ".", "aspects_cache", "[", "s", "]", "=", "aspects", "\n", "", "return", "self", ".", "aspects_cache", "[", "s", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.tracker.AspectsTrackerExplainer._overlay_time_step_frames": [[117, 136], ["pygame.Surface", "range", "range", "interestingness_xrl.explainability.explanation.overlay_frame", "tracker.AspectsTrackerExplainer.video_recorders[].capture_frame", "[].item", "pygame.Surface.fill", "pygame.Rect"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.overlay_frame", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.capture_frame"], ["", "def", "_overlay_time_step_frames", "(", "self", ",", "aspect_name", ")", ":", "\n", "\n", "# creates the overlay surface with the colored squares from the map values", "\n", "        ", "overlay_surf", "=", "pygame", ".", "Surface", "(", "\n", "[", "self", ".", "num_cols", "*", "self", ".", "cell_width", ",", "self", ".", "num_rows", "*", "self", ".", "cell_height", "]", ",", "pygame", ".", "SRCALPHA", ")", "\n", "for", "c", "in", "range", "(", "self", ".", "num_cols", ")", ":", "\n", "            ", "x", "=", "c", "*", "self", ".", "cell_width", "\n", "for", "r", "in", "range", "(", "self", ".", "num_rows", ")", ":", "\n", "                ", "y", "=", "r", "*", "self", ".", "cell_height", "\n", "alpha", "=", "self", ".", "maps", "[", "aspect_name", "]", "[", "c", "]", "[", "r", "]", ".", "item", "(", ")", "\n", "if", "alpha", ">", "0", ":", "\n", "                    ", "alpha", "+=", "MIN_ALPHA", "\n", "", "color", "=", "HIGHLIGHT_COLOR", "+", "(", "alpha", ",", ")", "\n", "overlay_surf", ".", "fill", "(", "color", ",", "pygame", ".", "Rect", "(", "x", ",", "y", ",", "x", "+", "self", ".", "cell_width", ",", "y", "+", "self", ".", "cell_height", ")", ")", "\n", "\n", "# overlays map in each frame for this time-step", "\n", "", "", "for", "frame", "in", "self", ".", "cur_time_step_frames", ":", "\n", "            ", "frame", "=", "overlay_frame", "(", "frame", ",", "overlay_surf", ",", "(", "0", ",", "self", ".", "cell_height", ")", ")", "\n", "self", ".", "video_recorders", "[", "aspect_name", "]", ".", "capture_frame", "(", "frame", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.tracker.AspectsTrackerExplainer._reset_maps": [[137, 141], ["list", "tracker.AspectsTrackerExplainer.maps.keys", "numpy.zeros"], "methods", ["None"], ["", "", "def", "_reset_maps", "(", "self", ")", ":", "\n", "# zero all aspect maps", "\n", "        ", "for", "aspect_name", "in", "list", "(", "self", ".", "maps", ".", "keys", "(", ")", ")", ":", "\n", "            ", "self", ".", "maps", "[", "aspect_name", "]", "=", "np", ".", "zeros", "(", "self", ".", "config", ".", "env_size", ",", "np", ".", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.tracker.AspectsTrackerExplainer._get_video_name_key": [[142, 147], ["next", "print", "tracker.AspectsTrackerExplainer.video_recorders.keys"], "methods", ["None"], ["", "", "def", "_get_video_name_key", "(", "self", ",", "aspect_name", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "next", "(", "key", "for", "key", "in", "self", ".", "video_recorders", ".", "keys", "(", ")", "if", "key", "in", "aspect_name", ")", "\n", "", "except", "StopIteration", "as", "e", ":", "\n", "            ", "print", "(", "e", ")", "# should not get here", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.tracker.AspectsTrackerExplainer.close": [[148, 153], ["tracker.AspectsTrackerExplainer.video_recorders.values", "video_recorder.close"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.close"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "# close all videos", "\n", "        ", "for", "video_recorder", "in", "self", ".", "video_recorders", ".", "values", "(", ")", ":", "\n", "            ", "video_recorder", ".", "close", "(", ")", "\n", "", "self", ".", "video_recorders", "=", "{", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer.__init__": [[24, 61], ["interestingness_xrl.explainability.explanation.Explainer.__init__", "int", "set", "collections.deque", "highlights.HighlightsExplainer.full_analysis.get_interestingness_names_grouped().items", "os.path.join", "highlights.HighlightsExplainer.full_analysis.get_interestingness_names_grouped", "os.path.exists", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.get_interestingness_names_grouped"], ["def", "__init__", "(", "self", ",", "env", ",", "helper", ",", "full_analysis", ",", "output_dir", ",", "recorded_episodes", ",", "\n", "fps", ",", "record_time_steps", ",", "max_highlights_per_aspect", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new highlights recorder.\n        :param Env env: the Gym environment to be tracked, from which the frames are extracted.\n        :param ScenarioHelper helper: the helper containing all necessary methods to extract information from the env.\n        :param FullAnalysis full_analysis: the full analysis over the agent's history of interaction with the environment.\n        :param str output_dir: the path to the output directory in which to save the videos.\n        :param list recorded_episodes: the episodes in which episodes are to be recorded.\n        :param float fps: the frames-per-second at which videos are to be recorded.\n        :param int record_time_steps: the number of environment time-steps to be recorded in each video.\n        :param int max_highlights_per_aspect: the maximum number of highlights to be recorded for the same file name.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "env", ",", "helper", ",", "full_analysis", ",", "output_dir", ",", "recorded_episodes", ")", "\n", "\n", "self", ".", "record_time_steps", "=", "record_time_steps", "\n", "self", ".", "timer_time_steps", "=", "int", "(", "(", "record_time_steps", "-", "1", ")", "/", "2", ")", "\n", "self", ".", "max_highlights_per_aspect", "=", "max_highlights_per_aspect", "\n", "self", ".", "fps", "=", "fps", "\n", "\n", "# initializes structures", "\n", "self", ".", "candidate_highlights", "=", "{", "}", "\n", "self", ".", "active_aspects", "=", "set", "(", ")", "\n", "self", ".", "time_step_frames_buffer", "=", "deque", "(", "maxlen", "=", "record_time_steps", ")", "\n", "self", ".", "cur_time_step_frames", "=", "[", "]", "\n", "self", ".", "episodes_record_infos", "=", "[", "]", "\n", "self", ".", "highlights_frames", "=", "{", "}", "\n", "\n", "# creates output paths and group dictionary", "\n", "self", ".", "aspect_group", "=", "{", "}", "\n", "for", "group", ",", "aspect_names", "in", "self", ".", "full_analysis", ".", "get_interestingness_names_grouped", "(", ")", ".", "items", "(", ")", ":", "\n", "            ", "dir_path", "=", "join", "(", "self", ".", "output_dir", ",", "group", ")", "\n", "if", "not", "exists", "(", "dir_path", ")", ":", "\n", "                ", "makedirs", "(", "dir_path", ")", "\n", "\n", "", "for", "aspect_name", "in", "aspect_names", ":", "\n", "                ", "self", ".", "aspect_group", "[", "aspect_name", "]", "=", "group", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer.new_analysis_episode": [[62, 69], ["super().new_analysis_episode", "highlights.HighlightsExplainer._set_collect_frames", "set"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.new_analysis_episode", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer._set_collect_frames"], ["", "", "", "def", "new_analysis_episode", "(", "self", ",", "e", ",", "length", ")", ":", "\n", "        ", "super", "(", ")", ".", "new_analysis_episode", "(", "e", ",", "length", ")", "\n", "\n", "# turns-off frame collection for analysis", "\n", "self", ".", "_set_collect_frames", "(", "False", ")", "\n", "\n", "self", ".", "active_aspects", "=", "set", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer.update_analysis": [[70, 126], ["highlights.HighlightsExplainer.full_analysis.get_interesting_aspects_grouped().items", "highlights.HighlightsExplainer.candidate_highlights.items", "highlights.HighlightsExplainer.full_analysis.get_interesting_aspects_grouped", "highlights.HighlightsExplainer.active_aspects.add", "enumerate", "len", "highlights.HighlightsExplainer._get_obs_distances", "highlights.HighlightsExplainer._get_obs_diversity", "range", "highlights.HighlightsExplainer._get_obs_diversity", "len", "highlights.HighlightsExplainer.candidate_highlights[].append", "highlights.HighlightsExplainer.active_aspects.remove"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.get_interesting_aspects_grouped", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._get_obs_distances", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._get_obs_diversity", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._get_obs_diversity"], ["", "def", "update_analysis", "(", "self", ",", "t", ",", "obs", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "# checks interesting elements for current state and adds each to recording times queue", "\n", "        ", "for", "_", ",", "aspects", "in", "self", ".", "full_analysis", ".", "get_interesting_aspects_grouped", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ".", "items", "(", ")", ":", "\n", "            ", "for", "aspect_name", "in", "aspects", ":", "\n", "\n", "# gets final (record) time-step", "\n", "                ", "initial_time_step", "=", "t", "-", "self", ".", "timer_time_steps", "\n", "final_time_step", "=", "t", "+", "self", ".", "timer_time_steps", "\n", "\n", "# ignore if there is an active highlight being recorded for this aspect or if short length", "\n", "if", "aspect_name", "in", "self", ".", "active_aspects", "or", "final_time_step", "<", "self", ".", "record_time_steps", "or", "final_time_step", ">=", "self", ".", "e_length", ":", "\n", "                    ", "continue", "\n", "\n", "# checks max highlight budget for this aspect and whether to replace some highlight with a better one", "\n", "", "highlight_idx", "=", "len", "(", "self", ".", "candidate_highlights", "[", "aspect_name", "]", ")", "if", "aspect_name", "in", "self", ".", "candidate_highlights", "else", "0", "\n", "if", "highlight_idx", "==", "self", ".", "max_highlights_per_aspect", ":", "\n", "\n", "# gets distances between all candidate highlight observations", "\n", "                    ", "obs_list", "=", "[", "obs", "for", "obs", ",", "*", "_", "in", "self", ".", "candidate_highlights", "[", "aspect_name", "]", "]", "+", "[", "obs", "]", "\n", "obs_distances", "=", "self", ".", "_get_obs_distances", "(", "obs_list", ")", "\n", "\n", "# iteratively tries to improve diversity by replacing one of the highlights", "\n", "highlight_idx", "=", "-", "1", "\n", "max_diversity", "=", "self", ".", "_get_obs_diversity", "(", "obs_distances", ",", "self", ".", "max_highlights_per_aspect", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "max_highlights_per_aspect", ")", ":", "\n", "                        ", "diversity", "=", "self", ".", "_get_obs_diversity", "(", "obs_distances", ",", "i", ")", "\n", "if", "diversity", ">", "max_diversity", ":", "\n", "                            ", "max_diversity", "=", "diversity", "\n", "highlight_idx", "=", "i", "\n", "\n", "# if there was no improvement, ignore highlight of this observation", "\n", "", "", "if", "highlight_idx", "==", "-", "1", ":", "\n", "                        ", "continue", "\n", "\n", "# adds highlight recording info to the list at the correct index", "\n", "", "", "if", "aspect_name", "not", "in", "self", ".", "candidate_highlights", ":", "\n", "                    ", "self", ".", "candidate_highlights", "[", "aspect_name", "]", "=", "[", "None", "]", "\n", "", "elif", "highlight_idx", "==", "len", "(", "self", ".", "candidate_highlights", "[", "aspect_name", "]", ")", ":", "\n", "                    ", "self", ".", "candidate_highlights", "[", "aspect_name", "]", ".", "append", "(", "None", ")", "\n", "\n", "", "self", ".", "candidate_highlights", "[", "aspect_name", "]", "[", "highlight_idx", "]", "=", "(", "obs", ",", "initial_time_step", ",", "final_time_step", ",", "self", ".", "e", ")", "\n", "self", ".", "active_aspects", ".", "add", "(", "aspect_name", ")", "\n", "\n", "# checks whether aspects can be released if already finished recording in this episode", "\n", "", "", "for", "aspect_name", ",", "record_infos", "in", "self", ".", "candidate_highlights", ".", "items", "(", ")", ":", "\n", "            ", "if", "aspect_name", "in", "self", ".", "active_aspects", ":", "\n", "                ", "for", "idx", ",", "record_info", "in", "enumerate", "(", "record_infos", ")", ":", "\n", "                    ", "_", ",", "_", ",", "final_time_step", ",", "episode", "=", "record_info", "\n", "if", "episode", "==", "self", ".", "e", "and", "final_time_step", "<=", "t", ":", "\n", "                        ", "self", ".", "active_aspects", ".", "remove", "(", "aspect_name", ")", "\n", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer.finalize_analysis": [[127, 152], ["highlights.HighlightsExplainer.candidate_highlights.items", "enumerate", "os.path.join", "pandas.DataFrame", "pandas.DataFrame.to_csv", "enumerate", "highlights.HighlightsExplainer.episodes_record_infos[].sort", "collections.deque", "range", "highlights.HighlightsExplainer.episodes_record_infos[].append", "highlights_infos.append"], "methods", ["None"], ["", "", "", "", "", "def", "finalize_analysis", "(", "self", ")", ":", "\n", "\n", "        ", "highlights_infos", "=", "[", "]", "\n", "\n", "# organizes recordings by episode and time-step", "\n", "self", ".", "episodes_record_infos", "=", "[", "[", "]", "for", "_", "in", "range", "(", "self", ".", "e", "+", "1", ")", "]", "\n", "for", "aspect_name", ",", "record_infos", "in", "self", ".", "candidate_highlights", ".", "items", "(", ")", ":", "\n", "            ", "for", "idx", ",", "record_info", "in", "enumerate", "(", "record_infos", ")", ":", "\n", "# retrieves highlight record info", "\n", "                ", "obs", ",", "initial_time_step", ",", "final_time_step", ",", "episode", "=", "record_info", "\n", "\n", "# adds record info to list and data-frame", "\n", "self", ".", "episodes_record_infos", "[", "episode", "]", ".", "append", "(", "(", "initial_time_step", ",", "final_time_step", ",", "aspect_name", ",", "idx", ")", ")", "\n", "highlights_infos", ".", "append", "(", "[", "aspect_name", ",", "idx", ",", "episode", ",", "initial_time_step", ",", "final_time_step", "]", ")", "\n", "\n", "# sorts and converts lists to queues", "\n", "", "", "for", "episode", ",", "record_infos", "in", "enumerate", "(", "self", ".", "episodes_record_infos", ")", ":", "\n", "            ", "self", ".", "episodes_record_infos", "[", "episode", "]", ".", "sort", "(", "key", "=", "lambda", "i", ":", "i", "[", "0", "]", ")", "\n", "self", ".", "episodes_record_infos", "[", "episode", "]", "=", "deque", "(", "self", ".", "episodes_record_infos", "[", "episode", "]", ")", "\n", "\n", "# save highlight frames to csv file in format (aspect, idx, episode, frame_start, frame_end)", "\n", "", "file_name", "=", "join", "(", "self", ".", "output_dir", ",", "'highlights.csv'", ")", "\n", "df", "=", "pd", ".", "DataFrame", "(", "highlights_infos", ",", "\n", "columns", "=", "(", "'aspect'", ",", "'idx'", ",", "'episode'", ",", "'initial time-step'", ",", "'final time-step'", ")", ")", "\n", "df", ".", "to_csv", "(", "file_name", ",", "index", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer.new_explain_episode": [[153, 163], ["super().new_explain_episode", "collections.deque", "len", "highlights.HighlightsExplainer._set_collect_frames"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.new_explain_episode", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer._set_collect_frames"], ["", "def", "new_explain_episode", "(", "self", ",", "e", ",", "length", ")", ":", "\n", "        ", "super", "(", ")", ".", "new_explain_episode", "(", "e", ",", "length", ")", "\n", "\n", "self", ".", "time_step_frames_buffer", "=", "deque", "(", "maxlen", "=", "self", ".", "record_time_steps", ")", "\n", "self", ".", "cur_time_step_frames", "=", "[", "]", "\n", "\n", "# activates frame recording only if episode contains highlight from first time-step", "\n", "if", "len", "(", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", ")", ">", "0", ":", "\n", "            ", "initial_time_step", ",", "*", "_", "=", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", "[", "0", "]", "\n", "self", ".", "_set_collect_frames", "(", "initial_time_step", "==", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer.update_explanation": [[164, 197], ["highlights.HighlightsExplainer._is_collecting_frames", "highlights.HighlightsExplainer.time_step_frames_buffer.append", "list", "highlights.HighlightsExplainer._set_collect_frames", "highlights.HighlightsExplainer.capture_frame", "len", "highlights.HighlightsExplainer.episodes_record_infos[].popleft", "len", "highlights.HighlightsExplainer._set_collect_frames", "range", "len"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer._is_collecting_frames", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer._set_collect_frames", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.capture_frame", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer._set_collect_frames"], ["", "", "def", "update_explanation", "(", "self", ",", "t", ",", "obs", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "# captures an additional frame", "\n", "        ", "if", "self", ".", "_is_collecting_frames", "(", ")", ":", "\n", "            ", "self", ".", "capture_frame", "(", ")", "\n", "\n", "# adds time-step frames to buffer", "\n", "", "self", ".", "time_step_frames_buffer", ".", "append", "(", "self", ".", "cur_time_step_frames", ")", "\n", "self", ".", "cur_time_step_frames", "=", "[", "]", "\n", "time_steps_frames", "=", "list", "(", "self", ".", "time_step_frames_buffer", ")", "\n", "\n", "# checks existing recording times", "\n", "while", "len", "(", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", ")", ">", "0", ":", "\n", "            ", "initial_time_step", ",", "final_time_step", ",", "aspect_name", ",", "idx", "=", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", "[", "0", "]", "\n", "\n", "# if first record time hasn't been reached, no need to search further", "\n", "if", "final_time_step", ">", "t", ":", "\n", "                ", "break", "\n", "\n", "# pops info from queue", "\n", "", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", ".", "popleft", "(", ")", "\n", "\n", "# adds frames to highlight list for this aspect", "\n", "if", "aspect_name", "not", "in", "self", ".", "highlights_frames", ":", "\n", "                ", "self", ".", "highlights_frames", "[", "aspect_name", "]", "=", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "self", ".", "candidate_highlights", "[", "aspect_name", "]", ")", ")", "]", "\n", "", "self", ".", "highlights_frames", "[", "aspect_name", "]", "[", "idx", "]", "=", "time_steps_frames", "\n", "\n", "# checks if frame recording needs to be activated", "\n", "", "self", ".", "_set_collect_frames", "(", "False", ")", "\n", "if", "len", "(", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", ")", ">", "0", ":", "\n", "            ", "initial_time_step", ",", "*", "_", "=", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", "[", "0", "]", "\n", "if", "t", ">=", "initial_time_step", "-", "1", ":", "\n", "                ", "self", ".", "_set_collect_frames", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer.close": [[198, 218], ["highlights.HighlightsExplainer.highlights_frames.keys", "print", "highlights.HighlightsExplainer._get_aspect_group", "enumerate", "os.path.join", "highlights.HighlightsExplainer._record_video", "os.path.join", "highlights.HighlightsExplainer._create_highlight", "highlights.HighlightsExplainer._record_video", "highlights.extend"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._get_aspect_group", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._record_video", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._create_highlight", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._record_video"], ["", "", "", "def", "close", "(", "self", ")", ":", "\n", "\n", "# records all highlights to video files", "\n", "        ", "for", "aspect_name", "in", "self", ".", "highlights_frames", ".", "keys", "(", ")", ":", "\n", "            ", "print", "(", "'Creating {} videos...'", ".", "format", "(", "aspect_name", ")", ")", "\n", "\n", "group", "=", "self", ".", "_get_aspect_group", "(", "aspect_name", ")", "\n", "highlights", "=", "[", "]", "\n", "for", "idx", ",", "time_steps_frames", "in", "enumerate", "(", "self", ".", "highlights_frames", "[", "aspect_name", "]", ")", ":", "\n", "# creates faded highlight and records individual highlight video", "\n", "                ", "file_name", "=", "join", "(", "self", ".", "output_dir", ",", "group", ",", "'{}-video{}'", ".", "format", "(", "aspect_name", ",", "idx", ")", ")", "\n", "highlight", "=", "self", ".", "_create_highlight", "(", "time_steps_frames", ")", "\n", "self", ".", "_record_video", "(", "file_name", ",", "highlight", ")", "\n", "\n", "# adds highlight do list", "\n", "highlights", ".", "extend", "(", "highlight", ")", "\n", "\n", "# creates video with sequence of all highlights for aspect", "\n", "", "file_name", "=", "join", "(", "self", ".", "output_dir", ",", "group", ",", "'{}-compact'", ".", "format", "(", "aspect_name", ")", ")", "\n", "self", ".", "_record_video", "(", "file_name", ",", "highlights", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._new_frame": [[219, 222], ["highlights.HighlightsExplainer.cur_time_step_frames.append"], "methods", ["None"], ["", "", "def", "_new_frame", "(", "self", ",", "frame", ")", ":", "\n", "# adds frame to the current time-step list", "\n", "        ", "self", ".", "cur_time_step_frames", ".", "append", "(", "frame", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._get_aspect_group": [[223, 235], ["next", "print", "highlights.HighlightsExplainer.aspect_group.keys"], "methods", ["None"], ["", "def", "_get_aspect_group", "(", "self", ",", "aspect_name", ")", ":", "\n", "        ", "\"\"\"\n        Gets the name of the group to which thw given aspect belongs.\n        :param str aspect_name: the name of the interesting element.\n        :rtype: str\n        :return: the name of the group to which thw given aspect belongs.\n        \"\"\"", "\n", "try", ":", "\n", "            ", "aspect_key", "=", "next", "(", "key", "for", "key", "in", "self", ".", "aspect_group", ".", "keys", "(", ")", "if", "key", "in", "aspect_name", ")", "\n", "return", "self", ".", "aspect_group", "[", "aspect_key", "]", "\n", "", "except", "StopIteration", "as", "e", ":", "\n", "            ", "print", "(", "e", ")", "# should not get here", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._get_obs_distances": [[236, 248], ["numpy.zeros", "range", "len", "range", "len", "len", "len", "highlights.HighlightsExplainer.helper.get_observation_dissimilarity"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_observation_dissimilarity"], ["", "", "def", "_get_obs_distances", "(", "self", ",", "obs_list", ")", ":", "\n", "        ", "\"\"\"\n        Creates a table with the dissimilarities between all given observations.\n        :param list obs_list: a list with np.ndarray observations.\n        :rtype: np.ndarray\n        :return: a table with the dissimilarities between all given observations.\n        \"\"\"", "\n", "obs_distances", "=", "np", ".", "zeros", "(", "(", "len", "(", "obs_list", ")", ",", "len", "(", "obs_list", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "obs_list", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "len", "(", "obs_list", ")", ")", ":", "\n", "                ", "obs_distances", "[", "i", "]", "[", "j", "]", "=", "self", ".", "helper", ".", "get_observation_dissimilarity", "(", "obs_list", "[", "i", "]", ",", "obs_list", "[", "j", "]", ")", "\n", "", "", "return", "obs_distances", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._get_obs_diversity": [[249, 271], ["range", "range", "min", "max"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_get_obs_diversity", "(", "obs_distances", ",", "exclude_idx", ")", ":", "\n", "        ", "\"\"\"\n        Calculates the diversity of the given observations.\n        :param np.ndarray obs_distances: a table with the dissimilarities between all given observations.\n        :param int exclude_idx: the index of the observation to be excluded from the diversity calculation.\n        :rtype: float\n        :return: a number in [0,1] indicating the diversity of the observations, given by the product between the\n        maximum and the minimum observation distance.\n        \"\"\"", "\n", "min_dist", "=", "2.", "\n", "max_dist", "=", "-", "1.", "\n", "for", "i", "in", "range", "(", "obs_distances", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "i", "==", "exclude_idx", ":", "\n", "                ", "continue", "\n", "", "for", "j", "in", "range", "(", "i", "+", "1", ",", "obs_distances", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "if", "j", "==", "exclude_idx", ":", "\n", "                    ", "continue", "\n", "", "dist", "=", "obs_distances", "[", "i", "]", "[", "j", "]", "\n", "min_dist", "=", "min", "(", "min_dist", ",", "dist", ")", "\n", "max_dist", "=", "max", "(", "max_dist", ",", "dist", ")", "\n", "", "", "return", "max_dist", "*", "min_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._record_video": [[272, 283], ["interestingness_xrl.util.record_video", "numpy.savez_compressed"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.record_video"], ["", "def", "_record_video", "(", "self", ",", "file_name", ",", "frames", ",", "save_np_binary", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Saves the given frames into a video file and (optionally) a numpy binary compressed file.\n        :param str file_name: the path to the file, without extension.\n        :param list frames: a list containing the sequence of frames to be saved.\n        :param bool save_np_binary: whether to save the frames into a numpy binary file.\n        :return:\n        \"\"\"", "\n", "if", "save_np_binary", ":", "\n", "            ", "np", ".", "savez_compressed", "(", "'{}.{}'", ".", "format", "(", "file_name", ",", "NUMPY_EXTENSION", ")", ",", "frames", ")", "\n", "", "record_video", "(", "frames", ",", "'{}.{}'", ".", "format", "(", "file_name", ",", "VIDEO_EXTENSION", ")", ",", "self", ".", "fps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.highlights.HighlightsExplainer._create_highlight": [[284, 312], ["numpy.array", "numpy.sum", "int", "numpy.sum", "numpy.sum", "len", "frame_list.append", "interestingness_xrl.explainability.explanation.fade_frame", "len", "interestingness_xrl.explainability.explanation.fade_frame"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.fade_frame", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.fade_frame"], ["", "def", "_create_highlight", "(", "self", ",", "time_steps_frames", ")", ":", "\n", "        ", "\"\"\"\n        Creates a fade-in / fade-out frame sequence from the given frame array.\n        :param list time_steps_frames: the list containing all time-steps frames.\n        :rtype: list\n        :return: a list of frames with fade-in / fade-out effects.\n        \"\"\"", "\n", "num_frames", "=", "np", ".", "array", "(", "[", "len", "(", "time_step_frames", ")", "for", "time_step_frames", "in", "time_steps_frames", "]", ")", "\n", "total_frames", "=", "np", ".", "sum", "(", "num_frames", ")", "\n", "fade_steps", "=", "int", "(", "FADE_STEPS_PERCENT", "*", "self", ".", "record_time_steps", ")", "\n", "fade_in_frames", "=", "np", ".", "sum", "(", "num_frames", "[", ":", "fade_steps", "]", ")", "\n", "fade_out_frames", "=", "np", ".", "sum", "(", "num_frames", "[", "len", "(", "num_frames", ")", "-", "fade_steps", ":", "]", ")", "\n", "\n", "i", "=", "0", "\n", "frame_list", "=", "[", "]", "\n", "for", "time_step_frames", "in", "time_steps_frames", ":", "\n", "            ", "for", "frame", "in", "time_step_frames", ":", "\n", "# checks if frame is simply to be copied to the video or faded", "\n", "                ", "if", "i", "<", "fade_in_frames", ":", "\n", "                    ", "frame", "=", "fade_frame", "(", "frame", ",", "1", "-", "(", "i", "/", "fade_in_frames", ")", ")", "\n", "", "elif", "i", ">=", "total_frames", "-", "fade_out_frames", ":", "\n", "                    ", "frame", "=", "fade_frame", "(", "frame", ",", "(", "i", "-", "(", "total_frames", "-", "fade_out_frames", ")", ")", "/", "fade_out_frames", ")", "\n", "\n", "# adds frame to list", "\n", "", "frame_list", ".", "append", "(", "frame", ")", "\n", "i", "+=", "1", "\n", "\n", "", "", "return", "frame_list", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.__init__": [[14, 40], ["set", "helper.get_features_bins"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.capture_frame": [[41, 50], ["__init__.Explainer.env.render", "__init__.Explainer._new_frame"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer._new_frame"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer._set_collect_frames": [[51, 58], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer._is_collecting_frames": [[59, 66], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer._new_frame": [[67, 74], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.new_analysis_episode": [[75, 84], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.update_analysis": [[85, 97], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.new_explain_episode": [[98, 107], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.update_explanation": [[108, 120], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.finalize_analysis": [[121, 126], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.Explainer.close": [[127, 133], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.overlay_frame": [[135, 156], ["numpy.rot90", "pygame.surfarray.make_surface", "pygame.surfarray.make_surface.blit", "pygame.surfarray.array3d().astype", "numpy.fliplr", "numpy.fliplr", "numpy.rot90", "pygame.surfarray.array3d"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.__init__.fade_frame": [[158, 175], ["pygame.Surface", "pygame.Surface.fill", "pygame.surfarray.make_surface", "pygame.surfarray.make_surface.blit", "pygame.surfarray.array3d().astype", "int", "pygame.surfarray.array3d"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.__init__": [[27, 68], ["interestingness_xrl.explainability.explanation.Explainer.__init__", "os.makedirs", "os.makedirs", "os.makedirs", "helper.stats_collector.all_variables", "helper.get_features_bins", "range", "heatmaps.HeatmapsExplainer.full_analysis.get_interestingness_names_grouped().items", "os.path.join", "os.path.join", "os.path.join", "numpy.zeros", "heatmaps.HeatmapsExplainer._get_heatmap_name", "numpy.zeros", "len", "range", "os.path.join", "heatmaps.HeatmapsExplainer._get_heatmap_name", "numpy.zeros", "heatmaps.HeatmapsExplainer.full_analysis.get_interestingness_names_grouped", "os.path.exists", "os.makedirs", "heatmaps.HeatmapsExplainer._get_heatmap_name", "heatmaps.HeatmapsExplainer.aspect_name_keys.append", "numpy.zeros", "helper.get_feature_label", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.all_variables", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer._get_heatmap_name", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer._get_heatmap_name", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.get_interestingness_names_grouped", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer._get_heatmap_name", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_feature_label"], ["def", "__init__", "(", "self", ",", "env", ",", "helper", ",", "full_analysis", ",", "output_dir", ",", "recorded_episodes", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new heatmaps explainer.\n        :param Env env: the Gym environment to be tracked, from which the frames are extracted.\n        :param ScenarioHelper helper: the helper containing all necessary methods to extract information from the env.\n        :param FullAnalysis full_analysis: the full analysis over the agent's history of interaction with the environment.\n        :param str output_dir: the path to the output directory in which to save the videos.\n        :param list recorded_episodes: the episodes in which episodes are to be recorded.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "env", ",", "helper", ",", "full_analysis", ",", "output_dir", ",", "recorded_episodes", ")", "\n", "\n", "# creates heatmaps sub-dirs", "\n", "makedirs", "(", "join", "(", "output_dir", ",", "FEATURES_SUB_DIR", ")", ")", "\n", "makedirs", "(", "join", "(", "output_dir", ",", "STATS_SUB_DIR", ")", ")", "\n", "makedirs", "(", "join", "(", "output_dir", ",", "ANALYSIS_SUB_DIR", ")", ")", "\n", "\n", "# initializes heatmaps", "\n", "self", ".", "heat_maps", "=", "{", "AGENT_LOCATION_HEATMAP", ":", "np", ".", "zeros", "(", "self", ".", "config", ".", "env_size", ",", "np", ".", "int", ")", "}", "\n", "\n", "# creates mean heatmaps for each stat collected by the helper", "\n", "for", "var_name", "in", "helper", ".", "stats_collector", ".", "all_variables", "(", ")", ":", "\n", "            ", "name", "=", "self", ".", "_get_heatmap_name", "(", "STATS_SUB_DIR", ",", "var_name", ")", "\n", "self", ".", "heat_maps", "[", "name", "]", "=", "np", ".", "zeros", "(", "self", ".", "config", ".", "env_size", ",", "np", ".", "float", ")", "\n", "\n", "# creates count heatmaps for each feature label location", "\n", "", "feats_nbins", "=", "helper", ".", "get_features_bins", "(", ")", "\n", "for", "f", "in", "range", "(", "len", "(", "feats_nbins", ")", ")", ":", "\n", "            ", "for", "v", "in", "range", "(", "feats_nbins", "[", "f", "]", ")", ":", "\n", "                ", "name", "=", "self", ".", "_get_heatmap_name", "(", "FEATURES_SUB_DIR", ",", "helper", ".", "get_feature_label", "(", "f", ",", "v", ")", ")", "\n", "self", ".", "heat_maps", "[", "name", "]", "=", "np", ".", "zeros", "(", "self", ".", "config", ".", "env_size", ",", "np", ".", "int", ")", "\n", "\n", "# creates heatmaps for each analysis aspect / interestingness element", "\n", "", "", "self", ".", "aspect_name_keys", "=", "[", "]", "\n", "for", "group_name", ",", "aspect_names", "in", "self", ".", "full_analysis", ".", "get_interestingness_names_grouped", "(", ")", ".", "items", "(", ")", ":", "\n", "            ", "dir_name", "=", "join", "(", "self", ".", "output_dir", ",", "ANALYSIS_SUB_DIR", ",", "group_name", ")", "\n", "if", "not", "exists", "(", "dir_name", ")", ":", "\n", "                ", "makedirs", "(", "dir_name", ")", "\n", "", "for", "aspect_name", "in", "aspect_names", ":", "\n", "                ", "name", "=", "self", ".", "_get_heatmap_name", "(", "join", "(", "ANALYSIS_SUB_DIR", ",", "group_name", ")", ",", "aspect_name", ")", "\n", "self", ".", "aspect_name_keys", ".", "append", "(", "name", ")", "\n", "self", ".", "heat_maps", "[", "name", "]", "=", "np", ".", "zeros", "(", "self", ".", "config", ".", "env_size", ",", "np", ".", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.new_analysis_episode": [[69, 72], ["None"], "methods", ["None"], ["", "", "", "def", "new_analysis_episode", "(", "self", ",", "e", ",", "length", ")", ":", "\n", "# we don't need a monitor for heatmaps", "\n", "        ", "self", ".", "env", ".", "env", ".", "monitor", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.update_analysis": [[73, 102], ["heatmaps.HeatmapsExplainer.helper.get_agent_cell_location", "heatmaps.HeatmapsExplainer.helper.get_features_from_observation", "heatmaps.HeatmapsExplainer.helper.stats_collector.all_variables", "range", "heatmaps.HeatmapsExplainer.full_analysis.get_interesting_aspects_grouped().items", "heatmaps.HeatmapsExplainer._get_heatmap_name", "heatmaps.HeatmapsExplainer.helper.stats_collector.get_most_recent_sample", "heatmaps.HeatmapsExplainer._get_mean", "len", "heatmaps.HeatmapsExplainer.helper.get_feature_label", "heatmaps.HeatmapsExplainer._get_heatmap_name", "heatmaps.HeatmapsExplainer.full_analysis.get_interesting_aspects_grouped", "heatmaps.HeatmapsExplainer._get_heatmap_name_key", "heatmaps.HeatmapsExplainer._get_heatmap_name", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_agent_cell_location", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_from_observation", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.all_variables", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer._get_heatmap_name", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_most_recent_sample", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer._get_mean", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_feature_label", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer._get_heatmap_name", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.get_interesting_aspects_grouped", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer._get_heatmap_name_key", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer._get_heatmap_name"], ["", "def", "update_analysis", "(", "self", ",", "t", ",", "obs", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "        ", "col", ",", "row", "=", "self", ".", "helper", ".", "get_agent_cell_location", "(", "obs", ")", "\n", "obs_vec", "=", "self", ".", "helper", ".", "get_features_from_observation", "(", "obs", ")", "\n", "\n", "# updates heatmaps", "\n", "prev_count", "=", "self", ".", "heat_maps", "[", "AGENT_LOCATION_HEATMAP", "]", "[", "col", "]", "[", "row", "]", "\n", "\n", "# updates stats heatmaps", "\n", "for", "var_name", "in", "self", ".", "helper", ".", "stats_collector", ".", "all_variables", "(", ")", ":", "\n", "            ", "hp_name", "=", "self", ".", "_get_heatmap_name", "(", "STATS_SUB_DIR", ",", "var_name", ")", "\n", "prev_stat", "=", "self", ".", "heat_maps", "[", "hp_name", "]", "[", "col", "]", "[", "row", "]", "\n", "cur_stat", "=", "self", ".", "helper", ".", "stats_collector", ".", "get_most_recent_sample", "(", "var_name", ",", "self", ".", "e", ")", "\n", "self", ".", "heat_maps", "[", "hp_name", "]", "[", "col", "]", "[", "row", "]", "=", "self", ".", "_get_mean", "(", "cur_stat", ",", "prev_stat", ",", "prev_count", ")", "\n", "\n", "", "self", ".", "heat_maps", "[", "AGENT_LOCATION_HEATMAP", "]", "[", "col", "]", "[", "row", "]", "+=", "1", "\n", "\n", "# updates feature heatmaps", "\n", "for", "f", "in", "range", "(", "len", "(", "self", ".", "feats_nbins", ")", ")", ":", "\n", "            ", "feat_label", "=", "self", ".", "helper", ".", "get_feature_label", "(", "f", ",", "obs_vec", "[", "f", "]", ")", "\n", "hp_name", "=", "self", ".", "_get_heatmap_name", "(", "FEATURES_SUB_DIR", ",", "feat_label", ")", "\n", "self", ".", "heat_maps", "[", "hp_name", "]", "[", "col", "]", "[", "row", "]", "+=", "1", "\n", "\n", "# updates analyses heatmaps", "\n", "", "for", "group_name", ",", "aspect_names", "in", "self", ".", "full_analysis", ".", "get_interesting_aspects_grouped", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ".", "items", "(", ")", ":", "\n", "            ", "for", "aspect_name", "in", "aspect_names", ":", "\n", "                ", "aspect_name", "=", "self", ".", "_get_heatmap_name_key", "(", "self", ".", "_get_heatmap_name", "(", "join", "(", "ANALYSIS_SUB_DIR", ",", "group_name", ")", ",", "aspect_name", ")", ")", "\n", "self", ".", "heat_maps", "[", "aspect_name", "]", "[", "col", "]", "[", "row", "]", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.close": [[103, 107], ["heatmaps.HeatmapsExplainer.heat_maps.items", "heatmaps.HeatmapsExplainer._save_heat_map", "heatmaps.HeatmapsExplainer._normalize", "os.path.join", "name.lower"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer._save_heat_map", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis._normalize"], ["", "", "", "def", "close", "(", "self", ")", ":", "\n", "# normalize heat-maps and saves to file", "\n", "        ", "for", "name", ",", "heat_map", "in", "self", ".", "heat_maps", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "_save_heat_map", "(", "self", ".", "_normalize", "(", "heat_map", ")", ",", "join", "(", "self", ".", "output_dir", ",", "'{}.png'", ".", "format", "(", "name", ".", "lower", "(", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer._get_heatmap_name": [[108, 111], ["os.path.join"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_get_heatmap_name", "(", "group_name", ",", "aspect_name", ")", ":", "\n", "        ", "return", "join", "(", "group_name", ",", "aspect_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer._get_heatmap_name_key": [[112, 117], ["next", "print"], "methods", ["None"], ["", "def", "_get_heatmap_name_key", "(", "self", ",", "aspect_name", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "next", "(", "key", "for", "key", "in", "self", ".", "aspect_name_keys", "if", "key", "in", "aspect_name", ")", "\n", "", "except", "StopIteration", "as", "e", ":", "\n", "            ", "print", "(", "e", ")", "# should not get here", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer._get_mean": [[118, 121], ["None"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_get_mean", "(", "sample", ",", "old_mean", ",", "n", ")", ":", "\n", "        ", "return", "(", "sample", "+", "old_mean", "*", "n", ")", "/", "(", "n", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer._normalize": [[122, 126], ["numpy.max", "numpy.min", "numpy.true_divide", "numpy.min"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_normalize", "(", "_map", ")", ":", "\n", "        ", "map_range", "=", "np", ".", "max", "(", "_map", ")", "-", "np", ".", "min", "(", "_map", ")", "\n", "return", "_map", "if", "map_range", "==", "0", "else", "np", ".", "true_divide", "(", "_map", "-", "np", ".", "min", "(", "_map", ")", ",", "map_range", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer._save_heat_map": [[127, 144], ["pygame.init", "pygame.Surface", "range", "pygame.image.save", "range", "COLOR_MAP", "pygame.draw.rect", "pygame.Rect"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.save"], ["", "def", "_save_heat_map", "(", "self", ",", "_map", ",", "file_path", ")", ":", "\n", "\n", "# creates surface on which to draw", "\n", "        ", "pygame", ".", "init", "(", ")", "\n", "surf", "=", "pygame", ".", "Surface", "(", "[", "self", ".", "num_cols", "*", "self", ".", "cell_width", ",", "self", ".", "num_rows", "*", "self", ".", "cell_height", "]", ",", "pygame", ".", "SRCALPHA", ",", "32", ")", "\n", "\n", "# builds heatmap from the normalized values", "\n", "for", "c", "in", "range", "(", "self", ".", "num_cols", ")", ":", "\n", "            ", "x", "=", "c", "*", "self", ".", "cell_width", "\n", "\n", "for", "r", "in", "range", "(", "self", ".", "num_rows", ")", ":", "\n", "                ", "y", "=", "r", "*", "self", ".", "cell_height", "\n", "color", "=", "COLOR_MAP", "(", "_map", "[", "c", "]", "[", "r", "]", ",", "bytes", "=", "True", ")", "\n", "pygame", ".", "draw", ".", "rect", "(", "surf", ",", "color", ",", "pygame", ".", "Rect", "(", "x", ",", "y", ",", "x", "+", "self", ".", "cell_width", ",", "y", "+", "self", ".", "cell_height", ")", ")", "\n", "\n", "# saves screenshot with heatmap", "\n", "", "", "pygame", ".", "image", ".", "save", "(", "surf", ",", "file_path", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.__init__": [[24, 49], ["interestingness_xrl.explainability.analysis.AnalysisBase.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "helper", ",", "agent", ",", "trans_analysis", ",", "rwd_analysis", ",", "state_freq_analysis", ",", "state_action_freq_analysis", ",", "\n", "value_analysis", ",", "recency_analysis", ",", "trans_value_analysis", ",", "sequence_analysis", ",", "contradiction_analysis", ")", ":", "\n", "        ", "\"\"\"\n        :param ScenarioHelper helper: the environment helper containing all necessary config and methods.\n        :param QValueBasedAgent agent: the agent to be analyzed.\n        :param TransitionAnalysis trans_analysis: the analysis over transitions.\n        :param RewardAnalysis rwd_analysis: the analysis over rewards.\n        :param StateFrequencyAnalysis state_freq_analysis: the analysis over state frequencies.\n        :param StateActionFrequencyAnalysis state_action_freq_analysis: the analysis over state-action frequencies.\n        :param ValueAnalysis value_analysis: the analysis over values.\n        :param RecencyAnalysis recency_analysis: the analysis over state recency.\n        :param TransitionValuesAnalysis trans_value_analysis: the analysis over values of transitions.\n        :param SequenceAnalysis sequence_analysis: the analysis over sequences.\n        :param ContradictionAnalysis contradiction_analysis: the analysis over contradictions.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "helper", ",", "agent", ")", "\n", "self", ".", "trans_analysis", "=", "trans_analysis", "\n", "self", ".", "rwd_analysis", "=", "rwd_analysis", "\n", "self", ".", "state_freq_analysis", "=", "state_freq_analysis", "\n", "self", ".", "state_action_freq_analysis", "=", "state_action_freq_analysis", "\n", "self", ".", "value_analysis", "=", "value_analysis", "\n", "self", ".", "recency_analysis", "=", "recency_analysis", "\n", "self", ".", "trans_value_analysis", "=", "trans_value_analysis", "\n", "self", ".", "sequence_analysis", "=", "sequence_analysis", "\n", "self", ".", "contradiction_analysis", "=", "contradiction_analysis", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.analyze": [[50, 52], ["None"], "methods", ["None"], ["", "def", "analyze", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.difference_to": [[53, 75], ["full_analysis.FullAnalysis.trans_analysis.difference_to", "full_analysis.FullAnalysis.rwd_analysis.difference_to", "full_analysis.FullAnalysis.state_freq_analysis.difference_to", "full_analysis.FullAnalysis.state_action_freq_analysis.difference_to", "full_analysis.FullAnalysis.value_analysis.difference_to", "full_analysis.FullAnalysis.recency_analysis.difference_to", "full_analysis.FullAnalysis.trans_value_analysis.difference_to", "full_analysis.FullAnalysis.sequence_analysis.difference_to", "full_analysis.FullAnalysis.contradiction_analysis.difference_to", "full_analysis.FullAnalysis"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.difference_to", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.difference_to", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.difference_to", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.difference_to", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.difference_to", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.difference_to", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.difference_to", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.difference_to", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.difference_to"], ["", "def", "difference_to", "(", "self", ",", "other", ")", ":", "\n", "        ", "\"\"\"\n        Gets the difference between this analysis and another given analysis, i.e., the elements that are new and\n        therefore missing in the other analysis. This can be used to highlight what is new in this analysis compared to\n        one that was performed at a prior stage of the agent's behavior / learning.\n        :param FullAnalysis other: the other analysis to get the difference to.\n        :return FullAnalysis: an analysis resulting from the difference between this and the given analysis.\n        \"\"\"", "\n", "trans_analysis", "=", "self", ".", "trans_analysis", ".", "difference_to", "(", "other", ".", "trans_analysis", ")", "\n", "rwd_analysis", "=", "self", ".", "rwd_analysis", ".", "difference_to", "(", "other", ".", "rwd_analysis", ")", "\n", "state_freq_analysis", "=", "self", ".", "state_freq_analysis", ".", "difference_to", "(", "other", ".", "state_freq_analysis", ")", "\n", "state_action_freq_analysis", "=", "self", ".", "state_action_freq_analysis", ".", "difference_to", "(", "other", ".", "state_action_freq_analysis", ")", "\n", "value_analysis", "=", "self", ".", "value_analysis", ".", "difference_to", "(", "other", ".", "value_analysis", ")", "\n", "recency_analysis", "=", "self", ".", "recency_analysis", ".", "difference_to", "(", "other", ".", "recency_analysis", ")", "\n", "trans_value_analysis", "=", "self", ".", "trans_value_analysis", ".", "difference_to", "(", "other", ".", "trans_value_analysis", ")", "\n", "sequence_analysis", "=", "self", ".", "sequence_analysis", ".", "difference_to", "(", "other", ".", "sequence_analysis", ")", "\n", "contradiction_analysis", "=", "self", ".", "contradiction_analysis", ".", "difference_to", "(", "other", ".", "contradiction_analysis", ")", "\n", "\n", "return", "FullAnalysis", "(", "self", ".", "helper", ",", "self", ".", "agent", ",", "\n", "trans_analysis", ",", "rwd_analysis", ",", "state_freq_analysis", ",", "state_action_freq_analysis", ",", "\n", "value_analysis", ",", "recency_analysis", ",", "trans_value_analysis", ",", "sequence_analysis", ",", "\n", "contradiction_analysis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.set_helper": [[76, 103], ["None"], "methods", ["None"], ["", "def", "set_helper", "(", "self", ",", "helper", ")", ":", "\n", "        ", "\"\"\"\n        Sets all analyses configuration.\n        :param ScenarioHelper helper: the environment helper containing all necessary config and methods.\n        :return:\n        \"\"\"", "\n", "self", ".", "helper", "=", "self", ".", "trans_analysis", ".", "helper", "=", "self", ".", "rwd_analysis", ".", "helper", "=", "self", ".", "state_freq_analysis", ".", "helper", "=", "self", ".", "state_action_freq_analysis", ".", "helper", "=", "self", ".", "value_analysis", ".", "helper", "=", "self", ".", "recency_analysis", ".", "helper", "=", "self", ".", "trans_value_analysis", ".", "helper", "=", "self", ".", "sequence_analysis", ".", "helper", "=", "self", ".", "contradiction_analysis", ".", "helper", "=", "helper", "\n", "\n", "self", ".", "config", "=", "self", ".", "trans_analysis", ".", "config", "=", "self", ".", "rwd_analysis", ".", "config", "=", "self", ".", "state_freq_analysis", ".", "config", "=", "self", ".", "state_action_freq_analysis", ".", "config", "=", "self", ".", "value_analysis", ".", "config", "=", "self", ".", "recency_analysis", ".", "config", "=", "self", ".", "trans_value_analysis", ".", "config", "=", "self", ".", "sequence_analysis", ".", "config", "=", "self", ".", "contradiction_analysis", ".", "config", "=", "helper", ".", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis._save_report": [[104, 140], ["interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "full_analysis.FullAnalysis.trans_analysis._save_report", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "full_analysis.FullAnalysis.rwd_analysis._save_report", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "full_analysis.FullAnalysis.state_freq_analysis._save_report", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "full_analysis.FullAnalysis.state_action_freq_analysis._save_report", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "full_analysis.FullAnalysis.value_analysis._save_report", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "full_analysis.FullAnalysis.recency_analysis._save_report", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "full_analysis.FullAnalysis.trans_value_analysis._save_report", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "full_analysis.FullAnalysis.sequence_analysis._save_report", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "full_analysis.FullAnalysis.contradiction_analysis._save_report"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_report"], ["", "def", "_save_report", "(", "self", ",", "file", ",", "write_console", ")", ":", "\n", "        ", "print_line", "(", "'\\n==================================================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'TRANSITION ANALYSIS'", ",", "file", ",", "write_console", ")", "\n", "self", ".", "trans_analysis", ".", "_save_report", "(", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'\\n==================================================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'REWARD ANALYSIS'", ",", "file", ",", "write_console", ")", "\n", "self", ".", "rwd_analysis", ".", "_save_report", "(", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'\\n==================================================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'STATE FREQUENCY ANALYSIS'", ",", "file", ",", "write_console", ")", "\n", "self", ".", "state_freq_analysis", ".", "_save_report", "(", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'\\n==================================================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'STATE-ACTION FREQUENCY ANALYSIS'", ",", "file", ",", "write_console", ")", "\n", "self", ".", "state_action_freq_analysis", ".", "_save_report", "(", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'\\n==================================================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'VALUE ANALYSIS'", ",", "file", ",", "write_console", ")", "\n", "self", ".", "value_analysis", ".", "_save_report", "(", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'\\n==================================================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'RECENCY ANALYSIS'", ",", "file", ",", "write_console", ")", "\n", "self", ".", "recency_analysis", ".", "_save_report", "(", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'\\n==================================================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'TRANSITION VALUE ANALYSIS'", ",", "file", ",", "write_console", ")", "\n", "self", ".", "trans_value_analysis", ".", "_save_report", "(", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'\\n==================================================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'SEQUENCE ANALYSIS'", ",", "file", ",", "write_console", ")", "\n", "self", ".", "sequence_analysis", ".", "_save_report", "(", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'\\n==================================================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'CONTRADICTION ANALYSIS'", ",", "file", ",", "write_console", ")", "\n", "self", ".", "contradiction_analysis", ".", "_save_report", "(", "file", ",", "write_console", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis._save_visual_report": [[141, 151], ["full_analysis.FullAnalysis.trans_analysis._save_visual_report", "full_analysis.FullAnalysis.rwd_analysis._save_visual_report", "full_analysis.FullAnalysis.state_freq_analysis._save_visual_report", "full_analysis.FullAnalysis.state_action_freq_analysis._save_visual_report", "full_analysis.FullAnalysis.value_analysis._save_visual_report", "full_analysis.FullAnalysis.recency_analysis._save_visual_report", "full_analysis.FullAnalysis.trans_value_analysis._save_visual_report", "full_analysis.FullAnalysis.sequence_analysis._save_visual_report", "full_analysis.FullAnalysis.contradiction_analysis._save_visual_report"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_visual_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_visual_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_visual_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_visual_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_visual_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_visual_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_visual_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_visual_report", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_visual_report"], ["", "def", "_save_visual_report", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "trans_analysis", ".", "_save_visual_report", "(", "path", ")", "\n", "self", ".", "rwd_analysis", ".", "_save_visual_report", "(", "path", ")", "\n", "self", ".", "state_freq_analysis", ".", "_save_visual_report", "(", "path", ")", "\n", "self", ".", "state_action_freq_analysis", ".", "_save_visual_report", "(", "path", ")", "\n", "self", ".", "value_analysis", ".", "_save_visual_report", "(", "path", ")", "\n", "self", ".", "recency_analysis", ".", "_save_visual_report", "(", "path", ")", "\n", "self", ".", "trans_value_analysis", ".", "_save_visual_report", "(", "path", ")", "\n", "self", ".", "sequence_analysis", ".", "_save_visual_report", "(", "path", ")", "\n", "self", ".", "contradiction_analysis", ".", "_save_visual_report", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.get_sample_interesting_aspects": [[152, 164], ["aspects.extend", "aspects.extend", "aspects.extend", "aspects.extend", "aspects.extend", "aspects.extend", "aspects.extend", "aspects.extend", "aspects.extend", "full_analysis.FullAnalysis.trans_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.rwd_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.state_freq_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.state_action_freq_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.value_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.trans_value_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.recency_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.sequence_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.contradiction_analysis.get_sample_interesting_aspects"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects"], ["", "def", "get_sample_interesting_aspects", "(", "self", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "        ", "aspects", "=", "[", "]", "\n", "aspects", ".", "extend", "(", "self", ".", "trans_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ")", "\n", "aspects", ".", "extend", "(", "self", ".", "rwd_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ")", "\n", "aspects", ".", "extend", "(", "self", ".", "state_freq_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ")", "\n", "aspects", ".", "extend", "(", "self", ".", "state_action_freq_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ")", "\n", "aspects", ".", "extend", "(", "self", ".", "value_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ")", "\n", "aspects", ".", "extend", "(", "self", ".", "trans_value_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ")", "\n", "aspects", ".", "extend", "(", "self", ".", "recency_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ")", "\n", "aspects", ".", "extend", "(", "self", ".", "sequence_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ")", "\n", "aspects", ".", "extend", "(", "self", ".", "contradiction_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ")", "\n", "return", "aspects", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.get_interesting_aspects_grouped": [[165, 185], ["full_analysis.FullAnalysis.trans_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.rwd_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.state_freq_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.state_action_freq_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.value_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.recency_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.trans_value_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.sequence_analysis.get_sample_interesting_aspects", "full_analysis.FullAnalysis.contradiction_analysis.get_sample_interesting_aspects"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects"], ["", "def", "get_interesting_aspects_grouped", "(", "self", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "        ", "\"\"\"\n        Gets all interesting aspects found in the given full analysis regarding the given sample, grouped by analysis type.\n        :param int s: the sample's initial state.\n        :param int a: the sample's action.\n        :param float r: the sample's reward.\n        :param int ns: the sample's next state.\n        :rtype: dict\n        :return: a dictionary containing all interesting aspects found in the analyses regarding the given sample.\n        \"\"\"", "\n", "return", "{", "\n", "'0-transitions'", ":", "self", ".", "trans_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ",", "\n", "'0-rewards'", ":", "self", ".", "rwd_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ",", "\n", "'1-state-frequency'", ":", "self", ".", "state_freq_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ",", "\n", "'1-action-frequency'", ":", "self", ".", "state_action_freq_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ",", "\n", "'1-values'", ":", "self", ".", "value_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ",", "\n", "'1-recency'", ":", "self", ".", "recency_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ",", "\n", "'2-transition-values'", ":", "self", ".", "trans_value_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ",", "\n", "'2-sequences'", ":", "self", ".", "sequence_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", ",", "\n", "'2-contradictions'", ":", "self", ".", "contradiction_analysis", ".", "get_sample_interesting_aspects", "(", "s", ",", "a", ",", "r", ",", "ns", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.get_interestingness_names": [[187, 199], ["names.extend", "names.extend", "names.extend", "names.extend", "names.extend", "names.extend", "names.extend", "names.extend", "names.extend", "full_analysis.FullAnalysis.trans_analysis.get_interestingness_names", "full_analysis.FullAnalysis.rwd_analysis.get_interestingness_names", "full_analysis.FullAnalysis.state_freq_analysis.get_interestingness_names", "full_analysis.FullAnalysis.state_action_freq_analysis.get_interestingness_names", "full_analysis.FullAnalysis.value_analysis.get_interestingness_names", "full_analysis.FullAnalysis.trans_value_analysis.get_interestingness_names", "full_analysis.FullAnalysis.recency_analysis.get_interestingness_names", "full_analysis.FullAnalysis.sequence_analysis.get_interestingness_names", "full_analysis.FullAnalysis.contradiction_analysis.get_interestingness_names"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names"], ["", "def", "get_interestingness_names", "(", "self", ")", ":", "\n", "        ", "names", "=", "[", "]", "\n", "names", ".", "extend", "(", "self", ".", "trans_analysis", ".", "get_interestingness_names", "(", ")", ")", "\n", "names", ".", "extend", "(", "self", ".", "rwd_analysis", ".", "get_interestingness_names", "(", ")", ")", "\n", "names", ".", "extend", "(", "self", ".", "state_freq_analysis", ".", "get_interestingness_names", "(", ")", ")", "\n", "names", ".", "extend", "(", "self", ".", "state_action_freq_analysis", ".", "get_interestingness_names", "(", ")", ")", "\n", "names", ".", "extend", "(", "self", ".", "value_analysis", ".", "get_interestingness_names", "(", ")", ")", "\n", "names", ".", "extend", "(", "self", ".", "trans_value_analysis", ".", "get_interestingness_names", "(", ")", ")", "\n", "names", ".", "extend", "(", "self", ".", "recency_analysis", ".", "get_interestingness_names", "(", ")", ")", "\n", "names", ".", "extend", "(", "self", ".", "sequence_analysis", ".", "get_interestingness_names", "(", ")", ")", "\n", "names", ".", "extend", "(", "self", ".", "contradiction_analysis", ".", "get_interestingness_names", "(", ")", ")", "\n", "return", "names", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.get_interestingness_names_grouped": [[200, 216], ["full_analysis.FullAnalysis.trans_analysis.get_interestingness_names", "full_analysis.FullAnalysis.rwd_analysis.get_interestingness_names", "full_analysis.FullAnalysis.state_freq_analysis.get_interestingness_names", "full_analysis.FullAnalysis.state_action_freq_analysis.get_interestingness_names", "full_analysis.FullAnalysis.value_analysis.get_interestingness_names", "full_analysis.FullAnalysis.recency_analysis.get_interestingness_names", "full_analysis.FullAnalysis.trans_value_analysis.get_interestingness_names", "full_analysis.FullAnalysis.sequence_analysis.get_interestingness_names", "full_analysis.FullAnalysis.contradiction_analysis.get_interestingness_names"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names"], ["", "def", "get_interestingness_names_grouped", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Gets all interesting aspects possibly found by all other analyses, grouped by analysis type.\n        :rtype: dict\n        :return: a dictionary containing all interesting aspects possibly found in the analyses.\n        \"\"\"", "\n", "return", "{", "\n", "'0-transitions'", ":", "self", ".", "trans_analysis", ".", "get_interestingness_names", "(", ")", ",", "\n", "'0-rewards'", ":", "self", ".", "rwd_analysis", ".", "get_interestingness_names", "(", ")", ",", "\n", "'1-state-frequency'", ":", "self", ".", "state_freq_analysis", ".", "get_interestingness_names", "(", ")", ",", "\n", "'1-action-frequency'", ":", "self", ".", "state_action_freq_analysis", ".", "get_interestingness_names", "(", ")", ",", "\n", "'1-values'", ":", "self", ".", "value_analysis", ".", "get_interestingness_names", "(", ")", ",", "\n", "'1-recency'", ":", "self", ".", "recency_analysis", ".", "get_interestingness_names", "(", ")", ",", "\n", "'2-transition-values'", ":", "self", ".", "trans_value_analysis", ".", "get_interestingness_names", "(", ")", ",", "\n", "'2-sequences'", ":", "self", ".", "sequence_analysis", ".", "get_interestingness_names", "(", ")", ",", "\n", "'2-contradictions'", ":", "self", ".", "contradiction_analysis", ".", "get_interestingness_names", "(", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.get_stats": [[218, 230], ["stats.update", "stats.update", "stats.update", "stats.update", "stats.update", "stats.update", "stats.update", "stats.update", "stats.update", "full_analysis.FullAnalysis.trans_analysis.get_stats", "full_analysis.FullAnalysis.rwd_analysis.get_stats", "full_analysis.FullAnalysis.state_freq_analysis.get_stats", "full_analysis.FullAnalysis.state_action_freq_analysis.get_stats", "full_analysis.FullAnalysis.value_analysis.get_stats", "full_analysis.FullAnalysis.trans_value_analysis.get_stats", "full_analysis.FullAnalysis.recency_analysis.get_stats", "full_analysis.FullAnalysis.sequence_analysis.get_stats", "full_analysis.FullAnalysis.contradiction_analysis.get_stats"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QLearningAgent.update", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QLearningAgent.update", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QLearningAgent.update", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QLearningAgent.update", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QLearningAgent.update", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QLearningAgent.update", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QLearningAgent.update", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QLearningAgent.update", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QLearningAgent.update", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats"], ["", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "stats", "=", "{", "}", "\n", "stats", ".", "update", "(", "self", ".", "trans_analysis", ".", "get_stats", "(", ")", ")", "\n", "stats", ".", "update", "(", "self", ".", "rwd_analysis", ".", "get_stats", "(", ")", ")", "\n", "stats", ".", "update", "(", "self", ".", "state_freq_analysis", ".", "get_stats", "(", ")", ")", "\n", "stats", ".", "update", "(", "self", ".", "state_action_freq_analysis", ".", "get_stats", "(", ")", ")", "\n", "stats", ".", "update", "(", "self", ".", "value_analysis", ".", "get_stats", "(", ")", ")", "\n", "stats", ".", "update", "(", "self", ".", "trans_value_analysis", ".", "get_stats", "(", ")", ")", "\n", "stats", ".", "update", "(", "self", ".", "recency_analysis", ".", "get_stats", "(", ")", ")", "\n", "stats", ".", "update", "(", "self", ".", "sequence_analysis", ".", "get_stats", "(", ")", ")", "\n", "stats", ".", "update", "(", "self", ".", "contradiction_analysis", ".", "get_stats", "(", ")", ")", "\n", "return", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.get_stats_grouped": [[231, 247], ["full_analysis.FullAnalysis.trans_analysis.get_stats", "full_analysis.FullAnalysis.rwd_analysis.get_stats", "full_analysis.FullAnalysis.state_freq_analysis.get_stats", "full_analysis.FullAnalysis.state_action_freq_analysis.get_stats", "full_analysis.FullAnalysis.value_analysis.get_stats", "full_analysis.FullAnalysis.recency_analysis.get_stats", "full_analysis.FullAnalysis.trans_value_analysis.get_stats", "full_analysis.FullAnalysis.sequence_analysis.get_stats", "full_analysis.FullAnalysis.contradiction_analysis.get_stats"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats"], ["", "def", "get_stats_grouped", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Gets the analysis stats grouped by analysis type.\n        :rtype: dict\n        :return: a dictionary containing all stats found in the analyses grouped by analysis type.\n        \"\"\"", "\n", "return", "{", "\n", "'0-transitions'", ":", "self", ".", "trans_analysis", ".", "get_stats", "(", ")", ",", "\n", "'0-rewards'", ":", "self", ".", "rwd_analysis", ".", "get_stats", "(", ")", ",", "\n", "'1-state-frequency'", ":", "self", ".", "state_freq_analysis", ".", "get_stats", "(", ")", ",", "\n", "'1-action-frequency'", ":", "self", ".", "state_action_freq_analysis", ".", "get_stats", "(", ")", ",", "\n", "'1-values'", ":", "self", ".", "value_analysis", ".", "get_stats", "(", ")", ",", "\n", "'1-recency'", ":", "self", ".", "recency_analysis", ".", "get_stats", "(", ")", ",", "\n", "'2-transition-values'", ":", "self", ".", "trans_value_analysis", ".", "get_stats", "(", ")", ",", "\n", "'2-sequences'", ":", "self", ".", "sequence_analysis", ".", "get_stats", "(", ")", ",", "\n", "'2-contradictions'", ":", "self", ".", "contradiction_analysis", ".", "get_stats", "(", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.save_json": [[249, 315], ["super().save_json"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis.save_json"], ["", "def", "save_json", "(", "self", ",", "json_file_path", ")", ":", "\n", "# \"hides\" the agent and config", "\n", "\n", "        ", "self", ".", "trans_analysis", ".", "helper", "=", "self", ".", "rwd_analysis", ".", "helper", "=", "self", ".", "state_freq_analysis", ".", "helper", "=", "self", ".", "state_action_freq_analysis", ".", "helper", "=", "self", ".", "value_analysis", ".", "helper", "=", "self", ".", "recency_analysis", ".", "helper", "=", "self", ".", "trans_value_analysis", ".", "helper", "=", "self", ".", "sequence_analysis", ".", "helper", "=", "self", ".", "contradiction_analysis", ".", "helper", "=", "None", "\n", "\n", "self", ".", "trans_analysis", ".", "config", "=", "self", ".", "rwd_analysis", ".", "config", "=", "self", ".", "state_freq_analysis", ".", "config", "=", "self", ".", "state_action_freq_analysis", ".", "config", "=", "self", ".", "value_analysis", ".", "config", "=", "self", ".", "recency_analysis", ".", "config", "=", "self", ".", "trans_value_analysis", ".", "config", "=", "self", ".", "sequence_analysis", ".", "config", "=", "self", ".", "contradiction_analysis", ".", "config", "=", "None", "\n", "\n", "self", ".", "trans_analysis", ".", "agent", "=", "self", ".", "rwd_analysis", ".", "agent", "=", "self", ".", "state_freq_analysis", ".", "agent", "=", "self", ".", "state_action_freq_analysis", ".", "agent", "=", "self", ".", "value_analysis", ".", "agent", "=", "self", ".", "recency_analysis", ".", "agent", "=", "self", ".", "trans_value_analysis", ".", "agent", "=", "self", ".", "sequence_analysis", ".", "agent", "=", "self", ".", "contradiction_analysis", ".", "agent", "=", "None", "\n", "\n", "# saves all elements to json", "\n", "super", "(", ")", ".", "save_json", "(", "json_file_path", ")", "\n", "\n", "# puts agents and configs back", "\n", "self", ".", "trans_analysis", ".", "helper", "=", "self", ".", "rwd_analysis", ".", "helper", "=", "self", ".", "state_freq_analysis", ".", "helper", "=", "self", ".", "state_action_freq_analysis", ".", "helper", "=", "self", ".", "value_analysis", ".", "helper", "=", "self", ".", "recency_analysis", ".", "helper", "=", "self", ".", "trans_value_analysis", ".", "helper", "=", "self", ".", "sequence_analysis", ".", "helper", "=", "self", ".", "contradiction_analysis", ".", "helper", "=", "self", ".", "helper", "\n", "\n", "self", ".", "trans_analysis", ".", "config", "=", "self", ".", "rwd_analysis", ".", "config", "=", "self", ".", "state_freq_analysis", ".", "config", "=", "self", ".", "state_action_freq_analysis", ".", "config", "=", "self", ".", "value_analysis", ".", "config", "=", "self", ".", "recency_analysis", ".", "config", "=", "self", ".", "trans_value_analysis", ".", "config", "=", "self", ".", "sequence_analysis", ".", "config", "=", "self", ".", "contradiction_analysis", ".", "config", "=", "self", ".", "config", "\n", "\n", "self", ".", "trans_analysis", ".", "agent", "=", "self", ".", "rwd_analysis", ".", "agent", "=", "self", ".", "state_freq_analysis", ".", "agent", "=", "self", ".", "state_action_freq_analysis", ".", "agent", "=", "self", ".", "value_analysis", ".", "agent", "=", "self", ".", "recency_analysis", ".", "agent", "=", "self", ".", "trans_value_analysis", ".", "agent", "=", "self", ".", "sequence_analysis", ".", "agent", "=", "self", ".", "contradiction_analysis", ".", "agent", "=", "self", ".", "agent", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis._after_loaded_json": [[316, 326], ["full_analysis.FullAnalysis.trans_analysis._after_loaded_json", "full_analysis.FullAnalysis.rwd_analysis._after_loaded_json", "full_analysis.FullAnalysis.state_freq_analysis._after_loaded_json", "full_analysis.FullAnalysis.state_action_freq_analysis._after_loaded_json", "full_analysis.FullAnalysis.value_analysis._after_loaded_json", "full_analysis.FullAnalysis.recency_analysis._after_loaded_json", "full_analysis.FullAnalysis.trans_value_analysis._after_loaded_json", "full_analysis.FullAnalysis.sequence_analysis._after_loaded_json", "full_analysis.FullAnalysis.contradiction_analysis._after_loaded_json"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase._after_loaded_json", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase._after_loaded_json", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase._after_loaded_json", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase._after_loaded_json", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase._after_loaded_json", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase._after_loaded_json", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase._after_loaded_json", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase._after_loaded_json", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase._after_loaded_json"], ["", "def", "_after_loaded_json", "(", "self", ")", ":", "\n", "        ", "self", ".", "trans_analysis", ".", "_after_loaded_json", "(", ")", "\n", "self", ".", "rwd_analysis", ".", "_after_loaded_json", "(", ")", "\n", "self", ".", "state_freq_analysis", ".", "_after_loaded_json", "(", ")", "\n", "self", ".", "state_action_freq_analysis", ".", "_after_loaded_json", "(", ")", "\n", "self", ".", "value_analysis", ".", "_after_loaded_json", "(", ")", "\n", "self", ".", "recency_analysis", ".", "_after_loaded_json", "(", ")", "\n", "self", ".", "trans_value_analysis", ".", "_after_loaded_json", "(", ")", "\n", "self", ".", "sequence_analysis", ".", "_after_loaded_json", "(", ")", "\n", "self", ".", "contradiction_analysis", ".", "_after_loaded_json", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.__init__": [[18, 27], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.analyze": [[28, 36], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.difference_to": [[37, 47], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.save_report": [[48, 57], ["open", "__init__.AnalysisBase._save_report"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_report"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase._save_report": [[58, 67], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.save_visual_report": [[68, 82], ["__init__.AnalysisBase._save_visual_report", "os.path.exists", "os.makedirs", "shutil.rmtree", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_visual_report"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase._save_visual_report": [[83, 91], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.get_sample_interesting_aspects": [[92, 105], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.get_interestingness_names": [[106, 114], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.get_stats": [[115, 123], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.save_json": [[124, 144], ["jsonpickle.set_preferred_backend", "jsonpickle.set_encoder_options", "open", "jsonpickle.encode", "json_file.write"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.load_json": [[145, 156], ["open", "jsonpickle.decode", "jsonpickle.decode._after_loaded_json", "json_file.read"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase._after_loaded_json"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase._after_loaded_json": [[157, 163], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis.__init__": [[27, 52], ["interestingness_xrl.explainability.analysis.AnalysisBase.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["\n", "super", "(", ")", ".", "__init__", "(", "env", ",", "helper", ",", "full_analysis", ",", "output_dir", ",", "recorded_episodes", ")", "\n", "\n", "self", ".", "fps", "=", "fps", "\n", "self", ".", "additional_time_steps", "=", "additional_time_steps", "\n", "self", ".", "max_videos_per_sequence", "=", "max_videos_per_sequence", "\n", "self", ".", "max_between_sequence_states", "=", "max_between_states", "\n", "\n", "# initializes structures", "\n", "self", ".", "total_videos", "=", "{", "}", "\n", "self", ".", "captured_videos", "=", "set", "(", ")", "\n", "\n", "# creates a dictionary containing the several possible sequences to be recorded", "\n", "self", ".", "sequences", "=", "{", "}", "\n", "for", "i", ",", "seq_info", "in", "enumerate", "(", "self", ".", "full_analysis", ".", "sequence_analysis", ".", "certain_seqs_to_subgoal", ")", ":", "\n", "            ", "name", ",", "trans_seq", "=", "self", ".", "get_sequence_name", "(", "i", ",", "seq_info", ")", "\n", "self", ".", "sequences", "[", "name", "]", "=", "trans_seq", "\n", "\n", "# initializes structures", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis.difference_to": [[53, 78], ["sequences.SequenceAnalysis", "set", "set"], "methods", ["None"], ["", "self", ".", "candidate_highlights", "=", "{", "}", "\n", "self", ".", "cur_time_step_frames", "=", "[", "]", "\n", "self", ".", "time_step_frames_buffer", "=", "[", "]", "\n", "self", ".", "episodes_record_infos", "=", "[", "]", "\n", "self", ".", "highlights_frames", "=", "{", "}", "\n", "\n", "self", ".", "active_sequences", "=", "{", "}", "\n", "self", ".", "active_sequences_idxs", "=", "{", "}", "\n", "self", ".", "active_sequences_between_states", "=", "{", "}", "\n", "\n", "", "def", "new_analysis_episode", "(", "self", ",", "e", ",", "length", ")", ":", "\n", "        ", "super", "(", ")", ".", "new_analysis_episode", "(", "e", ",", "length", ")", "\n", "\n", "# turns-off frame collection for analysis", "\n", "self", ".", "_set_collect_frames", "(", "False", ")", "\n", "\n", "self", ".", "active_sequences_idxs", "=", "{", "}", "\n", "self", ".", "active_sequences_between_states", "=", "{", "}", "\n", "self", ".", "cur_time_step_frames", "=", "[", "]", "\n", "\n", "", "def", "update_analysis", "(", "self", ",", "t", ",", "obs", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "# ignore new or active sequences if short length", "\n", "        ", "if", "t", "+", "self", ".", "additional_time_steps", ">=", "self", ".", "e_length", ":", "\n", "            ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis.analyze": [[79, 106], ["set", "set.add", "set", "sequences.SequenceAnalysis._get_best_paths", "sequences.SequenceAnalysis.certain_seqs_to_subgoal.sort", "sequences.SequenceAnalysis.uncertain_future_states.sort", "sequences.SequenceAnalysis.helper.get_terminal_state", "len"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis._get_best_paths", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_terminal_state"], ["# checks to see if old sequences have updated or have to be discarded", "\n", "", "for", "seq_name", ",", "idx", "in", "list", "(", "self", ".", "active_sequences_idxs", ".", "items", "(", ")", ")", ":", "\n", "\n", "# if end state of transition is the same, continue looking, sequence did not advance", "\n", "            ", "_", ",", "_", ",", "nst", "=", "self", ".", "sequences", "[", "seq_name", "]", "[", "idx", "]", "\n", "if", "nst", "==", "ns", ":", "\n", "                ", "continue", "\n", "\n", "# if a state transition was achieved, increment idx", "\n", "", "advanced", "=", "False", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "sequences", "[", "seq_name", "]", ")", "-", "1", ",", "idx", "-", "1", ",", "-", "1", ")", ":", "\n", "                ", "st", ",", "ac", ",", "nst", "=", "self", ".", "sequences", "[", "seq_name", "]", "[", "i", "]", "\n", "# if st == s and ac == a and nst == ns:", "\n", "# if ac == a and nst == ns:", "\n", "if", "nst", "!=", "ns", ":", "\n", "                    ", "continue", "\n", "\n", "", "self", ".", "active_sequences_idxs", "[", "seq_name", "]", "=", "i", "\n", "self", ".", "active_sequences_between_states", "[", "seq_name", "]", "=", "0", "\n", "advanced", "=", "True", "\n", "\n", "# check sequence ended", "\n", "if", "i", "!=", "len", "(", "self", ".", "sequences", "[", "seq_name", "]", ")", "-", "1", ":", "\n", "                    ", "continue", "\n", "\n", "", "seq_obs", ",", "initial_time_step", "=", "self", ".", "active_sequences", "[", "seq_name", "]", "\n", "final_time_step", "=", "t", "+", "self", ".", "additional_time_steps", "\n", "seq_info", "=", "(", "seq_obs", ",", "initial_time_step", ",", "final_time_step", ",", "self", ".", "e", ")", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis._get_best_paths": [[107, 140], ["set", "sequences.SequenceAnalysis.uncertain_future_states.extend", "int", "int", "numpy.argmax", "numpy.argmax", "sequences.SequenceAnalysis._get_best_path", "sequences.SequenceAnalysis.agent.c_s[].item", "a_seq.insert", "s_seq.insert", "list", "set.add", "sequences.SequenceAnalysis.agent.c_s[].item", "zip", "len", "sequences.SequenceAnalysis.certain_seqs_to_subgoal.append"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis._get_best_path"], ["\n", "# checks max budget for this sequence and whether to replace some sequence with a better one", "\n", "highlight_idx", "=", "len", "(", "self", ".", "candidate_highlights", "[", "seq_name", "]", ")", "if", "seq_name", "in", "self", ".", "candidate_highlights", "else", "0", "\n", "if", "highlight_idx", "==", "self", ".", "max_videos_per_sequence", ":", "\n", "\n", "# gets distances between all candidate sequences", "\n", "                    ", "seq_distances", "=", "self", ".", "_get_seq_distances", "(", "seq_name", ",", "seq_info", ")", "\n", "\n", "# iteratively tries to improve diversity by replacing one of the highlights", "\n", "highlight_idx", "=", "-", "1", "\n", "max_diversity", "=", "self", ".", "_get_diversity", "(", "seq_distances", ",", "self", ".", "max_videos_per_sequence", ")", "\n", "for", "seq_idx", "in", "range", "(", "self", ".", "max_videos_per_sequence", ")", ":", "\n", "                        ", "diversity", "=", "self", ".", "_get_diversity", "(", "seq_distances", ",", "seq_idx", ")", "\n", "if", "diversity", ">", "max_diversity", ":", "\n", "                            ", "max_diversity", "=", "diversity", "\n", "highlight_idx", "=", "seq_idx", "\n", "\n", "# if there was improvement, adds highlight recording info to the list at the correct index", "\n", "", "", "", "if", "highlight_idx", "!=", "-", "1", ":", "\n", "\n", "                    ", "if", "seq_name", "not", "in", "self", ".", "candidate_highlights", ":", "\n", "                        ", "self", ".", "candidate_highlights", "[", "seq_name", "]", "=", "[", "None", "]", "\n", "", "elif", "highlight_idx", "==", "len", "(", "self", ".", "candidate_highlights", "[", "seq_name", "]", ")", ":", "\n", "                        ", "self", ".", "candidate_highlights", "[", "seq_name", "]", ".", "append", "(", "None", ")", "\n", "\n", "", "self", ".", "candidate_highlights", "[", "seq_name", "]", "[", "highlight_idx", "]", "=", "seq_info", "\n", "\n", "# stop tracking this sequence", "\n", "", "self", ".", "_stop_tracking", "(", "seq_name", ")", "\n", "break", "\n", "\n", "# otherwise increment in-between states", "\n", "", "if", "not", "advanced", ":", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis._get_best_path": [[141, 219], ["sequences.SequenceAnalysis.helper.get_terminal_state", "heapq.heappush", "a_seq.reverse", "s_seq.reverse", "heapq.heappop", "s_seq.append", "a_seq.append", "sequences.SequenceAnalysis._get_next_states", "heapq.heappush"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_terminal_state", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis._get_next_states"], ["                ", "self", ".", "active_sequences_between_states", "[", "seq_name", "]", "+=", "1", "\n", "\n", "# if sequence is no longer valid, stop tracking it", "\n", "if", "self", ".", "active_sequences_between_states", "[", "seq_name", "]", ">", "self", ".", "max_between_sequence_states", ":", "\n", "                    ", "self", ".", "_stop_tracking", "(", "seq_name", ")", "\n", "\n", "# tries to see if a new sequence has initiated", "\n", "", "", "", "for", "seq_name", ",", "seq", "in", "self", ".", "sequences", ".", "items", "(", ")", ":", "\n", "\n", "# ignore active sequences", "\n", "            ", "if", "seq_name", "in", "self", ".", "active_sequences_idxs", ":", "\n", "                ", "continue", "\n", "\n", "# ignore sequences with a maximum number of videos already recorded", "\n", "", "if", "seq_name", "in", "self", ".", "total_videos", "and", "self", ".", "total_videos", "[", "seq_name", "]", "==", "self", ".", "max_videos_per_sequence", ":", "\n", "                ", "continue", "\n", "\n", "# ignore sequences already recorded in this episode", "\n", "", "if", "seq_name", "in", "self", ".", "captured_videos", ":", "\n", "                ", "continue", "\n", "\n", "# if first transition was achieved, start tracking sequence", "\n", "", "st", ",", "ac", ",", "nst", "=", "self", ".", "sequences", "[", "seq_name", "]", "[", "0", "]", "\n", "if", "st", "==", "s", "and", "ac", "==", "a", "and", "nst", "==", "ns", ":", "\n", "                ", "self", ".", "_start_tracking", "(", "seq_name", ",", "t", ",", "obs", ")", "\n", "\n", "", "", "", "def", "finalize_analysis", "(", "self", ")", ":", "\n", "\n", "        ", "sequences_infos", "=", "[", "]", "\n", "\n", "# organizes recordings by episode and time-step", "\n", "self", ".", "episodes_record_infos", "=", "[", "[", "]", "for", "_", "in", "range", "(", "self", ".", "e", "+", "1", ")", "]", "\n", "for", "seq_name", ",", "record_infos", "in", "self", ".", "candidate_highlights", ".", "items", "(", ")", ":", "\n", "            ", "for", "idx", ",", "record_info", "in", "enumerate", "(", "record_infos", ")", ":", "\n", "# retrieves highlight record info", "\n", "                ", "obs", ",", "initial_time_step", ",", "final_time_step", ",", "episode", "=", "record_info", "\n", "\n", "# adds record info to list", "\n", "self", ".", "episodes_record_infos", "[", "episode", "]", ".", "append", "(", "(", "initial_time_step", ",", "final_time_step", ",", "seq_name", ",", "idx", ")", ")", "\n", "sequences_infos", ".", "append", "(", "[", "seq_name", ",", "idx", ",", "episode", ",", "initial_time_step", ",", "final_time_step", "]", ")", "\n", "\n", "# sorts and converts lists to queues", "\n", "", "", "for", "episode", ",", "record_infos", "in", "enumerate", "(", "self", ".", "episodes_record_infos", ")", ":", "\n", "            ", "self", ".", "episodes_record_infos", "[", "episode", "]", ".", "sort", "(", "key", "=", "lambda", "i", ":", "i", "[", "0", "]", ")", "\n", "self", ".", "episodes_record_infos", "[", "episode", "]", "=", "deque", "(", "self", ".", "episodes_record_infos", "[", "episode", "]", ")", "\n", "\n", "# save highlight frames to csv file in format (aspect, idx, episode, frame_start, frame_end)", "\n", "", "file_name", "=", "join", "(", "self", ".", "output_dir", ",", "'highlights.csv'", ")", "\n", "df", "=", "pd", ".", "DataFrame", "(", "sequences_infos", ",", "\n", "columns", "=", "(", "'sequence'", ",", "'idx'", ",", "'episode'", ",", "'initial time-step'", ",", "'final time-step'", ")", ")", "\n", "df", ".", "to_csv", "(", "file_name", ",", "index", "=", "False", ")", "\n", "\n", "", "def", "new_explain_episode", "(", "self", ",", "e", ",", "length", ")", ":", "\n", "        ", "super", "(", ")", ".", "new_explain_episode", "(", "e", ",", "length", ")", "\n", "\n", "self", ".", "time_step_frames_buffer", "=", "[", "]", "\n", "self", ".", "cur_time_step_frames", "=", "[", "]", "\n", "\n", "# activates frame recording only if episode contains highlight from first time-step", "\n", "if", "len", "(", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", ")", ">", "0", ":", "\n", "            ", "initial_time_step", ",", "*", "_", "=", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", "[", "0", "]", "\n", "self", ".", "_set_collect_frames", "(", "initial_time_step", "==", "0", ")", "\n", "\n", "", "", "def", "update_explanation", "(", "self", ",", "t", ",", "obs", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "# captures an additional frame", "\n", "        ", "if", "self", ".", "_is_collecting_frames", "(", ")", ":", "\n", "            ", "self", ".", "capture_frame", "(", ")", "\n", "\n", "# adds time-step frames to buffer", "\n", "", "self", ".", "time_step_frames_buffer", ".", "append", "(", "self", ".", "cur_time_step_frames", ")", "\n", "self", ".", "cur_time_step_frames", "=", "[", "]", "\n", "\n", "# checks existing recording times", "\n", "while", "len", "(", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", ")", ">", "0", ":", "\n", "            ", "initial_time_step", ",", "final_time_step", ",", "seq_name", ",", "idx", "=", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", "[", "0", "]", "\n", "\n", "# if first record time hasn't been reached, no need to search further", "\n", "if", "final_time_step", ">", "t", ":", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis._get_next_states": [[220, 250], ["float", "range", "[].tolist", "float", "numpy.nonzero"], "methods", ["None"], ["                ", "break", "\n", "\n", "# pops info from queue", "\n", "", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", ".", "popleft", "(", ")", "\n", "\n", "# adds frames to highlight list for this sequence", "\n", "if", "seq_name", "not", "in", "self", ".", "highlights_frames", ":", "\n", "                ", "self", ".", "highlights_frames", "[", "seq_name", "]", "=", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "self", ".", "candidate_highlights", "[", "seq_name", "]", ")", ")", "]", "\n", "", "self", ".", "highlights_frames", "[", "seq_name", "]", "[", "idx", "]", "=", "self", ".", "time_step_frames_buffer", "[", "initial_time_step", ":", "final_time_step", "+", "1", "]", "\n", "\n", "# checks if frame recording needs to be activated", "\n", "", "self", ".", "_set_collect_frames", "(", "False", ")", "\n", "if", "len", "(", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", ")", ">", "0", ":", "\n", "            ", "initial_time_step", ",", "*", "_", "=", "self", ".", "episodes_record_infos", "[", "self", ".", "e", "]", "[", "0", "]", "\n", "if", "t", ">=", "initial_time_step", "-", "1", ":", "\n", "                ", "self", ".", "_set_collect_frames", "(", "True", ")", "\n", "\n", "", "", "", "def", "close", "(", "self", ")", ":", "\n", "\n", "# records all highlights to video files", "\n", "        ", "for", "seq_name", "in", "self", ".", "highlights_frames", ".", "keys", "(", ")", ":", "\n", "            ", "print", "(", "'Creating {} videos...'", ".", "format", "(", "seq_name", ")", ")", "\n", "\n", "# creates faded highlight and records individual highlight video", "\n", "for", "idx", ",", "time_steps_frames", "in", "enumerate", "(", "self", ".", "highlights_frames", "[", "seq_name", "]", ")", ":", "\n", "                ", "file_name", "=", "join", "(", "self", ".", "output_dir", ",", "'{}-video{}'", ".", "format", "(", "seq_name", ",", "idx", ")", ")", "\n", "highlight", "=", "self", ".", "_create_highlight", "(", "time_steps_frames", ")", "\n", "self", ".", "_record_video", "(", "file_name", ",", "highlight", ")", "\n", "\n", "", "", "", "def", "_new_frame", "(", "self", ",", "frame", ")", ":", "\n", "# adds frame to the current time-step list", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis._save_report": [[251, 271], ["sequences.SequenceAnalysis.helper.get_features_bins", "sequences.SequenceAnalysis.config.get_action_names", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "sequences.SequenceAnalysis._print_sequence", "interestingness_xrl.learning.get_features_from_index", "sequences.SequenceAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "len", "len"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis._print_sequence", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line"], ["        ", "self", ".", "cur_time_step_frames", ".", "append", "(", "frame", ")", "\n", "\n", "", "def", "_start_tracking", "(", "self", ",", "name", ",", "start_time", ",", "obs", ")", ":", "\n", "        ", "self", ".", "active_sequences", "[", "name", "]", "=", "(", "obs", ",", "max", "(", "0", ",", "start_time", "-", "self", ".", "additional_time_steps", ")", ")", "\n", "self", ".", "active_sequences_idxs", "[", "name", "]", "=", "0", "\n", "self", ".", "active_sequences_between_states", "[", "name", "]", "=", "0", "\n", "\n", "", "def", "_stop_tracking", "(", "self", ",", "name", ")", ":", "\n", "        ", "del", "self", ".", "active_sequences", "[", "name", "]", "\n", "del", "self", ".", "active_sequences_idxs", "[", "name", "]", "\n", "del", "self", ".", "active_sequences_between_states", "[", "name", "]", "\n", "\n", "", "@", "staticmethod", "\n", "def", "get_sequence_name", "(", "seq_idx", ",", "seq_info", ")", ":", "\n", "        ", "s", ",", "_", ",", "seq", ",", "_", "=", "seq_info", "\n", "name", "=", "'#{}-s{}'", ".", "format", "(", "seq_idx", ",", "s", ")", "\n", "trans_seq", "=", "[", "]", "\n", "for", "a", ",", "ns", "in", "seq", ":", "\n", "            ", "name", "+=", "'-a{}-s{}'", ".", "format", "(", "a", ",", "ns", ")", "\n", "trans_seq", ".", "append", "(", "(", "s", ",", "a", ",", "ns", ")", ")", "\n", "s", "=", "ns", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis._print_sequence": [[272, 285], ["interestingness_xrl.learning.get_features_from_index", "sequences.SequenceAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "sequences.SequenceAnalysis.helper.get_features_labels", "sequences.SequenceAnalysis._vec_diff", "interestingness_xrl.util.print_line"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis._vec_diff", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line"], ["", "return", "name", ",", "trans_seq", "\n", "\n", "", "@", "staticmethod", "\n", "def", "get_sequence_file_name", "(", "seq_name", ",", "video_num", ")", ":", "\n", "        ", "return", "'{}-video{}.{}'", ".", "format", "(", "seq_name", ",", "video_num", ",", "VIDEO_EXTENSION", ")", "\n", "\n", "", "def", "_get_seq_distances", "(", "self", ",", "seq_name", ",", "new_seq_info", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis._vec_diff": [[286, 289], ["numpy.where"], "methods", ["None"], ["\n", "\n", "seq_infos", "=", "self", ".", "candidate_highlights", "[", "seq_name", "]", "+", "[", "new_seq_info", "]", "\n", "obs_distances", "=", "np", ".", "zeros", "(", "(", "len", "(", "seq_infos", ")", ",", "len", "(", "seq_infos", ")", ")", ")", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis.get_stats": [[290, 295], ["len", "len", "max", "len"], "methods", ["None"], ["for", "i", "in", "range", "(", "len", "(", "seq_infos", ")", ")", ":", "\n", "            ", "len_i", "=", "seq_infos", "[", "i", "]", "[", "2", "]", "-", "seq_infos", "[", "i", "]", "[", "1", "]", "\n", "obs_i", "=", "seq_infos", "[", "i", "]", "[", "0", "]", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ",", "len", "(", "seq_infos", ")", ")", ":", "\n", "                ", "len_j", "=", "seq_infos", "[", "j", "]", "[", "2", "]", "-", "seq_infos", "[", "j", "]", "[", "1", "]", "\n", "obs_j", "=", "seq_infos", "[", "j", "]", "[", "0", "]", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis.save_json": [[297, 320], ["super().save_json"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis.save_json"], ["# first criterion is diff in sequence length", "\n", "dist", "=", "abs", "(", "len_i", "-", "len_j", ")", "/", "self", ".", "config", ".", "max_steps_per_episode", "\n", "\n", "# second is diff of observation of first step in sequence", "\n", "if", "dist", "==", "0", ":", "\n", "                    ", "dist", "=", "self", ".", "helper", ".", "get_observation_dissimilarity", "(", "obs_i", ",", "obs_j", ")", "\n", "\n", "", "obs_distances", "[", "i", "]", "[", "j", "]", "=", "dist", "\n", "", "", "return", "obs_distances", "\n", "\n", "", "@", "staticmethod", "\n", "def", "_get_diversity", "(", "distances", ",", "exclude_idx", ")", ":", "\n", "        ", "\"\"\"\n        Calculates the diversity of the given observations.\n        :param np.ndarray distances: a table with the dissimilarities between all sequences.\n        :param int exclude_idx: the index of the sequence to be excluded from the diversity calculation.\n        :rtype: float\n        :return: a number in [0,1] indicating the diversity of the sequences, given by the product between the\n        maximum and the minimum sequence distance.\n        \"\"\"", "\n", "min_dist", "=", "2.", "\n", "max_dist", "=", "-", "1.", "\n", "for", "i", "in", "range", "(", "distances", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "i", "==", "exclude_idx", ":", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis._save_visual_report": [[321, 338], ["sequences.SequenceAnalysis.helper.get_features_bins", "enumerate", "interestingness_xrl.learning.get_features_from_index", "sequences.SequenceAnalysis.helper.save_features_image", "enumerate", "interestingness_xrl.learning.get_features_from_index", "sequences.SequenceAnalysis.helper.save_features_image", "os.path.join", "interestingness_xrl.learning.get_features_from_index", "sequences.SequenceAnalysis.helper.save_features_image", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image"], ["                ", "continue", "\n", "", "for", "j", "in", "range", "(", "i", "+", "1", ",", "distances", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "if", "j", "==", "exclude_idx", ":", "\n", "                    ", "continue", "\n", "", "dist", "=", "distances", "[", "i", "]", "[", "j", "]", "\n", "min_dist", "=", "min", "(", "min_dist", ",", "dist", ")", "\n", "max_dist", "=", "max", "(", "max_dist", ",", "dist", ")", "\n", "", "", "return", "max_dist", "*", "min_dist", "\n", "\n", "", "def", "_record_video", "(", "self", ",", "file_name", ",", "frames", ",", "save_np_binary", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Saves the given frames into a video file and (optionally) a numpy binary compressed file.\n        :param str file_name: the path to the file, without extension.\n        :param list frames: a list containing the sequence of frames to be saved.\n        :param bool save_np_binary: whether to save the frames into a numpy binary file.\n        :return:\n        \"\"\"", "\n", "if", "save_np_binary", ":", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis.get_sample_interesting_aspects": [[339, 353], ["aspects.append", "aspects.append"], "methods", ["None"], ["            ", "np", ".", "savez_compressed", "(", "'{}.{}'", ".", "format", "(", "file_name", ",", "NUMPY_EXTENSION", ")", ",", "frames", ")", "\n", "", "record_video", "(", "frames", ",", "'{}.{}'", ".", "format", "(", "file_name", ",", "VIDEO_EXTENSION", ")", ",", "self", ".", "fps", ")", "\n", "\n", "", "def", "_create_highlight", "(", "self", ",", "time_steps_frames", ")", ":", "\n", "        ", "\"\"\"\n        Creates a fade-in / fade-out frame sequence from the given frame array.\n        :param list time_steps_frames: the list containing all time-steps frames.\n        :rtype: list\n        :return: a list of frames with fade-in / fade-out effects.\n        \"\"\"", "\n", "num_frames", "=", "np", ".", "array", "(", "[", "len", "(", "time_step_frames", ")", "for", "time_step_frames", "in", "time_steps_frames", "]", ")", "\n", "total_frames", "=", "np", ".", "sum", "(", "num_frames", ")", "\n", "fade_in_frames", "=", "np", ".", "sum", "(", "num_frames", "[", ":", "self", ".", "additional_time_steps", "]", ")", "\n", "fade_out_frames", "=", "np", ".", "sum", "(", "num_frames", "[", "len", "(", "num_frames", ")", "-", "self", ".", "additional_time_steps", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.sequences.SequenceAnalysis.get_interestingness_names": [[354, 356], ["None"], "methods", ["None"], ["i", "=", "0", "\n", "frame_list", "=", "[", "]", "\n", "for", "time_step_frames", "in", "time_steps_frames", ":", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis.__init__": [[27, 61], ["interestingness_xrl.explainability.analysis.AnalysisBase.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "helper", ",", "agent", ",", "transition_value_analysis", ",", "state_action_freq_analysis", ",", "\n", "min_state_count", "=", "5", ",", "action_dist_div_threshold", "=", "0.1", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new contradiction analysis.\n        :param ScenarioHelper helper: the environment helper containing all necessary config and methods.\n        :param QValueBasedAgent agent: the agent to be analyzed.\n        :param TransitionValuesAnalysis transition_value_analysis: the analysis of the states' values.\n        :param StateActionFrequencyAnalysis state_action_freq_analysis: the analysis of the (un)certain feature action pairs.\n        :param int min_state_count: the minimum visits for a state to be considered contradictory.\n        :param float action_dist_div_threshold: the threshold for the count, reward or value distribution divergence of\n        actions for them to be considered different / non-aligned.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "helper", ",", "agent", ")", "\n", "\n", "self", ".", "contradictory_value_states", "=", "[", "]", "\n", "\"\"\" The states in which the actions' values distribution diverges from that of their rewards (s, n, jsd, [diff actions]). \"\"\"", "\n", "\n", "self", ".", "contradictory_count_states", "=", "[", "]", "\n", "\"\"\" The states in which the actions' selection distribution (count) diverges from that of their values (s, n, jsd, [diff actions]). \"\"\"", "\n", "\n", "self", ".", "contradictory_goal_states", "=", "[", "]", "\n", "\"\"\" The states that were found to be sub-goals for the agent (local maxima) but were not in the known list of goal states (s, n). \"\"\"", "\n", "\n", "self", ".", "contradictory_feature_actions", "=", "[", "]", "\n", "\"\"\" The state-feature - action pairs that were found to be certain but were not in the known list of associations (f, v, a). \"\"\"", "\n", "\n", "self", ".", "state_rewards", "=", "{", "}", "\n", "self", ".", "state_counts", "=", "{", "}", "\n", "self", ".", "state_values", "=", "{", "}", "\n", "\n", "self", ".", "transition_value_analysis", "=", "transition_value_analysis", "\n", "self", ".", "state_action_freq_analysis", "=", "state_action_freq_analysis", "\n", "self", ".", "min_state_count", "=", "min_state_count", "\n", "self", ".", "action_dist_div_threshold", "=", "action_dist_div_threshold", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis.difference_to": [[62, 106], ["contradictions.ContradictionAnalysis", "set", "set", "set", "list", "set", "set"], "methods", ["None"], ["", "def", "difference_to", "(", "self", ",", "other", ")", ":", "\n", "        ", "\"\"\"\n        Gets the difference between this analysis and another given analysis, i.e., the elements that are new and\n        therefore missing in the other analysis. This can be used to highlight what is new in this analysis compared to\n        one that was performed at a prior stage of the agent's behavior / learning.\n        :param ContradictionAnalysis other: the other analysis to get the difference to.\n        :return ContradictionAnalysis: an analysis resulting from the difference between this and the given analysis.\n        \"\"\"", "\n", "\n", "# initializes analysis diff", "\n", "diff_analysis", "=", "ContradictionAnalysis", "(", "\n", "self", ".", "helper", ",", "self", ".", "agent", ",", "\n", "self", ".", "transition_value_analysis", ",", "self", ".", "state_action_freq_analysis", ",", "\n", "self", ".", "min_state_count", ",", "self", ".", "action_dist_div_threshold", ")", "\n", "\n", "other_contradictory_value_states", "=", "set", "(", "s", "for", "s", ",", "*", "_", "in", "other", ".", "contradictory_value_states", ")", "\n", "diff_analysis", ".", "contradictory_value_states", "=", "[", "(", "s", ",", "*", "_", ")", "for", "s", ",", "*", "_", "in", "self", ".", "contradictory_value_states", "\n", "if", "s", "not", "in", "other_contradictory_value_states", "]", "\n", "\n", "other_contradictory_count_states", "=", "set", "(", "s", "for", "s", ",", "*", "_", "in", "other", ".", "contradictory_count_states", ")", "\n", "diff_analysis", ".", "contradictory_count_states", "=", "[", "(", "s", ",", "*", "_", ")", "for", "s", ",", "*", "_", "in", "self", ".", "contradictory_count_states", "\n", "if", "s", "not", "in", "other_contradictory_count_states", "]", "\n", "\n", "other_contradictory_goal_states", "=", "set", "(", "s", "for", "s", ",", "*", "_", "in", "other", ".", "contradictory_goal_states", ")", "\n", "diff_analysis", ".", "contradictory_goal_states", "=", "[", "(", "s", ",", "*", "_", ")", "for", "s", ",", "*", "_", "in", "self", ".", "contradictory_goal_states", "\n", "if", "s", "not", "in", "other_contradictory_goal_states", "]", "\n", "\n", "diff_analysis", ".", "state_rewards", "=", "{", "}", "\n", "diff_analysis", ".", "state_counts", "=", "{", "}", "\n", "diff_analysis", ".", "state_values", "=", "{", "}", "\n", "for", "s", ",", "*", "_", "in", "diff_analysis", ".", "contradictory_value_states", ":", "\n", "            ", "diff_analysis", ".", "state_rewards", "[", "s", "]", "=", "self", ".", "state_rewards", "[", "s", "]", "\n", "diff_analysis", ".", "state_values", "[", "s", "]", "=", "self", ".", "state_values", "[", "s", "]", "\n", "", "for", "s", ",", "*", "_", "in", "diff_analysis", ".", "contradictory_count_states", ":", "\n", "            ", "diff_analysis", ".", "state_counts", "[", "s", "]", "=", "self", ".", "state_counts", "[", "s", "]", "\n", "diff_analysis", ".", "state_values", "[", "s", "]", "=", "self", ".", "state_values", "[", "s", "]", "\n", "\n", "", "diff_analysis", ".", "contradictory_feature_actions", "=", "list", "(", "\n", "set", "(", "self", ".", "contradictory_feature_actions", ")", "-", "set", "(", "other", ".", "contradictory_feature_actions", ")", ")", "\n", "\n", "return", "diff_analysis", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis.analyze": [[107, 160], ["range", "set", "list", "set", "list", "contradictions.ContradictionAnalysis.agent.c_s[].tolist", "list", "contradictions.ContradictionAnalysis.contradictory_value_states.sort", "contradictions.ContradictionAnalysis.contradictory_count_states.sort", "contradictions.ContradictionAnalysis.contradictory_feature_actions.sort", "contradictions.ContradictionAnalysis.contradictory_goal_states.sort", "contradictions.ContradictionAnalysis.agent.c_s[].item", "any", "contradictions.ContradictionAnalysis._diff_action_dists", "contradictions.ContradictionAnalysis._diff_action_dists", "zip", "len", "contradictions.ContradictionAnalysis.contradictory_value_states.append", "contradictions.ContradictionAnalysis.agent.r_sa[].tolist", "contradictions.ContradictionAnalysis.agent.q[].tolist", "len", "contradictions.ContradictionAnalysis.contradictory_count_states.append", "contradictions.ContradictionAnalysis.agent.q[].tolist", "contradictions.ContradictionAnalysis.agent.c_sa[].tolist", "set.add", "set", "set", "contradictions.ContradictionAnalysis.helper.get_known_feature_action_assocs", "contradictions.ContradictionAnalysis.helper.get_known_goal_states"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis._diff_action_dists", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis._diff_action_dists", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_known_feature_action_assocs", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_known_goal_states"], ["", "def", "analyze", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "state_rewards", "=", "{", "}", "\n", "self", ".", "state_counts", "=", "{", "}", "\n", "self", ".", "state_values", "=", "{", "}", "\n", "\n", "# calculates all contradictory value states", "\n", "self", ".", "contradictory_value_states", "=", "[", "]", "\n", "self", ".", "contradictory_count_states", "=", "[", "]", "\n", "for", "s", "in", "range", "(", "self", ".", "agent", ".", "num_states", ")", ":", "\n", "\n", "            ", "c_s", "=", "self", ".", "agent", ".", "c_s", "[", "s", "]", ".", "item", "(", ")", "\n", "\n", "# checks min support for all actions", "\n", "if", "any", "(", "self", ".", "agent", ".", "c_sa", "[", "s", "]", "<", "self", ".", "min_state_count", ")", ":", "\n", "                ", "continue", "\n", "\n", "# compares to check contradictory value state (where value != reward action relative distribution)", "\n", "", "jsd", ",", "diff_actions", "=", "self", ".", "_diff_action_dists", "(", "self", ".", "agent", ".", "q", "[", "s", "]", ",", "self", ".", "agent", ".", "r_sa", "[", "s", "]", ")", "\n", "if", "len", "(", "diff_actions", ")", ">", "0", ":", "\n", "                ", "self", ".", "contradictory_value_states", ".", "append", "(", "(", "s", ",", "c_s", ",", "jsd", ",", "diff_actions", ")", ")", "\n", "self", ".", "state_rewards", "[", "s", "]", "=", "self", ".", "agent", ".", "r_sa", "[", "s", "]", ".", "tolist", "(", ")", "\n", "self", ".", "state_values", "[", "s", "]", "=", "self", ".", "agent", ".", "q", "[", "s", "]", ".", "tolist", "(", ")", "\n", "\n", "# compares to check contradictory count state (where count != value action relative distribution)", "\n", "", "jsd", ",", "diff_actions", "=", "self", ".", "_diff_action_dists", "(", "self", ".", "agent", ".", "c_sa", "[", "s", "]", ",", "self", ".", "agent", ".", "q", "[", "s", "]", ")", "\n", "if", "len", "(", "diff_actions", ")", ">", "0", ":", "\n", "                ", "self", ".", "contradictory_count_states", ".", "append", "(", "(", "s", ",", "c_s", ",", "jsd", ",", "diff_actions", ")", ")", "\n", "self", ".", "state_values", "[", "s", "]", "=", "self", ".", "agent", ".", "q", "[", "s", "]", ".", "tolist", "(", ")", "\n", "self", ".", "state_counts", "[", "s", "]", "=", "self", ".", "agent", ".", "c_sa", "[", "s", "]", ".", "tolist", "(", ")", "\n", "\n", "# gets all certain state-feature - action pairs", "\n", "", "", "certain_feat_actions", "=", "set", "(", ")", "\n", "for", "f", ",", "v", ",", "_", ",", "max_actions", "in", "self", ".", "state_action_freq_analysis", ".", "certain_feats", ":", "\n", "            ", "for", "a", "in", "max_actions", ":", "\n", "                ", "certain_feat_actions", ".", "add", "(", "(", "f", ",", "v", ",", "a", ")", ")", "\n", "\n", "# checks for certain pairs that are not a known/given association", "\n", "", "", "self", ".", "contradictory_feature_actions", "=", "list", "(", "certain_feat_actions", "-", "set", "(", "self", ".", "helper", ".", "get_known_feature_action_assocs", "(", ")", ")", ")", "\n", "\n", "# checks for local maxima that are not a given goal state", "\n", "local_maxima", "=", "set", "(", "[", "x", "[", "0", "]", "for", "x", "in", "self", ".", "transition_value_analysis", ".", "local_maxima_states", "]", ")", "\n", "contradictory_states", "=", "list", "(", "local_maxima", "-", "set", "(", "self", ".", "helper", ".", "get_known_goal_states", "(", ")", ")", ")", "\n", "# contradictory_states.update(goal_states - local_maxima)", "\n", "counts", "=", "self", ".", "agent", ".", "c_s", "[", "contradictory_states", "]", ".", "tolist", "(", ")", "\n", "self", ".", "contradictory_goal_states", "=", "list", "(", "zip", "(", "contradictory_states", ",", "counts", ")", ")", "\n", "\n", "# sorts lists", "\n", "self", ".", "contradictory_value_states", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "2", "]", ")", "\n", "self", ".", "contradictory_count_states", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "2", "]", ")", "\n", "self", ".", "contradictory_feature_actions", ".", "sort", "(", ")", "\n", "self", ".", "contradictory_goal_states", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis._diff_action_dists": [[161, 175], ["contradictions.ContradictionAnalysis._normalize", "contradictions.ContradictionAnalysis._normalize", "interestingness_xrl.explainability.get_pairwise_jensen_shannon_divergence", "numpy.sum().item", "[].tolist", "numpy.sum", "numpy.where"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis._normalize", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis._normalize", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_pairwise_jensen_shannon_divergence"], ["", "def", "_diff_action_dists", "(", "self", ",", "table1", ",", "table2", ")", ":", "\n", "        ", "\"\"\"\n        Checks whether the two given action tables for some state are very different/divergent.\n        The tables contain values that can be converted into a probability distribution over actions.\n        :param table1: the first action table.\n        :param table2: the second action table.\n        :rtype: tuple\n        :return: a tuple with the overall JSD and the indexes in which the two action distributions diverge.\n        \"\"\"", "\n", "dist1", "=", "self", ".", "_normalize", "(", "table1", ")", "\n", "dist2", "=", "self", ".", "_normalize", "(", "table2", ")", "\n", "jsd", "=", "get_pairwise_jensen_shannon_divergence", "(", "dist1", ",", "dist2", ")", "\n", "jsd_sum", "=", "np", ".", "sum", "(", "jsd", ")", ".", "item", "(", ")", "\n", "return", "jsd_sum", ",", "np", ".", "where", "(", "jsd", ">", "self", ".", "action_dist_div_threshold", "/", "self", ".", "config", ".", "num_actions", ")", "[", "0", "]", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis._normalize": [[176, 197], ["numpy.true_divide.astype", "numpy.max", "numpy.min", "numpy.true_divide", "numpy.exp", "numpy.sum", "numpy.true_divide"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_normalize", "(", "table", ")", ":", "\n", "        ", "\"\"\"\n        Transforms the given table of values into a probability distribution in which indexes with higher values have\n        a higher probability associated.\n        :param table:\n        :return ndarray: a probability distribution where the sum of the elements equals 1.\n        \"\"\"", "\n", "# normalizes each element between 0 and 1", "\n", "table", "=", "table", ".", "astype", "(", "np", ".", "float", ")", "\n", "t_max", "=", "np", ".", "max", "(", "table", ")", "\n", "t_min", "=", "np", ".", "min", "(", "table", ")", "\n", "t_range", "=", "t_max", "-", "t_min", "if", "t_max", "!=", "t_min", "else", "1.", "\n", "table", "=", "np", ".", "true_divide", "(", "table", "-", "t_min", ",", "t_range", ")", "\n", "\n", "# gets the exponential to get the probabilities", "\n", "probs", "=", "np", ".", "exp", "(", "table", ")", "\n", "\n", "# normalizes sum", "\n", "probs_sum", "=", "np", ".", "sum", "(", "probs", ")", "\n", "return", "np", ".", "true_divide", "(", "probs", ",", "probs_sum", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis._save_report": [[198, 250], ["contradictions.ContradictionAnalysis.helper.get_features_bins", "contradictions.ContradictionAnalysis.config.get_action_names", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "contradictions.ContradictionAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "contradictions.ContradictionAnalysis._print_actions", "contradictions.ContradictionAnalysis._print_actions", "interestingness_xrl.learning.get_features_from_index", "contradictions.ContradictionAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "contradictions.ContradictionAnalysis._print_actions", "contradictions.ContradictionAnalysis._print_actions", "interestingness_xrl.learning.get_features_from_index", "contradictions.ContradictionAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "numpy.zeros", "interestingness_xrl.util.print_line", "len", "len", "len", "len", "len", "contradictions.ContradictionAnalysis.helper.get_features_labels"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis._print_actions", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis._print_actions", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis._print_actions", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis._print_actions", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels"], ["", "def", "_save_report", "(", "self", ",", "file", ",", "write_console", ")", ":", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "action_names", "=", "self", ".", "config", ".", "get_action_names", "(", ")", "\n", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'Action JS divergence threshold: {} per action:'", ".", "format", "(", "\n", "self", ".", "action_dist_div_threshold", "/", "self", ".", "config", ".", "num_actions", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} contradictory values states found):'", ".", "format", "(", "\n", "len", "(", "self", ".", "contradictory_value_states", ")", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "n", ",", "jsd", ",", "diff_actions", "in", "self", ".", "contradictory_value_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "action_labels", "=", "[", "action_names", "[", "a", "]", "for", "a", "in", "diff_actions", "]", "\n", "print_line", "(", "'\\t{}-{} (jsd: {:.3f}, count: {})'", ".", "format", "(", "s", ",", "feats_labels", ",", "jsd", ",", "n", ")", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'\\t\\tDivergent actions: {}'", ".", "format", "(", "action_labels", ")", ",", "file", ",", "write_console", ")", "\n", "self", ".", "_print_actions", "(", "'Rwd. dist'", ",", "diff_actions", ",", "self", ".", "state_rewards", "[", "s", "]", ",", "file", ",", "write_console", ")", "\n", "self", ".", "_print_actions", "(", "'Val. dist'", ",", "diff_actions", ",", "self", ".", "state_values", "[", "s", "]", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} contradictory count states found):'", ".", "format", "(", "\n", "len", "(", "self", ".", "contradictory_count_states", ")", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "n", ",", "jsd", ",", "diff_actions", "in", "self", ".", "contradictory_count_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "action_labels", "=", "[", "action_names", "[", "a", "]", "for", "a", "in", "diff_actions", "]", "\n", "print_line", "(", "'\\t{}-{} (jsd: {:.3f}, count: {})'", ".", "format", "(", "s", ",", "feats_labels", ",", "jsd", ",", "n", ")", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'\\t\\tDivergent actions: {}'", ".", "format", "(", "action_labels", ")", ",", "file", ",", "write_console", ")", "\n", "self", ".", "_print_actions", "(", "'Val. dist'", ",", "diff_actions", ",", "self", ".", "state_values", "[", "s", "]", ",", "file", ",", "write_console", ")", "\n", "self", ".", "_print_actions", "(", "'Count dist'", ",", "diff_actions", ",", "self", ".", "state_counts", "[", "s", "]", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} contradictory goal states found):'", ".", "format", "(", "\n", "len", "(", "self", ".", "contradictory_goal_states", ")", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "n", "in", "self", ".", "contradictory_goal_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "print_line", "(", "'\\t{}-{} (count: {})'", ".", "format", "(", "s", ",", "feats_labels", ",", "n", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} contradictory feature-action associations found):'", ".", "format", "(", "\n", "len", "(", "self", ".", "contradictory_feature_actions", ")", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "f", ",", "v", ",", "a", "in", "self", ".", "contradictory_feature_actions", ":", "\n", "            ", "obs_vec", "=", "np", ".", "zeros", "(", "len", "(", "feats_nbins", ")", ",", "np", ".", "uint32", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "feat_label", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ")", "[", "f", "]", "\n", "print_line", "(", "'\\t{} - {}'", ".", "format", "(", "feat_label", ",", "action_names", "[", "a", "]", ")", ",", "file", ",", "write_console", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis._print_actions": [[251, 258], ["interestingness_xrl.util.print_line", "range", "interestingness_xrl.util.print_line", "len", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "str().rjust", "str", "round"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line"], ["", "", "@", "staticmethod", "\n", "def", "_print_actions", "(", "title", ",", "diff_actions", ",", "table", ",", "file", ",", "write_console", ")", ":", "\n", "        ", "print_line", "(", "'\\t\\t{}:\\t['", ".", "format", "(", "title", ")", ",", "file", ",", "write_console", ",", "False", ")", "\n", "for", "a", "in", "range", "(", "len", "(", "table", ")", ")", ":", "\n", "            ", "print_line", "(", "str", "(", "round", "(", "table", "[", "a", "]", ",", "3", ")", ")", ".", "rjust", "(", "10", ")", ",", "file", ",", "write_console", ",", "False", ")", "\n", "print_line", "(", "'*'", "if", "a", "in", "diff_actions", "else", "' '", ",", "file", ",", "write_console", ",", "False", ")", "\n", "", "print_line", "(", "']\\n'", ",", "file", ",", "write_console", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis.get_stats": [[259, 265], ["len", "len", "len", "len"], "methods", ["None"], ["", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'Num contradictory values states'", ":", "(", "len", "(", "self", ".", "contradictory_value_states", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num contradictory count states'", ":", "(", "len", "(", "self", ".", "contradictory_count_states", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num contradictory goal states'", ":", "(", "len", "(", "self", ".", "contradictory_goal_states", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num contradictory feature-action assocs'", ":", "(", "len", "(", "self", ".", "contradictory_feature_actions", ")", ",", "0.", ",", "1", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis.save_json": [[267, 278], ["super().save_json"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis.save_json"], ["", "def", "save_json", "(", "self", ",", "json_file_path", ")", ":", "\n", "        ", "transition_value_analysis", "=", "self", ".", "transition_value_analysis", "\n", "self", ".", "transition_value_analysis", "=", "None", "\n", "\n", "state_action_freq_analysis", "=", "self", ".", "state_action_freq_analysis", "\n", "self", ".", "state_action_freq_analysis", "=", "None", "\n", "\n", "super", "(", ")", ".", "save_json", "(", "json_file_path", ")", "\n", "\n", "self", ".", "transition_value_analysis", "=", "transition_value_analysis", "\n", "self", ".", "state_action_freq_analysis", "=", "state_action_freq_analysis", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis._save_visual_report": [[279, 294], ["contradictions.ContradictionAnalysis.helper.get_features_bins", "interestingness_xrl.learning.get_features_from_index", "contradictions.ContradictionAnalysis.helper.save_features_image", "interestingness_xrl.learning.get_features_from_index", "contradictions.ContradictionAnalysis.helper.save_features_image", "interestingness_xrl.learning.get_features_from_index", "contradictions.ContradictionAnalysis.helper.save_features_image", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image"], ["", "def", "_save_visual_report", "(", "self", ",", "path", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "for", "s", ",", "*", "_", "in", "self", ".", "contradictory_value_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'contradictory-value-s-{}.png'", ".", "format", "(", "s", ")", ")", ")", "\n", "\n", "", "for", "s", ",", "*", "_", "in", "self", ".", "contradictory_count_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'contradictory-count-s-{}.png'", ".", "format", "(", "s", ")", ")", ")", "\n", "\n", "", "for", "s", ",", "*", "_", "in", "self", ".", "contradictory_goal_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'contradictory-goal-s-{}.png'", ".", "format", "(", "s", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis.get_sample_interesting_aspects": [[295, 322], ["contradictions.ContradictionAnalysis.helper.get_features_bins", "interestingness_xrl.learning.get_features_from_index", "aspects.append", "aspects.append", "aspects.append", "aspects.append"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index"], ["", "", "def", "get_sample_interesting_aspects", "(", "self", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "aspects", "=", "[", "]", "\n", "for", "st", ",", "*", "_", "in", "self", ".", "contradictory_value_states", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'contradictory-value-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "st", ",", "*", "_", "in", "self", ".", "contradictory_count_states", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'contradictory-count-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "st", ",", "*", "_", "in", "self", ".", "contradictory_goal_states", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'contradictory-goal-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "for", "f", ",", "v", ",", "ac", "in", "self", ".", "contradictory_feature_actions", ":", "\n", "            ", "if", "obs_vec", "[", "f", "]", "==", "v", "and", "ac", "==", "a", ":", "\n", "                ", "aspects", ".", "append", "(", "'contradictory-f-{}-v-{}-a-{}'", ".", "format", "(", "f", ",", "v", ",", "a", ")", ")", "\n", "break", "\n", "\n", "", "", "return", "aspects", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.contradictions.ContradictionAnalysis.get_interestingness_names": [[323, 325], ["None"], "methods", ["None"], ["", "def", "get_interestingness_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "'contradictory-value-s'", ",", "'contradictory-count-s'", ",", "'contradictory-goal-s'", ",", "'contradictory-f'", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.transition_values.TransitionValuesAnalysis.__init__": [[21, 54], ["interestingness_xrl.explainability.analysis.AnalysisBase.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "helper", ",", "agent", ",", "\n", "min_state_count", "=", "5", ",", "min_transition_count", "=", "5", ",", "state_diff_var_outlier_stds", "=", "2", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new value analysis.\n        :param ScenarioHelper helper: the environment helper containing all necessary config and methods.\n        :param QValueBasedAgent agent: the agent to be analyzed.\n        :param int min_state_count: the minimum visits for a state-action pair to be considered an outlier.\n        :param float min_transition_count: the minimum visits for a transition to be considered for state minima/maxima calculation.\n        :param float state_diff_var_outlier_stds: the threshold for the value difference variance of a state for it to be considered an outlier.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "helper", ",", "agent", ")", "\n", "\n", "self", ".", "local_minima_states", "=", "[", "]", "\n", "\"\"\" The local minima states, i.e., states whose values are <= than possible next states (s, val, next_val_avg, n) \"\"\"", "\n", "\n", "self", ".", "local_maxima_states", "=", "[", "]", "\n", "\"\"\" The local maxima states, i.e., states whose values are >= than possible next states (s, val, next_val_avg, n) \"\"\"", "\n", "\n", "self", ".", "absolute_minima_states", "=", "[", "]", "\n", "\"\"\" The absolute minima states, i.e., states whose values are <= than all other states (s, val, next_val_avg, n) \"\"\"", "\n", "\n", "self", ".", "absolute_maxima_states", "=", "[", "]", "\n", "\"\"\" The absolute maxima states, i.e., states whose values are >= than all other states (s, val, next_val_avg, n) \"\"\"", "\n", "\n", "self", ".", "val_diff_mean_action_outliers", "=", "[", "]", "\n", "\"\"\" The state-action pairs considered as outliers with regards to difference in value to a possible next state (s, a, diff_mean, nsa) \"\"\"", "\n", "\n", "self", ".", "val_diff_variance_state_outliers", "=", "[", "]", "\n", "\"\"\" The states considered as outliers with regards to the variance of the difference in value to possible next states (s, val_diff_var, n) \"\"\"", "\n", "\n", "self", ".", "min_state_count", "=", "min_state_count", "\n", "self", ".", "min_transition_count", "=", "min_transition_count", "\n", "self", ".", "state_diff_outlier_stds", "=", "state_diff_var_outlier_stds", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.transition_values.TransitionValuesAnalysis.difference_to": [[55, 100], ["transition_values.TransitionValuesAnalysis", "set", "set", "set", "set", "set", "set"], "methods", ["None"], ["", "def", "difference_to", "(", "self", ",", "other", ")", ":", "\n", "        ", "\"\"\"\n        Gets the difference between this analysis and another given analysis, i.e., the elements that are new and\n        therefore missing in the other analysis. This can be used to highlight what is new in this analysis compared to\n        one that was performed at a prior stage of the agent's behavior / learning.\n        :param TransitionValuesAnalysis other: the other analysis to get the difference to.\n        :return TransitionValuesAnalysis: an analysis resulting from the difference between this and the given analysis.\n        \"\"\"", "\n", "\n", "# initializes analysis diff", "\n", "diff_analysis", "=", "TransitionValuesAnalysis", "(", "\n", "self", ".", "helper", ",", "self", ".", "agent", ",", "\n", "self", ".", "min_state_count", ",", "self", ".", "min_transition_count", ",", "self", ".", "state_diff_outlier_stds", ")", "\n", "\n", "other_local_minima_states", "=", "set", "(", "s", "for", "s", ",", "*", "_", "in", "other", ".", "local_minima_states", ")", "\n", "diff_analysis", ".", "local_minima_states", "=", "[", "(", "s", ",", "*", "_", ")", "for", "s", ",", "*", "_", "in", "self", ".", "local_minima_states", "\n", "if", "s", "not", "in", "other_local_minima_states", "]", "\n", "\n", "other_local_maxima_states", "=", "set", "(", "s", "for", "s", ",", "*", "_", "in", "other", ".", "local_maxima_states", ")", "\n", "diff_analysis", ".", "local_maxima_states", "=", "[", "(", "s", ",", "*", "_", ")", "for", "s", ",", "*", "_", "in", "self", ".", "local_maxima_states", "\n", "if", "s", "not", "in", "other_local_maxima_states", "]", "\n", "\n", "other_absolute_minima_states", "=", "set", "(", "s", "for", "s", ",", "*", "_", "in", "other", ".", "absolute_minima_states", ")", "\n", "diff_analysis", ".", "absolute_minima_states", "=", "[", "(", "s", ",", "*", "_", ")", "for", "s", ",", "*", "_", "in", "self", ".", "absolute_minima_states", "\n", "if", "s", "not", "in", "other_absolute_minima_states", "]", "\n", "\n", "other_absolute_maxima_states", "=", "set", "(", "s", "for", "s", ",", "*", "_", "in", "other", ".", "absolute_maxima_states", ")", "\n", "diff_analysis", ".", "absolute_maxima_states", "=", "[", "(", "s", ",", "*", "_", ")", "for", "s", ",", "*", "_", "in", "self", ".", "absolute_maxima_states", "\n", "if", "s", "not", "in", "other_absolute_maxima_states", "]", "\n", "\n", "other_val_diff_mean_action_outliers", "=", "set", "(", "(", "s", ",", "a", ")", "for", "s", ",", "a", ",", "*", "_", "in", "other", ".", "val_diff_mean_action_outliers", ")", "\n", "diff_analysis", ".", "val_diff_mean_action_outliers", "=", "[", "(", "s", ",", "a", ",", "*", "_", ")", "for", "s", ",", "a", ",", "*", "_", "in", "self", ".", "val_diff_mean_action_outliers", "\n", "if", "(", "s", ",", "a", ")", "not", "in", "other_val_diff_mean_action_outliers", "]", "\n", "\n", "other_val_diff_variance_state_outliers", "=", "set", "(", "s", "for", "s", ",", "*", "_", "in", "other", ".", "val_diff_variance_state_outliers", ")", "\n", "diff_analysis", ".", "val_diff_variance_state_outliers", "=", "[", "(", "s", ",", "*", "_", ")", "for", "s", ",", "*", "_", "in", "self", ".", "val_diff_variance_state_outliers", "\n", "if", "s", "not", "in", "other_val_diff_variance_state_outliers", "]", "\n", "\n", "return", "diff_analysis", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.transition_values.TransitionValuesAnalysis.analyze": [[101, 226], ["numpy.where", "interestingness_xrl.explainability.group_by_key", "numpy.array", "numpy.array", "numpy.zeros", "enumerate", "interestingness_xrl.explainability.get_outliers_dist_mean", "numpy.nonzero", "interestingness_xrl.explainability.get_outliers_dist_mean", "[].tolist", "[].tolist", "visited_next_val_diff_avgs[].tolist", "transition_values.TransitionValuesAnalysis.agent.c_sa[].tolist", "list", "transition_values.TransitionValuesAnalysis.local_minima_states.sort", "transition_values.TransitionValuesAnalysis.local_maxima_states.sort", "transition_values.TransitionValuesAnalysis.absolute_minima_states.sort", "transition_values.TransitionValuesAnalysis.absolute_maxima_states.sort", "transition_values.TransitionValuesAnalysis.val_diff_mean_action_outliers.sort", "transition_values.TransitionValuesAnalysis.val_diff_variance_state_outliers.sort", "list", "numpy.finfo", "numpy.finfo", "s.item.item.item", "visited_v_s[].item", "range", "numpy.sum().item", "val_diff_variances.append", "zip", "zip", "numpy.max().item", "numpy.sum().item", "next_val_diff_vars.append", "numpy.mean", "numpy.sum().item", "transition_values.TransitionValuesAnalysis.local_minima_states.append", "numpy.sum().item", "transition_values.TransitionValuesAnalysis.local_maxima_states.append", "visited_sa[].tolist", "numpy.where", "len", "numpy.all", "next_val_avg_minimums.append", "numpy.all", "next_val_avg_maximums.append", "transition_values.TransitionValuesAnalysis.absolute_minima_states.append", "transition_values.TransitionValuesAnalysis.absolute_maxima_states.append", "numpy.sum", "numpy.max", "numpy.sum", "numpy.var", "abs", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.max", "numpy.max", "numpy.max", "numpy.max", "float", "numpy.max", "numpy.max", "float", "float", "float", "float"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.group_by_key", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_outliers_dist_mean", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_outliers_dist_mean"], ["", "def", "analyze", "(", "self", ")", ":", "\n", "\n", "# gets visited state-action pairs with sufficient support", "\n", "        ", "visited_sa", "=", "np", ".", "where", "(", "self", ".", "agent", ".", "c_sa", ">=", "self", ".", "min_state_count", ")", "\n", "\n", "# gets states' values (max q)", "\n", "visited_q_sa", "=", "self", ".", "agent", ".", "q", "[", "visited_sa", "]", "\n", "visited_q_s", "=", "group_by_key", "(", "list", "(", "zip", "(", "visited_sa", "[", "0", "]", ".", "tolist", "(", ")", ",", "visited_q_sa", ")", ")", ")", "\n", "visited_s", "=", "np", ".", "array", "(", "[", "s", "for", "s", ",", "_", "in", "visited_q_s", "]", ")", "\n", "visited_v_s", "=", "np", ".", "array", "(", "[", "np", ".", "max", "(", "values", ")", ".", "item", "(", ")", "for", "_", ",", "values", "in", "visited_q_s", "]", ")", "\n", "\n", "# gets local minima and maxima states", "\n", "self", ".", "local_minima_states", "=", "[", "]", "\n", "self", ".", "local_maxima_states", "=", "[", "]", "\n", "self", ".", "absolute_minima_states", "=", "[", "]", "\n", "self", ".", "absolute_maxima_states", "=", "[", "]", "\n", "self", ".", "val_diff_mean_action_outliers", "=", "[", "]", "\n", "val_diff_variances", "=", "[", "]", "\n", "absolute_min_val", "=", "np", ".", "finfo", "(", "float", ")", ".", "max", "\n", "absolute_max_val", "=", "np", ".", "finfo", "(", "float", ")", ".", "min", "\n", "next_val_diff_avgs", "=", "np", ".", "zeros", "(", "self", ".", "agent", ".", "c_sa", ".", "shape", ")", "\n", "for", "i", ",", "s", "in", "enumerate", "(", "visited_s", ")", ":", "\n", "            ", "s", "=", "s", ".", "item", "(", ")", "\n", "v_s", "=", "visited_v_s", "[", "i", "]", ".", "item", "(", ")", "\n", "c_s", "=", "0", "\n", "num_actions", "=", "0", "\n", "\n", "local_minimum", "=", "True", "\n", "local_maximum", "=", "True", "\n", "next_val_avg_minimums", "=", "[", "]", "\n", "next_val_avg_maximums", "=", "[", "]", "\n", "next_val_diff_vars", "=", "[", "]", "\n", "\n", "for", "a", "in", "range", "(", "self", ".", "agent", ".", "num_actions", ")", ":", "\n", "\n", "# gets visited next states using this action (at least one transition observed)", "\n", "                ", "visited_next_s", "=", "np", ".", "where", "(", "self", ".", "agent", ".", "c_sas", "[", "s", "]", "[", "a", "]", ">", "0", ")", "[", "0", "]", "\n", "if", "len", "(", "visited_next_s", ")", "==", "0", ":", "\n", "                    ", "continue", "\n", "\n", "# gets effective state-action count and updates effective state count", "\n", "", "c_sa", "=", "np", ".", "sum", "(", "self", ".", "agent", ".", "c_sas", "[", "s", "]", "[", "a", "]", "[", "ns", "]", "for", "ns", "in", "visited_next_s", ")", ".", "item", "(", ")", "\n", "c_s", "+=", "c_sa", "\n", "num_actions", "+=", "1", "\n", "\n", "# checks whether all next states have a value (max s-a value)", "\n", "# lower than or equal to the current state (possible local minimum)", "\n", "if", "local_minimum", "and", "np", ".", "all", "(", "[", "v_s", "<=", "np", ".", "max", "(", "self", ".", "agent", ".", "q", "[", "ns", "]", ")", "for", "ns", "in", "visited_next_s", "]", ")", ":", "\n", "                    ", "next_val_avg_minimums", ".", "append", "(", "\n", "(", "c_sa", ",", "\n", "np", ".", "sum", "(", "\n", "[", "np", ".", "max", "(", "self", ".", "agent", ".", "q", "[", "ns", "]", ")", "*", "(", "self", ".", "agent", ".", "c_sas", "[", "s", "]", "[", "a", "]", "[", "ns", "]", "/", "float", "(", "c_sa", ")", ")", "\n", "for", "ns", "in", "visited_next_s", "]", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "local_minimum", "=", "False", "\n", "\n", "# checks whether all next states have a value (max s-a value)", "\n", "# higher than or equal to the current state (possible local maximum)", "\n", "", "if", "local_maximum", "and", "np", ".", "all", "(", "[", "v_s", ">=", "np", ".", "max", "(", "self", ".", "agent", ".", "q", "[", "ns", "]", ")", "for", "ns", "in", "visited_next_s", "]", ")", ":", "\n", "                    ", "next_val_avg_maximums", ".", "append", "(", "\n", "(", "c_sa", ",", "\n", "np", ".", "sum", "(", "\n", "[", "np", ".", "max", "(", "self", ".", "agent", ".", "q", "[", "ns", "]", ")", "*", "(", "self", ".", "agent", ".", "c_sas", "[", "s", "]", "[", "a", "]", "[", "ns", "]", "/", "float", "(", "c_sa", ")", ")", "\n", "for", "ns", "in", "visited_next_s", "]", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "local_maximum", "=", "False", "\n", "\n", "# appends mean and variance of difference to next states' values", "\n", "", "next_val_diff_vars", ".", "append", "(", "(", "c_sa", ",", "np", ".", "var", "(", "[", "np", ".", "max", "(", "self", ".", "agent", ".", "q", "[", "ns", "]", ")", "-", "v_s", "for", "ns", "in", "visited_next_s", "]", ")", ")", ")", "\n", "next_val_diff_avgs", "[", "s", "]", "[", "a", "]", "=", "np", ".", "mean", "(", "[", "abs", "(", "np", ".", "max", "(", "self", ".", "agent", ".", "q", "[", "ns", "]", ")", "-", "v_s", ")", "for", "ns", "in", "visited_next_s", "]", ")", "\n", "\n", "# continue only if effective state count is higher than 0 (does have transitions)", "\n", "", "if", "c_s", "==", "0", ":", "\n", "                ", "continue", "\n", "\n", "# tests if state was found to be a local minimum or maximum and gets weighted avg of next state values", "\n", "# only if agent tested all actions a state can be a minimum/maximum", "\n", "", "if", "local_minimum", "and", "num_actions", "==", "self", ".", "agent", ".", "num_actions", ":", "\n", "                ", "next_val_avg", "=", "np", ".", "sum", "(", "ns_val", "*", "(", "c_sa", "/", "float", "(", "c_s", ")", ")", "for", "c_sa", ",", "ns_val", "in", "next_val_avg_minimums", ")", ".", "item", "(", ")", "\n", "self", ".", "local_minima_states", ".", "append", "(", "(", "s", ",", "v_s", ",", "next_val_avg", ",", "c_s", ")", ")", "\n", "\n", "# tests for absolute minimum", "\n", "if", "v_s", "<=", "absolute_min_val", ":", "\n", "                    ", "if", "v_s", "<", "absolute_min_val", ":", "\n", "                        ", "absolute_min_val", "=", "v_s", "\n", "self", ".", "absolute_minima_states", "=", "[", "]", "\n", "", "self", ".", "absolute_minima_states", ".", "append", "(", "(", "s", ",", "v_s", ",", "next_val_avg", ",", "c_s", ")", ")", "\n", "\n", "", "", "if", "local_maximum", "and", "num_actions", "==", "self", ".", "agent", ".", "num_actions", ":", "\n", "                ", "next_val_avg", "=", "np", ".", "sum", "(", "ns_val", "*", "(", "c_sa", "/", "float", "(", "c_s", ")", ")", "for", "c_sa", ",", "ns_val", "in", "next_val_avg_maximums", ")", ".", "item", "(", ")", "\n", "self", ".", "local_maxima_states", ".", "append", "(", "(", "s", ",", "v_s", ",", "next_val_avg", ",", "c_s", ")", ")", "\n", "\n", "# tests for absolute maximum", "\n", "if", "v_s", ">=", "absolute_max_val", ":", "\n", "                    ", "if", "v_s", ">", "absolute_max_val", ":", "\n", "                        ", "absolute_max_val", "=", "v_s", "\n", "self", ".", "absolute_maxima_states", "=", "[", "]", "\n", "", "self", ".", "absolute_maxima_states", ".", "append", "(", "(", "s", ",", "v_s", ",", "next_val_avg", ",", "c_s", ")", ")", "\n", "\n", "# calculates weighted average of value difference variance", "\n", "", "", "next_val_diff_var", "=", "np", ".", "sum", "(", "\n", "ns_abs_diff", "*", "(", "c_sa", "/", "float", "(", "c_s", ")", ")", "for", "c_sa", ",", "ns_abs_diff", "in", "next_val_diff_vars", ")", ".", "item", "(", ")", "\n", "val_diff_variances", ".", "append", "(", "(", "s", ",", "next_val_diff_var", ",", "c_s", ")", ")", "\n", "\n", "# calculates value difference variance state outliers", "\n", "", "state_outliers_idxs", "=", "get_outliers_dist_mean", "(", "[", "x", "[", "1", "]", "for", "x", "in", "val_diff_variances", "]", ",", "self", ".", "state_diff_outlier_stds", ")", "\n", "self", ".", "val_diff_variance_state_outliers", "=", "[", "val_diff_variances", "[", "i", "]", "for", "i", "in", "state_outliers_idxs", "]", "\n", "\n", "# calculates value difference mean state-action outliers (above mean)", "\n", "visited_next_val_diff_avgs_sa", "=", "np", ".", "nonzero", "(", "next_val_diff_avgs", ")", "\n", "visited_next_val_diff_avgs", "=", "next_val_diff_avgs", "[", "visited_next_val_diff_avgs_sa", "]", "\n", "outlier_idxs", "=", "get_outliers_dist_mean", "(", "visited_next_val_diff_avgs", ",", "self", ".", "state_diff_outlier_stds", ",", "below", "=", "False", ")", "\n", "s_idxs", "=", "visited_next_val_diff_avgs_sa", "[", "0", "]", "[", "outlier_idxs", "]", ".", "tolist", "(", ")", "\n", "a_idxs", "=", "visited_next_val_diff_avgs_sa", "[", "1", "]", "[", "outlier_idxs", "]", ".", "tolist", "(", ")", "\n", "diff_avgs", "=", "visited_next_val_diff_avgs", "[", "outlier_idxs", "]", ".", "tolist", "(", ")", "\n", "sa_counts", "=", "self", ".", "agent", ".", "c_sa", "[", "visited_next_val_diff_avgs_sa", "]", ".", "tolist", "(", ")", "\n", "self", ".", "val_diff_mean_action_outliers", "=", "list", "(", "zip", "(", "s_idxs", ",", "a_idxs", ",", "diff_avgs", ",", "sa_counts", ")", ")", "\n", "\n", "# sorts lists", "\n", "self", ".", "local_minima_states", ".", "sort", "(", "key", "=", "lambda", "e", ":", "e", "[", "1", "]", ")", "\n", "self", ".", "local_maxima_states", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "1", "]", ")", "\n", "self", ".", "absolute_minima_states", ".", "sort", "(", "key", "=", "lambda", "e", ":", "e", "[", "1", "]", ")", "\n", "self", ".", "absolute_maxima_states", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "1", "]", ")", "\n", "self", ".", "val_diff_mean_action_outliers", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "2", "]", ")", "\n", "self", ".", "val_diff_variance_state_outliers", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.transition_values.TransitionValuesAnalysis._save_report": [[227, 295], ["transition_values.TransitionValuesAnalysis.helper.get_features_bins", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "transition_values.TransitionValuesAnalysis.config.get_action_names", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "transition_values.TransitionValuesAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "transition_values.TransitionValuesAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "transition_values.TransitionValuesAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "transition_values.TransitionValuesAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "transition_values.TransitionValuesAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "transition_values.TransitionValuesAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "len", "len", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line"], ["", "def", "_save_report", "(", "self", ",", "file", ",", "write_console", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} local minima states found (min. transition support: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "local_minima_states", ")", ",", "self", ".", "min_transition_count", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "val", ",", "ns_val_avg", ",", "n", "in", "self", ".", "local_minima_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "print_line", "(", "'\\t{}-{} (count: {}, value: {:.3f} <= avg next values: {:.3f})'", ".", "format", "(", "\n", "s", ",", "feats_labels", ",", "n", ",", "val", ",", "ns_val_avg", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} absolute minima states found (min. transition support: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "absolute_minima_states", ")", ",", "self", ".", "min_transition_count", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "val", ",", "ns_val_avg", ",", "n", "in", "self", ".", "absolute_minima_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "print_line", "(", "'\\t{}-{} (count: {}, value: {:.3f} <= avg next values: {:.3f})'", ".", "format", "(", "\n", "s", ",", "feats_labels", ",", "n", ",", "val", ",", "ns_val_avg", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} local maxima states found (min. transition support: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "local_maxima_states", ")", ",", "self", ".", "min_transition_count", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "val", ",", "ns_val_avg", ",", "n", "in", "self", ".", "local_maxima_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "print_line", "(", "'\\t{}-{} (count: {}, value: {:.3f} >= avg next values: {:.3f})'", ".", "format", "(", "\n", "s", ",", "feats_labels", ",", "n", ",", "val", ",", "ns_val_avg", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} absolute maxima states found (min. transition support: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "absolute_maxima_states", ")", ",", "self", ".", "min_transition_count", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "val", ",", "ns_val_avg", ",", "n", "in", "self", ".", "absolute_maxima_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "print_line", "(", "'\\t{}-{} (count: {}, value: {:.3f} >= avg next values: {:.3f})'", ".", "format", "(", "\n", "s", ",", "feats_labels", ",", "n", ",", "val", ",", "ns_val_avg", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "\n", "'{} value difference mean state outliers found (min. transition support: {}, outlier stds: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "val_diff_mean_action_outliers", ")", ",", "self", ".", "min_transition_count", ",", "self", ".", "state_diff_outlier_stds", ")", ",", "\n", "file", ",", "write_console", ")", "\n", "\n", "action_names", "=", "self", ".", "config", ".", "get_action_names", "(", ")", "\n", "for", "s", ",", "a", ",", "diff", ",", "n", "in", "self", ".", "val_diff_mean_action_outliers", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "print_line", "(", "'\\t{}-{} - {} (trans. count: {}, mean value diff.: {:.3f})'", ".", "format", "(", "\n", "s", ",", "feats_labels", ",", "action_names", "[", "a", "]", ",", "n", ",", "diff", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "\n", "'{} value difference variance state-action outliers found (min. transition support: {}, outlier stds: {}):'", ".", "\n", "format", "(", "len", "(", "self", ".", "val_diff_variance_state_outliers", ")", ",", "self", ".", "min_transition_count", ",", "\n", "self", ".", "state_diff_outlier_stds", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "diff", ",", "n", "in", "self", ".", "val_diff_variance_state_outliers", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "print_line", "(", "'\\t{}-{} (count: {}, value diff. variance: {:.3f})'", ".", "format", "(", "\n", "s", ",", "feats_labels", ",", "n", ",", "diff", ")", ",", "file", ",", "write_console", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.transition_values.TransitionValuesAnalysis.get_stats": [[296, 304], ["len", "len", "len", "len", "len", "len"], "methods", ["None"], ["", "", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'Num local minima'", ":", "(", "len", "(", "self", ".", "local_minima_states", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num absolute minima'", ":", "(", "len", "(", "self", ".", "absolute_minima_states", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num local maxima'", ":", "(", "len", "(", "self", ".", "local_maxima_states", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num absolute maxima'", ":", "(", "len", "(", "self", ".", "absolute_maxima_states", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num val diff mean state outliers'", ":", "(", "len", "(", "self", ".", "val_diff_mean_action_outliers", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num val diff variance state-action outliers'", ":", "(", "len", "(", "self", ".", "val_diff_variance_state_outliers", ")", ",", "0.", ",", "1", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.transition_values.TransitionValuesAnalysis._save_visual_report": [[306, 333], ["transition_values.TransitionValuesAnalysis.helper.get_features_bins", "interestingness_xrl.learning.get_features_from_index", "transition_values.TransitionValuesAnalysis.helper.save_features_image", "interestingness_xrl.learning.get_features_from_index", "transition_values.TransitionValuesAnalysis.helper.save_features_image", "interestingness_xrl.learning.get_features_from_index", "transition_values.TransitionValuesAnalysis.helper.save_features_image", "interestingness_xrl.learning.get_features_from_index", "transition_values.TransitionValuesAnalysis.helper.save_features_image", "interestingness_xrl.learning.get_features_from_index", "transition_values.TransitionValuesAnalysis.helper.save_features_image", "interestingness_xrl.learning.get_features_from_index", "transition_values.TransitionValuesAnalysis.helper.save_features_image", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image"], ["", "def", "_save_visual_report", "(", "self", ",", "path", ",", "clear", "=", "True", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "for", "s", ",", "*", "_", "in", "self", ".", "local_minima_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'local-minimum-s-{}.png'", ".", "format", "(", "s", ")", ")", ")", "\n", "\n", "", "for", "s", ",", "*", "_", "in", "self", ".", "absolute_minima_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'absolute-minimum-s-{}.png'", ".", "format", "(", "s", ")", ")", ")", "\n", "\n", "", "for", "s", ",", "*", "_", "in", "self", ".", "local_maxima_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'local-maximum-s-{}.png'", ".", "format", "(", "s", ")", ")", ")", "\n", "\n", "", "for", "s", ",", "*", "_", "in", "self", ".", "absolute_maxima_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'absolute-maximum-s-{}.png'", ".", "format", "(", "s", ")", ")", ")", "\n", "\n", "", "for", "s", ",", "a", ",", "*", "_", "in", "self", ".", "val_diff_mean_action_outliers", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'val-diff-mean-outlier-s-{}-a-{}.png'", ".", "format", "(", "s", ",", "a", ")", ")", ")", "\n", "\n", "", "for", "s", ",", "*", "_", "in", "self", ".", "val_diff_variance_state_outliers", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'val-diff-variance-outlier-s-{}.png'", ".", "format", "(", "s", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.transition_values.TransitionValuesAnalysis.get_sample_interesting_aspects": [[334, 368], ["aspects.append", "aspects.append", "aspects.append", "aspects.append", "aspects.append", "aspects.append"], "methods", ["None"], ["", "", "def", "get_sample_interesting_aspects", "(", "self", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "        ", "aspects", "=", "[", "]", "\n", "for", "st", ",", "*", "_", "in", "self", ".", "local_minima_states", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'local-minimum-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "st", ",", "*", "_", "in", "self", ".", "absolute_minima_states", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'absolute-minimum-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "st", ",", "*", "_", "in", "self", ".", "local_maxima_states", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'local-maximum-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "st", ",", "*", "_", "in", "self", ".", "absolute_maxima_states", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'absolute-maximum-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "st", ",", "ac", ",", "*", "_", "in", "self", ".", "val_diff_mean_action_outliers", ":", "\n", "            ", "if", "st", "==", "s", "and", "ac", "==", "a", ":", "\n", "                ", "aspects", ".", "append", "(", "'val-diff-mean-outlier-s-{}-a-{}'", ".", "format", "(", "s", ",", "a", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "st", ",", "*", "_", "in", "self", ".", "val_diff_variance_state_outliers", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'val-diff-variance-outlier-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "return", "aspects", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.meta.transition_values.TransitionValuesAnalysis.get_interestingness_names": [[369, 372], ["None"], "methods", ["None"], ["", "def", "get_interestingness_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "'local-minimum-s'", ",", "'absolute-minimum-s'", ",", "'local-maximum-s'", ",", "'absolute-maximum-s'", ",", "\n", "'val-diff-mean-outlier-s'", ",", "'val-diff-variance-outlier-s'", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.values.ValueAnalysis.__init__": [[22, 60], ["interestingness_xrl.explainability.analysis.AnalysisBase.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "helper", ",", "agent", ",", "\n", "min_state_count", "=", "5", ",", "state_outlier_stds", "=", "2", ",", "pred_error_outlier_stds", "=", "2", ",", "feature_outlier_stds", "=", "2", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new value analysis.\n        :param ScenarioHelper helper: the environment helper containing all necessary config and methods.\n        :param QValueBasedAgent agent: the agent to be analyzed.\n        :param int min_state_count: the minimum visits for a state-action pair to be considered an outlier.\n        :param float state_outlier_stds: the threshold for the value of a state for it to be considered an outlier.\n        :param float pred_error_outlier_stds: the threshold for the value of a state for it to be considered an outlier.\n        :param float feature_outlier_stds: the threshold for the mean value of a feature for it to be considered an outlier.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "helper", ",", "agent", ")", "\n", "\n", "self", ".", "mean_val_state_action_outliers", "=", "[", "]", "\n", "\"\"\" The state-action pairs considered as outliers with regards to their mean value (s, [max actions], val, n). \"\"\"", "\n", "\n", "self", ".", "pred_error_state_action_outliers", "=", "[", "]", "\n", "\"\"\" The state-action pairs considered as outliers with regards to their mean prediction error (s, a, dq, n). \"\"\"", "\n", "\n", "self", ".", "action_vals_avg", "=", "[", "]", "\n", "\"\"\" The average reward values for each action (mean, std_dev, n). \"\"\"", "\n", "\n", "self", ".", "mean_val_feature_outliers", "=", "[", "]", "\n", "\"\"\" The feature-action pairs considered as outliers with regards to their mean value (f, v, a, mean, std_dev). \"\"\"", "\n", "\n", "self", ".", "pred_error_feature_outliers", "=", "[", "]", "\n", "\"\"\" The feature-action pairs considered as outliers with regards to their mean prediction error (f, v, a, mean, std_dev). \"\"\"", "\n", "\n", "self", ".", "avg_value", "=", "(", "0.", ",", "0.", ",", "0", ")", "\n", "\"\"\" The overall average value of states (mean, std, n).\"\"\"", "\n", "\n", "self", ".", "avg_pred_error", "=", "(", "0.", ",", "0.", ",", "0", ")", "\n", "\"\"\" The average prediction error among all states and actions (mean, std, n).\"\"\"", "\n", "\n", "self", ".", "min_state_count", "=", "min_state_count", "\n", "self", ".", "state_value_outlier_stds", "=", "state_outlier_stds", "\n", "self", ".", "pred_error_outlier_stds", "=", "pred_error_outlier_stds", "\n", "self", ".", "feature_outlier_stds", "=", "feature_outlier_stds", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.values.ValueAnalysis.difference_to": [[61, 111], ["values.ValueAnalysis", "set", "set", "range", "set", "set", "interestingness_xrl.explainability.get_diff_means", "interestingness_xrl.explainability.get_diff_means", "len", "ValueAnalysis.action_rwds_avg.append", "interestingness_xrl.explainability.get_diff_means"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_diff_means", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_diff_means", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_diff_means"], ["", "def", "difference_to", "(", "self", ",", "other", ")", ":", "\n", "        ", "\"\"\"\n        Gets the difference between this analysis and another given analysis, i.e., the elements that are new and\n        therefore missing in the other analysis. This can be used to highlight what is new in this analysis compared to\n        one that was performed at a prior stage of the agent's behavior / learning.\n        :param ValueAnalysis other: the other analysis to get the difference to.\n        :return ValueAnalysis: an analysis resulting from the difference between this and the given analysis.\n        \"\"\"", "\n", "\n", "# initializes analysis diff", "\n", "diff_analysis", "=", "ValueAnalysis", "(", "\n", "self", ".", "helper", ",", "self", ".", "agent", ",", "\n", "self", ".", "min_state_count", ",", "self", ".", "state_value_outlier_stds", ",", "\n", "self", ".", "pred_error_outlier_stds", ",", "self", ".", "feature_outlier_stds", ")", "\n", "\n", "other_mean_val_state_action_outliers", "=", "set", "(", "s", "for", "s", ",", "*", "_", "in", "other", ".", "mean_val_state_action_outliers", ")", "\n", "diff_analysis", ".", "mean_val_state_action_outliers", "=", "[", "(", "s", ",", "*", "_", ")", "for", "s", ",", "*", "_", "in", "self", ".", "mean_val_state_action_outliers", "\n", "if", "s", "not", "in", "other_mean_val_state_action_outliers", "]", "\n", "\n", "other_pred_error_state_action_outliers", "=", "set", "(", "(", "s", ",", "a", ")", "for", "s", ",", "a", ",", "*", "_", "in", "other", ".", "pred_error_state_action_outliers", ")", "\n", "diff_analysis", ".", "pred_error_state_action_outliers", "=", "[", "(", "s", ",", "a", ",", "*", "_", ")", "for", "s", ",", "a", ",", "*", "_", "in", "self", ".", "pred_error_state_action_outliers", "\n", "if", "(", "s", ",", "a", ")", "not", "in", "other_pred_error_state_action_outliers", "]", "\n", "\n", "diff_analysis", ".", "action_rwds_avg", "=", "[", "]", "\n", "for", "a", "in", "range", "(", "len", "(", "self", ".", "action_vals_avg", ")", ")", ":", "\n", "            ", "mean1", ",", "std1", ",", "n1", "=", "self", ".", "action_vals_avg", "[", "a", "]", "\n", "mean2", ",", "std2", ",", "n2", "=", "other", ".", "action_vals_avg", "[", "a", "]", "\n", "diff_analysis", ".", "action_rwds_avg", ".", "append", "(", "get_diff_means", "(", "mean1", ",", "std1", ",", "n1", ",", "mean2", ",", "std2", ",", "n2", ")", ")", "\n", "\n", "", "other_mean_val_feature_outliers", "=", "set", "(", "(", "f", ",", "v", ")", "for", "f", ",", "v", ",", "*", "_", "in", "other", ".", "mean_val_feature_outliers", ")", "\n", "diff_analysis", ".", "mean_val_feature_outliers", "=", "[", "(", "f", ",", "v", ",", "*", "_", ")", "for", "f", ",", "v", ",", "*", "_", "in", "self", ".", "mean_val_feature_outliers", "\n", "if", "(", "f", ",", "v", ")", "not", "in", "other_mean_val_feature_outliers", "]", "\n", "\n", "other_pred_error_feature_outliers", "=", "set", "(", "(", "f", ",", "v", ",", "a", ")", "for", "f", ",", "v", ",", "a", ",", "*", "_", "in", "other", ".", "pred_error_feature_outliers", ")", "\n", "diff_analysis", ".", "pred_error_feature_outliers", "=", "[", "(", "f", ",", "v", ",", "a", ",", "*", "_", ")", "for", "f", ",", "v", ",", "a", ",", "*", "_", "in", "self", ".", "pred_error_feature_outliers", "\n", "if", "(", "f", ",", "v", ",", "a", ")", "not", "in", "other_pred_error_feature_outliers", "]", "\n", "\n", "mean1", ",", "std1", ",", "n1", "=", "self", ".", "avg_value", "\n", "mean2", ",", "std2", ",", "n2", "=", "other", ".", "avg_value", "\n", "diff_analysis", ".", "avg_value", "=", "get_diff_means", "(", "mean1", ",", "std1", ",", "n1", ",", "mean2", ",", "std2", ",", "n2", ")", "\n", "\n", "mean1", ",", "std1", ",", "n1", "=", "self", ".", "avg_pred_error", "\n", "mean2", ",", "std2", ",", "n2", "=", "other", ".", "avg_pred_error", "\n", "diff_analysis", ".", "avg_pred_error", "=", "get_diff_means", "(", "mean1", ",", "std1", ",", "n1", ",", "mean2", ",", "std2", ",", "n2", ")", "\n", "\n", "return", "diff_analysis", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.values.ValueAnalysis.analyze": [[112, 204], ["numpy.where", "interestingness_xrl.explainability.group_by_key", "numpy.array", "numpy.array", "interestingness_xrl.explainability.get_outliers_dist_mean", "visited_s[].tolist", "visited_v_s[].tolist", "values.ValueAnalysis.agent.c_s[].tolist", "list", "interestingness_xrl.explainability.get_outliers_dist_mean", "[].tolist", "[].tolist", "visited_dq_sa[].tolist", "[].tolist", "list", "interestingness_xrl.explainability.group_by_key", "values.ValueAnalysis.helper.get_features_bins", "range", "enumerate", "enumerate", "range", "interestingness_xrl.explainability.get_outliers_dist_mean", "interestingness_xrl.explainability.get_outliers_dist_mean", "values.ValueAnalysis.mean_val_state_action_outliers.sort", "values.ValueAnalysis.pred_error_state_action_outliers.sort", "values.ValueAnalysis.mean_val_feature_outliers.sort", "values.ValueAnalysis.pred_error_feature_outliers.sort", "float", "float", "len", "list", "[].tolist", "zip", "float", "float", "len", "zip", "list", "len", "range", "interestingness_xrl.learning.get_features_from_index", "range", "interestingness_xrl.learning.get_features_from_index", "range", "len", "range", "numpy.mean", "numpy.std", "zip", "numpy.mean().item", "numpy.mean", "numpy.std", "zip", "numpy.mean().item", "numpy.std().item", "range", "range", "len", "[].append", "len", "[].append", "range", "visited_sa[].tolist", "visited_sa[].tolist", "len", "len", "range", "range", "len", "feats_vals_avg.append", "numpy.mean", "numpy.where", "numpy.mean", "numpy.std", "range", "len", "feats_pred_error_avg.append", "float", "float", "numpy.mean", "numpy.std", "float", "float", "numpy.mean", "numpy.std"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.group_by_key", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_outliers_dist_mean", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_outliers_dist_mean", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.group_by_key", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_outliers_dist_mean", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_outliers_dist_mean", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index"], ["", "def", "analyze", "(", "self", ")", ":", "\n", "\n", "# gets visited state-action pairs with sufficient support", "\n", "        ", "visited_sa", "=", "np", ".", "where", "(", "self", ".", "agent", ".", "c_sa", ">=", "self", ".", "min_state_count", ")", "\n", "\n", "# gets overall average state value", "\n", "visited_q_sa", "=", "self", ".", "agent", ".", "q", "[", "visited_sa", "]", "\n", "self", ".", "avg_value", "=", "(", "float", "(", "np", ".", "mean", "(", "visited_q_sa", ")", ")", ",", "float", "(", "np", ".", "std", "(", "visited_q_sa", ")", ")", ",", "len", "(", "visited_q_sa", ")", ")", "\n", "\n", "# gets states' values (max q)", "\n", "visited_q_s", "=", "group_by_key", "(", "list", "(", "zip", "(", "visited_sa", "[", "0", "]", ".", "tolist", "(", ")", ",", "visited_q_sa", ")", ")", ")", "\n", "visited_s", "=", "np", ".", "array", "(", "[", "s", "for", "s", ",", "_", "in", "visited_q_s", "]", ")", "\n", "visited_v_s", "=", "np", ".", "array", "(", "[", "np", ".", "mean", "(", "values", ")", ".", "item", "(", ")", "for", "_", ",", "values", "in", "visited_q_s", "]", ")", "\n", "\n", "# gets states with outlier maximum values and the corresponding actions", "\n", "state_outliers", "=", "get_outliers_dist_mean", "(", "visited_v_s", ",", "self", ".", "state_value_outlier_stds", ")", "\n", "s_idxs", "=", "visited_s", "[", "state_outliers", "]", ".", "tolist", "(", ")", "\n", "as_idxs", "=", "[", "np", ".", "where", "(", "self", ".", "agent", ".", "q", "[", "visited_s", "[", "i", "]", "]", "==", "visited_v_s", "[", "i", "]", ")", "[", "0", "]", ".", "tolist", "(", ")", "for", "i", "in", "state_outliers", "]", "\n", "s_values", "=", "visited_v_s", "[", "state_outliers", "]", ".", "tolist", "(", ")", "\n", "counts", "=", "self", ".", "agent", ".", "c_s", "[", "s_idxs", "]", ".", "tolist", "(", ")", "\n", "self", ".", "mean_val_state_action_outliers", "=", "list", "(", "zip", "(", "s_idxs", ",", "as_idxs", ",", "s_values", ",", "counts", ")", ")", "\n", "\n", "# gets overall average prediction error", "\n", "visited_dq_sa", "=", "self", ".", "agent", ".", "dq", "[", "visited_sa", "]", "\n", "self", ".", "avg_pred_error", "=", "(", "float", "(", "np", ".", "mean", "(", "visited_dq_sa", ")", ")", ",", "float", "(", "np", ".", "std", "(", "visited_dq_sa", ")", ")", ",", "len", "(", "visited_dq_sa", ")", ")", "\n", "\n", "# gets state-action pairs with outlier mean prediction errors (delta-q)", "\n", "state_action_outliers", "=", "get_outliers_dist_mean", "(", "visited_dq_sa", ",", "self", ".", "pred_error_outlier_stds", ")", "\n", "s_idxs", "=", "visited_sa", "[", "0", "]", "[", "state_action_outliers", "]", ".", "tolist", "(", ")", "\n", "a_idxs", "=", "visited_sa", "[", "1", "]", "[", "state_action_outliers", "]", ".", "tolist", "(", ")", "\n", "pred_errors", "=", "visited_dq_sa", "[", "state_action_outliers", "]", ".", "tolist", "(", ")", "\n", "counts", "=", "self", ".", "agent", ".", "c_sa", "[", "visited_sa", "]", "[", "state_action_outliers", "]", ".", "tolist", "(", ")", "\n", "self", ".", "pred_error_state_action_outliers", "=", "list", "(", "zip", "(", "s_idxs", ",", "a_idxs", ",", "pred_errors", ",", "counts", ")", ")", "\n", "\n", "# gets average value per action", "\n", "action_values", "=", "group_by_key", "(", "list", "(", "zip", "(", "visited_sa", "[", "1", "]", ".", "tolist", "(", ")", ",", "visited_q_sa", ")", ")", ")", "\n", "self", ".", "action_vals_avg", "=", "[", "(", "a", ",", "np", ".", "mean", "(", "values", ")", ".", "item", "(", ")", ",", "np", ".", "std", "(", "values", ")", ".", "item", "(", ")", ")", "for", "a", ",", "values", "in", "action_values", "]", "\n", "\n", "# collects maximal values for all state features", "\n", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "feats_vals", "=", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "feats_nbins", ")", ")", "]", "\n", "feats_dqs", "=", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "feats_nbins", ")", ")", "]", "\n", "for", "f", "in", "range", "(", "len", "(", "feats_nbins", ")", ")", ":", "\n", "            ", "feats_vals", "[", "f", "]", "=", "[", "[", "]", "for", "_", "in", "range", "(", "feats_nbins", "[", "f", "]", ")", "]", "\n", "feats_dqs", "[", "f", "]", "=", "[", "[", "]", "for", "_", "in", "range", "(", "feats_nbins", "[", "f", "]", ")", "]", "\n", "for", "v", "in", "range", "(", "feats_nbins", "[", "f", "]", ")", ":", "\n", "                ", "feats_dqs", "[", "f", "]", "[", "v", "]", "=", "[", "[", "]", "for", "_", "in", "range", "(", "self", ".", "config", ".", "num_actions", ")", "]", "\n", "\n", "", "", "for", "i", ",", "val", "in", "enumerate", "(", "visited_v_s", ")", ":", "\n", "\n", "# gets features for each visited state", "\n", "            ", "s", "=", "visited_s", "[", "i", "]", "\n", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "\n", "# for each feature, adds the value to the corresponding feature value bucket", "\n", "for", "f", "in", "range", "(", "len", "(", "obs_vec", ")", ")", ":", "\n", "                ", "feats_vals", "[", "f", "]", "[", "obs_vec", "[", "f", "]", "]", ".", "append", "(", "val", ")", "\n", "\n", "", "", "for", "i", ",", "dq", "in", "enumerate", "(", "visited_dq_sa", ")", ":", "\n", "# gets features for each visited state-action pair", "\n", "            ", "s", "=", "visited_sa", "[", "0", "]", "[", "i", "]", "\n", "a", "=", "visited_sa", "[", "1", "]", "[", "i", "]", "\n", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "\n", "# for each feature, adds the value to the corresponding feature value bucket", "\n", "for", "f", "in", "range", "(", "len", "(", "obs_vec", ")", ")", ":", "\n", "                ", "feats_dqs", "[", "f", "]", "[", "obs_vec", "[", "f", "]", "]", "[", "a", "]", ".", "append", "(", "dq", ")", "\n", "\n", "# gets average value and pred. error per state feature and extracts outliers", "\n", "", "", "feats_vals_avg", "=", "[", "]", "\n", "feats_pred_error_avg", "=", "[", "]", "\n", "for", "f", "in", "range", "(", "len", "(", "feats_nbins", ")", ")", ":", "\n", "            ", "for", "v", "in", "range", "(", "feats_nbins", "[", "f", "]", ")", ":", "\n", "                ", "q_values", "=", "feats_vals", "[", "f", "]", "[", "v", "]", "\n", "if", "len", "(", "q_values", ")", ">", "0", ":", "\n", "                    ", "feats_vals_avg", ".", "append", "(", "(", "f", ",", "v", ",", "float", "(", "np", ".", "mean", "(", "q_values", ")", ")", ",", "float", "(", "np", ".", "std", "(", "q_values", ")", ")", ")", ")", "\n", "", "for", "a", "in", "range", "(", "self", ".", "config", ".", "num_actions", ")", ":", "\n", "                    ", "dqs", "=", "feats_dqs", "[", "f", "]", "[", "v", "]", "[", "a", "]", "\n", "if", "len", "(", "dqs", ")", ">", "0", ":", "\n", "                        ", "feats_pred_error_avg", ".", "append", "(", "(", "f", ",", "v", ",", "a", ",", "float", "(", "np", ".", "mean", "(", "dqs", ")", ")", ",", "float", "(", "np", ".", "std", "(", "dqs", ")", ")", ")", ")", "\n", "\n", "", "", "", "", "feat_outliers_idxs", "=", "get_outliers_dist_mean", "(", "[", "x", "[", "2", "]", "for", "x", "in", "feats_vals_avg", "]", ",", "self", ".", "feature_outlier_stds", ")", "\n", "self", ".", "mean_val_feature_outliers", "=", "[", "feats_vals_avg", "[", "i", "]", "for", "i", "in", "feat_outliers_idxs", "]", "\n", "\n", "feat_outliers_idxs", "=", "get_outliers_dist_mean", "(", "[", "x", "[", "3", "]", "for", "x", "in", "feats_pred_error_avg", "]", ",", "self", ".", "feature_outlier_stds", ")", "\n", "self", ".", "pred_error_feature_outliers", "=", "[", "feats_pred_error_avg", "[", "i", "]", "for", "i", "in", "feat_outliers_idxs", "]", "\n", "\n", "# sorts lists", "\n", "self", ".", "mean_val_state_action_outliers", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "2", "]", ")", "\n", "self", ".", "pred_error_state_action_outliers", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "2", "]", ")", "\n", "self", ".", "mean_val_feature_outliers", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "2", "]", ")", "\n", "self", ".", "pred_error_feature_outliers", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.values.ValueAnalysis._save_report": [[205, 269], ["values.ValueAnalysis.helper.get_features_bins", "values.ValueAnalysis.config.get_action_names", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "values.ValueAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "values.ValueAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "numpy.zeros", "interestingness_xrl.util.print_line", "numpy.zeros", "interestingness_xrl.util.print_line", "len", "len", "len", "len", "values.ValueAnalysis.helper.get_features_labels", "len", "len", "values.ValueAnalysis.helper.get_features_labels"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels"], ["", "def", "_save_report", "(", "self", ",", "file", ",", "write_console", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "action_names", "=", "self", ".", "config", ".", "get_action_names", "(", ")", "\n", "\n", "mean", ",", "std", ",", "n", "=", "self", ".", "avg_value", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'Average overall value: {:.3f} \u00b1 {:.3f} (count: {})'", "\n", ".", "format", "(", "mean", ",", "std", ",", "n", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} state-action value outliers found (min. support: {}, outlier threshold: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "mean_val_state_action_outliers", ")", ",", "\n", "self", ".", "min_state_count", ",", "self", ".", "state_value_outlier_stds", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "actions", ",", "val", ",", "n", "in", "self", ".", "mean_val_state_action_outliers", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "act_labels", "=", "[", "action_names", "[", "a", "]", "for", "a", "in", "actions", "]", "\n", "print_line", "(", "'\\t{}-{} (value: {:.3f}, count: {})\\n\\t\\tMax actions: {}'", ".", "format", "(", "\n", "s", ",", "feats_labels", ",", "val", ",", "n", ",", "act_labels", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "mean", ",", "std", ",", "n", "=", "self", ".", "avg_pred_error", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'Average overall prediction error: {:.3f} \u00b1 {:.3f} (count: {})'", ".", "format", "(", "\n", "mean", ",", "std", ",", "n", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} state-action prediction error outliers found (min. support: {}, outlier threshold: {}):'", "\n", ".", "format", "(", "len", "(", "self", ".", "pred_error_state_action_outliers", ")", ",", "self", ".", "min_state_count", ",", "\n", "self", ".", "pred_error_outlier_stds", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "a", ",", "pred_error", ",", "n", "in", "self", ".", "pred_error_state_action_outliers", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "print_line", "(", "'\\t{}-{} - {} (avg. prediction error: {:.3f}, count: {})'", ".", "format", "(", "\n", "s", ",", "feats_labels", ",", "action_names", "[", "a", "]", ",", "pred_error", ",", "n", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'Actions\\' average values:'", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "a", ",", "avg", ",", "std", "in", "self", ".", "action_vals_avg", ":", "\n", "            ", "print_line", "(", "'\\t{}: {:.3f} \u00b1 {:.3f}'", ".", "format", "(", "action_names", "[", "a", "]", ",", "avg", ",", "std", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} feature value outliers found (outlier threshold: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "mean_val_feature_outliers", ")", ",", "self", ".", "feature_outlier_stds", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "f", ",", "v", ",", "avg", ",", "std", "in", "self", ".", "mean_val_feature_outliers", ":", "\n", "            ", "obs_vec", "=", "np", ".", "zeros", "(", "len", "(", "feats_nbins", ")", ",", "np", ".", "uint32", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "feat_label", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ")", "[", "f", "]", "\n", "print_line", "(", "'\\t{} (avg. value: {:.3f} \u00b1 {:.3f})'", ".", "format", "(", "feat_label", ",", "avg", ",", "std", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} feature pred. error outliers found (outlier threshold: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "pred_error_feature_outliers", ")", ",", "self", ".", "feature_outlier_stds", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "f", ",", "v", ",", "a", ",", "avg", ",", "std", "in", "self", ".", "pred_error_feature_outliers", ":", "\n", "            ", "obs_vec", "=", "np", ".", "zeros", "(", "len", "(", "feats_nbins", ")", ",", "np", ".", "uint32", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "feat_label", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ")", "[", "f", "]", "\n", "print_line", "(", "'\\t{} - {} (avg. pred. error: {:.3f} \u00b1 {:.3f})'", ".", "format", "(", "\n", "feat_label", ",", "action_names", "[", "a", "]", ",", "avg", ",", "std", ")", ",", "file", ",", "write_console", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.values.ValueAnalysis.get_stats": [[270, 284], ["values.ValueAnalysis.config.get_action_names", "range", "len", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names"], ["", "", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "stats", "=", "{", "\n", "'Mean value'", ":", "self", ".", "avg_value", ",", "\n", "'Mean prediction error'", ":", "self", ".", "avg_pred_error", ",", "\n", "'Num state-action value outliers'", ":", "(", "len", "(", "self", ".", "mean_val_state_action_outliers", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num state-action pred error outliers'", ":", "(", "len", "(", "self", ".", "pred_error_state_action_outliers", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num feature value outliers'", ":", "(", "len", "(", "self", ".", "mean_val_feature_outliers", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num feature pred error outliers'", ":", "(", "len", "(", "self", ".", "pred_error_feature_outliers", ")", ",", "0.", ",", "1", ")", ",", "\n", "}", "\n", "action_names", "=", "self", ".", "config", ".", "get_action_names", "(", ")", "\n", "for", "a", "in", "range", "(", "len", "(", "self", ".", "action_vals_avg", ")", ")", ":", "\n", "            ", "rwd_avg", ",", "rwd_std", ",", "n", "=", "self", ".", "action_vals_avg", "[", "a", "]", "\n", "stats", "[", "'Action {} mean value'", ".", "format", "(", "action_names", "[", "a", "]", ")", "]", "=", "(", "rwd_avg", ",", "rwd_std", ",", "n", ")", "\n", "", "return", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.values.ValueAnalysis._save_visual_report": [[285, 307], ["values.ValueAnalysis.helper.get_features_bins", "interestingness_xrl.learning.get_features_from_index", "values.ValueAnalysis.helper.save_features_image", "interestingness_xrl.learning.get_features_from_index", "values.ValueAnalysis.helper.save_features_image", "values.ValueAnalysis.helper.save_features_image", "values.ValueAnalysis.helper.save_features_image", "os.path.join", "os.path.join", "len", "os.path.join", "len", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image"], ["", "def", "_save_visual_report", "(", "self", ",", "path", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "for", "s", ",", "*", "_", "in", "self", ".", "mean_val_state_action_outliers", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'mean-val-outlier-s-{}.png'", ".", "format", "(", "s", ")", ")", ")", "\n", "\n", "", "for", "s", ",", "a", ",", "*", "_", "in", "self", ".", "pred_error_state_action_outliers", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'pred-error-outlier-s-{}-a-{}.png'", ".", "format", "(", "s", ",", "a", ")", ")", ")", "\n", "\n", "", "for", "f", ",", "v", ",", "*", "_", "in", "self", ".", "mean_val_feature_outliers", ":", "\n", "            ", "obs_vec", "=", "[", "ANY_FEATURE_IDX", "]", "*", "len", "(", "feats_nbins", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'mean-val-outlier-f-{}-v-{}.png'", ".", "format", "(", "f", ",", "v", ")", ")", ")", "\n", "\n", "", "for", "f", ",", "v", ",", "a", ",", "*", "_", "in", "self", ".", "pred_error_feature_outliers", ":", "\n", "            ", "obs_vec", "=", "[", "ANY_FEATURE_IDX", "]", "*", "len", "(", "feats_nbins", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "self", ".", "helper", ".", "save_features_image", "(", "\n", "obs_vec", ",", "join", "(", "path", ",", "'pred-error-outlier-f-{}-v-{}-a-{}.png'", ".", "format", "(", "f", ",", "v", ",", "a", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.values.ValueAnalysis.get_sample_interesting_aspects": [[308, 335], ["values.ValueAnalysis.helper.get_features_bins", "interestingness_xrl.learning.get_features_from_index", "aspects.append", "aspects.append", "aspects.append", "aspects.append"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index"], ["", "", "def", "get_sample_interesting_aspects", "(", "self", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "aspects", "=", "[", "]", "\n", "for", "st", ",", "*", "_", "in", "self", ".", "mean_val_state_action_outliers", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'mean-val-outlier-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "st", ",", "a", ",", "*", "_", "in", "self", ".", "pred_error_state_action_outliers", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'pred-error-outlier-s-{}-a-{}'", ".", "format", "(", "s", ",", "a", ")", ")", "\n", "break", "\n", "\n", "", "", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "for", "f", ",", "v", ",", "*", "_", "in", "self", ".", "mean_val_feature_outliers", ":", "\n", "            ", "if", "obs_vec", "[", "f", "]", "==", "v", ":", "\n", "                ", "aspects", ".", "append", "(", "'mean-val-outlier-f-{}-v-{}'", ".", "format", "(", "f", ",", "v", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "f", ",", "v", ",", "ac", ",", "*", "_", "in", "self", ".", "pred_error_feature_outliers", ":", "\n", "            ", "if", "obs_vec", "[", "f", "]", "==", "v", "and", "a", "==", "ac", ":", "\n", "                ", "aspects", ".", "append", "(", "'pred-error-outlier-f-{}-v-{}-a-{}'", ".", "format", "(", "f", ",", "v", ",", "a", ")", ")", "\n", "break", "\n", "\n", "", "", "return", "aspects", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.values.ValueAnalysis.get_interestingness_names": [[336, 338], ["None"], "methods", ["None"], ["", "def", "get_interestingness_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "'mean-val-outlier-s'", ",", "'pred-error-outlier-s'", ",", "'mean-val-outlier-f'", ",", "'pred-error-outlier-f'", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.recency.RecencyAnalysis.__init__": [[19, 42], ["interestingness_xrl.explainability.analysis.AnalysisBase.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "helper", ",", "agent", ",", "min_state_count", "=", "5", ",", "state_max_time_step", "=", "0.5", ",", "action_max_time_step", "=", "0.3", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new recency analysis.\n        :param ScenarioHelper helper: the environment helper containing all necessary config and methods.\n        :param QValueBasedAgent agent: the agent to be analyzed.\n        :param int min_state_count: the minimum visits for states and state-action pairs to be considered early.\n        :param float state_max_time_step: the maximum time-step visit (percentage) for a state to be considered early.\n        :param float action_max_time_step: the maximum time-step visit (percentage) for a state-action pair to be considered early.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "helper", ",", "agent", ")", "\n", "\n", "self", ".", "earlier_states", "=", "[", "]", "\n", "\"\"\" The states considered to have been visited earlier (s, t, n). \"\"\"", "\n", "\n", "self", ".", "earlier_actions", "=", "[", "]", "\n", "\"\"\" The state-action pairs considered to have been visited earlier (s, a, t, n). \"\"\"", "\n", "\n", "self", ".", "total_time_steps", "=", "0", "\n", "\"\"\" The total number of time-steps in the agent's interaction with the environment. \"\"\"", "\n", "\n", "self", ".", "min_state_count", "=", "min_state_count", "\n", "self", ".", "state_max_time_step", "=", "state_max_time_step", "\n", "self", ".", "action_max_time_step", "=", "action_max_time_step", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.recency.RecencyAnalysis.difference_to": [[43, 69], ["recency.RecencyAnalysis", "set", "set"], "methods", ["None"], ["", "def", "difference_to", "(", "self", ",", "other", ")", ":", "\n", "        ", "\"\"\"\n        Gets the difference between this analysis and another given analysis, i.e., the elements that are new and\n        therefore missing in the other analysis. This can be used to highlight what is new in this analysis compared to\n        one that was performed at a prior stage of the agent's behavior / learning.\n        :param RecencyAnalysis other: the other analysis to get the difference to.\n        :return RecencyAnalysis: an analysis resulting from the difference between this and the given analysis.\n        \"\"\"", "\n", "\n", "# initializes analysis diff", "\n", "diff_analysis", "=", "RecencyAnalysis", "(", "\n", "self", ".", "helper", ",", "self", ".", "agent", ",", "self", ".", "min_state_count", ",", "self", ".", "state_max_time_step", ",", "self", ".", "action_max_time_step", ")", "\n", "\n", "other_earlier_states", "=", "set", "(", "s", "for", "s", ",", "*", "_", "in", "other", ".", "earlier_states", ")", "\n", "diff_analysis", ".", "earlier_states", "=", "[", "(", "s", ",", "*", "_", ")", "for", "s", ",", "*", "_", "in", "self", ".", "earlier_states", "\n", "if", "s", "not", "in", "other_earlier_states", "]", "\n", "\n", "other_earlier_actions", "=", "set", "(", "(", "s", ",", "a", ")", "for", "s", ",", "a", ",", "*", "_", "in", "other", ".", "earlier_actions", ")", "\n", "diff_analysis", ".", "earlier_actions", "=", "[", "(", "s", ",", "a", ",", "*", "_", ")", "for", "s", ",", "a", ",", "*", "_", "in", "self", ".", "earlier_actions", "\n", "if", "(", "s", ",", "a", ")", "not", "in", "other_earlier_actions", "]", "\n", "\n", "diff_analysis", ".", "total_time_steps", "=", "self", ".", "total_time_steps", "-", "other", ".", "total_time_steps", "\n", "\n", "return", "diff_analysis", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.recency.RecencyAnalysis.analyze": [[70, 98], ["numpy.max().item", "numpy.where", "numpy.where", "list", "list", "recency.RecencyAnalysis.earlier_states.sort", "recency.RecencyAnalysis.earlier_actions.sort", "numpy.logical_and", "numpy.logical_and", "numpy.where", "zip", "numpy.where", "zip", "numpy.max", "[].tolist", "visited_t_s[].tolist", "[].tolist", "[].tolist", "[].tolist", "visited_t_sa[].tolist", "[].tolist"], "methods", ["None"], ["", "def", "analyze", "(", "self", ")", ":", "\n", "\n", "# calculates total time-steps", "\n", "        ", "self", ".", "total_time_steps", "=", "np", ".", "max", "(", "self", ".", "agent", ".", "t_s", ")", ".", "item", "(", ")", "\n", "\n", "visited_s", "=", "np", ".", "where", "(", "np", ".", "logical_and", "(", "self", ".", "agent", ".", "c_s", ">=", "self", ".", "min_state_count", ",", "self", ".", "agent", ".", "t_s", ">=", "0", ")", ")", "\n", "visited_sa", "=", "np", ".", "where", "(", "np", ".", "logical_and", "(", "self", ".", "agent", ".", "c_sa", ">=", "self", ".", "min_state_count", ",", "self", ".", "agent", ".", "t_sa", ">=", "0", ")", ")", "\n", "\n", "# calculates recency of visited states and gets outliers", "\n", "visited_t_s", "=", "self", ".", "agent", ".", "t_s", "[", "visited_s", "]", "\n", "earlier_states_idxs", "=", "np", ".", "where", "(", "visited_t_s", "<=", "self", ".", "state_max_time_step", "*", "self", ".", "total_time_steps", ")", "[", "0", "]", "\n", "self", ".", "earlier_states", "=", "list", "(", "zip", "(", "visited_s", "[", "0", "]", "[", "earlier_states_idxs", "]", ".", "tolist", "(", ")", ",", "\n", "visited_t_s", "[", "earlier_states_idxs", "]", ".", "tolist", "(", ")", ",", "\n", "self", ".", "agent", ".", "c_s", "[", "visited_s", "]", "[", "earlier_states_idxs", "]", ".", "tolist", "(", ")", ")", ")", "\n", "\n", "# calculates recency of visited state-acton pairs and gets outliers", "\n", "visited_t_sa", "=", "self", ".", "agent", ".", "t_sa", "[", "visited_sa", "]", "\n", "earlier_sa_idxs", "=", "np", ".", "where", "(", "visited_t_sa", "<=", "self", ".", "action_max_time_step", "*", "self", ".", "total_time_steps", ")", "[", "0", "]", "\n", "self", ".", "earlier_actions", "=", "list", "(", "zip", "(", "visited_sa", "[", "0", "]", "[", "earlier_sa_idxs", "]", ".", "tolist", "(", ")", ",", "\n", "visited_sa", "[", "1", "]", "[", "earlier_sa_idxs", "]", ".", "tolist", "(", ")", ",", "\n", "visited_t_sa", "[", "earlier_sa_idxs", "]", ".", "tolist", "(", ")", ",", "\n", "self", ".", "agent", ".", "c_sa", "[", "visited_sa", "]", "[", "earlier_sa_idxs", "]", ".", "tolist", "(", ")", ")", ")", "\n", "\n", "# sorts lists", "\n", "self", ".", "earlier_states", ".", "sort", "(", "key", "=", "lambda", "e", ":", "e", "[", "1", "]", ")", "\n", "self", ".", "earlier_actions", ".", "sort", "(", "key", "=", "lambda", "e", ":", "e", "[", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.recency.RecencyAnalysis._save_report": [[99, 126], ["recency.RecencyAnalysis.helper.get_features_bins", "recency.RecencyAnalysis.config.get_action_names", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "recency.RecencyAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "recency.RecencyAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "len", "int", "len", "int"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line"], ["", "def", "_save_report", "(", "self", ",", "file", ",", "write_console", ")", ":", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "action_names", "=", "self", ".", "config", ".", "get_action_names", "(", ")", "\n", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} total time-steps'", ".", "format", "(", "self", ".", "total_time_steps", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} earlier states found (min. support: {}, max time-step: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "earlier_states", ")", ",", "self", ".", "min_state_count", ",", "int", "(", "self", ".", "state_max_time_step", "*", "self", ".", "total_time_steps", ")", ")", ",", "\n", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "t", ",", "n", "in", "self", ".", "earlier_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "print_line", "(", "'\\t{}-{} (count: {}, last time-step: {})'", ".", "format", "(", "s", ",", "feats_labels", ",", "n", ",", "t", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} earlier state-action pairs found (min. support: {}, max time-step: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "earlier_actions", ")", ",", "self", ".", "min_state_count", ",", "int", "(", "self", ".", "action_max_time_step", "*", "self", ".", "total_time_steps", ")", ")", ",", "\n", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "a", ",", "t", ",", "n", "in", "self", ".", "earlier_actions", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "print_line", "(", "'\\t{}-{} - {} (count: {}, last time-step: {})'", ".", "format", "(", "\n", "s", ",", "feats_labels", ",", "action_names", "[", "a", "]", ",", "n", ",", "t", ")", ",", "file", ",", "write_console", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.recency.RecencyAnalysis.get_stats": [[127, 132], ["len", "len"], "methods", ["None"], ["", "", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'Total time-steps'", ":", "(", "self", ".", "total_time_steps", ",", "0.", ",", "1", ")", ",", "\n", "'Num earlier states'", ":", "(", "len", "(", "self", ".", "earlier_states", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num earlier state-actions'", ":", "(", "len", "(", "self", ".", "earlier_actions", ")", ",", "0.", ",", "1", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.recency.RecencyAnalysis._save_visual_report": [[134, 145], ["recency.RecencyAnalysis.helper.get_features_bins", "interestingness_xrl.learning.get_features_from_index", "recency.RecencyAnalysis.helper.save_features_image", "interestingness_xrl.learning.get_features_from_index", "recency.RecencyAnalysis.helper.save_features_image", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image"], ["", "def", "_save_visual_report", "(", "self", ",", "path", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "for", "s", ",", "*", "_", "in", "self", ".", "earlier_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'earlier-s-{}.png'", ".", "format", "(", "s", ")", ")", ")", "\n", "\n", "", "for", "s", ",", "a", ",", "*", "_", "in", "self", ".", "earlier_actions", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'earlier-s-{}-a-{}.png'", ".", "format", "(", "s", ",", "a", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.recency.RecencyAnalysis.get_sample_interesting_aspects": [[146, 160], ["aspects.append", "aspects.append"], "methods", ["None"], ["", "", "def", "get_sample_interesting_aspects", "(", "self", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "        ", "aspects", "=", "[", "]", "\n", "for", "st", ",", "*", "_", "in", "self", ".", "earlier_states", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'earlier-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "st", ",", "ac", ",", "*", "_", "in", "self", ".", "earlier_actions", ":", "\n", "            ", "if", "st", "==", "s", "and", "ac", "==", "a", ":", "\n", "                ", "aspects", ".", "append", "(", "'earlier-ac-{}-{}'", ".", "format", "(", "s", ",", "a", ")", ")", "\n", "break", "\n", "\n", "", "", "return", "aspects", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.recency.RecencyAnalysis.get_interestingness_names": [[161, 163], ["None"], "methods", ["None"], ["", "def", "get_interestingness_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "'earlier-s'", ",", "'earlier-ac'", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis.__init__": [[23, 68], ["interestingness_xrl.explainability.analysis.AnalysisBase.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "helper", ",", "agent", ",", "min_state_count", "=", "100", ",", "max_state_count", "=", "1", ",", "\n", "min_feat_set_count", "=", "10", ",", "min_feat_set_assoc", "=", "0.5", ",", "min_feat_rule_conf", "=", "0.5", ",", "max_feat_set_assoc", "=", "0.01", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new frequent states analysis.\n        :param ScenarioHelper helper: the environment helper containing all necessary config and methods.\n        :param QValueBasedAgent agent: the agent to be analyzed.\n        :param int min_state_count: the minimal frequency of visits to a state for it to be considered frequent.\n        :param int max_state_count: the maximal frequency of visits to a state for it to be considered infrequent.\n        :param float min_feat_set_count: the minimal frequency of state features for a set to be considered frequent.\n        :param float min_feat_set_assoc: the minimal association strength of state features for a set to be considered interesting.\n        :param float min_feat_rule_conf: the minimal confidence of a feature rule antecedent for it to be considered interesting.\n        :param float max_feat_set_assoc: the maximal association strength of state features for a set to be considered infrequent.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "helper", ",", "agent", ")", "\n", "\n", "self", ".", "state_coverage", "=", "0.", "\n", "\"\"\" The coverage of visits to the state space, i.e., the ratio between the visited and total states. \"\"\"", "\n", "\n", "self", ".", "state_dispersion", "=", "0.", "\n", "\"\"\" The dispersion of the distribution of the visits to the state space, i.e., how disperse the visits were. \"\"\"", "\n", "\n", "self", ".", "total_count", "=", "0", "\n", "\"\"\" The total number of visits / interaction time-steps with the environment. \"\"\"", "\n", "\n", "self", ".", "freq_states", "=", "[", "]", "\n", "\"\"\" The frequently-visited states (s, n). \"\"\"", "\n", "\n", "self", ".", "infreq_states", "=", "[", "]", "\n", "\"\"\" The infrequently-visited states (s, n). \"\"\"", "\n", "\n", "self", ".", "freq_feature_sets", "=", "{", "}", "\n", "\"\"\" The association patterns in the state features (feat_set, jacc). \"\"\"", "\n", "\n", "self", ".", "freq_feature_rules", "=", "[", "]", "\n", "\"\"\" The association rules denoting consistent causality effects in the environment (ant, cons, freq, conf). \"\"\"", "\n", "\n", "self", ".", "infreq_feature_sets", "=", "[", "]", "\n", "\"\"\" The infrequent association patterns in the state features (feat_set). \"\"\"", "\n", "\n", "self", ".", "min_state_count", "=", "min_state_count", "\n", "self", ".", "max_state_count", "=", "max_state_count", "\n", "self", ".", "min_feat_set_count", "=", "min_feat_set_count", "\n", "self", ".", "min_feat_set_assoc", "=", "min_feat_set_assoc", "\n", "self", ".", "min_feat_rule_conf", "=", "min_feat_rule_conf", "\n", "self", ".", "max_feat_set_assoc", "=", "max_feat_set_assoc", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis.difference_to": [[69, 115], ["state_frequency.StateFrequencyAnalysis", "set", "set", "set", "set", "set"], "methods", ["None"], ["", "def", "difference_to", "(", "self", ",", "other", ")", ":", "\n", "        ", "\"\"\"\n        Gets the difference between this analysis and another given analysis, i.e., the elements that are new and\n        therefore missing in the other analysis. This can be used to highlight what is new in this analysis compared to\n        one that was performed at a prior stage of the agent's behavior / learning.\n        :param StateFrequencyAnalysis other: the other analysis to get the difference to.\n        :return StateFrequencyAnalysis: an analysis resulting from the difference between this and the given analysis.\n        \"\"\"", "\n", "\n", "# initializes analysis diff", "\n", "diff_analysis", "=", "StateFrequencyAnalysis", "(", "\n", "self", ".", "helper", ",", "self", ".", "agent", ",", "self", ".", "min_state_count", ",", "self", ".", "max_state_count", ",", "self", ".", "min_feat_set_count", ",", "\n", "self", ".", "min_feat_set_assoc", ",", "self", ".", "min_feat_rule_conf", ",", "self", ".", "max_feat_set_assoc", ")", "\n", "\n", "diff_analysis", ".", "state_coverage", "=", "self", ".", "state_coverage", "-", "other", ".", "state_coverage", "\n", "\n", "diff_analysis", ".", "state_dispersion", "=", "self", ".", "state_dispersion", "-", "other", ".", "state_dispersion", "\n", "\n", "diff_analysis", ".", "total_count", "=", "self", ".", "total_count", "-", "other", ".", "total_count", "\n", "\n", "other_freq_states", "=", "set", "(", "s", "for", "s", ",", "*", "_", "in", "other", ".", "freq_states", ")", "\n", "diff_analysis", ".", "freq_states", "=", "[", "(", "s", ",", "*", "_", ")", "for", "s", ",", "*", "_", "in", "self", ".", "freq_states", "\n", "if", "s", "not", "in", "other_freq_states", "]", "\n", "\n", "other_infreq_states", "=", "set", "(", "s", "for", "s", ",", "*", "_", "in", "other", ".", "infreq_states", ")", "\n", "diff_analysis", ".", "infreq_states", "=", "[", "(", "s", ",", "*", "_", ")", "for", "s", ",", "*", "_", "in", "self", ".", "infreq_states", "\n", "if", "s", "not", "in", "other_infreq_states", "]", "\n", "\n", "other_freq_feature_sets", "=", "set", "(", "feat_set", "for", "feat_set", ",", "*", "_", "in", "other", ".", "freq_feature_sets", ")", "\n", "diff_analysis", ".", "freq_feature_sets", "=", "[", "(", "feat_set", ",", "*", "_", ")", "for", "feat_set", ",", "*", "_", "in", "self", ".", "freq_feature_sets", "\n", "if", "feat_set", "not", "in", "other_freq_feature_sets", "]", "\n", "\n", "other_freq_feature_rules", "=", "set", "(", "(", "ant", ",", "cons", ")", "for", "ant", ",", "cons", ",", "*", "_", "in", "other", ".", "freq_feature_rules", ")", "\n", "diff_analysis", ".", "freq_feature_rules", "=", "[", "(", "ant", ",", "cons", ",", "*", "_", ")", "for", "ant", ",", "cons", ",", "*", "_", "in", "self", ".", "freq_feature_rules", "\n", "if", "(", "ant", ",", "cons", ")", "not", "in", "other_freq_feature_rules", "]", "\n", "\n", "other_infreq_feature_sets", "=", "set", "(", "feat_set", "for", "feat_set", ",", "*", "_", "in", "other", ".", "infreq_feature_sets", ")", "\n", "diff_analysis", ".", "infreq_feature_sets", "=", "[", "(", "feat_set", ",", "*", "_", ")", "for", "feat_set", ",", "*", "_", "in", "self", ".", "infreq_feature_sets", "\n", "if", "feat_set", "not", "in", "other_infreq_feature_sets", "]", "\n", "\n", "return", "diff_analysis", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis.analyze": [[116, 172], ["float", "state_frequency.StateFrequencyAnalysis.helper.get_features_bins", "range", "range", "pyfpgrowth.pyfpgrowth.FPTree", "interestingness_xrl.data_mining.jaccard_mining.find_patterns_above", "interestingness_xrl.data_mining.jaccard_mining.filter_maximal", "interestingness_xrl.data_mining.jaccard_mining.generate_association_rules", "pyfpgrowth.pyfpgrowth.FPTree", "interestingness_xrl.data_mining.jaccard_mining.find_patterns_below", "state_frequency.StateFrequencyAnalysis._filter_invalid_infreq_feat_sets", "state_frequency.StateFrequencyAnalysis._filter_maximal_infreq_feat_sets", "state_frequency.StateFrequencyAnalysis.freq_states.sort", "state_frequency.StateFrequencyAnalysis.infreq_states.sort", "state_frequency.StateFrequencyAnalysis.freq_feature_sets.sort", "state_frequency.StateFrequencyAnalysis.freq_feature_rules.sort", "state_frequency.StateFrequencyAnalysis.infreq_feature_sets.sort", "float", "interestingness_xrl.explainability.get_distribution_evenness", "state_frequency.StateFrequencyAnalysis.agent.c_s[].item", "interestingness_xrl.learning.get_features_from_index", "range", "state_frequency.StateFrequencyAnalysis.agent.c_s[].item", "numpy.nonzero", "len", "state_transactions.append", "state_frequency.StateFrequencyAnalysis.freq_states.append", "patterns.items", "obs_vec[].item", "range", "state_frequency.StateFrequencyAnalysis.infreq_states.append", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.find_patterns_above", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.prefixspan.filter_maximal", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.generate_association_rules", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.data_mining.jaccard_mining.find_patterns_below", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis._filter_invalid_infreq_feat_sets", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis._filter_maximal_infreq_feat_sets", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_distribution_evenness", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index"], ["", "def", "analyze", "(", "self", ")", ":", "\n", "\n", "# gets total visited states and calculates coverage and dispersion", "\n", "        ", "visited_states_counts", "=", "self", ".", "agent", ".", "c_s", "[", "np", ".", "nonzero", "(", "self", ".", "agent", ".", "c_s", ")", "]", "\n", "self", ".", "state_coverage", "=", "float", "(", "len", "(", "visited_states_counts", ")", ")", "/", "self", ".", "config", ".", "num_states", "\n", "self", ".", "state_dispersion", "=", "float", "(", "get_distribution_evenness", "(", "visited_states_counts", ")", ")", "\n", "\n", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "# builds states-as-transactions list and counts total state visits", "\n", "state_transactions", "=", "[", "]", "\n", "self", ".", "total_count", "=", "0", "\n", "for", "s", "in", "range", "(", "self", ".", "agent", ".", "num_states", ")", ":", "\n", "            ", "cs", "=", "self", ".", "agent", ".", "c_s", "[", "s", "]", ".", "item", "(", ")", "\n", "self", ".", "total_count", "+=", "cs", "\n", "\n", "# converts state idx to set of features and adds them as transactions", "\n", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "state_transaction", "=", "[", "(", "f", ",", "obs_vec", "[", "f", "]", ".", "item", "(", ")", ")", "for", "f", "in", "range", "(", "len", "(", "obs_vec", ")", ")", "]", "\n", "for", "c", "in", "range", "(", "cs", ")", ":", "\n", "                ", "state_transactions", ".", "append", "(", "state_transaction", ")", "\n", "\n", "# gets (in)frequent states", "\n", "", "", "self", ".", "freq_states", "=", "[", "]", "\n", "self", ".", "infreq_states", "=", "[", "]", "\n", "for", "s", "in", "range", "(", "self", ".", "agent", ".", "num_states", ")", ":", "\n", "            ", "c_s", "=", "self", ".", "agent", ".", "c_s", "[", "s", "]", ".", "item", "(", ")", "\n", "if", "c_s", ">=", "self", ".", "min_state_count", ":", "\n", "                ", "self", ".", "freq_states", ".", "append", "(", "(", "s", ",", "c_s", ")", ")", "\n", "", "elif", "0", "<", "c_s", "<=", "self", ".", "max_state_count", ":", "\n", "                ", "self", ".", "infreq_states", ".", "append", "(", "(", "s", ",", "c_s", ")", ")", "\n", "\n", "# gets frequent feature-sets", "\n", "", "", "tree", "=", "FPTree", "(", "state_transactions", ",", "self", ".", "min_feat_set_count", ",", "None", ",", "None", ")", "\n", "patterns", ",", "no_patterns", ",", "counts", "=", "find_patterns_above", "(", "tree", ",", "self", ".", "min_feat_set_assoc", ")", "\n", "\n", "# filters out non-maximal patterns and 1-item patterns", "\n", "filter_maximal", "(", "patterns", ")", "\n", "self", ".", "freq_feature_sets", "=", "[", "(", "feat_set", ",", "jacc", ")", "for", "feat_set", ",", "jacc", "in", "patterns", ".", "items", "(", ")", "]", "\n", "self", ".", "freq_feature_sets", "=", "[", "feat_set", "for", "feat_set", "in", "self", ".", "freq_feature_sets", "if", "len", "(", "feat_set", "[", "0", "]", ")", ">", "1", "]", "\n", "\n", "# gets feature association rules", "\n", "self", ".", "freq_feature_rules", "=", "generate_association_rules", "(", "patterns", ",", "counts", ",", "self", ".", "min_feat_rule_conf", ")", "\n", "\n", "# gets infrequent feature-sets", "\n", "tree", "=", "FPTree", "(", "state_transactions", ",", "1", ",", "None", ",", "None", ")", "\n", "self", ".", "infreq_feature_sets", "=", "find_patterns_below", "(", "tree", ",", "self", ".", "max_feat_set_assoc", ")", "\n", "self", ".", "_filter_invalid_infreq_feat_sets", "(", ")", "\n", "self", ".", "_filter_maximal_infreq_feat_sets", "(", ")", "\n", "\n", "# sorts lists", "\n", "self", ".", "freq_states", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "1", "]", ")", "\n", "self", ".", "infreq_states", ".", "sort", "(", "key", "=", "lambda", "e", ":", "e", "[", "1", "]", ")", "\n", "self", ".", "freq_feature_sets", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "1", "]", ")", "\n", "self", ".", "freq_feature_rules", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "3", "]", ")", "\n", "self", ".", "infreq_feature_sets", ".", "sort", "(", "key", "=", "lambda", "e", ":", "len", "(", "e", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis._filter_invalid_infreq_feat_sets": [[173, 189], ["set", "infreq_feature_sets.append", "set.add"], "methods", ["None"], ["", "def", "_filter_invalid_infreq_feat_sets", "(", "self", ")", ":", "\n", "\n", "# filters out invalid feature-sets, i.e., feature values drawn from the same feature idx", "\n", "        ", "infreq_feature_sets", "=", "[", "]", "\n", "for", "infreq_feature_set", "in", "self", ".", "infreq_feature_sets", ":", "\n", "            ", "idxs", "=", "set", "(", ")", "\n", "valid", "=", "True", "\n", "for", "f", ",", "_", "in", "infreq_feature_set", ":", "\n", "                ", "if", "f", "in", "idxs", ":", "\n", "                    ", "valid", "=", "False", "\n", "break", "\n", "", "else", ":", "\n", "                    ", "idxs", ".", "add", "(", "f", ")", "\n", "", "", "if", "valid", ":", "\n", "                ", "infreq_feature_sets", ".", "append", "(", "infreq_feature_set", ")", "\n", "", "", "self", ".", "infreq_feature_sets", "=", "infreq_feature_sets", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis._filter_maximal_infreq_feat_sets": [[190, 199], ["set", "list", "set", "set", "set.issubset", "set.remove"], "methods", ["None"], ["", "def", "_filter_maximal_infreq_feat_sets", "(", "self", ")", ":", "\n", "        ", "infreq_feature_sets", "=", "set", "(", "self", ".", "infreq_feature_sets", ")", "\n", "for", "super_set_lst", "in", "self", ".", "infreq_feature_sets", ":", "\n", "            ", "super_set", "=", "set", "(", "super_set_lst", ")", "\n", "for", "sub_set_lst", "in", "self", ".", "infreq_feature_sets", ":", "\n", "                ", "sub_set", "=", "set", "(", "sub_set_lst", ")", "\n", "if", "super_set", "!=", "sub_set", "and", "sub_set_lst", "in", "infreq_feature_sets", "and", "sub_set", ".", "issubset", "(", "super_set", ")", ":", "\n", "                    ", "infreq_feature_sets", ".", "remove", "(", "sub_set_lst", ")", "\n", "", "", "", "self", ".", "infreq_feature_sets", "=", "list", "(", "infreq_feature_sets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis._save_report": [[200, 256], ["state_frequency.StateFrequencyAnalysis.helper.get_features_bins", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "len", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "state_frequency.StateFrequencyAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "state_frequency.StateFrequencyAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "state_frequency.StateFrequencyAnalysis._get_feats_labels", "interestingness_xrl.util.print_line", "float", "state_frequency.StateFrequencyAnalysis._get_feats_labels", "state_frequency.StateFrequencyAnalysis._get_feats_labels", "interestingness_xrl.util.print_line", "state_frequency.StateFrequencyAnalysis._get_feats_labels", "interestingness_xrl.util.print_line", "len", "float", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis._get_feats_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis._get_feats_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis._get_feats_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis._get_feats_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line"], ["", "def", "_save_report", "(", "self", ",", "file", ",", "write_console", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'Total states visited: {}'", ".", "format", "(", "self", ".", "total_count", ")", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'Coverage of the state-space: {:.2f}%'", ".", "format", "(", "self", ".", "state_coverage", "*", "100.", ")", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'Dispersion of the visits to the state-space: {:.3f}'", ".", "format", "(", "\n", "self", ".", "state_dispersion", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} frequent states found (min. support: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "freq_states", ")", ",", "self", ".", "min_state_count", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "n", "in", "self", ".", "freq_states", ":", "\n", "            ", "rf", "=", "n", "/", "float", "(", "self", ".", "total_count", ")", "\n", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "print_line", "(", "'\\t{}-{} (count: {}, freq.: {:.3f})'", ".", "format", "(", "s", ",", "feats_labels", ",", "n", ",", "rf", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} infrequent states found (max. support: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "infreq_states", ")", ",", "self", ".", "max_state_count", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "n", "in", "self", ".", "infreq_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ",", "True", ")", "\n", "print_line", "(", "'\\t{}-{} (count: {})'", ".", "format", "(", "s", ",", "feats_labels", ",", "n", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} frequent feature-sets found (min. support: {}, min. assoc. strength: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "freq_feature_sets", ")", ",", "self", ".", "min_feat_set_count", ",", "self", ".", "min_feat_set_assoc", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "num_feats", "=", "len", "(", "feats_nbins", ")", "\n", "for", "feat_set", ",", "jacc", "in", "self", ".", "freq_feature_sets", ":", "\n", "            ", "feats_labels", "=", "self", ".", "_get_feats_labels", "(", "feat_set", ",", "num_feats", ")", "\n", "print_line", "(", "'\\t{} (jacc: {:.3f})'", ".", "format", "(", "feats_labels", ",", "jacc", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} interesting feature-rules found (min. confidence: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "freq_feature_rules", ")", ",", "self", ".", "min_feat_rule_conf", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "ant", ",", "cons", ",", "n", ",", "conf", "in", "self", ".", "freq_feature_rules", ":", "\n", "            ", "n", "/=", "float", "(", "self", ".", "total_count", ")", "\n", "ant", "=", "self", ".", "_get_feats_labels", "(", "ant", ",", "num_feats", ")", "\n", "cons", "=", "self", ".", "_get_feats_labels", "(", "cons", ",", "num_feats", ")", "\n", "print_line", "(", "'\\t{} => {} (freq: {:.3f}, conf: ({:.3f}))'", ".", "format", "(", "ant", ",", "cons", ",", "n", ",", "conf", ")", ",", "file", ",", "\n", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} infrequent feature-sets found (max. assoc. strength: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "infreq_feature_sets", ")", ",", "self", ".", "max_feat_set_assoc", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "feat_set", "in", "self", ".", "infreq_feature_sets", ":", "\n", "            ", "feats_labels", "=", "self", ".", "_get_feats_labels", "(", "feat_set", ",", "num_feats", ")", "\n", "print_line", "(", "'\\t{}'", ".", "format", "(", "feats_labels", ")", ",", "file", ",", "write_console", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis._get_feats_labels": [[257, 264], ["numpy.zeros", "state_frequency.StateFrequencyAnalysis.helper.get_features_labels"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels"], ["", "", "def", "_get_feats_labels", "(", "self", ",", "feat_set", ",", "num_feats", ")", ":", "\n", "        ", "obs_vec", "=", "np", ".", "zeros", "(", "num_feats", ",", "np", ".", "uint32", ")", "\n", "for", "f", ",", "v", "in", "feat_set", ":", "\n", "            ", "obs_vec", "[", "f", "]", "=", "v", "\n", "", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ")", "\n", "feats_labels", "=", "[", "feats_labels", "[", "f", "]", "for", "f", ",", "_", "in", "feat_set", "]", "\n", "return", "feats_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis.get_stats": [[265, 275], ["len", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'Num total visits'", ":", "(", "self", ".", "total_count", ",", "0.", ",", "1", ")", ",", "\n", "'State coverage'", ":", "(", "self", ".", "state_coverage", ",", "0.", ",", "1", ")", ",", "\n", "'Dispersion of visits'", ":", "(", "self", ".", "state_dispersion", ",", "0.", ",", "1", ")", ",", "\n", "'Num frequent states'", ":", "(", "len", "(", "self", ".", "freq_states", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num infrequent states'", ":", "(", "len", "(", "self", ".", "infreq_states", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num frequent feature-sets'", ":", "(", "len", "(", "self", ".", "freq_feature_sets", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num feature-rules'", ":", "(", "len", "(", "self", ".", "freq_feature_rules", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num infrequent feature-sets'", ":", "(", "len", "(", "self", ".", "infreq_feature_sets", ")", ",", "0.", ",", "1", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis._save_visual_report": [[277, 304], ["state_frequency.StateFrequencyAnalysis.helper.get_features_bins", "interestingness_xrl.learning.get_features_from_index", "state_frequency.StateFrequencyAnalysis.helper.save_features_image", "interestingness_xrl.learning.get_features_from_index", "state_frequency.StateFrequencyAnalysis.helper.save_features_image", "state_frequency.StateFrequencyAnalysis.helper.save_features_image", "state_frequency.StateFrequencyAnalysis.helper.save_features_image", "os.path.join", "os.path.join", "len", "os.path.join", "len", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image"], ["", "def", "_save_visual_report", "(", "self", ",", "path", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "for", "s", ",", "*", "_", "in", "self", ".", "freq_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'freq-s-{}.png'", ".", "format", "(", "s", ")", ")", ")", "\n", "\n", "", "for", "s", ",", "*", "_", "in", "self", ".", "infreq_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'infreq-s-{}.png'", ".", "format", "(", "s", ")", ")", ")", "\n", "\n", "", "for", "feat_set", ",", "*", "_", "in", "self", ".", "freq_feature_sets", ":", "\n", "            ", "obs_vec", "=", "[", "ANY_FEATURE_IDX", "]", "*", "len", "(", "feats_nbins", ")", "\n", "set_name", "=", "''", "\n", "for", "f", ",", "v", "in", "feat_set", ":", "\n", "                ", "obs_vec", "[", "f", "]", "=", "v", "\n", "set_name", "+=", "'-{}-{}'", ".", "format", "(", "f", ",", "v", ")", "\n", "", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'freq-fv{}.png'", ".", "format", "(", "set_name", ")", ")", ")", "\n", "\n", "", "for", "feat_set", "in", "self", ".", "infreq_feature_sets", ":", "\n", "            ", "obs_vec", "=", "[", "ANY_FEATURE_IDX", "]", "*", "len", "(", "feats_nbins", ")", "\n", "set_name", "=", "''", "\n", "for", "f", ",", "v", "in", "feat_set", ":", "\n", "                ", "obs_vec", "[", "f", "]", "=", "v", "\n", "set_name", "+=", "'-{}-{}'", ".", "format", "(", "f", ",", "v", ")", "\n", "", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'infreq-fv{}.png'", ".", "format", "(", "set_name", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis.get_sample_interesting_aspects": [[305, 332], ["state_frequency.StateFrequencyAnalysis.helper.get_features_bins", "interestingness_xrl.learning.get_features_from_index", "all", "all", "aspects.append", "aspects.append", "aspects.append", "aspects.append"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index"], ["", "", "def", "get_sample_interesting_aspects", "(", "self", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "aspects", "=", "[", "]", "\n", "for", "st", ",", "*", "_", "in", "self", ".", "freq_states", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'frequent-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "st", ",", "*", "_", "in", "self", ".", "infreq_states", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'infrequent-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "for", "feat_set", ",", "*", "_", "in", "self", ".", "freq_feature_sets", ":", "\n", "            ", "if", "all", "(", "obs_vec", "[", "f", "]", "==", "v", "for", "f", ",", "v", "in", "feat_set", ")", ":", "\n", "                ", "aspects", ".", "append", "(", "'frequent-feature-set-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "feat_set", "in", "self", ".", "infreq_feature_sets", ":", "\n", "            ", "if", "all", "(", "obs_vec", "[", "f", "]", "==", "v", "for", "f", ",", "v", "in", "feat_set", ")", ":", "\n", "                ", "aspects", ".", "append", "(", "'infrequent-feature-set-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "return", "aspects", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.state_frequency.StateFrequencyAnalysis.get_interestingness_names": [[333, 335], ["None"], "methods", ["None"], ["", "def", "get_interestingness_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "'frequent-s'", ",", "'infrequent-s'", ",", "'frequent-feature-set'", ",", "'infrequent-feature-set'", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.action_frequency.StateActionFrequencyAnalysis.__init__": [[22, 60], ["interestingness_xrl.explainability.analysis.AnalysisBase.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "helper", ",", "agent", ",", "min_state_count", "=", "5", ",", "\n", "certain_state_max_disp", "=", "0.1", ",", "uncertain_state_min_disp", "=", "0.9", ",", "\n", "certain_feat_max_disp", "=", "0.1", ",", "uncertain_feat_min_disp", "=", "0.9", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new state-acton frequency analysis.\n        :param ScenarioHelper helper: the environment helper containing all necessary config and methods.\n        :param QValueBasedAgent agent: the agent to be analyzed.\n        :param int min_state_count: the minimum ratio of state visits for a state to be considered either certain or uncertain.\n        :param float certain_state_max_disp: the maximum dispersion of action executions for a state to be considered certain.\n        :param float uncertain_state_min_disp: the minimum dispersion of action executions for a state to be considered uncertain.\n        :param float certain_feat_max_disp: the maximum dispersion of action executions for a state-feature to be considered certain.\n        :param float uncertain_feat_min_disp: the minimum dispersion of action executions for a state-feature to be considered uncertain.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "helper", ",", "agent", ")", "\n", "\n", "self", ".", "state_action_coverage", "=", "0.", "\n", "\"\"\" The coverage of visits to the state space, i.e., the ratio between the visited and total states. \"\"\"", "\n", "\n", "self", ".", "mean_action_dispersion", "=", "(", "0.", ",", "0.", ",", "0", ")", "\n", "\"\"\" The dispersion of the distribution of the visits to the state space, i.e., how disperse the visits were (mean, std, n). \"\"\"", "\n", "\n", "self", ".", "certain_states", "=", "[", "]", "\n", "\"\"\" The states where action selection is considered certain (s, disp, max_actions). \"\"\"", "\n", "\n", "self", ".", "uncertain_states", "=", "[", "]", "\n", "\"\"\" The states where action selection is considered uncertain (s, disp). \"\"\"", "\n", "\n", "self", ".", "certain_feats", "=", "[", "]", "\n", "\"\"\" The state-features considered certain (feat, val, disp, max_action). \"\"\"", "\n", "\n", "self", ".", "uncertain_feats", "=", "[", "]", "\n", "\"\"\" The state-features considered uncertain (feat, val, disp). \"\"\"", "\n", "\n", "self", ".", "min_state_count", "=", "min_state_count", "\n", "self", ".", "certain_state_max_disp", "=", "certain_state_max_disp", "\n", "self", ".", "uncertain_state_min_disp", "=", "uncertain_state_min_disp", "\n", "self", ".", "certain_feat_max_disp", "=", "certain_feat_max_disp", "\n", "self", ".", "uncertain_feat_min_disp", "=", "uncertain_feat_min_disp", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.action_frequency.StateActionFrequencyAnalysis.difference_to": [[61, 103], ["action_frequency.StateActionFrequencyAnalysis", "interestingness_xrl.explainability.get_diff_means", "set", "set", "set", "set"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_diff_means"], ["", "def", "difference_to", "(", "self", ",", "other", ")", ":", "\n", "        ", "\"\"\"\n        Gets the difference between this analysis and another given analysis, i.e., the elements that are new and\n        therefore missing in the other analysis. This can be used to highlight what is new in this analysis compared to\n        one that was performed at a prior stage of the agent's behavior / learning.\n        :param StateActionFrequencyAnalysis other: the other analysis to get the difference to.\n        :return StateActionFrequencyAnalysis: an analysis resulting from the difference between this and the given analysis.\n        \"\"\"", "\n", "\n", "# initializes analysis diff", "\n", "diff_analysis", "=", "StateActionFrequencyAnalysis", "(", "\n", "self", ".", "helper", ",", "self", ".", "agent", ",", "\n", "self", ".", "min_state_count", ",", "self", ".", "certain_state_max_disp", ",", "self", ".", "uncertain_state_min_disp", ",", "\n", "self", ".", "certain_feat_max_disp", ",", "self", ".", "uncertain_feat_min_disp", ")", "\n", "\n", "diff_analysis", ".", "state_action_coverage", "=", "self", ".", "state_action_coverage", "-", "other", ".", "state_action_coverage", "\n", "\n", "mean1", ",", "std1", ",", "n1", "=", "self", ".", "mean_action_dispersion", "\n", "mean2", ",", "std2", ",", "n2", "=", "other", ".", "mean_action_dispersion", "\n", "diff_analysis", ".", "avg_reward", "=", "get_diff_means", "(", "mean1", ",", "std1", ",", "n1", ",", "mean2", ",", "std2", ",", "n2", ")", "\n", "\n", "other_certain_states", "=", "set", "(", "s", "for", "s", ",", "*", "_", "in", "other", ".", "certain_states", ")", "\n", "diff_analysis", ".", "uncertain_actions", "=", "[", "(", "s", ",", "*", "_", ")", "for", "s", ",", "*", "_", "in", "self", ".", "certain_states", "\n", "if", "s", "not", "in", "other_certain_states", "]", "\n", "\n", "other_uncertain_states", "=", "set", "(", "s", "for", "s", ",", "*", "_", "in", "other", ".", "uncertain_states", ")", "\n", "diff_analysis", ".", "uncertain_states", "=", "[", "(", "s", ",", "*", "_", ")", "for", "s", ",", "*", "_", "in", "self", ".", "uncertain_states", "\n", "if", "s", "not", "in", "other_uncertain_states", "]", "\n", "\n", "other_certain_feats", "=", "set", "(", "(", "f", ",", "v", ")", "for", "f", ",", "v", ",", "*", "_", "in", "other", ".", "certain_feats", ")", "\n", "diff_analysis", ".", "certain_feats", "=", "[", "(", "f", ",", "v", ",", "*", "_", ")", "for", "f", ",", "v", ",", "*", "_", "in", "self", ".", "certain_feats", "\n", "if", "(", "f", ",", "v", ")", "not", "in", "other_certain_feats", "]", "\n", "\n", "other_uncertain_feats", "=", "set", "(", "(", "f", ",", "v", ")", "for", "f", ",", "v", ",", "*", "_", "in", "other", ".", "uncertain_feats", ")", "\n", "diff_analysis", ".", "uncertain_feats", "=", "[", "(", "f", ",", "v", ",", "*", "_", ")", "for", "f", ",", "v", ",", "*", "_", "in", "self", ".", "uncertain_feats", "\n", "if", "(", "f", ",", "v", ")", "not", "in", "other_uncertain_feats", "]", "\n", "\n", "return", "diff_analysis", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.action_frequency.StateActionFrequencyAnalysis.analyze": [[104, 180], ["numpy.count_nonzero", "range", "action_frequency.StateActionFrequencyAnalysis.helper.get_features_bins", "len", "range", "range", "range", "action_frequency.StateActionFrequencyAnalysis.certain_states.sort", "action_frequency.StateActionFrequencyAnalysis.uncertain_states.sort", "action_frequency.StateActionFrequencyAnalysis.certain_feats.sort", "action_frequency.StateActionFrequencyAnalysis.uncertain_feats.sort", "numpy.nonzero", "len", "float", "interestingness_xrl.explainability.get_distribution_evenness", "numpy.mean().item", "numpy.std().item", "len", "len", "visited_s[].item", "numpy.zeros", "len", "interestingness_xrl.learning.get_features_from_index", "range", "range", "action_frequency.StateActionFrequencyAnalysis.uncertain_states.append", "list", "len", "float", "numpy.mean", "numpy.std", "interestingness_xrl.explainability.get_outliers_dist_mean", "action_frequency.StateActionFrequencyAnalysis.certain_states.append", "interestingness_xrl.explainability.get_distribution_evenness", "action_frequency.StateActionFrequencyAnalysis.uncertain_feats.append", "float", "interestingness_xrl.explainability.get_outliers_dist_mean", "action_frequency.StateActionFrequencyAnalysis.certain_feats.append", "float"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_distribution_evenness", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_outliers_dist_mean", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_distribution_evenness", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_outliers_dist_mean"], ["", "def", "analyze", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Performs an analysis of the behavior of the agent during its interaction with the environment.\n        Namely, it calculates the state-action coverage, the mean dispersion of action executions, and the (un)certain\n        states and state features.\n        :return:\n        \"\"\"", "\n", "\n", "# gets visited state-action pairs", "\n", "visited_s", "=", "np", ".", "nonzero", "(", "self", ".", "agent", ".", "c_s", ")", "[", "0", "]", "\n", "visited_sa_counts", "=", "self", ".", "agent", ".", "c_sa", "[", "visited_s", "]", "\n", "\n", "# calculates coverage", "\n", "num_visited_sa", "=", "np", ".", "count_nonzero", "(", "visited_sa_counts", ")", "\n", "total_sa", "=", "len", "(", "visited_sa_counts", ")", "*", "self", ".", "config", ".", "num_actions", "\n", "self", ".", "state_action_coverage", "=", "float", "(", "num_visited_sa", ")", "/", "total_sa", "\n", "\n", "# calculates mean action execution dispersion", "\n", "state_dispersions", "=", "[", "get_distribution_evenness", "(", "c_a", ")", "for", "c_a", "in", "visited_sa_counts", "]", "\n", "self", ".", "mean_action_dispersion", "=", "(", "\n", "np", ".", "mean", "(", "state_dispersions", ")", ".", "item", "(", ")", ",", "\n", "np", ".", "std", "(", "state_dispersions", ")", ".", "item", "(", ")", ",", "\n", "len", "(", "state_dispersions", ")", ")", "\n", "\n", "# analyzes un/certain states", "\n", "self", ".", "certain_states", "=", "[", "]", "\n", "self", ".", "uncertain_states", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "visited_s", ")", ")", ":", "\n", "\n", "# check state visit ratio", "\n", "            ", "s", "=", "visited_s", "[", "i", "]", ".", "item", "(", ")", "\n", "if", "self", ".", "agent", ".", "c_s", "[", "s", "]", "<", "self", ".", "min_state_count", ":", "\n", "                ", "continue", "\n", "\n", "# checks dispersions", "\n", "", "disp", "=", "state_dispersions", "[", "i", "]", "\n", "if", "disp", ">=", "self", ".", "uncertain_state_min_disp", ":", "\n", "                ", "self", ".", "uncertain_states", ".", "append", "(", "(", "s", ",", "float", "(", "disp", ")", ")", ")", "\n", "", "elif", "disp", "<=", "self", ".", "certain_state_max_disp", ":", "\n", "# if certain state, get the action(s) usually selected", "\n", "                ", "max_actions", "=", "get_outliers_dist_mean", "(", "visited_sa_counts", "[", "i", "]", ",", "1.5", ",", "below", "=", "False", ")", "\n", "self", ".", "certain_states", ".", "append", "(", "(", "s", ",", "float", "(", "disp", ")", ",", "max_actions", ")", ")", "\n", "\n", "# gets action counts for each feature", "\n", "", "", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "num_feats", "=", "len", "(", "feats_nbins", ")", "\n", "feats_counts", "=", "[", "list", "(", ")", "]", "*", "num_feats", "\n", "for", "f", "in", "range", "(", "num_feats", ")", ":", "\n", "            ", "feats_counts", "[", "f", "]", "=", "np", ".", "zeros", "(", "(", "feats_nbins", "[", "f", "]", ",", "self", ".", "config", ".", "num_actions", ")", ",", "np", ".", "uint", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "visited_sa_counts", ")", ")", ":", "\n", "            ", "c_sa", "=", "visited_sa_counts", "[", "i", "]", "\n", "s", "=", "visited_s", "[", "i", "]", "\n", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "for", "f", "in", "range", "(", "len", "(", "feats_nbins", ")", ")", ":", "\n", "                ", "feats_counts", "[", "f", "]", "[", "obs_vec", "[", "f", "]", "]", "+=", "c_sa", "\n", "\n", "# analyzes un/certain state-features", "\n", "", "", "self", ".", "certain_feats", "=", "[", "]", "\n", "self", ".", "uncertain_feats", "=", "[", "]", "\n", "for", "f", "in", "range", "(", "num_feats", ")", ":", "\n", "            ", "for", "v", "in", "range", "(", "feats_nbins", "[", "f", "]", ")", ":", "\n", "\n", "# checks dispersions", "\n", "                ", "disp", "=", "float", "(", "get_distribution_evenness", "(", "feats_counts", "[", "f", "]", "[", "v", "]", ")", ")", "\n", "if", "disp", ">=", "self", ".", "uncertain_feat_min_disp", ":", "\n", "                    ", "self", ".", "uncertain_feats", ".", "append", "(", "(", "f", ",", "v", ",", "disp", ")", ")", "\n", "", "elif", "disp", "<=", "self", ".", "certain_feat_max_disp", ":", "\n", "# if certain feature, get the action(s) usually selected", "\n", "                    ", "max_actions", "=", "get_outliers_dist_mean", "(", "feats_counts", "[", "f", "]", "[", "v", "]", ",", "1.5", ",", "below", "=", "False", ")", "\n", "self", ".", "certain_feats", ".", "append", "(", "(", "f", ",", "v", ",", "disp", ",", "max_actions", ")", ")", "\n", "\n", "# sorts lists", "\n", "", "", "", "self", ".", "certain_states", ".", "sort", "(", "key", "=", "lambda", "e", ":", "e", "[", "1", "]", ")", "\n", "self", ".", "uncertain_states", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "1", "]", ")", "\n", "self", ".", "certain_feats", ".", "sort", "(", "key", "=", "lambda", "e", ":", "e", "[", "2", "]", ")", "\n", "self", ".", "uncertain_feats", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.action_frequency.StateActionFrequencyAnalysis._save_report": [[181, 233], ["action_frequency.StateActionFrequencyAnalysis.helper.get_features_bins", "action_frequency.StateActionFrequencyAnalysis.config.get_action_names", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "len", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "action_frequency.StateActionFrequencyAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "action_frequency.StateActionFrequencyAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "numpy.zeros", "interestingness_xrl.util.print_line", "numpy.zeros", "interestingness_xrl.util.print_line", "len", "interestingness_xrl.learning.get_features_from_index", "len", "interestingness_xrl.learning.get_features_from_index", "len", "action_frequency.StateActionFrequencyAnalysis.helper.get_features_labels", "len", "action_frequency.StateActionFrequencyAnalysis.helper.get_features_labels"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels"], ["", "def", "_save_report", "(", "self", ",", "file", ",", "write_console", ")", ":", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "action_names", "=", "self", ".", "config", ".", "get_action_names", "(", ")", "\n", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'Coverage of the state-action space (for visited states): {:.2f}%'", ".", "format", "(", "\n", "self", ".", "state_action_coverage", "*", "100.", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "mean", ",", "std", ",", "n", "=", "self", ".", "mean_action_dispersion", "\n", "print_line", "(", "'Mean dispersion of the execution of actions in visited states: {:.3f} \u00b1 {:.3f} (count: {})'", "\n", ".", "format", "(", "mean", ",", "std", ",", "n", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} certain states found (max. dispersion: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "certain_states", ")", ",", "self", ".", "certain_state_max_disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "disp", ",", "max_actions", "in", "self", ".", "certain_states", ":", "\n", "            ", "max_action_labels", "=", "[", "action_names", "[", "a", "]", "for", "a", "in", "max_actions", "]", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", ",", "True", ")", "\n", "print_line", "(", "'\\t{}-{} (mean disp.: {:.3f}, max actions {})'", ".", "format", "(", "\n", "s", ",", "feats_labels", ",", "disp", ",", "max_action_labels", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} uncertain states found (min. dispersion: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "uncertain_states", ")", ",", "self", ".", "uncertain_state_min_disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "disp", "in", "self", ".", "uncertain_states", ":", "\n", "            ", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", ",", "True", ")", "\n", "print_line", "(", "'\\t{}-{} (mean disp.: {:.3f})'", ".", "format", "(", "s", ",", "feats_labels", ",", "disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} certain state features found (max. dispersion: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "certain_feats", ")", ",", "self", ".", "certain_feat_max_disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "num_feats", "=", "len", "(", "feats_nbins", ")", "\n", "for", "f", ",", "v", ",", "disp", ",", "max_actions", "in", "self", ".", "certain_feats", ":", "\n", "            ", "max_action_labels", "=", "[", "action_names", "[", "a", "]", "for", "a", "in", "max_actions", "]", "\n", "obs_vec", "=", "np", ".", "zeros", "(", "num_feats", ",", "np", ".", "uint32", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "feat_label", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ")", "[", "f", "]", "\n", "print_line", "(", "'\\t{} (mean disp.: {:.3f}, max actions: {})'", ".", "format", "(", "\n", "feat_label", ",", "disp", ",", "max_action_labels", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} uncertain state features found (min. dispersion: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "uncertain_feats", ")", ",", "self", ".", "uncertain_feat_min_disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "f", ",", "v", ",", "disp", "in", "self", ".", "uncertain_feats", ":", "\n", "            ", "obs_vec", "=", "np", ".", "zeros", "(", "num_feats", ",", "np", ".", "uint32", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "feat_label", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ")", "[", "f", "]", "\n", "print_line", "(", "'\\t{} (mean disp.: {:.3f})'", ".", "format", "(", "feat_label", ",", "disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.action_frequency.StateActionFrequencyAnalysis.get_stats": [[234, 242], ["len", "len", "len", "len"], "methods", ["None"], ["", "", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'State-action coverage'", ":", "(", "self", ".", "state_action_coverage", ",", "0.", ",", "1", ")", ",", "\n", "'Mean dispersion action-execution'", ":", "self", ".", "mean_action_dispersion", ",", "\n", "'Num certain states'", ":", "(", "len", "(", "self", ".", "certain_states", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num uncertain states'", ":", "(", "len", "(", "self", ".", "uncertain_states", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num certain state features'", ":", "(", "len", "(", "self", ".", "certain_feats", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num uncertain state features'", ":", "(", "len", "(", "self", ".", "uncertain_feats", ")", ",", "0.", ",", "1", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.action_frequency.StateActionFrequencyAnalysis._save_visual_report": [[244, 265], ["action_frequency.StateActionFrequencyAnalysis.helper.get_features_bins", "interestingness_xrl.learning.get_features_from_index", "action_frequency.StateActionFrequencyAnalysis.helper.save_features_image", "interestingness_xrl.learning.get_features_from_index", "action_frequency.StateActionFrequencyAnalysis.helper.save_features_image", "action_frequency.StateActionFrequencyAnalysis.helper.save_features_image", "action_frequency.StateActionFrequencyAnalysis.helper.save_features_image", "os.path.join", "os.path.join", "len", "os.path.join", "len", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image"], ["", "def", "_save_visual_report", "(", "self", ",", "path", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "for", "s", ",", "*", "_", "in", "self", ".", "certain_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'certain-exec-s-{}.png'", ".", "format", "(", "s", ")", ")", ")", "\n", "\n", "", "for", "s", ",", "*", "_", "in", "self", ".", "uncertain_states", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'uncertain-exec-s-{}.png'", ".", "format", "(", "s", ")", ")", ")", "\n", "\n", "", "for", "f", ",", "v", ",", "*", "_", "in", "self", ".", "certain_feats", ":", "\n", "            ", "obs_vec", "=", "[", "ANY_FEATURE_IDX", "]", "*", "len", "(", "feats_nbins", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'certain-exec-f-{}-v-{}.png'", ".", "format", "(", "f", ",", "v", ")", ")", ")", "\n", "\n", "", "for", "f", ",", "v", ",", "*", "_", "in", "self", ".", "uncertain_feats", ":", "\n", "            ", "obs_vec", "=", "[", "ANY_FEATURE_IDX", "]", "*", "len", "(", "feats_nbins", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'uncertain-exec-f-{}-v-{}.png'", ".", "format", "(", "f", ",", "v", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.action_frequency.StateActionFrequencyAnalysis.get_sample_interesting_aspects": [[266, 293], ["action_frequency.StateActionFrequencyAnalysis.helper.get_features_bins", "interestingness_xrl.learning.get_features_from_index", "aspects.append", "aspects.append", "aspects.append", "aspects.append"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index"], ["", "", "def", "get_sample_interesting_aspects", "(", "self", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "aspects", "=", "[", "]", "\n", "for", "st", ",", "*", "_", "in", "self", ".", "certain_states", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'certain-exec-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "st", ",", "*", "_", "in", "self", ".", "uncertain_states", ":", "\n", "            ", "if", "st", "==", "s", ":", "\n", "                ", "aspects", ".", "append", "(", "'uncertain-exec-s-{}'", ".", "format", "(", "s", ")", ")", "\n", "break", "\n", "\n", "", "", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "for", "f", ",", "v", ",", "*", "_", "in", "self", ".", "certain_feats", ":", "\n", "            ", "if", "obs_vec", "[", "f", "]", "==", "v", ":", "\n", "                ", "aspects", ".", "append", "(", "'certain-exec-f-{}-v-{}'", ".", "format", "(", "f", ",", "v", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "f", ",", "v", ",", "*", "_", "in", "self", ".", "uncertain_feats", ":", "\n", "            ", "if", "obs_vec", "[", "f", "]", "==", "v", ":", "\n", "                ", "aspects", ".", "append", "(", "'uncertain-exec-f-{}-v-{}'", ".", "format", "(", "f", ",", "v", ")", ")", "\n", "break", "\n", "\n", "", "", "return", "aspects", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interaction.action_frequency.StateActionFrequencyAnalysis.get_interestingness_names": [[294, 296], ["None"], "methods", ["None"], ["", "def", "get_interestingness_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "'certain-exec-s'", ",", "'uncertain-exec-s'", ",", "'certain-exec-f'", ",", "'uncertain-exec-f'", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.transitions.TransitionAnalysis.__init__": [[22, 67], ["interestingness_xrl.explainability.analysis.AnalysisBase.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "helper", ",", "agent", ",", "min_state_count", "=", "5", ",", "trans_min_states", "=", "10", ",", "certain_trans_max_disp", "=", "0.1", ",", "\n", "uncertain_trans_min_disp", "=", "0.9", ",", "certain_action_max_disp", "=", "0.1", ",", "uncertain_action_min_disp", "=", "0.6", ",", "\n", "certain_feat_max_disp", "=", "0.1", ",", "uncertain_feat_min_disp", "=", "0.6", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new state-action transition analysis.\n        :param ScenarioHelper helper: the environment helper containing all necessary config and methods.\n        :param QValueBasedAgent agent: the agent to be analyzed.\n        :param int min_state_count: the minimum ratio of state-action visits to state visits for a transition to be considered (un)certain.\n        :param float trans_min_states: the minimum number of visited next states for a transition to be considered uncertain.\n        :param float certain_trans_max_disp: the maximum dispersion of next-states for a transition to be considered (un)certain.\n        :param float uncertain_trans_min_disp: the minimum dispersion of next-states for a transition to be considered uncertain.\n        :param float certain_action_max_disp: the maximum average dispersion of next-states for an action to be considered certain.\n        :param float uncertain_action_min_disp: the minimum average dispersion of next-states for an action to be considered uncertain.\n        :param float certain_feat_max_disp: the maximum average dispersion of next-states for a feature-action to be considered certain.\n        :param float uncertain_feat_min_disp: the minimum average dispersion of next-states for a feature-action to be considered uncertain.\n        transitions for the feature value to be considerd (un)certain.\n        \"\"\"", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "helper", ",", "agent", ")", "\n", "self", ".", "certain_trans", "=", "[", "]", "\n", "\"\"\" The state-action transitions considered certain (s, a, supp, disp). \"\"\"", "\n", "\n", "self", ".", "uncertain_trans", "=", "[", "]", "\n", "\"\"\" The state-action transitions considered uncertain (s, a, supp, disp). \"\"\"", "\n", "\n", "self", ".", "certain_actions", "=", "[", "]", "\n", "\"\"\" The actions considered certain (action, disp). \"\"\"", "\n", "\n", "self", ".", "uncertain_actions", "=", "[", "]", "\n", "\"\"\" The actions considered uncertain (action, disp). \"\"\"", "\n", "\n", "self", ".", "certain_feats", "=", "[", "]", "\n", "\"\"\" The feature-action pairs considered certain (feat, val, a, disp). \"\"\"", "\n", "\n", "self", ".", "uncertain_feats", "=", "[", "]", "\n", "\"\"\" The feature-action pairs considered uncertain (feat, val, a, disp). \"\"\"", "\n", "\n", "self", ".", "min_state_count", "=", "min_state_count", "\n", "self", ".", "trans_min_states", "=", "trans_min_states", "\n", "self", ".", "certain_trans_max_disp", "=", "certain_trans_max_disp", "\n", "self", ".", "uncertain_trans_min_disp", "=", "uncertain_trans_min_disp", "\n", "self", ".", "certain_action_max_disp", "=", "certain_action_max_disp", "\n", "self", ".", "uncertain_action_min_disp", "=", "uncertain_action_min_disp", "\n", "self", ".", "certain_feat_max_disp", "=", "certain_feat_max_disp", "\n", "self", ".", "uncertain_feat_min_disp", "=", "uncertain_feat_min_disp", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.transitions.TransitionAnalysis.difference_to": [[68, 114], ["transitions.TransitionAnalysis", "set", "set", "set", "set", "set", "set"], "methods", ["None"], ["", "def", "difference_to", "(", "self", ",", "other", ")", ":", "\n", "        ", "\"\"\"\n        Gets the difference between this analysis and another given analysis, i.e., the elements that are new and\n        therefore missing in the other analysis. This can be used to highlight what is new in this analysis compared to\n        one that was performed at a prior stage of the agent's behavior / learning.\n        :param TransitionAnalysis other: the other analysis to get the difference to.\n        :return TransitionAnalysis: an analysis resulting from the difference between this and the given analysis.\n        \"\"\"", "\n", "\n", "# initializes analysis diff", "\n", "diff_analysis", "=", "TransitionAnalysis", "(", "self", ".", "helper", ",", "self", ".", "agent", ",", "self", ".", "min_state_count", ",", "self", ".", "trans_min_states", ",", "\n", "self", ".", "certain_trans_max_disp", ",", "self", ".", "uncertain_trans_min_disp", ",", "\n", "self", ".", "certain_action_max_disp", ",", "self", ".", "uncertain_action_min_disp", ",", "\n", "self", ".", "certain_feat_max_disp", ",", "self", ".", "uncertain_feat_min_disp", ")", "\n", "\n", "other_certain_trans", "=", "set", "(", "(", "s", ",", "a", ")", "for", "s", ",", "a", ",", "*", "_", "in", "other", ".", "certain_trans", ")", "\n", "diff_analysis", ".", "certain_trans", "=", "[", "(", "s", ",", "a", ",", "*", "_", ")", "for", "s", ",", "a", ",", "*", "_", "in", "self", ".", "certain_trans", "\n", "if", "(", "s", ",", "a", ")", "not", "in", "other_certain_trans", "]", "\n", "\n", "other_uncertain_trans", "=", "set", "(", "(", "s", ",", "a", ")", "for", "s", ",", "a", ",", "*", "_", "in", "other", ".", "uncertain_trans", ")", "\n", "diff_analysis", ".", "uncertain_trans", "=", "[", "(", "s", ",", "a", ",", "*", "_", ")", "for", "s", ",", "a", ",", "*", "_", "in", "self", ".", "uncertain_trans", "\n", "if", "(", "s", ",", "a", ")", "not", "in", "other_uncertain_trans", "]", "\n", "\n", "other_certain_actions", "=", "set", "(", "a", "for", "a", ",", "*", "_", "in", "other", ".", "certain_actions", ")", "\n", "diff_analysis", ".", "certain_actions", "=", "[", "(", "a", ",", "*", "_", ")", "for", "a", ",", "*", "_", "in", "self", ".", "certain_actions", "\n", "if", "a", "not", "in", "other_certain_actions", "]", "\n", "\n", "other_uncertain_actions", "=", "set", "(", "a", "for", "a", ",", "*", "_", "in", "other", ".", "uncertain_actions", ")", "\n", "diff_analysis", ".", "uncertain_actions", "=", "[", "(", "a", ",", "*", "_", ")", "for", "a", ",", "*", "_", "in", "self", ".", "uncertain_actions", "\n", "if", "a", "not", "in", "other_uncertain_actions", "]", "\n", "\n", "other_certain_feats", "=", "set", "(", "(", "f", ",", "v", ",", "a", ")", "for", "f", ",", "v", ",", "a", ",", "*", "_", "in", "other", ".", "certain_feats", ")", "\n", "diff_analysis", ".", "certain_feats", "=", "[", "(", "f", ",", "v", ",", "a", ",", "*", "_", ")", "for", "f", ",", "v", ",", "a", ",", "*", "_", "in", "self", ".", "certain_feats", "\n", "if", "(", "f", ",", "v", ",", "a", ")", "not", "in", "other_certain_feats", "]", "\n", "\n", "other_uncertain_feats", "=", "set", "(", "(", "f", ",", "v", ",", "a", ")", "for", "f", ",", "v", ",", "a", ",", "*", "_", "in", "other", ".", "uncertain_feats", ")", "\n", "diff_analysis", ".", "uncertain_feats", "=", "[", "(", "f", ",", "v", ",", "a", ",", "*", "_", ")", "for", "f", ",", "v", ",", "a", ",", "*", "_", "in", "self", ".", "uncertain_feats", "\n", "if", "(", "f", ",", "v", ",", "a", ")", "not", "in", "other_uncertain_feats", "]", "\n", "\n", "return", "diff_analysis", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.transitions.TransitionAnalysis.analyze": [[115, 200], ["numpy.full", "transitions.TransitionAnalysis.helper.get_features_bins", "len", "range", "range", "range", "range", "transitions.TransitionAnalysis.certain_trans.sort", "transitions.TransitionAnalysis.uncertain_trans.sort", "transitions.TransitionAnalysis.certain_actions.sort", "transitions.TransitionAnalysis.uncertain_actions.sort", "transitions.TransitionAnalysis.certain_feats.sort", "transitions.TransitionAnalysis.uncertain_feats.sort", "numpy.nonzero", "numpy.zeros", "len", "visited_s[].item", "interestingness_xrl.learning.get_features_from_index", "range", "float", "range", "len", "list", "[].item", "range", "float", "len", "numpy.mean", "transitions.TransitionAnalysis.uncertain_actions.append", "range", "len", "interestingness_xrl.explainability.get_distribution_evenness", "transitions.TransitionAnalysis.certain_trans.append", "transitions.TransitionAnalysis.certain_actions.append", "float", "numpy.nonzero", "transitions.TransitionAnalysis.uncertain_trans.append", "len", "interestingness_xrl.explainability.get_distribution_evenness", "transitions.TransitionAnalysis.uncertain_feats.append", "numpy.nonzero", "transitions.TransitionAnalysis.certain_feats.append", "numpy.isnan"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_distribution_evenness", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_distribution_evenness"], ["", "def", "analyze", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "certain_trans", "=", "[", "]", "\n", "self", ".", "uncertain_trans", "=", "[", "]", "\n", "\n", "# gets visited state-action pairs", "\n", "visited_s", "=", "np", ".", "nonzero", "(", "self", ".", "agent", ".", "c_s", ")", "[", "0", "]", "\n", "visited_sa_counts", "=", "self", ".", "agent", ".", "c_sa", "[", "visited_s", "]", "\n", "actions_disps", "=", "np", ".", "full", "(", "(", "len", "(", "visited_s", ")", ",", "self", ".", "config", ".", "num_actions", ")", ",", "np", ".", "nan", ")", "\n", "\n", "# initializes feature-action transitions", "\n", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "num_feats", "=", "len", "(", "feats_nbins", ")", "\n", "feats_counts", "=", "[", "list", "(", ")", "]", "*", "num_feats", "\n", "for", "f", "in", "range", "(", "num_feats", ")", ":", "\n", "            ", "feats_counts", "[", "f", "]", "=", "np", ".", "zeros", "(", "(", "feats_nbins", "[", "f", "]", ",", "self", ".", "config", ".", "num_actions", ",", "self", ".", "config", ".", "num_states", ")", ",", "np", ".", "uint", ")", "\n", "\n", "# calculates state-action dispersions", "\n", "", "for", "i", "in", "range", "(", "len", "(", "visited_s", ")", ")", ":", "\n", "            ", "s", "=", "visited_s", "[", "i", "]", ".", "item", "(", ")", "\n", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "\n", "for", "a", "in", "range", "(", "self", ".", "config", ".", "num_actions", ")", ":", "\n", "\n", "# ignore state-action visits with insufficient support", "\n", "                ", "state_action_supp", "=", "visited_sa_counts", "[", "i", "]", "[", "a", "]", ".", "item", "(", ")", "\n", "if", "state_action_supp", "<", "self", ".", "min_state_count", ":", "\n", "                    ", "continue", "\n", "\n", "# updates feature-action transitions", "\n", "", "for", "f", "in", "range", "(", "len", "(", "feats_nbins", ")", ")", ":", "\n", "                    ", "feats_counts", "[", "f", "]", "[", "obs_vec", "[", "f", "]", "]", "+=", "self", ".", "agent", ".", "c_sas", "[", "s", "]", "\n", "\n", "# calculates dispersion of possible transitions (only considers non-zero transitions)", "\n", "", "dist", "=", "self", ".", "agent", ".", "c_sas", "[", "s", "]", "[", "a", "]", "[", "np", ".", "nonzero", "(", "self", ".", "agent", ".", "c_sas", "[", "s", "]", "[", "a", "]", ")", "]", "\n", "disp", "=", "float", "(", "get_distribution_evenness", "(", "dist", ")", ")", "\n", "actions_disps", "[", "i", "]", "[", "a", "]", "=", "disp", "\n", "num_next_states", "=", "len", "(", "dist", ")", "\n", "\n", "# checks for certain and uncertain transitions", "\n", "if", "disp", "<=", "self", ".", "certain_trans_max_disp", ":", "\n", "                    ", "self", ".", "certain_trans", ".", "append", "(", "(", "s", ",", "a", ",", "state_action_supp", ",", "disp", ")", ")", "\n", "", "elif", "num_next_states", ">=", "self", ".", "trans_min_states", "and", "disp", ">=", "self", ".", "uncertain_trans_min_disp", ":", "\n", "                    ", "self", ".", "uncertain_trans", ".", "append", "(", "(", "s", ",", "a", ",", "state_action_supp", ",", "disp", ")", ")", "\n", "\n", "# analyzes un/certain actions", "\n", "", "", "", "self", ".", "certain_actions", "=", "[", "]", "\n", "self", ".", "uncertain_actions", "=", "[", "]", "\n", "for", "a", "in", "range", "(", "self", ".", "config", ".", "num_actions", ")", ":", "\n", "\n", "            ", "action_disps", "=", "actions_disps", "[", ":", ",", "a", "]", "\n", "mean_action_disp", "=", "float", "(", "np", ".", "mean", "(", "action_disps", "[", "~", "np", ".", "isnan", "(", "action_disps", ")", "]", ")", ")", "\n", "\n", "if", "mean_action_disp", ">=", "self", ".", "uncertain_action_min_disp", ":", "\n", "                ", "self", ".", "uncertain_actions", ".", "append", "(", "(", "a", ",", "mean_action_disp", ")", ")", "\n", "", "elif", "mean_action_disp", "<=", "self", ".", "certain_action_max_disp", ":", "\n", "                ", "self", ".", "certain_actions", ".", "append", "(", "(", "a", ",", "mean_action_disp", ")", ")", "\n", "\n", "# analyzes un/certain features", "\n", "", "", "self", ".", "certain_feats", "=", "[", "]", "\n", "self", ".", "uncertain_feats", "=", "[", "]", "\n", "for", "f", "in", "range", "(", "num_feats", ")", ":", "\n", "            ", "for", "v", "in", "range", "(", "feats_nbins", "[", "f", "]", ")", ":", "\n", "                ", "for", "a", "in", "range", "(", "self", ".", "config", ".", "num_actions", ")", ":", "\n", "\n", "# gets dispersion (only considers non-zero transitions)", "\n", "                    ", "dist", "=", "feats_counts", "[", "f", "]", "[", "v", "]", "[", "a", "]", "[", "np", ".", "nonzero", "(", "feats_counts", "[", "f", "]", "[", "v", "]", "[", "a", "]", ")", "]", "\n", "\n", "# ignores all zero transitions", "\n", "if", "len", "(", "dist", ")", "==", "0", ":", "\n", "                        ", "continue", "\n", "", "disp", "=", "float", "(", "get_distribution_evenness", "(", "dist", ")", ")", "\n", "\n", "if", "disp", ">=", "self", ".", "uncertain_feat_min_disp", ":", "\n", "                        ", "self", ".", "uncertain_feats", ".", "append", "(", "(", "f", ",", "v", ",", "a", ",", "disp", ")", ")", "\n", "", "elif", "disp", "<=", "self", ".", "certain_feat_max_disp", ":", "\n", "                        ", "self", ".", "certain_feats", ".", "append", "(", "(", "f", ",", "v", ",", "a", ",", "disp", ")", ")", "\n", "\n", "# sorts lists", "\n", "", "", "", "", "self", ".", "certain_trans", ".", "sort", "(", "key", "=", "lambda", "e", ":", "e", "[", "3", "]", ")", "\n", "self", ".", "uncertain_trans", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "3", "]", ")", "\n", "self", ".", "certain_actions", ".", "sort", "(", "key", "=", "lambda", "e", ":", "e", "[", "1", "]", ")", "\n", "self", ".", "uncertain_actions", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "1", "]", ")", "\n", "self", ".", "certain_feats", ".", "sort", "(", "key", "=", "lambda", "e", ":", "e", "[", "3", "]", ")", "\n", "self", ".", "uncertain_feats", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.transitions.TransitionAnalysis._save_report": [[201, 259], ["transitions.TransitionAnalysis.helper.get_features_bins", "transitions.TransitionAnalysis.config.get_action_names", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "len", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "transitions.TransitionAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "transitions.TransitionAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "numpy.zeros", "interestingness_xrl.util.print_line", "numpy.zeros", "interestingness_xrl.util.print_line", "len", "interestingness_xrl.learning.get_features_from_index", "len", "interestingness_xrl.learning.get_features_from_index", "len", "len", "len", "transitions.TransitionAnalysis.helper.get_features_labels", "len", "transitions.TransitionAnalysis.helper.get_features_labels"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels"], ["", "def", "_save_report", "(", "self", ",", "file", ",", "write_console", ")", ":", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "action_names", "=", "self", ".", "config", ".", "get_action_names", "(", ")", "\n", "\n", "print_line", "(", "'Min. state-action support: {}'", ".", "format", "(", "self", ".", "min_state_count", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} certain state transitions found (max. dispersion: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "certain_trans", ")", ",", "self", ".", "certain_trans_max_disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "a", ",", "supp", ",", "disp", "in", "self", ".", "certain_trans", ":", "\n", "            ", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", ",", "True", ")", "\n", "print_line", "(", "'\\t({}-{}, {}) (supp: {}, disp: {:.3f})'", ".", "format", "(", "\n", "s", ",", "feats_labels", ",", "action_names", "[", "a", "]", ",", "supp", ",", "disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} uncertain state transitions found (min. dispersion: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "uncertain_trans", ")", ",", "self", ".", "uncertain_trans_min_disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "a", ",", "supp", ",", "disp", "in", "self", ".", "uncertain_trans", ":", "\n", "            ", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", ",", "True", ")", "\n", "print_line", "(", "'\\t({}-{}, {}) (supp: {}, disp: {:.3f})'", ".", "format", "(", "\n", "s", ",", "feats_labels", ",", "action_names", "[", "a", "]", ",", "supp", ",", "disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} certain actions found (max. dispersion: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "certain_actions", ")", ",", "self", ".", "certain_action_max_disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "a", ",", "disp", "in", "self", ".", "certain_actions", ":", "\n", "            ", "print_line", "(", "'\\t{} (disp: {:.3f})'", ".", "format", "(", "action_names", "[", "a", "]", ",", "disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} uncertain actions found (min. dispersion: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "uncertain_actions", ")", ",", "self", ".", "uncertain_action_min_disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "a", ",", "disp", "in", "self", ".", "uncertain_actions", ":", "\n", "            ", "print_line", "(", "'\\t{} (disp: {:.3f})'", ".", "format", "(", "action_names", "[", "a", "]", ",", "disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} certain state feature-action pairs found (max disp: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "certain_feats", ")", ",", "self", ".", "certain_feat_max_disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "num_feats", "=", "len", "(", "feats_nbins", ")", "\n", "for", "f", ",", "v", ",", "a", ",", "disp", "in", "self", ".", "certain_feats", ":", "\n", "            ", "obs_vec", "=", "np", ".", "zeros", "(", "num_feats", ",", "np", ".", "uint32", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "feat_label", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ")", "[", "f", "]", "\n", "print_line", "(", "'\\t{} - {} (disp: {:.3f})'", ".", "format", "(", "feat_label", ",", "action_names", "[", "a", "]", ",", "disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} uncertain state feature-action pairs found (min. disp: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "uncertain_feats", ")", ",", "self", ".", "uncertain_feat_min_disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "f", ",", "v", ",", "a", ",", "disp", "in", "self", ".", "uncertain_feats", ":", "\n", "            ", "obs_vec", "=", "np", ".", "zeros", "(", "num_feats", ",", "np", ".", "uint32", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "feat_label", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ")", "[", "f", "]", "\n", "print_line", "(", "'\\t{} - {} (disp: {:.3f})'", ".", "format", "(", "feat_label", ",", "action_names", "[", "a", "]", ",", "disp", ")", ",", "file", ",", "write_console", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.transitions.TransitionAnalysis.get_stats": [[260, 270], ["len", "len", "len", "len", "len", "len"], "methods", ["None"], ["", "", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "stats", "=", "{", "\n", "'Num certain state transitions'", ":", "(", "len", "(", "self", ".", "certain_trans", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num uncertain state transitions'", ":", "(", "len", "(", "self", ".", "uncertain_trans", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num certain actions'", ":", "(", "len", "(", "self", ".", "certain_actions", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num uncertain actions'", ":", "(", "len", "(", "self", ".", "uncertain_actions", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num certain state feature-action'", ":", "(", "len", "(", "self", ".", "certain_feats", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num uncertain state feature-action'", ":", "(", "len", "(", "self", ".", "uncertain_feats", ")", ",", "0.", ",", "1", ")", ",", "\n", "}", "\n", "return", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.transitions.TransitionAnalysis._save_visual_report": [[271, 292], ["transitions.TransitionAnalysis.helper.get_features_bins", "interestingness_xrl.learning.get_features_from_index", "transitions.TransitionAnalysis.helper.save_features_image", "interestingness_xrl.learning.get_features_from_index", "transitions.TransitionAnalysis.helper.save_features_image", "transitions.TransitionAnalysis.helper.save_features_image", "transitions.TransitionAnalysis.helper.save_features_image", "os.path.join", "os.path.join", "len", "os.path.join", "len", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image"], ["", "def", "_save_visual_report", "(", "self", ",", "path", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "for", "s", ",", "a", ",", "*", "_", "in", "self", ".", "certain_trans", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'certain-trans-s-{}-a-{}.png'", ".", "format", "(", "s", ",", "a", ")", ")", ")", "\n", "\n", "", "for", "s", ",", "a", ",", "*", "_", "in", "self", ".", "uncertain_trans", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'uncertain-trans-s-{}-a-{}.png'", ".", "format", "(", "s", ",", "a", ")", ")", ")", "\n", "\n", "", "for", "f", ",", "v", ",", "a", ",", "*", "_", "in", "self", ".", "certain_feats", ":", "\n", "            ", "obs_vec", "=", "[", "ANY_FEATURE_IDX", "]", "*", "len", "(", "feats_nbins", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'certain-f-{}-v-{}-a-{}.png'", ".", "format", "(", "f", ",", "v", ",", "a", ")", ")", ")", "\n", "\n", "", "for", "f", ",", "v", ",", "a", ",", "*", "_", "in", "self", ".", "uncertain_feats", ":", "\n", "            ", "obs_vec", "=", "[", "ANY_FEATURE_IDX", "]", "*", "len", "(", "feats_nbins", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'uncertain-f-{}-v-{}-a-{}.png'", ".", "format", "(", "f", ",", "v", ",", "a", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.transitions.TransitionAnalysis.get_sample_interesting_aspects": [[293, 320], ["transitions.TransitionAnalysis.helper.get_features_bins", "interestingness_xrl.learning.get_features_from_index", "aspects.append", "aspects.append", "aspects.append", "aspects.append"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index"], ["", "", "def", "get_sample_interesting_aspects", "(", "self", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "aspects", "=", "[", "]", "\n", "for", "st", ",", "ac", ",", "*", "_", "in", "self", ".", "certain_trans", ":", "\n", "            ", "if", "st", "==", "s", "and", "ac", "==", "a", ":", "\n", "                ", "aspects", ".", "append", "(", "'certain-trans-s-{}-a-{}'", ".", "format", "(", "s", ",", "a", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "st", ",", "ac", ",", "*", "_", "in", "self", ".", "uncertain_trans", ":", "\n", "            ", "if", "st", "==", "s", "and", "ac", "==", "a", ":", "\n", "                ", "aspects", ".", "append", "(", "'uncertain-trans-s-{}-a-{}'", ".", "format", "(", "s", ",", "a", ")", ")", "\n", "break", "\n", "\n", "", "", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "for", "f", ",", "v", ",", "ac", ",", "*", "_", "in", "self", ".", "certain_feats", ":", "\n", "            ", "if", "obs_vec", "[", "f", "]", "==", "v", "and", "ac", "==", "a", ":", "\n", "                ", "aspects", ".", "append", "(", "'certain-feats-f-{}-v-{}-a-{}'", ".", "format", "(", "f", ",", "v", ",", "a", ")", ")", "\n", "break", "\n", "\n", "", "", "for", "f", ",", "v", ",", "ac", ",", "*", "_", "in", "self", ".", "uncertain_feats", ":", "\n", "            ", "if", "obs_vec", "[", "f", "]", "==", "v", "and", "ac", "==", "a", ":", "\n", "                ", "aspects", ".", "append", "(", "'uncertain-feats-f-{}-v-{}-a-{}'", ".", "format", "(", "f", ",", "v", ",", "a", ")", ")", "\n", "break", "\n", "\n", "", "", "return", "aspects", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.transitions.TransitionAnalysis.get_interestingness_names": [[321, 323], ["None"], "methods", ["None"], ["", "def", "get_interestingness_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "'certain-trans'", ",", "'uncertain-trans'", ",", "'certain-feats'", ",", "'uncertain-feats'", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.__init__": [[22, 48], ["interestingness_xrl.explainability.analysis.AnalysisBase.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "helper", ",", "agent", ",", "min_state_count", "=", "5", ",", "state_outlier_stds", "=", "2", ",", "feature_outlier_stds", "=", "2", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new reward analysis.\n        :param ScenarioHelper helper: the environment helper containing all necessary config and methods.\n        :param QValueBasedAgent agent: the agent to be analyzed.\n        :param int min_state_count: the minimum visits for a state-action pair to be considered an outlier.\n        :param float state_outlier_stds: the threshold for the mean reward MAD z-score of a state for it to be considered an outlier.\n        :param float feature_outlier_stds: the threshold for the mean reward MAD z-score of a feature-action pair for it to be considered an outlier.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "helper", ",", "agent", ")", "\n", "\n", "self", ".", "state_action_outliers", "=", "[", "]", "\n", "\"\"\" The state-action pairs considered as outliers with regards to their mean reward (s, a, mean, n). \"\"\"", "\n", "\n", "self", ".", "action_rwds_avg", "=", "[", "]", "\n", "\"\"\" The average reward values for each action (mean, std_dev). \"\"\"", "\n", "\n", "self", ".", "feature_action_outliers", "=", "[", "]", "\n", "\"\"\" The feature-action pairs considered as outliers with regards to their mean reward (f, v, a, mean, std_dev, n). \"\"\"", "\n", "\n", "self", ".", "avg_reward", "=", "(", "0.", ",", "0.", ",", "0", ")", "\n", "\"\"\" The overall average reward collected by the agent (mean, std, n).\"\"\"", "\n", "\n", "self", ".", "min_state_count", "=", "min_state_count", "\n", "self", ".", "state_outlier_stds", "=", "state_outlier_stds", "\n", "self", ".", "feature_outlier_stds", "=", "feature_outlier_stds", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.difference_to": [[49, 83], ["rewards.RewardAnalysis", "set", "set", "range", "interestingness_xrl.explainability.get_diff_means", "len", "RewardAnalysis.action_rwds_avg.append", "interestingness_xrl.explainability.get_diff_means"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_diff_means", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_diff_means"], ["", "def", "difference_to", "(", "self", ",", "other", ")", ":", "\n", "        ", "\"\"\"\n        Gets the difference between this analysis and another given analysis, i.e., the elements that are new and\n        therefore missing in the other analysis. This can be used to highlight what is new in this analysis compared to\n        one that was performed at a prior stage of the agent's behavior / learning.\n        :param RewardAnalysis other: the other analysis to get the difference to.\n        :return RewardAnalysis: an analysis resulting from the difference between this and the given analysis.\n        \"\"\"", "\n", "\n", "# initializes analysis diff", "\n", "diff_analysis", "=", "RewardAnalysis", "(", "self", ".", "helper", ",", "self", ".", "agent", ",", "self", ".", "min_state_count", ",", "self", ".", "state_outlier_stds", ",", "\n", "self", ".", "feature_outlier_stds", ")", "\n", "\n", "other_state_action_outliers", "=", "set", "(", "(", "s", ",", "a", ")", "for", "s", ",", "a", ",", "*", "_", "in", "other", ".", "state_action_outliers", ")", "\n", "diff_analysis", ".", "state_action_outliers", "=", "[", "(", "s", ",", "a", ",", "*", "_", ")", "for", "s", ",", "a", ",", "*", "_", "in", "self", ".", "state_action_outliers", "\n", "if", "(", "s", ",", "a", ")", "not", "in", "other_state_action_outliers", "]", "\n", "\n", "other_feature_action_outliers", "=", "set", "(", "(", "f", ",", "v", ",", "a", ")", "for", "f", ",", "v", ",", "a", ",", "*", "_", "in", "other", ".", "feature_action_outliers", ")", "\n", "diff_analysis", ".", "feature_action_outliers", "=", "[", "(", "f", ",", "v", ",", "a", ",", "*", "_", ")", "for", "f", ",", "v", ",", "a", ",", "*", "_", "in", "self", ".", "feature_action_outliers", "\n", "if", "(", "f", ",", "v", ",", "a", ")", "not", "in", "other_feature_action_outliers", "]", "\n", "\n", "diff_analysis", ".", "action_rwds_avg", "=", "[", "]", "\n", "for", "a", "in", "range", "(", "len", "(", "self", ".", "action_rwds_avg", ")", ")", ":", "\n", "            ", "mean1", ",", "std1", ",", "n1", "=", "self", ".", "action_rwds_avg", "[", "a", "]", "\n", "mean2", ",", "std2", ",", "n2", "=", "other", ".", "action_rwds_avg", "[", "a", "]", "\n", "diff_analysis", ".", "action_rwds_avg", ".", "append", "(", "get_diff_means", "(", "mean1", ",", "std1", ",", "n1", ",", "mean2", ",", "std2", ",", "n2", ")", ")", "\n", "\n", "", "mean1", ",", "std1", ",", "n1", "=", "self", ".", "avg_reward", "\n", "mean2", ",", "std2", ",", "n2", "=", "other", ".", "avg_reward", "\n", "diff_analysis", ".", "avg_reward", "=", "get_diff_means", "(", "mean1", ",", "std1", ",", "n1", ",", "mean2", ",", "std2", ",", "n2", ")", "\n", "\n", "return", "diff_analysis", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.analyze": [[84, 139], ["numpy.where", "interestingness_xrl.explainability.get_outliers_dist_mean", "[].tolist", "[].tolist", "visited_r_sa[].tolist", "[].tolist", "list", "list", "rewards.RewardAnalysis.helper.get_features_bins", "range", "zip", "range", "interestingness_xrl.explainability.get_outliers_dist_mean", "rewards.RewardAnalysis.state_action_outliers.sort", "rewards.RewardAnalysis.feature_action_outliers.sort", "zip", "float", "float", "len", "zip", "len", "range", "interestingness_xrl.learning.get_features_from_index", "range", "len", "range", "float", "float", "len", "numpy.mean", "range", "numpy.std", "range", "range", "range", "len", "[].append", "range", "numpy.mean", "numpy.std", "len", "range", "feats_rwds_avg.append", "range", "len", "float", "float", "len", "numpy.mean", "numpy.std"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_outliers_dist_mean", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explainability.__init__.get_outliers_dist_mean", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index"], ["", "def", "analyze", "(", "self", ")", ":", "\n", "\n", "# gets visited state-action pairs with sufficient support", "\n", "        ", "visited_sa", "=", "np", ".", "where", "(", "self", ".", "agent", ".", "c_sa", ">=", "self", ".", "min_state_count", ")", "\n", "visited_r_sa", "=", "self", ".", "agent", ".", "r_sa", "[", "visited_sa", "]", "\n", "\n", "# gets state-action pairs with outlier rewards", "\n", "state_action_outliers", "=", "get_outliers_dist_mean", "(", "visited_r_sa", ",", "self", ".", "state_outlier_stds", ")", "\n", "s_idxs", "=", "visited_sa", "[", "0", "]", "[", "state_action_outliers", "]", ".", "tolist", "(", ")", "\n", "a_idxs", "=", "visited_sa", "[", "1", "]", "[", "state_action_outliers", "]", ".", "tolist", "(", ")", "\n", "rwds", "=", "visited_r_sa", "[", "state_action_outliers", "]", ".", "tolist", "(", ")", "\n", "counts", "=", "self", ".", "agent", ".", "c_sa", "[", "visited_sa", "]", "[", "state_action_outliers", "]", ".", "tolist", "(", ")", "\n", "self", ".", "state_action_outliers", "=", "list", "(", "zip", "(", "s_idxs", ",", "a_idxs", ",", "rwds", ",", "counts", ")", ")", "\n", "\n", "# gets average reward per action", "\n", "action_rwd_means", "=", "[", "float", "(", "np", ".", "mean", "(", "visited_r_sa", "[", "visited_sa", "[", "1", "]", "==", "a", "]", ")", ")", "for", "a", "in", "range", "(", "self", ".", "config", ".", "num_actions", ")", "]", "\n", "action_rwd_stds", "=", "[", "float", "(", "np", ".", "std", "(", "visited_r_sa", "[", "visited_sa", "[", "1", "]", "==", "a", "]", ")", ")", "for", "a", "in", "range", "(", "self", ".", "config", ".", "num_actions", ")", "]", "\n", "action_rwd_ns", "=", "[", "len", "(", "visited_r_sa", "[", "visited_sa", "[", "1", "]", "==", "a", "]", ")", "for", "a", "in", "range", "(", "self", ".", "config", ".", "num_actions", ")", "]", "\n", "self", ".", "action_rwds_avg", "=", "list", "(", "zip", "(", "action_rwd_means", ",", "action_rwd_stds", ",", "action_rwd_ns", ")", ")", "\n", "\n", "# collects all rewards per state feature and action", "\n", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "feats_rwds", "=", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "feats_nbins", ")", ")", "]", "\n", "for", "f", "in", "range", "(", "len", "(", "feats_nbins", ")", ")", ":", "\n", "            ", "feats_rwds", "[", "f", "]", "=", "[", "[", "]", "for", "_", "in", "range", "(", "feats_nbins", "[", "f", "]", ")", "]", "\n", "for", "v", "in", "range", "(", "feats_nbins", "[", "f", "]", ")", ":", "\n", "                ", "feats_rwds", "[", "f", "]", "[", "v", "]", "=", "[", "[", "]", "for", "_", "in", "range", "(", "self", ".", "config", ".", "num_actions", ")", "]", "\n", "", "", "for", "s", ",", "a", ",", "rwd", "in", "zip", "(", "visited_sa", "[", "0", "]", ",", "visited_sa", "[", "1", "]", ",", "visited_r_sa", ")", ":", "\n", "\n", "# gets features for each visited state", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "\n", "# for each feature, add reward to the corresponding feature value bucket", "\n", "for", "f", "in", "range", "(", "len", "(", "obs_vec", ")", ")", ":", "\n", "                ", "feats_rwds", "[", "f", "]", "[", "obs_vec", "[", "f", "]", "]", "[", "a", "]", ".", "append", "(", "rwd", ")", "\n", "\n", "# gets average reward per state feature and extracts outliers", "\n", "", "", "feats_rwds_avg", "=", "[", "]", "\n", "for", "f", "in", "range", "(", "len", "(", "feats_nbins", ")", ")", ":", "\n", "            ", "for", "v", "in", "range", "(", "feats_nbins", "[", "f", "]", ")", ":", "\n", "                ", "for", "a", "in", "range", "(", "self", ".", "config", ".", "num_actions", ")", ":", "\n", "                    ", "rwds", "=", "feats_rwds", "[", "f", "]", "[", "v", "]", "[", "a", "]", "\n", "if", "len", "(", "rwds", ")", "==", "0", ":", "\n", "                        ", "continue", "\n", "", "feats_rwds_avg", ".", "append", "(", "\n", "(", "f", ",", "v", ",", "a", ",", "float", "(", "np", ".", "mean", "(", "rwds", ")", ")", ",", "float", "(", "np", ".", "std", "(", "rwds", ")", ")", ",", "len", "(", "rwds", ")", ")", ")", "\n", "", "", "", "fva_outliers_idxs", "=", "get_outliers_dist_mean", "(", "[", "x", "[", "3", "]", "for", "x", "in", "feats_rwds_avg", "]", ",", "self", ".", "feature_outlier_stds", ")", "\n", "self", ".", "feature_action_outliers", "=", "[", "feats_rwds_avg", "[", "i", "]", "for", "i", "in", "fva_outliers_idxs", "]", "\n", "\n", "# gets overall average reward received", "\n", "self", ".", "avg_reward", "=", "(", "float", "(", "np", ".", "mean", "(", "visited_r_sa", ")", ")", ",", "float", "(", "np", ".", "std", "(", "visited_r_sa", ")", ")", ",", "len", "(", "visited_r_sa", ")", ")", "\n", "\n", "# sorts lists", "\n", "self", ".", "state_action_outliers", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "2", "]", ")", "\n", "self", ".", "feature_action_outliers", ".", "sort", "(", "key", "=", "lambda", "e", ":", "-", "e", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_report": [[140, 178], ["rewards.RewardAnalysis.helper.get_features_bins", "rewards.RewardAnalysis.config.get_action_names", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "range", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "interestingness_xrl.learning.get_features_from_index", "rewards.RewardAnalysis.helper.get_features_labels", "interestingness_xrl.util.print_line", "len", "interestingness_xrl.util.print_line", "numpy.zeros", "interestingness_xrl.util.print_line", "len", "len", "len", "rewards.RewardAnalysis.helper.get_features_labels"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_labels"], ["", "def", "_save_report", "(", "self", ",", "file", ",", "write_console", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "action_names", "=", "self", ".", "config", ".", "get_action_names", "(", ")", "\n", "\n", "rwd_avg", ",", "rwd_std", ",", "n", "=", "self", ".", "avg_reward", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'Average overall reward: {:.3f} \u00b1 {:.3f} (count: {})'", ".", "format", "(", "rwd_avg", ",", "rwd_std", ",", "n", ")", ",", "\n", "file", ",", "write_console", ")", "\n", "\n", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} state-action outliers found (outlier threshold: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "state_action_outliers", ")", ",", "self", ".", "state_outlier_stds", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "s", ",", "a", ",", "rwd", ",", "n", "in", "self", ".", "state_action_outliers", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "feats_labels", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ")", "\n", "print_line", "(", "'\\t{}-{} - {} (mean reward: {:.3f}, count: {})'", ".", "format", "(", "\n", "s", ",", "feats_labels", ",", "action_names", "[", "a", "]", ",", "rwd", ",", "n", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'Actions\\' average rewards:'", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "a", "in", "range", "(", "len", "(", "self", ".", "action_rwds_avg", ")", ")", ":", "\n", "            ", "rwd_avg", ",", "rwd_std", ",", "n", "=", "self", ".", "action_rwds_avg", "[", "a", "]", "\n", "print_line", "(", "'\\t{}: {:.3f} \u00b1 {:.3f} (count: {})'", ".", "format", "(", "\n", "action_names", "[", "a", "]", ",", "rwd_avg", ",", "rwd_std", ",", "n", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "", "print_line", "(", "'===================================='", ",", "file", ",", "write_console", ")", "\n", "print_line", "(", "'{} feature-action outliers found (outlier threshold: {}):'", ".", "format", "(", "\n", "len", "(", "self", ".", "feature_action_outliers", ")", ",", "self", ".", "feature_outlier_stds", ")", ",", "file", ",", "write_console", ")", "\n", "\n", "for", "f", ",", "v", ",", "a", ",", "rwd_avg", ",", "rwd_std", ",", "n", "in", "self", ".", "feature_action_outliers", ":", "\n", "            ", "obs_vec", "=", "np", ".", "zeros", "(", "len", "(", "feats_nbins", ")", ",", "np", ".", "uint32", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "feat_label", "=", "self", ".", "helper", ".", "get_features_labels", "(", "obs_vec", ")", "[", "f", "]", "\n", "print_line", "(", "'\\t{} - {} (avg. reward: {:.3f} \u00b1 {:.3f}, count: {})'", ".", "format", "(", "\n", "feat_label", ",", "action_names", "[", "a", "]", ",", "rwd_avg", ",", "rwd_std", ",", "n", ")", ",", "file", ",", "write_console", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_stats": [[179, 190], ["rewards.RewardAnalysis.config.get_action_names", "range", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.configurations.EnvironmentConfiguration.get_action_names"], ["", "", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "stats", "=", "{", "\n", "'Mean overall reward'", ":", "self", ".", "avg_reward", ",", "\n", "'Num state-action outliers'", ":", "(", "len", "(", "self", ".", "state_action_outliers", ")", ",", "0.", ",", "1", ")", ",", "\n", "'Num feature-action outliers'", ":", "(", "len", "(", "self", ".", "feature_action_outliers", ")", ",", "0.", ",", "1", ")", "\n", "}", "\n", "action_names", "=", "self", ".", "config", ".", "get_action_names", "(", ")", "\n", "for", "a", "in", "range", "(", "len", "(", "self", ".", "action_rwds_avg", ")", ")", ":", "\n", "            ", "rwd_avg", ",", "rwd_std", ",", "n", "=", "self", ".", "action_rwds_avg", "[", "a", "]", "\n", "stats", "[", "'Action {} mean reward'", ".", "format", "(", "action_names", "[", "a", "]", ")", "]", "=", "(", "rwd_avg", ",", "rwd_std", ",", "n", ")", "\n", "", "return", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis._save_visual_report": [[191, 204], ["rewards.RewardAnalysis.helper.get_features_bins", "interestingness_xrl.learning.get_features_from_index", "rewards.RewardAnalysis.helper.save_features_image", "rewards.RewardAnalysis.helper.save_features_image", "os.path.join", "len", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.save_features_image"], ["", "def", "_save_visual_report", "(", "self", ",", "path", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "for", "s", ",", "a", ",", "*", "_", "in", "self", ".", "state_action_outliers", ":", "\n", "            ", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "self", ".", "helper", ".", "save_features_image", "(", "obs_vec", ",", "join", "(", "path", ",", "'mean-reward-outlier-s-{}-a-{}.png'", ".", "format", "(", "s", ",", "a", ")", ")", ")", "\n", "\n", "", "for", "f", ",", "v", ",", "a", ",", "*", "_", "in", "self", ".", "feature_action_outliers", ":", "\n", "            ", "obs_vec", "=", "[", "ANY_FEATURE_IDX", "]", "*", "len", "(", "feats_nbins", ")", "\n", "obs_vec", "[", "f", "]", "=", "v", "\n", "self", ".", "helper", ".", "save_features_image", "(", "\n", "obs_vec", ",", "join", "(", "path", ",", "'mean-reward-outlier-f-{}-v-{}-a-{}.png'", ".", "format", "(", "f", ",", "v", ",", "a", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_sample_interesting_aspects": [[205, 222], ["rewards.RewardAnalysis.helper.get_features_bins", "interestingness_xrl.learning.get_features_from_index", "aspects.append", "aspects.append"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.frogger.scenario_helper.FroggerHelper.get_features_bins", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index"], ["", "", "def", "get_sample_interesting_aspects", "(", "self", ",", "s", ",", "a", ",", "r", ",", "ns", ")", ":", "\n", "\n", "        ", "feats_nbins", "=", "self", ".", "helper", ".", "get_features_bins", "(", ")", "\n", "\n", "aspects", "=", "[", "]", "\n", "for", "st", ",", "ac", ",", "*", "_", "in", "self", ".", "state_action_outliers", ":", "\n", "            ", "if", "st", "==", "s", "and", "ac", "==", "a", ":", "\n", "                ", "aspects", ".", "append", "(", "'mean-reward-outlier-s-{}-a-{}'", ".", "format", "(", "s", ",", "a", ")", ")", "\n", "break", "\n", "\n", "", "", "obs_vec", "=", "get_features_from_index", "(", "s", ",", "feats_nbins", ")", "\n", "for", "f", ",", "v", ",", "ac", ",", "*", "_", "in", "self", ".", "feature_action_outliers", ":", "\n", "            ", "if", "obs_vec", "[", "f", "]", "==", "v", "and", "ac", "==", "a", ":", "\n", "                ", "aspects", ".", "append", "(", "'mean-reward-outlier-f-{}-v-{}-a-{}'", ".", "format", "(", "f", ",", "v", ",", "a", ")", ")", "\n", "break", "\n", "\n", "", "", "return", "aspects", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.task.rewards.RewardAnalysis.get_interestingness_names": [[223, 225], ["None"], "methods", ["None"], ["", "def", "get_interestingness_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "'mean-reward-outlier-s'", ",", "'mean-reward-outlier-f'", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.ExplorationStrategy.__init__": [[13, 20], ["numpy.random.RandomState"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "rng", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new exploration strategy according to the given arguments.\n        :param np.random.RandomState rng: the random number generator to be used by the selection strategy.\n        \"\"\"", "\n", "self", ".", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "0", ")", "if", "rng", "is", "None", "else", "rng", "\n", "self", ".", "agent", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.ExplorationStrategy.explore": [[21, 30], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "explore", "(", "self", ",", "state", ")", ":", "\n", "        ", "\"\"\"\n        Selects an action to be executed according to the given state.\n        :param int state: the index of the environment's state as perceived by the agent.\n        :rtype: int\n        :return: the index of the action to be executed.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.ExplorationStrategy.update": [[31, 39], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "update", "(", "self", ",", "num_episode", ")", ":", "\n", "        ", "\"\"\"\n        Updates the exploration strategy according to the number of training episodes.\n        :param int num_episode: the number of the current training episode.\n        :return:\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.ManualExploration.__init__": [[46, 52], ["explorations.ExplorationStrategy.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new manual exploration strategy.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "action", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.ManualExploration.set_action": [[53, 60], ["None"], "methods", ["None"], ["", "def", "set_action", "(", "self", ",", "a", ")", ":", "\n", "        ", "\"\"\"\n        Sets the action to be executed.\n        :param int a: the index of the action to be executed.\n        :return:\n        \"\"\"", "\n", "self", ".", "action", "=", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.ManualExploration.explore": [[61, 63], ["None"], "methods", ["None"], ["", "def", "explore", "(", "self", ",", "state", ")", ":", "\n", "        ", "return", "self", ".", "action", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.GreedyExploration.__init__": [[70, 76], ["explorations.ExplorationStrategy.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "rng", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new exploration strategy according to the given arguments.\n        :param np.random.RandomState rng: the random number generator to be used by the selection strategy.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "rng", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.GreedyExploration.explore": [[77, 85], ["explorations.GreedyExploration.rng.choice", "numpy.flatnonzero", "q.max"], "methods", ["None"], ["", "def", "explore", "(", "self", ",", "state", ")", ":", "\n", "        ", "\"\"\"\n        Selects an action among the ones with the highest Q-value for the given state, at random.\n        :param int state: the index of the environment's state as perceived by the agent.\n        :return int: the index of the action to be executed.\n        \"\"\"", "\n", "q", "=", "self", ".", "agent", ".", "q", "[", "state", "]", "\n", "return", "self", ".", "rng", ".", "choice", "(", "np", ".", "flatnonzero", "(", "q", "==", "q", ".", "max", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.RandomExploration.__init__": [[92, 98], ["explorations.ExplorationStrategy.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "rng", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new exploration strategy according to the given arguments.\n        :param np.random.RandomState rng: the random number generator to be used by the selection strategy.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "rng", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.RandomExploration.explore": [[99, 106], ["explorations.RandomExploration.rng.randint"], "methods", ["None"], ["", "def", "explore", "(", "self", ",", "state", ")", ":", "\n", "        ", "\"\"\"\n        Selects an action at random, independently of the state.\n        :param int state: the index of the environment's state as perceived by the agent.\n        :return int: the index of the action to be executed.\n        \"\"\"", "\n", "return", "self", ".", "rng", ".", "randint", "(", "0", ",", "self", ".", "agent", ".", "num_actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.EpsilonGreedyExploration.__init__": [[114, 122], ["explorations.ExplorationStrategy.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "eps", "=", ".2", ",", "rng", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new exploration strategy according to the given arguments.\n        :param float eps: the probability in [0, 1] with which to select a random action vs. a greedy action.\n        :param np.random.RandomState rng: the random number generator to be used by the selection strategy.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "rng", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.EpsilonGreedyExploration.explore": [[123, 133], ["explorations.EpsilonGreedyExploration.rng.choice", "explorations.EpsilonGreedyExploration.rng.randint", "explorations.EpsilonGreedyExploration.rng.uniform", "numpy.flatnonzero", "q.max"], "methods", ["None"], ["", "def", "explore", "(", "self", ",", "state", ")", ":", "\n", "        ", "\"\"\"\n        Selects an action action at random with probability epsilon, and an action among the ones with the highest\n        Q-value with probability 1 - epsilon.\n        :param int state: the index of the environment's state as perceived by the agent.\n        :return int: the index of the action to be executed.\n        \"\"\"", "\n", "q", "=", "self", ".", "agent", ".", "q", "[", "state", "]", "\n", "return", "self", ".", "rng", ".", "choice", "(", "np", ".", "flatnonzero", "(", "q", "==", "q", ".", "max", "(", ")", ")", ")", "if", "self", ".", "rng", ".", "uniform", "(", "0", ",", "1", ")", ">=", "self", ".", "eps", "else", "self", ".", "rng", ".", "randint", "(", "0", ",", "self", ".", "agent", ".", "num_actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.LinearDecreaseEpsilonGreedy.__init__": [[141, 152], ["explorations.EpsilonGreedyExploration.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "max_episodes", ",", "start_eps", "=", "1.", ",", "rng", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new exploration strategy according to the given arguments.\n        :param int max_episodes: the maximum number of training episodes.\n        :param float start_eps: the initial value of epsilon, i.e., at the start of training.\n        :param np.random.RandomState rng: the random number generator to be used by the selection strategy.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "start_eps", ",", "rng", ")", "\n", "self", ".", "max_episodes", "=", "max_episodes", "\n", "self", ".", "start_eps", "=", "start_eps", "\n", "self", ".", "eps", "=", "0.", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.LinearDecreaseEpsilonGreedy.update": [[153, 161], ["max"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "num_episode", ")", ":", "\n", "        ", "\"\"\"\n        Updates the epsilon parameter of the exploration strategy as a linear function of the episode number, i.e.,\n        where epsilon decreases linearly with the number of training episodes.\n        :param int num_episode: the number of the current training episode.\n        :return:\n        \"\"\"", "\n", "self", ".", "eps", "=", "self", ".", "start_eps", "*", "max", "(", "0.", ",", "1.", "-", "(", "(", "num_episode", "+", "1", ")", "/", "self", ".", "max_episodes", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.ExpDecayEpsilonGreedy.__init__": [[169, 178], ["explorations.LinearDecreaseEpsilonGreedy.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "max_episodes", ",", "start_eps", "=", "1.", ",", "rng", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new exploration strategy according to the given arguments.\n        :param int max_episodes: the maximum number of training episodes.\n        :param float start_eps: the initial value of epsilon, i.e., at the start of training.\n        :param np.random.RandomState rng: the random number generator to be used by the selection strategy.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "max_episodes", ",", "start_eps", ",", "rng", ")", "\n", "self", ".", "eps", "=", "0.", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.ExpDecayEpsilonGreedy.update": [[179, 187], ["max"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "num_episode", ")", ":", "\n", "        ", "\"\"\"\n        Updates the epsilon parameter of the exploration strategy as an exponential function of the episode number,\n        i.e., where epsilon decreases exponentially with the number of training episodes.\n        :param int num_episode: the number of the current training episode.\n        :return:\n        \"\"\"", "\n", "self", ".", "eps", "=", "self", ".", "start_eps", "*", "max", "(", "0.", ",", "(", "1", "-", "(", "10", "/", "self", ".", "max_episodes", ")", ")", "**", "num_episode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.AdaptiveEpsilonGreedy.__init__": [[196, 205], ["explorations.EpsilonGreedyExploration.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "inverse_sensitivity", "=", "1.", ",", "rng", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new exploration strategy according to the given arguments.\n        :param float inverse_sensitivity: positive constant controlling for how TD influences exploration.\n        :param np.random.RandomState rng: the random number generator to be used by the selection strategy.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "1.", ",", "rng", ")", "\n", "self", ".", "inverse_sensitivity", "=", "inverse_sensitivity", "\n", "self", ".", "eps", "=", "0.", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.AdaptiveEpsilonGreedy.explore": [[206, 209], ["explorations.EpsilonGreedyExploration.explore", "numpy.exp", "numpy.mean"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.SoftMaxExploration.explore"], ["", "def", "explore", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "eps", "=", "1", "+", "np", ".", "exp", "(", "-", "np", ".", "mean", "(", "self", ".", "agent", ".", "dq", "[", "state", "]", ")", "/", "self", ".", "inverse_sensitivity", ")", "\n", "return", "super", "(", ")", ".", "explore", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.AdaptiveEpsilonGreedy.update": [[210, 212], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "num_episode", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.SoftMaxExploration.__init__": [[223, 231], ["explorations.ExplorationStrategy.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "temp", "=", "20", ",", "rng", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new exploration strategy according to the given arguments.\n        :param float temp: the temperature parameter.\n        :param np.random.RandomState rng: the random number generator to be used by the selection strategy.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "rng", ")", "\n", "self", ".", "temp", "=", "temp", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.SoftMaxExploration.explore": [[232, 260], ["numpy.max", "numpy.zeros", "range", "numpy.sum", "numpy.true_divide", "numpy.cumsum", "numpy.searchsorted", "numpy.abs", "numpy.exp", "explorations.SoftMaxExploration.rng.random_sample"], "methods", ["None"], ["", "def", "explore", "(", "self", ",", "state", ")", ":", "\n", "        ", "\"\"\"\n        Selects an action action according to a Gibbs (or Boltzmann) distribution defined by the Q-values of the actions\n        and a temperature parameter.\n        :param int state: the index of the environment's state as perceived by the agent.\n        :return int: the index of the action to be executed.\n        \"\"\"", "\n", "q", "=", "self", ".", "agent", ".", "q", "[", "state", "]", "\n", "\n", "# calculates normalization factor", "\n", "q_max", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "q", ")", ")", "\n", "if", "q_max", "==", "0", ":", "\n", "            ", "q_max", "=", "1", "\n", "\n", "# determine exponentials for each action", "\n", "", "a_probs", "=", "np", ".", "zeros", "(", "self", ".", "agent", ".", "num_actions", ")", "\n", "for", "a", "in", "range", "(", "self", ".", "agent", ".", "num_actions", ")", ":", "\n", "            ", "a_probs", "[", "a", "]", "=", "np", ".", "exp", "(", "(", "q", "[", "a", "]", "/", "q_max", ")", "/", "self", ".", "temp", ")", "\n", "\n", "# normalize to get probabilities", "\n", "", "probs_sum", "=", "np", ".", "sum", "(", "a_probs", ")", "\n", "a_probs", "=", "np", ".", "true_divide", "(", "a_probs", ",", "probs_sum", ")", "\n", "\n", "# select randomly", "\n", "totals", "=", "np", ".", "cumsum", "(", "a_probs", ")", "\n", "norm", "=", "totals", "[", "-", "1", "]", "\n", "throw", "=", "self", ".", "rng", ".", "random_sample", "(", ")", "*", "norm", "\n", "return", "np", ".", "searchsorted", "(", "totals", ",", "throw", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.SoftMaxExploration.update": [[261, 263], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "num_episode", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.ExpDecaySoftMax.__init__": [[271, 284], ["explorations.SoftMaxExploration.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "max_episodes", ",", "max_temp", "=", "20", ",", "min_temp", "=", "0.1", ",", "rng", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new exploration strategy according to the given arguments.\n        :param max_episodes: the maximum number of training episodes.\n        :param float max_temp: the initial temperature, i.e., at the start of training.\n        :param float min_temp: the final temperature, i.e., at the end of training.\n        :param np.random.RandomState rng: the random number generator to be used by the selection strategy.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "max_temp", ",", "rng", ")", "\n", "self", ".", "max_episodes", "=", "max_episodes", "\n", "self", ".", "min_temp", "=", "min_temp", "\n", "self", ".", "max_temp", "=", "max_temp", "\n", "self", ".", "temp", "=", "0.", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.ExpDecaySoftMax.update": [[285, 294], ["max"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "num_episode", ")", ":", "\n", "        ", "\"\"\"\n        Updates the temperature parameter of the exploration strategy as an exponential function of the episode number,\n        i.e., where the temperature decreases exponentially with the number of training episodes.\n        :param int num_episode: the number of the current training episode.\n        :return:\n        \"\"\"", "\n", "# decreases temperature over time", "\n", "self", ".", "temp", "=", "self", ".", "min_temp", "+", "self", ".", "max_temp", "*", "max", "(", "0.", ",", "(", "1", "-", "(", "10", "/", "self", ".", "max_episodes", ")", ")", "**", "num_episode", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.behavior_tracker.BehaviorTracker.__init__": [[14, 25], ["behavior_tracker.BehaviorTracker.reset"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.reset"], ["    ", "def", "__init__", "(", "self", ",", "num_episodes", ")", ":", "\n", "        ", "self", ".", "s_a", "=", "[", "[", "]", "]", "\n", "\"\"\" Corresponds to the sequence of actions performed by the agent at each time-step. \"\"\"", "\n", "\n", "self", ".", "s_s", "=", "[", "[", "]", "]", "\n", "\"\"\" Corresponds to the sequence of states visited/observed by the agent at each time-step. \"\"\"", "\n", "\n", "self", ".", "num_episodes", "=", "num_episodes", "\n", "self", ".", "_cur_episode", "=", "0", "\n", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.behavior_tracker.BehaviorTracker.reset": [[26, 34], ["range", "range"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Resets the tracker by cleaning the state and action trajectories.\n        :return:\n        \"\"\"", "\n", "self", ".", "s_a", "=", "[", "[", "]", "for", "_", "in", "range", "(", "self", ".", "num_episodes", ")", "]", "\n", "self", ".", "s_s", "=", "[", "[", "]", "for", "_", "in", "range", "(", "self", ".", "num_episodes", ")", "]", "\n", "self", ".", "_cur_episode", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.behavior_tracker.BehaviorTracker.new_episode": [[35, 42], ["None"], "methods", ["None"], ["", "def", "new_episode", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Signals the tracker that a new episode has started.\n        :return:\n        \"\"\"", "\n", "if", "self", ".", "_cur_episode", "<", "self", ".", "num_episodes", "-", "1", ":", "\n", "            ", "self", ".", "_cur_episode", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.behavior_tracker.BehaviorTracker.add_sample": [[43, 52], ["behavior_tracker.BehaviorTracker.s_s[].append", "behavior_tracker.BehaviorTracker.s_a[].append"], "methods", ["None"], ["", "", "def", "add_sample", "(", "self", ",", "state", ",", "action", ")", ":", "\n", "        ", "\"\"\"\n        Adds a new state-action pair sample to the tracker\n        :param int state: the visited state.\n        :param int action: the executed action.\n        :return:\n        \"\"\"", "\n", "self", ".", "s_s", "[", "self", ".", "_cur_episode", "]", ".", "append", "(", "state", ")", "\n", "self", ".", "s_a", "[", "self", ".", "_cur_episode", "]", ".", "append", "(", "action", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.behavior_tracker.BehaviorTracker.save": [[53, 63], ["interestingness_xrl.learning.write_table_csv", "interestingness_xrl.learning.write_table_csv", "interestingness_xrl.learning.convert_table_to_array", "os.path.join", "interestingness_xrl.learning.convert_table_to_array", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.write_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.write_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.convert_table_to_array", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.convert_table_to_array"], ["", "def", "save", "(", "self", ",", "output_dir", ")", ":", "\n", "        ", "\"\"\"\n        Saves all the relevant information collected by the tracker.\n        :param str output_dir: the path to the directory in which to save the data.\n        :return:\n        \"\"\"", "\n", "\n", "# writes each table to a csv file", "\n", "write_table_csv", "(", "convert_table_to_array", "(", "self", ".", "s_a", ",", "-", "1", ")", ",", "join", "(", "output_dir", ",", "S_A_TABLE_FILE_NAME", ")", ")", "\n", "write_table_csv", "(", "convert_table_to_array", "(", "self", ".", "s_s", ",", "-", "1", ")", ",", "join", "(", "output_dir", ",", "S_S_TABLE_FILE_NAME", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.behavior_tracker.BehaviorTracker.load": [[64, 76], ["interestingness_xrl.learning.convert_array_to_table", "interestingness_xrl.learning.convert_array_to_table", "len", "os.path.exists", "interestingness_xrl.learning.read_table_csv", "interestingness_xrl.learning.read_table_csv", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.convert_array_to_table", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.convert_array_to_table", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.read_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.read_table_csv"], ["", "def", "load", "(", "self", ",", "output_dir", ")", ":", "\n", "        ", "\"\"\"\n        Loads all the relevant information collected by the tracker.\n        :param str output_dir: the path to the directory from which to load the data.\n        :return:\n        \"\"\"", "\n", "\n", "if", "not", "exists", "(", "output_dir", ")", ":", "\n", "            ", "return", "\n", "", "self", ".", "s_a", "=", "convert_array_to_table", "(", "read_table_csv", "(", "join", "(", "output_dir", ",", "S_A_TABLE_FILE_NAME", ")", ",", "dtype", "=", "np", ".", "int", ")", ",", "-", "1", ")", "\n", "self", ".", "s_s", "=", "convert_array_to_table", "(", "read_table_csv", "(", "join", "(", "output_dir", ",", "S_S_TABLE_FILE_NAME", ")", ",", "dtype", "=", "np", ".", "int", ")", ",", "-", "1", ")", "\n", "self", ".", "num_episodes", "=", "self", ".", "_cur_episode", "=", "len", "(", "self", ".", "s_a", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.discretize_features": [[10, 27], ["numpy.zeros", "range", "__init__.get_discretized_index", "len", "len", "min", "int", "numpy.floor"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_discretized_index"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_discretized_index": [[29, 46], ["range", "len", "range", "len"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_features_from_index": [[48, 65], ["numpy.zeros", "range", "len", "len", "range", "len"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.write_3d_table_csv": [[67, 87], ["numpy.transpose", "numpy.nonzero", "open", "csv.writer", "csv.writer.writerow", "idxs.tolist", "idxs.tolist.append", "csv.writer.writerow"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.read_3d_table_csv": [[89, 106], ["open", "csv.reader", "next", "dtype", "int", "int", "int"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.write_table_csv": [[108, 120], ["numpy.savetxt", "delimiter.join"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.read_table_csv": [[122, 132], ["numpy.loadtxt"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.convert_table_to_array": [[134, 137], ["max", "numpy.array", "len", "len"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.convert_array_to_table": [[139, 145], ["range", "len", "table.append", "__init__.index", "[].tolist"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.index"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.index": [[147, 152], ["numpy.ndenumerate"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_combined_mean": [[154, 177], ["counts.sum", "sum_x.sum", "sum_x2.sum", "numpy.sqrt", "len"], "function", ["None"], []], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.Agent.__init__": [[27, 35], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "num_states", ",", "num_actions", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new agent according to the given arguments.\n        :param int num_states: the number of states of the world (may include internal features) that the agent can perceive.\n        :param int num_actions: the number of actions that the agent can perform in the environment.\n        \"\"\"", "\n", "self", ".", "num_actions", "=", "num_actions", "\n", "self", ".", "num_states", "=", "num_states", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.Agent.act": [[36, 43], ["None"], "methods", ["None"], ["", "def", "act", "(", "self", ",", "state", ")", ":", "\n", "        ", "\"\"\"\n        Selects an action to be executed, according to the given observation.\n        :param int state: the index of the environment's state as perceived by the agent.\n        :return int: the index of the action to be executed.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.Agent.update": [[44, 54], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "prev_state", ",", "action", ",", "reward", ",", "next_state", ")", ":", "\n", "        ", "\"\"\"\n        Updates the agent's internal state according to the given sample of interaction with the environment.\n        :param int prev_state: the index of the previous state.\n        :param int action: the index of the action executed by the agent.\n        :param float reward: the reward received by the agent.\n        :param int next_state: the index of the state to which the environment transitioned to.\n        :return:\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.Agent.save": [[55, 62], ["None"], "methods", ["None"], ["", "def", "save", "(", "self", ",", "output_dir", ")", ":", "\n", "        ", "\"\"\"\n        Saves all the relevant information collected / generated by the agent during its interaction with the environment.\n        :param str output_dir: the path to the directory in which to save the agent's information.\n        :return:\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.Agent.load": [[63, 70], ["None"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "output_dir", ")", ":", "\n", "        ", "\"\"\"\n        Loads all the relevant information collected / generated by the agent during its interaction with the environment.\n        :param str output_dir: the path to the directory from which to load the agent's information.\n        :return:\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.ModelAgent.__init__": [[78, 118], ["agents.Agent.__init__", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.full", "numpy.full"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "num_states", ",", "num_actions", ",", "collect_stats", "=", "True", ",", "action_names", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new agent according to the given arguments.\n        :param int num_states: the number of states of the world (may include internal features) that the agent can perceive.\n        :param int num_actions: the number of actions that the agent can perform in the environment.\n        :param bool collect_stats: whether to collect stats from the interaction with the environment.\n        :param list action_names: the names of the actions available to the agent, in the correct order by which they are indexed.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "num_states", ",", "num_actions", ")", "\n", "self", ".", "action_names", "=", "action_names", "\n", "self", ".", "_collect_stats", "=", "collect_stats", "\n", "\n", "self", ".", "c_s", "=", "None", "\n", "\"\"\" Contains information on the states counts/visits. \"\"\"", "\n", "\n", "self", ".", "c_sa", "=", "None", "\n", "\"\"\" Contains information on the state-action pairs counts/visits. \"\"\"", "\n", "\n", "self", ".", "c_sas", "=", "None", "\n", "\"\"\" Contains information on the state-action-next state transition counts/visits. \"\"\"", "\n", "\n", "self", ".", "r_sa", "=", "None", "\n", "\"\"\" Contains information on the state-action pairs average received reward. \"\"\"", "\n", "\n", "self", ".", "t_s", "=", "None", "\n", "\"\"\" Contains information on the last visits to states. \"\"\"", "\n", "\n", "self", ".", "t_sa", "=", "None", "\n", "\"\"\" Contains information on the last time actions were executed in states. \"\"\"", "\n", "\n", "self", ".", "t", "=", "0", "\n", "\"\"\" The number of learning time-steps, i.e. the number of calls to agent.update(). \"\"\"", "\n", "\n", "if", "self", ".", "_collect_stats", ":", "\n", "            ", "self", ".", "c_s", "=", "np", ".", "zeros", "(", "num_states", ",", "np", ".", "uint32", ")", "\n", "self", ".", "c_sa", "=", "np", ".", "zeros", "(", "(", "num_states", ",", "num_actions", ")", ",", "np", ".", "uint32", ")", "\n", "self", ".", "c_sas", "=", "np", ".", "zeros", "(", "(", "num_states", ",", "num_actions", ",", "num_states", ")", ",", "np", ".", "uint32", ")", "\n", "self", ".", "r_sa", "=", "np", ".", "zeros", "(", "(", "num_states", ",", "num_actions", ")", ",", "np", ".", "float", ")", "\n", "self", ".", "t_s", "=", "np", ".", "full", "(", "num_states", ",", "-", "1", ",", "np", ".", "int32", ")", "\n", "self", ".", "t_sa", "=", "np", ".", "full", "(", "(", "num_states", ",", "num_actions", ")", ",", "-", "1", ",", "np", ".", "int32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.ModelAgent.update": [[119, 140], ["float"], "methods", ["None"], ["", "", "def", "update", "(", "self", ",", "prev_state", ",", "action", ",", "reward", ",", "next_state", ")", ":", "\n", "        ", "\"\"\"\n        Updates the statistics collected on the agent's interaction with the environment according to the given sample.\n        :param int prev_state: the index of the previous state.\n        :param int action: the index of the action executed by the agent.\n        :param float reward: the reward received by the agent.\n        :param int next_state: the index of the state to which the environment transitioned to.\n        :return:\n        \"\"\"", "\n", "if", "not", "self", ".", "_collect_stats", ":", "\n", "            ", "return", "\n", "\n", "# update stats", "\n", "", "old_c_sa", "=", "float", "(", "self", ".", "c_sa", "[", "prev_state", "]", "[", "action", "]", ")", "\n", "self", ".", "r_sa", "[", "prev_state", "]", "[", "action", "]", "=", "(", "self", ".", "r_sa", "[", "prev_state", "]", "[", "action", "]", "*", "old_c_sa", "+", "reward", ")", "/", "(", "old_c_sa", "+", "1.", ")", "\n", "self", ".", "c_s", "[", "prev_state", "]", "+=", "1", "\n", "self", ".", "c_sa", "[", "prev_state", "]", "[", "action", "]", "+=", "1", "\n", "self", ".", "c_sas", "[", "prev_state", "]", "[", "action", "]", "[", "next_state", "]", "+=", "1", "\n", "self", ".", "t_s", "[", "prev_state", "]", "=", "self", ".", "t", "\n", "self", ".", "t_sa", "[", "prev_state", "]", "[", "action", "]", "=", "self", ".", "t", "\n", "self", ".", "t", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.ModelAgent.save": [[141, 159], ["interestingness_xrl.learning.write_table_csv", "numpy.savez_compressed", "interestingness_xrl.learning.write_table_csv", "numpy.savez_compressed", "interestingness_xrl.learning.write_3d_table_csv", "numpy.savez_compressed", "interestingness_xrl.learning.write_table_csv", "numpy.savez_compressed", "interestingness_xrl.learning.write_table_csv", "numpy.savez_compressed", "interestingness_xrl.learning.write_table_csv", "numpy.savez_compressed", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.write_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.write_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.write_3d_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.write_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.write_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.write_table_csv"], ["", "def", "save", "(", "self", ",", "output_dir", ")", ":", "\n", "        ", "if", "not", "self", ".", "_collect_stats", ":", "\n", "            ", "return", "\n", "\n", "# writes each table to a csv and binary files", "\n", "", "write_table_csv", "(", "self", ".", "c_s", ",", "join", "(", "output_dir", ",", "C_S_TABLE_FILE_NAME", ")", "+", "TEXT_EXT", ",", "col_names", "=", "[", "'state'", "]", ")", "\n", "np", ".", "savez_compressed", "(", "join", "(", "output_dir", ",", "C_S_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ",", "a", "=", "self", ".", "c_s", ")", "\n", "write_table_csv", "(", "self", ".", "c_sa", ",", "join", "(", "output_dir", ",", "C_SA_TABLE_FILE_NAME", ")", "+", "TEXT_EXT", ",", "col_names", "=", "self", ".", "action_names", ")", "\n", "np", ".", "savez_compressed", "(", "join", "(", "output_dir", ",", "C_SA_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ",", "a", "=", "self", ".", "c_sa", ")", "\n", "write_3d_table_csv", "(", "self", ".", "c_sas", ",", "join", "(", "output_dir", ",", "C_SAS_TABLE_FILE_NAME", ")", "+", "TEXT_EXT", ",", "\n", "col_names", "=", "[", "'state'", ",", "'action'", ",", "'next-state'", ",", "'count'", "]", ")", "\n", "np", ".", "savez_compressed", "(", "join", "(", "output_dir", ",", "C_SAS_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ",", "a", "=", "self", ".", "c_sas", ")", "\n", "write_table_csv", "(", "self", ".", "r_sa", ",", "join", "(", "output_dir", ",", "R_SA_TABLE_FILE_NAME", ")", "+", "TEXT_EXT", ",", "col_names", "=", "self", ".", "action_names", ")", "\n", "np", ".", "savez_compressed", "(", "join", "(", "output_dir", ",", "R_SA_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ",", "a", "=", "self", ".", "r_sa", ")", "\n", "write_table_csv", "(", "self", ".", "t_s", ",", "join", "(", "output_dir", ",", "T_S_TABLE_FILE_NAME", ")", "+", "TEXT_EXT", ",", "col_names", "=", "[", "'state'", "]", ")", "\n", "np", ".", "savez_compressed", "(", "join", "(", "output_dir", ",", "T_S_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ",", "a", "=", "self", ".", "t_s", ")", "\n", "write_table_csv", "(", "self", ".", "t_sa", ",", "join", "(", "output_dir", ",", "T_SA_TABLE_FILE_NAME", ")", "+", "TEXT_EXT", ",", "col_names", "=", "self", ".", "action_names", ")", "\n", "np", ".", "savez_compressed", "(", "join", "(", "output_dir", ",", "T_SA_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ",", "a", "=", "self", ".", "t_sa", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.ModelAgent.load": [[160, 185], ["os.path.exists", "numpy.max", "os.path.exists", "os.path.exists", "interestingness_xrl.learning.read_table_csv", "os.path.exists", "interestingness_xrl.learning.read_table_csv", "interestingness_xrl.learning.read_3d_table_csv", "os.path.exists", "interestingness_xrl.learning.read_table_csv", "os.path.exists", "interestingness_xrl.learning.read_table_csv", "os.path.exists", "interestingness_xrl.learning.read_table_csv", "numpy.load", "numpy.load", "os.path.join", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.read_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.read_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.read_3d_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.read_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.read_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.read_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load"], ["", "def", "load", "(", "self", ",", "output_dir", ")", ":", "\n", "        ", "if", "not", "exists", "(", "output_dir", ")", ":", "\n", "            ", "return", "\n", "\n", "", "self", ".", "c_s", "=", "np", ".", "load", "(", "join", "(", "output_dir", ",", "C_S_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "[", "'a'", "]", "if", "exists", "(", "join", "(", "output_dir", ",", "C_S_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "else", "read_table_csv", "(", "join", "(", "output_dir", ",", "C_S_TABLE_FILE_NAME", ")", "+", "TEXT_EXT", ",", "dtype", "=", "np", ".", "uint32", ",", "has_header", "=", "True", ")", "\n", "self", ".", "c_sa", "=", "np", ".", "load", "(", "join", "(", "output_dir", ",", "C_SA_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "[", "'a'", "]", "if", "exists", "(", "join", "(", "output_dir", ",", "C_SA_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "else", "read_table_csv", "(", "join", "(", "output_dir", ",", "C_SA_TABLE_FILE_NAME", ")", "+", "TEXT_EXT", ",", "dtype", "=", "np", ".", "uint32", ",", "has_header", "=", "True", ")", "\n", "if", "exists", "(", "join", "(", "output_dir", ",", "C_SAS_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", ":", "\n", "            ", "self", ".", "c_sas", "=", "np", ".", "load", "(", "join", "(", "output_dir", ",", "C_SAS_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "[", "'a'", "]", "\n", "", "else", ":", "\n", "            ", "read_3d_table_csv", "(", "\n", "self", ".", "c_sas", ",", "join", "(", "output_dir", ",", "C_SAS_TABLE_FILE_NAME", ")", "+", "TEXT_EXT", ",", "dtype", "=", "np", ".", "uint32", ",", "has_header", "=", "True", ")", "\n", "", "self", ".", "r_sa", "=", "np", ".", "load", "(", "join", "(", "output_dir", ",", "R_SA_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "[", "'a'", "]", "if", "exists", "(", "join", "(", "output_dir", ",", "R_SA_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "else", "read_table_csv", "(", "join", "(", "output_dir", ",", "R_SA_TABLE_FILE_NAME", ")", "+", "TEXT_EXT", ",", "dtype", "=", "np", ".", "float", ",", "has_header", "=", "True", ")", "\n", "self", ".", "t_s", "=", "np", ".", "load", "(", "join", "(", "output_dir", ",", "T_S_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "[", "'a'", "]", "if", "exists", "(", "join", "(", "output_dir", ",", "T_S_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "else", "read_table_csv", "(", "join", "(", "output_dir", ",", "T_S_TABLE_FILE_NAME", ")", "+", "TEXT_EXT", ",", "dtype", "=", "np", ".", "int32", ",", "has_header", "=", "True", ")", "\n", "self", ".", "t_sa", "=", "np", ".", "load", "(", "join", "(", "output_dir", ",", "T_SA_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "[", "'a'", "]", "if", "exists", "(", "join", "(", "output_dir", ",", "T_SA_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "else", "read_table_csv", "(", "join", "(", "output_dir", ",", "T_SA_TABLE_FILE_NAME", ")", "+", "TEXT_EXT", ",", "dtype", "=", "np", ".", "int32", ",", "has_header", "=", "True", ")", "\n", "self", ".", "t", "=", "np", ".", "max", "(", "self", ".", "t_s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.RandomAgent.__init__": [[192, 204], ["agents.ModelAgent.__init__", "interestingness_xrl.learning.explorations.RandomExploration"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "num_states", ",", "num_actions", ",", "collect_stats", "=", "True", ",", "action_names", "=", "None", ",", "rng", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new agent according to the given arguments.\n        :param int num_states: the number of states of the world (may include internal features) that the agent can perceive.\n        :param int num_actions: the number of actions that the agent can perform in the environment.\n        :param bool collect_stats: whether to collect stats from the interaction with the environment.\n        :param list action_names: the names of the actions available to the agent, in the correct order by which they are indexed.\n        :param np.random.RandomState rng: the random number generator used by the agent to select its actions.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "num_states", ",", "num_actions", ",", "collect_stats", ",", "action_names", ")", "\n", "self", ".", "exploration_strategy", "=", "RandomExploration", "(", "rng", ")", "\n", "self", ".", "exploration_strategy", ".", "agent", "=", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.RandomAgent.act": [[205, 212], ["agents.RandomAgent.exploration_strategy.explore"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.SoftMaxExploration.explore"], ["", "def", "act", "(", "self", ",", "state", ")", ":", "\n", "        ", "\"\"\"\n        Selects a random action.\n        :param int state: the index of the environment's state as perceived by the agent.\n        :return int: the index of the action to be executed.\n        \"\"\"", "\n", "return", "self", ".", "exploration_strategy", ".", "explore", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QValueBasedAgent.__init__": [[219, 246], ["agents.ModelAgent.__init__", "numpy.full", "numpy.zeros", "interestingness_xrl.learning.explorations.SoftMaxExploration"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "num_states", ",", "num_actions", ",", "collect_stats", "=", "True", ",", "action_names", "=", "None", ",", "\n", "learn_rate", "=", ".3", ",", "discount", "=", ".99", ",", "initial_q_value", "=", "0.", ",", "exploration_strategy", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new agent according to the given arguments.\n        :param int num_states: the number of states of the world (may include internal features) that the agent can perceive.\n        :param int num_actions: the number of actions that the agent can perform in the environment.\n        :param bool collect_stats: whether to collect stats from the interaction with the environment.\n        :param list action_names: the names of the actions available to the agent, in the correct order by which they are indexed.\n        :param float learn_rate: the agent's learning rate (the weight associated to a new sample during learning).\n        :param float discount: the discount factor in [0, 1] (how important are the future rewards?).\n        :param float initial_q_value: the value used to initialize the q-function (e.g., for optimistic initialization).\n        :param ExplorationStrategy exploration_strategy: the action-selection (exploration-exploitation) strategy used by the agent.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "num_states", ",", "num_actions", ",", "collect_stats", ",", "action_names", ")", "\n", "\n", "self", ".", "learn_rate", "=", "learn_rate", "\n", "self", ".", "discount", "=", "discount", "\n", "self", ".", "initial_q_value", "=", "initial_q_value", "\n", "\n", "# default epsilon-greedy action-selection (for exploration/exploitation)", "\n", "self", ".", "exploration_strategy", "=", "SoftMaxExploration", "(", ")", "if", "exploration_strategy", "is", "None", "else", "exploration_strategy", "\n", "self", ".", "exploration_strategy", ".", "agent", "=", "self", "\n", "\n", "# initialize q-table and prediction error (delta-q)", "\n", "self", ".", "q", "=", "np", ".", "full", "(", "(", "num_states", ",", "num_actions", ")", ",", "initial_q_value", ")", "\n", "self", ".", "dq", "=", "np", ".", "zeros", "(", "(", "num_states", ",", "num_actions", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QValueBasedAgent.act": [[247, 254], ["agents.QValueBasedAgent.exploration_strategy.explore"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.explorations.SoftMaxExploration.explore"], ["", "def", "act", "(", "self", ",", "state", ")", ":", "\n", "        ", "\"\"\"\n        Selects an action to be executed, according to the given observation and the exploration strategy.\n        :param int state: the index of the environment's state as perceived by the agent.\n        :return int: the index of the action to be executed.\n        \"\"\"", "\n", "return", "self", ".", "exploration_strategy", ".", "explore", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QValueBasedAgent.save": [[255, 261], ["agents.ModelAgent.save", "interestingness_xrl.learning.write_table_csv", "numpy.savez_compressed", "interestingness_xrl.learning.write_table_csv", "numpy.savez_compressed", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.save", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.write_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.write_table_csv"], ["", "def", "save", "(", "self", ",", "output_dir", ")", ":", "\n", "        ", "super", "(", ")", ".", "save", "(", "output_dir", ")", "\n", "write_table_csv", "(", "self", ".", "q", ",", "join", "(", "output_dir", ",", "Q_TABLE_FILE_NAME", ")", "+", "TEXT_EXT", ",", "col_names", "=", "self", ".", "action_names", ")", "\n", "np", ".", "savez_compressed", "(", "join", "(", "output_dir", ",", "Q_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ",", "a", "=", "self", ".", "q", ")", "\n", "write_table_csv", "(", "self", ".", "dq", ",", "join", "(", "output_dir", ",", "DQ_TABLE_FILE_NAME", ")", "+", "TEXT_EXT", ",", "col_names", "=", "self", ".", "action_names", ")", "\n", "np", ".", "savez_compressed", "(", "join", "(", "output_dir", ",", "DQ_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ",", "a", "=", "self", ".", "dq", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QValueBasedAgent.load": [[262, 272], ["agents.ModelAgent.load", "os.path.exists", "os.path.exists", "interestingness_xrl.learning.read_table_csv", "os.path.exists", "interestingness_xrl.learning.read_table_csv", "numpy.load", "os.path.join", "numpy.load", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.read_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.read_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load"], ["", "def", "load", "(", "self", ",", "output_dir", ")", ":", "\n", "        ", "if", "not", "exists", "(", "output_dir", ")", ":", "\n", "            ", "return", "\n", "", "super", "(", ")", ".", "load", "(", "output_dir", ")", "\n", "self", ".", "q", "=", "np", ".", "load", "(", "join", "(", "output_dir", ",", "Q_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "[", "'a'", "]", "if", "exists", "(", "join", "(", "output_dir", ",", "Q_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "else", "read_table_csv", "(", "join", "(", "output_dir", ",", "Q_TABLE_FILE_NAME", ")", ",", "has_header", "=", "True", ")", "\n", "self", ".", "dq", "=", "np", ".", "load", "(", "join", "(", "output_dir", ",", "DQ_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "[", "'a'", "]", "if", "exists", "(", "join", "(", "output_dir", ",", "DQ_TABLE_FILE_NAME", ")", "+", "BIN_EXT", ")", "else", "read_table_csv", "(", "join", "(", "output_dir", ",", "DQ_TABLE_FILE_NAME", ")", ",", "has_header", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QLearningAgent.__init__": [[279, 295], ["agents.QValueBasedAgent.__init__"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__"], ["def", "__init__", "(", "self", ",", "num_states", ",", "num_actions", ",", "collect_stats", "=", "True", ",", "action_names", "=", "None", ",", "\n", "learn_rate", "=", ".3", ",", "discount", "=", ".99", ",", "initial_q_value", "=", "0.", ",", "exploration_strategy", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new agent according to the given arguments.\n        :param int num_states: the number of states of the world (may include internal features) that the agent can perceive.\n        :param int num_actions: the number of actions that the agent can perform in the environment.\n        :param bool collect_stats: whether to collect stats from the interaction with the environment.\n        :param list action_names: the names of the actions available to the agent, in the correct order by which they are indexed.\n        :param float learn_rate: the agent's learning rate (the weight associated to a new sample during learning).\n        :param float discount: the discount factor in [0, 1] (how important are the future rewards?).\n        :param float initial_q_value: the value used to initialize the q-function (e.g., for optimistic initialization).\n        :param ExplorationStrategy exploration_strategy: the action-selection (exploration-exploitation) strategy to be used during learning.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "num_states", ",", "num_actions", ",", "collect_stats", ",", "action_names", ",", "\n", "learn_rate", ",", "discount", ",", "initial_q_value", ",", "exploration_strategy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QLearningAgent.update": [[296, 316], ["agents.ModelAgent.update", "float", "numpy.abs", "numpy.max"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.agents.QLearningAgent.update"], ["", "def", "update", "(", "self", ",", "prev_state", ",", "action", ",", "reward", ",", "next_state", ")", ":", "\n", "        ", "\"\"\"\n        Updates the Q-value function and the environment's model according to the provided interaction sample.\n        :param int prev_state: the index of the previous state.\n        :param int action: the index of the action executed by the agent.\n        :param float reward: the reward received by the agent.\n        :param int next_state: the index of the state to which the environment transitioned to.\n        :return:\n        \"\"\"", "\n", "super", "(", ")", ".", "update", "(", "prev_state", ",", "action", ",", "reward", ",", "next_state", ")", "\n", "\n", "# updates q-table", "\n", "old_q", "=", "self", ".", "q", "[", "prev_state", "]", "[", "action", "]", "\n", "self", ".", "q", "[", "prev_state", "]", "[", "action", "]", "=", "old_q", "+", "self", ".", "learn_rate", "*", "(", "reward", "+", "self", ".", "discount", "*", "np", ".", "max", "(", "self", ".", "q", "[", "next_state", "]", ")", "-", "old_q", ")", "\n", "\n", "# updates delta-q (avg prediction error)", "\n", "c_sa", "=", "float", "(", "self", ".", "c_sa", "[", "prev_state", "]", "[", "action", "]", ")", "\n", "dq", "=", "np", ".", "abs", "(", "old_q", "-", "self", ".", "q", "[", "prev_state", "]", "[", "action", "]", ")", "\n", "self", ".", "dq", "[", "prev_state", "]", "[", "action", "]", "=", "(", "self", ".", "dq", "[", "prev_state", "]", "[", "action", "]", "*", "(", "c_sa", "-", "1", ")", "+", "dq", ")", "/", "c_sa", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatType.get_name": [[26, 45], ["None"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "get_name", "(", "stat_t", ")", ":", "\n", "        ", "if", "stat_t", "==", "StatType", ".", "count", ":", "\n", "            ", "return", "'Count'", "\n", "", "if", "stat_t", "==", "StatType", ".", "mean", ":", "\n", "            ", "return", "'Mean'", "\n", "", "if", "stat_t", "==", "StatType", ".", "std_dev", ":", "\n", "            ", "return", "'Std-dev'", "\n", "", "if", "stat_t", "==", "StatType", ".", "max", ":", "\n", "            ", "return", "'Max'", "\n", "", "if", "stat_t", "==", "StatType", ".", "min", ":", "\n", "            ", "return", "'Min'", "\n", "", "if", "stat_t", "==", "StatType", ".", "sum", ":", "\n", "            ", "return", "'Sum'", "\n", "", "if", "stat_t", "==", "StatType", ".", "last", ":", "\n", "            ", "return", "'Last'", "\n", "", "if", "stat_t", "==", "StatType", ".", "ratio", ":", "\n", "            ", "return", "'Ratio'", "\n", "", "return", "'Unknown'", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.__init__": [[52, 59], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Creates a new collector.\n        \"\"\"", "\n", "self", ".", "_vars", "=", "{", "}", "\n", "self", ".", "_counts", "=", "{", "}", "\n", "self", ".", "_stat_types", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.reset": [[60, 69], ["stats_collector.StatsCollector._vars.keys", "stats_collector.StatsCollector.add_sample"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Resets all counters and clears all collected samples.\n        :return:\n        \"\"\"", "\n", "# create new variables", "\n", "for", "name", "in", "self", ".", "_vars", ".", "keys", "(", ")", ":", "\n", "            ", "num_trials", ",", "max_samples", "=", "self", ".", "_vars", "[", "name", "]", ".", "shape", "\n", "self", ".", "add_sample", "(", "name", ",", "num_trials", ",", "max_samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_variable": [[70, 81], ["numpy.full", "numpy.zeros"], "methods", ["None"], ["", "", "def", "add_variable", "(", "self", ",", "name", ",", "num_trials", ",", "max_samples", ",", "stat_t", "=", "StatType", ".", "mean", ")", ":", "\n", "        ", "\"\"\"\n        Adds a variable whose samples are to be collected during some number of trials.\n        :param str name: the name of the variable.\n        :param int num_trials: the number of trials during which the variable is going to be sampled.\n        :param int max_samples: the maximum number of samples that can be collected during a trial.\n        :param int stat_t: the type of statistic we are interested in gathering from this variable at the end of trials.\n        \"\"\"", "\n", "self", ".", "_vars", "[", "name", "]", "=", "np", ".", "full", "(", "(", "num_trials", ",", "max_samples", ")", ",", "np", ".", "nan", ")", "\n", "self", ".", "_counts", "[", "name", "]", "=", "np", ".", "zeros", "(", "num_trials", ",", "dtype", "=", "np", ".", "int", ")", "\n", "self", ".", "_stat_types", "[", "name", "]", "=", "stat_t", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.all_variables": [[82, 89], ["stats_collector.StatsCollector._vars.keys"], "methods", ["None"], ["", "def", "all_variables", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Enumerates all variable names stored in this collector.\n        :return:\n        \"\"\"", "\n", "for", "var_name", "in", "self", ".", "_vars", ".", "keys", "(", ")", ":", "\n", "            ", "yield", "var_name", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_type": [[90, 98], ["None"], "methods", ["None"], ["", "", "def", "get_type", "(", "self", ",", "name", ")", ":", "\n", "        ", "\"\"\"\n        Gets the type of statistic collected for the given variable.\n        :param str name: the name of the variable.\n        :rtype: int\n        :return: the type of statistic collected for the given variable.\n        \"\"\"", "\n", "return", "self", ".", "_stat_types", "[", "name", "]", "if", "name", "in", "self", ".", "_vars", "else", "StatType", ".", "none", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.add_sample": [[99, 112], ["None"], "methods", ["None"], ["", "def", "add_sample", "(", "self", ",", "name", ",", "t", ",", "val", ")", ":", "\n", "        ", "\"\"\"\n        Updates the given statistic by adding in a sample value.\n        :param str name: the name of the variable for which we want to add a sample.\n        :param int t: the trial number in which the sample was observed.\n        :param float val: the new sample to be added.\n        :return:\n        \"\"\"", "\n", "if", "name", "not", "in", "self", ".", "_vars", ":", "\n", "            ", "return", "\n", "\n", "", "self", ".", "_vars", "[", "name", "]", "[", "t", "]", "[", "self", ".", "_counts", "[", "name", "]", "[", "t", "]", "]", "=", "val", "\n", "self", ".", "_counts", "[", "name", "]", "[", "t", "]", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_most_recent_sample": [[113, 123], ["None"], "methods", ["None"], ["", "def", "get_most_recent_sample", "(", "self", ",", "name", ",", "t", ")", ":", "\n", "        ", "\"\"\"\n        Gets the most recent sample added to the given variable.\n        :param str name: the name of the variable for which we want to retrieve the most recent sample.\n        :param int t: the trial number in which the sample was observed.\n        :rtype: float\n        :return: the most recent sample added to the given variable.\n        \"\"\"", "\n", "return", "self", ".", "_vars", "[", "name", "]", "[", "t", "]", "[", "self", ".", "_counts", "[", "name", "]", "[", "t", "]", "-", "1", "]", "if", "name", "in", "self", ".", "_counts", "and", "self", ".", "_counts", "[", "name", "]", "[", "t", "]", ">", "0", "else", "np", ".", "nan", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_trial_count": [[124, 133], ["None"], "methods", ["None"], ["", "def", "get_trial_count", "(", "self", ",", "name", ",", "t", ")", ":", "\n", "        ", "\"\"\"\n        Gets the number of samples collected for the given trial.\n        :param str name: the name of the variable for which we want to retrieve the trial count.\n        :param int t: the trial number for which we want to retrieve the count.\n        :rtype: int\n        :return: the number of samples collected for the given trial, or -1 if the given variable name is not in the collection.\n        \"\"\"", "\n", "return", "self", ".", "_counts", "[", "name", "]", "[", "t", "]", "if", "name", "in", "self", ".", "_counts", "else", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_mean": [[134, 147], ["stats_collector.StatsCollector.get_trials_stats", "numpy.mean", "numpy.std"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_trials_stats"], ["", "def", "get_mean", "(", "self", ",", "name", ",", "t", ",", "stat_t", "=", "-", "1", ")", ":", "\n", "        ", "\"\"\"\n        Calculates the mean statistic across trials for the given variable.\n        :param str name: the name of the variable for which we want the statistic.\n        :param int t: the trial number until which to get the statistic.\n        :param int stat_t: the type of statistic to be calculated for the variable. If -1, the default statistic is used.\n        :rtype: tuple\n        :return: (avg, std_dev) a tuple containing the mean statistic and respective standard deviation across trials.\n        \"\"\"", "\n", "if", "t", "==", "0", ":", "\n", "            ", "return", "0.", ",", "0.", "\n", "", "trials_stats", "=", "self", ".", "get_trials_stats", "(", "name", ",", "t", ",", "stat_t", ")", "\n", "return", "np", ".", "mean", "(", "trials_stats", ")", ",", "np", ".", "std", "(", "trials_stats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_stat": [[148, 180], ["len", "numpy.nanmean", "numpy.nanstd", "numpy.nanmax", "numpy.nanmin", "numpy.nansum", "numpy.isnan", "numpy.count_nonzero"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_stat", "(", "data", ",", "stat_t", ")", ":", "\n", "        ", "\"\"\"\n        Gets a statistic for the given data.\n        :param np.ndarray data: the data to get the statistic for.\n        :param int stat_t: the type of statistic to be calculated.\n        :rtype: float\n        :return: the statistic calculated for the given data.\n        \"\"\"", "\n", "data_len", "=", "len", "(", "~", "np", ".", "isnan", "(", "data", ")", ")", "\n", "if", "data_len", "==", "0", ":", "\n", "            ", "return", "np", ".", "nan", "\n", "\n", "", "if", "stat_t", "==", "StatType", ".", "count", ":", "\n", "            ", "return", "data_len", "\n", "", "if", "stat_t", "==", "StatType", ".", "mean", ":", "\n", "            ", "return", "np", ".", "nanmean", "(", "data", ")", "\n", "", "if", "stat_t", "==", "StatType", ".", "std_dev", ":", "\n", "            ", "return", "np", ".", "nanstd", "(", "data", ")", "\n", "", "if", "stat_t", "==", "StatType", ".", "max", ":", "\n", "            ", "return", "np", ".", "nanmax", "(", "data", ")", "\n", "", "if", "stat_t", "==", "StatType", ".", "min", ":", "\n", "            ", "return", "np", ".", "nanmin", "(", "data", ")", "\n", "", "if", "stat_t", "==", "StatType", ".", "sum", ":", "\n", "            ", "return", "np", ".", "nansum", "(", "data", ")", "\n", "", "if", "stat_t", "==", "StatType", ".", "last", ":", "\n", "            ", "return", "data", "[", "data_len", "-", "1", "]", "\n", "", "if", "stat_t", "==", "StatType", ".", "ratio", ":", "\n", "# ratio between the positive samples (count) and num samples", "\n", "            ", "return", "np", ".", "count_nonzero", "(", "data", "[", ":", "data_len", "]", ")", "/", "data_len", "\n", "\n", "", "return", "np", ".", "nan", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_trials_stats": [[181, 214], ["numpy.full", "numpy.full", "numpy.nanmean", "numpy.nanstd", "numpy.nanmax", "numpy.nanmin", "numpy.nansum", "numpy.true_divide", "numpy.count_nonzero", "range", "range"], "methods", ["None"], ["", "def", "get_trials_stats", "(", "self", ",", "name", ",", "t", ",", "stat_t", "=", "-", "1", ")", ":", "\n", "        ", "\"\"\"\n        Calculates a statistic for every trial for the given variable.\n        :param str name: the name of the variable for which we want the statistic.\n        :param int t: the trial number until which to get the statistic.\n        :param int stat_t: the type of statistic to be calculated for the variable. If -1, the default statistic is used.\n        :rtype: np.ndarray\n        :return: an array containing the required statistic for each trial.\n        \"\"\"", "\n", "if", "name", "not", "in", "self", ".", "_vars", ":", "\n", "            ", "return", "np", ".", "full", "(", "t", ",", "np", ".", "nan", ")", "\n", "\n", "", "stat_t", "=", "self", ".", "_stat_types", "[", "name", "]", "if", "stat_t", "==", "-", "1", "else", "stat_t", "\n", "if", "stat_t", "==", "StatType", ".", "count", ":", "\n", "            ", "return", "self", ".", "_counts", "[", "name", "]", "[", ":", "t", "]", "\n", "", "if", "stat_t", "==", "StatType", ".", "mean", ":", "\n", "            ", "return", "np", ".", "nanmean", "(", "self", ".", "_vars", "[", "name", "]", "[", ":", "t", "]", ",", "axis", "=", "1", ")", "\n", "", "if", "stat_t", "==", "StatType", ".", "std_dev", ":", "\n", "            ", "return", "np", ".", "nanstd", "(", "self", ".", "_vars", "[", "name", "]", "[", ":", "t", "]", ",", "axis", "=", "1", ")", "\n", "", "if", "stat_t", "==", "StatType", ".", "max", ":", "\n", "            ", "return", "np", ".", "nanmax", "(", "self", ".", "_vars", "[", "name", "]", "[", ":", "t", "]", ",", "axis", "=", "1", ")", "\n", "", "if", "stat_t", "==", "StatType", ".", "min", ":", "\n", "            ", "return", "np", ".", "nanmin", "(", "self", ".", "_vars", "[", "name", "]", "[", ":", "t", "]", ",", "axis", "=", "1", ")", "\n", "", "if", "stat_t", "==", "StatType", ".", "sum", ":", "\n", "            ", "return", "np", ".", "nansum", "(", "self", ".", "_vars", "[", "name", "]", "[", ":", "t", "]", ",", "axis", "=", "1", ")", "\n", "", "if", "stat_t", "==", "StatType", ".", "last", ":", "\n", "            ", "return", "[", "self", ".", "_vars", "[", "name", "]", "[", "i", "]", "[", "self", ".", "_counts", "[", "name", "]", "[", "i", "]", "-", "1", "]", "for", "i", "in", "range", "(", "t", ")", "]", "\n", "", "if", "stat_t", "==", "StatType", ".", "ratio", ":", "\n", "# ratio between the positive samples (count) and num samples", "\n", "            ", "pos_count", "=", "[", "np", ".", "count_nonzero", "(", "self", ".", "_vars", "[", "name", "]", "[", "i", "]", "[", ":", "self", ".", "_counts", "[", "name", "]", "[", "i", "]", "]", ")", "for", "i", "in", "range", "(", "t", ")", "]", "\n", "return", "np", ".", "true_divide", "(", "pos_count", ",", "self", ".", "_counts", "[", "name", "]", "[", ":", "t", "]", ")", "\n", "\n", "", "return", "np", ".", "full", "(", "t", ",", "np", ".", "nan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_mean_trials_stats": [[215, 248], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "range", "numpy.array", "numpy.array.mean", "numpy.array.std", "numpy.full", "numpy.array.append", "collector.get_trials_stats", "collector.get_trials_stats", "collector.get_trials_stats", "collector.get_trials_stats", "interestingness_xrl.learning.get_combined_mean"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_trials_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_trials_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_trials_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_trials_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_combined_mean"], ["", "@", "staticmethod", "\n", "def", "get_mean_trials_stats", "(", "stats_collectors", ",", "name", ",", "t", ",", "stat_t", "=", "-", "1", ")", ":", "\n", "        ", "\"\"\"\n        Calculates the mean of a statistic for every trial of the given variable, across multiple collections.\n        :param list stats_collectors: a list of StatsCollector objects, assumed to have the same number of trials.\n        :param str name: the name of the variable for which we want the mean statistic.\n        :param int t: the trial number until which to get the statistic.\n        :param int stat_t: the type of statistic to be calculated for the variable. If -1, the default statistic is used.\n        :rtype: (np.ndarray, np.ndarray, np.ndarray)\n        :return: a tuple (means, stds, counts) containing the mean and standard deviation of the required statistic for\n        each trial, across all collectors.\n        \"\"\"", "\n", "stat_t", "=", "stats_collectors", "[", "0", "]", ".", "_stat_types", "[", "name", "]", "if", "stat_t", "==", "-", "1", "else", "stat_t", "\n", "if", "stat_t", "==", "StatType", ".", "mean", ":", "\n", "# if stat itself is the mean, we need to collect the combined mean for each trial", "\n", "            ", "var_means", "=", "np", ".", "array", "(", "[", "collector", ".", "get_trials_stats", "(", "\n", "name", ",", "t", ",", "StatType", ".", "mean", ")", "for", "collector", "in", "stats_collectors", "]", ")", "\n", "var_stds", "=", "np", ".", "array", "(", "[", "collector", ".", "get_trials_stats", "(", "\n", "name", ",", "t", ",", "StatType", ".", "std_dev", ")", "for", "collector", "in", "stats_collectors", "]", ")", "\n", "var_counts", "=", "np", ".", "array", "(", "[", "collector", ".", "get_trials_stats", "(", "\n", "name", ",", "t", ",", "StatType", ".", "count", ")", "for", "collector", "in", "stats_collectors", "]", ")", "\n", "\n", "var_trials_stats", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "var_means", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "var_trials_stats", ".", "append", "(", "get_combined_mean", "(", "var_means", "[", ":", ",", "t", "]", ",", "var_stds", "[", ":", ",", "t", "]", ",", "var_counts", "[", ":", ",", "t", "]", ")", ")", "\n", "", "var_trials_stats", "=", "np", ".", "array", "(", "var_trials_stats", ")", "\n", "return", "var_trials_stats", "[", ":", ",", "0", "]", ",", "var_trials_stats", "[", ":", ",", "1", "]", ",", "var_trials_stats", "[", ":", ",", "2", "]", "\n", "\n", "# otherwise just calculate means for each trial", "\n", "", "var_trials_stats", "=", "np", ".", "array", "(", "[", "collector", ".", "get_trials_stats", "(", "name", ",", "t", ",", "stat_t", ")", "for", "collector", "in", "stats_collectors", "]", ")", "\n", "return", "(", "var_trials_stats", ".", "mean", "(", "axis", "=", "0", ")", ",", "\n", "var_trials_stats", ".", "std", "(", "axis", "=", "0", ")", ",", "\n", "np", ".", "full", "(", "var_trials_stats", ".", "shape", "[", "1", "]", ",", "var_trials_stats", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_across_trials_stats": [[249, 265], ["stats_collector.StatsCollector.get_trials_stats", "numpy.zeros", "range", "stats_collector.StatsCollector.get_stat"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_trials_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_stat"], ["", "def", "get_across_trials_stats", "(", "self", ",", "name", ",", "t", ",", "stat_t", "=", "-", "1", ")", ":", "\n", "        ", "\"\"\"\n        Gets all statistics of the given variable when considering the stat for each trial, i.e., the across-trial mean,\n        std dev, max, min, ...\n        :param str name: the name of the variable for which we want the statistic.\n        :param int t: the trial number until which to get the statistic.\n        :param int stat_t: the type of statistic to be calculated for the variable for each trial. If -1, the default\n        statistic is used.\n        :rtype: np.ndarray\n        :return: an array containing the several across-trial statistics for the variable, ordered by stat type index.\n        \"\"\"", "\n", "trials_stats", "=", "self", ".", "get_trials_stats", "(", "name", ",", "t", ",", "stat_t", ")", "\n", "across_trials_stats", "=", "np", ".", "zeros", "(", "NUM_STAT_TYPES", ")", "\n", "for", "stat_idx", "in", "range", "(", "NUM_STAT_TYPES", ")", ":", "\n", "            ", "across_trials_stats", "[", "stat_idx", "]", "=", "self", ".", "get_stat", "(", "trials_stats", ",", "stat_idx", ")", "\n", "", "return", "across_trials_stats", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.save": [[266, 287], ["interestingness_xrl.learning.write_table_csv", "numpy.savez_compressed", "numpy.save", "range"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.write_table_csv", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.save"], ["", "def", "save", "(", "self", ",", "name", ",", "t", ",", "file_path", ",", "binary", "=", "False", ",", "compressed", "=", "False", ",", "delimiter", "=", "','", ")", ":", "\n", "        ", "\"\"\"\n        Saves all the samples collected for the given variable in a text or binary file.\n        :param str name: the name of the variable for which we want the statistic.\n        :param int t: the trial number until which to save the samples.\n        :param str file_path: the path to the file.\n        :param bool binary: whether to save a binary file. If False, a CSV text file will be used.\n        :param bool compressed: whether to save a compressed binary file. Only works if binary is True.\n        :param str delimiter: the delimiter for the fields in the CSV file, if Binary is False.\n        :return:\n        \"\"\"", "\n", "if", "name", "in", "self", ".", "_vars", ":", "\n", "            ", "data", "=", "self", ".", "_vars", "[", "name", "]", "[", ":", "t", "]", "\n", "if", "binary", ":", "\n", "                ", "if", "compressed", ":", "\n", "                    ", "np", ".", "savez_compressed", "(", "'{}.npz'", ".", "format", "(", "file_path", ")", ",", "a", "=", "data", ")", "\n", "", "else", ":", "\n", "                    ", "np", ".", "save", "(", "'{}.npy'", ".", "format", "(", "file_path", ")", ",", "data", ")", "\n", "", "", "else", ":", "\n", "                ", "col_names", "=", "[", "'Trial {}'", ".", "format", "(", "_t", ")", "for", "_t", "in", "range", "(", "t", ")", "]", "\n", "write_table_csv", "(", "data", ".", "T", ",", "'{}.csv'", ".", "format", "(", "file_path", ")", ",", "delimiter", ",", "'%s'", ",", "col_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load": [[288, 317], ["numpy.count_nonzero", "os.path.exists", "os.path.exists", "os.path.exists", "numpy.isnan", "numpy.load", "numpy.load", "interestingness_xrl.learning.read_table_csv"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.read_table_csv"], ["", "", "", "def", "load", "(", "self", ",", "name", ",", "file_path", ",", "stat_t", "=", "StatType", ".", "mean", ",", "binary", "=", "False", ",", "delimiter", "=", "','", ")", ":", "\n", "        ", "\"\"\"\n        Loads the data regarding a variable previously-saved by a stats collector from a file. Adds the variable sample\n        data per trial to the collection of variables in this collector.\n        :param str name: the name of the variable that we want to load.\n        :param str file_path: the path to the file.\n        :param int stat_t: the type of statistic of the variable to be loaded.\n        :param bool binary: whether to load a binary file. If False, a CSV text file will be loaded.\n        :param str delimiter: the delimiter for the fields in the CSV file, if binary is False.\n        :rtype: bool\n        :return: whether the data was successfully loaded.\n        \"\"\"", "\n", "# tries to load files in different formats", "\n", "data", "=", "None", "\n", "if", "binary", ":", "\n", "            ", "if", "exists", "(", "'{}.npz'", ".", "format", "(", "file_path", ")", ")", ":", "\n", "                ", "data", "=", "np", ".", "load", "(", "'{}.npz'", ".", "format", "(", "file_path", ")", ")", "[", "'a'", "]", "\n", "", "elif", "exists", "(", "'{}.npy'", ".", "format", "(", "file_path", ")", ")", ":", "\n", "                ", "data", "=", "np", ".", "load", "(", "'{}.npy'", ".", "format", "(", "file_path", ")", ")", "\n", "", "", "elif", "exists", "(", "'{}.csv'", ".", "format", "(", "file_path", ")", ")", ":", "\n", "            ", "data", "=", "read_table_csv", "(", "'{}.csv'", ".", "format", "(", "file_path", ")", ",", "delimiter", ",", "has_header", "=", "True", ")", ".", "T", "\n", "", "if", "data", "is", "None", ":", "\n", "            ", "return", "False", "\n", "\n", "# sets variable data if loaded correctly", "\n", "", "self", ".", "_vars", "[", "name", "]", "=", "data", "\n", "self", ".", "_counts", "[", "name", "]", "=", "np", ".", "count_nonzero", "(", "~", "np", ".", "isnan", "(", "data", ")", ",", "axis", "=", "1", ")", "\n", "self", ".", "_stat_types", "[", "name", "]", "=", "stat_t", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.save_across_trials_image": [[318, 346], ["stats_collector.StatsCollector.get_trials_stats", "range", "matplotlib.figure", "matplotlib.plot", "stats_collector.StatsCollector._format_plot", "matplotlib.savefig", "matplotlib.close", "len", "stats_collector.StatType.get_name"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.get_trials_stats", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector._format_plot", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.close", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatType.get_name"], ["", "def", "save_across_trials_image", "(", "\n", "self", ",", "name", ",", "t", ",", "file_path", ",", "stat_t", "=", "-", "1", ",", "x_label", "=", "'Trial'", ",", "width", "=", "DEF_WIDTH", ",", "height", "=", "DEF_HEIGHT", ")", ":", "\n", "        ", "\"\"\"\n        Saves an image plotting the evolution of the statistic associated with the given variable across trials.\n        :param str name: the name of the variable for which we want to save the image.\n        :param int t: the trial number until which to get the statistic.\n        :param str file_path: the path to the image file.\n        :param int stat_t: the type of statistic to be plotted for the variable. If -1, the default statistic is used.\n        :param str x_label: the label of the X-axis\n        :param int width: the width of the image.\n        :param int height: the height of the image.\n        :return:\n        \"\"\"", "\n", "if", "name", "not", "in", "self", ".", "_vars", ":", "\n", "            ", "return", "\n", "\n", "# gets array with stats for each trial", "\n", "", "stat_t", "=", "self", ".", "_stat_types", "[", "name", "]", "if", "stat_t", "==", "-", "1", "else", "stat_t", "\n", "data", "=", "self", ".", "get_trials_stats", "(", "name", ",", "t", ",", "stat_t", ")", "\n", "x", "=", "range", "(", "1", ",", "len", "(", "data", ")", "+", "1", ")", "\n", "\n", "# creates and prints plot to image file", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "width", ",", "height", ")", ")", "\n", "plt", ".", "plot", "(", "x", ",", "data", ")", "\n", "\n", "self", ".", "_format_plot", "(", "x", ".", "stop", ",", "x_label", ",", "'{} {}'", ".", "format", "(", "StatType", ".", "get_name", "(", "stat_t", ")", ",", "name", ")", ")", "\n", "plt", ".", "savefig", "(", "file_path", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.save_mean_image": [[347, 381], ["pandas.DataFrame", "pandas.DataFrame.mean", "pandas.DataFrame.count", "range", "matplotlib.figure", "matplotlib.plot", "matplotlib.fill_between", "stats_collector.StatsCollector._format_plot", "matplotlib.savefig", "matplotlib.close", "pandas.DataFrame.std", "numpy.sqrt", "name.lower"], "methods", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector._format_plot", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.close"], ["", "def", "save_mean_image", "(", "self", ",", "name", ",", "t", ",", "file_path", ",", "x_label", "=", "'Sample'", ",", "width", "=", "DEF_WIDTH", ",", "height", "=", "DEF_HEIGHT", ")", ":", "\n", "        ", "\"\"\"\n        Saves an image plotting the evolution of the mean value of the given variable across trials.\n        :param str name: the name of the variable for which we want to save the image.\n        :param int t: the trial number until which to get the statistic.\n        :param str file_path: the path to the image file.\n        :param int width: the width of the image.\n        :param int height: the height of the image.\n        :param str x_label: the label to appear in the x-axis.\n        :return:\n        \"\"\"", "\n", "if", "name", "not", "in", "self", ".", "_vars", ":", "\n", "            ", "return", "\n", "\n", "# converts data to data frame", "\n", "", "data", "=", "self", ".", "_vars", "[", "name", "]", "[", ":", "t", "]", "\n", "df", "=", "pd", ".", "DataFrame", "(", "data", ")", "\n", "\n", "# gets means and std errors along trials", "\n", "means", "=", "df", ".", "mean", "(", "axis", "=", "0", ")", "\n", "counts", "=", "df", ".", "count", "(", "axis", "=", "0", ")", "\n", "std_errors", "=", "df", ".", "std", "(", "axis", "=", "0", ")", "/", "np", ".", "sqrt", "(", "counts", ")", "\n", "mins", "=", "means", "-", "std_errors", "\n", "maxs", "=", "means", "+", "std_errors", "\n", "x", "=", "range", "(", "1", ",", "data", ".", "shape", "[", "1", "]", "+", "1", ")", "\n", "\n", "# creates and prints plot to image file", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "width", ",", "height", ")", ")", "\n", "plt", ".", "plot", "(", "x", ",", "means", ")", "\n", "plt", ".", "fill_between", "(", "x", ",", "mins", ",", "maxs", ",", "alpha", "=", "0.5", ")", "\n", "\n", "self", ".", "_format_plot", "(", "x", ".", "stop", ",", "x_label", ",", "'Mean '", "+", "name", ".", "lower", "(", ")", ")", "\n", "plt", ".", "savefig", "(", "file_path", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector._format_plot": [[382, 388], ["matplotlib.xlim", "matplotlib.xlabel", "matplotlib.ylabel"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_format_plot", "(", "max_x", ",", "x_label", ",", "y_label", ")", ":", "\n", "\n", "        ", "plt", ".", "xlim", "(", "1", ",", "max_x", ")", "\n", "plt", ".", "xlabel", "(", "x_label", ",", "fontweight", "=", "'bold'", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "ylabel", "(", "y_label", ",", "fontweight", "=", "'bold'", ",", "fontsize", "=", "14", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.clear_dir": [[33, 39], ["os.path.exists", "os.makedirs", "shutil.rmtree", "os.makedirs"], "function", ["None"], ["def", "clear_dir", "(", "dir_path", ")", ":", "\n", "    ", "if", "not", "exists", "(", "dir_path", ")", ":", "\n", "        ", "makedirs", "(", "dir_path", ")", "\n", "", "elif", "CLEAN_DIR", ":", "\n", "        ", "rmtree", "(", "dir_path", ")", "\n", "makedirs", "(", "dir_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.print_mean_comparison": [[41, 45], ["agent_comparer.print_variable_mean_comparison"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.print_variable_mean_comparison"], ["", "", "def", "print_mean_comparison", "(", "_output_dir", ",", "_stats", ",", "_var_names", ")", ":", "\n", "# creates comparison files for each variable", "\n", "    ", "for", "_var_name", "in", "_var_names", ":", "\n", "        ", "print_variable_mean_comparison", "(", "_output_dir", ",", "_stats", ",", "_var_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.print_variable_mean_comparison": [[47, 89], ["interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "list", "numpy.zeros", "enumerate", "pandas.DataFrame", "_var_name.lower", "pd.DataFrame.to_csv", "interestingness_xrl.util.print_line", "numpy.arange", "agent_comparer.get_y_label_adjust_base", "matplotlib.bar", "matplotlib.xticks", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.savefig", "matplotlib.close", "_stats.keys", "interestingness_xrl.learning.get_combined_mean", "os.path.join", "str", "len", "matplotlib.cm.get_cmap", "abs", "matplotlib.gca().yaxis.set_major_formatter", "os.path.join", "_var_name.lower", "len", "numpy.sqrt", "max", "max", "matplotlib.ticker.FuncFormatter", "matplotlib.gca", "int"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.get_y_label_adjust_base", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.close", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.__init__.get_combined_mean"], ["", "", "def", "print_variable_mean_comparison", "(", "_output_dir", ",", "_stats", ",", "_var_name", ")", ":", "\n", "    ", "print_line", "(", "'\\n=============================================='", ",", "log_file", ")", "\n", "print_line", "(", "'Processing comparison of means for \\'{}\\'...\\n'", ".", "format", "(", "_var_name", ".", "lower", "(", ")", ")", ",", "log_file", ")", "\n", "\n", "# reorganizes data by stats x agent", "\n", "ag_names", "=", "list", "(", "_stats", ".", "keys", "(", ")", ")", "\n", "var_data", "=", "np", ".", "zeros", "(", "(", "3", ",", "len", "(", "_stats", ")", ")", ")", "\n", "for", "_ag_idx", ",", "_ag_name", "in", "enumerate", "(", "ag_names", ")", ":", "\n", "        ", "means", ",", "stds", ",", "counts", "=", "_stats", "[", "_ag_name", "]", "[", "_var_name", "]", "\n", "mean", ",", "std", ",", "count", "=", "get_combined_mean", "(", "means", ",", "stds", ",", "counts", ")", "\n", "var_data", "[", ":", ",", "_ag_idx", "]", "=", "[", "mean", ",", "std", ",", "count", "]", "\n", "\n", "# convert variable stats to pandas data-frame", "\n", "", "df", "=", "pd", ".", "DataFrame", "(", "var_data", ",", "index", "=", "[", "'Mean'", ",", "'Std'", ",", "'Count'", "]", ",", "columns", "=", "ag_names", ")", "\n", "\n", "# saves to CSV", "\n", "file_name", "=", "_var_name", ".", "lower", "(", ")", "\n", "df", ".", "to_csv", "(", "join", "(", "_output_dir", ",", "'{}.csv'", ".", "format", "(", "file_name", ")", ")", ")", "\n", "\n", "# print to screen", "\n", "print_line", "(", "str", "(", "df", ")", ",", "log_file", ")", "\n", "\n", "x_axis", "=", "np", ".", "arange", "(", "len", "(", "ag_names", ")", ")", "\n", "means", "=", "[", "var_data", "[", "0", "]", "[", "i", "]", "for", "i", "in", "x_axis", "]", "\n", "errors", "=", "[", "var_data", "[", "1", "]", "[", "i", "]", "/", "np", ".", "sqrt", "(", "var_data", "[", "2", "]", "[", "i", "]", ")", "for", "i", "in", "x_axis", "]", "\n", "# errors = [var_data[1][i] for i in x_axis]", "\n", "color_map", "=", "plt", ".", "cm", ".", "get_cmap", "(", "COLOR_SET_NAME", ")", "(", "x_axis", ")", "\n", "\n", "# gets y label adjust for base 10", "\n", "exp", "=", "get_y_label_adjust_base", "(", "max", "(", "means", ")", "+", "max", "(", "errors", ")", ")", "\n", "y_label", "=", "'Mean {}'", ".", "format", "(", "_var_name", ")", ".", "title", "(", ")", "\n", "\n", "# print bar chart of means to image file (may not work well for all variables)", "\n", "plt", ".", "bar", "(", "x_axis", ",", "means", ",", "yerr", "=", "errors", ",", "capsize", "=", "10", ",", "align", "=", "'center'", ",", "color", "=", "color_map", ")", "\n", "plt", ".", "xticks", "(", "x_axis", ",", "ag_names", ")", "\n", "plt", ".", "xlabel", "(", "'Agent'", ",", "fontweight", "=", "'bold'", ",", "fontsize", "=", "14", ")", "\n", "if", "abs", "(", "exp", ")", ">=", "2", ":", "\n", "        ", "y_label", "=", "'{} $\\\\mathregular{{\\\\left(\\\\times10^{}\\\\right)}}$'", ".", "format", "(", "y_label", ",", "exp", ")", "\n", "plt", ".", "gca", "(", ")", ".", "yaxis", ".", "set_major_formatter", "(", "FuncFormatter", "(", "lambda", "x", ",", "_", ":", "'{}'", ".", "format", "(", "int", "(", "x", "/", "(", "10", "**", "exp", ")", ")", ")", ")", ")", "\n", "", "plt", ".", "ylabel", "(", "y_label", ",", "fontweight", "=", "'bold'", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "savefig", "(", "join", "(", "_output_dir", ",", "'{}.pdf'", ".", "format", "(", "file_name", ")", ")", ",", "pad_inches", "=", ".02", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.print_evo_comparison": [[91, 95], ["agent_comparer.print_variable_evo_comparison"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.print_variable_evo_comparison"], ["", "def", "print_evo_comparison", "(", "_output_dir", ",", "_stats", ",", "_var_names", ")", ":", "\n", "# creates comparison files for each variable", "\n", "    ", "for", "_var_name", "in", "_var_names", ":", "\n", "        ", "print_variable_evo_comparison", "(", "_output_dir", ",", "_stats", ",", "_var_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.smooth_data": [[97, 99], ["scipy.signal.savgol_filter"], "function", ["None"], ["", "", "def", "smooth_data", "(", "y", ")", ":", "\n", "    ", "return", "savgol_filter", "(", "y", ",", "WINDOW_LENGTH", ",", "POLY_ORDER", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.print_variable_evo_comparison": [[101, 143], ["interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "matplotlib.figure", "list", "collections.OrderedDict", "enumerate", "pandas.DataFrame", "pd.DataFrame.to_csv", "agent_comparer.get_y_label_adjust_base", "_var_name.title", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.xlim", "matplotlib.savefig", "matplotlib.close", "_stats.keys", "matplotlib.cm.get_cmap", "numpy.arange", "matplotlib.plot", "matplotlib.fill_between", "os.path.join", "pd.DataFrame.max().max", "abs", "matplotlib.gca().yaxis.set_major_formatter", "os.path.join", "_var_name.lower", "len", "numpy.sqrt", "agent_comparer.smooth_data", "numpy.arange", "agent_comparer.smooth_data", "agent_comparer.smooth_data", "matplotlib.ticker.FuncFormatter", "len", "_var_name.lower", "pd.DataFrame.max", "_var_name.lower", "matplotlib.gca", "int"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.get_y_label_adjust_base", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.heatmaps.HeatmapsExplainer.close", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.smooth_data", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.smooth_data", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.smooth_data"], ["", "def", "print_variable_evo_comparison", "(", "_output_dir", ",", "_stats", ",", "_var_name", ")", ":", "\n", "    ", "print_line", "(", "'\\n=============================================='", ",", "log_file", ")", "\n", "print_line", "(", "'Processing comparison of evolution for \\'{}\\'...\\n'", ".", "format", "(", "_var_name", ".", "lower", "(", ")", ")", ",", "log_file", ")", "\n", "\n", "# plots and creates data frame from trial data for each variable", "\n", "plt", ".", "figure", "(", ")", "\n", "ag_names", "=", "list", "(", "_stats", ".", "keys", "(", ")", ")", "\n", "color_map", "=", "plt", ".", "cm", ".", "get_cmap", "(", "COLOR_SET_NAME", ")", "(", "np", ".", "arange", "(", "len", "(", "ag_names", ")", ")", ")", "\n", "\n", "var_data", "=", "OrderedDict", "(", ")", "\n", "for", "_ag_idx", ",", "_ag_name", "in", "enumerate", "(", "ag_names", ")", ":", "\n", "        ", "means", ",", "stds", ",", "counts", "=", "_stats", "[", "_ag_name", "]", "[", "_var_name", "]", "\n", "var_data", "[", "'{} Mean'", ".", "format", "(", "_ag_name", ")", "]", "=", "means", "\n", "var_data", "[", "'{} Std'", ".", "format", "(", "_ag_name", ")", "]", "=", "stds", "\n", "var_data", "[", "'{} Count'", ".", "format", "(", "_ag_name", ")", "]", "=", "counts", "\n", "errs", "=", "stds", "/", "np", ".", "sqrt", "(", "counts", ")", "\n", "\n", "plt", ".", "plot", "(", "smooth_data", "(", "means", ")", ",", "label", "=", "_ag_name", ",", "c", "=", "color_map", "[", "_ag_idx", "]", ")", "\n", "plt", ".", "fill_between", "(", "np", ".", "arange", "(", "len", "(", "means", ")", ")", ",", "\n", "smooth_data", "(", "means", "-", "errs", ")", ",", "\n", "smooth_data", "(", "means", "+", "errs", ")", ",", "color", "=", "color_map", "[", "_ag_idx", "]", ",", "alpha", "=", "0.5", ")", "\n", "\n", "", "df", "=", "pd", ".", "DataFrame", "(", "var_data", ")", "\n", "df", ".", "to_csv", "(", "join", "(", "subdir", ",", "'{}-trial-data.csv'", ".", "format", "(", "_var_name", ".", "lower", "(", ")", ")", ")", ")", "\n", "\n", "# gets y label adjust for base 10", "\n", "exp", "=", "get_y_label_adjust_base", "(", "df", ".", "max", "(", ")", ".", "max", "(", ")", ")", "\n", "y_label", "=", "_var_name", ".", "title", "(", ")", "\n", "\n", "# configures axes and legend", "\n", "plt", ".", "legend", "(", "fontsize", "=", "16", ")", "\n", "plt", ".", "xlabel", "(", "'Episode'", ",", "fontweight", "=", "'bold'", ",", "fontsize", "=", "14", ")", "\n", "if", "abs", "(", "exp", ")", ">=", "2", ":", "\n", "        ", "y_label", "=", "'{} $\\\\mathregular{{\\\\left(\\\\times10^{}\\\\right)}}$'", ".", "format", "(", "y_label", ",", "exp", ")", "\n", "plt", ".", "gca", "(", ")", ".", "yaxis", ".", "set_major_formatter", "(", "FuncFormatter", "(", "lambda", "x", ",", "_", ":", "'{}'", ".", "format", "(", "int", "(", "x", "/", "(", "10", "**", "exp", ")", ")", ")", ")", ")", "\n", "", "plt", ".", "ylabel", "(", "y_label", ",", "fontweight", "=", "'bold'", ",", "fontsize", "=", "14", ")", "\n", "\n", "plt", ".", "xlim", "(", "0", ",", "df", ".", "shape", "[", "0", "]", ")", "\n", "\n", "# saves figure", "\n", "plt", ".", "savefig", "(", "join", "(", "_output_dir", ",", "'evo {}.pdf'", ".", "format", "(", "_var_name", ".", "lower", "(", ")", ")", ")", ",", "pad_inches", "=", ".02", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.get_y_label_adjust_base": [[145, 156], ["abs"], "function", ["None"], ["", "def", "get_y_label_adjust_base", "(", "val", ")", ":", "\n", "    ", "val", "=", "abs", "(", "val", ")", "\n", "if", "0", "<", "val", "<", "1", ":", "\n", "        ", "exp", "=", "-", "1", "\n", "while", "val", "<", "10", "**", "exp", ":", "\n", "            ", "exp", "-=", "1", "\n", "", "return", "exp", "+", "2", "\n", "", "exp", "=", "1", "\n", "while", "val", ">", "10", "**", "exp", ":", "\n", "        ", "exp", "+=", "1", "\n", "", "return", "exp", "-", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.agent_comparer.get_agent_data": [[158, 185], ["os.path.join", "os.path.join", "interestingness_xrl.scenarios.configurations.EnvironmentConfiguration.load_json", "interestingness_xrl.scenarios.create_helper", "interestingness_xrl.scenarios.get_analysis_output_dir", "os.path.join", "os.path.exists", "os.path.join", "os.path.exists", "interestingness_xrl.scenarios.get_agent_output_dir", "os.path.exists", "interestingness_xrl.explainability.analysis.full_analysis.FullAnalysis.load_json", "FullAnalysis.load_json.set_helper", "interestingness_xrl.scenarios.create_helper.load_stats"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.load_json", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.create_helper", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.get_analysis_output_dir", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.__init__.get_agent_output_dir", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.__init__.AnalysisBase.load_json", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.analysis.full_analysis.FullAnalysis.set_helper", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.scenarios.scenario_helper.ScenarioHelper.load_stats"], ["", "def", "get_agent_data", "(", "config", ",", "trial_num", ")", ":", "\n", "# loads config from agent dir", "\n", "    ", "agent_dir", "=", "join", "(", "pardir", ",", "get_agent_output_dir", "(", "config", ",", "agent_t", ",", "trial_num", ")", ")", "\n", "config_file", "=", "join", "(", "agent_dir", ",", "'config.json'", ")", "\n", "if", "not", "exists", "(", "config_file", ")", ":", "\n", "        ", "return", "None", ",", "None", "\n", "", "config", "=", "EnvironmentConfiguration", ".", "load_json", "(", "config_file", ")", "\n", "\n", "# creates env helper", "\n", "helper", "=", "create_helper", "(", "config", ")", "\n", "\n", "# tries to load full analysis", "\n", "analyses_dir", "=", "get_analysis_output_dir", "(", "agent_dir", ")", "\n", "file_name", "=", "join", "(", "analyses_dir", ",", "'full-analysis.json'", ")", "\n", "analysis", "=", "None", "\n", "if", "exists", "(", "file_name", ")", ":", "\n", "        ", "analysis", "=", "FullAnalysis", ".", "load_json", "(", "file_name", ")", "\n", "analysis", ".", "set_helper", "(", "helper", ")", "\n", "\n", "# tries to load all data", "\n", "", "stats_dir", "=", "join", "(", "agent_dir", ",", "'results'", ")", "\n", "if", "exists", "(", "stats_dir", ")", ":", "\n", "        ", "helper", ".", "load_stats", "(", "stats_dir", ")", "\n", "", "else", ":", "\n", "        ", "helper", "=", "None", "\n", "\n", "", "return", "analysis", ",", "helper", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.highlights_organizer._collect_aspect_highlights": [[25, 51], ["os.path.join", "os.path.exists", "len", "highlights.append", "interestingness_xrl.util.print_line", "numpy.load"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.learning.stats_collector.StatsCollector.load"], ["def", "_collect_aspect_highlights", "(", "_aspect_name", ",", "aspect_lst", ",", "num_highlights", ")", ":", "\n", "    ", "global", "aspect_group", ",", "highlights_dirs", ",", "ag_idx", "\n", "\n", "highlights", "=", "[", "]", "\n", "aspect_idx", "=", "0", "\n", "total_highlights", "=", "0", "\n", "highlight_idx", "=", "0", "\n", "\n", "# until highlight budget is not reached", "\n", "group_name", "=", "aspect_group", "[", "_aspect_name", "]", "\n", "while", "total_highlights", "<", "num_highlights", "and", "aspect_idx", "<", "len", "(", "aspect_lst", ")", ":", "\n", "\n", "# tries to load highlight for the aspect", "\n", "        ", "s", ",", "*", "_", "=", "aspect_lst", "[", "aspect_idx", "]", "\n", "highlight_file", "=", "join", "(", "highlights_dirs", "[", "ag_idx", "]", ",", "group_name", ",", "'{}-{}-video{}.{}'", ".", "format", "(", "\n", "_aspect_name", ",", "s", ",", "highlight_idx", ",", "NUMPY_EXTENSION", ")", ")", "\n", "if", "exists", "(", "highlight_file", ")", ":", "\n", "            ", "highlights", ".", "append", "(", "np", ".", "load", "(", "highlight_file", ")", ")", "\n", "total_highlights", "+=", "1", "\n", "highlight_idx", "+=", "1", "\n", "print_line", "(", "'Loaded highlight from: {}'", ".", "format", "(", "highlight_file", ")", ",", "log_file", ")", "\n", "", "else", ":", "\n", "# advances aspect element", "\n", "            ", "aspect_idx", "+=", "1", "\n", "highlight_idx", "=", "0", "\n", "", "", "return", "highlights", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.highlights_organizer._save_highlights_video": [[53, 68], ["os.path.join", "os.path.exists", "os.makedirs", "len", "os.path.join", "interestingness_xrl.util.record_video", "interestingness_xrl.util.print_line", "highlights_frames.extend", "_file_name.lower"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.record_video", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line"], ["", "def", "_save_highlights_video", "(", "highlights", ",", "sub_dir_name", ",", "_file_name", ")", ":", "\n", "    ", "global", "log_file", ",", "output_dir", "\n", "\n", "sub_dir", "=", "join", "(", "output_dir", ",", "sub_dir_name", ")", "\n", "if", "not", "exists", "(", "sub_dir", ")", ":", "\n", "        ", "makedirs", "(", "sub_dir", ")", "\n", "\n", "# tries to save highlight compact to video file", "\n", "", "if", "len", "(", "highlights", ")", ">", "0", ":", "\n", "        ", "highlights_frames", "=", "[", "]", "\n", "for", "frames", "in", "highlights", ":", "\n", "            ", "highlights_frames", ".", "extend", "(", "frames", "[", "frames", ".", "files", "[", "0", "]", "]", ")", "\n", "", "video_file_path", "=", "join", "(", "sub_dir", ",", "'{}.{}'", ".", "format", "(", "_file_name", ".", "lower", "(", ")", ",", "VIDEO_EXTENSION", ")", ")", "\n", "record_video", "(", "highlights_frames", ",", "video_file_path", ",", "HIGHLIGHTS_FPS", ")", "\n", "print_line", "(", "'Saved highlights compact in: {}'", ".", "format", "(", "video_file_path", ")", ",", "log_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.highlights_organizer._save_highlights_for_aspect": [[70, 80], ["interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "highlights_organizer._collect_aspect_highlights", "highlights_organizer._save_highlights_video"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.highlights_organizer._collect_aspect_highlights", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.highlights_organizer._save_highlights_video"], ["", "", "def", "_save_highlights_for_aspect", "(", "sub_dir", ",", "_aspect_name", ",", "aspect_lst", ",", "num_highlights", ",", "agent_name", ")", ":", "\n", "    ", "global", "log_file", "\n", "\n", "print_line", "(", "'=============================================='", ",", "log_file", ")", "\n", "print_line", "(", "'Collecting and saving highlights for aspect {} of \\'{}\\' in sub-dir: \\'{}\\''", ".", "format", "(", "\n", "_aspect_name", ",", "agent_name", ",", "sub_dir", ")", ",", "log_file", ")", "\n", "\n", "# collect and saves highlights for this aspect", "\n", "highlights", "=", "_collect_aspect_highlights", "(", "_aspect_name", ",", "aspect_lst", ",", "num_highlights", ")", "\n", "_save_highlights_video", "(", "highlights", ",", "sub_dir", ",", "agent_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.highlights_organizer._save_highlights_for_aspects": [[82, 94], ["interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "range", "highlights_organizer._save_highlights_video", "len", "highlights.extend", "len", "highlights_organizer._collect_aspect_highlights"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.highlights_organizer._save_highlights_video", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.highlights_organizer._collect_aspect_highlights"], ["", "def", "_save_highlights_for_aspects", "(", "sub_dir", ",", "_aspect_names", ",", "aspect_lsts", ",", "num_highlights", ",", "agent_name", ")", ":", "\n", "    ", "global", "log_file", "\n", "\n", "print_line", "(", "'=============================================='", ",", "log_file", ")", "\n", "print_line", "(", "'Collecting and saving highlights for {} aspects of \\'{}\\' in sub-dir: \\'{}\\'...'", ".", "format", "(", "\n", "len", "(", "_aspect_names", ")", ",", "agent_name", ",", "sub_dir", ")", ",", "log_file", ")", "\n", "\n", "# collect and saves highlights for the different aspects", "\n", "highlights", "=", "[", "]", "\n", "for", "_i", "in", "range", "(", "len", "(", "_aspect_names", ")", ")", ":", "\n", "        ", "highlights", ".", "extend", "(", "_collect_aspect_highlights", "(", "_aspect_names", "[", "_i", "]", ",", "aspect_lsts", "[", "_i", "]", ",", "num_highlights", "[", "_i", "]", ")", ")", "\n", "", "_save_highlights_video", "(", "highlights", ",", "sub_dir", ",", "agent_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.post_process.highlights_organizer._save_sequence": [[96, 117], ["os.path.join", "interestingness_xrl.util.print_line", "interestingness_xrl.util.print_line", "enumerate", "os.path.exists", "os.makedirs", "interestingness_xrl.explainability.explanation.sequences.SequencesExplainer.get_sequence_name", "os.path.join", "os.path.exists", "interestingness_xrl.explainability.explanation.sequences.SequencesExplainer.get_sequence_file_name", "os.path.join", "shutil.copyfile", "interestingness_xrl.util.print_line", "agent_name.lower"], "function", ["home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer.get_sequence_name", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.explanation.sequences.SequencesExplainer.get_sequence_file_name", "home.repos.pwc.inspect_result.SRI-AIC_InterestingnessXRL.interestingness_xrl.util.print_line"], ["", "def", "_save_sequence", "(", "sub_dir_name", ",", "sequence_lst", ",", "agent_name", ")", ":", "\n", "    ", "global", "output_dir", ",", "log_file", ",", "ag_idx", "\n", "\n", "sub_dir", "=", "join", "(", "output_dir", ",", "sub_dir_name", ")", "\n", "if", "not", "exists", "(", "sub_dir", ")", ":", "\n", "        ", "makedirs", "(", "sub_dir", ")", "\n", "\n", "", "print_line", "(", "'=============================================='", ",", "log_file", ")", "\n", "print_line", "(", "'Collecting and saving sequence for \\'{}\\' in sub-dir: \\'{}\\''", ".", "format", "(", "agent_name", ",", "sub_dir", ")", ",", "log_file", ")", "\n", "\n", "# tries to get the longest recorded sequences", "\n", "for", "seq_idx", ",", "seq_info", "in", "enumerate", "(", "sequence_lst", ")", ":", "\n", "        ", "seq_name", ",", "_", "=", "SequencesExplainer", ".", "get_sequence_name", "(", "seq_idx", ",", "seq_info", ")", "\n", "seq_file_name", "=", "join", "(", "sequences_dirs", "[", "ag_idx", "]", ",", "SequencesExplainer", ".", "get_sequence_file_name", "(", "seq_name", ",", "0", ")", ")", "\n", "\n", "# if file exists, copy to results dir", "\n", "if", "exists", "(", "seq_file_name", ")", ":", "\n", "            ", "video_file_path", "=", "join", "(", "sub_dir", ",", "'{}.{}'", ".", "format", "(", "agent_name", ".", "lower", "(", ")", ",", "VIDEO_EXTENSION", ")", ")", "\n", "shutil", ".", "copyfile", "(", "seq_file_name", ",", "video_file_path", ")", "\n", "print_line", "(", "'Saved sequence by copying from: {}\\n\\tto: {}'", ".", "format", "(", "seq_file_name", ",", "video_file_path", ")", ",", "log_file", ")", "\n", "return", "\n", "\n"]]}