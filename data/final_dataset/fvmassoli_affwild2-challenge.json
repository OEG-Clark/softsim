{"home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__init__": [[22, 166], ["torch.Module.__init__", "MainModel.load_weights", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__batch_normalization", "MainModel.KitModel.__conv", "MainModel.KitModel.__conv", "MainModel.KitModel.__dense"], "methods", ["home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.__init__", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.load_weights", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__dense"], ["    ", "def", "__init__", "(", "self", ",", "weight_file", ")", ":", "\n", "        ", "super", "(", "KitModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "global", "__weights_dict", "\n", "__weights_dict", "=", "load_weights", "(", "weight_file", ")", "\n", "\n", "self", ".", "conv1_7x7_s2", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv1/7x7_s2'", ",", "in_channels", "=", "3", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv1_7x7_s2_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv1/7x7_s2/bn'", ",", "num_features", "=", "64", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv2_1_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_1_1x1_reduce'", ",", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2_1_1x1_proj", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_1_1x1_proj'", ",", "in_channels", "=", "64", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2_1_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv2_1_1x1_reduce/bn'", ",", "num_features", "=", "64", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv2_1_1x1_proj_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv2_1_1x1_proj/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv2_1_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_1_3x3'", ",", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2_1_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv2_1_3x3/bn'", ",", "num_features", "=", "64", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv2_1_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_1_1x1_increase'", ",", "in_channels", "=", "64", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2_1_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv2_1_1x1_increase/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv2_1_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_1_1x1_down'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "16", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv2_1_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_1_1x1_up'", ",", "in_channels", "=", "16", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv2_2_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_2_1x1_reduce'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2_2_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv2_2_1x1_reduce/bn'", ",", "num_features", "=", "64", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv2_2_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_2_3x3'", ",", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2_2_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv2_2_3x3/bn'", ",", "num_features", "=", "64", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv2_2_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_2_1x1_increase'", ",", "in_channels", "=", "64", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2_2_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv2_2_1x1_increase/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv2_2_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_2_1x1_down'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "16", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv2_2_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_2_1x1_up'", ",", "in_channels", "=", "16", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv2_3_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_3_1x1_reduce'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2_3_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv2_3_1x1_reduce/bn'", ",", "num_features", "=", "64", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv2_3_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_3_3x3'", ",", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2_3_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv2_3_3x3/bn'", ",", "num_features", "=", "64", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv2_3_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_3_1x1_increase'", ",", "in_channels", "=", "64", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2_3_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv2_3_1x1_increase/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv2_3_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_3_1x1_down'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "16", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv2_3_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv2_3_1x1_up'", ",", "in_channels", "=", "16", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv3_1_1x1_proj", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_1_1x1_proj'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3_1_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_1_1x1_reduce'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3_1_1x1_proj_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv3_1_1x1_proj/bn'", ",", "num_features", "=", "512", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv3_1_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv3_1_1x1_reduce/bn'", ",", "num_features", "=", "128", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv3_1_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_1_3x3'", ",", "in_channels", "=", "128", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3_1_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv3_1_3x3/bn'", ",", "num_features", "=", "128", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv3_1_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_1_1x1_increase'", ",", "in_channels", "=", "128", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3_1_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv3_1_1x1_increase/bn'", ",", "num_features", "=", "512", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv3_1_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_1_1x1_down'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "32", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv3_1_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_1_1x1_up'", ",", "in_channels", "=", "32", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv3_2_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_2_1x1_reduce'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3_2_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv3_2_1x1_reduce/bn'", ",", "num_features", "=", "128", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv3_2_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_2_3x3'", ",", "in_channels", "=", "128", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3_2_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv3_2_3x3/bn'", ",", "num_features", "=", "128", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv3_2_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_2_1x1_increase'", ",", "in_channels", "=", "128", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3_2_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv3_2_1x1_increase/bn'", ",", "num_features", "=", "512", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv3_2_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_2_1x1_down'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "32", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv3_2_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_2_1x1_up'", ",", "in_channels", "=", "32", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv3_3_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_3_1x1_reduce'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3_3_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv3_3_1x1_reduce/bn'", ",", "num_features", "=", "128", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv3_3_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_3_3x3'", ",", "in_channels", "=", "128", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3_3_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv3_3_3x3/bn'", ",", "num_features", "=", "128", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv3_3_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_3_1x1_increase'", ",", "in_channels", "=", "128", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3_3_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv3_3_1x1_increase/bn'", ",", "num_features", "=", "512", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv3_3_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_3_1x1_down'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "32", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv3_3_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_3_1x1_up'", ",", "in_channels", "=", "32", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv3_4_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_4_1x1_reduce'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3_4_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv3_4_1x1_reduce/bn'", ",", "num_features", "=", "128", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv3_4_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_4_3x3'", ",", "in_channels", "=", "128", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3_4_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv3_4_3x3/bn'", ",", "num_features", "=", "128", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv3_4_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_4_1x1_increase'", ",", "in_channels", "=", "128", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3_4_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv3_4_1x1_increase/bn'", ",", "num_features", "=", "512", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv3_4_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_4_1x1_down'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "32", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv3_4_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv3_4_1x1_up'", ",", "in_channels", "=", "32", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv4_1_1x1_proj", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_1_1x1_proj'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_1_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_1_1x1_reduce'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_1_1x1_proj_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_1_1x1_proj/bn'", ",", "num_features", "=", "1024", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_1_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_1_1x1_reduce/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_1_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_1_3x3'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_1_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_1_3x3/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_1_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_1_1x1_increase'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_1_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_1_1x1_increase/bn'", ",", "num_features", "=", "1024", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_1_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_1_1x1_down'", ",", "in_channels", "=", "1024", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv4_1_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_1_1x1_up'", ",", "in_channels", "=", "64", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv4_2_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_2_1x1_reduce'", ",", "in_channels", "=", "1024", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_2_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_2_1x1_reduce/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_2_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_2_3x3'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_2_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_2_3x3/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_2_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_2_1x1_increase'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_2_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_2_1x1_increase/bn'", ",", "num_features", "=", "1024", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_2_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_2_1x1_down'", ",", "in_channels", "=", "1024", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv4_2_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_2_1x1_up'", ",", "in_channels", "=", "64", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv4_3_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_3_1x1_reduce'", ",", "in_channels", "=", "1024", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_3_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_3_1x1_reduce/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_3_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_3_3x3'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_3_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_3_3x3/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_3_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_3_1x1_increase'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_3_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_3_1x1_increase/bn'", ",", "num_features", "=", "1024", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_3_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_3_1x1_down'", ",", "in_channels", "=", "1024", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv4_3_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_3_1x1_up'", ",", "in_channels", "=", "64", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv4_4_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_4_1x1_reduce'", ",", "in_channels", "=", "1024", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_4_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_4_1x1_reduce/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_4_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_4_3x3'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_4_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_4_3x3/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_4_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_4_1x1_increase'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_4_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_4_1x1_increase/bn'", ",", "num_features", "=", "1024", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_4_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_4_1x1_down'", ",", "in_channels", "=", "1024", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv4_4_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_4_1x1_up'", ",", "in_channels", "=", "64", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv4_5_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_5_1x1_reduce'", ",", "in_channels", "=", "1024", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_5_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_5_1x1_reduce/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_5_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_5_3x3'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_5_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_5_3x3/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_5_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_5_1x1_increase'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_5_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_5_1x1_increase/bn'", ",", "num_features", "=", "1024", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_5_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_5_1x1_down'", ",", "in_channels", "=", "1024", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv4_5_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_5_1x1_up'", ",", "in_channels", "=", "64", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv4_6_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_6_1x1_reduce'", ",", "in_channels", "=", "1024", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_6_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_6_1x1_reduce/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_6_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_6_3x3'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_6_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_6_3x3/bn'", ",", "num_features", "=", "256", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_6_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_6_1x1_increase'", ",", "in_channels", "=", "256", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4_6_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv4_6_1x1_increase/bn'", ",", "num_features", "=", "1024", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv4_6_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_6_1x1_down'", ",", "in_channels", "=", "1024", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv4_6_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv4_6_1x1_up'", ",", "in_channels", "=", "64", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv5_1_1x1_proj", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_1_1x1_proj'", ",", "in_channels", "=", "1024", ",", "out_channels", "=", "2048", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv5_1_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_1_1x1_reduce'", ",", "in_channels", "=", "1024", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv5_1_1x1_proj_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv5_1_1x1_proj/bn'", ",", "num_features", "=", "2048", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv5_1_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv5_1_1x1_reduce/bn'", ",", "num_features", "=", "512", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv5_1_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_1_3x3'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv5_1_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv5_1_3x3/bn'", ",", "num_features", "=", "512", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv5_1_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_1_1x1_increase'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "2048", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv5_1_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv5_1_1x1_increase/bn'", ",", "num_features", "=", "2048", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv5_1_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_1_1x1_down'", ",", "in_channels", "=", "2048", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv5_1_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_1_1x1_up'", ",", "in_channels", "=", "128", ",", "out_channels", "=", "2048", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv5_2_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_2_1x1_reduce'", ",", "in_channels", "=", "2048", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv5_2_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv5_2_1x1_reduce/bn'", ",", "num_features", "=", "512", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv5_2_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_2_3x3'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv5_2_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv5_2_3x3/bn'", ",", "num_features", "=", "512", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv5_2_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_2_1x1_increase'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "2048", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv5_2_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv5_2_1x1_increase/bn'", ",", "num_features", "=", "2048", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv5_2_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_2_1x1_down'", ",", "in_channels", "=", "2048", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv5_2_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_2_1x1_up'", ",", "in_channels", "=", "128", ",", "out_channels", "=", "2048", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv5_3_1x1_reduce", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_3_1x1_reduce'", ",", "in_channels", "=", "2048", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv5_3_1x1_reduce_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv5_3_1x1_reduce/bn'", ",", "num_features", "=", "512", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv5_3_3x3", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_3_3x3'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv5_3_3x3_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv5_3_3x3/bn'", ",", "num_features", "=", "512", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv5_3_1x1_increase", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_3_1x1_increase'", ",", "in_channels", "=", "512", ",", "out_channels", "=", "2048", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv5_3_1x1_increase_bn", "=", "self", ".", "__batch_normalization", "(", "2", ",", "'conv5_3_1x1_increase/bn'", ",", "num_features", "=", "2048", ",", "eps", "=", "9.99999974738e-06", ",", "momentum", "=", "0.0", ")", "\n", "self", ".", "conv5_3_1x1_down", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_3_1x1_down'", ",", "in_channels", "=", "2048", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv5_3_1x1_up", "=", "self", ".", "__conv", "(", "2", ",", "name", "=", "'conv5_3_1x1_up'", ",", "in_channels", "=", "128", ",", "out_channels", "=", "2048", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "classifier_1", "=", "self", ".", "__dense", "(", "name", "=", "'classifier_1'", ",", "in_features", "=", "2048", ",", "out_features", "=", "8631", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.forward": [[167, 458], ["torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv1_7x7_s2", "MainModel.KitModel.conv1_7x7_s2_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "MainModel.KitModel.conv2_1_1x1_reduce", "MainModel.KitModel.conv2_1_1x1_proj", "MainModel.KitModel.conv2_1_1x1_reduce_bn", "MainModel.KitModel.conv2_1_1x1_proj_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv2_1_3x3", "MainModel.KitModel.conv2_1_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv2_1_1x1_increase", "MainModel.KitModel.conv2_1_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv2_1_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv2_1_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv2_2_1x1_reduce", "MainModel.KitModel.conv2_2_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv2_2_3x3", "MainModel.KitModel.conv2_2_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv2_2_1x1_increase", "MainModel.KitModel.conv2_2_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv2_2_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv2_2_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv2_3_1x1_reduce", "MainModel.KitModel.conv2_3_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv2_3_3x3", "MainModel.KitModel.conv2_3_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv2_3_1x1_increase", "MainModel.KitModel.conv2_3_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv2_3_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv2_3_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv3_1_1x1_proj", "MainModel.KitModel.conv3_1_1x1_reduce", "MainModel.KitModel.conv3_1_1x1_proj_bn", "MainModel.KitModel.conv3_1_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv3_1_3x3", "MainModel.KitModel.conv3_1_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv3_1_1x1_increase", "MainModel.KitModel.conv3_1_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv3_1_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv3_1_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv3_2_1x1_reduce", "MainModel.KitModel.conv3_2_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv3_2_3x3", "MainModel.KitModel.conv3_2_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv3_2_1x1_increase", "MainModel.KitModel.conv3_2_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv3_2_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv3_2_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv3_3_1x1_reduce", "MainModel.KitModel.conv3_3_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv3_3_3x3", "MainModel.KitModel.conv3_3_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv3_3_1x1_increase", "MainModel.KitModel.conv3_3_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv3_3_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv3_3_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv3_4_1x1_reduce", "MainModel.KitModel.conv3_4_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv3_4_3x3", "MainModel.KitModel.conv3_4_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv3_4_1x1_increase", "MainModel.KitModel.conv3_4_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv3_4_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv3_4_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_1_1x1_proj", "MainModel.KitModel.conv4_1_1x1_reduce", "MainModel.KitModel.conv4_1_1x1_proj_bn", "MainModel.KitModel.conv4_1_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv4_1_3x3", "MainModel.KitModel.conv4_1_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_1_1x1_increase", "MainModel.KitModel.conv4_1_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv4_1_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_1_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_2_1x1_reduce", "MainModel.KitModel.conv4_2_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv4_2_3x3", "MainModel.KitModel.conv4_2_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_2_1x1_increase", "MainModel.KitModel.conv4_2_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv4_2_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_2_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_3_1x1_reduce", "MainModel.KitModel.conv4_3_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv4_3_3x3", "MainModel.KitModel.conv4_3_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_3_1x1_increase", "MainModel.KitModel.conv4_3_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv4_3_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_3_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_4_1x1_reduce", "MainModel.KitModel.conv4_4_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv4_4_3x3", "MainModel.KitModel.conv4_4_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_4_1x1_increase", "MainModel.KitModel.conv4_4_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv4_4_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_4_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_5_1x1_reduce", "MainModel.KitModel.conv4_5_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv4_5_3x3", "MainModel.KitModel.conv4_5_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_5_1x1_increase", "MainModel.KitModel.conv4_5_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv4_5_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_5_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_6_1x1_reduce", "MainModel.KitModel.conv4_6_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv4_6_3x3", "MainModel.KitModel.conv4_6_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_6_1x1_increase", "MainModel.KitModel.conv4_6_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv4_6_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv4_6_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv5_1_1x1_proj", "MainModel.KitModel.conv5_1_1x1_reduce", "MainModel.KitModel.conv5_1_1x1_proj_bn", "MainModel.KitModel.conv5_1_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv5_1_3x3", "MainModel.KitModel.conv5_1_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv5_1_1x1_increase", "MainModel.KitModel.conv5_1_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv5_1_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv5_1_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv5_2_1x1_reduce", "MainModel.KitModel.conv5_2_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv5_2_3x3", "MainModel.KitModel.conv5_2_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv5_2_1x1_increase", "MainModel.KitModel.conv5_2_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv5_2_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv5_2_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv5_3_1x1_reduce", "MainModel.KitModel.conv5_3_1x1_reduce_bn", "torch.relu", "torch.relu", "torch.relu", "torch.pad", "torch.pad", "torch.pad", "MainModel.KitModel.conv5_3_3x3", "MainModel.KitModel.conv5_3_3x3_bn", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv5_3_1x1_increase", "MainModel.KitModel.conv5_3_1x1_increase_bn", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MainModel.KitModel.conv5_3_1x1_down", "torch.relu", "torch.relu", "torch.relu", "MainModel.KitModel.conv5_3_1x1_up", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.relu", "torch.relu", "torch.relu", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d.view", "MainModel.KitModel.classifier_1", "torch.avg_pool2d.size", "float"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "conv1_7x7_s2_pad", "=", "F", ".", "pad", "(", "x", ",", "(", "3", ",", "3", ",", "3", ",", "3", ")", ")", "\n", "conv1_7x7_s2", "=", "self", ".", "conv1_7x7_s2", "(", "conv1_7x7_s2_pad", ")", "\n", "conv1_7x7_s2_bn", "=", "self", ".", "conv1_7x7_s2_bn", "(", "conv1_7x7_s2", ")", "\n", "conv1_relu_7x7_s2", "=", "F", ".", "relu", "(", "conv1_7x7_s2_bn", ")", "\n", "pool1_3x3_s2_pad", "=", "F", ".", "pad", "(", "conv1_relu_7x7_s2", ",", "(", "0", ",", "1", ",", "0", ",", "1", ")", ",", "value", "=", "float", "(", "'-inf'", ")", ")", "\n", "pool1_3x3_s2", "=", "F", ".", "max_pool2d", "(", "pool1_3x3_s2_pad", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "0", ",", "ceil_mode", "=", "False", ")", "\n", "conv2_1_1x1_reduce", "=", "self", ".", "conv2_1_1x1_reduce", "(", "pool1_3x3_s2", ")", "\n", "conv2_1_1x1_proj", "=", "self", ".", "conv2_1_1x1_proj", "(", "pool1_3x3_s2", ")", "\n", "conv2_1_1x1_reduce_bn", "=", "self", ".", "conv2_1_1x1_reduce_bn", "(", "conv2_1_1x1_reduce", ")", "\n", "conv2_1_1x1_proj_bn", "=", "self", ".", "conv2_1_1x1_proj_bn", "(", "conv2_1_1x1_proj", ")", "\n", "conv2_1_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv2_1_1x1_reduce_bn", ")", "\n", "conv2_1_3x3_pad", "=", "F", ".", "pad", "(", "conv2_1_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv2_1_3x3", "=", "self", ".", "conv2_1_3x3", "(", "conv2_1_3x3_pad", ")", "\n", "conv2_1_3x3_bn", "=", "self", ".", "conv2_1_3x3_bn", "(", "conv2_1_3x3", ")", "\n", "conv2_1_3x3_relu", "=", "F", ".", "relu", "(", "conv2_1_3x3_bn", ")", "\n", "conv2_1_1x1_increase", "=", "self", ".", "conv2_1_1x1_increase", "(", "conv2_1_3x3_relu", ")", "\n", "conv2_1_1x1_increase_bn", "=", "self", ".", "conv2_1_1x1_increase_bn", "(", "conv2_1_1x1_increase", ")", "\n", "conv2_1_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv2_1_1x1_increase_bn", ",", "kernel_size", "=", "(", "56", ",", "56", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv2_1_1x1_down", "=", "self", ".", "conv2_1_1x1_down", "(", "conv2_1_global_pool", ")", "\n", "conv2_1_1x1_down_relu", "=", "F", ".", "relu", "(", "conv2_1_1x1_down", ")", "\n", "conv2_1_1x1_up", "=", "self", ".", "conv2_1_1x1_up", "(", "conv2_1_1x1_down_relu", ")", "\n", "conv2_1_prob", "=", "F", ".", "sigmoid", "(", "conv2_1_1x1_up", ")", "\n", "conv2_1_1x1_increase_bn_scale", "=", "conv2_1_prob", "*", "conv2_1_1x1_increase_bn", "\n", "conv2_1", "=", "conv2_1_1x1_increase_bn_scale", "+", "conv2_1_1x1_proj_bn", "\n", "conv2_1_relu", "=", "F", ".", "relu", "(", "conv2_1", ")", "\n", "conv2_2_1x1_reduce", "=", "self", ".", "conv2_2_1x1_reduce", "(", "conv2_1_relu", ")", "\n", "conv2_2_1x1_reduce_bn", "=", "self", ".", "conv2_2_1x1_reduce_bn", "(", "conv2_2_1x1_reduce", ")", "\n", "conv2_2_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv2_2_1x1_reduce_bn", ")", "\n", "conv2_2_3x3_pad", "=", "F", ".", "pad", "(", "conv2_2_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv2_2_3x3", "=", "self", ".", "conv2_2_3x3", "(", "conv2_2_3x3_pad", ")", "\n", "conv2_2_3x3_bn", "=", "self", ".", "conv2_2_3x3_bn", "(", "conv2_2_3x3", ")", "\n", "conv2_2_3x3_relu", "=", "F", ".", "relu", "(", "conv2_2_3x3_bn", ")", "\n", "conv2_2_1x1_increase", "=", "self", ".", "conv2_2_1x1_increase", "(", "conv2_2_3x3_relu", ")", "\n", "conv2_2_1x1_increase_bn", "=", "self", ".", "conv2_2_1x1_increase_bn", "(", "conv2_2_1x1_increase", ")", "\n", "conv2_2_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv2_2_1x1_increase_bn", ",", "kernel_size", "=", "(", "56", ",", "56", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv2_2_1x1_down", "=", "self", ".", "conv2_2_1x1_down", "(", "conv2_2_global_pool", ")", "\n", "conv2_2_1x1_down_relu", "=", "F", ".", "relu", "(", "conv2_2_1x1_down", ")", "\n", "conv2_2_1x1_up", "=", "self", ".", "conv2_2_1x1_up", "(", "conv2_2_1x1_down_relu", ")", "\n", "conv2_2_prob", "=", "F", ".", "sigmoid", "(", "conv2_2_1x1_up", ")", "\n", "conv2_2_1x1_increase_bn_scale", "=", "conv2_2_prob", "*", "conv2_2_1x1_increase_bn", "\n", "conv2_2", "=", "conv2_2_1x1_increase_bn_scale", "+", "conv2_1_relu", "\n", "conv2_2_relu", "=", "F", ".", "relu", "(", "conv2_2", ")", "\n", "conv2_3_1x1_reduce", "=", "self", ".", "conv2_3_1x1_reduce", "(", "conv2_2_relu", ")", "\n", "conv2_3_1x1_reduce_bn", "=", "self", ".", "conv2_3_1x1_reduce_bn", "(", "conv2_3_1x1_reduce", ")", "\n", "conv2_3_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv2_3_1x1_reduce_bn", ")", "\n", "conv2_3_3x3_pad", "=", "F", ".", "pad", "(", "conv2_3_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv2_3_3x3", "=", "self", ".", "conv2_3_3x3", "(", "conv2_3_3x3_pad", ")", "\n", "conv2_3_3x3_bn", "=", "self", ".", "conv2_3_3x3_bn", "(", "conv2_3_3x3", ")", "\n", "conv2_3_3x3_relu", "=", "F", ".", "relu", "(", "conv2_3_3x3_bn", ")", "\n", "conv2_3_1x1_increase", "=", "self", ".", "conv2_3_1x1_increase", "(", "conv2_3_3x3_relu", ")", "\n", "conv2_3_1x1_increase_bn", "=", "self", ".", "conv2_3_1x1_increase_bn", "(", "conv2_3_1x1_increase", ")", "\n", "conv2_3_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv2_3_1x1_increase_bn", ",", "kernel_size", "=", "(", "56", ",", "56", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv2_3_1x1_down", "=", "self", ".", "conv2_3_1x1_down", "(", "conv2_3_global_pool", ")", "\n", "conv2_3_1x1_down_relu", "=", "F", ".", "relu", "(", "conv2_3_1x1_down", ")", "\n", "conv2_3_1x1_up", "=", "self", ".", "conv2_3_1x1_up", "(", "conv2_3_1x1_down_relu", ")", "\n", "conv2_3_prob", "=", "F", ".", "sigmoid", "(", "conv2_3_1x1_up", ")", "\n", "conv2_3_1x1_increase_bn_scale", "=", "conv2_3_prob", "*", "conv2_3_1x1_increase_bn", "\n", "conv2_3", "=", "conv2_3_1x1_increase_bn_scale", "+", "conv2_2_relu", "\n", "conv2_3_relu", "=", "F", ".", "relu", "(", "conv2_3", ")", "\n", "conv3_1_1x1_proj", "=", "self", ".", "conv3_1_1x1_proj", "(", "conv2_3_relu", ")", "\n", "conv3_1_1x1_reduce", "=", "self", ".", "conv3_1_1x1_reduce", "(", "conv2_3_relu", ")", "\n", "conv3_1_1x1_proj_bn", "=", "self", ".", "conv3_1_1x1_proj_bn", "(", "conv3_1_1x1_proj", ")", "\n", "conv3_1_1x1_reduce_bn", "=", "self", ".", "conv3_1_1x1_reduce_bn", "(", "conv3_1_1x1_reduce", ")", "\n", "conv3_1_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv3_1_1x1_reduce_bn", ")", "\n", "conv3_1_3x3_pad", "=", "F", ".", "pad", "(", "conv3_1_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv3_1_3x3", "=", "self", ".", "conv3_1_3x3", "(", "conv3_1_3x3_pad", ")", "\n", "conv3_1_3x3_bn", "=", "self", ".", "conv3_1_3x3_bn", "(", "conv3_1_3x3", ")", "\n", "conv3_1_3x3_relu", "=", "F", ".", "relu", "(", "conv3_1_3x3_bn", ")", "\n", "conv3_1_1x1_increase", "=", "self", ".", "conv3_1_1x1_increase", "(", "conv3_1_3x3_relu", ")", "\n", "conv3_1_1x1_increase_bn", "=", "self", ".", "conv3_1_1x1_increase_bn", "(", "conv3_1_1x1_increase", ")", "\n", "conv3_1_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv3_1_1x1_increase_bn", ",", "kernel_size", "=", "(", "28", ",", "28", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv3_1_1x1_down", "=", "self", ".", "conv3_1_1x1_down", "(", "conv3_1_global_pool", ")", "\n", "conv3_1_1x1_down_relu", "=", "F", ".", "relu", "(", "conv3_1_1x1_down", ")", "\n", "conv3_1_1x1_up", "=", "self", ".", "conv3_1_1x1_up", "(", "conv3_1_1x1_down_relu", ")", "\n", "conv3_1_prob", "=", "F", ".", "sigmoid", "(", "conv3_1_1x1_up", ")", "\n", "conv3_1_1x1_increase_bn_scale", "=", "conv3_1_prob", "*", "conv3_1_1x1_increase_bn", "\n", "conv3_1", "=", "conv3_1_1x1_increase_bn_scale", "+", "conv3_1_1x1_proj_bn", "\n", "conv3_1_relu", "=", "F", ".", "relu", "(", "conv3_1", ")", "\n", "conv3_2_1x1_reduce", "=", "self", ".", "conv3_2_1x1_reduce", "(", "conv3_1_relu", ")", "\n", "conv3_2_1x1_reduce_bn", "=", "self", ".", "conv3_2_1x1_reduce_bn", "(", "conv3_2_1x1_reduce", ")", "\n", "conv3_2_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv3_2_1x1_reduce_bn", ")", "\n", "conv3_2_3x3_pad", "=", "F", ".", "pad", "(", "conv3_2_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv3_2_3x3", "=", "self", ".", "conv3_2_3x3", "(", "conv3_2_3x3_pad", ")", "\n", "conv3_2_3x3_bn", "=", "self", ".", "conv3_2_3x3_bn", "(", "conv3_2_3x3", ")", "\n", "conv3_2_3x3_relu", "=", "F", ".", "relu", "(", "conv3_2_3x3_bn", ")", "\n", "conv3_2_1x1_increase", "=", "self", ".", "conv3_2_1x1_increase", "(", "conv3_2_3x3_relu", ")", "\n", "conv3_2_1x1_increase_bn", "=", "self", ".", "conv3_2_1x1_increase_bn", "(", "conv3_2_1x1_increase", ")", "\n", "conv3_2_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv3_2_1x1_increase_bn", ",", "kernel_size", "=", "(", "28", ",", "28", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv3_2_1x1_down", "=", "self", ".", "conv3_2_1x1_down", "(", "conv3_2_global_pool", ")", "\n", "conv3_2_1x1_down_relu", "=", "F", ".", "relu", "(", "conv3_2_1x1_down", ")", "\n", "conv3_2_1x1_up", "=", "self", ".", "conv3_2_1x1_up", "(", "conv3_2_1x1_down_relu", ")", "\n", "conv3_2_prob", "=", "F", ".", "sigmoid", "(", "conv3_2_1x1_up", ")", "\n", "conv3_2_1x1_increase_bn_scale", "=", "conv3_2_prob", "*", "conv3_2_1x1_increase_bn", "\n", "conv3_2", "=", "conv3_2_1x1_increase_bn_scale", "+", "conv3_1_relu", "\n", "conv3_2_relu", "=", "F", ".", "relu", "(", "conv3_2", ")", "\n", "conv3_3_1x1_reduce", "=", "self", ".", "conv3_3_1x1_reduce", "(", "conv3_2_relu", ")", "\n", "conv3_3_1x1_reduce_bn", "=", "self", ".", "conv3_3_1x1_reduce_bn", "(", "conv3_3_1x1_reduce", ")", "\n", "conv3_3_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv3_3_1x1_reduce_bn", ")", "\n", "conv3_3_3x3_pad", "=", "F", ".", "pad", "(", "conv3_3_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv3_3_3x3", "=", "self", ".", "conv3_3_3x3", "(", "conv3_3_3x3_pad", ")", "\n", "conv3_3_3x3_bn", "=", "self", ".", "conv3_3_3x3_bn", "(", "conv3_3_3x3", ")", "\n", "conv3_3_3x3_relu", "=", "F", ".", "relu", "(", "conv3_3_3x3_bn", ")", "\n", "conv3_3_1x1_increase", "=", "self", ".", "conv3_3_1x1_increase", "(", "conv3_3_3x3_relu", ")", "\n", "conv3_3_1x1_increase_bn", "=", "self", ".", "conv3_3_1x1_increase_bn", "(", "conv3_3_1x1_increase", ")", "\n", "conv3_3_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv3_3_1x1_increase_bn", ",", "kernel_size", "=", "(", "28", ",", "28", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv3_3_1x1_down", "=", "self", ".", "conv3_3_1x1_down", "(", "conv3_3_global_pool", ")", "\n", "conv3_3_1x1_down_relu", "=", "F", ".", "relu", "(", "conv3_3_1x1_down", ")", "\n", "conv3_3_1x1_up", "=", "self", ".", "conv3_3_1x1_up", "(", "conv3_3_1x1_down_relu", ")", "\n", "conv3_3_prob", "=", "F", ".", "sigmoid", "(", "conv3_3_1x1_up", ")", "\n", "conv3_3_1x1_increase_bn_scale", "=", "conv3_3_prob", "*", "conv3_3_1x1_increase_bn", "\n", "conv3_3", "=", "conv3_3_1x1_increase_bn_scale", "+", "conv3_2_relu", "\n", "conv3_3_relu", "=", "F", ".", "relu", "(", "conv3_3", ")", "\n", "conv3_4_1x1_reduce", "=", "self", ".", "conv3_4_1x1_reduce", "(", "conv3_3_relu", ")", "\n", "conv3_4_1x1_reduce_bn", "=", "self", ".", "conv3_4_1x1_reduce_bn", "(", "conv3_4_1x1_reduce", ")", "\n", "conv3_4_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv3_4_1x1_reduce_bn", ")", "\n", "conv3_4_3x3_pad", "=", "F", ".", "pad", "(", "conv3_4_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv3_4_3x3", "=", "self", ".", "conv3_4_3x3", "(", "conv3_4_3x3_pad", ")", "\n", "conv3_4_3x3_bn", "=", "self", ".", "conv3_4_3x3_bn", "(", "conv3_4_3x3", ")", "\n", "conv3_4_3x3_relu", "=", "F", ".", "relu", "(", "conv3_4_3x3_bn", ")", "\n", "conv3_4_1x1_increase", "=", "self", ".", "conv3_4_1x1_increase", "(", "conv3_4_3x3_relu", ")", "\n", "conv3_4_1x1_increase_bn", "=", "self", ".", "conv3_4_1x1_increase_bn", "(", "conv3_4_1x1_increase", ")", "\n", "conv3_4_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv3_4_1x1_increase_bn", ",", "kernel_size", "=", "(", "28", ",", "28", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv3_4_1x1_down", "=", "self", ".", "conv3_4_1x1_down", "(", "conv3_4_global_pool", ")", "\n", "conv3_4_1x1_down_relu", "=", "F", ".", "relu", "(", "conv3_4_1x1_down", ")", "\n", "conv3_4_1x1_up", "=", "self", ".", "conv3_4_1x1_up", "(", "conv3_4_1x1_down_relu", ")", "\n", "conv3_4_prob", "=", "F", ".", "sigmoid", "(", "conv3_4_1x1_up", ")", "\n", "conv3_4_1x1_increase_bn_scale", "=", "conv3_4_prob", "*", "conv3_4_1x1_increase_bn", "\n", "conv3_4", "=", "conv3_4_1x1_increase_bn_scale", "+", "conv3_3_relu", "\n", "conv3_4_relu", "=", "F", ".", "relu", "(", "conv3_4", ")", "\n", "conv4_1_1x1_proj", "=", "self", ".", "conv4_1_1x1_proj", "(", "conv3_4_relu", ")", "\n", "conv4_1_1x1_reduce", "=", "self", ".", "conv4_1_1x1_reduce", "(", "conv3_4_relu", ")", "\n", "conv4_1_1x1_proj_bn", "=", "self", ".", "conv4_1_1x1_proj_bn", "(", "conv4_1_1x1_proj", ")", "\n", "conv4_1_1x1_reduce_bn", "=", "self", ".", "conv4_1_1x1_reduce_bn", "(", "conv4_1_1x1_reduce", ")", "\n", "conv4_1_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv4_1_1x1_reduce_bn", ")", "\n", "conv4_1_3x3_pad", "=", "F", ".", "pad", "(", "conv4_1_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv4_1_3x3", "=", "self", ".", "conv4_1_3x3", "(", "conv4_1_3x3_pad", ")", "\n", "conv4_1_3x3_bn", "=", "self", ".", "conv4_1_3x3_bn", "(", "conv4_1_3x3", ")", "\n", "conv4_1_3x3_relu", "=", "F", ".", "relu", "(", "conv4_1_3x3_bn", ")", "\n", "conv4_1_1x1_increase", "=", "self", ".", "conv4_1_1x1_increase", "(", "conv4_1_3x3_relu", ")", "\n", "conv4_1_1x1_increase_bn", "=", "self", ".", "conv4_1_1x1_increase_bn", "(", "conv4_1_1x1_increase", ")", "\n", "conv4_1_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv4_1_1x1_increase_bn", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv4_1_1x1_down", "=", "self", ".", "conv4_1_1x1_down", "(", "conv4_1_global_pool", ")", "\n", "conv4_1_1x1_down_relu", "=", "F", ".", "relu", "(", "conv4_1_1x1_down", ")", "\n", "conv4_1_1x1_up", "=", "self", ".", "conv4_1_1x1_up", "(", "conv4_1_1x1_down_relu", ")", "\n", "conv4_1_prob", "=", "F", ".", "sigmoid", "(", "conv4_1_1x1_up", ")", "\n", "conv4_1_1x1_increase_bn_scale", "=", "conv4_1_prob", "*", "conv4_1_1x1_increase_bn", "\n", "conv4_1", "=", "conv4_1_1x1_increase_bn_scale", "+", "conv4_1_1x1_proj_bn", "\n", "conv4_1_relu", "=", "F", ".", "relu", "(", "conv4_1", ")", "\n", "conv4_2_1x1_reduce", "=", "self", ".", "conv4_2_1x1_reduce", "(", "conv4_1_relu", ")", "\n", "conv4_2_1x1_reduce_bn", "=", "self", ".", "conv4_2_1x1_reduce_bn", "(", "conv4_2_1x1_reduce", ")", "\n", "conv4_2_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv4_2_1x1_reduce_bn", ")", "\n", "conv4_2_3x3_pad", "=", "F", ".", "pad", "(", "conv4_2_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv4_2_3x3", "=", "self", ".", "conv4_2_3x3", "(", "conv4_2_3x3_pad", ")", "\n", "conv4_2_3x3_bn", "=", "self", ".", "conv4_2_3x3_bn", "(", "conv4_2_3x3", ")", "\n", "conv4_2_3x3_relu", "=", "F", ".", "relu", "(", "conv4_2_3x3_bn", ")", "\n", "conv4_2_1x1_increase", "=", "self", ".", "conv4_2_1x1_increase", "(", "conv4_2_3x3_relu", ")", "\n", "conv4_2_1x1_increase_bn", "=", "self", ".", "conv4_2_1x1_increase_bn", "(", "conv4_2_1x1_increase", ")", "\n", "conv4_2_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv4_2_1x1_increase_bn", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv4_2_1x1_down", "=", "self", ".", "conv4_2_1x1_down", "(", "conv4_2_global_pool", ")", "\n", "conv4_2_1x1_down_relu", "=", "F", ".", "relu", "(", "conv4_2_1x1_down", ")", "\n", "conv4_2_1x1_up", "=", "self", ".", "conv4_2_1x1_up", "(", "conv4_2_1x1_down_relu", ")", "\n", "conv4_2_prob", "=", "F", ".", "sigmoid", "(", "conv4_2_1x1_up", ")", "\n", "conv4_2_1x1_increase_bn_scale", "=", "conv4_2_prob", "*", "conv4_2_1x1_increase_bn", "\n", "conv4_2", "=", "conv4_2_1x1_increase_bn_scale", "+", "conv4_1_relu", "\n", "conv4_2_relu", "=", "F", ".", "relu", "(", "conv4_2", ")", "\n", "conv4_3_1x1_reduce", "=", "self", ".", "conv4_3_1x1_reduce", "(", "conv4_2_relu", ")", "\n", "conv4_3_1x1_reduce_bn", "=", "self", ".", "conv4_3_1x1_reduce_bn", "(", "conv4_3_1x1_reduce", ")", "\n", "conv4_3_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv4_3_1x1_reduce_bn", ")", "\n", "conv4_3_3x3_pad", "=", "F", ".", "pad", "(", "conv4_3_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv4_3_3x3", "=", "self", ".", "conv4_3_3x3", "(", "conv4_3_3x3_pad", ")", "\n", "conv4_3_3x3_bn", "=", "self", ".", "conv4_3_3x3_bn", "(", "conv4_3_3x3", ")", "\n", "conv4_3_3x3_relu", "=", "F", ".", "relu", "(", "conv4_3_3x3_bn", ")", "\n", "conv4_3_1x1_increase", "=", "self", ".", "conv4_3_1x1_increase", "(", "conv4_3_3x3_relu", ")", "\n", "conv4_3_1x1_increase_bn", "=", "self", ".", "conv4_3_1x1_increase_bn", "(", "conv4_3_1x1_increase", ")", "\n", "conv4_3_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv4_3_1x1_increase_bn", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv4_3_1x1_down", "=", "self", ".", "conv4_3_1x1_down", "(", "conv4_3_global_pool", ")", "\n", "conv4_3_1x1_down_relu", "=", "F", ".", "relu", "(", "conv4_3_1x1_down", ")", "\n", "conv4_3_1x1_up", "=", "self", ".", "conv4_3_1x1_up", "(", "conv4_3_1x1_down_relu", ")", "\n", "conv4_3_prob", "=", "F", ".", "sigmoid", "(", "conv4_3_1x1_up", ")", "\n", "conv4_3_1x1_increase_bn_scale", "=", "conv4_3_prob", "*", "conv4_3_1x1_increase_bn", "\n", "conv4_3", "=", "conv4_3_1x1_increase_bn_scale", "+", "conv4_2_relu", "\n", "conv4_3_relu", "=", "F", ".", "relu", "(", "conv4_3", ")", "\n", "conv4_4_1x1_reduce", "=", "self", ".", "conv4_4_1x1_reduce", "(", "conv4_3_relu", ")", "\n", "conv4_4_1x1_reduce_bn", "=", "self", ".", "conv4_4_1x1_reduce_bn", "(", "conv4_4_1x1_reduce", ")", "\n", "conv4_4_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv4_4_1x1_reduce_bn", ")", "\n", "conv4_4_3x3_pad", "=", "F", ".", "pad", "(", "conv4_4_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv4_4_3x3", "=", "self", ".", "conv4_4_3x3", "(", "conv4_4_3x3_pad", ")", "\n", "conv4_4_3x3_bn", "=", "self", ".", "conv4_4_3x3_bn", "(", "conv4_4_3x3", ")", "\n", "conv4_4_3x3_relu", "=", "F", ".", "relu", "(", "conv4_4_3x3_bn", ")", "\n", "conv4_4_1x1_increase", "=", "self", ".", "conv4_4_1x1_increase", "(", "conv4_4_3x3_relu", ")", "\n", "conv4_4_1x1_increase_bn", "=", "self", ".", "conv4_4_1x1_increase_bn", "(", "conv4_4_1x1_increase", ")", "\n", "conv4_4_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv4_4_1x1_increase_bn", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv4_4_1x1_down", "=", "self", ".", "conv4_4_1x1_down", "(", "conv4_4_global_pool", ")", "\n", "conv4_4_1x1_down_relu", "=", "F", ".", "relu", "(", "conv4_4_1x1_down", ")", "\n", "conv4_4_1x1_up", "=", "self", ".", "conv4_4_1x1_up", "(", "conv4_4_1x1_down_relu", ")", "\n", "conv4_4_prob", "=", "F", ".", "sigmoid", "(", "conv4_4_1x1_up", ")", "\n", "conv4_4_1x1_increase_bn_scale", "=", "conv4_4_prob", "*", "conv4_4_1x1_increase_bn", "\n", "conv4_4", "=", "conv4_4_1x1_increase_bn_scale", "+", "conv4_3_relu", "\n", "conv4_4_relu", "=", "F", ".", "relu", "(", "conv4_4", ")", "\n", "conv4_5_1x1_reduce", "=", "self", ".", "conv4_5_1x1_reduce", "(", "conv4_4_relu", ")", "\n", "conv4_5_1x1_reduce_bn", "=", "self", ".", "conv4_5_1x1_reduce_bn", "(", "conv4_5_1x1_reduce", ")", "\n", "conv4_5_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv4_5_1x1_reduce_bn", ")", "\n", "conv4_5_3x3_pad", "=", "F", ".", "pad", "(", "conv4_5_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv4_5_3x3", "=", "self", ".", "conv4_5_3x3", "(", "conv4_5_3x3_pad", ")", "\n", "conv4_5_3x3_bn", "=", "self", ".", "conv4_5_3x3_bn", "(", "conv4_5_3x3", ")", "\n", "conv4_5_3x3_relu", "=", "F", ".", "relu", "(", "conv4_5_3x3_bn", ")", "\n", "conv4_5_1x1_increase", "=", "self", ".", "conv4_5_1x1_increase", "(", "conv4_5_3x3_relu", ")", "\n", "conv4_5_1x1_increase_bn", "=", "self", ".", "conv4_5_1x1_increase_bn", "(", "conv4_5_1x1_increase", ")", "\n", "conv4_5_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv4_5_1x1_increase_bn", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv4_5_1x1_down", "=", "self", ".", "conv4_5_1x1_down", "(", "conv4_5_global_pool", ")", "\n", "conv4_5_1x1_down_relu", "=", "F", ".", "relu", "(", "conv4_5_1x1_down", ")", "\n", "conv4_5_1x1_up", "=", "self", ".", "conv4_5_1x1_up", "(", "conv4_5_1x1_down_relu", ")", "\n", "conv4_5_prob", "=", "F", ".", "sigmoid", "(", "conv4_5_1x1_up", ")", "\n", "conv4_5_1x1_increase_bn_scale", "=", "conv4_5_prob", "*", "conv4_5_1x1_increase_bn", "\n", "conv4_5", "=", "conv4_5_1x1_increase_bn_scale", "+", "conv4_4_relu", "\n", "conv4_5_relu", "=", "F", ".", "relu", "(", "conv4_5", ")", "\n", "conv4_6_1x1_reduce", "=", "self", ".", "conv4_6_1x1_reduce", "(", "conv4_5_relu", ")", "\n", "conv4_6_1x1_reduce_bn", "=", "self", ".", "conv4_6_1x1_reduce_bn", "(", "conv4_6_1x1_reduce", ")", "\n", "conv4_6_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv4_6_1x1_reduce_bn", ")", "\n", "conv4_6_3x3_pad", "=", "F", ".", "pad", "(", "conv4_6_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv4_6_3x3", "=", "self", ".", "conv4_6_3x3", "(", "conv4_6_3x3_pad", ")", "\n", "conv4_6_3x3_bn", "=", "self", ".", "conv4_6_3x3_bn", "(", "conv4_6_3x3", ")", "\n", "conv4_6_3x3_relu", "=", "F", ".", "relu", "(", "conv4_6_3x3_bn", ")", "\n", "conv4_6_1x1_increase", "=", "self", ".", "conv4_6_1x1_increase", "(", "conv4_6_3x3_relu", ")", "\n", "conv4_6_1x1_increase_bn", "=", "self", ".", "conv4_6_1x1_increase_bn", "(", "conv4_6_1x1_increase", ")", "\n", "conv4_6_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv4_6_1x1_increase_bn", ",", "kernel_size", "=", "(", "14", ",", "14", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv4_6_1x1_down", "=", "self", ".", "conv4_6_1x1_down", "(", "conv4_6_global_pool", ")", "\n", "conv4_6_1x1_down_relu", "=", "F", ".", "relu", "(", "conv4_6_1x1_down", ")", "\n", "conv4_6_1x1_up", "=", "self", ".", "conv4_6_1x1_up", "(", "conv4_6_1x1_down_relu", ")", "\n", "conv4_6_prob", "=", "F", ".", "sigmoid", "(", "conv4_6_1x1_up", ")", "\n", "conv4_6_1x1_increase_bn_scale", "=", "conv4_6_prob", "*", "conv4_6_1x1_increase_bn", "\n", "conv4_6", "=", "conv4_6_1x1_increase_bn_scale", "+", "conv4_5_relu", "\n", "conv4_6_relu", "=", "F", ".", "relu", "(", "conv4_6", ")", "\n", "conv5_1_1x1_proj", "=", "self", ".", "conv5_1_1x1_proj", "(", "conv4_6_relu", ")", "\n", "conv5_1_1x1_reduce", "=", "self", ".", "conv5_1_1x1_reduce", "(", "conv4_6_relu", ")", "\n", "conv5_1_1x1_proj_bn", "=", "self", ".", "conv5_1_1x1_proj_bn", "(", "conv5_1_1x1_proj", ")", "\n", "conv5_1_1x1_reduce_bn", "=", "self", ".", "conv5_1_1x1_reduce_bn", "(", "conv5_1_1x1_reduce", ")", "\n", "conv5_1_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv5_1_1x1_reduce_bn", ")", "\n", "conv5_1_3x3_pad", "=", "F", ".", "pad", "(", "conv5_1_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv5_1_3x3", "=", "self", ".", "conv5_1_3x3", "(", "conv5_1_3x3_pad", ")", "\n", "conv5_1_3x3_bn", "=", "self", ".", "conv5_1_3x3_bn", "(", "conv5_1_3x3", ")", "\n", "conv5_1_3x3_relu", "=", "F", ".", "relu", "(", "conv5_1_3x3_bn", ")", "\n", "conv5_1_1x1_increase", "=", "self", ".", "conv5_1_1x1_increase", "(", "conv5_1_3x3_relu", ")", "\n", "conv5_1_1x1_increase_bn", "=", "self", ".", "conv5_1_1x1_increase_bn", "(", "conv5_1_1x1_increase", ")", "\n", "conv5_1_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv5_1_1x1_increase_bn", ",", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv5_1_1x1_down", "=", "self", ".", "conv5_1_1x1_down", "(", "conv5_1_global_pool", ")", "\n", "conv5_1_1x1_down_relu", "=", "F", ".", "relu", "(", "conv5_1_1x1_down", ")", "\n", "conv5_1_1x1_up", "=", "self", ".", "conv5_1_1x1_up", "(", "conv5_1_1x1_down_relu", ")", "\n", "conv5_1_prob", "=", "F", ".", "sigmoid", "(", "conv5_1_1x1_up", ")", "\n", "conv5_1_1x1_increase_bn_scale", "=", "conv5_1_prob", "*", "conv5_1_1x1_increase_bn", "\n", "conv5_1", "=", "conv5_1_1x1_increase_bn_scale", "+", "conv5_1_1x1_proj_bn", "\n", "conv5_1_relu", "=", "F", ".", "relu", "(", "conv5_1", ")", "\n", "conv5_2_1x1_reduce", "=", "self", ".", "conv5_2_1x1_reduce", "(", "conv5_1_relu", ")", "\n", "conv5_2_1x1_reduce_bn", "=", "self", ".", "conv5_2_1x1_reduce_bn", "(", "conv5_2_1x1_reduce", ")", "\n", "conv5_2_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv5_2_1x1_reduce_bn", ")", "\n", "conv5_2_3x3_pad", "=", "F", ".", "pad", "(", "conv5_2_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv5_2_3x3", "=", "self", ".", "conv5_2_3x3", "(", "conv5_2_3x3_pad", ")", "\n", "conv5_2_3x3_bn", "=", "self", ".", "conv5_2_3x3_bn", "(", "conv5_2_3x3", ")", "\n", "conv5_2_3x3_relu", "=", "F", ".", "relu", "(", "conv5_2_3x3_bn", ")", "\n", "conv5_2_1x1_increase", "=", "self", ".", "conv5_2_1x1_increase", "(", "conv5_2_3x3_relu", ")", "\n", "conv5_2_1x1_increase_bn", "=", "self", ".", "conv5_2_1x1_increase_bn", "(", "conv5_2_1x1_increase", ")", "\n", "conv5_2_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv5_2_1x1_increase_bn", ",", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv5_2_1x1_down", "=", "self", ".", "conv5_2_1x1_down", "(", "conv5_2_global_pool", ")", "\n", "conv5_2_1x1_down_relu", "=", "F", ".", "relu", "(", "conv5_2_1x1_down", ")", "\n", "conv5_2_1x1_up", "=", "self", ".", "conv5_2_1x1_up", "(", "conv5_2_1x1_down_relu", ")", "\n", "conv5_2_prob", "=", "F", ".", "sigmoid", "(", "conv5_2_1x1_up", ")", "\n", "conv5_2_1x1_increase_bn_scale", "=", "conv5_2_prob", "*", "conv5_2_1x1_increase_bn", "\n", "conv5_2", "=", "conv5_2_1x1_increase_bn_scale", "+", "conv5_1_relu", "\n", "conv5_2_relu", "=", "F", ".", "relu", "(", "conv5_2", ")", "\n", "conv5_3_1x1_reduce", "=", "self", ".", "conv5_3_1x1_reduce", "(", "conv5_2_relu", ")", "\n", "conv5_3_1x1_reduce_bn", "=", "self", ".", "conv5_3_1x1_reduce_bn", "(", "conv5_3_1x1_reduce", ")", "\n", "conv5_3_1x1_reduce_relu", "=", "F", ".", "relu", "(", "conv5_3_1x1_reduce_bn", ")", "\n", "conv5_3_3x3_pad", "=", "F", ".", "pad", "(", "conv5_3_1x1_reduce_relu", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "conv5_3_3x3", "=", "self", ".", "conv5_3_3x3", "(", "conv5_3_3x3_pad", ")", "\n", "conv5_3_3x3_bn", "=", "self", ".", "conv5_3_3x3_bn", "(", "conv5_3_3x3", ")", "\n", "conv5_3_3x3_relu", "=", "F", ".", "relu", "(", "conv5_3_3x3_bn", ")", "\n", "conv5_3_1x1_increase", "=", "self", ".", "conv5_3_1x1_increase", "(", "conv5_3_3x3_relu", ")", "\n", "conv5_3_1x1_increase_bn", "=", "self", ".", "conv5_3_1x1_increase_bn", "(", "conv5_3_1x1_increase", ")", "\n", "conv5_3_global_pool", "=", "F", ".", "avg_pool2d", "(", "conv5_3_1x1_increase_bn", ",", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "conv5_3_1x1_down", "=", "self", ".", "conv5_3_1x1_down", "(", "conv5_3_global_pool", ")", "\n", "conv5_3_1x1_down_relu", "=", "F", ".", "relu", "(", "conv5_3_1x1_down", ")", "\n", "conv5_3_1x1_up", "=", "self", ".", "conv5_3_1x1_up", "(", "conv5_3_1x1_down_relu", ")", "\n", "conv5_3_prob", "=", "F", ".", "sigmoid", "(", "conv5_3_1x1_up", ")", "\n", "conv5_3_1x1_increase_bn_scale", "=", "conv5_3_prob", "*", "conv5_3_1x1_increase_bn", "\n", "conv5_3", "=", "conv5_3_1x1_increase_bn_scale", "+", "conv5_2_relu", "\n", "conv5_3_relu", "=", "F", ".", "relu", "(", "conv5_3", ")", "\n", "pool5_7x7_s1", "=", "F", ".", "avg_pool2d", "(", "conv5_3_relu", ",", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", ")", ",", "ceil_mode", "=", "False", ")", "\n", "classifier_0", "=", "pool5_7x7_s1", ".", "view", "(", "pool5_7x7_s1", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "classifier_1", "=", "self", ".", "classifier_1", "(", "classifier_0", ")", "\n", "return", "classifier_0", ",", "classifier_1", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__batch_normalization": [[459, 479], ["[].copy_", "[].copy_", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "[].copy_", "torch.BatchNorm3d.weight.data.fill_", "[].copy_", "torch.BatchNorm3d.bias.data.fill_", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "NotImplementedError", "torch.BatchNorm3d.state_dict", "torch.BatchNorm3d.state_dict", "torch.BatchNorm3d.state_dict", "torch.BatchNorm3d.state_dict"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "__batch_normalization", "(", "dim", ",", "name", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "dim", "==", "1", ":", "layer", "=", "nn", ".", "BatchNorm1d", "(", "**", "kwargs", ")", "\n", "elif", "dim", "==", "2", ":", "layer", "=", "nn", ".", "BatchNorm2d", "(", "**", "kwargs", ")", "\n", "elif", "dim", "==", "3", ":", "layer", "=", "nn", ".", "BatchNorm3d", "(", "**", "kwargs", ")", "\n", "else", ":", "raise", "NotImplementedError", "(", ")", "\n", "\n", "if", "'scale'", "in", "__weights_dict", "[", "name", "]", ":", "\n", "            ", "layer", ".", "state_dict", "(", ")", "[", "'weight'", "]", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "__weights_dict", "[", "name", "]", "[", "'scale'", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "layer", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "\n", "", "if", "'bias'", "in", "__weights_dict", "[", "name", "]", ":", "\n", "            ", "layer", ".", "state_dict", "(", ")", "[", "'bias'", "]", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "__weights_dict", "[", "name", "]", "[", "'bias'", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "layer", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n", "", "layer", ".", "state_dict", "(", ")", "[", "'running_mean'", "]", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "__weights_dict", "[", "name", "]", "[", "'mean'", "]", ")", ")", "\n", "layer", ".", "state_dict", "(", ")", "[", "'running_var'", "]", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "__weights_dict", "[", "name", "]", "[", "'var'", "]", ")", ")", "\n", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__conv": [[480, 491], ["[].copy_", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "[].copy_", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "NotImplementedError", "torch.Conv3d.state_dict", "torch.Conv3d.state_dict"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "__conv", "(", "dim", ",", "name", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "dim", "==", "1", ":", "layer", "=", "nn", ".", "Conv1d", "(", "**", "kwargs", ")", "\n", "elif", "dim", "==", "2", ":", "layer", "=", "nn", ".", "Conv2d", "(", "**", "kwargs", ")", "\n", "elif", "dim", "==", "3", ":", "layer", "=", "nn", ".", "Conv3d", "(", "**", "kwargs", ")", "\n", "else", ":", "raise", "NotImplementedError", "(", ")", "\n", "\n", "layer", ".", "state_dict", "(", ")", "[", "'weight'", "]", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "__weights_dict", "[", "name", "]", "[", "'weights'", "]", ")", ")", "\n", "if", "'bias'", "in", "__weights_dict", "[", "name", "]", ":", "\n", "            ", "layer", ".", "state_dict", "(", ")", "[", "'bias'", "]", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "__weights_dict", "[", "name", "]", "[", "'bias'", "]", ")", ")", "\n", "", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.KitModel.__dense": [[492, 499], ["torch.Linear", "torch.Linear", "torch.Linear", "[].copy_", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "[].copy_", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.Linear.state_dict", "torch.Linear.state_dict"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "__dense", "(", "name", ",", "**", "kwargs", ")", ":", "\n", "        ", "layer", "=", "nn", ".", "Linear", "(", "**", "kwargs", ")", "\n", "layer", ".", "state_dict", "(", ")", "[", "'weight'", "]", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "__weights_dict", "[", "name", "]", "[", "'weights'", "]", ")", ")", "\n", "if", "'bias'", "in", "__weights_dict", "[", "name", "]", ":", "\n", "            ", "layer", ".", "state_dict", "(", ")", "[", "'bias'", "]", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "__weights_dict", "[", "name", "]", "[", "'bias'", "]", ")", ")", "\n", "", "return", "layer", "\n", "", "", ""]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.MainModel.load_weights": [[8, 18], ["numpy.load().item", "numpy.load().item", "numpy.load", "numpy.load"], "function", ["None"], ["def", "load_weights", "(", "weight_file", ")", ":", "\n", "    ", "if", "weight_file", "==", "None", ":", "\n", "        ", "return", "\n", "\n", "", "try", ":", "\n", "        ", "weights_dict", "=", "np", ".", "load", "(", "weight_file", ")", ".", "item", "(", ")", "\n", "", "except", ":", "\n", "        ", "weights_dict", "=", "np", ".", "load", "(", "weight_file", ",", "encoding", "=", "'bytes'", ")", ".", "item", "(", ")", "\n", "\n", "", "return", "weights_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.models.ModelLoader.__init__": [[12, 29], ["logging.getLogger", "models.ModelLoader.__load_base_model"], "methods", ["home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.models.ModelLoader.__load_base_model"], ["def", "__init__", "(", "self", ",", "model_base_path", ":", "str", "=", "None", ",", "num_classes", ":", "int", "=", "7", ")", ":", "\n", "        ", "\"\"\"Init the ModelLoader class.\n\n        Parameters\n        ----------\n        model_base_path : str\n            Path to base model for SeNet50\n        num_classes : int\n            Number of classes for the classification task\n        \n        \"\"\"", "\n", "self", ".", "model_base_path", "=", "model_base_path", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "\n", "# Load the base model", "\n", "self", ".", "model", "=", "self", ".", "__load_base_model", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.models.ModelLoader.__get_total_number_of_training_parameters": [[30, 40], ["sum", "p.numel", "models.ModelLoader.model.parameters"], "methods", ["None"], ["", "def", "__get_total_number_of_training_parameters", "(", "self", ")", "->", "int", ":", "\n", "        ", "\"\"\"Eval the numnber of model parameters to be trained.\n\n        Returns\n        ------\n        n_pars : int\n            Number of parameters to be trained\n\n        \"\"\"", "\n", "return", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "self", ".", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.models.ModelLoader.__load_base_model": [[41, 59], ["os.path.exists", "torch.load", "torch.load", "torch.load", "torch.load", "torch.Linear", "torch.Linear"], "methods", ["None"], ["", "def", "__load_base_model", "(", "self", ")", "->", "nn", ".", "Module", ":", "\n", "        ", "\"\"\"Load the base model and init the classifier layer with the correct number of output classes.\n\n        Returns\n        -------\n        model : nn.Module\n            The base model finetuned on the VGGFace2 dataset with a new classifier layer\n\n        \"\"\"", "\n", "assert", "exists", "(", "self", ".", "model_base_path", ")", ",", "f\"Base model checkpoint not found at: {self.model_base_path}\"", "\n", "\n", "# Load the base model", "\n", "model", "=", "torch", ".", "load", "(", "self", ".", "model_base_path", ")", "\n", "\n", "# Init the classifier with the correct number of classes", "\n", "model", ".", "classifier_1", "=", "nn", ".", "Linear", "(", "in_features", "=", "2048", ",", "out_features", "=", "self", ".", "num_classes", ",", "bias", "=", "True", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.models.ModelLoader.load_model_checkpoint": [[60, 86], ["os.path.exists", "torch.load", "torch.load", "torch.load", "torch.load", "models.ModelLoader.model.named_modules", "models.ModelLoader.logger.info", "p.data.copy_", "isinstance", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "models.ModelLoader.model.named_parameters", "[].numpy", "models.ModelLoader.__get_total_number_of_training_parameters"], "methods", ["home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.models.ModelLoader.__get_total_number_of_training_parameters"], ["", "def", "load_model_checkpoint", "(", "self", ",", "model_checkpoint", ")", "->", "None", ":", "\n", "        ", "\"\"\"Load model checkpoint.\n\n        Parameters\n        ----------\n        model_checkpoint : str\n            Path to model checkpoint\n    \n        \"\"\"", "\n", "assert", "exists", "(", "model_checkpoint", ")", ",", "f\"Model checkpoint not found at: {model_checkpoint}\"", "\n", "\n", "ckp", "=", "torch", ".", "load", "(", "model_checkpoint", ",", "map_location", "=", "'cpu'", ")", "\n", "[", "p", ".", "data", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "ckp", "[", "'model_state_dict'", "]", "[", "n", "]", ".", "numpy", "(", ")", ")", ")", "for", "n", ",", "p", "in", "self", ".", "model", ".", "named_parameters", "(", ")", "]", "\n", "\n", "for", "n", ",", "m", "in", "self", ".", "model", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "momentum", "=", "0.1", "\n", "m", ".", "running_var", "=", "ckp", "[", "'model_state_dict'", "]", "[", "n", "+", "'.running_var'", "]", "\n", "m", ".", "running_mean", "=", "ckp", "[", "'model_state_dict'", "]", "[", "n", "+", "'.running_mean'", "]", "\n", "m", ".", "num_batches_tracked", "=", "ckp", "[", "'model_state_dict'", "]", "[", "n", "+", "'.num_batches_tracked'", "]", "\n", "\n", "", "", "b_acc", "=", "ckp", "[", "'best_acc'", "]", "\n", "\n", "# Print model infos", "\n", "self", ".", "logger", ".", "info", "(", "\n", "f'Loaded model checkpoint: {model_checkpoint}'", "\n", "f'\\n\\t\\t\\tAccuracy: {b_acc}'", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.models.ModelLoader.freeze_params": [[90, 98], ["models.ModelLoader.model.named_parameters"], "methods", ["None"], ["", "def", "freeze_params", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Freeze all layers of the model except the final classifier.\n\n        \"\"\"", "\n", "# Set to False the requires_grad flag for all layers", "\n", "for", "n", ",", "param", "in", "self", ".", "model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "'classifier_1.'", "not", "in", "n", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.models.ModelLoader.get_model": [[99, 109], ["None"], "methods", ["None"], ["", "", "", "def", "get_model", "(", "self", ")", "->", "nn", ".", "Module", ":", "\n", "        ", "\"\"\"Return the model\n        \n        Returns\n        -------\n        model : nn.Module\n            The model initialized so far\n\n        \"\"\"", "\n", "return", "self", ".", "model", "\n", "", "", ""]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.main_affwild2.main": [[22, 214], ["models.ModelLoader", "numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.is_available", "torch.cuda.is_available", "utils.create_experiment_folder", "logging.basicConfig", "tensorboardX.SummaryWriter", "models.ModelLoader.load_model_checkpoint", "models.ModelLoader.get_model", "datasets.AffWild2Dataset", "datasets.AffWild2Dataset.set_mode", "torch.utils.data.DataLoader", "datasets.AffWild2Dataset.get_training_classes_weights", "datasets.AffWild2Dataset", "datasets.AffWild2Dataset.set_mode", "torch.utils.data.DataLoader", "trainer.train", "pandas.DataFrame", "pd.DataFrame.to_csv", "os.path.join", "models.ModelLoader.freeze_params", "optim_kwargs.update", "optim_kwargs.update", "opt_fn", "opt_fn", "datasets.AffWild2Dataset", "datasets.AffWild2Dataset.set_mode", "torch.utils.data.DataLoader", "trainer.test", "model_checkpoint.append", "training_mode.append", "resolution.append", "accuracy.append", "f1_score.append", "challenge_score.append", "os.path.join", "utils.get_transforms", "os.path.join", "utils.get_transforms", "dict", "logging.FileHandler", "logging.StreamHandler", "exp_folder.split", "model_loader.get_model.classifier_1.parameters", "os.path.join", "utils.get_transforms", "models.ModelLoader.get_model", "[].split", "os.path.exists", "os.path.join", "torch.nn.Sequential().parameters", "torch.nn.Sequential().parameters", "model_loader.get_model.classifier_1.parameters", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "torch.nn.Sequential", "torch.nn.Sequential", "args.model_checkpoint.split", "list", "model_loader.get_model.children"], "function", ["home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.utils.create_experiment_folder", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.models.ModelLoader.load_model_checkpoint", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.models.ModelLoader.get_model", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.set_mode", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.BaseDataset.get_training_classes_weights", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.set_mode", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.trainer.train", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.models.ModelLoader.freeze_params", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.set_mode", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.trainer.test", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.utils.get_transforms", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.utils.get_transforms", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.utils.get_transforms", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.models.ModelLoader.get_model"], ["def", "main", "(", "args", ")", ":", "\n", "## Init seed ", "\n", "    ", "if", "args", ".", "seed", "!=", "-", "1", ":", "\n", "# cudnn.benchmark = True", "\n", "        ", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "\n", "# Set the device", "\n", "", "device", "=", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "\n", "if", "not", "args", ".", "test", ":", "\n", "# Create output folders", "\n", "        ", "output_main_folder", ",", "exp_folder", "=", "create_experiment_folder", "(", "args", "=", "args", ",", "dataset_name", "=", "'affwild2'", ")", "\n", "\n", "logging", ".", "basicConfig", "(", "\n", "level", "=", "logging", ".", "INFO", ",", "\n", "format", "=", "\"%(asctime)s | %(message)s\"", ",", "\n", "handlers", "=", "[", "\n", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "exp_folder", ",", "'training.log'", ")", ")", ",", "\n", "logging", ".", "StreamHandler", "(", ")", "\n", "]", ")", "\n", "# logger = logging.getLogger()", "\n", "\n", "# Init tensorboard writer", "\n", "tb_writer", "=", "SummaryWriter", "(", "join", "(", "output_main_folder", ",", "'tb_run'", ",", "exp_folder", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ")", ")", "\n", "\n", "## Load the model ", "\n", "", "model_loader", "=", "ModelLoader", "(", "\n", "model_base_path", "=", "args", ".", "model_base_path", ",", "\n", "num_classes", "=", "args", ".", "num_classes", ",", "\n", ")", "\n", "\n", "if", "args", ".", "model_checkpoint", "is", "not", "None", ":", "\n", "        ", "model_loader", ".", "load_model_checkpoint", "(", "args", ".", "model_checkpoint", ")", "\n", "\n", "#########################", "\n", "#### Train the model ####", "\n", "#########################", "\n", "", "if", "args", ".", "train", ":", "\n", "\n", "        ", "if", "args", ".", "train_mode", "==", "'transfer'", ":", "\n", "            ", "model_loader", ".", "freeze_params", "(", ")", "\n", "\n", "# Get the model", "\n", "", "model", "=", "model_loader", ".", "get_model", "(", ")", "\n", "\n", "## Init the optimizer", "\n", "optim_kwargs", "=", "{", "\n", "'weight_decay'", ":", "args", ".", "weight_decay", "\n", "}", "\n", "if", "args", ".", "optimizer", "==", "'sgd'", ":", "\n", "            ", "opt_fn", "=", "SGD", "\n", "optim_kwargs", ".", "update", "(", "{", "\n", "'momentum'", ":", "args", ".", "momentum", ",", "\n", "'nesterov'", ":", "args", ".", "nesterov", "\n", "}", ")", "\n", "", "else", ":", "\n", "            ", "opt_fn", "=", "Adam", "\n", "optim_kwargs", ".", "update", "(", "{", "\n", "'betas'", ":", "(", "0.9", ",", "0.999", ")", "\n", "}", ")", "\n", "\n", "", "if", "args", ".", "train_mode", "==", "'finetune'", ":", "\n", "# Train the entire model ", "\n", "            ", "optimizer", "=", "opt_fn", "(", "[", "\n", "{", "'params'", ":", "torch", ".", "nn", ".", "Sequential", "(", "*", "(", "list", "(", "model", ".", "children", "(", ")", ")", "[", ":", "-", "1", "]", ")", ")", ".", "parameters", "(", ")", ",", "'lr'", ":", "args", ".", "lr", "*", "0.01", "}", ",", "\n", "{", "'params'", ":", "model", ".", "classifier_1", ".", "parameters", "(", ")", "}", "\n", "]", ",", "\n", "lr", "=", "args", ".", "lr", ",", "\n", "**", "optim_kwargs", "\n", ")", "\n", "", "else", ":", "\n", "# ONLY train the classifier", "\n", "            ", "optimizer", "=", "opt_fn", "(", "params", "=", "model", ".", "classifier_1", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "**", "optim_kwargs", ")", "\n", "\n", "## Load the data", "\n", "", "tr_dataset", "=", "AffWild2Dataset", "(", "\n", "dataset_folder", "=", "args", ".", "dataset_folder", ",", "\n", "output_folder", "=", "join", "(", "args", ".", "dataset_folder", ",", "'database'", ")", ",", "\n", "multi_res", "=", "args", ".", "multi_res_training", ",", "\n", "valid_resolution", "=", "args", ".", "valid_resolution", "if", "args", ".", "multi_res_training", "else", "-", "1", ",", "\n", "transforms", "=", "get_transforms", "(", "mode", "=", "'train'", ")", "\n", ")", "\n", "\n", "tr_dataset", ".", "set_mode", "(", "train", "=", "True", ")", "\n", "train_loader", "=", "DataLoader", "(", "\n", "dataset", "=", "tr_dataset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "8", ",", "\n", "pin_memory", "=", "device", "==", "'cuda'", "\n", ")", "\n", "\n", "# Get classes weigths to weight the training loss to take care of the classes unbalance ", "\n", "# The call to this method must follow the one to the set_mode() for the training dataset", "\n", "# otherwise the weights are evaluated on the whole dataset and not on training images only", "\n", "training_classes_weights", "=", "tr_dataset", ".", "get_training_classes_weights", "(", ")", "\n", "\n", "vl_dataset", "=", "AffWild2Dataset", "(", "\n", "dataset_folder", "=", "args", ".", "dataset_folder", ",", "\n", "output_folder", "=", "join", "(", "args", ".", "dataset_folder", ",", "'database'", ")", ",", "\n", "multi_res", "=", "args", ".", "multi_res_training", ",", "\n", "valid_resolution", "=", "args", ".", "valid_resolution", "if", "args", ".", "multi_res_training", "else", "-", "1", ",", "\n", "test", "=", "True", ",", "# It simply disables some print statements", "\n", "transforms", "=", "get_transforms", "(", "mode", "=", "'valid'", ")", "\n", ")", "\n", "\n", "vl_dataset", ".", "set_mode", "(", "train", "=", "False", ")", "\n", "valid_loader", "=", "DataLoader", "(", "\n", "dataset", "=", "vl_dataset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "num_workers", "=", "8", ",", "\n", "pin_memory", "=", "device", "==", "'cuda'", "\n", ")", "\n", "\n", "## Start training", "\n", "train", "(", "\n", "model", "=", "model", ",", "\n", "loader", "=", "train_loader", ",", "\n", "valid_loader", "=", "valid_loader", ",", "\n", "optimizer", "=", "optimizer", ",", "\n", "training_classes_weights", "=", "training_classes_weights", ",", "\n", "step_size", "=", "args", ".", "step_size", ",", "\n", "epochs", "=", "args", ".", "epochs", ",", "\n", "train_iters", "=", "args", ".", "train_iters", ",", "\n", "batch_accumulation", "=", "args", ".", "batch_accumulation", ",", "\n", "tb_writer", "=", "tb_writer", ",", "\n", "log_freq", "=", "args", ".", "log_freq", ",", "\n", "output_folder_path", "=", "exp_folder", ",", "\n", "device", "=", "device", "\n", ")", "\n", "\n", "########################", "\n", "#### Test the model ####", "\n", "########################", "\n", "", "if", "args", ".", "test", ":", "\n", "\n", "        ", "model_checkpoint", "=", "[", "]", "\n", "training_mode", "=", "[", "]", "\n", "resolution", "=", "[", "]", "\n", "accuracy", "=", "[", "]", "\n", "f1_score", "=", "[", "]", "\n", "challenge_score", "=", "[", "]", "\n", "\n", "# -1 means that the test is performed on the images at the original reaolution ", "\n", "valid_res_list", "=", "[", "7", ",", "14", ",", "28", ",", "56", "]", "if", "args", ".", "multi_res_test", "else", "[", "-", "1", "]", "\n", "\n", "for", "valid_res", "in", "valid_res_list", ":", "\n", "\n", "## Load the data", "\n", "            ", "tt_dataset", "=", "AffWild2Dataset", "(", "\n", "dataset_folder", "=", "args", ".", "dataset_folder", ",", "\n", "output_folder", "=", "join", "(", "args", ".", "dataset_folder", ",", "'database'", ")", ",", "\n", "multi_res", "=", "valid_res", "!=", "-", "1", ",", "\n", "valid_resolution", "=", "valid_res", ",", "\n", "test", "=", "True", ",", "# It simply disables some print statements", "\n", "transforms", "=", "get_transforms", "(", "mode", "=", "'valid'", ")", "\n", ")", "\n", "\n", "tt_dataset", ".", "set_mode", "(", "train", "=", "False", ")", "\n", "test_loader", "=", "DataLoader", "(", "\n", "dataset", "=", "tt_dataset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "num_workers", "=", "8", ",", "\n", "pin_memory", "=", "device", "==", "'cuda'", "\n", ")", "\n", "\n", "## Start testing", "\n", "accuracy_", ",", "f1_score_", ",", "challenge_score_", "=", "test", "(", "model", "=", "model_loader", ".", "get_model", "(", ")", ",", "loader", "=", "test_loader", ",", "device", "=", "device", ")", "\n", "\n", "model_checkpoint", ".", "append", "(", "args", ".", "model_checkpoint", ")", "\n", "training_mode", ".", "append", "(", "args", ".", "model_checkpoint", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", ".", "split", "(", "'-'", ")", "[", "6", "]", ")", "\n", "resolution", ".", "append", "(", "valid_res", ")", "\n", "accuracy", ".", "append", "(", "accuracy_", ")", "\n", "f1_score", ".", "append", "(", "f1_score_", ")", "\n", "challenge_score", ".", "append", "(", "challenge_score_", ")", "\n", "\n", "", "df", "=", "pd", ".", "DataFrame", "(", "\n", "data", "=", "dict", "(", "\n", "model_checkpoint", "=", "np", ".", "asarray", "(", "model_checkpoint", ")", ",", "\n", "training_mode", "=", "np", ".", "asarray", "(", "training_mode", ")", ",", "\n", "resolution", "=", "np", ".", "asarray", "(", "resolution", ")", ",", "\n", "accuracy", "=", "np", ".", "asarray", "(", "accuracy", ")", ",", "\n", "f1_score", "=", "np", ".", "asarray", "(", "f1_score", ")", ",", "\n", "challenge_score", "=", "np", ".", "asarray", "(", "challenge_score", ")", "\n", ")", ",", "\n", "index", "=", "None", "\n", ")", "\n", "\n", "output_csv_path", "=", "'./test_results.csv'", "\n", "df", ".", "to_csv", "(", "output_csv_path", ",", "mode", "=", "'a'", ",", "header", "=", "not", "exists", "(", "output_csv_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.trainer.train": [[16, 156], ["logging.getLogger", "torch.optim.lr_scheduler.StepLR", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss.to", "model.to().train", "range", "model.zero_grad", "optimizer.zero_grad", "enumerate", "torch.from_numpy().float", "torch.from_numpy().float", "model.to", "model", "torch.nn.CrossEntropyLoss.", "criterion.backward", "criterion.item", "[].eq().sum().item", "x.to", "y.to", "optimizer.step", "optimizer.zero_grad", "trainer.validate", "torch.optim.lr_scheduler.StepLR.step", "logging.getLogger.info", "model.train", "logging.getLogger.info", "torch.from_numpy", "torch.from_numpy", "[].eq().sum", "tb_writer.add_scalar", "tb_writer.add_scalar", "os.path.join", "logging.getLogger.info", "torch.save", "torch.save", "tb_writer.add_scalar", "tb_writer.add_scalar", "[].eq", "len", "model.state_dict", "optimizer.state_dict", "len", "predictions.max"], "function", ["home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.trainer.train", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.trainer.validate", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.trainer.train"], ["def", "train", "(", "model", ":", "torch", ".", "nn", ".", "Module", ",", "loader", ":", "DataLoader", ",", "valid_loader", ":", "DataLoader", ",", "optimizer", ":", "torch", ".", "optim", ",", "training_classes_weights", ":", "np", ".", "array", ",", "step_size", ":", "int", ",", "epochs", ":", "int", ",", "train_iters", ":", "int", ",", "batch_accumulation", ":", "int", ",", "tb_writer", ":", "SummaryWriter", ",", "log_freq", ":", "int", ",", "output_folder_path", ":", "str", ",", "device", ":", "str", ")", "->", "None", ":", "\n", "    ", "\"\"\"Train the model for a given number of epochs. \n    \n    Parameters\n    ----------\n    model : torch.nn.Module\n        The model to be trained\n    loader : DataLoader\n        Train data loader\n    valid_loader : DataLoader\n        Data loader for validation\n    optimizer : torch.optim\n        Optimizer\n    training_classes_weights : np.array\n        Numpy array containing the weigths for each class in the dataset\n    step_size : int\n        Number of iterations/epochs after which the scheduler drops the learning rate\n    epochs : int\n        Number of training epochs\n    train_iters : int\n        Number of training iterations before to run a validation step\n    batch_accumulation : int\n        NUmber of accumulating batch iterations\n    tb_writer : SummaryWriter\n        Writer on tensorboard\n    log_freq : int\n        Number of training iterations after which print training stats\n    output_folder_path : str\n        Path to output folder to save model checkpoints\n    device : str\n        Device on which to run the computations\n    \n    Returns\n    ------\n    model : torch.nn.Model\n        Trained model\n\n    \"\"\"", "\n", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "\n", "scheduler", "=", "StepLR", "(", "optimizer", "=", "optimizer", ",", "step_size", "=", "step_size", ",", "gamma", "=", "0.1", ")", "\n", "\n", "criterion", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", "weight", "=", "torch", ".", "from_numpy", "(", "training_classes_weights", ")", ".", "float", "(", ")", ")", "\n", "criterion", ".", "to", "(", "device", ")", "\n", "\n", "model", ".", "to", "(", "device", ")", ".", "train", "(", ")", "\n", "\n", "it_t", "=", "0", "\n", "it_v", "=", "0", "\n", "\n", "# Validation statistics", "\n", "best_val_acc", "=", "0.", "\n", "\n", "for", "epoch", "in", "range", "(", "epochs", ")", ":", "\n", "# Training statistics", "\n", "        ", "tr_loss", "=", "0.", "\n", "correct", "=", "0", "\n", "n", "=", "0", "\n", "\n", "model", ".", "zero_grad", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "ba", "=", "1", "\n", "\n", "for", "idx", ",", "(", "x", ",", "y", ",", "_", ")", "in", "enumerate", "(", "loader", ",", "1", ")", ":", "\n", "            ", "n", "+=", "x", ".", "shape", "[", "0", "]", "\n", "\n", "x", ",", "y", "=", "x", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "\n", "_", ",", "predictions", "=", "model", "(", "x", ")", "\n", "\n", "loss_", "=", "criterion", "(", "predictions", ",", "y", ")", "\n", "loss_", ".", "backward", "(", ")", "\n", "\n", "if", "ba", "%", "batch_accumulation", "==", "0", ":", "\n", "                ", "ba", "=", "1", "\n", "optimizer", ".", "step", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "", "else", ":", "\n", "                ", "ba", "+=", "1", "\n", "\n", "", "tr_loss", "+=", "loss_", ".", "item", "(", ")", "\n", "correct", "+=", "predictions", ".", "max", "(", "-", "1", ")", "[", "1", "]", ".", "eq", "(", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "# Perform a validation run every train_iters trainin iterations", "\n", "if", "idx", "%", "train_iters", "==", "0", ":", "\n", "                ", "val_loss", ",", "val_acc", "=", "validate", "(", "model", "=", "model", ",", "loader", "=", "valid_loader", ",", "criterion", "=", "criterion", ",", "device", "=", "device", ")", "\n", "\n", "# Update the learning rate scheduler", "\n", "scheduler", ".", "step", "(", ")", "\n", "\n", "logger", ".", "info", "(", "\n", "f'####'", "\n", "f'\\tValidation at iter ([{idx}]/[{len(loader)}])'", "\n", "f'\\tValid loss: {val_loss:.4f} --- Accuracy: {val_acc * 100:.2f}%'", "\n", "f'\\t ####'", "\n", ")", "\n", "\n", "if", "tb_writer", "is", "not", "None", ":", "\n", "                    ", "tb_writer", ".", "add_scalar", "(", "'valid/loss'", ",", "val_loss", ",", "it_v", ")", "\n", "tb_writer", ".", "add_scalar", "(", "'valid/acc'", ",", "val_acc", ",", "it_v", ")", "\n", "it_v", "+=", "1", "\n", "\n", "# If the current model is the best so far, then save a checkpoint", "\n", "", "if", "best_val_acc", "<", "val_acc", ":", "\n", "                    ", "best_val_acc", "=", "val_acc", "\n", "\n", "ckp_path", "=", "join", "(", "output_folder_path", ",", "'best_model_ckp.pt'", ")", "\n", "\n", "logger", ".", "info", "(", "\n", "f'####'", "\n", "f'\\tSaving best model at {ckp_path}'", "\n", "f'\\t####'", "\n", ")", "\n", "\n", "torch", ".", "save", "(", "{", "\n", "'model_state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state_dict'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'train_iter'", ":", "idx", ",", "\n", "'best_acc'", ":", "best_val_acc", "\n", "\n", "}", ",", "\n", "ckp_path", "\n", ")", "\n", "\n", "# Set model in train mode after validation", "\n", "", "model", ".", "train", "(", ")", "\n", "\n", "# Print training stats and save on tensorboard", "\n", "", "if", "idx", "%", "log_freq", "==", "0", ":", "\n", "                ", "logger", ".", "info", "(", "\n", "f'Train at epoch {epoch} ([{idx}]/[{len(loader)}])'", "\n", "f'\\tTrain loss: {tr_loss/idx:.4f} --- Accuracy: {correct/n * 100:.2f}%'", "\n", ")", "\n", "\n", "if", "tb_writer", "is", "not", "None", ":", "\n", "                    ", "tb_writer", ".", "add_scalar", "(", "'train/loss'", ",", "tr_loss", "/", "idx", ",", "it_t", ")", "\n", "tb_writer", ".", "add_scalar", "(", "'train/acc'", ",", "correct", "/", "n", ",", "it_t", ")", "\n", "it_t", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.trainer.validate": [[158, 200], ["model.eval", "torch.no_grad", "torch.no_grad", "enumerate", "tqdm.tqdm", "model", "criterion", "criterion.item", "[].eq().sum().item", "x.to", "torch.as_tensor().to", "torch.as_tensor().to", "[].eq().sum", "len", "torch.as_tensor", "torch.as_tensor", "len", "[].eq", "predictions.max"], "function", ["None"], ["", "", "", "", "", "def", "validate", "(", "model", ":", "torch", ".", "nn", ".", "Module", ",", "loader", ":", "DataLoader", ",", "criterion", ":", "torch", ".", "nn", ".", "Module", ",", "device", ":", "str", ")", "->", "[", "float", ",", "float", "]", ":", "\n", "    ", "\"\"\"Validate the model. \n    \n    Parameters\n    ----------\n    model : torch.nn.Module\n        The model to be trained\n    loader : DataLoader\n        Data loader\n    criterion : torch.nn.Module\n        Criterion to apply to evaluate the model loss\n    device : str\n        Device on which to run the computations\n    \n    Returns\n    ------\n    model : torch.nn.Model\n        Trained model\n\n    \"\"\"", "\n", "n", "=", "0", "\n", "loss", "=", "0.", "\n", "correct", "=", "0", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "idx", ",", "(", "x", ",", "y", ",", "_", ")", "in", "enumerate", "(", "tqdm", "(", "loader", ",", "total", "=", "len", "(", "loader", ")", "//", "30", ",", "desc", "=", "'Model validation'", ",", "leave", "=", "False", ")", ",", "1", ")", ":", "\n", "            ", "n", "+=", "x", ".", "shape", "[", "0", "]", "\n", "\n", "x", ",", "y", "=", "x", ".", "to", "(", "device", ")", ",", "torch", ".", "as_tensor", "(", "y", ")", ".", "to", "(", "device", ")", "\n", "\n", "_", ",", "predictions", "=", "model", "(", "x", ")", "\n", "loss_", "=", "criterion", "(", "predictions", ",", "y", ")", "\n", "\n", "loss", "+=", "loss_", ".", "item", "(", ")", "\n", "correct", "+=", "predictions", ".", "max", "(", "-", "1", ")", "[", "1", "]", ".", "eq", "(", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "# Test only on a portion of the entire validation set", "\n", "if", "idx", "%", "(", "len", "(", "loader", ")", "//", "30", ")", "==", "0", ":", "break", "\n", "\n", "", "", "return", "loss", "/", "idx", ",", "correct", "/", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.trainer.test": [[202, 263], ["logging.getLogger", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "model.to().eval", "utils.eval_metrics", "utils.eval_score_for_competition", "logging.getLogger.info", "torch.no_grad", "torch.no_grad", "enumerate", "numpy.asarray", "numpy.asarray", "model.to", "tqdm.tqdm", "model", "torch.nn.CrossEntropyLoss.", "criterion.item", "[].eq().sum().item", "labels.extend", "predictions.extend", "x.to", "y.to", "y.cpu().numpy().tolist", "[].detach().cpu().numpy().tolist", "len", "[].eq().sum", "len", "y.cpu().numpy", "[].detach().cpu().numpy", "[].eq", "y.cpu", "[].detach().cpu", "predictions_.max", "[].detach", "predictions_.max"], "function", ["home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.utils.eval_metrics", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.utils.eval_score_for_competition"], ["", "def", "test", "(", "model", ":", "torch", ".", "nn", ".", "Module", ",", "loader", ":", "DataLoader", ",", "device", ":", "str", ")", "->", "None", ":", "\n", "    ", "\"\"\"Test the model. \n    \n    Parameters\n    ----------\n    model : torch.nn.Module\n        The model to be trained\n    loader : DataLoader\n        Test data loader\n    device : str\n        Device on which to run the computations\n    \n    Returns\n    ------\n    model : torch.nn.Model\n        Trained model\n\n    \"\"\"", "\n", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "\n", "criterion", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "n", "=", "0", "\n", "loss", "=", "0.", "\n", "correct", "=", "0", "\n", "\n", "model", ".", "to", "(", "device", ")", ".", "eval", "(", ")", "\n", "\n", "labels", "=", "[", "]", "\n", "predictions", "=", "[", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "_", ",", "(", "x", ",", "y", ",", "_", ")", "in", "enumerate", "(", "tqdm", "(", "loader", ",", "total", "=", "len", "(", "loader", ")", ",", "desc", "=", "'Model test'", ",", "leave", "=", "False", ")", ",", "1", ")", ":", "\n", "            ", "n", "+=", "x", ".", "shape", "[", "0", "]", "\n", "\n", "x", ",", "y", "=", "x", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "\n", "_", ",", "predictions_", "=", "model", "(", "x", ")", "\n", "\n", "loss_", "=", "criterion", "(", "predictions_", ",", "y", ")", "\n", "\n", "loss", "+=", "loss_", ".", "item", "(", ")", "\n", "correct", "+=", "predictions_", ".", "max", "(", "-", "1", ")", "[", "1", "]", ".", "eq", "(", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "labels", ".", "extend", "(", "y", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "predictions", ".", "extend", "(", "predictions_", ".", "max", "(", "-", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "\n", "", "", "accuracy", ",", "f1_score", ",", "_", "=", "eval_metrics", "(", "np", ".", "asarray", "(", "labels", ")", ",", "np", ".", "asarray", "(", "predictions", ")", ")", "\n", "score", "=", "eval_score_for_competition", "(", "f1_score", ",", "accuracy", ")", "\n", "\n", "logger", ".", "info", "(", "\n", "f'#################################################'", "\n", "f'\\n#################################################'", "\n", "f'\\nTest results:'", "\n", "f'\\n\\t\\tLoss: {loss/len(loader):.4f} --- F1-score: {f1_score:.4f} --- Accuracy: {correct/n * 100:.2f}%'", "\n", "f'\\n\\t\\tCompetition score: {score:.4f}'", "\n", "f'\\n#################################################'", "\n", "f'\\n#################################################'", "\n", ")", "\n", "\n", "return", "accuracy", ",", "f1_score", ",", "score", "\n", "", ""]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.utils.create_experiment_folder": [[16, 44], ["os.path.join", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["def", "create_experiment_folder", "(", "args", ":", "argparse", ".", "Namespace", ",", "dataset_name", ":", "str", ")", "->", "str", ":", "\n", "    ", "\"\"\"Create the current output experiment folder.\n\n    Parameters\n    ----------\n        args : \n            Argument given by the user\n        dataset_name : str\n            Name of the dataset\n\n    Returns\n    ------\n    exp_folder : str\n        Path to current experiment output folder\n\n    \"\"\"", "\n", "output_main_folder", "=", "args", ".", "output_folder_path", "\n", "\n", "if", "not", "exists", "(", "output_main_folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "output_main_folder", ")", "\n", "\n", "", "tmp", "=", "'-'", ".", "join", "(", "[", "str", "(", "args", ".", "multi_res_training", ")", ",", "str", "(", "args", ".", "lr", ")", ",", "str", "(", "args", ".", "weight_decay", ")", ",", "str", "(", "args", ".", "momentum", ")", ",", "str", "(", "args", ".", "nesterov", ")", ",", "args", ".", "train_mode", ",", "dataset_name", ",", "str", "(", "args", ".", "step_size", ")", ",", "str", "(", "args", ".", "batch_accumulation", ")", ",", "str", "(", "args", ".", "batch_size", ")", "]", ")", "\n", "exp_folder", "=", "join", "(", "output_main_folder", ",", "tmp", ")", "\n", "\n", "if", "not", "exists", "(", "exp_folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "exp_folder", ")", "\n", "\n", "", "return", "output_main_folder", ",", "exp_folder", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.utils.create_output_test_folder": [[46, 66], ["os.path.join", "os.path.exists", "os.makedirs"], "function", ["None"], ["", "def", "create_output_test_folder", "(", "output_folder_path", ",", "dataset_name", ")", ":", "\n", "    ", "\"\"\"Create the test output folder.\n\n    Parameters\n    ----------\n        output_folder_path : str\n            Where to create the folder\n        dataset_name : str\n            Name of the dataset\n\n    Returns\n    ------\n    exp_folder : str\n        Path to current experiment output folder\n\n    \"\"\"", "\n", "outf", "=", "join", "(", "output_folder_path", ",", "dataset_name", ")", "\n", "if", "not", "exists", "(", "outf", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "outf", ")", "\n", "", "return", "outf", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.utils.get_transforms": [[68, 125], ["torchvision.transforms.Compose", "torchvision.transforms.Compose", "x.repeat.repeat", "torchvision.transforms.Resize", "torchvision.transforms.RandomGrayscale", "torchvision.transforms.RandomCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Lambda", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Lambda", "utils.get_transforms.subtract_mean"], "function", ["None"], ["", "def", "get_transforms", "(", "mode", ":", "str", ",", "resize", ":", "int", "=", "256", ",", "grayed_prob", ":", "float", "=", "0.2", ",", "crop_size", ":", "int", "=", "224", ")", "->", "torchvision", ".", "transforms", ".", "Compose", ":", "\n", "    ", "\"\"\"Returns composition of augmentation transformation.\n\n    Parameters\n    ----------\n    mode : str\n        Training mode, i.e., train or valid/test\n    resize: int\n        Side dimension to which resize the images\n    grayed_prob : float\n        Probability to gray an image\n    crop_size : int\n        Size of the image crop\n\n    Returns\n    -------\n    composed treansformations : Compose\n        Composition of transformation\n\n    \"\"\"", "\n", "def", "subtract_mean", "(", "x", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"Subtract the mean for each channel.\n        These values are given in the original VGGFace2 (Cao et al.) model.\n        \n        Parameters\n        ----------\n        x : torch.Tensor\n            The input image tensor\n\n        Returns\n        -------\n        x : torch.Tensor\n            Nomralized tensor image\n\n        \"\"\"", "\n", "mean_vector", "=", "[", "91.4953", ",", "103.8827", ",", "131.0912", "]", "\n", "x", "*=", "255.", "\n", "if", "x", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "            ", "x", "=", "x", ".", "repeat", "(", "3", ",", "1", ",", "1", ")", "\n", "", "x", "[", "0", "]", "-=", "mean_vector", "[", "0", "]", "\n", "x", "[", "1", "]", "-=", "mean_vector", "[", "1", "]", "\n", "x", "[", "2", "]", "-=", "mean_vector", "[", "2", "]", "\n", "return", "x", "\n", "", "if", "mode", "==", "'train'", ":", "\n", "        ", "return", "Compose", "(", "[", "\n", "Resize", "(", "resize", ")", ",", "\n", "RandomGrayscale", "(", "p", "=", "grayed_prob", ")", ",", "\n", "RandomCrop", "(", "crop_size", ")", ",", "\n", "ToTensor", "(", ")", ",", "\n", "Lambda", "(", "lambda", "x", ":", "subtract_mean", "(", "x", ")", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "        ", "return", "Compose", "(", "[", "\n", "Resize", "(", "resize", ")", ",", "\n", "CenterCrop", "(", "crop_size", ")", ",", "\n", "ToTensor", "(", ")", ",", "\n", "Lambda", "(", "lambda", "x", ":", "subtract_mean", "(", "x", ")", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.utils.eval_metrics": [[128, 162], ["sklearn.metrics.f1_score", "sklearn.metrics.f1_score", "print", "sklearn.metrics.accuracy_score", "sklearn.metrics.confusion_matrix"], "function", ["None"], ["", "", "def", "eval_metrics", "(", "labels", ":", "torch", ".", "tensor", ",", "predictions", ":", "torch", ".", "tensor", ")", "->", "[", "float", ",", "float", ",", "sklearn", ".", "metrics", "]", ":", "\n", "    ", "\"\"\"Eval training metrics.\n    \n    Parameters\n    ----------\n    labels : torch.tensor\n        Ground truth predictions\n    predictions : torch.tensor\n        Model predictions\n\n    Returns\n    ------\n    accuracy : float\n        Accuracy of the model\n    f1_score : float \n        F1 score of the model\n    confusion_matrix : sklearn.metrics\n        Confusion matrix among all 7 expression classes\n\n    \"\"\"", "\n", "# Eval F1 score (macro-averaged)", "\n", "f1_score", "=", "sklearn", ".", "metrics", ".", "f1_score", "(", "labels", ",", "predictions", ",", "average", "=", "'macro'", ",", "zero_division", "=", "1", ")", "\n", "\n", "# Eval F1 score for each class", "\n", "classes_score", "=", "sklearn", ".", "metrics", ".", "f1_score", "(", "labels", ",", "predictions", ",", "average", "=", "None", ",", "zero_division", "=", "1", ")", "\n", "print", "(", "f'Acc classes: {classes_score}'", ")", "\n", "\n", "# Eval accuracy", "\n", "accuracy", "=", "sklearn", ".", "metrics", ".", "accuracy_score", "(", "labels", ",", "predictions", ")", "\n", "\n", "# Eval the confusion matrix", "\n", "confusion_matrix", "=", "sklearn", ".", "metrics", ".", "confusion_matrix", "(", "labels", ",", "predictions", ")", "\n", "\n", "return", "accuracy", ",", "f1_score", ",", "confusion_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.utils.eval_score_for_competition": [[164, 181], ["None"], "function", ["None"], ["", "def", "eval_score_for_competition", "(", "f1_score", ":", "float", ",", "accuracy", ":", "float", ")", "->", "float", ":", "\n", "    ", "\"\"\"Evaluate the statistics required from the AffWild2 competition.\n\n    Parameters\n    ----------\n    f1_score : float\n        F1 score of the classifier\n    accuracy : float\n        Accuracy of the classifier \n\n    Returns\n    ------\n    stat : float\n        Competition statistics\n\n    \"\"\"", "\n", "return", "(", "0.33", "*", "accuracy", ")", "+", "(", "0.67", "*", "f1_score", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.BaseDataset.__init__": [[25, 46], ["torch.utils.data.Dataset.__init__", "logging.getLogger"], "methods", ["home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.__init__"], ["def", "__init__", "(", "self", ",", "dataset_folder", ":", "str", ",", "output_folder", ":", "str", ",", "transforms", ":", "torchvision", ".", "transforms", "=", "None", ")", ":", "\n", "        ", "\"\"\"Init the base dataset class.\n\n        Parameters\n        ----------\n        dataset_folder : str\n            Path to folder cotaining the dataset\n        output_folder : str\n            Path to output folder where to save the database \n        transforms : torchvision.transforms\n            Data augmentation transforms\n        \n        \"\"\"", "\n", "super", "(", "BaseDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dataset_folder", "=", "dataset_folder", "\n", "self", ".", "output_folder", "=", "output_folder", "\n", "self", ".", "transforms", "=", "transforms", "\n", "\n", "self", ".", "loader", "=", "self", ".", "__get_loader", "\n", "self", ".", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.BaseDataset.get_emotion_from_idx": [[47, 62], ["None"], "methods", ["None"], ["", "def", "get_emotion_from_idx", "(", "self", ",", "label", ":", "int", ")", "->", "str", ":", "\n", "        ", "\"\"\"Returns the expression corresponding to the given label.\n        \n        Parameters\n        ----------\n        label : int\n            Label of the required expression\n\n        Returns\n        ------\n        emotion : str \n            Name of the expression that correspond to the given label \n\n        \"\"\"", "\n", "return", "self", ".", "idx_to_expression", "[", "label", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.BaseDataset.get_training_classes_weights": [[63, 85], ["datasets.BaseDataset.curr_db.expression.unique", "datasets.BaseDataset.sort", "numpy.asarray", "numpy.asarray", "prettytable.PrettyTable", "prettytable.PrettyTable.add_row", "print", "len", "int", "sum"], "methods", ["None"], ["", "def", "get_training_classes_weights", "(", "self", ")", "->", "np", ".", "array", ":", "\n", "        ", "\"\"\"\n        \n        Returns\n        ------\n        weights : np.array\n            Numpy array contatining the normalized weight for each training class\n\n        \"\"\"", "\n", "expressions", "=", "self", ".", "curr_db", ".", "expression", ".", "unique", "(", ")", "\n", "expressions", ".", "sort", "(", ")", "\n", "weigths", "=", "np", ".", "asarray", "(", "[", "len", "(", "self", ".", "curr_db", "[", "self", ".", "curr_db", "[", "'expression'", "]", "==", "expr", "]", ")", "for", "expr", "in", "expressions", "]", ")", "\n", "normed_weights", "=", "np", ".", "asarray", "(", "[", "1", "-", "(", "w", "/", "sum", "(", "weigths", ")", ")", "for", "w", "in", "weigths", "]", ")", "\n", "\n", "# Print weights for each class", "\n", "stats_table", "=", "PrettyTable", "(", ")", "\n", "stats_table", ".", "title", "=", "'Weights for each expression (Training)'", "\n", "stats_table", ".", "field_names", "=", "[", "self", ".", "idx_to_emotion", "[", "int", "(", "label", ")", "]", "for", "label", "in", "expressions", "]", "\n", "stats_table", ".", "add_row", "(", "[", "nw", "for", "nw", "in", "normed_weights", "]", ")", "\n", "print", "(", "stats_table", ")", "\n", "\n", "return", "normed_weights", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.BaseDataset.__get_loader": [[86, 98], ["PIL.Image.fromarray", "cv2.imread"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "__get_loader", "(", "path", ":", "str", ")", "->", "PIL", ".", "Image", ":", "\n", "        ", "\"\"\"Set the image loader... \n        WARNING: the images are loaded as BGR due to the use of cv2.imread()\n        \n        Returns\n        ------\n        image : PIL.Image\n            Image loaded from array\n\n        \"\"\"", "\n", "return", "Image", ".", "fromarray", "(", "cv2", ".", "imread", "(", "path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.BaseDataset.__len__": [[99, 109], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "        ", "\"\"\"Returns the length of the database in the current mode.\n        \n        Returns\n        ------\n        int : int\n            The number of samples in the current mode\n\n        \"\"\"", "\n", "return", "len", "(", "self", ".", "db", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.__init__": [[116, 170], ["datasets.BaseDataset.__init__", "os.path.join", "pandas.read_csv", "datasets.AffWild2Dataset.__dataset_statistics", "os.path.exists", "datasets.AffWild2Dataset.logger.info", "datasets.AffWild2Dataset.__create_database", "os.path.exists", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.__init__", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.__dataset_statistics", "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.__create_database"], ["def", "__init__", "(", "self", ",", "dataset_folder", ":", "str", ",", "output_folder", ":", "str", ",", "multi_res", ":", "bool", "=", "False", ",", "valid_resolution", ":", "int", "=", "-", "1", ",", "test", ":", "bool", "=", "False", ",", "transforms", ":", "torchvision", ".", "transforms", "=", "None", ")", "->", "None", ":", "\n", "        ", "\"\"\"Init the dataset class.\n\n        Parameters\n        ----------\n        dataset_folder : str\n            Path to folder cotaining the dataset\n        output_folder : str\n            Path to output folder where to save the database \n        multi_res : bool\n            If True, the model is trained with multi-resolution images\n        valid_resolution : int\n            Resolution at which downsample images while testing the model\n        test : bool\n            True if the model is under test\n        transforms : torchvision.transforms\n            Data augmentation transforms\n\n        \"\"\"", "\n", "super", "(", "AffWild2Dataset", ",", "self", ")", ".", "__init__", "(", "dataset_folder", "=", "dataset_folder", ",", "output_folder", "=", "output_folder", ",", "transforms", "=", "transforms", ")", "\n", "\n", "self", ".", "multi_res", "=", "multi_res", "\n", "self", ".", "valid_resolution", "=", "valid_resolution", "\n", "self", ".", "test", "=", "test", "\n", "\n", "self", ".", "train", "=", "None", "\n", "self", ".", "curr_db", "=", "None", "\n", "\n", "self", ".", "idx_to_emotion", "=", "{", "\n", "0", ":", "'Neutral'", ",", "\n", "1", ":", "'Anger'", ",", "\n", "2", ":", "'Disgust'", ",", "\n", "3", ":", "'Fear'", ",", "\n", "4", ":", "'Happiness'", ",", "\n", "5", ":", "'Sadness'", ",", "\n", "6", ":", "'Surprise'", ",", "\n", "-", "1", ":", "'None'", ",", "\n", "}", "\n", "\n", "# Create the database if it does not exists otherwise load it from .csv file", "\n", "db_fname", "=", "join", "(", "self", ".", "output_folder", ",", "'affwild2_database.csv'", ")", "\n", "if", "not", "exists", "(", "db_fname", ")", ":", "\n", "            ", "if", "not", "exists", "(", "self", ".", "output_folder", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "self", ".", "output_folder", ")", "\n", "", "self", ".", "logger", ".", "info", "(", "'Databse not found... creating it'", ")", "\n", "self", ".", "__create_database", "(", "db_fname", "=", "db_fname", ")", "\n", "\n", "", "self", ".", "db", "=", "pd", ".", "read_csv", "(", "db_fname", ")", "\n", "\n", "# Remove all the entries which have expression label equals to -1", "\n", "self", ".", "db", "=", "self", ".", "db", "[", "self", ".", "db", "[", "'expression'", "]", "!=", "-", "1", "]", "\n", "\n", "# Print data statistics", "\n", "self", ".", "__dataset_statistics", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.__create_database": [[171, 237], ["os.path.join", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "pandas.DataFrame", "pandas.DataFrame.to_csv", "datasets.AffWild2Dataset.logger.info", "os.path.join", "os.listdir", "tqdm.tqdm.tqdm", "open", "numpy.asarray", "open.close", "list", "list", "dict", "len", "os.path.join", "list", "map", "map", "numpy.asarray.extend", "train_frames_path.extend", "numpy.asarray.extend", "numpy.asarray.extend", "valid_frames_path.extend", "numpy.asarray.extend", "map", "filter", "filter", "numpy.hstack", "numpy.hstack", "numpy.hstack", "numpy.hstack", "open.readlines", "os.listdir", "int", "os.listdir", "os.path.join", "os.path.join", "x.split", "os.path.join", "os.path.join", "ff.split", "ff.split", "numpy.ones_like", "numpy.zeros_like", "int", "x.rstrip", "x.split", "ff.split", "ff.split", "x.rstrip", "ff.split", "ff.split"], "methods", ["None"], ["", "def", "__create_database", "(", "self", ",", "db_fname", ":", "str", ")", ":", "\n", "        ", "\"\"\"Create the database and save it in a .csv file.\n        Following the instruction by the affwild2 team, the name of each frame corresponds\n        to the position of the label in the corresponding file, i.e., the frame named video_id/00123.jpg\n        correspond to the label in the position 123 of the annotation file video_id.txt.\n        At the position 0 of each annotation file there is a string reporting the name of the expressions,\n        that is why the frame always start from the number 00001.jpg\n        \n        Parameters\n        ----------\n        db_fname : str\n            Path to output database file\n\n        \"\"\"", "\n", "train_frames_path", "=", "[", "]", "\n", "train_video_id", "=", "[", "]", "\n", "train_expr", "=", "[", "]", "\n", "\n", "valid_frames_path", "=", "[", "]", "\n", "valid_video_id", "=", "[", "]", "\n", "valid_expr", "=", "[", "]", "\n", "\n", "frames_base_path", "=", "join", "(", "self", ".", "dataset_folder", ",", "'cropped_images_aligned/cropped_aligned/'", ")", "\n", "\n", "for", "set_split", "in", "[", "'Training_Set'", ",", "'Validation_Set'", "]", ":", "\n", "            ", "annotations_base_dir", "=", "join", "(", "self", ".", "dataset_folder", ",", "'annotations/EXPR_Set'", ",", "set_split", ")", "\n", "annotations_files", "=", "listdir", "(", "annotations_base_dir", ")", "\n", "\n", "for", "ff", "in", "tqdm", "(", "annotations_files", ",", "total", "=", "len", "(", "annotations_files", ")", ",", "desc", "=", "f\"Working on {set_split} set\"", ",", "leave", "=", "False", ")", ":", "\n", "# read the annotation for each frame in the ff video", "\n", "                ", "annot", "=", "open", "(", "join", "(", "annotations_base_dir", ",", "ff", ")", ",", "'r'", ")", "\n", "lines", "=", "np", ".", "asarray", "(", "list", "(", "map", "(", "lambda", "x", ":", "int", "(", "x", ".", "rstrip", "(", ")", ")", "if", "'Neutral'", "not", "in", "x", "else", "x", ".", "rstrip", "(", ")", ",", "annot", ".", "readlines", "(", ")", ")", ")", ")", "\n", "annot", ".", "close", "(", ")", "\n", "\n", "# Convert the frame name into integers so to use them as indices to get the proper expression", "\n", "frames", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "split", "(", "'.'", ")", "[", "0", "]", ",", "filter", "(", "lambda", "x", ":", "'.jpg'", "in", "x", ",", "listdir", "(", "join", "(", "frames_base_path", ",", "ff", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", ")", ")", ")", ")", "\n", "frames_int", "=", "list", "(", "map", "(", "lambda", "x", ":", "int", "(", "x", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", ",", "filter", "(", "lambda", "x", ":", "'.jpg'", "in", "x", ",", "listdir", "(", "join", "(", "frames_base_path", ",", "ff", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", ")", ")", ")", ")", "\n", "\n", "if", "set_split", "==", "'Training_Set'", ":", "\n", "                    ", "train_video_id", ".", "extend", "(", "[", "ff", ".", "split", "(", "'.'", ")", "[", "0", "]", "for", "_", "in", "frames", "]", ")", "\n", "train_frames_path", ".", "extend", "(", "[", "join", "(", "frames_base_path", ",", "ff", ".", "split", "(", "'.'", ")", "[", "0", "]", ",", "frame", "+", "'.jpg'", ")", "for", "frame", "in", "frames", "]", ")", "\n", "# use the indices into the 'frames' list to get the annotations for each face", "\n", "train_expr", ".", "extend", "(", "lines", "[", "frames_int", "]", ")", "\n", "", "else", ":", "\n", "                    ", "valid_video_id", ".", "extend", "(", "[", "ff", ".", "split", "(", "'.'", ")", "[", "0", "]", "for", "_", "in", "frames", "]", ")", "\n", "valid_frames_path", ".", "extend", "(", "[", "join", "(", "frames_base_path", ",", "ff", ".", "split", "(", "'.'", ")", "[", "0", "]", ",", "frame", "+", "'.jpg'", ")", "for", "frame", "in", "frames", "]", ")", "\n", "# use the indices into the 'frames' list to get the annotations for each face", "\n", "valid_expr", ".", "extend", "(", "lines", "[", "frames_int", "]", ")", "\n", "\n", "", "", "", "train_expr", "=", "np", ".", "asarray", "(", "train_expr", ")", "\n", "train_video_id", "=", "np", ".", "asarray", "(", "train_video_id", ")", "\n", "valid_expr", "=", "np", ".", "asarray", "(", "valid_expr", ")", "\n", "valid_video_id", "=", "np", ".", "asarray", "(", "valid_video_id", ")", "\n", "\n", "# Create the dataframe and save it into a .csv file", "\n", "df", "=", "pd", ".", "DataFrame", "(", "\n", "data", "=", "dict", "(", "\n", "path", "=", "np", ".", "hstack", "(", "[", "train_frames_path", ",", "valid_frames_path", "]", ")", ",", "\n", "video_id", "=", "np", ".", "hstack", "(", "[", "train_video_id", ",", "valid_video_id", "]", ")", ",", "\n", "expression", "=", "np", ".", "hstack", "(", "[", "train_expr", ",", "valid_expr", "]", ")", ",", "\n", "train", "=", "np", ".", "hstack", "(", "[", "np", ".", "ones_like", "(", "train_expr", ",", "dtype", "=", "np", ".", "int", ")", ",", "np", ".", "zeros_like", "(", "valid_expr", ",", "dtype", "=", "np", ".", "int", ")", "]", ")", "\n", ")", ",", "\n", "index", "=", "None", "\n", ")", "\n", "df", ".", "to_csv", "(", "db_fname", ")", "\n", "self", ".", "logger", ".", "info", "(", "f'Databse saved at: {db_fname}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.__dataset_statistics": [[238, 294], ["print", "prettytable.PrettyTable", "prettytable.PrettyTable.add_row", "print", "prettytable.PrettyTable", "datasets.AffWild2Dataset.db.iterrows", "prettytable.PrettyTable", "prettytable.PrettyTable.add_row", "print", "datasets.AffWild2Dataset.db.expression.unique", "datasets.AffWild2Dataset.sort", "prettytable.PrettyTable", "datasets.AffWild2Dataset.__dataset_statistics.eval_class_cardinality"], "methods", ["None"], ["", "def", "__dataset_statistics", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Use PrettyTable package to print dataset info.\n        \n        \"\"\"", "\n", "# Print the expressions", "\n", "print", "(", "f'\\nAvailable expression: {self.idx_to_emotion.values()}\\n'", ")", "\n", "\n", "info_table", "=", "PrettyTable", "(", ")", "\n", "info_table", ".", "title", "=", "'Multi-resolution training info'", "\n", "info_table", ".", "field_names", "=", "[", "'Multi-resolution'", ",", "'Validation Resolution'", "]", "\n", "info_table", ".", "add_row", "(", "[", "self", ".", "multi_res", ",", "self", ".", "valid_resolution", "]", ")", "\n", "print", "(", "info_table", ")", "\n", "\n", "# Print subsample from dataframe to show its structure", "\n", "stats_table", "=", "PrettyTable", "(", ")", "\n", "stats_table", ".", "title", "=", "'Database structure'", "\n", "stats_table", ".", "field_names", "=", "self", ".", "db", ".", "columns", "[", "1", ":", "]", "# We don't need the index", "\n", "for", "idx", ",", "row", "in", "self", ".", "db", ".", "iterrows", "(", ")", ":", "\n", "            ", "stats_table", ".", "add_row", "(", "[", "row", ".", "path", ",", "row", ".", "video_id", ",", "row", ".", "expression", ",", "row", ".", "train", "]", ")", "\n", "if", "idx", "==", "3", ":", "break", "# idx starts at 1", "\n", "", "if", "not", "self", ".", "test", ":", "print", "(", "stats_table", ")", "\n", "\n", "# Print dataset cardinalities", "\n", "stats_table", "=", "PrettyTable", "(", ")", "\n", "stats_table", ".", "title", "=", "'Sample for training and validation'", "\n", "stats_table", ".", "field_names", "=", "[", "'Train samples'", ",", "'Valid samples'", ",", "'Number of expressions'", "]", "\n", "stats_table", ".", "add_row", "(", "[", "len", "(", "self", ".", "db", "[", "self", ".", "db", "[", "'train'", "]", "==", "1", "]", ")", ",", "len", "(", "self", ".", "db", "[", "self", ".", "db", "[", "'train'", "]", "==", "0", "]", ")", ",", "len", "(", "self", ".", "db", ".", "expression", ".", "unique", "(", ")", ")", "]", ")", "\n", "print", "(", "stats_table", ")", "\n", "\n", "def", "eval_class_cardinality", "(", "self", ",", "expressions", ":", "list", ",", "train", ":", "bool", ")", "->", "[", "list", ",", "list", "]", ":", "\n", "            ", "cardinality", "=", "[", "len", "(", "self", ".", "db", "[", "(", "self", ".", "db", "[", "'expression'", "]", "==", "expr", ")", "&", "(", "self", ".", "db", "[", "'train'", "]", "==", "int", "(", "train", ")", ")", "]", ")", "for", "expr", "in", "expressions", "]", "\n", "frac", "=", "[", "len", "(", "self", ".", "db", "[", "(", "self", ".", "db", "[", "'expression'", "]", "==", "expr", ")", "&", "(", "self", ".", "db", "[", "'train'", "]", "==", "int", "(", "train", ")", ")", "]", ")", "/", "len", "(", "self", ".", "db", "[", "self", ".", "db", "[", "'train'", "]", "==", "int", "(", "train", ")", "]", ")", "for", "expr", "in", "expressions", "]", "\n", "return", "cardinality", ",", "frac", "\n", "\n", "", "expressions", "=", "self", ".", "db", ".", "expression", ".", "unique", "(", ")", "\n", "expressions", ".", "sort", "(", ")", "\n", "\n", "# Print expression statistics --> Training split", "\n", "stats_table", "=", "PrettyTable", "(", ")", "\n", "stats_table", ".", "title", "=", "'Samples for each expression (Training)'", "\n", "stats_table", ".", "field_names", "=", "[", "self", ".", "idx_to_emotion", "[", "int", "(", "label", ")", "]", "for", "label", "in", "expressions", "]", "\n", "cardinality", ",", "frac", "=", "eval_class_cardinality", "(", "expressio", "=", "expressions", ",", "train", "=", "True", ")", "\n", "stats_table", ".", "add_row", "(", "cardinality", ")", "\n", "stats_table", ".", "add_row", "(", "frac", ")", "\n", "\n", "# Print expression statistics --> Validation split", "\n", "stats_table2", "=", "PrettyTable", "(", ")", "\n", "stats_table2", ".", "title", "=", "'Samples for each expression (Validation)'", "\n", "stats_table2", ".", "field_names", "=", "[", "self", ".", "idx_to_emotion", "[", "int", "(", "label", ")", "]", "for", "label", "in", "expressions", "]", "\n", "cardinality", ",", "frac", "=", "eval_class_cardinality", "(", "expressions", "=", "expressions", ",", "train", "=", "False", ")", "\n", "stats_table2", ".", "add_row", "(", "cardinality", ")", "\n", "stats_table2", ".", "add_row", "(", "frac", ")", "\n", "\n", "if", "not", "self", ".", "test", ":", "\n", "            ", "print", "(", "stats_table", ")", "\n", "print", "(", "stats_table2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.__lower_resolution": [[295, 328], ["img.resize", "img2.resize.resize.resize", "float", "torch.rand().item", "int", "float", "float", "int", "int", "torch.rand"], "methods", ["None"], ["", "", "def", "__lower_resolution", "(", "self", ",", "img", ":", "PIL", ".", "Image", ")", "->", "PIL", ".", "Image", ":", "\n", "        ", "\"\"\"Resize image to a random resolution.\n        \n        Parameters\n        ----------\n        img : PIL.Image\n            Image to be resized\n\n        Returns\n        ------\n        img : PIL.Image\n            Resized image\n        \n        \"\"\"", "\n", "w_i", ",", "h_i", "=", "img", ".", "size", "\n", "r", "=", "h_i", "/", "float", "(", "w_i", ")", "\n", "if", "self", ".", "train", ":", "\n", "            ", "res", "=", "torch", ".", "rand", "(", "1", ")", ".", "item", "(", ")", "\n", "res", "=", "3", "+", "5", "*", "res", "\n", "res", "=", "2", "**", "int", "(", "res", ")", "\n", "", "else", ":", "\n", "            ", "res", "=", "self", ".", "valid_resolution", "\n", "", "if", "res", ">=", "w_i", "or", "res", ">=", "h_i", ":", "\n", "            ", "return", "img", "\n", "", "if", "h_i", "<", "w_i", ":", "\n", "            ", "h_n", "=", "res", "\n", "w_n", "=", "h_n", "/", "float", "(", "r", ")", "\n", "", "else", ":", "\n", "            ", "w_n", "=", "res", "\n", "h_n", "=", "w_n", "*", "float", "(", "r", ")", "\n", "", "img2", "=", "img", ".", "resize", "(", "(", "int", "(", "w_n", ")", ",", "int", "(", "h_n", ")", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "img2", "=", "img2", ".", "resize", "(", "(", "w_i", ",", "h_i", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "return", "img2", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.set_mode": [[329, 340], ["int"], "methods", ["None"], ["", "def", "set_mode", "(", "self", ",", "train", ":", "bool", ")", "->", "None", ":", "\n", "        ", "\"\"\"Set the database to train or valid.\n\n        Parameters\n        ----------\n        train : bool\n            Set train or valid mode to load data\n\n        \"\"\"", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "curr_db", "=", "self", ".", "db", "[", "self", ".", "db", "[", "'train'", "]", "==", "int", "(", "train", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.__len__": [[341, 351], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "        ", "\"\"\"Returns the length of the database in the current mode.\n        \n        Returns\n        ------\n        int : int\n            The number of samples in the current mode\n\n        \"\"\"", "\n", "return", "len", "(", "self", ".", "curr_db", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.__getitem__": [[352, 388], ["datasets.AffWild2Dataset.loader", "ValueError", "datasets.AffWild2Dataset.__lower_resolution", "datasets.AffWild2Dataset.transforms"], "methods", ["home.repos.pwc.inspect_result.fvmassoli_affwild2-challenge.None.datasets.AffWild2Dataset.__lower_resolution"], ["", "def", "__getitem__", "(", "self", ",", "idx", ":", "int", ")", "->", "[", "torch", ".", "Tensor", ",", "int", "]", ":", "\n", "        ", "\"\"\"Load data. \n        \n        Parameters:\n        -----------\n        idx : int\n            Index of the sample to load\n\n        Rerturn\n        -------\n        image : torch.Tensor\n            The loaded tensor\n        expression : int\n            The label correspoding to the face expression\n        train : int\n            Integer that indicates if dataset is in train mode (1) or not (0)\n\n        \"\"\"", "\n", "if", "self", ".", "train", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "'You need to first call the set_mode() method'", ")", "\n", "\n", "", "path", "=", "self", ".", "curr_db", ".", "path", ".", "iloc", "[", "idx", "]", "\n", "expression", "=", "self", ".", "curr_db", ".", "expression", ".", "iloc", "[", "idx", "]", "\n", "train", "=", "self", ".", "curr_db", ".", "train", ".", "iloc", "[", "idx", "]", "\n", "\n", "# Load the image as a PIL.Image object", "\n", "img", "=", "self", ".", "loader", "(", "path", ")", "\n", "\n", "# Downsample the image if multi-resolution training", "\n", "if", "self", ".", "multi_res", ":", "\n", "            ", "img", "=", "self", ".", "__lower_resolution", "(", "img", "=", "img", ")", "\n", "\n", "# Apply data augmentation transformation", "\n", "", "img", "=", "img", "if", "self", ".", "transforms", "is", "None", "else", "self", ".", "transforms", "(", "img", ")", "\n", "\n", "return", "img", ",", "expression", ",", "train", "\n", "", "", ""]]}