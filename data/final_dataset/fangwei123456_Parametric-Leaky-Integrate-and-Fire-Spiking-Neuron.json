{"home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.train_val.split_dataset": [[22, 41], ["range", "range", "range", "idx_list.append", "origin_datasets.__len__", "idx_list[].append", "math.ceil", "list0.extend", "list1.extend", "torch.utils.data.Subset", "torch.utils.data.Subset", "torch.utils.data.Subset", "torch.utils.data.Subset", "torch.utils.data.Subset", "torch.utils.data.Subset", "isinstance", "isinstance", "y.item.item", "idx_list[].__len__", "idx_list[].__len__"], "function", ["None"], ["def", "split_dataset", "(", "origin_datasets", ":", "torch", ".", "utils", ".", "data", ".", "Dataset", ",", "class_num", ":", "int", ",", "ratio0", ":", "float", ")", ":", "\n", "# \u5c06\u6bcf\u4e00\u4e2a\u7c7b\u88ab\u7684\u6570\u636e\u5212\u5206", "\n", "# \u5f97\u52302\u4e2a\u6570\u636e\u96c6\uff0c[0, ratio0), [ratio0, 1)", "\n", "    ", "idx_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "class_num", ")", ":", "\n", "        ", "idx_list", ".", "append", "(", "[", "]", ")", "\n", "# idx_list[i][j]\u8868\u793alabel\u4e3ai\u7684\u7b2cj\u4e2a\u6837\u672c\u5728origin_datasets\u4e2d\u7684\u7d22\u5f15", "\n", "", "for", "i", "in", "range", "(", "origin_datasets", ".", "__len__", "(", ")", ")", ":", "\n", "        ", "x", ",", "y", "=", "origin_datasets", "[", "i", "]", "\n", "if", "isinstance", "(", "y", ",", "np", ".", "ndarray", ")", "or", "isinstance", "(", "y", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "y", "=", "y", ".", "item", "(", ")", "\n", "", "idx_list", "[", "y", "]", ".", "append", "(", "i", ")", "\n", "", "list0", "=", "[", "]", "\n", "list1", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "class_num", ")", ":", "\n", "        ", "pos", "=", "math", ".", "ceil", "(", "idx_list", "[", "i", "]", ".", "__len__", "(", ")", "*", "ratio0", ")", "\n", "list0", ".", "extend", "(", "idx_list", "[", "i", "]", "[", "0", ":", "pos", "]", ")", "\n", "list1", ".", "extend", "(", "idx_list", "[", "i", "]", "[", "pos", ":", "idx_list", "[", "i", "]", ".", "__len__", "(", ")", "]", ")", "\n", "", "return", "torch", ".", "utils", ".", "data", ".", "Subset", "(", "origin_datasets", ",", "list0", ")", ",", "torch", ".", "utils", ".", "data", ".", "Subset", "(", "origin_datasets", ",", "list1", ")", "\n", ""]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.PLIFNode.__init__": [[10, 14], ["spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.neuron.BaseNode.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "math.log", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.DVS128GestureNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "init_tau", "=", "2.0", ",", "v_threshold", "=", "1.0", ",", "v_reset", "=", "0.0", ",", "detach_reset", "=", "True", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", ")", ",", "monitor_state", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "v_threshold", ",", "v_reset", ",", "surrogate_function", ",", "detach_reset", ",", "monitor_state", ")", "\n", "init_w", "=", "-", "math", ".", "log", "(", "init_tau", "-", "1", ")", "\n", "self", ".", "w", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "init_w", ",", "dtype", "=", "torch", ".", "float", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.PLIFNode.forward": [[15, 23], ["models.PLIFNode.spiking", "models.PLIFNode.w.sigmoid", "models.PLIFNode.w.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "dv", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "if", "self", ".", "v_reset", "is", "None", ":", "\n", "# self.v += dv - self.v * self.w.sigmoid()", "\n", "            ", "self", ".", "v", "+=", "(", "dv", "-", "self", ".", "v", ")", "*", "self", ".", "w", ".", "sigmoid", "(", ")", "\n", "", "else", ":", "\n", "# self.v += dv - (self.v - self.v_reset) * self.w.sigmoid()", "\n", "            ", "self", ".", "v", "+=", "(", "dv", "-", "(", "self", ".", "v", "-", "self", ".", "v_reset", ")", ")", "*", "self", ".", "w", ".", "sigmoid", "(", ")", "\n", "", "return", "self", ".", "spiking", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.PLIFNode.tau": [[24, 26], ["models.PLIFNode.w.data.sigmoid().item", "models.PLIFNode.w.data.sigmoid"], "methods", ["None"], ["", "def", "tau", "(", "self", ")", ":", "\n", "        ", "return", "1", "/", "self", ".", "w", ".", "data", ".", "sigmoid", "(", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.PLIFNode.extra_repr": [[27, 29], ["models.PLIFNode.tau"], "methods", ["home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.PLIFNode.tau"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "f'v_threshold={self.v_threshold}, v_reset={self.v_reset}, tau={self.tau()}'", "\n", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.StaticNetBase.__init__": [[63, 78], ["torch.Module.__init__", "torch.AvgPool1d", "torch.AvgPool1d", "torch.AvgPool1d"], "methods", ["home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.DVS128GestureNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "T", ",", "init_tau", ",", "use_plif", ",", "use_max_pool", ",", "alpha_learnable", ",", "detach_reset", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "T", "=", "T", "\n", "self", ".", "init_tau", "=", "init_tau", "\n", "self", ".", "use_plif", "=", "use_plif", "\n", "self", ".", "use_max_pool", "=", "use_max_pool", "\n", "self", ".", "alpha_learnable", "=", "alpha_learnable", "\n", "self", ".", "detach_reset", "=", "detach_reset", "\n", "self", ".", "train_times", "=", "0", "\n", "self", ".", "max_test_accuracy", "=", "0", "\n", "self", ".", "epoch", "=", "0", "\n", "self", ".", "static_conv", "=", "None", "\n", "self", ".", "conv", "=", "None", "\n", "self", ".", "fc", "=", "None", "\n", "self", ".", "boost", "=", "nn", ".", "AvgPool1d", "(", "10", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.StaticNetBase.forward": [[79, 86], ["models.StaticNetBase.static_conv", "models.StaticNetBase.boost().squeeze", "range", "models.StaticNetBase.boost().squeeze", "models.StaticNetBase.boost", "models.StaticNetBase.fc().unsqueeze", "models.StaticNetBase.boost", "models.StaticNetBase.fc().unsqueeze", "models.StaticNetBase.fc", "models.StaticNetBase.conv", "models.StaticNetBase.fc", "models.StaticNetBase.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "static_conv", "(", "x", ")", "\n", "out_spikes_counter", "=", "self", ".", "boost", "(", "self", ".", "fc", "(", "self", ".", "conv", "(", "x", ")", ")", ".", "unsqueeze", "(", "1", ")", ")", ".", "squeeze", "(", "1", ")", "\n", "for", "t", "in", "range", "(", "1", ",", "self", ".", "T", ")", ":", "\n", "            ", "out_spikes_counter", "+=", "self", ".", "boost", "(", "self", ".", "fc", "(", "self", ".", "conv", "(", "x", ")", ")", ".", "unsqueeze", "(", "1", ")", ")", ".", "squeeze", "(", "1", ")", "\n", "\n", "", "return", "out_spikes_counter", "\n", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.MNISTNet.__init__": [[88, 117], ["models.StaticNetBase.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Flatten", "torch.Flatten", "torch.Flatten", "spikingjelly.clock_driven.layer.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "spikingjelly.clock_driven.layer.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan"], "methods", ["home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.DVS128GestureNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "T", ",", "init_tau", ",", "use_plif", ",", "use_max_pool", ",", "alpha_learnable", ",", "detach_reset", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "T", ",", "init_tau", "=", "init_tau", ",", "use_plif", "=", "use_plif", ",", "use_max_pool", "=", "use_max_pool", ",", "alpha_learnable", "=", "alpha_learnable", ",", "detach_reset", "=", "detach_reset", ")", "\n", "\n", "self", ".", "static_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "1", ",", "128", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "\n", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "if", "use_max_pool", "else", "nn", ".", "AvgPool2d", "(", "2", ",", "2", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "\n", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "if", "use_max_pool", "else", "nn", ".", "AvgPool2d", "(", "2", ",", "2", ")", "\n", "\n", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Flatten", "(", ")", ",", "\n", "layer", ".", "Dropout", "(", "0.5", ",", "dropout_spikes", "=", "use_max_pool", ")", ",", "\n", "nn", ".", "Linear", "(", "128", "*", "7", "*", "7", ",", "128", "*", "4", "*", "4", ",", "bias", "=", "False", ")", ",", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "\n", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", ",", "\n", "layer", ".", "Dropout", "(", "0.5", ",", "dropout_spikes", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "128", "*", "4", "*", "4", ",", "100", ",", "bias", "=", "False", ")", ",", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "\n", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.Cifar10Net.__init__": [[123, 172], ["models.StaticNetBase.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Flatten", "torch.Flatten", "torch.Flatten", "spikingjelly.clock_driven.layer.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan"], "methods", ["home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.DVS128GestureNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "T", ",", "init_tau", ",", "use_plif", ",", "use_max_pool", ",", "alpha_learnable", ",", "detach_reset", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "T", ",", "init_tau", "=", "init_tau", ",", "use_plif", "=", "use_plif", ",", "use_max_pool", "=", "use_max_pool", ",", "alpha_learnable", "=", "alpha_learnable", ",", "detach_reset", "=", "detach_reset", ")", "\n", "self", ".", "static_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", "\n", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "\n", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "\n", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "\n", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", ",", "\n", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "if", "use_max_pool", "else", "nn", ".", "AvgPool2d", "(", "2", ",", "2", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "\n", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "\n", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "\n", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "if", "use_max_pool", "else", "nn", ".", "AvgPool2d", "(", "2", ",", "2", ")", "\n", "\n", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Flatten", "(", ")", ",", "\n", "layer", ".", "Dropout", "(", "0.5", ",", "dropout_spikes", "=", "use_max_pool", ")", ",", "\n", "nn", ".", "Linear", "(", "256", "*", "8", "*", "8", ",", "128", "*", "4", "*", "4", ",", "bias", "=", "False", ")", ",", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "\n", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", ",", "\n", "nn", ".", "Linear", "(", "128", "*", "4", "*", "4", ",", "100", ",", "bias", "=", "False", ")", ",", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "\n", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.NeuromorphicNet.__init__": [[212, 227], ["torch.Module.__init__", "torch.AvgPool1d", "torch.AvgPool1d", "torch.AvgPool1d"], "methods", ["home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.DVS128GestureNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "T", ",", "init_tau", ",", "use_plif", ",", "use_max_pool", ",", "alpha_learnable", ",", "detach_reset", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "T", "=", "T", "\n", "self", ".", "init_tau", "=", "init_tau", "\n", "self", ".", "use_plif", "=", "use_plif", "\n", "self", ".", "use_max_pool", "=", "use_max_pool", "\n", "self", ".", "alpha_learnable", "=", "alpha_learnable", "\n", "self", ".", "detach_reset", "=", "detach_reset", "\n", "\n", "self", ".", "train_times", "=", "0", "\n", "self", ".", "max_test_accuracy", "=", "0", "\n", "self", ".", "epoch", "=", "0", "\n", "self", ".", "conv", "=", "None", "\n", "self", ".", "fc", "=", "None", "\n", "self", ".", "boost", "=", "nn", ".", "AvgPool1d", "(", "10", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.NeuromorphicNet.forward": [[228, 234], ["x.permute.permute.permute", "models.NeuromorphicNet.boost().squeeze", "range", "models.NeuromorphicNet.boost().squeeze", "models.NeuromorphicNet.boost", "models.NeuromorphicNet.fc().unsqueeze", "models.NeuromorphicNet.boost", "models.NeuromorphicNet.fc().unsqueeze", "models.NeuromorphicNet.fc", "models.NeuromorphicNet.conv", "models.NeuromorphicNet.fc", "models.NeuromorphicNet.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ",", "4", ")", "# [T, N, 2, *, *]", "\n", "out_spikes_counter", "=", "self", ".", "boost", "(", "self", ".", "fc", "(", "self", ".", "conv", "(", "x", "[", "0", "]", ")", ")", ".", "unsqueeze", "(", "1", ")", ")", ".", "squeeze", "(", "1", ")", "\n", "for", "t", "in", "range", "(", "1", ",", "x", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "out_spikes_counter", "+=", "self", ".", "boost", "(", "self", ".", "fc", "(", "self", ".", "conv", "(", "x", "[", "t", "]", ")", ")", ".", "unsqueeze", "(", "1", ")", ")", ".", "squeeze", "(", "1", ")", "\n", "", "return", "out_spikes_counter", "\n", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.NMNISTNet.__init__": [[236, 242], ["models.NeuromorphicNet.__init__", "models.create_conv_sequential", "models.create_2fc"], "methods", ["home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.DVS128GestureNet.__init__", "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.create_conv_sequential", "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.create_2fc"], ["    ", "def", "__init__", "(", "self", ",", "T", ",", "init_tau", ",", "use_plif", ",", "use_max_pool", ",", "alpha_learnable", ",", "detach_reset", ",", "channels", ",", "number_layer", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "T", "=", "T", ",", "init_tau", "=", "init_tau", ",", "use_plif", "=", "use_plif", ",", "use_max_pool", "=", "use_max_pool", ",", "alpha_learnable", "=", "alpha_learnable", ",", "detach_reset", "=", "detach_reset", ")", "\n", "w", "=", "34", "\n", "h", "=", "34", "# \u539f\u59cb\u6570\u636e\u96c6\u5c3a\u5bf8", "\n", "self", ".", "conv", "=", "create_conv_sequential", "(", "2", ",", "channels", ",", "number_layer", "=", "number_layer", ",", "init_tau", "=", "init_tau", ",", "use_plif", "=", "use_plif", ",", "use_max_pool", "=", "use_max_pool", ",", "alpha_learnable", "=", "alpha_learnable", ",", "detach_reset", "=", "detach_reset", ")", "\n", "self", ".", "fc", "=", "create_2fc", "(", "channels", "=", "channels", ",", "w", "=", "w", ">>", "number_layer", ",", "h", "=", "h", ">>", "number_layer", ",", "dpp", "=", "0.5", ",", "class_num", "=", "10", ",", "init_tau", "=", "init_tau", ",", "use_plif", "=", "use_plif", ",", "alpha_learnable", "=", "alpha_learnable", ",", "detach_reset", "=", "detach_reset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.CIFAR10DVSNet.__init__": [[245, 253], ["models.NeuromorphicNet.__init__", "models.create_conv_sequential", "models.create_2fc"], "methods", ["home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.DVS128GestureNet.__init__", "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.create_conv_sequential", "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.create_2fc"], ["    ", "def", "__init__", "(", "self", ",", "T", ",", "init_tau", ",", "use_plif", ",", "use_max_pool", ",", "alpha_learnable", ",", "channels", ",", "number_layer", ",", "detach_reset", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "T", "=", "T", ",", "init_tau", "=", "init_tau", ",", "use_plif", "=", "use_plif", ",", "use_max_pool", "=", "use_max_pool", ",", "alpha_learnable", "=", "alpha_learnable", ",", "detach_reset", "=", "detach_reset", ")", "\n", "w", "=", "128", "\n", "h", "=", "128", "\n", "self", ".", "conv", "=", "create_conv_sequential", "(", "2", ",", "channels", ",", "number_layer", "=", "number_layer", ",", "init_tau", "=", "init_tau", ",", "use_plif", "=", "use_plif", ",", "\n", "use_max_pool", "=", "use_max_pool", ",", "alpha_learnable", "=", "alpha_learnable", ",", "detach_reset", "=", "detach_reset", ")", "\n", "self", ".", "fc", "=", "create_2fc", "(", "channels", "=", "channels", ",", "w", "=", "w", ">>", "number_layer", ",", "h", "=", "h", ">>", "number_layer", ",", "dpp", "=", "0.5", ",", "class_num", "=", "10", ",", "\n", "init_tau", "=", "init_tau", ",", "use_plif", "=", "use_plif", ",", "alpha_learnable", "=", "alpha_learnable", ",", "detach_reset", "=", "detach_reset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.Interpolate.__init__": [[256, 260], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.DVS128GestureNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "kwargs", "=", "kwargs", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.Interpolate.forward": [[260, 262], ["torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "F", ".", "interpolate", "(", "x", ",", "*", "self", ".", "args", ",", "**", "self", ".", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.ASLDVSNet.__init__": [[264, 272], ["models.NeuromorphicNet.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.Interpolate"], "methods", ["home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.DVS128GestureNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "T", ",", "init_tau", ",", "use_plif", ",", "use_max_pool", ",", "alpha_learnable", ",", "detach_reset", ",", "channels", ",", "number_layer", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "T", "=", "T", ",", "init_tau", "=", "init_tau", ",", "use_plif", "=", "use_plif", ",", "use_max_pool", "=", "use_max_pool", ",", "alpha_learnable", "=", "alpha_learnable", ",", "detach_reset", "=", "detach_reset", ")", "\n", "# input size 256 * 256", "\n", "w", "=", "256", "\n", "h", "=", "256", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "Interpolate", "(", "size", "=", "256", ",", "mode", "=", "'bilinear'", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.DVS128GestureNet.__init__": [[275, 283], ["models.NeuromorphicNet.__init__", "models.create_conv_sequential", "models.create_2fc"], "methods", ["home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.DVS128GestureNet.__init__", "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.create_conv_sequential", "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.create_2fc"], ["    ", "def", "__init__", "(", "self", ",", "T", ",", "init_tau", ",", "use_plif", ",", "use_max_pool", ",", "alpha_learnable", ",", "detach_reset", ",", "channels", ",", "number_layer", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "T", "=", "T", ",", "init_tau", "=", "init_tau", ",", "use_plif", "=", "use_plif", ",", "use_max_pool", "=", "use_max_pool", ",", "alpha_learnable", "=", "alpha_learnable", ",", "detach_reset", "=", "detach_reset", ")", "\n", "w", "=", "128", "\n", "h", "=", "128", "\n", "self", ".", "conv", "=", "create_conv_sequential", "(", "2", ",", "channels", ",", "number_layer", "=", "number_layer", ",", "init_tau", "=", "init_tau", ",", "use_plif", "=", "use_plif", ",", "\n", "use_max_pool", "=", "use_max_pool", ",", "alpha_learnable", "=", "alpha_learnable", ",", "detach_reset", "=", "detach_reset", ")", "\n", "self", ".", "fc", "=", "create_2fc", "(", "channels", "=", "channels", ",", "w", "=", "w", ">>", "number_layer", ",", "h", "=", "h", ">>", "number_layer", ",", "dpp", "=", "0.5", ",", "class_num", "=", "11", ",", "\n", "init_tau", "=", "init_tau", ",", "use_plif", "=", "use_plif", ",", "alpha_learnable", "=", "alpha_learnable", ",", "detach_reset", "=", "detach_reset", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.create_conv_sequential": [[30, 48], ["range", "torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "conv.extend", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "torch.MaxPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.BatchNorm2d", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "torch.MaxPool2d", "torch.AvgPool2d", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan"], "function", ["None"], ["", "", "def", "create_conv_sequential", "(", "in_channels", ",", "out_channels", ",", "number_layer", ",", "init_tau", ",", "use_plif", ",", "use_max_pool", ",", "alpha_learnable", ",", "detach_reset", ")", ":", "\n", "# \u9996\u5c42\u662fin_channels-out_channels", "\n", "# \u5269\u4f59number_layer - 1\u5c42\u90fd\u662fout_channels-out_channels", "\n", "    ", "conv", "=", "[", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_channels", ",", "out_channels", "=", "out_channels", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "if", "use_max_pool", "else", "nn", ".", "AvgPool2d", "(", "2", ",", "2", ")", "\n", "]", "\n", "\n", "for", "i", "in", "range", "(", "number_layer", "-", "1", ")", ":", "\n", "        ", "conv", ".", "extend", "(", "[", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "out_channels", ",", "out_channels", "=", "out_channels", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "if", "use_max_pool", "else", "nn", ".", "AvgPool2d", "(", "2", ",", "2", ")", "\n", "]", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "conv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.create_2fc": [[50, 59], ["torch.Sequential", "torch.Flatten", "spikingjelly.clock_driven.layer.Dropout", "torch.Linear", "spikingjelly.clock_driven.layer.Dropout", "torch.Linear", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "models.PLIFNode", "spikingjelly.clock_driven.neuron.LIFNode", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan", "spikingjelly.clock_driven.surrogate.ATan"], "function", ["None"], ["", "def", "create_2fc", "(", "channels", ",", "h", ",", "w", ",", "dpp", ",", "class_num", ",", "init_tau", ",", "use_plif", ",", "alpha_learnable", ",", "detach_reset", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Flatten", "(", ")", ",", "\n", "layer", ".", "Dropout", "(", "dpp", ")", ",", "\n", "nn", ".", "Linear", "(", "channels", "*", "h", "*", "w", ",", "channels", "*", "h", "*", "w", "//", "4", ",", "bias", "=", "False", ")", ",", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", ",", "\n", "layer", ".", "Dropout", "(", "dpp", ",", "dropout_spikes", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "channels", "*", "h", "*", "w", "//", "4", ",", "class_num", "*", "10", ",", "bias", "=", "False", ")", ",", "\n", "PLIFNode", "(", "init_tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", "if", "use_plif", "else", "LIFNode", "(", "tau", "=", "init_tau", ",", "surrogate_function", "=", "surrogate", ".", "ATan", "(", "learnable", "=", "alpha_learnable", ")", ",", "detach_reset", "=", "detach_reset", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.fangwei123456_Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron.codes.models.get_transforms": [[173, 210], ["torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.RandomAffine", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["None"], ["", "", "def", "get_transforms", "(", "dataset_name", ")", ":", "\n", "    ", "transform_train", "=", "None", "\n", "transform_test", "=", "None", "\n", "if", "dataset_name", "==", "'MNIST'", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomAffine", "(", "degrees", "=", "30", ",", "translate", "=", "(", "0.15", ",", "0.15", ")", ",", "scale", "=", "(", "0.85", ",", "1.11", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "0.1307", ",", "0.3081", ")", ",", "\n", "]", ")", "\n", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "0.1307", ",", "0.3081", ")", ",", "\n", "]", ")", "\n", "", "elif", "dataset_name", "==", "'FashionMNIST'", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "0.2860", ",", "0.3530", ")", ",", "\n", "]", ")", "\n", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "0.2860", ",", "0.3530", ")", ",", "\n", "]", ")", "\n", "", "elif", "dataset_name", "==", "'CIFAR10'", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "", "return", "transform_train", ",", "transform_test", "\n", "\n"]]}