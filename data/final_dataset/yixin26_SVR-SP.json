{"home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.Config.__init__": [[13, 50], ["config.Config.parse", "print", "args.__dict__.items", "os.path.join", "os.path.join", "os.path.join", "utils.ensure_dirs", "print", "print", "config.Config.__setattr__", "os.path.exists", "input", "shutil.rmtree", "str", "exit", "len", "open", "json.dump", "str().split", "os.path.join", "str"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.Config.parse", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.ensure_dirs"], ["    ", "def", "__init__", "(", "self", ",", "phase", ")", ":", "\n", "        ", "self", ".", "is_train", "=", "phase", "==", "'train'", "\n", "\n", "# init hyperparameters and parse from command-line", "\n", "parser", ",", "args", "=", "self", ".", "parse", "(", ")", "\n", "self", ".", "phase", "=", "phase", "\n", "\n", "print", "(", "\"-----Experiment Configuration-----\"", ")", "\n", "for", "k", ",", "v", "in", "args", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "            ", "print", "(", "k", ",", "v", ")", "\n", "self", ".", "__setattr__", "(", "k", ",", "v", ")", "\n", "\n", "#self.exp_name = 'exp_{}'.format(self.category)", "\n", "\n", "", "self", ".", "exp_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "proj_dir", ",", "self", ".", "exp_name", ")", "\n", "if", "phase", "==", "'train'", "and", "args", ".", "cont", "is", "not", "True", "and", "os", ".", "path", ".", "exists", "(", "self", ".", "exp_dir", ")", ":", "\n", "            ", "response", "=", "input", "(", "'Experiment log/model already exists, overwrite? (y/n)'", ")", "\n", "if", "response", "!=", "'y'", ":", "\n", "                ", "exit", "(", ")", "\n", "", "shutil", ".", "rmtree", "(", "self", ".", "exp_dir", ")", "\n", "\n", "", "self", ".", "log_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "exp_dir", ",", "'log'", ")", "\n", "self", ".", "model_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "exp_dir", ",", "'model'", ")", "\n", "ensure_dirs", "(", "[", "self", ".", "log_dir", ",", "self", ".", "model_dir", "]", ")", "\n", "\n", "# GPU usage", "\n", "self", ".", "parallel", "=", "False", "\n", "self", ".", "use_gpu", "=", "False", "\n", "if", "args", ".", "gpu_ids", "is", "not", "None", ":", "\n", "            ", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "str", "(", "args", ".", "gpu_ids", ")", "\n", "self", ".", "use_gpu", "=", "True", "\n", "if", "len", "(", "str", "(", "args", ".", "gpu_ids", ")", ".", "split", "(", "','", ")", ")", ">", "1", ":", "\n", "                ", "self", ".", "parallel", "=", "True", "\n", "", "", "print", "(", "'use gpu:'", ",", "self", ".", "use_gpu", ")", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "log_dir", ",", "'config.txt'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "                ", "json", ".", "dump", "(", "args", ".", "__dict__", ",", "f", ",", "indent", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.Config.parse": [[51, 59], ["argparse.ArgumentParser", "config.Config._add_basic_config_", "config.Config._add_dataset_config_", "config.Config._add_network_config_", "config.Config._add_training_config_", "argparse.ArgumentParser.parse_args"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.Config._add_basic_config_", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.Config._add_dataset_config_", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.Config._add_network_config_", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.Config._add_training_config_"], ["", "", "", "def", "parse", "(", "self", ")", ":", "\n", "        ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "self", ".", "_add_basic_config_", "(", "parser", ")", "\n", "self", ".", "_add_dataset_config_", "(", "parser", ")", "\n", "self", ".", "_add_network_config_", "(", "parser", ")", "\n", "self", ".", "_add_training_config_", "(", "parser", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "parser", ",", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.Config._add_basic_config_": [[60, 66], ["parser.add_argument_group", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument"], "methods", ["None"], ["", "def", "_add_basic_config_", "(", "self", ",", "parser", ")", ":", "\n", "        ", "group", "=", "parser", ".", "add_argument_group", "(", "'basic'", ")", "\n", "group", ".", "add_argument", "(", "'--proj_dir'", ",", "type", "=", "str", ",", "default", "=", "'./'", ",", "help", "=", "'where models saved'", ")", "\n", "group", ".", "add_argument", "(", "'--exp_name'", ",", "type", "=", "str", ",", "default", "=", "'test'", ",", "help", "=", "'experiment name'", ")", "\n", "group", ".", "add_argument", "(", "'-g'", ",", "'--gpu_ids'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'gpu to use, e.g. 0  0,1,2.'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'SDFNet'", ",", "choices", "=", "(", "'SDFNet'", ",", "'CamNet'", ")", ",", "help", "=", "'Model to use [\\'SDFNet, CamNet\\']'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.Config._add_dataset_config_": [[67, 82], ["parser.add_argument_group", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument"], "methods", ["None"], ["", "def", "_add_dataset_config_", "(", "self", ",", "parser", ")", ":", "\n", "        ", "group", "=", "parser", ".", "add_argument_group", "(", "'dataset'", ")", "\n", "group", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "20", ",", "help", "=", "'batch size'", ")", "\n", "group", ".", "add_argument", "(", "'--category'", ",", "type", "=", "str", ",", "default", "=", "'chair'", ",", "help", "=", "'shape category name'", ")", "\n", "group", ".", "add_argument", "(", "'--num_workers'", ",", "type", "=", "int", ",", "default", "=", "8", ",", "help", "=", "'number of workers for data loading'", ")", "\n", "group", ".", "add_argument", "(", "'--sdf_h5_path'", ",", "type", "=", "str", ",", "default", "=", "'/mnt/disk7/yixin/data/ShapeNet/SDF_v1'", ",", "help", "=", "'where sdf data is'", ")", "\n", "group", ".", "add_argument", "(", "'--render_h5_path'", ",", "type", "=", "str", ",", "default", "=", "'/mnt/disk7/yixin/data/ShapeNet/ShapeNetRenderingh5_v1'", ",", "help", "=", "'where render data is'", ")", "#the ground truth camera", "\n", "#group.add_argument('--render_h5_path', type=str, default='/mnt/disk7/yixin/data/ShapeNet/PretrainedEsth5', help='where render data is') #the estimated camera", "\n", "\n", "group", ".", "add_argument", "(", "'--id_path'", ",", "type", "=", "str", ",", "default", "=", "'/mnt/disk7/yixin/data/ShapeNet/filelists'", ")", "\n", "group", ".", "add_argument", "(", "'--mesh_obj_path'", ",", "type", "=", "str", ",", "default", "=", "'/mnt/disk7/yixin/data/ShapeNet/march_cube_objs_v1'", ",", "help", "=", "'where render data is'", ")", "\n", "group", ".", "add_argument", "(", "'--img_h'", ",", "type", "=", "int", ",", "default", "=", "137", ")", "\n", "group", ".", "add_argument", "(", "'--img_w'", ",", "type", "=", "int", ",", "default", "=", "137", ")", "\n", "group", ".", "add_argument", "(", "'--num_sample_points'", ",", "type", "=", "int", ",", "default", "=", "2048", ")", "\n", "group", ".", "add_argument", "(", "'--cat_limit'", ",", "type", "=", "int", ",", "default", "=", "36000", ",", "help", "=", "\"balance each category, 1500 * 24 = 36000\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.Config._add_network_config_": [[83, 89], ["parser.add_argument_group", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument"], "methods", ["None"], ["", "def", "_add_network_config_", "(", "self", ",", "parser", ")", ":", "\n", "        ", "group", "=", "parser", ".", "add_argument_group", "(", "'network'", ")", "\n", "group", ".", "add_argument", "(", "'--sdf_weight'", ",", "type", "=", "float", ",", "default", "=", "10.", ")", "\n", "group", ".", "add_argument", "(", "'--mask_weight'", ",", "type", "=", "float", ",", "default", "=", "4.0", ")", "\n", "group", ".", "add_argument", "(", "'--delta'", ",", "type", "=", "float", ",", "default", "=", "0.01", ")", "\n", "group", ".", "add_argument", "(", "'--use_tanh'", ",", "action", "=", "'store_true'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.Config._add_training_config_": [[90, 107], ["parser.add_argument_group", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument"], "methods", ["None"], ["", "def", "_add_training_config_", "(", "self", ",", "parser", ")", ":", "\n", "        ", "group", "=", "parser", ".", "add_argument_group", "(", "'training'", ")", "\n", "group", ".", "add_argument", "(", "'--nr_epochs'", ",", "type", "=", "int", ",", "default", "=", "50", ",", "help", "=", "'total number of epochs to train'", ")", "\n", "group", ".", "add_argument", "(", "'--wd'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "help", "=", "'weight decay'", ")", "\n", "group", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "1e-4", ",", "help", "=", "'initial learning rate'", ")", "\n", "group", ".", "add_argument", "(", "'--lr_step_size'", ",", "type", "=", "int", ",", "default", "=", "5", ",", "help", "=", "'step size for learning rate decay'", ")", "\n", "group", ".", "add_argument", "(", "'--lr_decay'", ",", "type", "=", "float", ",", "default", "=", "0.9", ",", "help", "=", "'factor for lr decay'", ")", "\n", "\n", "group", ".", "add_argument", "(", "'--continue'", ",", "dest", "=", "'cont'", ",", "action", "=", "'store_true'", ",", "help", "=", "'continue training from checkpoint'", ")", "\n", "group", ".", "add_argument", "(", "'--ckpt'", ",", "type", "=", "str", ",", "default", "=", "'latest'", ",", "required", "=", "False", ",", "help", "=", "'desired checkpoint to restore'", ")", "\n", "group", ".", "add_argument", "(", "'--reset_lr'", ",", "dest", "=", "'reset_lr'", ",", "action", "=", "'store_true'", ",", "help", "=", "'reset your learning rate'", ")", "\n", "group", ".", "add_argument", "(", "'--vis'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "help", "=", "'visualize output in training'", ")", "\n", "group", ".", "add_argument", "(", "'--save_frequency'", ",", "type", "=", "int", ",", "default", "=", "5", ",", "help", "=", "'save models every x epochs'", ")", "\n", "group", ".", "add_argument", "(", "'--val_frequency'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "help", "=", "'run validation every x iterations'", ")", "\n", "group", ".", "add_argument", "(", "'--vis_frequency'", ",", "type", "=", "int", ",", "default", "=", "100", ",", "help", "=", "'visualize output every x iterations'", ")", "\n", "\n", "group", ".", "add_argument", "(", "'--val'", ",", "type", "=", "bool", ",", "default", "=", "False", ",", "help", "=", "'with validation or not'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.get_config": [[7, 10], ["config.Config"], "function", ["None"], ["def", "get_config", "(", "phase", ")", ":", "\n", "    ", "config", "=", "Config", "(", "phase", ")", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.__init__": [[14, 33], ["utils.TrainClock", "agent.BaseAgent.build_net", "agent.BaseAgent.set_loss_function", "agent.BaseAgent.set_optimizer", "tensorboardX.SummaryWriter", "tensorboardX.SummaryWriter", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.Agent.build_net", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.set_loss_function", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.set_optimizer"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "self", ".", "log_dir", "=", "config", ".", "log_dir", "\n", "self", ".", "model_dir", "=", "config", ".", "model_dir", "\n", "self", ".", "clock", "=", "TrainClock", "(", ")", "\n", "self", ".", "batch_size", "=", "config", ".", "batch_size", "\n", "\n", "# build network", "\n", "self", ".", "net", "=", "self", ".", "build_net", "(", "config", ")", "\n", "\n", "# set loss function", "\n", "self", ".", "set_loss_function", "(", ")", "\n", "\n", "# set optimizer", "\n", "self", ".", "set_optimizer", "(", "config", ")", "\n", "\n", "# set tensorboard writer", "\n", "self", ".", "train_tb", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "self", ".", "log_dir", ",", "'train.events'", ")", ")", "\n", "self", ".", "val_tb", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "self", ".", "log_dir", ",", "'val.events'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.build_net": [[34, 37], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "build_net", "(", "self", ",", "config", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.set_loss_function": [[38, 41], ["torch.MSELoss().cuda", "torch.MSELoss().cuda", "torch.MSELoss().cuda", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss"], "methods", ["None"], ["", "def", "set_loss_function", "(", "self", ")", ":", "\n", "        ", "\"\"\"set loss function used in training\"\"\"", "\n", "self", ".", "criterion", "=", "nn", ".", "MSELoss", "(", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.set_optimizer": [[42, 46], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "agent.BaseAgent.net.parameters"], "methods", ["None"], ["", "def", "set_optimizer", "(", "self", ",", "config", ")", ":", "\n", "        ", "\"\"\"set optimizer and lr scheduler used in training\"\"\"", "\n", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "net", ".", "parameters", "(", ")", ",", "config", ".", "lr", ")", "\n", "self", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "self", ".", "optimizer", ",", "config", ".", "lr_step_size", ",", "config", ".", "lr_decay", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.save_ckpt": [[47, 69], ["isinstance", "agent.BaseAgent.net.cuda", "os.path.join", "print", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "agent.BaseAgent.clock.make_checkpoint", "agent.BaseAgent.net.module.cpu().state_dict", "agent.BaseAgent.optimizer.state_dict", "agent.BaseAgent.scheduler.state_dict", "agent.BaseAgent.clock.make_checkpoint", "agent.BaseAgent.net.cpu().state_dict", "agent.BaseAgent.optimizer.state_dict", "agent.BaseAgent.scheduler.state_dict", "agent.BaseAgent.net.module.cpu", "agent.BaseAgent.net.cpu"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.TrainClock.make_checkpoint", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.TrainClock.make_checkpoint"], ["", "def", "save_ckpt", "(", "self", ",", "name", "=", "None", ")", ":", "\n", "        ", "\"\"\"save checkpoint during training for future restore\"\"\"", "\n", "if", "name", "is", "None", ":", "\n", "            ", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "model_dir", ",", "\"ckpt_epoch{}.pth\"", ".", "format", "(", "self", ".", "clock", ".", "epoch", ")", ")", "\n", "print", "(", "\"Checkpoint saved at {}\"", ".", "format", "(", "save_path", ")", ")", "\n", "", "else", ":", "\n", "            ", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "model_dir", ",", "\"{}.pth\"", ".", "format", "(", "name", ")", ")", "\n", "", "if", "isinstance", "(", "self", ".", "net", ",", "nn", ".", "DataParallel", ")", ":", "\n", "            ", "torch", ".", "save", "(", "{", "\n", "'clock'", ":", "self", ".", "clock", ".", "make_checkpoint", "(", ")", ",", "\n", "'model_state_dict'", ":", "self", ".", "net", ".", "module", ".", "cpu", "(", ")", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state_dict'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'scheduler_state_dict'", ":", "self", ".", "scheduler", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "save_path", ")", "\n", "", "else", ":", "\n", "            ", "torch", ".", "save", "(", "{", "\n", "'clock'", ":", "self", ".", "clock", ".", "make_checkpoint", "(", ")", ",", "\n", "'model_state_dict'", ":", "self", ".", "net", ".", "cpu", "(", ")", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state_dict'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'scheduler_state_dict'", ":", "self", ".", "scheduler", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "save_path", ")", "\n", "", "self", ".", "net", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.load_ckpt": [[70, 87], ["os.path.join", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "print", "isinstance", "os.path.exists", "ValueError", "agent.BaseAgent.net.module.load_state_dict", "agent.BaseAgent.net.load_state_dict", "agent.BaseAgent.optimizer.load_state_dict", "agent.BaseAgent.scheduler.load_state_dict", "agent.BaseAgent.clock.restore_checkpoint", "torch.load.keys", "torch.load.keys", "torch.load.keys", "torch.load.keys", "torch.load.keys", "torch.load.keys", "torch.load.keys", "torch.load.keys", "torch.load.keys"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.TrainClock.restore_checkpoint"], ["", "def", "load_ckpt", "(", "self", ",", "name", "=", "None", ")", ":", "\n", "        ", "\"\"\"load checkpoint from saved checkpoint\"\"\"", "\n", "name", "=", "name", "if", "name", "==", "'latest'", "else", "\"ckpt_epoch{}\"", ".", "format", "(", "name", ")", "\n", "load_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "model_dir", ",", "\"{}.pth\"", ".", "format", "(", "name", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "load_path", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Checkpoint {} not exists.\"", ".", "format", "(", "load_path", ")", ")", "\n", "\n", "", "checkpoint", "=", "torch", ".", "load", "(", "load_path", ")", "\n", "print", "(", "\"Checkpoint loaded from {}\"", ".", "format", "(", "load_path", ")", ")", "\n", "if", "isinstance", "(", "self", ".", "net", ",", "nn", ".", "DataParallel", ")", ":", "\n", "            ", "self", ".", "net", ".", "module", ".", "load_state_dict", "(", "checkpoint", "[", "'model_state_dict'", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "net", ".", "load_state_dict", "(", "checkpoint", "[", "'model_state_dict'", "]", ")", "\n", "", "if", "(", "'optimizer_state_dict'", "in", "checkpoint", ".", "keys", "(", ")", "and", "'scheduler_state_dict'", "in", "checkpoint", ".", "keys", "(", ")", "and", "'clock'", "in", "checkpoint", ".", "keys", "(", ")", ")", ":", "\n", "            ", "self", ".", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer_state_dict'", "]", ")", "\n", "self", ".", "scheduler", ".", "load_state_dict", "(", "checkpoint", "[", "'scheduler_state_dict'", "]", ")", "\n", "self", ".", "clock", ".", "restore_checkpoint", "(", "checkpoint", "[", "'clock'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.forward": [[88, 91], ["None"], "methods", ["None"], ["", "", "@", "abstractmethod", "\n", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.update_network": [[92, 98], ["sum", "agent.BaseAgent.optimizer.zero_grad", "sum.backward", "agent.BaseAgent.optimizer.step", "loss_dict.values"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.FurthestPointSampling.backward"], ["", "def", "update_network", "(", "self", ",", "loss_dict", ")", ":", "\n", "        ", "\"\"\"update network by back propagation\"\"\"", "\n", "loss", "=", "sum", "(", "loss_dict", ".", "values", "(", ")", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.update_learning_rate": [[99, 103], ["agent.BaseAgent.train_tb.add_scalar", "agent.BaseAgent.scheduler.step"], "methods", ["None"], ["", "def", "update_learning_rate", "(", "self", ")", ":", "\n", "        ", "\"\"\"record and update learning rate\"\"\"", "\n", "self", ".", "train_tb", ".", "add_scalar", "(", "'learning_rate'", ",", "self", ".", "optimizer", ".", "param_groups", "[", "-", "1", "]", "[", "'lr'", "]", ",", "self", ".", "clock", ".", "epoch", ")", "\n", "self", ".", "scheduler", ".", "step", "(", "self", ".", "clock", ".", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.record_losses": [[104, 111], ["losses_values.items", "v.item", "tb.add_scalar", "loss_dict.items"], "methods", ["None"], ["", "def", "record_losses", "(", "self", ",", "loss_dict", ",", "mode", "=", "'train'", ")", ":", "\n", "        ", "losses_values", "=", "{", "k", ":", "v", ".", "item", "(", ")", "for", "k", ",", "v", "in", "loss_dict", ".", "items", "(", ")", "}", "\n", "\n", "# record loss to tensorboard", "\n", "tb", "=", "self", ".", "train_tb", "if", "mode", "==", "'train'", "else", "self", ".", "val_tb", "\n", "for", "k", ",", "v", "in", "losses_values", ".", "items", "(", ")", ":", "\n", "            ", "tb", ".", "add_scalar", "(", "k", ",", "v", ",", "self", ".", "clock", ".", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.train_func": [[112, 128], ["agent.BaseAgent.net.train", "agent.BaseAgent.forward", "agent.BaseAgent.update_network", "agent.BaseAgent.record_losses"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.forward", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.update_network", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.record_losses"], ["", "", "def", "train_func", "(", "self", ",", "data", ")", ":", "\n", "        ", "\"\"\"one step of training\"\"\"", "\n", "self", ".", "net", ".", "train", "(", ")", "\n", "\n", "outputs", ",", "losses", "=", "self", ".", "forward", "(", "data", ")", "\n", "\n", "if", "self", ".", "config", ".", "model", "==", "'SDFNet'", ":", "\n", "            ", "loss", "=", "{", "}", "\n", "loss", "[", "'sdf_loss'", "]", "=", "losses", "[", "'sdf_loss'", "]", "+", "losses", "[", "'regularization_loss'", "]", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "\n", "\n", "", "self", ".", "update_network", "(", "loss", ")", "\n", "self", ".", "record_losses", "(", "losses", ",", "'train'", ")", "\n", "\n", "return", "outputs", ",", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.infer_func": [[129, 132], ["agent.BaseAgent.net.eval", "agent.BaseAgent.infering"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.Agent.eval", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.Agent.infering"], ["", "def", "infer_func", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "net", ".", "eval", "(", ")", "\n", "return", "self", ".", "infering", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.val_func": [[133, 143], ["agent.BaseAgent.net.eval", "agent.BaseAgent.record_losses", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "agent.BaseAgent.forward"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.Agent.eval", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.record_losses", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.forward"], ["", "def", "val_func", "(", "self", ",", "data", ")", ":", "\n", "        ", "\"\"\"one step of validation\"\"\"", "\n", "self", ".", "net", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs", ",", "losses", "=", "self", ".", "forward", "(", "data", ")", "\n", "\n", "", "self", ".", "record_losses", "(", "losses", ",", "'validation'", ")", "\n", "\n", "return", "outputs", ",", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.visualize_batch": [[144, 147], ["None"], "methods", ["None"], ["", "def", "visualize_batch", "(", "self", ",", "data", ",", "mode", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"write visualization results to tensorboard writer\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.FurthestPointSampling.forward": [[152, 171], ["xyz.is_contiguous", "xyz.size", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "sampling_cuda.furthest_point_sampling_wrapper", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "xyz", ":", "torch", ".", "Tensor", ",", "npoint", ":", "int", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n        Uses iterative furthest point sampling to select a set of npoint features that have the largest\n        minimum distance\n        :param ctx:\n        :param xyz: (B, N, 3) where N > npoint\n        :param npoint: int, number of features in the sampled set\n        :return:\n             output: (B, npoint) tensor containing the set\n        \"\"\"", "\n", "assert", "xyz", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "N", ",", "_", "=", "xyz", ".", "size", "(", ")", "\n", "output", "=", "torch", ".", "cuda", ".", "IntTensor", "(", "B", ",", "npoint", ")", "\n", "temp", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "N", ")", ".", "fill_", "(", "1e10", ")", "\n", "\n", "sampling_cuda", ".", "furthest_point_sampling_wrapper", "(", "B", ",", "N", ",", "npoint", ",", "xyz", ",", "temp", ",", "output", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.FurthestPointSampling.backward": [[172, 175], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "xyz", ",", "a", "=", "None", ")", ":", "\n", "        ", "return", "None", ",", "None", "\n", "", "", "furthest_point_sample", "=", "FurthestPointSampling", ".", "apply", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.Agent.__init__": [[183, 190], ["agent.BaseAgent.__init__", "agent.Agent.set_loss_function"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.TrainClock.__init__", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.set_loss_function"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "Agent", ",", "self", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "mask_weight", "=", "config", ".", "mask_weight", "\n", "self", ".", "sdf_weight", "=", "config", ".", "sdf_weight", "\n", "self", ".", "delta", "=", "config", ".", "delta", "\n", "\n", "self", ".", "set_loss_function", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.Agent.build_net": [[191, 198], ["sdfnet.get_model", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "net.cuda.cuda.cuda"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.get_model"], ["", "def", "build_net", "(", "self", ",", "config", ")", ":", "\n", "        ", "net", "=", "get_model", "(", "config", ")", "\n", "if", "config", ".", "parallel", ":", "\n", "            ", "net", "=", "nn", ".", "DataParallel", "(", "net", ")", "\n", "", "if", "config", ".", "use_gpu", ":", "\n", "            ", "net", "=", "net", ".", "cuda", "(", ")", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.Agent.eval": [[199, 206], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.mean.detach", "torch.mean.detach", "torch.mean.detach", "torch.mean.detach", "torch.mean.detach", "torch.mean.detach"], "methods", ["None"], ["", "def", "eval", "(", "self", ",", "gt_sdf", ",", "pred_sdf", ")", ":", "\n", "        ", "zero", "=", "0.0", "\n", "gt_sign", "=", "gt_sdf", ">", "zero", "\n", "pred_sign", "=", "pred_sdf", ">", "zero", "\n", "accuracy", "=", "torch", ".", "mean", "(", "(", "gt_sign", "==", "pred_sign", ")", ".", "float", "(", ")", ")", "\n", "sdf_loss_realvalue", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "gt_sdf", "-", "pred_sdf", "/", "self", ".", "sdf_weight", ")", ")", "\n", "return", "accuracy", ".", "detach", "(", ")", ",", "sdf_loss_realvalue", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.Agent.forward": [[207, 242], ["data[].contiguous", "data[].contiguous", "data[].transpose().transpose().contiguous", "data[].contiguous", "furthest_point_sample().to", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "agent.Agent.net", "agent.Agent.net.named_parameters", "agent.Agent.eval", "sample_pt.cuda.cuda.cuda", "target_sdf.cuda.cuda.cuda", "img.cuda.cuda.cuda", "trans_mat.cuda.cuda.cuda", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "data[].transpose().transpose", "furthest_point_sample", "furthest_point_sample().to.unsqueeze().expand", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "abs", "data[].transpose", "furthest_point_sample().to.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.Agent.eval"], ["", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "sample_pt", "=", "data", "[", "'sdf_pt'", "]", ".", "contiguous", "(", ")", "\n", "target_sdf", "=", "data", "[", "'sdf_val'", "]", ".", "contiguous", "(", ")", "\n", "img", "=", "data", "[", "'img'", "]", ".", "transpose", "(", "2", ",", "3", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "trans_mat", "=", "data", "[", "'trans_mat'", "]", ".", "contiguous", "(", ")", "\n", "\n", "if", "self", ".", "config", ".", "use_gpu", ":", "\n", "            ", "sample_pt", "=", "sample_pt", ".", "cuda", "(", ")", "\n", "target_sdf", "=", "target_sdf", ".", "cuda", "(", ")", "\n", "img", "=", "img", ".", "cuda", "(", ")", "\n", "trans_mat", "=", "trans_mat", ".", "cuda", "(", ")", "\n", "\n", "", "choice", "=", "furthest_point_sample", "(", "sample_pt", ",", "2048", ")", ".", "to", "(", "torch", ".", "int64", ")", "\n", "sample_pt", "=", "torch", ".", "gather", "(", "sample_pt", ",", "dim", "=", "1", ",", "index", "=", "choice", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ")", "\n", "target_sdf", "=", "torch", ".", "gather", "(", "target_sdf", ",", "dim", "=", "1", ",", "index", "=", "choice", ")", "\n", "\n", "output_sdf", "=", "self", ".", "net", "(", "img", ",", "sample_pt", ",", "trans_mat", ")", "\n", "\n", "weight_mask", "=", "(", "target_sdf", "<=", "self", ".", "delta", ")", "*", "self", ".", "mask_weight", "+", "(", "target_sdf", ">", "self", ".", "delta", ")", "\n", "sdf_loss", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "target_sdf", "*", "self", ".", "sdf_weight", "-", "output_sdf", ")", "*", "weight_mask", ")", "*", "1000", "\n", "\n", "#add regularization", "\n", "regularization_loss", "=", "0", "\n", "lamda", "=", "1e-6", "\n", "for", "name", ",", "param", "in", "self", ".", "net", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "'bias'", "not", "in", "name", ":", "\n", "                ", "regularization_loss", "+=", "torch", ".", "sum", "(", "abs", "(", "param", ")", ")", "\n", "", "", "regularization_loss", "*=", "lamda", "\n", "\n", "accuracy", ",", "sdf_loss_realvalue", "=", "self", ".", "eval", "(", "target_sdf", ",", "output_sdf", ")", "\n", "\n", "return", "output_sdf", ",", "{", "\"sdf_loss\"", ":", "sdf_loss", ",", "\n", "\"accuracy\"", ":", "accuracy", ",", "\n", "\"sdf_loss_realvalue\"", ":", "sdf_loss_realvalue", ",", "\n", "\"regularization_loss\"", ":", "regularization_loss", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.Agent.infering": [[244, 256], ["data[].contiguous", "data[].transpose().transpose().contiguous", "data[].contiguous", "agent.Agent.net", "sample_pt.cuda.cuda.cuda", "img.cuda.cuda.cuda", "trans_mat.cuda.cuda.cuda", "data[].transpose().transpose", "data[].transpose"], "methods", ["None"], ["", "def", "infering", "(", "self", ",", "data", ")", ":", "\n", "        ", "sample_pt", "=", "data", "[", "'sdf_pt'", "]", ".", "contiguous", "(", ")", "\n", "img", "=", "data", "[", "'img'", "]", ".", "transpose", "(", "2", ",", "3", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "trans_mat", "=", "data", "[", "'trans_mat'", "]", ".", "contiguous", "(", ")", "\n", "if", "self", ".", "config", ".", "use_gpu", ":", "\n", "            ", "sample_pt", "=", "sample_pt", ".", "cuda", "(", ")", "\n", "img", "=", "img", ".", "cuda", "(", ")", "\n", "trans_mat", "=", "trans_mat", ".", "cuda", "(", ")", "\n", "\n", "", "output_sdf", "=", "self", ".", "net", "(", "img", ",", "sample_pt", ",", "trans_mat", ")", "\n", "\n", "return", "output_sdf", "", "", "", ""]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.get_agent": [[178, 180], ["agent.Agent"], "function", ["None"], ["def", "get_agent", "(", "config", ")", ":", "\n", "    ", "return", "Agent", "(", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.train.main": [[9, 63], ["config.get_config", "agent.get_agent", "dataset.get_dataloader", "range", "agent.get_agent.load_ckpt", "dataset.get_dataloader.dataset.resample_data", "tqdm.tqdm", "enumerate", "print", "print", "print", "print", "agent.get_agent.update_learning_rate", "print", "clock.tock", "agent.get_agent.save_ckpt", "agent.get_agent.train_func", "tqdm.tqdm.set_description", "tqdm.tqdm.set_postfix", "clock.tick", "open", "logfile.write", "agent.get_agent.save_ckpt", "collections.OrderedDict", "v.item", "losses.items"], "function", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.get_config", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.get_agent", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.get_dataloader", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.load_ckpt", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.SDFdata.resample_data", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.update_learning_rate", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.TrainClock.tock", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.save_ckpt", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.train_func", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.TrainClock.tick", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.save_ckpt"], ["def", "main", "(", ")", ":", "\n", "    ", "torch", ".", "backends", ".", "cudnn", ".", "enabled", "=", "False", "\n", "\n", "# create experiment config", "\n", "config", "=", "get_config", "(", "'train'", ")", "\n", "# create network and training agent", "\n", "tr_agent", "=", "get_agent", "(", "config", ")", "\n", "\n", "# load from checkpoint if provided", "\n", "if", "config", ".", "cont", ":", "\n", "        ", "tr_agent", ".", "load_ckpt", "(", "config", ".", "ckpt", ")", "\n", "\n", "# create dataloader", "\n", "", "train_loader", "=", "get_dataloader", "(", "'train'", ",", "config", ")", "\n", "\n", "# start training", "\n", "clock", "=", "tr_agent", ".", "clock", "\n", "for", "e", "in", "range", "(", "clock", ".", "epoch", ",", "config", ".", "nr_epochs", ")", ":", "\n", "        ", "train_loader", ".", "dataset", ".", "resample_data", "(", ")", "\n", "pbar", "=", "tqdm", "(", "train_loader", ")", "\n", "tot_sdf_loss", ",", "tot_accuracy", ",", "tot_sdf_loss_realvalue", ",", "tot_regularization_loss", "=", "0", ",", "0", ",", "0", ",", "0", "\n", "num", "=", "0", "\n", "for", "b", ",", "data", "in", "enumerate", "(", "pbar", ")", ":", "\n", "            ", "outputs", ",", "losses", "=", "tr_agent", ".", "train_func", "(", "data", ")", "\n", "pbar", ".", "set_description", "(", "\"EPOCH[{}][{}]\"", ".", "format", "(", "e", ",", "b", ")", ")", "\n", "pbar", ".", "set_postfix", "(", "OrderedDict", "(", "{", "k", ":", "'%.5f'", "%", "v", ".", "item", "(", ")", "for", "k", ",", "v", "in", "losses", ".", "items", "(", ")", "}", ")", ")", "\n", "\n", "tot_sdf_loss", "+=", "losses", "[", "\"sdf_loss\"", "]", "\n", "tot_accuracy", "+=", "losses", "[", "\"accuracy\"", "]", "\n", "tot_sdf_loss_realvalue", "+=", "losses", "[", "\"sdf_loss_realvalue\"", "]", "\n", "tot_regularization_loss", "+=", "losses", "[", "\"regularization_loss\"", "]", "\n", "\n", "num", "+=", "1", "\n", "clock", ".", "tick", "(", ")", "\n", "\n", "", "print", "(", "'tot_sdf_loss={}'", ".", "format", "(", "tot_sdf_loss", "/", "num", ")", ")", "\n", "print", "(", "'tot_accuracy={}'", ".", "format", "(", "tot_accuracy", "/", "num", ")", ")", "\n", "print", "(", "'tot_sdf_loss_realvalue={}'", ".", "format", "(", "tot_sdf_loss_realvalue", "/", "num", ")", ")", "\n", "print", "(", "'tot_regularization_loss={}'", ".", "format", "(", "tot_regularization_loss", "/", "num", ")", ")", "\n", "\n", "with", "open", "(", "config", ".", "exp_name", "+", "'_log.txt'", ",", "'a'", ")", "as", "logfile", ":", "\n", "            ", "logtt", "=", "'Epoch {}/{} - lr: {} - tot_sdf_loss: {} - tot_accuracy: {} - tot_sdf_loss_realvalue: {} \\n'", ".", "format", "(", "\n", "e", ",", "config", ".", "nr_epochs", ",", "tr_agent", ".", "optimizer", ".", "param_groups", "[", "-", "1", "]", "[", "'lr'", "]", ",", "tot_sdf_loss", "/", "num", ",", "tot_accuracy", "/", "num", ",", "tot_sdf_loss_realvalue", "/", "num", ")", "\n", "logfile", ".", "write", "(", "logtt", ")", "\n", "\n", "# update lr", "\n", "", "tr_agent", ".", "update_learning_rate", "(", ")", "\n", "print", "(", "'update learning rate={}'", ".", "format", "(", "tr_agent", ".", "optimizer", ".", "param_groups", "[", "-", "1", "]", "[", "'lr'", "]", ")", ")", "\n", "\n", "if", "clock", ".", "epoch", "%", "config", ".", "save_frequency", "==", "0", ":", "\n", "            ", "tr_agent", ".", "save_ckpt", "(", ")", "\n", "\n", "", "clock", ".", "tock", "(", ")", "\n", "tr_agent", ".", "save_ckpt", "(", "'latest'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.SDFdata.__init__": [[36, 73], ["config.category.split", "dataset.get_all_info", "dataset.SDFdata.categorys.items", "list", "print", "os.path.join", "dataset.getids", "range", "min", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.get_all_info", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.getids"], ["    ", "def", "__init__", "(", "self", ",", "phase", ",", "config", ",", "shuffle", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "\n", "self", ".", "sdf_h5_path", "=", "config", ".", "sdf_h5_path", "\n", "self", ".", "render_h5_path", "=", "config", ".", "render_h5_path", "\n", "self", ".", "mesh_obj_path", "=", "config", ".", "mesh_obj_path", "\n", "self", ".", "id_path", "=", "config", ".", "id_path", "\n", "self", ".", "categorys", "=", "config", ".", "category", ".", "split", "(", "','", ")", "\n", "self", ".", "gen_num_pt", "=", "config", ".", "num_sample_points", "\n", "\n", "lst_dir", ",", "cats", ",", "all_cats", ",", "raw_dirs", "=", "get_all_info", "(", "self", ".", "id_path", ")", "\n", "if", "'all'", "in", "self", ".", "categorys", ":", "\n", "            ", "self", ".", "categorys", "=", "cats", "\n", "", "else", ":", "\n", "            ", "used_categorys", "=", "{", "}", "\n", "for", "c", "in", "self", ".", "categorys", ":", "\n", "                ", "used_categorys", "[", "c", "]", "=", "cats", "[", "c", "]", "\n", "", "self", ".", "categorys", "=", "used_categorys", "\n", "\n", "", "self", ".", "views", "=", "24", "\n", "self", ".", "cats_limit", "=", "{", "}", "\n", "self", ".", "epoch_amount", "=", "0", "\n", "self", ".", "ids", "=", "[", "]", "\n", "for", "cat_name", ",", "cat_id", "in", "self", ".", "categorys", ".", "items", "(", ")", ":", "\n", "            ", "cat_list", "=", "os", ".", "path", ".", "join", "(", "self", ".", "id_path", ",", "cat_id", "+", "'_'", "+", "phase", "+", "'.lst'", ")", "\n", "idlist", "=", "getids", "(", "cat_list", ",", "self", ".", "sdf_h5_path", ",", "cat_id", ",", "self", ".", "views", ")", "\n", "self", ".", "ids", "+=", "idlist", "\n", "if", "phase", "==", "'train'", ":", "\n", "                ", "self", ".", "cats_limit", "[", "cat_id", "]", "=", "min", "(", "len", "(", "idlist", ")", ",", "config", ".", "cat_limit", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "cats_limit", "[", "cat_id", "]", "=", "len", "(", "idlist", ")", "\n", "", "self", ".", "epoch_amount", "+=", "self", ".", "cats_limit", "[", "cat_id", "]", "\n", "\n", "", "self", ".", "data_order", "=", "list", "(", "range", "(", "len", "(", "self", ".", "ids", ")", ")", ")", "\n", "self", ".", "order", "=", "self", ".", "data_order", "#self.order would be changed in each iteration", "\n", "print", "(", "'num of '", ",", "phase", ",", "' data:'", ",", "self", ".", "epoch_amount", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.SDFdata.__len__": [[74, 76], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "epoch_amount", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.SDFdata.resample_data": [[77, 81], ["dataset.SDFdata.refill_data_order", "print"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.SDFdata.refill_data_order"], ["", "def", "resample_data", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "shuffle", ":", "\n", "            ", "self", ".", "order", "=", "self", ".", "refill_data_order", "(", ")", "\n", "print", "(", "\"data order reordered!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.SDFdata.refill_data_order": [[82, 95], ["copy.deepcopy", "numpy.random.shuffle", "len", "dataset.SDFdata.cats_limit.items", "epoch_order.append"], "methods", ["None"], ["", "", "def", "refill_data_order", "(", "self", ")", ":", "\n", "        ", "temp_order", "=", "copy", ".", "deepcopy", "(", "self", ".", "data_order", ")", "\n", "cats_quota", "=", "{", "key", ":", "value", "for", "key", ",", "value", "in", "self", ".", "cats_limit", ".", "items", "(", ")", "}", "\n", "np", ".", "random", ".", "shuffle", "(", "temp_order", ")", "\n", "pointer", "=", "0", "\n", "epoch_order", "=", "[", "]", "\n", "while", "len", "(", "epoch_order", ")", "<", "self", ".", "epoch_amount", ":", "\n", "            ", "cat_id", ",", "_", ",", "_", "=", "self", ".", "ids", "[", "temp_order", "[", "pointer", "]", "]", "\n", "if", "cats_quota", "[", "cat_id", "]", ">", "0", ":", "\n", "                ", "epoch_order", ".", "append", "(", "temp_order", "[", "pointer", "]", ")", "\n", "cats_quota", "[", "cat_id", "]", "-=", "1", "\n", "", "pointer", "+=", "1", "\n", "", "return", "epoch_order", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.SDFdata.get_sdf_h5": [[96, 112], ["h5py.File", "h5py.File.close", "[].astype", "Exception", "h5py.File.keys", "h5py.File.keys"], "methods", ["None"], ["", "def", "get_sdf_h5", "(", "self", ",", "sdf_h5_file", ",", "cat_id", ",", "obj", ")", ":", "\n", "        ", "h5_f", "=", "h5py", ".", "File", "(", "sdf_h5_file", ",", "'r'", ")", "\n", "try", ":", "\n", "            ", "if", "(", "'pc_sdf_sample'", "in", "h5_f", ".", "keys", "(", ")", "\n", "and", "'sdf_params'", "in", "h5_f", ".", "keys", "(", ")", ")", ":", "\n", "                ", "sample_sdf", "=", "h5_f", "[", "'pc_sdf_sample'", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "sample_sdf", ".", "shape", "[", "1", "]", "==", "4", ":", "\n", "                    ", "sample_pt", ",", "sample_sdf_val", "=", "sample_sdf", "[", ":", ",", ":", "3", "]", ",", "sample_sdf", "[", ":", ",", "3", "]", "\n", "", "else", ":", "\n", "                    ", "sample_pt", ",", "sample_sdf_val", "=", "None", ",", "sample_sdf", "[", ":", ",", "0", "]", "\n", "", "sdf_params", "=", "h5_f", "[", "'sdf_params'", "]", "[", ":", "]", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "cat_id", ",", "obj", ",", "\"no sdf and sample\"", ")", "\n", "", "", "finally", ":", "\n", "            ", "h5_f", ".", "close", "(", ")", "\n", "", "return", "sample_pt", ",", "sample_sdf_val", ",", "sdf_params", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.SDFdata.get_img": [[113, 122], ["h5py.File", "[].astype", "numpy.clip", "numpy.clip.astype"], "methods", ["None"], ["", "def", "get_img", "(", "self", ",", "img_h5", ")", ":", "\n", "        ", "with", "h5py", ".", "File", "(", "img_h5", ",", "'r'", ")", "as", "h5_f", ":", "\n", "            ", "trans_mat", "=", "h5_f", "[", "\"trans_mat\"", "]", "[", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_raw", "=", "h5_f", "[", "\"img_arr\"", "]", "[", ":", "]", "\n", "img_arr", "=", "img_raw", "[", ":", ",", ":", ",", ":", "3", "]", "\n", "img_arr", "=", "np", ".", "clip", "(", "img_arr", ",", "0", ",", "255", ")", "\n", "img_arr", "=", "img_arr", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.", "\n", "\n", "return", "img_arr", ",", "trans_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.SDFdata.__getitem__": [[123, 139], ["os.path.join", "os.path.join", "dataset.SDFdata.get_sdf_h5", "dataset.SDFdata.get_img", "os.path.join.split"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.SDFdata.get_sdf_h5", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.SDFdata.get_img"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "cat_id", ",", "sdf_name", ",", "view", "=", "self", ".", "ids", "[", "self", ".", "order", "[", "index", "]", "]", "\n", "sdf_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "sdf_h5_path", ",", "cat_id", ",", "sdf_name", ",", "'ori_sample.h5'", ")", "\n", "render_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "render_h5_path", ",", "cat_id", ",", "sdf_name", ",", "\"%02d.h5\"", "%", "view", ")", "\n", "\n", "sample_pt", ",", "sample_sdf_val", ",", "sdf_params", "=", "self", ".", "get_sdf_h5", "(", "sdf_path", ",", "cat_id", ",", "sdf_name", ")", "\n", "img", ",", "trans_mat", "=", "self", ".", "get_img", "(", "render_path", ")", "\n", "\n", "return", "{", "'sdf_pt'", ":", "sample_pt", ",", "\n", "'sdf_val'", ":", "sample_sdf_val", ",", "\n", "'sdf_params'", ":", "sdf_params", ",", "\n", "'img'", ":", "img", ",", "#HxWx4 (137x137)", "\n", "'trans_mat'", ":", "trans_mat", ",", "#3x4", "\n", "'cat_id'", ":", "cat_id", ",", "\n", "'view_id'", ":", "view", ",", "\n", "'obj_nm'", ":", "render_path", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.get_dataloader": [[10, 17], ["dataset.SDFdata", "torch.utils.data.DataLoader", "numpy.random.seed"], "function", ["None"], ["def", "get_dataloader", "(", "phase", ",", "config", ")", ":", "\n", "    ", "is_shuffle", "=", "phase", "==", "'train'", "\n", "\n", "dataset", "=", "SDFdata", "(", "phase", ",", "config", ",", "shuffle", "=", "is_shuffle", ")", "\n", "dataloader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "config", ".", "batch_size", ",", "shuffle", "=", "is_shuffle", ",", "num_workers", "=", "config", ".", "num_workers", ",", "\n", "worker_init_fn", "=", "np", ".", "random", ".", "seed", "(", ")", ")", "\n", "return", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.get_all_info": [[18, 23], ["open", "json.load"], "function", ["None"], ["", "def", "get_all_info", "(", "CUR_PATH", ")", ":", "\n", "    ", "with", "open", "(", "CUR_PATH", "+", "'/info.json'", ")", "as", "json_file", ":", "\n", "        ", "data", "=", "json", ".", "load", "(", "json_file", ")", "\n", "lst_dir", ",", "cats", ",", "all_cats", ",", "raw_dirs", "=", "data", "[", "\"lst_dir\"", "]", ",", "data", "[", "'cats'", "]", ",", "data", "[", "'all_cats'", "]", ",", "data", "[", "\"raw_dirs_v1\"", "]", "\n", "", "return", "lst_dir", ",", "cats", ",", "all_cats", ",", "raw_dirs", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.getids": [[24, 34], ["open", "f.read().splitlines", "os.path.join", "os.path.exists", "f.read", "line.strip", "range", "line.strip"], "function", ["None"], ["", "def", "getids", "(", "info_dir", ",", "sdf_h5_path", ",", "cat_id", ",", "num_views", ")", ":", "\n", "    ", "ids", "=", "[", "]", "\n", "with", "open", "(", "info_dir", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "lines", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "for", "line", "in", "lines", ":", "\n", "            ", "sdf_path", "=", "os", ".", "path", ".", "join", "(", "sdf_h5_path", ",", "cat_id", ",", "line", ".", "strip", "(", ")", ",", "'ori_sample.h5'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "sdf_path", ")", ":", "\n", "                ", "for", "render", "in", "range", "(", "num_views", ")", ":", "\n", "                    ", "ids", "+=", "[", "(", "cat_id", ",", "line", ".", "strip", "(", ")", ",", "render", ")", "]", "\n", "", "", "", "", "return", "ids", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdf2obj.to_binary": [[26, 38], ["open", "open.write", "open.write", "open.write", "struct.pack", "open.write", "struct.pack", "open.write", "open.close", "struct.pack", "struct.pack", "struct.pack", "len"], "function", ["None"], ["def", "to_binary", "(", "res", ",", "pos", ",", "pred_sdf_val_all", ",", "sdf_file", ")", ":", "\n", "    ", "f_sdf_bin", "=", "open", "(", "sdf_file", ",", "'wb'", ")", "\n", "\n", "f_sdf_bin", ".", "write", "(", "struct", ".", "pack", "(", "'i'", ",", "-", "res", ")", ")", "# write an int", "\n", "f_sdf_bin", ".", "write", "(", "struct", ".", "pack", "(", "'i'", ",", "res", ")", ")", "# write an int", "\n", "f_sdf_bin", ".", "write", "(", "struct", ".", "pack", "(", "'i'", ",", "res", ")", ")", "# write an int", "\n", "\n", "positions", "=", "struct", ".", "pack", "(", "'d'", "*", "len", "(", "pos", ")", ",", "*", "pos", ")", "\n", "f_sdf_bin", ".", "write", "(", "positions", ")", "\n", "val", "=", "struct", ".", "pack", "(", "'=%sf'", "%", "pred_sdf_val_all", ".", "shape", "[", "0", "]", ",", "*", "(", "pred_sdf_val_all", ")", ")", "\n", "f_sdf_bin", ".", "write", "(", "val", ")", "\n", "f_sdf_bin", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdf2obj.create_obj": [[39, 52], ["os.path.join", "os.makedirs", "os.path.join", "os.path.join", "sdf2obj.to_binary", "sdf2obj.create_one_cube_obj", "os.system", "isinstance"], "function", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdf2obj.to_binary", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdf2obj.create_one_cube_obj"], ["", "def", "create_obj", "(", "pred_sdf_val", ",", "sdf_params", ",", "dir", ",", "cat_id", ",", "obj_nm", ",", "view_id", ",", "i", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "view_id", ",", "str", ")", ":", "\n", "        ", "view_id", "=", "\"%02d\"", "%", "view_id", "\n", "", "dir", "=", "os", ".", "path", ".", "join", "(", "dir", ",", "cat_id", ")", "\n", "os", ".", "makedirs", "(", "dir", ",", "exist_ok", "=", "True", ")", "\n", "obj_nm", "=", "cat_id", "+", "\"_\"", "+", "obj_nm", "\n", "cube_obj_file", "=", "os", ".", "path", ".", "join", "(", "dir", ",", "obj_nm", "+", "\"_\"", "+", "view_id", "+", "\".obj\"", ")", "\n", "sdf_file", "=", "os", ".", "path", ".", "join", "(", "dir", ",", "obj_nm", "+", "\"_\"", "+", "view_id", "+", "\".dist\"", ")", "\n", "to_binary", "(", "(", "RESOLUTION", "-", "1", ")", ",", "sdf_params", ",", "pred_sdf_val", ",", "sdf_file", ")", "\n", "create_one_cube_obj", "(", "\"/mnt/disk7/yixin/DISN/isosurface/computeMarchingCubes\"", ",", "i", ",", "sdf_file", ",", "cube_obj_file", ")", "\n", "command_str", "=", "\"rm -rf \"", "+", "sdf_file", "\n", "#print(\"command:\", command_str)", "\n", "os", ".", "system", "(", "command_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdf2obj.create_one_cube_obj": [[53, 57], ["os.system", "str"], "function", ["None"], ["", "def", "create_one_cube_obj", "(", "marching_cube_command", ",", "i", ",", "sdf_file", ",", "cube_obj_file", ")", ":", "\n", "    ", "command_str", "=", "marching_cube_command", "+", "\" \"", "+", "sdf_file", "+", "\" \"", "+", "cube_obj_file", "+", "\" -i \"", "+", "str", "(", "i", ")", "\n", "os", ".", "system", "(", "command_str", ")", "\n", "return", "cube_obj_file", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdf2obj.main": [[58, 107], ["config.get_config", "agent.get_agent", "dataset.get_dataloader", "os.path.join", "tqdm.tqdm", "enumerate", "agent.get_agent.load_ckpt", "str", "os.path.exists", "os.makedirs", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "range", "numpy.swapaxes", "range", "str", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.meshgrid", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.concatenate().astype", "np.concatenate().reshape.reshape", "numpy.concatenate().reshape", "numpy.concatenate", "torch.tensor", "agent.get_agent.infer_func", "tr_agent.infer_func.detach().cpu().unsqueeze().numpy", "np.swapaxes.reshape", "sdf2obj.create_obj", "str", "numpy.concatenate", "numpy.concatenate", "tr_agent.infer_func.detach().cpu().unsqueeze", "tr_agent.infer_func.detach().cpu", "tr_agent.infer_func.detach"], "function", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.get_config", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.get_agent", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.dataset.get_dataloader", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.load_ckpt", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.infer_func", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdf2obj.create_obj"], ["", "def", "main", "(", ")", ":", "\n", "    ", "config", "=", "get_config", "(", "'test'", ")", "\n", "# create network and  agent", "\n", "tr_agent", "=", "get_agent", "(", "config", ")", "\n", "\n", "if", "config", ".", "ckpt", ":", "\n", "        ", "tr_agent", ".", "load_ckpt", "(", "config", ".", "ckpt", ")", "\n", "\n", "# create dataloader", "\n", "", "test_loader", "=", "get_dataloader", "(", "'test'", ",", "config", ")", "\n", "\n", "iso", "=", "0.0", "\n", "RESULT_OBJ_PATH", "=", "os", ".", "path", ".", "join", "(", "config", ".", "exp_dir", ",", "'results'", ",", "str", "(", "config", ".", "ckpt", ")", ",", "'test_objs'", ",", "str", "(", "RESOLUTION", ")", "+", "\"_\"", "+", "str", "(", "iso", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "RESULT_OBJ_PATH", ")", ":", "os", ".", "makedirs", "(", "RESULT_OBJ_PATH", ",", "exist_ok", "=", "True", ")", "\n", "\n", "pbar", "=", "tqdm", "(", "test_loader", ")", "\n", "for", "e", ",", "batch_data", "in", "enumerate", "(", "pbar", ")", ":", "\n", "        ", "extra_pts", "=", "np", ".", "zeros", "(", "(", "1", ",", "SPLIT_SIZE", "*", "NUM_SAMPLE_POINTS", "-", "TOTAL_POINTS", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "batch_points", "=", "np", ".", "zeros", "(", "(", "SPLIT_SIZE", ",", "0", ",", "NUM_SAMPLE_POINTS", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "b", "in", "range", "(", "config", ".", "batch_size", ")", ":", "\n", "            ", "sdf_params", "=", "batch_data", "[", "'sdf_params'", "]", "[", "b", "]", "\n", "x_", "=", "np", ".", "linspace", "(", "sdf_params", "[", "0", "]", ",", "sdf_params", "[", "3", "]", ",", "num", "=", "RESOLUTION", ")", "\n", "y_", "=", "np", ".", "linspace", "(", "sdf_params", "[", "1", "]", ",", "sdf_params", "[", "4", "]", ",", "num", "=", "RESOLUTION", ")", "\n", "z_", "=", "np", ".", "linspace", "(", "sdf_params", "[", "2", "]", ",", "sdf_params", "[", "5", "]", ",", "num", "=", "RESOLUTION", ")", "\n", "z", ",", "y", ",", "x", "=", "np", ".", "meshgrid", "(", "z_", ",", "y_", ",", "x_", ",", "indexing", "=", "'ij'", ")", "\n", "x", "=", "np", ".", "expand_dims", "(", "x", ",", "3", ")", "\n", "y", "=", "np", ".", "expand_dims", "(", "y", ",", "3", ")", "\n", "z", "=", "np", ".", "expand_dims", "(", "z", ",", "3", ")", "\n", "all_pts", "=", "np", ".", "concatenate", "(", "(", "x", ",", "y", ",", "z", ")", ",", "axis", "=", "3", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "all_pts", "=", "all_pts", ".", "reshape", "(", "1", ",", "-", "1", ",", "3", ")", "\n", "all_pts", "=", "np", ".", "concatenate", "(", "(", "all_pts", ",", "extra_pts", ")", ",", "axis", "=", "1", ")", ".", "reshape", "(", "SPLIT_SIZE", ",", "1", ",", "-", "1", ",", "3", ")", "\n", "batch_points", "=", "np", ".", "concatenate", "(", "(", "batch_points", ",", "all_pts", ")", ",", "axis", "=", "1", ")", "\n", "\n", "", "pred_sdf_val_all", "=", "np", ".", "zeros", "(", "(", "SPLIT_SIZE", ",", "config", ".", "batch_size", ",", "NUM_SAMPLE_POINTS", ",", "1", ")", ")", "\n", "\n", "for", "sp", "in", "range", "(", "SPLIT_SIZE", ")", ":", "\n", "            ", "data", "=", "batch_data", "\n", "data", "[", "'sdf_pt'", "]", "=", "torch", ".", "tensor", "(", "batch_points", "[", "sp", "]", ")", "\n", "pred_sdf_val", "=", "tr_agent", ".", "infer_func", "(", "data", ")", "\n", "pred_sdf_val_all", "[", "sp", ",", ":", ",", ":", ",", ":", "]", "=", "pred_sdf_val", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "unsqueeze", "(", "2", ")", ".", "numpy", "(", ")", "\n", "\n", "", "pred_sdf_val_all", "=", "np", ".", "swapaxes", "(", "pred_sdf_val_all", ",", "0", ",", "1", ")", "# B, S, NUM SAMPLE, 1 or 2", "\n", "pred_sdf_val_all", "=", "pred_sdf_val_all", ".", "reshape", "(", "(", "config", ".", "batch_size", ",", "-", "1", ",", "1", ")", ")", "[", ":", ",", ":", "TOTAL_POINTS", ",", ":", "]", "\n", "\n", "result", "=", "pred_sdf_val_all", "/", "config", ".", "sdf_weight", "\n", "\n", "for", "b", "in", "range", "(", "config", ".", "batch_size", ")", ":", "\n", "            ", "create_obj", "(", "result", "[", "b", "]", ",", "batch_data", "[", "'sdf_params'", "]", "[", "b", "]", ",", "RESULT_OBJ_PATH", ",", "\n", "batch_data", "[", "'cat_id'", "]", "[", "b", "]", ",", "batch_data", "[", "'obj_nm'", "]", "[", "b", "]", ",", "batch_data", "[", "'view_id'", "]", "[", "b", "]", ",", "iso", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.__init__": [[86, 113], ["torch.Module.__init__", "sdfnet.vgg16_feature", "sdfnet.vgg16_fc", "sdfnet.point_feature", "sdfnet.offset_predictor", "sdfnet.conv_relu", "sdfnet.conv_relu", "sdfnet.conv_relu", "sdfnet.conv_relu", "sdfnet.conv_relu", "sdfnet.conv_relu", "sdfnet.sdf_regressor", "sdfnet.sdf_regressor", "sdfnet.SDFNet.init_weights", "sum"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.TrainClock.__init__", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.vgg16_feature", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.vgg16_fc", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.point_feature", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.offset_predictor", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_relu", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_relu", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_relu", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_relu", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_relu", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_relu", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.sdf_regressor", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.sdf_regressor", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "SDFNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "imgsize", "=", "config", ".", "img_h", "\n", "\n", "vgg_pretrained", "=", "True", "\n", "self", ".", "vgg16_feature", "=", "vgg16_feature", "(", "pretrained", "=", "vgg_pretrained", ")", "\n", "self", ".", "vgg16_fc", "=", "vgg16_fc", "(", "imgsize", "=", "self", ".", "imgsize", ")", "\n", "\n", "self", ".", "pointfeat", "=", "point_feature", "(", ")", "\n", "pointfeat_dim", "=", "512", "\n", "\n", "self", ".", "ref_points_num", "=", "6", "\n", "vgg_local_dim", "=", "[", "64", ",", "128", ",", "256", ",", "512", ",", "512", ",", "512", "]", "\n", "vgg_glob_dim", "=", "1024", "\n", "self", ".", "offset_predict", "=", "offset_predictor", "(", "pointfeat_dim", "*", "(", "1", "+", "self", ".", "ref_points_num", ")", ",", "self", ".", "ref_points_num", "*", "3", ")", "\n", "self", ".", "agg_5", "=", "conv_relu", "(", "vgg_local_dim", "[", "5", "]", "*", "(", "self", ".", "ref_points_num", "+", "1", ")", ",", "vgg_local_dim", "[", "5", "]", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "agg_4", "=", "conv_relu", "(", "vgg_local_dim", "[", "4", "]", "*", "(", "self", ".", "ref_points_num", "+", "1", ")", ",", "vgg_local_dim", "[", "4", "]", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "agg_3", "=", "conv_relu", "(", "vgg_local_dim", "[", "3", "]", "*", "(", "self", ".", "ref_points_num", "+", "1", ")", ",", "vgg_local_dim", "[", "3", "]", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "agg_2", "=", "conv_relu", "(", "vgg_local_dim", "[", "2", "]", "*", "(", "self", ".", "ref_points_num", "+", "1", ")", ",", "vgg_local_dim", "[", "2", "]", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "agg_1", "=", "conv_relu", "(", "vgg_local_dim", "[", "1", "]", "*", "(", "self", ".", "ref_points_num", "+", "1", ")", ",", "vgg_local_dim", "[", "1", "]", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "agg_0", "=", "conv_relu", "(", "vgg_local_dim", "[", "0", "]", "*", "(", "self", ".", "ref_points_num", "+", "1", ")", ",", "vgg_local_dim", "[", "0", "]", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "cls_glob", "=", "sdf_regressor", "(", "vgg_glob_dim", "+", "pointfeat_dim", ")", "\n", "self", ".", "cls_local", "=", "sdf_regressor", "(", "sum", "(", "vgg_local_dim", ")", "+", "pointfeat_dim", ")", "\n", "\n", "self", ".", "init_weights", "(", "[", "self", ".", "vgg16_fc", ",", "self", ".", "pointfeat", ",", "self", ".", "cls_glob", ",", "self", ".", "cls_local", ",", "self", ".", "agg_5", ",", "self", ".", "agg_4", ",", "self", ".", "agg_3", ",", "self", ".", "agg_2", ",", "self", ".", "agg_1", ",", "self", ".", "agg_0", ",", "self", ".", "offset_predict", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.init_weights": [[114, 123], ["isinstance", "isinstance", "isinstance", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "m.weight.data.normal_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ",", "nets", ")", ":", "\n", "        ", "for", "net", "in", "nets", ":", "\n", "            ", "for", "m", "in", "net", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ".", "data", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                        ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                    ", "m", ".", "weight", ".", "data", ".", "normal_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.get_image_feature_maps": [[124, 147], ["range", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "img.contiguous.contiguous.contiguous", "range", "len", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "len", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "", "", "", "def", "get_image_feature_maps", "(", "self", ",", "net", ",", "img", ")", ":", "\n", "        ", "vgg_cfg_D", "=", "[", "64", ",", "64", ",", "'M'", ",", "128", ",", "128", ",", "'M'", ",", "256", ",", "256", ",", "256", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", "]", "\n", "select_layer", "=", "[", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", "]", "#six layers", "\n", "exact_layer", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "vgg_cfg_D", ")", ")", ":", "\n", "            ", "if", "vgg_cfg_D", "[", "i", "]", "==", "'M'", ":", "\n", "                ", "exact_layer", "+=", "1", "\n", "", "else", ":", "\n", "                ", "exact_layer", "+=", "2", "\n", "", "select_layer", "[", "i", "]", "*=", "exact_layer", "-", "2", "\n", "", "select_index", "=", "torch", ".", "where", "(", "torch", ".", "tensor", "(", "select_layer", ")", ">", "0", ")", "\n", "select_index", "=", "torch", ".", "tensor", "(", "select_layer", ")", "[", "select_index", "[", "0", "]", "]", "\n", "\n", "H", ",", "W", "=", "img", ".", "shape", "[", "2", ":", "4", "]", "\n", "\n", "fms", "=", "[", "]", "\n", "img", "=", "img", ".", "contiguous", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "net", ")", ")", ":", "\n", "            ", "img", "=", "net", "[", "i", "]", "(", "img", ")", "\n", "if", "i", "in", "select_index", ":", "\n", "                ", "fms", "+=", "[", "F", ".", "interpolate", "(", "img", ",", "size", "=", "[", "H", ",", "W", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "]", "\n", "\n", "", "", "return", "img", ",", "fms", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.get_local_image_features": [[148, 181], ["float", "len", "len", "len", "len", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample"], "methods", ["None"], ["", "def", "get_local_image_features", "(", "self", ",", "fms", ",", "pixs", ",", "pixs_ref", ")", ":", "\n", "\n", "        ", "local_feats", "=", "[", "]", "\n", "local_feats_ref", "=", "[", "]", "\n", "s", "=", "float", "(", "self", ".", "imgsize", ")", "//", "2", "\n", "\n", "if", "len", "(", "pixs", ")", ">=", "1", ":", "\n", "            ", "t", "=", "[", "]", "\n", "for", "px", "in", "pixs", ":", "\n", "                ", "t", "+=", "[", "(", "(", "px", "-", "s", ")", "/", "s", ")", ".", "unsqueeze", "(", "2", ")", "]", "\n", "", "pixs", "=", "t", "\n", "\n", "", "if", "len", "(", "pixs_ref", ")", ">=", "1", ":", "\n", "            ", "t", "=", "[", "]", "\n", "for", "px", "in", "pixs_ref", ":", "\n", "                ", "t", "+=", "[", "(", "(", "px", "-", "s", ")", "/", "s", ")", ".", "unsqueeze", "(", "2", ")", "]", "\n", "", "pixs_ref", "=", "t", "\n", "\n", "", "for", "x", "in", "fms", ":", "\n", "#point sampler;", "\n", "            ", "if", "len", "(", "pixs", ")", ">=", "1", ":", "\n", "                ", "x1", "=", "[", "]", "\n", "for", "px", "in", "pixs", ":", "\n", "                    ", "x1", "+=", "[", "F", ".", "grid_sample", "(", "x", ",", "px", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "]", "\n", "", "local_feats", "+=", "[", "torch", ".", "cat", "(", "x1", ",", "dim", "=", "1", ")", "]", "\n", "\n", "", "if", "len", "(", "pixs_ref", ")", ">=", "1", ":", "\n", "                ", "x_ref", "=", "[", "]", "\n", "for", "px", "in", "pixs_ref", ":", "\n", "                    ", "x_ref", "+=", "[", "F", ".", "grid_sample", "(", "x", ",", "px", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "]", "\n", "", "local_feats_ref", "+=", "[", "torch", ".", "cat", "(", "x_ref", ",", "dim", "=", "1", ")", "]", "\n", "\n", "", "", "return", "local_feats", ",", "local_feats_ref", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.get_affinities_uniform": [[182, 192], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "get_affinities_uniform", "(", "self", ",", "pts", ")", ":", "\n", "        ", "pts_aff", "=", "[", "]", "\n", "radius", "=", "0.1", "\n", "pts_aff", "+=", "[", "torch", ".", "cat", "(", "[", "pts", "[", ":", ",", ":", ",", "0", ":", "2", "]", ",", "pts", "[", ":", ",", ":", ",", "2", ":", "3", "]", "+", "radius", "]", ",", "dim", "=", "2", ")", "]", "\n", "pts_aff", "+=", "[", "torch", ".", "cat", "(", "[", "pts", "[", ":", ",", ":", ",", "0", ":", "1", "]", "+", "radius", ",", "pts", "[", ":", ",", ":", ",", "1", ":", "3", "]", "]", ",", "dim", "=", "2", ")", "]", "\n", "pts_aff", "+=", "[", "torch", ".", "cat", "(", "[", "pts", "[", ":", ",", ":", ",", "0", ":", "1", "]", ",", "pts", "[", ":", ",", ":", ",", "1", ":", "2", "]", "+", "radius", ",", "pts", "[", ":", ",", ":", ",", "2", ":", "3", "]", "]", ",", "dim", "=", "2", ")", "]", "\n", "pts_aff", "+=", "[", "torch", ".", "cat", "(", "[", "pts", "[", ":", ",", ":", ",", "0", ":", "2", "]", ",", "pts", "[", ":", ",", ":", ",", "2", ":", "3", "]", "-", "radius", "]", ",", "dim", "=", "2", ")", "]", "\n", "pts_aff", "+=", "[", "torch", ".", "cat", "(", "[", "pts", "[", ":", ",", ":", ",", "0", ":", "1", "]", "-", "radius", ",", "pts", "[", ":", ",", ":", ",", "1", ":", "3", "]", "]", ",", "dim", "=", "2", ")", "]", "\n", "pts_aff", "+=", "[", "torch", ".", "cat", "(", "[", "pts", "[", ":", ",", ":", ",", "0", ":", "1", "]", ",", "pts", "[", ":", ",", ":", ",", "1", ":", "2", "]", "-", "radius", ",", "pts", "[", ":", ",", ":", ",", "2", ":", "3", "]", "]", ",", "dim", "=", "2", ")", "]", "\n", "return", "pts_aff", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.get_affinities_non_uniform": [[193, 202], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "get_affinities_non_uniform", "(", "self", ",", "pts", ")", ":", "\n", "        ", "pts_aff", "=", "[", "]", "\n", "pts_aff", "+=", "[", "torch", ".", "cat", "(", "[", "pts", "[", ":", ",", ":", ",", "0", ":", "2", "]", ",", "-", "pts", "[", ":", ",", ":", ",", "2", ":", "3", "]", "]", ",", "dim", "=", "2", ")", "]", "# [x,y,-z]", "\n", "pts_aff", "+=", "[", "torch", ".", "cat", "(", "[", "-", "pts", "[", ":", ",", ":", ",", "0", ":", "1", "]", ",", "pts", "[", ":", ",", ":", ",", "1", ":", "3", "]", "]", ",", "dim", "=", "2", ")", "]", "# [-x,y,z]", "\n", "pts_aff", "+=", "[", "torch", ".", "cat", "(", "[", "pts", "[", ":", ",", ":", ",", "0", ":", "1", "]", ",", "-", "pts", "[", ":", ",", ":", ",", "1", ":", "2", "]", ",", "pts", "[", ":", ",", ":", ",", "2", ":", "3", "]", "]", ",", "dim", "=", "2", ")", "]", "# [x,-y,z]", "\n", "pts_aff", "+=", "[", "torch", ".", "cat", "(", "[", "-", "pts", "[", ":", ",", ":", ",", "0", ":", "2", "]", ",", "pts", "[", ":", ",", ":", ",", "2", ":", "3", "]", "]", ",", "dim", "=", "2", ")", "]", "# [-x,-y,z]", "\n", "pts_aff", "+=", "[", "torch", ".", "cat", "(", "[", "pts", "[", ":", ",", ":", ",", "0", ":", "1", "]", ",", "-", "pts", "[", ":", ",", ":", ",", "1", ":", "3", "]", "]", ",", "dim", "=", "2", ")", "]", "# [x,-y,-z]", "\n", "pts_aff", "+=", "[", "torch", ".", "cat", "(", "[", "-", "pts", "[", ":", ",", ":", ",", "0", ":", "1", "]", ",", "pts", "[", ":", ",", ":", ",", "1", ":", "2", "]", ",", "-", "pts", "[", ":", ",", ":", ",", "2", ":", "3", "]", "]", ",", "dim", "=", "2", ")", "]", "# [-x,y,-z]", "\n", "return", "pts_aff", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.get_affinities": [[203, 205], ["sdfnet.SDFNet.get_affinities_non_uniform"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.get_affinities_non_uniform"], ["", "def", "get_affinities", "(", "self", ",", "pts", ")", ":", "\n", "        ", "return", "self", ".", "get_affinities_non_uniform", "(", "pts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.modify_affinities": [[206, 214], ["None"], "methods", ["None"], ["", "def", "modify_affinities", "(", "self", ",", "pts_aff", ",", "offsets", ")", ":", "\n", "        ", "pts_aff", "[", "0", "]", "+=", "offsets", "[", ":", ",", ":", ",", "0", ":", "3", "]", "\n", "pts_aff", "[", "1", "]", "+=", "offsets", "[", ":", ",", ":", ",", "3", ":", "6", "]", "\n", "pts_aff", "[", "2", "]", "+=", "offsets", "[", ":", ",", ":", ",", "6", ":", "9", "]", "\n", "pts_aff", "[", "3", "]", "+=", "offsets", "[", ":", ",", ":", ",", "9", ":", "12", "]", "\n", "pts_aff", "[", "4", "]", "+=", "offsets", "[", ":", ",", ":", ",", "12", ":", "15", "]", "\n", "pts_aff", "[", "5", "]", "+=", "offsets", "[", ":", ",", ":", ",", "15", ":", "18", "]", "\n", "return", "pts_aff", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.forward": [[215, 258], ["sdfnet.SDFNet.pointfeat", "sdfnet.SDFNet.get_image_feature_maps", "sdfnet.SDFNet.vgg16_fc", "glob_feat.repeat.repeat.repeat", "sdfnet.camera_projection", "sdfnet.SDFNet.get_local_image_features", "sdfnet.SDFNet.get_affinities", "range", "sdfnet.SDFNet.offset_predict().squeeze().transpose", "sdfnet.SDFNet.modify_affinities", "range", "sdfnet.SDFNet.get_local_image_features", "sdfnet.SDFNet.agg_5", "sdfnet.SDFNet.agg_4", "sdfnet.SDFNet.agg_3", "sdfnet.SDFNet.agg_2", "sdfnet.SDFNet.agg_1", "sdfnet.SDFNet.agg_0", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "sdfnet.SDFNet.cls_glob", "sdfnet.SDFNet.cls_local", "pred_sdf.squeeze().squeeze", "pts.transpose().unsqueeze", "pts.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "sdfnet.SDFNet.pointfeat", "sdfnet.SDFNet.offset_predict().squeeze", "sdfnet.camera_projection", "pred_sdf.squeeze", "pts.transpose", "pts_aff[].transpose().unsqueeze", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "sdfnet.SDFNet.offset_predict", "pts_aff[].transpose", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.get_image_feature_maps", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.vgg16_fc", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.camera_projection", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.get_local_image_features", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.get_affinities", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.modify_affinities", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.get_local_image_features", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.camera_projection"], ["", "def", "forward", "(", "self", ",", "img", ",", "pts", ",", "trans_mat", ")", ":", "\n", "\n", "        ", "ptsfeat", "=", "self", ".", "pointfeat", "(", "pts", ".", "transpose", "(", "2", ",", "1", ")", ".", "unsqueeze", "(", "3", ")", ")", "# B * C * N * 1;  pts:B,N,3", "\n", "lastfeat", ",", "featuremaps", "=", "self", ".", "get_image_feature_maps", "(", "self", ".", "vgg16_feature", ",", "img", ")", "\n", "glob_feat", "=", "self", ".", "vgg16_fc", "(", "lastfeat", ")", "# B * C * 1 * 1", "\n", "glob_feat", "=", "glob_feat", ".", "repeat", "(", "1", ",", "1", ",", "pts", ".", "size", "(", "1", ")", ",", "1", ")", "# B * C * N * 1", "\n", "\n", "# get sampled pixels according to sampled 3d points and the camera pose.", "\n", "pixs", "=", "camera_projection", "(", "pts", ",", "trans_mat", ")", "# B * N * 2", "\n", "localfeats", ",", "_", "=", "self", ".", "get_local_image_features", "(", "featuremaps", ",", "[", "pixs", "]", ",", "[", "]", ")", "\n", "\n", "#3d affinity sampling", "\n", "pts_aff", "=", "self", ".", "get_affinities", "(", "pts", ")", "\n", "\n", "ptsfeats_ref", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "ref_points_num", ")", ":", "\n", "            ", "ptsfeats_ref", "+=", "[", "self", ".", "pointfeat", "(", "pts_aff", "[", "i", "]", ".", "transpose", "(", "2", ",", "1", ")", ".", "unsqueeze", "(", "3", ")", ")", "]", "\n", "\n", "#adjust affinities", "\n", "", "offsets", "=", "self", ".", "offset_predict", "(", "torch", ".", "cat", "(", "[", "ptsfeat", "]", "+", "ptsfeats_ref", ",", "dim", "=", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", ".", "transpose", "(", "2", ",", "1", ")", "\n", "\n", "pts_aff", "=", "self", ".", "modify_affinities", "(", "pts_aff", ",", "offsets", ")", "\n", "\n", "#get 2d projections", "\n", "pixs_ref", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "ref_points_num", ")", ":", "\n", "            ", "pixs_ref", "+=", "[", "camera_projection", "(", "torch", ".", "clamp", "(", "pts_aff", "[", "i", "]", ",", "-", "1.0", ",", "1.0", ")", ",", "trans_mat", ")", "]", "\n", "", "_", ",", "localfeats_ref", "=", "self", ".", "get_local_image_features", "(", "featuremaps", ",", "[", "]", ",", "pixs_ref", ")", "\n", "\n", "# local feature aggregation", "\n", "sub_lf5", "=", "self", ".", "agg_5", "(", "torch", ".", "cat", "(", "[", "localfeats", "[", "5", "]", ",", "localfeats_ref", "[", "5", "]", "]", ",", "dim", "=", "1", ")", ")", "\n", "sub_lf4", "=", "self", ".", "agg_4", "(", "torch", ".", "cat", "(", "[", "localfeats", "[", "4", "]", ",", "localfeats_ref", "[", "4", "]", "]", ",", "dim", "=", "1", ")", ")", "\n", "sub_lf3", "=", "self", ".", "agg_3", "(", "torch", ".", "cat", "(", "[", "localfeats", "[", "3", "]", ",", "localfeats_ref", "[", "3", "]", "]", ",", "dim", "=", "1", ")", ")", "\n", "sub_lf2", "=", "self", ".", "agg_2", "(", "torch", ".", "cat", "(", "[", "localfeats", "[", "2", "]", ",", "localfeats_ref", "[", "2", "]", "]", ",", "dim", "=", "1", ")", ")", "\n", "sub_lf1", "=", "self", ".", "agg_1", "(", "torch", ".", "cat", "(", "[", "localfeats", "[", "1", "]", ",", "localfeats_ref", "[", "1", "]", "]", ",", "dim", "=", "1", ")", ")", "\n", "sub_lf0", "=", "self", ".", "agg_0", "(", "torch", ".", "cat", "(", "[", "localfeats", "[", "0", "]", ",", "localfeats_ref", "[", "0", "]", "]", ",", "dim", "=", "1", ")", ")", "\n", "local_feat", "=", "torch", ".", "cat", "(", "[", "sub_lf5", ",", "sub_lf4", ",", "sub_lf3", ",", "sub_lf2", ",", "sub_lf1", ",", "sub_lf0", "]", ",", "dim", "=", "1", ")", "\n", "\n", "sdf_glob", "=", "self", ".", "cls_glob", "(", "torch", ".", "cat", "(", "[", "glob_feat", ",", "ptsfeat", "]", ",", "dim", "=", "1", ")", ")", "\n", "sdf_local", "=", "self", ".", "cls_local", "(", "torch", ".", "cat", "(", "[", "local_feat", ",", "ptsfeat", "]", ",", "dim", "=", "1", ")", ")", "\n", "\n", "pred_sdf", "=", "sdf_glob", "+", "sdf_local", "\n", "return", "pred_sdf", ".", "squeeze", "(", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.get_aff": [[259, 268], ["sdfnet.SDFNet.get_affinities", "sdfnet.SDFNet.pointfeat", "range", "sdfnet.SDFNet.offset_predict().squeeze().transpose", "sdfnet.SDFNet.modify_affinities", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pts.transpose().unsqueeze", "sdfnet.SDFNet.pointfeat", "sdfnet.SDFNet.offset_predict().squeeze", "pts.transpose", "pts_aff[].transpose().unsqueeze", "sdfnet.SDFNet.offset_predict", "pts_aff[].transpose", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.get_affinities", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.modify_affinities"], ["", "def", "get_aff", "(", "self", ",", "pts", ")", ":", "\n", "        ", "pts_aff", "=", "self", ".", "get_affinities", "(", "pts", ")", "\n", "ptsfeat", "=", "self", ".", "pointfeat", "(", "pts", ".", "transpose", "(", "2", ",", "1", ")", ".", "unsqueeze", "(", "3", ")", ")", "# B * C * N * 1;  pts:B,N,3", "\n", "ptsfeats_ref", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "ref_points_num", ")", ":", "\n", "            ", "ptsfeats_ref", "+=", "[", "self", ".", "pointfeat", "(", "pts_aff", "[", "i", "]", ".", "transpose", "(", "2", ",", "1", ")", ".", "unsqueeze", "(", "3", ")", ")", "]", "\n", "", "offsets", "=", "self", ".", "offset_predict", "(", "torch", ".", "cat", "(", "[", "ptsfeat", "]", "+", "ptsfeats_ref", ",", "dim", "=", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", ".", "transpose", "(", "2", ",", "1", ")", "\n", "pts_aff", "=", "self", ".", "modify_affinities", "(", "pts_aff", ",", "offsets", ")", "\n", "return", "torch", ".", "cat", "(", "pts_aff", ",", "dim", "=", "2", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.get_model": [[10, 12], ["sdfnet.SDFNet"], "function", ["None"], ["def", "get_model", "(", "config", ")", ":", "\n", "    ", "return", "SDFNet", "(", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.vgg16_feature": [[13, 16], ["torchvision.vgg16"], "function", ["None"], ["", "def", "vgg16_feature", "(", "pretrained", "=", "True", ")", ":", "\n", "    ", "vgg_16", "=", "models", ".", "vgg16", "(", "pretrained", "=", "pretrained", ")", "\n", "return", "vgg_16", ".", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.vgg16_fc": [[17, 34], ["torchvision.vgg16", "torch.Sequential", "torch.Conv2d", "torch.ReLU", "torch.Dropout", "torch.Conv2d", "torch.ReLU", "torch.Dropout", "torch.Conv2d"], "function", ["None"], ["", "def", "vgg16_fc", "(", "cls_num", "=", "1024", ",", "imgsize", "=", "137", ",", "pretrained", "=", "False", ")", ":", "\n", "    ", "if", "imgsize", "==", "224", "and", "pretrained", ":", "\n", "        ", "vgg_16", "=", "models", ".", "vgg16", "(", "pretrained", "=", "pretrained", ")", "\n", "return", "vgg_16", ".", "classifier", "\n", "", "elif", "imgsize", "==", "137", ":", "\n", "        ", "k", "=", "4", "\n", "# Use conv2d instead of fully_connected layers.", "\n", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "4096", ",", "kernel_size", "=", "k", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4096", ",", "4096", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4096", ",", "cls_num", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", ")", "\n", "return", "classifier", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv": [[35, 38], ["torch.Sequential", "torch.Conv2d"], "function", ["None"], ["", "", "def", "conv", "(", "in_planes", ",", "out_planes", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_relu": [[40, 45], ["torch.Sequential", "torch.Conv2d", "torch.ReLU"], "function", ["None"], ["", "def", "conv_relu", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_tanh": [[47, 52], ["torch.Sequential", "torch.Conv2d", "torch.Tanh"], "function", ["None"], ["", "def", "conv_tanh", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.point_feature": [[54, 61], ["sdfnet.conv_relu", "sdfnet.conv_relu", "sdfnet.conv", "torch.Sequential"], "function", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_relu", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_relu", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv"], ["", "def", "point_feature", "(", ")", ":", "\n", "    ", "conv_planes", "=", "[", "64", ",", "256", ",", "512", "]", "\n", "conv1", "=", "conv_relu", "(", "3", ",", "conv_planes", "[", "0", "]", ",", "kernel_size", "=", "1", ")", "\n", "conv2", "=", "conv_relu", "(", "conv_planes", "[", "0", "]", ",", "conv_planes", "[", "1", "]", ",", "kernel_size", "=", "1", ")", "\n", "convout", "=", "conv", "(", "conv_planes", "[", "1", "]", ",", "conv_planes", "[", "2", "]", ")", "\n", "return", "nn", ".", "Sequential", "(", "\n", "conv1", ",", "conv2", ",", "convout", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.sdf_regressor": [[63, 69], ["sdfnet.conv_relu", "sdfnet.conv_relu", "sdfnet.conv", "torch.Sequential"], "function", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_relu", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_relu", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv"], ["", "def", "sdf_regressor", "(", "fs", ")", ":", "\n", "    ", "conv_planes", "=", "[", "fs", ",", "512", ",", "256", "]", "\n", "conv1", "=", "conv_relu", "(", "conv_planes", "[", "0", "]", ",", "conv_planes", "[", "1", "]", ",", "kernel_size", "=", "1", ")", "\n", "conv2", "=", "conv_relu", "(", "conv_planes", "[", "1", "]", ",", "conv_planes", "[", "2", "]", ",", "kernel_size", "=", "1", ")", "\n", "convout", "=", "conv", "(", "conv_planes", "[", "2", "]", ",", "1", ")", "\n", "return", "nn", ".", "Sequential", "(", "conv1", ",", "conv2", ",", "convout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.offset_predictor": [[70, 76], ["sdfnet.conv_relu", "sdfnet.conv_relu", "sdfnet.conv_tanh", "torch.Sequential"], "function", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_relu", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_relu", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.conv_tanh"], ["", "def", "offset_predictor", "(", "in_dim", ",", "out_dim", ")", ":", "\n", "    ", "conv_planes", "=", "[", "in_dim", ",", "512", ",", "256", "]", "\n", "conv1", "=", "conv_relu", "(", "conv_planes", "[", "0", "]", ",", "conv_planes", "[", "1", "]", ",", "kernel_size", "=", "1", ")", "\n", "conv2", "=", "conv_relu", "(", "conv_planes", "[", "1", "]", ",", "conv_planes", "[", "2", "]", ",", "kernel_size", "=", "1", ")", "\n", "convout", "=", "conv_tanh", "(", "conv_planes", "[", "2", "]", ",", "out_dim", ",", "kernel_size", "=", "1", ")", "\n", "return", "nn", ".", "Sequential", "(", "conv1", ",", "conv2", ",", "convout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.camera_projection": [[77, 84], ["torch.cat", "torch.cat", "torch.cat", "torch.matmul", "torch.matmul", "torch.matmul", "torch.div", "torch.div", "torch.div", "torch.clamp", "torch.clamp", "torch.clamp", "pc.size", "pc_xyz[].unsqueeze", "torch.ones().to", "torch.ones().to", "torch.ones().to", "pc.get_device", "torch.ones", "torch.ones", "torch.ones"], "function", ["None"], ["", "def", "camera_projection", "(", "pc", ",", "trans_mat", ")", ":", "\n", "# sample_pc B*N*3", "\n", "    ", "B", ",", "N", "=", "pc", ".", "size", "(", ")", "[", "0", ":", "2", "]", "\n", "homo_pc", "=", "torch", ".", "cat", "(", "[", "pc", ",", "torch", ".", "ones", "(", "B", ",", "N", ",", "1", ")", ".", "to", "(", "pc", ".", "get_device", "(", ")", ")", "]", ",", "dim", "=", "-", "1", ")", "\n", "pc_xyz", "=", "torch", ".", "matmul", "(", "homo_pc", ",", "trans_mat", ")", "\n", "pc_xy", "=", "torch", ".", "div", "(", "pc_xyz", "[", ":", ",", ":", ",", ":", "2", "]", ",", "pc_xyz", "[", ":", ",", ":", ",", "2", "]", ".", "unsqueeze", "(", "2", ")", ")", "\n", "return", "torch", ".", "clamp", "(", "pc_xy", ",", "0.0", ",", "136.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.TrainClock.__init__": [[6, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "epoch", "=", "1", "\n", "self", ".", "minibatch", "=", "0", "\n", "self", ".", "step", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.TrainClock.tick": [[11, 14], ["None"], "methods", ["None"], ["", "def", "tick", "(", "self", ")", ":", "\n", "        ", "self", ".", "minibatch", "+=", "1", "\n", "self", ".", "step", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.TrainClock.tock": [[15, 18], ["None"], "methods", ["None"], ["", "def", "tock", "(", "self", ")", ":", "\n", "        ", "self", ".", "epoch", "+=", "1", "\n", "self", ".", "minibatch", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.TrainClock.make_checkpoint": [[19, 24], ["None"], "methods", ["None"], ["", "def", "make_checkpoint", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'epoch'", ":", "self", ".", "epoch", ",", "\n", "'minibatch'", ":", "self", ".", "minibatch", ",", "\n", "'step'", ":", "self", ".", "step", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.TrainClock.restore_checkpoint": [[26, 30], ["None"], "methods", ["None"], ["", "def", "restore_checkpoint", "(", "self", ",", "clock_dict", ")", ":", "\n", "        ", "self", ".", "epoch", "=", "clock_dict", "[", "'epoch'", "]", "\n", "self", ".", "minibatch", "=", "clock_dict", "[", "'minibatch'", "]", "\n", "self", ".", "step", "=", "clock_dict", "[", "'step'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.ensure_dir": [[32, 40], ["os.path.exists", "os.makedirs"], "function", ["None"], ["", "", "def", "ensure_dir", "(", "path", ")", ":", "\n", "    ", "\"\"\"\n    create path by first checking its existence,\n    :param paths: path\n    :return:\n    \"\"\"", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.ensure_dirs": [[42, 53], ["isinstance", "utils.ensure_dir", "isinstance", "utils.ensure_dir"], "function", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.ensure_dir", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.ensure_dir"], ["", "", "def", "ensure_dirs", "(", "paths", ")", ":", "\n", "    ", "\"\"\"\n    create paths by first checking their existence\n    :param paths: list of path\n    :return:\n    \"\"\"", "\n", "if", "isinstance", "(", "paths", ",", "list", ")", "and", "not", "isinstance", "(", "paths", ",", "str", ")", ":", "\n", "        ", "for", "path", "in", "paths", ":", "\n", "            ", "ensure_dir", "(", "path", ")", "\n", "", "", "else", ":", "\n", "        ", "ensure_dir", "(", "paths", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.cycle": [[55, 59], ["None"], "function", ["None"], ["", "", "def", "cycle", "(", "iterable", ")", ":", "\n", "    ", "while", "True", ":", "\n", "        ", "for", "x", "in", "iterable", ":", "\n", "            ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.utils.test": [[60, 62], ["None"], "function", ["None"], ["", "", "", "def", "test", "(", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.visualization.get_sp.main": [[21, 81], ["config.get_config", "print", "agent.get_agent", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "range", "numpy.swapaxes", "numpy.swapaxes", "numpy.concatenate", "numpy.concatenate", "numpy.save", "print", "agent.get_agent.load_ckpt", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.meshgrid", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.concatenate().astype", "np.concatenate().reshape.reshape", "numpy.concatenate().reshape", "numpy.concatenate", "agent.get_agent.net.eval", "tr_agent.net.module.get_aff.detach().cpu().numpy", "np.swapaxes.reshape", "np.concatenate.reshape", "torch.no_grad", "agent.get_agent.net.module.get_aff", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "torch.tensor().cuda", "tr_agent.net.module.get_aff.detach().cpu", "str", "torch.tensor", "tr_agent.net.module.get_aff.detach"], "function", ["home.repos.pwc.inspect_result.yixin26_SVR-SP.code.config.get_config", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.get_agent", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.BaseAgent.load_ckpt", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.agent.Agent.eval", "home.repos.pwc.inspect_result.yixin26_SVR-SP.code.sdfnet.SDFNet.get_aff"], ["def", "main", "(", ")", ":", "\n", "    ", "config", "=", "get_config", "(", "'test'", ")", "\n", "print", "(", "config", ".", "exp_dir", ")", "\n", "# create network and training agent", "\n", "tr_agent", "=", "get_agent", "(", "config", ")", "\n", "if", "config", ".", "ckpt", ":", "\n", "        ", "tr_agent", ".", "load_ckpt", "(", "config", ".", "ckpt", ")", "\n", "\n", "", "extra_pts", "=", "np", ".", "zeros", "(", "(", "1", ",", "SPLIT_SIZE", "*", "NUM_SAMPLE_POINTS", "-", "TOTAL_POINTS", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "batch_points", "=", "np", ".", "zeros", "(", "(", "SPLIT_SIZE", ",", "0", ",", "NUM_SAMPLE_POINTS", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "num_sp_point", "=", "6", "\n", "for", "b", "in", "range", "(", "config", ".", "batch_size", ")", ":", "\n", "        ", "sdf_params", "=", "[", "-", "1.0", ",", "-", "1.0", ",", "-", "1.0", ",", "1.0", ",", "1.0", ",", "1.0", "]", "\n", "x_", "=", "np", ".", "linspace", "(", "sdf_params", "[", "0", "]", ",", "sdf_params", "[", "3", "]", ",", "num", "=", "RESOLUTION", ")", "\n", "y_", "=", "np", ".", "linspace", "(", "sdf_params", "[", "1", "]", ",", "sdf_params", "[", "4", "]", ",", "num", "=", "RESOLUTION", ")", "\n", "z_", "=", "np", ".", "linspace", "(", "sdf_params", "[", "2", "]", ",", "sdf_params", "[", "5", "]", ",", "num", "=", "RESOLUTION", ")", "\n", "z", ",", "y", ",", "x", "=", "np", ".", "meshgrid", "(", "z_", ",", "y_", ",", "x_", ",", "indexing", "=", "'ij'", ")", "\n", "x", "=", "np", ".", "expand_dims", "(", "x", ",", "3", ")", "\n", "y", "=", "np", ".", "expand_dims", "(", "y", ",", "3", ")", "\n", "z", "=", "np", ".", "expand_dims", "(", "z", ",", "3", ")", "\n", "all_pts", "=", "np", ".", "concatenate", "(", "(", "x", ",", "y", ",", "z", ")", ",", "axis", "=", "3", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "all_pts", "=", "all_pts", ".", "reshape", "(", "1", ",", "-", "1", ",", "3", ")", "\n", "all_pts", "=", "np", ".", "concatenate", "(", "(", "all_pts", ",", "extra_pts", ")", ",", "axis", "=", "1", ")", ".", "reshape", "(", "SPLIT_SIZE", ",", "1", ",", "-", "1", ",", "3", ")", "\n", "batch_points", "=", "np", ".", "concatenate", "(", "(", "batch_points", ",", "all_pts", ")", ",", "axis", "=", "1", ")", "\n", "\n", "", "pred_affs_all", "=", "np", ".", "zeros", "(", "(", "SPLIT_SIZE", ",", "config", ".", "batch_size", ",", "NUM_SAMPLE_POINTS", ",", "3", "*", "num_sp_point", ")", ")", "\n", "\n", "for", "sp", "in", "range", "(", "SPLIT_SIZE", ")", ":", "\n", "        ", "tr_agent", ".", "net", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pred_affs", "=", "tr_agent", ".", "net", ".", "module", ".", "get_aff", "(", "torch", ".", "tensor", "(", "batch_points", "[", "sp", "]", ")", ".", "cuda", "(", ")", ")", "\n", "", "pred_affs_all", "[", "sp", ",", ":", ",", ":", ",", ":", "]", "=", "pred_affs", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "pred_affs_all", "=", "np", ".", "swapaxes", "(", "pred_affs_all", ",", "0", ",", "1", ")", "# B, S, NUM SAMPLE, 1 or 2", "\n", "pred_affs_all", "=", "pred_affs_all", ".", "reshape", "(", "(", "config", ".", "batch_size", ",", "-", "1", ",", "3", "*", "num_sp_point", ")", ")", "[", ":", ",", ":", "TOTAL_POINTS", ",", ":", "]", "\n", "\n", "batch_points", "=", "np", ".", "swapaxes", "(", "batch_points", ",", "0", ",", "1", ")", "# B, S, NUM SAMPLE, 3", "\n", "batch_points", "=", "batch_points", ".", "reshape", "(", "(", "config", ".", "batch_size", ",", "-", "1", ",", "3", ")", ")", "[", ":", ",", ":", "TOTAL_POINTS", ",", ":", "]", "\n", "\n", "fixed_affs_global", "=", "np", ".", "concatenate", "(", "(", "\n", "np", ".", "concatenate", "(", "(", "batch_points", "[", ":", ",", ":", ",", "0", ":", "2", "]", ",", "-", "batch_points", "[", ":", ",", ":", ",", "2", ":", "3", "]", ")", ",", "axis", "=", "2", ")", ",", "\n", "np", ".", "concatenate", "(", "(", "-", "batch_points", "[", ":", ",", ":", ",", "0", ":", "1", "]", ",", "batch_points", "[", ":", ",", ":", ",", "1", ":", "3", "]", ")", ",", "axis", "=", "2", ")", ",", "\n", "np", ".", "concatenate", "(", "(", "batch_points", "[", ":", ",", ":", ",", "0", ":", "1", "]", ",", "-", "batch_points", "[", ":", ",", ":", ",", "1", ":", "2", "]", ",", "batch_points", "[", ":", ",", ":", ",", "2", ":", "3", "]", ")", ",", "axis", "=", "2", ")", ",", "\n", "np", ".", "concatenate", "(", "(", "-", "batch_points", "[", ":", ",", ":", ",", "0", ":", "2", "]", ",", "batch_points", "[", ":", ",", ":", ",", "2", ":", "3", "]", ")", ",", "axis", "=", "2", ")", ",", "\n", "np", ".", "concatenate", "(", "(", "batch_points", "[", ":", ",", ":", ",", "0", ":", "1", "]", ",", "-", "batch_points", "[", ":", ",", ":", ",", "1", ":", "3", "]", ")", ",", "axis", "=", "2", ")", ",", "\n", "np", ".", "concatenate", "(", "(", "-", "batch_points", "[", ":", ",", ":", ",", "0", ":", "1", "]", ",", "batch_points", "[", ":", ",", ":", ",", "1", ":", "2", "]", ",", "-", "batch_points", "[", ":", ",", ":", ",", "2", ":", "3", "]", ")", ",", "axis", "=", "2", ")", "\n", ")", ",", "axis", "=", "2", ")", "\n", "\n", "fixed_affs_local", "=", "np", ".", "concatenate", "(", "(", "\n", "np", ".", "concatenate", "(", "(", "batch_points", "[", ":", ",", ":", ",", "0", ":", "2", "]", ",", "batch_points", "[", ":", ",", ":", ",", "2", ":", "3", "]", "+", "0.1", ")", ",", "axis", "=", "2", ")", ",", "\n", "np", ".", "concatenate", "(", "(", "batch_points", "[", ":", ",", ":", ",", "0", ":", "1", "]", "+", "0.1", ",", "batch_points", "[", ":", ",", ":", ",", "1", ":", "3", "]", ")", ",", "axis", "=", "2", ")", ",", "\n", "np", ".", "concatenate", "(", "(", "batch_points", "[", ":", ",", ":", ",", "0", ":", "1", "]", ",", "batch_points", "[", ":", ",", ":", ",", "1", ":", "2", "]", "+", "0.1", ",", "batch_points", "[", ":", ",", ":", ",", "2", ":", "3", "]", ")", ",", "axis", "=", "2", ")", ",", "\n", "np", ".", "concatenate", "(", "(", "batch_points", "[", ":", ",", ":", ",", "0", ":", "2", "]", ",", "batch_points", "[", ":", ",", ":", ",", "2", ":", "3", "]", "-", "0.1", ")", ",", "axis", "=", "2", ")", ",", "\n", "np", ".", "concatenate", "(", "(", "batch_points", "[", ":", ",", ":", ",", "0", ":", "1", "]", "-", "0.1", ",", "batch_points", "[", ":", ",", ":", ",", "1", ":", "3", "]", ")", ",", "axis", "=", "2", ")", ",", "\n", "np", ".", "concatenate", "(", "(", "batch_points", "[", ":", ",", ":", ",", "0", ":", "1", "]", ",", "batch_points", "[", ":", ",", ":", ",", "1", ":", "2", "]", "-", "0.1", ",", "batch_points", "[", ":", ",", ":", ",", "2", ":", "3", "]", ")", ",", "axis", "=", "2", ")", "\n", ")", ",", "axis", "=", "2", ")", "\n", "\n", "data", "=", "{", "\"input\"", ":", "batch_points", ",", "\"pred_affs\"", ":", "pred_affs_all", ",", "\"fixed_affs_global\"", ":", "fixed_affs_global", ",", "\"fixed_affs_local\"", ":", "fixed_affs_local", "}", "\n", "np", ".", "save", "(", "\"spatial_pattern\"", "+", "\"_\"", "+", "str", "(", "config", ".", "ckpt", ")", "+", "\".npy\"", ",", "data", ")", "\n", "print", "(", "'spatial pattern saved.'", ")", "\n", "", "main", "(", ")", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.visualization.vis.get_pred": [[4, 12], ["numpy.load().item", "print", "points.squeeze", "pred_affs.squeeze", "fixed_affs_local.squeeze", "fixed_affs_global.squeeze", "numpy.load"], "function", ["None"], ["def", "get_pred", "(", "path", ")", ":", "\n", "    ", "data", "=", "np", ".", "load", "(", "path", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "points", "=", "data", "[", "\"input\"", "]", "\n", "pred_affs", "=", "data", "[", "\"pred_affs\"", "]", "\n", "fixed_affs_local", "=", "data", "[", "\"fixed_affs_local\"", "]", "\n", "fixed_affs_global", "=", "data", "[", "\"fixed_affs_global\"", "]", "\n", "print", "(", "points", ".", "shape", ")", "\n", "return", "points", ".", "squeeze", "(", "0", ")", ",", "pred_affs", ".", "squeeze", "(", "0", ")", ",", "fixed_affs_local", ".", "squeeze", "(", "0", ")", ",", "fixed_affs_global", ".", "squeeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.visualization.vis.autolabel": [[48, 57], ["rect.get_height", "ax.annotate", "rect.get_x", "rect.get_width"], "function", ["None"], ["def", "autolabel", "(", "rects", ")", ":", "\n", "    ", "\"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"", "\n", "for", "rect", "in", "rects", ":", "\n", "        ", "height", "=", "rect", ".", "get_height", "(", ")", "\n", "ax", ".", "annotate", "(", "'{}'", ".", "format", "(", "\"%.3f\"", "%", "height", ")", ",", "\n", "xy", "=", "(", "rect", ".", "get_x", "(", ")", "+", "rect", ".", "get_width", "(", ")", "/", "2", ",", "height", ")", ",", "\n", "xytext", "=", "(", "0", ",", "3", ")", ",", "# 3 points vertical offset", "\n", "textcoords", "=", "\"offset points\"", ",", "\n", "ha", "=", "'center'", ",", "va", "=", "'bottom'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yixin26_SVR-SP.visualization.vis.update_slider": [[76, 130], ["ax.cla", "ax.grid", "ax.set_xticks", "ax.set_yticks", "ax.set_zticks", "ax.view_init", "ax.scatter", "int", "numpy.argmin", "ax.scatter", "range", "range", "range", "fig.canvas.draw_idle", "ax.set_xlim", "ax.set_ylim", "ax.set_zlim", "ax.set_xlabel", "ax.set_ylabel", "ax.set_zlabel", "numpy.linalg.norm", "ax.scatter", "ax.scatter", "ax.scatter", "range", "range", "ax.scatter"], "function", ["None"], ["def", "update_slider", "(", "val", ")", ":", "\n", "    ", "ax", ".", "cla", "(", ")", "\n", "# Hide grid lines", "\n", "ax", ".", "grid", "(", "False", ")", "\n", "# Hide axes ticks", "\n", "ax", ".", "set_xticks", "(", "[", "]", ")", "\n", "ax", ".", "set_yticks", "(", "[", "]", ")", "\n", "ax", ".", "set_zticks", "(", "[", "]", ")", "\n", "\n", "ax", ".", "view_init", "(", "10", ",", "30", ")", "\n", "X", ",", "Y", ",", "Z", "=", "0", ",", "2", ",", "1", "#switch the axis for better visualization", "\n", "ax", ".", "scatter", "(", "v", "[", ":", ":", "valstep", ",", "X", "]", ",", "v", "[", ":", ":", "valstep", ",", "Y", "]", ",", "v", "[", ":", ":", "valstep", ",", "Z", "]", ",", "c", "=", "'grey'", ",", "s", "=", "1", ",", "marker", "=", "'o'", ")", "\n", "\n", "vid", "=", "int", "(", "val", ")", "# np.round(val).astype(np.int)", "\n", "ind", "=", "np", ".", "argmin", "(", "np", ".", "linalg", ".", "norm", "(", "pts", "-", "v", "[", "vid", "]", ",", "axis", "=", "1", ")", ")", "\n", "\n", "num_point_to_show", "=", "1", "\n", "id", "=", "[", "i", "for", "i", "in", "range", "(", "ind", ",", "ind", "+", "num_point_to_show", ",", "1", ")", "]", "\n", "psize", "=", "50", "\n", "\n", "x", "=", "pts", "[", "id", ",", "X", "]", "\n", "y", "=", "pts", "[", "id", ",", "Y", "]", "\n", "z", "=", "pts", "[", "id", ",", "Z", "]", "\n", "ax", ".", "scatter", "(", "x", ",", "y", ",", "z", ",", "c", "=", "'black'", ",", "s", "=", "psize", ",", "marker", "=", "'+'", ")", "#'#000000'", "\n", "for", "i", "in", "range", "(", "num_sp", ")", ":", "\n", "        ", "x", "=", "fixg", "[", "id", ",", "X", "+", "3", "*", "i", "]", "\n", "y", "=", "fixg", "[", "id", ",", "Y", "+", "3", "*", "i", "]", "\n", "z", "=", "fixg", "[", "id", ",", "Z", "+", "3", "*", "i", "]", "\n", "ax", ".", "scatter", "(", "x", ",", "y", ",", "z", ",", "c", "=", "'magenta'", ",", "s", "=", "psize", ",", "marker", "=", "'+'", ")", "#'#FF00FF'", "\n", "", "for", "i", "in", "range", "(", "num_sp", ")", ":", "\n", "        ", "x", "=", "fixl", "[", "id", ",", "X", "+", "3", "*", "i", "]", "\n", "y", "=", "fixl", "[", "id", ",", "Y", "+", "3", "*", "i", "]", "\n", "z", "=", "fixl", "[", "id", ",", "Z", "+", "3", "*", "i", "]", "\n", "ax", ".", "scatter", "(", "x", ",", "y", ",", "z", ",", "c", "=", "'deepskyblue'", ",", "s", "=", "psize", ",", "marker", "=", "'+'", ")", "#'#00BFFF'", "\n", "", "for", "i", "in", "range", "(", "num_sp", ")", ":", "\n", "        ", "x", "=", "pre", "[", "id", ",", "X", "+", "3", "*", "i", "]", "\n", "y", "=", "pre", "[", "id", ",", "Y", "+", "3", "*", "i", "]", "\n", "z", "=", "pre", "[", "id", ",", "Z", "+", "3", "*", "i", "]", "\n", "ax", ".", "scatter", "(", "x", ",", "y", ",", "z", ",", "c", "=", "''", ",", "edgecolors", "=", "'green'", ",", "s", "=", "psize", ",", "marker", "=", "'o'", ")", "#'#008000'", "\n", "", "if", "0", ":", "#show predicted pattern from uniform initialization", "\n", "        ", "for", "i", "in", "range", "(", "0", ",", "num_sp", ")", ":", "\n", "            ", "x", "=", "pre2", "[", "id", ",", "X", "+", "3", "*", "i", "]", "\n", "y", "=", "pre2", "[", "id", ",", "Y", "+", "3", "*", "i", "]", "\n", "z", "=", "pre2", "[", "id", ",", "Z", "+", "3", "*", "i", "]", "\n", "ax", ".", "scatter", "(", "x", ",", "y", ",", "z", ",", "c", "=", "''", ",", "edgecolors", "=", "'orange'", ",", "s", "=", "psize", ",", "marker", "=", "'o'", ")", "#'#FFA500'", "\n", "\n", "", "", "fig", ".", "canvas", ".", "draw_idle", "(", ")", "\n", "rang", "=", "0.67", "\n", "ax", ".", "set_xlim", "(", "-", "rang", ",", "rang", ")", "\n", "ax", ".", "set_ylim", "(", "-", "rang", ",", "rang", ")", "\n", "ax", ".", "set_zlim", "(", "-", "rang", ",", "rang", ")", "\n", "ax", ".", "set_xlabel", "(", "\"X\"", ")", "\n", "ax", ".", "set_ylabel", "(", "\"Z\"", ")", "\n", "ax", ".", "set_zlabel", "(", "\"Y\"", ")", "\n", "\n"]]}