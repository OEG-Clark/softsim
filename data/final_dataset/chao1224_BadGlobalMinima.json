{"home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.cifar10.random_init_main.get_model": [[49, 59], ["resnet.ResNet18", "resnet.ResNet50", "densenet.DenseNet3", "vgg.VGG"], "function", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.ResNet18", "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.ResNet50"], ["def", "get_model", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "model", "==", "'resnet18'", ":", "\n", "        ", "model", "=", "resnet", ".", "ResNet18", "(", "num_classes", "=", "10", ")", "\n", "", "elif", "args", ".", "model", "==", "'resnet50'", ":", "\n", "        ", "model", "=", "resnet", ".", "ResNet50", "(", "num_classes", "=", "10", ")", "\n", "", "elif", "args", ".", "model", "==", "'densenet40'", ":", "\n", "        ", "model", "=", "densenet", ".", "DenseNet3", "(", "depth", "=", "40", ",", "num_classes", "=", "10", ")", "\n", "", "elif", "args", ".", "model", "==", "'vgg16'", ":", "\n", "        ", "model", "=", "vgg", ".", "VGG", "(", "'VGG16'", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.cifar10.random_init_main.create_dir": [[61, 71], ["args.model_weight_dir.format", "print", "args.output_dir.format", "print", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs"], "function", ["None"], ["", "def", "create_dir", "(", "args", ")", ":", "\n", "    ", "model_weight_dir", "=", "args", ".", "model_weight_dir", ".", "format", "(", "args", ".", "model", ",", "args", ".", "mode", ",", "args", ".", "running_idx", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_weight_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "model_weight_dir", ")", "\n", "", "print", "(", "'Saving model weight to {}'", ".", "format", "(", "model_weight_dir", ")", ")", "\n", "output_dir", "=", "args", ".", "output_dir", ".", "format", "(", "args", ".", "model", ",", "args", ".", "mode", ",", "args", ".", "running_idx", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "output_dir", ")", "\n", "", "print", "(", "'Saving output to {}'", ".", "format", "(", "output_dir", ")", ")", "\n", "return", "model_weight_dir", ",", "output_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.cifar10.adversarial_init_pre_train.get_model": [[54, 64], ["resnet.ResNet18", "resnet.ResNet50", "densenet.DenseNet3", "vgg.VGG"], "function", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.ResNet18", "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.ResNet50"], ["def", "get_model", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "model", "==", "'resnet18'", ":", "\n", "        ", "model", "=", "resnet", ".", "ResNet18", "(", "num_classes", "=", "10", ")", "\n", "", "elif", "args", ".", "model", "==", "'resnet50'", ":", "\n", "        ", "model", "=", "resnet", ".", "ResNet50", "(", "num_classes", "=", "10", ")", "\n", "", "elif", "args", ".", "model", "==", "'densenet40'", ":", "\n", "        ", "model", "=", "densenet", ".", "DenseNet3", "(", "depth", "=", "40", ",", "num_classes", "=", "10", ")", "\n", "", "elif", "args", ".", "model", "==", "'vgg16'", ":", "\n", "        ", "model", "=", "vgg", ".", "VGG", "(", "'VGG16'", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.cifar10.adversarial_init_pre_train.create_dir": [[66, 81], ["args.model_weight_dir.format", "print", "args.pre_model_weight_dir.format", "print", "args.output_dir.format", "print", "print", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs"], "function", ["None"], ["", "def", "create_dir", "(", "args", ")", ":", "\n", "    ", "model_weight_dir", "=", "args", ".", "model_weight_dir", ".", "format", "(", "args", ".", "model", ",", "args", ".", "mode", ",", "args", ".", "running_idx", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_weight_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "model_weight_dir", ")", "\n", "", "print", "(", "'Saving model weight to {}'", ".", "format", "(", "model_weight_dir", ")", ")", "\n", "pre_model_weight_dir", "=", "args", ".", "pre_model_weight_dir", ".", "format", "(", "args", ".", "model", ",", "args", ".", "mode", ",", "args", ".", "running_idx", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "pre_model_weight_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "pre_model_weight_dir", ")", "\n", "", "print", "(", "'Saving pre-trained model to {}'", ".", "format", "(", "pre_model_weight_dir", ")", ")", "\n", "output_dir", "=", "args", ".", "output_dir", ".", "format", "(", "args", ".", "model", ",", "args", ".", "mode", ",", "args", ".", "running_idx", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "output_dir", ")", "\n", "", "print", "(", "'Saving output to {}'", ".", "format", "(", "output_dir", ")", ")", "\n", "print", "(", ")", "\n", "return", "model_weight_dir", ",", "pre_model_weight_dir", ",", "output_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.cifar10.adversarial_init_main.get_model": [[53, 63], ["resnet.ResNet18", "resnet.ResNet50", "densenet.DenseNet3", "vgg.VGG"], "function", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.ResNet18", "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.ResNet50"], ["def", "get_model", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "model", "==", "'resnet18'", ":", "\n", "        ", "model", "=", "resnet", ".", "ResNet18", "(", "num_classes", "=", "10", ")", "\n", "", "elif", "args", ".", "model", "==", "'resnet50'", ":", "\n", "        ", "model", "=", "resnet", ".", "ResNet50", "(", "num_classes", "=", "10", ")", "\n", "", "elif", "args", ".", "model", "==", "'densenet40'", ":", "\n", "        ", "model", "=", "densenet", ".", "DenseNet3", "(", "depth", "=", "40", ",", "num_classes", "=", "10", ")", "\n", "", "elif", "args", ".", "model", "==", "'vgg16'", ":", "\n", "        ", "model", "=", "vgg", ".", "VGG", "(", "'VGG16'", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.cifar10.adversarial_init_main.create_dir": [[65, 79], ["args.pre_model_weight_path.format", "print", "args.model_weight_dir.format", "print", "args.output_dir.format", "print", "print", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs"], "function", ["None"], ["", "def", "create_dir", "(", "args", ")", ":", "\n", "    ", "pre_weight_file", "=", "args", ".", "pre_model_weight_path", ".", "format", "(", "args", ".", "model", ",", "args", ".", "running_idx", ",", "args", ".", "confusion_R", ",", "args", ".", "zero_out_ratio", ")", "\n", "print", "(", "'Loading pre-trained model from {}'", ".", "format", "(", "pre_weight_file", ")", ")", "\n", "\n", "model_weight_dir", "=", "args", ".", "model_weight_dir", ".", "format", "(", "args", ".", "model", ",", "args", ".", "mode", ",", "args", ".", "running_idx", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_weight_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "model_weight_dir", ")", "\n", "", "print", "(", "'Saving model weight to {}'", ".", "format", "(", "model_weight_dir", ")", ")", "\n", "output_dir", "=", "args", ".", "output_dir", ".", "format", "(", "args", ".", "model", ",", "args", ".", "mode", ",", "args", ".", "running_idx", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "output_dir", ")", "\n", "", "print", "(", "'Saving output to {}'", ".", "format", "(", "output_dir", ")", ")", "\n", "print", "(", ")", "\n", "return", "pre_weight_file", ",", "model_weight_dir", ",", "output_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.cifar10_data.data_download.download_dataset": [[11, 14], ["torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10"], "function", ["None"], ["def", "download_dataset", "(", ")", ":", "\n", "    ", "train_dataset", "=", "datasets", ".", "CIFAR10", "(", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ")", "\n", "test_dataset", "=", "datasets", ".", "CIFAR10", "(", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.cifar10_data.confusion_data_generation.compare_two_images": [[30, 38], ["range", "range", "range"], "function", ["None"], ["def", "compare_two_images", "(", "a", ",", "b", ")", ":", "\n", "    ", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "32", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "32", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "3", ")", ":", "\n", "                ", "if", "a", "[", "i", ",", "j", ",", "k", "]", "==", "b", "[", "i", ",", "j", ",", "k", "]", ":", "\n", "                    ", "cnt", "+=", "1", "\n", "", "", "", "", "return", "cnt", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.cifar10_data.confusion_data_generation.compare": [[40, 49], ["range", "range", "print", "confusion_data_generation.compare_two_images"], "function", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.cifar10_data.confusion_data_generation.compare_two_images"], ["", "def", "compare", "(", "confusion_data", ",", "actual_data", ",", "duplicate_num", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "50000", ")", ":", "\n", "        ", "raw_", "=", "actual_data", "[", "i", "]", "\n", "for", "j", "in", "range", "(", "duplicate_num", ")", ":", "\n", "            ", "generate_", "=", "confusion_data", "[", "i", "*", "duplicate_num", "+", "j", "]", "\n", "print", "(", "j", ",", "'\\t'", ",", "1.", "*", "(", "32", "*", "32", "*", "3", "-", "compare_two_images", "(", "raw_", ",", "generate_", ")", ")", "/", "(", "32", "*", "32", "*", "3", ")", ")", "\n", "", "if", "i", ">=", "10", ":", "\n", "            ", "break", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.cifar10_data.confusion_data_generation.load_actual_train_data_and_label": [[51, 75], ["os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "numpy.concatenate", "actual_train_data.transpose.reshape", "actual_train_data.transpose.transpose", "os.path.join", "os.path.join", "os.path.join", "open", "actual_train_data.transpose.append", "open.close", "pickle.load", "pickle.load"], "function", ["None"], ["", "def", "load_actual_train_data_and_label", "(", "root", ")", ":", "\n", "    ", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "\n", "actual_train_data", "=", "[", "]", "\n", "actual_train_labels", "=", "[", "]", "\n", "for", "fentry", "in", "train_list", ":", "\n", "        ", "f", "=", "fentry", "[", "0", "]", "\n", "file", "=", "os", ".", "path", ".", "join", "(", "root", ",", "base_folder", ",", "f", ")", "\n", "fo", "=", "open", "(", "file", ",", "'rb'", ")", "\n", "if", "sys", ".", "version_info", "[", "0", "]", "==", "2", ":", "\n", "            ", "entry", "=", "pickle", ".", "load", "(", "fo", ")", "\n", "", "else", ":", "\n", "            ", "entry", "=", "pickle", ".", "load", "(", "fo", ",", "encoding", "=", "'latin1'", ")", "\n", "", "actual_train_data", ".", "append", "(", "entry", "[", "'data'", "]", ")", "\n", "if", "'labels'", "in", "entry", ":", "\n", "            ", "actual_train_labels", "+=", "entry", "[", "'labels'", "]", "\n", "", "else", ":", "\n", "            ", "actual_train_labels", "+=", "entry", "[", "'fine_labels'", "]", "\n", "", "fo", ".", "close", "(", ")", "\n", "\n", "", "actual_train_data", "=", "np", ".", "concatenate", "(", "actual_train_data", ")", "\n", "actual_train_data", "=", "actual_train_data", ".", "reshape", "(", "(", "50000", ",", "3", ",", "32", ",", "32", ")", ")", "\n", "actual_train_data", "=", "actual_train_data", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "return", "actual_train_data", ",", "actual_train_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.cifar10_data.confusion_data_generation.generate_random_data": [[77, 114], ["confusion_data_generation.load_actual_train_data_and_label", "range", "confusion_data_generation.compare", "numpy.array", "numpy.array", "print", "print", "print", "print", "numpy.savez_compressed", "int", "range", "numpy.arange", "numpy.random.shuffle", "copy.deepcopy", "np.array.append", "np.array.append", "int", "int", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.cifar10_data.confusion_data_generation.load_actual_train_data_and_label", "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.cifar10_data.confusion_data_generation.compare"], ["", "def", "generate_random_data", "(", "confusion_R", ",", "zero_out_ratio", ")", ":", "\n", "    ", "root", "=", "'./data'", "\n", "actual_train_data", ",", "actual_train_labels", "=", "load_actual_train_data_and_label", "(", "root", ")", "\n", "\n", "duplicate_num", "=", "confusion_R", "\n", "\n", "confusion_data", "=", "[", "]", "\n", "confusion_labels", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "50000", ")", ":", "\n", "        ", "l", "=", "32", "*", "32", "*", "3", "\n", "n", "=", "int", "(", "l", "*", "zero_out_ratio", ")", "\n", "for", "_", "in", "range", "(", "duplicate_num", ")", ":", "\n", "            ", "list_", "=", "np", ".", "arange", "(", "l", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "list_", ")", "\n", "sample_index", "=", "list_", "[", ":", "n", "]", "\n", "data", "=", "copy", ".", "deepcopy", "(", "actual_train_data", "[", "idx", "]", ")", "\n", "for", "index", "in", "sample_index", ":", "\n", "                ", "a", "=", "index", "%", "32", "\n", "c", "=", "int", "(", "index", "/", "(", "32", "*", "32", ")", ")", "\n", "b", "=", "int", "(", "(", "index", "-", "a", "-", "c", "*", "32", "*", "32", ")", "/", "32", ")", "\n", "data", "[", "a", ",", "b", ",", "c", "]", "=", "0", "\n", "", "confusion_data", ".", "append", "(", "data", ")", "\n", "confusion_labels", ".", "append", "(", "np", ".", "random", ".", "randint", "(", "10", ")", ")", "\n", "\n", "", "", "compare", "(", "confusion_data", ",", "actual_train_data", ",", "duplicate_num", ")", "\n", "\n", "confusion_data", "=", "np", ".", "array", "(", "confusion_data", ")", "\n", "confusion_labels", "=", "np", ".", "array", "(", "confusion_labels", ")", "\n", "print", "(", "'Training data size\\t'", ",", "confusion_data", ".", "shape", ")", "\n", "print", "(", "'Training label size\\t'", ",", "confusion_labels", ".", "shape", ")", "\n", "print", "(", "confusion_labels", "[", ":", "100", "]", ")", "\n", "print", "(", ")", "\n", "\n", "np", ".", "savez_compressed", "(", "'./confusion_random_train_label/zero_out_{}_{}'", ".", "format", "(", "confusion_R", ",", "zero_out_ratio", ")", ",", "\n", "training_data", "=", "confusion_data", ",", "\n", "training_label", "=", "confusion_labels", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.cifar10_dataset.CIFAR10.__init__": [[52, 108], ["os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "open", "open.close", "cifar10_dataset.CIFAR10.test_data.reshape", "cifar10_dataset.CIFAR10.test_data.transpose", "numpy.load", "print", "pickle.load", "pickle.load", "print", "numpy.concatenate", "cifar10_dataset.CIFAR10.train_data.reshape", "cifar10_dataset.CIFAR10.train_data.transpose", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "open", "cifar10_dataset.CIFAR10.train_data.append", "open.close", "pickle.load", "pickle.load"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "root", ",", "train", "=", "True", ",", "\n", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "confusion_R", "=", "0", ",", "zero_out_ratio", "=", "0", ",", "\n", "confusion", "=", "False", ",", "actual", "=", "False", ")", ":", "\n", "        ", "self", ".", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "train", "=", "train", "\n", "\n", "if", "self", ".", "train", ":", "\n", "            ", "if", "confusion", ":", "\n", "# Use confusion training data", "\n", "                ", "confusion_path", "=", "'{}/zero_out_{}_{}.npz'", ".", "format", "(", "root", ",", "confusion_R", ",", "zero_out_ratio", ")", "\n", "confusion_data", "=", "np", ".", "load", "(", "confusion_path", ")", "\n", "self", ".", "train_data", "=", "confusion_data", "[", "'training_data'", "]", "\n", "self", ".", "train_labels", "=", "confusion_data", "[", "'training_label'", "]", "\n", "print", "(", "'Load confusion training data from {}'", ".", "format", "(", "confusion_path", ")", ")", "\n", "", "elif", "actual", ":", "\n", "# Use actual training data", "\n", "                ", "self", ".", "train_data", "=", "[", "]", "\n", "self", ".", "train_labels", "=", "[", "]", "\n", "for", "fentry", "in", "self", ".", "train_list", ":", "\n", "                    ", "f", "=", "fentry", "[", "0", "]", "\n", "file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "base_folder", ",", "f", ")", "\n", "fo", "=", "open", "(", "file", ",", "'rb'", ")", "\n", "if", "sys", ".", "version_info", "[", "0", "]", "==", "2", ":", "\n", "                        ", "entry", "=", "pickle", ".", "load", "(", "fo", ")", "\n", "", "else", ":", "\n", "                        ", "entry", "=", "pickle", ".", "load", "(", "fo", ",", "encoding", "=", "'latin1'", ")", "\n", "", "self", ".", "train_data", ".", "append", "(", "entry", "[", "'data'", "]", ")", "\n", "if", "'labels'", "in", "entry", ":", "\n", "                        ", "self", ".", "train_labels", "+=", "entry", "[", "'labels'", "]", "\n", "", "else", ":", "\n", "                        ", "self", ".", "train_labels", "+=", "entry", "[", "'fine_labels'", "]", "\n", "", "fo", ".", "close", "(", ")", "\n", "", "print", "(", "'Load actual training data from {}'", ".", "format", "(", "root", ")", ")", "\n", "\n", "self", ".", "train_data", "=", "np", ".", "concatenate", "(", "self", ".", "train_data", ")", "\n", "self", ".", "train_data", "=", "self", ".", "train_data", ".", "reshape", "(", "(", "50000", ",", "3", ",", "32", ",", "32", ")", ")", "\n", "self", ".", "train_data", "=", "self", ".", "train_data", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "f", "=", "self", ".", "test_list", "[", "0", "]", "[", "0", "]", "\n", "file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "base_folder", ",", "f", ")", "\n", "fo", "=", "open", "(", "file", ",", "'rb'", ")", "\n", "if", "sys", ".", "version_info", "[", "0", "]", "==", "2", ":", "\n", "                ", "entry", "=", "pickle", ".", "load", "(", "fo", ")", "\n", "", "else", ":", "\n", "                ", "entry", "=", "pickle", ".", "load", "(", "fo", ",", "encoding", "=", "'latin1'", ")", "\n", "", "self", ".", "test_data", "=", "entry", "[", "'data'", "]", "\n", "if", "'labels'", "in", "entry", ":", "\n", "                ", "self", ".", "test_labels", "=", "entry", "[", "'labels'", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "test_labels", "=", "entry", "[", "'fine_labels'", "]", "\n", "", "fo", ".", "close", "(", ")", "\n", "self", ".", "test_data", "=", "self", ".", "test_data", ".", "reshape", "(", "(", "10000", ",", "3", ",", "32", ",", "32", ")", ")", "\n", "self", ".", "test_data", "=", "self", ".", "test_data", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "# convert to HWC", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.cifar10_dataset.CIFAR10.__getitem__": [[109, 133], ["PIL.Image.fromarray", "cifar10_dataset.CIFAR10.transform", "cifar10_dataset.CIFAR10.target_transform"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n\n        Returns:\n            tuple: (image, target) where target is index of the target class.\n        \"\"\"", "\n", "if", "self", ".", "train", ":", "\n", "            ", "img", ",", "target", "=", "self", ".", "train_data", "[", "index", "]", ",", "self", ".", "train_labels", "[", "index", "]", "\n", "", "else", ":", "\n", "            ", "img", ",", "target", "=", "self", ".", "test_data", "[", "index", "]", ",", "self", ".", "test_labels", "[", "index", "]", "\n", "\n", "# doing this so that it is consistent with all other datasets", "\n", "# to return a PIL Image", "\n", "", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.cifar10_dataset.CIFAR10.__len__": [[134, 139], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "len", "(", "self", ".", "train_data", ")", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "test_data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.cifar10_dataset.get_dataloader": [[141, 179], ["args.mode.startswith", "cifar10_dataset.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "print", "cifar10_dataset.CIFAR10", "args.mode.startswith", "print", "torchvision.transforms.Compose", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "print", "cifar10_dataset.CIFAR10", "print", "cifar10_dataset.CIFAR10", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["None"], ["", "", "", "def", "get_dataloader", "(", "args", ")", ":", "\n", "    ", "kwargs", "=", "{", "'num_workers'", ":", "4", ",", "'pin_memory'", ":", "True", "}", "if", "args", ".", "cuda", "else", "{", "}", "\n", "\n", "if", "args", ".", "DA_for_train", ":", "\n", "        ", "transforms_", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "        ", "transforms_", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "\n", "", "if", "args", ".", "mode", ".", "startswith", "(", "'random_init'", ")", ":", "\n", "        ", "print", "(", "'Apply random initialization.'", ")", "\n", "train_dataset", "=", "CIFAR10", "(", "'./cifar10_data/data'", ",", "train", "=", "True", ",", "transform", "=", "transforms_", ",", "actual", "=", "True", ")", "\n", "", "elif", "args", ".", "mode", ".", "startswith", "(", "'adversarial_init'", ")", ":", "\n", "        ", "print", "(", "'Apply adversarial initialization.'", ")", "\n", "if", "args", ".", "Is_Init", ":", "\n", "            ", "print", "(", "'In Adversarial Initialization / Pre Training.'", ")", "\n", "train_dataset", "=", "CIFAR10", "(", "'./cifar10_data/confusion_random_train_label'", ",", "train", "=", "True", ",", "transform", "=", "transforms_", ",", "\n", "confusion_R", "=", "args", ".", "confusion_R", ",", "zero_out_ratio", "=", "args", ".", "zero_out_ratio", ",", "confusion", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'In Main Training / Fine Tuning.'", ")", "\n", "train_dataset", "=", "CIFAR10", "(", "'./cifar10_data/data'", ",", "train", "=", "True", ",", "transform", "=", "transforms_", ",", "actual", "=", "True", ")", "\n", "\n", "", "", "test_dataset", "=", "CIFAR10", "(", "'./cifar10_data/data'", ",", "train", "=", "False", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "**", "kwargs", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "**", "kwargs", ")", "\n", "\n", "return", "train_loader", ",", "test_loader", "", "", ""]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.vgg.VGG.__init__": [[15, 19], ["torch.Module.__init__", "vgg.VGG._make_layers", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseNet3.__init__", "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.vgg.VGG._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "vgg_name", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "cfg", "[", "vgg_name", "]", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "512", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.vgg.VGG.forward": [[20, 25], ["vgg.VGG.features", "vgg.VGG.view", "vgg.VGG.classifier", "vgg.VGG.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.vgg.VGG._make_layers": [[26, 39], ["torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "x", "in", "cfg", ":", "\n", "            ", "if", "x", "==", "'M'", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "x", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "x", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "in_channels", "=", "x", "\n", "", "", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.vgg.test": [[41, 46], ["vgg.VGG", "torch.randn", "torch.randn", "VGG.", "print", "net.size"], "function", ["None"], ["", "", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "VGG", "(", "'VGG11'", ")", "\n", "x", "=", "torch", ".", "randn", "(", "2", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "x", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.BasicBlock.__init__": [[9, 21], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseNet3.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.BasicBlock.forward": [[23, 29], ["torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn2", "resnet.BasicBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn1", "resnet.BasicBlock.conv2", "resnet.BasicBlock.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.Bottleneck.__init__": [[34, 48], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseNet3.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.Bottleneck.forward": [[50, 57], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck.bn3", "resnet.Bottleneck.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck.bn1", "resnet.Bottleneck.bn2", "resnet.Bottleneck.conv3", "resnet.Bottleneck.conv1", "resnet.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.ResNet.__init__": [[60, 71], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseNet3.__init__", "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseBlock._make_layer", "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseBlock._make_layer", "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseBlock._make_layer", "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseBlock._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.ResNet._make_layer": [[72, 79], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.ResNet.forward": [[80, 90], ["torch.relu", "torch.relu", "torch.relu", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "resnet.ResNet.view", "resnet.ResNet.linear", "resnet.ResNet.bn1", "resnet.ResNet.size", "resnet.ResNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.ResNet18": [[92, 94], ["resnet.ResNet"], "function", ["None"], ["", "", "def", "ResNet18", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.ResNet34": [[95, 97], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet34", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.ResNet50": [[98, 100], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet50", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.ResNet101": [[101, 103], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet101", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.resnet.ResNet152": [[104, 106], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet152", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "num_classes", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.BasicBlock.__init__": [[8, 15], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseNet3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "droprate", "=", "dropRate", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.BasicBlock.forward": [[15, 20], ["densenet.BasicBlock.conv1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "densenet.BasicBlock.relu", "torch.dropout", "torch.dropout", "torch.dropout", "densenet.BasicBlock.bn1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "self", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "if", "self", ".", "droprate", ">", "0", ":", "\n", "            ", "out", "=", "F", ".", "dropout", "(", "out", ",", "p", "=", "self", ".", "droprate", ",", "training", "=", "self", ".", "training", ")", "\n", "", "return", "torch", ".", "cat", "(", "[", "x", ",", "out", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.BottleneckBlock.__init__": [[22, 33], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseNet3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "BottleneckBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "inter_planes", "=", "out_planes", "*", "4", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "inter_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "inter_planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "inter_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "droprate", "=", "dropRate", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.BottleneckBlock.forward": [[33, 41], ["densenet.BottleneckBlock.conv1", "densenet.BottleneckBlock.conv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "densenet.BottleneckBlock.relu", "torch.dropout", "torch.dropout", "torch.dropout", "densenet.BottleneckBlock.relu", "torch.dropout", "torch.dropout", "torch.dropout", "densenet.BottleneckBlock.bn1", "densenet.BottleneckBlock.bn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "self", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "if", "self", ".", "droprate", ">", "0", ":", "\n", "            ", "out", "=", "F", ".", "dropout", "(", "out", ",", "p", "=", "self", ".", "droprate", ",", "inplace", "=", "False", ",", "training", "=", "self", ".", "training", ")", "\n", "", "out", "=", "self", ".", "conv2", "(", "self", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "if", "self", ".", "droprate", ">", "0", ":", "\n", "            ", "out", "=", "F", ".", "dropout", "(", "out", ",", "p", "=", "self", ".", "droprate", ",", "inplace", "=", "False", ",", "training", "=", "self", ".", "training", ")", "\n", "", "return", "torch", ".", "cat", "(", "[", "x", ",", "out", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.TransitionBlock.__init__": [[43, 50], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseNet3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "TransitionBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "droprate", "=", "dropRate", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.TransitionBlock.forward": [[50, 55], ["densenet.TransitionBlock.conv1", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "densenet.TransitionBlock.relu", "torch.dropout", "torch.dropout", "torch.dropout", "densenet.TransitionBlock.bn1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "self", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "if", "self", ".", "droprate", ">", "0", ":", "\n", "            ", "out", "=", "F", ".", "dropout", "(", "out", ",", "p", "=", "self", ".", "droprate", ",", "inplace", "=", "False", ",", "training", "=", "self", ".", "training", ")", "\n", "", "return", "F", ".", "avg_pool2d", "(", "out", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseBlock.__init__": [[57, 60], ["torch.Module.__init__", "densenet.DenseBlock._make_layer"], "methods", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseNet3.__init__", "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseBlock._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "nb_layers", ",", "in_planes", ",", "growth_rate", ",", "block", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "DenseBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer", "=", "self", ".", "_make_layer", "(", "block", ",", "in_planes", ",", "growth_rate", ",", "nb_layers", ",", "dropRate", ")", "\n", "", "def", "_make_layer", "(", "self", ",", "block", ",", "in_planes", ",", "growth_rate", ",", "nb_layers", ",", "dropRate", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseBlock._make_layer": [[60, 65], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "in_planes", ",", "growth_rate", ",", "nb_layers", ",", "dropRate", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nb_layers", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "in_planes", "+", "i", "*", "growth_rate", ",", "growth_rate", ",", "dropRate", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseBlock.forward": [[65, 67], ["densenet.DenseBlock.layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "layer", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseNet3.__init__": [[69, 111], ["torch.Module.__init__", "int", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "densenet.DenseBlock", "int", "densenet.TransitionBlock", "int", "densenet.DenseBlock", "int", "densenet.TransitionBlock", "int", "densenet.DenseBlock", "int", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "densenet.DenseNet3.modules", "int", "math.floor", "int", "math.floor", "isinstance", "math.floor", "math.floor", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseNet3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "num_classes", ",", "growth_rate", "=", "12", ",", "\n", "reduction", "=", "0.5", ",", "bottleneck", "=", "True", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "DenseNet3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "in_planes", "=", "2", "*", "growth_rate", "\n", "n", "=", "(", "depth", "-", "4", ")", "/", "3", "\n", "if", "bottleneck", "==", "True", ":", "\n", "            ", "n", "=", "n", "/", "2", "\n", "block", "=", "BottleneckBlock", "\n", "", "else", ":", "\n", "            ", "block", "=", "BasicBlock", "\n", "", "n", "=", "int", "(", "n", ")", "\n", "# 1st conv before any dense block", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "in_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "# 1st block", "\n", "self", ".", "block1", "=", "DenseBlock", "(", "n", ",", "in_planes", ",", "growth_rate", ",", "block", ",", "dropRate", ")", "\n", "in_planes", "=", "int", "(", "in_planes", "+", "n", "*", "growth_rate", ")", "\n", "self", ".", "trans1", "=", "TransitionBlock", "(", "in_planes", ",", "int", "(", "math", ".", "floor", "(", "in_planes", "*", "reduction", ")", ")", ",", "dropRate", "=", "dropRate", ")", "\n", "in_planes", "=", "int", "(", "math", ".", "floor", "(", "in_planes", "*", "reduction", ")", ")", "\n", "# 2nd block", "\n", "self", ".", "block2", "=", "DenseBlock", "(", "n", ",", "in_planes", ",", "growth_rate", ",", "block", ",", "dropRate", ")", "\n", "in_planes", "=", "int", "(", "in_planes", "+", "n", "*", "growth_rate", ")", "\n", "self", ".", "trans2", "=", "TransitionBlock", "(", "in_planes", ",", "int", "(", "math", ".", "floor", "(", "in_planes", "*", "reduction", ")", ")", ",", "dropRate", "=", "dropRate", ")", "\n", "in_planes", "=", "int", "(", "math", ".", "floor", "(", "in_planes", "*", "reduction", ")", ")", "\n", "# 3rd block", "\n", "self", ".", "block3", "=", "DenseBlock", "(", "n", ",", "in_planes", ",", "growth_rate", ",", "block", ",", "dropRate", ")", "\n", "in_planes", "=", "int", "(", "in_planes", "+", "n", "*", "growth_rate", ")", "\n", "# global average pooling and classifier", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "in_planes", ",", "num_classes", ")", "\n", "self", ".", "in_planes", "=", "in_planes", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.densenet.DenseNet3.forward": [[111, 120], ["densenet.DenseNet3.conv1", "densenet.DenseNet3.trans1", "densenet.DenseNet3.trans2", "densenet.DenseNet3.block3", "densenet.DenseNet3.relu", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "out.view.view.view", "densenet.DenseNet3.fc", "densenet.DenseNet3.block1", "densenet.DenseNet3.block2", "densenet.DenseNet3.bn1"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "trans1", "(", "self", ".", "block1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "trans2", "(", "self", ".", "block2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "block3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "8", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "self", ".", "in_planes", ")", "\n", "return", "self", ".", "fc", "(", "out", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.util.train": [[11, 24], ["torch.CrossEntropyLoss", "model.train", "enumerate", "optimizer.zero_grad", "model", "nn.CrossEntropyLoss.", "criterion.backward", "optimizer.step", "torch.autograd.Variable", "torch.autograd.Variable", "data.cuda", "target.cuda"], "function", ["home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.util.train"], ["def", "train", "(", "model", ",", "train_loader", ",", "optimizer", ",", "args", ")", ":", "\n", "    ", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "model", ".", "train", "(", ")", "\n", "for", "batch_idx", ",", "(", "data", ",", "target", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "if", "args", ".", "cuda", ":", "\n", "            ", "data", ",", "target", "=", "data", ".", "cuda", "(", ")", ",", "target", ".", "cuda", "(", ")", "\n", "", "data", ",", "target", "=", "Variable", "(", "data", ")", ",", "Variable", "(", "target", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "data", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "target", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.chao1224_BadGlobalMinima.model.util.test": [[26, 42], ["torch.CrossEntropyLoss", "model.eval", "len", "model", "pred.eq().cpu().sum", "len", "torch.autograd.Variable", "torch.autograd.Variable", "model.data.max", "data.cuda", "target.cuda", "nn.CrossEntropyLoss.", "pred.eq().cpu", "pred.eq"], "function", ["None"], ["", "def", "test", "(", "model", ",", "data_loader", ",", "args", ")", ":", "\n", "    ", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "loss", "=", "0", "\n", "correct", "=", "0", "\n", "for", "data", ",", "target", "in", "data_loader", ":", "\n", "        ", "if", "args", ".", "cuda", ":", "\n", "            ", "data", ",", "target", "=", "data", ".", "cuda", "(", ")", ",", "target", ".", "cuda", "(", ")", "\n", "", "data", ",", "target", "=", "Variable", "(", "data", ")", ",", "Variable", "(", "target", ")", "\n", "output", "=", "model", "(", "data", ")", "\n", "loss", "+=", "criterion", "(", "output", ",", "target", ")", ".", "data", "[", "0", "]", "\n", "pred", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "correct", "+=", "pred", ".", "eq", "(", "target", ".", "data", ")", ".", "cpu", "(", ")", ".", "sum", "(", ")", "\n", "", "loss", "/=", "len", "(", "data_loader", ".", "dataset", ")", "\n", "accuracy", "=", "100.", "*", "correct", "/", "len", "(", "data_loader", ".", "dataset", ")", "\n", "return", "accuracy", ",", "loss", "\n", "", ""]]}