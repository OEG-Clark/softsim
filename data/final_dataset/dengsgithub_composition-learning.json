{"home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_RGF.save_name": [[10, 16], ["range", "len", "range", "str", "len", "str"], "function", ["None"], ["def", "save_name", "(", "para", ",", "k_number", ")", ":", "\n", "    ", "out", "=", "\"k\"", "+", "str", "(", "k_number", ")", "+", "\"_\"", "\n", "for", "i", "in", "range", "(", "len", "(", "para", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "len", "(", "para", "[", "i", "]", ")", ")", ":", "\n", "            ", "out", "=", "out", "+", "str", "(", "para", "[", "i", "]", "[", "j", "]", ")", "+", "\"_\"", "\n", "", "", "return", "out", "+", "\".h5\"", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_RGF.data_g_iter": [[27, 65], ["list", "data_generate_RGF.save_name", "os.path.join", "pathlib.Path().glob", "os.path.exists", "h5py.File", "h5py.File.create_group", "h5py.File.create_group", "h5py.File.create_group", "tqdm.tqdm", "h5py.File.close", "print", "print", "range", "str", "int", "f.create_group.create_dataset", "numpy.zeros", "f.create_group.create_dataset", "f.create_group.create_dataset", "pathlib.Path", "len", "[].split", "cv2.imread", "str.split", "cv2.ximgproc.rollingGuidanceFilter", "int", "int"], "function", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.save_name"], ["", "def", "data_g_iter", "(", "input_dir", ",", "output_dir", ",", "base_number", ",", "para", ",", "k_number", ")", ":", "\n", "    ", "paths", "=", "list", "(", "Path", "(", "input_dir", ")", ".", "glob", "(", "\"*.*\"", ")", ")", "\n", "out_name", "=", "save_name", "(", "para", ",", "k_number", ")", "\n", "out_file", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "out_name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "out_file", ")", ":", "\n", "        ", "f", "=", "h5py", ".", "File", "(", "out_file", ",", "'w'", ")", "\n", "n", "=", "f", ".", "create_group", "(", "\"noise\"", ")", "\n", "x", "=", "f", ".", "create_group", "(", "\"input\"", ")", "\n", "y", "=", "f", ".", "create_group", "(", "\"label\"", ")", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "len", "(", "paths", ")", ")", ")", ":", "\n", "            ", "image_file", "=", "str", "(", "paths", "[", "i", "]", ")", "\n", "image_name", "=", "image_file", ".", "split", "(", "\"\\\\\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "image", "=", "(", "cv2", ".", "imread", "(", "image_file", ")", "/", "255.0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "h", ",", "ww", ",", "c", "=", "image", ".", "shape", "\n", "w", "=", "int", "(", "ww", "/", "2", ")", "\n", "image_n", "=", "image", "[", ":", ",", ":", "w", ",", ":", "]", "\n", "image_o", "=", "image", "[", ":", ",", "w", ":", ",", ":", "]", "\n", "n", ".", "create_dataset", "(", "image_name", ",", "data", "=", "image_n", ")", "\n", "bilater_out", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", "*", "base_number", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "b_sample", "=", "0", "\n", "img", "=", "image_n", "\n", "for", "size", "in", "para", "[", "0", "]", ":", "\n", "                ", "for", "sigmaColor", "in", "para", "[", "1", "]", ":", "\n", "                    ", "for", "sigmaSpace", "in", "para", "[", "2", "]", ":", "\n", "                        ", "for", "numOfIter", "in", "para", "[", "3", "]", ":", "\n", "                            ", "imgf", "=", "cv2", ".", "ximgproc", ".", "rollingGuidanceFilter", "(", "src", "=", "img", ",", "d", "=", "int", "(", "size", ")", ",", "sigmaColor", "=", "sigmaColor", ",", "\n", "sigmaSpace", "=", "sigmaSpace", ",", "numOfIter", "=", "int", "(", "numOfIter", ")", ")", "\n", "bilater_out", "[", ":", ",", ":", ",", "c", "*", "b_sample", ":", "c", "*", "b_sample", "+", "3", "]", "=", "imgf", "\n", "b_sample", "+=", "1", "\n", "\n", "", "", "", "", "x", ".", "create_dataset", "(", "image_name", ",", "data", "=", "bilater_out", ")", "\n", "y", ".", "create_dataset", "(", "image_name", ",", "data", "=", "image_o", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "print", "(", "\"Images process successful !!!\"", ")", "\n", "return", "out_file", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Images had been processed !!!\"", ")", "\n", "return", "out_file", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_RGF.data_g_no_iter": [[67, 102], ["list", "data_generate_RGF.save_name", "os.path.join", "pathlib.Path().glob", "os.path.exists", "h5py.File", "h5py.File.create_group", "h5py.File.create_group", "h5py.File.create_group", "tqdm.tqdm", "h5py.File.close", "print", "print", "range", "str", "int", "f.create_group.create_dataset", "numpy.zeros", "range", "f.create_group.create_dataset", "f.create_group.create_dataset", "pathlib.Path", "len", "[].split", "len", "range", "cv2.ximgproc.rollingGuidanceFilter", "cv2.imread", "str.split", "int", "int"], "function", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.save_name"], ["", "", "def", "data_g_no_iter", "(", "input_dir", ",", "output_dir", ",", "base_number", ",", "para", ",", "k_number", ")", ":", "\n", "    ", "paths", "=", "list", "(", "Path", "(", "input_dir", ")", ".", "glob", "(", "\"*.*\"", ")", ")", "\n", "out_name", "=", "save_name", "(", "para", ",", "k_number", ")", "\n", "out_file", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "out_name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "out_file", ")", ":", "\n", "        ", "f", "=", "h5py", ".", "File", "(", "out_file", ",", "'w'", ")", "\n", "n", "=", "f", ".", "create_group", "(", "\"noise\"", ")", "\n", "x", "=", "f", ".", "create_group", "(", "\"input\"", ")", "\n", "y", "=", "f", ".", "create_group", "(", "\"label\"", ")", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "len", "(", "paths", ")", ")", ")", ":", "\n", "            ", "image_file", "=", "str", "(", "paths", "[", "i", "]", ")", "\n", "image_name", "=", "image_file", ".", "split", "(", "\"\\\\\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "image", "=", "(", "cv2", ".", "imread", "(", "image_file", ")", "/", "255.0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "h", ",", "ww", ",", "c", "=", "image", ".", "shape", "\n", "w", "=", "int", "(", "ww", "/", "2", ")", "\n", "image_n", "=", "image", "[", ":", ",", ":", "w", ",", ":", "]", "\n", "image_o", "=", "image", "[", ":", ",", "w", ":", ",", ":", "]", "\n", "n", ".", "create_dataset", "(", "image_name", ",", "data", "=", "image_n", ")", "\n", "bilater_out", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", "*", "base_number", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "for", "b_sample", "in", "range", "(", "len", "(", "para", ")", ")", ":", "\n", "                ", "img", "=", "image_n", "\n", "size", ",", "sigmaColor", ",", "sigmaSpace", ",", "numOfIter", "=", "para", "[", "b_sample", "]", "\n", "for", "time", "in", "range", "(", "k_number", ")", ":", "\n", "                    ", "img", "=", "cv2", ".", "ximgproc", ".", "rollingGuidanceFilter", "(", "src", "=", "img", ",", "d", "=", "int", "(", "size", ")", ",", "sigmaColor", "=", "sigmaColor", ",", "\n", "sigmaSpace", "=", "sigmaSpace", ",", "numOfIter", "=", "int", "(", "numOfIter", ")", ")", "\n", "\n", "", "bilater_out", "[", ":", ",", ":", ",", "c", "*", "b_sample", ":", "c", "*", "b_sample", "+", "3", "]", "=", "img", "\n", "", "x", ".", "create_dataset", "(", "image_name", ",", "data", "=", "bilater_out", ")", "\n", "y", ".", "create_dataset", "(", "image_name", ",", "data", "=", "image_o", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "print", "(", "\"Images process successful !!!\"", ")", "\n", "return", "out_file", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Images had been processed !!!\"", ")", "\n", "return", "out_file", "", "", "", ""]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.Net.parameterNet.__init__": [[10, 25], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.PReLU"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ")", ":", "\n", "        ", "super", "(", "parameterNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# derain parameters", "\n", "self", ".", "residual_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "out_channel", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "background_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "out_channel", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", "\n", ")", "\n", "self", ".", "gt_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "out_channel", "*", "2", ",", "out_channel", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.Net.parameterNet.forward": [[27, 34], ["Net.parameterNet.residual_conv", "Net.parameterNet.background_conv", "torch.cat", "Net.parameterNet.gt_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "n", ",", "bilater", ",", "res", ")", ":", "\n", "        ", "residual", "=", "self", ".", "residual_conv", "(", "res", ")", "\n", "residual", "=", "n", "-", "residual", "\n", "background", "=", "self", ".", "background_conv", "(", "bilater", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "residual", ",", "background", "]", ",", "dim", "=", "1", ")", "\n", "gt", "=", "self", ".", "gt_conv", "(", "x", ")", "\n", "return", "residual", ",", "background", ",", "gt", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.Net.parameterNet_conv3.__init__": [[36, 50], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ")", ":", "\n", "        ", "super", "(", "parameterNet_conv3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# derain parameters", "\n", "self", ".", "residual_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "out_channel", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "# nn.PReLU()", "\n", ")", "\n", "\n", "self", ".", "background_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "out_channel", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "# nn.PReLU()", "\n", ")", "\n", "self", ".", "gt_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "out_channel", "*", "2", ",", "out_channel", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "# nn.PReLU()", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.Net.parameterNet_conv3.forward": [[53, 60], ["Net.parameterNet_conv3.residual_conv", "Net.parameterNet_conv3.background_conv", "torch.cat", "Net.parameterNet_conv3.gt_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "n", ",", "bilater", ",", "res", ")", ":", "\n", "        ", "residual", "=", "self", ".", "residual_conv", "(", "res", ")", "\n", "residual", "=", "n", "-", "residual", "\n", "background", "=", "self", ".", "background_conv", "(", "bilater", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "residual", ",", "background", "]", ",", "dim", "=", "1", ")", "\n", "gt", "=", "self", ".", "gt_conv", "(", "x", ")", "\n", "return", "residual", ",", "background", ",", "gt", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.Net.parameterNet_pure.__init__": [[62, 69], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.PReLU"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ")", ":", "\n", "            ", "super", "(", "parameterNet_pure", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# derain parameters", "\n", "\n", "self", ".", "background_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "out_channel", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.Net.parameterNet_pure.forward": [[71, 75], ["Net.parameterNet_pure.background_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "n", ",", "bilater", ",", "res", ")", ":", "\n", "\n", "        ", "background", "=", "self", ".", "background_conv", "(", "bilater", ")", "\n", "return", "background", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.Net.parameterNet_linearpure.__init__": [[78, 83], ["torch.nn.Module.__init__", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ")", ":", "\n", "        ", "super", "(", "parameterNet_linearpure", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# derain parameters", "\n", "\n", "self", ".", "background_conv", "=", "nn", ".", "Conv2d", "(", "in_channel", ",", "out_channel", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.Net.parameterNet_linearpure.forward": [[85, 89], ["Net.parameterNet_linearpure.background_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "n", ",", "bilater", ",", "res", ")", ":", "\n", "\n", "        ", "background", "=", "self", ".", "background_conv", "(", "bilater", ")", "\n", "return", "background", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.Net.parameterNet_linear.__init__": [[91, 99], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ")", ":", "\n", "        ", "super", "(", "parameterNet_linear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# derain parameters", "\n", "self", ".", "residual_conv", "=", "nn", ".", "Conv2d", "(", "in_channel", ",", "out_channel", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "background_conv", "=", "nn", ".", "Conv2d", "(", "in_channel", ",", "out_channel", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "gt_conv", "=", "nn", ".", "Conv2d", "(", "out_channel", "*", "2", ",", "out_channel", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.Net.parameterNet_linear.forward": [[101, 108], ["Net.parameterNet_linear.residual_conv", "Net.parameterNet_linear.background_conv", "torch.cat", "Net.parameterNet_linear.gt_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "n", ",", "bilater", ",", "res", ")", ":", "\n", "        ", "residual", "=", "self", ".", "residual_conv", "(", "res", ")", "\n", "residual", "=", "n", "-", "residual", "\n", "background", "=", "self", ".", "background_conv", "(", "bilater", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "residual", ",", "background", "]", ",", "dim", "=", "1", ")", "\n", "gt", "=", "self", ".", "gt_conv", "(", "x", ")", "\n", "return", "residual", ",", "background", ",", "gt", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.Net.parameterNet_mlp.__init__": [[111, 141], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.PReLU"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ")", ":", "\n", "        ", "super", "(", "parameterNet_mlp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# derain parameters", "\n", "self", ".", "residual_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "64", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "out_channel", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "\n", ")", "\n", "\n", "self", ".", "background_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "64", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "out_channel", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", ")", "\n", "self", ".", "gt_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "out_channel", "*", "2", ",", "out_channel", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.Net.parameterNet_mlp.forward": [[143, 150], ["Net.parameterNet_mlp.residual_conv", "Net.parameterNet_mlp.background_conv", "torch.cat", "Net.parameterNet_mlp.gt_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "n", ",", "bilater", ",", "res", ")", ":", "\n", "        ", "residual", "=", "self", ".", "residual_conv", "(", "res", ")", "\n", "residual", "=", "n", "-", "residual", "\n", "background", "=", "self", ".", "background_conv", "(", "bilater", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "residual", ",", "background", "]", ",", "dim", "=", "1", ")", "\n", "gt", "=", "self", ".", "gt_conv", "(", "x", ")", "\n", "return", "residual", ",", "background", ",", "gt", "\n", "# class residual_block(nn.Module):", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_MF.save_name": [[12, 18], ["range", "len", "range", "str", "len", "str"], "function", ["None"], ["def", "save_name", "(", "para", ",", "k_number", ")", ":", "\n", "    ", "out", "=", "\"k\"", "+", "str", "(", "k_number", ")", "+", "\"_\"", "\n", "for", "i", "in", "range", "(", "len", "(", "para", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "len", "(", "para", "[", "i", "]", ")", ")", ":", "\n", "            ", "out", "=", "out", "+", "str", "(", "para", "[", "i", "]", "[", "j", "]", ")", "+", "\"_\"", "\n", "", "", "return", "out", "+", "\".h5\"", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_MF.data_g_iter": [[29, 68], ["list", "data_generate_MF.save_name", "os.path.join", "pathlib.Path().glob", "os.path.exists", "h5py.File", "h5py.File.create_group", "h5py.File.create_group", "h5py.File.create_group", "tqdm.tqdm", "h5py.File.close", "print", "print", "range", "str", "numpy.random.randint", "skimage.util.random_noise().astype", "f.create_group.create_dataset", "numpy.zeros", "f.create_group.create_dataset", "f.create_group.create_dataset", "pathlib.Path", "len", "[].split", "skimage.util.random_noise", "cv2.imread", "range", "str.split", "cv2.bilateralFilter"], "function", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.save_name"], ["", "def", "data_g_iter", "(", "input_dir", ",", "output_dir", ",", "base_number", ",", "para", ",", "k_number", ",", "noise_var", ")", ":", "\n", "    ", "paths", "=", "list", "(", "Path", "(", "input_dir", ")", ".", "glob", "(", "\"*.*\"", ")", ")", "\n", "out_name", "=", "save_name", "(", "para", ",", "k_number", ")", "\n", "out_file", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "out_name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "out_file", ")", ":", "\n", "        ", "f", "=", "h5py", ".", "File", "(", "out_file", ",", "'w'", ")", "\n", "n", "=", "f", ".", "create_group", "(", "\"noise\"", ")", "\n", "x", "=", "f", ".", "create_group", "(", "\"input\"", ")", "\n", "y", "=", "f", ".", "create_group", "(", "\"label\"", ")", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "len", "(", "paths", ")", ")", ")", ":", "\n", "            ", "image_file", "=", "str", "(", "paths", "[", "i", "]", ")", "\n", "image_name", "=", "image_file", ".", "split", "(", "\"\\\\\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "image_o", "=", "(", "cv2", ".", "imread", "(", "image_file", ")", "/", "255.0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# image_n = (gaussian_noise(image_o, mean=0, var=noise_var)).astype(np.float32)", "\n", "k", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "1", ",", "high", "=", "7", ")", "\n", "k", "=", "k", "/", "10.0", "\n", "image_n", "=", "(", "random_noise", "(", "image_o", ",", "mode", "=", "'s&p'", ",", "amount", "=", "k", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "h", ",", "w", ",", "c", "=", "image_o", ".", "shape", "\n", "n", ".", "create_dataset", "(", "image_name", ",", "data", "=", "image_n", ")", "\n", "bilater_out", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", "*", "base_number", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "# bilater_out = np.zeros((h, w, c*base_number+3), dtype=np.float) ##", "\n", "b_sample", "=", "0", "\n", "for", "gama_c", "in", "para", "[", "0", "]", ":", "\n", "                ", "for", "gama_s", "in", "para", "[", "1", "]", ":", "\n", "                    ", "for", "size", "in", "para", "[", "2", "]", ":", "\n", "                        ", "img", "=", "image_n", "\n", "for", "times", "in", "range", "(", "k_number", ")", ":", "\n", "                            ", "img", "=", "cv2", ".", "bilateralFilter", "(", "img", ",", "size", ",", "gama_c", ",", "gama_s", ")", "\n", "", "bilater_out", "[", ":", ",", ":", ",", "c", "*", "b_sample", ":", "c", "*", "b_sample", "+", "3", "]", "=", "img", "\n", "b_sample", "+=", "1", "\n", "# bilater_out[:, :, c * b_sample:c * b_sample + 3] = image_n  ##", "\n", "", "", "", "x", ".", "create_dataset", "(", "image_name", ",", "data", "=", "bilater_out", ")", "\n", "y", ".", "create_dataset", "(", "image_name", ",", "data", "=", "image_o", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "print", "(", "\"Images process successful !!!\"", ")", "\n", "return", "out_file", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Images had been processed !!!\"", ")", "\n", "return", "out_file", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_MF.data_g_no_iter": [[70, 105], ["list", "data_generate_MF.save_name", "os.path.join", "pathlib.Path().glob", "os.path.exists", "h5py.File", "h5py.File.create_group", "h5py.File.create_group", "h5py.File.create_group", "tqdm.tqdm", "h5py.File.close", "print", "print", "range", "str", "skimage.util.random_noise().astype", "f.create_group.create_dataset", "numpy.zeros", "range", "f.create_group.create_dataset", "f.create_group.create_dataset", "pathlib.Path", "len", "[].split", "len", "numpy.zeros", "range", "skimage.util.random_noise", "scipy.ndimage.median_filter", "cv2.imread", "str.split"], "function", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.save_name"], ["", "", "def", "data_g_no_iter", "(", "input_dir", ",", "output_dir", ",", "base_number", ",", "para", ",", "k_number", ",", "noise_var", ")", ":", "\n", "    ", "paths", "=", "list", "(", "Path", "(", "input_dir", ")", ".", "glob", "(", "\"*.*\"", ")", ")", "\n", "out_name", "=", "save_name", "(", "para", ",", "k_number", ")", "\n", "out_file", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "out_name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "out_file", ")", ":", "\n", "        ", "f", "=", "h5py", ".", "File", "(", "out_file", ",", "'w'", ")", "\n", "n", "=", "f", ".", "create_group", "(", "\"noise\"", ")", "\n", "x", "=", "f", ".", "create_group", "(", "\"input\"", ")", "\n", "y", "=", "f", ".", "create_group", "(", "\"label\"", ")", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "len", "(", "paths", ")", ")", ")", ":", "\n", "            ", "image_file", "=", "str", "(", "paths", "[", "i", "]", ")", "\n", "image_name", "=", "image_file", ".", "split", "(", "\"\\\\\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "image_o", "=", "(", "cv2", ".", "imread", "(", "image_file", ")", "/", "255.0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# image_n = (gaussian_noise(image_o, mean=0, var=noise_var)).astype(np.float32)", "\n", "# k = np.random.randint(low=1,high=7)", "\n", "# k = k / 10.0", "\n", "image_n", "=", "(", "random_noise", "(", "image_o", ",", "mode", "=", "'s&p'", ",", "amount", "=", "0.3", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "h", ",", "w", ",", "c", "=", "image_o", ".", "shape", "\n", "n", ".", "create_dataset", "(", "image_name", ",", "data", "=", "image_n", ")", "\n", "# bilater_out = np.zeros((h, w, c*base_number), dtype=np.float)", "\n", "bilater_out", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", "*", "base_number", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "for", "b_sample", "in", "range", "(", "len", "(", "para", ")", ")", ":", "\n", "                ", "img", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", ")", ")", "\n", "k1", ",", "k2", "=", "para", "[", "b_sample", "]", "\n", "for", "i", "in", "range", "(", "c", ")", ":", "\n", "                    ", "img", "[", ":", ",", ":", ",", "i", "]", "=", "median_filter", "(", "image_n", "[", ":", ",", ":", ",", "i", "]", ",", "(", "k1", ",", "k2", ")", ")", "\n", "", "bilater_out", "[", ":", ",", ":", ",", "c", "*", "b_sample", ":", "c", "*", "b_sample", "+", "3", "]", "=", "img", "\n", "", "x", ".", "create_dataset", "(", "image_name", ",", "data", "=", "bilater_out", ")", "\n", "y", ".", "create_dataset", "(", "image_name", ",", "data", "=", "image_o", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "print", "(", "\"Images process successful !!!\"", ")", "\n", "return", "out_file", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Images had been processed !!!\"", ")", "\n", "return", "out_file", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test_input_noise.cal_psnr": [[22, 27], ["numpy.mean", "math.log10"], "function", ["None"], ["def", "cal_psnr", "(", "img1", ",", "img2", ")", ":", "\n", "   ", "mse", "=", "np", ".", "mean", "(", "(", "img1", "/", "1.0", "-", "img2", "/", "1.0", ")", "**", "2", ")", "\n", "if", "mse", "<", "1.0e-10", ":", "\n", "      ", "return", "100", "\n", "", "return", "10", "*", "math", ".", "log10", "(", "1.0", "**", "2", "/", "mse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test_input_noise.get_image": [[29, 33], ["numpy.clip().astype", "numpy.clip"], "function", ["None"], ["", "def", "get_image", "(", "image", ")", ":", "\n", "    ", "image", "=", "image", "*", "[", "255", "]", "\n", "image", "=", "np", ".", "clip", "(", "image", ",", "0", ",", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test_input_noise.load_checkpoints": [[35, 44], ["torch.load", "print", "print"], "function", ["None"], ["", "def", "load_checkpoints", "(", "dir", ")", ":", "\n", "    ", "ckp_path", "=", "dir", "\n", "try", ":", "\n", "        ", "obj", "=", "torch", ".", "load", "(", "ckp_path", ")", "\n", "print", "(", "'Load checkpoint %s'", "%", "ckp_path", ")", "\n", "return", "obj", "\n", "", "except", "FileNotFoundError", ":", "\n", "        ", "print", "(", "'No checkpoint %s!!'", "%", "ckp_path", ")", "\n", "return", "\n", "# self.net.load_state_dict(obj['net'])", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test_input_noise.run_test": [[50, 155], ["torch.nn.MSELoss().cuda", "data_test_input_noise.load_checkpoints", "parameterNet_mlp().cuda.load_state_dict", "list", "os.path.join", "os.path.join", "train.ensure_dir", "open", "open.write", "open.close", "cal_ssim.SSIM", "int", "int", "Net.parameterNet_linear().cuda", "Net.parameterNet_mlp().cuda", "pathlib.Path().glob", "int", "numpy.zeros", "numpy.zeros", "range", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.transpose", "torch.from_numpy().type().cuda", "torch.from_numpy().type().cuda", "torch.from_numpy().type().cuda", "torch.from_numpy().type().cuda", "parameterNet_mlp().cuda.", "MSELoss().cuda.item", "MSELoss().cuda.item", "MSELoss().cuda.item", "image_o.cpu().detach().numpy.cpu().detach().numpy", "get_image.cpu().detach().numpy", "get_image.cpu().detach().numpy", "data_test_input_noise.cal_psnr", "data_test_input_noise.cal_psnr", "psnr_o_all.append", "psnr_all.append", "loss1_all.append", "loss2_all.append", "loss3_all.append", "open.write", "numpy.transpose", "data_test_input_noise.get_image", "data_test_input_noise.get_image", "cv2.imwrite", "cv2.imwrite", "print", "torch.nn.MSELoss", "len", "str().split", "range", "len", "Net.parameterNet_linear", "Net.parameterNet_mlp", "pathlib.Path", "len", "range", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "MSELoss().cuda.", "MSELoss().cuda.", "MSELoss().cuda.", "image_o.cpu().detach().numpy.cpu().detach", "get_image.cpu().detach", "get_image.cpu().detach", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "len", "len", "str", "cv2.imread", "cv2.bilateralFilter", "str", "str", "range", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "image_o.cpu().detach().numpy.cpu", "get_image.cpu", "get_image.cpu", "cv2.bilateralFilter", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test.load_checkpoints", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.write", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test.cal_psnr", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test.cal_psnr", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.write", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test.get_image", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test.get_image"], ["", "", "def", "run_test", "(", ")", ":", "\n", "\n", "    ", "ssim", "=", "SSIM", "(", ")", ".", "cuda", "\n", "crit", "=", "MSELoss", "(", ")", ".", "cuda", "(", ")", "\n", "k_number", "=", "1", "\n", "\n", "if", "args", ".", "If_sp", ":", "\n", "        ", "para", "=", "args", ".", "specified_para", "\n", "base_number", "=", "int", "(", "len", "(", "para", ")", ")", "\n", "", "else", ":", "\n", "        ", "sigma_c", "=", "args", ".", "sigma_c", "\n", "sigma_s", "=", "args", ".", "sigma_s", "\n", "size", "=", "args", ".", "size", "\n", "para", "=", "[", "sigma_c", ",", "sigma_s", ",", "size", "]", "\n", "base_number", "=", "int", "(", "len", "(", "sigma_c", ")", "*", "len", "(", "sigma_s", ")", "*", "len", "(", "size", ")", ")", "\n", "\n", "", "if", "args", ".", "Net", "==", "\"parameterNet_linear\"", ":", "\n", "        ", "net", "=", "parameterNet_linear", "(", "in_channel", "=", "base_number", "*", "3", ",", "out_channel", "=", "3", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "        ", "net", "=", "parameterNet_mlp", "(", "in_channel", "=", "base_number", "*", "3", ",", "out_channel", "=", "3", ")", ".", "cuda", "(", ")", "\n", "\n", "", "obj", "=", "load_checkpoints", "(", "modelPath", ")", "\n", "net", ".", "load_state_dict", "(", "obj", "[", "'net'", "]", ")", "\n", "image_files", "=", "list", "(", "Path", "(", "input_dir", ")", ".", "glob", "(", "\"*.*\"", ")", ")", "\n", "outout_dir", "=", "os", ".", "path", ".", "join", "(", "\"./result\"", ",", "args", ".", "sessname", ")", "\n", "ensure_dir", "(", "outout_dir", ")", "\n", "\n", "psnr_o_all", "=", "[", "]", "\n", "psnr_all", "=", "[", "]", "\n", "loss1_all", "=", "[", "]", "\n", "loss2_all", "=", "[", "]", "\n", "loss3_all", "=", "[", "]", "\n", "f", "=", "open", "(", "outout_dir", "+", "\"/psnr.txt\"", ",", "'a'", ")", "\n", "for", "image_file", "in", "image_files", ":", "\n", "        ", "image_name", "=", "str", "(", "image_file", ")", ".", "split", "(", "\"\\\\\"", ")", "[", "-", "1", "]", "\n", "image", "=", "(", "cv2", ".", "imread", "(", "str", "(", "image_file", ")", ")", "/", "255.0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "h", ",", "ww", ",", "c", "=", "image", ".", "shape", "\n", "w", "=", "int", "(", "ww", "/", "2", ")", "\n", "image_o", "=", "image", "[", ":", ",", ":", "w", ",", ":", "]", "\n", "image_n", "=", "image", "[", ":", ",", "w", ":", ",", ":", "]", "\n", "\n", "bilater_out", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", "*", "base_number", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "N", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", "*", "base_number", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "for", "i", "in", "range", "(", "base_number", ")", ":", "\n", "            ", "N", "[", ":", ",", ":", ",", "i", "*", "3", ":", "i", "*", "3", "+", "3", "]", "=", "image_n", "\n", "", "if", "args", ".", "If_sp", ":", "\n", "            ", "for", "b_sample", "in", "range", "(", "len", "(", "para", ")", ")", ":", "\n", "                ", "img", "=", "image_n", "\n", "gama_c", ",", "gama_s", ",", "size", "=", "para", "[", "b_sample", "]", "\n", "for", "time", "in", "range", "(", "k_number", ")", ":", "\n", "                    ", "img", "=", "cv2", ".", "bilateralFilter", "(", "img", ",", "size", ",", "gama_c", ",", "gama_s", ")", "\n", "", "bilater_out", "[", ":", ",", ":", ",", "c", "*", "b_sample", ":", "c", "*", "b_sample", "+", "3", "]", "=", "img", "\n", "", "", "else", ":", "\n", "            ", "b_sample", "=", "0", "\n", "for", "gama_c", "in", "para", "[", "0", "]", ":", "\n", "                ", "for", "gama_s", "in", "para", "[", "1", "]", ":", "\n", "                    ", "for", "size", "in", "para", "[", "2", "]", ":", "\n", "                        ", "img", "=", "image_n", "\n", "for", "times", "in", "range", "(", "k_number", ")", ":", "\n", "                            ", "img", "=", "cv2", ".", "bilateralFilter", "(", "img", ",", "size", ",", "gama_c", ",", "gama_s", ")", "\n", "", "bilater_out", "[", ":", ",", ":", ",", "c", "*", "b_sample", ":", "c", "*", "b_sample", "+", "3", "]", "=", "img", "\n", "b_sample", "+=", "1", "\n", "\n", "", "", "", "", "RES", "=", "N", "-", "bilater_out", "\n", "image_o", "=", "np", ".", "transpose", "(", "image_o", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "bilater_out", "=", "np", ".", "transpose", "(", "bilater_out", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "RES", "=", "np", ".", "transpose", "(", "RES", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "image_n", "=", "np", ".", "transpose", "(", "image_n", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "bilater_out", "=", "torch", ".", "from_numpy", "(", "np", ".", "expand_dims", "(", "bilater_out", ",", "axis", "=", "0", ")", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "image_n", "=", "torch", ".", "from_numpy", "(", "np", ".", "expand_dims", "(", "image_n", ",", "axis", "=", "0", ")", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "image_o", "=", "torch", ".", "from_numpy", "(", "np", ".", "expand_dims", "(", "image_o", ",", "axis", "=", "0", ")", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "RES", "=", "torch", ".", "from_numpy", "(", "np", ".", "expand_dims", "(", "RES", ",", "axis", "=", "0", ")", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "\n", "residual", ",", "background", ",", "result", "=", "net", "(", "image_n", ",", "bilater_out", ",", "RES", ")", "\n", "loss1", "=", "crit", "(", "residual", ",", "image_n", "-", "image_o", ")", ".", "item", "(", ")", "\n", "loss2", "=", "crit", "(", "background", ",", "image_o", ")", ".", "item", "(", ")", "\n", "loss3", "=", "crit", "(", "result", ",", "image_o", ")", ".", "item", "(", ")", "\n", "\n", "image_o", "=", "image_o", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "image_n", "=", "image_n", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "result", "=", "result", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "psnr_o", "=", "cal_psnr", "(", "image_o", ",", "image_n", ")", "\n", "psnr", "=", "cal_psnr", "(", "image_o", ",", "result", ")", "\n", "\n", "psnr_o_all", ".", "append", "(", "psnr_o", ")", "\n", "psnr_all", ".", "append", "(", "psnr", ")", "\n", "loss1_all", ".", "append", "(", "loss1", ")", "\n", "loss2_all", ".", "append", "(", "loss2", ")", "\n", "loss3_all", ".", "append", "(", "loss3", ")", "\n", "\n", "f", ".", "write", "(", "\"Test image %s psnr_original: %f, psnr: %f, loss1: %f loss2: %f loss3: %f\\n\"", "%", "\n", "(", "image_name", ",", "psnr_o", ",", "psnr", ",", "loss1", ",", "loss2", ",", "loss3", ")", ")", "\n", "\n", "result", "=", "np", ".", "transpose", "(", "result", "[", "0", "]", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "result", "=", "get_image", "(", "result", ")", "\n", "####save noise image###", "\n", "image_n", "=", "get_image", "(", "result", ")", "\n", "cv2", ".", "imwrite", "(", "'noise_image_'", "+", "str", "(", "args", ".", "noise_var", ")", "+", "\"/%s\"", "%", "image_name", ",", "image_n", ")", "\n", "###############", "\n", "cv2", ".", "imwrite", "(", "outout_dir", "+", "\"/%s\"", "%", "image_name", ",", "result", ")", "\n", "\n", "print", "(", "\"Process %s\"", "%", "image_name", ")", "\n", "", "f", ".", "write", "(", "\"\u5e73\u5747\u4e3a %f ,loss1: %f, loss2: %f, loss3: %f\"", "%", "(", "\n", "np", ".", "mean", "(", "psnr_all", ")", ",", "np", ".", "mean", "(", "loss1_all", ")", ",", "np", ".", "mean", "(", "loss2_all", ")", ",", "np", ".", "mean", "(", "loss3_all", ")", ")", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.dataset.TrainDataset.__init__": [[10, 18], ["torch.utils.data.Dataset.__init__", "h5py.File", "list", "random.shuffle", "h5py.File.close", "f[].keys"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dir", ",", "patch_size", "=", "64", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "data_path", "=", "dir", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "f", "=", "h5py", ".", "File", "(", "self", ".", "data_path", ",", "'r'", ")", "\n", "self", ".", "keys", "=", "list", "(", "f", "[", "\"label\"", "]", ".", "keys", "(", ")", ")", "\n", "random", ".", "shuffle", "(", "self", ".", "keys", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.dataset.TrainDataset.__len__": [[19, 21], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "keys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.dataset.TrainDataset.__getitem__": [[22, 50], ["h5py.File", "numpy.zeros", "numpy.random.randint", "numpy.random.randint", "range", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.transpose", "h5py.File.close"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "f", "=", "h5py", ".", "File", "(", "self", ".", "data_path", ",", "'r'", ")", "\n", "noise", "=", "f", "[", "\"noise\"", "]", "\n", "input", "=", "f", "[", "\"input\"", "]", "\n", "label", "=", "f", "[", "\"label\"", "]", "\n", "key", "=", "self", ".", "keys", "[", "idx", "]", "\n", "image_b", "=", "input", "[", "key", "]", "[", "(", ")", "]", "\n", "image_o", "=", "label", "[", "key", "]", "[", "(", ")", "]", "\n", "image_n", "=", "noise", "[", "key", "]", "[", "(", ")", "]", "\n", "patch_size", "=", "self", ".", "patch_size", "\n", "h", ",", "w", ",", "c", "=", "image_b", ".", "shape", "\n", "N", "=", "np", ".", "zeros", "(", "(", "patch_size", ",", "patch_size", ",", "c", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "if", "h", ">=", "patch_size", "and", "w", ">=", "patch_size", ":", "\n", "            ", "i", "=", "np", ".", "random", ".", "randint", "(", "h", "-", "patch_size", "+", "1", ")", "\n", "j", "=", "np", ".", "random", ".", "randint", "(", "w", "-", "patch_size", "+", "1", ")", "\n", "B", "=", "image_o", "[", "i", ":", "i", "+", "patch_size", ",", "j", ":", "j", "+", "patch_size", "]", "\n", "bilater", "=", "image_b", "[", "i", ":", "i", "+", "patch_size", ",", "j", ":", "j", "+", "patch_size", "]", "\n", "n", "=", "image_n", "[", "i", ":", "i", "+", "patch_size", ",", "j", ":", "j", "+", "patch_size", "]", "\n", "for", "i", "in", "range", "(", "c", "//", "3", ")", ":", "\n", "                ", "N", "[", ":", ",", ":", ",", "i", "*", "3", ":", "i", "*", "3", "+", "3", "]", "=", "n", "\n", "", "RES", "=", "N", "-", "bilater", "\n", "B", "=", "np", ".", "transpose", "(", "B", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "bilater", "=", "np", ".", "transpose", "(", "bilater", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "RES", "=", "np", ".", "transpose", "(", "RES", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "n", "=", "np", ".", "transpose", "(", "n", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "sample", "=", "{", "'bilater'", ":", "bilater", ",", "'RES'", ":", "RES", ",", "'GT'", ":", "B", ",", "'NOISE'", ":", "n", "}", "\n", "f", ".", "close", "(", ")", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.dataset.TestDataset.__init__": [[53, 61], ["torch.utils.data.Dataset.__init__", "torch.utils.data.Dataset.__init__", "h5py.File", "list", "random.shuffle", "h5py.File.close", "f[].keys"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.SSIM.__init__", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dir", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "data_path", "=", "dir", "\n", "f", "=", "h5py", ".", "File", "(", "self", ".", "data_path", ",", "'r'", ")", "\n", "self", ".", "keys", "=", "list", "(", "f", "[", "\"label\"", "]", ".", "keys", "(", ")", ")", "\n", "random", ".", "shuffle", "(", "self", ".", "keys", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.dataset.TestDataset.__len__": [[62, 64], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "keys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.dataset.TestDataset.__getitem__": [[65, 91], ["h5py.File", "numpy.zeros", "range", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.transpose", "h5py.File.close"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "f", "=", "h5py", ".", "File", "(", "self", ".", "data_path", ",", "'r'", ")", "\n", "noise", "=", "f", "[", "\"noise\"", "]", "\n", "input", "=", "f", "[", "\"input\"", "]", "\n", "label", "=", "f", "[", "\"label\"", "]", "\n", "key", "=", "self", ".", "keys", "[", "idx", "]", "\n", "image_b", "=", "input", "[", "key", "]", "[", "(", ")", "]", "\n", "image_o", "=", "label", "[", "key", "]", "[", "(", ")", "]", "\n", "image_n", "=", "noise", "[", "key", "]", "[", "(", ")", "]", "\n", "h", ",", "w", ",", "c", "=", "image_b", ".", "shape", "\n", "N", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "B", "=", "image_o", "\n", "bilater", "=", "image_b", "\n", "n", "=", "image_n", "\n", "\n", "for", "i", "in", "range", "(", "c", "//", "3", ")", ":", "\n", "            ", "N", "[", ":", ",", ":", ",", "i", "*", "3", ":", "i", "*", "3", "+", "3", "]", "=", "n", "\n", "", "RES", "=", "N", "-", "bilater", "\n", "B", "=", "np", ".", "transpose", "(", "B", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "bilater", "=", "np", ".", "transpose", "(", "bilater", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "RES", "=", "np", ".", "transpose", "(", "RES", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "n", "=", "np", ".", "transpose", "(", "n", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "sample", "=", "{", "'bilater'", ":", "bilater", ",", "'RES'", ":", "RES", ",", "'GT'", ":", "B", ",", "'NOISE'", ":", "n", "}", "\n", "f", ".", "close", "(", ")", "\n", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.Session.__init__": [[93, 128], ["train_MF.ensure_dir", "train_MF.ensure_dir", "logger.info", "logger.info", "cal_ssim.SSIM().cuda", "torch.nn.MSELoss().cuda", "Net.parameterNet_linear().cuda", "torch.optim.SGD", "torch.optim.Adam", "Net.parameterNet_mlp().cuda", "cal_ssim.SSIM", "torch.nn.MSELoss", "train_MF.Session.net.parameters", "train_MF.Session.net.parameters", "Net.parameterNet_linear", "Net.parameterNet_conv3().cuda", "Net.parameterNet_mlp", "Net.parameterNet_conv3"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "number", ")", ":", "\n", "        ", "self", ".", "log_dir", "=", "args", ".", "log_dir", "\n", "self", ".", "model_dir", "=", "args", ".", "model_dir", "\n", "ensure_dir", "(", "self", ".", "log_dir", ")", "\n", "ensure_dir", "(", "self", ".", "model_dir", ")", "\n", "logger", ".", "info", "(", "'set log dir as %s'", "%", "self", ".", "log_dir", ")", "\n", "logger", ".", "info", "(", "'set model dir as %s'", "%", "self", ".", "model_dir", ")", "\n", "\n", "if", "args", ".", "Net", "==", "\"parameterNet_linear\"", ":", "\n", "# self.net = parameterNet_linear(in_channel=number+3, out_channel=3).cuda()", "\n", "            ", "self", ".", "net", "=", "parameterNet_linear", "(", "in_channel", "=", "number", ",", "out_channel", "=", "3", ")", ".", "cuda", "(", ")", "\n", "", "elif", "args", ".", "Net", "==", "'parameterNet_mlp'", ":", "\n", "            ", "self", ".", "net", "=", "parameterNet_mlp", "(", "in_channel", "=", "number", ",", "out_channel", "=", "3", ")", ".", "cuda", "(", ")", "\n", "", "elif", "args", ".", "Net", "==", "'parameterNet_conv3'", ":", "\n", "            ", "self", ".", "net", "=", "parameterNet_conv3", "(", "in_channel", "=", "number", ",", "out_channel", "=", "3", ")", ".", "cuda", "(", ")", "\n", "", "self", ".", "ssim", "=", "SSIM", "(", ")", ".", "cuda", "(", ")", "\n", "self", ".", "image_size", "=", "args", ".", "image_size", "\n", "self", ".", "batch_size", "=", "args", ".", "batch_size", "\n", "self", ".", "num_workers", "=", "args", ".", "num_workers", "\n", "\n", "self", ".", "step", "=", "0", "\n", "self", ".", "epoch", "=", "args", ".", "epochs", "\n", "self", ".", "now_epoch", "=", "0", "\n", "self", ".", "start_epoch", "=", "0", "\n", "self", ".", "writers", "=", "{", "}", "\n", "self", ".", "total_step", "=", "0", "\n", "\n", "self", ".", "sessname", "=", "args", ".", "sessname", "\n", "\n", "self", ".", "crit", "=", "MSELoss", "(", ")", ".", "cuda", "(", ")", "\n", "\n", "if", "args", ".", "opt", "==", "\"SGD\"", ":", "\n", "            ", "self", ".", "opt", "=", "SGD", "(", "self", ".", "net", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "opt", "=", "Adam", "(", "self", ".", "net", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.Session.tensorboard": [[131, 136], ["os.path.join", "train_MF.ensure_dir", "torch.utils.tensorboard.SummaryWriter", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir"], ["", "", "def", "tensorboard", "(", "self", ",", "name", ")", ":", "\n", "        ", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "log_dir", ",", "self", ".", "sessname", ")", "\n", "ensure_dir", "(", "path", ")", "\n", "self", ".", "writers", "[", "name", "]", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "path", ",", "name", "+", "'.events'", ")", ")", "\n", "return", "self", ".", "writers", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.Session.write": [[137, 151], ["train_MF.Session.writers[].add_scalar", "train_MF.Session.writers[].add_scalars", "train_MF.Session.writers[].add_scalars", "train_MF.Session.writers[].add_scalars", "train_MF.Session.writers[].add_scalars"], "methods", ["None"], ["", "def", "write", "(", "self", ",", "name", ",", "loss", ",", "ssim", ",", "psnr", ",", "epoch", ")", ":", "\n", "        ", "lr", "=", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalar", "(", "\"lr\"", ",", "lr", ",", "epoch", ")", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalars", "(", "\n", "\"train_loss\"", ",", "{", "\"loss1\"", ":", "loss", "[", "0", "]", "[", "0", "]", ",", "\"loss2\"", ":", "loss", "[", "0", "]", "[", "1", "]", ",", "\"loss3\"", ":", "loss", "[", "0", "]", "[", "2", "]", "}", ",", "\n", "\n", "epoch", "\n", ")", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalars", "(", "\n", "\"test_loss\"", ",", "{", "\"loss1\"", ":", "loss", "[", "1", "]", "[", "0", "]", ",", "\"loss2\"", ":", "loss", "[", "1", "]", "[", "1", "]", ",", "\"loss3\"", ":", "loss", "[", "1", "]", "[", "2", "]", "}", ",", "\n", "epoch", "\n", ")", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalars", "(", "\"ssim\"", ",", "{", "\"train\"", ":", "ssim", "[", "0", "]", ",", "\"test\"", ":", "ssim", "[", "1", "]", "}", ",", "epoch", ")", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalars", "(", "\"psnr\"", ",", "{", "\"train\"", ":", "psnr", "[", "0", "]", ",", "\"test\"", ":", "psnr", "[", "1", "]", "}", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.Session.write_close": [[153, 155], ["train_MF.Session.writers[].close"], "methods", ["None"], ["", "def", "write_close", "(", "self", ",", "name", ")", ":", "\n", "        ", "self", ".", "writers", "[", "name", "]", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.Session.get_dataloader": [[156, 170], ["dataset.TestDataset.TrainDataset", "torch.utils.data.DataLoader", "len", "dataset.TestDataset.TestDataset", "torch.utils.data.DataLoader", "print"], "methods", ["None"], ["", "def", "get_dataloader", "(", "self", ",", "dir", ",", "name", ")", ":", "\n", "        ", "if", "name", "==", "\"train\"", ":", "\n", "            ", "dataset", "=", "TrainDataset", "(", "dir", ",", "self", ".", "image_size", ")", "\n", "a", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ",", "drop_last", "=", "True", ")", "\n", "self", ".", "total_step", "=", "len", "(", "a", ")", "\n", "return", "a", "\n", "", "elif", "name", "==", "\"val\"", ":", "\n", "            ", "dataset", "=", "TestDataset", "(", "dir", ")", "\n", "return", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ",", "drop_last", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"Incorrect Name for Dataloader!!!\"", ")", "\n", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.Session.save_checkpoints": [[171, 181], ["os.path.join", "train_MF.ensure_dir", "os.path.join", "torch.save", "train_MF.Session.net.state_dict", "train_MF.Session.opt.state_dict"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir"], ["", "", "def", "save_checkpoints", "(", "self", ",", "name", ")", ":", "\n", "        ", "dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "model_dir", ",", "self", ".", "sessname", ")", "\n", "ensure_dir", "(", "dir", ")", "\n", "ckp_path", "=", "os", ".", "path", ".", "join", "(", "dir", ",", "name", ")", "\n", "obj", "=", "{", "\n", "'net'", ":", "self", ".", "net", ".", "state_dict", "(", ")", ",", "\n", "'now_epoch'", ":", "self", ".", "now_epoch", "+", "1", ",", "\n", "'opt'", ":", "self", ".", "opt", ".", "state_dict", "(", ")", ",", "\n", "}", "\n", "torch", ".", "save", "(", "obj", ",", "ckp_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.Session.load_checkpoints": [[182, 193], ["train_MF.Session.net.load_state_dict", "train_MF.Session.opt.load_state_dict", "torch.load", "logger.info", "logger.info"], "methods", ["None"], ["", "def", "load_checkpoints", "(", "self", ",", "dir", ")", ":", "\n", "        ", "ckp_path", "=", "dir", "\n", "try", ":", "\n", "            ", "obj", "=", "torch", ".", "load", "(", "ckp_path", ")", "\n", "logger", ".", "info", "(", "'Load checkpoint %s'", "%", "ckp_path", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "            ", "logger", ".", "info", "(", "'No checkpoint %s!!'", "%", "ckp_path", ")", "\n", "return", "\n", "", "self", ".", "net", ".", "load_state_dict", "(", "obj", "[", "'net'", "]", ")", "\n", "self", ".", "opt", ".", "load_state_dict", "(", "obj", "[", "'opt'", "]", ")", "\n", "self", ".", "start_epoch", "=", "obj", "[", "'now_epoch'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.Session.inf_batch": [[194, 237], ["batch[].type().cuda", "batch[].type().cuda", "batch[].type().cuda", "batch[].type().cuda", "train_MF.Session.net", "train_MF.Session.crit", "train_MF.Session.crit", "train_MF.Session.crit", "train_MF.Session.ssim", "train_MF.Session.net.zero_grad", "loss.backward", "train_MF.Session.opt.step", "logger.info", "train_MF.Session.net", "train_MF.Session.crit", "train_MF.Session.crit", "train_MF.Session.crit", "train_MF.Session.ssim", "torch.nn.MSELoss().cuda", "math.log10", "train_MF.Session.item", "torch.nn.MSELoss().cuda", "math.log10", "train_MF.Session.item", "batch[].type", "batch[].type", "batch[].type", "batch[].type", "train_MF.Session.item", "train_MF.Session.item", "train_MF.Session.item", "train_MF.Session.item", "train_MF.Session.item", "train_MF.Session.item", "torch.nn.MSELoss", "mse.item", "torch.nn.MSELoss", "mse.item"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.ssim", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.ssim"], ["", "def", "inf_batch", "(", "self", ",", "name", ",", "batch", ")", ":", "\n", "\n", "        ", "bilater", ",", "RES", "=", "batch", "[", "'bilater'", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", ",", "batch", "[", "'RES'", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "N", ",", "GT", "=", "batch", "[", "'NOISE'", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", ",", "batch", "[", "'GT'", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "if", "name", "==", "\"train\"", ":", "\n", "# background = self.net(N, bilater, RES)", "\n", "            ", "residual", ",", "background", ",", "gt", "=", "self", ".", "net", "(", "N", ",", "bilater", ",", "RES", ")", "\n", "loss1", "=", "self", ".", "crit", "(", "residual", ",", "N", "-", "GT", ")", "\n", "loss2", "=", "self", ".", "crit", "(", "background", ",", "GT", ")", "\n", "loss3", "=", "self", ".", "crit", "(", "gt", ",", "GT", ")", "\n", "# loss = loss2", "\n", "# loss = loss1 + loss2 + loss3", "\n", "loss", "=", "0.1", "*", "loss1", "+", "0.1", "*", "loss2", "+", "loss3", "\n", "\n", "ssim", "=", "self", ".", "ssim", "(", "gt", ",", "GT", ")", "\n", "# ssim = self.ssim(background, GT)", "\n", "# mse = MSELoss().cuda()(background, GT)", "\n", "mse", "=", "MSELoss", "(", ")", ".", "cuda", "(", ")", "(", "gt", ",", "GT", ")", "\n", "psnr", "=", "10", "*", "log10", "(", "1", "/", "mse", ".", "item", "(", ")", ")", "\n", "self", ".", "net", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "opt", ".", "step", "(", ")", "\n", "lr_now", "=", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "\n", "logger", ".", "info", "(", "\"epoch %d/%d, step %d/%d, loss1 %f loss2 %f loss3 %f psnr: %f, ssim : %f, lr is %f\"", "\n", "%", "(", "self", ".", "now_epoch", ",", "self", ".", "epoch", ",", "self", ".", "step", ",", "self", ".", "total_step", ",", "loss1", ",", "loss2", ",", "loss3", ",", "psnr", ",", "ssim", ",", "lr_now", ")", ")", "\n", "\n", "# logger.info(\"epoch %d/%d, step %d/%d, loss2 %f,  psnr: %f, ssim : %f, lr is %f\"", "\n", "#             % (self.now_epoch, self.epoch, self.step, self.total_step,  loss2, psnr, ssim, lr_now))", "\n", "self", ".", "step", "+=", "1", "\n", "return", "gt", ",", "[", "loss1", ".", "item", "(", ")", ",", "loss2", ".", "item", "(", ")", ",", "loss3", ".", "item", "(", ")", "]", ",", "psnr", ",", "ssim", ".", "item", "(", ")", "\n", "# return background, loss2.item(), psnr, ssim.item()", "\n", "\n", "", "else", ":", "\n", "            ", "residual", ",", "background", ",", "gt", "=", "self", ".", "net", "(", "N", ",", "bilater", ",", "RES", ")", "\n", "loss1", "=", "self", ".", "crit", "(", "residual", ",", "N", "-", "GT", ")", "\n", "loss2", "=", "self", ".", "crit", "(", "background", ",", "GT", ")", "\n", "loss3", "=", "self", ".", "crit", "(", "gt", ",", "GT", ")", "\n", "\n", "ssim", "=", "self", ".", "ssim", "(", "gt", ",", "GT", ")", "\n", "mse", "=", "MSELoss", "(", ")", ".", "cuda", "(", ")", "(", "gt", ",", "GT", ")", "\n", "psnr", "=", "10", "*", "log10", "(", "1", "/", "mse", ".", "item", "(", ")", ")", "\n", "\n", "return", "gt", ",", "[", "loss1", ".", "item", "(", ")", ",", "loss2", ".", "item", "(", ")", ",", "loss3", ".", "item", "(", ")", "]", ",", "psnr", ",", "ssim", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.Session.change_lr": [[238, 253], ["None"], "methods", ["None"], ["", "", "def", "change_lr", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "if", "epoch", "<", "30", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.01", "\n", "", "elif", "epoch", "<", "60", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.005", "\n", "", "elif", "epoch", "<", "90", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.0025", "\n", "", "elif", "epoch", "<", "120", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.00125", "\n", "", "elif", "epoch", "<", "150", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.001", "\n", "", "elif", "epoch", "<", "180", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.0005", "\n", "", "else", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.00001", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.Session.epoch_out": [[254, 256], ["None"], "methods", ["None"], ["", "", "def", "epoch_out", "(", "self", ")", ":", "\n", "        ", "self", ".", "step", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.Session.train_net": [[257, 259], ["train_MF.Session.net.train"], "methods", ["None"], ["", "def", "train_net", "(", "self", ")", ":", "\n", "        ", "self", ".", "net", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.Session.val_net": [[260, 262], ["train_MF.Session.net.eval"], "methods", ["None"], ["", "def", "val_net", "(", "self", ")", ":", "\n", "        ", "self", ".", "net", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.get_args": [[26, 86], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "get_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"train derain model\"", ",", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "parser", ".", "add_argument", "(", "\"--train_dir\"", ",", "type", "=", "str", ",", "default", "=", "'./dataset/train'", ",", "\n", "help", "=", "\"train image dir\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--test_dir\"", ",", "type", "=", "str", ",", "default", "=", "'./dataset/test'", ",", "\n", "help", "=", "\"test image dir\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--log_dir\"", ",", "type", "=", "str", ",", "default", "=", "'./logdir'", ",", "\n", "help", "=", "\"log_dir\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--model_dir\"", ",", "type", "=", "str", ",", "default", "=", "'./models'", ",", "\n", "help", "=", "\"test image dir\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--image_size\"", ",", "type", "=", "int", ",", "default", "=", "300", ",", "\n", "help", "=", "\"training patch size\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--batch_size\"", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "\"batch size\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--epochs\"", ",", "type", "=", "int", ",", "default", "=", "140", ",", "\n", "help", "=", "\"number of epochs\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_workers\"", ",", "type", "=", "int", ",", "default", "=", "8", ",", "\n", "help", "=", "\"numworks in dataloader\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--aug_data\"", ",", "type", "=", "bool", ",", "default", "=", "False", ",", "\n", "help", "=", "\"whether to augment data\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lr\"", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "\n", "help", "=", "\"learning rate\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--loss\"", ",", "type", "=", "str", ",", "default", "=", "\"MSE\"", ",", "\n", "help", "=", "\"loss; MSE', 'L1Loss', or 'MyLoss' is expected\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--opt\"", ",", "type", "=", "str", ",", "default", "=", "\"Adam\"", ",", "\n", "help", "=", "\"Optimizer for updating the network parameters\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--checkpoint\"", ",", "type", "=", "str", ",", "default", "=", "\"the_end\"", ",", "\n", "help", "=", "\"model architecture ('Similarity')\"", ")", "\n", "\n", "### usually adjust####", "\n", "parser", ".", "add_argument", "(", "\"--sessname\"", ",", "type", "=", "str", ",", "default", "=", "'4basis_0.3'", ",", "#\"30biggerbasis_linear_0.01\",", "\n", "help", "=", "\"different session names for parameter modification\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--noise_var\"", ",", "type", "=", "float", ",", "default", "=", "0.05", ",", "\n", "help", "=", "\"var = arg.noise_var,for random_noise(mode='gaussian')\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--Net\"", ",", "type", "=", "str", ",", "default", "=", "\"parameterNet_linear\"", ",", "\n", "help", "=", "\"choice of Network: parameterNet_mlp, parameterNet_linear \"", ")", "\n", "\n", "####\u5224\u65ad\u662f\u5426\u4f7f\u7528\u7279\u5b9a\u53c2\u6570\uff0c \u9ed8\u8ba4\u4e3a\u4f7f\u7528\u7279\u5b9a\u53c2\u6570", "\n", "parser", ".", "add_argument", "(", "\"--If_sp\"", ",", "type", "=", "bool", ",", "default", "=", "True", ",", "help", "=", "\"If normalizing the image\"", ")", "\n", "\n", "####\u4f7f\u7528\u8fed\u4ee3\u7684\u65b9\u6cd5\u7684\u53c2\u6570", "\n", "parser", ".", "add_argument", "(", "\"--sigma_c\"", ",", "type", "=", "list", ",", "default", "=", "[", "0.1", ",", "0.6", ",", "1.1", "]", ",", "#[0.1, 0.4, 0.7, 1, 2],", "\n", "help", "=", "\"sigma_c = [0.1, 0.3, 0.5, 0.7, 1],[0.1, 0.3, 0.4, 0.5, 0.7, 1] ,[0.1, 0.4, 0.7, 1, 2],[0.1, 0.2, 0.3, 0.4, 0.5]\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--sigma_s\"", ",", "type", "=", "list", ",", "default", "=", "[", "0.5", ",", "2", ",", "3.5", "]", ",", "\n", "help", "=", "\" sigma_s = [0.5, 1, 2],[0.5, 2, 3.5] \"", ")", "\n", "parser", ".", "add_argument", "(", "\"--size\"", ",", "type", "=", "list", ",", "default", "=", "[", "15", "]", ",", "#[5, 9],", "\n", "help", "=", "\" size = [5] ,[3, 5, 7],[5, 9],[7],[5, 9, 13]\"", ")", "\n", "\n", "####\u6307\u5b9a\u53c2\u6570\u7684\u65b9\u6cd5 \u53c2\u6570\u89c4\u5219[sigma_c, sigma_s, size]", "\n", "\n", "parser", ".", "add_argument", "(", "\"--specified_para\"", ",", "type", "=", "list", ",", "default", "=", "[", "\n", "\n", "[", "3", ",", "3", "]", ",", "[", "5", ",", "5", "]", ",", "[", "7", ",", "7", "]", ",", "[", "9", ",", "9", "]", "\n", "]", ",", "help", "=", "\"[sigma_c, sigma_s, size]\"", ")", "\n", "#[[0.5, 1.5, 15],[0.1, 2, 15],[1, 3, 15],[0.1, 0.5,15],[0.3,2,15],[0.3,3,15],[0.5,3,15],[2,4,15],[0.1,1,15]", "\n", "# [0.05,0.5,15], [0.1,0.5,15],[0.1,0.7,15],[0.1,2,15],[0.1,3,15], [0.1,3,15], [0.3,1,15], [0.3,2,15], [0.3,5,15], [0.5,2,15],[0.5,5,15],[1,1.5,15], [1,3,15],[1,5,15],[3,5,15]", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.ensure_dir": [[88, 91], ["os.path.isdir", "os.makedirs"], "function", ["None"], ["", "def", "ensure_dir", "(", "dir_path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "isdir", "(", "dir_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "dir_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_MF.run_train_val": [[263, 374], ["train_MF.Session", "train_MF.Session.tensorboard", "os.path.join", "os.path.join", "train_MF.ensure_dir", "train_MF.ensure_dir", "range", "int", "int", "data_generate.data_g_no_iter", "data_generate.data_g_no_iter", "data_generate.data_g_iter", "data_generate.data_g_iter", "int", "train_MF.Session.change_lr", "train_MF.Session.get_dataloader", "train_MF.Session.get_dataloader", "train_MF.Session.train_net", "train_MF.Session.epoch_out", "logger.info", "train_MF.Session.val_net", "len", "train_MF.Session.inf_batch", "loss0_train.append", "loss1_train.append", "loss2_train.append", "ssim_train.append", "psnr_train.append", "numpy.mean", "numpy.mean", "numpy.mean", "torch.no_grad", "logger.info", "train_MF.Session.write", "numpy.mean", "logger.info", "numpy.mean", "train_MF.Session.save_checkpoints", "logger.info", "logger.info", "len", "train_MF.Session.inf_batch", "loss0_test.append", "loss1_test.append", "loss2_test.append", "ssim_test.append", "psnr_test.append", "numpy.mean", "numpy.mean", "numpy.mean", "len", "len", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.tensorboard", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.data_g_no_iter", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.data_g_no_iter", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.data_g_iter", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.data_g_iter", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.change_lr", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.get_dataloader", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.get_dataloader", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.train_net", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.epoch_out", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.val_net", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.inf_batch", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.write", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.save_checkpoints", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.inf_batch"], ["", "", "def", "run_train_val", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "If_sp", ":", "\n", "        ", "para", "=", "args", ".", "specified_para", "\n", "number", "=", "int", "(", "len", "(", "para", ")", ")", "\n", "", "else", ":", "\n", "        ", "sigma_c", "=", "args", ".", "sigma_c", "\n", "sigma_s", "=", "args", ".", "sigma_s", "\n", "size", "=", "args", ".", "size", "\n", "para", "=", "[", "sigma_c", ",", "sigma_s", ",", "size", "]", "\n", "number", "=", "int", "(", "len", "(", "sigma_c", ")", "*", "len", "(", "sigma_s", ")", "*", "len", "(", "size", ")", ")", "\n", "\n", "", "k_number", "=", "1", "\n", "sess", "=", "Session", "(", "args", ",", "number", "*", "3", ")", "\n", "# sess.load_checkpoints(\"../models/fr_64_16_run3/epoch 9_ssim 0.419491\")", "\n", "sess", ".", "tensorboard", "(", "'parameter'", ")", "\n", "psnr_m", "=", "0.0", "\n", "sess", ".", "now_epoch", "=", "sess", ".", "start_epoch", "\n", "path_h5_train", "=", "os", ".", "path", ".", "join", "(", "'./h5_file'", ",", "args", ".", "sessname", ",", "'train'", ")", "\n", "path_h5_test", "=", "os", ".", "path", ".", "join", "(", "'./h5_file'", ",", "args", ".", "sessname", ",", "'test'", ")", "\n", "ensure_dir", "(", "path_h5_train", ")", "\n", "ensure_dir", "(", "path_h5_test", ")", "\n", "if", "args", ".", "If_sp", ":", "#input_dir, output_dir,  base_number, para, k_number, noise_var", "\n", "        ", "train_h5_dir", "=", "data_g_no_iter", "(", "\n", "input_dir", "=", "args", ".", "train_dir", ",", "\n", "output_dir", "=", "path_h5_train", ",", "\n", "base_number", "=", "number", ",", "\n", "para", "=", "para", ",", "\n", "k_number", "=", "k_number", ",", "\n", "noise_var", "=", "args", ".", "noise_var", ")", "\n", "test_h5_dir", "=", "data_g_no_iter", "(", "\n", "input_dir", "=", "args", ".", "test_dir", ",", "\n", "output_dir", "=", "path_h5_test", ",", "\n", "base_number", "=", "number", ",", "\n", "para", "=", "para", ",", "\n", "k_number", "=", "k_number", ",", "\n", "noise_var", "=", "args", ".", "noise_var", ")", "\n", "", "else", ":", "\n", "        ", "train_h5_dir", "=", "data_g_iter", "(", "\n", "input_dir", "=", "args", ".", "train_dir", ",", "\n", "output_dir", "=", "path_h5_train", ",", "\n", "base_number", "=", "number", ",", "\n", "para", "=", "para", ",", "\n", "k_number", "=", "k_number", ",", "\n", "noise_var", "=", "args", ".", "noise_var", ")", "\n", "test_h5_dir", "=", "data_g_iter", "(", "\n", "input_dir", "=", "args", ".", "test_dir", ",", "\n", "output_dir", "=", "path_h5_test", ",", "\n", "base_number", "=", "number", ",", "\n", "para", "=", "para", ",", "\n", "k_number", "=", "k_number", ",", "\n", "noise_var", "=", "args", ".", "noise_var", "\n", ")", "\n", "", "for", "epoch", "in", "range", "(", "int", "(", "sess", ".", "epoch", "-", "sess", ".", "start_epoch", ")", ")", ":", "\n", "        ", "epoch", "=", "epoch", "+", "sess", ".", "start_epoch", "\n", "sess", ".", "change_lr", "(", "epoch", ")", "\n", "dt_train", "=", "sess", ".", "get_dataloader", "(", "dir", "=", "train_h5_dir", ",", "name", "=", "'train'", ")", "\n", "dt_val", "=", "sess", ".", "get_dataloader", "(", "dir", "=", "test_h5_dir", ",", "name", "=", "'val'", ")", "\n", "sess", ".", "train_net", "(", ")", "\n", "loss0_train", "=", "[", "]", "\n", "loss1_train", "=", "[", "]", "\n", "loss2_train", "=", "[", "]", "\n", "ssim_train", "=", "[", "]", "\n", "psnr_train", "=", "[", "]", "\n", "for", "batch", "in", "dt_train", ":", "\n", "            ", "result_train", ",", "loss", ",", "psnr", ",", "ssim", "=", "sess", ".", "inf_batch", "(", "\"train\"", ",", "batch", ")", "\n", "loss0_train", ".", "append", "(", "loss", "[", "0", "]", ")", "\n", "loss1_train", ".", "append", "(", "loss", "[", "1", "]", ")", "\n", "loss2_train", ".", "append", "(", "loss", "[", "2", "]", ")", "\n", "ssim_train", ".", "append", "(", "ssim", ")", "\n", "psnr_train", ".", "append", "(", "psnr", ")", "\n", "", "sess", ".", "epoch_out", "(", ")", "\n", "loss_train", "=", "[", "\n", "np", ".", "mean", "(", "loss0_train", ")", ",", "\n", "np", ".", "mean", "(", "loss1_train", ")", ",", "\n", "np", ".", "mean", "(", "loss2_train", ")", "\n", "]", "\n", "logger", ".", "info", "(", "'Train: loss1 %f loss2 %f loss3 %f'", "%", "(", "loss_train", "[", "0", "]", ",", "loss_train", "[", "1", "]", ",", "loss_train", "[", "2", "]", ")", ")", "\n", "loss0_test", "=", "[", "]", "\n", "loss1_test", "=", "[", "]", "\n", "loss2_test", "=", "[", "]", "\n", "ssim_test", "=", "[", "]", "\n", "psnr_test", "=", "[", "]", "\n", "sess", ".", "val_net", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "batch", "in", "dt_val", ":", "\n", "                ", "result_val", ",", "loss", ",", "psnr", ",", "ssim", "=", "sess", ".", "inf_batch", "(", "\"val\"", ",", "batch", ")", "\n", "loss0_test", ".", "append", "(", "loss", "[", "0", "]", ")", "\n", "loss1_test", ".", "append", "(", "loss", "[", "1", "]", ")", "\n", "loss2_test", ".", "append", "(", "loss", "[", "2", "]", ")", "\n", "ssim_test", ".", "append", "(", "ssim", ")", "\n", "psnr_test", ".", "append", "(", "psnr", ")", "\n", "", "loss_test", "=", "[", "\n", "np", ".", "mean", "(", "loss0_test", ")", ",", "\n", "np", ".", "mean", "(", "loss1_test", ")", ",", "\n", "np", ".", "mean", "(", "loss2_test", ")", "]", "\n", "logger", ".", "info", "(", "'Test: loss1 %f loss2 %f loss3 %f'", "%", "(", "loss_test", "[", "0", "]", ",", "loss_test", "[", "1", "]", ",", "loss_test", "[", "2", "]", ")", ")", "\n", "sess", ".", "write", "(", "\n", "name", "=", "\"parameter\"", ",", "\n", "loss", "=", "[", "loss_train", ",", "loss_test", "]", ",", "\n", "ssim", "=", "[", "np", ".", "mean", "(", "ssim_train", ")", ",", "np", ".", "mean", "(", "ssim_test", ")", "]", ",", "\n", "psnr", "=", "[", "np", ".", "mean", "(", "psnr_train", ")", ",", "np", ".", "mean", "(", "psnr_test", ")", "]", ",", "\n", "epoch", "=", "epoch", ")", "\n", "", "if", "np", ".", "mean", "(", "psnr_test", ")", ">", "psnr_m", ":", "\n", "            ", "logger", ".", "info", "(", "'psnr increase from %f to %f now'", "%", "(", "psnr_m", ",", "np", ".", "mean", "(", "psnr_test", ")", ")", ")", "\n", "psnr_m", "=", "np", ".", "mean", "(", "psnr_test", ")", "\n", "sess", ".", "save_checkpoints", "(", "\"epoch %d psnr %f \"", "%", "(", "epoch", ",", "psnr_m", ")", ")", "\n", "logger", ".", "info", "(", "'save model as epoch %d psnr %f'", "%", "(", "epoch", ",", "psnr_m", ")", ")", "\n", "", "else", ":", "\n", "            ", "logger", ".", "info", "(", "\"psnr now is %f, not increase from %f\"", "%", "(", "np", ".", "mean", "(", "psnr_test", ")", ",", "psnr_m", ")", ")", "\n", "", "sess", ".", "now_epoch", "+=", "1", "\n", "# sess.sche.step(epoch=epoch)", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.Session.__init__": [[101, 135], ["train_BF.ensure_dir", "train_BF.ensure_dir", "logger.info", "logger.info", "cal_ssim.SSIM().cuda", "torch.nn.MSELoss().cuda", "Net.parameterNet_linear().cuda", "torch.optim.SGD", "torch.optim.Adam", "Net.parameterNet_mlp().cuda", "cal_ssim.SSIM", "torch.nn.MSELoss", "train_BF.Session.net.parameters", "train_BF.Session.net.parameters", "Net.parameterNet_linear", "Net.parameterNet_conv3().cuda", "Net.parameterNet_mlp", "Net.parameterNet_conv3"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "number", ")", ":", "\n", "        ", "self", ".", "log_dir", "=", "args", ".", "log_dir", "\n", "self", ".", "model_dir", "=", "args", ".", "model_dir", "\n", "ensure_dir", "(", "self", ".", "log_dir", ")", "\n", "ensure_dir", "(", "self", ".", "model_dir", ")", "\n", "logger", ".", "info", "(", "'set log dir as %s'", "%", "self", ".", "log_dir", ")", "\n", "logger", ".", "info", "(", "'set model dir as %s'", "%", "self", ".", "model_dir", ")", "\n", "\n", "if", "args", ".", "Net", "==", "\"parameterNet_linear\"", ":", "\n", "            ", "self", ".", "net", "=", "parameterNet_linear", "(", "in_channel", "=", "number", ",", "out_channel", "=", "3", ")", ".", "cuda", "(", ")", "\n", "", "elif", "args", ".", "Net", "==", "'parameterNet_mlp'", ":", "\n", "            ", "self", ".", "net", "=", "parameterNet_mlp", "(", "in_channel", "=", "number", ",", "out_channel", "=", "3", ")", ".", "cuda", "(", ")", "\n", "", "elif", "args", ".", "Net", "==", "'parameterNet_conv3'", ":", "\n", "            ", "self", ".", "net", "=", "parameterNet_conv3", "(", "in_channel", "=", "number", ",", "out_channel", "=", "3", ")", ".", "cuda", "(", ")", "\n", "", "self", ".", "ssim", "=", "SSIM", "(", ")", ".", "cuda", "(", ")", "\n", "self", ".", "image_size", "=", "args", ".", "image_size", "\n", "self", ".", "batch_size", "=", "args", ".", "batch_size", "\n", "self", ".", "num_workers", "=", "args", ".", "num_workers", "\n", "\n", "self", ".", "step", "=", "0", "\n", "self", ".", "epoch", "=", "args", ".", "epochs", "\n", "self", ".", "now_epoch", "=", "0", "\n", "self", ".", "start_epoch", "=", "0", "\n", "self", ".", "writers", "=", "{", "}", "\n", "self", ".", "total_step", "=", "0", "\n", "\n", "self", ".", "sessname", "=", "args", ".", "sessname", "\n", "\n", "self", ".", "crit", "=", "MSELoss", "(", ")", ".", "cuda", "(", ")", "\n", "\n", "if", "args", ".", "opt", "==", "\"SGD\"", ":", "\n", "            ", "self", ".", "opt", "=", "SGD", "(", "self", ".", "net", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "opt", "=", "Adam", "(", "self", ".", "net", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.Session.tensorboard": [[138, 143], ["os.path.join", "train_BF.ensure_dir", "torch.utils.tensorboard.SummaryWriter", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir"], ["", "", "def", "tensorboard", "(", "self", ",", "name", ")", ":", "\n", "        ", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "log_dir", ",", "self", ".", "sessname", ")", "\n", "ensure_dir", "(", "path", ")", "\n", "self", ".", "writers", "[", "name", "]", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "path", ",", "name", "+", "'.events'", ")", ")", "\n", "return", "self", ".", "writers", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.Session.write": [[144, 158], ["train_BF.Session.writers[].add_scalar", "train_BF.Session.writers[].add_scalars", "train_BF.Session.writers[].add_scalars", "train_BF.Session.writers[].add_scalars", "train_BF.Session.writers[].add_scalars"], "methods", ["None"], ["", "def", "write", "(", "self", ",", "name", ",", "loss", ",", "ssim", ",", "psnr", ",", "epoch", ")", ":", "\n", "        ", "lr", "=", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalar", "(", "\"lr\"", ",", "lr", ",", "epoch", ")", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalars", "(", "\n", "\"train_loss\"", ",", "{", "\"loss1\"", ":", "loss", "[", "0", "]", "[", "0", "]", ",", "\"loss2\"", ":", "loss", "[", "0", "]", "[", "1", "]", ",", "\"loss3\"", ":", "loss", "[", "0", "]", "[", "2", "]", "}", ",", "\n", "\n", "epoch", "\n", ")", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalars", "(", "\n", "\"test_loss\"", ",", "{", "\"loss1\"", ":", "loss", "[", "1", "]", "[", "0", "]", ",", "\"loss2\"", ":", "loss", "[", "1", "]", "[", "1", "]", ",", "\"loss3\"", ":", "loss", "[", "1", "]", "[", "2", "]", "}", ",", "\n", "epoch", "\n", ")", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalars", "(", "\"ssim\"", ",", "{", "\"train\"", ":", "ssim", "[", "0", "]", ",", "\"test\"", ":", "ssim", "[", "1", "]", "}", ",", "epoch", ")", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalars", "(", "\"psnr\"", ",", "{", "\"train\"", ":", "psnr", "[", "0", "]", ",", "\"test\"", ":", "psnr", "[", "1", "]", "}", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.Session.write_close": [[160, 162], ["train_BF.Session.writers[].close"], "methods", ["None"], ["", "def", "write_close", "(", "self", ",", "name", ")", ":", "\n", "        ", "self", ".", "writers", "[", "name", "]", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.Session.get_dataloader": [[163, 177], ["dataset.TestDataset.TrainDataset", "torch.utils.data.DataLoader", "len", "dataset.TestDataset.TestDataset", "torch.utils.data.DataLoader", "print"], "methods", ["None"], ["", "def", "get_dataloader", "(", "self", ",", "dir", ",", "name", ")", ":", "\n", "        ", "if", "name", "==", "\"train\"", ":", "\n", "            ", "dataset", "=", "TrainDataset", "(", "dir", ",", "self", ".", "image_size", ")", "\n", "a", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ",", "drop_last", "=", "True", ")", "\n", "self", ".", "total_step", "=", "len", "(", "a", ")", "\n", "return", "a", "\n", "", "elif", "name", "==", "\"val\"", ":", "\n", "            ", "dataset", "=", "TestDataset", "(", "dir", ")", "\n", "return", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ",", "drop_last", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"Incorrect Name for Dataloader!!!\"", ")", "\n", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.Session.save_checkpoints": [[178, 188], ["os.path.join", "train_BF.ensure_dir", "os.path.join", "torch.save", "train_BF.Session.net.state_dict", "train_BF.Session.opt.state_dict"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir"], ["", "", "def", "save_checkpoints", "(", "self", ",", "name", ")", ":", "\n", "        ", "dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "model_dir", ",", "self", ".", "sessname", ")", "\n", "ensure_dir", "(", "dir", ")", "\n", "ckp_path", "=", "os", ".", "path", ".", "join", "(", "dir", ",", "name", ")", "\n", "obj", "=", "{", "\n", "'net'", ":", "self", ".", "net", ".", "state_dict", "(", ")", ",", "\n", "'now_epoch'", ":", "self", ".", "now_epoch", "+", "1", ",", "\n", "'opt'", ":", "self", ".", "opt", ".", "state_dict", "(", ")", ",", "\n", "}", "\n", "torch", ".", "save", "(", "obj", ",", "ckp_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.Session.load_checkpoints": [[189, 200], ["train_BF.Session.net.load_state_dict", "train_BF.Session.opt.load_state_dict", "torch.load", "logger.info", "logger.info"], "methods", ["None"], ["", "def", "load_checkpoints", "(", "self", ",", "dir", ")", ":", "\n", "        ", "ckp_path", "=", "dir", "\n", "try", ":", "\n", "            ", "obj", "=", "torch", ".", "load", "(", "ckp_path", ")", "\n", "logger", ".", "info", "(", "'Load checkpoint %s'", "%", "ckp_path", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "            ", "logger", ".", "info", "(", "'No checkpoint %s!!'", "%", "ckp_path", ")", "\n", "return", "\n", "", "self", ".", "net", ".", "load_state_dict", "(", "obj", "[", "'net'", "]", ")", "\n", "self", ".", "opt", ".", "load_state_dict", "(", "obj", "[", "'opt'", "]", ")", "\n", "self", ".", "start_epoch", "=", "obj", "[", "'now_epoch'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.Session.inf_batch": [[201, 244], ["batch[].type().cuda", "batch[].type().cuda", "batch[].type().cuda", "batch[].type().cuda", "train_BF.Session.net", "train_BF.Session.crit", "train_BF.Session.crit", "train_BF.Session.crit", "train_BF.Session.ssim", "train_BF.Session.net.zero_grad", "loss.backward", "train_BF.Session.opt.step", "logger.info", "train_BF.Session.net", "train_BF.Session.crit", "train_BF.Session.crit", "train_BF.Session.crit", "train_BF.Session.ssim", "torch.nn.MSELoss().cuda", "math.log10", "train_BF.Session.item", "torch.nn.MSELoss().cuda", "math.log10", "train_BF.Session.item", "batch[].type", "batch[].type", "batch[].type", "batch[].type", "train_BF.Session.item", "train_BF.Session.item", "train_BF.Session.item", "train_BF.Session.item", "train_BF.Session.item", "train_BF.Session.item", "torch.nn.MSELoss", "mse.item", "torch.nn.MSELoss", "mse.item"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.ssim", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.ssim"], ["", "def", "inf_batch", "(", "self", ",", "name", ",", "batch", ")", ":", "\n", "\n", "        ", "bilater", ",", "RES", "=", "batch", "[", "'bilater'", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", ",", "batch", "[", "'RES'", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "N", ",", "GT", "=", "batch", "[", "'NOISE'", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", ",", "batch", "[", "'GT'", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "if", "name", "==", "\"train\"", ":", "\n", "# background = self.net(N, bilater, RES)", "\n", "            ", "residual", ",", "background", ",", "gt", "=", "self", ".", "net", "(", "N", ",", "bilater", ",", "RES", ")", "\n", "loss1", "=", "self", ".", "crit", "(", "residual", ",", "N", "-", "GT", ")", "\n", "loss2", "=", "self", ".", "crit", "(", "background", ",", "GT", ")", "\n", "loss3", "=", "self", ".", "crit", "(", "gt", ",", "GT", ")", "\n", "# loss = loss2", "\n", "# loss = loss1 + loss2 + loss3", "\n", "loss", "=", "0.1", "*", "loss1", "+", "0.1", "*", "loss2", "+", "loss3", "\n", "\n", "ssim", "=", "self", ".", "ssim", "(", "gt", ",", "GT", ")", "\n", "# ssim = self.ssim(background, GT)", "\n", "# mse = MSELoss().cuda()(background, GT)", "\n", "mse", "=", "MSELoss", "(", ")", ".", "cuda", "(", ")", "(", "gt", ",", "GT", ")", "\n", "psnr", "=", "10", "*", "log10", "(", "1", "/", "mse", ".", "item", "(", ")", ")", "\n", "self", ".", "net", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "opt", ".", "step", "(", ")", "\n", "lr_now", "=", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "\n", "logger", ".", "info", "(", "\"epoch %d/%d, step %d/%d, loss1 %f loss2 %f loss3 %f psnr: %f, ssim : %f, lr is %f\"", "\n", "%", "(", "self", ".", "now_epoch", ",", "self", ".", "epoch", ",", "self", ".", "step", ",", "self", ".", "total_step", ",", "loss1", ",", "loss2", ",", "loss3", ",", "psnr", ",", "ssim", ",", "lr_now", ")", ")", "\n", "\n", "# logger.info(\"epoch %d/%d, step %d/%d, loss2 %f,  psnr: %f, ssim : %f, lr is %f\"", "\n", "#             % (self.now_epoch, self.epoch, self.step, self.total_step,  loss2, psnr, ssim, lr_now))", "\n", "self", ".", "step", "+=", "1", "\n", "return", "gt", ",", "[", "loss1", ".", "item", "(", ")", ",", "loss2", ".", "item", "(", ")", ",", "loss3", ".", "item", "(", ")", "]", ",", "psnr", ",", "ssim", ".", "item", "(", ")", "\n", "# return background, loss2.item(), psnr, ssim.item()", "\n", "\n", "", "else", ":", "\n", "            ", "residual", ",", "background", ",", "gt", "=", "self", ".", "net", "(", "N", ",", "bilater", ",", "RES", ")", "\n", "loss1", "=", "self", ".", "crit", "(", "residual", ",", "N", "-", "GT", ")", "\n", "loss2", "=", "self", ".", "crit", "(", "background", ",", "GT", ")", "\n", "loss3", "=", "self", ".", "crit", "(", "gt", ",", "GT", ")", "\n", "\n", "ssim", "=", "self", ".", "ssim", "(", "gt", ",", "GT", ")", "\n", "mse", "=", "MSELoss", "(", ")", ".", "cuda", "(", ")", "(", "gt", ",", "GT", ")", "\n", "psnr", "=", "10", "*", "log10", "(", "1", "/", "mse", ".", "item", "(", ")", ")", "\n", "\n", "return", "gt", ",", "[", "loss1", ".", "item", "(", ")", ",", "loss2", ".", "item", "(", ")", ",", "loss3", ".", "item", "(", ")", "]", ",", "psnr", ",", "ssim", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.Session.change_lr": [[245, 260], ["None"], "methods", ["None"], ["", "", "def", "change_lr", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "if", "epoch", "<", "30", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.01", "\n", "", "elif", "epoch", "<", "60", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.005", "\n", "", "elif", "epoch", "<", "90", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.0025", "\n", "", "elif", "epoch", "<", "120", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.00125", "\n", "", "elif", "epoch", "<", "150", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.001", "\n", "", "elif", "epoch", "<", "180", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.0005", "\n", "", "else", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.00001", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.Session.epoch_out": [[261, 263], ["None"], "methods", ["None"], ["", "", "def", "epoch_out", "(", "self", ")", ":", "\n", "        ", "self", ".", "step", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.Session.train_net": [[264, 266], ["train_BF.Session.net.train"], "methods", ["None"], ["", "def", "train_net", "(", "self", ")", ":", "\n", "        ", "self", ".", "net", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.Session.val_net": [[267, 269], ["train_BF.Session.net.eval"], "methods", ["None"], ["", "def", "val_net", "(", "self", ")", ":", "\n", "        ", "self", ".", "net", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.get_args": [[26, 94], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "get_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"train derain model\"", ",", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "parser", ".", "add_argument", "(", "\"--train_dir\"", ",", "type", "=", "str", ",", "default", "=", "'./dataset/train'", ",", "\n", "help", "=", "\"train image dir\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--test_dir\"", ",", "type", "=", "str", ",", "default", "=", "'./dataset/test'", ",", "\n", "help", "=", "\"test image dir\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--log_dir\"", ",", "type", "=", "str", ",", "default", "=", "'./logdir'", ",", "\n", "help", "=", "\"log_dir\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--model_dir\"", ",", "type", "=", "str", ",", "default", "=", "'./models'", ",", "\n", "help", "=", "\"test image dir\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--image_size\"", ",", "type", "=", "int", ",", "default", "=", "300", ",", "\n", "help", "=", "\"training patch size\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--batch_size\"", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "\"batch size\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--epochs\"", ",", "type", "=", "int", ",", "default", "=", "140", ",", "\n", "help", "=", "\"number of epochs\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_workers\"", ",", "type", "=", "int", ",", "default", "=", "8", ",", "\n", "help", "=", "\"numworks in dataloader\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--aug_data\"", ",", "type", "=", "bool", ",", "default", "=", "False", ",", "\n", "help", "=", "\"whether to augment data\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lr\"", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "\n", "help", "=", "\"learning rate\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--loss\"", ",", "type", "=", "str", ",", "default", "=", "\"MSE\"", ",", "\n", "help", "=", "\"loss; MSE', 'L1Loss', or 'MyLoss' is expected\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--opt\"", ",", "type", "=", "str", ",", "default", "=", "\"Adam\"", ",", "\n", "help", "=", "\"Optimizer for updating the network parameters\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--checkpoint\"", ",", "type", "=", "str", ",", "default", "=", "\"the_end\"", ",", "\n", "help", "=", "\"model architecture ('Similarity')\"", ")", "\n", "\n", "### usually adjust####", "\n", "parser", ".", "add_argument", "(", "\"--sessname\"", ",", "type", "=", "str", ",", "default", "=", "'0.05_9basis_linear_random_conv3'", ",", "#\"30biggerbasis_linear_0.01\",", "\n", "help", "=", "\"different session names for parameter modification\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--noise_var\"", ",", "type", "=", "float", ",", "default", "=", "0.05", ",", "\n", "help", "=", "\"var = arg.noise_var,for random_noise(mode='gaussian')\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--Net\"", ",", "type", "=", "str", ",", "default", "=", "\"parameterNet_conv3\"", ",", "\n", "help", "=", "\"choice of Network: parameterNet_mlp, parameterNet_linear \"", ")", "\n", "\n", "####\u5224\u65ad\u662f\u5426\u4f7f\u7528\u7279\u5b9a\u53c2\u6570\uff0c \u9ed8\u8ba4\u4e3a\u4f7f\u7528\u7279\u5b9a\u53c2\u6570", "\n", "parser", ".", "add_argument", "(", "\"--If_sp\"", ",", "type", "=", "bool", ",", "default", "=", "False", ",", "help", "=", "\"If normalizing the image\"", ")", "\n", "\n", "####\u4f7f\u7528\u8fed\u4ee3\u7684\u65b9\u6cd5\u7684\u53c2\u6570", "\n", "parser", ".", "add_argument", "(", "\"--sigma_c\"", ",", "type", "=", "list", ",", "default", "=", "[", "0.1", ",", "0.6", ",", "1", "]", ",", "#[0.1, 0.4, 0.7, 1, 2],", "\n", "help", "=", "\"sigma_c = [0.1, 0.3, 0.5, 0.7, 1],[0.1, 0.3, 0.4, 0.5, 0.7, 1] ,[0.1, 0.4, 0.7, 1, 2],[0.1, 0.2, 0.3, 0.4, 0.5]\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--sigma_s\"", ",", "type", "=", "list", ",", "default", "=", "[", "0.5", ",", "2", ",", "3.5", "]", ",", "\n", "help", "=", "\" sigma_s = [0.5, 1, 2],[0.5, 2, 3.5] \"", ")", "\n", "parser", ".", "add_argument", "(", "\"--size\"", ",", "type", "=", "list", ",", "default", "=", "[", "15", "]", ",", "#[5, 9],", "\n", "help", "=", "\" size = [5] ,[3, 5, 7],[5, 9],[7],[5, 9, 13]\"", ")", "\n", "\n", "####\u6307\u5b9a\u53c2\u6570\u7684\u65b9\u6cd5 \u53c2\u6570\u89c4\u5219[sigma_c, sigma_s, size]", "\n", "\n", "parser", ".", "add_argument", "(", "\"--specified_para\"", ",", "type", "=", "list", ",", "default", "=", "[", "\n", "\n", "[", "0.1", ",", "0.5", ",", "15", "]", ",", "\n", "[", "0.1", ",", "2", ",", "15", "]", ",", "\n", "[", "0.3", ",", "2", ",", "15", "]", ",", "\n", "[", "0.3", ",", "5", ",", "15", "]", ",", "\n", "[", "0.5", ",", "2", ",", "15", "]", ",", "\n", "[", "0.5", ",", "5", ",", "15", "]", ",", "\n", "[", "1", ",", "3", ",", "15", "]", ",", "\n", "[", "1", ",", "5", ",", "15", "]", ",", "\n", "[", "3", ",", "5", ",", "15", "]", "\n", "]", ",", "help", "=", "\"[sigma_c, sigma_s, size]\"", ")", "\n", "#[[0.5, 1.5, 15],[0.1, 2, 15],[1, 3, 15],[0.1, 0.5,15],[0.3,2,15],[0.3,3,15],[0.5,3,15],[2,4,15],[0.1,1,15]", "\n", "# [0.05,0.5,15], [0.1,0.5,15],[0.1,0.7,15],[0.1,2,15],[0.1,3,15], [0.1,3,15], [0.3,1,15], [0.3,2,15], [0.3,5,15], [0.5,2,15],[0.5,5,15],[1,1.5,15], [1,3,15],[1,5,15],[3,5,15]", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.ensure_dir": [[96, 99], ["os.path.isdir", "os.makedirs"], "function", ["None"], ["", "def", "ensure_dir", "(", "dir_path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "isdir", "(", "dir_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "dir_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_BF.run_train_val": [[270, 381], ["train_BF.Session", "train_BF.Session.tensorboard", "os.path.join", "os.path.join", "train_BF.ensure_dir", "train_BF.ensure_dir", "range", "int", "int", "data_generate.data_g_no_iter", "data_generate.data_g_no_iter", "data_generate.data_g_iter", "data_generate.data_g_iter", "int", "train_BF.Session.change_lr", "train_BF.Session.get_dataloader", "train_BF.Session.get_dataloader", "train_BF.Session.train_net", "train_BF.Session.epoch_out", "logger.info", "train_BF.Session.val_net", "len", "train_BF.Session.inf_batch", "loss0_train.append", "loss1_train.append", "loss2_train.append", "ssim_train.append", "psnr_train.append", "numpy.mean", "numpy.mean", "numpy.mean", "torch.no_grad", "logger.info", "train_BF.Session.write", "numpy.mean", "logger.info", "numpy.mean", "train_BF.Session.save_checkpoints", "logger.info", "logger.info", "len", "train_BF.Session.inf_batch", "loss0_test.append", "loss1_test.append", "loss2_test.append", "ssim_test.append", "psnr_test.append", "numpy.mean", "numpy.mean", "numpy.mean", "len", "len", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.tensorboard", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.data_g_no_iter", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.data_g_no_iter", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.data_g_iter", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.data_g_iter", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.change_lr", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.get_dataloader", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.get_dataloader", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.train_net", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.epoch_out", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.val_net", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.inf_batch", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.write", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.save_checkpoints", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.inf_batch"], ["", "", "def", "run_train_val", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "If_sp", ":", "\n", "        ", "para", "=", "args", ".", "specified_para", "\n", "number", "=", "int", "(", "len", "(", "para", ")", ")", "\n", "", "else", ":", "\n", "        ", "sigma_c", "=", "args", ".", "sigma_c", "\n", "sigma_s", "=", "args", ".", "sigma_s", "\n", "size", "=", "args", ".", "size", "\n", "para", "=", "[", "sigma_c", ",", "sigma_s", ",", "size", "]", "\n", "number", "=", "int", "(", "len", "(", "sigma_c", ")", "*", "len", "(", "sigma_s", ")", "*", "len", "(", "size", ")", ")", "\n", "\n", "", "k_number", "=", "1", "\n", "sess", "=", "Session", "(", "args", ",", "number", "*", "3", ")", "\n", "# sess.load_checkpoints(\"../models/fr_64_16_run3/epoch 9_ssim 0.419491\")", "\n", "sess", ".", "tensorboard", "(", "'parameter'", ")", "\n", "psnr_m", "=", "0.0", "\n", "sess", ".", "now_epoch", "=", "sess", ".", "start_epoch", "\n", "path_h5_train", "=", "os", ".", "path", ".", "join", "(", "'./h5_file'", ",", "args", ".", "sessname", ",", "'train'", ")", "\n", "path_h5_test", "=", "os", ".", "path", ".", "join", "(", "'./h5_file'", ",", "args", ".", "sessname", ",", "'test'", ")", "\n", "ensure_dir", "(", "path_h5_train", ")", "\n", "ensure_dir", "(", "path_h5_test", ")", "\n", "if", "args", ".", "If_sp", ":", "#input_dir, output_dir,  base_number, para, k_number, noise_var", "\n", "        ", "train_h5_dir", "=", "data_g_no_iter", "(", "\n", "input_dir", "=", "args", ".", "train_dir", ",", "\n", "output_dir", "=", "path_h5_train", ",", "\n", "base_number", "=", "number", ",", "\n", "para", "=", "para", ",", "\n", "k_number", "=", "k_number", ",", "\n", "noise_var", "=", "args", ".", "noise_var", ")", "\n", "test_h5_dir", "=", "data_g_no_iter", "(", "\n", "input_dir", "=", "args", ".", "test_dir", ",", "\n", "output_dir", "=", "path_h5_test", ",", "\n", "base_number", "=", "number", ",", "\n", "para", "=", "para", ",", "\n", "k_number", "=", "k_number", ",", "\n", "noise_var", "=", "args", ".", "noise_var", ")", "\n", "", "else", ":", "\n", "        ", "train_h5_dir", "=", "data_g_iter", "(", "\n", "input_dir", "=", "args", ".", "train_dir", ",", "\n", "output_dir", "=", "path_h5_train", ",", "\n", "base_number", "=", "number", ",", "\n", "para", "=", "para", ",", "\n", "k_number", "=", "k_number", ",", "\n", "noise_var", "=", "args", ".", "noise_var", ")", "\n", "test_h5_dir", "=", "data_g_iter", "(", "\n", "input_dir", "=", "args", ".", "test_dir", ",", "\n", "output_dir", "=", "path_h5_test", ",", "\n", "base_number", "=", "number", ",", "\n", "para", "=", "para", ",", "\n", "k_number", "=", "k_number", ",", "\n", "noise_var", "=", "args", ".", "noise_var", "\n", ")", "\n", "", "for", "epoch", "in", "range", "(", "int", "(", "sess", ".", "epoch", "-", "sess", ".", "start_epoch", ")", ")", ":", "\n", "        ", "epoch", "=", "epoch", "+", "sess", ".", "start_epoch", "\n", "sess", ".", "change_lr", "(", "epoch", ")", "\n", "dt_train", "=", "sess", ".", "get_dataloader", "(", "dir", "=", "train_h5_dir", ",", "name", "=", "'train'", ")", "\n", "dt_val", "=", "sess", ".", "get_dataloader", "(", "dir", "=", "test_h5_dir", ",", "name", "=", "'val'", ")", "\n", "sess", ".", "train_net", "(", ")", "\n", "loss0_train", "=", "[", "]", "\n", "loss1_train", "=", "[", "]", "\n", "loss2_train", "=", "[", "]", "\n", "ssim_train", "=", "[", "]", "\n", "psnr_train", "=", "[", "]", "\n", "for", "batch", "in", "dt_train", ":", "\n", "            ", "result_train", ",", "loss", ",", "psnr", ",", "ssim", "=", "sess", ".", "inf_batch", "(", "\"train\"", ",", "batch", ")", "\n", "loss0_train", ".", "append", "(", "loss", "[", "0", "]", ")", "\n", "loss1_train", ".", "append", "(", "loss", "[", "1", "]", ")", "\n", "loss2_train", ".", "append", "(", "loss", "[", "2", "]", ")", "\n", "ssim_train", ".", "append", "(", "ssim", ")", "\n", "psnr_train", ".", "append", "(", "psnr", ")", "\n", "", "sess", ".", "epoch_out", "(", ")", "\n", "loss_train", "=", "[", "\n", "np", ".", "mean", "(", "loss0_train", ")", ",", "\n", "np", ".", "mean", "(", "loss1_train", ")", ",", "\n", "np", ".", "mean", "(", "loss2_train", ")", "\n", "]", "\n", "logger", ".", "info", "(", "'Train: loss1 %f loss2 %f loss3 %f'", "%", "(", "loss_train", "[", "0", "]", ",", "loss_train", "[", "1", "]", ",", "loss_train", "[", "2", "]", ")", ")", "\n", "loss0_test", "=", "[", "]", "\n", "loss1_test", "=", "[", "]", "\n", "loss2_test", "=", "[", "]", "\n", "ssim_test", "=", "[", "]", "\n", "psnr_test", "=", "[", "]", "\n", "sess", ".", "val_net", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "batch", "in", "dt_val", ":", "\n", "                ", "result_val", ",", "loss", ",", "psnr", ",", "ssim", "=", "sess", ".", "inf_batch", "(", "\"val\"", ",", "batch", ")", "\n", "loss0_test", ".", "append", "(", "loss", "[", "0", "]", ")", "\n", "loss1_test", ".", "append", "(", "loss", "[", "1", "]", ")", "\n", "loss2_test", ".", "append", "(", "loss", "[", "2", "]", ")", "\n", "ssim_test", ".", "append", "(", "ssim", ")", "\n", "psnr_test", ".", "append", "(", "psnr", ")", "\n", "", "loss_test", "=", "[", "\n", "np", ".", "mean", "(", "loss0_test", ")", ",", "\n", "np", ".", "mean", "(", "loss1_test", ")", ",", "\n", "np", ".", "mean", "(", "loss2_test", ")", "]", "\n", "logger", ".", "info", "(", "'Test: loss1 %f loss2 %f loss3 %f'", "%", "(", "loss_test", "[", "0", "]", ",", "loss_test", "[", "1", "]", ",", "loss_test", "[", "2", "]", ")", ")", "\n", "sess", ".", "write", "(", "\n", "name", "=", "\"parameter\"", ",", "\n", "loss", "=", "[", "loss_train", ",", "loss_test", "]", ",", "\n", "ssim", "=", "[", "np", ".", "mean", "(", "ssim_train", ")", ",", "np", ".", "mean", "(", "ssim_test", ")", "]", ",", "\n", "psnr", "=", "[", "np", ".", "mean", "(", "psnr_train", ")", ",", "np", ".", "mean", "(", "psnr_test", ")", "]", ",", "\n", "epoch", "=", "epoch", ")", "\n", "", "if", "np", ".", "mean", "(", "psnr_test", ")", ">", "psnr_m", ":", "\n", "            ", "logger", ".", "info", "(", "'psnr increase from %f to %f now'", "%", "(", "psnr_m", ",", "np", ".", "mean", "(", "psnr_test", ")", ")", ")", "\n", "psnr_m", "=", "np", ".", "mean", "(", "psnr_test", ")", "\n", "sess", ".", "save_checkpoints", "(", "\"epoch %d psnr %f \"", "%", "(", "epoch", ",", "psnr_m", ")", ")", "\n", "logger", ".", "info", "(", "'save model as epoch %d psnr %f'", "%", "(", "epoch", ",", "psnr_m", ")", ")", "\n", "", "else", ":", "\n", "            ", "logger", ".", "info", "(", "\"psnr now is %f, not increase from %f\"", "%", "(", "np", ".", "mean", "(", "psnr_test", ")", ",", "psnr_m", ")", ")", "\n", "", "sess", ".", "now_epoch", "+=", "1", "\n", "# sess.sche.step(epoch=epoch)", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.save_name": [[10, 16], ["range", "len", "range", "str", "len", "str"], "function", ["None"], ["def", "save_name", "(", "para", ",", "k_number", ")", ":", "\n", "    ", "out", "=", "\"k\"", "+", "str", "(", "k_number", ")", "+", "\"_\"", "\n", "for", "i", "in", "range", "(", "len", "(", "para", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "len", "(", "para", "[", "i", "]", ")", ")", ":", "\n", "            ", "out", "=", "out", "+", "str", "(", "para", "[", "i", "]", "[", "j", "]", ")", "+", "\"_\"", "\n", "", "", "return", "out", "+", "\".h5\"", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.gaussian_noise": [[18, 25], ["img.astype", "numpy.random.seed", "numpy.random.normal", "numpy.clip().astype", "numpy.clip"], "function", ["None"], ["", "def", "gaussian_noise", "(", "img", ",", "mean", ",", "var", ")", ":", "#####\u8981\u6c42\u662f0\u52301\u4e4b\u95f4\u7684\u56fe\u7247", "\n", "    ", "noise_img", "=", "img", ".", "astype", "(", "np", ".", "float", ")", "\n", "np", ".", "random", ".", "seed", "(", "10", ")", "\n", "noise", "=", "np", ".", "random", ".", "normal", "(", "mean", ",", "var", "**", "0.5", ",", "img", ".", "shape", ")", "\n", "noise_img", "+=", "noise", "\n", "noise_img", "=", "np", ".", "clip", "(", "noise_img", ",", "0", ",", "1", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "return", "noise_img", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.data_g_iter": [[27, 61], ["list", "data_generate_BF.save_name", "os.path.join", "pathlib.Path().glob", "os.path.exists", "h5py.File", "h5py.File.create_group", "h5py.File.create_group", "h5py.File.create_group", "tqdm.tqdm", "h5py.File.close", "print", "print", "range", "str", "gaussian_noise().astype", "f.create_group.create_dataset", "numpy.zeros", "f.create_group.create_dataset", "f.create_group.create_dataset", "pathlib.Path", "len", "[].split", "data_generate_BF.gaussian_noise", "cv2.imread", "range", "str.split", "cv2.bilateralFilter"], "function", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.save_name", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.gaussian_noise"], ["", "def", "data_g_iter", "(", "input_dir", ",", "output_dir", ",", "base_number", ",", "para", ",", "k_number", ",", "noise_var", ")", ":", "\n", "    ", "paths", "=", "list", "(", "Path", "(", "input_dir", ")", ".", "glob", "(", "\"*.*\"", ")", ")", "\n", "out_name", "=", "save_name", "(", "para", ",", "k_number", ")", "\n", "out_file", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "out_name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "out_file", ")", ":", "\n", "        ", "f", "=", "h5py", ".", "File", "(", "out_file", ",", "'w'", ")", "\n", "n", "=", "f", ".", "create_group", "(", "\"noise\"", ")", "\n", "x", "=", "f", ".", "create_group", "(", "\"input\"", ")", "\n", "y", "=", "f", ".", "create_group", "(", "\"label\"", ")", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "len", "(", "paths", ")", ")", ")", ":", "\n", "            ", "image_file", "=", "str", "(", "paths", "[", "i", "]", ")", "\n", "image_name", "=", "image_file", ".", "split", "(", "\"\\\\\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "image_o", "=", "(", "cv2", ".", "imread", "(", "image_file", ")", "/", "255.0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "image_n", "=", "(", "gaussian_noise", "(", "image_o", ",", "mean", "=", "0", ",", "var", "=", "noise_var", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "h", ",", "w", ",", "c", "=", "image_o", ".", "shape", "\n", "n", ".", "create_dataset", "(", "image_name", ",", "data", "=", "image_n", ")", "\n", "bilater_out", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", "*", "base_number", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "b_sample", "=", "0", "\n", "for", "gama_c", "in", "para", "[", "0", "]", ":", "\n", "                ", "for", "gama_s", "in", "para", "[", "1", "]", ":", "\n", "                    ", "for", "size", "in", "para", "[", "2", "]", ":", "\n", "                        ", "img", "=", "image_n", "\n", "for", "times", "in", "range", "(", "k_number", ")", ":", "\n", "                            ", "img", "=", "cv2", ".", "bilateralFilter", "(", "img", ",", "size", ",", "gama_c", ",", "gama_s", ")", "\n", "", "bilater_out", "[", ":", ",", ":", ",", "c", "*", "b_sample", ":", "c", "*", "b_sample", "+", "3", "]", "=", "img", "\n", "b_sample", "+=", "1", "\n", "", "", "", "x", ".", "create_dataset", "(", "image_name", ",", "data", "=", "bilater_out", ")", "\n", "y", ".", "create_dataset", "(", "image_name", ",", "data", "=", "image_o", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "print", "(", "\"Images process successful !!!\"", ")", "\n", "return", "out_file", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Images had been processed !!!\"", ")", "\n", "return", "out_file", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.data_g_no_iter": [[63, 94], ["list", "data_generate_BF.save_name", "os.path.join", "pathlib.Path().glob", "os.path.exists", "h5py.File", "h5py.File.create_group", "h5py.File.create_group", "h5py.File.create_group", "tqdm.tqdm", "h5py.File.close", "print", "print", "range", "str", "gaussian_noise().astype", "f.create_group.create_dataset", "numpy.zeros", "range", "f.create_group.create_dataset", "f.create_group.create_dataset", "pathlib.Path", "len", "[].split", "len", "range", "data_generate_BF.gaussian_noise", "cv2.bilateralFilter", "cv2.imread", "str.split"], "function", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.save_name", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.gaussian_noise"], ["", "", "def", "data_g_no_iter", "(", "input_dir", ",", "output_dir", ",", "base_number", ",", "para", ",", "k_number", ",", "noise_var", ")", ":", "\n", "    ", "paths", "=", "list", "(", "Path", "(", "input_dir", ")", ".", "glob", "(", "\"*.*\"", ")", ")", "\n", "out_name", "=", "save_name", "(", "para", ",", "k_number", ")", "\n", "out_file", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "out_name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "out_file", ")", ":", "\n", "        ", "f", "=", "h5py", ".", "File", "(", "out_file", ",", "'w'", ")", "\n", "n", "=", "f", ".", "create_group", "(", "\"noise\"", ")", "\n", "x", "=", "f", ".", "create_group", "(", "\"input\"", ")", "\n", "y", "=", "f", ".", "create_group", "(", "\"label\"", ")", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "len", "(", "paths", ")", ")", ")", ":", "\n", "            ", "image_file", "=", "str", "(", "paths", "[", "i", "]", ")", "\n", "image_name", "=", "image_file", ".", "split", "(", "\"\\\\\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "image_o", "=", "(", "cv2", ".", "imread", "(", "image_file", ")", "/", "255.0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "image_n", "=", "(", "gaussian_noise", "(", "image_o", ",", "mean", "=", "0", ",", "var", "=", "noise_var", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "h", ",", "w", ",", "c", "=", "image_o", ".", "shape", "\n", "n", ".", "create_dataset", "(", "image_name", ",", "data", "=", "image_n", ")", "\n", "bilater_out", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", "*", "base_number", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "for", "b_sample", "in", "range", "(", "len", "(", "para", ")", ")", ":", "\n", "                ", "img", "=", "image_n", "\n", "gama_c", ",", "gama_s", ",", "size", "=", "para", "[", "b_sample", "]", "\n", "for", "time", "in", "range", "(", "k_number", ")", ":", "\n", "                    ", "img", "=", "cv2", ".", "bilateralFilter", "(", "img", ",", "size", ",", "gama_c", ",", "gama_s", ")", "\n", "", "bilater_out", "[", ":", ",", ":", ",", "c", "*", "b_sample", ":", "c", "*", "b_sample", "+", "3", "]", "=", "img", "\n", "", "x", ".", "create_dataset", "(", "image_name", ",", "data", "=", "bilater_out", ")", "\n", "y", ".", "create_dataset", "(", "image_name", ",", "data", "=", "image_o", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "print", "(", "\"Images process successful !!!\"", ")", "\n", "return", "out_file", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Images had been processed !!!\"", ")", "\n", "return", "out_file", "", "", "", ""]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.__init__": [[91, 127], ["train_RGF.ensure_dir", "train_RGF.ensure_dir", "logger.info", "logger.info", "cal_ssim.SSIM().cuda", "torch.nn.L1Loss().cuda", "Net.TVLoss().cuda", "Net.parameterNet_linear().cuda", "torch.optim.SGD", "torch.optim.Adam", "Net.parameterNet_mlp().cuda", "cal_ssim.SSIM", "torch.nn.L1Loss", "Net.TVLoss", "train_RGF.Session.net.parameters", "train_RGF.Session.net.parameters", "Net.parameterNet_linear", "Net.parameterNet_conv3().cuda", "Net.parameterNet_mlp", "Net.parameterNet_conv3"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "number", ")", ":", "\n", "        ", "self", ".", "log_dir", "=", "args", ".", "log_dir", "\n", "self", ".", "model_dir", "=", "args", ".", "model_dir", "\n", "ensure_dir", "(", "self", ".", "log_dir", ")", "\n", "ensure_dir", "(", "self", ".", "model_dir", ")", "\n", "logger", ".", "info", "(", "'set log dir as %s'", "%", "self", ".", "log_dir", ")", "\n", "logger", ".", "info", "(", "'set model dir as %s'", "%", "self", ".", "model_dir", ")", "\n", "\n", "if", "args", ".", "Net", "==", "\"parameterNet_linear\"", ":", "\n", "            ", "self", ".", "net", "=", "parameterNet_linear", "(", "in_channel", "=", "number", ",", "out_channel", "=", "3", ")", ".", "cuda", "(", ")", "\n", "", "elif", "args", ".", "Net", "==", "'parameterNet_mlp'", ":", "\n", "            ", "self", ".", "net", "=", "parameterNet_mlp", "(", "in_channel", "=", "number", ",", "out_channel", "=", "3", ")", ".", "cuda", "(", ")", "\n", "", "elif", "args", ".", "Net", "==", "'parameterNet_conv3'", ":", "\n", "            ", "self", ".", "net", "=", "parameterNet_conv3", "(", "in_channel", "=", "number", ",", "out_channel", "=", "3", ")", ".", "cuda", "(", ")", "\n", "", "self", ".", "ssim", "=", "SSIM", "(", ")", ".", "cuda", "(", ")", "\n", "self", ".", "image_size", "=", "args", ".", "image_size", "\n", "self", ".", "batch_size", "=", "args", ".", "batch_size", "\n", "self", ".", "num_workers", "=", "args", ".", "num_workers", "\n", "\n", "self", ".", "step", "=", "0", "\n", "self", ".", "epoch", "=", "args", ".", "epochs", "\n", "self", ".", "now_epoch", "=", "0", "\n", "self", ".", "start_epoch", "=", "0", "\n", "self", ".", "writers", "=", "{", "}", "\n", "self", ".", "total_step", "=", "0", "\n", "\n", "self", ".", "sessname", "=", "args", ".", "sessname", "\n", "\n", "self", ".", "crit", "=", "L1Loss", "(", ")", ".", "cuda", "(", ")", "\n", "self", ".", "tv", "=", "TVLoss", "(", ")", ".", "cuda", "(", ")", "\n", "# self.crit = MSELoss().cuda()", "\n", "\n", "if", "args", ".", "opt", "==", "\"SGD\"", ":", "\n", "            ", "self", ".", "opt", "=", "SGD", "(", "self", ".", "net", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "opt", "=", "Adam", "(", "self", ".", "net", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.tensorboard": [[130, 135], ["os.path.join", "train_RGF.ensure_dir", "torch.utils.tensorboard.SummaryWriter", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir"], ["", "", "def", "tensorboard", "(", "self", ",", "name", ")", ":", "\n", "        ", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "log_dir", ",", "self", ".", "sessname", ")", "\n", "ensure_dir", "(", "path", ")", "\n", "self", ".", "writers", "[", "name", "]", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "path", ",", "name", "+", "'.events'", ")", ")", "\n", "return", "self", ".", "writers", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.write": [[136, 150], ["train_RGF.Session.writers[].add_scalar", "train_RGF.Session.writers[].add_scalars", "train_RGF.Session.writers[].add_scalars", "train_RGF.Session.writers[].add_scalars", "train_RGF.Session.writers[].add_scalars"], "methods", ["None"], ["", "def", "write", "(", "self", ",", "name", ",", "loss", ",", "ssim", ",", "psnr", ",", "epoch", ")", ":", "\n", "        ", "lr", "=", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalar", "(", "\"lr\"", ",", "lr", ",", "epoch", ")", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalars", "(", "\n", "\"train_loss\"", ",", "{", "\"loss1\"", ":", "loss", "[", "0", "]", "[", "0", "]", ",", "\"loss2\"", ":", "loss", "[", "0", "]", "[", "1", "]", ",", "\"loss3\"", ":", "loss", "[", "0", "]", "[", "2", "]", ",", "\"lossTV\"", ":", "loss", "[", "0", "]", "[", "3", "]", "}", ",", "\n", "\n", "epoch", "\n", ")", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalars", "(", "\n", "\"test_loss\"", ",", "{", "\"loss1\"", ":", "loss", "[", "1", "]", "[", "0", "]", ",", "\"loss2\"", ":", "loss", "[", "1", "]", "[", "1", "]", ",", "\"loss3\"", ":", "loss", "[", "1", "]", "[", "2", "]", ",", "'lossTV'", ":", "loss", "[", "1", "]", "[", "3", "]", "}", ",", "\n", "epoch", "\n", ")", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalars", "(", "\"ssim\"", ",", "{", "\"train\"", ":", "ssim", "[", "0", "]", ",", "\"test\"", ":", "ssim", "[", "1", "]", "}", ",", "epoch", ")", "\n", "self", ".", "writers", "[", "name", "]", ".", "add_scalars", "(", "\"psnr\"", ",", "{", "\"train\"", ":", "psnr", "[", "0", "]", ",", "\"test\"", ":", "psnr", "[", "1", "]", "}", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.write_close": [[152, 154], ["train_RGF.Session.writers[].close"], "methods", ["None"], ["", "def", "write_close", "(", "self", ",", "name", ")", ":", "\n", "        ", "self", ".", "writers", "[", "name", "]", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.get_dataloader": [[155, 169], ["dataset.TestDataset.TrainDataset", "torch.utils.data.DataLoader", "len", "dataset.TestDataset.TestDataset", "torch.utils.data.DataLoader", "print"], "methods", ["None"], ["", "def", "get_dataloader", "(", "self", ",", "dir", ",", "name", ")", ":", "\n", "        ", "if", "name", "==", "\"train\"", ":", "\n", "            ", "dataset", "=", "TrainDataset", "(", "dir", ",", "self", ".", "image_size", ")", "\n", "a", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ",", "drop_last", "=", "True", ")", "\n", "self", ".", "total_step", "=", "len", "(", "a", ")", "\n", "return", "a", "\n", "", "elif", "name", "==", "\"val\"", ":", "\n", "            ", "dataset", "=", "TestDataset", "(", "dir", ")", "\n", "return", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ",", "drop_last", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"Incorrect Name for Dataloader!!!\"", ")", "\n", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.save_checkpoints": [[170, 180], ["os.path.join", "train_RGF.ensure_dir", "os.path.join", "torch.save", "train_RGF.Session.net.state_dict", "train_RGF.Session.opt.state_dict"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir"], ["", "", "def", "save_checkpoints", "(", "self", ",", "name", ")", ":", "\n", "        ", "dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "model_dir", ",", "self", ".", "sessname", ")", "\n", "ensure_dir", "(", "dir", ")", "\n", "ckp_path", "=", "os", ".", "path", ".", "join", "(", "dir", ",", "name", ")", "\n", "obj", "=", "{", "\n", "'net'", ":", "self", ".", "net", ".", "state_dict", "(", ")", ",", "\n", "'now_epoch'", ":", "self", ".", "now_epoch", "+", "1", ",", "\n", "'opt'", ":", "self", ".", "opt", ".", "state_dict", "(", ")", ",", "\n", "}", "\n", "torch", ".", "save", "(", "obj", ",", "ckp_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.load_checkpoints": [[181, 192], ["train_RGF.Session.net.load_state_dict", "train_RGF.Session.opt.load_state_dict", "torch.load", "logger.info", "logger.info"], "methods", ["None"], ["", "def", "load_checkpoints", "(", "self", ",", "dir", ")", ":", "\n", "        ", "ckp_path", "=", "dir", "\n", "try", ":", "\n", "            ", "obj", "=", "torch", ".", "load", "(", "ckp_path", ")", "\n", "logger", ".", "info", "(", "'Load checkpoint %s'", "%", "ckp_path", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "            ", "logger", ".", "info", "(", "'No checkpoint %s!!'", "%", "ckp_path", ")", "\n", "return", "\n", "", "self", ".", "net", ".", "load_state_dict", "(", "obj", "[", "'net'", "]", ")", "\n", "self", ".", "opt", ".", "load_state_dict", "(", "obj", "[", "'opt'", "]", ")", "\n", "self", ".", "start_epoch", "=", "obj", "[", "'now_epoch'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.inf_batch": [[193, 237], ["batch[].type().cuda", "batch[].type().cuda", "batch[].type().cuda", "batch[].type().cuda", "train_RGF.Session.net", "train_RGF.Session.crit", "train_RGF.Session.crit", "train_RGF.Session.crit", "train_RGF.Session.tv", "train_RGF.Session.ssim", "train_RGF.Session.net.zero_grad", "loss.backward", "train_RGF.Session.opt.step", "logger.info", "train_RGF.Session.net", "train_RGF.Session.crit", "train_RGF.Session.crit", "train_RGF.Session.crit", "train_RGF.Session.tv", "train_RGF.Session.ssim", "torch.nn.MSELoss().cuda", "math.log10", "train_RGF.Session.item", "torch.nn.MSELoss().cuda", "math.log10", "train_RGF.Session.item", "batch[].type", "batch[].type", "batch[].type", "batch[].type", "train_RGF.Session.item", "train_RGF.Session.item", "train_RGF.Session.item", "train_RGF.Session.item", "train_RGF.Session.item", "train_RGF.Session.item", "train_RGF.Session.item", "train_RGF.Session.item", "torch.nn.MSELoss", "mse.item", "torch.nn.MSELoss", "mse.item"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.ssim", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.ssim"], ["", "def", "inf_batch", "(", "self", ",", "name", ",", "batch", ")", ":", "\n", "\n", "        ", "FS", ",", "RES", "=", "batch", "[", "'FS'", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", ",", "batch", "[", "'RES'", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "N", ",", "GT", "=", "batch", "[", "'NOISE'", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", ",", "batch", "[", "'GT'", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "if", "name", "==", "\"train\"", ":", "\n", "# background = self.net(N, bilater, RES)", "\n", "            ", "residual", ",", "background", ",", "gt", "=", "self", ".", "net", "(", "N", ",", "FS", ",", "RES", ")", "\n", "loss1", "=", "self", ".", "crit", "(", "residual", ",", "N", "-", "GT", ")", "\n", "loss2", "=", "self", ".", "crit", "(", "background", ",", "GT", ")", "\n", "loss3", "=", "self", ".", "crit", "(", "gt", ",", "GT", ")", "\n", "lossTV", "=", "self", ".", "tv", "(", "gt", ")", "\n", "# loss = loss2", "\n", "# loss = loss1 + loss2 + loss3", "\n", "loss", "=", "0.1", "*", "loss1", "+", "0.1", "*", "loss2", "+", "loss3", "+", "0.1", "*", "lossTV", "\n", "\n", "ssim", "=", "self", ".", "ssim", "(", "gt", ",", "GT", ")", "\n", "# ssim = self.ssim(background, GT)", "\n", "# mse = MSELoss().cuda()(background, GT)", "\n", "mse", "=", "MSELoss", "(", ")", ".", "cuda", "(", ")", "(", "gt", ",", "GT", ")", "\n", "psnr", "=", "10", "*", "log10", "(", "1", "/", "mse", ".", "item", "(", ")", ")", "\n", "self", ".", "net", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "opt", ".", "step", "(", ")", "\n", "lr_now", "=", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "\n", "logger", ".", "info", "(", "\"epoch %d/%d, step %d/%d, loss1 %f loss2 %f loss3 %f lossTV %f psnr: %f, ssim : %f, lr is %f\"", "\n", "%", "(", "self", ".", "now_epoch", ",", "self", ".", "epoch", ",", "self", ".", "step", ",", "self", ".", "total_step", ",", "loss1", ",", "loss2", ",", "loss3", ",", "lossTV", ",", "psnr", ",", "ssim", ",", "lr_now", ")", ")", "\n", "\n", "# logger.info(\"epoch %d/%d, step %d/%d, loss2 %f,  psnr: %f, ssim : %f, lr is %f\"", "\n", "#             % (self.now_epoch, self.epoch, self.step, self.total_step,  loss2, psnr, ssim, lr_now))", "\n", "self", ".", "step", "+=", "1", "\n", "return", "gt", ",", "[", "loss1", ".", "item", "(", ")", ",", "loss2", ".", "item", "(", ")", ",", "loss3", ".", "item", "(", ")", ",", "lossTV", ".", "item", "(", ")", "]", ",", "psnr", ",", "ssim", ".", "item", "(", ")", "\n", "# return background, loss2.item(), psnr, ssim.item()", "\n", "\n", "", "else", ":", "\n", "            ", "residual", ",", "background", ",", "gt", "=", "self", ".", "net", "(", "N", ",", "FS", ",", "RES", ")", "\n", "loss1", "=", "self", ".", "crit", "(", "residual", ",", "N", "-", "GT", ")", "\n", "loss2", "=", "self", ".", "crit", "(", "background", ",", "GT", ")", "\n", "loss3", "=", "self", ".", "crit", "(", "gt", ",", "GT", ")", "\n", "lossTV", "=", "self", ".", "tv", "(", "gt", ")", "\n", "ssim", "=", "self", ".", "ssim", "(", "gt", ",", "GT", ")", "\n", "mse", "=", "MSELoss", "(", ")", ".", "cuda", "(", ")", "(", "gt", ",", "GT", ")", "\n", "psnr", "=", "10", "*", "log10", "(", "1", "/", "mse", ".", "item", "(", ")", ")", "\n", "\n", "return", "gt", ",", "[", "loss1", ".", "item", "(", ")", ",", "loss2", ".", "item", "(", ")", ",", "loss3", ".", "item", "(", ")", ",", "lossTV", ".", "item", "(", ")", "]", ",", "psnr", ",", "ssim", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.change_lr": [[238, 253], ["None"], "methods", ["None"], ["", "", "def", "change_lr", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "if", "epoch", "<", "30", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.01", "\n", "", "elif", "epoch", "<", "60", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.005", "\n", "", "elif", "epoch", "<", "90", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.0025", "\n", "", "elif", "epoch", "<", "120", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.00125", "\n", "", "elif", "epoch", "<", "150", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.001", "\n", "", "elif", "epoch", "<", "180", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.0005", "\n", "", "else", ":", "\n", "            ", "self", ".", "opt", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "0.00001", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.epoch_out": [[254, 256], ["None"], "methods", ["None"], ["", "", "def", "epoch_out", "(", "self", ")", ":", "\n", "        ", "self", ".", "step", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.train_net": [[257, 259], ["train_RGF.Session.net.train"], "methods", ["None"], ["", "def", "train_net", "(", "self", ")", ":", "\n", "        ", "self", ".", "net", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.val_net": [[260, 262], ["train_RGF.Session.net.eval"], "methods", ["None"], ["", "def", "val_net", "(", "self", ")", ":", "\n", "        ", "self", ".", "net", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.get_args": [[26, 84], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "get_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"train derain model\"", ",", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "parser", ".", "add_argument", "(", "\"--train_dir\"", ",", "type", "=", "str", ",", "default", "=", "'./dataset/train'", ",", "\n", "help", "=", "\"train image dir\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--test_dir\"", ",", "type", "=", "str", ",", "default", "=", "'./dataset/test'", ",", "\n", "help", "=", "\"test image dir\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--log_dir\"", ",", "type", "=", "str", ",", "default", "=", "'./logdir'", ",", "\n", "help", "=", "\"log_dir\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--model_dir\"", ",", "type", "=", "str", ",", "default", "=", "'./models'", ",", "\n", "help", "=", "\"test image dir\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--image_size\"", ",", "type", "=", "int", ",", "default", "=", "128", ",", "\n", "help", "=", "\"training patch size\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--batch_size\"", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "\"batch size\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--epochs\"", ",", "type", "=", "int", ",", "default", "=", "210", ",", "\n", "help", "=", "\"number of epochs\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_workers\"", ",", "type", "=", "int", ",", "default", "=", "8", ",", "\n", "help", "=", "\"numworks in dataloader\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--aug_data\"", ",", "type", "=", "bool", ",", "default", "=", "False", ",", "\n", "help", "=", "\"whether to augment data\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lr\"", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "\n", "help", "=", "\"learning rate\"", ")", "#0.01", "\n", "parser", ".", "add_argument", "(", "\"--loss\"", ",", "type", "=", "str", ",", "default", "=", "\"MSE\"", ",", "\n", "help", "=", "\"loss; MSE', 'L1Loss', or 'MyLoss' is expected\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--opt\"", ",", "type", "=", "str", ",", "default", "=", "\"Adam\"", ",", "\n", "help", "=", "\"Optimizer for updating the network parameters\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--checkpoint\"", ",", "type", "=", "str", ",", "default", "=", "\"the_end\"", ",", "\n", "help", "=", "\"model architecture ('Similarity')\"", ")", "\n", "####\u5224\u65ad\u662f\u5426\u4f7f\u7528\u7279\u5b9a\u53c2\u6570\uff0c \u9ed8\u8ba4\u4e3a\u4f7f\u7528\u7279\u5b9a\u53c2\u6570", "\n", "parser", ".", "add_argument", "(", "\"--If_sp\"", ",", "type", "=", "bool", ",", "default", "=", "False", ",", "help", "=", "\"If \"", ")", "\n", "### usually adjust####", "\n", "parser", ".", "add_argument", "(", "\"--sessname\"", ",", "type", "=", "str", ",", "default", "=", "'TV_weighdown_8basis_linear'", ",", "#\"30biggerbasis_linear_0.01\",", "\n", "help", "=", "\"different session names for parameter modification\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--Net\"", ",", "type", "=", "str", ",", "default", "=", "\"parameterNet_linear\"", ",", "\n", "help", "=", "\"choice of Network: parameterNet_mlp, parameterNet_linear ,parameterNet_conv3\"", ")", "\n", "\n", "\n", "\n", "####\u4f7f\u7528\u8fed\u4ee3\u7684\u65b9\u6cd5\u7684\u53c2\u6570", "\n", "parser", ".", "add_argument", "(", "\"--size\"", ",", "type", "=", "list", ",", "default", "=", "[", "7", ",", "15", "]", ",", "#[9],", "\n", "help", "=", "\"\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--sigmaColor\"", ",", "type", "=", "list", ",", "default", "=", "[", "0.2", ",", "0.5", "]", ",", "#[0.2,0.4,0.6],", "\n", "help", "=", "\"\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--sigmaSpace\"", ",", "type", "=", "list", ",", "default", "=", "[", "3", ",", "6", "]", ",", "#[3,6],", "\n", "help", "=", "\"\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--numOfIter\"", ",", "type", "=", "list", ",", "default", "=", "[", "4", "]", ",", "#[2,4],", "\n", "help", "=", "\"\"", ")", "\n", "\n", "####\u6307\u5b9a\u53c2\u6570\u7684\u65b9\u6cd5 \u53c2\u6570\u89c4\u5219[sigma_c, sigma_s, size]", "\n", "\n", "parser", ".", "add_argument", "(", "\"--specified_para\"", ",", "type", "=", "list", ",", "default", "=", "[", "]", ",", "help", "=", "\"[sigma_c, sigma_s, size]\"", ")", "\n", "#[[0.5, 1.5, 15],[0.1, 2, 15],[1, 3, 15],[0.1, 0.5,15],[0.3,2,15],[0.3,3,15],[0.5,3,15],[2,4,15],[0.1,1,15]", "\n", "# [0.05,0.5,15], [0.1,0.5,15],[0.1,0.7,15],[0.1,2,15],[0.1,3,15], [0.1,3,15], [0.3,1,15], [0.3,2,15], [0.3,5,15], [0.5,2,15],[0.5,5,15],[1,1.5,15], [1,3,15],[1,5,15],[3,5,15]", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir": [[86, 89], ["os.path.isdir", "os.makedirs"], "function", ["None"], ["", "def", "ensure_dir", "(", "dir_path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "isdir", "(", "dir_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "dir_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.run_train_val": [[263, 385], ["train_RGF.Session", "train_RGF.Session.tensorboard", "os.path.join", "os.path.join", "train_RGF.ensure_dir", "train_RGF.ensure_dir", "range", "int", "int", "data_generate.data_g_no_iter", "data_generate.data_g_no_iter", "data_generate.data_g_iter", "data_generate.data_g_iter", "int", "train_RGF.Session.change_lr", "train_RGF.Session.get_dataloader", "train_RGF.Session.get_dataloader", "train_RGF.Session.train_net", "train_RGF.Session.epoch_out", "logger.info", "train_RGF.Session.val_net", "numpy.mean", "train_RGF.Session.save_checkpoints", "logger.info", "len", "train_RGF.Session.inf_batch", "loss0_train.append", "loss1_train.append", "loss2_train.append", "loss3_train.append", "ssim_train.append", "psnr_train.append", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "torch.no_grad", "logger.info", "train_RGF.Session.write", "len", "train_RGF.Session.inf_batch", "loss0_test.append", "loss1_test.append", "loss2_test.append", "loss3_test.append", "ssim_test.append", "psnr_test.append", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "len", "len", "len", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.tensorboard", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.data_g_no_iter", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.data_g_no_iter", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.data_g_iter", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_generate_BF.data_g_iter", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.change_lr", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.get_dataloader", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.get_dataloader", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.train_net", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.epoch_out", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.val_net", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.save_checkpoints", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.inf_batch", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.write", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.inf_batch"], ["", "", "def", "run_train_val", "(", "args", ")", ":", "\n", "\n", "    ", "if", "args", ".", "If_sp", ":", "\n", "        ", "para", "=", "args", ".", "specified_para", "\n", "number", "=", "int", "(", "len", "(", "para", ")", ")", "\n", "", "else", ":", "\n", "        ", "size", "=", "args", ".", "size", "\n", "sigmaColor", "=", "args", ".", "sigmaColor", "\n", "sigmaSpace", "=", "args", ".", "sigmaSpace", "\n", "numOfIter", "=", "args", ".", "numOfIter", "\n", "para", "=", "[", "size", ",", "sigmaColor", ",", "sigmaSpace", ",", "numOfIter", "]", "\n", "number", "=", "int", "(", "len", "(", "size", ")", "*", "len", "(", "sigmaColor", ")", "*", "len", "(", "sigmaSpace", ")", "*", "len", "(", "numOfIter", ")", ")", "\n", "\n", "", "k_number", "=", "1", "\n", "sess", "=", "Session", "(", "args", ",", "number", "*", "3", ")", "\n", "# sess.load_checkpoints(\"../models/fr_64_16_run3/epoch 9_ssim 0.419491\")", "\n", "sess", ".", "tensorboard", "(", "'parameter'", ")", "\n", "psnr_m", "=", "0.0", "\n", "sess", ".", "now_epoch", "=", "sess", ".", "start_epoch", "\n", "path_h5_train", "=", "os", ".", "path", ".", "join", "(", "'./h5_file'", ",", "args", ".", "sessname", ",", "'train'", ")", "\n", "path_h5_test", "=", "os", ".", "path", ".", "join", "(", "'./h5_file'", ",", "args", ".", "sessname", ",", "'test'", ")", "\n", "ensure_dir", "(", "path_h5_train", ")", "\n", "ensure_dir", "(", "path_h5_test", ")", "\n", "if", "args", ".", "If_sp", ":", "#input_dir, output_dir,  base_number, para, k_number, noise_var", "\n", "        ", "train_h5_dir", "=", "data_g_no_iter", "(", "\n", "input_dir", "=", "args", ".", "train_dir", ",", "\n", "output_dir", "=", "path_h5_train", ",", "\n", "base_number", "=", "number", ",", "\n", "para", "=", "para", ",", "\n", "k_number", "=", "k_number", ",", "\n", ")", "\n", "test_h5_dir", "=", "data_g_no_iter", "(", "\n", "input_dir", "=", "args", ".", "test_dir", ",", "\n", "output_dir", "=", "path_h5_test", ",", "\n", "base_number", "=", "number", ",", "\n", "para", "=", "para", ",", "\n", "k_number", "=", "k_number", ",", "\n", ")", "\n", "", "else", ":", "\n", "        ", "train_h5_dir", "=", "data_g_iter", "(", "\n", "input_dir", "=", "args", ".", "train_dir", ",", "\n", "output_dir", "=", "path_h5_train", ",", "\n", "base_number", "=", "number", ",", "\n", "para", "=", "para", ",", "\n", "k_number", "=", "k_number", ",", "\n", ")", "\n", "test_h5_dir", "=", "data_g_iter", "(", "\n", "input_dir", "=", "args", ".", "test_dir", ",", "\n", "output_dir", "=", "path_h5_test", ",", "\n", "base_number", "=", "number", ",", "\n", "para", "=", "para", ",", "\n", "k_number", "=", "k_number", ",", "\n", "\n", ")", "\n", "", "for", "epoch", "in", "range", "(", "int", "(", "sess", ".", "epoch", "-", "sess", ".", "start_epoch", ")", ")", ":", "\n", "        ", "epoch", "=", "epoch", "+", "sess", ".", "start_epoch", "\n", "sess", ".", "change_lr", "(", "epoch", ")", "\n", "dt_train", "=", "sess", ".", "get_dataloader", "(", "dir", "=", "train_h5_dir", ",", "name", "=", "'train'", ")", "\n", "dt_val", "=", "sess", ".", "get_dataloader", "(", "dir", "=", "test_h5_dir", ",", "name", "=", "'val'", ")", "\n", "sess", ".", "train_net", "(", ")", "\n", "loss0_train", "=", "[", "]", "\n", "loss1_train", "=", "[", "]", "\n", "loss2_train", "=", "[", "]", "\n", "loss3_train", "=", "[", "]", "\n", "ssim_train", "=", "[", "]", "\n", "psnr_train", "=", "[", "]", "\n", "for", "batch", "in", "dt_train", ":", "\n", "            ", "result_train", ",", "loss", ",", "psnr", ",", "ssim", "=", "sess", ".", "inf_batch", "(", "\"train\"", ",", "batch", ")", "\n", "loss0_train", ".", "append", "(", "loss", "[", "0", "]", ")", "\n", "loss1_train", ".", "append", "(", "loss", "[", "1", "]", ")", "\n", "loss2_train", ".", "append", "(", "loss", "[", "2", "]", ")", "\n", "loss3_train", ".", "append", "(", "loss", "[", "3", "]", ")", "\n", "ssim_train", ".", "append", "(", "ssim", ")", "\n", "psnr_train", ".", "append", "(", "psnr", ")", "\n", "", "sess", ".", "epoch_out", "(", ")", "\n", "loss_train", "=", "[", "\n", "np", ".", "mean", "(", "loss0_train", ")", ",", "\n", "np", ".", "mean", "(", "loss1_train", ")", ",", "\n", "np", ".", "mean", "(", "loss2_train", ")", ",", "\n", "np", ".", "mean", "(", "loss3_train", ")", "\n", "]", "\n", "logger", ".", "info", "(", "'Train: loss1 %f loss2 %f loss3 %f lossTV %f'", "%", "(", "loss_train", "[", "0", "]", ",", "loss_train", "[", "1", "]", ",", "loss_train", "[", "2", "]", ",", "loss_train", "[", "3", "]", ")", ")", "\n", "loss0_test", "=", "[", "]", "\n", "loss1_test", "=", "[", "]", "\n", "loss2_test", "=", "[", "]", "\n", "loss3_test", "=", "[", "]", "\n", "ssim_test", "=", "[", "]", "\n", "psnr_test", "=", "[", "]", "\n", "sess", ".", "val_net", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "batch", "in", "dt_val", ":", "\n", "                ", "result_val", ",", "loss", ",", "psnr", ",", "ssim", "=", "sess", ".", "inf_batch", "(", "\"val\"", ",", "batch", ")", "\n", "loss0_test", ".", "append", "(", "loss", "[", "0", "]", ")", "\n", "loss1_test", ".", "append", "(", "loss", "[", "1", "]", ")", "\n", "loss2_test", ".", "append", "(", "loss", "[", "2", "]", ")", "\n", "loss3_test", ".", "append", "(", "loss", "[", "3", "]", ")", "\n", "ssim_test", ".", "append", "(", "ssim", ")", "\n", "psnr_test", ".", "append", "(", "psnr", ")", "\n", "", "loss_test", "=", "[", "\n", "np", ".", "mean", "(", "loss0_test", ")", ",", "\n", "np", ".", "mean", "(", "loss1_test", ")", ",", "\n", "np", ".", "mean", "(", "loss2_test", ")", ",", "\n", "np", ".", "mean", "(", "loss3_test", ")", "\n", "]", "\n", "logger", ".", "info", "(", "'Test: loss1 %f loss2 %f loss3 %f'", "%", "(", "loss_test", "[", "0", "]", ",", "loss_test", "[", "1", "]", ",", "loss_test", "[", "2", "]", ")", ")", "\n", "sess", ".", "write", "(", "\n", "name", "=", "\"parameter\"", ",", "\n", "loss", "=", "[", "loss_train", ",", "loss_test", "]", ",", "\n", "ssim", "=", "[", "np", ".", "mean", "(", "ssim_train", ")", ",", "np", ".", "mean", "(", "ssim_test", ")", "]", ",", "\n", "psnr", "=", "[", "np", ".", "mean", "(", "psnr_train", ")", ",", "np", ".", "mean", "(", "psnr_test", ")", "]", ",", "\n", "epoch", "=", "epoch", ")", "\n", "# if np.mean(psnr_test) > psnr_m:", "\n", "#     logger.info('psnr increase from %f to %f now' % (psnr_m, np.mean(psnr_test)))", "\n", "#     psnr_m = np.mean(psnr_test)", "\n", "#     sess.save_checkpoints(\"epoch %d psnr %f \" % (epoch, psnr_m))", "\n", "#     logger.info('save model as epoch %d psnr %f' % (epoch, psnr_m))", "\n", "# else:", "\n", "#     logger.info(\"psnr now is %f, not increase from %f\" % (np.mean(psnr_test), psnr_m))", "\n", "", "psnr_m", "=", "np", ".", "mean", "(", "psnr_test", ")", "\n", "sess", ".", "save_checkpoints", "(", "\"epoch %d psnr %f \"", "%", "(", "epoch", ",", "psnr_m", ")", ")", "\n", "logger", ".", "info", "(", "'save model as epoch %d psnr %f'", "%", "(", "epoch", ",", "psnr_m", ")", ")", "\n", "sess", ".", "now_epoch", "+=", "1", "\n", "# sess.sche.step(epoch=epoch)", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.SSIM.__init__": [[40, 46], ["super().__init__", "cal_ssim.create_window"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.SSIM.__init__", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.create_window"], ["    ", "def", "__init__", "(", "self", ",", "window_size", "=", "11", ",", "size_average", "=", "True", ")", ":", "\n", "        ", "super", "(", "SSIM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "size_average", "=", "size_average", "\n", "self", ".", "channel", "=", "3", "\n", "self", ".", "window", "=", "create_window", "(", "window_size", ",", "self", ".", "channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.SSIM.forward": [[47, 64], ["img1.size", "cal_ssim._ssim", "cal_ssim.create_window", "window.cuda.cuda.type_as", "cal_ssim.SSIM.window.data.type", "img1.data.type", "window.cuda.cuda.cuda", "img1.get_device"], "methods", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim._ssim", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.create_window"], ["", "def", "forward", "(", "self", ",", "img1", ",", "img2", ")", ":", "\n", "        ", "(", "_", ",", "channel", ",", "_", ",", "_", ")", "=", "img1", ".", "size", "(", ")", "\n", "\n", "if", "channel", "==", "self", ".", "channel", "and", "self", ".", "window", ".", "data", ".", "type", "(", ")", "==", "img1", ".", "data", ".", "type", "(", ")", ":", "\n", "            ", "window", "=", "self", ".", "window", "\n", "", "else", ":", "\n", "            ", "window", "=", "create_window", "(", "self", ".", "window_size", ",", "channel", ")", "\n", "\n", "if", "img1", ".", "is_cuda", ":", "\n", "                ", "window", "=", "window", ".", "cuda", "(", "img1", ".", "get_device", "(", ")", ")", "\n", "", "window", "=", "window", ".", "type_as", "(", "img1", ")", "\n", "\n", "self", ".", "window", "=", "window", "\n", "self", ".", "channel", "=", "channel", "\n", "\n", "\n", "", "return", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "self", ".", "window_size", ",", "channel", ",", "self", ".", "size_average", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.gaussian": [[7, 10], ["torch.Tensor", "torch.Tensor", "torch.Tensor.sum", "math.exp", "range", "float"], "function", ["None"], ["def", "gaussian", "(", "window_size", ",", "sigma", ")", ":", "\n", "    ", "gauss", "=", "torch", ".", "Tensor", "(", "[", "exp", "(", "-", "(", "x", "-", "window_size", "//", "2", ")", "**", "2", "/", "float", "(", "2", "*", "sigma", "**", "2", ")", ")", "for", "x", "in", "range", "(", "window_size", ")", "]", ")", "\n", "return", "gauss", "/", "gauss", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.create_window": [[11, 16], ["gaussian().unsqueeze", "gaussian().unsqueeze.mm().float().unsqueeze().unsqueeze", "torch.autograd.Variable", "_1D_window.mm().float().unsqueeze().unsqueeze.expand().contiguous", "cal_ssim.gaussian", "gaussian().unsqueeze.mm().float().unsqueeze", "_1D_window.mm().float().unsqueeze().unsqueeze.expand", "gaussian().unsqueeze.mm().float", "gaussian().unsqueeze.mm", "gaussian().unsqueeze.t"], "function", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.gaussian"], ["", "def", "create_window", "(", "window_size", ",", "channel", ")", ":", "\n", "    ", "_1D_window", "=", "gaussian", "(", "window_size", ",", "1.5", ")", ".", "unsqueeze", "(", "1", ")", "\n", "_2D_window", "=", "_1D_window", ".", "mm", "(", "_1D_window", ".", "t", "(", ")", ")", ".", "float", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "window", "=", "Variable", "(", "_2D_window", ".", "expand", "(", "channel", ",", "1", ",", "window_size", ",", "window_size", ")", ".", "contiguous", "(", ")", ")", "\n", "return", "window", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim._ssim": [[17, 38], ["torch.conv2d", "torch.conv2d", "F.conv2d.pow", "F.conv2d.pow", "torch.conv2d", "torch.conv2d", "torch.conv2d", "ssim_map.mean", "ssim_map.mean().mean().mean", "ssim_map.mean().mean", "ssim_map.mean"], "function", ["None"], ["", "def", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "window_size", ",", "channel", ",", "size_average", "=", "True", ")", ":", "\n", "    ", "mu1", "=", "F", ".", "conv2d", "(", "img1", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "\n", "mu2", "=", "F", ".", "conv2d", "(", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "\n", "\n", "mu1_sq", "=", "mu1", ".", "pow", "(", "2", ")", "\n", "mu2_sq", "=", "mu2", ".", "pow", "(", "2", ")", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "\n", "sigma1_sq", "=", "F", ".", "conv2d", "(", "img1", "*", "img1", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu1_sq", "\n", "sigma2_sq", "=", "F", ".", "conv2d", "(", "img2", "*", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu2_sq", "\n", "sigma12", "=", "F", ".", "conv2d", "(", "img1", "*", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu1_mu2", "\n", "\n", "C1", "=", "0.01", "**", "2", "\n", "C2", "=", "0.03", "**", "2", "\n", "\n", "ssim_map", "=", "(", "(", "2", "*", "mu1_mu2", "+", "C1", ")", "*", "(", "2", "*", "sigma12", "+", "C2", ")", ")", "/", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "C1", ")", "*", "(", "sigma1_sq", "+", "sigma2_sq", "+", "C2", ")", ")", "\n", "\n", "if", "size_average", ":", "\n", "        ", "return", "ssim_map", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "ssim_map", ".", "mean", "(", "1", ")", ".", "mean", "(", "1", ")", ".", "mean", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.ssim": [[65, 74], ["img1.size", "cal_ssim.create_window", "window.cuda.type_as", "cal_ssim._ssim", "window.cuda.cuda", "img1.get_device"], "function", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim.create_window", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.cal_ssim._ssim"], ["", "", "def", "ssim", "(", "img1", ",", "img2", ",", "window_size", "=", "11", ",", "size_average", "=", "True", ")", ":", "\n", "    ", "(", "_", ",", "channel", ",", "_", ",", "_", ")", "=", "img1", ".", "size", "(", ")", "\n", "window", "=", "create_window", "(", "window_size", ",", "channel", ")", "\n", "\n", "if", "img1", ".", "is_cuda", ":", "\n", "        ", "window", "=", "window", ".", "cuda", "(", "img1", ".", "get_device", "(", ")", ")", "\n", "", "window", "=", "window", ".", "type_as", "(", "img1", ")", "\n", "\n", "return", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "window_size", ",", "channel", ",", "size_average", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test.cal_psnr": [[30, 35], ["numpy.mean", "math.log10"], "function", ["None"], ["def", "cal_psnr", "(", "img1", ",", "img2", ")", ":", "\n", "   ", "mse", "=", "np", ".", "mean", "(", "(", "img1", "/", "1.0", "-", "img2", "/", "1.0", ")", "**", "2", ")", "\n", "if", "mse", "<", "1.0e-10", ":", "\n", "      ", "return", "100", "\n", "", "return", "10", "*", "math", ".", "log10", "(", "1.0", "**", "2", "/", "mse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test.get_image": [[37, 41], ["numpy.clip().astype", "numpy.clip"], "function", ["None"], ["", "def", "get_image", "(", "image", ")", ":", "\n", "    ", "image", "=", "image", "*", "[", "255", "]", "\n", "image", "=", "np", ".", "clip", "(", "image", ",", "0", ",", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test.load_checkpoints": [[43, 52], ["torch.load", "print", "print"], "function", ["None"], ["", "def", "load_checkpoints", "(", "dir", ")", ":", "\n", "    ", "ckp_path", "=", "dir", "\n", "try", ":", "\n", "        ", "obj", "=", "torch", ".", "load", "(", "ckp_path", ")", "\n", "print", "(", "'Load checkpoint %s'", "%", "ckp_path", ")", "\n", "return", "obj", "\n", "", "except", "FileNotFoundError", ":", "\n", "        ", "print", "(", "'No checkpoint %s!!'", "%", "ckp_path", ")", "\n", "return", "\n", "# self.net.load_state_dict(obj['net'])", "\n"]], "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test.run_test": [[58, 169], ["torch.nn.MSELoss().cuda", "data_test.load_checkpoints", "parameterNet_mlp().cuda.load_state_dict", "list", "os.path.join", "os.path.join", "train.ensure_dir", "open", "open.write", "open.close", "cal_ssim.SSIM", "int", "int", "Net.parameterNet_linear().cuda", "Net.parameterNet_mlp().cuda", "pathlib.Path().glob", "skimage.util.random_noise().astype", "numpy.zeros", "numpy.zeros", "range", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.transpose", "torch.from_numpy().type().cuda", "torch.from_numpy().type().cuda", "torch.from_numpy().type().cuda", "torch.from_numpy().type().cuda", "parameterNet_mlp().cuda.", "MSELoss().cuda.item", "MSELoss().cuda.item", "MSELoss().cuda.item", "image_o.cpu().detach().numpy.cpu().detach().numpy", "get_image.cpu().detach().numpy", "get_image.cpu().detach().numpy", "data_test.cal_psnr", "data_test.cal_psnr", "psnr_o_all.append", "psnr_all.append", "loss1_all.append", "loss2_all.append", "loss3_all.append", "open.write", "numpy.transpose", "data_test.get_image", "train.ensure_dir", "numpy.transpose", "data_test.get_image", "cv2.imwrite", "cv2.imwrite", "print", "torch.nn.MSELoss", "len", "str().split", "range", "str", "len", "Net.parameterNet_linear", "Net.parameterNet_mlp", "pathlib.Path", "skimage.util.random_noise", "len", "numpy.zeros", "range", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "MSELoss().cuda.", "MSELoss().cuda.", "MSELoss().cuda.", "image_o.cpu().detach().numpy.cpu().detach", "get_image.cpu().detach", "get_image.cpu().detach", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "len", "len", "str", "cv2.imread", "scipy.ndimage.median_filter", "str", "range", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "image_o.cpu().detach().numpy.cpu", "get_image.cpu", "get_image.cpu", "cv2.bilateralFilter", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test.load_checkpoints", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.write", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test.cal_psnr", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test.cal_psnr", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.Session.write", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test.get_image", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.train_RGF.ensure_dir", "home.repos.pwc.inspect_result.dengsgithub_composition-learning.None.data_test.get_image"], ["", "", "def", "run_test", "(", ")", ":", "\n", "\n", "    ", "ssim", "=", "SSIM", "(", ")", ".", "cuda", "\n", "crit", "=", "MSELoss", "(", ")", ".", "cuda", "(", ")", "\n", "k_number", "=", "1", "\n", "\n", "if", "args", ".", "If_sp", ":", "\n", "        ", "para", "=", "args", ".", "specified_para", "\n", "base_number", "=", "int", "(", "len", "(", "para", ")", ")", "\n", "", "else", ":", "\n", "        ", "sigma_c", "=", "args", ".", "sigma_c", "\n", "sigma_s", "=", "args", ".", "sigma_s", "\n", "size", "=", "args", ".", "size", "\n", "para", "=", "[", "sigma_c", ",", "sigma_s", ",", "size", "]", "\n", "base_number", "=", "int", "(", "len", "(", "sigma_c", ")", "*", "len", "(", "sigma_s", ")", "*", "len", "(", "size", ")", ")", "\n", "\n", "", "if", "args", ".", "Net", "==", "\"parameterNet_linear\"", ":", "\n", "        ", "net", "=", "parameterNet_linear", "(", "in_channel", "=", "base_number", "*", "3", ",", "out_channel", "=", "3", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "        ", "net", "=", "parameterNet_mlp", "(", "in_channel", "=", "base_number", "*", "3", ",", "out_channel", "=", "3", ")", ".", "cuda", "(", ")", "\n", "\n", "", "obj", "=", "load_checkpoints", "(", "modelPath", ")", "\n", "net", ".", "load_state_dict", "(", "obj", "[", "'net'", "]", ")", "\n", "\n", "image_files", "=", "list", "(", "Path", "(", "input_dir", ")", ".", "glob", "(", "\"*.*\"", ")", ")", "\n", "outout_dir", "=", "os", ".", "path", ".", "join", "(", "\"./result\"", ",", "args", ".", "sessname", "+", "phase", ")", "\n", "ensure_dir", "(", "outout_dir", ")", "\n", "\n", "psnr_o_all", "=", "[", "]", "\n", "psnr_all", "=", "[", "]", "\n", "loss1_all", "=", "[", "]", "\n", "loss2_all", "=", "[", "]", "\n", "loss3_all", "=", "[", "]", "\n", "f", "=", "open", "(", "outout_dir", "+", "\"/psnr.txt\"", ",", "'a'", ")", "\n", "for", "image_file", "in", "image_files", ":", "\n", "        ", "image_name", "=", "str", "(", "image_file", ")", ".", "split", "(", "\"\\\\\"", ")", "[", "-", "1", "]", "\n", "image_o", "=", "(", "cv2", ".", "imread", "(", "str", "(", "image_file", ")", ")", "/", "255.0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# image_n = (gaussian_noise(image_o, mean=0, var=args.noise_var)).astype(np.float32)", "\n", "# k = np.random.randint(low=1, high=7)", "\n", "# k = k / 10.0", "\n", "image_n", "=", "(", "random_noise", "(", "image_o", ",", "mode", "=", "'s&p'", ",", "amount", "=", "k", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "h", ",", "w", ",", "c", "=", "image_o", ".", "shape", "\n", "bilater_out", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", "*", "base_number", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "N", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", "*", "base_number", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "for", "i", "in", "range", "(", "base_number", ")", ":", "\n", "            ", "N", "[", ":", ",", ":", ",", "i", "*", "3", ":", "i", "*", "3", "+", "3", "]", "=", "image_n", "\n", "", "if", "args", ".", "If_sp", ":", "\n", "            ", "for", "b_sample", "in", "range", "(", "len", "(", "para", ")", ")", ":", "\n", "                ", "img", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "c", ")", ")", "\n", "k1", ",", "k2", "=", "para", "[", "b_sample", "]", "\n", "for", "i", "in", "range", "(", "c", ")", ":", "\n", "                    ", "img", "[", ":", ",", ":", ",", "i", "]", "=", "median_filter", "(", "image_n", "[", ":", ",", ":", ",", "i", "]", ",", "(", "k1", ",", "k2", ")", ")", "\n", "", "bilater_out", "[", ":", ",", ":", ",", "c", "*", "b_sample", ":", "c", "*", "b_sample", "+", "3", "]", "=", "img", "\n", "", "", "else", ":", "\n", "            ", "b_sample", "=", "0", "\n", "for", "gama_c", "in", "para", "[", "0", "]", ":", "\n", "                ", "for", "gama_s", "in", "para", "[", "1", "]", ":", "\n", "                    ", "for", "size", "in", "para", "[", "2", "]", ":", "\n", "                        ", "img", "=", "image_n", "\n", "for", "times", "in", "range", "(", "k_number", ")", ":", "\n", "                            ", "img", "=", "cv2", ".", "bilateralFilter", "(", "img", ",", "size", ",", "gama_c", ",", "gama_s", ")", "\n", "", "bilater_out", "[", ":", ",", ":", ",", "c", "*", "b_sample", ":", "c", "*", "b_sample", "+", "3", "]", "=", "img", "\n", "b_sample", "+=", "1", "\n", "\n", "", "", "", "", "RES", "=", "N", "-", "bilater_out", "\n", "image_o", "=", "np", ".", "transpose", "(", "image_o", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "bilater_out", "=", "np", ".", "transpose", "(", "bilater_out", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "RES", "=", "np", ".", "transpose", "(", "RES", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "image_n", "=", "np", ".", "transpose", "(", "image_n", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "bilater_out", "=", "torch", ".", "from_numpy", "(", "np", ".", "expand_dims", "(", "bilater_out", ",", "axis", "=", "0", ")", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "image_n", "=", "torch", ".", "from_numpy", "(", "np", ".", "expand_dims", "(", "image_n", ",", "axis", "=", "0", ")", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "image_o", "=", "torch", ".", "from_numpy", "(", "np", ".", "expand_dims", "(", "image_o", ",", "axis", "=", "0", ")", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "RES", "=", "torch", ".", "from_numpy", "(", "np", ".", "expand_dims", "(", "RES", ",", "axis", "=", "0", ")", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "\n", "residual", ",", "background", ",", "result", "=", "net", "(", "image_n", ",", "bilater_out", ",", "RES", ")", "\n", "loss1", "=", "crit", "(", "residual", ",", "image_n", "-", "image_o", ")", ".", "item", "(", ")", "\n", "loss2", "=", "crit", "(", "background", ",", "image_o", ")", ".", "item", "(", ")", "\n", "loss3", "=", "crit", "(", "result", ",", "image_o", ")", ".", "item", "(", ")", "\n", "\n", "image_o", "=", "image_o", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "image_n", "=", "image_n", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "result", "=", "result", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "psnr_o", "=", "cal_psnr", "(", "image_o", ",", "image_n", ")", "\n", "psnr", "=", "cal_psnr", "(", "image_o", ",", "result", ")", "\n", "\n", "psnr_o_all", ".", "append", "(", "psnr_o", ")", "\n", "psnr_all", ".", "append", "(", "psnr", ")", "\n", "loss1_all", ".", "append", "(", "loss1", ")", "\n", "loss2_all", ".", "append", "(", "loss2", ")", "\n", "loss3_all", ".", "append", "(", "loss3", ")", "\n", "\n", "f", ".", "write", "(", "\"Test image %s psnr_original: %f, psnr: %f, loss1: %f loss2: %f loss3: %f\\n\"", "%", "\n", "(", "image_name", ",", "psnr_o", ",", "psnr", ",", "loss1", ",", "loss2", ",", "loss3", ")", ")", "\n", "\n", "result", "=", "np", ".", "transpose", "(", "result", "[", "0", "]", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "result", "=", "get_image", "(", "result", ")", "\n", "\n", "####save noise image###", "\n", "path_noise", "=", "'./noise_image_'", "+", "str", "(", "args", ".", "noise_var", ")", "\n", "ensure_dir", "(", "path_noise", ")", "\n", "image_n", "=", "np", ".", "transpose", "(", "image_n", "[", "0", "]", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "image_n", "=", "get_image", "(", "image_n", ")", "\n", "cv2", ".", "imwrite", "(", "path_noise", "+", "\"/%s\"", "%", "image_name", ",", "image_n", ")", "\n", "###############", "\n", "\n", "cv2", ".", "imwrite", "(", "outout_dir", "+", "\"/%s\"", "%", "image_name", ",", "result", ")", "\n", "\n", "print", "(", "\"Process %s\"", "%", "image_name", ")", "\n", "", "f", ".", "write", "(", "\"\u5e73\u5747\u4e3a %f ,loss1: %f, loss2: %f, loss3: %f\"", "%", "(", "\n", "np", ".", "mean", "(", "psnr_all", ")", ",", "np", ".", "mean", "(", "loss1_all", ")", ",", "np", ".", "mean", "(", "loss2_all", ")", ",", "np", ".", "mean", "(", "loss3_all", ")", ")", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]]}