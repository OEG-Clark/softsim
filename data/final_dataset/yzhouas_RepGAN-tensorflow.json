{"home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.MNIST.RepGAN_alterTrain_st1_sigmoid_uniform_normal.RepGAN.__init__": [[84, 223], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.encoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.decoder", "tensorflow.Bernoulli", "tensorflow.Bernoulli", "tensorflow.Bernoulli", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.decoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.decoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.encoder", "tensorflow.MultivariateNormalDiag", "tensorflow.MultivariateNormalDiag", "tensorflow.MultivariateNormalDiag", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.D2d", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.D2d", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.control_dependencies", "tensorflow.control_dependencies", "tensorflow.control_dependencies", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.RepGAN.clip_discriminator.append", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.RepGAN.xhat_flat_distribution.log_prob", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.RepGAN.Q_cont_distribution.log_prob", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.log", "tensorflow.log", "tensorflow.log"], "methods", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.D2d", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.D2d"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "### AAE ###", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'encoder'", ")", ":", "\n", "            ", "self", ".", "x", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "28", ",", "28", ",", "1", ")", ")", "\n", "self", ".", "latent_cat", ",", "self", ".", "latent_cont_mu", ",", "self", ".", "latent_cont_sigma", ",", "self", ".", "latent_noise", "=", "encoder", "(", "self", ".", "x", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'decoder'", ")", ":", "\n", "            ", "self", ".", "latent_cont_sample", "=", "self", ".", "latent_cont_mu", "+", "tf", ".", "multiply", "(", "self", ".", "latent_cont_sigma", ",", "tf", ".", "random_normal", "(", "[", "1", "]", ")", ")", "\n", "self", ".", "decoder_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "latent_cat", ",", "self", ".", "latent_cont_sample", ",", "self", ".", "latent_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "self", ".", "xhat_flat_distribution", "=", "distributions", ".", "Bernoulli", "(", "probs", "=", "tf", ".", "clip_by_value", "(", "self", ".", "decoder_output", ",", "1e-5", ",", "1", "-", "1e-5", ")", ")", "\n", "self", ".", "expected_log_likelihood", "=", "tf", ".", "reduce_sum", "(", "self", ".", "xhat_flat_distribution", ".", "log_prob", "(", "self", ".", "x", ")", ",", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'decoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "sample_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "sample_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "sample_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "self", ".", "sample_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "sample_cat", ",", "self", ".", "sample_cont", ",", "self", ".", "sample_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_training", "=", "False", ")", "\n", "", "self", ".", "real_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "real_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "real_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'Discri_cat'", ")", ":", "\n", "            ", "self", ".", "real_cat_prob", "=", "Discriminator", "(", "self", ".", "real_cat", ",", "\n", "params", ".", "dim_DS_cat_hiddn1", ",", "params", ".", "dim_DS_cat_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cat'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_cat_prob", "=", "Discriminator", "(", "self", ".", "latent_cat", ",", "\n", "params", ".", "dim_DS_cat_hiddn1", ",", "params", ".", "dim_DS_cat_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cont'", ")", ":", "\n", "            ", "self", ".", "real_cont_prob", "=", "Discriminator", "(", "self", ".", "real_cont", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cont'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_cont_prob", "=", "Discriminator", "(", "self", ".", "latent_cont_sample", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_noise'", ")", ":", "\n", "            ", "self", ".", "real_noise_prob", "=", "Discriminator", "(", "self", ".", "real_noise", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_noise'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_noise_prob", "=", "Discriminator", "(", "self", ".", "latent_noise", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "### infoGAN ###", "\n", "# The generator/discriminator training part of infoGAN", "\n", "", "self", ".", "infoGAN_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "infoGAN_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "infoGAN_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", ")", "\n", "self", ".", "real_data", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "28", ",", "28", ",", "1", ")", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'decoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "decoderGene_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "infoGAN_cat", ",", "self", ".", "infoGAN_cont", ",", "self", ".", "infoGAN_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "# Use same encoder (variable share) to model Q()", "\n", "", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "Q_cat", ",", "self", ".", "Q_cont_mu", ",", "self", ".", "Q_cont_sigma", ",", "_", "=", "encoder", "(", "self", ".", "decoderGene_output", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "self", ".", "Q_cont_distribution", "=", "distributions", ".", "MultivariateNormalDiag", "(", "loc", "=", "self", ".", "Q_cont_mu", ",", "scale_diag", "=", "self", ".", "Q_cont_sigma", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'D2d'", ")", ":", "\n", "            ", "self", ".", "decoderGene_data_prob", "=", "D2d", "(", "self", ".", "decoderGene_output", ",", "params", ".", "BatchNormDecay", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'D2d'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "real_data_prob", "=", "D2d", "(", "self", ".", "real_data", ",", "params", ".", "BatchNormDecay", ")", "\n", "\n", "# Loss functions", "\n", "# 1. reconstruction loss", "\n", "", "self", ".", "loss_recon", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "expected_log_likelihood", ")", "\n", "# 2. mutual information loss", "\n", "self", ".", "loss_Q_cat", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "log", "(", "self", ".", "Q_cat", "+", "1e-8", ")", "*", "self", ".", "infoGAN_cat", ",", "1", ")", ")", "\n", "self", ".", "loss_Q_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "Q_cont_distribution", ".", "log_prob", "(", "self", ".", "infoGAN_cont", ")", ")", "\n", "self", ".", "loss_Q", "=", "self", ".", "loss_Q_cat", "+", "self", ".", "loss_Q_cont", "\n", "# 3. adversarial loss", "\n", "self", ".", "loss_Discri_cat", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_cat_prob", "-", "self", ".", "fake_cat_prob", ")", "\n", "self", ".", "loss_Gene_cat", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_cat_prob", ")", "\n", "self", ".", "loss_Discri_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_cont_prob", "-", "self", ".", "fake_cont_prob", ")", "\n", "self", ".", "loss_Gene_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_cont_prob", ")", "\n", "self", ".", "loss_Discri_noise", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_noise_prob", "-", "self", ".", "fake_noise_prob", ")", "\n", "self", ".", "loss_Gene_noise", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_noise_prob", ")", "\n", "self", ".", "loss_Discri", "=", "self", ".", "loss_Discri_cat", "+", "self", ".", "loss_Discri_cont", "+", "self", ".", "loss_Discri_noise", "\n", "self", ".", "loss_Gene", "=", "self", ".", "loss_Gene_cat", "+", "self", ".", "loss_Gene_cont", "+", "self", ".", "loss_Gene_noise", "\n", "\n", "self", ".", "loss_Discri_decoder", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "log", "(", "self", ".", "real_data_prob", "+", "1e-8", ")", "+", "tf", ".", "log", "(", "1", "-", "self", ".", "decoderGene_data_prob", "+", "1e-8", ")", ")", "\n", "self", ".", "loss_Gene_decoder", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "log", "(", "self", ".", "decoderGene_data_prob", "+", "1e-8", ")", ")", "\n", "# Variable list", "\n", "self", ".", "varlist_E", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'encoder/'", ")", "]", "\n", "self", ".", "varlist_D", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'decoder/'", ")", "]", "\n", "self", ".", "varlist_Q", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'encoder/'", ")", "]", "\n", "self", ".", "varlist_Discri_cat", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_cat/'", ")", "]", "\n", "self", ".", "varlist_Discri_cont", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_cont/'", ")", "]", "\n", "self", ".", "varlist_Discri_noise", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_noise/'", ")", "]", "\n", "self", ".", "varlist_Discri_decoder", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'D2d/'", ")", "]", "\n", "\n", "self", ".", "varlist_ED", "=", "self", ".", "varlist_E", "+", "self", ".", "varlist_D", "\n", "self", ".", "varlist_Discri", "=", "self", ".", "varlist_Discri_cat", "+", "self", ".", "varlist_Discri_cont", "+", "self", ".", "varlist_Discri_noise", "\n", "# Optimizer - with dependency on 'update_ops' for tf.summary", "\n", "update_ops", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "update_ops", ")", ":", "\n", "### AAE ###", "\n", "            ", "self", ".", "optimizer_ED", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_recon", ",", "\n", "params", ".", "optimizer_recon", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_ED", ")", "\n", "self", ".", "optimizer_Discri", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Discri", ",", "\n", "params", ".", "optimizer_adv_discriminator", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Discri", ")", "\n", "self", ".", "optimizer_Gene", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Gene", ",", "\n", "params", ".", "optimizer_adv_generator", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_E", ")", "\n", "### infoGAN ###", "\n", "self", ".", "optimizer_Q_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Q", ",", "\n", "params", ".", "optimizer_Q", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Q", "+", "self", ".", "varlist_D", ")", "\n", "self", ".", "optimizer_Discri_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Discri_decoder", ",", "\n", "params", ".", "optimizer_adv_discriminator_infoGAN", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Discri_decoder", ")", "\n", "self", ".", "optimizer_Gene_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Gene_decoder", ",", "\n", "params", ".", "optimizer_adv_generator_infoGAN", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_D", ")", "\n", "# Clip the Discriminator parameters - WGAN", "\n", "", "self", ".", "clip_discriminator", "=", "[", "]", "\n", "for", "currVars", "in", "self", ".", "varlist_Discri", ":", "\n", "            ", "self", ".", "clip_discriminator", ".", "append", "(", "tf", ".", "assign", "(", "currVars", ",", "tf", ".", "clip_by_value", "(", "currVars", ",", "-", "params", ".", "c", ",", "params", ".", "c", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.MNIST.RepGAN_alterTrain_st1_sigmoid_uniform_normal.trainParameter.__init__": [[342, 374], ["tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", ":", "\n", "        ", "self", ".", "batch_size", "=", "128", "\n", "self", ".", "dim_x", "=", "784", "\n", "self", ".", "dim_cat", "=", "10", "\n", "self", ".", "dim_cont", "=", "2", "\n", "self", ".", "dim_noise", "=", "20", "\n", "# Hidden dimension", "\n", "self", ".", "dim_DS_cat_hiddn1", "=", "3000", "# Discriminator - categorical", "\n", "self", ".", "dim_DS_cat_hiddn2", "=", "3000", "\n", "self", ".", "dim_DS_cont_hiddn1", "=", "3000", "# Discriminator - continuous", "\n", "self", ".", "dim_DS_cont_hiddn2", "=", "3000", "\n", "# Other", "\n", "self", ".", "num_steps", "=", "80000", "\n", "self", ".", "showStep", "=", "500", "\n", "self", ".", "saveStep", "=", "2000", "\n", "self", ".", "BatchNormDecay", "=", "0.95", "\n", "self", ".", "num_critis", "=", "5", "\n", "self", ".", "c", "=", "0.01", "\n", "# Optimizer", "\n", "self", ".", "LR_recon", "=", "LR_recon", "\n", "self", ".", "LR_adv", "=", "LR_adv", "\n", "self", ".", "LR_adv_infoGAN", "=", "LR_adv_infoGAN", "\n", "\n", "self", ".", "optimizer_recon", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_adv_discriminator", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_adv", ")", "\n", "self", ".", "optimizer_adv_generator", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_recon", ")", "\n", "\n", "self", ".", "optimizer_Q", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_adv_infoGAN", ")", "\n", "self", ".", "optimizer_adv_generator_infoGAN", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_adv_discriminator_infoGAN", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_adv_infoGAN", ")", "\n", "# Ancestrol sampling (test the reconstruction ability of decoder)", "\n", "self", ".", "Nsample", "=", "10", "# number of batch in model.sample_output", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.MNIST.RepGAN_alterTrain_st1_sigmoid_uniform_normal.lrelu": [[11, 13], ["tensorflow.maximum"], "function", ["None"], ["def", "lrelu", "(", "x", ",", "alpha", "=", "0.1", ")", ":", "\n", "    ", "return", "tf", ".", "maximum", "(", "x", ",", "alpha", "*", "x", ")", "\n", "", "def", "encoder", "(", "x", ",", "dim_categorical", ",", "dim_continuous", ",", "dim_noise", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.MNIST.RepGAN_alterTrain_st1_sigmoid_uniform_normal.encoder": [[13, 29], ["tensorflow.arg_scope", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.lrelu", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.lrelu", "tensorflow.flatten", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.lrelu", "tensorflow.fully_connected", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.lrelu", "tensorflow.exp", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.lrelu", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "encoder", "(", "x", ",", "dim_categorical", ",", "dim_continuous", ",", "dim_noise", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "x", ",", "num_outputs", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "# AAE paper use 20% dropout on this layer", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "flatten", "(", "net", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "1024", ")", ")", "\n", "\n", "latent_cat", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "net_cont", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "2", "*", "dim_continuous", ")", ")", "# AAE paper use BN ONLY on all layers of encoder.", "\n", "mu", "=", "net_cont", "[", ":", ",", ":", "dim_continuous", "]", "\n", "sigma", "=", "tf", ".", "exp", "(", "net_cont", "[", ":", ",", "dim_continuous", ":", "]", ")", "\n", "noise", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "dim_noise", ")", ")", "\n", "", "return", "latent_cat", ",", "mu", ",", "sigma", ",", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.MNIST.RepGAN_alterTrain_st1_sigmoid_uniform_normal.decoder": [[30, 42], ["tensorflow.arg_scope", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.reshape", "tensorflow.conv2d_transpose", "tensorflow.conv2d_transpose"], "function", ["None"], ["", "def", "decoder", "(", "latent", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d", "]", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "# BN crucial for infoGAN here, otherwise no work", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", "\n", ")", ":", "\n", "        ", "net", "=", "slim", ".", "fully_connected", "(", "latent", ",", "1024", ")", "\n", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "7", "*", "7", "*", "128", ")", "\n", "net", "=", "tf", ".", "reshape", "(", "net", ",", "shape", "=", "[", "-", "1", ",", "7", ",", "7", ",", "128", "]", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", "\n", "xhat", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ",", "normalizer_fn", "=", "None", ")", "\n", "", "return", "xhat", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.MNIST.RepGAN_alterTrain_st1_sigmoid_uniform_normal.Discriminator": [[43, 56], ["tensorflow.arg_scope", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.lrelu", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.lrelu", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "Discriminator", "(", "latent_in", ",", "dim_DS_hiddn1", ",", "dim_DS_hiddn2", ",", "BatchNormDecay", ",", "flag_raw", "=", "False", ")", ":", "\n", "# For latent variables", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "#normalizer_fn=slim.batch_norm,", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "latent_in", ",", "dim_DS_hiddn1", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "dim_DS_hiddn2", ")", ")", "\n", "if", "flag_raw", ":", "\n", "            ", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "None", ")", "\n", "", "else", ":", "\n", "            ", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ")", "\n", "", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.MNIST.RepGAN_alterTrain_st1_sigmoid_uniform_normal.D2d": [[57, 69], ["tensorflow.arg_scope", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.lrelu", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.lrelu", "tensorflow.flatten", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.lrelu", "tensorflow.fully_connected", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "D2d", "(", "xhat", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "# For decoder output", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "xhat", ",", "num_outputs", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "normalizer_fn", "=", "None", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "flatten", "(", "net", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "1024", ")", ")", "\n", "prob_realFake", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ",", "normalizer_fn", "=", "None", ")", "\n", "", "return", "prob_realFake", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.MNIST.RepGAN_alterTrain_st1_sigmoid_uniform_normal.Sample_categorical": [[70, 75], ["numpy.zeros", "numpy.random.randint", "numpy.arange"], "function", ["None"], ["", "def", "Sample_categorical", "(", "size_batch", ",", "size_categorical", ")", ":", "\n", "    ", "real_cat", "=", "np", ".", "zeros", "(", "(", "size_batch", ",", "size_categorical", ")", ")", "\n", "rand_idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "size_categorical", ",", "size_batch", ")", "\n", "real_cat", "[", "np", ".", "arange", "(", "size_batch", ")", ",", "rand_idx", "]", "=", "1.0", "\n", "return", "real_cat", "\n", "", "def", "Sample_continuous", "(", "size_batch", ",", "size_continuous", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.MNIST.RepGAN_alterTrain_st1_sigmoid_uniform_normal.Sample_continuous": [[75, 78], ["numpy.random.uniform"], "function", ["None"], ["", "def", "Sample_continuous", "(", "size_batch", ",", "size_continuous", ")", ":", "\n", "    ", "real_cont", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1.0", ",", "high", "=", "1.0000001", ",", "size", "=", "(", "size_batch", ",", "size_continuous", ")", ")", "\n", "return", "real_cont", "\n", "", "def", "Sample_noise", "(", "size_batch", ",", "size_noise", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.MNIST.RepGAN_alterTrain_st1_sigmoid_uniform_normal.Sample_noise": [[78, 81], ["numpy.random.normal"], "function", ["None"], ["", "def", "Sample_noise", "(", "size_batch", ",", "size_noise", ")", ":", "\n", "    ", "noise", "=", "np", ".", "random", ".", "normal", "(", "loc", "=", "0.0", ",", "scale", "=", "1.0", ",", "size", "=", "(", "size_batch", ",", "size_noise", ")", ")", "\n", "return", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.MNIST.RepGAN_alterTrain_st1_sigmoid_uniform_normal.train": [[226, 340], ["os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "open", "myfile.write", "tensorflow.Session", "tensorflow.global_variables_initializer().run", "tensorflow.train.Saver", "numpy.zeros", "range", "numpy.zeros", "range", "data.train.next_batch", "currBatch.reshape.reshape", "numpy.random.permutation", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Sample_categorical", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Sample_continuous", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Sample_noise", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Sample_categorical", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Sample_continuous", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Sample_noise", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Sample_noise", "range", "sess.run", "range", "sess.run", "numpy.zeros", "tensorflow.global_variables_initializer", "sess.run", "sess.run", "sess.run", "sess.run", "sess.run", "tf.train.Saver.save", "numpy.ones", "range", "numpy.empty", "range", "numpy.swapaxes().reshape", "matplotlib.imsave", "sess.run", "numpy.empty", "range", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "matplotlib.imsave", "range", "scipy.ndimage.interpolation.zoom", "sess.run", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Sample_continuous", "numpy.tile", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.Sample_noise", "sess.run", "decoderSample_small[].reshape", "scipy.ndimage.interpolation.zoom", "numpy.swapaxes", "currBatch[].reshape", "decoder_output[].reshape", "str", "str"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_categorical", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_categorical", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise"], ["def", "train", "(", "model", ",", "data", ",", "params", ",", "log_path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", "+", "'reconstruction/'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", "+", "'reconstruction/'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", "+", "'generation/'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", "+", "'generation/'", ")", "\n", "", "with", "open", "(", "log_path", "+", "'log.txt'", ",", "\"a\"", ")", "as", "myfile", ":", "\n", "        ", "currHeader", "=", "'Model = RepGAN'", "+", "'\\n'", "+", "'dim_cat = '", "+", "'{:d}'", ".", "format", "(", "params", ".", "dim_cat", ")", "+", "'\\n'", "+", "'dim_cont = '", "+", "'{:d}'", ".", "format", "(", "params", ".", "dim_cont", ")", "+", "'\\n'", "+", "'dim_noise = '", "+", "'{:d}'", ".", "format", "(", "params", ".", "dim_noise", ")", "+", "'\\n'", "+", "'noise_tunneling = True'", "+", "'\\n'", "+", "'WGAN_on_decoder = False'", "+", "'\\n'", "+", "'dim_Discriminator_cat = '", "+", "'{:d}'", ".", "format", "(", "params", ".", "dim_DS_cat_hiddn1", ")", "+", "'/'", "+", "'{:d}'", ".", "format", "(", "params", ".", "dim_DS_cat_hiddn2", ")", "+", "'\\n'", "+", "'dim_Discriminator_cont = '", "+", "'{:d}'", ".", "format", "(", "params", ".", "dim_DS_cont_hiddn1", ")", "+", "'/'", "+", "'{:d}'", ".", "format", "(", "params", ".", "dim_DS_cont_hiddn2", ")", "+", "'\\n'", "+", "'LR_recon = '", "+", "'{:.0e}'", ".", "format", "(", "params", ".", "LR_recon", ")", "+", "'\\n'", "+", "'LR_adv   = '", "+", "'{:.0e}'", ".", "format", "(", "params", ".", "LR_adv", ")", "+", "'\\n'", "+", "'LR_adv_infoGAN = '", "+", "'{:.0e}'", ".", "format", "(", "params", ".", "LR_adv_infoGAN", ")", "+", "'\\n'", "+", "'BatchNormDecay = '", "+", "'{:.2f}'", ".", "format", "(", "params", ".", "BatchNormDecay", ")", "+", "'\\n'", "+", "'num_critis = '", "+", "'{:d}'", ".", "format", "(", "params", ".", "num_critis", ")", "+", "'\\n'", "+", "'clip_c = '", "+", "'{:.3f}'", ".", "format", "(", "params", ".", "c", ")", "+", "'\\n'", "+", "'######  End of Header \\####################################################\\n'", "\n", "myfile", ".", "write", "(", "currHeader", ")", "\n", "", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "eye_cat", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cat", ")", ")", "\n", "for", "idx", "in", "range", "(", "params", ".", "Nsample", ")", ":", "\n", "            ", "eye_cat", "[", "idx", ",", "idx", "]", "=", "1.0", "\n", "", "zero_cont", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cont", ")", ")", "\n", "# alterTrain", "\n", "for", "step", "in", "range", "(", "params", ".", "num_steps", ")", ":", "\n", "            ", "currBatch", ",", "currLabel", "=", "data", ".", "train", ".", "next_batch", "(", "params", ".", "batch_size", ")", "\n", "currBatch", "=", "currBatch", ".", "reshape", "(", "[", "-", "1", ",", "28", ",", "28", ",", "1", "]", ")", "\n", "currBatch_perm", "=", "np", ".", "random", ".", "permutation", "(", "currBatch", ")", "\n", "real_cat", "=", "Sample_categorical", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", "\n", "real_cont", "=", "Sample_continuous", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", "\n", "real_noise", "=", "Sample_noise", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", "\n", "infoGAN_cat", "=", "Sample_categorical", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", "\n", "infoGAN_cont", "=", "Sample_continuous", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", "\n", "infoGAN_noise", "=", "Sample_noise", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", "\n", "test_noise", "=", "Sample_noise", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", "\n", "feedDict", "=", "{", "model", ".", "x", ":", "currBatch", ",", "\n", "model", ".", "infoGAN_cat", ":", "infoGAN_cat", ",", "\n", "model", ".", "infoGAN_cont", ":", "infoGAN_cont", ",", "\n", "model", ".", "infoGAN_noise", ":", "infoGAN_noise", ",", "\n", "model", ".", "real_cat", ":", "real_cat", ",", "\n", "model", ".", "real_cont", ":", "real_cont", ",", "\n", "model", ".", "real_noise", ":", "real_noise", ",", "\n", "model", ".", "real_data", ":", "currBatch_perm", ",", "\n", "}", "\n", "# 1. infoGAN - emphasized", "\n", "for", "_", "in", "range", "(", "params", ".", "num_critis", ")", ":", "\n", "                ", "sess", ".", "run", "(", "model", ".", "optimizer_Discri_infoGAN", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "optimizer_Gene_infoGAN", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "optimizer_Q_infoGAN", ",", "feedDict", ")", "\n", "# 2. AAE", "\n", "", "sess", ".", "run", "(", "model", ".", "optimizer_ED", ",", "feedDict", ")", "\n", "for", "_", "in", "range", "(", "params", ".", "num_critis", ")", ":", "\n", "                ", "sess", ".", "run", "(", "model", ".", "optimizer_Discri", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "clip_discriminator", ",", "feedDict", ")", "\n", "", "sess", ".", "run", "(", "model", ".", "optimizer_Gene", ",", "feedDict", ")", "\n", "# Save model      ", "\n", "if", "step", "%", "params", ".", "saveStep", "==", "0", ":", "\n", "                ", "saver", ".", "save", "(", "sess", ",", "log_path", "+", "'ckpt/model.ckpt'", ")", "\n", "# Generation image", "\n", "", "zero_noise", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "if", "step", "%", "params", ".", "showStep", "==", "0", ":", "\n", "                ", "Ntrial", "=", "10", "\n", "decoderSample_small", "=", "np", ".", "ones", "(", "(", "Ntrial", ",", "params", ".", "Nsample", ",", "28", ",", "28", ",", "1", ")", ",", "dtype", "=", "float", ")", "\n", "for", "idx", "in", "range", "(", "Ntrial", ")", ":", "\n", "                    ", "if", "idx", "==", "0", ":", "\n", "                        ", "feedDict_rand", "=", "{", "\n", "model", ".", "sample_cat", ":", "eye_cat", ",", "\n", "model", ".", "sample_cont", ":", "zero_cont", ",", "\n", "model", ".", "sample_noise", ":", "zero_noise", ",", "\n", "}", "\n", "decoderSample_small", "[", "idx", ",", ":", ",", ":", ",", ":", "]", "=", "sess", ".", "run", "(", "model", ".", "sample_output", ",", "feedDict_rand", ")", "\n", "", "else", ":", "\n", "                        ", "sample_cont_rand", "=", "Sample_continuous", "(", "1", ",", "params", ".", "dim_cont", ")", "\n", "sample_cont_rand", "=", "np", ".", "tile", "(", "sample_cont_rand", ",", "(", "params", ".", "Nsample", ",", "1", ")", ")", "\n", "test_noise", "=", "Sample_noise", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", "\n", "feedDict_rand", "=", "{", "\n", "model", ".", "sample_cat", ":", "eye_cat", ",", "\n", "model", ".", "sample_cont", ":", "sample_cont_rand", ",", "\n", "model", ".", "sample_noise", ":", "test_noise", ",", "\n", "}", "\n", "decoderSample_small", "[", "idx", ",", ":", ",", ":", ",", ":", "]", "=", "sess", ".", "run", "(", "model", ".", "sample_output", ",", "feedDict_rand", ")", "\n", "\n", "", "", "d", "=", "np", ".", "empty", "(", "(", "Ntrial", ",", "params", ".", "Nsample", ",", "28", "*", "3", ",", "28", "*", "3", ")", ",", "dtype", "=", "float", ")", "# reconstructed from ancestrol sampling", "\n", "for", "idx_t", "in", "range", "(", "Ntrial", ")", ":", "# for each trial", "\n", "                    ", "for", "idx_cat", "in", "range", "(", "params", ".", "Nsample", ")", ":", "# for each category", "\n", "                        ", "temp_d", "=", "decoderSample_small", "[", "idx_t", ",", "idx_cat", "]", ".", "reshape", "(", "[", "28", ",", "28", "]", ")", "\n", "d", "[", "idx_t", ",", "idx_cat", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_d", ",", "3", ")", "\n", "", "", "outplot", "=", "np", ".", "swapaxes", "(", "d", ",", "1", ",", "2", ")", ".", "reshape", "(", "Ntrial", "*", "28", "*", "3", ",", "params", ".", "Nsample", "*", "28", "*", "3", ")", "\n", "plt", ".", "imsave", "(", "log_path", "+", "'generation/'", "+", "str", "(", "step", ")", "+", "'.png'", ",", "outplot", ")", "\n", "# Reconstruction image", "\n", "decoder_output", "=", "sess", ".", "run", "(", "model", ".", "decoder_output", ",", "feedDict", ")", "\n", "sampleIdx", "=", "3", "\n", "\n", "g", "=", "np", ".", "empty", "(", "(", "8", ",", "28", "*", "3", ",", "28", "*", "3", ")", ",", "dtype", "=", "float", ")", "# reconstructed from encoder output", "\n", "for", "idx", "in", "range", "(", "8", ")", ":", "\n", "                    ", "if", "idx", "<", "4", ":", "\n", "                        ", "temp_g", "=", "currBatch", "[", "idx", "]", ".", "reshape", "(", "[", "28", ",", "28", "]", ")", "\n", "", "else", ":", "\n", "                        ", "temp_g", "=", "decoder_output", "[", "idx", "-", "4", "]", ".", "reshape", "(", "[", "28", ",", "28", "]", ")", "\n", "", "g", "[", "idx", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_g", ",", "3", ")", "\n", "", "outplot1", "=", "np", ".", "concatenate", "(", "(", "g", "[", "0", "]", ",", "g", "[", "1", "]", ",", "g", "[", "2", "]", ",", "g", "[", "3", "]", ")", ",", "axis", "=", "1", ")", "\n", "outplot2", "=", "np", ".", "concatenate", "(", "(", "g", "[", "4", "]", ",", "g", "[", "5", "]", ",", "g", "[", "6", "]", ",", "g", "[", "7", "]", ")", ",", "axis", "=", "1", ")", "\n", "outplot", "=", "np", ".", "concatenate", "(", "(", "outplot1", ",", "outplot2", ")", ",", "axis", "=", "0", ")", "\n", "plt", ".", "imsave", "(", "log_path", "+", "'reconstruction/'", "+", "str", "(", "step", ")", "+", "'.png'", ",", "outplot", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.MNIST.RepGAN_alterTrain_st1_sigmoid_uniform_normal.main": [[377, 385], ["input_data.read_data_sets", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.trainParameter", "tensorflow.reset_default_graph", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.RepGAN", "RepGAN_alterTrain_st1_sigmoid_uniform_normal.train"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.train"], ["", "", "def", "main", "(", "log_path", ",", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", ":", "\n", "    ", "from", "tensorflow", ".", "examples", ".", "tutorials", ".", "mnist", "import", "input_data", "\n", "mnist", "=", "input_data", ".", "read_data_sets", "(", "'MNIST_data'", ",", "one_hot", "=", "True", ")", "\n", "params", "=", "trainParameter", "(", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", "\n", "# Traininng", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "RepGAN_1", "=", "RepGAN", "(", "params", ")", "\n", "train", "(", "RepGAN_1", ",", "mnist", ",", "params", ",", "log_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.svhn.RepGAN_semiSup_RGB_run8e.RepGAN.__init__": [[102, 310], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.summary.merge_all", "tensorflow.summary.merge_all", "tensorflow.summary.merge_all", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_semiSup_RGB_run8e.encoder", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_semiSup_RGB_run8e.encoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_semiSup_RGB_run8e.encoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e.decoder", "tensorflow.Bernoulli", "tensorflow.Bernoulli", "tensorflow.Bernoulli", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_semiSup_RGB_run8e.decoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e.decoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e.encoder", "tensorflow.MultivariateNormalDiag", "tensorflow.MultivariateNormalDiag", "tensorflow.MultivariateNormalDiag", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e.D2d", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e.D2d", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "RepGAN_semiSup_RGB_run8e.variable_summaries", "tensorflow.control_dependencies", "tensorflow.control_dependencies", "tensorflow.control_dependencies", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "RepGAN_semiSup_RGB_run8e.RepGAN.clip_discriminator.append", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "RepGAN_semiSup_RGB_run8e.RepGAN.xhat_flat_distribution.log_prob", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.square", "tensorflow.square", "tensorflow.square", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "RepGAN_semiSup_RGB_run8e.RepGAN.Q_cont_distribution.log_prob", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log"], "methods", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.D2d", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.D2d", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.variable_summaries"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "### AAE ###", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'encoder'", ")", ":", "\n", "            ", "self", ".", "x", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "self", ".", "currTrainLabel", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "10", ")", ")", "\n", "self", ".", "latent_cat", ",", "self", ".", "latent_cont_mu", ",", "self", ".", "latent_cont_sigma", ",", "self", ".", "latent_noise", "=", "encoder", "(", "self", ".", "x", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "\n", "self", ".", "latent_cont_sigma_clip", "=", "tf", ".", "clip_by_value", "(", "self", ".", "latent_cont_sigma", ",", "-", "1.0", ",", "1.0", ")", "\n", "self", ".", "latent_noise_clip", "=", "tf", ".", "clip_by_value", "(", "self", ".", "latent_noise", ",", "-", "1.0", ",", "1.0", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_noise'", ",", "self", ".", "latent_noise", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_noise_clip'", ",", "self", ".", "latent_noise_clip", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_mu'", ",", "self", ".", "latent_cont_mu", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sigma'", ",", "self", ".", "latent_cont_sigma", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sigma_clip'", ",", "self", ".", "latent_cont_sigma_clip", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "x_sup", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "self", ".", "currTrainLabel_sup", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "10", ")", ")", "\n", "self", ".", "latent_cat_sup", ",", "_", ",", "_", ",", "_", "=", "encoder", "(", "self", ".", "x_sup", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "test_data", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "self", ".", "test_cat", ",", "_", ",", "_", ",", "_", "=", "encoder", "(", "self", ".", "test_data", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_training", "=", "False", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'decoder'", ")", ":", "\n", "            ", "self", ".", "latent_cont_sample", "=", "self", ".", "latent_cont_mu", "+", "tf", ".", "multiply", "(", "self", ".", "latent_cont_sigma", ",", "tf", ".", "random_normal", "(", "[", "1", "]", ")", ")", "\n", "self", ".", "decoder_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "latent_cat", ",", "self", ".", "latent_cont_sample", ",", "self", ".", "latent_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "self", ".", "xhat_flat_distribution", "=", "distributions", ".", "Bernoulli", "(", "probs", "=", "tf", ".", "clip_by_value", "(", "self", ".", "decoder_output", ",", "1e-5", ",", "1", "-", "1e-5", ")", ")", "\n", "self", ".", "expected_log_likelihood", "=", "tf", ".", "reduce_sum", "(", "self", ".", "xhat_flat_distribution", ".", "log_prob", "(", "self", ".", "x", ")", ",", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "\n", "self", ".", "latent_cont_sample_clip", "=", "tf", ".", "clip_by_value", "(", "self", ".", "latent_cont_sample", ",", "-", "2.0", ",", "2.0", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sample'", ",", "self", ".", "latent_cont_sample", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sample_clip'", ",", "self", ".", "latent_cont_sample_clip", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'decoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "sample_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "sample_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "sample_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "self", ".", "sample_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "sample_cat", ",", "self", ".", "sample_cont", ",", "self", ".", "sample_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_training", "=", "False", ")", "\n", "", "self", ".", "real_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "real_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "real_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'Discri_cat'", ")", ":", "\n", "            ", "self", ".", "real_cat_prob", "=", "Discriminator", "(", "self", ".", "real_cat", ",", "\n", "params", ".", "dim_DS_cat_hiddn1", ",", "params", ".", "dim_DS_cat_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cat'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_cat_prob", "=", "Discriminator", "(", "self", ".", "latent_cat", ",", "\n", "params", ".", "dim_DS_cat_hiddn1", ",", "params", ".", "dim_DS_cat_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cont'", ")", ":", "\n", "            ", "self", ".", "real_cont_prob", "=", "Discriminator", "(", "self", ".", "real_cont", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cont'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_cont_prob", "=", "Discriminator", "(", "self", ".", "latent_cont_sample", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_noise'", ")", ":", "\n", "            ", "self", ".", "real_noise_prob", "=", "Discriminator", "(", "self", ".", "real_noise", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_noise'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_noise_prob", "=", "Discriminator", "(", "self", ".", "latent_noise", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "### infoGAN ###", "\n", "# The generator/discriminator training part of infoGAN", "\n", "", "self", ".", "infoGAN_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "infoGAN_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "infoGAN_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", ")", "\n", "self", ".", "real_data", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'decoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "decoderGene_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "infoGAN_cat", ",", "self", ".", "infoGAN_cont", ",", "self", ".", "infoGAN_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "# Use same encoder (variable share) to model Q()", "\n", "", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "Q_cat", ",", "self", ".", "Q_cont_mu", ",", "self", ".", "Q_cont_sigma", ",", "_", "=", "encoder", "(", "self", ".", "decoderGene_output", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "self", ".", "Q_cont_distribution", "=", "distributions", ".", "MultivariateNormalDiag", "(", "loc", "=", "self", ".", "Q_cont_mu", ",", "scale_diag", "=", "self", ".", "Q_cont_sigma", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'debug_sampleCont'", ",", "self", ".", "infoGAN_cont", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'debug_sampleNoise'", ",", "self", ".", "infoGAN_noise", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'D2d'", ")", ":", "\n", "            ", "self", ".", "decoderGene_data_prob", "=", "D2d", "(", "self", ".", "decoderGene_output", ",", "params", ".", "BatchNormDecay", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'D2d'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "real_data_prob", "=", "D2d", "(", "self", ".", "real_data", ",", "params", ".", "BatchNormDecay", ")", "\n", "\n", "# Loss functions", "\n", "# 1. reconstruction loss", "\n", "#self.loss_recon = -tf.reduce_mean(self.expected_log_likelihood)", "\n", "", "self", ".", "loss_recon", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "self", ".", "x", "-", "self", ".", "decoder_output", ")", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_recon'", ",", "self", ".", "loss_recon", ")", "\n", "# 0. classification loss ", "\n", "self", ".", "loss_classify_sup", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "log", "(", "self", ".", "latent_cat_sup", "+", "1e-8", ")", "*", "self", ".", "currTrainLabel_sup", ",", "1", ")", ")", "\n", "\n", "self", ".", "debug_loss_classify_unsup", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "log", "(", "self", ".", "latent_cat", "+", "1e-8", ")", "*", "self", ".", "currTrainLabel", ",", "1", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_classify_sup'", ",", "self", ".", "loss_classify_sup", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_classify_unsup'", ",", "self", ".", "debug_loss_classify_unsup", ")", "\n", "# 2. mutual information loss", "\n", "self", ".", "loss_Q_cat", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "log", "(", "self", ".", "Q_cat", "+", "1e-8", ")", "*", "self", ".", "infoGAN_cat", ",", "1", ")", ")", "\n", "self", ".", "loss_Q_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "Q_cont_distribution", ".", "log_prob", "(", "self", ".", "infoGAN_cont", ")", ")", "\n", "self", ".", "loss_Q", "=", "self", ".", "loss_Q_cat", "+", "self", ".", "loss_Q_cont", "\n", "\n", "self", ".", "debug_Q_L2", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "self", ".", "infoGAN_cont", "-", "self", ".", "Q_cont_mu", ")", ",", "axis", "=", "1", ")", ")", "\n", "self", ".", "debug_Q_percnt", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "self", ".", "infoGAN_cont", "-", "self", ".", "Q_cont_mu", ")", ",", "axis", "=", "1", ")", "/", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "self", ".", "infoGAN_cont", ")", ",", "axis", "=", "1", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Q_cat'", ",", "self", ".", "loss_Q_cat", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Q_cont'", ",", "self", ".", "loss_Q_cont", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Q'", ",", "self", ".", "loss_Q", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Q_L2_loss'", ",", "self", ".", "debug_Q_L2", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Q_percnt_loss'", ",", "self", ".", "debug_Q_percnt", ")", "\n", "# 3. adversarial loss", "\n", "self", ".", "loss_Discri_cat", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_cat_prob", "-", "self", ".", "fake_cat_prob", ")", "\n", "self", ".", "loss_Gene_cat", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_cat_prob", ")", "\n", "self", ".", "loss_Discri_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_cont_prob", "-", "self", ".", "fake_cont_prob", ")", "\n", "self", ".", "loss_Gene_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_cont_prob", ")", "\n", "self", ".", "loss_Discri_noise", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_noise_prob", "-", "self", ".", "fake_noise_prob", ")", "\n", "self", ".", "loss_Gene_noise", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_noise_prob", ")", "\n", "self", ".", "loss_Discri", "=", "self", ".", "loss_Discri_cat", "+", "self", ".", "loss_Discri_cont", "+", "self", ".", "loss_Discri_noise", "\n", "self", ".", "loss_Gene", "=", "self", ".", "loss_Gene_cat", "+", "self", ".", "loss_Gene_cont", "+", "self", ".", "loss_Gene_noise", "\n", "\n", "self", ".", "loss_Discri_decoder", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "log", "(", "self", ".", "real_data_prob", "+", "1e-8", ")", "+", "tf", ".", "log", "(", "1", "-", "self", ".", "decoderGene_data_prob", "+", "1e-8", ")", ")", "\n", "self", ".", "loss_Gene_decoder", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "log", "(", "self", ".", "decoderGene_data_prob", "+", "1e-8", ")", ")", "\n", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri_cat'", ",", "self", ".", "loss_Discri_cat", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri_cont'", ",", "self", ".", "loss_Discri_cont", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri_noise'", ",", "self", ".", "loss_Discri_noise", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene_cat'", ",", "self", ".", "loss_Gene_cat", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene_cont'", ",", "self", ".", "loss_Gene_cont", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene_noise'", ",", "self", ".", "loss_Gene_noise", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri'", ",", "self", ".", "loss_Discri", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene'", ",", "self", ".", "loss_Gene", ")", "\n", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_D2d'", ",", "self", ".", "loss_Discri_decoder", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_generator'", ",", "self", ".", "loss_Gene_decoder", ")", "\n", "# Variable list", "\n", "self", ".", "varlist_E", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'encoder/'", ")", "]", "\n", "self", ".", "varlist_D", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'decoder/'", ")", "]", "\n", "self", ".", "varlist_Q", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'encoder/'", ")", "]", "\n", "self", ".", "varlist_Discri_cat", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_cat/'", ")", "]", "\n", "self", ".", "varlist_Discri_cont", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_cont/'", ")", "]", "\n", "self", ".", "varlist_Discri_noise", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_noise/'", ")", "]", "\n", "self", ".", "varlist_Discri_decoder", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'D2d/'", ")", "]", "\n", "\n", "self", ".", "varlist_ED", "=", "self", ".", "varlist_E", "+", "self", ".", "varlist_D", "\n", "self", ".", "varlist_Discri", "=", "self", ".", "varlist_Discri_cat", "+", "self", ".", "varlist_Discri_cont", "+", "self", ".", "varlist_Discri_noise", "\n", "# Summary for model variables", "\n", "for", "var", "in", "self", ".", "varlist_ED", ":", "\n", "            ", "variable_summaries", "(", "var", ")", "\n", "# Optimizer - with dependency on 'update_ops' for tf.summary", "\n", "", "update_ops", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "update_ops", ")", ":", "\n", "### AAE ###", "\n", "            ", "self", ".", "optimizer_ED", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_recon", ",", "\n", "params", ".", "optimizer_recon", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_ED", ")", "\n", "self", ".", "optimizer_Discri", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Discri", ",", "\n", "params", ".", "optimizer_adv_discriminator", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Discri", ")", "\n", "self", ".", "optimizer_Gene", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Gene", ",", "\n", "params", ".", "optimizer_adv_generator", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_E", ")", "\n", "self", ".", "optimizer_classify", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_classify_sup", ",", "\n", "params", ".", "optimizer_supervised", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_E", ")", "\n", "### infoGAN ###", "\n", "self", ".", "optimizer_Q_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Q", ",", "\n", "params", ".", "optimizer_Q", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Q", "+", "self", ".", "varlist_D", ")", "\n", "self", ".", "optimizer_Discri_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Discri_decoder", ",", "\n", "params", ".", "optimizer_adv_discriminator_infoGAN", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Discri_decoder", ")", "\n", "self", ".", "optimizer_Gene_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Gene_decoder", ",", "\n", "params", ".", "optimizer_adv_generator_infoGAN", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_D", ")", "\n", "# Clip the Discriminator parameters - WGAN", "\n", "", "self", ".", "clip_discriminator", "=", "[", "]", "\n", "for", "currVars", "in", "self", ".", "varlist_Discri", ":", "\n", "            ", "self", ".", "clip_discriminator", ".", "append", "(", "tf", ".", "assign", "(", "currVars", ",", "tf", ".", "clip_by_value", "(", "currVars", ",", "-", "params", ".", "c", ",", "params", ".", "c", ")", ")", ")", "\n", "# Merge all summary nodes", "\n", "", "self", ".", "merged", "=", "tf", ".", "summary", ".", "merge_all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.svhn.RepGAN_semiSup_RGB_run8e.trainParameter.__init__": [[500, 533], ["tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", ":", "\n", "        ", "self", ".", "batch_size", "=", "128", "\n", "self", ".", "dim_cat", "=", "10", "\n", "self", ".", "dim_cont", "=", "2", "\n", "self", ".", "dim_noise", "=", "20", "\n", "# Hidden dimension", "\n", "self", ".", "dim_DS_cat_hiddn1", "=", "3000", "# Discriminator - categorical", "\n", "self", ".", "dim_DS_cat_hiddn2", "=", "3000", "\n", "self", ".", "dim_DS_cont_hiddn1", "=", "3000", "# Discriminator - continuous", "\n", "self", ".", "dim_DS_cont_hiddn2", "=", "3000", "\n", "# Other", "\n", "self", ".", "num_steps", "=", "50000", "\n", "self", ".", "showStep", "=", "500", "\n", "self", ".", "saveStep", "=", "500", "\n", "self", ".", "summaryStep", "=", "100", "\n", "self", ".", "BatchNormDecay", "=", "0.95", "\n", "self", ".", "num_critis", "=", "5", "\n", "self", ".", "c", "=", "0.01", "\n", "# Optimizer", "\n", "self", ".", "LR_recon", "=", "LR_recon", "\n", "self", ".", "LR_adv", "=", "LR_adv", "\n", "self", ".", "LR_adv_infoGAN", "=", "LR_adv_infoGAN", "\n", "\n", "self", ".", "optimizer_recon", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_adv_discriminator", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_adv", ")", "\n", "self", ".", "optimizer_adv_generator", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_supervised", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "10", "*", "LR_recon", ")", "\n", "\n", "self", ".", "optimizer_Q", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_adv_infoGAN", ")", "\n", "self", ".", "optimizer_adv_generator_infoGAN", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_adv_discriminator_infoGAN", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_adv_infoGAN", ")", "\n", "# Ancestrol sampling (test the reconstruction ability of decoder)", "\n", "self", ".", "Nsample", "=", "10", "# number of batch in model.sample_output", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.svhn.RepGAN_semiSup_RGB_run8e.variable_summaries": [[12, 22], ["var.name.replace", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.sqrt", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.histogram", "tensorflow.reduce_mean", "tensorflow.reduce_max", "tensorflow.reduce_min", "tensorflow.square"], "function", ["None"], ["def", "variable_summaries", "(", "var", ")", ":", "\n", "    ", "scopeName", "=", "'summary/'", "+", "var", ".", "name", ".", "replace", "(", "':'", ",", "'/'", ")", "\n", "with", "tf", ".", "name_scope", "(", "scopeName", ")", ":", "\n", "        ", "mean", "=", "tf", ".", "reduce_mean", "(", "var", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'mean'", ",", "mean", ")", "\n", "stddev", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "var", "-", "mean", ")", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'stddev'", ",", "stddev", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'max'", ",", "tf", ".", "reduce_max", "(", "var", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'min'", ",", "tf", ".", "reduce_min", "(", "var", ")", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'histogram'", ",", "var", ")", "\n", "", "", "def", "lrelu", "(", "x", ",", "alpha", "=", "0.1", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.svhn.RepGAN_semiSup_RGB_run8e.lrelu": [[22, 24], ["tensorflow.maximum"], "function", ["None"], ["", "", "def", "lrelu", "(", "x", ",", "alpha", "=", "0.1", ")", ":", "\n", "    ", "return", "tf", ".", "maximum", "(", "x", ",", "alpha", "*", "x", ")", "\n", "", "def", "encoder", "(", "x", ",", "dim_categorical", ",", "dim_continuous", ",", "dim_noise", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.svhn.RepGAN_semiSup_RGB_run8e.encoder": [[24, 45], ["tensorflow.arg_scope", "RepGAN_semiSup_RGB_run8e.lrelu", "tensorflow.dropout", "RepGAN_semiSup_RGB_run8e.lrelu", "RepGAN_semiSup_RGB_run8e.lrelu", "tensorflow.flatten", "RepGAN_semiSup_RGB_run8e.lrelu", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.fully_connected", "tensorflow.variable_scope", "tensorflow.fully_connected", "tensorflow.variable_scope", "tensorflow.fully_connected", "tensorflow.variable_scope", "tensorflow.fully_connected", "tensorflow.variable_scope", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "encoder", "(", "x", ",", "dim_categorical", ",", "dim_continuous", ",", "dim_noise", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "x", ",", "num_outputs", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "dropout", "(", "net", ",", "keep_prob", "=", "0.8", ",", "is_training", "=", "flag_training", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "flatten", "(", "net", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "1024", ")", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'FC_cat'", ")", ":", "\n", "            ", "latent_cat", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'FC_mu'", ")", ":", "\n", "            ", "mu", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_continuous", ",", "activation_fn", "=", "None", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'FC_sigma'", ")", ":", "\n", "            ", "sigma", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_continuous", ",", "activation_fn", "=", "tf", ".", "sigmoid", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'FC_noise'", ")", ":", "\n", "            ", "noise", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_noise", ",", "activation_fn", "=", "None", ")", "\n", "", "", "return", "latent_cat", ",", "mu", ",", "sigma", ",", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.svhn.RepGAN_semiSup_RGB_run8e.decoder": [[46, 59], ["tensorflow.arg_scope", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.reshape", "tensorflow.conv2d_transpose", "tensorflow.conv2d_transpose", "tensorflow.conv2d_transpose"], "function", ["None"], ["", "def", "decoder", "(", "latent", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d_transpose", "]", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "# BN crucial for infoGAN here, otherwise no work", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", "\n", ")", ":", "\n", "        ", "net", "=", "slim", ".", "fully_connected", "(", "latent", ",", "1024", ")", "\n", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "4", "*", "4", "*", "256", ")", "\n", "net", "=", "tf", ".", "reshape", "(", "net", ",", "shape", "=", "[", "-", "1", ",", "4", ",", "4", ",", "256", "]", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", "\n", "xhat", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "3", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "activation_fn", "=", "None", ",", "normalizer_fn", "=", "None", ")", "\n", "", "return", "xhat", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.svhn.RepGAN_semiSup_RGB_run8e.Discriminator": [[60, 73], ["tensorflow.arg_scope", "RepGAN_semiSup_RGB_run8e.lrelu", "RepGAN_semiSup_RGB_run8e.lrelu", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "Discriminator", "(", "latent_in", ",", "dim_DS_hiddn1", ",", "dim_DS_hiddn2", ",", "BatchNormDecay", ",", "flag_raw", "=", "False", ")", ":", "\n", "# For latent variables", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "#normalizer_fn=slim.batch_norm,", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "latent_in", ",", "dim_DS_hiddn1", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "dim_DS_hiddn2", ")", ")", "\n", "if", "flag_raw", ":", "\n", "            ", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "None", ")", "\n", "", "else", ":", "\n", "            ", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ")", "\n", "", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.svhn.RepGAN_semiSup_RGB_run8e.D2d": [[74, 86], ["tensorflow.arg_scope", "RepGAN_semiSup_RGB_run8e.lrelu", "RepGAN_semiSup_RGB_run8e.lrelu", "tensorflow.flatten", "RepGAN_semiSup_RGB_run8e.lrelu", "tensorflow.fully_connected", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "D2d", "(", "xhat", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "# For decoder output", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "xhat", ",", "num_outputs", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "normalizer_fn", "=", "None", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "flatten", "(", "net", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "1024", ")", ")", "\n", "prob_realFake", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ",", "normalizer_fn", "=", "None", ")", "\n", "", "return", "prob_realFake", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.svhn.RepGAN_semiSup_RGB_run8e.Sample_categorical": [[87, 92], ["numpy.zeros", "numpy.random.randint", "numpy.arange"], "function", ["None"], ["", "def", "Sample_categorical", "(", "size_batch", ",", "size_categorical", ")", ":", "\n", "    ", "real_cat", "=", "np", ".", "zeros", "(", "(", "size_batch", ",", "size_categorical", ")", ")", "\n", "rand_idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "size_categorical", ",", "size_batch", ")", "\n", "real_cat", "[", "np", ".", "arange", "(", "size_batch", ")", ",", "rand_idx", "]", "=", "1.0", "\n", "return", "real_cat", "\n", "", "def", "Sample_continuous", "(", "size_batch", ",", "size_continuous", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.svhn.RepGAN_semiSup_RGB_run8e.Sample_continuous": [[92, 96], ["numpy.random.normal"], "function", ["None"], ["", "def", "Sample_continuous", "(", "size_batch", ",", "size_continuous", ")", ":", "\n", "#real_cont = np.random.uniform(low=-1.0, high=1.0000001, size=(size_batch, size_continuous))", "\n", "    ", "real_cont", "=", "np", ".", "random", ".", "normal", "(", "loc", "=", "0.0", ",", "scale", "=", "1.0", ",", "size", "=", "(", "size_batch", ",", "size_continuous", ")", ")", "\n", "return", "real_cont", "\n", "", "def", "Sample_noise", "(", "size_batch", ",", "size_noise", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.svhn.RepGAN_semiSup_RGB_run8e.Sample_noise": [[96, 99], ["numpy.random.normal"], "function", ["None"], ["", "def", "Sample_noise", "(", "size_batch", ",", "size_noise", ")", ":", "\n", "    ", "noise", "=", "np", ".", "random", ".", "normal", "(", "loc", "=", "0.0", ",", "scale", "=", "1.0", ",", "size", "=", "(", "size_batch", ",", "size_noise", ")", ")", "\n", "return", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.svhn.RepGAN_semiSup_RGB_run8e.train": [[313, 499], ["os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "open", "numpy.set_printoptions", "numpy.set_printoptions", "myfile.write", "open", "tensorflow.trainable_variables", "myfile.write", "tensorflow.Session", "tensorflow.global_variables_initializer().run", "tensorflow.train.Saver", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "tensorflow.summary.FileWriter", "numpy.floor", "range", "numpy.random.choice", "currBatch.reshape.reshape", "currBatch_sup.reshape.reshape", "numpy.zeros", "numpy.zeros", "numpy.random.permutation", "RepGAN_semiSup_RGB_run8e.Sample_categorical", "RepGAN_semiSup_RGB_run8e.Sample_continuous", "RepGAN_semiSup_RGB_run8e.Sample_noise", "RepGAN_semiSup_RGB_run8e.Sample_categorical", "RepGAN_semiSup_RGB_run8e.Sample_continuous", "RepGAN_semiSup_RGB_run8e.Sample_noise", "RepGAN_semiSup_RGB_run8e.Sample_noise", "range", "sess.run", "sess.run", "sess.run", "range", "sess.run", "numpy.zeros", "str", "tensorflow.global_variables_initializer", "numpy.arange", "numpy.random.shuffle", "sess.run", "sess.run", "sess.run", "sess.run", "sess.run", "tf.summary.FileWriter.add_summary", "int", "range", "numpy.ones", "range", "numpy.empty", "range", "numpy.swapaxes().reshape", "numpy.min", "numpy.max", "matplotlib.imsave", "sess.run", "numpy.empty", "range", "numpy.swapaxes().reshape", "numpy.min", "numpy.max", "matplotlib.imsave", "numpy.set_printoptions", "sess.run", "numpy.max", "str", "numpy.floor", "currtestImg.reshape.reshape", "sess.run", "open", "myfile.write", "tf.train.Saver.save", "range", "scipy.ndimage.interpolation.zoom", "scipy.ndimage.interpolation.zoom", "open", "myfile.write", "str", "numpy.arange", "numpy.arange", "numpy.argmax", "numpy.sum", "sess.run", "RepGAN_semiSup_RGB_run8e.Sample_continuous", "numpy.tile", "RepGAN_semiSup_RGB_run8e.Sample_noise", "sess.run", "scipy.ndimage.interpolation.zoom", "numpy.swapaxes", "numpy.swapaxes", "numpy.min", "str", "str", "str", "str", "str", "str", "numpy.max", "str", "str", "str", "numpy.min", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_categorical", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_categorical", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise"], ["def", "train", "(", "model", ",", "trainImg", ",", "trainImg_sup", ",", "trainLabel", ",", "trainLabel_sup", ",", "testImg", ",", "testLabel", ",", "params", ",", "log_path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", "+", "'reconstruction/'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", "+", "'reconstruction/'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", "+", "'generation/'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", "+", "'generation/'", ")", "\n", "# Data statistics", "\n", "", "with", "open", "(", "log_path", "+", "'data_stat.txt'", ",", "'a'", ")", "as", "myfile", ":", "\n", "        ", "np", ".", "set_printoptions", "(", "precision", "=", "2", ",", "linewidth", "=", "10000", ")", "\n", "np", ".", "set_printoptions", "(", "threshold", "=", "10000", ")", "\n", "tempText", "=", "'min_train = '", "+", "str", "(", "np", ".", "min", "(", "trainImg", ")", ")", "+", "'  max_train = '", "+", "str", "(", "np", ".", "max", "(", "trainImg", ")", ")", "+", "'\\n'", "+", "'min_test = '", "+", "str", "(", "np", ".", "min", "(", "testImg", ")", ")", "+", "'  max_test = '", "+", "str", "(", "np", ".", "max", "(", "testImg", ")", ")", "+", "'\\n'", "\n", "myfile", ".", "write", "(", "tempText", ")", "\n", "# log all trainable variables", "\n", "", "with", "open", "(", "log_path", "+", "'model_variables.txt'", ",", "'a'", ")", "as", "myfile", ":", "\n", "        ", "tempText", "=", "''", "\n", "for", "var", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "            ", "tempText", "=", "tempText", "+", "str", "(", "var", ")", "+", "'\\n'", "\n", "", "myfile", ".", "write", "(", "tempText", ")", "\n", "\n", "", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "eye_cat", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cat", ")", ")", "\n", "for", "idx", "in", "range", "(", "params", ".", "Nsample", ")", ":", "\n", "            ", "eye_cat", "[", "idx", ",", "idx", "]", "=", "1.0", "\n", "", "zero_cont", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cont", ")", ")", "\n", "zero_noise", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "train_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "log_path", "+", "'Summary/train'", ")", "\n", "Nbatch_train", "=", "np", ".", "floor", "(", "trainImg", ".", "shape", "[", "0", "]", "/", "params", ".", "batch_size", ")", "\n", "# alterTrain", "\n", "bestAccuracy", "=", "-", "1.0", "\n", "count_batch", "=", "0", "\n", "preSave_step", "=", "-", "1.0", "\n", "for", "step", "in", "range", "(", "params", ".", "num_steps", ")", ":", "\n", "            ", "if", "count_batch", ">=", "Nbatch_train", ":", "\n", "                ", "count_batch", "=", "0", "\n", "idx", "=", "np", ".", "arange", "(", "trainImg", ".", "shape", "[", "0", "]", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idx", ")", "\n", "trainImg", "=", "trainImg", "[", "idx", "]", "\n", "trainLabel", "=", "trainLabel", "[", "idx", "]", "\n", "# Get current training batch", "\n", "", "currBatch", "=", "trainImg", "[", "count_batch", "*", "params", ".", "batch_size", ":", "(", "count_batch", "+", "1", ")", "*", "params", ".", "batch_size", "]", "\n", "currtrainLabel", "=", "trainLabel", "[", "count_batch", "*", "params", ".", "batch_size", ":", "(", "count_batch", "+", "1", ")", "*", "params", ".", "batch_size", "]", "\n", "# Get current supervised training batch", "\n", "Idxsup", "=", "np", ".", "random", ".", "choice", "(", "trainImg_sup", ".", "shape", "[", "0", "]", ",", "size", "=", "params", ".", "batch_size", ",", "replace", "=", "False", ")", "\n", "currBatch_sup", "=", "trainImg_sup", "[", "Idxsup", "]", "\n", "currtrainLabel_sup", "=", "trainLabel_sup", "[", "Idxsup", "]", "\n", "\n", "count_batch", "=", "count_batch", "+", "1", "\n", "\n", "currBatch", "=", "currBatch", ".", "reshape", "(", "[", "-", "1", ",", "32", ",", "32", ",", "3", "]", ")", "\n", "currBatch_sup", "=", "currBatch_sup", ".", "reshape", "(", "[", "-", "1", ",", "32", ",", "32", ",", "3", "]", ")", "\n", "currtrainLabel_oneHot", "=", "np", ".", "zeros", "(", "(", "currtrainLabel", ".", "shape", "[", "0", "]", ",", "10", ")", ")", "\n", "currtrainLabel_oneHot", "[", "np", ".", "arange", "(", "currtrainLabel", ".", "shape", "[", "0", "]", ")", ",", "currtrainLabel", "-", "1", "]", "=", "1", "\n", "currtrainLabel_sup_oneHot", "=", "np", ".", "zeros", "(", "(", "currtrainLabel_sup", ".", "shape", "[", "0", "]", ",", "10", ")", ")", "\n", "currtrainLabel_sup_oneHot", "[", "np", ".", "arange", "(", "currtrainLabel_sup", ".", "shape", "[", "0", "]", ")", ",", "currtrainLabel_sup", "-", "1", "]", "=", "1", "\n", "currBatch_perm", "=", "np", ".", "random", ".", "permutation", "(", "currBatch", ")", "\n", "real_cat", "=", "Sample_categorical", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", "\n", "real_cont", "=", "Sample_continuous", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", "\n", "real_noise", "=", "Sample_noise", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", "\n", "infoGAN_cat", "=", "Sample_categorical", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", "\n", "infoGAN_cont", "=", "Sample_continuous", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", "\n", "infoGAN_noise", "=", "Sample_noise", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", "\n", "test_noise", "=", "Sample_noise", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", "\n", "feedDict", "=", "{", "model", ".", "x", ":", "currBatch", ",", "\n", "model", ".", "currTrainLabel", ":", "currtrainLabel_oneHot", ",", "\n", "model", ".", "x_sup", ":", "currBatch_sup", ",", "\n", "model", ".", "currTrainLabel_sup", ":", "currtrainLabel_sup_oneHot", ",", "\n", "model", ".", "infoGAN_cat", ":", "infoGAN_cat", ",", "\n", "model", ".", "infoGAN_cont", ":", "infoGAN_cont", ",", "\n", "model", ".", "infoGAN_noise", ":", "infoGAN_noise", ",", "\n", "model", ".", "real_cat", ":", "real_cat", ",", "\n", "model", ".", "real_cont", ":", "real_cont", ",", "\n", "model", ".", "real_noise", ":", "real_noise", ",", "\n", "model", ".", "real_data", ":", "currBatch_perm", ",", "\n", "}", "\n", "# 1. infoGAN - emphasized", "\n", "for", "_", "in", "range", "(", "params", ".", "num_critis", ")", ":", "\n", "                ", "sess", ".", "run", "(", "model", ".", "optimizer_Discri_infoGAN", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "optimizer_Gene_infoGAN", ",", "feedDict", ")", "\n", "", "sess", ".", "run", "(", "model", ".", "optimizer_Q_infoGAN", ",", "feedDict", ")", "\n", "# 2. AAE", "\n", "sess", ".", "run", "(", "model", ".", "optimizer_ED", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "optimizer_classify", ",", "feedDict", ")", "\n", "for", "_", "in", "range", "(", "params", ".", "num_critis", ")", ":", "\n", "                ", "sess", ".", "run", "(", "model", ".", "optimizer_Discri", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "clip_discriminator", ",", "feedDict", ")", "\n", "", "sess", ".", "run", "(", "model", ".", "optimizer_Gene", ",", "feedDict", ")", "\n", "# Summary nodes", "\n", "if", "step", "%", "params", ".", "summaryStep", "==", "0", ":", "\n", "                ", "summary", "=", "sess", ".", "run", "(", "model", ".", "merged", ",", "feedDict", ")", "\n", "train_writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "# Save model & compute accuracy      ", "\n", "", "if", "step", "%", "params", ".", "saveStep", "==", "0", ":", "\n", "# Compute classification accuracy", "\n", "                ", "batch_test", "=", "1000", "\n", "N_testEpoch", "=", "int", "(", "np", ".", "floor", "(", "testImg", ".", "shape", "[", "0", "]", "/", "batch_test", ")", ")", "\n", "total_disagree", "=", "0.0", "\n", "for", "testEpoch", "in", "range", "(", "N_testEpoch", "+", "1", ")", ":", "\n", "                    ", "if", "testEpoch", "==", "N_testEpoch", ":", "\n", "                        ", "currtestImg", "=", "testImg", "[", "testEpoch", "*", "batch_test", ":", "]", "\n", "currtestLabel", "=", "testLabel", "[", "testEpoch", "*", "batch_test", ":", "]", "\n", "", "else", ":", "\n", "                        ", "currtestImg", "=", "testImg", "[", "testEpoch", "*", "batch_test", ":", "(", "1", "+", "testEpoch", ")", "*", "batch_test", "]", "\n", "currtestLabel", "=", "testLabel", "[", "testEpoch", "*", "batch_test", ":", "(", "1", "+", "testEpoch", ")", "*", "batch_test", "]", "\n", "\n", "", "currtestImg", "=", "currtestImg", ".", "reshape", "(", "[", "-", "1", ",", "32", ",", "32", ",", "3", "]", ")", "\n", "feedDict_test", "=", "{", "model", ".", "test_data", ":", "currtestImg", "}", "\n", "latent_cat", "=", "sess", ".", "run", "(", "model", ".", "test_cat", ",", "feedDict_test", ")", "\n", "predLabel", "=", "1", "+", "np", ".", "argmax", "(", "latent_cat", ",", "axis", "=", "1", ")", "\n", "total_disagree", "=", "total_disagree", "+", "np", ".", "sum", "(", "currtestLabel", "!=", "predLabel", ")", "\n", "", "currAccuracy", "=", "1.0", "-", "total_disagree", "/", "testImg", ".", "shape", "[", "0", "]", "\n", "with", "open", "(", "log_path", "+", "'accuracy.txt'", ",", "\"a\"", ")", "as", "myfile", ":", "\n", "                    ", "tempText", "=", "'Step = '", "+", "str", "(", "step", ")", "+", "'  count_batch = '", "+", "str", "(", "count_batch", ")", "+", "'  Accuracy = '", "+", "'{:.2f}'", ".", "format", "(", "currAccuracy", ")", "+", "'\\n'", "\n", "myfile", ".", "write", "(", "tempText", ")", "\n", "", "if", "currAccuracy", ">", "0.5", "and", "(", "currAccuracy", ">", "bestAccuracy", "or", "step", "-", "preSave_step", ">=", "5000", ")", ":", "\n", "                    ", "preSave_step", "=", "step", "\n", "if", "currAccuracy", ">", "bestAccuracy", ":", "\n", "                        ", "bestAccuracy", "=", "currAccuracy", "\n", "", "saver", ".", "save", "(", "sess", ",", "log_path", "+", "'ckpt/model_'", "+", "str", "(", "step", ")", "+", "'.ckpt'", ")", "\n", "# Generation image", "\n", "", "", "zero_noise", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "if", "step", "%", "params", ".", "showStep", "==", "0", ":", "\n", "                ", "Ntrial", "=", "10", "\n", "decoderSample_small", "=", "np", ".", "ones", "(", "(", "Ntrial", ",", "params", ".", "Nsample", ",", "32", ",", "32", ",", "3", ")", ",", "dtype", "=", "float", ")", "\n", "for", "idx", "in", "range", "(", "Ntrial", ")", ":", "\n", "                    ", "if", "idx", "==", "0", ":", "\n", "                        ", "feedDict_rand", "=", "{", "\n", "model", ".", "sample_cat", ":", "eye_cat", ",", "\n", "model", ".", "sample_cont", ":", "zero_cont", ",", "\n", "model", ".", "sample_noise", ":", "zero_noise", ",", "\n", "}", "\n", "decoderSample_small", "[", "idx", ",", ":", ",", ":", ",", ":", "]", "=", "sess", ".", "run", "(", "model", ".", "sample_output", ",", "feedDict_rand", ")", "\n", "", "else", ":", "\n", "                        ", "sample_cont_rand", "=", "Sample_continuous", "(", "1", ",", "params", ".", "dim_cont", ")", "\n", "sample_cont_rand", "=", "np", ".", "tile", "(", "sample_cont_rand", ",", "(", "params", ".", "Nsample", ",", "1", ")", ")", "\n", "test_noise", "=", "Sample_noise", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", "\n", "feedDict_rand", "=", "{", "\n", "model", ".", "sample_cat", ":", "eye_cat", ",", "\n", "model", ".", "sample_cont", ":", "sample_cont_rand", ",", "\n", "model", ".", "sample_noise", ":", "test_noise", ",", "\n", "}", "\n", "decoderSample_small", "[", "idx", ",", ":", ",", ":", ",", ":", "]", "=", "sess", ".", "run", "(", "model", ".", "sample_output", ",", "feedDict_rand", ")", "\n", "\n", "", "", "d", "=", "np", ".", "empty", "(", "(", "Ntrial", ",", "params", ".", "Nsample", ",", "32", "*", "3", ",", "32", "*", "3", ",", "3", ")", ",", "dtype", "=", "float", ")", "# reconstructed from ancestrol sampling", "\n", "for", "idx_t", "in", "range", "(", "Ntrial", ")", ":", "# for each trial", "\n", "                    ", "for", "idx_cat", "in", "range", "(", "params", ".", "Nsample", ")", ":", "# for each category", "\n", "                        ", "temp_d", "=", "decoderSample_small", "[", "idx_t", ",", "idx_cat", "]", "\n", "d", "[", "idx_t", ",", "idx_cat", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_d", ",", "(", "3", ",", "3", ",", "1", ")", ")", "\n", "", "", "outplot", "=", "np", ".", "swapaxes", "(", "d", ",", "1", ",", "2", ")", ".", "reshape", "(", "Ntrial", "*", "32", "*", "3", ",", "params", ".", "Nsample", "*", "32", "*", "3", ",", "3", ")", "\n", "outplot", "-=", "np", ".", "min", "(", "outplot", ")", "\n", "outplot", "/=", "np", ".", "max", "(", "outplot", ")", "\n", "plt", ".", "imsave", "(", "log_path", "+", "'generation/'", "+", "str", "(", "step", ")", "+", "'.png'", ",", "outplot", ")", "\n", "# Reconstruction image", "\n", "decoder_output", "=", "sess", ".", "run", "(", "model", ".", "decoder_output", ",", "feedDict", ")", "\n", "sampleIdx", "=", "3", "\n", "\n", "g", "=", "np", ".", "empty", "(", "(", "2", ",", "5", ",", "32", "*", "3", ",", "32", "*", "3", ",", "3", ")", ",", "dtype", "=", "float", ")", "# reconstructed from encoder output", "\n", "for", "idx", "in", "range", "(", "5", ")", ":", "\n", "                    ", "temp_g_real", "=", "currBatch", "[", "idx", "]", "\n", "temp_g_recon", "=", "decoder_output", "[", "idx", "]", "\n", "g", "[", "0", ",", "idx", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_g_real", ",", "(", "3", ",", "3", ",", "1", ")", ")", "\n", "g", "[", "1", ",", "idx", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_g_recon", ",", "(", "3", ",", "3", ",", "1", ")", ")", "\n", "", "outplot", "=", "np", ".", "swapaxes", "(", "g", ",", "1", ",", "2", ")", ".", "reshape", "(", "2", "*", "32", "*", "3", ",", "5", "*", "32", "*", "3", ",", "3", ")", "\n", "outplot", "-=", "np", ".", "min", "(", "outplot", ")", "\n", "outplot", "/=", "np", ".", "max", "(", "outplot", ")", "\n", "plt", ".", "imsave", "(", "log_path", "+", "'reconstruction/'", "+", "str", "(", "step", ")", "+", "'.png'", ",", "outplot", ")", "\n", "### DEBUG ##############################", "\n", "np", ".", "set_printoptions", "(", "precision", "=", "2", ")", "\n", "recon_cat", ",", "recon_mu", ",", "recon_sgm", ",", "recon_noise", "=", "sess", ".", "run", "(", "[", "model", ".", "latent_cat", ",", "\n", "model", ".", "latent_cont_mu", ",", "\n", "model", ".", "latent_cont_sigma", ",", "\n", "model", ".", "latent_noise", "]", ",", "\n", "feedDict", ")", "\n", "with", "open", "(", "log_path", "+", "'latent_var.txt'", ",", "\"a\"", ")", "as", "myfile", ":", "\n", "                    ", "tempText", "=", "'Step = '", "+", "str", "(", "step", ")", "+", "'\\n'", "+", "'real_label = '", "+", "str", "(", "currtrainLabel", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'recon_cat = \\n'", "+", "str", "(", "recon_cat", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'recon_mu = \\n'", "+", "str", "(", "recon_mu", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'recon_sgm = \\n'", "+", "str", "(", "recon_sgm", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'recon_noise = \\n'", "+", "str", "(", "recon_noise", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'#################################################\\n'", "\n", "myfile", ".", "write", "(", "tempText", ")", "\n", "", "", "", "", "", "class", "trainParameter", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.svhn.RepGAN_semiSup_RGB_run8e.main": [[536, 581], ["scipy.loadmat", "scipy.loadmat", "numpy.squeeze", "numpy.squeeze", "numpy.moveaxis", "numpy.moveaxis", "int", "numpy.zeros", "numpy.zeros", "numpy.zeros", "tensorflow.reset_default_graph", "RepGAN_semiSup_RGB_run8e.trainParameter", "RepGAN_semiSup_RGB_run8e.RepGAN", "RepGAN_semiSup_RGB_run8e.train", "numpy.floor", "numpy.sum", "numpy.random.randint", "int", "int"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.train"], ["", "", "def", "main", "(", "log_path", ",", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", ":", "\n", "# Read data", "\n", "    ", "train_data", "=", "sio", ".", "loadmat", "(", "'./svhn_data/train_32x32.mat'", ")", "\n", "test_data", "=", "sio", ".", "loadmat", "(", "'./svhn_data/test_32x32.mat'", ")", "\n", "trainImg", "=", "train_data", "[", "'X'", "]", "\n", "trainLabel", "=", "train_data", "[", "'y'", "]", "\n", "testImg", "=", "test_data", "[", "'X'", "]", "\n", "testLabel", "=", "test_data", "[", "'y'", "]", "\n", "\n", "trainLabel", "=", "np", ".", "squeeze", "(", "trainLabel", ")", "\n", "testLabel", "=", "np", ".", "squeeze", "(", "testLabel", ")", "\n", "trainImg", "=", "np", ".", "moveaxis", "(", "trainImg", ",", "-", "1", ",", "0", ")", "\n", "testImg", "=", "np", ".", "moveaxis", "(", "testImg", ",", "-", "1", ",", "0", ")", "\n", "# Preprocessing", "\n", "trainImg", "=", "trainImg", "/", "255.0", "\n", "testImg", "=", "testImg", "/", "255.0", "\n", "# Pick the supervised samples", "\n", "N_supervised", "=", "1000", "\n", "N_sup_perclass", "=", "int", "(", "np", ".", "floor", "(", "N_supervised", "/", "10", ")", ")", "# currently assume 10 classes", "\n", "trainImg_sup", "=", "np", ".", "zeros", "(", "(", "N_sup_perclass", "*", "10", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "trainLabel_sup", "=", "np", ".", "zeros", "(", "(", "N_sup_perclass", "*", "10", ",", ")", ",", "dtype", "=", "np", ".", "int", ")", "\n", "counter", "=", "np", ".", "zeros", "(", "(", "10", ",", ")", ")", "\n", "while", "np", ".", "sum", "(", "counter", ")", "<", "N_sup_perclass", "*", "10", ":", "\n", "        ", "currIdx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "trainLabel", ".", "shape", "[", "0", "]", ")", "\n", "currTrainLabel", "=", "trainLabel", "[", "currIdx", "]", "-", "1", "# from 0 to 9", "\n", "if", "counter", "[", "currTrainLabel", "]", "<", "N_sup_perclass", ":", "\n", "            ", "tempIdx", "=", "N_sup_perclass", "*", "currTrainLabel", "+", "counter", "[", "currTrainLabel", "]", "\n", "trainImg_sup", "[", "int", "(", "tempIdx", ")", "]", "=", "trainImg", "[", "currIdx", "]", "\n", "trainLabel_sup", "[", "int", "(", "tempIdx", ")", "]", "=", "trainLabel", "[", "currIdx", "]", "# from 1 to 10", "\n", "counter", "[", "currTrainLabel", "]", "+=", "1", "\n", "\n", "\n", "", "", "'''\n    trainImg = trainImg.reshape(-1,32*32)\n    trainImg = skp.scale(trainImg)\n    trainImg = trainImg.reshape(-1,32,32)\n    testImg = testImg.reshape(-1,32*32)\n    testImg = skp.scale(testImg)\n    testImg = testImg.reshape(-1,32,32)\n    '''", "\n", "# Traininng", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "params", "=", "trainParameter", "(", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", "\n", "RepGAN_1", "=", "RepGAN", "(", "params", ")", "\n", "train", "(", "RepGAN_1", ",", "trainImg", ",", "trainImg_sup", ",", "trainLabel", ",", "trainLabel_sup", ",", "testImg", ",", "testLabel", ",", "params", ",", "log_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8.RepGAN.__init__": [[102, 310], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.summary.merge_all", "tensorflow.summary.merge_all", "tensorflow.summary.merge_all", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_semiSup_RGB_run8.encoder", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_semiSup_RGB_run8.encoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_semiSup_RGB_run8.encoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8.decoder", "tensorflow.Bernoulli", "tensorflow.Bernoulli", "tensorflow.Bernoulli", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_semiSup_RGB_run8.decoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8.decoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8.encoder", "tensorflow.MultivariateNormalDiag", "tensorflow.MultivariateNormalDiag", "tensorflow.MultivariateNormalDiag", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8.D2d", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8.D2d", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "RepGAN_semiSup_RGB_run8.variable_summaries", "tensorflow.control_dependencies", "tensorflow.control_dependencies", "tensorflow.control_dependencies", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "RepGAN_semiSup_RGB_run8.RepGAN.clip_discriminator.append", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "RepGAN_semiSup_RGB_run8.RepGAN.xhat_flat_distribution.log_prob", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.square", "tensorflow.square", "tensorflow.square", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "RepGAN_semiSup_RGB_run8.RepGAN.Q_cont_distribution.log_prob", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log"], "methods", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.D2d", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.D2d", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.variable_summaries"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "### AAE ###", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'encoder'", ")", ":", "\n", "            ", "self", ".", "x", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "self", ".", "currTrainLabel", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "10", ")", ")", "\n", "self", ".", "latent_cat", ",", "self", ".", "latent_cont_mu", ",", "self", ".", "latent_cont_sigma", ",", "self", ".", "latent_noise", "=", "encoder", "(", "self", ".", "x", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "\n", "self", ".", "latent_cont_sigma_clip", "=", "tf", ".", "clip_by_value", "(", "self", ".", "latent_cont_sigma", ",", "-", "1.0", ",", "1.0", ")", "\n", "self", ".", "latent_noise_clip", "=", "tf", ".", "clip_by_value", "(", "self", ".", "latent_noise", ",", "-", "1.0", ",", "1.0", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_noise'", ",", "self", ".", "latent_noise", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_noise_clip'", ",", "self", ".", "latent_noise_clip", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_mu'", ",", "self", ".", "latent_cont_mu", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sigma'", ",", "self", ".", "latent_cont_sigma", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sigma_clip'", ",", "self", ".", "latent_cont_sigma_clip", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "x_sup", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "self", ".", "currTrainLabel_sup", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "10", ")", ")", "\n", "self", ".", "latent_cat_sup", ",", "_", ",", "_", ",", "_", "=", "encoder", "(", "self", ".", "x_sup", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "test_data", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "self", ".", "test_cat", ",", "_", ",", "_", ",", "_", "=", "encoder", "(", "self", ".", "test_data", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_training", "=", "False", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'decoder'", ")", ":", "\n", "            ", "self", ".", "latent_cont_sample", "=", "self", ".", "latent_cont_mu", "+", "tf", ".", "multiply", "(", "self", ".", "latent_cont_sigma", ",", "tf", ".", "random_normal", "(", "[", "1", "]", ")", ")", "\n", "self", ".", "decoder_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "latent_cat", ",", "self", ".", "latent_cont_sample", ",", "self", ".", "latent_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "self", ".", "xhat_flat_distribution", "=", "distributions", ".", "Bernoulli", "(", "probs", "=", "tf", ".", "clip_by_value", "(", "self", ".", "decoder_output", ",", "1e-5", ",", "1", "-", "1e-5", ")", ")", "\n", "self", ".", "expected_log_likelihood", "=", "tf", ".", "reduce_sum", "(", "self", ".", "xhat_flat_distribution", ".", "log_prob", "(", "self", ".", "x", ")", ",", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "\n", "self", ".", "latent_cont_sample_clip", "=", "tf", ".", "clip_by_value", "(", "self", ".", "latent_cont_sample", ",", "-", "2.0", ",", "2.0", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sample'", ",", "self", ".", "latent_cont_sample", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sample_clip'", ",", "self", ".", "latent_cont_sample_clip", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'decoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "sample_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "sample_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "sample_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "self", ".", "sample_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "sample_cat", ",", "self", ".", "sample_cont", ",", "self", ".", "sample_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_training", "=", "False", ")", "\n", "", "self", ".", "real_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "real_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "real_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'Discri_cat'", ")", ":", "\n", "            ", "self", ".", "real_cat_prob", "=", "Discriminator", "(", "self", ".", "real_cat", ",", "\n", "params", ".", "dim_DS_cat_hiddn1", ",", "params", ".", "dim_DS_cat_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cat'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_cat_prob", "=", "Discriminator", "(", "self", ".", "latent_cat", ",", "\n", "params", ".", "dim_DS_cat_hiddn1", ",", "params", ".", "dim_DS_cat_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cont'", ")", ":", "\n", "            ", "self", ".", "real_cont_prob", "=", "Discriminator", "(", "self", ".", "real_cont", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cont'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_cont_prob", "=", "Discriminator", "(", "self", ".", "latent_cont_sample", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_noise'", ")", ":", "\n", "            ", "self", ".", "real_noise_prob", "=", "Discriminator", "(", "self", ".", "real_noise", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_noise'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_noise_prob", "=", "Discriminator", "(", "self", ".", "latent_noise", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "### infoGAN ###", "\n", "# The generator/discriminator training part of infoGAN", "\n", "", "self", ".", "infoGAN_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "infoGAN_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "infoGAN_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", ")", "\n", "self", ".", "real_data", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'decoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "decoderGene_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "infoGAN_cat", ",", "self", ".", "infoGAN_cont", ",", "self", ".", "infoGAN_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "# Use same encoder (variable share) to model Q()", "\n", "", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "Q_cat", ",", "self", ".", "Q_cont_mu", ",", "self", ".", "Q_cont_sigma", ",", "_", "=", "encoder", "(", "self", ".", "decoderGene_output", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "self", ".", "Q_cont_distribution", "=", "distributions", ".", "MultivariateNormalDiag", "(", "loc", "=", "self", ".", "Q_cont_mu", ",", "scale_diag", "=", "self", ".", "Q_cont_sigma", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'debug_sampleCont'", ",", "self", ".", "infoGAN_cont", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'debug_sampleNoise'", ",", "self", ".", "infoGAN_noise", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'D2d'", ")", ":", "\n", "            ", "self", ".", "decoderGene_data_prob", "=", "D2d", "(", "self", ".", "decoderGene_output", ",", "params", ".", "BatchNormDecay", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'D2d'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "real_data_prob", "=", "D2d", "(", "self", ".", "real_data", ",", "params", ".", "BatchNormDecay", ")", "\n", "\n", "# Loss functions", "\n", "# 1. reconstruction loss", "\n", "#self.loss_recon = -tf.reduce_mean(self.expected_log_likelihood)", "\n", "", "self", ".", "loss_recon", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "self", ".", "x", "-", "self", ".", "decoder_output", ")", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_recon'", ",", "self", ".", "loss_recon", ")", "\n", "# 0. classification loss ", "\n", "self", ".", "loss_classify_sup", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "log", "(", "self", ".", "latent_cat_sup", "+", "1e-8", ")", "*", "self", ".", "currTrainLabel_sup", ",", "1", ")", ")", "\n", "\n", "self", ".", "debug_loss_classify_unsup", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "log", "(", "self", ".", "latent_cat", "+", "1e-8", ")", "*", "self", ".", "currTrainLabel", ",", "1", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_classify_sup'", ",", "self", ".", "loss_classify_sup", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_classify_unsup'", ",", "self", ".", "debug_loss_classify_unsup", ")", "\n", "# 2. mutual information loss", "\n", "self", ".", "loss_Q_cat", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "log", "(", "self", ".", "Q_cat", "+", "1e-8", ")", "*", "self", ".", "infoGAN_cat", ",", "1", ")", ")", "\n", "self", ".", "loss_Q_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "Q_cont_distribution", ".", "log_prob", "(", "self", ".", "infoGAN_cont", ")", ")", "\n", "self", ".", "loss_Q", "=", "self", ".", "loss_Q_cat", "+", "self", ".", "loss_Q_cont", "\n", "\n", "self", ".", "debug_Q_L2", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "self", ".", "infoGAN_cont", "-", "self", ".", "Q_cont_mu", ")", ",", "axis", "=", "1", ")", ")", "\n", "self", ".", "debug_Q_percnt", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "self", ".", "infoGAN_cont", "-", "self", ".", "Q_cont_mu", ")", ",", "axis", "=", "1", ")", "/", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "self", ".", "infoGAN_cont", ")", ",", "axis", "=", "1", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Q_cat'", ",", "self", ".", "loss_Q_cat", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Q_cont'", ",", "self", ".", "loss_Q_cont", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Q'", ",", "self", ".", "loss_Q", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Q_L2_loss'", ",", "self", ".", "debug_Q_L2", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Q_percnt_loss'", ",", "self", ".", "debug_Q_percnt", ")", "\n", "# 3. adversarial loss", "\n", "self", ".", "loss_Discri_cat", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_cat_prob", "-", "self", ".", "fake_cat_prob", ")", "\n", "self", ".", "loss_Gene_cat", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_cat_prob", ")", "\n", "self", ".", "loss_Discri_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_cont_prob", "-", "self", ".", "fake_cont_prob", ")", "\n", "self", ".", "loss_Gene_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_cont_prob", ")", "\n", "self", ".", "loss_Discri_noise", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_noise_prob", "-", "self", ".", "fake_noise_prob", ")", "\n", "self", ".", "loss_Gene_noise", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_noise_prob", ")", "\n", "self", ".", "loss_Discri", "=", "self", ".", "loss_Discri_cat", "+", "self", ".", "loss_Discri_cont", "+", "self", ".", "loss_Discri_noise", "\n", "self", ".", "loss_Gene", "=", "self", ".", "loss_Gene_cat", "+", "self", ".", "loss_Gene_cont", "+", "self", ".", "loss_Gene_noise", "\n", "\n", "self", ".", "loss_Discri_decoder", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "log", "(", "self", ".", "real_data_prob", "+", "1e-8", ")", "+", "tf", ".", "log", "(", "1", "-", "self", ".", "decoderGene_data_prob", "+", "1e-8", ")", ")", "\n", "self", ".", "loss_Gene_decoder", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "log", "(", "self", ".", "decoderGene_data_prob", "+", "1e-8", ")", ")", "\n", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri_cat'", ",", "self", ".", "loss_Discri_cat", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri_cont'", ",", "self", ".", "loss_Discri_cont", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri_noise'", ",", "self", ".", "loss_Discri_noise", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene_cat'", ",", "self", ".", "loss_Gene_cat", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene_cont'", ",", "self", ".", "loss_Gene_cont", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene_noise'", ",", "self", ".", "loss_Gene_noise", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri'", ",", "self", ".", "loss_Discri", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene'", ",", "self", ".", "loss_Gene", ")", "\n", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_D2d'", ",", "self", ".", "loss_Discri_decoder", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_generator'", ",", "self", ".", "loss_Gene_decoder", ")", "\n", "# Variable list", "\n", "self", ".", "varlist_E", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'encoder/'", ")", "]", "\n", "self", ".", "varlist_D", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'decoder/'", ")", "]", "\n", "self", ".", "varlist_Q", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'encoder/'", ")", "]", "\n", "self", ".", "varlist_Discri_cat", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_cat/'", ")", "]", "\n", "self", ".", "varlist_Discri_cont", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_cont/'", ")", "]", "\n", "self", ".", "varlist_Discri_noise", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_noise/'", ")", "]", "\n", "self", ".", "varlist_Discri_decoder", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'D2d/'", ")", "]", "\n", "\n", "self", ".", "varlist_ED", "=", "self", ".", "varlist_E", "+", "self", ".", "varlist_D", "\n", "self", ".", "varlist_Discri", "=", "self", ".", "varlist_Discri_cat", "+", "self", ".", "varlist_Discri_cont", "+", "self", ".", "varlist_Discri_noise", "\n", "# Summary for model variables", "\n", "for", "var", "in", "self", ".", "varlist_ED", ":", "\n", "            ", "variable_summaries", "(", "var", ")", "\n", "# Optimizer - with dependency on 'update_ops' for tf.summary", "\n", "", "update_ops", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "update_ops", ")", ":", "\n", "### AAE ###", "\n", "            ", "self", ".", "optimizer_ED", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_recon", ",", "\n", "params", ".", "optimizer_recon", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_ED", ")", "\n", "self", ".", "optimizer_Discri", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Discri", ",", "\n", "params", ".", "optimizer_adv_discriminator", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Discri", ")", "\n", "self", ".", "optimizer_Gene", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Gene", ",", "\n", "params", ".", "optimizer_adv_generator", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_E", ")", "\n", "self", ".", "optimizer_classify", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_classify_sup", ",", "\n", "params", ".", "optimizer_supervised", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_E", ")", "\n", "### infoGAN ###", "\n", "self", ".", "optimizer_Q_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Q", ",", "\n", "params", ".", "optimizer_Q", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Q", "+", "self", ".", "varlist_D", ")", "\n", "self", ".", "optimizer_Discri_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Discri_decoder", ",", "\n", "params", ".", "optimizer_adv_discriminator_infoGAN", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Discri_decoder", ")", "\n", "self", ".", "optimizer_Gene_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Gene_decoder", ",", "\n", "params", ".", "optimizer_adv_generator_infoGAN", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_D", ")", "\n", "# Clip the Discriminator parameters - WGAN", "\n", "", "self", ".", "clip_discriminator", "=", "[", "]", "\n", "for", "currVars", "in", "self", ".", "varlist_Discri", ":", "\n", "            ", "self", ".", "clip_discriminator", ".", "append", "(", "tf", ".", "assign", "(", "currVars", ",", "tf", ".", "clip_by_value", "(", "currVars", ",", "-", "params", ".", "c", ",", "params", ".", "c", ")", ")", ")", "\n", "# Merge all summary nodes", "\n", "", "self", ".", "merged", "=", "tf", ".", "summary", ".", "merge_all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8.trainParameter.__init__": [[499, 532], ["tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", ":", "\n", "        ", "self", ".", "batch_size", "=", "128", "\n", "self", ".", "dim_cat", "=", "10", "\n", "self", ".", "dim_cont", "=", "2", "\n", "self", ".", "dim_noise", "=", "80", "\n", "# Hidden dimension", "\n", "self", ".", "dim_DS_cat_hiddn1", "=", "3000", "# Discriminator - categorical", "\n", "self", ".", "dim_DS_cat_hiddn2", "=", "3000", "\n", "self", ".", "dim_DS_cont_hiddn1", "=", "3000", "# Discriminator - continuous", "\n", "self", ".", "dim_DS_cont_hiddn2", "=", "3000", "\n", "# Other", "\n", "self", ".", "num_steps", "=", "50000", "\n", "self", ".", "showStep", "=", "500", "\n", "self", ".", "saveStep", "=", "500", "\n", "self", ".", "summaryStep", "=", "100", "\n", "self", ".", "BatchNormDecay", "=", "0.95", "\n", "self", ".", "num_critis", "=", "5", "\n", "self", ".", "c", "=", "0.01", "\n", "# Optimizer", "\n", "self", ".", "LR_recon", "=", "LR_recon", "\n", "self", ".", "LR_adv", "=", "LR_adv", "\n", "self", ".", "LR_adv_infoGAN", "=", "LR_adv_infoGAN", "\n", "\n", "self", ".", "optimizer_recon", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_adv_discriminator", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_adv", ")", "\n", "self", ".", "optimizer_adv_generator", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_supervised", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "10", "*", "LR_recon", ")", "\n", "\n", "self", ".", "optimizer_Q", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_adv_infoGAN", ")", "\n", "self", ".", "optimizer_adv_generator_infoGAN", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_adv_discriminator_infoGAN", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_adv_infoGAN", ")", "\n", "# Ancestrol sampling (test the reconstruction ability of decoder)", "\n", "self", ".", "Nsample", "=", "10", "# number of batch in model.sample_output", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8.variable_summaries": [[12, 22], ["var.name.replace", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.sqrt", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.histogram", "tensorflow.reduce_mean", "tensorflow.reduce_max", "tensorflow.reduce_min", "tensorflow.square"], "function", ["None"], ["def", "variable_summaries", "(", "var", ")", ":", "\n", "    ", "scopeName", "=", "'summary/'", "+", "var", ".", "name", ".", "replace", "(", "':'", ",", "'/'", ")", "\n", "with", "tf", ".", "name_scope", "(", "scopeName", ")", ":", "\n", "        ", "mean", "=", "tf", ".", "reduce_mean", "(", "var", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'mean'", ",", "mean", ")", "\n", "stddev", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "var", "-", "mean", ")", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'stddev'", ",", "stddev", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'max'", ",", "tf", ".", "reduce_max", "(", "var", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'min'", ",", "tf", ".", "reduce_min", "(", "var", ")", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'histogram'", ",", "var", ")", "\n", "", "", "def", "lrelu", "(", "x", ",", "alpha", "=", "0.1", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8.lrelu": [[22, 24], ["tensorflow.maximum"], "function", ["None"], ["", "", "def", "lrelu", "(", "x", ",", "alpha", "=", "0.1", ")", ":", "\n", "    ", "return", "tf", ".", "maximum", "(", "x", ",", "alpha", "*", "x", ")", "\n", "", "def", "encoder", "(", "x", ",", "dim_categorical", ",", "dim_continuous", ",", "dim_noise", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8.encoder": [[24, 45], ["tensorflow.arg_scope", "RepGAN_semiSup_RGB_run8.lrelu", "tensorflow.dropout", "RepGAN_semiSup_RGB_run8.lrelu", "RepGAN_semiSup_RGB_run8.lrelu", "tensorflow.flatten", "RepGAN_semiSup_RGB_run8.lrelu", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.fully_connected", "tensorflow.variable_scope", "tensorflow.fully_connected", "tensorflow.variable_scope", "tensorflow.fully_connected", "tensorflow.variable_scope", "tensorflow.fully_connected", "tensorflow.variable_scope", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "encoder", "(", "x", ",", "dim_categorical", ",", "dim_continuous", ",", "dim_noise", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "x", ",", "num_outputs", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "dropout", "(", "net", ",", "keep_prob", "=", "0.8", ",", "is_training", "=", "flag_training", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "flatten", "(", "net", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "1024", ")", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'FC_cat'", ")", ":", "\n", "            ", "latent_cat", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'FC_mu'", ")", ":", "\n", "            ", "mu", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_continuous", ",", "activation_fn", "=", "None", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'FC_sigma'", ")", ":", "\n", "            ", "sigma", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_continuous", ",", "activation_fn", "=", "tf", ".", "sigmoid", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'FC_noise'", ")", ":", "\n", "            ", "noise", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_noise", ",", "activation_fn", "=", "None", ")", "\n", "", "", "return", "latent_cat", ",", "mu", ",", "sigma", ",", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8.decoder": [[46, 59], ["tensorflow.arg_scope", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.reshape", "tensorflow.conv2d_transpose", "tensorflow.conv2d_transpose", "tensorflow.conv2d_transpose"], "function", ["None"], ["", "def", "decoder", "(", "latent", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d_transpose", "]", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "# BN crucial for infoGAN here, otherwise no work", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", "\n", ")", ":", "\n", "        ", "net", "=", "slim", ".", "fully_connected", "(", "latent", ",", "1024", ")", "\n", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "4", "*", "4", "*", "256", ")", "\n", "net", "=", "tf", ".", "reshape", "(", "net", ",", "shape", "=", "[", "-", "1", ",", "4", ",", "4", ",", "256", "]", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", "\n", "xhat", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "3", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "activation_fn", "=", "None", ",", "normalizer_fn", "=", "None", ")", "\n", "", "return", "xhat", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8.Discriminator": [[60, 73], ["tensorflow.arg_scope", "RepGAN_semiSup_RGB_run8.lrelu", "RepGAN_semiSup_RGB_run8.lrelu", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "Discriminator", "(", "latent_in", ",", "dim_DS_hiddn1", ",", "dim_DS_hiddn2", ",", "BatchNormDecay", ",", "flag_raw", "=", "False", ")", ":", "\n", "# For latent variables", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "#normalizer_fn=slim.batch_norm,", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "latent_in", ",", "dim_DS_hiddn1", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "dim_DS_hiddn2", ")", ")", "\n", "if", "flag_raw", ":", "\n", "            ", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "None", ")", "\n", "", "else", ":", "\n", "            ", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ")", "\n", "", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8.D2d": [[74, 86], ["tensorflow.arg_scope", "RepGAN_semiSup_RGB_run8.lrelu", "RepGAN_semiSup_RGB_run8.lrelu", "tensorflow.flatten", "RepGAN_semiSup_RGB_run8.lrelu", "tensorflow.fully_connected", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "D2d", "(", "xhat", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "# For decoder output", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "xhat", ",", "num_outputs", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "normalizer_fn", "=", "None", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "flatten", "(", "net", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "1024", ")", ")", "\n", "prob_realFake", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ",", "normalizer_fn", "=", "None", ")", "\n", "", "return", "prob_realFake", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8.Sample_categorical": [[87, 92], ["numpy.zeros", "numpy.random.randint", "numpy.arange"], "function", ["None"], ["", "def", "Sample_categorical", "(", "size_batch", ",", "size_categorical", ")", ":", "\n", "    ", "real_cat", "=", "np", ".", "zeros", "(", "(", "size_batch", ",", "size_categorical", ")", ")", "\n", "rand_idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "size_categorical", ",", "size_batch", ")", "\n", "real_cat", "[", "np", ".", "arange", "(", "size_batch", ")", ",", "rand_idx", "]", "=", "1.0", "\n", "return", "real_cat", "\n", "", "def", "Sample_continuous", "(", "size_batch", ",", "size_continuous", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8.Sample_continuous": [[92, 96], ["numpy.random.normal"], "function", ["None"], ["", "def", "Sample_continuous", "(", "size_batch", ",", "size_continuous", ")", ":", "\n", "#real_cont = np.random.uniform(low=-1.0, high=1.0000001, size=(size_batch, size_continuous))", "\n", "    ", "real_cont", "=", "np", ".", "random", ".", "normal", "(", "loc", "=", "0.0", ",", "scale", "=", "1.0", ",", "size", "=", "(", "size_batch", ",", "size_continuous", ")", ")", "\n", "return", "real_cont", "\n", "", "def", "Sample_noise", "(", "size_batch", ",", "size_noise", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8.Sample_noise": [[96, 99], ["numpy.random.normal"], "function", ["None"], ["", "def", "Sample_noise", "(", "size_batch", ",", "size_noise", ")", ":", "\n", "    ", "noise", "=", "np", ".", "random", ".", "normal", "(", "loc", "=", "0.0", ",", "scale", "=", "1.0", ",", "size", "=", "(", "size_batch", ",", "size_noise", ")", ")", "\n", "return", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8.train": [[313, 498], ["os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "open", "numpy.set_printoptions", "numpy.set_printoptions", "myfile.write", "open", "tensorflow.trainable_variables", "myfile.write", "tensorflow.Session", "tensorflow.global_variables_initializer().run", "tensorflow.train.Saver", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "tensorflow.summary.FileWriter", "numpy.floor", "range", "numpy.random.choice", "currBatch.reshape.reshape", "currBatch_sup.reshape.reshape", "numpy.zeros", "numpy.zeros", "numpy.random.permutation", "RepGAN_semiSup_RGB_run8.Sample_categorical", "RepGAN_semiSup_RGB_run8.Sample_continuous", "RepGAN_semiSup_RGB_run8.Sample_noise", "RepGAN_semiSup_RGB_run8.Sample_categorical", "RepGAN_semiSup_RGB_run8.Sample_continuous", "RepGAN_semiSup_RGB_run8.Sample_noise", "RepGAN_semiSup_RGB_run8.Sample_noise", "range", "sess.run", "sess.run", "range", "sess.run", "numpy.zeros", "str", "tensorflow.global_variables_initializer", "numpy.arange", "numpy.random.shuffle", "sess.run", "sess.run", "sess.run", "sess.run", "sess.run", "sess.run", "tf.summary.FileWriter.add_summary", "int", "range", "numpy.ones", "range", "numpy.empty", "range", "numpy.swapaxes().reshape", "numpy.min", "numpy.max", "matplotlib.imsave", "sess.run", "numpy.empty", "range", "numpy.swapaxes().reshape", "numpy.min", "numpy.max", "matplotlib.imsave", "numpy.set_printoptions", "sess.run", "numpy.max", "str", "numpy.floor", "currtestImg.reshape.reshape", "sess.run", "open", "myfile.write", "tf.train.Saver.save", "range", "scipy.ndimage.interpolation.zoom", "scipy.ndimage.interpolation.zoom", "open", "myfile.write", "str", "numpy.arange", "numpy.arange", "numpy.argmax", "numpy.sum", "sess.run", "RepGAN_semiSup_RGB_run8.Sample_continuous", "numpy.tile", "RepGAN_semiSup_RGB_run8.Sample_noise", "sess.run", "scipy.ndimage.interpolation.zoom", "numpy.swapaxes", "numpy.swapaxes", "numpy.min", "str", "str", "str", "str", "str", "str", "numpy.max", "str", "str", "str", "numpy.min", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_categorical", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_categorical", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise"], ["def", "train", "(", "model", ",", "trainImg", ",", "trainImg_sup", ",", "trainLabel", ",", "trainLabel_sup", ",", "testImg", ",", "testLabel", ",", "params", ",", "log_path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", "+", "'reconstruction/'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", "+", "'reconstruction/'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", "+", "'generation/'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", "+", "'generation/'", ")", "\n", "# Data statistics", "\n", "", "with", "open", "(", "log_path", "+", "'data_stat.txt'", ",", "'a'", ")", "as", "myfile", ":", "\n", "        ", "np", ".", "set_printoptions", "(", "precision", "=", "2", ",", "linewidth", "=", "10000", ")", "\n", "np", ".", "set_printoptions", "(", "threshold", "=", "10000", ")", "\n", "tempText", "=", "'min_train = '", "+", "str", "(", "np", ".", "min", "(", "trainImg", ")", ")", "+", "'  max_train = '", "+", "str", "(", "np", ".", "max", "(", "trainImg", ")", ")", "+", "'\\n'", "+", "'min_test = '", "+", "str", "(", "np", ".", "min", "(", "testImg", ")", ")", "+", "'  max_test = '", "+", "str", "(", "np", ".", "max", "(", "testImg", ")", ")", "+", "'\\n'", "\n", "myfile", ".", "write", "(", "tempText", ")", "\n", "# log all trainable variables", "\n", "", "with", "open", "(", "log_path", "+", "'model_variables.txt'", ",", "'a'", ")", "as", "myfile", ":", "\n", "        ", "tempText", "=", "''", "\n", "for", "var", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "            ", "tempText", "=", "tempText", "+", "str", "(", "var", ")", "+", "'\\n'", "\n", "", "myfile", ".", "write", "(", "tempText", ")", "\n", "\n", "", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "eye_cat", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cat", ")", ")", "\n", "for", "idx", "in", "range", "(", "params", ".", "Nsample", ")", ":", "\n", "            ", "eye_cat", "[", "idx", ",", "idx", "]", "=", "1.0", "\n", "", "zero_cont", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cont", ")", ")", "\n", "zero_noise", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "train_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "log_path", "+", "'Summary/train'", ")", "\n", "Nbatch_train", "=", "np", ".", "floor", "(", "trainImg", ".", "shape", "[", "0", "]", "/", "params", ".", "batch_size", ")", "\n", "# alterTrain", "\n", "bestAccuracy", "=", "-", "1.0", "\n", "count_batch", "=", "0", "\n", "preSave_step", "=", "-", "1.0", "\n", "for", "step", "in", "range", "(", "params", ".", "num_steps", ")", ":", "\n", "            ", "if", "count_batch", ">=", "Nbatch_train", ":", "\n", "                ", "count_batch", "=", "0", "\n", "idx", "=", "np", ".", "arange", "(", "trainImg", ".", "shape", "[", "0", "]", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idx", ")", "\n", "trainImg", "=", "trainImg", "[", "idx", "]", "\n", "trainLabel", "=", "trainLabel", "[", "idx", "]", "\n", "# Get current training batch", "\n", "", "currBatch", "=", "trainImg", "[", "count_batch", "*", "params", ".", "batch_size", ":", "(", "count_batch", "+", "1", ")", "*", "params", ".", "batch_size", "]", "\n", "currtrainLabel", "=", "trainLabel", "[", "count_batch", "*", "params", ".", "batch_size", ":", "(", "count_batch", "+", "1", ")", "*", "params", ".", "batch_size", "]", "\n", "# Get current supervised training batch", "\n", "Idxsup", "=", "np", ".", "random", ".", "choice", "(", "trainImg_sup", ".", "shape", "[", "0", "]", ",", "size", "=", "params", ".", "batch_size", ",", "replace", "=", "False", ")", "\n", "currBatch_sup", "=", "trainImg_sup", "[", "Idxsup", "]", "\n", "currtrainLabel_sup", "=", "trainLabel_sup", "[", "Idxsup", "]", "\n", "\n", "count_batch", "=", "count_batch", "+", "1", "\n", "\n", "currBatch", "=", "currBatch", ".", "reshape", "(", "[", "-", "1", ",", "32", ",", "32", ",", "3", "]", ")", "\n", "currBatch_sup", "=", "currBatch_sup", ".", "reshape", "(", "[", "-", "1", ",", "32", ",", "32", ",", "3", "]", ")", "\n", "currtrainLabel_oneHot", "=", "np", ".", "zeros", "(", "(", "currtrainLabel", ".", "shape", "[", "0", "]", ",", "10", ")", ")", "\n", "currtrainLabel_oneHot", "[", "np", ".", "arange", "(", "currtrainLabel", ".", "shape", "[", "0", "]", ")", ",", "currtrainLabel", "-", "1", "]", "=", "1", "\n", "currtrainLabel_sup_oneHot", "=", "np", ".", "zeros", "(", "(", "currtrainLabel_sup", ".", "shape", "[", "0", "]", ",", "10", ")", ")", "\n", "currtrainLabel_sup_oneHot", "[", "np", ".", "arange", "(", "currtrainLabel_sup", ".", "shape", "[", "0", "]", ")", ",", "currtrainLabel_sup", "-", "1", "]", "=", "1", "\n", "currBatch_perm", "=", "np", ".", "random", ".", "permutation", "(", "currBatch", ")", "\n", "real_cat", "=", "Sample_categorical", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", "\n", "real_cont", "=", "Sample_continuous", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", "\n", "real_noise", "=", "Sample_noise", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", "\n", "infoGAN_cat", "=", "Sample_categorical", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", "\n", "infoGAN_cont", "=", "Sample_continuous", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", "\n", "infoGAN_noise", "=", "Sample_noise", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", "\n", "test_noise", "=", "Sample_noise", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", "\n", "feedDict", "=", "{", "model", ".", "x", ":", "currBatch", ",", "\n", "model", ".", "currTrainLabel", ":", "currtrainLabel_oneHot", ",", "\n", "model", ".", "x_sup", ":", "currBatch_sup", ",", "\n", "model", ".", "currTrainLabel_sup", ":", "currtrainLabel_sup_oneHot", ",", "\n", "model", ".", "infoGAN_cat", ":", "infoGAN_cat", ",", "\n", "model", ".", "infoGAN_cont", ":", "infoGAN_cont", ",", "\n", "model", ".", "infoGAN_noise", ":", "infoGAN_noise", ",", "\n", "model", ".", "real_cat", ":", "real_cat", ",", "\n", "model", ".", "real_cont", ":", "real_cont", ",", "\n", "model", ".", "real_noise", ":", "real_noise", ",", "\n", "model", ".", "real_data", ":", "currBatch_perm", ",", "\n", "}", "\n", "# 1. infoGAN - emphasized", "\n", "for", "_", "in", "range", "(", "params", ".", "num_critis", ")", ":", "\n", "                ", "sess", ".", "run", "(", "model", ".", "optimizer_Discri_infoGAN", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "optimizer_Gene_infoGAN", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "optimizer_Q_infoGAN", ",", "feedDict", ")", "\n", "# 2. AAE", "\n", "", "sess", ".", "run", "(", "model", ".", "optimizer_ED", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "optimizer_classify", ",", "feedDict", ")", "\n", "for", "_", "in", "range", "(", "params", ".", "num_critis", ")", ":", "\n", "                ", "sess", ".", "run", "(", "model", ".", "optimizer_Discri", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "clip_discriminator", ",", "feedDict", ")", "\n", "", "sess", ".", "run", "(", "model", ".", "optimizer_Gene", ",", "feedDict", ")", "\n", "# Summary nodes", "\n", "if", "step", "%", "params", ".", "summaryStep", "==", "0", ":", "\n", "                ", "summary", "=", "sess", ".", "run", "(", "model", ".", "merged", ",", "feedDict", ")", "\n", "train_writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "# Save model & compute accuracy      ", "\n", "", "if", "step", "%", "params", ".", "saveStep", "==", "0", ":", "\n", "# Compute classification accuracy", "\n", "                ", "batch_test", "=", "1000", "\n", "N_testEpoch", "=", "int", "(", "np", ".", "floor", "(", "testImg", ".", "shape", "[", "0", "]", "/", "batch_test", ")", ")", "\n", "total_disagree", "=", "0.0", "\n", "for", "testEpoch", "in", "range", "(", "N_testEpoch", "+", "1", ")", ":", "\n", "                    ", "if", "testEpoch", "==", "N_testEpoch", ":", "\n", "                        ", "currtestImg", "=", "testImg", "[", "testEpoch", "*", "batch_test", ":", "]", "\n", "currtestLabel", "=", "testLabel", "[", "testEpoch", "*", "batch_test", ":", "]", "\n", "", "else", ":", "\n", "                        ", "currtestImg", "=", "testImg", "[", "testEpoch", "*", "batch_test", ":", "(", "1", "+", "testEpoch", ")", "*", "batch_test", "]", "\n", "currtestLabel", "=", "testLabel", "[", "testEpoch", "*", "batch_test", ":", "(", "1", "+", "testEpoch", ")", "*", "batch_test", "]", "\n", "\n", "", "currtestImg", "=", "currtestImg", ".", "reshape", "(", "[", "-", "1", ",", "32", ",", "32", ",", "3", "]", ")", "\n", "feedDict_test", "=", "{", "model", ".", "test_data", ":", "currtestImg", "}", "\n", "latent_cat", "=", "sess", ".", "run", "(", "model", ".", "test_cat", ",", "feedDict_test", ")", "\n", "predLabel", "=", "1", "+", "np", ".", "argmax", "(", "latent_cat", ",", "axis", "=", "1", ")", "\n", "total_disagree", "=", "total_disagree", "+", "np", ".", "sum", "(", "currtestLabel", "!=", "predLabel", ")", "\n", "", "currAccuracy", "=", "1.0", "-", "total_disagree", "/", "testImg", ".", "shape", "[", "0", "]", "\n", "with", "open", "(", "log_path", "+", "'accuracy.txt'", ",", "\"a\"", ")", "as", "myfile", ":", "\n", "                    ", "tempText", "=", "'Step = '", "+", "str", "(", "step", ")", "+", "'  count_batch = '", "+", "str", "(", "count_batch", ")", "+", "'  Accuracy = '", "+", "'{:.2f}'", ".", "format", "(", "currAccuracy", ")", "+", "'\\n'", "\n", "myfile", ".", "write", "(", "tempText", ")", "\n", "", "if", "currAccuracy", ">", "0.5", "and", "(", "currAccuracy", ">", "bestAccuracy", "or", "step", "-", "preSave_step", ">=", "5000", ")", ":", "\n", "                    ", "preSave_step", "=", "step", "\n", "bestAccuracy", "=", "currAccuracy", "\n", "saver", ".", "save", "(", "sess", ",", "log_path", "+", "'ckpt/model_'", "+", "str", "(", "step", ")", "+", "'.ckpt'", ")", "\n", "# Generation image", "\n", "", "", "zero_noise", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "if", "step", "%", "params", ".", "showStep", "==", "0", ":", "\n", "                ", "Ntrial", "=", "10", "\n", "decoderSample_small", "=", "np", ".", "ones", "(", "(", "Ntrial", ",", "params", ".", "Nsample", ",", "32", ",", "32", ",", "3", ")", ",", "dtype", "=", "float", ")", "\n", "for", "idx", "in", "range", "(", "Ntrial", ")", ":", "\n", "                    ", "if", "idx", "==", "0", ":", "\n", "                        ", "feedDict_rand", "=", "{", "\n", "model", ".", "sample_cat", ":", "eye_cat", ",", "\n", "model", ".", "sample_cont", ":", "zero_cont", ",", "\n", "model", ".", "sample_noise", ":", "zero_noise", ",", "\n", "}", "\n", "decoderSample_small", "[", "idx", ",", ":", ",", ":", ",", ":", "]", "=", "sess", ".", "run", "(", "model", ".", "sample_output", ",", "feedDict_rand", ")", "\n", "", "else", ":", "\n", "                        ", "sample_cont_rand", "=", "Sample_continuous", "(", "1", ",", "params", ".", "dim_cont", ")", "\n", "sample_cont_rand", "=", "np", ".", "tile", "(", "sample_cont_rand", ",", "(", "params", ".", "Nsample", ",", "1", ")", ")", "\n", "test_noise", "=", "Sample_noise", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", "\n", "feedDict_rand", "=", "{", "\n", "model", ".", "sample_cat", ":", "eye_cat", ",", "\n", "model", ".", "sample_cont", ":", "sample_cont_rand", ",", "\n", "model", ".", "sample_noise", ":", "test_noise", ",", "\n", "}", "\n", "decoderSample_small", "[", "idx", ",", ":", ",", ":", ",", ":", "]", "=", "sess", ".", "run", "(", "model", ".", "sample_output", ",", "feedDict_rand", ")", "\n", "\n", "", "", "d", "=", "np", ".", "empty", "(", "(", "Ntrial", ",", "params", ".", "Nsample", ",", "32", "*", "3", ",", "32", "*", "3", ",", "3", ")", ",", "dtype", "=", "float", ")", "# reconstructed from ancestrol sampling", "\n", "for", "idx_t", "in", "range", "(", "Ntrial", ")", ":", "# for each trial", "\n", "                    ", "for", "idx_cat", "in", "range", "(", "params", ".", "Nsample", ")", ":", "# for each category", "\n", "                        ", "temp_d", "=", "decoderSample_small", "[", "idx_t", ",", "idx_cat", "]", "\n", "d", "[", "idx_t", ",", "idx_cat", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_d", ",", "(", "3", ",", "3", ",", "1", ")", ")", "\n", "", "", "outplot", "=", "np", ".", "swapaxes", "(", "d", ",", "1", ",", "2", ")", ".", "reshape", "(", "Ntrial", "*", "32", "*", "3", ",", "params", ".", "Nsample", "*", "32", "*", "3", ",", "3", ")", "\n", "outplot", "-=", "np", ".", "min", "(", "outplot", ")", "\n", "outplot", "/=", "np", ".", "max", "(", "outplot", ")", "\n", "plt", ".", "imsave", "(", "log_path", "+", "'generation/'", "+", "str", "(", "step", ")", "+", "'.png'", ",", "outplot", ")", "\n", "# Reconstruction image", "\n", "decoder_output", "=", "sess", ".", "run", "(", "model", ".", "decoder_output", ",", "feedDict", ")", "\n", "sampleIdx", "=", "3", "\n", "\n", "g", "=", "np", ".", "empty", "(", "(", "2", ",", "5", ",", "32", "*", "3", ",", "32", "*", "3", ",", "3", ")", ",", "dtype", "=", "float", ")", "# reconstructed from encoder output", "\n", "for", "idx", "in", "range", "(", "5", ")", ":", "\n", "                    ", "temp_g_real", "=", "currBatch", "[", "idx", "]", "\n", "temp_g_recon", "=", "decoder_output", "[", "idx", "]", "\n", "g", "[", "0", ",", "idx", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_g_real", ",", "(", "3", ",", "3", ",", "1", ")", ")", "\n", "g", "[", "1", ",", "idx", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_g_recon", ",", "(", "3", ",", "3", ",", "1", ")", ")", "\n", "", "outplot", "=", "np", ".", "swapaxes", "(", "g", ",", "1", ",", "2", ")", ".", "reshape", "(", "2", "*", "32", "*", "3", ",", "5", "*", "32", "*", "3", ",", "3", ")", "\n", "outplot", "-=", "np", ".", "min", "(", "outplot", ")", "\n", "outplot", "/=", "np", ".", "max", "(", "outplot", ")", "\n", "plt", ".", "imsave", "(", "log_path", "+", "'reconstruction/'", "+", "str", "(", "step", ")", "+", "'.png'", ",", "outplot", ")", "\n", "### DEBUG ##############################", "\n", "np", ".", "set_printoptions", "(", "precision", "=", "2", ")", "\n", "recon_cat", ",", "recon_mu", ",", "recon_sgm", ",", "recon_noise", "=", "sess", ".", "run", "(", "[", "model", ".", "latent_cat", ",", "\n", "model", ".", "latent_cont_mu", ",", "\n", "model", ".", "latent_cont_sigma", ",", "\n", "model", ".", "latent_noise", "]", ",", "\n", "feedDict", ")", "\n", "with", "open", "(", "log_path", "+", "'latent_var.txt'", ",", "\"a\"", ")", "as", "myfile", ":", "\n", "                    ", "tempText", "=", "'Step = '", "+", "str", "(", "step", ")", "+", "'\\n'", "+", "'real_label = '", "+", "str", "(", "currtrainLabel", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'recon_cat = \\n'", "+", "str", "(", "recon_cat", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'recon_mu = \\n'", "+", "str", "(", "recon_mu", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'recon_sgm = \\n'", "+", "str", "(", "recon_sgm", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'recon_noise = \\n'", "+", "str", "(", "recon_noise", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'#################################################\\n'", "\n", "myfile", ".", "write", "(", "tempText", ")", "\n", "", "", "", "", "", "class", "trainParameter", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8.main": [[535, 580], ["scipy.loadmat", "scipy.loadmat", "numpy.squeeze", "numpy.squeeze", "numpy.moveaxis", "numpy.moveaxis", "int", "numpy.zeros", "numpy.zeros", "numpy.zeros", "tensorflow.reset_default_graph", "RepGAN_semiSup_RGB_run8.trainParameter", "RepGAN_semiSup_RGB_run8.RepGAN", "RepGAN_semiSup_RGB_run8.train", "numpy.floor", "numpy.sum", "numpy.random.randint", "int", "int"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.train"], ["", "", "def", "main", "(", "log_path", ",", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", ":", "\n", "# Read data", "\n", "    ", "train_data", "=", "sio", ".", "loadmat", "(", "'./svhn_data/train_32x32.mat'", ")", "\n", "test_data", "=", "sio", ".", "loadmat", "(", "'./svhn_data/test_32x32.mat'", ")", "\n", "trainImg", "=", "train_data", "[", "'X'", "]", "\n", "trainLabel", "=", "train_data", "[", "'y'", "]", "\n", "testImg", "=", "test_data", "[", "'X'", "]", "\n", "testLabel", "=", "test_data", "[", "'y'", "]", "\n", "\n", "trainLabel", "=", "np", ".", "squeeze", "(", "trainLabel", ")", "\n", "testLabel", "=", "np", ".", "squeeze", "(", "testLabel", ")", "\n", "trainImg", "=", "np", ".", "moveaxis", "(", "trainImg", ",", "-", "1", ",", "0", ")", "\n", "testImg", "=", "np", ".", "moveaxis", "(", "testImg", ",", "-", "1", ",", "0", ")", "\n", "# Preprocessing", "\n", "trainImg", "=", "trainImg", "/", "255.0", "\n", "testImg", "=", "testImg", "/", "255.0", "\n", "# Pick the supervised samples", "\n", "N_supervised", "=", "1000", "\n", "N_sup_perclass", "=", "int", "(", "np", ".", "floor", "(", "N_supervised", "/", "10", ")", ")", "# currently assume 10 classes", "\n", "trainImg_sup", "=", "np", ".", "zeros", "(", "(", "N_sup_perclass", "*", "10", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "trainLabel_sup", "=", "np", ".", "zeros", "(", "(", "N_sup_perclass", "*", "10", ",", ")", ",", "dtype", "=", "np", ".", "int", ")", "\n", "counter", "=", "np", ".", "zeros", "(", "(", "10", ",", ")", ")", "\n", "while", "np", ".", "sum", "(", "counter", ")", "<", "N_sup_perclass", "*", "10", ":", "\n", "        ", "currIdx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "trainLabel", ".", "shape", "[", "0", "]", ")", "\n", "currTrainLabel", "=", "trainLabel", "[", "currIdx", "]", "-", "1", "# from 0 to 9", "\n", "if", "counter", "[", "currTrainLabel", "]", "<", "N_sup_perclass", ":", "\n", "            ", "tempIdx", "=", "N_sup_perclass", "*", "currTrainLabel", "+", "counter", "[", "currTrainLabel", "]", "\n", "trainImg_sup", "[", "int", "(", "tempIdx", ")", "]", "=", "trainImg", "[", "currIdx", "]", "\n", "trainLabel_sup", "[", "int", "(", "tempIdx", ")", "]", "=", "trainLabel", "[", "currIdx", "]", "# from 1 to 10", "\n", "counter", "[", "currTrainLabel", "]", "+=", "1", "\n", "\n", "\n", "", "", "'''\n    trainImg = trainImg.reshape(-1,32*32)\n    trainImg = skp.scale(trainImg)\n    trainImg = trainImg.reshape(-1,32,32)\n    testImg = testImg.reshape(-1,32*32)\n    testImg = skp.scale(testImg)\n    testImg = testImg.reshape(-1,32,32)\n    '''", "\n", "# Traininng", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "params", "=", "trainParameter", "(", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", "\n", "RepGAN_1", "=", "RepGAN", "(", "params", ")", "\n", "train", "(", "RepGAN_1", ",", "trainImg", ",", "trainImg_sup", ",", "trainLabel", ",", "trainLabel_sup", ",", "testImg", ",", "testLabel", ",", "params", ",", "log_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8b.RepGAN.__init__": [[102, 310], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.summary.merge_all", "tensorflow.summary.merge_all", "tensorflow.summary.merge_all", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_semiSup_RGB_run8b.encoder", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_semiSup_RGB_run8b.encoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_semiSup_RGB_run8b.encoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8b.decoder", "tensorflow.Bernoulli", "tensorflow.Bernoulli", "tensorflow.Bernoulli", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_semiSup_RGB_run8b.decoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8b.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8b.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8b.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8b.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8b.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8b.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8b.decoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8b.encoder", "tensorflow.MultivariateNormalDiag", "tensorflow.MultivariateNormalDiag", "tensorflow.MultivariateNormalDiag", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8b.D2d", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8b.D2d", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "RepGAN_semiSup_RGB_run8b.variable_summaries", "tensorflow.control_dependencies", "tensorflow.control_dependencies", "tensorflow.control_dependencies", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "RepGAN_semiSup_RGB_run8b.RepGAN.clip_discriminator.append", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "RepGAN_semiSup_RGB_run8b.RepGAN.xhat_flat_distribution.log_prob", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.square", "tensorflow.square", "tensorflow.square", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "RepGAN_semiSup_RGB_run8b.RepGAN.Q_cont_distribution.log_prob", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log"], "methods", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.D2d", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.D2d", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.variable_summaries"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "### AAE ###", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'encoder'", ")", ":", "\n", "            ", "self", ".", "x", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "self", ".", "currTrainLabel", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "10", ")", ")", "\n", "self", ".", "latent_cat", ",", "self", ".", "latent_cont_mu", ",", "self", ".", "latent_cont_sigma", ",", "self", ".", "latent_noise", "=", "encoder", "(", "self", ".", "x", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "\n", "self", ".", "latent_cont_sigma_clip", "=", "tf", ".", "clip_by_value", "(", "self", ".", "latent_cont_sigma", ",", "-", "1.0", ",", "1.0", ")", "\n", "self", ".", "latent_noise_clip", "=", "tf", ".", "clip_by_value", "(", "self", ".", "latent_noise", ",", "-", "1.0", ",", "1.0", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_noise'", ",", "self", ".", "latent_noise", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_noise_clip'", ",", "self", ".", "latent_noise_clip", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_mu'", ",", "self", ".", "latent_cont_mu", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sigma'", ",", "self", ".", "latent_cont_sigma", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sigma_clip'", ",", "self", ".", "latent_cont_sigma_clip", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "x_sup", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "self", ".", "currTrainLabel_sup", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "10", ")", ")", "\n", "self", ".", "latent_cat_sup", ",", "_", ",", "_", ",", "_", "=", "encoder", "(", "self", ".", "x_sup", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "test_data", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "self", ".", "test_cat", ",", "_", ",", "_", ",", "_", "=", "encoder", "(", "self", ".", "test_data", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_training", "=", "False", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'decoder'", ")", ":", "\n", "            ", "self", ".", "latent_cont_sample", "=", "self", ".", "latent_cont_mu", "+", "tf", ".", "multiply", "(", "self", ".", "latent_cont_sigma", ",", "tf", ".", "random_normal", "(", "[", "1", "]", ")", ")", "\n", "self", ".", "decoder_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "latent_cat", ",", "self", ".", "latent_cont_sample", ",", "self", ".", "latent_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "self", ".", "xhat_flat_distribution", "=", "distributions", ".", "Bernoulli", "(", "probs", "=", "tf", ".", "clip_by_value", "(", "self", ".", "decoder_output", ",", "1e-5", ",", "1", "-", "1e-5", ")", ")", "\n", "self", ".", "expected_log_likelihood", "=", "tf", ".", "reduce_sum", "(", "self", ".", "xhat_flat_distribution", ".", "log_prob", "(", "self", ".", "x", ")", ",", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "\n", "self", ".", "latent_cont_sample_clip", "=", "tf", ".", "clip_by_value", "(", "self", ".", "latent_cont_sample", ",", "-", "2.0", ",", "2.0", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sample'", ",", "self", ".", "latent_cont_sample", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sample_clip'", ",", "self", ".", "latent_cont_sample_clip", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'decoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "sample_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "sample_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "sample_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "self", ".", "sample_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "sample_cat", ",", "self", ".", "sample_cont", ",", "self", ".", "sample_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_training", "=", "False", ")", "\n", "", "self", ".", "real_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "real_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "real_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'Discri_cat'", ")", ":", "\n", "            ", "self", ".", "real_cat_prob", "=", "Discriminator", "(", "self", ".", "real_cat", ",", "\n", "params", ".", "dim_DS_cat_hiddn1", ",", "params", ".", "dim_DS_cat_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cat'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_cat_prob", "=", "Discriminator", "(", "self", ".", "latent_cat", ",", "\n", "params", ".", "dim_DS_cat_hiddn1", ",", "params", ".", "dim_DS_cat_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cont'", ")", ":", "\n", "            ", "self", ".", "real_cont_prob", "=", "Discriminator", "(", "self", ".", "real_cont", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cont'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_cont_prob", "=", "Discriminator", "(", "self", ".", "latent_cont_sample", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_noise'", ")", ":", "\n", "            ", "self", ".", "real_noise_prob", "=", "Discriminator", "(", "self", ".", "real_noise", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_noise'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_noise_prob", "=", "Discriminator", "(", "self", ".", "latent_noise", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "### infoGAN ###", "\n", "# The generator/discriminator training part of infoGAN", "\n", "", "self", ".", "infoGAN_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "infoGAN_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "infoGAN_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", ")", "\n", "self", ".", "real_data", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'decoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "decoderGene_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "infoGAN_cat", ",", "self", ".", "infoGAN_cont", ",", "self", ".", "infoGAN_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "# Use same encoder (variable share) to model Q()", "\n", "", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "Q_cat", ",", "self", ".", "Q_cont_mu", ",", "self", ".", "Q_cont_sigma", ",", "_", "=", "encoder", "(", "self", ".", "decoderGene_output", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "self", ".", "Q_cont_distribution", "=", "distributions", ".", "MultivariateNormalDiag", "(", "loc", "=", "self", ".", "Q_cont_mu", ",", "scale_diag", "=", "self", ".", "Q_cont_sigma", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'debug_sampleCont'", ",", "self", ".", "infoGAN_cont", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'debug_sampleNoise'", ",", "self", ".", "infoGAN_noise", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'D2d'", ")", ":", "\n", "            ", "self", ".", "decoderGene_data_prob", "=", "D2d", "(", "self", ".", "decoderGene_output", ",", "params", ".", "BatchNormDecay", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'D2d'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "real_data_prob", "=", "D2d", "(", "self", ".", "real_data", ",", "params", ".", "BatchNormDecay", ")", "\n", "\n", "# Loss functions", "\n", "# 1. reconstruction loss", "\n", "#self.loss_recon = -tf.reduce_mean(self.expected_log_likelihood)", "\n", "", "self", ".", "loss_recon", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "self", ".", "x", "-", "self", ".", "decoder_output", ")", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_recon'", ",", "self", ".", "loss_recon", ")", "\n", "# 0. classification loss ", "\n", "self", ".", "loss_classify_sup", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "log", "(", "self", ".", "latent_cat_sup", "+", "1e-8", ")", "*", "self", ".", "currTrainLabel_sup", ",", "1", ")", ")", "\n", "\n", "self", ".", "debug_loss_classify_unsup", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "log", "(", "self", ".", "latent_cat", "+", "1e-8", ")", "*", "self", ".", "currTrainLabel", ",", "1", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_classify_sup'", ",", "self", ".", "loss_classify_sup", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_classify_unsup'", ",", "self", ".", "debug_loss_classify_unsup", ")", "\n", "# 2. mutual information loss", "\n", "self", ".", "loss_Q_cat", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "log", "(", "self", ".", "Q_cat", "+", "1e-8", ")", "*", "self", ".", "infoGAN_cat", ",", "1", ")", ")", "\n", "self", ".", "loss_Q_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "Q_cont_distribution", ".", "log_prob", "(", "self", ".", "infoGAN_cont", ")", ")", "\n", "self", ".", "loss_Q", "=", "self", ".", "loss_Q_cat", "+", "self", ".", "loss_Q_cont", "\n", "\n", "self", ".", "debug_Q_L2", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "self", ".", "infoGAN_cont", "-", "self", ".", "Q_cont_mu", ")", ",", "axis", "=", "1", ")", ")", "\n", "self", ".", "debug_Q_percnt", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "self", ".", "infoGAN_cont", "-", "self", ".", "Q_cont_mu", ")", ",", "axis", "=", "1", ")", "/", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "self", ".", "infoGAN_cont", ")", ",", "axis", "=", "1", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Q_cat'", ",", "self", ".", "loss_Q_cat", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Q_cont'", ",", "self", ".", "loss_Q_cont", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Q'", ",", "self", ".", "loss_Q", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Q_L2_loss'", ",", "self", ".", "debug_Q_L2", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Q_percnt_loss'", ",", "self", ".", "debug_Q_percnt", ")", "\n", "# 3. adversarial loss", "\n", "self", ".", "loss_Discri_cat", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_cat_prob", "-", "self", ".", "fake_cat_prob", ")", "\n", "self", ".", "loss_Gene_cat", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_cat_prob", ")", "\n", "self", ".", "loss_Discri_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_cont_prob", "-", "self", ".", "fake_cont_prob", ")", "\n", "self", ".", "loss_Gene_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_cont_prob", ")", "\n", "self", ".", "loss_Discri_noise", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_noise_prob", "-", "self", ".", "fake_noise_prob", ")", "\n", "self", ".", "loss_Gene_noise", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_noise_prob", ")", "\n", "self", ".", "loss_Discri", "=", "self", ".", "loss_Discri_cat", "+", "self", ".", "loss_Discri_cont", "+", "self", ".", "loss_Discri_noise", "\n", "self", ".", "loss_Gene", "=", "self", ".", "loss_Gene_cat", "+", "self", ".", "loss_Gene_cont", "+", "self", ".", "loss_Gene_noise", "\n", "\n", "self", ".", "loss_Discri_decoder", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "log", "(", "self", ".", "real_data_prob", "+", "1e-8", ")", "+", "tf", ".", "log", "(", "1", "-", "self", ".", "decoderGene_data_prob", "+", "1e-8", ")", ")", "\n", "self", ".", "loss_Gene_decoder", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "log", "(", "self", ".", "decoderGene_data_prob", "+", "1e-8", ")", ")", "\n", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri_cat'", ",", "self", ".", "loss_Discri_cat", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri_cont'", ",", "self", ".", "loss_Discri_cont", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri_noise'", ",", "self", ".", "loss_Discri_noise", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene_cat'", ",", "self", ".", "loss_Gene_cat", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene_cont'", ",", "self", ".", "loss_Gene_cont", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene_noise'", ",", "self", ".", "loss_Gene_noise", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri'", ",", "self", ".", "loss_Discri", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene'", ",", "self", ".", "loss_Gene", ")", "\n", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_D2d'", ",", "self", ".", "loss_Discri_decoder", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_generator'", ",", "self", ".", "loss_Gene_decoder", ")", "\n", "# Variable list", "\n", "self", ".", "varlist_E", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'encoder/'", ")", "]", "\n", "self", ".", "varlist_D", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'decoder/'", ")", "]", "\n", "self", ".", "varlist_Q", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'encoder/'", ")", "]", "\n", "self", ".", "varlist_Discri_cat", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_cat/'", ")", "]", "\n", "self", ".", "varlist_Discri_cont", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_cont/'", ")", "]", "\n", "self", ".", "varlist_Discri_noise", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_noise/'", ")", "]", "\n", "self", ".", "varlist_Discri_decoder", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'D2d/'", ")", "]", "\n", "\n", "self", ".", "varlist_ED", "=", "self", ".", "varlist_E", "+", "self", ".", "varlist_D", "\n", "self", ".", "varlist_Discri", "=", "self", ".", "varlist_Discri_cat", "+", "self", ".", "varlist_Discri_cont", "+", "self", ".", "varlist_Discri_noise", "\n", "# Summary for model variables", "\n", "for", "var", "in", "self", ".", "varlist_ED", ":", "\n", "            ", "variable_summaries", "(", "var", ")", "\n", "# Optimizer - with dependency on 'update_ops' for tf.summary", "\n", "", "update_ops", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "update_ops", ")", ":", "\n", "### AAE ###", "\n", "            ", "self", ".", "optimizer_ED", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_recon", ",", "\n", "params", ".", "optimizer_recon", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_ED", ")", "\n", "self", ".", "optimizer_Discri", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Discri", ",", "\n", "params", ".", "optimizer_adv_discriminator", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Discri", ")", "\n", "self", ".", "optimizer_Gene", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Gene", ",", "\n", "params", ".", "optimizer_adv_generator", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_E", ")", "\n", "self", ".", "optimizer_classify", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_classify_sup", ",", "\n", "params", ".", "optimizer_supervised", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_E", ")", "\n", "### infoGAN ###", "\n", "self", ".", "optimizer_Q_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Q", ",", "\n", "params", ".", "optimizer_Q", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Q", "+", "self", ".", "varlist_D", ")", "\n", "self", ".", "optimizer_Discri_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Discri_decoder", ",", "\n", "params", ".", "optimizer_adv_discriminator_infoGAN", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Discri_decoder", ")", "\n", "self", ".", "optimizer_Gene_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Gene_decoder", ",", "\n", "params", ".", "optimizer_adv_generator_infoGAN", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_D", ")", "\n", "# Clip the Discriminator parameters - WGAN", "\n", "", "self", ".", "clip_discriminator", "=", "[", "]", "\n", "for", "currVars", "in", "self", ".", "varlist_Discri", ":", "\n", "            ", "self", ".", "clip_discriminator", ".", "append", "(", "tf", ".", "assign", "(", "currVars", ",", "tf", ".", "clip_by_value", "(", "currVars", ",", "-", "params", ".", "c", ",", "params", ".", "c", ")", ")", ")", "\n", "# Merge all summary nodes", "\n", "", "self", ".", "merged", "=", "tf", ".", "summary", ".", "merge_all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8b.trainParameter.__init__": [[500, 533], ["tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", ":", "\n", "        ", "self", ".", "batch_size", "=", "128", "\n", "self", ".", "dim_cat", "=", "10", "\n", "self", ".", "dim_cont", "=", "2", "\n", "self", ".", "dim_noise", "=", "20", "\n", "# Hidden dimension", "\n", "self", ".", "dim_DS_cat_hiddn1", "=", "3000", "# Discriminator - categorical", "\n", "self", ".", "dim_DS_cat_hiddn2", "=", "3000", "\n", "self", ".", "dim_DS_cont_hiddn1", "=", "3000", "# Discriminator - continuous", "\n", "self", ".", "dim_DS_cont_hiddn2", "=", "3000", "\n", "# Other", "\n", "self", ".", "num_steps", "=", "50000", "\n", "self", ".", "showStep", "=", "500", "\n", "self", ".", "saveStep", "=", "500", "\n", "self", ".", "summaryStep", "=", "100", "\n", "self", ".", "BatchNormDecay", "=", "0.95", "\n", "self", ".", "num_critis", "=", "5", "\n", "self", ".", "c", "=", "0.01", "\n", "# Optimizer", "\n", "self", ".", "LR_recon", "=", "LR_recon", "\n", "self", ".", "LR_adv", "=", "LR_adv", "\n", "self", ".", "LR_adv_infoGAN", "=", "LR_adv_infoGAN", "\n", "\n", "self", ".", "optimizer_recon", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_adv_discriminator", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_adv", ")", "\n", "self", ".", "optimizer_adv_generator", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_supervised", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "10", "*", "LR_recon", ")", "\n", "\n", "self", ".", "optimizer_Q", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_adv_infoGAN", ")", "\n", "self", ".", "optimizer_adv_generator_infoGAN", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_adv_discriminator_infoGAN", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_adv_infoGAN", ")", "\n", "# Ancestrol sampling (test the reconstruction ability of decoder)", "\n", "self", ".", "Nsample", "=", "10", "# number of batch in model.sample_output", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8b.variable_summaries": [[12, 22], ["var.name.replace", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.sqrt", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.histogram", "tensorflow.reduce_mean", "tensorflow.reduce_max", "tensorflow.reduce_min", "tensorflow.square"], "function", ["None"], ["def", "variable_summaries", "(", "var", ")", ":", "\n", "    ", "scopeName", "=", "'summary/'", "+", "var", ".", "name", ".", "replace", "(", "':'", ",", "'/'", ")", "\n", "with", "tf", ".", "name_scope", "(", "scopeName", ")", ":", "\n", "        ", "mean", "=", "tf", ".", "reduce_mean", "(", "var", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'mean'", ",", "mean", ")", "\n", "stddev", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "var", "-", "mean", ")", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'stddev'", ",", "stddev", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'max'", ",", "tf", ".", "reduce_max", "(", "var", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'min'", ",", "tf", ".", "reduce_min", "(", "var", ")", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'histogram'", ",", "var", ")", "\n", "", "", "def", "lrelu", "(", "x", ",", "alpha", "=", "0.1", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8b.lrelu": [[22, 24], ["tensorflow.maximum"], "function", ["None"], ["", "", "def", "lrelu", "(", "x", ",", "alpha", "=", "0.1", ")", ":", "\n", "    ", "return", "tf", ".", "maximum", "(", "x", ",", "alpha", "*", "x", ")", "\n", "", "def", "encoder", "(", "x", ",", "dim_categorical", ",", "dim_continuous", ",", "dim_noise", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8b.encoder": [[24, 45], ["tensorflow.arg_scope", "RepGAN_semiSup_RGB_run8b.lrelu", "tensorflow.dropout", "RepGAN_semiSup_RGB_run8b.lrelu", "RepGAN_semiSup_RGB_run8b.lrelu", "tensorflow.flatten", "RepGAN_semiSup_RGB_run8b.lrelu", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.fully_connected", "tensorflow.variable_scope", "tensorflow.fully_connected", "tensorflow.variable_scope", "tensorflow.fully_connected", "tensorflow.variable_scope", "tensorflow.fully_connected", "tensorflow.variable_scope", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "encoder", "(", "x", ",", "dim_categorical", ",", "dim_continuous", ",", "dim_noise", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "x", ",", "num_outputs", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "dropout", "(", "net", ",", "keep_prob", "=", "0.8", ",", "is_training", "=", "flag_training", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "flatten", "(", "net", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "1024", ")", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'FC_cat'", ")", ":", "\n", "            ", "latent_cat", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'FC_mu'", ")", ":", "\n", "            ", "mu", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_continuous", ",", "activation_fn", "=", "None", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'FC_sigma'", ")", ":", "\n", "            ", "sigma", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_continuous", ",", "activation_fn", "=", "tf", ".", "sigmoid", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'FC_noise'", ")", ":", "\n", "            ", "noise", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_noise", ",", "activation_fn", "=", "None", ")", "\n", "", "", "return", "latent_cat", ",", "mu", ",", "sigma", ",", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8b.decoder": [[46, 59], ["tensorflow.arg_scope", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.reshape", "tensorflow.conv2d_transpose", "tensorflow.conv2d_transpose", "tensorflow.conv2d_transpose"], "function", ["None"], ["", "def", "decoder", "(", "latent", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d_transpose", "]", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "# BN crucial for infoGAN here, otherwise no work", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", "\n", ")", ":", "\n", "        ", "net", "=", "slim", ".", "fully_connected", "(", "latent", ",", "1024", ")", "\n", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "4", "*", "4", "*", "256", ")", "\n", "net", "=", "tf", ".", "reshape", "(", "net", ",", "shape", "=", "[", "-", "1", ",", "4", ",", "4", ",", "256", "]", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", "\n", "xhat", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "3", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "activation_fn", "=", "None", ",", "normalizer_fn", "=", "None", ")", "\n", "", "return", "xhat", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8b.Discriminator": [[60, 73], ["tensorflow.arg_scope", "RepGAN_semiSup_RGB_run8b.lrelu", "RepGAN_semiSup_RGB_run8b.lrelu", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "Discriminator", "(", "latent_in", ",", "dim_DS_hiddn1", ",", "dim_DS_hiddn2", ",", "BatchNormDecay", ",", "flag_raw", "=", "False", ")", ":", "\n", "# For latent variables", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "#normalizer_fn=slim.batch_norm,", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "latent_in", ",", "dim_DS_hiddn1", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "dim_DS_hiddn2", ")", ")", "\n", "if", "flag_raw", ":", "\n", "            ", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "None", ")", "\n", "", "else", ":", "\n", "            ", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ")", "\n", "", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8b.D2d": [[74, 86], ["tensorflow.arg_scope", "RepGAN_semiSup_RGB_run8b.lrelu", "RepGAN_semiSup_RGB_run8b.lrelu", "tensorflow.flatten", "RepGAN_semiSup_RGB_run8b.lrelu", "tensorflow.fully_connected", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "D2d", "(", "xhat", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "# For decoder output", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "xhat", ",", "num_outputs", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "normalizer_fn", "=", "None", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "flatten", "(", "net", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "1024", ")", ")", "\n", "prob_realFake", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ",", "normalizer_fn", "=", "None", ")", "\n", "", "return", "prob_realFake", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8b.Sample_categorical": [[87, 92], ["numpy.zeros", "numpy.random.randint", "numpy.arange"], "function", ["None"], ["", "def", "Sample_categorical", "(", "size_batch", ",", "size_categorical", ")", ":", "\n", "    ", "real_cat", "=", "np", ".", "zeros", "(", "(", "size_batch", ",", "size_categorical", ")", ")", "\n", "rand_idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "size_categorical", ",", "size_batch", ")", "\n", "real_cat", "[", "np", ".", "arange", "(", "size_batch", ")", ",", "rand_idx", "]", "=", "1.0", "\n", "return", "real_cat", "\n", "", "def", "Sample_continuous", "(", "size_batch", ",", "size_continuous", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8b.Sample_continuous": [[92, 96], ["numpy.random.normal"], "function", ["None"], ["", "def", "Sample_continuous", "(", "size_batch", ",", "size_continuous", ")", ":", "\n", "#real_cont = np.random.uniform(low=-1.0, high=1.0000001, size=(size_batch, size_continuous))", "\n", "    ", "real_cont", "=", "np", ".", "random", ".", "normal", "(", "loc", "=", "0.0", ",", "scale", "=", "1.0", ",", "size", "=", "(", "size_batch", ",", "size_continuous", ")", ")", "\n", "return", "real_cont", "\n", "", "def", "Sample_noise", "(", "size_batch", ",", "size_noise", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8b.Sample_noise": [[96, 99], ["numpy.random.normal"], "function", ["None"], ["", "def", "Sample_noise", "(", "size_batch", ",", "size_noise", ")", ":", "\n", "    ", "noise", "=", "np", ".", "random", ".", "normal", "(", "loc", "=", "0.0", ",", "scale", "=", "1.0", ",", "size", "=", "(", "size_batch", ",", "size_noise", ")", ")", "\n", "return", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8b.train": [[313, 499], ["os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "open", "numpy.set_printoptions", "numpy.set_printoptions", "myfile.write", "open", "tensorflow.trainable_variables", "myfile.write", "tensorflow.Session", "tensorflow.global_variables_initializer().run", "tensorflow.train.Saver", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "tensorflow.summary.FileWriter", "numpy.floor", "range", "numpy.random.choice", "currBatch.reshape.reshape", "currBatch_sup.reshape.reshape", "numpy.zeros", "numpy.zeros", "numpy.random.permutation", "RepGAN_semiSup_RGB_run8b.Sample_categorical", "RepGAN_semiSup_RGB_run8b.Sample_continuous", "RepGAN_semiSup_RGB_run8b.Sample_noise", "RepGAN_semiSup_RGB_run8b.Sample_categorical", "RepGAN_semiSup_RGB_run8b.Sample_continuous", "RepGAN_semiSup_RGB_run8b.Sample_noise", "RepGAN_semiSup_RGB_run8b.Sample_noise", "range", "sess.run", "sess.run", "range", "sess.run", "numpy.zeros", "str", "tensorflow.global_variables_initializer", "numpy.arange", "numpy.random.shuffle", "sess.run", "sess.run", "sess.run", "sess.run", "sess.run", "sess.run", "tf.summary.FileWriter.add_summary", "int", "range", "numpy.ones", "range", "numpy.empty", "range", "numpy.swapaxes().reshape", "numpy.min", "numpy.max", "matplotlib.imsave", "sess.run", "numpy.empty", "range", "numpy.swapaxes().reshape", "numpy.min", "numpy.max", "matplotlib.imsave", "numpy.set_printoptions", "sess.run", "numpy.max", "str", "numpy.floor", "currtestImg.reshape.reshape", "sess.run", "open", "myfile.write", "tf.train.Saver.save", "range", "scipy.ndimage.interpolation.zoom", "scipy.ndimage.interpolation.zoom", "open", "myfile.write", "str", "numpy.arange", "numpy.arange", "numpy.argmax", "numpy.sum", "sess.run", "RepGAN_semiSup_RGB_run8b.Sample_continuous", "numpy.tile", "RepGAN_semiSup_RGB_run8b.Sample_noise", "sess.run", "scipy.ndimage.interpolation.zoom", "numpy.swapaxes", "numpy.swapaxes", "numpy.min", "str", "str", "str", "str", "str", "str", "numpy.max", "str", "str", "str", "numpy.min", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_categorical", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_categorical", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise"], ["def", "train", "(", "model", ",", "trainImg", ",", "trainImg_sup", ",", "trainLabel", ",", "trainLabel_sup", ",", "testImg", ",", "testLabel", ",", "params", ",", "log_path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", "+", "'reconstruction/'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", "+", "'reconstruction/'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", "+", "'generation/'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", "+", "'generation/'", ")", "\n", "# Data statistics", "\n", "", "with", "open", "(", "log_path", "+", "'data_stat.txt'", ",", "'a'", ")", "as", "myfile", ":", "\n", "        ", "np", ".", "set_printoptions", "(", "precision", "=", "2", ",", "linewidth", "=", "10000", ")", "\n", "np", ".", "set_printoptions", "(", "threshold", "=", "10000", ")", "\n", "tempText", "=", "'min_train = '", "+", "str", "(", "np", ".", "min", "(", "trainImg", ")", ")", "+", "'  max_train = '", "+", "str", "(", "np", ".", "max", "(", "trainImg", ")", ")", "+", "'\\n'", "+", "'min_test = '", "+", "str", "(", "np", ".", "min", "(", "testImg", ")", ")", "+", "'  max_test = '", "+", "str", "(", "np", ".", "max", "(", "testImg", ")", ")", "+", "'\\n'", "\n", "myfile", ".", "write", "(", "tempText", ")", "\n", "# log all trainable variables", "\n", "", "with", "open", "(", "log_path", "+", "'model_variables.txt'", ",", "'a'", ")", "as", "myfile", ":", "\n", "        ", "tempText", "=", "''", "\n", "for", "var", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "            ", "tempText", "=", "tempText", "+", "str", "(", "var", ")", "+", "'\\n'", "\n", "", "myfile", ".", "write", "(", "tempText", ")", "\n", "\n", "", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "eye_cat", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cat", ")", ")", "\n", "for", "idx", "in", "range", "(", "params", ".", "Nsample", ")", ":", "\n", "            ", "eye_cat", "[", "idx", ",", "idx", "]", "=", "1.0", "\n", "", "zero_cont", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cont", ")", ")", "\n", "zero_noise", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "train_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "log_path", "+", "'Summary/train'", ")", "\n", "Nbatch_train", "=", "np", ".", "floor", "(", "trainImg", ".", "shape", "[", "0", "]", "/", "params", ".", "batch_size", ")", "\n", "# alterTrain", "\n", "bestAccuracy", "=", "-", "1.0", "\n", "count_batch", "=", "0", "\n", "preSave_step", "=", "-", "1.0", "\n", "for", "step", "in", "range", "(", "params", ".", "num_steps", ")", ":", "\n", "            ", "if", "count_batch", ">=", "Nbatch_train", ":", "\n", "                ", "count_batch", "=", "0", "\n", "idx", "=", "np", ".", "arange", "(", "trainImg", ".", "shape", "[", "0", "]", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idx", ")", "\n", "trainImg", "=", "trainImg", "[", "idx", "]", "\n", "trainLabel", "=", "trainLabel", "[", "idx", "]", "\n", "# Get current training batch", "\n", "", "currBatch", "=", "trainImg", "[", "count_batch", "*", "params", ".", "batch_size", ":", "(", "count_batch", "+", "1", ")", "*", "params", ".", "batch_size", "]", "\n", "currtrainLabel", "=", "trainLabel", "[", "count_batch", "*", "params", ".", "batch_size", ":", "(", "count_batch", "+", "1", ")", "*", "params", ".", "batch_size", "]", "\n", "# Get current supervised training batch", "\n", "Idxsup", "=", "np", ".", "random", ".", "choice", "(", "trainImg_sup", ".", "shape", "[", "0", "]", ",", "size", "=", "params", ".", "batch_size", ",", "replace", "=", "False", ")", "\n", "currBatch_sup", "=", "trainImg_sup", "[", "Idxsup", "]", "\n", "currtrainLabel_sup", "=", "trainLabel_sup", "[", "Idxsup", "]", "\n", "\n", "count_batch", "=", "count_batch", "+", "1", "\n", "\n", "currBatch", "=", "currBatch", ".", "reshape", "(", "[", "-", "1", ",", "32", ",", "32", ",", "3", "]", ")", "\n", "currBatch_sup", "=", "currBatch_sup", ".", "reshape", "(", "[", "-", "1", ",", "32", ",", "32", ",", "3", "]", ")", "\n", "currtrainLabel_oneHot", "=", "np", ".", "zeros", "(", "(", "currtrainLabel", ".", "shape", "[", "0", "]", ",", "10", ")", ")", "\n", "currtrainLabel_oneHot", "[", "np", ".", "arange", "(", "currtrainLabel", ".", "shape", "[", "0", "]", ")", ",", "currtrainLabel", "-", "1", "]", "=", "1", "\n", "currtrainLabel_sup_oneHot", "=", "np", ".", "zeros", "(", "(", "currtrainLabel_sup", ".", "shape", "[", "0", "]", ",", "10", ")", ")", "\n", "currtrainLabel_sup_oneHot", "[", "np", ".", "arange", "(", "currtrainLabel_sup", ".", "shape", "[", "0", "]", ")", ",", "currtrainLabel_sup", "-", "1", "]", "=", "1", "\n", "currBatch_perm", "=", "np", ".", "random", ".", "permutation", "(", "currBatch", ")", "\n", "real_cat", "=", "Sample_categorical", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", "\n", "real_cont", "=", "Sample_continuous", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", "\n", "real_noise", "=", "Sample_noise", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", "\n", "infoGAN_cat", "=", "Sample_categorical", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", "\n", "infoGAN_cont", "=", "Sample_continuous", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", "\n", "infoGAN_noise", "=", "Sample_noise", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", "\n", "test_noise", "=", "Sample_noise", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", "\n", "feedDict", "=", "{", "model", ".", "x", ":", "currBatch", ",", "\n", "model", ".", "currTrainLabel", ":", "currtrainLabel_oneHot", ",", "\n", "model", ".", "x_sup", ":", "currBatch_sup", ",", "\n", "model", ".", "currTrainLabel_sup", ":", "currtrainLabel_sup_oneHot", ",", "\n", "model", ".", "infoGAN_cat", ":", "infoGAN_cat", ",", "\n", "model", ".", "infoGAN_cont", ":", "infoGAN_cont", ",", "\n", "model", ".", "infoGAN_noise", ":", "infoGAN_noise", ",", "\n", "model", ".", "real_cat", ":", "real_cat", ",", "\n", "model", ".", "real_cont", ":", "real_cont", ",", "\n", "model", ".", "real_noise", ":", "real_noise", ",", "\n", "model", ".", "real_data", ":", "currBatch_perm", ",", "\n", "}", "\n", "# 1. infoGAN - emphasized", "\n", "for", "_", "in", "range", "(", "params", ".", "num_critis", ")", ":", "\n", "                ", "sess", ".", "run", "(", "model", ".", "optimizer_Discri_infoGAN", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "optimizer_Gene_infoGAN", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "optimizer_Q_infoGAN", ",", "feedDict", ")", "\n", "# 2. AAE", "\n", "", "sess", ".", "run", "(", "model", ".", "optimizer_ED", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "optimizer_classify", ",", "feedDict", ")", "\n", "for", "_", "in", "range", "(", "params", ".", "num_critis", ")", ":", "\n", "                ", "sess", ".", "run", "(", "model", ".", "optimizer_Discri", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "clip_discriminator", ",", "feedDict", ")", "\n", "", "sess", ".", "run", "(", "model", ".", "optimizer_Gene", ",", "feedDict", ")", "\n", "# Summary nodes", "\n", "if", "step", "%", "params", ".", "summaryStep", "==", "0", ":", "\n", "                ", "summary", "=", "sess", ".", "run", "(", "model", ".", "merged", ",", "feedDict", ")", "\n", "train_writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "# Save model & compute accuracy      ", "\n", "", "if", "step", "%", "params", ".", "saveStep", "==", "0", ":", "\n", "# Compute classification accuracy", "\n", "                ", "batch_test", "=", "1000", "\n", "N_testEpoch", "=", "int", "(", "np", ".", "floor", "(", "testImg", ".", "shape", "[", "0", "]", "/", "batch_test", ")", ")", "\n", "total_disagree", "=", "0.0", "\n", "for", "testEpoch", "in", "range", "(", "N_testEpoch", "+", "1", ")", ":", "\n", "                    ", "if", "testEpoch", "==", "N_testEpoch", ":", "\n", "                        ", "currtestImg", "=", "testImg", "[", "testEpoch", "*", "batch_test", ":", "]", "\n", "currtestLabel", "=", "testLabel", "[", "testEpoch", "*", "batch_test", ":", "]", "\n", "", "else", ":", "\n", "                        ", "currtestImg", "=", "testImg", "[", "testEpoch", "*", "batch_test", ":", "(", "1", "+", "testEpoch", ")", "*", "batch_test", "]", "\n", "currtestLabel", "=", "testLabel", "[", "testEpoch", "*", "batch_test", ":", "(", "1", "+", "testEpoch", ")", "*", "batch_test", "]", "\n", "\n", "", "currtestImg", "=", "currtestImg", ".", "reshape", "(", "[", "-", "1", ",", "32", ",", "32", ",", "3", "]", ")", "\n", "feedDict_test", "=", "{", "model", ".", "test_data", ":", "currtestImg", "}", "\n", "latent_cat", "=", "sess", ".", "run", "(", "model", ".", "test_cat", ",", "feedDict_test", ")", "\n", "predLabel", "=", "1", "+", "np", ".", "argmax", "(", "latent_cat", ",", "axis", "=", "1", ")", "\n", "total_disagree", "=", "total_disagree", "+", "np", ".", "sum", "(", "currtestLabel", "!=", "predLabel", ")", "\n", "", "currAccuracy", "=", "1.0", "-", "total_disagree", "/", "testImg", ".", "shape", "[", "0", "]", "\n", "with", "open", "(", "log_path", "+", "'accuracy.txt'", ",", "\"a\"", ")", "as", "myfile", ":", "\n", "                    ", "tempText", "=", "'Step = '", "+", "str", "(", "step", ")", "+", "'  count_batch = '", "+", "str", "(", "count_batch", ")", "+", "'  Accuracy = '", "+", "'{:.2f}'", ".", "format", "(", "currAccuracy", ")", "+", "'\\n'", "\n", "myfile", ".", "write", "(", "tempText", ")", "\n", "", "if", "currAccuracy", ">", "0.5", "and", "(", "currAccuracy", ">", "bestAccuracy", "or", "step", "-", "preSave_step", ">=", "5000", ")", ":", "\n", "                    ", "preSave_step", "=", "step", "\n", "if", "currAccuracy", ">", "bestAccuracy", ":", "\n", "                        ", "bestAccuracy", "=", "currAccuracy", "\n", "", "saver", ".", "save", "(", "sess", ",", "log_path", "+", "'ckpt/model_'", "+", "str", "(", "step", ")", "+", "'.ckpt'", ")", "\n", "# Generation image", "\n", "", "", "zero_noise", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "if", "step", "%", "params", ".", "showStep", "==", "0", ":", "\n", "                ", "Ntrial", "=", "10", "\n", "decoderSample_small", "=", "np", ".", "ones", "(", "(", "Ntrial", ",", "params", ".", "Nsample", ",", "32", ",", "32", ",", "3", ")", ",", "dtype", "=", "float", ")", "\n", "for", "idx", "in", "range", "(", "Ntrial", ")", ":", "\n", "                    ", "if", "idx", "==", "0", ":", "\n", "                        ", "feedDict_rand", "=", "{", "\n", "model", ".", "sample_cat", ":", "eye_cat", ",", "\n", "model", ".", "sample_cont", ":", "zero_cont", ",", "\n", "model", ".", "sample_noise", ":", "zero_noise", ",", "\n", "}", "\n", "decoderSample_small", "[", "idx", ",", ":", ",", ":", ",", ":", "]", "=", "sess", ".", "run", "(", "model", ".", "sample_output", ",", "feedDict_rand", ")", "\n", "", "else", ":", "\n", "                        ", "sample_cont_rand", "=", "Sample_continuous", "(", "1", ",", "params", ".", "dim_cont", ")", "\n", "sample_cont_rand", "=", "np", ".", "tile", "(", "sample_cont_rand", ",", "(", "params", ".", "Nsample", ",", "1", ")", ")", "\n", "test_noise", "=", "Sample_noise", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", "\n", "feedDict_rand", "=", "{", "\n", "model", ".", "sample_cat", ":", "eye_cat", ",", "\n", "model", ".", "sample_cont", ":", "sample_cont_rand", ",", "\n", "model", ".", "sample_noise", ":", "test_noise", ",", "\n", "}", "\n", "decoderSample_small", "[", "idx", ",", ":", ",", ":", ",", ":", "]", "=", "sess", ".", "run", "(", "model", ".", "sample_output", ",", "feedDict_rand", ")", "\n", "\n", "", "", "d", "=", "np", ".", "empty", "(", "(", "Ntrial", ",", "params", ".", "Nsample", ",", "32", "*", "3", ",", "32", "*", "3", ",", "3", ")", ",", "dtype", "=", "float", ")", "# reconstructed from ancestrol sampling", "\n", "for", "idx_t", "in", "range", "(", "Ntrial", ")", ":", "# for each trial", "\n", "                    ", "for", "idx_cat", "in", "range", "(", "params", ".", "Nsample", ")", ":", "# for each category", "\n", "                        ", "temp_d", "=", "decoderSample_small", "[", "idx_t", ",", "idx_cat", "]", "\n", "d", "[", "idx_t", ",", "idx_cat", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_d", ",", "(", "3", ",", "3", ",", "1", ")", ")", "\n", "", "", "outplot", "=", "np", ".", "swapaxes", "(", "d", ",", "1", ",", "2", ")", ".", "reshape", "(", "Ntrial", "*", "32", "*", "3", ",", "params", ".", "Nsample", "*", "32", "*", "3", ",", "3", ")", "\n", "outplot", "-=", "np", ".", "min", "(", "outplot", ")", "\n", "outplot", "/=", "np", ".", "max", "(", "outplot", ")", "\n", "plt", ".", "imsave", "(", "log_path", "+", "'generation/'", "+", "str", "(", "step", ")", "+", "'.png'", ",", "outplot", ")", "\n", "# Reconstruction image", "\n", "decoder_output", "=", "sess", ".", "run", "(", "model", ".", "decoder_output", ",", "feedDict", ")", "\n", "sampleIdx", "=", "3", "\n", "\n", "g", "=", "np", ".", "empty", "(", "(", "2", ",", "5", ",", "32", "*", "3", ",", "32", "*", "3", ",", "3", ")", ",", "dtype", "=", "float", ")", "# reconstructed from encoder output", "\n", "for", "idx", "in", "range", "(", "5", ")", ":", "\n", "                    ", "temp_g_real", "=", "currBatch", "[", "idx", "]", "\n", "temp_g_recon", "=", "decoder_output", "[", "idx", "]", "\n", "g", "[", "0", ",", "idx", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_g_real", ",", "(", "3", ",", "3", ",", "1", ")", ")", "\n", "g", "[", "1", ",", "idx", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_g_recon", ",", "(", "3", ",", "3", ",", "1", ")", ")", "\n", "", "outplot", "=", "np", ".", "swapaxes", "(", "g", ",", "1", ",", "2", ")", ".", "reshape", "(", "2", "*", "32", "*", "3", ",", "5", "*", "32", "*", "3", ",", "3", ")", "\n", "outplot", "-=", "np", ".", "min", "(", "outplot", ")", "\n", "outplot", "/=", "np", ".", "max", "(", "outplot", ")", "\n", "plt", ".", "imsave", "(", "log_path", "+", "'reconstruction/'", "+", "str", "(", "step", ")", "+", "'.png'", ",", "outplot", ")", "\n", "### DEBUG ##############################", "\n", "np", ".", "set_printoptions", "(", "precision", "=", "2", ")", "\n", "recon_cat", ",", "recon_mu", ",", "recon_sgm", ",", "recon_noise", "=", "sess", ".", "run", "(", "[", "model", ".", "latent_cat", ",", "\n", "model", ".", "latent_cont_mu", ",", "\n", "model", ".", "latent_cont_sigma", ",", "\n", "model", ".", "latent_noise", "]", ",", "\n", "feedDict", ")", "\n", "with", "open", "(", "log_path", "+", "'latent_var.txt'", ",", "\"a\"", ")", "as", "myfile", ":", "\n", "                    ", "tempText", "=", "'Step = '", "+", "str", "(", "step", ")", "+", "'\\n'", "+", "'real_label = '", "+", "str", "(", "currtrainLabel", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'recon_cat = \\n'", "+", "str", "(", "recon_cat", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'recon_mu = \\n'", "+", "str", "(", "recon_mu", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'recon_sgm = \\n'", "+", "str", "(", "recon_sgm", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'recon_noise = \\n'", "+", "str", "(", "recon_noise", "[", "0", ":", "5", "]", ")", "+", "'\\n'", "+", "'#################################################\\n'", "\n", "myfile", ".", "write", "(", "tempText", ")", "\n", "", "", "", "", "", "class", "trainParameter", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.old_models.RepGAN_semiSup_RGB_run8b.main": [[536, 581], ["scipy.loadmat", "scipy.loadmat", "numpy.squeeze", "numpy.squeeze", "numpy.moveaxis", "numpy.moveaxis", "int", "numpy.zeros", "numpy.zeros", "numpy.zeros", "tensorflow.reset_default_graph", "RepGAN_semiSup_RGB_run8b.trainParameter", "RepGAN_semiSup_RGB_run8b.RepGAN", "RepGAN_semiSup_RGB_run8b.train", "numpy.floor", "numpy.sum", "numpy.random.randint", "int", "int"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.train"], ["", "", "def", "main", "(", "log_path", ",", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", ":", "\n", "# Read data", "\n", "    ", "train_data", "=", "sio", ".", "loadmat", "(", "'./svhn_data/train_32x32.mat'", ")", "\n", "test_data", "=", "sio", ".", "loadmat", "(", "'./svhn_data/test_32x32.mat'", ")", "\n", "trainImg", "=", "train_data", "[", "'X'", "]", "\n", "trainLabel", "=", "train_data", "[", "'y'", "]", "\n", "testImg", "=", "test_data", "[", "'X'", "]", "\n", "testLabel", "=", "test_data", "[", "'y'", "]", "\n", "\n", "trainLabel", "=", "np", ".", "squeeze", "(", "trainLabel", ")", "\n", "testLabel", "=", "np", ".", "squeeze", "(", "testLabel", ")", "\n", "trainImg", "=", "np", ".", "moveaxis", "(", "trainImg", ",", "-", "1", ",", "0", ")", "\n", "testImg", "=", "np", ".", "moveaxis", "(", "testImg", ",", "-", "1", ",", "0", ")", "\n", "# Preprocessing", "\n", "trainImg", "=", "trainImg", "/", "255.0", "\n", "testImg", "=", "testImg", "/", "255.0", "\n", "# Pick the supervised samples", "\n", "N_supervised", "=", "1000", "\n", "N_sup_perclass", "=", "int", "(", "np", ".", "floor", "(", "N_supervised", "/", "10", ")", ")", "# currently assume 10 classes", "\n", "trainImg_sup", "=", "np", ".", "zeros", "(", "(", "N_sup_perclass", "*", "10", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "trainLabel_sup", "=", "np", ".", "zeros", "(", "(", "N_sup_perclass", "*", "10", ",", ")", ",", "dtype", "=", "np", ".", "int", ")", "\n", "counter", "=", "np", ".", "zeros", "(", "(", "10", ",", ")", ")", "\n", "while", "np", ".", "sum", "(", "counter", ")", "<", "N_sup_perclass", "*", "10", ":", "\n", "        ", "currIdx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "trainLabel", ".", "shape", "[", "0", "]", ")", "\n", "currTrainLabel", "=", "trainLabel", "[", "currIdx", "]", "-", "1", "# from 0 to 9", "\n", "if", "counter", "[", "currTrainLabel", "]", "<", "N_sup_perclass", ":", "\n", "            ", "tempIdx", "=", "N_sup_perclass", "*", "currTrainLabel", "+", "counter", "[", "currTrainLabel", "]", "\n", "trainImg_sup", "[", "int", "(", "tempIdx", ")", "]", "=", "trainImg", "[", "currIdx", "]", "\n", "trainLabel_sup", "[", "int", "(", "tempIdx", ")", "]", "=", "trainLabel", "[", "currIdx", "]", "# from 1 to 10", "\n", "counter", "[", "currTrainLabel", "]", "+=", "1", "\n", "\n", "\n", "", "", "'''\n    trainImg = trainImg.reshape(-1,32*32)\n    trainImg = skp.scale(trainImg)\n    trainImg = trainImg.reshape(-1,32,32)\n    testImg = testImg.reshape(-1,32*32)\n    testImg = skp.scale(testImg)\n    testImg = testImg.reshape(-1,32,32)\n    '''", "\n", "# Traininng", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "params", "=", "trainParameter", "(", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", "\n", "RepGAN_1", "=", "RepGAN", "(", "params", ")", "\n", "train", "(", "RepGAN_1", ",", "trainImg", ",", "trainImg_sup", ",", "trainLabel", ",", "trainLabel_sup", ",", "testImg", ",", "testLabel", ",", "params", ",", "log_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.convert2TFRecord_crop.get_image": [[10, 18], ["skimage.io.imread", "numpy.array().astype", "scipy.imresize", "numpy.array"], "function", ["None"], ["def", "get_image", "(", "image_path", ",", "\n", "resize_height", "=", "-", "1", ",", "resize_width", "=", "-", "1", ")", ":", "\n", "    ", "image", "=", "io", ".", "imread", "(", "image_path", ")", "\n", "image", "=", "image", "[", "50", ":", "175", ",", "40", ":", "130", "]", "\n", "if", "resize_height", ">", "0", "and", "resize_width", ">", "0", ":", "\n", "        ", "image", "=", "misc", ".", "imresize", "(", "image", ",", "(", "resize_height", ",", "resize_width", ")", ",", "'lanczos'", ")", "\n", "", "image", "=", "np", ".", "array", "(", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "return", "image", "\n", "", "def", "_int64_feature", "(", "value", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.convert2TFRecord_crop._int64_feature": [[18, 20], ["tensorflow.train.Feature", "tensorflow.train.Int64List"], "function", ["None"], ["", "def", "_int64_feature", "(", "value", ")", ":", "\n", "    ", "return", "tf", ".", "train", ".", "Feature", "(", "int64_list", "=", "tf", ".", "train", ".", "Int64List", "(", "value", "=", "[", "value", "]", ")", ")", "\n", "", "def", "_bytes_feature", "(", "value", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.convert2TFRecord_crop._bytes_feature": [[20, 22], ["tensorflow.train.Feature", "tensorflow.train.BytesList"], "function", ["None"], ["", "def", "_bytes_feature", "(", "value", ")", ":", "\n", "    ", "return", "tf", ".", "train", ".", "Feature", "(", "bytes_list", "=", "tf", ".", "train", ".", "BytesList", "(", "value", "=", "[", "value", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.RepGAN.__init__": [[101, 243], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.random_shuffle", "tensorflow.random_shuffle", "tensorflow.random_shuffle", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.summary.merge_all", "tensorflow.summary.merge_all", "tensorflow.summary.merge_all", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_semiSup_RGB_run8e_pipeline_run4.encoder", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e_pipeline_run4.decoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_semiSup_RGB_run8e_pipeline_run4.decoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e_pipeline_run4.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "RepGAN_semiSup_RGB_run8e_pipeline_run4.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e_pipeline_run4.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e_pipeline_run4.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e_pipeline_run4.decoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e_pipeline_run4.encoder", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e_pipeline_run4.D2d", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_semiSup_RGB_run8e_pipeline_run4.D2d", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "RepGAN_semiSup_RGB_run8e_pipeline_run4.variable_summaries", "tensorflow.control_dependencies", "tensorflow.control_dependencies", "tensorflow.control_dependencies", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "RepGAN_semiSup_RGB_run8e_pipeline_run4.RepGAN.clip_discriminator.append", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.square", "tensorflow.square", "tensorflow.square", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.log", "tensorflow.log", "tensorflow.log"], "methods", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.D2d", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.D2d", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.variable_summaries"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "### AAE ###", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'encoder'", ")", ":", "\n", "            ", "self", ".", "x", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "img_W", ",", "params", ".", "img_H", ",", "3", ")", ")", "\n", "self", ".", "latent_cat", ",", "self", ".", "latent_noise", "=", "encoder", "(", "self", ".", "x", ",", "\n", "params", ".", "N_cat", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cat'", ",", "self", ".", "latent_cat", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_noise'", ",", "self", ".", "latent_noise", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'decoder'", ")", ":", "\n", "            ", "self", ".", "decoder_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "latent_cat", ",", "self", ".", "latent_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "#self.xhat_flat_distribution = distributions.Bernoulli(probs = tf.clip_by_value(self.decoder_output, 1e-5, 1-1e-5))", "\n", "#self.expected_log_likelihood = tf.reduce_sum(self.xhat_flat_distribution.log_prob(self.x),[1,2,3])", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'decoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "sample_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "N_cat", "*", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "sample_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "self", ".", "sample_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "sample_cat", ",", "self", ".", "sample_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_training", "=", "False", ")", "\n", "\n", "", "self", ".", "real_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "N_cat", "*", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "real_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'Discri_cat'", ")", ":", "\n", "            ", "self", ".", "real_cat_prob", "=", "Discriminator", "(", "self", ".", "real_cat", ",", "\n", "params", ".", "dim_DS_cat_hiddn1", ",", "params", ".", "dim_DS_cat_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cat'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "latent_cat_reshaped", "=", "tf", ".", "reshape", "(", "self", ".", "latent_cat", ",", "shape", "=", "(", "-", "1", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "fake_cat_prob", "=", "Discriminator", "(", "self", ".", "latent_cat_reshaped", ",", "\n", "params", ".", "dim_DS_cat_hiddn1", ",", "params", ".", "dim_DS_cat_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_noise'", ")", ":", "\n", "            ", "self", ".", "real_noise_prob", "=", "Discriminator", "(", "self", ".", "real_noise", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_noise'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_noise_prob", "=", "Discriminator", "(", "self", ".", "latent_noise", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "### infoGAN ###", "\n", "# The generator/discriminator training part of infoGAN", "\n", "", "self", ".", "infoGAN_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "N_cat", "*", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "infoGAN_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", ")", "\n", "self", ".", "real_data", "=", "tf", ".", "random_shuffle", "(", "self", ".", "x", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'decoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "decoderGene_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "infoGAN_cat", ",", "self", ".", "infoGAN_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "# Use same encoder (variable share) to model Q()", "\n", "", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "Q_cat", ",", "_", "=", "encoder", "(", "self", ".", "decoderGene_output", ",", "\n", "params", ".", "N_cat", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "\n", "tf", ".", "summary", ".", "histogram", "(", "'debug_sampleNoise'", ",", "self", ".", "infoGAN_noise", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'D2d'", ")", ":", "\n", "            ", "self", ".", "decoderGene_data_prob", "=", "D2d", "(", "self", ".", "decoderGene_output", ",", "params", ".", "BatchNormDecay", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'D2d'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "real_data_prob", "=", "D2d", "(", "self", ".", "real_data", ",", "params", ".", "BatchNormDecay", ")", "\n", "# Loss functions", "\n", "# 1. reconstruction loss", "\n", "#self.loss_recon = -tf.reduce_mean(self.expected_log_likelihood)", "\n", "", "self", ".", "loss_recon", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "self", ".", "x", "-", "self", ".", "decoder_output", ")", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_recon'", ",", "self", ".", "loss_recon", ")", "\n", "# 2. mutual information loss", "\n", "self", ".", "loss_Q_cat", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "log", "(", "self", ".", "Q_cat", "+", "1e-8", ")", "*", "self", ".", "infoGAN_cat", ",", "1", ")", ")", "\n", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Q_cat'", ",", "self", ".", "loss_Q_cat", ")", "\n", "# 3. adversarial loss", "\n", "self", ".", "loss_Discri_cat", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_cat_prob", "-", "self", ".", "fake_cat_prob", ")", "\n", "self", ".", "loss_Gene_cat", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_cat_prob", ")", "\n", "self", ".", "loss_Discri_noise", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_noise_prob", "-", "self", ".", "fake_noise_prob", ")", "\n", "self", ".", "loss_Gene_noise", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_noise_prob", ")", "\n", "self", ".", "loss_Discri", "=", "self", ".", "loss_Discri_cat", "+", "self", ".", "loss_Discri_noise", "\n", "self", ".", "loss_Gene", "=", "self", ".", "loss_Gene_cat", "+", "self", ".", "loss_Gene_noise", "\n", "\n", "self", ".", "loss_Discri_decoder", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "log", "(", "self", ".", "real_data_prob", "+", "1e-8", ")", "+", "tf", ".", "log", "(", "1", "-", "self", ".", "decoderGene_data_prob", "+", "1e-8", ")", ")", "\n", "self", ".", "loss_Gene_decoder", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "log", "(", "self", ".", "decoderGene_data_prob", "+", "1e-8", ")", ")", "\n", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri_cat'", ",", "self", ".", "loss_Discri_cat", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri_noise'", ",", "self", ".", "loss_Discri_noise", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene_cat'", ",", "self", ".", "loss_Gene_cat", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene_noise'", ",", "self", ".", "loss_Gene_noise", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Discri'", ",", "self", ".", "loss_Discri", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Gene'", ",", "self", ".", "loss_Gene", ")", "\n", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_D2d'", ",", "self", ".", "loss_Discri_decoder", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_generator'", ",", "self", ".", "loss_Gene_decoder", ")", "\n", "# Variable list", "\n", "self", ".", "varlist_E", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'encoder/'", ")", "]", "\n", "self", ".", "varlist_D", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'decoder/'", ")", "]", "\n", "self", ".", "varlist_Q", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'encoder/'", ")", "]", "\n", "self", ".", "varlist_Discri_cat", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_cat/'", ")", "]", "\n", "self", ".", "varlist_Discri_noise", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_noise/'", ")", "]", "\n", "self", ".", "varlist_Discri_decoder", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'D2d/'", ")", "]", "\n", "\n", "self", ".", "varlist_ED", "=", "self", ".", "varlist_E", "+", "self", ".", "varlist_D", "\n", "self", ".", "varlist_Discri", "=", "self", ".", "varlist_Discri_cat", "+", "self", ".", "varlist_Discri_noise", "\n", "# Summary for model variables", "\n", "for", "var", "in", "self", ".", "varlist_ED", ":", "\n", "            ", "variable_summaries", "(", "var", ")", "\n", "# Optimizer - with dependency on 'update_ops' for tf.summary", "\n", "", "update_ops", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "update_ops", ")", ":", "\n", "### AAE ###", "\n", "            ", "self", ".", "optimizer_ED", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_recon", ",", "\n", "params", ".", "optimizer_recon", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_ED", ")", "\n", "self", ".", "optimizer_Discri", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Discri", ",", "\n", "params", ".", "optimizer_adv_discriminator", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Discri", ")", "\n", "self", ".", "optimizer_Gene", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Gene", ",", "\n", "params", ".", "optimizer_adv_generator", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_E", ")", "\n", "### infoGAN ###", "\n", "self", ".", "optimizer_Q_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Q_cat", ",", "\n", "params", ".", "optimizer_Q", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_D", "+", "self", ".", "varlist_Q", ")", "\n", "self", ".", "optimizer_Discri_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Discri_decoder", ",", "\n", "params", ".", "optimizer_adv_discriminator_infoGAN", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Discri_decoder", ")", "\n", "self", ".", "optimizer_Gene_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Gene_decoder", ",", "\n", "params", ".", "optimizer_adv_generator_infoGAN", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_D", ")", "\n", "# Clip the Discriminator parameters - WGAN", "\n", "", "self", ".", "clip_discriminator", "=", "[", "]", "\n", "for", "currVars", "in", "self", ".", "varlist_Discri", ":", "\n", "            ", "self", ".", "clip_discriminator", ".", "append", "(", "tf", ".", "assign", "(", "currVars", ",", "tf", ".", "clip_by_value", "(", "currVars", ",", "-", "params", ".", "c", ",", "params", ".", "c", ")", ")", ")", "\n", "# Merge all summary nodes", "\n", "", "self", ".", "merged", "=", "tf", ".", "summary", ".", "merge_all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.trainParameter.__init__": [[366, 401], ["tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", ":", "\n", "        ", "self", ".", "batch_size", "=", "128", "\n", "self", ".", "N_cat", "=", "10", "\n", "self", ".", "dim_cat", "=", "10", "\n", "self", ".", "dim_noise", "=", "128", "\n", "self", ".", "img_W", "=", "64", "\n", "self", ".", "img_H", "=", "64", "\n", "# Hidden dimension", "\n", "self", ".", "dim_DS_cat_hiddn1", "=", "3000", "# Discriminator - categorical", "\n", "self", ".", "dim_DS_cat_hiddn2", "=", "3000", "\n", "self", ".", "dim_DS_cont_hiddn1", "=", "3000", "# Discriminator - continuous", "\n", "self", ".", "dim_DS_cont_hiddn2", "=", "3000", "\n", "# Other", "\n", "self", ".", "num_steps", "=", "100000", "\n", "self", ".", "showStep", "=", "500", "\n", "self", ".", "saveStep", "=", "500", "\n", "self", ".", "summaryStep", "=", "200", "\n", "self", ".", "BatchNormDecay", "=", "0.95", "\n", "self", ".", "num_critis", "=", "5", "\n", "self", ".", "c", "=", "0.01", "\n", "# Optimizer", "\n", "self", ".", "LR_recon", "=", "LR_recon", "\n", "self", ".", "LR_adv", "=", "LR_adv", "\n", "self", ".", "LR_adv_infoGAN", "=", "LR_adv_infoGAN", "\n", "\n", "self", ".", "optimizer_recon", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_adv_discriminator", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_adv", ")", "\n", "self", ".", "optimizer_adv_generator", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_supervised", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "10", "*", "LR_recon", ")", "\n", "\n", "self", ".", "optimizer_Q", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_adv_infoGAN", ")", "\n", "self", ".", "optimizer_adv_generator_infoGAN", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_adv_discriminator_infoGAN", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_adv_infoGAN", ")", "\n", "# Ancestrol sampling (test the reconstruction ability of decoder)", "\n", "self", ".", "Nsample", "=", "10", "# number of batch in model.sample_output", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.variable_summaries": [[13, 17], ["var.name.replace", "tensorflow.name_scope", "tensorflow.summary.histogram"], "function", ["None"], ["def", "variable_summaries", "(", "var", ")", ":", "\n", "    ", "scopeName", "=", "'summary/'", "+", "var", ".", "name", ".", "replace", "(", "':'", ",", "'/'", ")", "\n", "with", "tf", ".", "name_scope", "(", "scopeName", ")", ":", "\n", "        ", "tf", ".", "summary", ".", "histogram", "(", "'histogram'", ",", "var", ")", "\n", "", "", "def", "lrelu", "(", "x", ",", "alpha", "=", "0.1", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.lrelu": [[17, 19], ["tensorflow.maximum"], "function", ["None"], ["", "", "def", "lrelu", "(", "x", ",", "alpha", "=", "0.1", ")", ":", "\n", "    ", "return", "tf", ".", "maximum", "(", "x", ",", "alpha", "*", "x", ")", "\n", "", "def", "encoder", "(", "x", ",", "N_cat", ",", "dim_categorical", ",", "dim_noise", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.encoder": [[19, 47], ["tensorflow.arg_scope", "RepGAN_semiSup_RGB_run8e_pipeline_run4.lrelu", "tensorflow.dropout", "RepGAN_semiSup_RGB_run8e_pipeline_run4.lrelu", "RepGAN_semiSup_RGB_run8e_pipeline_run4.lrelu", "tensorflow.flatten", "RepGAN_semiSup_RGB_run8e_pipeline_run4.lrelu", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.fully_connected", "tensorflow.variable_scope", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.concat", "tensorflow.variable_scope", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "encoder", "(", "x", ",", "N_cat", ",", "dim_categorical", ",", "dim_noise", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "x", ",", "num_outputs", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "dropout", "(", "net", ",", "keep_prob", "=", "0.8", ",", "is_training", "=", "flag_training", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "flatten", "(", "net", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "1024", ")", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'FC_cat'", ")", ":", "\n", "            ", "_cat0", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "_cat1", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "_cat2", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "_cat3", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "_cat4", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "_cat5", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "_cat6", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "_cat7", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "_cat8", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "_cat9", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "latent_cat", "=", "tf", ".", "concat", "(", "[", "_cat0", ",", "_cat1", ",", "_cat2", ",", "_cat3", ",", "_cat4", ",", "_cat5", ",", "\n", "_cat6", ",", "_cat7", ",", "_cat8", ",", "_cat9", "]", ",", "axis", "=", "1", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'FC_noise'", ")", ":", "\n", "            ", "noise", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_noise", ",", "activation_fn", "=", "None", ")", "\n", "", "", "return", "latent_cat", ",", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.decoder": [[48, 61], ["tensorflow.arg_scope", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.reshape", "tensorflow.conv2d_transpose", "tensorflow.conv2d_transpose", "tensorflow.conv2d_transpose"], "function", ["None"], ["", "def", "decoder", "(", "latent", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d_transpose", "]", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "# BN crucial for infoGAN here, otherwise no work", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", "\n", ")", ":", "\n", "        ", "net", "=", "slim", ".", "fully_connected", "(", "latent", ",", "1024", ")", "\n", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "8", "*", "8", "*", "256", ")", "\n", "net", "=", "tf", ".", "reshape", "(", "net", ",", "shape", "=", "[", "-", "1", ",", "8", ",", "8", ",", "256", "]", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", "\n", "xhat", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "3", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "activation_fn", "=", "None", ",", "normalizer_fn", "=", "None", ")", "\n", "", "return", "xhat", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.Discriminator": [[62, 75], ["tensorflow.arg_scope", "RepGAN_semiSup_RGB_run8e_pipeline_run4.lrelu", "RepGAN_semiSup_RGB_run8e_pipeline_run4.lrelu", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "Discriminator", "(", "latent_in", ",", "dim_DS_hiddn1", ",", "dim_DS_hiddn2", ",", "BatchNormDecay", ",", "flag_raw", "=", "False", ")", ":", "\n", "# For latent variables", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "#normalizer_fn=slim.batch_norm,", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "latent_in", ",", "dim_DS_hiddn1", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "dim_DS_hiddn2", ")", ")", "\n", "if", "flag_raw", ":", "\n", "            ", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "None", ")", "\n", "", "else", ":", "\n", "            ", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ")", "\n", "", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.D2d": [[76, 88], ["tensorflow.arg_scope", "RepGAN_semiSup_RGB_run8e_pipeline_run4.lrelu", "RepGAN_semiSup_RGB_run8e_pipeline_run4.lrelu", "tensorflow.flatten", "RepGAN_semiSup_RGB_run8e_pipeline_run4.lrelu", "tensorflow.fully_connected", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "D2d", "(", "xhat", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "# For decoder output", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "xhat", ",", "num_outputs", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "normalizer_fn", "=", "None", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "flatten", "(", "net", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "1024", ")", ")", "\n", "prob_realFake", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ",", "normalizer_fn", "=", "None", ")", "\n", "", "return", "prob_realFake", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.Sample_categorical": [[89, 94], ["numpy.zeros", "numpy.random.randint", "numpy.arange"], "function", ["None"], ["", "def", "Sample_categorical", "(", "size_batch", ",", "N_cat", ",", "size_categorical", ")", ":", "\n", "    ", "real_cat", "=", "np", ".", "zeros", "(", "(", "size_batch", "*", "N_cat", ",", "size_categorical", ")", ")", "\n", "rand_idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "size_categorical", ",", "N_cat", "*", "size_batch", ")", "\n", "real_cat", "[", "np", ".", "arange", "(", "size_batch", "*", "N_cat", ")", ",", "rand_idx", "]", "=", "1.0", "\n", "return", "real_cat", "# real_cat.shape = [N_cat*size_batch, size_categorical]", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.Sample_noise": [[95, 98], ["numpy.random.normal"], "function", ["None"], ["", "def", "Sample_noise", "(", "size_batch", ",", "size_noise", ")", ":", "\n", "    ", "noise", "=", "np", ".", "random", ".", "normal", "(", "loc", "=", "0.0", ",", "scale", "=", "0.5", ",", "size", "=", "(", "size_batch", ",", "size_noise", ")", ")", "\n", "return", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.train": [[246, 365], ["os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "open", "tensorflow.trainable_variables", "myfile.write", "tensorflow.Session", "tensorflow.global_variables_initializer().run", "tensorflow.train.Saver", "numpy.zeros", "range", "eye_cat.reshape.reshape", "numpy.zeros", "tensorflow.summary.FileWriter", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "range", "tf.train.Coordinator.request_stop", "tf.train.Coordinator.join", "sess.close", "sess.run", "RepGAN_semiSup_RGB_run8e_pipeline_run4.Sample_categorical", "RepGAN_semiSup_RGB_run8e_pipeline_run4.Sample_noise", "Sample_categorical().reshape", "RepGAN_semiSup_RGB_run8e_pipeline_run4.Sample_noise", "range", "sess.run", "sess.run", "range", "sess.run", "numpy.zeros", "tensorflow.global_variables_initializer", "sess.run", "sess.run", "sess.run", "sess.run", "tf.summary.FileWriter.add_summary", "tf.train.Saver.save", "numpy.ones", "range", "numpy.empty", "range", "numpy.swapaxes().reshape", "matplotlib.imsave", "sess.run", "numpy.empty", "range", "numpy.swapaxes().reshape", "matplotlib.imsave", "numpy.set_printoptions", "sess.run", "recon_cat[].reshape", "str", "RepGAN_semiSup_RGB_run8e_pipeline_run4.Sample_categorical", "range", "numpy.clip", "scipy.ndimage.interpolation.zoom", "scipy.ndimage.interpolation.zoom", "numpy.clip", "open", "myfile.write", "sess.run", "RepGAN_semiSup_RGB_run8e_pipeline_run4.Sample_noise", "sess.run", "scipy.ndimage.interpolation.zoom", "numpy.swapaxes", "numpy.swapaxes", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_categorical", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_categorical", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise"], ["def", "train", "(", "model", ",", "trainBatch", ",", "params", ",", "log_path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", "+", "'reconstruction/'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", "+", "'reconstruction/'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", "+", "'generation/'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", "+", "'generation/'", ")", "\n", "# log all trainable variables", "\n", "", "with", "open", "(", "log_path", "+", "'model_variables.txt'", ",", "'a'", ")", "as", "myfile", ":", "\n", "        ", "tempText", "=", "''", "\n", "for", "var", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "            ", "tempText", "=", "tempText", "+", "str", "(", "var", ")", "+", "'\\n'", "\n", "", "myfile", ".", "write", "(", "tempText", ")", "\n", "\n", "", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "eye_cat", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "N_cat", ",", "params", ".", "dim_cat", ")", ")", "\n", "for", "idx", "in", "range", "(", "params", ".", "Nsample", ")", ":", "\n", "            ", "eye_cat", "[", "idx", ",", "idx", ",", "1", "]", "=", "1.0", "\n", "", "eye_cat", "=", "eye_cat", ".", "reshape", "(", "-", "1", ",", "params", ".", "N_cat", "*", "params", ".", "dim_cat", ")", "\n", "zero_noise", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "train_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "log_path", "+", "'Summary/train'", ")", "\n", "# alterTrain", "\n", "bestAccuracy", "=", "-", "1.0", "\n", "count_batch", "=", "0", "\n", "preSave_step", "=", "-", "1.0", "\n", "# Create a coordinator and run all QueueRunner objects", "\n", "coord", "=", "tf", ".", "train", ".", "Coordinator", "(", ")", "\n", "threads", "=", "tf", ".", "train", ".", "start_queue_runners", "(", "coord", "=", "coord", ")", "\n", "for", "step", "in", "range", "(", "params", ".", "num_steps", ")", ":", "\n", "            ", "currBatch", "=", "sess", ".", "run", "(", "trainBatch", ")", "\n", "count_batch", "=", "count_batch", "+", "1", "\n", "real_cat", "=", "Sample_categorical", "(", "params", ".", "batch_size", ",", "params", ".", "N_cat", ",", "params", ".", "dim_cat", ")", "\n", "real_noise", "=", "Sample_noise", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", "\n", "infoGAN_cat", "=", "Sample_categorical", "(", "params", ".", "batch_size", ",", "params", ".", "N_cat", ",", "params", ".", "dim_cat", ")", ".", "reshape", "(", "params", ".", "batch_size", ",", "params", ".", "N_cat", "*", "params", ".", "dim_cat", ")", "\n", "infoGAN_noise", "=", "Sample_noise", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", "\n", "feedDict", "=", "{", "model", ".", "x", ":", "currBatch", ",", "\n", "model", ".", "infoGAN_cat", ":", "infoGAN_cat", ",", "\n", "model", ".", "infoGAN_noise", ":", "infoGAN_noise", ",", "\n", "model", ".", "real_cat", ":", "real_cat", ",", "\n", "model", ".", "real_noise", ":", "real_noise", ",", "\n", "}", "\n", "# 1. infoGAN - emphasized", "\n", "for", "_", "in", "range", "(", "params", ".", "num_critis", ")", ":", "\n", "                ", "sess", ".", "run", "(", "[", "model", ".", "optimizer_Discri_infoGAN", ",", "\n", "model", ".", "optimizer_Gene_infoGAN", "]", ",", "feedDict", ")", "\n", "", "sess", ".", "run", "(", "model", ".", "optimizer_Q_infoGAN", ",", "feedDict", ")", "\n", "# 2. AAE", "\n", "sess", ".", "run", "(", "model", ".", "optimizer_ED", ",", "feedDict", ")", "\n", "for", "_", "in", "range", "(", "params", ".", "num_critis", ")", ":", "\n", "                ", "sess", ".", "run", "(", "model", ".", "optimizer_Discri", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "clip_discriminator", ",", "feedDict", ")", "\n", "", "sess", ".", "run", "(", "model", ".", "optimizer_Gene", ",", "feedDict", ")", "\n", "# Summary nodes", "\n", "if", "step", "%", "params", ".", "summaryStep", "==", "0", ":", "\n", "                ", "summary", "=", "sess", ".", "run", "(", "model", ".", "merged", ",", "feedDict", ")", "\n", "train_writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "# Save model & compute accuracy      ", "\n", "", "if", "step", "%", "params", ".", "saveStep", "==", "0", ":", "\n", "                ", "saver", ".", "save", "(", "sess", ",", "log_path", "+", "'ckpt/model_'", "+", "str", "(", "step", ")", "+", "'.ckpt'", ")", "\n", "# Generation image", "\n", "", "zero_noise", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "if", "step", "%", "params", ".", "showStep", "==", "0", ":", "\n", "                ", "Ntrial", "=", "10", "\n", "decoderSample_small", "=", "np", ".", "ones", "(", "(", "Ntrial", ",", "params", ".", "Nsample", ",", "64", ",", "64", ",", "3", ")", ",", "dtype", "=", "float", ")", "\n", "for", "idx", "in", "range", "(", "Ntrial", ")", ":", "\n", "                    ", "if", "idx", "==", "0", ":", "\n", "                        ", "feedDict_rand", "=", "{", "\n", "model", ".", "sample_cat", ":", "eye_cat", ",", "\n", "model", ".", "sample_noise", ":", "zero_noise", ",", "\n", "}", "\n", "decoderSample_small", "[", "idx", ",", ":", ",", ":", ",", ":", "]", "=", "sess", ".", "run", "(", "model", ".", "sample_output", ",", "feedDict_rand", ")", "\n", "", "else", ":", "\n", "                        ", "test_noise", "=", "Sample_noise", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", "\n", "feedDict_rand", "=", "{", "\n", "model", ".", "sample_cat", ":", "eye_cat", ",", "\n", "model", ".", "sample_noise", ":", "test_noise", ",", "\n", "}", "\n", "decoderSample_small", "[", "idx", ",", ":", ",", ":", ",", ":", "]", "=", "sess", ".", "run", "(", "model", ".", "sample_output", ",", "feedDict_rand", ")", "\n", "\n", "", "", "d", "=", "np", ".", "empty", "(", "(", "Ntrial", ",", "params", ".", "Nsample", ",", "params", ".", "img_W", "*", "2", ",", "params", ".", "img_H", "*", "2", ",", "3", ")", ",", "dtype", "=", "float", ")", "\n", "for", "idx_t", "in", "range", "(", "Ntrial", ")", ":", "# for each trial", "\n", "                    ", "for", "idx_cat", "in", "range", "(", "params", ".", "Nsample", ")", ":", "# for each category", "\n", "                        ", "temp_d", "=", "decoderSample_small", "[", "idx_t", ",", "idx_cat", "]", "\n", "d", "[", "idx_t", ",", "idx_cat", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_d", ",", "(", "2", ",", "2", ",", "1", ")", ")", "\n", "", "", "outplot", "=", "np", ".", "swapaxes", "(", "d", ",", "1", ",", "2", ")", ".", "reshape", "(", "Ntrial", "*", "params", ".", "img_W", "*", "2", ",", "params", ".", "Nsample", "*", "params", ".", "img_H", "*", "2", ",", "3", ")", "\n", "outplot", "=", "np", ".", "clip", "(", "outplot", ",", "0.0", ",", "255.0", ")", "/", "255.0", "\n", "plt", ".", "imsave", "(", "log_path", "+", "'generation/'", "+", "str", "(", "step", ")", "+", "'.png'", ",", "outplot", ")", "\n", "# Reconstruction image", "\n", "decoder_output", "=", "sess", ".", "run", "(", "model", ".", "decoder_output", ",", "feedDict", ")", "\n", "g", "=", "np", ".", "empty", "(", "(", "2", ",", "5", ",", "params", ".", "img_W", "*", "2", ",", "params", ".", "img_H", "*", "2", ",", "3", ")", ",", "dtype", "=", "float", ")", "# reconstructed from encoder output", "\n", "for", "idx", "in", "range", "(", "5", ")", ":", "\n", "                    ", "temp_g_real", "=", "currBatch", "[", "idx", "]", "\n", "temp_g_recon", "=", "decoder_output", "[", "idx", "]", "\n", "g", "[", "0", ",", "idx", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_g_real", ",", "(", "2", ",", "2", ",", "1", ")", ")", "\n", "g", "[", "1", ",", "idx", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_g_recon", ",", "(", "2", ",", "2", ",", "1", ")", ")", "\n", "", "outplot", "=", "np", ".", "swapaxes", "(", "g", ",", "1", ",", "2", ")", ".", "reshape", "(", "2", "*", "params", ".", "img_W", "*", "2", ",", "5", "*", "params", ".", "img_H", "*", "2", ",", "3", ")", "\n", "outplot", "=", "np", ".", "clip", "(", "outplot", ",", "0.0", ",", "255.0", ")", "/", "255.0", "\n", "plt", ".", "imsave", "(", "log_path", "+", "'reconstruction/'", "+", "str", "(", "step", ")", "+", "'.png'", ",", "outplot", ")", "\n", "### DEBUG ##############################", "\n", "np", ".", "set_printoptions", "(", "precision", "=", "2", ")", "\n", "recon_cat", ",", "recon_noise", "=", "sess", ".", "run", "(", "[", "model", ".", "latent_cat", ",", "\n", "model", ".", "latent_noise", "]", ",", "\n", "feedDict", ")", "\n", "recon_cat", "=", "recon_cat", "[", "0", "]", ".", "reshape", "(", "params", ".", "N_cat", ",", "params", ".", "dim_cat", ")", "\n", "recon_noise", "=", "recon_noise", "[", "0", "]", "\n", "with", "open", "(", "log_path", "+", "'latent_var.txt'", ",", "\"a\"", ")", "as", "myfile", ":", "\n", "                    ", "tempText", "=", "'Step = '", "+", "str", "(", "step", ")", "+", "'\\n'", "+", "'recon_cat = \\n'", "+", "str", "(", "recon_cat", ")", "+", "'\\n'", "+", "'recon_noise = \\n'", "+", "str", "(", "recon_noise", ")", "+", "'\\n'", "+", "'#################################################\\n'", "\n", "myfile", ".", "write", "(", "tempText", ")", "\n", "# Stop the threads", "\n", "", "", "", "coord", ".", "request_stop", "(", ")", "\n", "# Wait for threads to stop", "\n", "coord", ".", "join", "(", "threads", ")", "\n", "sess", ".", "close", "(", ")", "\n", "", "", "class", "trainParameter", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.celebA.RepGAN_semiSup_RGB_run8e_pipeline_run4.main": [[404, 425], ["tensorflow.reset_default_graph", "RepGAN_semiSup_RGB_run8e_pipeline_run4.trainParameter", "tensorflow.train.string_input_producer", "tensorflow.TFRecordReader", "tf.TFRecordReader.read", "tensorflow.parse_single_example", "tensorflow.decode_raw", "tensorflow.reshape", "tensorflow.train.shuffle_batch", "RepGAN_semiSup_RGB_run8e_pipeline_run4.RepGAN", "RepGAN_semiSup_RGB_run8e_pipeline_run4.train", "tensorflow.FixedLenFeature"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.train"], ["", "", "def", "main", "(", "log_path", ",", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", ":", "\n", "#trainFiles = './celebA_data/trainData.tfrecords' # 64x64, [0,255]", "\n", "    ", "trainFiles", "=", "'./celebA_data/trainData_crop_float32_0_255.tfrecords'", "\n", "trainFeature", "=", "{", "'img_raw'", ":", "tf", ".", "FixedLenFeature", "(", "[", "]", ",", "tf", ".", "string", ")", "}", "\n", "# Initialize the graph, set parameters", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "params", "=", "trainParameter", "(", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", "\n", "\n", "# Build data-reading pipeline", "\n", "trainFiles_queue", "=", "tf", ".", "train", ".", "string_input_producer", "(", "[", "trainFiles", "]", ")", "\n", "reader", "=", "tf", ".", "TFRecordReader", "(", ")", "\n", "_", ",", "serialized_example", "=", "reader", ".", "read", "(", "trainFiles_queue", ")", "\n", "features", "=", "tf", ".", "parse_single_example", "(", "serialized_example", ",", "features", "=", "trainFeature", ")", "\n", "image", "=", "tf", ".", "decode_raw", "(", "features", "[", "'img_raw'", "]", ",", "tf", ".", "float32", ")", "\n", "image", "=", "tf", ".", "reshape", "(", "image", ",", "(", "64", ",", "64", ",", "3", ")", ")", "\n", "trainBatch", "=", "tf", ".", "train", ".", "shuffle_batch", "(", "[", "image", "]", ",", "batch_size", "=", "params", ".", "batch_size", ",", "\n", "capacity", "=", "4096", ",", "num_threads", "=", "1", ",", "min_after_dequeue", "=", "2048", ")", "\n", "# Build the model, feed in data pipeline", "\n", "RepGAN_1", "=", "RepGAN", "(", "params", ")", "\n", "# Training", "\n", "train", "(", "RepGAN_1", ",", "trainBatch", ",", "params", ",", "log_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.RepGAN.__init__": [[85, 305], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.learning.create_train_op", "tensorflow.summary.merge_all", "tensorflow.summary.merge_all", "tensorflow.summary.merge_all", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_4.encoder", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_4.encoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_4.decoder", "tensorflow.Bernoulli", "tensorflow.Bernoulli", "tensorflow.Bernoulli", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "RepGAN_4.decoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_4.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_4.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_4.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_4.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_4.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_4.Discriminator", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_4.decoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_4.decoder", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_4.encoder", "tensorflow.MultivariateNormalDiag", "tensorflow.MultivariateNormalDiag", "tensorflow.MultivariateNormalDiag", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_4.D2d", "tensorflow.variable_scope", "tensorflow.variable_scope", "tensorflow.variable_scope", "RepGAN_4.D2d", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "RepGAN_4.RepGAN.clip_discriminator.append", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "RepGAN_4.RepGAN.xhat_flat_distribution.log_prob", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "RepGAN_4.RepGAN.Q_cont_distribution.log_prob", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "tensorflow.trainable_variables", "v.name.startswith", "v.name.startswith", "v.name.startswith", "v.name.startswith", "tensorflow.assign", "tensorflow.assign", "tensorflow.assign", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.log", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.log", "tensorflow.log", "tensorflow.log"], "methods", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.D2d", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.D2d"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "### AAE ###", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'encoder'", ")", ":", "\n", "            ", "self", ".", "debug_sampleNoise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", ")", "\n", "self", ".", "debug_sampleCont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "x", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "28", ",", "28", ",", "1", ")", ")", "\n", "self", ".", "latent_cat", ",", "self", ".", "latent_cont_mu", ",", "self", ".", "latent_cont_sigma", ",", "self", ".", "latent_noise", ",", "self", ".", "debug_sigma_in", "=", "encoder", "(", "self", ".", "x", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_noise'", ",", "self", ".", "latent_noise", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_mu'", ",", "self", ".", "latent_cont_mu", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sigma'", ",", "self", ".", "latent_cont_sigma", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'sigma_in'", ",", "self", ".", "debug_sigma_in", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'sample_noise'", ",", "self", ".", "debug_sampleNoise", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'sample_cont'", ",", "self", ".", "debug_sampleCont", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "test_data", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "28", ",", "28", ",", "1", ")", ")", "\n", "self", ".", "test_cat", ",", "_", ",", "_", ",", "_", ",", "_", "=", "encoder", "(", "self", ".", "test_data", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_training", "=", "False", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'decoder'", ")", ":", "\n", "            ", "self", ".", "latent_cont_sample", "=", "self", ".", "latent_cont_mu", "+", "tf", ".", "multiply", "(", "self", ".", "latent_cont_sigma", ",", "tf", ".", "random_normal", "(", "[", "1", "]", ")", ")", "\n", "self", ".", "decoder_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "latent_cat", ",", "self", ".", "latent_cont_sample", ",", "self", ".", "latent_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "self", ".", "xhat_flat_distribution", "=", "distributions", ".", "Bernoulli", "(", "probs", "=", "tf", ".", "clip_by_value", "(", "self", ".", "decoder_output", ",", "1e-5", ",", "1", "-", "1e-5", ")", ")", "\n", "self", ".", "expected_log_likelihood", "=", "tf", ".", "reduce_sum", "(", "self", ".", "xhat_flat_distribution", ".", "log_prob", "(", "self", ".", "x", ")", ",", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "\n", "self", ".", "latent_cont_sample_clip", "=", "tf", ".", "clip_by_value", "(", "self", ".", "latent_cont_sample", ",", "-", "2.0", ",", "2.0", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sample'", ",", "self", ".", "latent_cont_sample", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "'latent_cont_sample_clip'", ",", "self", ".", "latent_cont_sample_clip", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'decoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "sample_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "sample_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "sample_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "self", ".", "sample_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "sample_cat", ",", "self", ".", "sample_cont", ",", "self", ".", "sample_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_training", "=", "False", ")", "\n", "", "self", ".", "real_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "real_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "real_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'Discri_cat'", ")", ":", "\n", "            ", "self", ".", "real_cat_prob", "=", "Discriminator", "(", "self", ".", "real_cat", ",", "\n", "params", ".", "dim_DS_cat_hiddn1", ",", "params", ".", "dim_DS_cat_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cat'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_cat_prob", "=", "Discriminator", "(", "self", ".", "latent_cat", ",", "\n", "params", ".", "dim_DS_cat_hiddn1", ",", "params", ".", "dim_DS_cat_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cont'", ")", ":", "\n", "            ", "self", ".", "real_cont_prob", "=", "Discriminator", "(", "self", ".", "real_cont", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_cont'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_cont_prob", "=", "Discriminator", "(", "self", ".", "latent_cont_sample", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_noise'", ")", ":", "\n", "            ", "self", ".", "real_noise_prob", "=", "Discriminator", "(", "self", ".", "real_noise", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discri_noise'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "fake_noise_prob", "=", "Discriminator", "(", "self", ".", "latent_noise", ",", "\n", "params", ".", "dim_DS_cont_hiddn1", ",", "params", ".", "dim_DS_cont_hiddn2", ",", "\n", "params", ".", "BatchNormDecay", ",", "\n", "flag_raw", "=", "True", ")", "\n", "### infoGAN ###", "\n", "# The generator/discriminator training part of infoGAN", "\n", "", "self", ".", "infoGAN_cat", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", ")", "\n", "self", ".", "infoGAN_cont", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", ")", "\n", "self", ".", "infoGAN_noise", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", ")", "\n", "zero_cont", "=", "tf", ".", "constant", "(", "0.0", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", ")", "\n", "zero_noise", "=", "tf", ".", "constant", "(", "0.0", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", ")", "\n", "self", ".", "real_data", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "params", ".", "batch_size", ",", "28", ",", "28", ",", "1", ")", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'decoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "decoderGene_output", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "infoGAN_cat", ",", "self", ".", "infoGAN_cont", ",", "self", ".", "infoGAN_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'decoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "heads", "=", "decoder", "(", "tf", ".", "concat", "(", "[", "self", ".", "infoGAN_cat", ",", "zero_cont", ",", "zero_noise", "]", ",", "1", ")", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "# Use same encoder (variable share) to model Q()", "\n", "", "with", "tf", ".", "variable_scope", "(", "'encoder'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "Q_cat", ",", "self", ".", "Q_cont_mu", ",", "self", ".", "Q_cont_sigma", ",", "_", ",", "self", ".", "Q_cont_sigma_in", "=", "encoder", "(", "self", ".", "decoderGene_output", ",", "\n", "params", ".", "dim_cat", ",", "\n", "params", ".", "dim_cont", ",", "\n", "params", ".", "dim_noise", ",", "\n", "params", ".", "BatchNormDecay", ")", "\n", "self", ".", "Q_cont_distribution", "=", "distributions", ".", "MultivariateNormalDiag", "(", "loc", "=", "self", ".", "Q_cont_mu", ",", "scale_diag", "=", "self", ".", "Q_cont_sigma", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'D2d'", ")", ":", "\n", "#self.decoderGene_data_prob = D2d(self.decoderGene_output, params.BatchNormDecay)", "\n", "            ", "self", ".", "decoderGene_data_prob", "=", "D2d", "(", "self", ".", "decoderGene_output", ",", "params", ".", "BatchNormDecay", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'D2d'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "self", ".", "real_data_prob", "=", "D2d", "(", "self", ".", "real_data", ",", "params", ".", "BatchNormDecay", ")", "\n", "\n", "# Loss functions", "\n", "# 1. reconstruction loss", "\n", "", "self", ".", "loss_recon", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "expected_log_likelihood", ")", "\n", "# 2. mutual information loss", "\n", "self", ".", "loss_Q_cat", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "log", "(", "self", ".", "Q_cat", "+", "1e-8", ")", "*", "self", ".", "infoGAN_cat", ",", "1", ")", ")", "\n", "self", ".", "loss_Q_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "Q_cont_distribution", ".", "log_prob", "(", "self", ".", "infoGAN_cont", ")", ")", "\n", "self", ".", "loss_Q", "=", "self", ".", "loss_Q_cat", "+", "self", ".", "loss_Q_cont", "\n", "\n", "self", ".", "debug_Q_L2", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "self", ".", "infoGAN_cont", "-", "self", ".", "Q_cont_mu", ")", ",", "axis", "=", "1", ")", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Q_cat'", ",", "self", ".", "loss_Q_cat", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Q_cont'", ",", "self", ".", "loss_Q_cont", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'loss_Q'", ",", "self", ".", "loss_Q", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "'Q_L2_loss'", ",", "self", ".", "debug_Q_L2", ")", "\n", "# 3. adversarial loss", "\n", "self", ".", "loss_Discri_cat", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_cat_prob", "-", "self", ".", "fake_cat_prob", ")", "\n", "self", ".", "loss_Gene_cat", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_cat_prob", ")", "\n", "self", ".", "loss_Discri_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_cont_prob", "-", "self", ".", "fake_cont_prob", ")", "\n", "self", ".", "loss_Gene_cont", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_cont_prob", ")", "\n", "self", ".", "loss_Discri_noise", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "real_noise_prob", "-", "self", ".", "fake_noise_prob", ")", "\n", "self", ".", "loss_Gene_noise", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "fake_noise_prob", ")", "\n", "self", ".", "loss_Discri", "=", "self", ".", "loss_Discri_cat", "+", "self", ".", "loss_Discri_cont", "+", "self", ".", "loss_Discri_noise", "\n", "self", ".", "loss_Gene", "=", "self", ".", "loss_Gene_cat", "+", "self", ".", "loss_Gene_cont", "+", "self", ".", "loss_Gene_noise", "\n", "\n", "self", ".", "loss_Discri_decoder", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "log", "(", "self", ".", "real_data_prob", "+", "1e-8", ")", "+", "\n", "tf", ".", "log", "(", "1", "-", "self", ".", "decoderGene_data_prob", "+", "1e-8", ")", ")", "\n", "self", ".", "loss_Gene_decoder", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "log", "(", "self", ".", "decoderGene_data_prob", "+", "1e-8", ")", ")", "\n", "### DEBUG #############################################", "\n", "self", ".", "debug_prob_real", "=", "tf", ".", "reduce_mean", "(", "self", ".", "real_data_prob", ")", "\n", "self", ".", "debug_prob_fake", "=", "tf", ".", "reduce_mean", "(", "self", ".", "decoderGene_data_prob", ")", "\n", "#4. xcorr loss -- different category", "\n", "'''\n        temp = tf.expand_dims(self.infoGAN_cat, axis=-1)-tf.transpose(tf.expand_dims(self.infoGAN_cat,axis=0),[0,2,1])\n        dist_cat = 0.5*tf.reduce_sum(tf.abs(temp),axis=1)\n\n        head_flat = tf.reshape(self.heads, [-1,784]) # shape = [batch_size, 784]\n        head_flat = head_flat - tf.reduce_mean(head_flat, axis=1, keep_dims=True)\n        head_flat = head_flat / tf.sqrt(tf.reduce_sum(head_flat*head_flat, axis=1, keep_dims=True))\n        temp = tf.multiply(tf.expand_dims(head_flat, axis=-1),\n                           tf.transpose(tf.expand_dims(head_flat,axis=0),[0,2,1]))\n        dist_head= tf.reduce_sum(temp,axis=1) #this is xcorr, larger means more similar\n        self.dist_head = dist_head\n        \n        gene_flat = tf.reshape(self.decoderGene_output, [-1,784]) # shape = [batch_size, 784]\n        gene_flat = gene_flat - tf.reduce_mean(gene_flat, axis=1, keep_dims=True)\n        gene_flat = gene_flat / tf.sqrt(tf.reduce_sum(gene_flat*gene_flat, axis=1, keep_dims=True))\n        temp = tf.multiply(tf.expand_dims(gene_flat, axis=-1),\n                           tf.transpose(tf.expand_dims(gene_flat,axis=0),[0,2,1]))\n        dist_gene= tf.reduce_sum(temp,axis=1)\n        self.dist_gene = dist_gene\n        \n        self.loss_xcorr_diffCat = 0.001*tf.reduce_mean(tf.multiply(dist_cat,dist_head) + \n                                                         tf.multiply(dist_cat,dist_gene))\n        self.loss_xcorr_sameCat = -0.001*tf.reduce_mean(tf.multiply(-(dist_cat-1.0),dist_gene))\n        self.loss_xcorr = self.loss_xcorr_sameCat + self.loss_xcorr_diffCat\n        '''", "\n", "# Variable list", "\n", "self", ".", "varlist_E", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'encoder/'", ")", "]", "\n", "self", ".", "varlist_D", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'decoder/'", ")", "]", "\n", "self", ".", "varlist_Discri_cat", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_cat/'", ")", "]", "\n", "self", ".", "varlist_Discri_cont", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_cont/'", ")", "]", "\n", "self", ".", "varlist_Discri_noise", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'Discri_noise/'", ")", "]", "\n", "self", ".", "varlist_Discri_decoder", "=", "[", "v", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "if", "v", ".", "name", ".", "startswith", "(", "'D2d/'", ")", "]", "\n", "\n", "self", ".", "varlist_ED", "=", "self", ".", "varlist_E", "+", "self", ".", "varlist_D", "\n", "self", ".", "varlist_Discri", "=", "self", ".", "varlist_Discri_cat", "+", "self", ".", "varlist_Discri_cont", "+", "self", ".", "varlist_Discri_noise", "\n", "# Updates ops for BatchNorm", "\n", "self", ".", "update_ops", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ")", "\n", "self", ".", "BN_E", "=", "[", "v", "for", "v", "in", "self", ".", "update_ops", "if", "v", ".", "name", ".", "startswith", "(", "'encoder'", ")", "]", "\n", "self", ".", "BN_D", "=", "[", "v", "for", "v", "in", "self", ".", "update_ops", "if", "v", ".", "name", ".", "startswith", "(", "'decoder'", ")", "]", "\n", "self", ".", "BN_D2d", "=", "[", "v", "for", "v", "in", "self", ".", "update_ops", "if", "v", ".", "name", ".", "startswith", "(", "'D2d'", ")", "]", "\n", "# Optimizer - with dependency on 'update_ops' for tf.summary", "\n", "### AAE ###", "\n", "self", ".", "optimizer_ED", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_recon", ",", "\n", "params", ".", "optimizer_recon", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_ED", ",", "\n", "update_ops", "=", "self", ".", "BN_E", "+", "self", ".", "BN_D", ")", "\n", "\n", "self", ".", "optimizer_Discri", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Discri", ",", "\n", "params", ".", "optimizer_adv_discriminator", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Discri", ",", "\n", "update_ops", "=", "[", "]", ")", "\n", "\n", "self", ".", "optimizer_Gene", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Gene", ",", "\n", "params", ".", "optimizer_adv_generator", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_E", ",", "\n", "update_ops", "=", "self", ".", "BN_E", ")", "\n", "### infoGAN ###", "\n", "self", ".", "optimizer_Q_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Q", ",", "\n", "params", ".", "optimizer_Q", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_ED", ",", "\n", "update_ops", "=", "self", ".", "BN_E", "+", "self", ".", "BN_D", ")", "\n", "\n", "self", ".", "optimizer_Discri_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Discri_decoder", ",", "\n", "params", ".", "optimizer_adv_discriminator_infoGAN", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_Discri_decoder", ",", "\n", "update_ops", "=", "self", ".", "BN_D2d", ")", "\n", "\n", "# self.optimizer_Gene_infoGAN = slim.learning.create_train_op(self.loss_Gene_decoder + self.loss_xcorr,", "\n", "self", ".", "optimizer_Gene_infoGAN", "=", "slim", ".", "learning", ".", "create_train_op", "(", "self", ".", "loss_Gene_decoder", ",", "\n", "params", ".", "optimizer_adv_generator_infoGAN", ",", "\n", "variables_to_train", "=", "self", ".", "varlist_D", ",", "\n", "update_ops", "=", "self", ".", "BN_D", ")", "\n", "# Clip the Discriminator parameters - WGAN", "\n", "self", ".", "clip_discriminator", "=", "[", "]", "\n", "for", "currVars", "in", "self", ".", "varlist_Discri", ":", "\n", "            ", "self", ".", "clip_discriminator", ".", "append", "(", "tf", ".", "assign", "(", "currVars", ",", "tf", ".", "clip_by_value", "(", "currVars", ",", "-", "params", ".", "c", ",", "params", ".", "c", ")", ")", ")", "\n", "# Merge all summary nodes", "\n", "", "self", ".", "merged", "=", "tf", ".", "summary", ".", "merge_all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.trainParameter.__init__": [[490, 522], ["tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.RMSPropOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", ":", "\n", "        ", "self", ".", "batch_size", "=", "128", "\n", "self", ".", "dim_x", "=", "784", "\n", "self", ".", "dim_cat", "=", "10", "\n", "self", ".", "dim_cont", "=", "2", "\n", "self", ".", "dim_noise", "=", "20", "\n", "# Hidden dimension", "\n", "self", ".", "dim_DS_cat_hiddn1", "=", "3000", "# Discriminator - categorical", "\n", "self", ".", "dim_DS_cat_hiddn2", "=", "3000", "\n", "self", ".", "dim_DS_cont_hiddn1", "=", "3000", "# Discriminator - continuous", "\n", "self", ".", "dim_DS_cont_hiddn2", "=", "3000", "\n", "# Other", "\n", "self", ".", "num_steps", "=", "60000", "\n", "self", ".", "showStep", "=", "500", "\n", "self", ".", "saveStep", "=", "500", "\n", "self", ".", "BatchNormDecay", "=", "0.95", "\n", "self", ".", "num_critis", "=", "5", "\n", "self", ".", "c", "=", "0.01", "\n", "# Optimizer", "\n", "self", ".", "LR_recon", "=", "LR_recon", "\n", "self", ".", "LR_adv", "=", "LR_adv", "\n", "self", ".", "LR_adv_infoGAN", "=", "LR_adv_infoGAN", "\n", "\n", "self", ".", "optimizer_recon", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_adv_discriminator", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_adv", ")", "\n", "self", ".", "optimizer_adv_generator", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "LR_recon", ")", "\n", "\n", "self", ".", "optimizer_Q", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_adv_infoGAN", ")", "\n", "self", ".", "optimizer_adv_generator_infoGAN", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_recon", ")", "\n", "self", ".", "optimizer_adv_discriminator_infoGAN", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "LR_adv_infoGAN", ")", "\n", "# Ancestrol sampling (test the reconstruction ability of decoder)", "\n", "self", ".", "Nsample", "=", "10", "# number of batch in model.sample_output", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu": [[11, 13], ["tensorflow.maximum"], "function", ["None"], ["def", "lrelu", "(", "x", ",", "alpha", "=", "0.1", ")", ":", "\n", "    ", "return", "tf", ".", "maximum", "(", "x", ",", "alpha", "*", "x", ")", "\n", "", "def", "encoder", "(", "x", ",", "dim_categorical", ",", "dim_continuous", ",", "dim_noise", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.encoder": [[13, 29], ["tensorflow.arg_scope", "RepGAN_4.lrelu", "RepGAN_4.lrelu", "tensorflow.flatten", "RepGAN_4.lrelu", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.sigmoid", "tensorflow.fully_connected", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "encoder", "(", "x", ",", "dim_categorical", ",", "dim_continuous", ",", "dim_noise", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "x", ",", "num_outputs", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "# AAE paper use 20% dropout on this layer", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "flatten", "(", "net", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "1024", ")", ")", "\n", "\n", "latent_cat", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_categorical", ",", "activation_fn", "=", "tf", ".", "nn", ".", "softmax", ")", "\n", "mu", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_continuous", ",", "activation_fn", "=", "None", ")", "\n", "debug_sigma_in", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_continuous", ",", "activation_fn", "=", "None", ")", "\n", "sigma", "=", "tf", ".", "sigmoid", "(", "debug_sigma_in", ")", "\n", "noise", "=", "slim", ".", "fully_connected", "(", "net", ",", "dim_noise", ",", "activation_fn", "=", "None", ")", "\n", "", "return", "latent_cat", ",", "mu", ",", "sigma", ",", "noise", ",", "debug_sigma_in", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.decoder": [[30, 42], ["tensorflow.arg_scope", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.reshape", "tensorflow.conv2d_transpose", "tensorflow.conv2d_transpose"], "function", ["None"], ["", "def", "decoder", "(", "latent", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d_transpose", "]", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "# BN crucial for infoGAN here, otherwise no work", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", "\n", ")", ":", "\n", "        ", "net", "=", "slim", ".", "fully_connected", "(", "latent", ",", "1024", ")", "\n", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "7", "*", "7", "*", "128", ")", "\n", "net", "=", "tf", ".", "reshape", "(", "net", ",", "shape", "=", "[", "-", "1", ",", "7", ",", "7", ",", "128", "]", ")", "\n", "net", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", "\n", "xhat", "=", "slim", ".", "conv2d_transpose", "(", "net", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ",", "normalizer_fn", "=", "None", ")", "\n", "", "return", "xhat", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Discriminator": [[43, 56], ["tensorflow.arg_scope", "RepGAN_4.lrelu", "RepGAN_4.lrelu", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "Discriminator", "(", "latent_in", ",", "dim_DS_hiddn1", ",", "dim_DS_hiddn2", ",", "BatchNormDecay", ",", "flag_raw", "=", "False", ")", ":", "\n", "# For latent variables", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "#normalizer_fn=slim.batch_norm,", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "latent_in", ",", "dim_DS_hiddn1", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "dim_DS_hiddn2", ")", ")", "\n", "if", "flag_raw", ":", "\n", "            ", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "None", ")", "\n", "", "else", ":", "\n", "            ", "net", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ")", "\n", "", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.D2d": [[57, 69], ["tensorflow.arg_scope", "RepGAN_4.lrelu", "RepGAN_4.lrelu", "tensorflow.flatten", "RepGAN_4.lrelu", "tensorflow.fully_connected", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.fully_connected"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.lrelu"], ["", "def", "D2d", "(", "xhat", ",", "BatchNormDecay", ",", "flag_training", "=", "True", ")", ":", "\n", "# For decoder output", "\n", "    ", "with", "slim", ".", "arg_scope", "(", "[", "slim", ".", "fully_connected", ",", "slim", ".", "conv2d", "]", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "slim", ".", "batch_norm", ",", "\n", "normalizer_params", "=", "{", "'decay'", ":", "BatchNormDecay", ",", "'is_training'", ":", "flag_training", "}", ")", ":", "\n", "        ", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "xhat", ",", "num_outputs", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "normalizer_fn", "=", "None", ")", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "conv2d", "(", "net", ",", "num_outputs", "=", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ")", ")", "\n", "net", "=", "slim", ".", "flatten", "(", "net", ")", "\n", "net", "=", "lrelu", "(", "slim", ".", "fully_connected", "(", "net", ",", "1024", ")", ")", "\n", "prob_realFake", "=", "slim", ".", "fully_connected", "(", "net", ",", "1", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ",", "normalizer_fn", "=", "None", ")", "\n", "", "return", "prob_realFake", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_categorical": [[70, 75], ["numpy.zeros", "numpy.random.randint", "numpy.arange"], "function", ["None"], ["", "def", "Sample_categorical", "(", "size_batch", ",", "size_categorical", ")", ":", "\n", "    ", "real_cat", "=", "np", ".", "zeros", "(", "(", "size_batch", ",", "size_categorical", ")", ")", "\n", "rand_idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "size_categorical", ",", "size_batch", ")", "\n", "real_cat", "[", "np", ".", "arange", "(", "size_batch", ")", ",", "rand_idx", "]", "=", "1.0", "\n", "return", "real_cat", "\n", "", "def", "Sample_continuous", "(", "size_batch", ",", "size_continuous", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous": [[75, 79], ["numpy.random.normal"], "function", ["None"], ["", "def", "Sample_continuous", "(", "size_batch", ",", "size_continuous", ")", ":", "\n", "#real_cont = np.random.uniform(low=-1.0, high=1.0000001, size=(size_batch, size_continuous))", "\n", "    ", "real_cont", "=", "np", ".", "random", ".", "normal", "(", "loc", "=", "0.0", ",", "scale", "=", "0.5", ",", "size", "=", "(", "size_batch", ",", "size_continuous", ")", ")", "\n", "return", "real_cont", "\n", "", "def", "Sample_noise", "(", "size_batch", ",", "size_noise", ")", ":", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise": [[79, 82], ["numpy.random.normal"], "function", ["None"], ["", "def", "Sample_noise", "(", "size_batch", ",", "size_noise", ")", ":", "\n", "    ", "noise", "=", "np", ".", "random", ".", "normal", "(", "loc", "=", "0.0", ",", "scale", "=", "0.3", ",", "size", "=", "(", "size_batch", ",", "size_noise", ")", ")", "\n", "return", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.train": [[308, 488], ["os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "tensorflow.Session", "tensorflow.global_variables_initializer().run", "tensorflow.train.Saver", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "testImg.reshape.reshape", "tensorflow.summary.FileWriter", "range", "data.train.next_batch", "currBatch.reshape.reshape", "numpy.random.permutation", "RepGAN_4.Sample_categorical", "RepGAN_4.Sample_continuous", "RepGAN_4.Sample_noise", "RepGAN_4.Sample_categorical", "RepGAN_4.Sample_continuous", "RepGAN_4.Sample_noise", "RepGAN_4.Sample_noise", "RepGAN_4.Sample_noise", "RepGAN_4.Sample_continuous", "range", "sess.run", "range", "sess.run", "sess.run", "sess.run", "numpy.zeros", "tensorflow.global_variables_initializer", "sess.run", "sess.run", "sess.run", "sess.run", "sess.run", "sess.run", "tf.summary.FileWriter.add_summary", "sess.run", "sess.run", "numpy.zeros", "range", "int", "range", "sess.run", "sess.run", "sess.run", "sess.run", "sess.run", "numpy.set_printoptions", "numpy.set_printoptions", "numpy.ones", "range", "numpy.empty", "range", "numpy.swapaxes().reshape", "matplotlib.imsave", "sess.run", "numpy.empty", "range", "numpy.swapaxes().reshape", "matplotlib.imsave", "open", "numpy.set_printoptions", "numpy.set_printoptions", "myfile.write", "numpy.argmin", "data.test.next_batch", "currtestImg.reshape.reshape", "sess.run", "numpy.argmax", "open", "myfile.write", "open", "myfile.write", "open", "myfile.write", "range", "currBatch[].reshape", "decoder_output[].reshape", "scipy.ndimage.interpolation.zoom", "scipy.ndimage.interpolation.zoom", "sess.run", "RepGAN_4.Sample_continuous", "numpy.tile", "RepGAN_4.Sample_noise", "sess.run", "decoderSample_small[].reshape", "scipy.ndimage.interpolation.zoom", "numpy.swapaxes", "numpy.swapaxes", "str", "numpy.absolute().sum", "str", "str", "str", "numpy.absolute", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_categorical", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_categorical", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_continuous", "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.Sample_noise"], ["def", "train", "(", "model", ",", "data", ",", "params", ",", "log_path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", "+", "'reconstruction/'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", "+", "'reconstruction/'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", "+", "'generation/'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", "+", "'generation/'", ")", "\n", "\n", "", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "eye_cat", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cat", ")", ")", "\n", "for", "idx", "in", "range", "(", "params", ".", "Nsample", ")", ":", "\n", "            ", "eye_cat", "[", "idx", ",", "idx", "]", "=", "1.0", "\n", "", "zero_cont", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_cont", ")", ")", "\n", "zero_noise", "=", "np", ".", "zeros", "(", "(", "10", ",", "params", ".", "dim_noise", ")", ")", "\n", "testImg", ",", "trueLabel", "=", "data", ".", "test", ".", "images", ",", "data", ".", "test", ".", "labels", "\n", "testImg", "=", "testImg", ".", "reshape", "(", "[", "-", "1", ",", "28", ",", "28", ",", "1", "]", ")", "\n", "train_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "log_path", "+", "'Summary/train'", ")", "\n", "# alterTrain", "\n", "bestAccuracy", "=", "-", "1.0", "\n", "flag_D2d_train", "=", "True", "\n", "for", "step", "in", "range", "(", "params", ".", "num_steps", ")", ":", "\n", "            ", "currBatch", ",", "currLabel", "=", "data", ".", "train", ".", "next_batch", "(", "params", ".", "batch_size", ")", "\n", "currBatch", "=", "currBatch", ".", "reshape", "(", "[", "-", "1", ",", "28", ",", "28", ",", "1", "]", ")", "\n", "currBatch_perm", "=", "np", ".", "random", ".", "permutation", "(", "currBatch", ")", "\n", "real_cat", "=", "Sample_categorical", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", "\n", "real_cont", "=", "Sample_continuous", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", "\n", "real_noise", "=", "Sample_noise", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", "\n", "infoGAN_cat", "=", "Sample_categorical", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cat", ")", "\n", "infoGAN_cont", "=", "Sample_continuous", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", "\n", "infoGAN_noise", "=", "Sample_noise", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", "\n", "test_noise", "=", "Sample_noise", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", "\n", "debug_sampleNoise", "=", "Sample_noise", "(", "params", ".", "batch_size", ",", "params", ".", "dim_noise", ")", "\n", "debug_sampleCont", "=", "Sample_continuous", "(", "params", ".", "batch_size", ",", "params", ".", "dim_cont", ")", "\n", "feedDict", "=", "{", "model", ".", "x", ":", "currBatch", ",", "\n", "model", ".", "infoGAN_cat", ":", "infoGAN_cat", ",", "\n", "model", ".", "infoGAN_cont", ":", "infoGAN_cont", ",", "\n", "model", ".", "infoGAN_noise", ":", "infoGAN_noise", ",", "\n", "model", ".", "real_cat", ":", "real_cat", ",", "\n", "model", ".", "real_cont", ":", "real_cont", ",", "\n", "model", ".", "real_noise", ":", "real_noise", ",", "\n", "model", ".", "real_data", ":", "currBatch_perm", ",", "\n", "model", ".", "debug_sampleNoise", ":", "debug_sampleNoise", ",", "\n", "model", ".", "debug_sampleCont", ":", "debug_sampleCont", ",", "\n", "}", "\n", "# 1. infoGAN - emphasized", "\n", "for", "_", "in", "range", "(", "params", ".", "num_critis", ")", ":", "\n", "#if flag_D2d_train:", "\n", "                ", "sess", ".", "run", "(", "model", ".", "optimizer_Discri_infoGAN", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "optimizer_Gene_infoGAN", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "optimizer_Q_infoGAN", ",", "feedDict", ")", "\n", "# 2. AAE", "\n", "", "sess", ".", "run", "(", "model", ".", "optimizer_ED", ",", "feedDict", ")", "\n", "for", "_", "in", "range", "(", "params", ".", "num_critis", ")", ":", "\n", "                ", "sess", ".", "run", "(", "model", ".", "optimizer_Discri", ",", "feedDict", ")", "\n", "sess", ".", "run", "(", "model", ".", "clip_discriminator", ",", "feedDict", ")", "\n", "", "sess", ".", "run", "(", "model", ".", "optimizer_Gene", ",", "feedDict", ")", "\n", "# 3. Balance", "\n", "debug_prob_real", "=", "sess", ".", "run", "(", "model", ".", "debug_prob_real", ",", "feedDict", ")", "\n", "debug_prob_fake", "=", "sess", ".", "run", "(", "model", ".", "debug_prob_fake", ",", "feedDict", ")", "\n", "currRatio", "=", "debug_prob_fake", "/", "debug_prob_real", "\n", "'''\n            flag_D2d_train=True\n            if currRatio<0.2:\n                flag_D2d_train=False\n            '''", "\n", "# Summary nodes", "\n", "if", "step", "%", "500", "==", "0", ":", "\n", "                ", "summary", "=", "sess", ".", "run", "(", "model", ".", "merged", ",", "feedDict", ")", "\n", "train_writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "latent_noise", "=", "sess", ".", "run", "(", "model", ".", "latent_noise", ",", "feedDict", ")", "\n", "with", "open", "(", "log_path", "+", "'latent_noise.txt'", ",", "\"a\"", ")", "as", "myfile", ":", "\n", "                    ", "np", ".", "set_printoptions", "(", "precision", "=", "3", ")", "\n", "np", ".", "set_printoptions", "(", "linewidth", "=", "10000", ")", "\n", "tempText", "=", "'Step = '", "+", "str", "(", "step", ")", "+", "'\\n'", "+", "'latent_noise = \\n'", "+", "str", "(", "latent_noise", "[", "0", ":", "10", ",", ":", "]", ")", "+", "'\\n'", "\n", "myfile", ".", "write", "(", "tempText", ")", "\n", "# Save model & compute accuracy      ", "\n", "", "", "if", "step", "%", "params", ".", "saveStep", "==", "0", ":", "\n", "                ", "feedDict_save", "=", "{", "\n", "model", ".", "sample_cat", ":", "eye_cat", ",", "\n", "model", ".", "sample_cont", ":", "zero_cont", ",", "\n", "model", ".", "sample_noise", ":", "zero_noise", ",", "\n", "}", "\n", "clusterHead", "=", "sess", ".", "run", "(", "model", ".", "sample_output", ",", "feedDict_save", ")", "\n", "# Find the true label of clusterHead", "\n", "headLabel", "=", "np", ".", "zeros", "(", "(", "clusterHead", ".", "shape", "[", "0", "]", ",", "params", ".", "dim_cat", ")", ")", "\n", "for", "idxHead", "in", "range", "(", "clusterHead", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "currMSE", "=", "(", "(", "testImg", "-", "clusterHead", "[", "idxHead", "]", ")", "**", "2", ")", ".", "mean", "(", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "bestMatch", "=", "np", ".", "argmin", "(", "currMSE", ")", "\n", "headLabel", "[", "idxHead", "]", "=", "trueLabel", "[", "bestMatch", "]", "\n", "# Compute classification accuracy", "\n", "# test set in batches (solve the OOM problem)", "\n", "", "testBatch", "=", "1000", "\n", "testIttrN", "=", "int", "(", "testImg", ".", "shape", "[", "0", "]", "/", "testBatch", ")", "\n", "total_disagree", "=", "0", "\n", "for", "testIdx", "in", "range", "(", "testIttrN", ")", ":", "\n", "                    ", "currtestImg", ",", "currtrueLabel", "=", "data", ".", "test", ".", "next_batch", "(", "testBatch", ")", "\n", "currtestImg", "=", "currtestImg", ".", "reshape", "(", "[", "-", "1", ",", "28", ",", "28", ",", "1", "]", ")", "\n", "feedDict_test", "=", "{", "model", ".", "test_data", ":", "currtestImg", ",", "\n", "}", "\n", "latent_cat", "=", "sess", ".", "run", "(", "model", ".", "test_cat", ",", "feedDict_test", ")", "\n", "# Compute classification accuracy", "\n", "latent_cat_idx", "=", "np", ".", "argmax", "(", "latent_cat", ",", "axis", "=", "1", ")", "# classification label of test images", "\n", "total_disagree", "=", "total_disagree", "+", "np", ".", "absolute", "(", "(", "currtrueLabel", "-", "headLabel", "[", "latent_cat_idx", "]", ")", ")", ".", "sum", "(", ")", "/", "2.0", "\n", "", "currAccuracy", "=", "1.0", "-", "total_disagree", "/", "testImg", ".", "shape", "[", "0", "]", "\n", "with", "open", "(", "log_path", "+", "'accuracy.txt'", ",", "\"a\"", ")", "as", "myfile", ":", "\n", "                    ", "tempText", "=", "'Step = '", "+", "str", "(", "step", ")", "+", "'    Accuracy = '", "+", "'{:.2f}'", ".", "format", "(", "currAccuracy", ")", "+", "'\\n'", "\n", "myfile", ".", "write", "(", "tempText", ")", "\n", "", "if", "currAccuracy", ">", "bestAccuracy", ":", "\n", "                    ", "bestAccuracy", "=", "currAccuracy", "\n", "#saver.save(sess, log_path+'ckpt/model_'+str(step)+'.ckpt')", "\n", "### DEBUG ##################################", "\n", "", "loss_D2d", "=", "sess", ".", "run", "(", "model", ".", "loss_Discri_decoder", ",", "feedDict", ")", "\n", "loss_Gene", "=", "sess", ".", "run", "(", "model", ".", "loss_Gene_decoder", ",", "feedDict", ")", "\n", "cont_mu", "=", "sess", ".", "run", "(", "model", ".", "Q_cont_mu", ",", "feedDict", ")", "\n", "cont_sigma", "=", "sess", ".", "run", "(", "model", ".", "Q_cont_sigma", ",", "feedDict", ")", "\n", "sigma_in", "=", "sess", ".", "run", "(", "model", ".", "Q_cont_sigma_in", ",", "feedDict", ")", "\n", "np", ".", "set_printoptions", "(", "linewidth", "=", "10000", ")", "\n", "np", ".", "set_printoptions", "(", "precision", "=", "2", ")", "\n", "with", "open", "(", "log_path", "+", "'DEBUG.txt'", ",", "'a'", ")", "as", "myfile", ":", "\n", "                    ", "tempText", "=", "'Step = '", "+", "str", "(", "step", ")", "+", "' prob_real = '", "+", "'{:.3f}'", ".", "format", "(", "debug_prob_real", ")", "+", "' prob_fake = '", "+", "'{:.3f}'", ".", "format", "(", "debug_prob_fake", ")", "+", "' currRatio = '", "+", "str", "(", "currRatio", ")", "+", "' flag_D2d_train = '", "+", "str", "(", "flag_D2d_train", ")", "+", "' L_D2d = '", "+", "'{:.3f}'", ".", "format", "(", "loss_D2d", ")", "+", "' L_Gene = '", "+", "'{:.3f}'", ".", "format", "(", "loss_Gene", ")", "+", "'\\n'", "\n", "myfile", ".", "write", "(", "tempText", ")", "\n", "", "with", "open", "(", "log_path", "+", "'continuous.txt'", ",", "'a'", ")", "as", "myfile", ":", "\n", "                    ", "tempText", "=", "'Step = '", "+", "str", "(", "step", ")", "+", "'\\n'", "+", "' real_cont =\\n'", "+", "str", "(", "infoGAN_cont", "[", "0", ":", "10", "]", ")", "+", "'\\n'", "+", "' mu = \\n'", "+", "str", "(", "cont_mu", "[", "0", ":", "10", "]", ")", "+", "'\\n'", "+", "' sigma = \\n'", "+", "str", "(", "cont_sigma", "[", "0", ":", "10", "]", ")", "+", "'\\n'", "+", "' sigma_in = \\n'", "+", "str", "(", "sigma_in", "[", "0", ":", "10", "]", ")", "+", "'\\n'", "\n", "myfile", ".", "write", "(", "tempText", ")", "\n", "# Generation image", "\n", "", "", "zero_noise", "=", "np", ".", "zeros", "(", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", ")", "\n", "if", "step", "%", "params", ".", "showStep", "==", "0", ":", "\n", "                ", "Ntrial", "=", "10", "\n", "decoderSample_small", "=", "np", ".", "ones", "(", "(", "Ntrial", ",", "params", ".", "Nsample", ",", "28", ",", "28", ",", "1", ")", ",", "dtype", "=", "float", ")", "\n", "for", "idx", "in", "range", "(", "Ntrial", ")", ":", "\n", "                    ", "if", "idx", "==", "0", ":", "\n", "                        ", "feedDict_rand", "=", "{", "\n", "model", ".", "sample_cat", ":", "eye_cat", ",", "\n", "model", ".", "sample_cont", ":", "zero_cont", ",", "\n", "model", ".", "sample_noise", ":", "zero_noise", ",", "\n", "}", "\n", "decoderSample_small", "[", "idx", ",", ":", ",", ":", ",", ":", "]", "=", "sess", ".", "run", "(", "model", ".", "sample_output", ",", "feedDict_rand", ")", "\n", "", "else", ":", "\n", "                        ", "sample_cont_rand", "=", "Sample_continuous", "(", "1", ",", "params", ".", "dim_cont", ")", "\n", "sample_cont_rand", "=", "np", ".", "tile", "(", "sample_cont_rand", ",", "(", "params", ".", "Nsample", ",", "1", ")", ")", "\n", "test_noise", "=", "Sample_noise", "(", "params", ".", "Nsample", ",", "params", ".", "dim_noise", ")", "\n", "feedDict_rand", "=", "{", "\n", "model", ".", "sample_cat", ":", "eye_cat", ",", "\n", "model", ".", "sample_cont", ":", "sample_cont_rand", ",", "\n", "model", ".", "sample_noise", ":", "test_noise", ",", "\n", "}", "\n", "decoderSample_small", "[", "idx", ",", ":", ",", ":", ",", ":", "]", "=", "sess", ".", "run", "(", "model", ".", "sample_output", ",", "feedDict_rand", ")", "\n", "\n", "", "", "d", "=", "np", ".", "empty", "(", "(", "Ntrial", ",", "params", ".", "Nsample", ",", "28", "*", "3", ",", "28", "*", "3", ")", ",", "dtype", "=", "float", ")", "# reconstructed from ancestrol sampling", "\n", "for", "idx_t", "in", "range", "(", "Ntrial", ")", ":", "# for each trial", "\n", "                    ", "for", "idx_cat", "in", "range", "(", "params", ".", "Nsample", ")", ":", "# for each category", "\n", "                        ", "temp_d", "=", "decoderSample_small", "[", "idx_t", ",", "idx_cat", "]", ".", "reshape", "(", "[", "28", ",", "28", "]", ")", "\n", "d", "[", "idx_t", ",", "idx_cat", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_d", ",", "3", ")", "\n", "", "", "outplot", "=", "np", ".", "swapaxes", "(", "d", ",", "1", ",", "2", ")", ".", "reshape", "(", "Ntrial", "*", "28", "*", "3", ",", "params", ".", "Nsample", "*", "28", "*", "3", ")", "\n", "plt", ".", "imsave", "(", "log_path", "+", "'generation/'", "+", "str", "(", "step", ")", "+", "'.png'", ",", "outplot", ")", "\n", "# Reconstruction image", "\n", "decoder_output", "=", "sess", ".", "run", "(", "model", ".", "decoder_output", ",", "feedDict", ")", "\n", "sampleIdx", "=", "3", "\n", "\n", "g", "=", "np", ".", "empty", "(", "(", "2", ",", "5", ",", "28", "*", "3", ",", "28", "*", "3", ")", ",", "dtype", "=", "float", ")", "# reconstructed from encoder output", "\n", "for", "idx", "in", "range", "(", "5", ")", ":", "\n", "                    ", "temp_g_real", "=", "currBatch", "[", "idx", "]", ".", "reshape", "(", "[", "28", ",", "28", "]", ")", "\n", "temp_g_recon", "=", "decoder_output", "[", "idx", "]", ".", "reshape", "(", "[", "28", ",", "28", "]", ")", "\n", "g", "[", "0", ",", "idx", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_g_real", ",", "3", ")", "\n", "g", "[", "1", ",", "idx", "]", "=", "sp", ".", "ndimage", ".", "interpolation", ".", "zoom", "(", "temp_g_recon", ",", "3", ")", "\n", "", "outplot", "=", "np", ".", "swapaxes", "(", "g", ",", "1", ",", "2", ")", ".", "reshape", "(", "2", "*", "28", "*", "3", ",", "5", "*", "28", "*", "3", ")", "\n", "plt", ".", "imsave", "(", "log_path", "+", "'reconstruction/'", "+", "str", "(", "step", ")", "+", "'.png'", ",", "outplot", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.main": [[525, 533], ["input_data.read_data_sets", "RepGAN_4.trainParameter", "tensorflow.reset_default_graph", "RepGAN_4.RepGAN", "RepGAN_4.train"], "function", ["home.repos.pwc.inspect_result.yzhouas_RepGAN-tensorflow.fashionMNIST.RepGAN_4.train"], ["", "", "def", "main", "(", "log_path", ",", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", ":", "\n", "    ", "from", "tensorflow", ".", "examples", ".", "tutorials", ".", "mnist", "import", "input_data", "\n", "mnist", "=", "input_data", ".", "read_data_sets", "(", "'fashionMNIST_data'", ",", "one_hot", "=", "True", ")", "\n", "params", "=", "trainParameter", "(", "LR_recon", ",", "LR_adv", ",", "LR_adv_infoGAN", ")", "\n", "# Traininng", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "RepGAN_1", "=", "RepGAN", "(", "params", ")", "\n", "train", "(", "RepGAN_1", ",", "mnist", ",", "params", ",", "log_path", ")", "\n", "\n"]]}