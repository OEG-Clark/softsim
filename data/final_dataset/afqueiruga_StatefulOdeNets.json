{"home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.None.datasets.get_dataset": [[7, 161], ["len", "int", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.ImageFolder.to", "torchvision.datasets.FashionMNIST.to", "torchvision.datasets.ImageFolder.to", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Compose", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Normalize", "torchvision.datasets.ImageFolder", "torchvision.datasets.ImageFolder", "RuntimeError", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.ToTensor"], "function", ["None"], ["def", "get_dataset", "(", "name", "=", "'CIFAR10'", ",", "\n", "batch_size", "=", "128", ",", "\n", "test_batch_size", "=", "1000", ",", "\n", "root", "=", "'.'", ",", "\n", "device", "=", "None", ",", "\n", "seed", "=", "0", ")", ":", "\n", "\n", "    ", "if", "name", "==", "'CIFAR10'", ":", "\n", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "\n", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "\n", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "\n", "refset", "=", "CIFAR10", "(", "root", "=", "root", "+", "'/CIFAR10_data'", ",", "\n", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "transform_test", ")", "\n", "trainset", "=", "CIFAR10", "(", "root", "=", "root", "+", "'/CIFAR10_data'", ",", "\n", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "transform_train", ")", "\n", "testset", "=", "CIFAR10", "(", "root", "=", "root", "+", "'/CIFAR10_data'", ",", "\n", "train", "=", "False", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "transform_test", ")", "\n", "\n", "", "elif", "name", "==", "'MNIST'", ":", "\n", "\n", "        ", "trainset", "=", "MNIST", "(", "'../data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "\n", "]", ")", ")", "\n", "\n", "testset", "=", "MNIST", "(", "'../data'", ",", "train", "=", "False", ",", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "\n", "]", ")", ")", "\n", "\n", "refset", "=", "None", "\n", "\n", "\n", "", "elif", "name", "==", "'FMNIST'", ":", "\n", "        ", "transform", "=", "torchvision", ".", "transforms", ".", "Compose", "(", "[", "\n", "torchvision", ".", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "torchvision", ".", "transforms", ".", "Normalize", "(", "(", "0.5", ",", ")", ",", "(", "0.5", ",", ")", ")", ",", "\n", "]", ")", "\n", "refset", "=", "FashionMNIST", "(", "root", "+", "'/F_MNIST_data/'", ",", "\n", "download", "=", "True", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "transform", ")", "\n", "trainset", "=", "FashionMNIST", "(", "root", "+", "'/F_MNIST_data/'", ",", "\n", "download", "=", "True", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "transform", ")", "\n", "testset", "=", "FashionMNIST", "(", "root", "+", "'/F_MNIST_data/'", ",", "\n", "download", "=", "True", ",", "\n", "train", "=", "False", ",", "\n", "transform", "=", "transform", ")", "\n", "\n", "", "elif", "name", "==", "'CIFAR100'", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "\n", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "\n", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "\n", "trainset", "=", "CIFAR100", "(", "root", "=", "root", "+", "'/CIFAR100/'", ",", "\n", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "transform_train", ")", "\n", "testset", "=", "CIFAR100", "(", "root", "=", "root", "+", "'/CIFAR100/'", ",", "\n", "train", "=", "False", ",", "\n", "download", "=", "False", ",", "\n", "transform", "=", "transform_test", ")", "\n", "refset", "=", "None", "\n", "\n", "", "elif", "name", "==", "'tinyimagenet'", ":", "\n", "        ", "normalize", "=", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "[", "\n", "0.44785526394844055", ",", "0.41693055629730225", ",", "0.36942949891090393", "\n", "]", ",", "\n", "std", "=", "[", "0.2928885519504547", ",", "0.28230994939804077", ",", "0.2889912724494934", "]", ")", "\n", "trainset", "=", "ImageFolder", "(", "\n", "root", "+", "'/tiny-imagenet-200/train'", ",", "\n", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "64", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", "\n", "# train_loader = torch.utils.data.DataLoader(train_dataset, batch_size=train_bs, shuffle=True, num_workers=4, pin_memory=False)", "\n", "testset", "=", "ImageFolder", "(", "\n", "root", "+", "'/tiny-imagenet-200/val'", ",", "\n", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", "\n", "# test_loader = torch.utils.data.DataLoader(test_dataset, batch_size=test_bs, shuffle=False)", "\n", "refset", "=", "None", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "RuntimeError", "(", "'Unknown dataset'", ")", "\n", "\n", "", "n_dataset", "=", "len", "(", "trainset", ")", "\n", "n_train", "=", "int", "(", "0.8", "*", "n_dataset", ")", "\n", "n_val", "=", "n_dataset", "-", "n_train", "\n", "# trainset2, validationset = torch.utils.data.random_split(", "\n", "#         trainset,", "\n", "#         [n_train, n_val],", "\n", "#         generator=torch.Generator().manual_seed(seed))", "\n", "\n", "if", "device", "is", "not", "None", ":", "\n", "        ", "trainset", "=", "trainset", ".", "to", "(", "device", ")", "\n", "validationset", "=", "refset", ".", "to", "(", "device", ")", "\n", "testnset", "=", "testset", ".", "to", "(", "device", ")", "\n", "\n", "\n", "\n", "", "test_batch_size", "=", "1000", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "4", ",", "\n", "pin_memory", "=", "True", ")", "\n", "# validation_loader = torch.utils.data.DataLoader(validationset,", "\n", "#                                           batch_size=test_batch_size,", "\n", "#                                           shuffle=True,", "\n", "#                                           num_workers=2,", "\n", "#                                           pin_memory=True)", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset", ",", "\n", "batch_size", "=", "test_batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "4", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "return", "train_loader", ",", "test_loader", ",", "test_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.optimizer_factory.make_optimizer": [[4, 17], ["flax.optim.Optimizer", "flax.optim.Momentum", "flax.optim.Adam", "ValueError"], "function", ["None"], ["def", "make_optimizer", "(", "optimizer", ":", "str", ",", "\n", "learning_rate", ":", "float", ",", "\n", "weight_decay", ":", "float", "=", "5.0e-4", ")", ":", "\n", "    ", "if", "optimizer", "==", "'SGD'", ":", "\n", "        ", "return", "optim", ".", "Optimizer", "(", "lerning_rate", "=", "learning_rate", ")", "\n", "", "elif", "optimizer", "==", "'Momentum'", ":", "\n", "        ", "return", "optim", ".", "Momentum", "(", "learning_rate", "=", "learning_rate", ",", "\n", "weight_decay", "=", "weight_decay", ")", "\n", "", "elif", "optimizer", "==", "'Adam'", ":", "\n", "        ", "return", "optim", ".", "Adam", "(", "learning_rate", "=", "learning_rate", ",", "\n", "weight_decay", "=", "weight_decay", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Unknown optimizer spec.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.stateful_ode_solvers.Euler": [[26, 34], ["f"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f"], ["def", "Euler", "(", "f", ":", "RateEquation", ",", "\n", "x", ":", "ArrayType", ",", "\n", "t0", ":", "float", "=", "0", ",", "\n", "Dt", ":", "float", "=", "1.0", ")", "->", "ArrayType", ":", "\n", "    ", "\"\"\"Forward Euler, O(Dt).\"\"\"", "\n", "t1", "=", "t0", "\n", "k1", ",", "state1", "=", "f", "(", "t1", ",", "x", ")", "\n", "return", "x", "+", "Dt", "*", "k1", ",", "(", "t1", ",", ")", ",", "(", "state1", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.stateful_ode_solvers.Midpoint": [[36, 47], ["f", "f"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f"], ["", "def", "Midpoint", "(", "f", ":", "RateEquation", ",", "\n", "x", ":", "ArrayType", ",", "\n", "t0", ":", "float", "=", "0", ",", "\n", "Dt", ":", "float", "=", "1.0", ")", "->", "ArrayType", ":", "\n", "    ", "\"\"\"Explicit Midpoint, a two stage Runge Kutta, O(Dt^2).\"\"\"", "\n", "t1", "=", "t0", "\n", "k1", ",", "state1", "=", "f", "(", "t1", ",", "x", ")", "\n", "x1", "=", "x", "+", "0.5", "*", "Dt", "*", "k1", "\n", "t2", "=", "t0", "+", "0.5", "*", "Dt", "# t = 1/2", "\n", "k2", ",", "state2", "=", "f", "(", "t2", ",", "x1", ")", "\n", "return", "x", "+", "Dt", "*", "k2", ",", "(", "t1", ",", "t2", ")", ",", "(", "state1", ",", "state2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.stateful_ode_solvers.RK4": [[49, 68], ["f", "f", "f", "f"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f"], ["", "def", "RK4", "(", "f", ":", "RateEquation", ",", "\n", "x", ":", "ArrayType", ",", "\n", "t0", ":", "float", "=", "0", ",", "\n", "Dt", ":", "float", "=", "1.0", ")", "->", "ArrayType", ":", "\n", "    ", "\"\"\"The 'classic' RK4, a four stage Runge Kutta, O(Dt^4).\"\"\"", "\n", "t1", "=", "t0", "# t = 0+ (inside of domain)", "\n", "k1", ",", "state1", "=", "f", "(", "t1", ",", "x", ")", "\n", "x1", "=", "x", "+", "0.5", "*", "Dt", "*", "k1", "\n", "t2", "=", "t0", "+", "0.5", "*", "Dt", "# t = 1/2", "\n", "k2", ",", "state2", "=", "f", "(", "t2", ",", "x1", ")", "\n", "x2", "=", "x", "+", "0.5", "*", "Dt", "*", "k2", "\n", "t3", "=", "t0", "+", "0.5", "*", "Dt", "# t = 1/2", "\n", "k3", ",", "state3", "=", "f", "(", "t3", ",", "x2", ")", "\n", "x3", "=", "x", "+", "Dt", "*", "k3", "\n", "t4", "=", "t0", "+", "Dt", "-", "DT_OPEN_SET_EPS", "# t = 1- (inside domain)", "\n", "k4", ",", "state4", "=", "f", "(", "t4", ",", "x3", ")", "\n", "x_out", "=", "x", "+", "Dt", "*", "(", "1.0", "/", "6.0", "*", "k1", "+", "1.0", "/", "3.0", "*", "k2", "+", "1.0", "/", "3.0", "*", "k3", "+", "\n", "1.0", "/", "6.0", "*", "k4", ")", "\n", "return", "x_out", ",", "(", "t1", ",", "t2", ",", "t3", ",", "t4", ")", ",", "(", "state1", ",", "state2", ",", "state3", ",", "state4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.stateful_ode_solvers.RK4_38": [[70, 89], ["f", "f", "f", "f"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f"], ["", "def", "RK4_38", "(", "f", ":", "RateEquation", ",", "\n", "x", ":", "ArrayType", ",", "\n", "t0", ":", "float", "=", "0", ",", "\n", "Dt", ":", "float", "=", "1.0", ")", "->", "ArrayType", ":", "\n", "    ", "\"\"\"The 3/8s RK4, a four stage Runge Kutta, O(Dt^4).\"\"\"", "\n", "t1", "=", "t0", "# t = 0+ (inside of domain)", "\n", "k1", ",", "state1", "=", "f", "(", "t1", ",", "x", ")", "# t = 0+ (inside of domain)", "\n", "x1", "=", "x", "+", "1.0", "/", "3.0", "*", "Dt", "*", "k1", "\n", "t2", "=", "t0", "+", "1.0", "/", "3.0", "*", "Dt", "\n", "k2", ",", "state2", "=", "f", "(", "t2", ",", "x1", ")", "# t = 1/3", "\n", "x2", "=", "x", "+", "Dt", "*", "(", "-", "1.0", "/", "3.0", "*", "k1", "+", "1.0", "*", "k2", ")", "\n", "t3", "=", "t0", "+", "2.0", "/", "3.0", "*", "Dt", "\n", "k3", ",", "state3", "=", "f", "(", "t3", ",", "x2", ")", "# t = 2/2", "\n", "x3", "=", "x", "+", "Dt", "*", "(", "k1", "-", "k2", "+", "k3", ")", "\n", "t4", "=", "t0", "+", "Dt", "-", "DT_OPEN_SET_EPS", "\n", "k4", ",", "state4", "=", "f", "(", "t4", ",", "x3", ")", "# t = 1-", "\n", "x_out", "=", "x", "+", "Dt", "*", "(", "1.0", "/", "8.0", "*", "k1", "+", "3.0", "/", "8.0", "*", "k2", "+", "3.0", "/", "8.0", "*", "k3", "+", "\n", "1.0", "/", "8.0", "*", "k4", ")", "\n", "return", "x_out", ",", "(", "t1", ",", "t2", ",", "t3", ",", "t4", ")", ",", "(", "state1", ",", "state2", ",", "state3", ",", "state4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.stateful_ode_solvers.StateOdeIntegrateFast": [[99, 114], ["numpy.arange", "scheme", "all_ts.extend", "states.extend"], "function", ["None"], ["def", "StateOdeIntegrateFast", "(", "f", ":", "RateEquation", ",", "\n", "x", ":", "ArrayType", ",", "\n", "scheme", ":", "Union", "[", "str", ",", "IntegrationScheme", "]", "=", "Euler", ",", "\n", "n_step", ":", "int", "=", "10", ")", "->", "ArrayType", ":", "\n", "    ", "try", ":", "\n", "        ", "scheme", "=", "SCHEME_TABLE", "[", "scheme", "]", "\n", "", "except", ":", "\n", "        ", "pass", "\n", "", "dt", "=", "1.0", "/", "n_step", "\n", "all_ts", ",", "states", "=", "[", "]", ",", "[", "]", "\n", "for", "t", "in", "onp", ".", "arange", "(", "0", ",", "1", ",", "dt", ")", ":", "\n", "        ", "x", ",", "ts", ",", "state", "=", "scheme", "(", "f", ",", "x", ",", "t", ",", "dt", ")", "\n", "all_ts", ".", "extend", "(", "ts", ")", "\n", "states", ".", "extend", "(", "state", ")", "\n", "", "return", "x", ",", "all_ts", ",", "states", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.stateful_ode_solvers.StateOdeIntegrateWithPoints": [[116, 130], ["numpy.arange", "numpy.array", "scheme", "xs.append", "numpy.array"], "function", ["None"], ["", "def", "StateOdeIntegrateWithPoints", "(", "f", ":", "RateEquation", ",", "\n", "x", ":", "ArrayType", ",", "\n", "scheme", ":", "Union", "[", "str", ",", "IntegrationScheme", "]", "=", "Euler", ",", "\n", "n_step", ":", "int", "=", "10", ")", "->", "List", "[", "ArrayType", "]", ":", "\n", "    ", "try", ":", "\n", "        ", "scheme", "=", "SCHEME_TABLE", "[", "scheme", "]", "\n", "", "except", ":", "\n", "        ", "pass", "\n", "", "dt", "=", "1.0", "/", "n_step", "\n", "xs", "=", "[", "onp", ".", "array", "(", "x", ")", "]", "\n", "for", "t", "in", "onp", ".", "arange", "(", "0", ",", "1", ",", "dt", ")", ":", "\n", "        ", "state", ",", "x", "=", "scheme", "(", "f", ",", "x", ",", "t", ",", "dt", ")", "\n", "xs", ".", "append", "(", "onp", ".", "array", "(", "x", ")", ")", "\n", "", "return", "xs", "\n", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment.__init__": [[16, 32], ["tools.tools.load_model_dict_from_json", "json.loads.pop", "json.loads.pop", "tools.tools.parse_optimizer_def_dict", "datetime.datetime.datetime.now().strftime", "os.path.join", "experiment.Experiment.save_model_description", "os.path.join", "open", "json.loads", "experiment.Experiment._path", "f.read", "datetime.datetime.datetime.now", "tools.tools.module_to_single_line"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.load_model_dict_from_json", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.parse_optimizer_def_dict", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment.save_model_description", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment._path", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.module_to_single_line"], ["def", "__init__", "(", "self", ",", "model", "=", "None", ",", "path", "=", "None", ",", "scope", "=", "None", ")", ":", "\n", "        ", "if", "model", "is", "None", ":", "\n", "            ", "self", ".", "path", "=", "path", "\n", "self", ".", "model", "=", "load_model_dict_from_json", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "'model.json'", ")", ",", "scope", ")", "\n", "with", "open", "(", "self", ".", "_path", "(", "'optimizer_hyper_params.json'", ")", ",", "\"r\"", ")", "as", "f", ":", "\n", "                ", "h_dict", "=", "json", ".", "loads", "(", "f", ".", "read", "(", ")", ")", "\n", "", "self", ".", "seed", "=", "h_dict", ".", "pop", "(", "'seed'", ")", "\n", "self", ".", "extra", "=", "h_dict", ".", "pop", "(", "'extra'", ")", "\n", "self", ".", "optimizer_def", "=", "parse_optimizer_def_dict", "(", "h_dict", ",", "scope", ")", "\n", "", "else", ":", "\n", "            ", "timestamp", "=", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%Y%m%d-%H%M%S\"", ")", "\n", "self", ".", "path", "=", "os", ".", "path", ".", "join", "(", "\n", "path", ",", "f\"{module_to_single_line(model)}_{timestamp}\"", ")", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "save_model_description", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment._path": [[33, 35], ["os.path.join"], "methods", ["None"], ["", "", "def", "_path", "(", "self", ",", "fname", ":", "str", ")", "->", "str", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "fname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment.save_model_description": [[36, 46], ["print", "os.makedirs", "open", "f.write", "open", "f.write", "print", "experiment.Experiment._path", "repr", "experiment.Experiment._path", "json.dumps", "tools.tools.module_to_dict"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment._path", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment._path", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.module_to_dict"], ["", "def", "save_model_description", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "path", ")", "\n", "", "except", "FileExistsError", ":", "\n", "            ", "print", "(", "f\"In danger of overwriting {self.path}/\"", ")", "\n", "", "print", "(", "\"Saving a model to \"", ",", "self", ".", "path", ")", "\n", "with", "open", "(", "self", ".", "_path", "(", "\"model_repr.txt\"", ")", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "repr", "(", "self", ".", "model", ")", ")", "\n", "", "with", "open", "(", "self", ".", "_path", "(", "\"model.json\"", ")", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "json", ".", "dumps", "(", "module_to_dict", "(", "self", ".", "model", ")", ",", "indent", "=", "4", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment.save_optimizer_hyper_params": [[47, 58], ["tools.tools.optimizer_def_to_dict", "open", "f.write", "open", "f.write", "experiment.Experiment._path", "f.write", "experiment.Experiment._path", "json.dumps", "repr"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.optimizer_def_to_dict", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment._path", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment._path"], ["", "", "def", "save_optimizer_hyper_params", "(", "self", ",", "optimizer_def", ",", "seed", ",", "extra", "=", "None", ")", ":", "\n", "        ", "h_dict", "=", "optimizer_def_to_dict", "(", "optimizer_def", ")", "\n", "h_dict", "[", "\"seed\"", "]", "=", "seed", "\n", "if", "extra", ":", "\n", "            ", "h_dict", "[", "\"extra\"", "]", "=", "extra", "\n", "", "with", "open", "(", "self", ".", "_path", "(", "\"optimizer_hyper_params.txt\"", ")", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "f\"{repr(optimizer_def.hyper_params)}\\nseed = {seed}\"", ")", "\n", "if", "extra", ":", "\n", "                ", "f", ".", "write", "(", "f\"\\nextra = {seed}\"", ")", "\n", "", "", "with", "open", "(", "self", ".", "_path", "(", "\"optimizer_hyper_params.json\"", ")", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "json", ".", "dumps", "(", "h_dict", ",", "indent", "=", "4", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment.save_checkpoint": [[59, 61], ["flax.training.checkpoints.save_checkpoint"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment.save_checkpoint"], ["", "", "def", "save_checkpoint", "(", "self", ",", "optimizer", ",", "state", ",", "step", ")", ":", "\n", "        ", "checkpoints", ".", "save_checkpoint", "(", "self", ".", "path", ",", "{", "'optimizer'", ":", "optimizer", ",", "'state'", ":", "state", "}", ",", "step", "=", "step", ",", "keep", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment.load_checkpoint": [[62, 64], ["flax.training.checkpoints.restore_checkpoint"], "methods", ["None"], ["", "def", "load_checkpoint", "(", "self", ",", "like", "=", "None", ")", ":", "\n", "        ", "return", "checkpoints", ".", "restore_checkpoint", "(", "self", ".", "path", ",", "like", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.run_experiment.report_count": [[34, 39], ["tools.tools.count_parameters", "tools.tools.count_parameters", "print"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.count_parameters", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.count_parameters"], ["def", "report_count", "(", "params", ",", "state", ")", ":", "\n", "    ", "n_params", "=", "count_parameters", "(", "params", ")", "\n", "n_state", "=", "count_parameters", "(", "state", ")", "\n", "print", "(", "\"Model has \"", ",", "n_params", ",", "\" params + \"", ",", "n_state", ",", "\" state params (\"", ",", "\n", "n_params", "+", "n_state", ",", "\" total).\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.run_experiment.run_an_experiment": [[41, 250], ["tools.learning_rate_schedule.LearningRateSchedule", "optimizer_factory.make_optimizer", "models.baselines.ResNet.clone", "Experiment", "Experiment.save_optimizer_hyper_params", "tools.tensorboard_writer.TensorboardWriter", "tools.tensorboard_writer.TensorboardWriter.Writer", "tools.tensorboard_writer.TensorboardWriter.Writer", "tools.tensorboard_writer.TensorboardWriter.Writer", "tools.tensorboard_writer.TensorboardWriter.Writer", "jax.random.PRNGKey", "next", "Experiment.model.init", "exp.model.init.pop", "optimizer_factory.make_optimizer.create", "run_experiment.report_count", "Trainer", "Tester", "Tester", "print", "jax.tree_util.tree_reduce", "print", "print", "print", "Tester.metrics_over_test_set", "Tester.metrics_over_test_set", "tb_writer.Writer.", "print", "range", "Tester.metrics_over_test_set", "print", "print", "tools.get_data.get_dataset", "DataTransform", "DataTransform", "DataTransform", "models.continuous_models.ContinuousImageClassifier", "iter", "float", "Trainer.train_epoch", "Tester.metrics_over_test_set", "tb_writer.Writer.", "print", "tools.tensorboard_writer.TensorboardWriter.flush", "models.continuous_models.ContinuousImageClassifierSmall", "print", "Experiment.model.refine", "Experiment.model.clone", "optimizer_factory.make_optimizer.create", "Trainer", "Tester", "Tester", "print", "run_experiment.report_count", "print", "print", "print", "print", "print", "convergence.project_continuous_net", "print", "print", "Experiment.model.clone", "new_model.clone.clone", "print", "print", "Experiment.model.clone", "optimizer_factory.make_optimizer.create", "Trainer", "Tester", "Tester", "print", "run_experiment.report_count", "tools.learning_rate_schedule.LearningRateSchedule.", "float", "models.continuous_models.ContinuousImageClassifierMNIST", "int", "Experiment.save_checkpoint", "Experiment.save_checkpoint", "models.baselines.ResNet", "ArgumentError", "y.flatten", "int", "int", "len"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.optimizer_factory.make_optimizer", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment.save_optimizer_hyper_params", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tensorboard_writer.TensorboardWriter.Writer", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tensorboard_writer.TensorboardWriter.Writer", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tensorboard_writer.TensorboardWriter.Writer", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tensorboard_writer.TensorboardWriter.Writer", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.run_experiment.report_count", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.Tester.metrics_over_test_set", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.Tester.metrics_over_test_set", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.Tester.metrics_over_test_set", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.get_data.get_dataset", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.Trainer.train_epoch", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.Tester.metrics_over_test_set", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tensorboard_writer.TensorboardWriter.flush", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.models.continuous_models.refine", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.run_experiment.report_count", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.project_continuous_net", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.run_experiment.report_count", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment.save_checkpoint", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.experiment.Experiment.save_checkpoint"], ["", "def", "run_an_experiment", "(", "dataset_name", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "train_data", ":", "Optional", "[", "Any", "]", "=", "None", ",", "\n", "validation_data", ":", "Optional", "[", "Any", "]", "=", "None", ",", "\n", "test_data", ":", "Optional", "[", "Any", "]", "=", "None", ",", "\n", "save_dir", ":", "str", "=", "'../runs/'", ",", "\n", "dataset_dir", ":", "str", "=", "'../'", ",", "\n", "which_model", ":", "str", "=", "'Continuous'", ",", "\n", "n_classes", ":", "int", "=", "10", ",", "\n", "seed", ":", "int", "=", "0", ",", "\n", "alpha", ":", "int", "=", "8", ",", "\n", "hidden", ":", "int", "=", "8", ",", "\n", "n_step", ":", "int", "=", "3", ",", "\n", "scheme", ":", "str", "=", "'Euler'", ",", "\n", "epsilon", ":", "int", "=", "1.0", ",", "\n", "n_basis", ":", "int", "=", "3", ",", "\n", "basis", ":", "str", "=", "'piecewise_constant'", ",", "\n", "norm", ":", "str", "=", "'None'", ",", "\n", "kernel_init", ":", "str", "=", "'kaiming_out'", ",", "\n", "which_optimizer", ":", "str", "=", "'Momentum'", ",", "\n", "learning_rate", ":", "float", "=", "0.1", ",", "\n", "learning_rate_decay", ":", "float", "=", "0.1", ",", "\n", "learning_rate_decay_epochs", ":", "Optional", "[", "List", "[", "int", "]", "]", "=", "None", ",", "\n", "weight_decay", ":", "float", "=", "5.0e-4", ",", "\n", "n_epoch", ":", "int", "=", "15", ",", "\n", "refine_epochs", ":", "Optional", "[", "Iterable", "]", "=", "None", ",", "\n", "project_epochs", ":", "Optional", "[", "Iterable", "]", "=", "None", ",", "\n", ")", ":", "\n", "\n", "    ", "if", "dataset_name", ":", "\n", "        ", "torch_train_data", ",", "torch_validation_data", ",", "torch_test_data", "=", "(", "\n", "get_data", ".", "get_dataset", "(", "dataset_name", ",", "root", "=", "dataset_dir", ")", ")", "\n", "train_data", "=", "DataTransform", "(", "torch_train_data", ")", "\n", "validation_data", "=", "DataTransform", "(", "torch_validation_data", ")", "\n", "test_data", "=", "DataTransform", "(", "torch_test_data", ")", "\n", "\n", "", "lr_schedule", "=", "LearningRateSchedule", "(", "learning_rate", ",", "learning_rate_decay", ",", "\n", "learning_rate_decay_epochs", ")", "\n", "optimizer_def", "=", "make_optimizer", "(", "which_optimizer", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", "weight_decay", "=", "weight_decay", ")", "\n", "\n", "if", "refine_epochs", "==", "None", ":", "\n", "        ", "refine_epochs", "=", "[", "]", "\n", "", "if", "project_epochs", "==", "None", ":", "\n", "        ", "project_epochs", "=", "[", "]", "\n", "\n", "", "if", "which_model", "==", "'ContinuousNet'", ":", "\n", "        ", "model", "=", "ContinuousImageClassifier", "(", "alpha", "=", "alpha", ",", "\n", "hidden", "=", "hidden", ",", "\n", "n_step", "=", "n_step", ",", "\n", "scheme", "=", "scheme", ",", "\n", "epsilon", "=", "epsilon", ",", "\n", "stitch_epsilon", "=", "epsilon", "/", "(", "n_step", "*", "2", "**", "len", "(", "refine_epochs", ")", ")", ",", "\n", "n_basis", "=", "n_basis", ",", "\n", "basis", "=", "basis", ",", "\n", "norm", "=", "norm", ",", "\n", "n_classes", "=", "n_classes", ",", "\n", "kernel_init", "=", "kernel_init", ")", "\n", "\n", "", "elif", "which_model", "==", "'ContinuousNetSmall'", ":", "\n", "        ", "model", "=", "ContinuousImageClassifierSmall", "(", "alpha", "=", "alpha", ",", "\n", "hidden", "=", "hidden", ",", "\n", "n_step", "=", "n_step", ",", "\n", "scheme", "=", "scheme", ",", "\n", "n_basis", "=", "n_basis", ",", "\n", "basis", "=", "basis", ",", "\n", "norm", "=", "norm", ",", "\n", "kernel_init", "=", "kernel_init", ")", "\n", "\n", "", "elif", "which_model", "==", "'ContinuousNetMNIST'", ":", "\n", "        ", "model", "=", "ContinuousImageClassifierMNIST", "(", "alpha", "=", "alpha", ",", "\n", "hidden", "=", "hidden", ",", "\n", "n_step", "=", "n_step", ",", "\n", "scheme", "=", "scheme", ",", "\n", "n_basis", "=", "n_basis", ",", "\n", "basis", "=", "basis", ",", "\n", "norm", "=", "norm", ",", "\n", "kernel_init", "=", "kernel_init", ")", "\n", "", "elif", "which_model", "==", "'ResNet'", ":", "\n", "        ", "model", "=", "ResNet", "(", "alpha", "=", "alpha", ",", "\n", "hidden", "=", "hidden", ",", "\n", "n_step", "=", "n_step", ",", "\n", "norm", "=", "norm", ",", "\n", "kernel_init", "=", "kernel_init", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ArgumentError", "(", "\"Unknown model class.\"", ")", "\n", "", "eval_model", "=", "model", ".", "clone", "(", "training", "=", "False", ")", "\n", "\n", "# Create savers management.", "\n", "exp", "=", "Experiment", "(", "model", ",", "path", "=", "save_dir", ")", "\n", "exp", ".", "save_optimizer_hyper_params", "(", "\n", "optimizer_def", ",", "\n", "seed", ",", "\n", "extra", "=", "{", "\n", "'learning_rate_decay_epochs'", ":", "learning_rate_decay_epochs", ",", "\n", "'refine_epochs'", ":", "refine_epochs", "\n", "}", ")", "\n", "tb_writer", "=", "TensorboardWriter", "(", "exp", ".", "path", ")", "\n", "loss_writer", "=", "tb_writer", ".", "Writer", "(", "'loss'", ")", "\n", "test_acc_writer", "=", "tb_writer", ".", "Writer", "(", "'test_accuracy'", ")", "\n", "train_acc_writer", "=", "tb_writer", ".", "Writer", "(", "'train_accuracy'", ")", "\n", "validation_acc_writer", "=", "tb_writer", ".", "Writer", "(", "'validation_accuracy'", ")", "\n", "\n", "# Initialize the model and make training modules.", "\n", "prng_key", "=", "jax", ".", "random", ".", "PRNGKey", "(", "seed", ")", "\n", "x", ",", "_", "=", "next", "(", "iter", "(", "train_data", ")", ")", "\n", "init_vars", "=", "exp", ".", "model", ".", "init", "(", "prng_key", ",", "x", ")", "\n", "init_state", ",", "init_params", "=", "init_vars", ".", "pop", "(", "'params'", ")", "\n", "optimizer", "=", "optimizer_def", ".", "create", "(", "init_params", ")", "\n", "current_state", "=", "init_state", "\n", "report_count", "(", "init_params", ",", "init_state", ")", "\n", "trainer", "=", "Trainer", "(", "exp", ".", "model", ",", "train_data", ")", "\n", "validator", "=", "Tester", "(", "eval_model", ",", "validation_data", ")", "\n", "tester", "=", "Tester", "(", "eval_model", ",", "test_data", ")", "\n", "\n", "print", "(", "'**** Setup ****'", ")", "\n", "n_params", "=", "jax", ".", "tree_util", ".", "tree_reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "y", ".", "flatten", "(", ")", ".", "size", ",", "\n", "init_params", ",", "\n", "initializer", "=", "0", ")", "\n", "print", "(", "n_params", ")", "\n", "print", "(", "'Total params: %.2fk ; %.2fM'", "%", "\n", "(", "n_params", "*", "10", "**", "-", "3", ",", "n_params", "*", "10", "**", "-", "6", ")", ")", "\n", "print", "(", "'************'", ")", "\n", "\n", "validation_acc", "=", "validator", ".", "metrics_over_test_set", "(", "optimizer", ".", "target", ",", "\n", "current_state", ")", "\n", "test_acc", "=", "tester", ".", "metrics_over_test_set", "(", "optimizer", ".", "target", ",", "current_state", ")", "\n", "best_test_acc", "=", "0.0", "\n", "validation_acc_writer", "(", "float", "(", "validation_acc", ")", ")", "\n", "print", "(", "\"Initial acc \"", ",", "test_acc", ")", "\n", "for", "epoch", "in", "range", "(", "1", ",", "1", "+", "n_epoch", ")", ":", "\n", "        ", "if", "epoch", "in", "refine_epochs", ":", "\n", "            ", "print", "(", "'Refining:'", ")", "\n", "new_model", ",", "new_params", ",", "current_state", "=", "exp", ".", "model", ".", "refine", "(", "\n", "optimizer", ".", "target", ",", "current_state", ")", "\n", "exp", ".", "model", "=", "new_model", "\n", "eval_model", "=", "exp", ".", "model", ".", "clone", "(", "training", "=", "False", ")", "\n", "# We just reset the momenta.", "\n", "optimizer", "=", "optimizer_def", ".", "create", "(", "new_params", ")", "\n", "trainer", "=", "Trainer", "(", "exp", ".", "model", ",", "train_data", ")", "\n", "validator", "=", "Tester", "(", "eval_model", ",", "validation_data", ")", "\n", "tester", "=", "Tester", "(", "eval_model", ",", "test_data", ")", "\n", "print", "(", "\"Refining model to: \"", ",", "end", "=", "''", ")", "\n", "report_count", "(", "new_params", ",", "current_state", ")", "\n", "print", "(", "'N basis function: '", ",", "exp", ".", "model", ".", "n_basis", ")", "\n", "print", "(", "'N Steps: '", ",", "exp", ".", "model", ".", "n_step", ")", "\n", "\n", "", "if", "epoch", "in", "project_epochs", ":", "\n", "            ", "print", "(", "'Projecting:'", ")", "\n", "print", "(", "'Before N basis function: '", ",", "exp", ".", "model", ".", "n_basis", ")", "\n", "print", "(", "'Before N Steps: '", ",", "exp", ".", "model", ".", "n_step", ")", "\n", "new_params", ",", "current_state", "=", "project_continuous_net", "(", "\n", "optimizer", ".", "target", ",", "current_state", ",", "BASIS", "[", "exp", ".", "model", ".", "basis", "]", ",", "\n", "BASIS", "[", "exp", ".", "model", ".", "basis", "]", ",", "int", "(", "exp", ".", "model", ".", "n_basis", "/", "2", ")", ")", "\n", "\n", "print", "(", "'Before N basis function: '", ",", "exp", ".", "model", ".", "n_basis", ")", "\n", "print", "(", "'Before N Steps: '", ",", "exp", ".", "model", ".", "n_step", ")", "\n", "\n", "new_model", "=", "exp", ".", "model", ".", "clone", "(", "basis", "=", "exp", ".", "model", ".", "basis", ",", "\n", "n_basis", "=", "int", "(", "exp", ".", "model", ".", "n_basis", "/", "2", ")", ")", "\n", "new_model", "=", "new_model", ".", "clone", "(", "n_step", "=", "int", "(", "exp", ".", "model", ".", "n_step", "/", "2", ")", ",", "\n", "scheme", "=", "exp", ".", "model", ".", "scheme", ")", "\n", "\n", "exp", ".", "model", "=", "new_model", "\n", "\n", "print", "(", "'After N basis function: '", ",", "exp", ".", "model", ".", "n_basis", ")", "\n", "print", "(", "'After N Steps: '", ",", "exp", ".", "model", ".", "n_step", ")", "\n", "\n", "eval_model", "=", "exp", ".", "model", ".", "clone", "(", "training", "=", "False", ")", "\n", "# We just reset the momenta.", "\n", "optimizer", "=", "optimizer_def", ".", "create", "(", "new_params", ")", "\n", "trainer", "=", "Trainer", "(", "exp", ".", "model", ",", "train_data", ")", "\n", "validator", "=", "Tester", "(", "eval_model", ",", "validation_data", ")", "\n", "tester", "=", "Tester", "(", "eval_model", ",", "test_data", ")", "\n", "print", "(", "\"Project model to: \"", ",", "end", "=", "''", ")", "\n", "report_count", "(", "new_params", ",", "current_state", ")", "\n", "\n", "", "optimizer", ",", "current_state", "=", "trainer", ".", "train_epoch", "(", "optimizer", ",", "current_state", ",", "\n", "lr_schedule", "(", "epoch", ")", ",", "\n", "loss_writer", ",", "\n", "train_acc_writer", ")", "\n", "validation_acc", "=", "validator", ".", "metrics_over_test_set", "(", "\n", "optimizer", ".", "target", ",", "current_state", ")", "\n", "\n", "validation_acc_writer", "(", "float", "(", "validation_acc", ")", ")", "\n", "\n", "print", "(", "\"After epoch \"", ",", "epoch", ",", "\"test acc: \"", ",", "validation_acc", ")", "\n", "\n", "if", "learning_rate_decay_epochs", "is", "not", "None", ":", "\n", "\n", "            ", "if", "best_test_acc", "<", "validation_acc", "and", "epoch", ">", "learning_rate_decay_epochs", "[", "-", "1", "]", ":", "\n", "                ", "best_test_acc", "=", "validation_acc", "\n", "exp", ".", "save_checkpoint", "(", "optimizer", ",", "current_state", ",", "epoch", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "if", "best_test_acc", "<", "validation_acc", ":", "\n", "                ", "best_test_acc", "=", "validation_acc", "\n", "exp", ".", "save_checkpoint", "(", "optimizer", ",", "current_state", ",", "epoch", ")", "\n", "\n", "\n", "#if epoch % _CHECKPOINT_FREQ == 0:", "\n", "#    exp.save_checkpoint(optimizer, current_state, epoch)", "\n", "", "", "tb_writer", ".", "flush", "(", ")", "\n", "\n", "", "test_acc", "=", "tester", ".", "metrics_over_test_set", "(", "optimizer", ".", "target", ",", "current_state", ")", "\n", "print", "(", "\"Final test set accuracy: \"", ",", "test_acc", ")", "\n", "print", "(", "\"Final best test set accuracy: \"", ",", "best_test_acc", ")", "\n", "\n", "return", "test_acc", "# Return the final test set accuracy for testing.", "\n", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.Trainer.__init__": [[26, 50], ["print", "jax.value_and_grad", "jax.value_and_grad", "jax.value_and_grad", "jax.value_and_grad", "jax.value_and_grad.", "jax.value_and_grad.", "optimizer.apply_gradient.apply_gradient.apply_gradient", "training.Trainer.model.apply", "training.cross_entropy_loss", "jax.mean", "jax.mean", "training.pack_params", "state.keys", "jax.argmax", "jax.argmax"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.cross_entropy_loss", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.pack_params"], ["def", "__init__", "(", "self", ",", "model", ",", "train_data", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "train_data", "=", "train_data", "\n", "\n", "@", "jax", ".", "jit", "\n", "def", "train_step", "(", "optimizer", ",", "state", ",", "X", ",", "Y", ",", "lr", ")", ":", "\n", "            ", "\"\"\"Train for a single step using self.model.\"\"\"", "\n", "print", "(", "'Tracing train_step.'", ")", "\n", "\n", "def", "loss_fn", "(", "params", ")", ":", "\n", "                ", "logp_y_pred", ",", "new_state", "=", "self", ".", "model", ".", "apply", "(", "pack_params", "(", "\n", "params", ",", "state", ")", ",", "\n", "X", ",", "\n", "mutable", "=", "state", ".", "keys", "(", ")", ")", "\n", "loss", "=", "cross_entropy_loss", "(", "Y", ",", "logp_y_pred", ")", "\n", "acc", "=", "jnp", ".", "mean", "(", "jnp", ".", "argmax", "(", "logp_y_pred", ",", "-", "1", ")", "==", "Y", ")", "\n", "return", "loss", ",", "(", "acc", ",", "new_state", ")", "\n", "\n", "", "grad_fn", "=", "jax", ".", "value_and_grad", "(", "loss_fn", ",", "has_aux", "=", "True", ")", "\n", "(", "loss", ",", "(", "acc", ",", "new_state", ")", ")", ",", "grad", "=", "grad_fn", "(", "optimizer", ".", "target", ")", "\n", "optimizer", "=", "optimizer", ".", "apply_gradient", "(", "grad", ",", "learning_rate", "=", "lr", ")", "\n", "return", "optimizer", ",", "new_state", ",", "loss", ",", "acc", "\n", "\n", "", "self", ".", "train_step", "=", "train_step", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.Trainer.train_epoch": [[51, 66], ["tqdm.tqdm", "print", "enumerate", "training.Trainer.train_step", "loss_saver", "train_acc_saver", "len", "float", "float", "float", "len"], "methods", ["None"], ["", "def", "train_epoch", "(", "self", ",", "optimizer", ":", "Any", ",", "state", ":", "Any", ",", "learning_rate", ":", "float", ",", "\n", "loss_saver", ":", "Callable", "[", "[", "Any", "]", ",", "None", "]", ",", "\n", "train_acc_saver", ":", "Callable", "[", "[", "Any", "]", ",", "None", "]", ")", ":", "\n", "        ", "\"\"\"Loop over train_data once, applying the optimizer.\"\"\"", "\n", "acc_avg_numerator", "=", "0", "\n", "acc_avg_denominator", "=", "0", "\n", "for", "i", ",", "(", "X", ",", "Y", ")", "in", "tqdm", ".", "tqdm", "(", "enumerate", "(", "self", ".", "train_data", ")", ",", "desc", "=", "\"Epoch\"", ")", ":", "\n", "            ", "optimizer", ",", "state", ",", "loss", ",", "acc", "=", "self", ".", "train_step", "(", "\n", "optimizer", ",", "state", ",", "X", ",", "Y", ",", "learning_rate", ")", "\n", "loss_saver", "(", "float", "(", "loss", ")", ")", "\n", "train_acc_saver", "(", "float", "(", "acc", ")", ")", "\n", "acc_avg_numerator", "+=", "float", "(", "acc", ")", "*", "len", "(", "Y", ")", "\n", "acc_avg_denominator", "+=", "len", "(", "Y", ")", "\n", "", "print", "(", "\"Average trian acc \"", ",", "acc_avg_numerator", "/", "acc_avg_denominator", ")", "\n", "return", "optimizer", ",", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.Tester.__init__": [[73, 88], ["print", "training.Tester.model.apply", "jax.mean", "jax.mean", "training.pack_params", "state.keys", "jax.argmax", "jax.argmax"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.pack_params"], ["def", "__init__", "(", "self", ",", "model", ",", "test_data", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "test_data", "=", "test_data", "\n", "\n", "@", "jax", ".", "jit", "\n", "def", "test_metrics", "(", "params", ",", "state", ",", "X", ",", "Y", ")", ":", "\n", "            ", "print", "(", "'Tracing test_metrics.'", ")", "\n", "logp_y_pred", ",", "_", "=", "self", ".", "model", ".", "apply", "(", "pack_params", "(", "\n", "params", ",", "state", ")", ",", "\n", "X", ",", "\n", "mutable", "=", "state", ".", "keys", "(", ")", ")", "\n", "# loss = cross_entropy_loss(Y, logp_y_pred)", "\n", "return", "jnp", ".", "mean", "(", "jnp", ".", "argmax", "(", "logp_y_pred", ",", "-", "1", ")", "==", "Y", ")", "\n", "\n", "", "self", ".", "test_metrics", "=", "test_metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.Tester.metrics_over_test_set": [[89, 96], ["accuracies.append", "len", "jax.sum", "jax.sum", "jax.array", "jax.array", "len", "training.Tester.test_metrics"], "methods", ["None"], ["", "def", "metrics_over_test_set", "(", "self", ",", "params", ",", "state", ")", ":", "\n", "        ", "accuracies", "=", "[", "]", "\n", "denominator", "=", "0", "\n", "for", "X", ",", "Y", "in", "self", ".", "test_data", ":", "\n", "            ", "accuracies", ".", "append", "(", "len", "(", "Y", ")", "*", "self", ".", "test_metrics", "(", "params", ",", "state", ",", "X", ",", "Y", ")", ")", "\n", "denominator", "+=", "len", "(", "Y", ")", "\n", "", "return", "jnp", ".", "sum", "(", "jnp", ".", "array", "(", "accuracies", ")", ")", "/", "denominator", "\n", "", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.pack_params": [[12, 14], ["None"], "function", ["None"], ["def", "pack_params", "(", "params", ",", "state", ")", ":", "\n", "    ", "return", "{", "'params'", ":", "params", ",", "**", "state", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.cross_entropy_loss": [[16, 19], ["jax.mean", "jax.sum", "flax.training.common_utils.onehot"], "function", ["None"], ["", "def", "cross_entropy_loss", "(", "y_label", ",", "logp_y_pred", ")", ":", "\n", "    ", "return", "-", "jnp", ".", "mean", "(", "\n", "jnp", ".", "sum", "(", "onehot", "(", "y_label", ",", "logp_y_pred", ".", "shape", "[", "-", "1", "]", ")", "*", "logp_y_pred", ",", "axis", "=", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.piecewise_constant": [[9, 23], ["len", "min", "int"], "function", ["None"], ["def", "piecewise_constant", "(", "\n", "param_nodes", ":", "Iterable", "[", "JaxTreeType", "]", ")", "->", "ContinuousParameters", ":", "\n", "    ", "\"\"\"A piecewise constant basis set.\n\n    Returns:\n      theta(t) A closure on the parameters and bases as function of t.\n    \"\"\"", "\n", "n_basis", "=", "len", "(", "param_nodes", ")", "\n", "\n", "def", "theta", "(", "t", ":", "float", ")", "->", "JaxTreeType", ":", "\n", "        ", "idx", "=", "min", "(", "int", "(", "n_basis", "*", "t", ")", ",", "n_basis", "-", "1", ")", "\n", "return", "param_nodes", "[", "idx", "]", "\n", "\n", "", "return", "theta", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.fem_linear": [[25, 43], ["len", "basis_functions.piecewise_constant", "min", "jax.tree_multimap", "jax.tree_multimap", "int"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.piecewise_constant"], ["", "def", "fem_linear", "(", "param_nodes", ":", "Iterable", "[", "JaxTreeType", "]", ")", "->", "ContinuousParameters", ":", "\n", "    ", "\"\"\"Finite Element Method style linear basis functions.\n    \n    Requires n_basis > 2.\"\"\"", "\n", "n_basis", "=", "len", "(", "param_nodes", ")", "\n", "if", "n_basis", "==", "1", ":", "\n", "        ", "return", "piecewise_constant", "(", "param_nodes", ")", "\n", "", "n_elem", "=", "n_basis", "-", "1", "\n", "\n", "def", "theta", "(", "t", ":", "float", ")", "->", "JaxTreeType", ":", "\n", "        ", "elem_idx", "=", "min", "(", "int", "(", "n_elem", "*", "t", ")", ",", "n_elem", "-", "1", ")", "\n", "phi_1", "=", "(", "t", "-", "elem_idx", "/", "n_elem", ")", "/", "(", "1.0", "/", "n_elem", ")", "\n", "phi_2", "=", "1.0", "-", "phi_1", "\n", "return", "jax", ".", "tree_multimap", "(", "lambda", "a1", ",", "a2", ":", "a1", "*", "phi_1", "+", "a2", "*", "phi_2", ",", "\n", "param_nodes", "[", "elem_idx", "+", "1", "]", ",", "\n", "param_nodes", "[", "elem_idx", "]", ")", "\n", "\n", "", "return", "theta", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.piecewise_linear": [[45, 60], ["len", "min", "jax.tree_multimap", "jax.tree_multimap", "len", "int"], "function", ["None"], ["", "def", "piecewise_linear", "(", "param_nodes", ":", "Iterable", "[", "JaxTreeType", "]", ")", "->", "ContinuousParameters", ":", "\n", "    ", "\"\"\"Piecewise linear i.e. Discontinuous Galerkin (DG) linear.\n    \n    Requiries n_basis % 2 == 0\n    \"\"\"", "\n", "assert", "len", "(", "param_nodes", ")", "%", "2", "==", "0", "\n", "n_elem", "=", "len", "(", "param_nodes", ")", "//", "2", "\n", "def", "theta", "(", "t", ":", "float", ")", "->", "JaxTreeType", ":", "\n", "        ", "elem_idx", "=", "min", "(", "int", "(", "n_elem", "*", "t", ")", ",", "n_elem", "-", "1", ")", "\n", "phi_1", "=", "(", "t", "-", "elem_idx", "/", "n_elem", ")", "/", "(", "1.0", "/", "n_elem", ")", "\n", "phi_2", "=", "1.0", "-", "phi_1", "\n", "return", "jax", ".", "tree_multimap", "(", "lambda", "a1", ",", "a2", ":", "a1", "*", "phi_1", "+", "a2", "*", "phi_2", ",", "\n", "param_nodes", "[", "2", "*", "elem_idx", "+", "1", "]", ",", "\n", "param_nodes", "[", "2", "*", "elem_idx", "]", ")", "\n", "", "return", "theta", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.poly_linear": [[62, 79], ["len", "jax.tree_multimap", "jax.tree_multimap"], "function", ["None"], ["", "def", "poly_linear", "(", "param_nodes", ":", "Iterable", "[", "JaxTreeType", "]", ")", "->", "ContinuousParameters", ":", "\n", "    ", "\"\"\"Linear polynomial basis functions.\n    \n    Rolled out, a time dependent layer of this form is:\n      y = [W + C*t] x + (b + c*t)\n    For each tensor, the function is\n      theta(t) = A0 + A1*t\n    where A0 and A1 have the same shape, but different scale behavior.\n\n    Requires n_basis = 2.\"\"\"", "\n", "assert", "len", "(", "param_nodes", ")", "==", "2", "\n", "\n", "def", "theta", "(", "t", ":", "float", ")", "->", "JaxTreeType", ":", "\n", "        ", "return", "jax", ".", "tree_multimap", "(", "lambda", "a", ",", "c", ":", "a", "+", "c", "*", "t", ",", "param_nodes", "[", "0", "]", ",", "\n", "param_nodes", "[", "1", "]", ")", "\n", "\n", "", "return", "theta", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.split_refine_piecewise": [[92, 98], ["new_nodes.append", "new_nodes.append"], "function", ["None"], ["def", "split_refine_piecewise", "(", "nodes", ":", "Iterable", "[", "JaxTreeType", "]", ")", ":", "\n", "    ", "new_nodes", "=", "[", "]", "\n", "for", "node", "in", "nodes", ":", "\n", "        ", "new_nodes", ".", "append", "(", "node", ")", "\n", "new_nodes", ".", "append", "(", "node", ")", "\n", "", "return", "new_nodes", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.split_refine_fem": [[100, 114], ["range", "len", "jax.tree_multimap", "jax.tree_multimap", "new_nodes.append", "new_nodes.append", "len"], "function", ["None"], ["", "def", "split_refine_fem", "(", "nodes", ":", "Iterable", "[", "JaxTreeType", "]", ")", ":", "\n", "    ", "\"\"\"Traditional finite element hat functions.\"\"\"", "\n", "# Fringe case is constant, which turns into one element.", "\n", "if", "len", "(", "nodes", ")", "==", "1", ":", "\n", "        ", "return", "[", "nodes", "[", "0", "]", ",", "nodes", "[", "0", "]", "]", "\n", "\n", "# Use the midpoints to subdivide elements.", "\n", "", "new_nodes", "=", "[", "nodes", "[", "0", "]", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "nodes", ")", "-", "1", ")", ":", "\n", "        ", "midpoint", "=", "jax", ".", "tree_multimap", "(", "lambda", "a1", ",", "a2", ":", "a1", "*", "0.5", "+", "a2", "*", "0.5", ",", "\n", "nodes", "[", "i", "+", "1", "]", ",", "nodes", "[", "i", "]", ")", "\n", "new_nodes", ".", "append", "(", "midpoint", ")", "\n", "new_nodes", ".", "append", "(", "nodes", "[", "i", "+", "1", "]", ")", "\n", "", "return", "new_nodes", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.piecewise_node_locations": [[125, 128], ["numpy.linspace"], "function", ["None"], ["def", "piecewise_node_locations", "(", "n_basis", ":", "int", ")", ":", "\n", "    ", "dx", "=", "1.0", "/", "n_basis", "\n", "return", "onp", ".", "linspace", "(", "0", ",", "1", "-", "dx", ",", "n_basis", ")", "+", "dx", "*", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.interpolate_piecewise_constant": [[130, 132], ["f", "basis_functions.piecewise_node_locations"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.piecewise_node_locations"], ["", "def", "interpolate_piecewise_constant", "(", "f", ":", "ContinuousParameters", ",", "n_basis", ":", "int", ")", "->", "Iterable", "[", "JaxTreeType", "]", ":", "\n", "    ", "return", "[", "f", "(", "t", ")", "for", "t", "in", "piecewise_node_locations", "(", "n_basis", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.fem_node_locations": [[134, 139], ["numpy.array", "numpy.linspace"], "function", ["None"], ["", "def", "fem_node_locations", "(", "n_basis", ":", "int", ")", ":", "\n", "    ", "if", "n_basis", "==", "1", ":", "\n", "        ", "return", "onp", ".", "array", "(", "[", "0.5", "]", ")", "\n", "", "else", ":", "\n", "        ", "return", "onp", ".", "linspace", "(", "0", ",", "1", ",", "n_basis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.interpolate_fem_linear": [[141, 143], ["f", "basis_functions.fem_node_locations"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.fem_node_locations"], ["", "", "def", "interpolate_fem_linear", "(", "f", ":", "ContinuousParameters", ",", "n_basis", ":", "int", ")", "->", "Iterable", "[", "JaxTreeType", "]", ":", "\n", "    ", "return", "[", "f", "(", "t", ")", "for", "t", "in", "fem_node_locations", "(", "n_basis", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.point_loss": [[156, 162], ["zip", "jax.sum", "losses.append", "jax.array", "basis"], "function", ["None"], ["def", "point_loss", "(", "params", ",", "basis", ",", "ts", ",", "ys", ")", ":", "\n", "    ", "losses", "=", "[", "]", "\n", "for", "t_i", ",", "y_i", "in", "zip", "(", "ts", ",", "ys", ")", ":", "\n", "        ", "loss", "=", "(", "basis", "(", "params", ")", "(", "t_i", ")", "-", "y_i", ")", "**", "2", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "", "return", "jnp", ".", "sum", "(", "jnp", ".", "array", "(", "losses", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.point_project": [[164, 170], ["jax.zeros", "jax.grad", "jax.grad", "jax.hessian", "jax.hessian", "jax.linalg.solve"], "function", ["None"], ["", "def", "point_project", "(", "ys", ",", "ts", ",", "n_basis", ",", "basis", ")", ":", "\n", "    ", "params", "=", "jnp", ".", "zeros", "(", "n_basis", ")", "\n", "vG", "=", "jax", ".", "grad", "(", "point_loss", ")", "(", "params", ",", "basis", ",", "ts", ",", "ys", ")", "\n", "mH", "=", "jax", ".", "hessian", "(", "point_loss", ")", "(", "params", ",", "basis", ",", "ts", ",", "ys", ")", "\n", "d_params", "=", "-", "jnp", ".", "linalg", ".", "solve", "(", "mH", ",", "vG", ")", "\n", "return", "d_params", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.point_project_array": [[172, 180], ["jax.array", "jnp.array.reshape", "list", "basis_functions.point_project", "jax.vmap", "jax.vmap", "nodes.reshape"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.point_project"], ["", "def", "point_project_array", "(", "ys", ",", "ts", ",", "n_basis", ",", "basis", ")", ":", "\n", "    ", "point_project_mapped", "=", "lambda", "ys_", ":", "point_project", "(", "ys_", ",", "ts", ",", "n_basis", ",", "basis", ")", "\n", "ys_stack", "=", "jnp", ".", "array", "(", "ys", ")", "\n", "ys_flat", "=", "ys_stack", ".", "reshape", "(", "ys_stack", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "# print(ys_flat.shape)", "\n", "nodes", "=", "jax", ".", "vmap", "(", "point_project_mapped", ",", "in_axes", "=", "-", "1", ",", "out_axes", "=", "-", "1", ")", "(", "ys_flat", ")", "\n", "# print(nodes.shape)", "\n", "return", "list", "(", "nodes", ".", "reshape", "(", "(", "n_basis", ",", ")", "+", "ys_stack", ".", "shape", "[", "1", ":", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.point_project_tree": [[182, 191], ["jax.tree_multimap", "jax.tree_multimap", "jax.tree_structure", "jax.tree_structure", "jax.tree_structure", "jax.tree_structure", "jax.tree_transpose", "jax.tree_transpose", "list", "list", "basis_functions.point_project_array", "range"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.point_project_array"], ["", "def", "point_project_tree", "(", "tree_point_cloud", ",", "ts", ",", "n_basis", ",", "basis", ")", ":", "\n", "\n", "    ", "def", "point_project_list", "(", "*", "args", ")", ":", "\n", "        ", "return", "list", "(", "point_project_array", "(", "args", ",", "ts", ",", "n_basis", ",", "basis", ")", ")", "\n", "\n", "", "out", "=", "jax", ".", "tree_multimap", "(", "point_project_list", ",", "*", "tree_point_cloud", ")", "\n", "original_struct", "=", "jax", ".", "tree_structure", "(", "tree_point_cloud", "[", "0", "]", ")", "\n", "mapped_struct", "=", "jax", ".", "tree_structure", "(", "list", "(", "range", "(", "n_basis", ")", ")", ")", "\n", "return", "jax", ".", "tree_transpose", "(", "original_struct", ",", "mapped_struct", ",", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.projection_loss": [[196, 211], ["numpy.polynomial.legendre.leggauss", "basis_A", "basis_B", "numpy.linspace", "jax.sum", "zip", "jax.array", "range", "losses.append", "basis_A.", "basis_B."], "function", ["None"], ["", "def", "projection_loss", "(", "params_A", ",", "params_B", ",", "basis_A", ",", "basis_B", ",", "degree", "=", "7", ",", "n_cell", "=", "10", ")", ":", "\n", "    ", "\"\"\"Loss function that integrates over the depth of the network.\"\"\"", "\n", "Gauss_Z", ",", "Gauss_W", "=", "onp", ".", "polynomial", ".", "legendre", ".", "leggauss", "(", "degree", ")", "\n", "phi_A", "=", "basis_A", "(", "params_A", ")", "\n", "phi_B", "=", "basis_B", "(", "params_B", ")", "\n", "cell_xs", "=", "onp", ".", "linspace", "(", "0", ",", "1", ",", "n_cell", ")", "\n", "integration_cells", "=", "[", "(", "cell_xs", "[", "i", "]", ",", "cell_xs", "[", "i", "+", "1", "]", ")", "for", "i", "in", "range", "(", "n_cell", "-", "1", ")", "\n", "]", "\n", "losses", "=", "[", "]", "\n", "for", "x_1", ",", "x_2", "in", "integration_cells", ":", "\n", "        ", "for", "z", ",", "w", "in", "zip", "(", "Gauss_Z", ",", "Gauss_W", ")", ":", "\n", "            ", "x_z", "=", "x_1", "+", "(", "x_2", "-", "x_1", ")", "*", "(", "z", "+", "1.0", ")", "/", "2.0", "\n", "integral", "=", "0.5", "*", "(", "x_2", "-", "x_1", ")", "*", "w", "*", "(", "phi_A", "(", "x_z", ")", "-", "phi_B", "(", "x_z", ")", ")", "**", "2", "\n", "losses", ".", "append", "(", "integral", ")", "\n", "", "", "return", "jnp", ".", "sum", "(", "jnp", ".", "array", "(", "losses", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions._function_project": [[213, 230], ["jax.zeros", "max", "len", "jax.grad", "jax.grad", "jax.hessian", "jax.hessian", "jax.linalg.solve"], "function", ["None"], ["", "def", "_function_project", "(", "source_params", ",", "source_basis", ",", "target_basis", ",", "n_basis", ")", ":", "\n", "    ", "\"\"\"Linear function projection is one step of Newton's method.\"\"\"", "\n", "#print('tracing', source_params.shape)", "\n", "target_params", "=", "jnp", ".", "zeros", "(", "n_basis", ")", "\n", "n_cell", "=", "max", "(", "len", "(", "source_params", ")", ",", "n_basis", ")", "\n", "vG", "=", "jax", ".", "grad", "(", "projection_loss", ")", "(", "target_params", ",", "\n", "source_params", ",", "\n", "target_basis", ",", "\n", "source_basis", ",", "\n", "n_cell", "=", "n_cell", ")", "\n", "mH", "=", "jax", ".", "hessian", "(", "projection_loss", ")", "(", "target_params", ",", "\n", "source_params", ",", "\n", "target_basis", ",", "\n", "source_basis", ",", "\n", "n_cell", "=", "n_cell", ")", "\n", "d_params", "=", "-", "jnp", ".", "linalg", ".", "solve", "(", "mH", ",", "vG", ")", "\n", "return", "d_params", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.function_project_array": [[239, 244], ["jax.array", "jnp.array.reshape", "function_project_mapped", "list", "function_project_mapped.reshape"], "function", ["None"], ["def", "function_project_array", "(", "source_params", ",", "source_basis", ",", "target_basis", ",", "n_basis", ")", ":", "\n", "    ", "ys_stack", "=", "jnp", ".", "array", "(", "source_params", ")", "\n", "ys_flat", "=", "ys_stack", ".", "reshape", "(", "ys_stack", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "nodes", "=", "function_project_mapped", "(", "ys_flat", ",", "source_basis", ",", "target_basis", ",", "n_basis", ")", "\n", "return", "list", "(", "nodes", ".", "reshape", "(", "(", "n_basis", ",", ")", "+", "ys_stack", ".", "shape", "[", "1", ":", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.function_project_tree": [[246, 256], ["jax.tree_multimap", "jax.tree_multimap", "jax.tree_structure", "jax.tree_structure", "jax.tree_structure", "jax.tree_structure", "jax.tree_transpose", "jax.tree_transpose", "list", "list", "basis_functions.function_project_array", "range"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.function_project_array"], ["", "def", "function_project_tree", "(", "source_params", ",", "source_basis", ",", "target_basis", ",", "n_basis", ")", ":", "\n", "\n", "    ", "def", "function_project_list", "(", "*", "args", ")", ":", "\n", "        ", "return", "list", "(", "\n", "function_project_array", "(", "args", ",", "source_basis", ",", "target_basis", ",", "n_basis", ")", ")", "\n", "\n", "", "out", "=", "jax", ".", "tree_multimap", "(", "function_project_list", ",", "*", "source_params", ")", "\n", "original_struct", "=", "jax", ".", "tree_structure", "(", "source_params", "[", "0", "]", ")", "\n", "mapped_struct", "=", "jax", ".", "tree_structure", "(", "list", "(", "range", "(", "n_basis", ")", ")", ")", "\n", "return", "jax", ".", "tree_transpose", "(", "original_struct", ",", "mapped_struct", ",", "out", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.ConvergenceTester.__init__": [[112, 134], ["experiment.Experiment", "experiment.Experiment.model.clone", "flax.training.checkpoints.restore_checkpoint", "convergence.convert_checkpoint", "experiment.Experiment.model.clone.clone", "globals", "len", "len"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.convert_checkpoint"], ["    ", "def", "__init__", "(", "self", ",", "path", ":", "str", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "\n", "\n", "exp", "=", "Experiment", "(", "path", "=", "path", ",", "scope", "=", "globals", "(", ")", ")", "\n", "# The model was saved at the begining, got longer after refinement.", "\n", "final_n_step", "=", "exp", ".", "model", ".", "n_step", "*", "2", "**", "len", "(", "exp", ".", "extra", "[", "'refine_epochs'", "]", ")", "\n", "final_n_basis", "=", "exp", ".", "model", ".", "n_basis", "*", "2", "**", "len", "(", "exp", ".", "extra", "[", "'refine_epochs'", "]", ")", "\n", "final_model", "=", "exp", ".", "model", ".", "clone", "(", "n_step", "=", "final_n_step", ",", "n_basis", "=", "final_n_basis", ")", "\n", "\n", "#print('final_n_step', final_n_step)", "\n", "#print('final_n_basis', final_n_basis)", "\n", "#print('final_model', final_model)", "\n", "\n", "# Load the parameters", "\n", "chp", "=", "checkpoints", ".", "restore_checkpoint", "(", "path", ",", "None", ")", "\n", "loaded_params", ",", "loaded_state", "=", "convert_checkpoint", "(", "chp", ")", "\n", "eval_model", "=", "final_model", ".", "clone", "(", "training", "=", "False", ")", "\n", "\n", "self", ".", "exp", "=", "exp", "\n", "self", ".", "params", "=", "loaded_params", "\n", "self", ".", "state", "=", "loaded_state", "\n", "self", ".", "eval_model", "=", "eval_model", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.ConvergenceTester.perform_convergence_test": [[135, 155], ["print", "print", "convergence.ConvergenceTester.eval_model.clone", "training.Tester", "training.Tester.metrics_over_test_set", "float", "convergence.ConvergenceTester.perform_convergence_test.infer_test_error"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.Tester.metrics_over_test_set"], ["", "def", "perform_convergence_test", "(", "self", ",", "test_data", ":", "Any", ",", "\n", "n_steps", ":", "Iterable", "[", "int", "]", ",", "\n", "schemes", ":", "Iterable", "[", "str", "]", ")", ":", "\n", "\n", "#@SimDataDB2(os.path.join(self.path, \"convergence.sqlite\"))", "\n", "        ", "def", "infer_test_error", "(", "scheme", ":", "str", ",", "n_step", ":", "int", ")", "->", "Tuple", "[", "float", "]", ":", "\n", "            ", "model", "=", "self", ".", "eval_model", ".", "clone", "(", "n_step", "=", "n_step", ",", "scheme", "=", "scheme", ")", "\n", "tester", "=", "Tester", "(", "model", ",", "test_data", ")", "\n", "err", "=", "tester", ".", "metrics_over_test_set", "(", "self", ".", "params", ",", "self", ".", "state", ")", "\n", "return", "float", "(", "err", ")", ",", "\n", "\n", "", "print", "(", "\"| Scheme | n_step | error | n_ops |\"", ")", "\n", "print", "(", "\"|-----------------------------------|\"", ")", "\n", "errors", "=", "[", "]", "\n", "for", "n_step", "in", "n_steps", ":", "\n", "            ", "for", "scheme", "in", "schemes", ":", "\n", "                ", "error", ",", "=", "infer_test_error", "(", "scheme", ",", "n_step", ")", "\n", "errors", ".", "append", "(", "(", "n_step", ",", "error", ")", ")", "\n", "print", "(", "f\"|{scheme}|{n_step}|{error}|\"", ")", "\n", "", "", "return", "errors", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.ConvergenceTester.project": [[156, 163], ["functools.lru_cache", "convergence.project_continuous_net", "convergence.ConvergenceTester.eval_model.clone"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.project_continuous_net"], ["", "@", "functools", ".", "lru_cache", "(", ")", "\n", "def", "project", "(", "self", ",", "target_basis", ":", "str", ",", "n_basis", ":", "int", ")", ":", "\n", "        ", "W2", ",", "S2", "=", "project_continuous_net", "(", "self", ".", "params", ",", "self", ".", "state", ",", "\n", "BASIS", "[", "self", ".", "eval_model", ".", "basis", "]", ",", "\n", "BASIS", "[", "target_basis", "]", ",", "n_basis", ")", "\n", "new_model", "=", "self", ".", "eval_model", ".", "clone", "(", "basis", "=", "target_basis", ",", "n_basis", "=", "n_basis", ")", "\n", "return", "new_model", ",", "W2", ",", "S2", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.ConvergenceTester.infer": [[165, 176], ["training.Tester", "training.Tester.metrics_over_test_set", "print", "print", "print", "print"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.Tester.metrics_over_test_set"], ["", "def", "infer", "(", "self", ",", "test_data", ":", "Any", ")", ":", "\n", "#t0 = timeit.default_timer()", "\n", "        ", "tester", "=", "Tester", "(", "self", ".", "eval_model", ",", "test_data", ")", "\n", "err", "=", "tester", ".", "metrics_over_test_set", "(", "self", ".", "params", ",", "self", ".", "state", ")", "\n", "#inf_time = timeit.default_timer()  - t0", "\n", "\n", "print", "(", "'n_step'", ",", "self", ".", "eval_model", ".", "n_step", ")", "\n", "print", "(", "'n_basis'", ",", "self", ".", "eval_model", ".", "n_basis", ")", "\n", "print", "(", "'scheme'", ",", "self", ".", "eval_model", ".", "scheme", ")", "\n", "print", "(", "'Test error: '", ",", "err", ")", "\n", "return", "err", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.ConvergenceTester.perform_project_and_infer": [[178, 224], ["print", "print", "print", "print", "print", "print", "convergence.ConvergenceTester.project", "p_model.clone", "training.Tester", "range", "list", "list", "timeit.default_timer", "training.Tester.metrics_over_test_set", "inf_time.append", "float", "tools.tools.count_parameters", "float", "numpy.round", "numpy.round", "numpy.median", "timeit.default_timer", "convergence.ConvergenceTester.perform_project_and_infer.infer_projected_test_error3"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.ConvergenceTester.project", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.Tester.metrics_over_test_set", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.count_parameters"], ["", "def", "perform_project_and_infer", "(", "self", ",", "test_data", ":", "Any", ",", "\n", "bases", ":", "Iterable", "[", "str", "]", ",", "\n", "n_bases", ":", "Iterable", "[", "int", "]", ",", "\n", "schemes", ":", "Iterable", "[", "str", "]", ",", "\n", "n_steps", ":", "Iterable", "[", "int", "]", ")", ":", "\n", "\n", "##@SimDataDB2(os.path.join(self.path, \"convergence.sqlite\"))", "\n", "        ", "def", "infer_projected_test_error3", "(", "scheme", ":", "str", ",", "n_step", ":", "int", ",", "basis", ":", "str", ",", "\n", "n_basis", ":", "int", ")", "->", "Tuple", "[", "float", ",", "int", ",", "float", "]", ":", "\n", "# Rely on the LRU cache to avoid the second call, and sqlite ", "\n", "# cache to avoid the first call.", "\n", "            ", "p_model", ",", "p_params", ",", "p_state", "=", "self", ".", "project", "(", "basis", ",", "n_basis", ")", "\n", "\n", "s_p_model", "=", "p_model", ".", "clone", "(", "n_step", "=", "n_step", ",", "scheme", "=", "scheme", ")", "\n", "tester", "=", "Tester", "(", "s_p_model", ",", "test_data", ")", "\n", "\n", "inf_time", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "6", ")", ":", "\n", "                ", "t0", "=", "timeit", ".", "default_timer", "(", ")", "\n", "err", "=", "tester", ".", "metrics_over_test_set", "(", "p_params", ",", "p_state", ")", "\n", "inf_time", ".", "append", "(", "timeit", ".", "default_timer", "(", ")", "-", "t0", ")", "\n", "\n", "", "return", "float", "(", "err", ")", ",", "count_parameters", "(", "p_params", ")", ",", "float", "(", "np", ".", "median", "(", "inf_time", ")", ")", "\n", "\n", "\n", "\n", "", "print", "(", "\"| Basis | n_basis | Scheme | n_step | error | n_params |\"", ")", "\n", "print", "(", "\"|------------------------------------------------------|\"", ")", "\n", "errors", "=", "{", "}", "\n", "errs", "=", "[", "]", "\n", "times", "=", "[", "]", "\n", "nparms", "=", "[", "]", "\n", "\n", "for", "basis", "in", "bases", ":", "\n", "            ", "for", "n_basis", "in", "n_bases", ":", "\n", "                ", "for", "n_step", "in", "n_steps", ":", "\n", "                    ", "for", "scheme", "in", "schemes", ":", "\n", "                        ", "e", ",", "num_params", ",", "inf_time", "=", "infer_projected_test_error3", "(", "scheme", ",", "n_step", ",", "basis", ",", "n_basis", ")", "\n", "errs", ".", "append", "(", "e", ")", "\n", "times", ".", "append", "(", "inf_time", ")", "\n", "nparms", ".", "append", "(", "num_params", ")", "\n", "print", "(", "f\"| {basis:20} | {n_basis} | {scheme:5} | {n_step} | {e:1.3f} | {num_params} |\"", ")", "\n", "", "", "", "", "print", "(", "n_bases", ")", "\n", "print", "(", "list", "(", "np", ".", "round", "(", "errs", ",", "4", ")", ")", ")", "\n", "print", "(", "nparms", ")", "\n", "print", "(", "list", "(", "np", ".", "round", "(", "times", ",", "4", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.ConvergenceTester.interpolate": [[226, 233], ["functools.lru_cache", "convergence.interpolate_continuous_net", "convergence.ConvergenceTester.eval_model.clone"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.interpolate_continuous_net"], ["", "@", "functools", ".", "lru_cache", "(", ")", "\n", "def", "interpolate", "(", "self", ",", "target_basis", ",", "n_basis", ")", ":", "\n", "        ", "W2", ",", "S2", "=", "interpolate_continuous_net", "(", "self", ".", "params", ",", "self", ".", "state", ",", "\n", "BASIS", "[", "self", ".", "eval_model", ".", "basis", "]", ",", "\n", "target_basis", ",", "n_basis", ")", "\n", "new_model", "=", "self", ".", "eval_model", ".", "clone", "(", "basis", "=", "target_basis", ",", "n_basis", "=", "n_basis", ")", "\n", "return", "new_model", ",", "W2", ",", "S2", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.ConvergenceTester.perform_interpolate_and_infer": [[234, 281], ["print", "print", "print", "print", "print", "print", "convergence.ConvergenceTester.interpolate", "p_model.clone", "training.Tester", "range", "list", "list", "timeit.default_timer", "training.Tester.metrics_over_test_set", "inf_time.append", "float", "tools.tools.count_parameters", "float", "numpy.round", "numpy.round", "numpy.median", "timeit.default_timer", "convergence.ConvergenceTester.perform_interpolate_and_infer.infer_interpolated_test_error2"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.ConvergenceTester.interpolate", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.training.Tester.metrics_over_test_set", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.count_parameters"], ["", "def", "perform_interpolate_and_infer", "(", "self", ",", "test_data", ":", "Any", ",", "\n", "bases", ":", "Iterable", "[", "str", "]", ",", "\n", "n_bases", ":", "Iterable", "[", "int", "]", ",", "\n", "schemes", ":", "Iterable", "[", "str", "]", ",", "\n", "n_steps", ":", "Iterable", "[", "int", "]", ")", ":", "\n", "\n", "#@SimDataDB2(os.path.join(self.path, \"convergence.sqlite\"))", "\n", "        ", "def", "infer_interpolated_test_error2", "(", "scheme", ":", "str", ",", "n_step", ":", "int", ",", "basis", ":", "str", ",", "\n", "n_basis", ":", "int", ")", "->", "Tuple", "[", "float", ",", "int", ",", "float", "]", ":", "\n", "# Rely on the LRU cache to avoid the second call, and sqlite ", "\n", "# cache to avoid the first call.", "\n", "            ", "p_model", ",", "p_params", ",", "p_state", "=", "self", ".", "interpolate", "(", "basis", ",", "n_basis", ")", "\n", "s_p_model", "=", "p_model", ".", "clone", "(", "n_step", "=", "n_step", ",", "scheme", "=", "scheme", ")", "\n", "tester", "=", "Tester", "(", "s_p_model", ",", "test_data", ")", "\n", "\n", "inf_time", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "6", ")", ":", "\n", "                ", "t0", "=", "timeit", ".", "default_timer", "(", ")", "\n", "err", "=", "tester", ".", "metrics_over_test_set", "(", "p_params", ",", "p_state", ")", "\n", "inf_time", ".", "append", "(", "timeit", ".", "default_timer", "(", ")", "-", "t0", ")", "\n", "\n", "", "return", "float", "(", "err", ")", ",", "count_parameters", "(", "p_params", ")", ",", "float", "(", "np", ".", "median", "(", "inf_time", ")", ")", "\n", "\n", "", "print", "(", "\"| Basis | n_basis | Scheme | n_step | error | n_params |\"", ")", "\n", "print", "(", "\"|------------------------------------------------------|\"", ")", "\n", "errors", "=", "{", "}", "\n", "\n", "errs", "=", "[", "]", "\n", "times", "=", "[", "]", "\n", "nparms", "=", "[", "]", "\n", "\n", "for", "basis", "in", "bases", ":", "\n", "            ", "for", "n_basis", "in", "n_bases", ":", "\n", "                ", "for", "n_step", "in", "n_steps", ":", "\n", "                    ", "for", "scheme", "in", "schemes", ":", "\n", "                        ", "e", ",", "num_params", ",", "inf_time", "=", "infer_interpolated_test_error2", "(", "scheme", ",", "n_step", ",", "basis", ",", "n_basis", ")", "\n", "\n", "errs", ".", "append", "(", "e", ")", "\n", "times", ".", "append", "(", "inf_time", ")", "\n", "nparms", ".", "append", "(", "num_params", ")", "\n", "\n", "print", "(", "f\"| {basis:20} | {n_basis} | {scheme:5} | {n_step} | {e:1.3f} | {num_params} |\"", ")", "\n", "\n", "", "", "", "", "print", "(", "n_bases", ")", "\n", "print", "(", "list", "(", "np", ".", "round", "(", "errs", ",", "4", ")", ")", ")", "\n", "print", "(", "nparms", ")", "\n", "print", "(", "list", "(", "np", ".", "round", "(", "times", ",", "4", ")", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.dict_to_list": [[27, 32], ["d.items", "len", "int"], "function", ["None"], ["def", "dict_to_list", "(", "d", ":", "JaxTreeType", ")", "->", "List", "[", "JaxTreeType", "]", ":", "\n", "    ", "as_list", "=", "[", "None", "]", "*", "len", "(", "d", ")", "\n", "for", "str_idx", ",", "v", "in", "d", ".", "items", "(", ")", ":", "\n", "        ", "as_list", "[", "int", "(", "str_idx", ")", "]", "=", "v", "\n", "", "return", "as_list", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.convert_checkpoint": [[34, 52], ["params.copy", "state.copy", "convergence.dict_to_list", "convergence.dict_to_list"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.dict_to_list", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.dict_to_list"], ["", "def", "convert_checkpoint", "(", "chp", ")", "->", "Tuple", "[", "JaxTreeType", ",", "JaxTreeType", "]", ":", "\n", "# Reshape the values that were loaded. This is needed because", "\n", "# StatefulContinuousBlock uses lists in the parameter trees, but the", "\n", "# checkpoint always loads dictionaries. I.e., we turn", "\n", "# {'StatefulContinuousBlock0':{'0':W0, '1':W1}} into", "\n", "# {'StatefulContinuousBlock0':[W0, W1]}", "\n", "    ", "params", "=", "chp", "[", "'optimizer'", "]", "[", "'target'", "]", "\n", "state", "=", "chp", "[", "'state'", "]", "\n", "r_p", "=", "params", ".", "copy", "(", ")", "\n", "r_s", "=", "state", ".", "copy", "(", ")", "\n", "for", "k", "in", "params", ":", "\n", "        ", "if", "'StatefulContinuousBlock'", "in", "k", ":", "\n", "            ", "r_p", "[", "k", "]", "[", "'ode_params'", "]", "=", "dict_to_list", "(", "\n", "params", "[", "k", "]", "[", "'ode_params'", "]", ")", "\n", "", "", "for", "k", "in", "r_s", "[", "'ode_state'", "]", ":", "\n", "        ", "r_s", "[", "'ode_state'", "]", "[", "k", "]", "[", "'state'", "]", "=", "dict_to_list", "(", "\n", "state", "[", "'ode_state'", "]", "[", "k", "]", "[", "'state'", "]", ")", "\n", "", "return", "r_p", ",", "r_s", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.project_continuous_net": [[54, 80], ["flax.core.unfreeze().copy", "flax.core.unfreeze().copy", "PROJ", "PROJ", "PROJ", "PROJ", "PROJ", "PROJ", "basis_functions.function_project_tree", "flax.core.freeze", "flax.core.freeze", "flax.core.unfreeze", "flax.core.unfreeze"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.function_project_tree"], ["", "def", "project_continuous_net", "(", "params", ":", "Iterable", "[", "JaxTreeType", "]", ",", "\n", "state", ":", "Iterable", "[", "JaxTreeType", "]", ",", "\n", "source_basis", ":", "ContinuousParameters", ",", "\n", "target_basis", ":", "ContinuousParameters", ",", "\n", "n_basis", ":", "int", ")", "->", "Tuple", "[", "Iterable", "[", "JaxTreeType", "]", ",", "Iterable", "[", "JaxTreeType", "]", "]", ":", "\n", "    ", "PROJ", "=", "lambda", "w_", ":", "function_project_tree", "(", "w_", ",", "source_basis", ",", "target_basis", ",", "\n", "n_basis", ")", "\n", "p2", "=", "flax", ".", "core", ".", "unfreeze", "(", "params", ")", ".", "copy", "(", ")", "\n", "s2", "=", "flax", ".", "core", ".", "unfreeze", "(", "state", ")", ".", "copy", "(", ")", "\n", "p2", "[", "'StatefulContinuousBlock_0'", "]", "[", "'ode_params'", "]", "=", "PROJ", "(", "\n", "params", "[", "'StatefulContinuousBlock_0'", "]", "[", "'ode_params'", "]", ")", "\n", "p2", "[", "'StatefulContinuousBlock_1'", "]", "[", "'ode_params'", "]", "=", "PROJ", "(", "\n", "params", "[", "'StatefulContinuousBlock_1'", "]", "[", "'ode_params'", "]", ")", "\n", "p2", "[", "'StatefulContinuousBlock_2'", "]", "[", "'ode_params'", "]", "=", "PROJ", "(", "\n", "params", "[", "'StatefulContinuousBlock_2'", "]", "[", "'ode_params'", "]", ")", "\n", "\n", "s2", "[", "'ode_state'", "]", "[", "'StatefulContinuousBlock_0'", "]", "[", "'state'", "]", "=", "PROJ", "(", "\n", "state", "[", "'ode_state'", "]", "[", "'StatefulContinuousBlock_0'", "]", "[", "'state'", "]", ")", "\n", "s2", "[", "'ode_state'", "]", "[", "'StatefulContinuousBlock_1'", "]", "[", "'state'", "]", "=", "PROJ", "(", "\n", "state", "[", "'ode_state'", "]", "[", "'StatefulContinuousBlock_1'", "]", "[", "'state'", "]", ")", "\n", "s2", "[", "'ode_state'", "]", "[", "'StatefulContinuousBlock_2'", "]", "[", "'state'", "]", "=", "PROJ", "(", "\n", "state", "[", "'ode_state'", "]", "[", "'StatefulContinuousBlock_2'", "]", "[", "'state'", "]", ")", "\n", "\n", "#print('Originally: ', count_parameters(params))", "\n", "#print('Projected: ', count_parameters(p2))", "\n", "return", "flax", ".", "core", ".", "freeze", "(", "p2", ")", ",", "flax", ".", "core", ".", "freeze", "(", "s2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.convergence.interpolate_continuous_net": [[82, 108], ["flax.core.unfreeze().copy", "flax.core.unfreeze().copy", "INTERP", "INTERP", "INTERP", "INTERP", "INTERP", "INTERP", "flax.core.freeze", "flax.core.freeze", "source_basis", "flax.core.unfreeze", "flax.core.unfreeze"], "function", ["None"], ["", "def", "interpolate_continuous_net", "(", "params", ":", "Iterable", "[", "JaxTreeType", "]", ",", "\n", "state", ":", "Iterable", "[", "JaxTreeType", "]", ",", "\n", "source_basis", ":", "ContinuousParameters", ",", "\n", "target_basis", ":", "str", ",", "\n", "n_basis", ":", "int", ")", "->", "Tuple", "[", "Iterable", "[", "JaxTreeType", "]", ",", "Iterable", "[", "JaxTreeType", "]", "]", ":", "\n", "    ", "INTERP", "=", "lambda", "w_", ":", "INTERPOLATE", "[", "target_basis", "]", "(", "source_basis", "(", "w_", ")", ",", "\n", "n_basis", ")", "\n", "p2", "=", "flax", ".", "core", ".", "unfreeze", "(", "params", ")", ".", "copy", "(", ")", "\n", "s2", "=", "flax", ".", "core", ".", "unfreeze", "(", "state", ")", ".", "copy", "(", ")", "\n", "p2", "[", "'StatefulContinuousBlock_0'", "]", "[", "'ode_params'", "]", "=", "INTERP", "(", "\n", "params", "[", "'StatefulContinuousBlock_0'", "]", "[", "'ode_params'", "]", ")", "\n", "p2", "[", "'StatefulContinuousBlock_1'", "]", "[", "'ode_params'", "]", "=", "INTERP", "(", "\n", "params", "[", "'StatefulContinuousBlock_1'", "]", "[", "'ode_params'", "]", ")", "\n", "p2", "[", "'StatefulContinuousBlock_2'", "]", "[", "'ode_params'", "]", "=", "INTERP", "(", "\n", "params", "[", "'StatefulContinuousBlock_2'", "]", "[", "'ode_params'", "]", ")", "\n", "\n", "s2", "[", "'ode_state'", "]", "[", "'StatefulContinuousBlock_0'", "]", "[", "'state'", "]", "=", "INTERP", "(", "\n", "state", "[", "'ode_state'", "]", "[", "'StatefulContinuousBlock_0'", "]", "[", "'state'", "]", ")", "\n", "s2", "[", "'ode_state'", "]", "[", "'StatefulContinuousBlock_1'", "]", "[", "'state'", "]", "=", "INTERP", "(", "\n", "state", "[", "'ode_state'", "]", "[", "'StatefulContinuousBlock_1'", "]", "[", "'state'", "]", ")", "\n", "s2", "[", "'ode_state'", "]", "[", "'StatefulContinuousBlock_2'", "]", "[", "'state'", "]", "=", "INTERP", "(", "\n", "state", "[", "'ode_state'", "]", "[", "'StatefulContinuousBlock_2'", "]", "[", "'state'", "]", ")", "\n", "\n", "#print('Originally: ', count_parameters(params))", "\n", "#print('Interpolate: ', count_parameters(p2))", "\n", "return", "flax", ".", "core", ".", "freeze", "(", "p2", ")", ",", "flax", ".", "core", ".", "freeze", "(", "s2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.residual_modules.ShallowNet.__call__": [[48, 53], ["flax.tanh", "flax.tanh", "flax.tanh", "flax.tanh", "flax.Dense", "flax.Dense", "flax.Dense", "flax.Dense"], "methods", ["None"], ["@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "nn", ".", "Dense", "(", "self", ".", "hidden_dim", ",", "use_bias", "=", "self", ".", "use_bias", ")", "(", "x", ")", "\n", "h", "=", "nn", ".", "tanh", "(", "h", ")", "\n", "return", "nn", ".", "tanh", "(", "nn", ".", "Dense", "(", "self", ".", "output_dim", ",", "use_bias", "=", "self", ".", "use_bias", ")", "(", "h", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.residual_modules.ResidualUnit.__call__": [[64, 75], ["residual_modules.ResidualUnit.activation", "residual_modules.ResidualUnit.activation", "flax.Conv", "flax.Conv", "flax.Conv", "flax.Conv"], "methods", ["None"], ["@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "NORMS", "[", "self", ".", "norm", "]", "(", "use_running_average", "=", "not", "self", ".", "training", ")", "(", "x", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "nn", ".", "Conv", "(", "self", ".", "hidden_features", ",", "(", "3", ",", "3", ")", ",", "use_bias", "=", "self", ".", "use_bias", ",", "\n", "kernel_init", "=", "INITS", "[", "self", ".", "kernel_init", "]", ")", "(", "h", ")", "\n", "h", "=", "NORMS", "[", "self", ".", "norm", "]", "(", "use_running_average", "=", "not", "self", ".", "training", ")", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "nn", ".", "Conv", "(", "x", ".", "shape", "[", "-", "1", "]", ",", "(", "3", ",", "3", ")", ",", "use_bias", "=", "self", ".", "use_bias", ",", "\n", "kernel_init", "=", "INITS", "[", "self", ".", "kernel_init", "]", ")", "(", "h", ")", "\n", "return", "self", ".", "epsilon", "*", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.residual_modules.ResidualStitch.__call__": [[88, 111], ["residual_modules.ResidualStitch.activation", "residual_modules.ResidualStitch.activation", "flax.Conv", "flax.Conv", "flax.Conv", "flax.Conv", "flax.Conv", "flax.Conv"], "methods", ["None"], ["@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "NORMS", "[", "self", ".", "norm", "]", "(", "use_running_average", "=", "not", "self", ".", "training", ")", "(", "x", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "\n", "if", "self", ".", "strides", "[", "0", "]", "!=", "1", ":", "\n", "            ", "x_down", "=", "nn", ".", "Conv", "(", "self", ".", "output_features", ",", "(", "1", ",", "1", ")", ",", "use_bias", "=", "self", ".", "use_bias", ",", "\n", "strides", "=", "self", ".", "strides", ",", "kernel_init", "=", "INITS", "[", "self", ".", "kernel_init", "]", ")", "(", "x", ")", "\n", "x_down", "=", "NORMS", "[", "self", ".", "norm", "]", "(", "use_running_average", "=", "not", "self", ".", "training", ")", "(", "x_down", ")", "\n", "\n", "\n", "", "h", "=", "nn", ".", "Conv", "(", "self", ".", "output_features", ",", "(", "3", ",", "3", ")", ",", "use_bias", "=", "self", ".", "use_bias", ",", "\n", "strides", "=", "self", ".", "strides", ",", "kernel_init", "=", "INITS", "[", "self", ".", "kernel_init", "]", ")", "(", "h", ")", "\n", "h", "=", "NORMS", "[", "self", ".", "norm", "]", "(", "use_running_average", "=", "not", "self", ".", "training", ")", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "nn", ".", "Conv", "(", "self", ".", "output_features", ",", "(", "3", ",", "3", ")", ",", "use_bias", "=", "self", ".", "use_bias", ",", "\n", "kernel_init", "=", "INITS", "[", "self", ".", "kernel_init", "]", ")", "(", "h", ")", "\n", "\n", "\n", "if", "self", ".", "strides", "[", "0", "]", "!=", "1", ":", "\n", "            ", "return", "x_down", "+", "self", ".", "epsilon", "*", "h", "\n", "", "else", ":", "\n", "            ", "return", "x", "+", "self", ".", "epsilon", "*", "h", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.continuous_block.StatefulContinuousBlock.make_param_nodes": [[83, 87], ["continuous_block.initialize_multiple_times_split_state"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.continuous_block.initialize_multiple_times_split_state"], ["def", "make_param_nodes", "(", "self", ",", "key", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "initialize_multiple_times_split_state", "(", "key", ",", "self", ".", "R", ",", "x", ",", "\n", "self", ".", "n_basis", ",", "*", "args", ",", "\n", "**", "kwargs", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.continuous_block.StatefulContinuousBlock.make_state_nodes": [[88, 93], ["jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "continuous_block.initialize_multiple_times_split_state"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.continuous_block.initialize_multiple_times_split_state"], ["", "def", "make_state_nodes", "(", "self", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "key", "=", "jax", ".", "random", ".", "PRNGKey", "(", "0", ")", "\n", "return", "initialize_multiple_times_split_state", "(", "key", ",", "self", ".", "R", ",", "x", ",", "\n", "self", ".", "n_basis", ",", "*", "args", ",", "\n", "**", "kwargs", ")", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.continuous_block.StatefulContinuousBlock.__call__": [[94, 121], ["continuous_block.StatefulContinuousBlock.param", "continuous_block.StatefulContinuousBlock.variable", "len", "continuous_block.StatefulContinuousBlock.value[].keys", "continuous_block.zip_time_dicts", "basis", "stateful_ode_solvers.StateOdeIntegrateFast", "basis", "nonauto_ode_solvers.OdeIntegrateFast", "continuous_block.StatefulContinuousBlock.R.apply", "basis_functions.point_project_tree", "continuous_block.StatefulContinuousBlock.R.apply", "basis.", "basis.", "continuous_block.StatefulContinuousBlock.value[].keys"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.continuous_block.zip_time_dicts", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.stateful_ode_solvers.StateOdeIntegrateFast", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.OdeIntegrateFast", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.point_project_tree"], ["", "@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "ode_params", "=", "self", ".", "param", "(", "'ode_params'", ",", "self", ".", "make_param_nodes", ",", "x", ")", "\n", "ode_states", "=", "self", ".", "variable", "(", "'ode_state'", ",", "'state'", ",", "self", ".", "make_state_nodes", ",", "\n", "x", ")", "\n", "\n", "# The model instance's n_basis only dictates initialization.", "\n", "n_basis", "=", "len", "(", "ode_params", ")", "\n", "basis", "=", "BASIS", "[", "self", ".", "basis", "]", "\n", "\n", "# Two versions for whether or not R has a state.", "\n", "if", "ode_states", ".", "value", "[", "0", "]", ".", "keys", "(", ")", ":", "\n", "            ", "full_params", "=", "zip_time_dicts", "(", "ode_params", ",", "ode_states", ".", "value", ")", "\n", "params_of_t", "=", "basis", "(", "full_params", ")", "\n", "r", "=", "lambda", "t", ",", "x", ":", "self", ".", "R", ".", "apply", "(", "\n", "params_of_t", "(", "t", ")", ",", "x", ",", "mutable", "=", "ode_states", ".", "value", "[", "0", "]", ".", "keys", "(", ")", ")", "\n", "y", ",", "t_points", ",", "state_points", "=", "StateOdeIntegrateFast", "(", "\n", "r", ",", "x", ",", "scheme", "=", "self", ".", "scheme", ",", "n_step", "=", "self", ".", "n_step", ")", "\n", "if", "self", ".", "training", ":", "\n", "                ", "new_state", "=", "point_project_tree", "(", "state_points", ",", "t_points", ",", "n_basis", ",", "\n", "basis", ")", "\n", "ode_states", ".", "value", "=", "new_state", "\n", "", "", "else", ":", "\n", "            ", "params_of_t", "=", "basis", "(", "ode_params", ")", "\n", "r", "=", "lambda", "t", ",", "x", ":", "self", ".", "R", ".", "apply", "(", "params_of_t", "(", "t", ")", ",", "x", ")", "\n", "y", "=", "OdeIntegrateFast", "(", "r", ",", "x", ",", "scheme", "=", "self", ".", "scheme", ",", "n_step", "=", "self", ".", "n_step", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.continuous_block.StatefulContinuousBlock.refine": [[122, 132], ["None"], "methods", ["None"], ["", "def", "refine", "(", "\n", "self", ",", "\n", "params", ":", "Iterable", "[", "JaxTreeType", "]", ",", "\n", "state", ":", "Iterable", "[", "JaxTreeType", "]", "=", "None", "\n", ")", "->", "Tuple", "[", "Iterable", "[", "JaxTreeType", "]", ",", "Iterable", "[", "JaxTreeType", "]", "]", ":", "\n", "        ", "\"\"\"Perform doubling refinement for these bases.\"\"\"", "\n", "if", "state", ":", "\n", "            ", "return", "REFINE", "[", "self", ".", "basis", "]", "(", "params", ")", ",", "REFINE", "[", "self", ".", "basis", "]", "(", "state", ")", "\n", "", "else", ":", "\n", "            ", "return", "REFINE", "[", "self", ".", "basis", "]", "(", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.continuous_block.ContinuousBlock.__call__": [[151, 161], ["continuous_block.ContinuousBlock.param", "len", "basis", "nonauto_ode_solvers.OdeIntegrateFast", "continuous_block.ContinuousBlock.R.apply", "basis."], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.OdeIntegrateFast"], ["@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "ode_params", "=", "self", ".", "param", "(", "'ode_params'", ",", "self", ".", "make_param_nodes", ",", "x", ")", "\n", "# The model instance's n_basis only dictates initialization.", "\n", "n_basis", "=", "len", "(", "ode_params", ")", "\n", "basis", "=", "BASIS", "[", "self", ".", "basis", "]", "\n", "params_of_t", "=", "basis", "(", "ode_params", ")", "\n", "r", "=", "lambda", "t", ",", "x", ":", "self", ".", "R", ".", "apply", "(", "params_of_t", "(", "t", ")", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "y", "=", "OdeIntegrateFast", "(", "r", ",", "x", ",", "scheme", "=", "self", ".", "scheme", ",", "n_step", "=", "self", ".", "n_step", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.continuous_block.ContinuousBlockSow.__call__": [[165, 181], ["continuous_block.ContinuousBlockSow.param", "len", "basis", "stateful_ode_solvers.StateOdeIntegrateFast", "continuous_block.ContinuousBlockSow.sow", "continuous_block.ContinuousBlockSow.sow", "continuous_block.ContinuousBlockSow.R.apply", "basis."], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.stateful_ode_solvers.StateOdeIntegrateFast"], ["    ", "@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "ode_params", "=", "self", ".", "param", "(", "'ode_params'", ",", "self", ".", "make_param_nodes", ",", "x", ")", "\n", "# The model instance's n_basis only dictates initialization.", "\n", "n_basis", "=", "len", "(", "ode_params", ")", "\n", "basis", "=", "BASIS", "[", "self", ".", "basis", "]", "\n", "params_of_t", "=", "basis", "(", "ode_params", ")", "\n", "r", "=", "lambda", "t", ",", "x", ":", "self", ".", "R", ".", "apply", "(", "\n", "params_of_t", "(", "t", ")", ",", "x", ",", "mutable", "=", "'intermediates'", ")", "\n", "y", ",", "t_points", ",", "sow_points", "=", "StateOdeIntegrateFast", "(", "r", ",", "\n", "x", ",", "\n", "scheme", "=", "self", ".", "scheme", ",", "\n", "n_step", "=", "self", ".", "n_step", ")", "\n", "self", ".", "sow", "(", "'intermediates'", ",", "'t_points'", ",", "t_points", ")", "\n", "self", ".", "sow", "(", "'intermediates'", ",", "'sow_points'", ",", "sow_points", ")", "\n", "return", "y", "\n", "", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.continuous_block.copy_and_perturb": [[19, 28], ["jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.split", "jax.random.split", "jax.tree_map", "jax.tree_map", "jax.array", "jax.random.normal", "jax.random.normal", "continuous_block.copy_and_perturb._map"], "function", ["None"], ["def", "copy_and_perturb", "(", "params", ",", "n_basis", ")", ":", "\n", "    ", "\"\"\"Make copies from a residual trace to make one per coefficient.\"\"\"", "\n", "prng_key", "=", "jax", ".", "random", ".", "PRNGKey", "(", "0", ")", "\n", "key", ",", "*", "subkeys", "=", "jax", ".", "random", ".", "split", "(", "prng_key", ",", "1", "+", "n_basis", ")", "\n", "\n", "def", "_map", "(", "x", ",", "key", ")", ":", "\n", "        ", "return", "jnp", ".", "array", "(", "x", ")", "+", "0.1", "*", "jax", ".", "random", ".", "normal", "(", "key", ",", "shape", "=", "x", ".", "shape", ")", "\n", "\n", "", "return", "[", "jax", ".", "tree_map", "(", "lambda", "x", ":", "_map", "(", "x", ",", "k", ")", ",", "params", ")", "for", "k", "in", "subkeys", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.continuous_block.initialize_multiple_times": [[31, 35], ["jax.random.split", "jax.random.split", "module.init"], "function", ["None"], ["", "def", "initialize_multiple_times", "(", "prng_key", ",", "module", ",", "x", ",", "n_basis", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Initilize module on x multiple times by splitting prng_key.\"\"\"", "\n", "key", ",", "*", "subkeys", "=", "jax", ".", "random", ".", "split", "(", "prng_key", ",", "1", "+", "n_basis", ")", "\n", "return", "[", "module", ".", "init", "(", "k", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", "for", "k", "in", "subkeys", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.continuous_block.initialize_multiple_times_split_state": [[37, 50], ["jax.random.split", "jax.random.split", "enumerate", "module.init", "module.init.pop", "states.append", "params.append"], "function", ["None"], ["", "def", "initialize_multiple_times_split_state", "(", "prng_key", ",", "module", ",", "x", ",", "n_basis", ",", "*", "args", ",", "\n", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Initilize module on x multiple times by splitting prng_key.\"\"\"", "\n", "key", ",", "*", "subkeys", "=", "jax", ".", "random", ".", "split", "(", "prng_key", ",", "1", "+", "n_basis", ")", "\n", "params", "=", "[", "]", "\n", "states", "=", "[", "]", "\n", "for", "i", ",", "k", "in", "enumerate", "(", "subkeys", ")", ":", "\n", "        ", "inits", "=", "module", ".", "init", "(", "key", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "state_i", ",", "p", "=", "inits", ".", "pop", "(", "'params'", ")", "\n", "states", ".", "append", "(", "state_i", ")", "\n", "param_i", "=", "{", "'params'", ":", "p", "}", "\n", "params", ".", "append", "(", "param_i", ")", "\n", "", "return", "params", ",", "states", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.continuous_block.zip_time_dicts": [[52, 57], ["range", "len", "zipped.append"], "function", ["None"], ["", "def", "zip_time_dicts", "(", "params", ",", "states", ")", ":", "\n", "    ", "zipped", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "params", ")", ")", ":", "\n", "        ", "zipped", ".", "append", "(", "{", "**", "params", "[", "i", "]", ",", "**", "states", "[", "i", "]", "}", ")", "\n", "", "return", "zipped", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.Euler": [[16, 22], ["f"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f"], ["def", "Euler", "(", "f", ":", "RateEquation", ",", "\n", "x", ":", "ArrayType", ",", "\n", "t0", ":", "float", "=", "0", ",", "\n", "Dt", ":", "float", "=", "1.0", ")", "->", "ArrayType", ":", "\n", "    ", "\"\"\"Forward Euler, O(Dt).\"\"\"", "\n", "return", "x", "+", "Dt", "*", "f", "(", "t0", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.Midpoint": [[24, 32], ["f", "f"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f"], ["", "def", "Midpoint", "(", "f", ":", "RateEquation", ",", "\n", "x", ":", "ArrayType", ",", "\n", "t0", ":", "float", "=", "0", ",", "\n", "Dt", ":", "float", "=", "1.0", ")", "->", "ArrayType", ":", "\n", "    ", "\"\"\"Explicit Midpoint, a two stage Runge Kutta, O(Dt^2).\"\"\"", "\n", "k1", "=", "f", "(", "t0", ",", "x", ")", "\n", "x1", "=", "x", "+", "0.5", "*", "Dt", "*", "k1", "# t = 1/2", "\n", "return", "x", "+", "Dt", "*", "f", "(", "t0", "+", "0.5", "*", "Dt", ",", "x1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.RK4": [[34, 48], ["f", "f", "f", "f"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f"], ["", "def", "RK4", "(", "f", ":", "RateEquation", ",", "\n", "x", ":", "ArrayType", ",", "\n", "t0", ":", "float", "=", "0", ",", "\n", "Dt", ":", "float", "=", "1.0", ")", "->", "ArrayType", ":", "\n", "    ", "\"\"\"The 'classic' RK4, a four stage Runge Kutta, O(Dt^4).\"\"\"", "\n", "k1", "=", "f", "(", "t0", ",", "x", ")", "# t = 0+ (inside of domain)", "\n", "x1", "=", "x", "+", "0.5", "*", "Dt", "*", "k1", "\n", "k2", "=", "f", "(", "t0", "+", "0.5", "*", "Dt", ",", "x1", ")", "# t = 1/2", "\n", "x2", "=", "x", "+", "0.5", "*", "Dt", "*", "k2", "\n", "k3", "=", "f", "(", "t0", "+", "0.5", "*", "Dt", ",", "x2", ")", "# t = 1/2", "\n", "x3", "=", "x", "+", "Dt", "*", "k3", "\n", "k4", "=", "f", "(", "t0", "+", "Dt", "-", "DT_OPEN_SET_EPS", ",", "x3", ")", "# t = 1- (inside domain)", "\n", "return", "x", "+", "Dt", "*", "(", "1.0", "/", "6.0", "*", "k1", "+", "1.0", "/", "3.0", "*", "k2", "+", "1.0", "/", "3.0", "*", "k3", "+", "\n", "1.0", "/", "6.0", "*", "k4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.RK4_38": [[50, 61], ["f", "f", "f", "f"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f"], ["", "def", "RK4_38", "(", "f", ":", "RateEquation", ",", "x", ":", "ArrayType", ",", "t0", ":", "float", "=", "0", ",", "Dt", ":", "float", "=", "1.0", ")", ":", "\n", "    ", "\"\"\"The 3/8s RK4, a four stage Runge Kutta, O(Dt^4).\"\"\"", "\n", "k1", "=", "f", "(", "t0", ",", "x", ")", "# t = 0+ (inside of domain)", "\n", "x1", "=", "x", "+", "1.0", "/", "3.0", "*", "Dt", "*", "k1", "\n", "k2", "=", "f", "(", "t0", "+", "1.0", "/", "3.0", "*", "Dt", ",", "x1", ")", "# t = 1/3", "\n", "x2", "=", "x", "+", "Dt", "*", "(", "-", "1.0", "/", "3.0", "*", "k1", "+", "1.0", "*", "k2", ")", "\n", "k3", "=", "f", "(", "t0", "+", "2.0", "/", "3.0", "*", "Dt", ",", "x2", ")", "# t = 2/2", "\n", "x3", "=", "x", "+", "Dt", "*", "(", "k1", "-", "k2", "+", "k3", ")", "\n", "k4", "=", "f", "(", "t0", "+", "Dt", "-", "DT_OPEN_SET_EPS", ",", "x3", ")", "# t = 1-", "\n", "return", "x", "+", "Dt", "*", "(", "1.0", "/", "8.0", "*", "k1", "+", "3.0", "/", "8.0", "*", "k2", "+", "3.0", "/", "8.0", "*", "k3", "+", "\n", "1.0", "/", "8.0", "*", "k4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.OdeIntegrateFast": [[71, 83], ["numpy.arange", "scheme"], "function", ["None"], ["def", "OdeIntegrateFast", "(", "f", ":", "RateEquation", ",", "\n", "x", ":", "ArrayType", ",", "\n", "scheme", ":", "Union", "[", "str", ",", "IntegrationScheme", "]", "=", "Euler", ",", "\n", "n_step", ":", "int", "=", "10", ")", "->", "ArrayType", ":", "\n", "    ", "try", ":", "\n", "        ", "scheme", "=", "SCHEME_TABLE", "[", "scheme", "]", "\n", "", "except", ":", "\n", "        ", "pass", "\n", "", "dt", "=", "1.0", "/", "n_step", "\n", "for", "t", "in", "onp", ".", "arange", "(", "0", ",", "1", ",", "dt", ")", ":", "\n", "        ", "x", "=", "scheme", "(", "f", ",", "x", ",", "t", ",", "dt", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.OdeIntegrateWithPoints": [[85, 99], ["numpy.arange", "numpy.array", "scheme", "xs.append", "numpy.array"], "function", ["None"], ["", "def", "OdeIntegrateWithPoints", "(", "f", ":", "RateEquation", ",", "\n", "x", ":", "ArrayType", ",", "\n", "scheme", ":", "Union", "[", "str", ",", "IntegrationScheme", "]", "=", "Euler", ",", "\n", "n_step", ":", "int", "=", "10", ")", "->", "List", "[", "ArrayType", "]", ":", "\n", "    ", "try", ":", "\n", "        ", "scheme", "=", "SCHEME_TABLE", "[", "scheme", "]", "\n", "", "except", ":", "\n", "        ", "pass", "\n", "", "dt", "=", "1.0", "/", "n_step", "\n", "xs", "=", "[", "onp", ".", "array", "(", "x", ")", "]", "\n", "for", "t", "in", "onp", ".", "arange", "(", "0", ",", "1", ",", "dt", ")", ":", "\n", "        ", "x", "=", "scheme", "(", "f", ",", "x", ",", "t", ",", "dt", ")", "\n", "xs", ".", "append", "(", "onp", ".", "array", "(", "x", ")", ")", "\n", "", "return", "xs", "\n", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.full_typename": [[8, 10], ["type", "type"], "function", ["None"], ["def", "full_typename", "(", "obj", ")", ":", "\n", "    ", "return", "f\"{type(obj).__module__}.{type(obj).__name__}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.to_dict": [[12, 17], ["type", "tools.to_dict", "obj.__dict__.items"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.to_dict"], ["", "def", "to_dict", "(", "obj", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "return", "{", "type", "(", "obj", ")", ".", "__name__", ":", "{", "k", ":", "to_dict", "(", "v", ")", "for", "k", ",", "v", "in", "obj", ".", "__dict__", ".", "items", "(", ")", "}", "}", "\n", "", "except", "AttributeError", ":", "\n", "        ", "return", "obj", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.module_to_dict": [[19, 46], ["type", "attributes.keys", "child_modules.items", "type.__annotations__.items", "module._state.children.items", "isinstance", "getattr", "nester", "module_dict"], "function", ["None"], ["", "", "def", "module_to_dict", "(", "module", ":", "Module", ",", "short", "=", "False", ")", ":", "\n", "    ", "\"\"\"Generate a dict representation of a module's arguments.\"\"\"", "\n", "nester", "=", "(", "lambda", "x", ":", "x", ")", "if", "short", "else", "to_dict", "\n", "cls", "=", "type", "(", "module", ")", "\n", "cls_name", "=", "cls", ".", "__name__", "\n", "description", "=", "{", "}", "\n", "attributes", "=", "{", "\n", "k", ":", "v", "\n", "for", "k", ",", "v", "in", "cls", ".", "__annotations__", ".", "items", "(", ")", "\n", "if", "k", "not", "in", "(", "'parent'", ",", "'name'", ")", "\n", "}", "\n", "child_modules", "=", "{", "\n", "k", ":", "v", "\n", "for", "k", ",", "v", "in", "module", ".", "_state", ".", "children", ".", "items", "(", ")", "# pytype: disable=attribute-error", "\n", "if", "isinstance", "(", "v", ",", "Module", ")", "\n", "}", "\n", "\n", "if", "attributes", ":", "\n", "        ", "for", "attr", "in", "attributes", ".", "keys", "(", ")", ":", "\n", "            ", "value", "=", "getattr", "(", "module", ",", "attr", ")", "\n", "description", "[", "attr", "]", "=", "nester", "(", "value", ")", "\n", "\n", "", "", "if", "child_modules", ":", "\n", "        ", "for", "name", ",", "child", "in", "child_modules", ".", "items", "(", ")", ":", "\n", "            ", "child_description", "=", "module_dict", "(", "child", ",", "num_spaces", ")", "\n", "description", "[", "name", "]", "=", "child_description", "\n", "", "", "return", "{", "cls_name", ":", "description", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.module_to_single_line": [[48, 55], ["tools.module_to_dict", "next", "iter", "module_to_dict.keys", "dict_repr[].items"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.module_to_dict"], ["", "def", "module_to_single_line", "(", "module", ":", "Module", ")", ":", "\n", "    ", "\"\"\"Make a filename-friendly string of a module.\"\"\"", "\n", "# TODO support nested modules", "\n", "dict_repr", "=", "module_to_dict", "(", "module", ",", "short", "=", "True", ")", "\n", "name", "=", "next", "(", "iter", "(", "dict_repr", ".", "keys", "(", ")", ")", ")", "# There's only one at the top.", "\n", "attrs", "=", "\",\"", ".", "join", "(", "f\"{k}={v}\"", "for", "k", ",", "v", "in", "dict_repr", "[", "name", "]", ".", "items", "(", ")", ")", "\n", "return", "f\"{name}_{attrs}\"", "[", ":", "500", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.parse_model_dict": [[57, 66], ["dict_repr.items", "type", "tools.parse_model_dict", "eval", "fields.items"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.parse_model_dict"], ["", "def", "parse_model_dict", "(", "dict_repr", ",", "scope", ")", ":", "\n", "    ", "\"\"\"Turn a dict into an instantiated model.\"\"\"", "\n", "# assert len(dict_repr) == 1", "\n", "if", "type", "(", "dict_repr", ")", "is", "not", "dict", ":", "\n", "        ", "return", "dict_repr", "\n", "", "for", "name", ",", "fields", "in", "dict_repr", ".", "items", "(", ")", ":", "\n", "        ", "fields", "=", "{", "k", ":", "parse_model_dict", "(", "v", ",", "scope", ")", "for", "k", ",", "v", "in", "fields", ".", "items", "(", ")", "}", "\n", "model", "=", "eval", "(", "name", ",", "scope", ")", "(", "**", "fields", ")", "# TODO security", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.load_model_dict_from_json": [[68, 72], ["tools.parse_model_dict", "open", "json.loads", "f.read"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.parse_model_dict"], ["", "def", "load_model_dict_from_json", "(", "fname", ",", "scope", ")", ":", "\n", "    ", "with", "open", "(", "fname", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "dict_repr", "=", "json", ".", "loads", "(", "f", ".", "read", "(", ")", ")", "\n", "", "return", "parse_model_dict", "(", "dict_repr", ",", "scope", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.optimizer_def_to_dict": [[74, 76], ["tools.full_typename"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.full_typename"], ["", "def", "optimizer_def_to_dict", "(", "optimizer_def", ")", ":", "\n", "    ", "return", "{", "full_typename", "(", "optimizer_def", ")", ":", "optimizer_def", ".", "hyper_params", ".", "__dict__", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.parse_optimizer_def_dict": [[78, 80], ["tools.parse_model_dict"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.parse_model_dict"], ["", "def", "parse_optimizer_def_dict", "(", "dict_repr", ",", "scope", ")", ":", "\n", "    ", "return", "parse_model_dict", "(", "dict_repr", ",", "scope", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.load_optimizer_def_dict_from_json": [[82, 84], ["tools.load_model_dict_from_json"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.load_model_dict_from_json"], ["", "def", "load_optimizer_def_dict_from_json", "(", "fname", ",", "scope", ")", ":", "\n", "    ", "return", "load_model_dict_from_json", "(", "fname", ",", "scope", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.count_parameters": [[86, 96], ["jax.tree_util.tree_reduce", "tools.count_parameters.size_of"], "function", ["None"], ["", "def", "count_parameters", "(", "tree", ")", ":", "\n", "    ", "def", "size_of", "(", "x", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "x", ".", "size", "\n", "", "except", ":", "\n", "            ", "try", ":", "\n", "                ", "return", "len", "(", "x", ")", "\n", "", "except", ":", "\n", "                ", "return", "1", "\n", "", "", "", "return", "jax", ".", "tree_util", ".", "tree_reduce", "(", "lambda", "x", ",", "y", ":", "x", "+", "size_of", "(", "y", ")", ",", "tree", ",", "initializer", "=", "0", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.get_data.get_dataset": [[7, 118], ["len", "int", "torch.utils.data.random_split", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR100.to", "torchvision.datasets.FashionMNIST.to", "torchvision.datasets.CIFAR100.to", "torchvision.transforms.Compose", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "torch.Generator().manual_seed", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "RuntimeError", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torch.Generator", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["None"], ["def", "get_dataset", "(", "name", "=", "'CIFAR10'", ",", "\n", "batch_size", "=", "128", ",", "\n", "test_batch_size", "=", "1024", ",", "\n", "root", "=", "'.'", ",", "\n", "device", "=", "None", ",", "\n", "seed", "=", "0", ")", ":", "\n", "\n", "    ", "if", "name", "==", "'CIFAR10'", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "\n", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "\n", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "\n", "refset", "=", "CIFAR10", "(", "root", "=", "root", "+", "'/CIFAR10_data'", ",", "\n", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "transform_test", ")", "\n", "trainset", "=", "CIFAR10", "(", "root", "=", "root", "+", "'/CIFAR10_data'", ",", "\n", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "transform_train", ")", "\n", "testset", "=", "CIFAR10", "(", "root", "=", "root", "+", "'/CIFAR10_data'", ",", "\n", "train", "=", "False", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "transform_test", ")", "\n", "\n", "", "elif", "name", "==", "'FMNIST'", ":", "\n", "        ", "transform", "=", "torchvision", ".", "transforms", ".", "Compose", "(", "[", "\n", "torchvision", ".", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "torchvision", ".", "transforms", ".", "Normalize", "(", "(", "0.5", ",", ")", ",", "(", "0.5", ",", ")", ")", ",", "\n", "]", ")", "\n", "refset", "=", "FashionMNIST", "(", "root", "+", "'/F_MNIST_data/'", ",", "\n", "download", "=", "True", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "transform", ")", "\n", "trainset", "=", "FashionMNIST", "(", "root", "+", "'/F_MNIST_data/'", ",", "\n", "download", "=", "True", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "transform", ")", "\n", "testset", "=", "FashionMNIST", "(", "root", "+", "'/F_MNIST_data/'", ",", "\n", "download", "=", "True", ",", "\n", "train", "=", "False", ",", "\n", "transform", "=", "transform", ")", "\n", "\n", "", "elif", "name", "==", "'CIFAR100'", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "\n", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "\n", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "\n", "trainset", "=", "CIFAR100", "(", "root", "=", "root", "+", "'/CIFAR100/'", ",", "\n", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "transform_train", ")", "\n", "testset", "=", "CIFAR100", "(", "root", "=", "root", "+", "'/CIFAR100/'", ",", "\n", "train", "=", "False", ",", "\n", "download", "=", "False", ",", "\n", "transform", "=", "transform_test", ")", "\n", "refset", "=", "None", "\n", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "RuntimeError", "(", "'Unknown dataset'", ")", "\n", "\n", "", "n_dataset", "=", "len", "(", "trainset", ")", "\n", "n_train", "=", "int", "(", "1", "*", "n_dataset", ")", "\n", "n_val", "=", "n_dataset", "-", "n_train", "\n", "trainset", ",", "validationset", "=", "torch", ".", "utils", ".", "data", ".", "random_split", "(", "\n", "trainset", ",", "\n", "[", "n_train", ",", "n_val", "]", ",", "\n", "generator", "=", "torch", ".", "Generator", "(", ")", ".", "manual_seed", "(", "seed", ")", ")", "\n", "\n", "if", "device", "is", "not", "None", ":", "\n", "        ", "trainset", "=", "trainset", ".", "to", "(", "device", ")", "\n", "validationset", "=", "refset", ".", "to", "(", "device", ")", "\n", "testnset", "=", "testset", ".", "to", "(", "device", ")", "\n", "\n", "", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "4", ",", "\n", "pin_memory", "=", "True", ")", "\n", "validation_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset", ",", "\n", "batch_size", "=", "test_batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "4", ",", "\n", "pin_memory", "=", "True", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset", ",", "\n", "batch_size", "=", "test_batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "4", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "return", "train_loader", ",", "validation_loader", ",", "test_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tensorboard_writer.TensorboardWriter.__init__": [[6, 8], ["tensorflow.create_file_writer"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ":", "str", ")", ":", "\n", "        ", "self", ".", "summary_writer", "=", "tf_summary", ".", "create_file_writer", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tensorboard_writer.TensorboardWriter.Writer": [[9, 19], ["tensorboard_writer.TensorboardWriter.summary_writer.as_default", "tensorflow.scalar"], "methods", ["None"], ["", "def", "Writer", "(", "self", ",", "name", ":", "str", ")", ":", "\n", "        ", "step_counter", "=", "0", "\n", "\n", "def", "saver", "(", "val", ")", ":", "\n", "            ", "nonlocal", "step_counter", "\n", "with", "self", ".", "summary_writer", ".", "as_default", "(", ")", ":", "\n", "                ", "tf_summary", ".", "scalar", "(", "name", ",", "val", ",", "step", "=", "step_counter", ")", "\n", "", "step_counter", "+=", "1", "\n", "\n", "", "return", "saver", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tensorboard_writer.TensorboardWriter.flush": [[20, 22], ["tensorboard_writer.TensorboardWriter.summary_writer.flush"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tensorboard_writer.TensorboardWriter.flush"], ["", "def", "flush", "(", "self", ")", ":", "\n", "        ", "self", ".", "summary_writer", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tensorboard_writer.TensorboardWriter.__del__": [[23, 25], ["tensorboard_writer.TensorboardWriter.flush"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tensorboard_writer.TensorboardWriter.flush"], ["", "def", "__del__", "(", "self", ")", ":", "\n", "        ", "self", ".", "flush", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.learning_rate_schedule.LearningRateSchedule.__init__": [[9, 17], ["learning_rate_schedule.LearningRateSchedule.epochs.sort"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "initial_rate", ":", "float", ",", "decay_rate", ":", "float", "=", "1.0", ",", "\n", "epochs", ":", "Optional", "[", "List", "[", "int", "]", "]", "=", "None", ")", ":", "\n", "        ", "if", "not", "epochs", ":", "\n", "            ", "epochs", "=", "[", "]", "\n", "", "self", ".", "initial_rate", "=", "initial_rate", "\n", "self", ".", "decay_rate", "=", "decay_rate", "\n", "self", ".", "epochs", "=", "epochs", "\n", "self", ".", "epochs", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.learning_rate_schedule.LearningRateSchedule.__call__": [[18, 23], ["enumerate", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "for", "i", ",", "decay_epoch", "in", "enumerate", "(", "self", ".", "epochs", ")", ":", "\n", "            ", "if", "epoch", "<", "decay_epoch", ":", "\n", "                ", "return", "self", ".", "decay_rate", "**", "i", "*", "self", ".", "initial_rate", "\n", "", "", "return", "self", ".", "decay_rate", "**", "len", "(", "self", ".", "epochs", ")", "*", "self", ".", "initial_rate", "\n", "", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.data_transform.DataTransform.__init__": [[10, 12], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.data_transform.DataTransform.__iter__": [[13, 16], ["jax.array().transpose", "jax.array", "jax.array"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "for", "X", ",", "Y", "in", "self", ".", "dataset", ":", "\n", "            ", "yield", "jnp", ".", "array", "(", "X", ")", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", ",", "jnp", ".", "array", "(", "Y", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.plotting.basis_functions_plotting.plot_fun": [[7, 12], ["numpy.linspace", "numpy.array", "matplotlib.pylab.plot", "f"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f"], ["def", "plot_fun", "(", "f", ":", "Callable", "[", "[", "float", "]", ",", "float", "]", ")", ":", "\n", "    ", "\"\"\"Plot a function from [0,1].\"\"\"", "\n", "ts", "=", "onp", ".", "linspace", "(", "0", ",", "1", ",", "200", ")", "\n", "y", "=", "onp", ".", "array", "(", "[", "f", "(", "t", ")", "for", "t", "in", "ts", "]", ")", "\n", "plt", ".", "plot", "(", "ts", ",", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.plotting.basis_functions_plotting.plot_piecewise_nodes": [[14, 19], ["len", "numpy.linspace", "matplotlib.pylab.plot"], "function", ["None"], ["", "def", "plot_piecewise_nodes", "(", "nodes", ":", "Iterable", "[", "float", "]", ")", ":", "\n", "    ", "n", "=", "len", "(", "nodes", ")", "\n", "dt", "=", "1", "/", "n", "\n", "ts", "=", "onp", ".", "linspace", "(", "0.5", "*", "dt", ",", "1.0", "-", "0.5", "*", "dt", ",", "n", ")", "\n", "plt", ".", "plot", "(", "ts", ",", "nodes", ",", "'o'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.plotting.basis_functions_plotting.plot_piecewise_fun": [[21, 24], ["basis_functions_plotting.plot_fun", "basis_functions_plotting.plot_piecewise_nodes", "piecewise_constant"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.plotting.basis_functions_plotting.plot_fun", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.plotting.basis_functions_plotting.plot_piecewise_nodes", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.piecewise_constant"], ["", "def", "plot_piecewise_fun", "(", "nodes", ":", "Iterable", "[", "float", "]", ")", ":", "\n", "    ", "plot_fun", "(", "piecewise_constant", "(", "nodes", ")", ")", "\n", "plot_piecewise_nodes", "(", "nodes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.plotting.basis_functions_plotting.plot_piecewise_linear_nodes": [[26, 33], ["range", "matplotlib.pylab.plot", "len"], "function", ["None"], ["", "def", "plot_piecewise_linear_nodes", "(", "nodes", ":", "Iterable", "[", "float", "]", ")", ":", "\n", "    ", "n_cell", "=", "len", "(", "nodes", ")", "//", "2", "\n", "dt", "=", "1", "/", "n_cell", "\n", "ts", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_cell", ")", ":", "\n", "        ", "ts", "+=", "[", "dt", "*", "i", ",", "dt", "*", "(", "i", "+", "1", ")", "]", "\n", "", "plt", ".", "plot", "(", "ts", ",", "nodes", ",", "'o'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.plotting.basis_functions_plotting.plot_piecewise_linear_fun": [[35, 38], ["basis_functions_plotting.plot_fun", "basis_functions_plotting.plot_piecewise_linear_nodes", "piecewise_linear"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.plotting.basis_functions_plotting.plot_fun", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.plotting.basis_functions_plotting.plot_piecewise_linear_nodes", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.piecewise_linear"], ["", "def", "plot_piecewise_linear_fun", "(", "nodes", ":", "Iterable", "[", "float", "]", ")", ":", "\n", "    ", "plot_fun", "(", "piecewise_linear", "(", "nodes", ")", ")", "\n", "plot_piecewise_linear_nodes", "(", "nodes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.plotting.basis_functions_plotting.plot_fem_nodes": [[40, 42], ["matplotlib.pylab.plot", "numpy.linspace", "len"], "function", ["None"], ["", "def", "plot_fem_nodes", "(", "nodes", ":", "Iterable", "[", "float", "]", ")", ":", "\n", "    ", "plt", ".", "plot", "(", "onp", ".", "linspace", "(", "0", ",", "1", ",", "len", "(", "nodes", ")", ")", ",", "nodes", ",", "'o'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.plotting.basis_functions_plotting.plot_fem_fun": [[44, 47], ["basis_functions_plotting.plot_fun", "basis_functions_plotting.plot_fem_nodes", "fem_linear"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.plotting.basis_functions_plotting.plot_fun", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.plotting.basis_functions_plotting.plot_fem_nodes", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.fem_linear"], ["", "def", "plot_fem_fun", "(", "nodes", ":", "Iterable", "[", "float", "]", ")", ":", "\n", "    ", "plot_fun", "(", "fem_linear", "(", "nodes", ")", ")", "\n", "plot_fem_nodes", "(", "nodes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.models.baselines.ResNet.__call__": [[18, 61], ["flax.relu", "flax.relu", "range", "range", "range", "jax.mean", "jax.mean", "flax.log_softmax", "flax.log_softmax", "flax.Conv", "flax.Conv", "residual_modules.ResidualStitch", "residual_modules.ResidualStitch", "flax.Dense", "flax.Dense", "residual_modules.ResidualUnit", "residual_modules.ResidualUnit", "residual_modules.ResidualUnit"], "methods", ["None"], ["@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "alpha", "=", "self", ".", "alpha", "\n", "n_step", "=", "self", ".", "n_step", "\n", "h", "=", "nn", ".", "Conv", "(", "features", "=", "alpha", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "\n", "use_bias", "=", "False", ",", "\n", "kernel_init", "=", "INITS", "[", "self", ".", "kernel_init", "]", ")", "(", "x", ")", "\n", "h", "=", "NORMS", "[", "self", ".", "norm", "]", "(", "use_running_average", "=", "not", "self", ".", "training", ")", "(", "h", ")", "\n", "h", "=", "nn", ".", "relu", "(", "h", ")", "\n", "for", "i", "in", "range", "(", "n_step", ")", ":", "\n", "            ", "h", "+=", "ResidualUnit", "(", "hidden_features", "=", "alpha", ",", "\n", "norm", "=", "self", ".", "norm", ",", "\n", "kernel_init", "=", "self", ".", "kernel_init", ",", "\n", "training", "=", "self", ".", "training", ")", "(", "h", ")", "\n", "", "h", "=", "ResidualStitch", "(", "hidden_features", "=", "alpha", ",", "\n", "output_features", "=", "2", "*", "alpha", ",", "\n", "strides", "=", "(", "2", ",", "2", ")", ",", "\n", "norm", "=", "self", ".", "norm", ",", "\n", "kernel_init", "=", "self", ".", "kernel_init", ",", "\n", "training", "=", "self", ".", "training", ")", "(", "h", ")", "\n", "for", "i", "in", "range", "(", "n_step", ")", ":", "\n", "            ", "h", "+=", "ResidualUnit", "(", "hidden_features", "=", "2", "*", "alpha", ",", "\n", "norm", "=", "self", ".", "norm", ",", "\n", "kernel_init", "=", "self", ".", "kernel_init", ",", "\n", "training", "=", "self", ".", "training", ")", "(", "h", ")", "\n", "", "h", "=", "ResidualStitch", "(", "hidden_features", "=", "2", "*", "alpha", ",", "\n", "output_features", "=", "4", "*", "alpha", ",", "\n", "strides", "=", "(", "2", ",", "2", ")", ",", "\n", "norm", "=", "self", ".", "norm", ",", "\n", "kernel_init", "=", "self", ".", "kernel_init", ",", "\n", "training", "=", "self", ".", "training", ")", "(", "h", ")", "\n", "for", "i", "in", "range", "(", "n_step", ")", ":", "\n", "            ", "h", "+=", "ResidualUnit", "(", "hidden_features", "=", "4", "*", "alpha", ",", "\n", "norm", "=", "self", ".", "norm", ",", "\n", "kernel_init", "=", "self", ".", "kernel_init", ",", "\n", "training", "=", "self", ".", "training", ")", "(", "h", ")", "\n", "", "h", "=", "NORMS", "[", "self", ".", "norm", "]", "(", "use_running_average", "=", "not", "self", ".", "training", ")", "(", "h", ")", "\n", "# h = nn.pooling.avg_pool(h, (h.shape[-3], h.shape[-2]))", "\n", "# h = h.reshape(h.shape[0], -1)", "\n", "h", "=", "jnp", ".", "mean", "(", "h", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "h", "=", "nn", ".", "Dense", "(", "features", "=", "self", ".", "n_classes", ")", "(", "h", ")", "\n", "return", "nn", ".", "log_softmax", "(", "h", ")", "# no softmax", "\n", "", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.models.continuous_models.ContinuousClassifier.__call__": [[38, 44], ["continuous_models.ContinuousClassifier.R_module", "flax.sigmoid", "flax.sigmoid", "flax.Dense", "flax.Dense", "continuous_block.ContinuousBlock", "flax.Dense", "flax.Dense"], "methods", ["None"], ["@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "R", "=", "self", ".", "R_module", "(", "hidden_dim", "=", "self", ".", "hidden_dim", ",", "output_dim", "=", "self", ".", "ode_dim", ")", "\n", "h", "=", "nn", ".", "Dense", "(", "self", ".", "ode_dim", ")", "(", "x", ")", "\n", "h", "=", "ContinuousBlock", "(", "R", ",", "self", ".", "n_step", ",", "self", ".", "basis", ",", "self", ".", "n_basis", ")", "(", "h", ")", "\n", "return", "nn", ".", "sigmoid", "(", "nn", ".", "Dense", "(", "1", ")", "(", "h", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.models.continuous_models.ContinuousImageClassifier.__call__": [[61, 120], ["flax.relu", "flax.relu", "flax.avg_pool", "flax.avg_pool", "h.reshape.reshape.reshape", "flax.log_softmax", "flax.log_softmax", "residual_modules.ResidualUnit", "flax.Conv", "flax.Conv", "residual_modules.ResidualStitch", "continuous_block.StatefulContinuousBlock", "residual_modules.ResidualStitch", "continuous_block.StatefulContinuousBlock", "residual_modules.ResidualStitch", "continuous_block.StatefulContinuousBlock", "flax.Dense", "flax.Dense", "R_", "R_", "R_"], "methods", ["None"], ["@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "\n", "# Helper macro.", "\n", "        ", "R_", "=", "lambda", "hidden_", ":", "ResidualUnit", "(", "hidden_features", "=", "hidden_", ",", "\n", "norm", "=", "self", ".", "norm", ",", "\n", "training", "=", "self", ".", "training", ",", "\n", "epsilon", "=", "self", ".", "epsilon", ")", "\n", "# First filter to make features.", "\n", "h", "=", "nn", ".", "Conv", "(", "features", "=", "self", ".", "hidden", "*", "self", ".", "alpha", ",", "\n", "use_bias", "=", "False", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "\n", "kernel_init", "=", "INITS", "[", "self", ".", "kernel_init", "]", ")", "(", "x", ")", "\n", "h", "=", "NORMS", "[", "self", ".", "norm", "]", "(", "use_running_average", "=", "not", "self", ".", "training", ")", "(", "h", ")", "\n", "h", "=", "nn", ".", "relu", "(", "h", ")", "\n", "# 3 stages of continuous segments:", "\n", "h", "=", "ResidualStitch", "(", "hidden_features", "=", "self", ".", "hidden", "*", "self", ".", "alpha", ",", "\n", "output_features", "=", "self", ".", "hidden", "*", "self", ".", "alpha", ",", "\n", "strides", "=", "(", "1", ",", "1", ")", ",", "\n", "norm", "=", "self", ".", "norm", ",", "\n", "training", "=", "self", ".", "training", ",", "\n", "epsilon", "=", "self", ".", "stitch_epsilon", ")", "(", "h", ")", "\n", "h", "=", "StatefulContinuousBlock", "(", "R", "=", "R_", "(", "self", ".", "hidden", "*", "self", ".", "alpha", ")", ",", "\n", "scheme", "=", "self", ".", "scheme", ",", "\n", "n_step", "=", "self", ".", "n_step", ",", "\n", "n_basis", "=", "self", ".", "n_basis", ",", "\n", "basis", "=", "self", ".", "basis", ",", "\n", "training", "=", "self", ".", "training", ")", "(", "h", ")", "\n", "h", "=", "ResidualStitch", "(", "hidden_features", "=", "self", ".", "hidden", "*", "self", ".", "alpha", ",", "\n", "output_features", "=", "2", "*", "self", ".", "hidden", "*", "self", ".", "alpha", ",", "\n", "strides", "=", "(", "2", ",", "2", ")", ",", "\n", "norm", "=", "self", ".", "norm", ",", "\n", "training", "=", "self", ".", "training", ",", "\n", "epsilon", "=", "self", ".", "stitch_epsilon", ")", "(", "h", ")", "\n", "h", "=", "StatefulContinuousBlock", "(", "R", "=", "R_", "(", "2", "*", "self", ".", "hidden", "*", "self", ".", "alpha", ")", ",", "\n", "scheme", "=", "self", ".", "scheme", ",", "\n", "n_step", "=", "self", ".", "n_step", ",", "\n", "n_basis", "=", "self", ".", "n_basis", ",", "\n", "basis", "=", "self", ".", "basis", ",", "\n", "training", "=", "self", ".", "training", ")", "(", "h", ")", "\n", "h", "=", "ResidualStitch", "(", "hidden_features", "=", "2", "*", "self", ".", "hidden", "*", "self", ".", "alpha", ",", "\n", "output_features", "=", "4", "*", "self", ".", "hidden", "*", "self", ".", "alpha", ",", "\n", "strides", "=", "(", "2", ",", "2", ")", ",", "\n", "norm", "=", "self", ".", "norm", ",", "\n", "training", "=", "self", ".", "training", ",", "\n", "epsilon", "=", "self", ".", "stitch_epsilon", ")", "(", "h", ")", "\n", "h", "=", "StatefulContinuousBlock", "(", "R", "=", "R_", "(", "4", "*", "self", ".", "hidden", "*", "self", ".", "alpha", ")", ",", "\n", "scheme", "=", "self", ".", "scheme", ",", "\n", "n_step", "=", "self", ".", "n_step", ",", "\n", "n_basis", "=", "self", ".", "n_basis", ",", "\n", "basis", "=", "self", ".", "basis", ",", "\n", "training", "=", "self", ".", "training", ")", "(", "h", ")", "\n", "# Pool and linearly classify:", "\n", "h", "=", "NORMS", "[", "self", ".", "norm", "]", "(", "use_running_average", "=", "not", "self", ".", "training", ")", "(", "h", ")", "\n", "#h = nn.gelu(h)", "\n", "h", "=", "nn", ".", "avg_pool", "(", "h", ",", "window_shape", "=", "(", "8", ",", "8", ")", ",", "strides", "=", "(", "8", ",", "8", ")", ")", "\n", "h", "=", "h", ".", "reshape", "(", "(", "h", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "h", "=", "nn", ".", "Dense", "(", "features", "=", "self", ".", "n_classes", ")", "(", "h", ")", "\n", "return", "nn", ".", "log_softmax", "(", "h", ")", "# no softmax", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.models.continuous_models.ContinuousImageClassifier.refine": [[121, 125], ["continuous_models.ContinuousImageClassifier.refine"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.models.continuous_models.refine"], ["", "def", "refine", "(", "self", ",", "\n", "params", ":", "JaxTreeType", ",", "\n", "state", ":", "JaxTreeType", "=", "None", ")", "->", "Tuple", "[", "JaxTreeType", ",", "JaxTreeType", "]", ":", "\n", "        ", "return", "refine", "(", "self", ",", "params", ",", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.models.continuous_models.ContinuousImageClassifierSmall.__call__": [[140, 187], ["flax.gelu", "flax.gelu", "flax.gelu", "flax.gelu", "flax.avg_pool", "flax.avg_pool", "h.reshape.reshape.reshape", "flax.log_softmax", "flax.log_softmax", "residual_modules.ResidualUnit", "flax.Conv", "flax.Conv", "residual_modules.ResidualStitch", "continuous_block.StatefulContinuousBlock", "residual_modules.ResidualStitch", "continuous_block.StatefulContinuousBlock", "flax.Dense", "flax.Dense", "R_", "R_"], "methods", ["None"], ["@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "# Helper macro.", "\n", "        ", "R_", "=", "lambda", "hidden_", ":", "ResidualUnit", "(", "hidden_features", "=", "hidden_", ",", "\n", "norm", "=", "self", ".", "norm", ",", "\n", "training", "=", "self", ".", "training", ",", "\n", "activation", "=", "nn", ".", "gelu", ")", "\n", "# First filter to make features.", "\n", "h", "=", "nn", ".", "Conv", "(", "features", "=", "self", ".", "hidden", "*", "self", ".", "alpha", ",", "\n", "use_bias", "=", "False", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "\n", "kernel_init", "=", "INITS", "[", "self", ".", "kernel_init", "]", ")", "(", "x", ")", "\n", "h", "=", "NORMS", "[", "self", ".", "norm", "]", "(", "use_running_average", "=", "not", "self", ".", "training", ")", "(", "h", ")", "\n", "h", "=", "nn", ".", "gelu", "(", "h", ")", "\n", "# 2 stages of continuous segments:", "\n", "h", "=", "ResidualStitch", "(", "hidden_features", "=", "self", ".", "hidden", "*", "self", ".", "alpha", ",", "\n", "output_features", "=", "self", ".", "hidden", "*", "self", ".", "alpha", ",", "\n", "strides", "=", "(", "1", ",", "1", ")", ",", "\n", "norm", "=", "self", ".", "norm", ",", "\n", "training", "=", "self", ".", "training", ",", "\n", "activation", "=", "nn", ".", "gelu", ")", "(", "h", ")", "\n", "h", "=", "StatefulContinuousBlock", "(", "R", "=", "R_", "(", "self", ".", "hidden", "*", "self", ".", "alpha", ")", ",", "\n", "scheme", "=", "self", ".", "scheme", ",", "\n", "n_step", "=", "self", ".", "n_step", ",", "\n", "n_basis", "=", "self", ".", "n_basis", ",", "\n", "basis", "=", "self", ".", "basis", ",", "\n", "training", "=", "self", ".", "training", ")", "(", "h", ")", "\n", "h", "=", "ResidualStitch", "(", "hidden_features", "=", "self", ".", "hidden", "*", "self", ".", "alpha", ",", "\n", "output_features", "=", "self", ".", "hidden", "*", "self", ".", "alpha", "*", "2", ",", "\n", "strides", "=", "(", "2", ",", "2", ")", ",", "\n", "norm", "=", "self", ".", "norm", ",", "\n", "training", "=", "self", ".", "training", ",", "\n", "activation", "=", "nn", ".", "gelu", ")", "(", "h", ")", "\n", "h", "=", "StatefulContinuousBlock", "(", "R", "=", "R_", "(", "self", ".", "hidden", "*", "self", ".", "alpha", "*", "2", ")", ",", "\n", "scheme", "=", "self", ".", "scheme", ",", "\n", "n_step", "=", "self", ".", "n_step", ",", "\n", "n_basis", "=", "self", ".", "n_basis", ",", "\n", "basis", "=", "self", ".", "basis", ",", "\n", "training", "=", "self", ".", "training", ")", "(", "h", ")", "\n", "\n", "# Pool and linearly classify:", "\n", "h", "=", "NORMS", "[", "self", ".", "norm", "]", "(", "use_running_average", "=", "not", "self", ".", "training", ")", "(", "h", ")", "\n", "h", "=", "nn", ".", "gelu", "(", "h", ")", "\n", "h", "=", "nn", ".", "avg_pool", "(", "h", ",", "window_shape", "=", "(", "8", ",", "8", ")", ",", "strides", "=", "(", "8", ",", "8", ")", ")", "\n", "h", "=", "h", ".", "reshape", "(", "(", "h", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "h", "=", "nn", ".", "Dense", "(", "features", "=", "self", ".", "n_classes", ")", "(", "h", ")", "\n", "return", "nn", ".", "log_softmax", "(", "h", ")", "# no softmax", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.models.continuous_models.ContinuousImageClassifierSmall.refine": [[188, 192], ["continuous_models.ContinuousImageClassifierSmall.refine"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.models.continuous_models.refine"], ["", "def", "refine", "(", "self", ",", "\n", "params", ":", "JaxTreeType", ",", "\n", "state", ":", "JaxTreeType", "=", "None", ")", "->", "Tuple", "[", "JaxTreeType", ",", "JaxTreeType", "]", ":", "\n", "        ", "return", "refine", "(", "self", ",", "params", ",", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.models.continuous_models.ContinuousImageClassifierMNIST.__call__": [[207, 242], ["flax.gelu", "flax.gelu", "flax.gelu", "flax.gelu", "flax.avg_pool", "flax.avg_pool", "h.reshape.reshape.reshape", "flax.log_softmax", "flax.log_softmax", "residual_modules.ResidualUnit", "flax.Conv", "flax.Conv", "residual_modules.ResidualStitch", "continuous_block.StatefulContinuousBlock", "flax.Dense", "flax.Dense", "R_"], "methods", ["None"], ["@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "# Helper macro.", "\n", "        ", "R_", "=", "lambda", "hidden_", ":", "ResidualUnit", "(", "hidden_features", "=", "hidden_", ",", "\n", "norm", "=", "self", ".", "norm", ",", "\n", "training", "=", "self", ".", "training", ",", "\n", "activation", "=", "nn", ".", "gelu", ")", "\n", "# First filter to make features.", "\n", "h", "=", "nn", ".", "Conv", "(", "features", "=", "self", ".", "hidden", "*", "self", ".", "alpha", ",", "\n", "use_bias", "=", "False", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "\n", "kernel_init", "=", "INITS", "[", "self", ".", "kernel_init", "]", ")", "(", "x", ")", "\n", "h", "=", "NORMS", "[", "self", ".", "norm", "]", "(", "use_running_average", "=", "not", "self", ".", "training", ")", "(", "h", ")", "\n", "h", "=", "nn", ".", "gelu", "(", "h", ")", "\n", "# 2 stages of continuous segments:", "\n", "h", "=", "ResidualStitch", "(", "hidden_features", "=", "self", ".", "hidden", "*", "self", ".", "alpha", ",", "\n", "output_features", "=", "self", ".", "hidden", "*", "self", ".", "alpha", ",", "\n", "strides", "=", "(", "1", ",", "1", ")", ",", "\n", "norm", "=", "self", ".", "norm", ",", "\n", "training", "=", "self", ".", "training", ",", "\n", "activation", "=", "nn", ".", "gelu", ")", "(", "h", ")", "\n", "h", "=", "StatefulContinuousBlock", "(", "R", "=", "R_", "(", "self", ".", "hidden", "*", "self", ".", "alpha", ")", ",", "\n", "scheme", "=", "self", ".", "scheme", ",", "\n", "n_step", "=", "self", ".", "n_step", ",", "\n", "n_basis", "=", "self", ".", "n_basis", ",", "\n", "basis", "=", "self", ".", "basis", ",", "\n", "training", "=", "self", ".", "training", ")", "(", "h", ")", "\n", "\n", "# Pool and linearly classify:", "\n", "h", "=", "NORMS", "[", "self", ".", "norm", "]", "(", "use_running_average", "=", "not", "self", ".", "training", ")", "(", "h", ")", "\n", "h", "=", "nn", ".", "gelu", "(", "h", ")", "\n", "h", "=", "nn", ".", "avg_pool", "(", "h", ",", "window_shape", "=", "(", "8", ",", "8", ")", ",", "strides", "=", "(", "8", ",", "8", ")", ")", "\n", "h", "=", "h", ".", "reshape", "(", "(", "h", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "h", "=", "nn", ".", "Dense", "(", "features", "=", "self", ".", "n_classes", ")", "(", "h", ")", "\n", "return", "nn", ".", "log_softmax", "(", "h", ")", "# no softmax", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.models.continuous_models.ContinuousImageClassifierMNIST.refine": [[243, 247], ["continuous_models.ContinuousImageClassifierMNIST.refine"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.models.continuous_models.refine"], ["", "def", "refine", "(", "self", ",", "\n", "params", ":", "JaxTreeType", ",", "\n", "state", ":", "JaxTreeType", "=", "None", ")", "->", "Tuple", "[", "JaxTreeType", ",", "JaxTreeType", "]", ":", "\n", "        ", "return", "refine", "(", "self", ",", "params", ",", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.models.continuous_models.refine": [[249, 273], ["model.clone", "params.items", "flax.core.frozen_dict.FrozenDict", "flax.core.frozen_dict.FrozenDict", "state.pop", "ode_state.items", "flax.core.frozen_dict.FrozenDict", "flax.core.frozen_dict.FrozenDict"], "function", ["None"], ["", "", "def", "refine", "(", "model", ",", "\n", "params", ":", "JaxTreeType", ",", "\n", "state", ":", "JaxTreeType", "=", "None", ")", "->", "Tuple", "[", "JaxTreeType", ",", "JaxTreeType", "]", ":", "\n", "    ", "\"\"\"Refine all of the top-level ContinuousBlocks in model.\"\"\"", "\n", "new_model", "=", "model", ".", "clone", "(", "n_step", "=", "2", "*", "model", ".", "n_step", ",", "n_basis", "=", "2", "*", "model", ".", "n_basis", ")", "\n", "new_params", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "params", ".", "items", "(", ")", ":", "\n", "        ", "if", "'Continuous'", "in", "k", ":", "\n", "            ", "new_params", "[", "k", "]", "=", "{", "'ode_params'", ":", "REFINE", "[", "model", ".", "basis", "]", "(", "v", "[", "'ode_params'", "]", ")", "}", "\n", "", "else", ":", "\n", "            ", "new_params", "[", "k", "]", "=", "v", "\n", "", "", "new_params", "=", "flax", ".", "core", ".", "frozen_dict", ".", "FrozenDict", "(", "new_params", ")", "\n", "\n", "if", "not", "state", ":", "\n", "        ", "return", "new_model", ",", "new_params", "\n", "", "else", ":", "\n", "        ", "keep_state", ",", "ode_state", "=", "state", ".", "pop", "(", "'ode_state'", ")", "\n", "new_ode_state", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "ode_state", ".", "items", "(", ")", ":", "\n", "            ", "new_ode_state", "[", "k", "]", "=", "{", "'state'", ":", "REFINE", "[", "model", ".", "basis", "]", "(", "v", "[", "'state'", "]", ")", "}", "\n", "", "new_state", "=", "flax", ".", "core", ".", "frozen_dict", ".", "FrozenDict", "(", "{", "\n", "**", "keep_state", ",", "'ode_state'", ":", "new_ode_state", "\n", "}", ")", "\n", "return", "new_model", ",", "new_params", ",", "new_state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.convergence_test.ConvergenceTestTests.testConvergence": [[10, 12], ["None"], "methods", ["None"], ["    ", "def", "testConvergence", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "# with tempfile.TemporaryDirectory() as tmp:", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.continuous_models_test.ContinuousImageClassifierTests.setUp": [[12, 15], ["jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.ones", "jax.ones"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", ":", "\n", "        ", "self", ".", "prng_key", "=", "jax", ".", "random", ".", "PRNGKey", "(", "0", ")", "\n", "self", ".", "x", "=", "jnp", ".", "ones", "(", "(", "1", ",", "32", ",", "32", ",", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.continuous_models_test.ContinuousImageClassifierTests.testInitializeStateful": [[16, 19], ["ContinuousImageClassifier", "ContinuousImageClassifier.init"], "methods", ["None"], ["", "def", "testInitializeStateful", "(", "self", ")", ":", "\n", "        ", "model", "=", "ContinuousImageClassifier", "(", ")", "\n", "params", "=", "model", ".", "init", "(", "self", ".", "prng_key", ",", "self", ".", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.continuous_models_test.ContinuousImageClassifierTests.testInitializeNoState": [[20, 23], ["ContinuousImageClassifier", "ContinuousImageClassifier.init"], "methods", ["None"], ["", "def", "testInitializeNoState", "(", "self", ")", ":", "\n", "        ", "model", "=", "ContinuousImageClassifier", "(", "norm", "=", "\"None\"", ")", "\n", "params", "=", "model", ".", "init", "(", "self", ".", "prng_key", ",", "self", ".", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.continuous_models_test.ContinuousImageClassifierTests.testApplyStateful": [[24, 31], ["ContinuousImageClassifier", "ContinuousImageClassifier.init", "ContinuousImageClassifier.init.pop", "ContinuousImageClassifier.apply", "continuous_models_test.ContinuousImageClassifierTests.assertEqual", "continuous_models_test.ContinuousImageClassifierTests.assertEqual", "out_state.keys", "state.keys", "state.keys"], "methods", ["None"], ["", "def", "testApplyStateful", "(", "self", ")", ":", "\n", "        ", "model", "=", "ContinuousImageClassifier", "(", ")", "\n", "theta", "=", "model", ".", "init", "(", "self", ".", "prng_key", ",", "self", ".", "x", ")", "\n", "state", ",", "params", "=", "theta", ".", "pop", "(", "'params'", ")", "\n", "y", ",", "out_state", "=", "model", ".", "apply", "(", "theta", ",", "self", ".", "x", ",", "mutable", "=", "state", ".", "keys", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "y", ".", "shape", ",", "(", "1", ",", "10", ")", ")", "\n", "self", ".", "assertEqual", "(", "out_state", ".", "keys", "(", ")", ",", "state", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.continuous_models_test.ContinuousImageClassifierTests.testApplyNoState": [[32, 37], ["ContinuousImageClassifier", "ContinuousImageClassifier.init", "ContinuousImageClassifier.apply", "continuous_models_test.ContinuousImageClassifierTests.assertEqual"], "methods", ["None"], ["", "def", "testApplyNoState", "(", "self", ")", ":", "\n", "        ", "model", "=", "ContinuousImageClassifier", "(", "norm", "=", "\"None\"", ")", "\n", "params", "=", "model", ".", "init", "(", "self", ".", "prng_key", ",", "self", ".", "x", ")", "\n", "y", "=", "model", ".", "apply", "(", "params", ",", "self", ".", "x", ")", "\n", "self", ".", "assertEqual", "(", "y", ".", "shape", ",", "(", "1", ",", "10", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.basis_functions_test.BasisFunctionsTests.test_list_of_floats": [[10, 16], ["piecewise_constant", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "piecewise_constant.", "piecewise_constant.", "piecewise_constant."], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.piecewise_constant"], ["    ", "def", "test_list_of_floats", "(", "self", ")", ":", "\n", "        ", "nodes", "=", "[", "1.0", ",", "3.0", ",", "2.0", "]", "\n", "theta_t", "=", "piecewise_constant", "(", "nodes", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "0.0", ")", ",", "1.0", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "0.5", ")", ",", "3.0", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "1.000001", ")", ",", "2.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.basis_functions_test.BasisFunctionsTests.test_point_project_floats": [[17, 23], ["list", "point_project", "basis_functions_test.BasisFunctionsTests.assertEqual", "jax.linspace", "jax.sin", "len"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.point_project"], ["", "def", "test_point_project_floats", "(", "self", ")", ":", "\n", "        ", "ts", "=", "list", "(", "jnp", ".", "linspace", "(", "0", ",", "1", ",", "11", ")", ")", "\n", "points", "=", "[", "jnp", ".", "sin", "(", "3", "*", "t", ")", "for", "t", "in", "ts", "]", "\n", "n", "=", "13", "\n", "nodes", "=", "point_project", "(", "points", ",", "ts", ",", "n", ",", "piecewise_constant", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "nodes", ")", ",", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.basis_functions_test.BasisFunctionsTests.test_point_project_tree_floats": [[24, 30], ["list", "point_project_tree", "basis_functions_test.BasisFunctionsTests.assertEqual", "jax.linspace", "jax.sin", "len"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.point_project_tree"], ["", "def", "test_point_project_tree_floats", "(", "self", ")", ":", "\n", "        ", "ts", "=", "list", "(", "jnp", ".", "linspace", "(", "0", ",", "1", ",", "11", ")", ")", "\n", "points", "=", "[", "jnp", ".", "sin", "(", "3", "*", "t", ")", "for", "t", "in", "ts", "]", "\n", "n", "=", "13", "\n", "nodes", "=", "point_project_tree", "(", "points", ",", "ts", ",", "n", ",", "piecewise_constant", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "nodes", ")", ",", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.basis_functions_test.BasisFunctionsTests.test_point_project_tree_list": [[31, 39], ["list", "point_project_tree", "basis_functions_test.BasisFunctionsTests.assertEqual", "jax.linspace", "len", "basis_functions_test.BasisFunctionsTests.assertEqual", "len", "len"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.point_project_tree"], ["", "def", "test_point_project_tree_list", "(", "self", ")", ":", "\n", "        ", "ts", "=", "list", "(", "jnp", ".", "linspace", "(", "0", ",", "1", ",", "11", ")", ")", "\n", "points", "=", "[", "[", "1.0", "+", "t", ",", "2.0", "+", "t", "]", "for", "t", "in", "ts", "]", "\n", "n", "=", "13", "\n", "nodes", "=", "point_project_tree", "(", "points", ",", "ts", ",", "n", ",", "piecewise_constant", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "nodes", ")", ",", "n", ")", "\n", "for", "val", "in", "nodes", ":", "\n", "            ", "self", ".", "assertEqual", "(", "len", "(", "val", ")", ",", "len", "(", "points", "[", "0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.basis_functions_test.BasisFunctionsTests.test_point_project_tree_dict": [[40, 49], ["list", "point_project_tree", "basis_functions_test.BasisFunctionsTests.assertEqual", "jax.linspace", "len", "basis_functions_test.BasisFunctionsTests.assertEqual", "jax.tree_structure", "jax.tree_structure"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.point_project_tree"], ["", "", "def", "test_point_project_tree_dict", "(", "self", ")", ":", "\n", "        ", "ts", "=", "list", "(", "jnp", ".", "linspace", "(", "0", ",", "1", ",", "11", ")", ")", "\n", "points", "=", "[", "{", "'a'", ":", "1.0", "+", "t", ",", "'b'", ":", "2.0", "+", "t", "}", "for", "t", "in", "ts", "]", "\n", "n", "=", "13", "\n", "nodes", "=", "point_project_tree", "(", "points", ",", "ts", ",", "n", ",", "piecewise_constant", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "nodes", ")", ",", "n", ")", "\n", "for", "val", "in", "nodes", ":", "\n", "            ", "self", ".", "assertEqual", "(", "jax", ".", "tree_structure", "(", "val", ")", ",", "\n", "jax", ".", "tree_structure", "(", "points", "[", "0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.basis_functions_test.BasisFunctionsTests.test_point_project_array_floats": [[50, 58], ["list", "point_project_tree", "basis_functions_test.BasisFunctionsTests.assertEqual", "jax.linspace", "jax.array", "len", "basis_functions_test.BasisFunctionsTests.assertEqual", "jax.sin"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.point_project_tree"], ["", "", "def", "test_point_project_array_floats", "(", "self", ")", ":", "\n", "        ", "ts", "=", "list", "(", "jnp", ".", "linspace", "(", "0", ",", "1", ",", "11", ")", ")", "\n", "points", "=", "[", "jnp", ".", "array", "(", "[", "1.0", ",", "2.0", ",", "jnp", ".", "sin", "(", "3", "*", "t", ")", "]", ")", "for", "t", "in", "ts", "]", "\n", "n", "=", "13", "\n", "nodes", "=", "point_project_tree", "(", "points", ",", "ts", ",", "n", ",", "piecewise_constant", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "nodes", ")", ",", "n", ")", "\n", "for", "node", "in", "nodes", ":", "\n", "            ", "self", ".", "assertEqual", "(", "node", ".", "shape", ",", "(", "3", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.basis_functions_test.BasisFunctionsTests.test_fem_linear": [[59, 73], ["fem_linear", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "fem_linear", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "fem_linear.", "fem_linear.", "fem_linear.", "fem_linear.", "fem_linear.", "fem_linear.", "fem_linear.", "fem_linear."], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.fem_linear", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.fem_linear"], ["", "", "def", "test_fem_linear", "(", "self", ")", ":", "\n", "        ", "nodes", "=", "[", "1.0", ",", "3.0", ",", "2.0", "]", "\n", "theta_t", "=", "fem_linear", "(", "nodes", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "0.0", ")", ",", "1.0", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "0.25", ")", ",", "2.0", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "0.5", ")", ",", "3.0", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "1.0", ")", ",", "2.0", ")", "\n", "\n", "nodes", "=", "[", "3.0", "]", "\n", "theta_t", "=", "fem_linear", "(", "nodes", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "0.0", ")", ",", "3.0", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "0.25", ")", ",", "3.0", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "0.5", ")", ",", "3.0", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "1.0", ")", ",", "3.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.basis_functions_test.BasisFunctionsTests.test_poly_linear": [[74, 81], ["poly_linear", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "poly_linear.", "poly_linear.", "poly_linear.", "poly_linear."], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.poly_linear"], ["", "def", "test_poly_linear", "(", "self", ")", ":", "\n", "        ", "nodes", "=", "[", "1.0", ",", "3.0", "]", "\n", "theta_t", "=", "poly_linear", "(", "nodes", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "0.0", ")", ",", "1.0", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "0.25", ")", ",", "1.75", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "0.5", ")", ",", "2.5", ")", "\n", "self", ".", "assertEqual", "(", "theta_t", "(", "1.0", ")", ",", "4.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.basis_functions_test.BasisFunctionsTests.test_refine_piecewise": [[82, 96], ["split_refine_piecewise", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "split_refine_piecewise", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "len", "len"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.split_refine_piecewise", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.split_refine_piecewise"], ["", "def", "test_refine_piecewise", "(", "self", ")", ":", "\n", "        ", "nodes", "=", "[", "2.0", "]", "\n", "rnodes", "=", "split_refine_piecewise", "(", "nodes", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "rnodes", ")", ",", "2", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "0", "]", ",", "2.0", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "1", "]", ",", "2.0", ")", "\n", "\n", "nodes", "=", "[", "2.0", ",", "3.0", "]", "\n", "rnodes", "=", "split_refine_piecewise", "(", "nodes", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "rnodes", ")", ",", "4", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "0", "]", ",", "2.0", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "1", "]", ",", "2.0", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "2", "]", ",", "3.0", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "3", "]", ",", "3.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.basis_functions_test.BasisFunctionsTests.test_refine_fem": [[97, 119], ["split_refine_fem", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "split_refine_fem", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "split_refine_fem", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "basis_functions_test.BasisFunctionsTests.assertEqual", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.split_refine_fem", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.split_refine_fem", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.basis_functions.split_refine_fem"], ["", "def", "test_refine_fem", "(", "self", ")", ":", "\n", "        ", "nodes", "=", "[", "2.0", "]", "\n", "rnodes", "=", "split_refine_fem", "(", "nodes", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "rnodes", ")", ",", "2", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "0", "]", ",", "2.0", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "1", "]", ",", "2.0", ")", "\n", "\n", "nodes", "=", "[", "2.0", ",", "3.0", "]", "\n", "rnodes", "=", "split_refine_fem", "(", "nodes", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "rnodes", ")", ",", "3", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "0", "]", ",", "2.0", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "1", "]", ",", "2.5", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "2", "]", ",", "3.0", ")", "\n", "\n", "nodes", "=", "[", "2.0", ",", "3.0", ",", "1.0", "]", "\n", "rnodes", "=", "split_refine_fem", "(", "nodes", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "rnodes", ")", ",", "5", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "0", "]", ",", "2.0", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "1", "]", ",", "2.5", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "2", "]", ",", "3.0", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "3", "]", ",", "2.0", ")", "\n", "self", ".", "assertEqual", "(", "rnodes", "[", "4", "]", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.run_experiment_test.RunExperimentTests.setUp": [[14, 22], ["numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", ":", "\n", "        ", "self", ".", "train_data", "=", "[", "\n", "[", "onp", ".", "ones", "(", "(", "5", ",", "32", ",", "32", ",", "3", ")", ")", ",", "onp", ".", "ones", "(", "5", ",", ")", "]", ",", "\n", "[", "onp", ".", "ones", "(", "(", "5", ",", "32", ",", "32", ",", "3", ")", ")", ",", "onp", ".", "ones", "(", "5", ",", ")", "]", ",", "\n", "]", "\n", "self", ".", "test_data", "=", "[", "\n", "[", "onp", ".", "ones", "(", "(", "5", ",", "32", ",", "32", ",", "3", ")", ")", ",", "onp", ".", "ones", "(", "5", ",", ")", "]", ",", "\n", "[", "onp", ".", "ones", "(", "(", "5", ",", "32", ",", "32", ",", "3", ")", ")", ",", "onp", ".", "ones", "(", "5", ",", ")", "]", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.run_experiment_test.RunExperimentTests.testContinuousNoState": [[24, 38], ["tempfile.TemporaryDirectory", "run_an_experiment", "run_experiment_test.RunExperimentTests.assertEqual"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.run_experiment.run_an_experiment"], ["", "def", "testContinuousNoState", "(", "self", ")", ":", "\n", "        ", "with", "tempfile", ".", "TemporaryDirectory", "(", ")", "as", "tmp", ":", "\n", "            ", "acc", "=", "run_an_experiment", "(", "train_data", "=", "self", ".", "train_data", ",", "\n", "validation_data", "=", "self", ".", "test_data", ",", "\n", "test_data", "=", "self", ".", "test_data", ",", "\n", "save_dir", "=", "tmp", ",", "\n", "alpha", "=", "1", ",", "\n", "hidden", "=", "1", ",", "\n", "n_step", "=", "1", ",", "\n", "n_basis", "=", "1", ",", "\n", "n_epoch", "=", "1", ",", "\n", "norm", "=", "'None'", ",", "\n", "learning_rate", "=", "0.1", ")", "\n", "self", ".", "assertEqual", "(", "acc", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.run_experiment_test.RunExperimentTests.testContinuousStateful": [[39, 54], ["print", "tempfile.TemporaryDirectory", "run_an_experiment", "run_experiment_test.RunExperimentTests.assertEqual"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.run_experiment.run_an_experiment"], ["", "", "def", "testContinuousStateful", "(", "self", ")", ":", "\n", "        ", "print", "(", "\"Test testContinuousStateful\"", ")", "\n", "with", "tempfile", ".", "TemporaryDirectory", "(", ")", "as", "tmp", ":", "\n", "            ", "acc", "=", "run_an_experiment", "(", "train_data", "=", "self", ".", "train_data", ",", "\n", "validation_data", "=", "self", ".", "test_data", ",", "\n", "test_data", "=", "self", ".", "test_data", ",", "\n", "save_dir", "=", "tmp", ",", "\n", "which_model", "=", "'Continuous'", ",", "\n", "alpha", "=", "1", ",", "\n", "hidden", "=", "1", ",", "\n", "n_step", "=", "1", ",", "\n", "n_basis", "=", "1", ",", "\n", "n_epoch", "=", "2", ",", "\n", "norm", "=", "'BatchNorm'", ")", "\n", "self", ".", "assertEqual", "(", "acc", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.run_experiment_test.RunExperimentTests.testRefineContinuousStateful": [[55, 71], ["print", "tempfile.TemporaryDirectory", "run_an_experiment", "run_experiment_test.RunExperimentTests.assertEqual"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.run_experiment.run_an_experiment"], ["", "", "def", "testRefineContinuousStateful", "(", "self", ")", ":", "\n", "        ", "print", "(", "\"Test testRefineContinuousStateful\"", ")", "\n", "with", "tempfile", ".", "TemporaryDirectory", "(", ")", "as", "tmp", ":", "\n", "            ", "acc", "=", "run_an_experiment", "(", "train_data", "=", "self", ".", "train_data", ",", "\n", "validation_data", "=", "self", ".", "test_data", ",", "\n", "test_data", "=", "self", ".", "test_data", ",", "\n", "save_dir", "=", "tmp", ",", "\n", "which_model", "=", "'Continuous'", ",", "\n", "alpha", "=", "1", ",", "\n", "hidden", "=", "1", ",", "\n", "n_step", "=", "1", ",", "\n", "n_basis", "=", "1", ",", "\n", "n_epoch", "=", "3", ",", "\n", "norm", "=", "'BatchNorm'", ",", "\n", "refine_epochs", "=", "[", "2", ",", "3", "]", ")", "\n", "self", ".", "assertEqual", "(", "acc", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.run_experiment_test.RunExperimentTests.testContinuousStatefulFemLinear": [[72, 88], ["tempfile.TemporaryDirectory", "run_an_experiment", "run_experiment_test.RunExperimentTests.assertEqual"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.run_experiment.run_an_experiment"], ["", "", "def", "testContinuousStatefulFemLinear", "(", "self", ")", ":", "\n", "        ", "with", "tempfile", ".", "TemporaryDirectory", "(", ")", "as", "tmp", ":", "\n", "            ", "acc", "=", "run_an_experiment", "(", "train_data", "=", "self", ".", "train_data", ",", "\n", "validation_data", "=", "self", ".", "test_data", ",", "\n", "test_data", "=", "self", ".", "test_data", ",", "\n", "save_dir", "=", "tmp", ",", "\n", "which_model", "=", "'Continuous'", ",", "\n", "alpha", "=", "1", ",", "\n", "hidden", "=", "1", ",", "\n", "n_step", "=", "1", ",", "\n", "scheme", "=", "'Midpoint'", ",", "\n", "n_basis", "=", "2", ",", "\n", "basis", "=", "'fem_linear'", ",", "\n", "n_epoch", "=", "1", ",", "\n", "norm", "=", "'BatchNorm'", ")", "\n", "self", ".", "assertEqual", "(", "acc", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.run_experiment_test.RunExperimentTests.testContinuousStatefulPolyLinear": [[89, 105], ["tempfile.TemporaryDirectory", "run_an_experiment", "run_experiment_test.RunExperimentTests.assertEqual"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.run_experiment.run_an_experiment"], ["", "", "def", "testContinuousStatefulPolyLinear", "(", "self", ")", ":", "\n", "        ", "with", "tempfile", ".", "TemporaryDirectory", "(", ")", "as", "tmp", ":", "\n", "            ", "acc", "=", "run_an_experiment", "(", "train_data", "=", "self", ".", "train_data", ",", "\n", "validation_data", "=", "self", ".", "test_data", ",", "\n", "test_data", "=", "self", ".", "test_data", ",", "\n", "save_dir", "=", "tmp", ",", "\n", "which_model", "=", "'Continuous'", ",", "\n", "alpha", "=", "1", ",", "\n", "hidden", "=", "1", ",", "\n", "n_step", "=", "1", ",", "\n", "scheme", "=", "'Midpoint'", ",", "\n", "n_basis", "=", "2", ",", "\n", "basis", "=", "'poly_linear'", ",", "\n", "n_epoch", "=", "1", ",", "\n", "norm", "=", "'BatchNorm'", ")", "\n", "self", ".", "assertEqual", "(", "acc", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.run_experiment_test.RunExperimentTests.testResNetStateful": [[106, 120], ["tempfile.TemporaryDirectory", "run_an_experiment", "run_experiment_test.RunExperimentTests.assertEqual"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.run_experiment.run_an_experiment"], ["", "", "def", "testResNetStateful", "(", "self", ")", ":", "\n", "        ", "with", "tempfile", ".", "TemporaryDirectory", "(", ")", "as", "tmp", ":", "\n", "            ", "acc", "=", "run_an_experiment", "(", "train_data", "=", "self", ".", "train_data", ",", "\n", "validation_data", "=", "self", ".", "test_data", ",", "\n", "test_data", "=", "self", ".", "test_data", ",", "\n", "save_dir", "=", "tmp", ",", "\n", "which_model", "=", "'ResNet'", ",", "\n", "alpha", "=", "1", ",", "\n", "hidden", "=", "1", ",", "\n", "n_step", "=", "1", ",", "\n", "n_basis", "=", "1", ",", "\n", "n_epoch", "=", "1", ",", "\n", "norm", "=", "'BatchNorm'", ")", "\n", "self", ".", "assertEqual", "(", "acc", ",", "1.0", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.data_transform_test.DataTransformTest.test_data": [[9, 13], ["DataTransform", "data_transform_test.DataTransformTest.assertEqual", "jax.ones", "jax.ones"], "methods", ["None"], ["    ", "def", "test_data", "(", "self", ")", ":", "\n", "        ", "data", "=", "[", "[", "jnp", ".", "ones", "(", "(", "3", ",", "1", ",", "28", ",", "28", ")", ")", ",", "jnp", ".", "ones", "(", "3", ")", "]", "]", "\n", "for", "X", ",", "Y", "in", "DataTransform", "(", "data", ")", ":", "\n", "            ", "self", ".", "assertEqual", "(", "X", ".", "shape", ",", "(", "3", ",", "28", ",", "28", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.data_transform_test.DataTransformTest.test_data_channels": [[14, 21], ["DataTransform", "data_transform_test.DataTransformTest.assertEqual", "jax.ones", "jax.ones", "jax.ones", "jax.ones"], "methods", ["None"], ["", "", "def", "test_data_channels", "(", "self", ")", ":", "\n", "        ", "data", "=", "[", "\n", "[", "jnp", ".", "ones", "(", "(", "13", ",", "8", ",", "32", ",", "32", ")", ")", ",", "jnp", ".", "ones", "(", "3", ")", "]", ",", "\n", "[", "jnp", ".", "ones", "(", "(", "13", ",", "8", ",", "32", ",", "32", ")", ")", ",", "jnp", ".", "ones", "(", "3", ")", "]", ",", "\n", "]", "\n", "for", "X", ",", "Y", "in", "DataTransform", "(", "data", ")", ":", "\n", "            ", "self", ".", "assertEqual", "(", "X", ".", "shape", ",", "(", "13", ",", "32", ",", "32", ",", "8", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.data_transform_test.DataTransformTest.test_multi_epoch": [[22, 32], ["DataTransform", "data_transform_test.DataTransformTest.assertEqual", "data_transform_test.DataTransformTest.assertEqual", "jax.ones", "jax.ones", "jax.ones", "jax.ones"], "methods", ["None"], ["", "", "def", "test_multi_epoch", "(", "self", ")", ":", "\n", "        ", "data", "=", "[", "\n", "[", "jnp", ".", "ones", "(", "(", "13", ",", "8", ",", "32", ",", "32", ")", ")", ",", "jnp", ".", "ones", "(", "3", ")", "]", ",", "\n", "[", "jnp", ".", "ones", "(", "(", "13", ",", "8", ",", "32", ",", "32", ")", ")", ",", "jnp", ".", "ones", "(", "3", ")", "]", ",", "\n", "]", "\n", "data_transform", "=", "DataTransform", "(", "data", ")", "\n", "for", "X", ",", "Y", "in", "data_transform", ":", "\n", "            ", "self", ".", "assertEqual", "(", "X", ".", "shape", ",", "(", "13", ",", "32", ",", "32", ",", "8", ")", ")", "\n", "", "for", "X", ",", "Y", "in", "data_transform", ":", "\n", "            ", "self", ".", "assertEqual", "(", "X", ".", "shape", ",", "(", "13", ",", "32", ",", "32", ",", "8", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.continuous_block_test.MyMod.__call__": [[13, 16], ["flax.Dense"], "methods", ["None"], ["    ", "@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "nn", ".", "Dense", "(", "1", ")", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.continuous_block_test.InitializeHelperTests.testInitialize": [[20, 26], ["jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.array", "jax.array", "initialize_multiple_times", "continuous_block_test.InitializeHelperTests.assertEqual", "continuous_block_test.MyMod", "len"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.continuous_block.initialize_multiple_times"], ["    ", "def", "testInitialize", "(", "self", ")", ":", "\n", "        ", "prng_key", "=", "jax", ".", "random", ".", "PRNGKey", "(", "0", ")", "\n", "x", "=", "jnp", ".", "array", "(", "[", "1.0", "]", ")", "\n", "n_basis", "=", "2", "\n", "params", "=", "initialize_multiple_times", "(", "prng_key", ",", "MyMod", "(", ")", ",", "x", ",", "n_basis", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "params", ")", ",", "n_basis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.continuous_block_test.ContinuousBlockTests.testInitNoState": [[30, 36], ["jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.ones", "jax.ones", "StatefulContinuousBlock", "StatefulContinuousBlock.init", "continuous_block_test.ContinuousBlockTests.assertTrue", "residual_modules.ResidualUnit"], "methods", ["None"], ["    ", "def", "testInitNoState", "(", "self", ")", ":", "\n", "        ", "prng_key", "=", "jax", ".", "random", ".", "PRNGKey", "(", "0", ")", "\n", "x", "=", "jnp", ".", "ones", "(", "(", "1", ",", "4", ",", "4", ",", "1", ")", ")", "\n", "model", "=", "StatefulContinuousBlock", "(", "ResidualUnit", "(", "3", ",", "norm", "=", "'None'", ")", ",", "n_basis", "=", "2", ",", "n_step", "=", "2", ")", "\n", "var", "=", "model", ".", "init", "(", "prng_key", ",", "x", ")", "\n", "self", ".", "assertTrue", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.continuous_block_test.ContinuousBlockTests.testApplyNoState": [[37, 44], ["jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.ones", "jax.ones", "StatefulContinuousBlock", "StatefulContinuousBlock.init", "StatefulContinuousBlock.apply", "continuous_block_test.ContinuousBlockTests.assertEqual", "residual_modules.ResidualUnit"], "methods", ["None"], ["", "def", "testApplyNoState", "(", "self", ")", ":", "\n", "        ", "prng_key", "=", "jax", ".", "random", ".", "PRNGKey", "(", "0", ")", "\n", "x", "=", "jnp", ".", "ones", "(", "(", "1", ",", "4", ",", "4", ",", "1", ")", ")", "\n", "model", "=", "StatefulContinuousBlock", "(", "ResidualUnit", "(", "3", ",", "norm", "=", "'None'", ")", ",", "n_basis", "=", "2", ",", "n_step", "=", "2", ")", "\n", "var", "=", "model", ".", "init", "(", "prng_key", ",", "x", ")", "\n", "y", "=", "model", ".", "apply", "(", "var", ",", "x", ")", "\n", "self", ".", "assertEqual", "(", "y", ".", "shape", ",", "x", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.continuous_block_test.ContinuousBlockTests.testInitStateful": [[45, 51], ["jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.ones", "jax.ones", "StatefulContinuousBlock", "StatefulContinuousBlock.init", "continuous_block_test.ContinuousBlockTests.assertTrue", "residual_modules.ResidualUnit"], "methods", ["None"], ["", "def", "testInitStateful", "(", "self", ")", ":", "\n", "        ", "prng_key", "=", "jax", ".", "random", ".", "PRNGKey", "(", "0", ")", "\n", "x", "=", "jnp", ".", "ones", "(", "(", "1", ",", "4", ",", "4", ",", "1", ")", ")", "\n", "model", "=", "StatefulContinuousBlock", "(", "ResidualUnit", "(", "3", ")", ",", "n_basis", "=", "2", ",", "n_step", "=", "2", ")", "\n", "var", "=", "model", ".", "init", "(", "prng_key", ",", "x", ")", "\n", "self", ".", "assertTrue", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.continuous_block_test.ContinuousBlockTests.testApplyStatefulWithMutate": [[52, 61], ["jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.ones", "jax.ones", "StatefulContinuousBlock", "StatefulContinuousBlock.init", "StatefulContinuousBlock.init.pop", "StatefulContinuousBlock.apply", "continuous_block_test.ContinuousBlockTests.assertEqual", "continuous_block_test.ContinuousBlockTests.assertEqual", "residual_modules.ResidualUnit", "state.keys", "out_state.keys", "state.keys"], "methods", ["None"], ["", "def", "testApplyStatefulWithMutate", "(", "self", ")", ":", "\n", "        ", "prng_key", "=", "jax", ".", "random", ".", "PRNGKey", "(", "0", ")", "\n", "x", "=", "jnp", ".", "ones", "(", "(", "1", ",", "4", ",", "4", ",", "1", ")", ")", "\n", "model", "=", "StatefulContinuousBlock", "(", "ResidualUnit", "(", "3", ")", ",", "n_basis", "=", "2", ",", "n_step", "=", "2", ")", "\n", "var", "=", "model", ".", "init", "(", "prng_key", ",", "x", ")", "\n", "state", ",", "params", "=", "var", ".", "pop", "(", "'params'", ")", "\n", "y", ",", "out_state", "=", "model", ".", "apply", "(", "var", ",", "x", ",", "mutable", "=", "state", ".", "keys", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "y", ".", "shape", ",", "x", ".", "shape", ")", "\n", "self", ".", "assertEqual", "(", "state", ".", "keys", "(", ")", ",", "out_state", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.FlaxMod.__call__": [[22, 26], ["flax.Dense", "flax.Dense"], "methods", ["None"], ["    ", "@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "nn", ".", "Dense", "(", "1", ")", "(", "x", ")", "\n", "return", "nn", ".", "Dense", "(", "x", ".", "shape", "[", "-", "1", "]", ")", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.StateFlaxMod.__call__": [[30, 35], ["flax.Dense", "flax.BatchNorm", "flax.Dense"], "methods", ["None"], ["    ", "@", "nn", ".", "compact", "\n", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "nn", ".", "Dense", "(", "1", ")", "(", "x", ")", "\n", "h", "=", "nn", ".", "BatchNorm", "(", ")", "(", "h", ")", "\n", "return", "nn", ".", "Dense", "(", "x", ".", "shape", "[", "-", "1", "]", ")", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.StatefulIntegratorsTests.test_euler": [[39, 46], ["stateful_ode_solvers_test.wrap_f", "Euler", "stateful_ode_solvers_test.StatefulIntegratorsTests.assertEqual", "stateful_ode_solvers_test.StatefulIntegratorsTests.assertEqual", "stateful_ode_solvers_test.StatefulIntegratorsTests.assertEqual"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.wrap_f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.Euler"], ["    ", "def", "test_euler", "(", "self", ")", ":", "\n", "        ", "params_of_t", "=", "lambda", "t", ":", "2.0", "\n", "f", "=", "wrap_f", "(", "stateful_f", ",", "params_of_t", ")", "\n", "x_out", ",", "ts", ",", "state", "=", "Euler", "(", "f", ",", "3.0", ",", "0.0", ",", "1.0", ")", "\n", "self", ".", "assertEqual", "(", "ts", ",", "(", "0.0", ",", ")", ")", "\n", "self", ".", "assertEqual", "(", "state", ",", "(", "3.0", ",", ")", ")", "\n", "self", ".", "assertEqual", "(", "x_out", ",", "9.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.StatefulIntegratorsTests.test_midpoint": [[47, 55], ["stateful_ode_solvers_test.wrap_f", "Midpoint", "stateful_ode_solvers_test.StatefulIntegratorsTests.assertEqual", "stateful_ode_solvers_test.StatefulIntegratorsTests.assertEqual", "stateful_ode_solvers_test.StatefulIntegratorsTests.assertEqual"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.wrap_f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.Midpoint"], ["", "def", "test_midpoint", "(", "self", ")", ":", "\n", "        ", "params_of_t", "=", "lambda", "t", ":", "0.0", "\n", "f", "=", "wrap_f", "(", "stateful_f", ",", "params_of_t", ")", "\n", "x_out", ",", "ts", ",", "state", "=", "Midpoint", "(", "f", ",", "1.0", ",", "0.0", ",", "1.0", ")", "\n", "self", ".", "assertEqual", "(", "ts", ",", "(", "0.0", ",", "0.5", ")", ")", "\n", "self", ".", "assertEqual", "(", "state", ",", "(", "1.0", ",", "1.0", ")", ")", "\n", "\n", "self", ".", "assertEqual", "(", "x_out", ",", "4.0", ")", "# 1.0 + 1.0*( 1.0 + 0.5*(1.0+1.0) + 1.0)", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.StatefulIntegratorsTests.test_stateful_flax_module": [[69, 81], ["jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.array", "jax.array", "StateFlaxMod().init", "StateFlaxMod().init.pop", "Euler", "stateful_ode_solvers_test.StatefulIntegratorsTests.assertEqual", "stateful_ode_solvers_test.StatefulIntegratorsTests.assertEqual", "StateFlaxMod().apply", "state_out[].keys", "init_state.keys", "stateful_ode_solvers_test.StateFlaxMod", "params_of_t", "stateful_ode_solvers_test.StateFlaxMod", "init_state.keys"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.Euler"], ["", "def", "test_stateful_flax_module", "(", "self", ")", ":", "\n", "        ", "prng_key", "=", "jax", ".", "random", ".", "PRNGKey", "(", "0", ")", "\n", "x", "=", "jnp", ".", "array", "(", "[", "1.0", "]", ")", "\n", "params", "=", "StateFlaxMod", "(", ")", ".", "init", "(", "prng_key", ",", "x", ")", "\n", "init_state", ",", "train_params", "=", "params", ".", "pop", "(", "'params'", ")", "\n", "\n", "params_of_t", "=", "lambda", "t", ":", "params", "\n", "f", "=", "lambda", "t", ",", "x", ":", "StateFlaxMod", "(", ")", ".", "apply", "(", "\n", "params_of_t", "(", "t", ")", ",", "x", ",", "mutable", "=", "init_state", ".", "keys", "(", ")", ")", "\n", "x_out", ",", "ts", ",", "state_out", "=", "Euler", "(", "f", ",", "x", ",", "t0", "=", "0.0", ",", "Dt", "=", "1.0", ")", "\n", "self", ".", "assertEqual", "(", "ts", "[", "0", "]", ",", "0.0", ")", "\n", "self", ".", "assertEqual", "(", "state_out", "[", "0", "]", ".", "keys", "(", ")", ",", "init_state", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.StatefulIntegratorsTests.test_integration_simple": [[82, 90], ["stateful_ode_solvers_test.wrap_f", "StateOdeIntegrateFast", "stateful_ode_solvers_test.StatefulIntegratorsTests.assertEqual", "enumerate", "len", "zip", "stateful_ode_solvers_test.StatefulIntegratorsTests.assertAlmostEqual", "stateful_ode_solvers_test.StatefulIntegratorsTests.assertEqual", "float"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.wrap_f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.stateful_ode_solvers.StateOdeIntegrateFast"], ["", "def", "test_integration_simple", "(", "self", ")", ":", "\n", "        ", "params_of_t", "=", "lambda", "t", ":", "2.0", "\n", "f", "=", "wrap_f", "(", "stateful_f", ",", "params_of_t", ")", "\n", "x_out", ",", "ts", ",", "states", "=", "StateOdeIntegrateFast", "(", "f", ",", "0.0", ",", "Euler", ",", "10", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "states", ")", ",", "10", ")", "\n", "for", "i", ",", "(", "t_x", ",", "state", ")", "in", "enumerate", "(", "zip", "(", "ts", ",", "states", ")", ")", ":", "\n", "            ", "self", ".", "assertAlmostEqual", "(", "t_x", ",", "float", "(", "i", ")", "/", "10", ")", "\n", "self", ".", "assertEqual", "(", "state", ",", "3.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.StatefulIntegratorsTests.test_integration_stateful_flax": [[108, 123], ["jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.random.PRNGKey", "jax.array", "jax.array", "StateFlaxMod().init", "StateFlaxMod().init.pop", "StateOdeIntegrateFast", "stateful_ode_solvers_test.StatefulIntegratorsTests.assertEqual", "enumerate", "StateFlaxMod().apply", "len", "zip", "stateful_ode_solvers_test.StatefulIntegratorsTests.assertAlmostEqual", "stateful_ode_solvers_test.StatefulIntegratorsTests.assertEqual", "stateful_ode_solvers_test.StateFlaxMod", "params_of_t", "state.keys", "init_state.keys", "stateful_ode_solvers_test.StateFlaxMod", "init_state.keys", "float"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.stateful_ode_solvers.StateOdeIntegrateFast"], ["", "", "def", "test_integration_stateful_flax", "(", "self", ")", ":", "\n", "        ", "prng_key", "=", "jax", ".", "random", ".", "PRNGKey", "(", "0", ")", "\n", "x", "=", "jnp", ".", "array", "(", "[", "[", "1.0", "]", "]", ")", "\n", "params", "=", "StateFlaxMod", "(", ")", ".", "init", "(", "prng_key", ",", "x", ")", "\n", "init_state", ",", "train_params", "=", "params", ".", "pop", "(", "'params'", ")", "\n", "\n", "params_of_t", "=", "lambda", "t", ":", "params", "\n", "f", "=", "lambda", "t", ",", "x", ":", "StateFlaxMod", "(", ")", ".", "apply", "(", "\n", "params_of_t", "(", "t", ")", ",", "x", ",", "mutable", "=", "init_state", ".", "keys", "(", ")", ")", "\n", "x_out", ",", "ts", ",", "states", "=", "StateOdeIntegrateFast", "(", "f", ",", "x", ",", "Euler", ",", "10", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "states", ")", ",", "10", ")", "\n", "\n", "for", "i", ",", "(", "t_x", ",", "state", ")", "in", "enumerate", "(", "zip", "(", "ts", ",", "states", ")", ")", ":", "\n", "            ", "self", ".", "assertAlmostEqual", "(", "t_x", ",", "float", "(", "i", ")", "/", "10", ")", "\n", "self", ".", "assertEqual", "(", "state", ".", "keys", "(", ")", ",", "init_state", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.stateful_f": [[12, 14], ["None"], "function", ["None"], ["def", "stateful_f", "(", "p", ",", "x", ")", ":", "\n", "    ", "return", "x", "+", "p", "+", "1.0", ",", "p", "+", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.wrap_f": [[16, 18], ["params_of_t", "stateful_ode_solvers_test.stateful_f", "stateful_ode_solvers_test.stateful_f", "stateful_ode_solvers_test.stateful_f"], "function", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.stateful_f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.stateful_f", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.stateful_ode_solvers_test.stateful_f"], ["", "def", "wrap_f", "(", "f_module", ",", "params_of_t", ")", ":", "\n", "    ", "return", "lambda", "t", ",", "x", ":", "f_module", "(", "params_of_t", "(", "t", ")", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.tools_test.ToolsTest.test_count_parameters": [[14, 34], ["tools_test.ToolsTest.assertEqual", "tools_test.ToolsTest.assertEqual", "tools_test.ToolsTest.assertEqual", "tools_test.ToolsTest.assertEqual", "tools_test.ToolsTest.assertEqual", "tools_test.ToolsTest.assertEqual", "tools_test.ToolsTest.assertEqual", "tools_test.ToolsTest.assertEqual", "count_parameters", "count_parameters", "count_parameters", "count_parameters", "count_parameters", "count_parameters", "count_parameters", "count_parameters", "jax.zeros", "jax.zeros", "jax.zeros", "jax.zeros", "jax.zeros", "jax.zeros", "jax.zeros", "jax.zeros", "jax.zeros", "jax.zeros", "jax.zeros", "jax.zeros"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.count_parameters", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.count_parameters", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.count_parameters", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.count_parameters", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.count_parameters", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.count_parameters", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.count_parameters", "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.count_parameters"], ["    ", "def", "test_count_parameters", "(", "self", ")", ":", "\n", "# One number in various trees.", "\n", "        ", "self", ".", "assertEqual", "(", "1", ",", "count_parameters", "(", "2.0", ")", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "count_parameters", "(", "[", "2.0", "]", ")", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "count_parameters", "(", "{", "'a'", ":", "{", "'b'", ":", "2.0", "}", "}", ")", ")", "\n", "\n", "# One array in various trees.", "\n", "self", ".", "assertEqual", "(", "15", ",", "count_parameters", "(", "onp", ".", "zeros", "(", "(", "3", ",", "5", ")", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "15", ",", "count_parameters", "(", "[", "onp", ".", "zeros", "(", "(", "3", ",", "5", ")", ")", "]", ")", ")", "\n", "self", ".", "assertEqual", "(", "15", ",", "count_parameters", "(", "{", "'a'", ":", "{", "'b'", ":", "onp", ".", "zeros", "(", "(", "3", ",", "5", ")", ")", "}", "}", ")", ")", "\n", "\n", "# Multiple arrays in different trees.", "\n", "self", ".", "assertEqual", "(", "16", ",", "count_parameters", "(", "[", "2.0", ",", "onp", ".", "zeros", "(", "(", "3", ",", "5", ")", ")", "]", ")", ")", "\n", "self", ".", "assertEqual", "(", "\n", "15", "+", "77", ",", "\n", "count_parameters", "(", "{", "\n", "'a'", ":", "{", "\n", "'b'", ":", "onp", ".", "zeros", "(", "(", "3", ",", "5", ")", ")", "\n", "}", ",", "\n", "'c'", ":", "onp", ".", "zeros", "(", "(", "7", ",", "11", ")", ")", ",", "\n", "}", ")", ")", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.tools_test.ToolsTest.test_module_to_dict": [[36, 39], ["flax.Dense", "module_to_dict"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tools.tools.module_to_dict"], ["", "def", "test_module_to_dict", "(", "self", ")", ":", "\n", "        ", "F", "=", "nn", ".", "Dense", "(", "10", ")", "\n", "module_to_dict", "(", "F", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.learning_rate_schedule_test.LearningRateScheduleTests.testConstant": [[7, 12], ["LearningRateSchedule", "learning_rate_schedule_test.LearningRateScheduleTests.assertEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertEqual", "LearningRateSchedule.", "LearningRateSchedule.", "LearningRateSchedule."], "methods", ["None"], ["    ", "def", "testConstant", "(", "self", ")", ":", "\n", "        ", "schedule", "=", "LearningRateSchedule", "(", "0.1", ")", "\n", "self", ".", "assertEqual", "(", "schedule", "(", "0", ")", ",", "0.1", ")", "\n", "self", ".", "assertEqual", "(", "schedule", "(", "1", ")", ",", "0.1", ")", "\n", "self", ".", "assertEqual", "(", "schedule", "(", "20", ")", ",", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.learning_rate_schedule_test.LearningRateScheduleTests.testDecay": [[13, 23], ["LearningRateSchedule", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "LearningRateSchedule.", "LearningRateSchedule.", "LearningRateSchedule.", "LearningRateSchedule.", "LearningRateSchedule.", "LearningRateSchedule.", "LearningRateSchedule.", "LearningRateSchedule."], "methods", ["None"], ["", "def", "testDecay", "(", "self", ")", ":", "\n", "        ", "schedule", "=", "LearningRateSchedule", "(", "0.2", ",", "0.1", ",", "[", "10", ",", "20", ",", "30", "]", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "1", ")", ",", "0.2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "9", ")", ",", "0.2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "10", ")", ",", "0.02", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "19", ")", ",", "0.02", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "20", ")", ",", "0.002", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "29", ")", ",", "0.002", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "30", ")", ",", "0.0002", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "99", ")", ",", "0.0002", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.learning_rate_schedule_test.LearningRateScheduleTests.testDecayUnsorted": [[24, 34], ["LearningRateSchedule", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "learning_rate_schedule_test.LearningRateScheduleTests.assertAlmostEqual", "LearningRateSchedule.", "LearningRateSchedule.", "LearningRateSchedule.", "LearningRateSchedule.", "LearningRateSchedule.", "LearningRateSchedule.", "LearningRateSchedule.", "LearningRateSchedule."], "methods", ["None"], ["", "def", "testDecayUnsorted", "(", "self", ")", ":", "\n", "        ", "schedule", "=", "LearningRateSchedule", "(", "0.2", ",", "0.1", ",", "[", "30", ",", "10", ",", "20", ",", "]", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "1", ")", ",", "0.2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "9", ")", ",", "0.2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "10", ")", ",", "0.02", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "19", ")", ",", "0.02", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "20", ")", ",", "0.002", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "29", ")", ",", "0.002", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "30", ")", ",", "0.0002", ")", "\n", "self", ".", "assertAlmostEqual", "(", "schedule", "(", "99", ")", ",", "0.0002", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.jax_to_graphviz_test.MakeGraphTests.testSimple": [[9, 16], ["make_graph", "jax_to_graphviz_test.MakeGraphTests.assertTrue", "jax_to_graphviz_test.MakeGraphTests.assertEqual", "jax.make_jaxpr"], "methods", ["None"], ["    ", "def", "testSimple", "(", "self", ")", ":", "\n", "        ", "def", "f", "(", "x", ",", "y", ")", ":", "\n", "            ", "return", "x", "*", "y", "+", "y", "\n", "", "jxpr", "=", "jax", ".", "make_jaxpr", "(", "f", ")", "(", "1", ",", "1", ")", "\n", "graph", "=", "make_graph", "(", "jxpr", ",", "name", "=", "'foo'", ")", "\n", "self", ".", "assertTrue", "(", "graph", ".", "directed", ")", "\n", "self", ".", "assertEqual", "(", "graph", ".", "name", ",", "'foo'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.IntegratorsTest.testEuler": [[16, 18], ["nonauto_ode_solvers_test.IntegratorsTest.assertAlmostEqual", "Euler"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.Euler"], ["    ", "def", "testEuler", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertAlmostEqual", "(", "Euler", "(", "f", ",", "X0", ",", "T0", ",", "DT", ")", ",", "2.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.IntegratorsTest.testMidpoint": [[19, 21], ["nonauto_ode_solvers_test.IntegratorsTest.assertAlmostEqual", "Midpoint"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.Midpoint"], ["", "def", "testMidpoint", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertAlmostEqual", "(", "Midpoint", "(", "f", ",", "X0", ",", "T0", ",", "DT", ")", ",", "2.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.IntegratorsTest.testRK4": [[22, 24], ["nonauto_ode_solvers_test.IntegratorsTest.assertAlmostEqual", "RK4"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.RK4"], ["", "def", "testRK4", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertAlmostEqual", "(", "RK4", "(", "f", ",", "X0", ",", "T0", ",", "DT", ")", ",", "2.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.IntegratorsTest.testRK4_38": [[25, 27], ["nonauto_ode_solvers_test.IntegratorsTest.assertAlmostEqual", "RK4_38"], "methods", ["home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.continuous_net.nonauto_ode_solvers.RK4_38"], ["", "def", "testRK4_38", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertAlmostEqual", "(", "RK4_38", "(", "f", ",", "X0", ",", "T0", ",", "DT", ")", ",", "2.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.afqueiruga_StatefulOdeNets.tests.nonauto_ode_solvers_test.f": [[10, 12], ["None"], "function", ["None"], ["def", "f", "(", "_", ",", "x", ")", ":", "\n", "    ", "return", "1.0", "\n", "\n"]]}