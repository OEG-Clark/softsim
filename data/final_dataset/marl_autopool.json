{"home.repos.pwc.inspect_result.marl_autopool.autopool.tf.AutoPool1D.__init__": [[17, 48], ["tensorflow.keras.layers.Layer.__init__", "tensorflow.keras.initializers.get", "tensorflow.keras.constraints.get", "tensorflow.keras.regularizers.get", "tensorflow.keras.layers.InputSpec", "kwargs.pop"], "methods", ["home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.__init__"], ["def", "__init__", "(", "self", ",", "axis", "=", "0", ",", "\n", "kernel_initializer", "=", "'zeros'", ",", "\n", "kernel_constraint", "=", "None", ",", "\n", "kernel_regularizer", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "'''\n\n        Parameters\n        ----------\n        axis : int\n            Axis along which to perform the pooling. By default 0 (should be time).\n\n        kernel_initializer: Initializer for the weights matrix\n\n        kernel_regularizer: Regularizer function applied to the weights matrix\n\n        kernel_constraint: Constraint function applied to the weights matrix\n        kwargs\n        '''", "\n", "\n", "if", "'input_shape'", "not", "in", "kwargs", "and", "'input_dim'", "in", "kwargs", ":", "\n", "            ", "kwargs", "[", "'input_shape'", "]", "=", "(", "kwargs", ".", "pop", "(", "'input_dim'", ")", ",", ")", "\n", "\n", "", "super", "(", "AutoPool1D", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "axis", "=", "axis", "\n", "self", ".", "kernel_initializer", "=", "initializers", ".", "get", "(", "kernel_initializer", ")", "\n", "self", ".", "kernel_constraint", "=", "constraints", ".", "get", "(", "kernel_constraint", ")", "\n", "self", ".", "kernel_regularizer", "=", "regularizers", ".", "get", "(", "kernel_regularizer", ")", "\n", "self", ".", "input_spec", "=", "InputSpec", "(", "min_ndim", "=", "3", ")", "\n", "self", ".", "supports_masking", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.tf.AutoPool1D.build": [[49, 60], ["tf.AutoPool1D.add_weight", "tensorflow.keras.layers.InputSpec", "len"], "methods", ["None"], ["", "def", "build", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "assert", "len", "(", "input_shape", ")", ">=", "3", "\n", "input_dim", "=", "input_shape", "[", "-", "1", "]", "\n", "\n", "self", ".", "kernel", "=", "self", ".", "add_weight", "(", "shape", "=", "(", "1", ",", "input_dim", ")", ",", "\n", "initializer", "=", "self", ".", "kernel_initializer", ",", "\n", "name", "=", "'kernel'", ",", "\n", "regularizer", "=", "self", ".", "kernel_regularizer", ",", "\n", "constraint", "=", "self", ".", "kernel_constraint", ")", "\n", "self", ".", "input_spec", "=", "InputSpec", "(", "min_ndim", "=", "2", ",", "axes", "=", "{", "-", "1", ":", "input_dim", "}", ")", "\n", "self", ".", "built", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.tf.AutoPool1D.compute_output_shape": [[61, 63], ["tf.AutoPool1D.get_output_shape_for"], "methods", ["home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.get_output_shape_for"], ["", "def", "compute_output_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "return", "self", ".", "get_output_shape_for", "(", "input_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.tf.AutoPool1D.get_output_shape_for": [[64, 68], ["list", "tuple"], "methods", ["None"], ["", "def", "get_output_shape_for", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "shape", "=", "list", "(", "input_shape", ")", "\n", "del", "shape", "[", "self", ".", "axis", "]", "\n", "return", "tuple", "(", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.tf.AutoPool1D.get_config": [[69, 77], ["super().get_config", "dict", "tensorflow.keras.initializers.serialize", "tensorflow.keras.constraints.serialize", "tensorflow.keras.regularizers.serialize", "list", "list", "super().get_config.items", "config.items"], "methods", ["home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.get_config"], ["", "def", "get_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "'kernel_initializer'", ":", "initializers", ".", "serialize", "(", "self", ".", "kernel_initializer", ")", ",", "\n", "'kernel_constraint'", ":", "constraints", ".", "serialize", "(", "self", ".", "kernel_constraint", ")", ",", "\n", "'kernel_regularizer'", ":", "regularizers", ".", "serialize", "(", "self", ".", "kernel_regularizer", ")", ",", "\n", "'axis'", ":", "self", ".", "axis", "}", "\n", "\n", "base_config", "=", "super", "(", "AutoPool1D", ",", "self", ")", ".", "get_config", "(", ")", "\n", "return", "dict", "(", "list", "(", "base_config", ".", "items", "(", ")", ")", "+", "list", "(", "config", ".", "items", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.tf.AutoPool1D.call": [[78, 81], ["tensorflow.keras.backend.softmax", "tensorflow.keras.backend.sum"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "        ", "weights", "=", "K", ".", "softmax", "(", "self", ".", "kernel", "*", "x", ",", "axis", "=", "self", ".", "axis", ")", "\n", "return", "K", ".", "sum", "(", "x", "*", "weights", ",", "axis", "=", "self", ".", "axis", ",", "keepdims", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.tf.SoftMaxPool1D.__init__": [[88, 101], ["tensorflow.keras.layers.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.__init__"], ["def", "__init__", "(", "self", ",", "axis", "=", "0", ",", "**", "kwargs", ")", ":", "\n", "        ", "'''\n\n        Parameters\n        ----------\n        axis : int\n            Axis along which to perform the pooling. By default 0\n            (should be time).\n        kwargs\n        '''", "\n", "super", "(", "SoftMaxPool1D", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "axis", "=", "axis", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.tf.SoftMaxPool1D.get_output_shape_for": [[102, 106], ["list", "tuple"], "methods", ["None"], ["", "def", "get_output_shape_for", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "shape", "=", "list", "(", "input_shape", ")", "\n", "del", "shape", "[", "self", ".", "axis", "]", "\n", "return", "tuple", "(", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.tf.SoftMaxPool1D.compute_output_shape": [[107, 109], ["tf.SoftMaxPool1D.get_output_shape_for"], "methods", ["home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.get_output_shape_for"], ["", "def", "compute_output_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "return", "self", ".", "get_output_shape_for", "(", "input_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.tf.SoftMaxPool1D.call": [[110, 113], ["tensorflow.keras.backend.softmax", "tensorflow.keras.backend.sum"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "        ", "weights", "=", "K", ".", "softmax", "(", "x", ",", "axis", "=", "self", ".", "axis", ")", "\n", "return", "K", ".", "sum", "(", "x", "*", "weights", ",", "axis", "=", "self", ".", "axis", ",", "keepdims", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.tf.SoftMaxPool1D.get_config": [[114, 118], ["super().get_config", "dict", "list", "list", "super().get_config.items", "config.items"], "methods", ["home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.get_config"], ["", "def", "get_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "'axis'", ":", "self", ".", "axis", "}", "\n", "base_config", "=", "super", "(", "SoftMaxPool1D", ",", "self", ")", ".", "get_config", "(", ")", "\n", "return", "dict", "(", "list", "(", "base_config", ".", "items", "(", ")", ")", "+", "list", "(", "config", ".", "items", "(", ")", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.marl_autopool.autopool.keras.AutoPool1D.__init__": [[17, 48], ["keras.layers.Layer.__init__", "keras.initializers.get", "keras.constraints.get", "keras.regularizers.get", "keras.layers.InputSpec", "kwargs.pop"], "methods", ["home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.__init__"], ["def", "__init__", "(", "self", ",", "axis", "=", "0", ",", "\n", "kernel_initializer", "=", "'zeros'", ",", "\n", "kernel_constraint", "=", "None", ",", "\n", "kernel_regularizer", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "'''\n\n        Parameters\n        ----------\n        axis : int\n            Axis along which to perform the pooling. By default 0 (should be time).\n\n        kernel_initializer: Initializer for the weights matrix\n\n        kernel_regularizer: Regularizer function applied to the weights matrix\n\n        kernel_constraint: Constraint function applied to the weights matrix\n        kwargs\n        '''", "\n", "\n", "if", "'input_shape'", "not", "in", "kwargs", "and", "'input_dim'", "in", "kwargs", ":", "\n", "            ", "kwargs", "[", "'input_shape'", "]", "=", "(", "kwargs", ".", "pop", "(", "'input_dim'", ")", ",", ")", "\n", "\n", "", "super", "(", "AutoPool1D", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "axis", "=", "axis", "\n", "self", ".", "kernel_initializer", "=", "initializers", ".", "get", "(", "kernel_initializer", ")", "\n", "self", ".", "kernel_constraint", "=", "constraints", ".", "get", "(", "kernel_constraint", ")", "\n", "self", ".", "kernel_regularizer", "=", "regularizers", ".", "get", "(", "kernel_regularizer", ")", "\n", "self", ".", "input_spec", "=", "InputSpec", "(", "min_ndim", "=", "3", ")", "\n", "self", ".", "supports_masking", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.keras.AutoPool1D.build": [[49, 60], ["keras.AutoPool1D.add_weight", "keras.layers.InputSpec", "len"], "methods", ["None"], ["", "def", "build", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "assert", "len", "(", "input_shape", ")", ">=", "3", "\n", "input_dim", "=", "input_shape", "[", "-", "1", "]", "\n", "\n", "self", ".", "kernel", "=", "self", ".", "add_weight", "(", "shape", "=", "(", "1", ",", "input_dim", ")", ",", "\n", "initializer", "=", "self", ".", "kernel_initializer", ",", "\n", "name", "=", "'kernel'", ",", "\n", "regularizer", "=", "self", ".", "kernel_regularizer", ",", "\n", "constraint", "=", "self", ".", "kernel_constraint", ")", "\n", "self", ".", "input_spec", "=", "InputSpec", "(", "min_ndim", "=", "2", ",", "axes", "=", "{", "-", "1", ":", "input_dim", "}", ")", "\n", "self", ".", "built", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.keras.AutoPool1D.compute_output_shape": [[61, 63], ["keras.AutoPool1D.get_output_shape_for"], "methods", ["home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.get_output_shape_for"], ["", "def", "compute_output_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "return", "self", ".", "get_output_shape_for", "(", "input_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.keras.AutoPool1D.get_output_shape_for": [[64, 68], ["list", "tuple"], "methods", ["None"], ["", "def", "get_output_shape_for", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "shape", "=", "list", "(", "input_shape", ")", "\n", "del", "shape", "[", "self", ".", "axis", "]", "\n", "return", "tuple", "(", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.keras.AutoPool1D.get_config": [[69, 77], ["super().get_config", "dict", "keras.initializers.serialize", "keras.constraints.serialize", "keras.regularizers.serialize", "list", "list", "super().get_config.items", "config.items"], "methods", ["home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.get_config"], ["", "def", "get_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "'kernel_initializer'", ":", "initializers", ".", "serialize", "(", "self", ".", "kernel_initializer", ")", ",", "\n", "'kernel_constraint'", ":", "constraints", ".", "serialize", "(", "self", ".", "kernel_constraint", ")", ",", "\n", "'kernel_regularizer'", ":", "regularizers", ".", "serialize", "(", "self", ".", "kernel_regularizer", ")", ",", "\n", "'axis'", ":", "self", ".", "axis", "}", "\n", "\n", "base_config", "=", "super", "(", "AutoPool1D", ",", "self", ")", ".", "get_config", "(", ")", "\n", "return", "dict", "(", "list", "(", "base_config", ".", "items", "(", ")", ")", "+", "list", "(", "config", ".", "items", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.keras.AutoPool1D.call": [[78, 81], ["keras.backend.softmax", "keras.backend.sum"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "        ", "weights", "=", "K", ".", "softmax", "(", "self", ".", "kernel", "*", "x", ",", "axis", "=", "self", ".", "axis", ")", "\n", "return", "K", ".", "sum", "(", "x", "*", "weights", ",", "axis", "=", "self", ".", "axis", ",", "keepdims", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.__init__": [[88, 101], ["keras.layers.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.__init__"], ["def", "__init__", "(", "self", ",", "axis", "=", "0", ",", "**", "kwargs", ")", ":", "\n", "        ", "'''\n\n        Parameters\n        ----------\n        axis : int\n            Axis along which to perform the pooling. By default 0\n            (should be time).\n        kwargs\n        '''", "\n", "super", "(", "SoftMaxPool1D", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "axis", "=", "axis", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.get_output_shape_for": [[102, 106], ["list", "tuple"], "methods", ["None"], ["", "def", "get_output_shape_for", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "shape", "=", "list", "(", "input_shape", ")", "\n", "del", "shape", "[", "self", ".", "axis", "]", "\n", "return", "tuple", "(", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.compute_output_shape": [[107, 109], ["keras.SoftMaxPool1D.get_output_shape_for"], "methods", ["home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.get_output_shape_for"], ["", "def", "compute_output_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "return", "self", ".", "get_output_shape_for", "(", "input_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.call": [[110, 113], ["keras.backend.softmax", "keras.backend.sum"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "        ", "weights", "=", "K", ".", "softmax", "(", "x", ",", "axis", "=", "self", ".", "axis", ")", "\n", "return", "K", ".", "sum", "(", "x", "*", "weights", ",", "axis", "=", "self", ".", "axis", ",", "keepdims", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.get_config": [[114, 118], ["super().get_config", "dict", "list", "list", "super().get_config.items", "config.items"], "methods", ["home.repos.pwc.inspect_result.marl_autopool.autopool.keras.SoftMaxPool1D.get_config"], ["", "def", "get_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "'axis'", ":", "self", ".", "axis", "}", "\n", "base_config", "=", "super", "(", "SoftMaxPool1D", ",", "self", ")", ".", "get_config", "(", ")", "\n", "return", "dict", "(", "list", "(", "base_config", ".", "items", "(", ")", ")", "+", "list", "(", "config", ".", "items", "(", ")", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.marl_autopool.docs.conf.Mock.__getattr__": [[89, 94], ["MagicMock"], "methods", ["None"], ["    ", "@", "classmethod", "\n", "def", "__getattr__", "(", "cls", ",", "name", ")", ":", "\n", "        ", "if", "name", "in", "MOCK_CLASSES", ":", "\n", "            ", "return", "object", "\n", "", "return", "MagicMock", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.tests.test_tf.test_autopool_tf": [[9, 37], ["pytest.mark.parametrize", "autopool.tf.AutoPool1D", "autopool.tf.AutoPool1D.", "numpy.max", "numpy.exp", "numpy.sum", "numpy.allclose", "numpy.random.randn", "numpy.zeros_like", "numpy.sum"], "function", ["None"], ["@", "pytest", ".", "mark", ".", "parametrize", "(", "'init'", ",", "[", "'zeros'", ",", "'ones'", "]", ")", "\n", "def", "test_autopool_tf", "(", "init", ")", ":", "\n", "\n", "# Create a random array", "\n", "    ", "x", "=", "np", ".", "random", ".", "randn", "(", "1", ",", "3", ",", "10", ")", "**", "2", "\n", "\n", "# pool over the trailing dimension", "\n", "ap_layer", "=", "autopool", ".", "tf", ".", "AutoPool1D", "(", "kernel_initializer", "=", "init", ",", "axis", "=", "-", "1", ")", "\n", "\n", "x_ap", "=", "ap_layer", "(", "x", ")", "\n", "\n", "assert", "x_ap", ".", "shape", "==", "(", "1", ",", "3", ")", "\n", "\n", "# Compute by force with numpy", "\n", "if", "init", "==", "'zeros'", ":", "\n", "# For zero-init, the default state will be a normal average", "\n", "        ", "scaled", "=", "np", ".", "zeros_like", "(", "x", ")", "\n", "", "elif", "init", "==", "'ones'", ":", "\n", "# For ones-init, we should have the same behavior as softmax pooling", "\n", "        ", "scaled", "=", "x", "\n", "\n", "", "max_val", "=", "np", ".", "max", "(", "scaled", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "softmax", "=", "np", ".", "exp", "(", "scaled", "-", "max_val", ")", "\n", "weights", "=", "softmax", "/", "np", ".", "sum", "(", "softmax", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "\n", "x_np_ap", "=", "np", ".", "sum", "(", "x", "*", "weights", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "False", ")", "\n", "\n", "assert", "np", ".", "allclose", "(", "x_np_ap", ",", "x_ap", ")", ",", "(", "x", ",", "x_ap", ",", "x_np_ap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.tests.test_tf.test_softmaxpool_tf": [[39, 58], ["autopool.tf.SoftMaxPool1D", "autopool.tf.SoftMaxPool1D.", "numpy.max", "numpy.exp", "numpy.sum", "numpy.allclose", "numpy.random.randn", "numpy.sum"], "function", ["None"], ["", "def", "test_softmaxpool_tf", "(", ")", ":", "\n", "# Create a random array", "\n", "    ", "x", "=", "np", ".", "random", ".", "randn", "(", "1", ",", "3", ",", "10", ")", "**", "2", "\n", "\n", "# pool over the trailing dimension", "\n", "ap_layer", "=", "autopool", ".", "tf", ".", "SoftMaxPool1D", "(", "axis", "=", "-", "1", ")", "\n", "\n", "x_ap", "=", "ap_layer", "(", "x", ")", "\n", "\n", "assert", "x_ap", ".", "shape", "==", "(", "1", ",", "3", ")", "\n", "\n", "# Compute by force with numpy", "\n", "max_val", "=", "np", ".", "max", "(", "x", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "softmax", "=", "np", ".", "exp", "(", "x", "-", "max_val", ")", "\n", "weights", "=", "softmax", "/", "np", ".", "sum", "(", "softmax", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "\n", "x_np_ap", "=", "np", ".", "sum", "(", "x", "*", "weights", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "False", ")", "\n", "\n", "assert", "np", ".", "allclose", "(", "x_np_ap", ",", "x_ap", ")", ",", "(", "x", ",", "x_ap", ",", "x_np_ap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.tests.test_keras.test_autopool_keras": [[9, 37], ["pytest.mark.parametrize", "autopool.keras.AutoPool1D", "autopool.keras.AutoPool1D.", "numpy.max", "numpy.exp", "numpy.sum", "numpy.allclose", "numpy.random.randn", "numpy.zeros_like", "numpy.sum"], "function", ["None"], ["@", "pytest", ".", "mark", ".", "parametrize", "(", "'init'", ",", "[", "'zeros'", ",", "'ones'", "]", ")", "\n", "def", "test_autopool_keras", "(", "init", ")", ":", "\n", "\n", "# Create a random array", "\n", "    ", "x", "=", "np", ".", "random", ".", "randn", "(", "1", ",", "3", ",", "10", ")", "**", "2", "\n", "\n", "# pool over the trailing dimension", "\n", "ap_layer", "=", "autopool", ".", "keras", ".", "AutoPool1D", "(", "kernel_initializer", "=", "init", ",", "axis", "=", "-", "1", ")", "\n", "\n", "x_ap", "=", "ap_layer", "(", "x", ")", "\n", "\n", "assert", "x_ap", ".", "shape", "==", "(", "1", ",", "3", ")", "\n", "\n", "# Compute by force with numpy", "\n", "if", "init", "==", "'zeros'", ":", "\n", "# For zero-init, the default state will be a normal average", "\n", "        ", "scaled", "=", "np", ".", "zeros_like", "(", "x", ")", "\n", "", "elif", "init", "==", "'ones'", ":", "\n", "# For ones-init, we should have the same behavior as softmax pooling", "\n", "        ", "scaled", "=", "x", "\n", "\n", "", "max_val", "=", "np", ".", "max", "(", "scaled", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "softmax", "=", "np", ".", "exp", "(", "scaled", "-", "max_val", ")", "\n", "weights", "=", "softmax", "/", "np", ".", "sum", "(", "softmax", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "\n", "x_np_ap", "=", "np", ".", "sum", "(", "x", "*", "weights", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "False", ")", "\n", "\n", "assert", "np", ".", "allclose", "(", "x_np_ap", ",", "x_ap", ")", ",", "(", "x", ",", "x_ap", ",", "x_np_ap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.marl_autopool.tests.test_keras.test_softmaxpool_keras": [[39, 58], ["autopool.keras.SoftMaxPool1D", "autopool.keras.SoftMaxPool1D.", "numpy.max", "numpy.exp", "numpy.sum", "numpy.allclose", "numpy.random.randn", "numpy.sum"], "function", ["None"], ["", "def", "test_softmaxpool_keras", "(", ")", ":", "\n", "# Create a random array", "\n", "    ", "x", "=", "np", ".", "random", ".", "randn", "(", "1", ",", "3", ",", "10", ")", "**", "2", "\n", "\n", "# pool over the trailing dimension", "\n", "ap_layer", "=", "autopool", ".", "keras", ".", "SoftMaxPool1D", "(", "axis", "=", "-", "1", ")", "\n", "\n", "x_ap", "=", "ap_layer", "(", "x", ")", "\n", "\n", "assert", "x_ap", ".", "shape", "==", "(", "1", ",", "3", ")", "\n", "\n", "# Compute by force with numpy", "\n", "max_val", "=", "np", ".", "max", "(", "x", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "softmax", "=", "np", ".", "exp", "(", "x", "-", "max_val", ")", "\n", "weights", "=", "softmax", "/", "np", ".", "sum", "(", "softmax", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "\n", "x_np_ap", "=", "np", ".", "sum", "(", "x", "*", "weights", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "False", ")", "\n", "\n", "assert", "np", ".", "allclose", "(", "x_np_ap", ",", "x_ap", ")", ",", "(", "x", ",", "x_ap", ",", "x_np_ap", ")", "\n", "\n"]]}