{"home.repos.pwc.inspect_result.Z-Zheng_FarSeg.None.isaid_eval.SegmSlidingWinInference.__init__": [[19, 24], ["object.__init__", "torch.cuda.is_available", "torch.device", "torch.device"], "methods", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "SegmSlidingWinInference", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_h", "=", "None", "\n", "self", ".", "_w", "=", "None", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "torch", ".", "device", "(", "'cpu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.None.isaid_eval.SegmSlidingWinInference.patch": [[25, 34], ["simplecv.data.preprocess.sliding_window"], "methods", ["None"], ["", "def", "patch", "(", "self", ",", "input_size", ",", "patch_size", ",", "stride", ",", "transforms", "=", "None", ")", ":", "\n", "        ", "\"\"\" divide large image into small patches.\n\n        Returns:\n\n        \"\"\"", "\n", "self", ".", "wins", "=", "sliding_window", "(", "input_size", ",", "patch_size", ",", "stride", ")", "\n", "self", ".", "transforms", "=", "transforms", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.None.isaid_eval.SegmSlidingWinInference.merge": [[35, 48], ["list", "pred_list[].size", "torch.zeros", "torch.zeros", "zip", "zip", "pred_list[].size", "pred.cpu"], "methods", ["None"], ["", "def", "merge", "(", "self", ",", "out_list", ")", ":", "\n", "        ", "pred_list", ",", "win_list", "=", "list", "(", "zip", "(", "*", "out_list", ")", ")", "\n", "num_classes", "=", "pred_list", "[", "0", "]", ".", "size", "(", "1", ")", "\n", "res_img", "=", "torch", ".", "zeros", "(", "pred_list", "[", "0", "]", ".", "size", "(", "0", ")", ",", "num_classes", ",", "self", ".", "_h", ",", "self", ".", "_w", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "res_count", "=", "torch", ".", "zeros", "(", "self", ".", "_h", ",", "self", ".", "_w", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "\n", "for", "pred", ",", "win", "in", "zip", "(", "pred_list", ",", "win_list", ")", ":", "\n", "            ", "res_count", "[", "win", "[", "1", "]", ":", "win", "[", "3", "]", ",", "win", "[", "0", "]", ":", "win", "[", "2", "]", "]", "+=", "1", "\n", "res_img", "[", ":", ",", ":", ",", "win", "[", "1", "]", ":", "win", "[", "3", "]", ",", "win", "[", "0", "]", ":", "win", "[", "2", "]", "]", "+=", "pred", ".", "cpu", "(", ")", "\n", "\n", "", "avg_res_img", "=", "res_img", "/", "res_count", "\n", "\n", "return", "avg_res_img", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.None.isaid_eval.SegmSlidingWinInference.forward": [[49, 54], ["isaid_eval.SegmSlidingWinInference._forward"], "methods", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.None.isaid_eval.SegmSlidingWinInference._forward"], ["", "def", "forward", "(", "self", ",", "model", ",", "image_np", ",", "**", "kwargs", ")", ":", "\n", "        ", "assert", "self", ".", "wins", "is", "not", "None", ",", "'patch must be performed before forward.'", "\n", "# set the image height and width", "\n", "self", ".", "_h", ",", "self", ".", "_w", ",", "_", "=", "image_np", ".", "shape", "\n", "return", "self", ".", "_forward", "(", "model", ",", "image_np", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.None.isaid_eval.SegmSlidingWinInference._forward": [[55, 78], ["kwargs.get", "kwargs.get", "tqdm.tqdm.tqdm", "isaid_eval.SegmSlidingWinInference.merge", "image_np[].astype", "simplecv.preprocess.function.th_divisible_pad.to", "out_list.append", "torch.cuda.empty_cache", "isaid_eval.SegmSlidingWinInference.transforms", "simplecv.preprocess.function.th_divisible_pad", "torch.no_grad", "model", "model.cpu"], "methods", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.None.isaid_eval.SegmSlidingWinInference.merge"], ["", "def", "_forward", "(", "self", ",", "model", ",", "image_np", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "device", "=", "kwargs", ".", "get", "(", "'device'", ",", "self", ".", "device", ")", "\n", "size_divisor", "=", "kwargs", ".", "get", "(", "'size_divisor'", ",", "None", ")", "\n", "assert", "self", ".", "wins", "is", "not", "None", ",", "'patch must be performed before forward.'", "\n", "out_list", "=", "[", "]", "\n", "for", "win", "in", "tqdm", "(", "self", ".", "wins", ")", ":", "\n", "            ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "win", "\n", "image", "=", "image_np", "[", "y1", ":", "y2", ",", "x1", ":", "x2", ",", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "self", ".", "transforms", "is", "not", "None", ":", "\n", "                ", "image", "=", "self", ".", "transforms", "(", "image", ")", "\n", "", "h", ",", "w", "=", "image", ".", "shape", "[", "2", ":", "4", "]", "\n", "if", "size_divisor", "is", "not", "None", ":", "\n", "                ", "image", "=", "sc", ".", "preprocess", ".", "function", ".", "th_divisible_pad", "(", "image", ",", "size_divisor", ")", "\n", "", "image", "=", "image", ".", "to", "(", "self", ".", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "out", "=", "model", "(", "image", ")", "\n", "", "if", "size_divisor", "is", "not", "None", ":", "\n", "                ", "out", "=", "out", "[", ":", ",", ":", ",", ":", "h", ",", ":", "w", "]", "\n", "", "out_list", ".", "append", "(", "(", "out", ".", "cpu", "(", ")", ",", "win", ")", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "", "self", ".", "wins", "=", "None", "\n", "\n", "return", "self", ".", "merge", "(", "out_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.None.isaid_eval.run": [[100, 151], ["parser.parse_args", "simplecv.infer_tool.build_and_load_from_file", "model.to", "isaid_eval.SegmSlidingWinInference", "concurrent.futures.ProcessPoolExecutor", "data.isaid.ImageFolderDataset", "numpy.asarray().reshape().tolist", "simplecv.viz.VisualizeSegmm", "simplecv.metric.NPmIoU", "simplecv.api.preprocess.comm.Compose", "enumerate", "concurrent.futures.ProcessPoolExecutor.shutdown", "sc.metric.NPmIoU.summary", "tensorboardX.SummaryWriter", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "zip", "tensorboardX.SummaryWriter.close", "torch.device", "torch.utils.data.dataloader.DataLoader", "logging.info", "isaid_eval.SegmSlidingWinInference.patch", "segm_helper.patch.forward", "out.argmax.argmax", "concurrent.futures.ProcessPoolExecutor.submit", "ious[].mean", "list", "tensorboardX.SummaryWriter.add_scalar", "numpy.asarray().reshape", "simplecv.api.preprocess.segm.ToTensor", "simplecv.api.preprocess.comm.THMeanStdNormalize", "simplecv.api.preprocess.comm.CustomOp", "sc.metric.NPmIoU.forward", "out.argmax.numpy", "data.isaid.COLOR_MAP.keys", "len", "numpy.asarray", "x.unsqueeze", "list", "data.isaid.COLOR_MAP.values"], "function", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.patch", "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.farseg.FarSeg.forward", "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.farseg.FarSeg.forward"], ["def", "run", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "model", ",", "global_step", "=", "sc", ".", "infer_tool", ".", "build_and_load_from_file", "(", "args", ".", "config_path", ",", "args", ".", "ckpt_path", ")", "\n", "model", ".", "to", "(", "torch", ".", "device", "(", "'cuda'", ")", ")", "\n", "segm_helper", "=", "SegmSlidingWinInference", "(", ")", "\n", "\n", "ppe", "=", "ProcessPoolExecutor", "(", "max_workers", "=", "4", ")", "\n", "\n", "dataset", "=", "ImageFolderDataset", "(", "image_dir", "=", "args", ".", "image_dir", ",", "mask_dir", "=", "args", ".", "mask_dir", ")", "\n", "\n", "palette", "=", "np", ".", "asarray", "(", "list", "(", "COLOR_MAP", ".", "values", "(", ")", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", ".", "tolist", "(", ")", "\n", "\n", "viz_op", "=", "sc", ".", "viz", ".", "VisualizeSegmm", "(", "args", ".", "vis_dir", ",", "palette", "=", "palette", ")", "\n", "miou_op", "=", "sc", ".", "metric", ".", "NPmIoU", "(", "num_classes", "=", "16", ",", "logdir", "=", "args", ".", "log_dir", ")", "\n", "\n", "image_trans", "=", "comm", ".", "Compose", "(", "[", "\n", "segm", ".", "ToTensor", "(", "True", ")", ",", "\n", "comm", ".", "THMeanStdNormalize", "(", "(", "123.675", ",", "116.28", ",", "103.53", ")", ",", "(", "58.395", ",", "57.12", ",", "57.375", ")", ")", ",", "\n", "comm", ".", "CustomOp", "(", "lambda", "x", ":", "x", ".", "unsqueeze", "(", "0", ")", ")", "\n", "]", ")", "\n", "\n", "for", "idx", ",", "blob", "in", "enumerate", "(", "\n", "DataLoader", "(", "dataset", ",", "1", ",", "shuffle", "=", "False", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "4", ",", "collate_fn", "=", "lambda", "x", ":", "x", ")", ")", ":", "\n", "        ", "image", ",", "mask", ",", "filename", "=", "blob", "[", "0", "]", "\n", "\n", "h", ",", "w", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "logging", ".", "info", "(", "'Progress - [{} / {}] size = ({}, {})'", ".", "format", "(", "idx", "+", "1", ",", "len", "(", "dataset", ")", ",", "h", ",", "w", ")", ")", "\n", "seg_helper", "=", "segm_helper", ".", "patch", "(", "(", "h", ",", "w", ")", ",", "patch_size", "=", "(", "args", ".", "patch_size", ",", "args", ".", "patch_size", ")", ",", "stride", "=", "512", ",", "\n", "transforms", "=", "image_trans", ")", "\n", "\n", "out", "=", "seg_helper", ".", "forward", "(", "model", ",", "image", ",", "size_divisor", "=", "32", ")", "\n", "\n", "out", "=", "out", ".", "argmax", "(", "dim", "=", "1", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "miou_op", ".", "forward", "(", "mask", ",", "out", ")", "\n", "", "ppe", ".", "submit", "(", "viz_op", ",", "out", ".", "numpy", "(", ")", ",", "filename", ")", "\n", "\n", "", "ppe", ".", "shutdown", "(", ")", "\n", "ious", ",", "miou", "=", "miou_op", ".", "summary", "(", ")", "\n", "\n", "# tensorboard", "\n", "sw", "=", "SummaryWriter", "(", "logdir", "=", "args", ".", "log_dir", ")", "\n", "\n", "sw", ".", "add_scalar", "(", "'eval-miou/miou'", ",", "miou", ",", "global_step", "=", "global_step", ")", "\n", "sw", ".", "add_scalar", "(", "'eval-miou/miou-fg'", ",", "ious", "[", "1", ":", "]", ".", "mean", "(", ")", ",", "global_step", "=", "global_step", ")", "\n", "for", "name", ",", "iou", "in", "zip", "(", "list", "(", "COLOR_MAP", ".", "keys", "(", ")", ")", ",", "ious", ")", ":", "\n", "        ", "sw", ".", "add_scalar", "(", "'eval-ious/{}'", ".", "format", "(", "name", ")", ",", "iou", ",", "global_step", "=", "global_step", ")", "\n", "\n", "", "sw", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.None.hubconf.farseg_resnet50": [[19, 68], ["dict", "module.farseg.FarSeg", "load_state_dict_from_url", "module.farseg.FarSeg.load_state_dict", "module.farseg.FarSeg.eval", "dict", "k.replace", "model_state_dict.items", "dict", "dict", "dict", "dict"], "function", ["None"], ["def", "farseg_resnet50", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ")", ":", "\n", "    ", "model_cfg", "=", "dict", "(", "\n", "type", "=", "'FarSeg'", ",", "\n", "params", "=", "dict", "(", "\n", "resnet_encoder", "=", "dict", "(", "\n", "resnet_type", "=", "'resnet50'", ",", "\n", "include_conv5", "=", "True", ",", "\n", "batchnorm_trainable", "=", "True", ",", "\n", "pretrained", "=", "False", ",", "\n", "freeze_at", "=", "0", ",", "\n", "# 8, 16 or 32", "\n", "output_stride", "=", "32", ",", "\n", "with_cp", "=", "(", "False", ",", "False", ",", "False", ",", "False", ")", ",", "\n", "stem3_3x3", "=", "False", ",", "\n", ")", ",", "\n", "fpn", "=", "dict", "(", "\n", "in_channels_list", "=", "(", "256", ",", "512", ",", "1024", ",", "2048", ")", ",", "\n", "out_channels", "=", "256", ",", "\n", "conv_block", "=", "fpn", ".", "default_conv_block", ",", "\n", "top_blocks", "=", "None", ",", "\n", ")", ",", "\n", "scene_relation", "=", "dict", "(", "\n", "in_channels", "=", "2048", ",", "\n", "channel_list", "=", "(", "256", ",", "256", ",", "256", ",", "256", ")", ",", "\n", "out_channels", "=", "256", ",", "\n", "scale_aware_proj", "=", "True", ",", "\n", ")", ",", "\n", "decoder", "=", "dict", "(", "\n", "in_channels", "=", "256", ",", "\n", "out_channels", "=", "128", ",", "\n", "in_feat_output_strides", "=", "(", "4", ",", "8", ",", "16", ",", "32", ")", ",", "\n", "out_feat_output_stride", "=", "4", ",", "\n", "norm_fn", "=", "nn", ".", "BatchNorm2d", ",", "\n", "num_groups_gn", "=", "None", "\n", ")", ",", "\n", "num_classes", "=", "16", ",", "\n", ")", "\n", ")", "\n", "\n", "model", "=", "FarSeg", "(", "model_cfg", "[", "'params'", "]", ")", "\n", "if", "pretrained", ":", "\n", "        ", "state_dict", "=", "load_state_dict_from_url", "(", "model_urls", "[", "'farseg_resnet50_isaid'", "]", ",", "progress", "=", "progress", ")", "\n", "model_state_dict", "=", "state_dict", "[", "checkpoint", ".", "CheckPoint", ".", "MODEL", "]", "\n", "model_state_dict", "=", "{", "k", ".", "replace", "(", "'module.'", ",", "''", ")", ":", "v", "for", "k", ",", "v", "in", "model_state_dict", ".", "items", "(", ")", "}", "\n", "model", ".", "load_state_dict", "(", "model_state_dict", ")", "\n", "model", ".", "eval", "(", ")", "\n", "return", "model", "\n", "", "else", ":", "\n", "        ", "return", "model", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.farseg.SceneRelation.__init__": [[17, 59], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "torch.Sequential", "farseg.SceneRelation.content_encoders.append", "farseg.SceneRelation.feature_reencoders.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "range", "len"], "methods", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "channel_list", ",", "\n", "out_channels", ",", "\n", "scale_aware_proj", "=", "True", ")", ":", "\n", "        ", "super", "(", "SceneRelation", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale_aware_proj", "=", "scale_aware_proj", "\n", "\n", "if", "scale_aware_proj", ":", "\n", "            ", "self", ".", "scene_encoder", "=", "nn", ".", "ModuleList", "(", "\n", "[", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "out_channels", ",", "out_channels", ",", "1", ")", ",", "\n", ")", "for", "_", "in", "range", "(", "len", "(", "channel_list", ")", ")", "]", "\n", ")", "\n", "", "else", ":", "\n", "# 2mlp", "\n", "            ", "self", ".", "scene_encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "out_channels", ",", "out_channels", ",", "1", ")", ",", "\n", ")", "\n", "", "self", ".", "content_encoders", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "feature_reencoders", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "c", "in", "channel_list", ":", "\n", "            ", "self", ".", "content_encoders", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "c", ",", "out_channels", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n", ")", "\n", "self", ".", "feature_reencoders", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "c", ",", "out_channels", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n", ")", "\n", "\n", "", "self", ".", "normalizer", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.farseg.SceneRelation.forward": [[60, 75], ["c_en", "farseg.SceneRelation.scene_encoder", "op", "zip", "op", "farseg.SceneRelation.normalizer", "farseg.SceneRelation.normalizer", "zip", "zip", "zip"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "scene_feature", ",", "features", ":", "list", ")", ":", "\n", "        ", "content_feats", "=", "[", "c_en", "(", "p_feat", ")", "for", "c_en", ",", "p_feat", "in", "zip", "(", "self", ".", "content_encoders", ",", "features", ")", "]", "\n", "if", "self", ".", "scale_aware_proj", ":", "\n", "            ", "scene_feats", "=", "[", "op", "(", "scene_feature", ")", "for", "op", "in", "self", ".", "scene_encoder", "]", "\n", "relations", "=", "[", "self", ".", "normalizer", "(", "(", "sf", "*", "cf", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ")", "for", "sf", ",", "cf", "in", "\n", "zip", "(", "scene_feats", ",", "content_feats", ")", "]", "\n", "", "else", ":", "\n", "            ", "scene_feat", "=", "self", ".", "scene_encoder", "(", "scene_feature", ")", "\n", "relations", "=", "[", "self", ".", "normalizer", "(", "(", "scene_feat", "*", "cf", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ")", "for", "cf", "in", "content_feats", "]", "\n", "\n", "", "p_feats", "=", "[", "op", "(", "p_feat", ")", "for", "op", ",", "p_feat", "in", "zip", "(", "self", ".", "feature_reencoders", ",", "features", ")", "]", "\n", "\n", "refined_feats", "=", "[", "r", "*", "p", "for", "r", ",", "p", "in", "zip", "(", "relations", ",", "p_feats", ")", "]", "\n", "\n", "return", "refined_feats", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.farseg.AssymetricDecoder.__init__": [[78, 108], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "dict", "farseg.AssymetricDecoder.blocks.append", "dict", "ValueError", "int", "int", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ValueError", "math.log2", "math.log2", "type", "int", "int", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "range", "norm_fn", "torch.Identity", "torch.Identity", "torch.Identity", "torch.UpsamplingBilinear2d", "torch.UpsamplingBilinear2d", "torch.UpsamplingBilinear2d", "torch.Identity", "torch.Identity", "torch.Identity"], "methods", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "in_feat_output_strides", "=", "(", "4", ",", "8", ",", "16", ",", "32", ")", ",", "\n", "out_feat_output_stride", "=", "4", ",", "\n", "norm_fn", "=", "nn", ".", "BatchNorm2d", ",", "\n", "num_groups_gn", "=", "None", ")", ":", "\n", "        ", "super", "(", "AssymetricDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_fn", "==", "nn", ".", "BatchNorm2d", ":", "\n", "            ", "norm_fn_args", "=", "dict", "(", "num_features", "=", "out_channels", ")", "\n", "", "elif", "norm_fn", "==", "nn", ".", "GroupNorm", ":", "\n", "            ", "if", "num_groups_gn", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "'When norm_fn is nn.GroupNorm, num_groups_gn is needed.'", ")", "\n", "", "norm_fn_args", "=", "dict", "(", "num_groups", "=", "num_groups_gn", ",", "num_channels", "=", "out_channels", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Type of {} is not support.'", ".", "format", "(", "type", "(", "norm_fn", ")", ")", ")", "\n", "", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "in_feat_os", "in", "in_feat_output_strides", ":", "\n", "            ", "num_upsample", "=", "int", "(", "math", ".", "log2", "(", "int", "(", "in_feat_os", ")", ")", ")", "-", "int", "(", "math", ".", "log2", "(", "int", "(", "out_feat_output_stride", ")", ")", ")", "\n", "\n", "num_layers", "=", "num_upsample", "if", "num_upsample", "!=", "0", "else", "1", "\n", "\n", "self", ".", "blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "[", "\n", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "if", "idx", "==", "0", "else", "out_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "norm_fn", "(", "**", "norm_fn_args", ")", "if", "norm_fn", "is", "not", "None", "else", "nn", ".", "Identity", "(", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "UpsamplingBilinear2d", "(", "scale_factor", "=", "2", ")", "if", "num_upsample", "!=", "0", "else", "nn", ".", "Identity", "(", ")", ",", "\n", ")", "\n", "for", "idx", "in", "range", "(", "num_layers", ")", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.farseg.AssymetricDecoder.forward": [[109, 117], ["enumerate", "block", "inner_feat_list.append", "sum"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "feat_list", ":", "list", ")", ":", "\n", "        ", "inner_feat_list", "=", "[", "]", "\n", "for", "idx", ",", "block", "in", "enumerate", "(", "self", ".", "blocks", ")", ":", "\n", "            ", "decoder_feat", "=", "block", "(", "feat_list", "[", "idx", "]", ")", "\n", "inner_feat_list", ".", "append", "(", "decoder_feat", ")", "\n", "\n", "", "out_feat", "=", "sum", "(", "inner_feat_list", ")", "/", "4.", "\n", "return", "out_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.farseg.FarSeg.__init__": [[121, 144], ["simplecv.interface.CVModule.__init__", "farseg.FarSeg.register_buffer", "simplecv.module.resnet.ResNetEncoder", "simplecv.module.fpn.FPN", "farseg.AssymetricDecoder", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.UpsamplingBilinear2d", "torch.UpsamplingBilinear2d", "torch.UpsamplingBilinear2d", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "print", "simplecv.GlobalAvgPool2D", "farseg.SceneRelation", "print", "print", "print"], "methods", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "FarSeg", ",", "self", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "register_buffer", "(", "'buffer_step'", ",", "torch", ".", "zeros", "(", "(", ")", ",", "dtype", "=", "torch", ".", "float32", ")", ")", "\n", "\n", "self", ".", "en", "=", "resnet", ".", "ResNetEncoder", "(", "self", ".", "config", ".", "resnet_encoder", ")", "\n", "self", ".", "fpn", "=", "fpn", ".", "FPN", "(", "**", "self", ".", "config", ".", "fpn", ")", "\n", "self", ".", "decoder", "=", "AssymetricDecoder", "(", "**", "self", ".", "config", ".", "decoder", ")", "\n", "self", ".", "cls_pred_conv", "=", "nn", ".", "Conv2d", "(", "self", ".", "config", ".", "decoder", ".", "out_channels", ",", "self", ".", "config", ".", "num_classes", ",", "1", ")", "\n", "self", ".", "upsample4x_op", "=", "nn", ".", "UpsamplingBilinear2d", "(", "scale_factor", "=", "4", ")", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "torch", ".", "device", "(", "'cpu'", ")", "\n", "if", "'scene_relation'", "in", "self", ".", "config", ":", "\n", "            ", "print", "(", "'scene_relation: on'", ")", "\n", "self", ".", "gap", "=", "scm", ".", "GlobalAvgPool2D", "(", ")", "\n", "self", ".", "sr", "=", "SceneRelation", "(", "**", "self", ".", "config", ".", "scene_relation", ")", "\n", "\n", "", "if", "'softmax_focalloss'", "in", "self", ".", "config", ":", "\n", "            ", "print", "(", "'loss type: softmax_focalloss'", ")", "\n", "\n", "", "if", "'cosineannealing_softmax_focalloss'", "in", "self", ".", "config", ":", "\n", "            ", "print", "(", "'loss type: cosineannealing_softmax_focalloss'", ")", "\n", "\n", "", "if", "'annealing_softmax_focalloss'", "in", "self", ".", "config", ":", "\n", "            ", "print", "(", "'loss type: {}'", ".", "format", "(", "self", ".", "config", ".", "annealing_softmax_focalloss", ".", "annealing_type", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.farseg.FarSeg.forward": [[145, 171], ["farseg.FarSeg.en", "farseg.FarSeg.fpn", "farseg.FarSeg.decoder", "farseg.FarSeg.cls_pred_conv", "farseg.FarSeg.upsample4x_op", "farseg.FarSeg.softmax", "farseg.FarSeg.gap", "farseg.FarSeg.sr", "dict", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "farseg.FarSeg.cls_loss", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_allocated", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.farseg.FarSeg.cls_loss"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "feat_list", "=", "self", ".", "en", "(", "x", ")", "\n", "fpn_feat_list", "=", "self", ".", "fpn", "(", "feat_list", ")", "\n", "if", "'scene_relation'", "in", "self", ".", "config", ":", "\n", "            ", "c5", "=", "feat_list", "[", "-", "1", "]", "\n", "c6", "=", "self", ".", "gap", "(", "c5", ")", "\n", "refined_fpn_feat_list", "=", "self", ".", "sr", "(", "c6", ",", "fpn_feat_list", ")", "\n", "", "else", ":", "\n", "            ", "refined_fpn_feat_list", "=", "fpn_feat_list", "\n", "\n", "", "final_feat", "=", "self", ".", "decoder", "(", "refined_fpn_feat_list", ")", "\n", "cls_pred", "=", "self", ".", "cls_pred_conv", "(", "final_feat", ")", "\n", "cls_pred", "=", "self", ".", "upsample4x_op", "(", "cls_pred", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "cls_true", "=", "y", "[", "'cls'", "]", "\n", "loss_dict", "=", "dict", "(", ")", "\n", "self", ".", "buffer_step", "+=", "1", "\n", "cls_loss_v", "=", "self", ".", "config", ".", "loss", ".", "cls_weight", "*", "self", ".", "cls_loss", "(", "cls_pred", ",", "cls_true", ")", "\n", "loss_dict", "[", "'cls_loss'", "]", "=", "cls_loss_v", "\n", "\n", "mem", "=", "torch", ".", "cuda", ".", "max_memory_allocated", "(", ")", "//", "1024", "//", "1024", "\n", "loss_dict", "[", "'mem'", "]", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "mem", "]", ",", "dtype", "=", "np", ".", "float32", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "return", "loss_dict", "\n", "\n", "", "return", "cls_pred", ".", "softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.farseg.FarSeg.cls_loss": [[172, 188], ["torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy", "module.loss.softmax_focalloss", "y_true.long", "y_true.long", "dict", "module.loss.annealing_softmax_focalloss", "y_true.long", "farseg.FarSeg.buffer_step.item"], "methods", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.loss.softmax_focalloss", "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.loss.annealing_softmax_focalloss"], ["", "def", "cls_loss", "(", "self", ",", "y_pred", ",", "y_true", ")", ":", "\n", "        ", "if", "'softmax_focalloss'", "in", "self", ".", "config", ":", "\n", "            ", "return", "softmax_focalloss", "(", "y_pred", ",", "y_true", ".", "long", "(", ")", ",", "ignore_index", "=", "self", ".", "config", ".", "loss", ".", "ignore_index", ",", "\n", "gamma", "=", "self", ".", "config", ".", "softmax_focalloss", ".", "gamma", ",", "\n", "normalize", "=", "self", ".", "config", ".", "softmax_focalloss", ".", "normalize", ")", "\n", "", "elif", "'annealing_softmax_focalloss'", "in", "self", ".", "config", ":", "\n", "            ", "func_dict", "=", "dict", "(", "cosine", "=", "cosine_annealing", ",", "\n", "poly", "=", "poly_annealing", ",", "\n", "linear", "=", "linear_annealing", ")", "\n", "return", "annealing_softmax_focalloss", "(", "y_pred", ",", "y_true", ".", "long", "(", ")", ",", "\n", "self", ".", "buffer_step", ".", "item", "(", ")", ",", "\n", "self", ".", "config", ".", "annealing_softmax_focalloss", ".", "max_step", ",", "\n", "self", ".", "config", ".", "loss", ".", "ignore_index", ",", "\n", "self", ".", "config", ".", "annealing_softmax_focalloss", ".", "gamma", ",", "\n", "func_dict", "[", "self", ".", "config", ".", "annealing_softmax_focalloss", ".", "annealing_type", "]", ")", "\n", "", "return", "F", ".", "cross_entropy", "(", "y_pred", ",", "y_true", ".", "long", "(", ")", ",", "ignore_index", "=", "self", ".", "config", ".", "loss", ".", "ignore_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.farseg.FarSeg.set_defalut_config": [[189, 221], ["farseg.FarSeg.config.update", "dict", "dict", "dict", "dict", "dict"], "methods", ["None"], ["", "def", "set_defalut_config", "(", "self", ")", ":", "\n", "        ", "self", ".", "config", ".", "update", "(", "dict", "(", "\n", "resnet_encoder", "=", "dict", "(", "\n", "resnet_type", "=", "'resnet50'", ",", "\n", "include_conv5", "=", "True", ",", "\n", "batchnorm_trainable", "=", "True", ",", "\n", "pretrained", "=", "False", ",", "\n", "freeze_at", "=", "0", ",", "\n", "# 8, 16 or 32", "\n", "output_stride", "=", "32", ",", "\n", "with_cp", "=", "(", "False", ",", "False", ",", "False", ",", "False", ")", ",", "\n", "stem3_3x3", "=", "False", ",", "\n", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "\n", ")", ",", "\n", "fpn", "=", "dict", "(", "\n", "in_channels_list", "=", "(", "256", ",", "512", ",", "1024", ",", "2048", ")", ",", "\n", "out_channels", "=", "256", ",", "\n", "conv_block", "=", "fpn", ".", "default_conv_block", ",", "\n", "top_blocks", "=", "None", ",", "\n", ")", ",", "\n", "decoder", "=", "dict", "(", "\n", "in_channels", "=", "256", ",", "\n", "out_channels", "=", "128", ",", "\n", "in_feat_output_strides", "=", "(", "4", ",", "8", ",", "16", ",", "32", ")", ",", "\n", "out_feat_output_stride", "=", "4", ",", "\n", "norm_fn", "=", "nn", ".", "BatchNorm2d", ",", "\n", "num_groups_gn", "=", "None", "\n", ")", ",", "\n", "num_classes", "=", "16", ",", "\n", "loss", "=", "dict", "(", "\n", "cls_weight", "=", "1.0", ",", "\n", "ignore_index", "=", "255", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.loss.softmax_focalloss": [[6, 30], ["torch.cross_entropy", "torch.no_grad", "torch.no_grad", "y_pred.softmax", "torch.where", "torch.where", "torch.gather().squeeze_", "torch.gather().squeeze_", "y_true.eq", "torch.zeros_like", "torch.zeros_like", "valid_mask.sum", "y_pred.softmax.size", "torch.gather", "torch.gather", "F.cross_entropy.sum", "torch.where.unsqueeze"], "function", ["None"], ["def", "softmax_focalloss", "(", "y_pred", ",", "y_true", ",", "ignore_index", "=", "255", ",", "gamma", "=", "2.0", ",", "normalize", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n\n    Args:\n        y_pred: [N, #class, H, W]\n        y_true: [N, H, W] from 0 to #class\n        gamma: scalar\n\n    Returns:\n\n    \"\"\"", "\n", "losses", "=", "F", ".", "cross_entropy", "(", "y_pred", ",", "y_true", ",", "ignore_index", "=", "ignore_index", ",", "reduction", "=", "'none'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "p", "=", "y_pred", ".", "softmax", "(", "dim", "=", "1", ")", "\n", "modulating_factor", "=", "(", "1", "-", "p", ")", ".", "pow", "(", "gamma", ")", "\n", "valid_mask", "=", "~", "y_true", ".", "eq", "(", "ignore_index", ")", "\n", "masked_y_true", "=", "torch", ".", "where", "(", "valid_mask", ",", "y_true", ",", "torch", ".", "zeros_like", "(", "y_true", ")", ")", "\n", "modulating_factor", "=", "torch", ".", "gather", "(", "modulating_factor", ",", "dim", "=", "1", ",", "index", "=", "masked_y_true", ".", "unsqueeze", "(", "dim", "=", "1", ")", ")", ".", "squeeze_", "(", "dim", "=", "1", ")", "\n", "scale", "=", "1.", "\n", "if", "normalize", ":", "\n", "            ", "scale", "=", "losses", ".", "sum", "(", ")", "/", "(", "losses", "*", "modulating_factor", ")", ".", "sum", "(", ")", "\n", "", "", "losses", "=", "scale", "*", "(", "losses", "*", "modulating_factor", ")", ".", "sum", "(", ")", "/", "(", "valid_mask", ".", "sum", "(", ")", "+", "p", ".", "size", "(", "0", ")", ")", "\n", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.loss.cosine_annealing": [[32, 34], ["math.cos"], "function", ["None"], ["", "def", "cosine_annealing", "(", "lower_bound", ",", "upper_bound", ",", "_t", ",", "_t_max", ")", ":", "\n", "    ", "return", "upper_bound", "+", "0.5", "*", "(", "lower_bound", "-", "upper_bound", ")", "*", "(", "math", ".", "cos", "(", "math", ".", "pi", "*", "_t", "/", "_t_max", ")", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.loss.poly_annealing": [[36, 39], ["None"], "function", ["None"], ["", "def", "poly_annealing", "(", "lower_bound", ",", "upper_bound", ",", "_t", ",", "_t_max", ")", ":", "\n", "    ", "factor", "=", "(", "1", "-", "_t", "/", "_t_max", ")", "**", "0.9", "\n", "return", "upper_bound", "+", "factor", "*", "(", "lower_bound", "-", "upper_bound", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.loss.linear_annealing": [[41, 44], ["None"], "function", ["None"], ["", "def", "linear_annealing", "(", "lower_bound", ",", "upper_bound", ",", "_t", ",", "_t_max", ")", ":", "\n", "    ", "factor", "=", "1", "-", "_t", "/", "_t_max", "\n", "return", "upper_bound", "+", "factor", "*", "(", "lower_bound", "-", "upper_bound", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.module.loss.annealing_softmax_focalloss": [[46, 63], ["torch.cross_entropy", "torch.no_grad", "torch.no_grad", "y_pred.softmax", "torch.where", "torch.where", "torch.gather().squeeze_", "torch.gather().squeeze_", "annealing_function", "y_true.eq", "torch.zeros_like", "torch.zeros_like", "F.cross_entropy.sum", "valid_mask.sum", "y_pred.softmax.size", "torch.gather", "torch.gather", "torch.where.unsqueeze"], "function", ["None"], ["", "def", "annealing_softmax_focalloss", "(", "y_pred", ",", "y_true", ",", "t", ",", "t_max", ",", "ignore_index", "=", "255", ",", "gamma", "=", "2.0", ",", "\n", "annealing_function", "=", "cosine_annealing", ")", ":", "\n", "    ", "losses", "=", "F", ".", "cross_entropy", "(", "y_pred", ",", "y_true", ",", "ignore_index", "=", "ignore_index", ",", "reduction", "=", "'none'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "p", "=", "y_pred", ".", "softmax", "(", "dim", "=", "1", ")", "\n", "modulating_factor", "=", "(", "1", "-", "p", ")", ".", "pow", "(", "gamma", ")", "\n", "valid_mask", "=", "~", "y_true", ".", "eq", "(", "ignore_index", ")", "\n", "masked_y_true", "=", "torch", ".", "where", "(", "valid_mask", ",", "y_true", ",", "torch", ".", "zeros_like", "(", "y_true", ")", ")", "\n", "modulating_factor", "=", "torch", ".", "gather", "(", "modulating_factor", ",", "dim", "=", "1", ",", "index", "=", "masked_y_true", ".", "unsqueeze", "(", "dim", "=", "1", ")", ")", ".", "squeeze_", "(", "dim", "=", "1", ")", "\n", "normalizer", "=", "losses", ".", "sum", "(", ")", "/", "(", "losses", "*", "modulating_factor", ")", ".", "sum", "(", ")", "\n", "scales", "=", "modulating_factor", "*", "normalizer", "\n", "", "if", "t", ">", "t_max", ":", "\n", "        ", "scale", "=", "scales", "\n", "", "else", ":", "\n", "        ", "scale", "=", "annealing_function", "(", "1", ",", "scales", ",", "t", ",", "t_max", ")", "\n", "", "losses", "=", "(", "losses", "*", "scale", ")", ".", "sum", "(", ")", "/", "(", "valid_mask", ".", "sum", "(", ")", "+", "p", ".", "size", "(", "0", ")", ")", "\n", "return", "losses", "\n", "", ""]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.isaid.RemoveColorMap.__init__": [[47, 53], ["object.__init__", "numpy.array().reshape", "numpy.asarray", "numpy.matmul().squeeze", "numpy.arange", "list", "numpy.array", "color_map.values", "numpy.matmul"], "methods", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "color_map", "=", "COLOR_MAP", ",", "mapping", "=", "(", "1", ",", "2", ",", "3", ")", ")", ":", "\n", "        ", "super", "(", "RemoveColorMap", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mapping_mat", "=", "np", ".", "array", "(", "mapping", ")", ".", "reshape", "(", "(", "3", ",", "1", ")", ")", "\n", "features", "=", "np", ".", "asarray", "(", "list", "(", "color_map", ".", "values", "(", ")", ")", ")", "\n", "self", ".", "keys", "=", "np", ".", "matmul", "(", "features", ",", "self", ".", "mapping_mat", ")", ".", "squeeze", "(", ")", "\n", "self", ".", "labels", "=", "np", ".", "arange", "(", "features", ".", "shape", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.isaid.RemoveColorMap.__call__": [[54, 66], ["isinstance", "numpy.matmul().squeeze", "numpy.zeros_like", "zip", "numpy.array", "numpy.where", "PIL.Image.fromarray", "numpy.matmul", "numpy.zeros_like", "numpy.zeros_like.astype", "numpy.ones_like"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "image", ",", "mask", ")", ":", "\n", "        ", "if", "isinstance", "(", "mask", ",", "Image", ".", "Image", ")", ":", "\n", "            ", "mask", "=", "np", ".", "array", "(", "mask", ",", "copy", "=", "False", ")", "\n", "\n", "", "q", "=", "np", ".", "matmul", "(", "mask", ",", "self", ".", "mapping_mat", ")", ".", "squeeze", "(", ")", "\n", "\n", "# loop for each class", "\n", "out", "=", "np", ".", "zeros_like", "(", "q", ")", "\n", "for", "label", ",", "k", "in", "zip", "(", "self", ".", "labels", ",", "self", ".", "keys", ")", ":", "\n", "            ", "out", "+=", "np", ".", "where", "(", "q", "==", "k", ",", "label", "*", "np", ".", "ones_like", "(", "q", ")", ",", "np", ".", "zeros_like", "(", "q", ")", ")", "\n", "\n", "", "return", "image", ",", "Image", ".", "fromarray", "(", "out", ".", "astype", "(", "np", ".", "uint8", ",", "copy", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.isaid.ISAIDSegmmDataset.__init__": [[69, 75], ["data.patch_base.PatchBasedDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "image_dir", ",", "\n", "mask_dir", ",", "\n", "patch_config", "=", "DEFAULT_PATCH_CONFIG", ",", "\n", "transforms", "=", "None", ")", ":", "\n", "        ", "super", "(", "ISAIDSegmmDataset", ",", "self", ")", ".", "__init__", "(", "image_dir", ",", "mask_dir", ",", "patch_config", ",", "transforms", "=", "transforms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.isaid.ISAIDSegmmDataset.generate_path_pair": [[76, 84], ["glob.glob", "zip", "os.path.join", "os.path.join", "os.path.basename().replace", "os.path.basename"], "methods", ["None"], ["", "def", "generate_path_pair", "(", "self", ")", ":", "\n", "        ", "image_path_list", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "image_dir", ",", "'*.png'", ")", ")", "\n", "\n", "mask_path_list", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "mask_dir", ",", "os", ".", "path", ".", "basename", "(", "imfp", ")", ".", "replace", "(", "'.png'", ",", "\n", "'_instance_color_RGB.png'", ")", ")", "for", "\n", "imfp", "in", "image_path_list", "]", "\n", "\n", "return", "zip", "(", "image_path_list", ",", "mask_path_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.isaid.ISAIDSegmmDataset.show_image_mask": [[85, 93], ["img_tensor.numpy", "blob[].numpy", "simplecv.util.viz.plot_image", "numpy.where", "blob[].numpy.sum"], "methods", ["None"], ["", "def", "show_image_mask", "(", "self", ",", "idx", ",", "mask_on", "=", "True", ",", "ax", "=", "None", ")", ":", "\n", "        ", "img_tensor", ",", "blob", "=", "self", "[", "idx", "]", "\n", "img", "=", "img_tensor", ".", "numpy", "(", ")", "\n", "mask", "=", "blob", "[", "'cls'", "]", ".", "numpy", "(", ")", "\n", "if", "mask_on", ":", "\n", "            ", "img", "=", "np", ".", "where", "(", "mask", ".", "sum", "(", ")", "==", "0", ",", "img", ",", "img", "*", "0.5", "+", "(", "1", "-", "0.5", ")", "*", "mask", ")", "\n", "\n", "", "viz", ".", "plot_image", "(", "img", ",", "ax", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.isaid.ISAIDSegmmDataset.__getitem__": [[94, 103], ["data.patch_base.PatchBasedDataset.__getitem__", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.one_hot().sum", "torch.one_hot().sum", "torch.one_hot", "torch.one_hot", "fg_cls_label.long", "len"], "methods", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "img_tensor", ",", "y", "=", "super", "(", "ISAIDSegmmDataset", ",", "self", ")", ".", "__getitem__", "(", "idx", ")", "\n", "mask_tensor", "=", "y", "[", "'cls'", "]", "\n", "# rm background", "\n", "multi_cls_label", "=", "torch", ".", "unique", "(", "mask_tensor", ")", "\n", "# start from 0", "\n", "fg_cls_label", "=", "multi_cls_label", "[", "(", "multi_cls_label", ">", "0", ")", "&", "(", "multi_cls_label", "!=", "255", ")", "]", "-", "1", "\n", "y", "[", "'fg_cls_label'", "]", "=", "F", ".", "one_hot", "(", "fg_cls_label", ".", "long", "(", ")", ",", "num_classes", "=", "len", "(", "COLOR_MAP", ")", "-", "1", ")", ".", "sum", "(", "dim", "=", "0", ")", "\n", "return", "img_tensor", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.isaid.ISAIDSegmmDataLoader.__init__": [[107, 125], ["simplecv.core.config.AttrDict", "isaid.ISAIDSegmmDataLoader.set_defalut", "isaid.ISAIDSegmmDataLoader.config.update", "isaid.ISAIDSegmmDataset", "torch.utils.data.dataloader.DataLoader.__init__", "simplecv.data.distributed.StepDistributedSampler", "torch.utils.data.SequentialSampler", "torch.utils.data.SequentialSampler"], "methods", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.isaid.ISAIDSegmmDataLoader.set_defalut", "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "self", ".", "config", "=", "AttrDict", "(", ")", "\n", "self", ".", "set_defalut", "(", ")", "\n", "self", ".", "config", ".", "update", "(", "config", ")", "\n", "\n", "dataset", "=", "ISAIDSegmmDataset", "(", "self", ".", "config", ".", "image_dir", ",", "\n", "self", ".", "config", ".", "mask_dir", ",", "\n", "self", ".", "config", ".", "patch_config", ",", "\n", "self", ".", "config", ".", "transforms", ")", "\n", "\n", "sampler", "=", "distributed", ".", "StepDistributedSampler", "(", "dataset", ")", "if", "self", ".", "config", ".", "training", "else", "SequentialSampler", "(", "\n", "dataset", ")", "\n", "\n", "super", "(", "ISAIDSegmmDataLoader", ",", "self", ")", ".", "__init__", "(", "dataset", ",", "\n", "self", ".", "config", ".", "batch_size", ",", "\n", "sampler", "=", "sampler", ",", "\n", "num_workers", "=", "self", ".", "config", ".", "num_workers", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.isaid.ISAIDSegmmDataLoader.set_defalut": [[126, 146], ["isaid.ISAIDSegmmDataLoader.config.update", "dict", "dict", "isaid.RemoveColorMap", "simplecv.api.preprocess.segm.RandomHorizontalFlip", "simplecv.api.preprocess.segm.RandomVerticalFlip", "simplecv.api.preprocess.segm.RandomRotate90K", "simplecv.api.preprocess.segm.FixedPad", "simplecv.api.preprocess.segm.ToTensor", "simplecv.api.preprocess.comm.THMeanStdNormalize"], "methods", ["None"], ["", "def", "set_defalut", "(", "self", ")", ":", "\n", "        ", "self", ".", "config", ".", "update", "(", "dict", "(", "\n", "image_dir", "=", "''", ",", "\n", "mask_dir", "=", "''", ",", "\n", "patch_config", "=", "dict", "(", "\n", "patch_size", "=", "896", ",", "\n", "stride", "=", "512", ",", "\n", ")", ",", "\n", "transforms", "=", "[", "\n", "RemoveColorMap", "(", ")", ",", "\n", "segm", ".", "RandomHorizontalFlip", "(", "0.5", ")", ",", "\n", "segm", ".", "RandomVerticalFlip", "(", "0.5", ")", ",", "\n", "segm", ".", "RandomRotate90K", "(", "(", "0", ",", "1", ",", "2", ",", "3", ")", ")", ",", "\n", "segm", ".", "FixedPad", "(", "(", "896", ",", "896", ")", ",", "255", ")", ",", "\n", "segm", ".", "ToTensor", "(", "True", ")", ",", "\n", "comm", ".", "THMeanStdNormalize", "(", "(", "123.675", ",", "116.28", ",", "103.53", ")", ",", "(", "58.395", ",", "57.12", ",", "57.375", ")", ")", "\n", "]", ",", "\n", "batch_size", "=", "1", ",", "\n", "num_workers", "=", "0", ",", "\n", "training", "=", "True", "\n", ")", ")", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.isaid.ImageFolderDataset.__init__": [[150, 154], ["glob.glob", "isaid.RemoveColorMap", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "image_dir", ",", "mask_dir", "=", "None", ")", ":", "\n", "        ", "self", ".", "fp_list", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "image_dir", ",", "'*.png'", ")", ")", "\n", "self", ".", "mask_dir", "=", "mask_dir", "\n", "self", ".", "rm_color", "=", "RemoveColorMap", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.isaid.ImageFolderDataset.__getitem__": [[155, 168], ["skimage.io.imread", "os.path.join", "skimage.io.imread", "isaid.ImageFolderDataset.rm_color", "numpy.array", "len", "numpy.stack", "os.path.basename", "os.path.basename().replace", "os.path.basename"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "image_np", "=", "imread", "(", "self", ".", "fp_list", "[", "idx", "]", ")", "\n", "if", "self", ".", "mask_dir", "is", "not", "None", ":", "\n", "            ", "mask_fp", "=", "os", ".", "path", ".", "join", "(", "self", ".", "mask_dir", ",", "os", ".", "path", ".", "basename", "(", "self", ".", "fp_list", "[", "idx", "]", ")", ".", "replace", "(", "'.png'", ",", "\n", "'_instance_color_RGB.png'", ")", ")", "\n", "mask_np", "=", "imread", "(", "mask_fp", ")", "\n", "_", ",", "mask", "=", "self", ".", "rm_color", "(", "None", ",", "mask_np", ")", "\n", "mask_np", "=", "np", ".", "array", "(", "mask", ",", "copy", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "mask_np", "=", "None", "\n", "", "if", "len", "(", "image_np", ".", "shape", ")", "==", "2", ":", "\n", "            ", "image_np", "=", "np", ".", "stack", "(", "[", "image_np", "]", "*", "3", ",", "axis", "=", "2", ")", "\n", "", "return", "image_np", ",", "mask_np", ",", "os", ".", "path", ".", "basename", "(", "self", ".", "fp_list", "[", "idx", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.isaid.ImageFolderDataset.__len__": [[169, 171], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "fp_list", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.__init__": [[14, 26], ["torch.utils.data.Dataset.__init__", "simplecv.preprocess.comm.Compose", "patch_base.PatchBasedDataset.patch"], "methods", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.__init__", "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.patch"], ["    ", "def", "__init__", "(", "self", ",", "\n", "image_dir", ",", "\n", "mask_dir", ",", "\n", "patch_config", "=", "DEFAULT_PATCH_CONFIG", ",", "\n", "transforms", "=", "None", ")", ":", "\n", "        ", "super", "(", "PatchBasedDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "mask_dir", "=", "mask_dir", "\n", "self", ".", "patch_cfg", "=", "patch_config", "\n", "self", ".", "transforms", "=", "sc", ".", "preprocess", ".", "comm", ".", "Compose", "(", "transforms", ")", "\n", "self", ".", "_data_list", "=", "[", "]", "\n", "self", ".", "patch", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.__getitem__": [[27, 44], ["PIL.Image.open().convert", "img.crop.crop.crop", "PIL.Image.open().convert.crop", "PIL.Image.open().convert", "patch_base.PatchBasedDataset.transforms", "dict", "PIL.Image.open", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "image_path", ",", "mask_path", ",", "win", "=", "self", ".", "_data_list", "[", "idx", "]", "\n", "img", "=", "Image", ".", "open", "(", "image_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "if", "mask_path", "is", "not", "None", ":", "\n", "# train mode", "\n", "            ", "mask", "=", "Image", ".", "open", "(", "mask_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "", "else", ":", "\n", "# test mode", "\n", "            ", "mask", "=", "None", "\n", "\n", "", "img", "=", "img", ".", "crop", "(", "win", ")", "\n", "mask", "=", "mask", ".", "crop", "(", "win", ")", "\n", "\n", "if", "self", ".", "transforms", "is", "not", "None", ":", "\n", "            ", "img", ",", "mask", "=", "self", ".", "transforms", "(", "img", ",", "mask", ")", "\n", "\n", "", "return", "img", ",", "dict", "(", "cls", "=", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.__len__": [[45, 47], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_data_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.generate_path_pair": [[48, 50], ["None"], "methods", ["None"], ["", "def", "generate_path_pair", "(", "self", ")", ":", "\n", "        ", "return", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.patch": [[51, 66], ["patch_base.PatchBasedDataset.patch_cfg.get", "patch_base.PatchBasedDataset.patch_cfg.get", "patch_base.PatchBasedDataset._data_list.clear", "patch_base.PatchBasedDataset.generate_path_pair", "PIL.Image.open", "simplecv.data.preprocess.sliding_window"], "methods", ["home.repos.pwc.inspect_result.Z-Zheng_FarSeg.data.patch_base.PatchBasedDataset.generate_path_pair"], ["", "def", "patch", "(", "self", ",", "patch_config", "=", "None", ")", ":", "\n", "        ", "if", "patch_config", "is", "not", "None", ":", "\n", "            ", "self", ".", "patch_cfg", "=", "patch_config", "\n", "\n", "", "patch_size", "=", "self", ".", "patch_cfg", ".", "get", "(", "'patch_size'", ",", "DEFAULT_PATCH_CONFIG", "[", "'patch_size'", "]", ")", "\n", "stride", "=", "self", ".", "patch_cfg", ".", "get", "(", "'stride'", ",", "DEFAULT_PATCH_CONFIG", "[", "'stride'", "]", ")", "\n", "\n", "self", ".", "_data_list", ".", "clear", "(", ")", "\n", "for", "path_pair", "in", "self", ".", "generate_path_pair", "(", ")", ":", "\n", "            ", "im_path", ",", "mask_path", "=", "path_pair", "\n", "image", "=", "Image", ".", "open", "(", "im_path", ")", "\n", "wins", "=", "sliding_window", "(", "input_size", "=", "(", "image", ".", "height", ",", "image", ".", "width", ")", ",", "kernel_size", "=", "(", "patch_size", ",", "patch_size", ")", ",", "\n", "stride", "=", "stride", ")", "\n", "\n", "self", ".", "_data_list", "+=", "[", "(", "im_path", ",", "mask_path", ",", "win", ")", "for", "win", "in", "wins", "]", "\n", "", "", "", ""]]}