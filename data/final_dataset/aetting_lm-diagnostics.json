{"home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.get_bert_responses.get_model_responses": [[14, 19], ["access_model.get_predictions", "access_model.get_probabilities"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.access_model.get_predictions", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.access_model.get_probabilities"], ["def", "get_model_responses", "(", "inputlist", ",", "tgtlist", ",", "modeliname", ",", "model", ",", "tokenizer", ",", "k", "=", "5", ",", "bert", "=", "True", ")", ":", "\n", "    ", "top_preds", ",", "top_probs", "=", "tp", ".", "get_predictions", "(", "inputlist", ",", "model", ",", "tokenizer", ",", "k", "=", "k", ",", "bert", "=", "bert", ")", "\n", "tgt_probs", "=", "tp", ".", "get_probabilities", "(", "inputlist", ",", "tgtlist", ",", "model", ",", "tokenizer", ",", "bert", "=", "bert", ")", "\n", "\n", "return", "top_preds", ",", "top_probs", ",", "tgt_probs", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_fk": [[17, 59], ["io.open", "line.strip().split", "re.sub().split", "sent2.split", "random.shuffle", "len", "inputlist.append", "inputlist_shuf.append", "inputlist_nw.append", "inputlist_shufnw.append", "tgtlist.append", "line.strip", "line.strip", "re.sub"], "function", ["None"], ["def", "process_fk", "(", "infile", ")", ":", "\n", "    ", "hldict", "=", "{", "}", "\n", "inputlist", "=", "[", "]", "\n", "inputlist_shuf", "=", "[", "]", "\n", "inputlist_nw", "=", "[", "]", "\n", "inputlist_shufnw", "=", "[", "]", "\n", "tgtlist", "=", "[", "]", "\n", "cleancsv", "=", "[", "]", "\n", "with", "open", "(", "infile", ")", "as", "f", ":", "\n", "        ", "i", "=", "0", "\n", "for", "line", "in", "f", ":", "\n", "            ", "if", "len", "(", "line", ".", "strip", "(", "'\\t'", ")", ")", "<", "2", ":", "continue", "\n", "it", ",", "sent1", ",", "sent2", ",", "exp", ",", "wc", ",", "bc", ",", "constraint", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "if", "it", "==", "'item'", ":", "continue", "\n", "sent1l", "=", "re", ".", "sub", "(", "'\\.'", ",", "''", ",", "sent1", ")", ".", "split", "(", ")", "\n", "sent2l", "=", "sent2", ".", "split", "(", ")", "\n", "random", ".", "shuffle", "(", "sent1l", ")", "\n", "sent2l", "=", "sent2l", "[", "-", "2", ":", "]", "\n", "origsent", "=", "' '", ".", "join", "(", "[", "sent1", ",", "sent2", "]", ")", "\n", "shuf", "=", "' '", ".", "join", "(", "sent1l", ")", "+", "'. '", "+", "sent2", "\n", "nw", "=", "sent1", "+", "' '", "+", "' '", ".", "join", "(", "sent2l", ")", "\n", "shufnw", "=", "' '", ".", "join", "(", "sent1l", ")", "+", "'. '", "+", "' '", ".", "join", "(", "sent2l", ")", "\n", "\n", "for", "tgt", ",", "cond", "in", "(", "(", "exp", ",", "'exp'", ")", ",", "(", "wc", ",", "'wc'", ")", ",", "(", "bc", ",", "'bc'", ")", ")", ":", "\n", "                ", "hldict", "[", "i", "]", "=", "{", "}", "\n", "inputlist", ".", "append", "(", "origsent", "+", "' [MASK]'", ")", "\n", "inputlist_shuf", ".", "append", "(", "shuf", "+", "' [MASK]'", ")", "\n", "inputlist_nw", ".", "append", "(", "nw", "+", "' [MASK]'", ")", "\n", "inputlist_shufnw", ".", "append", "(", "shufnw", "+", "' [MASK]'", ")", "\n", "tgtlist", ".", "append", "(", "tgt", ")", "\n", "hldict", "[", "i", "]", "[", "'constraint'", "]", "=", "constraint", "\n", "hldict", "[", "i", "]", "[", "'tgt'", "]", "=", "tgt", "\n", "hldict", "[", "i", "]", "[", "'sent'", "]", "=", "{", "}", "\n", "hldict", "[", "i", "]", "[", "'sent'", "]", "[", "'orig'", "]", "=", "origsent", "\n", "hldict", "[", "i", "]", "[", "'sent'", "]", "[", "'shuf'", "]", "=", "shuf", "\n", "hldict", "[", "i", "]", "[", "'sent'", "]", "[", "'trunc'", "]", "=", "nw", "\n", "hldict", "[", "i", "]", "[", "'sent'", "]", "[", "'shuftrunc'", "]", "=", "shufnw", "\n", "hldict", "[", "i", "]", "[", "'item'", "]", "=", "it", "\n", "hldict", "[", "i", "]", "[", "'exp'", "]", "=", "[", "exp", "]", "\n", "hldict", "[", "i", "]", "[", "'cond'", "]", "=", "cond", "\n", "i", "+=", "1", "\n", "", "", "", "return", "hldict", ",", "inputlist", ",", "inputlist_shuf", ",", "inputlist_nw", ",", "inputlist_shufnw", ",", "tgtlist", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_rr": [[60, 104], ["io.open", "line.strip().split", "item.split", "linesplit[].split", "float", "float", "float", "inputlist.append", "tgtlist.append", "clozelist.append", "linesplit[].strip().split", "re.sub", "re.sub", "line.strip", "len", "linesplit[].strip"], "function", ["None"], ["", "def", "process_rr", "(", "csvfile", ",", "gen_obj", "=", "False", ",", "gen_subj", "=", "False", ")", ":", "\n", "    ", "inputlist", "=", "[", "]", "\n", "tgtlist", "=", "[", "]", "\n", "clozedict", "=", "{", "}", "\n", "clozelist", "=", "[", "]", "\n", "i", "=", "0", "\n", "with", "open", "(", "csvfile", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "linesplit", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "item", "=", "linesplit", "[", "0", "]", "\n", "if", "item", "==", "'item'", "or", "len", "(", "linesplit", ")", "<", "1", ":", "\n", "                ", "continue", "\n", "", "itemnum", ",", "condition", "=", "item", ".", "split", "(", "'-'", ")", "\n", "sent", "=", "linesplit", "[", "1", "]", "\n", "exp", "=", "linesplit", "[", "2", "]", ".", "split", "(", "'|'", ")", "\n", "maxcloze", "=", "float", "(", "linesplit", "[", "3", "]", ")", "\n", "tgt", "=", "linesplit", "[", "4", "]", ".", "strip", "(", ")", ".", "split", "(", ")", "[", "0", "]", "\n", "tgtcloze", "=", "float", "(", "linesplit", "[", "5", "]", ")", "\n", "tgtcloze_strict", "=", "float", "(", "linesplit", "[", "6", "]", ")", "\n", "if", "gen_obj", ":", "\n", "                ", "sent", "=", "re", ".", "sub", "(", "'which .* the'", ",", "'which one the'", ",", "sent", ")", "\n", "", "if", "gen_subj", ":", "\n", "                ", "sent", "=", "re", ".", "sub", "(", "'which (.*) the .* had'", ",", "'which \\g<1> the other had'", ",", "sent", ")", "\n", "", "masked_sent", "=", "sent", "+", "' [MASK]'", "\n", "clozedict", "[", "i", "]", "=", "{", "}", "\n", "if", "masked_sent", "in", "inputlist", ":", "\n", "                ", "for", "item", "in", "clozedict", ":", "\n", "                    ", "if", "clozedict", "[", "item", "]", "[", "'sent'", "]", "==", "masked_sent", ":", "\n", "                        ", "clozedict", "[", "i", "]", "[", "'maxcloze'", "]", "=", "maxcloze", "\n", "break", "\n", "", "", "", "else", ":", "\n", "                ", "clozedict", "[", "i", "]", "[", "'maxcloze'", "]", "=", "maxcloze", "\n", "", "inputlist", ".", "append", "(", "masked_sent", ")", "\n", "tgtlist", ".", "append", "(", "tgt", ")", "\n", "clozedict", "[", "i", "]", "[", "'sent'", "]", "=", "masked_sent", "\n", "clozedict", "[", "i", "]", "[", "'tgt'", "]", "=", "tgt", "\n", "clozedict", "[", "i", "]", "[", "'cond'", "]", "=", "condition", "\n", "clozedict", "[", "i", "]", "[", "'item'", "]", "=", "itemnum", "\n", "clozedict", "[", "i", "]", "[", "'tgtcloze'", "]", "=", "tgtcloze", "\n", "clozedict", "[", "i", "]", "[", "'tgtcloze_strict'", "]", "=", "tgtcloze_strict", "\n", "clozedict", "[", "i", "]", "[", "'exp'", "]", "=", "exp", "\n", "clozelist", ".", "append", "(", "maxcloze", ")", "\n", "i", "+=", "1", "\n", "", "", "return", "clozedict", ",", "inputlist", ",", "tgtlist", ",", "clozelist", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_fischler": [[105, 135], ["io.open", "re.sub", "re.sub", "e.strip", "re.match", "inputlist.append", "tgtlist.append", "line.strip().split", "line.strip"], "function", ["None"], ["", "def", "process_fischler", "(", "infile", ")", ":", "\n", "    ", "nkdict", "=", "{", "}", "\n", "inputlist", "=", "[", "]", "\n", "tgtlist", "=", "[", "]", "\n", "it", "=", "0", "\n", "i", "=", "0", "\n", "csvclean", "=", "[", "]", "\n", "with", "open", "(", "infile", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "it", ",", "affsent", ",", "negsent", ",", "afftgt", ",", "negtgt", "=", "[", "e", ".", "strip", "(", ")", "for", "e", "in", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "]", "\n", "affsent", "=", "re", ".", "sub", "(", "' \\(.+\\)'", ",", "''", ",", "affsent", ")", "\n", "negsent", "=", "re", ".", "sub", "(", "' \\(.+\\)'", ",", "''", ",", "negsent", ")", "\n", "if", "it", "==", "'item'", ":", "continue", "\n", "for", "sent", ",", "tgt", ",", "cond", "in", "[", "(", "affsent", ",", "afftgt", ",", "'TA'", ")", ",", "(", "negsent", ",", "afftgt", ",", "'FN'", ")", ",", "(", "affsent", ",", "negtgt", ",", "'FA'", ")", ",", "(", "negsent", ",", "negtgt", ",", "'TN'", ")", "]", ":", "\n", "                ", "nkdict", "[", "i", "]", "=", "{", "}", "\n", "if", "re", ".", "match", "(", "'[aeiou]'", ",", "tgt", ")", ":", "det", "=", "'an'", "\n", "else", ":", "det", "=", "'a'", "\n", "masked_sent", "=", "' '", ".", "join", "(", "[", "sent", ",", "det", ",", "'[MASK]'", "]", ")", "\n", "nkdict", "[", "i", "]", "[", "'sent'", "]", "=", "masked_sent", "\n", "nkdict", "[", "i", "]", "[", "'tgt'", "]", "=", "tgt", "\n", "nkdict", "[", "i", "]", "[", "'item'", "]", "=", "it", "\n", "nkdict", "[", "i", "]", "[", "'cond'", "]", "=", "cond", "\n", "if", "cond", "in", "(", "'TA'", ",", "'FA'", ")", ":", "\n", "                    ", "nkdict", "[", "i", "]", "[", "'exp'", "]", "=", "[", "afftgt", "]", "\n", "", "else", ":", "\n", "                    ", "nkdict", "[", "i", "]", "[", "'exp'", "]", "=", "[", "negtgt", "]", "\n", "", "inputlist", ".", "append", "(", "masked_sent", ")", "\n", "tgtlist", ".", "append", "(", "tgt", ")", "\n", "i", "+=", "1", "\n", "", "", "", "return", "inputlist", ",", "nkdict", ",", "tgtlist", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_nk": [[136, 162], ["io.open", "e.strip", "inputlist.append", "tgtlist.append", "line.strip().split", "line.strip"], "function", ["None"], ["", "def", "process_nk", "(", "infile", ")", ":", "\n", "    ", "nkdict", "=", "{", "}", "\n", "inputlist", "=", "[", "]", "\n", "tgtlist", "=", "[", "]", "\n", "it", "=", "0", "\n", "i", "=", "0", "\n", "with", "open", "(", "infile", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "it", ",", "affsent", ",", "negsent", ",", "afftgt", ",", "negtgt", ",", "lic", "=", "[", "e", ".", "strip", "(", ")", "for", "e", "in", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "]", "\n", "if", "it", "==", "'item'", ":", "continue", "\n", "for", "sent", ",", "tgt", ",", "cond", "in", "[", "(", "affsent", ",", "afftgt", ",", "'TA'", ")", ",", "(", "negsent", ",", "afftgt", ",", "'FN'", ")", ",", "(", "affsent", ",", "negtgt", ",", "'FA'", ")", ",", "(", "negsent", ",", "negtgt", ",", "'TN'", ")", "]", ":", "\n", "                ", "nkdict", "[", "i", "]", "=", "{", "}", "\n", "masked_sent", "=", "sent", "+", "' [MASK]'", "\n", "nkdict", "[", "i", "]", "[", "'sent'", "]", "=", "masked_sent", "\n", "nkdict", "[", "i", "]", "[", "'tgt'", "]", "=", "tgt", "\n", "nkdict", "[", "i", "]", "[", "'item'", "]", "=", "it", "\n", "nkdict", "[", "i", "]", "[", "'cond'", "]", "=", "cond", "\n", "nkdict", "[", "i", "]", "[", "'licensing'", "]", "=", "lic", "\n", "if", "cond", "in", "(", "'TA'", ",", "'FA'", ")", ":", "\n", "                    ", "nkdict", "[", "i", "]", "[", "'exp'", "]", "=", "[", "afftgt", "]", "\n", "", "else", ":", "\n", "                    ", "nkdict", "[", "i", "]", "[", "'exp'", "]", "=", "[", "negtgt", "]", "\n", "", "inputlist", ".", "append", "(", "masked_sent", ")", "\n", "tgtlist", ".", "append", "(", "tgt", ")", "\n", "i", "+=", "1", "\n", "", "", "", "return", "inputlist", ",", "nkdict", ",", "tgtlist", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.make_conddict": [[163, 185], ["None"], "function", ["None"], ["", "def", "make_conddict", "(", "clozedict", ")", ":", "\n", "    ", "conddict", "=", "{", "}", "\n", "for", "k", "in", "clozedict", ":", "\n", "        ", "it", "=", "clozedict", "[", "k", "]", "[", "'item'", "]", "\n", "co", "=", "clozedict", "[", "k", "]", "[", "'cond'", "]", "\n", "if", "it", "not", "in", "conddict", ":", "\n", "            ", "conddict", "[", "it", "]", "=", "{", "}", "\n", "", "conddict", "[", "it", "]", "[", "co", "]", "=", "{", "}", "\n", "conddict", "[", "it", "]", "[", "co", "]", "[", "'sent'", "]", "=", "clozedict", "[", "k", "]", "[", "'sent'", "]", "\n", "conddict", "[", "it", "]", "[", "co", "]", "[", "'tgt'", "]", "=", "clozedict", "[", "k", "]", "[", "'tgt'", "]", "\n", "if", "'tgtcloze'", "in", "clozedict", "[", "k", "]", ":", "\n", "            ", "conddict", "[", "it", "]", "[", "co", "]", "[", "'tgtcloze'", "]", "=", "clozedict", "[", "k", "]", "[", "'tgtcloze'", "]", "\n", "", "if", "'constraint'", "in", "clozedict", "[", "k", "]", ":", "\n", "            ", "conddict", "[", "it", "]", "[", "co", "]", "[", "'constraint'", "]", "=", "clozedict", "[", "k", "]", "[", "'constraint'", "]", "\n", "", "if", "'licensing'", "in", "clozedict", "[", "k", "]", ":", "\n", "            ", "conddict", "[", "it", "]", "[", "co", "]", "[", "'licensing'", "]", "=", "clozedict", "[", "k", "]", "[", "'licensing'", "]", "\n", "", "if", "'maxcloze'", "in", "clozedict", "[", "k", "]", ":", "\n", "            ", "conddict", "[", "it", "]", "[", "co", "]", "[", "'maxcloze'", "]", "=", "clozedict", "[", "k", "]", "[", "'maxcloze'", "]", "\n", "", "conddict", "[", "it", "]", "[", "co", "]", "[", "'tgtprob'", "]", "=", "clozedict", "[", "k", "]", "[", "'tgtprob'", "]", "\n", "conddict", "[", "it", "]", "[", "co", "]", "[", "'toppreds'", "]", "=", "clozedict", "[", "k", "]", "[", "'toppreds'", "]", "\n", "conddict", "[", "it", "]", "[", "co", "]", "[", "'topprobs'", "]", "=", "clozedict", "[", "k", "]", "[", "'topprobs'", "]", "\n", "", "return", "conddict", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.get_acc": [[187, 193], ["len", "float", "len", "sum"], "function", ["None"], ["", "def", "get_acc", "(", "scorelist", ")", ":", "\n", "    ", "if", "len", "(", "scorelist", ")", "==", "0", ":", "\n", "        ", "acc", "=", "0", "\n", "", "else", ":", "\n", "        ", "acc", "=", "float", "(", "sum", "(", "scorelist", ")", ")", "/", "len", "(", "scorelist", ")", "\n", "", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.test_fk_acc": [[194, 228], ["access_model.get_predictions", "access_model.get_probabilities", "enumerate", "run_diagnostics_bert.make_conddict", "run_diagnostics_bert.sim_fk_N400", "run_diagnostics_bert.get_acc", "used.append", "tot_score.append", "by_constraint_score[].append", "sum", "len", "run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "candidate.strip", "correct.append"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.access_model.get_predictions", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.access_model.get_probabilities", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.make_conddict", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.sim_fk_N400", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc"], ["", "def", "test_fk_acc", "(", "hldict", ",", "inputlist", ",", "tgtlist", ",", "model", ",", "tokenizer", ",", "setting", ",", "fklog", ",", "k", "=", "5", ",", "bert", "=", "True", ")", ":", "\n", "    ", "tok_preds", ",", "top_probs", "=", "tp", ".", "get_predictions", "(", "inputlist", ",", "model", ",", "tokenizer", ",", "k", "=", "k", ",", "bert", "=", "bert", ")", "\n", "tok_probs", "=", "tp", ".", "get_probabilities", "(", "inputlist", ",", "tgtlist", ",", "model", ",", "tokenizer", ",", "bert", "=", "bert", ")", "\n", "tot_score", "=", "[", "]", "\n", "by_constraint_score", "=", "{", "}", "\n", "by_constraint_score", "[", "'H'", "]", "=", "[", "]", "\n", "by_constraint_score", "[", "'L'", "]", "=", "[", "]", "\n", "correct", "=", "[", "]", "\n", "used", "=", "[", "]", "\n", "for", "i", ",", "pr", "in", "enumerate", "(", "tok_preds", ")", ":", "\n", "        ", "sent", "=", "hldict", "[", "i", "]", "[", "'sent'", "]", "[", "setting", "]", "\n", "hldict", "[", "i", "]", "[", "'toppreds'", "]", "=", "pr", "\n", "hldict", "[", "i", "]", "[", "'tgtprob'", "]", "=", "tok_probs", "[", "i", "]", "\n", "hldict", "[", "i", "]", "[", "'topprobs'", "]", "=", "top_probs", "[", "i", "]", "\n", "score", "=", "0", "\n", "if", "sent", "in", "used", ":", "continue", "\n", "used", ".", "append", "(", "sent", ")", "\n", "for", "candidate", "in", "pr", ":", "\n", "            ", "if", "candidate", ".", "strip", "(", ")", "in", "hldict", "[", "i", "]", "[", "'exp'", "]", ":", "\n", "                ", "score", "=", "1", "\n", "", "", "if", "score", "==", "1", ":", "\n", "            ", "ctup", "=", "(", "hldict", "[", "i", "]", "[", "'sent'", "]", "[", "setting", "]", ",", "hldict", "[", "i", "]", "[", "'exp'", "]", ",", "pr", ",", "hldict", "[", "i", "]", "[", "'constraint'", "]", ")", "\n", "if", "ctup", "not", "in", "correct", ":", "\n", "                ", "correct", ".", "append", "(", "ctup", ")", "\n", "", "", "tot_score", ".", "append", "(", "score", ")", "\n", "by_constraint_score", "[", "hldict", "[", "i", "]", "[", "'constraint'", "]", "]", ".", "append", "(", "score", ")", "\n", "", "conddict", "=", "make_conddict", "(", "hldict", ")", "\n", "n4report", "=", "sim_fk_N400", "(", "conddict", ",", "fklog", ",", "setting", ",", "k", "=", "k", ",", "bert", "=", "bert", ")", "\n", "tot_acc", "=", "get_acc", "(", "tot_score", ")", "\n", "report", "=", "'\\nPrediction accuracies:\\n'", "\n", "report", "+=", "'EXP TGT in TOP %s preds: %s (%s/%s)\\n'", "%", "(", "k", ",", "tot_acc", ",", "sum", "(", "tot_score", ")", ",", "len", "(", "tot_score", ")", ")", "\n", "report", "+=", "'in TOP %s for H: %s\\n'", "%", "(", "k", ",", "get_acc", "(", "by_constraint_score", "[", "'H'", "]", ")", ")", "\n", "report", "+=", "'in TOP %s for L: %s\\n'", "%", "(", "k", ",", "get_acc", "(", "by_constraint_score", "[", "'L'", "]", ")", ")", "\n", "return", "report", ",", "n4report", ",", "correct", ",", "tot_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.sim_fk_N400": [[229, 279], ["logfile.write", "logfile.write", "logfile.write", "logfile.write", "logfile.write", "logfile.write", "allprobs[].append", "logfile.write", "numpy.average", "numpy.average", "numpy.average", "numpy.average", "numpy.average", "numpy.average", "run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "exp_top[].append", "logfile.write", "exp_top[].append", "exp_top_thresh[].append", "wc_boost[].append", "logfile.write", "wc_boost[].append", "run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "str", "exp_top_thresh[].append", "exp_top_thresh[].append", "abs", "abs", "abs"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc"], ["", "def", "sim_fk_N400", "(", "conddict", ",", "logfile", ",", "setting", ",", "k", "=", "5", ",", "bert", "=", "True", ")", ":", "\n", "    ", "thresh", "=", "0.01", "\n", "exp_top", "=", "{", "'H'", ":", "[", "]", ",", "'L'", ":", "[", "]", "}", "\n", "exp_top_thresh", "=", "{", "'H'", ":", "[", "]", ",", "'L'", ":", "[", "]", "}", "\n", "wc_boost", "=", "{", "'H'", ":", "[", "]", ",", "'L'", ":", "[", "]", "}", "\n", "allprobs", "=", "{", "'H'", ":", "[", "]", ",", "'L'", ":", "[", "]", "}", "\n", "for", "it", "in", "conddict", ":", "\n", "        ", "exp_prob", ",", "wc_prob", ",", "bc_prob", "=", "[", "conddict", "[", "it", "]", "[", "cont", "]", "[", "'tgtprob'", "]", "for", "cont", "in", "[", "'exp'", ",", "'wc'", ",", "'bc'", "]", "]", "\n", "logfile", ".", "write", "(", "conddict", "[", "it", "]", "[", "'exp'", "]", "[", "'sent'", "]", "[", "setting", "]", ")", "\n", "logfile", ".", "write", "(", "' '", "+", "'/'", ".", "join", "(", "[", "conddict", "[", "it", "]", "[", "cont", "]", "[", "'tgt'", "]", "for", "cont", "in", "[", "'exp'", ",", "'wc'", ",", "'bc'", "]", "]", ")", "+", "'\\n'", ")", "\n", "logfile", ".", "write", "(", "'TGT probs: %s\\n'", "%", "[", "exp_prob", ",", "wc_prob", ",", "bc_prob", "]", ")", "\n", "logfile", ".", "write", "(", "'PREDICTED: %s\\n'", "%", "conddict", "[", "it", "]", "[", "'exp'", "]", "[", "'toppreds'", "]", ")", "\n", "logfile", ".", "write", "(", "str", "(", "conddict", "[", "it", "]", "[", "'exp'", "]", "[", "'topprobs'", "]", ")", "+", "'\\n'", ")", "\n", "cons", "=", "conddict", "[", "it", "]", "[", "'exp'", "]", "[", "'constraint'", "]", "\n", "logfile", ".", "write", "(", "cons", "+", "'\\n'", ")", "\n", "allprobs", "[", "cons", "]", ".", "append", "(", "(", "exp_prob", ",", "wc_prob", ",", "bc_prob", ")", ")", "\n", "if", "(", "exp_prob", ">", "wc_prob", ")", "and", "(", "exp_prob", ">", "bc_prob", ")", ":", "\n", "            ", "exp_top", "[", "cons", "]", ".", "append", "(", "1", ")", "\n", "logfile", ".", "write", "(", "'EXP TOP\\n'", ")", "\n", "if", "abs", "(", "exp_prob", "-", "wc_prob", ")", ">", "thresh", "and", "abs", "(", "exp_prob", "-", "bc_prob", ")", ">", "thresh", ":", "\n", "                ", "exp_top_thresh", "[", "cons", "]", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                ", "exp_top_thresh", "[", "cons", "]", ".", "append", "(", "0", ")", "\n", "", "", "else", ":", "\n", "            ", "exp_top", "[", "cons", "]", ".", "append", "(", "0", ")", "\n", "exp_top_thresh", "[", "cons", "]", ".", "append", "(", "0", ")", "\n", "", "if", "(", "wc_prob", ">", "bc_prob", ")", "and", "abs", "(", "wc_prob", "-", "bc_prob", ")", ">", "thresh", ":", "\n", "            ", "wc_boost", "[", "cons", "]", ".", "append", "(", "1", ")", "\n", "logfile", ".", "write", "(", "'WC BOOST\\n'", ")", "\n", "", "else", ":", "\n", "            ", "wc_boost", "[", "cons", "]", ".", "append", "(", "0", ")", "\n", "", "logfile", ".", "write", "(", "'----\\n\\n\\n'", ")", "\n", "\n", "", "report", "=", "'\\nTGT probability patterning:\\n'", "\n", "report", "+=", "'AVG PROB HIGH EXP: %s\\n'", "%", "np", ".", "average", "(", "[", "e", "[", "0", "]", "for", "e", "in", "allprobs", "[", "'H'", "]", "]", ")", "\n", "report", "+=", "'AVG PROB HIGH WC: %s\\n'", "%", "np", ".", "average", "(", "[", "e", "[", "1", "]", "for", "e", "in", "allprobs", "[", "'H'", "]", "]", ")", "\n", "report", "+=", "'AVG PROB HIGH BC: %s\\n'", "%", "np", ".", "average", "(", "[", "e", "[", "2", "]", "for", "e", "in", "allprobs", "[", "'H'", "]", "]", ")", "\n", "report", "+=", "'AVG PROB LOW EXP: %s\\n'", "%", "np", ".", "average", "(", "[", "e", "[", "0", "]", "for", "e", "in", "allprobs", "[", "'L'", "]", "]", ")", "\n", "report", "+=", "'AVG PROB LOW WC: %s\\n'", "%", "np", ".", "average", "(", "[", "e", "[", "1", "]", "for", "e", "in", "allprobs", "[", "'L'", "]", "]", ")", "\n", "report", "+=", "'AVG PROB LOW BC: %s\\n'", "%", "np", ".", "average", "(", "[", "e", "[", "2", "]", "for", "e", "in", "allprobs", "[", "'L'", "]", "]", ")", "\n", "report", "+=", "'EXP TOP: %s\\n'", "%", "get_acc", "(", "exp_top", "[", "'H'", "]", "+", "exp_top", "[", "'L'", "]", ")", "\n", "report", "+=", "'EXP TOP HIGH: %s\\n'", "%", "get_acc", "(", "exp_top", "[", "'H'", "]", ")", "\n", "report", "+=", "'EXP TOP LOW: %s\\n'", "%", "get_acc", "(", "exp_top", "[", "'L'", "]", ")", "\n", "report", "+=", "'EXP TOP w/ THRESH %s: %s\\n'", "%", "(", "thresh", ",", "get_acc", "(", "exp_top_thresh", "[", "'H'", "]", "+", "exp_top_thresh", "[", "'L'", "]", ")", ")", "\n", "report", "+=", "'EXP TOP HIGH w/ THRESH %s: %s\\n'", "%", "(", "thresh", ",", "get_acc", "(", "exp_top_thresh", "[", "'H'", "]", ")", ")", "\n", "report", "+=", "'EXP TOP LOW w/ THRESH %s: %s\\n'", "%", "(", "thresh", ",", "get_acc", "(", "exp_top_thresh", "[", "'L'", "]", ")", ")", "\n", "report", "+=", "'WC BOOST HIGH: %s\\n'", "%", "get_acc", "(", "wc_boost", "[", "'H'", "]", ")", "\n", "report", "+=", "'WC BOOST LOW: %s\\n'", "%", "get_acc", "(", "wc_boost", "[", "'L'", "]", ")", "\n", "\n", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.test_rr_acc": [[280, 326], ["access_model.get_predictions", "access_model.get_probabilities", "numpy.average", "numpy.percentile", "numpy.percentile", "numpy.percentile", "max", "collections.Counter", "enumerate", "run_diagnostics_bert.make_conddict", "run_diagnostics_bert.sim_rr_N400", "tot_score.append", "correct_by_quartile[].append", "run_diagnostics_bert.get_acc", "sum", "len", "run_diagnostics_bert.get_acc", "len", "run_diagnostics_bert.get_acc", "len", "run_diagnostics_bert.get_acc", "len", "run_diagnostics_bert.get_acc", "len", "candidate.strip", "correct.append", "correct_by_quartile[].append", "correct_by_quartile[].append", "correct_by_quartile[].append", "e.split"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.access_model.get_predictions", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.access_model.get_probabilities", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.make_conddict", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.sim_rr_N400", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc"], ["", "def", "test_rr_acc", "(", "clozedict", ",", "inputlist", ",", "tgtlist", ",", "clozelist", ",", "model", ",", "tokenizer", ",", "rrlog", ",", "k", "=", "5", ",", "bert", "=", "True", ",", "scat", "=", "None", ")", ":", "\n", "    ", "tok_preds", ",", "top_probs", "=", "tp", ".", "get_predictions", "(", "inputlist", ",", "model", ",", "tokenizer", ",", "k", "=", "k", ",", "bert", "=", "bert", ")", "\n", "tok_probs", "=", "tp", ".", "get_probabilities", "(", "inputlist", ",", "tgtlist", ",", "model", ",", "tokenizer", ",", "bert", "=", "bert", ")", "\n", "tot_score", "=", "[", "]", "\n", "correct", "=", "[", "]", "\n", "correct_by_quartile", "=", "{", "'q1_corr'", ":", "[", "]", ",", "'q2_corr'", ":", "[", "]", ",", "'q3_corr'", ":", "[", "]", ",", "'q4_corr'", ":", "[", "]", "}", "\n", "avgcloze", "=", "np", ".", "average", "(", "clozelist", ")", "\n", "q1", "=", "np", ".", "percentile", "(", "clozelist", ",", "25", ")", "\n", "q3", "=", "np", ".", "percentile", "(", "clozelist", ",", "75", ")", "\n", "q2", "=", "np", ".", "percentile", "(", "clozelist", ",", "50", ")", "\n", "q4", "=", "max", "(", "clozelist", ")", "\n", "predcounts", "=", "Counter", "(", ")", "\n", "for", "i", ",", "pred", "in", "enumerate", "(", "tok_preds", ")", ":", "\n", "        ", "clozedict", "[", "i", "]", "[", "'toppreds'", "]", "=", "pred", "\n", "clozedict", "[", "i", "]", "[", "'tgtprob'", "]", "=", "tok_probs", "[", "i", "]", "\n", "clozedict", "[", "i", "]", "[", "'topprobs'", "]", "=", "top_probs", "[", "i", "]", "\n", "score", "=", "0", "\n", "itm", "=", "clozedict", "[", "i", "]", "[", "'item'", "]", "\n", "cond", "=", "clozedict", "[", "i", "]", "[", "'cond'", "]", "\n", "for", "candidate", "in", "pred", ":", "\n", "            ", "if", "candidate", ".", "strip", "(", ")", "in", "[", "e", ".", "split", "(", ")", "[", "0", "]", "for", "e", "in", "clozedict", "[", "i", "]", "[", "'exp'", "]", "]", ":", "\n", "                ", "score", "=", "1", "\n", "", "", "if", "score", "==", "1", ":", "\n", "            ", "ctup", "=", "(", "clozedict", "[", "i", "]", "[", "'sent'", "]", ",", "clozedict", "[", "i", "]", "[", "'exp'", "]", ",", "pred", ",", "clozedict", "[", "i", "]", "[", "'maxcloze'", "]", ")", "\n", "if", "ctup", "not", "in", "correct", ":", "\n", "                ", "correct", ".", "append", "(", "ctup", ")", "\n", "", "", "tot_score", ".", "append", "(", "score", ")", "\n", "if", "clozedict", "[", "i", "]", "[", "'maxcloze'", "]", "<=", "q1", ":", "\n", "            ", "correct_by_quartile", "[", "'q1_corr'", "]", ".", "append", "(", "score", ")", "\n", "", "elif", "clozedict", "[", "i", "]", "[", "'maxcloze'", "]", "<=", "q2", ":", "\n", "            ", "correct_by_quartile", "[", "'q2_corr'", "]", ".", "append", "(", "score", ")", "\n", "", "elif", "clozedict", "[", "i", "]", "[", "'maxcloze'", "]", "<=", "q3", ":", "\n", "            ", "correct_by_quartile", "[", "'q3_corr'", "]", ".", "append", "(", "score", ")", "\n", "", "else", ":", "\n", "            ", "correct_by_quartile", "[", "'q4_corr'", "]", ".", "append", "(", "score", ")", "\n", "", "", "conddict", "=", "make_conddict", "(", "clozedict", ")", "\n", "n4report", "=", "sim_rr_N400", "(", "conddict", ",", "rrlog", ",", "scat", "=", "scat", ",", "k", "=", "k", ",", "bert", "=", "bert", ")", "\n", "report", "=", "'\\nPrediction accuracies:\\n'", "\n", "report", "+=", "'TGT in top %s preds: %s (%s/%s)\\n'", "%", "(", "k", ",", "get_acc", "(", "tot_score", ")", ",", "sum", "(", "tot_score", ")", ",", "len", "(", "tot_score", ")", ")", "\n", "report", "+=", "'TGT in top %s for Q1: %s (%s upper, %s items)\\n'", "%", "(", "k", ",", "get_acc", "(", "correct_by_quartile", "[", "'q1_corr'", "]", ")", ",", "q1", ",", "len", "(", "correct_by_quartile", "[", "'q1_corr'", "]", ")", ")", "\n", "report", "+=", "'TGT in top %s for Q2: %s (%s upper, %s items)\\n'", "%", "(", "k", ",", "get_acc", "(", "correct_by_quartile", "[", "'q2_corr'", "]", ")", ",", "q2", ",", "len", "(", "correct_by_quartile", "[", "'q2_corr'", "]", ")", ")", "\n", "report", "+=", "'TGT in top %s for Q3: %s (%s upper, %s items)\\n'", "%", "(", "k", ",", "get_acc", "(", "correct_by_quartile", "[", "'q3_corr'", "]", ")", ",", "q3", ",", "len", "(", "correct_by_quartile", "[", "'q3_corr'", "]", ")", ")", "\n", "report", "+=", "'TGT in top %s for Q4: %s (%s upper, %s items)\\n'", "%", "(", "k", ",", "get_acc", "(", "correct_by_quartile", "[", "'q4_corr'", "]", ")", ",", "q4", ",", "len", "(", "correct_by_quartile", "[", "'q4_corr'", "]", ")", ")", "\n", "report", "+=", "'AVG CLOZE: %s\\n'", "%", "avgcloze", "\n", "report", "+=", "'MED CLOZE: %s\\n'", "%", "q2", "\n", "return", "report", ",", "n4report", ",", "correct", ",", "predcounts", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.sim_rr_N400": [[327, 382], ["logfile.write", "logfile.write", "logfile.write", "logfile.write", "logfile.write", "logfile.write", "logfile.write", "logfile.write", "logfile.write", "probpairs.append", "clozepairs.append", "sum", "run_diagnostics_bert.get_acc", "numpy.average", "numpy.average", "run_diagnostics_bert.plot_rr_prcl", "pattern.append", "logfile.write", "pattern.append", "pattern_thresh.append", "logfile.write", "pattern_thresh.append", "abs", "same.append", "logfile.write", "same.append", "run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "str", "str", "abs", "scipy.stats.pearsonr", "scipy.stats.pearsonr", "scipy.stats.spearmanr", "scipy.stats.spearmanr"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.plot_rr_prcl", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc"], ["", "def", "sim_rr_N400", "(", "conddict", ",", "logfile", ",", "scat", "=", "None", ",", "k", "=", "5", ",", "bert", "=", "True", ")", ":", "\n", "    ", "thresh", "=", ".01", "\n", "pattern", "=", "[", "]", "\n", "pattern_thresh", "=", "[", "]", "\n", "same", "=", "[", "]", "\n", "probpairs", "=", "[", "]", "\n", "clozepairs", "=", "[", "]", "\n", "for", "it", "in", "conddict", ":", "\n", "        ", "a_prob", ",", "b_prob", "=", "(", "conddict", "[", "it", "]", "[", "'a'", "]", "[", "'tgtprob'", "]", ",", "conddict", "[", "it", "]", "[", "'b'", "]", "[", "'tgtprob'", "]", ")", "\n", "logfile", ".", "write", "(", "conddict", "[", "it", "]", "[", "'a'", "]", "[", "'sent'", "]", "+", "'   '", "+", "conddict", "[", "it", "]", "[", "'a'", "]", "[", "'tgt'", "]", "+", "'\\n'", ")", "\n", "logfile", ".", "write", "(", "conddict", "[", "it", "]", "[", "'b'", "]", "[", "'sent'", "]", "+", "'   '", "+", "conddict", "[", "it", "]", "[", "'b'", "]", "[", "'tgt'", "]", "+", "'\\n'", ")", "\n", "logfile", ".", "write", "(", "'TGT probs: %s\\n'", "%", "[", "a_prob", ",", "b_prob", "]", ")", "\n", "logfile", ".", "write", "(", "'TGT cloze: %s\\n'", "%", "[", "conddict", "[", "it", "]", "[", "'a'", "]", "[", "'tgtcloze'", "]", ",", "conddict", "[", "it", "]", "[", "'b'", "]", "[", "'tgtcloze'", "]", "]", ")", "\n", "logfile", ".", "write", "(", "'PREDICTED: %s'", "%", "conddict", "[", "it", "]", "[", "'a'", "]", "[", "'toppreds'", "]", "+", "'\\n'", ")", "\n", "logfile", ".", "write", "(", "str", "(", "conddict", "[", "it", "]", "[", "'a'", "]", "[", "'topprobs'", "]", ")", "+", "'\\n'", ")", "\n", "logfile", ".", "write", "(", "'PREDICTED: %s'", "%", "conddict", "[", "it", "]", "[", "'b'", "]", "[", "'toppreds'", "]", "+", "'\\n'", ")", "\n", "logfile", ".", "write", "(", "str", "(", "conddict", "[", "it", "]", "[", "'b'", "]", "[", "'topprobs'", "]", ")", "+", "'\\n'", ")", "\n", "if", "(", "a_prob", ">", "b_prob", ")", ":", "\n", "            ", "pattern", ".", "append", "(", "1", ")", "\n", "logfile", ".", "write", "(", "'PATTERN\\n'", ")", "\n", "", "else", ":", "\n", "            ", "pattern", ".", "append", "(", "0", ")", "\n", "", "if", "(", "a_prob", ">", "b_prob", ")", "and", "(", "abs", "(", "a_prob", "-", "b_prob", ")", ">", "thresh", ")", ":", "\n", "            ", "pattern_thresh", ".", "append", "(", "1", ")", "\n", "logfile", ".", "write", "(", "'PATTERN THRESH\\n'", ")", "\n", "", "else", ":", "\n", "            ", "pattern_thresh", ".", "append", "(", "0", ")", "\n", "", "if", "(", "abs", "(", "a_prob", "-", "b_prob", ")", "<", "thresh", ")", ":", "\n", "            ", "same", ".", "append", "(", "1", ")", "\n", "logfile", ".", "write", "(", "'NO DIFF\\n'", ")", "\n", "", "else", ":", "\n", "            ", "same", ".", "append", "(", "0", ")", "\n", "", "logfile", ".", "write", "(", "'----\\n\\n\\n'", ")", "\n", "probpairs", ".", "append", "(", "(", "a_prob", ",", "b_prob", ")", ")", "\n", "clozepairs", ".", "append", "(", "(", "conddict", "[", "it", "]", "[", "'a'", "]", "[", "'tgtcloze'", "]", ",", "conddict", "[", "it", "]", "[", "'b'", "]", "[", "'tgtcloze'", "]", ")", ")", "\n", "", "probdiffs", "=", "[", "e", "[", "0", "]", "-", "e", "[", "1", "]", "for", "e", "in", "probpairs", "]", "\n", "clozediffs", "=", "[", "e", "[", "0", "]", "-", "e", "[", "1", "]", "for", "e", "in", "clozepairs", "]", "\n", "\n", "report", "=", "'\\nTarget probs vs cloze:\\n'", "\n", "if", "sum", "(", "probdiffs", ")", ">", "0", ":", "\n", "        ", "report", "+=", "'PEARSON: %s\\n'", "%", "scipy", ".", "stats", ".", "pearsonr", "(", "probdiffs", ",", "clozediffs", ")", "[", "0", "]", "\n", "report", "+=", "'SPEARMAN: %s\\n'", "%", "scipy", ".", "stats", ".", "spearmanr", "(", "probdiffs", ",", "clozediffs", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "report", "+=", "'PEARSON: ---\\n'", "\n", "report", "+=", "'SPEARMAN: ---\\n'", "\n", "", "report", "+=", "'GOOD TGT HIGHER: %s\\n'", "%", "get_acc", "(", "pattern", ")", "\n", "report", "+=", "'GOOD TGT HIGHER BY %s: %s\\n'", "%", "(", "thresh", ",", "get_acc", "(", "pattern_thresh", ")", ")", "\n", "report", "+=", "'DIFF BELOW THRESH %s: %s\\n'", "%", "(", "thresh", ",", "get_acc", "(", "same", ")", ")", "\n", "report", "+=", "'AVG PROB DIFF: %s\\n'", "%", "np", ".", "average", "(", "probdiffs", ")", "\n", "report", "+=", "'AVG CLOZE DIFF: %s\\n'", "%", "np", ".", "average", "(", "clozediffs", ")", "\n", "\n", "if", "scat", ":", "\n", "        ", "plot_rr_prcl", "(", "clozediffs", ",", "probdiffs", ",", "scat", ")", "\n", "\n", "", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.plot_rr_prcl": [[383, 392], ["matplotlib.scatter", "matplotlib.ylabel", "matplotlib.yticks", "matplotlib.xlabel", "matplotlib.xticks", "matplotlib.ylim", "matplotlib.savefig", "matplotlib.clf"], "function", ["None"], ["", "def", "plot_rr_prcl", "(", "clozediffs", ",", "probdiffs", ",", "scat", ")", ":", "\n", "    ", "plt", ".", "scatter", "(", "clozediffs", ",", "probdiffs", ")", "\n", "plt", ".", "ylabel", "(", "'Model probability differences'", ",", "fontsize", "=", "'x-large'", ")", "\n", "plt", ".", "yticks", "(", "fontsize", "=", "'large'", ")", "\n", "plt", ".", "xlabel", "(", "'Cloze differences'", ",", "fontsize", "=", "'x-large'", ")", "\n", "plt", ".", "xticks", "(", "fontsize", "=", "'large'", ")", "\n", "plt", ".", "ylim", "(", "-", ".2", ",", ".7", ")", "\n", "plt", ".", "savefig", "(", "scat", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.test_nkf_acc": [[393, 418], ["access_model.get_predictions", "access_model.get_probabilities", "enumerate", "run_diagnostics_bert.make_conddict", "run_diagnostics_bert.sim_nkf_N400", "tot_score.append", "run_diagnostics_bert.get_acc", "sum", "len", "candidate.strip", "correct.append"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.access_model.get_predictions", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.access_model.get_probabilities", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.make_conddict", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.sim_nkf_N400", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc"], ["", "def", "test_nkf_acc", "(", "nkfdict", ",", "inputlist", ",", "tgtlist", ",", "model", ",", "tokenizer", ",", "nkflog", ",", "k", "=", "5", ",", "bert", "=", "True", ")", ":", "\n", "    ", "correct", "=", "[", "]", "\n", "tot_score", "=", "[", "]", "\n", "tok_preds", ",", "top_probs", "=", "tp", ".", "get_predictions", "(", "inputlist", ",", "model", ",", "tokenizer", ",", "k", "=", "k", ",", "bert", "=", "bert", ")", "\n", "tok_probs", "=", "tp", ".", "get_probabilities", "(", "inputlist", ",", "tgtlist", ",", "model", ",", "tokenizer", ",", "bert", "=", "bert", ")", "\n", "for", "i", ",", "pred", "in", "enumerate", "(", "tok_preds", ")", ":", "\n", "        ", "nkfdict", "[", "i", "]", "[", "'toppreds'", "]", "=", "pred", "\n", "nkfdict", "[", "i", "]", "[", "'tgtprob'", "]", "=", "tok_probs", "[", "i", "]", "\n", "nkfdict", "[", "i", "]", "[", "'topprobs'", "]", "=", "top_probs", "[", "i", "]", "\n", "score", "=", "0", "\n", "for", "candidate", "in", "pred", ":", "\n", "            ", "if", "candidate", ".", "strip", "(", ")", "in", "nkfdict", "[", "i", "]", "[", "'exp'", "]", ":", "\n", "                ", "score", "=", "1", "\n", "", "", "if", "score", "==", "1", ":", "\n", "            ", "ctup", "=", "(", "nkfdict", "[", "i", "]", "[", "'sent'", "]", ",", "nkfdict", "[", "i", "]", "[", "'exp'", "]", ",", "pred", ",", "nkfdict", "[", "i", "]", "[", "'cond'", "]", ")", "\n", "if", "ctup", "not", "in", "correct", ":", "\n", "                ", "correct", ".", "append", "(", "ctup", ")", "\n", "", "", "if", "nkfdict", "[", "i", "]", "[", "'cond'", "]", "==", "'TA'", ":", "\n", "            ", "tot_score", ".", "append", "(", "score", ")", "\n", "", "", "conddict", "=", "make_conddict", "(", "nkfdict", ")", "\n", "n4report", "=", "sim_nkf_N400", "(", "conddict", ",", "nkflog", ",", "k", "=", "k", ",", "bert", "=", "bert", ")", "\n", "report", "=", "\"\\nPrediction 'accuracy':\\n\"", "\n", "report", "+=", "'TRUE TGT in top %s preds: %s (%s/%s)\\n'", "%", "(", "k", ",", "get_acc", "(", "tot_score", ")", ",", "sum", "(", "tot_score", ")", ",", "len", "(", "tot_score", ")", ")", "\n", "\n", "return", "report", ",", "n4report", ",", "correct", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.sim_nkf_N400": [[419, 475], ["run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "logfile.write", "logfile.write", "logfile.write", "logfile.write", "logfile.write", "logfile.write", "logfile.write", "logfile.write", "preftrue[].append", "run_diagnostics_bert.get_acc", "sum", "len", "run_diagnostics_bert.get_acc", "sum", "len", "run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "run_diagnostics_bert.get_acc", "preftrue_thresh[].append", "preftrue_thresh[].append", "str", "str", "str", "str", "preftrue_l[].append", "abs", "preftrue_u[].append", "print"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc"], ["", "def", "sim_nkf_N400", "(", "conddict", ",", "logfile", ",", "k", "=", "5", ",", "bert", "=", "True", ")", ":", "\n", "    ", "pattern", "=", "[", "]", "\n", "same", "=", "[", "]", "\n", "preftrue", "=", "{", "'aff'", ":", "[", "]", ",", "'neg'", ":", "[", "]", "}", "\n", "preftrue_l", "=", "{", "'aff'", ":", "[", "]", ",", "'neg'", ":", "[", "]", "}", "\n", "preftrue_u", "=", "{", "'aff'", ":", "[", "]", ",", "'neg'", ":", "[", "]", "}", "\n", "preftrue_thresh", "=", "{", "'aff'", ":", "[", "]", ",", "'neg'", ":", "[", "]", "}", "\n", "lic", "=", "None", "\n", "thresh", "=", ".01", "\n", "for", "it", "in", "conddict", ":", "\n", "        ", "if", "'licensing'", "in", "conddict", "[", "it", "]", "[", "'TA'", "]", ":", "\n", "            ", "lic", "=", "conddict", "[", "it", "]", "[", "'TA'", "]", "[", "'licensing'", "]", "\n", "", "for", "true_cond", ",", "false_cond", ",", "pol", "in", "[", "(", "'TA'", ",", "'FA'", ",", "'aff'", ")", ",", "(", "'TN'", ",", "'FN'", ",", "'neg'", ")", "]", ":", "\n", "            ", "true_prob", ",", "false_prob", "=", "(", "conddict", "[", "it", "]", "[", "true_cond", "]", "[", "'tgtprob'", "]", ",", "conddict", "[", "it", "]", "[", "false_cond", "]", "[", "'tgtprob'", "]", ")", "\n", "logfile", ".", "write", "(", "str", "(", "conddict", "[", "it", "]", "[", "true_cond", "]", "[", "'sent'", "]", "+", "' '", "+", "conddict", "[", "it", "]", "[", "true_cond", "]", "[", "'tgt'", "]", ")", "+", "'\\n'", ")", "\n", "logfile", ".", "write", "(", "str", "(", "conddict", "[", "it", "]", "[", "false_cond", "]", "[", "'sent'", "]", "+", "' '", "+", "conddict", "[", "it", "]", "[", "false_cond", "]", "[", "'tgt'", "]", ")", "+", "'\\n'", ")", "\n", "logfile", ".", "write", "(", "u'TGT probs: %s\\n'", "%", "[", "true_prob", ",", "false_prob", "]", ")", "\n", "logfile", ".", "write", "(", "u'PREDICTED: %s'", "%", "conddict", "[", "it", "]", "[", "true_cond", "]", "[", "'toppreds'", "]", "+", "'\\n'", ")", "\n", "logfile", ".", "write", "(", "str", "(", "conddict", "[", "it", "]", "[", "true_cond", "]", "[", "'topprobs'", "]", ")", "+", "'\\n'", ")", "\n", "logfile", ".", "write", "(", "u'PREDICTED: %s'", "%", "conddict", "[", "it", "]", "[", "false_cond", "]", "[", "'toppreds'", "]", "+", "'\\n'", ")", "\n", "logfile", ".", "write", "(", "str", "(", "conddict", "[", "it", "]", "[", "false_cond", "]", "[", "'topprobs'", "]", ")", "+", "'\\n'", ")", "\n", "logfile", ".", "write", "(", "u'---\\n\\n\\n'", ")", "\n", "if", "true_prob", ">", "false_prob", ":", "\n", "                ", "score", "=", "1", "\n", "", "else", ":", "\n", "                ", "score", "=", "0", "\n", "", "preftrue", "[", "pol", "]", ".", "append", "(", "score", ")", "\n", "if", "lic", ":", "\n", "                ", "if", "lic", "==", "'Y'", ":", "\n", "                    ", "preftrue_l", "[", "pol", "]", ".", "append", "(", "score", ")", "\n", "", "elif", "lic", "==", "'N'", ":", "\n", "                    ", "preftrue_u", "[", "pol", "]", ".", "append", "(", "score", ")", "\n", "", "else", ":", "\n", "                    ", "print", "(", "'LICENSING ERROR'", ")", "\n", "", "", "if", "(", "true_prob", ">", "false_prob", ")", "and", "(", "abs", "(", "true_prob", "-", "false_prob", ")", ">", "thresh", ")", ":", "\n", "                ", "preftrue_thresh", "[", "pol", "]", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                ", "preftrue_thresh", "[", "pol", "]", ".", "append", "(", "0", ")", "\n", "\n", "\n", "", "", "", "report", "=", "'\\nPreference for true vs false sentences:\\n'", "\n", "report", "+=", "'PREF TRUE: %s\\n'", "%", "get_acc", "(", "preftrue", "[", "'aff'", "]", "+", "preftrue", "[", "'neg'", "]", ")", "\n", "report", "+=", "'AFF: %s\\n'", "%", "get_acc", "(", "preftrue", "[", "'aff'", "]", ")", "\n", "report", "+=", "'NEG: %s\\n'", "%", "get_acc", "(", "preftrue", "[", "'neg'", "]", ")", "\n", "report", "+=", "'PREF TRUE AFF THRESH %s: %s (%s/%s)\\n'", "%", "(", "thresh", ",", "get_acc", "(", "preftrue_thresh", "[", "'aff'", "]", ")", ",", "sum", "(", "preftrue_thresh", "[", "'aff'", "]", ")", ",", "len", "(", "preftrue_thresh", "[", "'aff'", "]", ")", ")", "\n", "report", "+=", "'PREF TRUE NEG THRESH %s: %s (%s/%s)\\n'", "%", "(", "thresh", ",", "get_acc", "(", "preftrue_thresh", "[", "'neg'", "]", ")", ",", "sum", "(", "preftrue_thresh", "[", "'neg'", "]", ")", ",", "len", "(", "preftrue_thresh", "[", "'neg'", "]", ")", ")", "\n", "if", "lic", ":", "\n", "        ", "report", "+=", "'PREF TRUE LICENSED: %s\\n'", "%", "get_acc", "(", "preftrue_l", "[", "'aff'", "]", "+", "preftrue_l", "[", "'neg'", "]", ")", "\n", "report", "+=", "'AFF: %s\\n'", "%", "get_acc", "(", "preftrue_l", "[", "'aff'", "]", ")", "\n", "report", "+=", "'NEG: %s\\n'", "%", "get_acc", "(", "preftrue_l", "[", "'neg'", "]", ")", "\n", "report", "+=", "'PREF TRUE UNLICENSED: %s\\n'", "%", "get_acc", "(", "preftrue_u", "[", "'aff'", "]", "+", "preftrue_u", "[", "'neg'", "]", ")", "\n", "report", "+=", "'AFF: %s\\n'", "%", "get_acc", "(", "preftrue_u", "[", "'aff'", "]", ")", "\n", "report", "+=", "'NEG: %s\\n'", "%", "get_acc", "(", "preftrue_u", "[", "'neg'", "]", ")", "\n", "", "report", "+=", "'\\n\\n'", "\n", "\n", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_fk_all": [[476, 501], ["print", "print", "io.open", "run_diagnostics_bert.test_fk_acc", "acclist.append", "acclist_names.append", "reports.append", "os.path.join", "fklog.write", "str"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.test_fk_acc"], ["", "def", "run_fk_all", "(", "args", ",", "out", ",", "models", ",", "logcode", ",", "klist", ",", "hldict", ",", "inputlist", ",", "tgtlist", ",", "bert", "=", "True", ")", ":", "\n", "    ", "outstring", "=", "''", "\n", "outstring", "+=", "'\\n\\n***\\nSETTING: %s\\n***\\n\\n'", "%", "logcode", "\n", "print", "(", "logcode", ")", "\n", "acclist", "=", "[", "]", "\n", "acclist_names", "=", "[", "]", "\n", "for", "modelname", ",", "model", ",", "tokenizer", "in", "models", ":", "\n", "        ", "outstring", "+=", "'\\n\\n***\\nMODEL: %s\\n***\\n'", "%", "modelname", "\n", "print", "(", "modelname", ")", "\n", "reports", "=", "[", "]", "\n", "for", "k", "in", "klist", ":", "\n", "            ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "resultsdir", ",", "'FK-%s_predlog_%s-%s'", "%", "(", "logcode", ",", "modelname", ",", "k", ")", ")", ",", "'w'", ")", "as", "fklog", ":", "\n", "                ", "report", ",", "n4report", ",", "corr", ",", "acc", "=", "test_fk_acc", "(", "hldict", ",", "inputlist", ",", "tgtlist", ",", "model", ",", "tokenizer", ",", "logcode", ",", "fklog", ",", "k", "=", "k", ",", "bert", "=", "bert", ")", "\n", "acclist", ".", "append", "(", "acc", ")", "\n", "acclist_names", ".", "append", "(", "modelname", "+", "'-%s'", "%", "k", ")", "\n", "for", "crritem", "in", "corr", ":", "\n", "                    ", "fklog", ".", "write", "(", "str", "(", "crritem", ")", "+", "'\\n'", ")", "\n", "", "reports", ".", "append", "(", "(", "report", ",", "n4report", ",", "k", ")", ")", "\n", "", "", "for", "acc", ",", "n4", ",", "k", "in", "reports", ":", "\n", "            ", "outstring", "+=", "'\\nFED/KUT k=%s acc\\n'", "%", "k", "\n", "outstring", "+=", "acc", "\n", "", "outstring", "+=", "'\\nFED/KUT N400\\n'", "\n", "outstring", "+=", "n4", "\n", "outstring", "+=", "'\\n----\\n\\n'", "\n", "", "return", "acclist", ",", "acclist_names", ",", "outstring", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_rr_all": [[503, 524], ["out.write", "out.write", "out.write", "out.write", "out.write", "out.write", "out.write", "io.open", "print", "run_diagnostics_bert.test_rr_acc", "rrlog.write", "reports.append", "os.path.join", "rrlog.write", "str", "str"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.test_rr_acc"], ["", "def", "run_rr_all", "(", "args", ",", "out", ",", "models", ",", "logcode", ",", "klist", ",", "clozedict", ",", "inputlist", ",", "tgtlist", ",", "clozelist", ",", "bert", "=", "True", ")", ":", "\n", "    ", "out", ".", "write", "(", "'\\n\\n***\\nSETTING: %s\\n***\\n\\n'", "%", "logcode", ")", "\n", "for", "modelname", ",", "model", ",", "tokenizer", "in", "models", ":", "\n", "        ", "out", ".", "write", "(", "'\\n\\n***\\nMODEL: %s\\n***\\n'", "%", "modelname", ")", "\n", "reports", "=", "[", "]", "\n", "for", "k", "in", "klist", ":", "\n", "            ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "resultsdir", ",", "'RR-%s_predlog_%s-%s'", "%", "(", "logcode", ",", "modelname", ",", "k", ")", ")", ",", "'w'", ")", "as", "rrlog", ":", "\n", "                ", "print", "(", "'CHOW k=%s'", "%", "k", ")", "\n", "report", ",", "n4report", ",", "corr", ",", "prcounts", "=", "test_rr_acc", "(", "clozedict", ",", "inputlist", ",", "tgtlist", ",", "clozelist", ",", "model", ",", "tokenizer", ",", "rrlog", ",", "k", "=", "k", ",", "bert", "=", "bert", ")", "\n", "for", "crritem", "in", "corr", ":", "\n", "                    ", "rrlog", ".", "write", "(", "str", "(", "crritem", ")", "+", "'\\n'", ")", "\n", "", "rrlog", ".", "write", "(", "'\\n'", "+", "str", "(", "prcounts", ")", ")", "\n", "reports", ".", "append", "(", "(", "report", ",", "n4report", ",", "k", ")", ")", "\n", "", "", "for", "acc", ",", "n4", ",", "k", "in", "reports", ":", "\n", "            ", "out", ".", "write", "(", "'\\nCHOW k=%s acc\\n'", "%", "k", ")", "\n", "out", ".", "write", "(", "acc", ")", "\n", "", "out", ".", "write", "(", "'\\nCHOW N400\\n'", ")", "\n", "out", ".", "write", "(", "n4", ")", "\n", "out", ".", "write", "(", "'\\n----\\n\\n'", ")", "\n", "\n", "", "return", "report", ",", "n4report", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_neg_all": [[526, 544], ["out.write", "print", "out.write", "out.write", "out.write", "out.write", "out.write", "io.open", "run_diagnostics_bert.test_nkf_acc", "reports.append", "nkflog.write", "str"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.test_nkf_acc"], ["", "def", "run_neg_all", "(", "args", ",", "out", ",", "models", ",", "klist", ",", "inputlist", ",", "negdict", ",", "tgtlist", ",", "dataname", ",", "logcode", ",", "bert", "=", "True", ")", ":", "\n", "\n", "    ", "for", "modelname", ",", "model", ",", "tokenizer", "in", "models", ":", "\n", "        ", "out", ".", "write", "(", "'\\n\\n***\\nMODEL: %s\\n***\\n'", "%", "modelname", ")", "\n", "print", "(", "modelname", ")", "\n", "reports", "=", "[", "]", "\n", "for", "k", "in", "klist", ":", "\n", "            ", "with", "open", "(", "args", ".", "resultsdir", "+", "'/%s_predlog_%s-%s'", "%", "(", "logcode", ",", "modelname", ",", "k", ")", ",", "'w'", ")", "as", "nkflog", ":", "\n", "                ", "report", ",", "n4report", ",", "corr", "=", "test_nkf_acc", "(", "negdict", ",", "inputlist", ",", "tgtlist", ",", "model", ",", "tokenizer", ",", "nkflog", ",", "k", "=", "k", ",", "bert", "=", "bert", ")", "\n", "for", "crritem", "in", "corr", ":", "\n", "                    ", "nkflog", ".", "write", "(", "str", "(", "crritem", ")", "+", "'\\n'", ")", "\n", "", "reports", ".", "append", "(", "(", "report", ",", "n4report", ",", "k", ")", ")", "\n", "", "", "for", "acc", ",", "n4", ",", "k", "in", "reports", ":", "\n", "            ", "out", ".", "write", "(", "'\\n%s k=%s acc\\n'", "%", "(", "dataname", ",", "k", ")", ")", "\n", "out", ".", "write", "(", "acc", ")", "\n", "", "out", ".", "write", "(", "'\\n%s N400\\n'", "%", "dataname", ")", "\n", "out", ".", "write", "(", "n4", ")", "\n", "out", ".", "write", "(", "'\\n----\\n\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_aux_tests": [[546, 601], ["io.open", "run_diagnostics_bert.process_fk", "run_diagnostics_bert.run_fk_all", "out.write", "run_diagnostics_bert.run_fk_all", "out.write", "range", "out.write", "out.write", "out.write", "out.write", "out.write", "out.write", "out.write", "list", "out.write", "list", "io.open", "run_diagnostics_bert.process_rr", "run_diagnostics_bert.run_rr_all", "run_diagnostics_bert.process_rr", "run_diagnostics_bert.run_rr_all", "run_diagnostics_bert.process_rr", "run_diagnostics_bert.run_rr_all", "run_diagnostics_bert.process_rr", "run_diagnostics_bert.run_rr_all", "io.open", "run_diagnostics_bert.process_fischler", "run_diagnostics_bert.run_neg_all", "run_diagnostics_bert.process_nk", "run_diagnostics_bert.run_neg_all", "run_diagnostics_bert.process_fk", "run_diagnostics_bert.run_fk_all", "acclists_shuf.append", "run_diagnostics_bert.run_fk_all", "acclists_shufnw.append", "str", "str", "zip", "zip", "str", "str", "out.write", "out.write", "numpy.average", "numpy.std", "numpy.average", "numpy.std"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_fk", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_fk_all", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_fk_all", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_rr", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_rr_all", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_rr", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_rr_all", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_rr", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_rr_all", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_rr", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_rr_all", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_fischler", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_neg_all", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_nk", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_neg_all", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_fk", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_fk_all", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_fk_all"], ["", "", "def", "run_aux_tests", "(", "args", ",", "models", ",", "klist", ",", "bert", "=", "True", ")", ":", "\n", "    ", "acclists_shuf", "=", "[", "]", "\n", "acclists_shufnw", "=", "[", "]", "\n", "acclists", "=", "[", "]", "\n", "with", "open", "(", "args", ".", "resultsdir", "+", "'/results-cprag.txt'", ",", "'w'", ")", "as", "out", ":", "\n", "        ", "hldict", ",", "inputlist", ",", "_", ",", "inputlist_nw", ",", "_", ",", "tgtlist", "=", "process_fk", "(", "args", ".", "cprag_stim", ")", "\n", "_", ",", "_", ",", "outstring", "=", "run_fk_all", "(", "args", ",", "out", ",", "models", ",", "'orig'", ",", "klist", ",", "hldict", ",", "inputlist", ",", "tgtlist", ",", "bert", "=", "bert", ")", "\n", "out", ".", "write", "(", "outstring", ")", "\n", "_", ",", "_", ",", "outstring", "=", "run_fk_all", "(", "args", ",", "out", ",", "models", ",", "'trunc'", ",", "klist", ",", "hldict", ",", "inputlist_nw", ",", "tgtlist", ",", "bert", "=", "bert", ")", "\n", "out", ".", "write", "(", "outstring", ")", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "            ", "_", ",", "_", ",", "inputlist_shuf", ",", "_", ",", "inputlist_shufnw", ",", "_", "=", "process_fk", "(", "args", ".", "cprag_stim", ")", "\n", "acclist", ",", "acclist_names_shuf", ",", "_", "=", "run_fk_all", "(", "args", ",", "out", ",", "models", ",", "'shuf'", ",", "klist", ",", "hldict", ",", "inputlist_shuf", ",", "tgtlist", ",", "bert", "=", "bert", ")", "\n", "acclists_shuf", ".", "append", "(", "acclist", ")", "\n", "acclist", ",", "acclist_names_shufnw", ",", "_", "=", "run_fk_all", "(", "args", ",", "out", ",", "models", ",", "'shuftrunc'", ",", "klist", ",", "hldict", ",", "inputlist_shufnw", ",", "tgtlist", ",", "bert", "=", "bert", ")", "\n", "acclists_shufnw", ".", "append", "(", "acclist", ")", "\n", "", "out", ".", "write", "(", "'\\n\\nSHUF ACCLISTS'", ")", "\n", "out", ".", "write", "(", "str", "(", "acclist_names_shuf", ")", "+", "'\\n'", ")", "\n", "out", ".", "write", "(", "str", "(", "acclists_shuf", ")", ")", "\n", "out", ".", "write", "(", "'\\n\\nSHUF-TRUNC ACCLISTS'", ")", "\n", "out", ".", "write", "(", "str", "(", "acclist_names_shufnw", ")", "+", "'\\n'", ")", "\n", "out", ".", "write", "(", "str", "(", "acclists_shufnw", ")", ")", "\n", "\n", "out", ".", "write", "(", "'\\n\\nSHUF ACCURACIES\\n'", ")", "\n", "accs_by_modk", "=", "list", "(", "zip", "(", "*", "acclists_shuf", ")", ")", "\n", "i", "=", "0", "\n", "for", "modelname", ",", "_", ",", "_", "in", "models", ":", "\n", "            ", "for", "k", "in", "klist", ":", "\n", "                ", "this_accs", "=", "accs_by_modk", "[", "i", "]", "\n", "out", ".", "write", "(", "'%s k=%s: %s pm %s\\n'", "%", "(", "modelname", ",", "k", ",", "np", ".", "average", "(", "this_accs", ")", ",", "np", ".", "std", "(", "this_accs", ")", ")", ")", "\n", "i", "+=", "1", "\n", "", "", "out", ".", "write", "(", "'\\n\\nSHUF-TRUNC ACCURACIES\\n'", ")", "\n", "accs_by_modk", "=", "list", "(", "zip", "(", "*", "acclists_shufnw", ")", ")", "\n", "i", "=", "0", "\n", "for", "modelname", ",", "_", ",", "_", "in", "models", ":", "\n", "            ", "for", "k", "in", "klist", ":", "\n", "                ", "this_accs", "=", "accs_by_modk", "[", "i", "]", "\n", "out", ".", "write", "(", "'%s k=%s: %s pm %s\\n'", "%", "(", "modelname", ",", "k", ",", "np", ".", "average", "(", "this_accs", ")", ",", "np", ".", "std", "(", "this_accs", ")", ")", ")", "\n", "i", "+=", "1", "\n", "\n", "", "", "", "with", "open", "(", "args", ".", "resultsdir", "+", "'/results-role.txt'", ",", "'w'", ")", "as", "out", ":", "\n", "        ", "clozedict", ",", "inputlist", ",", "tgtlist", ",", "clozelist", "=", "process_rr", "(", "args", ".", "role_stim", ",", "gen_obj", "=", "False", ",", "gen_subj", "=", "False", ")", "\n", "run_rr_all", "(", "args", ",", "out", ",", "models", ",", "'orig'", ",", "klist", ",", "clozedict", ",", "inputlist", ",", "tgtlist", ",", "clozelist", ",", "bert", "=", "bert", ")", "\n", "clozedict", ",", "inputlist", ",", "tgtlist", ",", "clozelist", "=", "process_rr", "(", "args", ".", "role_stim", ",", "gen_obj", "=", "True", ",", "gen_subj", "=", "False", ")", "\n", "run_rr_all", "(", "args", ",", "out", ",", "models", ",", "'-obj'", ",", "klist", ",", "clozedict", ",", "inputlist", ",", "tgtlist", ",", "clozelist", ",", "bert", "=", "bert", ")", "\n", "clozedict", ",", "inputlist", ",", "tgtlist", ",", "clozelist", "=", "process_rr", "(", "args", ".", "role_stim", ",", "gen_obj", "=", "False", ",", "gen_subj", "=", "True", ")", "\n", "run_rr_all", "(", "args", ",", "out", ",", "models", ",", "'-subj'", ",", "klist", ",", "clozedict", ",", "inputlist", ",", "tgtlist", ",", "clozelist", ",", "bert", "=", "bert", ")", "\n", "clozedict", ",", "inputlist", ",", "tgtlist", ",", "clozelist", "=", "process_rr", "(", "args", ".", "role_stim", ",", "gen_obj", "=", "True", ",", "gen_subj", "=", "True", ")", "\n", "run_rr_all", "(", "args", ",", "out", ",", "models", ",", "'-obsub'", ",", "klist", ",", "clozedict", ",", "inputlist", ",", "tgtlist", ",", "clozelist", ",", "bert", "=", "bert", ")", "\n", "\n", "", "with", "open", "(", "args", ".", "resultsdir", "+", "'/results-neg.txt'", ",", "'w'", ")", "as", "out", ":", "\n", "        ", "inputlist", ",", "negdict", ",", "tgtlist", "=", "process_fischler", "(", "args", ".", "negsimp_stim", ")", "\n", "run_neg_all", "(", "args", ",", "out", ",", "models", ",", "klist", ",", "inputlist", ",", "negdict", ",", "tgtlist", ",", "'FISCHLER'", ",", "'FS'", ",", "bert", "=", "bert", ")", "\n", "inputlist", ",", "negdict", ",", "tgtlist", "=", "process_nk", "(", "args", ".", "negnat_stim", ")", "\n", "run_neg_all", "(", "args", ",", "out", ",", "models", ",", "klist", ",", "inputlist", ",", "negdict", ",", "tgtlist", ",", "'NIEUWLAND'", ",", "'NK'", ",", "bert", "=", "bert", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_three_orig": [[603, 618], ["io.open", "run_diagnostics_bert.process_fischler", "run_diagnostics_bert.run_neg_all", "run_diagnostics_bert.process_nk", "run_diagnostics_bert.run_neg_all", "io.open", "run_diagnostics_bert.process_rr", "run_diagnostics_bert.run_rr_all", "io.open", "run_diagnostics_bert.process_fk", "run_diagnostics_bert.run_fk_all", "out.write"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_fischler", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_neg_all", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_nk", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_neg_all", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_rr", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_rr_all", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.process_fk", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.run_diagnostics_bert.run_fk_all"], ["", "", "def", "run_three_orig", "(", "args", ",", "models", ",", "klist", ",", "bert", "=", "True", ")", ":", "\n", "    ", "with", "open", "(", "args", ".", "resultsdir", "+", "'/results-neg.txt'", ",", "'w'", ")", "as", "out", ":", "\n", "        ", "inputlist", ",", "negdict", ",", "tgtlist", "=", "process_fischler", "(", "args", ".", "negsimp_stim", ")", "\n", "run_neg_all", "(", "args", ",", "out", ",", "models", ",", "klist", ",", "inputlist", ",", "negdict", ",", "tgtlist", ",", "'FISCHLER'", ",", "'FS'", ",", "bert", "=", "bert", ")", "\n", "inputlist", ",", "negdict", ",", "tgtlist", "=", "process_nk", "(", "args", ".", "negnat_stim", ")", "\n", "run_neg_all", "(", "args", ",", "out", ",", "models", ",", "klist", ",", "inputlist", ",", "negdict", ",", "tgtlist", ",", "'NIEUWLAND'", ",", "'NK'", ",", "bert", "=", "bert", ")", "\n", "\n", "", "with", "open", "(", "args", ".", "resultsdir", "+", "'/results-role.txt'", ",", "'w'", ")", "as", "out", ":", "\n", "        ", "clozedict", ",", "inputlist", ",", "tgtlist", ",", "clozelist", "=", "process_rr", "(", "args", ".", "role_stim", ",", "gen_obj", "=", "False", ",", "gen_subj", "=", "False", ")", "\n", "run_rr_all", "(", "args", ",", "out", ",", "models", ",", "'orig'", ",", "klist", ",", "clozedict", ",", "inputlist", ",", "tgtlist", ",", "clozelist", ",", "bert", "=", "bert", ")", "\n", "\n", "", "with", "open", "(", "args", ".", "resultsdir", "+", "'/results-cprag.txt'", ",", "'w'", ")", "as", "out", ":", "\n", "        ", "hldict", ",", "inputlist", ",", "_", ",", "_", ",", "_", ",", "tgtlist", "=", "process_fk", "(", "args", ".", "cprag_stim", ")", "\n", "_", ",", "_", ",", "outstring", "=", "run_fk_all", "(", "args", ",", "out", ",", "models", ",", "'orig'", ",", "klist", ",", "hldict", ",", "inputlist", ",", "tgtlist", ",", "bert", "=", "bert", ")", "\n", "out", ".", "write", "(", "outstring", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.prediction_accuracy_tests.test_cprag_acc": [[14, 38], ["enumerate", "proc_datasets.get_acc", "used.append", "tot_score.append", "correct.append", "sum", "len", "candidate.strip"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc"], ["def", "test_cprag_acc", "(", "dataset_ref", ",", "word_preds", ",", "k", "=", "5", ")", ":", "\n", "    ", "tot_score", "=", "[", "]", "\n", "correct", "=", "[", "]", "\n", "used", "=", "[", "]", "\n", "for", "i", ",", "pr", "in", "enumerate", "(", "word_preds", ")", ":", "\n", "        ", "sent", "=", "dataset_ref", "[", "i", "]", "[", "'sent'", "]", "\n", "score", "=", "0", "\n", "if", "sent", "in", "used", ":", "continue", "\n", "used", ".", "append", "(", "sent", ")", "\n", "for", "candidate", "in", "pr", ":", "\n", "            ", "if", "candidate", ".", "strip", "(", ")", "in", "dataset_ref", "[", "i", "]", "[", "'exp'", "]", ":", "\n", "                ", "score", "=", "1", "\n", "", "", "if", "score", "==", "1", ":", "\n", "            ", "ctup", "=", "(", "sent", ",", "dataset_ref", "[", "i", "]", "[", "'exp'", "]", ",", "pr", ")", "\n", "correct", ".", "append", "(", "ctup", ")", "\n", "", "tot_score", ".", "append", "(", "score", ")", "\n", "", "tot_acc", "=", "get_acc", "(", "tot_score", ")", "\n", "report", "=", "'\\nPrediction accuracies:\\n'", "\n", "report", "+=", "'EXPECTED TARGET in TOP %s predictions: %s (%s/%s)\\n\\n'", "%", "(", "k", ",", "tot_acc", ",", "sum", "(", "tot_score", ")", ",", "len", "(", "tot_score", ")", ")", "\n", "report", "+=", "'ITEMS PREDICTED CORRECTLY:\\n\\n'", "\n", "for", "sent", ",", "exp", ",", "pred", "in", "correct", ":", "\n", "        ", "report", "+=", "sent", "\n", "report", "+=", "'\\n   EXPECTED: %s | PREDICTED: %s\\n'", "%", "(", "','", ".", "join", "(", "exp", ")", ",", "','", ".", "join", "(", "pred", ")", ")", "\n", "", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.prediction_accuracy_tests.test_role_acc": [[39, 80], ["numpy.average", "numpy.percentile", "numpy.percentile", "numpy.percentile", "max", "enumerate", "tot_score.append", "correct.append", "correct_by_quartile[].append", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "len", "proc_datasets.get_acc", "len", "proc_datasets.get_acc", "len", "proc_datasets.get_acc", "len", "candidate.strip", "correct_by_quartile[].append", "correct_by_quartile[].append", "correct_by_quartile[].append", "e.split"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc"], ["", "def", "test_role_acc", "(", "dataset_ref", ",", "word_preds", ",", "k", "=", "5", ")", ":", "\n", "    ", "dataset_dict", ",", "clozelist", "=", "dataset_ref", "\n", "tot_score", "=", "[", "]", "\n", "correct", "=", "[", "]", "\n", "correct_by_quartile", "=", "{", "'q1_corr'", ":", "[", "]", ",", "'q2_corr'", ":", "[", "]", ",", "'q3_corr'", ":", "[", "]", ",", "'q4_corr'", ":", "[", "]", "}", "\n", "avgcloze", "=", "np", ".", "average", "(", "clozelist", ")", "\n", "q1", "=", "np", ".", "percentile", "(", "clozelist", ",", "25", ")", "\n", "q3", "=", "np", ".", "percentile", "(", "clozelist", ",", "75", ")", "\n", "q2", "=", "np", ".", "percentile", "(", "clozelist", ",", "50", ")", "\n", "q4", "=", "max", "(", "clozelist", ")", "\n", "for", "i", ",", "pred", "in", "enumerate", "(", "word_preds", ")", ":", "\n", "        ", "sent", "=", "dataset_dict", "[", "i", "]", "[", "'sent'", "]", "\n", "score", "=", "0", "\n", "itm", "=", "dataset_dict", "[", "i", "]", "[", "'item'", "]", "\n", "cond", "=", "dataset_dict", "[", "i", "]", "[", "'cond'", "]", "\n", "for", "candidate", "in", "pred", ":", "\n", "            ", "if", "candidate", ".", "strip", "(", ")", "in", "[", "e", ".", "split", "(", ")", "[", "0", "]", "for", "e", "in", "dataset_dict", "[", "i", "]", "[", "'exp'", "]", "]", ":", "\n", "                ", "score", "=", "1", "\n", "", "", "if", "score", "==", "1", ":", "\n", "            ", "ctup", "=", "(", "sent", ",", "dataset_dict", "[", "i", "]", "[", "'exp'", "]", ",", "pred", ",", "dataset_dict", "[", "i", "]", "[", "'maxcloze'", "]", ")", "\n", "correct", ".", "append", "(", "ctup", ")", "\n", "", "tot_score", ".", "append", "(", "score", ")", "\n", "if", "dataset_dict", "[", "i", "]", "[", "'maxcloze'", "]", "<=", "q1", ":", "\n", "            ", "correct_by_quartile", "[", "'q1_corr'", "]", ".", "append", "(", "score", ")", "\n", "", "elif", "dataset_dict", "[", "i", "]", "[", "'maxcloze'", "]", "<=", "q2", ":", "\n", "            ", "correct_by_quartile", "[", "'q2_corr'", "]", ".", "append", "(", "score", ")", "\n", "", "elif", "dataset_dict", "[", "i", "]", "[", "'maxcloze'", "]", "<=", "q3", ":", "\n", "            ", "correct_by_quartile", "[", "'q3_corr'", "]", ".", "append", "(", "score", ")", "\n", "", "else", ":", "\n", "            ", "correct_by_quartile", "[", "'q4_corr'", "]", ".", "append", "(", "score", ")", "\n", "", "", "report", "=", "'\\nPrediction accuracies:\\n'", "\n", "report", "+=", "'EXPECTED WORD in top %s predictions: %s (%s/%s)\\n'", "%", "(", "k", ",", "get_acc", "(", "tot_score", ")", ",", "sum", "(", "tot_score", ")", ",", "len", "(", "tot_score", ")", ")", "\n", "report", "+=", "'  for cloze quartile 1: %s (%s upper, %s items)\\n'", "%", "(", "get_acc", "(", "correct_by_quartile", "[", "'q1_corr'", "]", ")", ",", "q1", ",", "len", "(", "correct_by_quartile", "[", "'q1_corr'", "]", ")", ")", "\n", "report", "+=", "'  for cloze quartile 2: %s (%s upper, %s items)\\n'", "%", "(", "get_acc", "(", "correct_by_quartile", "[", "'q2_corr'", "]", ")", ",", "q2", ",", "len", "(", "correct_by_quartile", "[", "'q2_corr'", "]", ")", ")", "\n", "report", "+=", "'  for cloze quartile 3: %s (%s upper, %s items)\\n'", "%", "(", "get_acc", "(", "correct_by_quartile", "[", "'q3_corr'", "]", ")", ",", "q3", ",", "len", "(", "correct_by_quartile", "[", "'q3_corr'", "]", ")", ")", "\n", "report", "+=", "'  for cloze quartile 4: %s (%s upper, %s items)\\n\\n'", "%", "(", "get_acc", "(", "correct_by_quartile", "[", "'q4_corr'", "]", ")", ",", "q4", ",", "len", "(", "correct_by_quartile", "[", "'q4_corr'", "]", ")", ")", "\n", "\n", "report", "+=", "'ITEMS PREDICTED CORRECTLY:\\n\\n'", "\n", "for", "sent", ",", "exp", ",", "pred", ",", "mc", "in", "correct", ":", "\n", "        ", "report", "+=", "'%s\\n   EXPECTED: %s | PREDICTED: %s\\n'", "%", "(", "sent", ",", "','", ".", "join", "(", "exp", ")", ",", "','", ".", "join", "(", "pred", ")", ")", "\n", "", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.prediction_accuracy_tests.test_neg_acc": [[81, 105], ["enumerate", "used.append", "correct.append", "tot_score.append", "proc_datasets.get_acc", "sum", "len", "candidate.strip"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc"], ["", "def", "test_neg_acc", "(", "dataset_ref", ",", "word_preds", ",", "k", "=", "5", ")", ":", "\n", "    ", "correct", "=", "[", "]", "\n", "tot_score", "=", "[", "]", "\n", "used", "=", "[", "]", "\n", "for", "i", ",", "pred", "in", "enumerate", "(", "word_preds", ")", ":", "\n", "        ", "score", "=", "0", "\n", "sent", "=", "dataset_ref", "[", "i", "]", "[", "'sent'", "]", "\n", "if", "sent", "in", "used", ":", "continue", "\n", "used", ".", "append", "(", "sent", ")", "\n", "for", "candidate", "in", "pred", ":", "\n", "            ", "if", "candidate", ".", "strip", "(", ")", "in", "dataset_ref", "[", "i", "]", "[", "'exp'", "]", ":", "\n", "                ", "score", "=", "1", "\n", "", "", "if", "score", "==", "1", "and", "dataset_ref", "[", "i", "]", "[", "'cond'", "]", "==", "'TA'", ":", "\n", "            ", "ctup", "=", "(", "sent", ",", "dataset_ref", "[", "i", "]", "[", "'exp'", "]", ",", "pred", ",", "dataset_ref", "[", "i", "]", "[", "'cond'", "]", ")", "\n", "correct", ".", "append", "(", "ctup", ")", "\n", "", "if", "dataset_ref", "[", "i", "]", "[", "'cond'", "]", "==", "'TA'", ":", "\n", "            ", "tot_score", ".", "append", "(", "score", ")", "\n", "", "", "report", "=", "\"\\nPrediction 'accuracy' (affirmative contexts only):\\n\"", "\n", "report", "+=", "'TRUE COMPLETION in top %s predictions: %s (%s/%s)\\n\\n'", "%", "(", "k", ",", "get_acc", "(", "tot_score", ")", ",", "sum", "(", "tot_score", ")", ",", "len", "(", "tot_score", ")", ")", "\n", "\n", "report", "+=", "'ITEMS PREDICTED CORRECTLY:\\n\\n'", "\n", "for", "sent", ",", "exp", ",", "pred", ",", "cond", "in", "correct", ":", "\n", "        ", "report", "+=", "'%s\\n   EXPECTED: %s | PREDICTED: %s\\n'", "%", "(", "sent", ",", "','", ".", "join", "(", "exp", ")", ",", "','", ".", "join", "(", "pred", ")", ")", "\n", "", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.process_cprag": [[5, 36], ["io.open", "line.strip().split", "len", "tgtlist.append", "line.strip", "line.strip", "inputlist.append", "inputlist.append"], "function", ["None"], ["def", "process_cprag", "(", "tsvfile", ",", "mask_tok", "=", "True", ")", ":", "\n", "    ", "hldict", "=", "{", "}", "\n", "inputlist", "=", "[", "]", "\n", "inputlist_shuf", "=", "[", "]", "\n", "inputlist_nw", "=", "[", "]", "\n", "inputlist_shufnw", "=", "[", "]", "\n", "tgtlist", "=", "[", "]", "\n", "cleancsv", "=", "[", "]", "\n", "with", "open", "(", "tsvfile", ")", "as", "f", ":", "\n", "        ", "i", "=", "0", "\n", "for", "line", "in", "f", ":", "\n", "            ", "if", "len", "(", "line", ".", "strip", "(", "'\\t'", ")", ")", "<", "2", ":", "continue", "\n", "it", ",", "sent1", ",", "sent2", ",", "exp", ",", "wc", ",", "bc", ",", "constraint", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "if", "it", "==", "'item'", ":", "continue", "\n", "context", "=", "' '", ".", "join", "(", "[", "sent1", ",", "sent2", "]", ")", "\n", "for", "tgt", ",", "cond", "in", "(", "(", "exp", ",", "'exp'", ")", ",", "(", "wc", ",", "'wc'", ")", ",", "(", "bc", ",", "'bc'", ")", ")", ":", "\n", "                ", "hldict", "[", "i", "]", "=", "{", "}", "\n", "if", "mask_tok", ":", "\n", "                    ", "inputlist", ".", "append", "(", "context", "+", "' [MASK]'", ")", "\n", "", "else", ":", "\n", "                    ", "inputlist", ".", "append", "(", "context", ")", "\n", "", "tgtlist", ".", "append", "(", "tgt", ")", "\n", "hldict", "[", "i", "]", "[", "'constraint'", "]", "=", "constraint", "\n", "hldict", "[", "i", "]", "[", "'tgt'", "]", "=", "tgt", "\n", "hldict", "[", "i", "]", "[", "'sent'", "]", "=", "{", "}", "\n", "hldict", "[", "i", "]", "[", "'sent'", "]", "=", "context", "\n", "hldict", "[", "i", "]", "[", "'item'", "]", "=", "it", "\n", "hldict", "[", "i", "]", "[", "'exp'", "]", "=", "[", "exp", "]", "\n", "hldict", "[", "i", "]", "[", "'cond'", "]", "=", "cond", "\n", "i", "+=", "1", "\n", "", "", "", "return", "inputlist", ",", "tgtlist", ",", "hldict", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.process_role": [[37, 84], ["io.open", "line.strip().split", "item.split", "linesplit[].split", "float", "float", "float", "inputlist.append", "tgtlist.append", "clozelist.append", "linesplit[].strip().split", "re.sub", "re.sub", "line.strip", "len", "linesplit[].strip"], "function", ["None"], ["", "def", "process_role", "(", "tsvfile", ",", "mask_tok", "=", "True", ",", "gen_obj", "=", "False", ",", "gen_subj", "=", "False", ")", ":", "\n", "    ", "inputlist", "=", "[", "]", "\n", "tgtlist", "=", "[", "]", "\n", "clozedict", "=", "{", "}", "\n", "clozelist", "=", "[", "]", "\n", "i", "=", "0", "\n", "with", "open", "(", "tsvfile", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "linesplit", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "item", "=", "linesplit", "[", "0", "]", "\n", "if", "item", "==", "'item'", "or", "len", "(", "linesplit", ")", "<", "1", ":", "\n", "                ", "continue", "\n", "", "itemnum", ",", "condition", "=", "item", ".", "split", "(", "'-'", ")", "\n", "sent", "=", "linesplit", "[", "1", "]", "\n", "exp", "=", "linesplit", "[", "2", "]", ".", "split", "(", "'|'", ")", "\n", "maxcloze", "=", "float", "(", "linesplit", "[", "3", "]", ")", "\n", "tgt", "=", "linesplit", "[", "4", "]", ".", "strip", "(", ")", ".", "split", "(", ")", "[", "0", "]", "\n", "tgtcloze", "=", "float", "(", "linesplit", "[", "5", "]", ")", "\n", "tgtcloze_strict", "=", "float", "(", "linesplit", "[", "6", "]", ")", "\n", "if", "gen_obj", ":", "\n", "                ", "sent", "=", "re", ".", "sub", "(", "'which .* the'", ",", "'which one the'", ",", "sent", ")", "\n", "", "if", "gen_subj", ":", "\n", "                ", "sent", "=", "re", ".", "sub", "(", "'which (.*) the .* had'", ",", "'which \\g<1> the other had'", ",", "sent", ")", "\n", "", "clozedict", "[", "i", "]", "=", "{", "}", "\n", "if", "mask_tok", ":", "\n", "                ", "context", "=", "sent", "+", "' [MASK]'", "\n", "", "else", ":", "\n", "                ", "context", "=", "sent", "\n", "", "if", "context", "in", "inputlist", ":", "\n", "                ", "for", "item", "in", "clozedict", ":", "\n", "                    ", "if", "clozedict", "[", "item", "]", "[", "'sent'", "]", "==", "context", ":", "\n", "                        ", "clozedict", "[", "i", "]", "[", "'maxcloze'", "]", "=", "maxcloze", "\n", "break", "\n", "", "", "", "else", ":", "\n", "                ", "clozedict", "[", "i", "]", "[", "'maxcloze'", "]", "=", "maxcloze", "\n", "", "inputlist", ".", "append", "(", "context", ")", "\n", "tgtlist", ".", "append", "(", "tgt", ")", "\n", "clozedict", "[", "i", "]", "[", "'sent'", "]", "=", "context", "\n", "clozedict", "[", "i", "]", "[", "'tgt'", "]", "=", "tgt", "\n", "clozedict", "[", "i", "]", "[", "'cond'", "]", "=", "condition", "\n", "clozedict", "[", "i", "]", "[", "'item'", "]", "=", "itemnum", "\n", "clozedict", "[", "i", "]", "[", "'tgtcloze'", "]", "=", "tgtcloze", "\n", "clozedict", "[", "i", "]", "[", "'tgtcloze_strict'", "]", "=", "tgtcloze_strict", "\n", "clozedict", "[", "i", "]", "[", "'exp'", "]", "=", "exp", "\n", "clozelist", ".", "append", "(", "maxcloze", ")", "\n", "i", "+=", "1", "\n", "", "", "return", "inputlist", ",", "tgtlist", ",", "(", "clozedict", ",", "clozelist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.process_negsimp": [[85, 117], ["io.open", "re.sub", "re.sub", "e.strip", "re.match", "inputlist.append", "tgtlist.append", "line.strip().split", "line.strip"], "function", ["None"], ["", "def", "process_negsimp", "(", "tsvfile", ",", "mask_tok", "=", "True", ")", ":", "\n", "    ", "nkdict", "=", "{", "}", "\n", "inputlist", "=", "[", "]", "\n", "tgtlist", "=", "[", "]", "\n", "i", "=", "0", "\n", "csvclean", "=", "[", "]", "\n", "with", "open", "(", "tsvfile", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "it", ",", "affsent", ",", "negsent", ",", "afftgt", ",", "negtgt", "=", "[", "e", ".", "strip", "(", ")", "for", "e", "in", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "]", "\n", "affsent", "=", "re", ".", "sub", "(", "' \\(.+\\)'", ",", "''", ",", "affsent", ")", "\n", "negsent", "=", "re", ".", "sub", "(", "' \\(.+\\)'", ",", "''", ",", "negsent", ")", "\n", "if", "it", "==", "'item'", ":", "continue", "\n", "for", "sent", ",", "tgt", ",", "cond", "in", "[", "(", "affsent", ",", "afftgt", ",", "'TA'", ")", ",", "(", "negsent", ",", "afftgt", ",", "'FN'", ")", ",", "(", "affsent", ",", "negtgt", ",", "'FA'", ")", ",", "(", "negsent", ",", "negtgt", ",", "'TN'", ")", "]", ":", "\n", "                ", "nkdict", "[", "i", "]", "=", "{", "}", "\n", "if", "re", ".", "match", "(", "'[aeiou]'", ",", "tgt", ")", ":", "det", "=", "'an'", "\n", "else", ":", "det", "=", "'a'", "\n", "if", "mask_tok", ":", "\n", "                    ", "context", "=", "' '", ".", "join", "(", "[", "sent", ",", "det", ",", "'[MASK]'", "]", ")", "\n", "", "else", ":", "\n", "                    ", "context", "=", "' '", ".", "join", "(", "[", "sent", ",", "det", "]", ")", "\n", "", "nkdict", "[", "i", "]", "[", "'sent'", "]", "=", "context", "\n", "nkdict", "[", "i", "]", "[", "'tgt'", "]", "=", "tgt", "\n", "nkdict", "[", "i", "]", "[", "'item'", "]", "=", "it", "\n", "nkdict", "[", "i", "]", "[", "'cond'", "]", "=", "cond", "\n", "if", "cond", "in", "(", "'TA'", ",", "'FA'", ")", ":", "\n", "                    ", "nkdict", "[", "i", "]", "[", "'exp'", "]", "=", "[", "afftgt", "]", "\n", "", "else", ":", "\n", "                    ", "nkdict", "[", "i", "]", "[", "'exp'", "]", "=", "[", "negtgt", "]", "\n", "", "inputlist", ".", "append", "(", "context", ")", "\n", "tgtlist", ".", "append", "(", "tgt", ")", "\n", "i", "+=", "1", "\n", "", "", "", "return", "inputlist", ",", "tgtlist", ",", "nkdict", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.process_negnat": [[118, 146], ["io.open", "e.strip", "inputlist.append", "tgtlist.append", "line.strip().split", "line.strip"], "function", ["None"], ["", "def", "process_negnat", "(", "tsvfile", ",", "mask_tok", "=", "True", ")", ":", "\n", "    ", "nkdict", "=", "{", "}", "\n", "inputlist", "=", "[", "]", "\n", "tgtlist", "=", "[", "]", "\n", "i", "=", "0", "\n", "with", "open", "(", "tsvfile", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "it", ",", "affsent", ",", "negsent", ",", "afftgt", ",", "negtgt", ",", "lic", "=", "[", "e", ".", "strip", "(", ")", "for", "e", "in", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "]", "\n", "if", "it", "==", "'item'", ":", "continue", "\n", "for", "sent", ",", "tgt", ",", "cond", "in", "[", "(", "affsent", ",", "afftgt", ",", "'TA'", ")", ",", "(", "negsent", ",", "afftgt", ",", "'FN'", ")", ",", "(", "affsent", ",", "negtgt", ",", "'FA'", ")", ",", "(", "negsent", ",", "negtgt", ",", "'TN'", ")", "]", ":", "\n", "                ", "nkdict", "[", "i", "]", "=", "{", "}", "\n", "if", "mask_tok", ":", "\n", "                    ", "context", "=", "sent", "+", "' [MASK]'", "\n", "", "else", ":", "\n", "                    ", "context", "=", "sent", "\n", "", "nkdict", "[", "i", "]", "[", "'sent'", "]", "=", "context", "\n", "nkdict", "[", "i", "]", "[", "'tgt'", "]", "=", "tgt", "\n", "nkdict", "[", "i", "]", "[", "'item'", "]", "=", "it", "\n", "nkdict", "[", "i", "]", "[", "'cond'", "]", "=", "cond", "\n", "nkdict", "[", "i", "]", "[", "'licensing'", "]", "=", "lic", "\n", "if", "cond", "in", "(", "'TA'", ",", "'FA'", ")", ":", "\n", "                    ", "nkdict", "[", "i", "]", "[", "'exp'", "]", "=", "[", "afftgt", "]", "\n", "", "else", ":", "\n", "                    ", "nkdict", "[", "i", "]", "[", "'exp'", "]", "=", "[", "negtgt", "]", "\n", "", "inputlist", ".", "append", "(", "context", ")", "\n", "tgtlist", ".", "append", "(", "tgt", ")", "\n", "i", "+=", "1", "\n", "", "", "", "return", "inputlist", ",", "tgtlist", ",", "nkdict", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc": [[147, 153], ["len", "float", "len", "sum"], "function", ["None"], ["", "def", "get_acc", "(", "scorelist", ")", ":", "\n", "    ", "if", "len", "(", "scorelist", ")", "==", "0", ":", "\n", "        ", "acc", "=", "0", "\n", "", "else", ":", "\n", "        ", "acc", "=", "float", "(", "sum", "(", "scorelist", ")", ")", "/", "len", "(", "scorelist", ")", "\n", "", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.sensitivity_tests.convert_to_experiment_grouping": [[11, 23], ["None"], "function", ["None"], ["def", "convert_to_experiment_grouping", "(", "datadict", ")", ":", "\n", "    ", "conddict", "=", "{", "}", "\n", "for", "k", "in", "datadict", ":", "\n", "        ", "it", "=", "datadict", "[", "k", "]", "[", "'item'", "]", "\n", "co", "=", "datadict", "[", "k", "]", "[", "'cond'", "]", "\n", "if", "it", "not", "in", "conddict", ":", "\n", "            ", "conddict", "[", "it", "]", "=", "{", "}", "\n", "", "conddict", "[", "it", "]", "[", "co", "]", "=", "{", "}", "\n", "for", "keycat", "in", "[", "'sent'", ",", "'tgt'", ",", "'tgtcloze'", ",", "'constraint'", ",", "'licensing'", ",", "'maxcloze'", ",", "'tgtprob'", ",", "'toppreds'", ",", "'topprobs'", "]", ":", "\n", "            ", "if", "keycat", "in", "datadict", "[", "k", "]", ":", "\n", "                ", "conddict", "[", "it", "]", "[", "co", "]", "[", "keycat", "]", "=", "datadict", "[", "k", "]", "[", "keycat", "]", "\n", "", "", "", "return", "conddict", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.sensitivity_tests.cprag_sensitivity_test": [[24, 56], ["enumerate", "sensitivity_tests.convert_to_experiment_grouping", "allprobs[].append", "exp_top[].append", "exp_top[].append", "exp_top_thresh[].append", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "exp_top_thresh[].append", "exp_top_thresh[].append", "abs", "abs"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.sensitivity_tests.convert_to_experiment_grouping", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc"], ["", "def", "cprag_sensitivity_test", "(", "dataset_ref", ",", "target_probs", ")", ":", "\n", "    ", "for", "i", ",", "prob", "in", "enumerate", "(", "target_probs", ")", ":", "\n", "        ", "dataset_ref", "[", "i", "]", "[", "'tgtprob'", "]", "=", "prob", "\n", "", "conddict", "=", "convert_to_experiment_grouping", "(", "dataset_ref", ")", "\n", "thresh", "=", "0.01", "\n", "exp_top", "=", "{", "'H'", ":", "[", "]", ",", "'L'", ":", "[", "]", "}", "\n", "exp_top_thresh", "=", "{", "'H'", ":", "[", "]", ",", "'L'", ":", "[", "]", "}", "\n", "allprobs", "=", "{", "'H'", ":", "[", "]", ",", "'L'", ":", "[", "]", "}", "\n", "for", "it", "in", "conddict", ":", "\n", "        ", "exp_prob", ",", "wc_prob", ",", "bc_prob", "=", "[", "conddict", "[", "it", "]", "[", "cont", "]", "[", "'tgtprob'", "]", "for", "cont", "in", "[", "'exp'", ",", "'wc'", ",", "'bc'", "]", "]", "\n", "cons", "=", "conddict", "[", "it", "]", "[", "'exp'", "]", "[", "'constraint'", "]", "\n", "allprobs", "[", "cons", "]", ".", "append", "(", "(", "exp_prob", ",", "wc_prob", ",", "bc_prob", ")", ")", "\n", "if", "(", "exp_prob", ">", "wc_prob", ")", "and", "(", "exp_prob", ">", "bc_prob", ")", ":", "\n", "            ", "exp_top", "[", "cons", "]", ".", "append", "(", "1", ")", "\n", "if", "abs", "(", "exp_prob", "-", "wc_prob", ")", ">", "thresh", "and", "abs", "(", "exp_prob", "-", "bc_prob", ")", ">", "thresh", ":", "\n", "                ", "exp_top_thresh", "[", "cons", "]", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                ", "exp_top_thresh", "[", "cons", "]", ".", "append", "(", "0", ")", "\n", "", "", "else", ":", "\n", "            ", "exp_top", "[", "cons", "]", ".", "append", "(", "0", ")", "\n", "exp_top_thresh", "[", "cons", "]", ".", "append", "(", "0", ")", "\n", "\n", "", "", "report", "=", "'\\nSensitivity results:\\n\\n'", "\n", "\n", "report", "+=", "'Expected word more probable than two inappropriate targets: %s (%s/%s)\\n'", "%", "(", "get_acc", "(", "exp_top", "[", "'H'", "]", "+", "exp_top", "[", "'L'", "]", ")", ",", "sum", "(", "exp_top", "[", "'H'", "]", "+", "exp_top", "[", "'L'", "]", ")", ",", "len", "(", "exp_top", "[", "'H'", "]", "+", "exp_top", "[", "'L'", "]", ")", ")", "\n", "report", "+=", "'  for high-constraint items: %s (%s/%s)\\n'", "%", "(", "get_acc", "(", "exp_top", "[", "'H'", "]", ")", ",", "sum", "(", "exp_top", "[", "'H'", "]", ")", ",", "len", "(", "exp_top", "[", "'H'", "]", ")", ")", "\n", "report", "+=", "'  for low-constraint items: %s (%s/%s)\\n\\n'", "%", "(", "get_acc", "(", "exp_top", "[", "'L'", "]", ")", ",", "sum", "(", "exp_top", "[", "'L'", "]", ")", ",", "len", "(", "exp_top", "[", "'L'", "]", ")", ")", "\n", "report", "+=", "'Expected word more probable than two inappropriate targets -- difference threshold %s: %s (%s/%s)\\n'", "%", "(", "thresh", ",", "get_acc", "(", "exp_top_thresh", "[", "'H'", "]", "+", "exp_top_thresh", "[", "'L'", "]", ")", ",", "sum", "(", "exp_top_thresh", "[", "'H'", "]", "+", "exp_top_thresh", "[", "'L'", "]", ")", ",", "len", "(", "exp_top_thresh", "[", "'H'", "]", "+", "exp_top_thresh", "[", "'L'", "]", ")", ")", "\n", "report", "+=", "'  for high-constraint items: %s (%s/%s)\\n'", "%", "(", "get_acc", "(", "exp_top_thresh", "[", "'H'", "]", ")", ",", "sum", "(", "exp_top_thresh", "[", "'H'", "]", ")", ",", "len", "(", "exp_top_thresh", "[", "'H'", "]", ")", ")", "\n", "report", "+=", "'  for low-constraint items: %s (%s/%s)\\n'", "%", "(", "get_acc", "(", "exp_top_thresh", "[", "'L'", "]", ")", ",", "sum", "(", "exp_top_thresh", "[", "'L'", "]", ")", ",", "len", "(", "exp_top_thresh", "[", "'L'", "]", ")", ")", "\n", "\n", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.sensitivity_tests.role_sensitivity_test": [[57, 90], ["enumerate", "sensitivity_tests.convert_to_experiment_grouping", "probpairs.append", "clozepairs.append", "numpy.average", "numpy.average", "good_top.append", "good_top.append", "good_top_thresh.append", "good_top_thresh.append", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "abs"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.sensitivity_tests.convert_to_experiment_grouping", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc"], ["", "def", "role_sensitivity_test", "(", "dataset_ref", ",", "target_probs", ")", ":", "\n", "    ", "dataset_dict", ",", "clozelist", "=", "dataset_ref", "\n", "for", "i", ",", "prob", "in", "enumerate", "(", "target_probs", ")", ":", "\n", "        ", "dataset_dict", "[", "i", "]", "[", "'tgtprob'", "]", "=", "prob", "\n", "", "conddict", "=", "convert_to_experiment_grouping", "(", "dataset_dict", ")", "\n", "thresh", "=", "0.01", "\n", "good_top", "=", "[", "]", "\n", "good_top_thresh", "=", "[", "]", "\n", "probpairs", "=", "[", "]", "\n", "clozepairs", "=", "[", "]", "\n", "for", "it", "in", "conddict", ":", "\n", "        ", "a_prob", ",", "b_prob", "=", "(", "conddict", "[", "it", "]", "[", "'a'", "]", "[", "'tgtprob'", "]", ",", "conddict", "[", "it", "]", "[", "'b'", "]", "[", "'tgtprob'", "]", ")", "\n", "if", "(", "a_prob", ">", "b_prob", ")", ":", "\n", "            ", "good_top", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "good_top", ".", "append", "(", "0", ")", "\n", "", "if", "(", "a_prob", ">", "b_prob", ")", "and", "(", "abs", "(", "a_prob", "-", "b_prob", ")", ">", "thresh", ")", ":", "\n", "            ", "good_top_thresh", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "good_top_thresh", ".", "append", "(", "0", ")", "\n", "", "probpairs", ".", "append", "(", "(", "a_prob", ",", "b_prob", ")", ")", "\n", "clozepairs", ".", "append", "(", "(", "conddict", "[", "it", "]", "[", "'a'", "]", "[", "'tgtcloze'", "]", ",", "conddict", "[", "it", "]", "[", "'b'", "]", "[", "'tgtcloze'", "]", ")", ")", "\n", "", "probdiffs", "=", "[", "e", "[", "0", "]", "-", "e", "[", "1", "]", "for", "e", "in", "probpairs", "]", "\n", "clozediffs", "=", "[", "e", "[", "0", "]", "-", "e", "[", "1", "]", "for", "e", "in", "clozepairs", "]", "\n", "\n", "report", "=", "'\\nSensitivity results:\\n\\n'", "\n", "\n", "report", "+=", "'Good completion more probable than role reversal: %s (%s/%s)\\n\\n'", "%", "(", "get_acc", "(", "good_top", ")", ",", "sum", "(", "good_top", ")", ",", "len", "(", "good_top", ")", ")", "\n", "report", "+=", "'Good completion more probable than role reversal -- difference threshold %s: %s (%s/%s)\\n\\n'", "%", "(", "thresh", ",", "get_acc", "(", "good_top_thresh", ")", ",", "sum", "(", "good_top_thresh", ")", ",", "len", "(", "good_top_thresh", ")", ")", "\n", "report", "+=", "'AVG PROB DIFF: %s\\n'", "%", "np", ".", "average", "(", "probdiffs", ")", "\n", "report", "+=", "'AVG CLOZE DIFF: %s\\n'", "%", "np", ".", "average", "(", "clozediffs", ")", "\n", "\n", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.sensitivity_tests.neg_sensitivity_test": [[91, 141], ["enumerate", "sensitivity_tests.convert_to_experiment_grouping", "preftrue[].append", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "preftrue_thresh[].append", "preftrue_thresh[].append", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "proc_datasets.get_acc", "sum", "len", "preftrue_l[].append", "abs", "preftrue_u[].append"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.sensitivity_tests.convert_to_experiment_grouping", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc", "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.proc_datasets.get_acc"], ["", "def", "neg_sensitivity_test", "(", "dataset_ref", ",", "target_probs", ")", ":", "\n", "    ", "for", "i", ",", "prob", "in", "enumerate", "(", "target_probs", ")", ":", "\n", "        ", "dataset_ref", "[", "i", "]", "[", "'tgtprob'", "]", "=", "prob", "\n", "", "conddict", "=", "convert_to_experiment_grouping", "(", "dataset_ref", ")", "\n", "thresh", "=", "0.01", "\n", "pattern", "=", "[", "]", "\n", "same", "=", "[", "]", "\n", "preftrue", "=", "{", "'aff'", ":", "[", "]", ",", "'neg'", ":", "[", "]", "}", "\n", "preftrue_l", "=", "{", "'aff'", ":", "[", "]", ",", "'neg'", ":", "[", "]", "}", "\n", "preftrue_u", "=", "{", "'aff'", ":", "[", "]", ",", "'neg'", ":", "[", "]", "}", "\n", "preftrue_thresh", "=", "{", "'aff'", ":", "[", "]", ",", "'neg'", ":", "[", "]", "}", "\n", "lic", "=", "None", "\n", "for", "it", "in", "conddict", ":", "\n", "        ", "if", "'licensing'", "in", "conddict", "[", "it", "]", "[", "'TA'", "]", ":", "\n", "            ", "lic", "=", "conddict", "[", "it", "]", "[", "'TA'", "]", "[", "'licensing'", "]", "\n", "", "for", "true_cond", ",", "false_cond", ",", "pol", "in", "[", "(", "'TA'", ",", "'FA'", ",", "'aff'", ")", ",", "(", "'TN'", ",", "'FN'", ",", "'neg'", ")", "]", ":", "\n", "            ", "true_prob", ",", "false_prob", "=", "(", "conddict", "[", "it", "]", "[", "true_cond", "]", "[", "'tgtprob'", "]", ",", "conddict", "[", "it", "]", "[", "false_cond", "]", "[", "'tgtprob'", "]", ")", "\n", "if", "true_prob", ">", "false_prob", ":", "\n", "                ", "score", "=", "1", "\n", "", "else", ":", "\n", "                ", "score", "=", "0", "\n", "", "preftrue", "[", "pol", "]", ".", "append", "(", "score", ")", "\n", "if", "lic", ":", "\n", "                ", "if", "lic", "==", "'Y'", ":", "\n", "                    ", "preftrue_l", "[", "pol", "]", ".", "append", "(", "score", ")", "\n", "", "elif", "lic", "==", "'N'", ":", "\n", "                    ", "preftrue_u", "[", "pol", "]", ".", "append", "(", "score", ")", "\n", "", "", "if", "(", "true_prob", ">", "false_prob", ")", "and", "(", "abs", "(", "true_prob", "-", "false_prob", ")", ">", "thresh", ")", ":", "\n", "                ", "preftrue_thresh", "[", "pol", "]", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                ", "preftrue_thresh", "[", "pol", "]", ".", "append", "(", "0", ")", "\n", "\n", "\n", "", "", "", "report", "=", "'\\nSensitivity results:\\n\\n'", "\n", "report", "+=", "'True completion more probable than false: %s (%s/%s)\\n'", "%", "(", "get_acc", "(", "preftrue", "[", "'aff'", "]", "+", "preftrue", "[", "'neg'", "]", ")", ",", "sum", "(", "preftrue", "[", "'aff'", "]", "+", "preftrue", "[", "'neg'", "]", ")", ",", "len", "(", "preftrue", "[", "'aff'", "]", "+", "preftrue", "[", "'neg'", "]", ")", ")", "\n", "report", "+=", "'   in affirmative contexts: %s (%s/%s)\\n'", "%", "(", "get_acc", "(", "preftrue", "[", "'aff'", "]", ")", ",", "sum", "(", "preftrue", "[", "'aff'", "]", ")", ",", "len", "(", "preftrue", "[", "'aff'", "]", ")", ")", "\n", "report", "+=", "'   in negative contexts: %s (%s/%s)\\n'", "%", "(", "get_acc", "(", "preftrue", "[", "'neg'", "]", ")", ",", "sum", "(", "preftrue", "[", "'neg'", "]", ")", ",", "len", "(", "preftrue", "[", "'neg'", "]", ")", ")", "\n", "report", "+=", "'True completion more probable than false -- difference threshold %s: %s (%s/%s)\\n'", "%", "(", "thresh", ",", "get_acc", "(", "preftrue_thresh", "[", "'aff'", "]", "+", "preftrue_thresh", "[", "'neg'", "]", ")", ",", "sum", "(", "preftrue_thresh", "[", "'aff'", "]", "+", "preftrue_thresh", "[", "'neg'", "]", ")", ",", "len", "(", "preftrue_thresh", "[", "'aff'", "]", "+", "preftrue_thresh", "[", "'neg'", "]", ")", ")", "\n", "report", "+=", "'   in affirmative contexts: %s (%s/%s)\\n'", "%", "(", "get_acc", "(", "preftrue_thresh", "[", "'aff'", "]", ")", ",", "sum", "(", "preftrue_thresh", "[", "'aff'", "]", ")", ",", "len", "(", "preftrue_thresh", "[", "'aff'", "]", ")", ")", "\n", "report", "+=", "'   in negative contexts: %s (%s/%s)\\n\\n'", "%", "(", "get_acc", "(", "preftrue_thresh", "[", "'neg'", "]", ")", ",", "sum", "(", "preftrue_thresh", "[", "'neg'", "]", ")", ",", "len", "(", "preftrue_thresh", "[", "'neg'", "]", ")", ")", "\n", "if", "lic", ":", "\n", "        ", "report", "+=", "'True completion more probable in NATURAL sentences: %s (%s/%s)\\n'", "%", "(", "get_acc", "(", "preftrue_l", "[", "'aff'", "]", "+", "preftrue_l", "[", "'neg'", "]", ")", ",", "sum", "(", "preftrue_l", "[", "'aff'", "]", "+", "preftrue_l", "[", "'neg'", "]", ")", ",", "len", "(", "preftrue_l", "[", "'aff'", "]", "+", "preftrue_l", "[", "'neg'", "]", ")", ")", "\n", "report", "+=", "'   in affirmative contexts: %s (%s/%s)\\n'", "%", "(", "get_acc", "(", "preftrue_l", "[", "'aff'", "]", ")", ",", "sum", "(", "preftrue_l", "[", "'aff'", "]", ")", ",", "len", "(", "preftrue_l", "[", "'aff'", "]", ")", ")", "\n", "report", "+=", "'   in negative contexts: %s (%s/%s)\\n'", "%", "(", "get_acc", "(", "preftrue_l", "[", "'neg'", "]", ")", ",", "sum", "(", "preftrue_l", "[", "'neg'", "]", ")", ",", "len", "(", "preftrue_l", "[", "'neg'", "]", ")", ")", "\n", "report", "+=", "'True completion more probable in LESS NATURAL sentences: %s (%s/%s)\\n'", "%", "(", "get_acc", "(", "preftrue_u", "[", "'aff'", "]", "+", "preftrue_u", "[", "'neg'", "]", ")", ",", "sum", "(", "preftrue_u", "[", "'aff'", "]", "+", "preftrue_u", "[", "'neg'", "]", ")", ",", "len", "(", "preftrue_u", "[", "'aff'", "]", "+", "preftrue_u", "[", "'neg'", "]", ")", ")", "\n", "report", "+=", "'   in affirmative contexts: %s (%s/%s)\\n'", "%", "(", "get_acc", "(", "preftrue_u", "[", "'aff'", "]", ")", ",", "sum", "(", "preftrue_u", "[", "'aff'", "]", ")", ",", "len", "(", "preftrue_u", "[", "'aff'", "]", ")", ")", "\n", "report", "+=", "'   in negative contexts: %s (%s/%s)\\n'", "%", "(", "get_acc", "(", "preftrue_u", "[", "'neg'", "]", ")", ",", "sum", "(", "preftrue_u", "[", "'neg'", "]", ")", ",", "len", "(", "preftrue_u", "[", "'neg'", "]", ")", ")", "\n", "", "report", "+=", "'\\n\\n'", "\n", "\n", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.access_model.load_model": [[11, 19], ["pytorch_pretrained_bert.BertTokenizer.from_pretrained", "pytorch_pretrained_bert.BertForMaskedLM.from_pretrained", "BertForMaskedLM.from_pretrained.eval", "BertForMaskedLM.from_pretrained.to"], "function", ["None"], ["def", "load_model", "(", "modeldir", ")", ":", "\n", "# Load pre-trained model tokenizer (vocabulary)", "\n", "    ", "tokenizer", "=", "BertTokenizer", ".", "from_pretrained", "(", "modeldir", ")", "\n", "# Load pre-trained model (weights)", "\n", "model", "=", "BertForMaskedLM", ".", "from_pretrained", "(", "modeldir", ")", "\n", "model", ".", "eval", "(", ")", "\n", "model", ".", "to", "(", "'cuda'", ")", "\n", "return", "model", ",", "tokenizer", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.access_model.prep_input": [[21, 40], ["re.sub.strip().split", "tokenizer.tokenize", "enumerate", "tokenizer.convert_tokens_to_ids", "torch.tensor", "re.sub", "text.append", "text.append", "text.append", "re.sub.strip"], "function", ["None"], ["", "def", "prep_input", "(", "input_sents", ",", "tokenizer", ",", "bert", "=", "True", ")", ":", "\n", "    ", "for", "sent", "in", "input_sents", ":", "\n", "        ", "masked_index", "=", "None", "\n", "text", "=", "[", "]", "\n", "mtok", "=", "'[MASK]'", "\n", "if", "not", "bert", ":", "\n", "            ", "sent", "=", "re", ".", "sub", "(", "'\\[MASK\\]'", ",", "'X'", ",", "sent", ")", "\n", "mtok", "=", "'x</w>'", "\n", "", "if", "bert", ":", "text", ".", "append", "(", "'[CLS]'", ")", "\n", "text", "+=", "sent", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "if", "text", "[", "-", "1", "]", "!=", "'.'", ":", "text", ".", "append", "(", "'.'", ")", "\n", "if", "bert", ":", "text", ".", "append", "(", "'[SEP]'", ")", "\n", "text", "=", "' '", ".", "join", "(", "text", ")", "\n", "tokenized_text", "=", "tokenizer", ".", "tokenize", "(", "text", ")", "\n", "for", "i", ",", "tok", "in", "enumerate", "(", "tokenized_text", ")", ":", "\n", "            ", "if", "tok", "==", "mtok", ":", "masked_index", "=", "i", "\n", "", "indexed_tokens", "=", "tokenizer", ".", "convert_tokens_to_ids", "(", "tokenized_text", ")", "\n", "tokens_tensor", "=", "torch", ".", "tensor", "(", "[", "indexed_tokens", "]", ")", "\n", "yield", "tokens_tensor", ",", "masked_index", ",", "tokenized_text", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.access_model.get_predictions": [[42, 64], ["access_model.prep_input", "tokens_tensor.to.to", "[].cpu().numpy", "tokenizer.convert_ids_to_tokens", "token_preds.append", "tok_probs.append", "torch.no_grad", "model", "torch.softmax", "torch.softmax", "softpred[].item", "[].cpu", "re.sub", "torch.argsort"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.access_model.prep_input"], ["", "", "def", "get_predictions", "(", "input_sents", ",", "model", ",", "tokenizer", ",", "k", "=", "5", ",", "bert", "=", "True", ")", ":", "\n", "    ", "token_preds", "=", "[", "]", "\n", "tok_probs", "=", "[", "]", "\n", "for", "tokens_tensor", ",", "mi", ",", "_", "in", "prep_input", "(", "input_sents", ",", "tokenizer", ",", "bert", "=", "bert", ")", ":", "\n", "        ", "tokens_tensor", "=", "tokens_tensor", ".", "to", "(", "'cuda'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "predictions", "=", "model", "(", "tokens_tensor", ")", "\n", "", "predicted_tokens", "=", "[", "]", "\n", "predicted_token_probs", "=", "[", "]", "\n", "if", "bert", ":", "\n", "            ", "softpred", "=", "torch", ".", "softmax", "(", "predictions", "[", "0", ",", "mi", "]", ",", "0", ")", "\n", "", "else", ":", "\n", "            ", "softpred", "=", "torch", ".", "softmax", "(", "predictions", "[", "0", ",", "mi", ",", ":", "]", ",", "0", ")", "\n", "", "top_inds", "=", "torch", ".", "argsort", "(", "softpred", ",", "descending", "=", "True", ")", "[", ":", "k", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "top_probs", "=", "[", "softpred", "[", "tgt_ind", "]", ".", "item", "(", ")", "for", "tgt_ind", "in", "top_inds", "]", "\n", "top_tok_preds", "=", "tokenizer", ".", "convert_ids_to_tokens", "(", "top_inds", ")", "\n", "if", "not", "bert", ":", "\n", "            ", "top_tok_preds", "=", "[", "re", ".", "sub", "(", "'\\<\\/w\\>'", ",", "''", ",", "e", ")", "for", "e", "in", "top_tok_preds", "]", "\n", "\n", "", "token_preds", ".", "append", "(", "top_tok_preds", ")", "\n", "tok_probs", ".", "append", "(", "top_probs", ")", "\n", "", "return", "token_preds", ",", "tok_probs", "\n", "\n"]], "home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.access_model.get_probabilities": [[65, 85], ["enumerate", "access_model.prep_input", "tokens_tensor.to.to", "token_probs.append", "torch.no_grad", "model", "torch.softmax", "torch.softmax", "softpred[].item", "tokenizer.convert_tokens_to_ids"], "function", ["home.repos.pwc.inspect_result.aetting_lm-diagnostics.None.access_model.prep_input"], ["", "def", "get_probabilities", "(", "input_sents", ",", "tgtlist", ",", "model", ",", "tokenizer", ",", "bert", "=", "True", ")", ":", "\n", "    ", "token_probs", "=", "[", "]", "\n", "for", "i", ",", "(", "tokens_tensor", ",", "mi", ",", "_", ")", "in", "enumerate", "(", "prep_input", "(", "input_sents", ",", "tokenizer", ",", "bert", "=", "bert", ")", ")", ":", "\n", "        ", "tokens_tensor", "=", "tokens_tensor", ".", "to", "(", "'cuda'", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "predictions", "=", "model", "(", "tokens_tensor", ")", "\n", "", "tgt", "=", "tgtlist", "[", "i", "]", "\n", "if", "bert", ":", "\n", "            ", "softpred", "=", "torch", ".", "softmax", "(", "predictions", "[", "0", ",", "mi", "]", ",", "0", ")", "\n", "", "else", ":", "\n", "            ", "softpred", "=", "torch", ".", "softmax", "(", "predictions", "[", "0", ",", "mi", ",", ":", "]", ",", "0", ")", "\n", "", "try", ":", "\n", "            ", "tgt_ind", "=", "tokenizer", ".", "convert_tokens_to_ids", "(", "[", "tgt", "]", ")", "[", "0", "]", "\n", "", "except", ":", "\n", "            ", "this_tgt_prob", "=", "np", ".", "nan", "\n", "", "else", ":", "\n", "            ", "this_tgt_prob", "=", "softpred", "[", "tgt_ind", "]", ".", "item", "(", ")", "\n", "", "token_probs", ".", "append", "(", "this_tgt_prob", ")", "\n", "", "return", "token_probs", "\n", "\n"]]}