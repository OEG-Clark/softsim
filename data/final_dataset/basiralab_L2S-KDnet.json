{"home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.data_loader.readcsv": [[10, 19], ["pandas.read_csv", "numpy.array", "range", "numpy.array", "numpy.array", "c.append", "list", "a.split"], "function", ["None"], ["def", "readcsv", "(", "filename", ")", ":", "\n", "    ", "data", "=", "pd", ".", "read_csv", "(", "filename", ")", "\n", "c", "=", "[", "]", "\n", "data", "=", "np", ".", "array", "(", "data", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "data", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "a", "=", "data", "[", "i", "]", "[", "0", "]", "\n", "b", "=", "np", ".", "array", "(", "list", "(", "a", ".", "split", "(", "\" \"", ")", ")", ")", "\n", "c", ".", "append", "(", "b", ")", "\n", "", "return", "(", "np", ".", "array", "(", "c", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.data_loader.get_loader": [[21, 40], ["torch.TensorDataset", "torch.DataLoader", "torch.TensorDataset", "torch.DataLoader", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "function", ["None"], ["", "def", "get_loader", "(", "features", ",", "batch_size", ",", "train_test", ",", "num_workers", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    Build and return a data loader.\n    \"\"\"", "\n", "if", "train_test", "==", "\"train\"", ":", "\n", "        ", "dataset", "=", "data_utils", ".", "TensorDataset", "(", "torch", ".", "Tensor", "(", "features", ")", ")", "\n", "loader", "=", "data_utils", ".", "DataLoader", "(", "dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "num_workers", "\n", ")", "\n", "", "else", ":", "\n", "        ", "dataset", "=", "data_utils", ".", "TensorDataset", "(", "torch", ".", "Tensor", "(", "features", ")", ")", "\n", "loader", "=", "data_utils", ".", "DataLoader", "(", "dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "num_workers", "\n", ")", "\n", "", "return", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.data_loader.create_dirs_if_not_exist": [[41, 49], ["isinstance", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs"], "function", ["None"], ["", "def", "create_dirs_if_not_exist", "(", "dir_list", ")", ":", "\n", "    ", "if", "isinstance", "(", "dir_list", ",", "list", ")", ":", "\n", "        ", "for", "dir", "in", "dir_list", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "dir", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "dir", ")", "\n", "", "", "", "else", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "dir_list", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "dir_list", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.GCN.__init__": [[14, 24], ["torch.nn.modules.module.Module.__init__", "torch.Parameter", "torch.Parameter", "model.GCN.reset_parameters", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.Parameter", "torch.Parameter", "model.GCN.register_parameter", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.__init__", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.GCN.reset_parameters"], ["def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "GCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "in_features", ",", "out_features", ")", ")", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "out_features", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'bias'", ",", "None", ")", "\n", "", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.GCN.reset_parameters": [[25, 30], ["model.GCN.weight.data.uniform_", "math.sqrt", "model.GCN.bias.data.uniform_", "model.GCN.weight.size"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "stdv", "=", "1.", "/", "math", ".", "sqrt", "(", "self", ".", "weight", ".", "size", "(", "1", ")", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "bias", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.GCN.forward": [[31, 38], ["torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "adj", ")", ":", "\n", "        ", "support", "=", "torch", ".", "mm", "(", "input", ",", "self", ".", "weight", ")", "\n", "output", "=", "torch", ".", "spmm", "(", "adj", ",", "support", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "return", "output", "+", "self", ".", "bias", "\n", "", "else", ":", "\n", "            ", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.GCN.__repr__": [[39, 43], ["str", "str"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "' ('", "+", "str", "(", "self", ".", "in_features", ")", "+", "' -> '", "+", "str", "(", "self", ".", "out_features", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.GCNencoder.__init__": [[50, 57], ["torch.Module.__init__", "model.GCN", "model.GCN"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.__init__"], ["def", "__init__", "(", "self", ",", "nfeat", ",", "nhid", ",", "nout", ",", "dropout", ")", ":", "\n", "        ", "super", "(", "GCNencoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n", "self", ".", "gc1", "=", "GCN", "(", "nfeat", ",", "nhid", ")", "\n", "self", ".", "gc2", "=", "GCN", "(", "nhid", ",", "nout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.GCNencoder.forward": [[58, 64], ["torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.dropout", "torch.nn.functional.dropout", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.dropout", "torch.nn.functional.dropout", "model.GCNencoder.gc1", "model.GCNencoder.gc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "gc1", "(", "x", ",", "adj", ")", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "gc2", "(", "x", ",", "adj", ")", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.GCNdecoder.__init__": [[71, 78], ["torch.Module.__init__", "model.GCN", "model.GCN"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.__init__"], ["def", "__init__", "(", "self", ",", "nfeat", ",", "nhid", ",", "nout", ",", "dropout", ")", ":", "\n", "        ", "super", "(", "GCNdecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n", "self", ".", "gc1", "=", "GCN", "(", "nfeat", ",", "nhid", ")", "\n", "self", ".", "gc2", "=", "GCN", "(", "nhid", ",", "nout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.GCNdecoder.forward": [[80, 86], ["torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.dropout", "torch.nn.functional.dropout", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.dropout", "torch.nn.functional.dropout", "model.GCNdecoder.gc1", "model.GCNdecoder.gc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "gc1", "(", "x", ",", "adj", ")", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "gc2", "(", "x", ",", "adj", ")", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.Discriminator.__init__": [[93, 101], ["torch.Module.__init__", "model.GCN", "model.GCN", "model.GCN"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.__init__"], ["def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "dropout", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n", "self", ".", "gc1", "=", "GCN", "(", "input_size", ",", "32", ")", "\n", "self", ".", "gc2", "=", "GCN", "(", "32", ",", "16", ")", "\n", "self", ".", "gc3", "=", "GCN", "(", "16", ",", "output_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.Discriminator.forward": [[102, 110], ["torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.dropout", "torch.nn.functional.dropout", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.dropout", "torch.nn.functional.dropout", "model.Discriminator.gc3", "model.Discriminator.view", "model.Discriminator.gc1", "model.Discriminator.gc2", "torch.nn.functional.sigmoid", "torch.nn.functional.sigmoid", "torch.nn.functional.softmax", "torch.nn.functional.softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "gc1", "(", "x", ",", "adj", ")", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "gc2", "(", "x", ",", "adj", ")", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "a", "=", "self", ".", "gc3", "(", "x", ",", "adj", ")", "\n", "x", "=", "a", ".", "view", "(", "a", ".", "shape", "[", "0", "]", ")", "\n", "return", "F", ".", "sigmoid", "(", "x", ")", ",", "F", ".", "softmax", "(", "x", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.Teacher.__init__": [[116, 123], ["torch.Module.__init__", "model.GCNencoder", "model.GCNdecoder"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.__init__"], ["def", "__init__", "(", "self", ",", "nfeat", ",", "nhid1", ",", "nhid2", ",", "nhid3", ",", "nhid4", ",", "dropout", ")", ":", "\n", "        ", "super", "(", "Teacher", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n", "self", ".", "encoder", "=", "GCNencoder", "(", "nfeat", ",", "nhid1", ",", "nhid2", ",", "dropout", ")", "\n", "self", ".", "decoder", "=", "GCNdecoder", "(", "nhid2", ",", "nhid3", ",", "nhid4", ",", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.Teacher.forward": [[124, 128], ["model.Teacher.encoder.forward", "model.Teacher.decoder.forward"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.Student.forward", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.Student.forward"], ["", "def", "forward", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "embedding", "=", "self", ".", "encoder", ".", "forward", "(", "x", ",", "adj", ")", "\n", "super_resolved_matrix", "=", "self", ".", "decoder", ".", "forward", "(", "embedding", ",", "adj", ")", "\n", "return", "embedding", ",", "super_resolved_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.Student.__init__": [[134, 141], ["torch.Module.__init__", "model.GCNencoder", "model.GCNdecoder"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.__init__"], ["def", "__init__", "(", "self", ",", "nfeat", ",", "nhid1", ",", "nhid2", ",", "nhid3", ",", "nhid4", ",", "dropout", ")", ":", "\n", "        ", "super", "(", "Student", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n", "self", ".", "encoder", "=", "GCNencoder", "(", "nfeat", ",", "nhid1", ",", "nhid2", ",", "dropout", ")", "\n", "self", ".", "decoder", "=", "GCNdecoder", "(", "nhid2", ",", "nhid3", ",", "nhid4", ",", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.Student.forward": [[142, 146], ["model.Student.encoder.forward", "model.Student.decoder.forward"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.Student.forward", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.model.Student.forward"], ["", "def", "forward", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "embedding", "=", "self", ".", "encoder", ".", "forward", "(", "x", ",", "adj", ")", "\n", "super_resolved_matrix", "=", "self", ".", "decoder", ".", "forward", "(", "embedding", ",", "adj", ")", "\n", "return", "embedding", ",", "super_resolved_matrix", "\n", "", "", ""]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.helpers.printTestResults": [[1, 32], ["print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "sum", "sum", "sum", "sum", "sum", "sum", "sum"], "function", ["None"], ["def", "printTestResults", "(", "student_losses_G", ",", "teacher_losses_G", ",", "list_pagerankT", ",", "list_pagerankS", ",", "list_eigenvectorT", ",", "\n", "list_eigenvectorS", ",", "list_student_loss_KL", ")", ":", "\n", "    ", "print", "(", "'============================='", ")", "\n", "print", "(", "\"End of the Program\"", ")", "\n", "print", "(", "'============================='", ")", "\n", "print", "(", ")", "\n", "\n", "print", "(", "\"Average Student Global Topology Evaluation Metric:\"", ")", "\n", "print", "(", "sum", "(", "student_losses_G", ")", "/", "3", ")", "\n", "print", "(", "student_losses_G", ")", "\n", "print", "(", "\"Average Teacher Global Topology Evaluation Metric:\"", ")", "\n", "print", "(", "sum", "(", "teacher_losses_G", ")", "/", "3", ")", "\n", "print", "(", "teacher_losses_G", ")", "\n", "\n", "print", "(", "\"Average Teacher PageRank Evaluation Metric:\"", ")", "\n", "print", "(", "sum", "(", "list_pagerankT", ")", "/", "3", ")", "\n", "print", "(", "list_pagerankT", ")", "\n", "print", "(", "\"Average Student PageRank Evaluation Metric:\"", ")", "\n", "print", "(", "sum", "(", "list_pagerankS", ")", "/", "3", ")", "\n", "print", "(", "list_pagerankS", ")", "\n", "\n", "print", "(", "\"Average Teacher EigenVector Evaluation Metric:\"", ")", "\n", "print", "(", "sum", "(", "list_eigenvectorT", ")", "/", "3", ")", "\n", "print", "(", "list_eigenvectorT", ")", "\n", "print", "(", "\"Average Student EigenVector Evaluation Metric:\"", ")", "\n", "print", "(", "sum", "(", "list_eigenvectorS", ")", "/", "3", ")", "\n", "print", "(", "list_eigenvectorS", ")", "\n", "\n", "print", "(", "\"Average Student KL Evaluation Metric:\"", ")", "\n", "print", "(", "sum", "(", "list_student_loss_KL", ")", "/", "3", ")", "\n", "print", "(", "list_student_loss_KL", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.helpers.printFoldResults": [[34, 53], ["print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["", "def", "printFoldResults", "(", "fold", ",", "teacher_loss_G", ",", "student_loss_G", ",", "pagerankT", ",", "pagerankS", ",", "eigenvectorT", ",", "eigenvectorS", ",", "\n", "student_loss_KL", ")", ":", "\n", "    ", "print", "(", "'============================='", ")", "\n", "print", "(", "\"End of the Fold\"", "+", "str", "(", "fold", ")", ")", "\n", "print", "(", "'============================='", ")", "\n", "\n", "print", "(", "\"Fold\"", "+", "str", "(", "fold", ")", "+", "\" Teacher Global Topology Evaluation Metric: \"", ",", "teacher_loss_G", ")", "\n", "\n", "print", "(", "\"Fold\"", "+", "str", "(", "fold", ")", "+", "\" Student Global Topology Evaluation Metric: \"", ",", "student_loss_G", ")", "\n", "\n", "print", "(", "\"Fold\"", "+", "str", "(", "fold", ")", "+", "\" Teacher PageRank Evaluation Metric: \"", ",", "pagerankT", ")", "\n", "\n", "print", "(", "\"Fold\"", "+", "str", "(", "fold", ")", "+", "\" Student PageRank Evaluation Metric: \"", ",", "pagerankS", ")", "\n", "\n", "print", "(", "\"Fold\"", "+", "str", "(", "fold", ")", "+", "\" Teacher EigenVector Evaluation Metric: \"", ",", "eigenvectorT", ")", "\n", "\n", "print", "(", "\"Fold\"", "+", "str", "(", "fold", ")", "+", "\" Student EigenVector Evaluation Metric: \"", ",", "eigenvectorS", ")", "\n", "\n", "print", "(", "\"Fold\"", "+", "str", "(", "fold", ")", "+", "\" Student KL Evaluation Metric: \"", ",", "student_loss_KL", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.to_2d": [[9, 18], ["numpy.zeros", "range", "range"], "function", ["None"], ["def", "to_2d", "(", "vector", ",", "size", ")", ":", "\n", "    ", "x", "=", "np", ".", "zeros", "(", "(", "size", ",", "size", ")", ")", "\n", "c", "=", "0", "\n", "for", "i", "in", "range", "(", "1", ",", "size", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "0", ",", "i", ")", ":", "\n", "            ", "x", "[", "i", "]", "[", "j", "]", "=", "vector", "[", "c", "]", "\n", "x", "[", "j", "]", "[", "i", "]", "=", "vector", "[", "c", "]", "\n", "c", "=", "c", "+", "1", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures": [[20, 49], ["numpy.empty", "numpy.empty", "range", "topology.append", "centrality.to_2d", "numpy.fill_diagonal", "networkx.from_numpy_matrix", "nx.from_numpy_matrix.to_undirected", "networkx.eigenvector_centrality", "numpy.array", "numpy.vstack", "topology.append", "networkx.pagerank", "numpy.array", "numpy.vstack"], "function", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.to_2d"], ["", "def", "topological_measures", "(", "data", ",", "size", ",", "eigenvector", "=", "False", ")", ":", "\n", "    ", "EC", "=", "np", ".", "empty", "(", "(", "0", ",", "size", ")", ",", "int", ")", "\n", "PC", "=", "np", ".", "empty", "(", "(", "0", ",", "size", ")", ",", "int", ")", "\n", "topology", "=", "[", "]", "\n", "max_solver_iterations", "=", "1000000000", "\n", "for", "i", "in", "range", "(", "data", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "A", "=", "to_2d", "(", "data", "[", "i", "]", ",", "size", ")", "\n", "np", ".", "fill_diagonal", "(", "A", ",", "0", ")", "\n", "\n", "# create a graph from similarity matrix", "\n", "G", "=", "nx", ".", "from_numpy_matrix", "(", "A", ")", "\n", "U", "=", "G", ".", "to_undirected", "(", ")", "\n", "\n", "# # compute eigenvector centrality and transform the output to vector", "\n", "ec", "=", "nx", ".", "eigenvector_centrality", "(", "U", ",", "weight", "=", "\"weight\"", ",", "max_iter", "=", "max_solver_iterations", ")", "\n", "eigenvector_centrality", "=", "np", ".", "array", "(", "[", "ec", "[", "g", "]", "for", "g", "in", "U", "]", ")", "\n", "EC", "=", "np", ".", "vstack", "(", "(", "EC", ",", "eigenvector_centrality", ")", ")", "\n", "\n", "if", "not", "eigenvector", ":", "\n", "# compute pagerank", "\n", "            ", "pr", "=", "nx", ".", "pagerank", "(", "U", ",", "alpha", "=", "0.85", ",", "weight", "=", "\"weight\"", ",", "max_iter", "=", "max_solver_iterations", ")", "\n", "pagerank", "=", "np", ".", "array", "(", "[", "pr", "[", "g", "]", "for", "g", "in", "U", "]", ")", "\n", "PC", "=", "np", ".", "vstack", "(", "(", "PC", ",", "pagerank", ")", ")", "\n", "\n", "", "", "topology", ".", "append", "(", "EC", ")", "\n", "if", "not", "eigenvector", ":", "\n", "        ", "topology", ".", "append", "(", "PC", ")", "\n", "\n", "", "return", "topology", "\n", "", ""]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_local_topology.prediction.L2S_KDnet_withoutLocalTopology.__init__": [[18, 26], ["torch.nn.L1Loss", "torch.device", "prediction.L2S_KDnet_withoutLocalTopology.build_model", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.build_model"], ["    ", "def", "__init__", "(", "self", ",", "real_morphological_loader", ",", "real_functional_loader", ",", "opts", ")", ":", "\n", "\n", "        ", "self", ".", "real_morphological_loader", "=", "real_morphological_loader", "\n", "self", ".", "real_functional_loader", "=", "real_functional_loader", "\n", "self", ".", "criterionIdt", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "opts", "=", "opts", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "self", ".", "build_model", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_local_topology.prediction.L2S_KDnet_withoutLocalTopology.build_model": [[27, 52], ["GCNencoder().to", "Discriminator().to", "GCNdecoder().to", "Student().to", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "prediction.L2S_KDnet_withoutLocalTopology.discriminator.parameters", "prediction.L2S_KDnet_withoutLocalTopology.generator.parameters", "prediction.L2S_KDnet_withoutLocalTopology.encoder.parameters", "prediction.L2S_KDnet_withoutLocalTopology.Student.parameters", "itertools.chain", "GCNencoder", "Discriminator", "GCNdecoder", "Student"], "methods", ["None"], ["", "def", "build_model", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Build teachers and students and encoder and initialize optimizers.\n        \"\"\"", "\n", "## Teacher model components", "\n", "self", ".", "encoder", "=", "GCNencoder", "(", "self", ".", "opts", ".", "in_feature_t0", ",", "self", ".", "opts", ".", "hidden1", ",", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "\n", "self", ".", "device", ")", "\n", "self", ".", "discriminator", "=", "Discriminator", "(", "self", ".", "opts", ".", "hidden2", ",", "1", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "generator", "=", "GCNdecoder", "(", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "hidden3", ",", "self", ".", "opts", ".", "SRout", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "\n", "self", ".", "device", ")", "\n", "## Student model", "\n", "self", ".", "Student", "=", "Student", "(", "self", ".", "opts", ".", "in_feature_t0", ",", "self", ".", "opts", ".", "hidden1", ",", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "hidden3", ",", "\n", "self", ".", "opts", ".", "SRout", ",", "\n", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "## initializations of optimizers", "\n", "self", ".", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "discriminator", ".", "parameters", "(", ")", ",", "self", ".", "opts", ".", "d_lr", ",", "\n", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "self", ".", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "generator", ".", "parameters", "(", ")", ",", "self", ".", "opts", ".", "g_lr", ",", "\n", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "self", ".", "e_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "encoder", ".", "parameters", "(", ")", ",", "self", ".", "opts", ".", "g_lr", ",", "\n", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "param_list", "=", "[", "self", ".", "Student", ".", "parameters", "(", ")", "]", "\n", "self", ".", "student_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "itertools", ".", "chain", "(", "*", "param_list", ")", ",", "\n", "self", ".", "opts", ".", "s_lr", ",", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_local_topology.prediction.L2S_KDnet_withoutLocalTopology.restore_model": [[53, 72], ["print", "os.path.join", "os.path.join", "prediction.L2S_KDnet_withoutLocalTopology.generator.load_state_dict", "prediction.L2S_KDnet_withoutLocalTopology.encoder.load_state_dict", "os.path.join", "prediction.L2S_KDnet_withoutLocalTopology.Student.load_state_dict", "torch.load", "torch.load", "torch.load"], "methods", ["None"], ["", "def", "restore_model", "(", "self", ",", "resume_iters", ",", "model_name", "=", "\"teacher\"", ",", "fold", "=", "0", ")", ":", "\n", "        ", "\"\"\"\n        Restore the trained students and encoder.\n        \"\"\"", "\n", "print", "(", "'Loading the trained models from step {}...'", ".", "format", "(", "resume_iters", ")", ")", "\n", "\n", "if", "model_name", "==", "\"teacher\"", ":", "\n", "            ", "generator_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'generator-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "encoder_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'encoder-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "\n", "self", ".", "generator", ".", "load_state_dict", "(", "torch", ".", "load", "(", "generator_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "self", ".", "encoder", ".", "load_state_dict", "(", "torch", ".", "load", "(", "encoder_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "", "else", ":", "\n", "            ", "Student_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'student-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "self", ".", "Student", ".", "load_state_dict", "(", "torch", ".", "load", "(", "Student_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_local_topology.prediction.L2S_KDnet_withoutLocalTopology.reset_grad": [[73, 81], ["prediction.L2S_KDnet_withoutLocalTopology.student_optimizer.zero_grad", "prediction.L2S_KDnet_withoutLocalTopology.d_optimizer.zero_grad", "prediction.L2S_KDnet_withoutLocalTopology.g_optimizer.zero_grad", "prediction.L2S_KDnet_withoutLocalTopology.e_optimizer.zero_grad"], "methods", ["None"], ["", "", "def", "reset_grad", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Reset the gradient buffers.\n        \"\"\"", "\n", "self", ".", "student_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "d_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "g_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "e_optimizer", ".", "zero_grad", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_local_topology.prediction.L2S_KDnet_withoutLocalTopology.show_mtrx": [[82, 92], ["matplotlib.subplots", "matplotlib.subplots", "ax.matshow", "fig.colorbar", "os.path.join", "matplotlib.savefig", "matplotlib.savefig"], "methods", ["None"], ["", "def", "show_mtrx", "(", "self", ",", "m", ",", "name", ")", ":", "\n", "        ", "\"\"\"\n        Visualize matrix and save.\n        \"\"\"", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "figsize", "=", "(", "20", ",", "10", ")", ")", "\n", "cax", "=", "ax", ".", "matshow", "(", "m", ",", "cmap", "=", "plt", ".", "cm", ".", "seismic", ")", "\n", "fig", ".", "colorbar", "(", "cax", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"{}_{}_{}.png\"", ".", "format", "(", "name", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ")", "\n", "# plt.show()", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_local_topology.prediction.L2S_KDnet_withoutLocalTopology.any_loss": [[94, 134], ["torch.nn.L1Loss", "nn.KLDivLoss", "nn.LogSoftmax", "nn.LogSoftmax.", "prediction.L2S_KDnet_withoutLocalTopology.KL", "prediction.L2S_KDnet_withoutLocalTopology.MAE", "prediction.L2S_KDnet_withoutLocalTopology.MAE", "topological_measures", "topological_measures", "torch.tensor", "torch.tensor", "topological_measures", "topological_measures", "torch.tensor", "sklearn.metrics.mean_absolute_error", "sklearn.metrics.mean_absolute_error", "sklearn.metrics.mean_absolute_error"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures"], ["", "def", "any_loss", "(", "self", ",", "real", ",", "predicted", ",", "metric", ")", ":", "\n", "        ", "\"\"\"\n        Compute KL, MAE losses.\n        \"\"\"", "\n", "self", ".", "MAE", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "KL", "=", "nn", ".", "KLDivLoss", "(", ")", "\n", "if", "metric", "==", "'KL'", ":", "\n", "            ", "m", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "predicted", "=", "m", "(", "predicted", ")", "\n", "return", "self", ".", "KL", "(", "predicted", ",", "real", ")", "\n", "", "elif", "metric", "==", "'MAE'", ":", "\n", "            ", "return", "self", ".", "MAE", "(", "real", ",", "predicted", ")", "\n", "", "elif", "metric", "==", "'global_topology'", ":", "\n", "            ", "return", "self", ".", "MAE", "(", "real", ",", "predicted", ")", "\n", "", "elif", "metric", "==", "'local_topology'", ":", "\n", "            ", "if", "real", ".", "shape", "[", "1", "]", "==", "595", ":", "# feature vector -> 595 extracted from 35x35", "\n", "                ", "size", "=", "35", "\n", "", "else", ":", "# feature vector -> 12720 extracted from 160x160", "\n", "                ", "size", "=", "160", "\n", "\n", "# Local topology loss", "\n", "", "real_topology", "=", "topological_measures", "(", "real", ",", "size", ")", "\n", "fake_topology", "=", "topological_measures", "(", "predicted", ",", "size", ")", "\n", "\n", "# 0:Eigenvector    1:PageRank", "\n", "return", "torch", ".", "tensor", "(", "\n", "mean_absolute_error", "(", "fake_topology", "[", "0", "]", ",", "real_topology", "[", "0", "]", ")", ",", "requires_grad", "=", "True", ")", ",", "torch", ".", "tensor", "(", "\n", "mean_absolute_error", "(", "fake_topology", "[", "1", "]", ",", "real_topology", "[", "1", "]", ")", ",", "requires_grad", "=", "True", ")", "\n", "", "elif", "metric", "==", "'eigenvector'", ":", "\n", "            ", "if", "real", ".", "shape", "[", "1", "]", "==", "595", ":", "# feature vector -> 595 extracted from 35x35", "\n", "                ", "size", "=", "35", "\n", "", "else", ":", "# feature vector -> 12720 extracted from 160x160", "\n", "                ", "size", "=", "160", "\n", "\n", "# Local topology loss", "\n", "", "real_topology", "=", "topological_measures", "(", "real", ",", "size", ",", "True", ")", "\n", "fake_topology", "=", "topological_measures", "(", "predicted", ",", "size", ",", "True", ")", "\n", "\n", "# 0:Eigenvector", "\n", "return", "torch", ".", "tensor", "(", "mean_absolute_error", "(", "fake_topology", "[", "0", "]", ",", "real_topology", "[", "0", "]", ")", ",", "requires_grad", "=", "True", ")", "\n", "", "", "def", "train", "(", "self", ",", "fold", ")", ":", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_local_topology.prediction.L2S_KDnet_withoutLocalTopology.train": [[134, 393], ["iter", "iter", "print", "print", "print", "time.time", "print", "print", "print", "range", "morph_iters.append", "func_iters.append", "prediction.L2S_KDnet_withoutLocalTopology.restore_model", "print", "t0_morph_encoder_T[].to", "t0_func_encoder_T[].to", "print", "torch.eye().to", "prediction.L2S_KDnet_withoutLocalTopology.encoder", "torch.eye().to", "prediction.L2S_KDnet_withoutLocalTopology.generator", "prediction.L2S_KDnet_withoutLocalTopology.discriminator", "F.binary_cross_entropy_with_logits", "prediction.L2S_KDnet_withoutLocalTopology.any_loss", "prediction.L2S_KDnet_withoutLocalTopology.reset_grad", "g_loss.backward", "prediction.L2S_KDnet_withoutLocalTopology.g_optimizer.step", "prediction.L2S_KDnet_withoutLocalTopology.e_optimizer.step", "print", "generator_loss.append", "scipy.stats.norm.fit", "np.random.normal", "torch.Tensor", "torch.eye().to", "prediction.L2S_KDnet_withoutLocalTopology.discriminator", "torch.eye().to", "prediction.L2S_KDnet_withoutLocalTopology.discriminator", "print", "F.binary_cross_entropy_with_logits", "F.binary_cross_entropy_with_logits", "prediction.L2S_KDnet_withoutLocalTopology.reset_grad", "d_loss.backward", "prediction.L2S_KDnet_withoutLocalTopology.d_optimizer.step", "print", "discriminator_loss.append", "iter", "iter", "next", "next", "torch.ones_like", "g_loss.item", "g_loss.item", "t0_func_encoder_T[].to.detach", "torch.ones_like", "sigmoid_fake.detach", "torch.zeros_like", "d_loss.item", "d_loss.item", "print", "os.path.join", "torch.save", "os.path.join", "torch.save", "print", "print", "print", "print", "prediction.L2S_KDnet_withoutLocalTopology.restore_model", "prediction.L2S_KDnet_withoutLocalTopology.encoder.eval", "prediction.L2S_KDnet_withoutLocalTopology.generator.eval", "print", "print", "print", "range", "iter", "next", "iter", "next", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "time.time", "str", "prediction.L2S_KDnet_withoutLocalTopology.generator.state_dict", "prediction.L2S_KDnet_withoutLocalTopology.encoder.state_dict", "torch.no_grad", "torch.eye().to", "prediction.L2S_KDnet_withoutLocalTopology.encoder", "torch.eye().to", "prediction.L2S_KDnet_withoutLocalTopology.generator", "print", "torch.eye().to", "prediction.L2S_KDnet_withoutLocalTopology.Student", "torch.eye().to", "prediction.L2S_KDnet_withoutLocalTopology.generator", "prediction.L2S_KDnet_withoutLocalTopology.any_loss", "prediction.L2S_KDnet_withoutLocalTopology.any_loss", "prediction.L2S_KDnet_withoutLocalTopology.any_loss", "print", "prediction.L2S_KDnet_withoutLocalTopology.reset_grad", "student_loss.backward", "prediction.L2S_KDnet_withoutLocalTopology.student_optimizer.step", "loss_students_plot.append", "loss_embedding_plot.append", "datetime.timedelta", "student_loss.detach().item", "student_loss.item", "os.path.join", "torch.save", "print", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "print", "print", "print", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "prediction.L2S_KDnet_withoutLocalTopology.Student.state_dict", "epochs.append", "losses.append", "epochs.append", "losses.append", "epochs.append", "losses.append", "student_loss.detach", "i.detach().item", "i.detach"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad"], ["", "", "def", "train", "(", "self", ",", "fold", ")", ":", "\n", "        ", "\"\"\"\n        Train TS\n        \"\"\"", "\n", "t0_iter_M", "=", "iter", "(", "self", ".", "real_morphological_loader", ")", "\n", "t0_iter_F", "=", "iter", "(", "self", ".", "real_functional_loader", ")", "\n", "\n", "morph_iters", "=", "[", "]", "\n", "for", "loader", "in", "self", ".", "real_morphological_loader", ":", "\n", "            ", "morph_iters", ".", "append", "(", "iter", "(", "loader", ")", ")", "\n", "\n", "", "func_iters", "=", "[", "]", "\n", "for", "loader", "in", "self", ".", "real_functional_loader", ":", "\n", "            ", "func_iters", ".", "append", "(", "iter", "(", "loader", ")", ")", "\n", "\n", "# Start training from scratch or resume training.", "\n", "", "start_iters", "=", "0", "\n", "if", "self", ".", "opts", ".", "resume_iters", ":", "\n", "            ", "start_iters", "=", "self", ".", "opts", ".", "resume_iters", "\n", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "resume_iters", ",", "fold", ")", "\n", "\n", "# Start training.", "\n", "", "print", "(", "\"********-------------*********\"", ")", "\n", "print", "(", "'Super-resolution TS network...'", ")", "\n", "print", "(", "\"********-------------*********\"", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "loss_students_plot", "=", "[", "]", "\n", "loss_embedding_plot", "=", "[", "]", "\n", "\n", "generator_loss", "=", "[", "]", "\n", "discriminator_loss", "=", "[", "]", "\n", "\n", "print", "(", "\"################################\"", ")", "\n", "print", "(", "\" 1. Train the Teacher\"", ")", "\n", "print", "(", "\"################################\"", ")", "\n", "for", "i", "in", "range", "(", "start_iters", ",", "self", ".", "opts", ".", "num_iters", ")", ":", "\n", "            ", "print", "(", "\"-------------iteration-{}-------------\"", ".", "format", "(", "i", ")", ")", "\n", "# =================================================================================== #", "\n", "#                             1. Preprocess input data                                #", "\n", "# =================================================================================== #", "\n", "try", ":", "\n", "                ", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "except", ":", "\n", "                ", "t0_iter_M", "=", "iter", "(", "self", ".", "real_morphological_loader", ")", "\n", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "t0_M_encoder_T", "=", "t0_morph_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "try", ":", "\n", "                ", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "", "except", ":", "\n", "                ", "t0_iter_F", "=", "iter", "(", "self", ".", "real_functional_loader", ")", "\n", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "", "t0_F_encoder_T", "=", "t0_func_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                           2. Train generators                                       #", "\n", "# =================================================================================== #", "\n", "print", "(", "\"-------------Train the generators-------------\"", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding", "=", "self", ".", "encoder", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "super_resolved_matrix", "=", "self", ".", "generator", "(", "embedding", ",", "adj", ")", "\n", "\n", "sigmoid", ",", "softmax", "=", "self", ".", "discriminator", "(", "embedding", ",", "adj", ")", "\n", "\n", "g_loss_adversarial", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid", ",", "torch", ".", "ones_like", "(", "sigmoid", ")", ")", "\n", "\n", "teacher_loss", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "super_resolved_matrix", ",", "\"global_topology\"", ")", "\n", "\n", "g_loss", "=", "g_loss_adversarial", "+", "(", "self", ".", "opts", ".", "teacher_loss_weight", "*", "teacher_loss", ")", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "self", ".", "g_optimizer", ".", "step", "(", ")", "\n", "self", ".", "e_optimizer", ".", "step", "(", ")", "\n", "\n", "print", "(", "\"Generator Loss: \"", ",", "g_loss", ".", "item", "(", ")", ")", "\n", "generator_loss", ".", "append", "(", "g_loss", ".", "item", "(", ")", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                             2. Train the discriminator                              #", "\n", "# =================================================================================== #", "\n", "\n", "(", "mu", ",", "sigma", ")", "=", "norm", ".", "fit", "(", "t0_F_encoder_T", ".", "detach", "(", ")", ")", "\n", "dist", "=", "np", ".", "random", ".", "normal", "(", "mu", ",", "sigma", ",", "(", "279", ",", "50", ")", ")", "\n", "real_dist", "=", "torch", ".", "Tensor", "(", "dist", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "dist", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "sigmoid_real", ",", "softmax_real", "=", "self", ".", "discriminator", "(", "real_dist", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "sigmoid_fake", ",", "softmax_fake", "=", "self", ".", "discriminator", "(", "embedding", ",", "adj", ")", "\n", "\n", "print", "(", "\"Train the discriminator\"", ")", "\n", "\n", "real_loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid_real", ",", "\n", "(", "torch", ".", "ones_like", "(", "sigmoid_real", ",", "requires_grad", "=", "False", ")", ")", ")", "\n", "fake_loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid_fake", ".", "detach", "(", ")", ",", "\n", "torch", ".", "zeros_like", "(", "sigmoid_fake", ")", ")", "\n", "\n", "d_loss", "=", "(", "real_loss", "+", "fake_loss", ")", "/", "2", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "self", ".", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "print", "(", "\"Discriminator Loss: \"", ",", "d_loss", ".", "item", "(", ")", ")", "\n", "discriminator_loss", ".", "append", "(", "d_loss", ".", "item", "(", ")", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                                 3. Miscellaneous                                    #", "\n", "# =================================================================================== #", "\n", "# print out training information.", "\n", "if", "(", "i", "+", "1", ")", "%", "self", ".", "opts", ".", "log_step", "==", "0", ":", "\n", "                ", "et", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "et", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "et", ")", ")", "[", ":", "-", "7", "]", "\n", "log", "=", "\"Elapsed [{}], Iteration [{}/{}]\"", ".", "format", "(", "et", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "num_iters", ")", "\n", "\"\"\"for tag, value in loss.items():\n                    log += \", {}: {:.4f}\".format(tag, value)\n                \"\"\"", "\n", "print", "(", "log", ")", "\n", "\n", "# save model checkpoints.", "\n", "", "if", "(", "i", "+", "1", ")", "%", "self", ".", "opts", ".", "model_save_step", "==", "0", ":", "\n", "                ", "generator_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'generator-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "\n", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "generator", ".", "state_dict", "(", ")", ",", "generator_path", ")", "\n", "\n", "encoder_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'encoder-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "encoder", ".", "state_dict", "(", ")", ",", "encoder_path", ")", "\n", "\n", "print", "(", "'Saved model checkpoints into {}...'", ".", "format", "(", "self", ".", "opts", ".", "checkpoint_dir", ")", ")", "\n", "\n", "print", "(", "'============================='", ")", "\n", "print", "(", "\"End of Training Teacher\"", ")", "\n", "print", "(", "'============================='", ")", "\n", "\n", "", "if", "i", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "# =================================================================================== #", "\n", "#      Restore the trained teacher  from the last iteration to train the Student      #", "\n", "# =================================================================================== #", "\n", "                ", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "test_iters", ",", "model_name", "=", "\"teacher\"", ",", "fold", "=", "fold", ")", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding", "=", "self", ".", "encoder", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "predicted_F_teacher", "=", "self", ".", "generator", "(", "embedding", ",", "adj", ")", "\n", "\n", "", "print", "(", "\"################################\"", ")", "\n", "print", "(", "\" 3. Train the Student \"", ")", "\n", "print", "(", "\"################################\"", ")", "\n", "for", "j", "in", "range", "(", "start_iters", ",", "self", ".", "opts", ".", "num_iters", ")", ":", "\n", "                    ", "print", "(", "\"-------------iteration{}-------------\"", ".", "format", "(", "j", ")", ")", "\n", "# =================================================================================== #", "\n", "#                                 Train the Student                                   #", "\n", "# =================================================================================== #", "\n", "student_loss", "=", "0", "\n", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding_student", ",", "predicted_F_student", "=", "self", ".", "Student", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding_student", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "predict_decoderof_t_usingembed_s", "=", "self", ".", "generator", "(", "embedding_student", ",", "adj", ")", "\n", "\n", "student_loss_1", "=", "self", ".", "any_loss", "(", "predicted_F_student", ",", "predicted_F_teacher", ",", "\"global_topology\"", ")", "\n", "student_loss_2", "=", "self", ".", "any_loss", "(", "embedding_student", ",", "embedding", ",", "\"global_topology\"", ")", "\n", "student_loss_3", "=", "self", ".", "any_loss", "(", "predict_decoderof_t_usingembed_s", ",", "predicted_F_teacher", ",", "\n", "\"global_topology\"", ")", "\n", "student_loss", "=", "(", "student_loss_1", "+", "student_loss_2", "+", "student_loss_3", ")", "/", "3", "\n", "\n", "print", "(", "\"Student Loss: \"", ",", "student_loss", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "student_loss", ".", "backward", "(", ")", "\n", "self", ".", "student_optimizer", ".", "step", "(", ")", "\n", "\n", "# Logging.", "\n", "loss", "=", "{", "'Student/loss'", ":", "student_loss", ".", "item", "(", ")", "}", "\n", "loss_students_plot", ".", "append", "(", "student_loss", ")", "\n", "loss_embedding_plot", ".", "append", "(", "student_loss_2", ")", "\n", "\n", "# save model checkpoints.", "\n", "if", "(", "j", "+", "1", ")", "%", "self", ".", "opts", ".", "model_save_step", "==", "0", ":", "\n", "                        ", "Student_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'student-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "Student", ".", "state_dict", "(", ")", ",", "Student_path", ")", "\n", "print", "(", "'Saved model checkpoints into {}...'", ".", "format", "(", "self", ".", "opts", ".", "checkpoint_dir", ")", ")", "\n", "\n", "", "if", "j", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "                        ", "plt", ".", "figure", "(", "1", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "generator_loss", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ")", "\n", "counter", "+=", "1", "\n", "", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-b'", ",", "label", "=", "\"Generator\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"generatorLoss_{}_{}_{}.png\"", ".", "format", "(", "\n", "fold", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "plt", ".", "figure", "(", "2", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "discriminator_loss", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ")", "\n", "counter", "+=", "1", "\n", "", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-r'", ",", "label", "=", "\"Discriminator\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"discriminatorLoss_{}_{}_{}.png\"", ".", "format", "(", "\n", "fold", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "", "if", "j", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "                        ", "plt", ".", "figure", "(", "3", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "loss_students_plot", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "counter", "+=", "1", "\n", "", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-g'", ",", "label", "=", "\"Student\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"studentLoss_{}_{}_{}.png\"", ".", "format", "(", "\n", "fold", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "print", "(", "'============================================'", ")", "\n", "print", "(", "\"End of Training the Student\"", ")", "\n", "print", "(", "'============================================'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_local_topology.prediction.L2S_KDnet_withoutLocalTopology.test": [[394, 477], ["print", "print", "print", "prediction.L2S_KDnet_withoutLocalTopology.restore_model", "prediction.L2S_KDnet_withoutLocalTopology.encoder.eval", "prediction.L2S_KDnet_withoutLocalTopology.generator.eval", "prediction.L2S_KDnet_withoutLocalTopology.restore_model", "prediction.L2S_KDnet_withoutLocalTopology.Student.eval", "iter", "iter", "t0_morph_encoder_T[].to", "t0_func_encoder_T[].to", "prediction.L2S_KDnet_withoutLocalTopology.any_loss", "print", "prediction.L2S_KDnet_withoutLocalTopology.any_loss", "prediction.L2S_KDnet_withoutLocalTopology.any_loss", "prediction.L2S_KDnet_withoutLocalTopology.any_loss", "print", "prediction.L2S_KDnet_withoutLocalTopology.any_loss", "print", "print", "print", "print", "print", "prediction.L2S_KDnet_withoutLocalTopology.detach().cpu().numpy", "pd.DataFrame", "pd.DataFrame.to_csv", "print", "predicted_F_student.detach().cpu().numpy", "pd.DataFrame", "pd.DataFrame.to_csv", "next", "next", "torch.no_grad", "torch.eye().to", "prediction.L2S_KDnet_withoutLocalTopology.encoder", "torch.eye().to", "prediction.L2S_KDnet_withoutLocalTopology.generator", "prediction.L2S_KDnet_withoutLocalTopology.Student", "prediction.L2S_KDnet_withoutLocalTopology.item", "prediction.L2S_KDnet_withoutLocalTopology.item", "prediction.L2S_KDnet_withoutLocalTopology.item", "eigenvectorS.item", "pagerankS.item", "eigenvectorT.item", "pagerankT.item", "prediction.L2S_KDnet_withoutLocalTopology.item", "prediction.L2S_KDnet_withoutLocalTopology.item", "prediction.L2S_KDnet_withoutLocalTopology.item", "iter", "next", "iter", "next", "prediction.L2S_KDnet_withoutLocalTopology.detach().cpu", "predicted_F_student.detach().cpu().numpy.astype", "predicted_F_student.detach().cpu", "predicted_F_student.detach().cpu().numpy.astype", "torch.eye", "torch.eye", "prediction.L2S_KDnet_withoutLocalTopology.detach", "predicted_F_student.detach"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss"], ["", "", "", "", "", "def", "test", "(", "self", ",", "real_morphological_loader", ",", "real_functional_loader", ",", "i", ")", ":", "\n", "        ", "\"\"\"\n        Test the trained Students on another dataset.\n        \"\"\"", "\n", "print", "(", "\"################################################################################\"", ")", "\n", "print", "(", "\" 2. Restore the trained student from the last iteration to test the Student \"", ")", "\n", "print", "(", "\"################################################################################\"", ")", "\n", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "test_iters", ",", "model_name", "=", "\"teacher\"", ",", "fold", "=", "i", ")", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "test_iters", ",", "model_name", "=", "\"student\"", ",", "fold", "=", "i", ")", "\n", "self", ".", "Student", ".", "eval", "(", ")", "\n", "\n", "t0_iter_M", "=", "iter", "(", "real_morphological_loader", ")", "\n", "t0_iter_F", "=", "iter", "(", "real_functional_loader", ")", "\n", "\n", "try", ":", "\n", "            ", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "except", ":", "\n", "            ", "t0_iter_M", "=", "iter", "(", "real_morphological_loader", ")", "\n", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "t0_M_encoder_T", "=", "t0_morph_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "try", ":", "\n", "            ", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "", "except", ":", "\n", "            ", "t0_iter_F", "=", "iter", "(", "real_functional_loader", ")", "\n", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "\n", "", "t0_F_encoder_T", "=", "t0_func_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding_teacher", "=", "self", ".", "encoder", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding_teacher", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "predicted_F_teacher", "=", "self", ".", "generator", "(", "embedding_teacher", ",", "adj", ")", "\n", "\n", "embedding_student", ",", "predicted_F_student", "=", "self", ".", "Student", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "", "student_loss_KL", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_student", ",", "\"KL\"", ")", "\n", "print", "(", "\"Student Evaluation KL: \"", ",", "student_loss_KL", ".", "item", "(", ")", ")", "\n", "\n", "eigenvectorS", ",", "pagerankS", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_student", ",", "\"local_topology\"", ")", "\n", "\n", "eigenvectorT", ",", "pagerankT", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_teacher", ",", "\"local_topology\"", ")", "\n", "\n", "student_loss_G", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_student", ",", "\"global_topology\"", ")", "\n", "print", "(", "\"Student Evaluation Global: \"", ",", "student_loss_G", ".", "item", "(", ")", ")", "\n", "\n", "teacher_loss_G", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_teacher", ",", "\"global_topology\"", ")", "\n", "print", "(", "\"Teacher Evaluation Global: \"", ",", "teacher_loss_G", ".", "item", "(", ")", ")", "\n", "\n", "print", "(", "'============================='", ")", "\n", "print", "(", "\"End of Testing both networks\"", ")", "\n", "print", "(", "'============================='", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                          Save results of both networks                              #", "\n", "# =================================================================================== #", "\n", "print", "(", "\"saving TS prediction into csv file...\"", ")", "\n", "f", "=", "predicted_F_teacher", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "dataframe", "=", "pd", ".", "DataFrame", "(", "data", "=", "f", ".", "astype", "(", "float", ")", ")", "\n", "dataframe", ".", "to_csv", "(", "\n", "r'%s/results/teacher_predicted_functional_graphs_%d_%f_%f.csv'", "%", "(", "\n", "self", ".", "opts", ".", "result_root", ",", "i", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ",", "sep", "=", "' '", ",", "header", "=", "True", ",", "\n", "float_format", "=", "'%.6f'", ",", "index", "=", "False", ")", "\n", "\n", "print", "(", "\"saving TS prediction into csv file...\"", ")", "\n", "f", "=", "predicted_F_student", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "dataframe", "=", "pd", ".", "DataFrame", "(", "data", "=", "f", ".", "astype", "(", "float", ")", ")", "\n", "dataframe", ".", "to_csv", "(", "\n", "r'%s/results/student_predicted_functional_graphs_%d_%f_%f.csv'", "%", "(", "self", ".", "opts", ".", "result_root", ",", "\n", "i", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ",", "sep", "=", "' '", ",", "\n", "header", "=", "True", ",", "\n", "float_format", "=", "'%.6f'", ",", "index", "=", "False", ")", "\n", "\n", "return", "eigenvectorS", ".", "item", "(", ")", ",", "pagerankS", ".", "item", "(", ")", ",", "eigenvectorT", ".", "item", "(", ")", ",", "pagerankT", ".", "item", "(", ")", ",", "student_loss_G", ".", "item", "(", ")", ",", "teacher_loss_G", ".", "item", "(", ")", ",", "student_loss_KL", ".", "item", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_TD_regularization.prediction.L2S_KDnet_withoutTDRegularization.__init__": [[18, 26], ["torch.nn.L1Loss", "torch.device", "prediction.L2S_KDnet_withoutTDRegularization.build_model", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.build_model"], ["    ", "def", "__init__", "(", "self", ",", "real_morphological_loader", ",", "real_functional_loader", ",", "opts", ")", ":", "\n", "\n", "        ", "self", ".", "real_morphological_loader", "=", "real_morphological_loader", "\n", "self", ".", "real_functional_loader", "=", "real_functional_loader", "\n", "self", ".", "criterionIdt", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "opts", "=", "opts", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "self", ".", "build_model", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_TD_regularization.prediction.L2S_KDnet_withoutTDRegularization.build_model": [[27, 52], ["GCNencoder().to", "Discriminator().to", "GCNdecoder().to", "Student().to", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "prediction.L2S_KDnet_withoutTDRegularization.discriminator.parameters", "prediction.L2S_KDnet_withoutTDRegularization.generator.parameters", "prediction.L2S_KDnet_withoutTDRegularization.encoder.parameters", "prediction.L2S_KDnet_withoutTDRegularization.Student.parameters", "itertools.chain", "GCNencoder", "Discriminator", "GCNdecoder", "Student"], "methods", ["None"], ["", "def", "build_model", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Build teachers and students and encoder and initialize optimizers.\n        \"\"\"", "\n", "## Teacher model components", "\n", "self", ".", "encoder", "=", "GCNencoder", "(", "self", ".", "opts", ".", "in_feature_t0", ",", "self", ".", "opts", ".", "hidden1", ",", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "\n", "self", ".", "device", ")", "\n", "self", ".", "discriminator", "=", "Discriminator", "(", "self", ".", "opts", ".", "hidden2", ",", "1", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "generator", "=", "GCNdecoder", "(", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "hidden3", ",", "self", ".", "opts", ".", "SRout", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "\n", "self", ".", "device", ")", "\n", "## Student model", "\n", "self", ".", "Student", "=", "Student", "(", "self", ".", "opts", ".", "in_feature_t0", ",", "self", ".", "opts", ".", "hidden1", ",", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "hidden3", ",", "\n", "self", ".", "opts", ".", "SRout", ",", "\n", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "## initializations of optimizers", "\n", "self", ".", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "discriminator", ".", "parameters", "(", ")", ",", "self", ".", "opts", ".", "d_lr", ",", "\n", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "self", ".", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "generator", ".", "parameters", "(", ")", ",", "self", ".", "opts", ".", "g_lr", ",", "\n", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "self", ".", "e_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "encoder", ".", "parameters", "(", ")", ",", "self", ".", "opts", ".", "g_lr", ",", "\n", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "param_list", "=", "[", "self", ".", "Student", ".", "parameters", "(", ")", "]", "\n", "self", ".", "student_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "itertools", ".", "chain", "(", "*", "param_list", ")", ",", "\n", "self", ".", "opts", ".", "s_lr", ",", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_TD_regularization.prediction.L2S_KDnet_withoutTDRegularization.restore_model": [[53, 77], ["print", "os.path.join", "os.path.join", "prediction.L2S_KDnet_withoutTDRegularization.generator.load_state_dict", "prediction.L2S_KDnet_withoutTDRegularization.encoder.load_state_dict", "os.path.join", "prediction.L2S_KDnet_withoutTDRegularization.Student.load_state_dict", "torch.load", "torch.load", "torch.load"], "methods", ["None"], ["", "def", "restore_model", "(", "self", ",", "resume_iters", ",", "model_name", "=", "\"teacher\"", ",", "fold", "=", "0", ")", ":", "\n", "        ", "\"\"\"\n        Restore the trained students and encoder.\n        \"\"\"", "\n", "print", "(", "'Loading the trained models from step {}...'", ".", "format", "(", "resume_iters", ")", ")", "\n", "\n", "if", "model_name", "==", "\"teacher\"", ":", "\n", "            ", "generator_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'generator-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "encoder_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'encoder-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "\n", "self", ".", "generator", ".", "load_state_dict", "(", "torch", ".", "load", "(", "generator_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "self", ".", "encoder", ".", "load_state_dict", "(", "torch", ".", "load", "(", "encoder_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "", "else", ":", "\n", "            ", "Student_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'student-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "self", ".", "Student", ".", "load_state_dict", "(", "torch", ".", "load", "(", "Student_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "\n", "", "", "def", "reset_grad", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Reset the gradient buffers.\n        \"\"\"", "\n", "self", ".", "student_optimizer", ".", "zero_grad", "(", ")", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_TD_regularization.prediction.L2S_KDnet_withoutTDRegularization.reset_grad": [[78, 86], ["prediction.L2S_KDnet_withoutTDRegularization.student_optimizer.zero_grad", "prediction.L2S_KDnet_withoutTDRegularization.d_optimizer.zero_grad", "prediction.L2S_KDnet_withoutTDRegularization.g_optimizer.zero_grad", "prediction.L2S_KDnet_withoutTDRegularization.e_optimizer.zero_grad"], "methods", ["None"], ["self", ".", "d_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "g_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "e_optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "", "def", "show_mtrx", "(", "self", ",", "m", ",", "name", ")", ":", "\n", "        ", "\"\"\"\n        Visualize matrix and save.\n        \"\"\"", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "figsize", "=", "(", "20", ",", "10", ")", ")", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_TD_regularization.prediction.L2S_KDnet_withoutTDRegularization.show_mtrx": [[87, 98], ["matplotlib.subplots", "matplotlib.subplots", "ax.matshow", "fig.colorbar", "os.path.join", "matplotlib.savefig", "matplotlib.savefig"], "methods", ["None"], ["cax", "=", "ax", ".", "matshow", "(", "m", ",", "cmap", "=", "plt", ".", "cm", ".", "seismic", ")", "\n", "fig", ".", "colorbar", "(", "cax", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"{}_{}_{}.png\"", ".", "format", "(", "name", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ")", "\n", "# plt.show()", "\n", "\n", "", "def", "any_loss", "(", "self", ",", "real", ",", "predicted", ",", "metric", ")", ":", "\n", "        ", "\"\"\"\n        Compute KL, MAE losses.\n        \"\"\"", "\n", "self", ".", "MAE", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_TD_regularization.prediction.L2S_KDnet_withoutTDRegularization.any_loss": [[100, 140], ["torch.nn.L1Loss", "nn.KLDivLoss", "nn.LogSoftmax", "nn.LogSoftmax.", "prediction.L2S_KDnet_withoutTDRegularization.KL", "prediction.L2S_KDnet_withoutTDRegularization.MAE", "prediction.L2S_KDnet_withoutTDRegularization.MAE", "topological_measures", "topological_measures", "torch.tensor", "torch.tensor", "topological_measures", "topological_measures", "torch.tensor", "sklearn.metrics.mean_absolute_error", "sklearn.metrics.mean_absolute_error", "sklearn.metrics.mean_absolute_error"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures"], ["if", "metric", "==", "'KL'", ":", "\n", "            ", "m", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "predicted", "=", "m", "(", "predicted", ")", "\n", "return", "self", ".", "KL", "(", "predicted", ",", "real", ")", "\n", "", "elif", "metric", "==", "'MAE'", ":", "\n", "            ", "return", "self", ".", "MAE", "(", "real", ",", "predicted", ")", "\n", "", "elif", "metric", "==", "'global_topology'", ":", "\n", "            ", "return", "self", ".", "MAE", "(", "real", ",", "predicted", ")", "\n", "", "elif", "metric", "==", "'local_topology'", ":", "\n", "            ", "if", "real", ".", "shape", "[", "1", "]", "==", "595", ":", "# feature vector -> 595 extracted from 35x35", "\n", "                ", "size", "=", "35", "\n", "", "else", ":", "# feature vector -> 12720 extracted from 160x160", "\n", "                ", "size", "=", "160", "\n", "\n", "# Local topology loss", "\n", "", "real_topology", "=", "topological_measures", "(", "real", ",", "size", ")", "\n", "fake_topology", "=", "topological_measures", "(", "predicted", ",", "size", ")", "\n", "\n", "# 0:Eigenvector    1:PageRank", "\n", "return", "torch", ".", "tensor", "(", "\n", "mean_absolute_error", "(", "fake_topology", "[", "0", "]", ",", "real_topology", "[", "0", "]", ")", ",", "requires_grad", "=", "True", ")", ",", "torch", ".", "tensor", "(", "\n", "mean_absolute_error", "(", "fake_topology", "[", "1", "]", ",", "real_topology", "[", "1", "]", ")", ",", "requires_grad", "=", "True", ")", "\n", "", "elif", "metric", "==", "'eigenvector'", ":", "\n", "            ", "if", "real", ".", "shape", "[", "1", "]", "==", "595", ":", "# feature vector -> 595 extracted from 35x35", "\n", "                ", "size", "=", "35", "\n", "", "else", ":", "# feature vector -> 12720 extracted from 160x160", "\n", "                ", "size", "=", "160", "\n", "\n", "# Local topology loss", "\n", "", "real_topology", "=", "topological_measures", "(", "real", ",", "size", ",", "True", ")", "\n", "fake_topology", "=", "topological_measures", "(", "predicted", ",", "size", ",", "True", ")", "\n", "\n", "# 0:Eigenvector", "\n", "return", "torch", ".", "tensor", "(", "mean_absolute_error", "(", "fake_topology", "[", "0", "]", ",", "real_topology", "[", "0", "]", ")", ",", "requires_grad", "=", "True", ")", "\n", "", "", "def", "train", "(", "self", ",", "fold", ")", ":", "\n", "        ", "\"\"\"\n        Train TS\n        \"\"\"", "\n", "t0_iter_M", "=", "iter", "(", "self", ".", "real_morphological_loader", ")", "\n", "t0_iter_F", "=", "iter", "(", "self", ".", "real_functional_loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_TD_regularization.prediction.L2S_KDnet_withoutTDRegularization.train": [[141, 402], ["iter", "iter", "print", "print", "print", "time.time", "print", "print", "print", "range", "morph_iters.append", "func_iters.append", "prediction.L2S_KDnet_withoutTDRegularization.restore_model", "print", "t0_morph_encoder_T[].to", "t0_func_encoder_T[].to", "print", "torch.eye().to", "prediction.L2S_KDnet_withoutTDRegularization.encoder", "torch.eye().to", "prediction.L2S_KDnet_withoutTDRegularization.generator", "prediction.L2S_KDnet_withoutTDRegularization.discriminator", "F.binary_cross_entropy_with_logits", "prediction.L2S_KDnet_withoutTDRegularization.any_loss", "prediction.L2S_KDnet_withoutTDRegularization.any_loss().item", "prediction.L2S_KDnet_withoutTDRegularization.reset_grad", "g_loss.backward", "prediction.L2S_KDnet_withoutTDRegularization.g_optimizer.step", "prediction.L2S_KDnet_withoutTDRegularization.e_optimizer.step", "print", "generator_loss.append", "scipy.stats.norm.fit", "np.random.normal", "torch.Tensor", "torch.eye().to", "prediction.L2S_KDnet_withoutTDRegularization.discriminator", "torch.eye().to", "prediction.L2S_KDnet_withoutTDRegularization.discriminator", "print", "F.binary_cross_entropy_with_logits", "F.binary_cross_entropy_with_logits", "prediction.L2S_KDnet_withoutTDRegularization.reset_grad", "d_loss.backward", "prediction.L2S_KDnet_withoutTDRegularization.d_optimizer.step", "print", "discriminator_loss.append", "iter", "iter", "next", "next", "torch.ones_like", "g_loss.item", "g_loss.item", "t0_func_encoder_T[].to.detach", "torch.ones_like", "sigmoid_fake.detach", "torch.zeros_like", "d_loss.item", "d_loss.item", "print", "os.path.join", "torch.save", "os.path.join", "torch.save", "print", "print", "print", "print", "prediction.L2S_KDnet_withoutTDRegularization.restore_model", "prediction.L2S_KDnet_withoutTDRegularization.encoder.eval", "prediction.L2S_KDnet_withoutTDRegularization.generator.eval", "print", "print", "print", "range", "iter", "next", "iter", "next", "torch.eye", "torch.eye", "prediction.L2S_KDnet_withoutTDRegularization.any_loss", "torch.eye", "torch.eye", "time.time", "str", "prediction.L2S_KDnet_withoutTDRegularization.generator.state_dict", "prediction.L2S_KDnet_withoutTDRegularization.encoder.state_dict", "torch.no_grad", "torch.eye().to", "prediction.L2S_KDnet_withoutTDRegularization.encoder", "torch.eye().to", "prediction.L2S_KDnet_withoutTDRegularization.generator", "print", "torch.eye().to", "prediction.L2S_KDnet_withoutTDRegularization.Student", "prediction.L2S_KDnet_withoutTDRegularization.any_loss", "prediction.L2S_KDnet_withoutTDRegularization.any_loss", "print", "prediction.L2S_KDnet_withoutTDRegularization.reset_grad", "student_loss.backward", "prediction.L2S_KDnet_withoutTDRegularization.student_optimizer.step", "loss_students_plot.append", "loss_embedding_plot.append", "datetime.timedelta", "student_loss.detach().item", "student_loss.item", "os.path.join", "torch.save", "print", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "print", "print", "print", "torch.eye", "torch.eye", "torch.eye", "prediction.L2S_KDnet_withoutTDRegularization.Student.state_dict", "epochs.append", "losses.append", "epochs.append", "losses.append", "epochs.append", "losses.append", "student_loss.detach", "i.detach().item", "i.detach"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad"], ["morph_iters", "=", "[", "]", "\n", "for", "loader", "in", "self", ".", "real_morphological_loader", ":", "\n", "            ", "morph_iters", ".", "append", "(", "iter", "(", "loader", ")", ")", "\n", "\n", "", "func_iters", "=", "[", "]", "\n", "for", "loader", "in", "self", ".", "real_functional_loader", ":", "\n", "            ", "func_iters", ".", "append", "(", "iter", "(", "loader", ")", ")", "\n", "\n", "# Start training from scratch or resume training.", "\n", "", "start_iters", "=", "0", "\n", "if", "self", ".", "opts", ".", "resume_iters", ":", "\n", "            ", "start_iters", "=", "self", ".", "opts", ".", "resume_iters", "\n", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "resume_iters", ",", "fold", ")", "\n", "\n", "# Start training.", "\n", "", "print", "(", "\"********-------------*********\"", ")", "\n", "print", "(", "'Super-resolution TS network...'", ")", "\n", "print", "(", "\"********-------------*********\"", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "loss_students_plot", "=", "[", "]", "\n", "loss_embedding_plot", "=", "[", "]", "\n", "\n", "generator_loss", "=", "[", "]", "\n", "discriminator_loss", "=", "[", "]", "\n", "\n", "print", "(", "\"################################\"", ")", "\n", "print", "(", "\" 1. Train the Teacher\"", ")", "\n", "print", "(", "\"################################\"", ")", "\n", "for", "i", "in", "range", "(", "start_iters", ",", "self", ".", "opts", ".", "num_iters", ")", ":", "\n", "            ", "print", "(", "\"-------------iteration-{}-------------\"", ".", "format", "(", "i", ")", ")", "\n", "# =================================================================================== #", "\n", "#                             1. Preprocess input data                                #", "\n", "# =================================================================================== #", "\n", "try", ":", "\n", "                ", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "except", ":", "\n", "                ", "t0_iter_M", "=", "iter", "(", "self", ".", "real_morphological_loader", ")", "\n", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "t0_M_encoder_T", "=", "t0_morph_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "try", ":", "\n", "                ", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "", "except", ":", "\n", "                ", "t0_iter_F", "=", "iter", "(", "self", ".", "real_functional_loader", ")", "\n", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "", "t0_F_encoder_T", "=", "t0_func_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                           2. Train generators                                       #", "\n", "# =================================================================================== #", "\n", "print", "(", "\"-------------Train the generators-------------\"", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding", "=", "self", ".", "encoder", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "super_resolved_matrix", "=", "self", ".", "generator", "(", "embedding", ",", "adj", ")", "\n", "\n", "sigmoid", ",", "softmax", "=", "self", ".", "discriminator", "(", "embedding", ",", "adj", ")", "\n", "\n", "g_loss_adversarial", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid", ",", "torch", ".", "ones_like", "(", "sigmoid", ")", ")", "\n", "\n", "teacher_loss", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "super_resolved_matrix", ",", "\"global_topology\"", ")", "\n", "\n", "g_loss", "=", "g_loss_adversarial", "+", "(", "self", ".", "opts", ".", "teacher_loss_weight", "*", "teacher_loss", ")", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "self", ".", "g_optimizer", ".", "step", "(", ")", "\n", "self", ".", "e_optimizer", ".", "step", "(", ")", "\n", "\n", "print", "(", "\"Generator Loss: \"", ",", "g_loss", ".", "item", "(", ")", ")", "\n", "generator_loss", ".", "append", "(", "g_loss", ".", "item", "(", ")", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                             2. Train the discriminator                              #", "\n", "# =================================================================================== #", "\n", "\n", "(", "mu", ",", "sigma", ")", "=", "norm", ".", "fit", "(", "t0_F_encoder_T", ".", "detach", "(", ")", ")", "\n", "dist", "=", "np", ".", "random", ".", "normal", "(", "mu", ",", "sigma", ",", "(", "279", ",", "50", ")", ")", "\n", "real_dist", "=", "torch", ".", "Tensor", "(", "dist", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "dist", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "sigmoid_real", ",", "softmax_real", "=", "self", ".", "discriminator", "(", "real_dist", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "sigmoid_fake", ",", "softmax_fake", "=", "self", ".", "discriminator", "(", "embedding", ",", "adj", ")", "\n", "\n", "print", "(", "\"Train the discriminator\"", ")", "\n", "\n", "real_loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid_real", ",", "\n", "(", "torch", ".", "ones_like", "(", "sigmoid_real", ",", "requires_grad", "=", "False", ")", ")", ")", "\n", "fake_loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid_fake", ".", "detach", "(", ")", ",", "\n", "torch", ".", "zeros_like", "(", "sigmoid_fake", ")", ")", "\n", "\n", "d_loss", "=", "(", "real_loss", "+", "fake_loss", ")", "/", "2", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "self", ".", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "print", "(", "\"Discriminator Loss: \"", ",", "d_loss", ".", "item", "(", ")", ")", "\n", "discriminator_loss", ".", "append", "(", "d_loss", ".", "item", "(", ")", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                                 3. Miscellaneous                                    #", "\n", "# =================================================================================== #", "\n", "# print out training information.", "\n", "if", "(", "i", "+", "1", ")", "%", "self", ".", "opts", ".", "log_step", "==", "0", ":", "\n", "                ", "et", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "et", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "et", ")", ")", "[", ":", "-", "7", "]", "\n", "log", "=", "\"Elapsed [{}], Iteration [{}/{}]\"", ".", "format", "(", "et", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "num_iters", ")", "\n", "\"\"\"for tag, value in loss.items():\n                    log += \", {}: {:.4f}\".format(tag, value)\n                \"\"\"", "\n", "print", "(", "log", ")", "\n", "\n", "# save model checkpoints.", "\n", "", "if", "(", "i", "+", "1", ")", "%", "self", ".", "opts", ".", "model_save_step", "==", "0", ":", "\n", "                ", "generator_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'generator-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "\n", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "generator", ".", "state_dict", "(", ")", ",", "generator_path", ")", "\n", "\n", "encoder_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'encoder-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "encoder", ".", "state_dict", "(", ")", ",", "encoder_path", ")", "\n", "\n", "print", "(", "'Saved model checkpoints into {}...'", ".", "format", "(", "self", ".", "opts", ".", "checkpoint_dir", ")", ")", "\n", "\n", "print", "(", "'============================='", ")", "\n", "print", "(", "\"End of Training Teacher\"", ")", "\n", "print", "(", "'============================='", ")", "\n", "\n", "", "if", "i", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "# =================================================================================== #", "\n", "#      Restore the trained teacher  from the last iteration to train the Student      #", "\n", "# =================================================================================== #", "\n", "                ", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "test_iters", ",", "model_name", "=", "\"teacher\"", ",", "fold", "=", "fold", ")", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding", "=", "self", ".", "encoder", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "predicted_F_teacher", "=", "self", ".", "generator", "(", "embedding", ",", "adj", ")", "\n", "\n", "", "print", "(", "\"################################\"", ")", "\n", "print", "(", "\" 3. Train the Student \"", ")", "\n", "print", "(", "\"################################\"", ")", "\n", "for", "j", "in", "range", "(", "start_iters", ",", "self", ".", "opts", ".", "num_iters", ")", ":", "\n", "                    ", "print", "(", "\"-------------iteration{}-------------\"", ".", "format", "(", "j", ")", ")", "\n", "# =================================================================================== #", "\n", "#                                 Train the Student                                   #", "\n", "# =================================================================================== #", "\n", "student_loss", "=", "0", "\n", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding_student", ",", "predicted_F_student", "=", "self", ".", "Student", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding_student", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "predict_decoderof_t_usingembed_s", "=", "self", ".", "generator", "(", "embedding_student", ",", "adj", ")", "\n", "\n", "student_loss_1", "=", "self", ".", "any_loss", "(", "predicted_F_student", ",", "predicted_F_teacher", ",", "\"global_topology\"", ")", "\n", "student_loss_2", "=", "self", ".", "any_loss", "(", "embedding_student", ",", "embedding", ",", "\"global_topology\"", ")", "\n", "student_loss_3", "=", "self", ".", "any_loss", "(", "predict_decoderof_t_usingembed_s", ",", "predicted_F_teacher", ",", "\n", "\"global_topology\"", ")", "\n", "student_loss", "=", "(", "student_loss_1", "+", "student_loss_2", "+", "student_loss_3", ")", "/", "3", "\n", "\n", "print", "(", "\"Student Loss: \"", ",", "student_loss", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "student_loss", ".", "backward", "(", ")", "\n", "self", ".", "student_optimizer", ".", "step", "(", ")", "\n", "\n", "# Logging.", "\n", "loss", "=", "{", "'Student/loss'", ":", "student_loss", ".", "item", "(", ")", "}", "\n", "loss_students_plot", ".", "append", "(", "student_loss", ")", "\n", "loss_embedding_plot", ".", "append", "(", "student_loss_2", ")", "\n", "\n", "# save model checkpoints.", "\n", "if", "(", "j", "+", "1", ")", "%", "self", ".", "opts", ".", "model_save_step", "==", "0", ":", "\n", "                        ", "Student_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'student-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "Student", ".", "state_dict", "(", ")", ",", "Student_path", ")", "\n", "print", "(", "'Saved model checkpoints into {}...'", ".", "format", "(", "self", ".", "opts", ".", "checkpoint_dir", ")", ")", "\n", "\n", "", "if", "j", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "                        ", "plt", ".", "figure", "(", "1", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "generator_loss", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ")", "\n", "counter", "+=", "1", "\n", "", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-b'", ",", "label", "=", "\"Generator\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"generatorLoss_{}_{}_{}.png\"", ".", "format", "(", "\n", "fold", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "plt", ".", "figure", "(", "2", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "discriminator_loss", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ")", "\n", "counter", "+=", "1", "\n", "", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-r'", ",", "label", "=", "\"Discriminator\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"discriminatorLoss_{}_{}_{}.png\"", ".", "format", "(", "\n", "fold", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "", "if", "j", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "                        ", "plt", ".", "figure", "(", "3", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "loss_students_plot", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "counter", "+=", "1", "\n", "", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-g'", ",", "label", "=", "\"Student\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"studentLoss_{}_{}_{}.png\"", ".", "format", "(", "\n", "fold", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "print", "(", "'============================================'", ")", "\n", "print", "(", "\"End of Training the Student\"", ")", "\n", "print", "(", "'============================================'", ")", "\n", "\n", "", "", "", "", "", "def", "test", "(", "self", ",", "real_morphological_loader", ",", "real_functional_loader", ",", "i", ")", ":", "\n", "        ", "\"\"\"\n        Test the trained Students on another dataset.\n        \"\"\"", "\n", "print", "(", "\"################################################################################\"", ")", "\n", "print", "(", "\" 2. Restore the trained student from the last iteration to test the Student \"", ")", "\n", "print", "(", "\"################################################################################\"", ")", "\n", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "test_iters", ",", "model_name", "=", "\"teacher\"", ",", "fold", "=", "i", ")", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet_wo_TD_regularization.prediction.L2S_KDnet_withoutTDRegularization.test": [[403, 487], ["print", "print", "print", "prediction.L2S_KDnet_withoutTDRegularization.restore_model", "prediction.L2S_KDnet_withoutTDRegularization.encoder.eval", "prediction.L2S_KDnet_withoutTDRegularization.generator.eval", "prediction.L2S_KDnet_withoutTDRegularization.restore_model", "prediction.L2S_KDnet_withoutTDRegularization.Student.eval", "iter", "iter", "t0_morph_encoder_T[].to", "t0_func_encoder_T[].to", "prediction.L2S_KDnet_withoutTDRegularization.any_loss", "print", "prediction.L2S_KDnet_withoutTDRegularization.any_loss", "prediction.L2S_KDnet_withoutTDRegularization.any_loss", "prediction.L2S_KDnet_withoutTDRegularization.any_loss", "print", "prediction.L2S_KDnet_withoutTDRegularization.any_loss", "print", "print", "print", "print", "print", "prediction.L2S_KDnet_withoutTDRegularization.detach().cpu().numpy", "pd.DataFrame", "pd.DataFrame.to_csv", "print", "predicted_F_student.detach().cpu().numpy", "pd.DataFrame", "pd.DataFrame.to_csv", "next", "next", "torch.no_grad", "torch.eye().to", "prediction.L2S_KDnet_withoutTDRegularization.encoder", "torch.eye().to", "prediction.L2S_KDnet_withoutTDRegularization.generator", "prediction.L2S_KDnet_withoutTDRegularization.Student", "prediction.L2S_KDnet_withoutTDRegularization.item", "prediction.L2S_KDnet_withoutTDRegularization.item", "prediction.L2S_KDnet_withoutTDRegularization.item", "eigenvectorS.item", "pagerankS.item", "eigenvectorT.item", "pagerankT.item", "prediction.L2S_KDnet_withoutTDRegularization.item", "prediction.L2S_KDnet_withoutTDRegularization.item", "prediction.L2S_KDnet_withoutTDRegularization.item", "iter", "next", "iter", "next", "prediction.L2S_KDnet_withoutTDRegularization.detach().cpu", "predicted_F_student.detach().cpu().numpy.astype", "predicted_F_student.detach().cpu", "predicted_F_student.detach().cpu().numpy.astype", "torch.eye", "torch.eye", "prediction.L2S_KDnet_withoutTDRegularization.detach", "predicted_F_student.detach"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss"], ["self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "test_iters", ",", "model_name", "=", "\"student\"", ",", "fold", "=", "i", ")", "\n", "self", ".", "Student", ".", "eval", "(", ")", "\n", "\n", "t0_iter_M", "=", "iter", "(", "real_morphological_loader", ")", "\n", "t0_iter_F", "=", "iter", "(", "real_functional_loader", ")", "\n", "\n", "try", ":", "\n", "            ", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "except", ":", "\n", "            ", "t0_iter_M", "=", "iter", "(", "real_morphological_loader", ")", "\n", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "t0_M_encoder_T", "=", "t0_morph_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "try", ":", "\n", "            ", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "", "except", ":", "\n", "            ", "t0_iter_F", "=", "iter", "(", "real_functional_loader", ")", "\n", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "\n", "", "t0_F_encoder_T", "=", "t0_func_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding_teacher", "=", "self", ".", "encoder", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding_teacher", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "predicted_F_teacher", "=", "self", ".", "generator", "(", "embedding_teacher", ",", "adj", ")", "\n", "\n", "embedding_student", ",", "predicted_F_student", "=", "self", ".", "Student", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "", "student_loss_KL", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_student", ",", "\"KL\"", ")", "\n", "print", "(", "\"Student Evaluation KL: \"", ",", "student_loss_KL", ".", "item", "(", ")", ")", "\n", "\n", "eigenvectorS", ",", "pagerankS", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_student", ",", "\"local_topology\"", ")", "\n", "\n", "eigenvectorT", ",", "pagerankT", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_teacher", ",", "\"local_topology\"", ")", "\n", "\n", "student_loss_G", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_student", ",", "\"global_topology\"", ")", "\n", "print", "(", "\"Student Evaluation Global: \"", ",", "student_loss_G", ".", "item", "(", ")", ")", "\n", "\n", "teacher_loss_G", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_teacher", ",", "\"global_topology\"", ")", "\n", "print", "(", "\"Teacher Evaluation Global: \"", ",", "teacher_loss_G", ".", "item", "(", ")", ")", "\n", "\n", "print", "(", "'============================='", ")", "\n", "print", "(", "\"End of Testing both networks\"", ")", "\n", "print", "(", "'============================='", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                          Save results of both networks                              #", "\n", "# =================================================================================== #", "\n", "print", "(", "\"saving TS prediction into csv file...\"", ")", "\n", "f", "=", "predicted_F_teacher", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "dataframe", "=", "pd", ".", "DataFrame", "(", "data", "=", "f", ".", "astype", "(", "float", ")", ")", "\n", "dataframe", ".", "to_csv", "(", "\n", "r'%s/results/teacher_predicted_functional_graphs_%d_%f_%f.csv'", "%", "(", "\n", "self", ".", "opts", ".", "result_root", ",", "i", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ",", "sep", "=", "' '", ",", "header", "=", "True", ",", "\n", "float_format", "=", "'%.6f'", ",", "index", "=", "False", ")", "\n", "\n", "print", "(", "\"saving TS prediction into csv file...\"", ")", "\n", "f", "=", "predicted_F_student", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "dataframe", "=", "pd", ".", "DataFrame", "(", "data", "=", "f", ".", "astype", "(", "float", ")", ")", "\n", "dataframe", ".", "to_csv", "(", "\n", "r'%s/results/student_predicted_functional_graphs_%d_%f_%f.csv'", "%", "(", "self", ".", "opts", ".", "result_root", ",", "\n", "i", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ",", "sep", "=", "' '", ",", "\n", "header", "=", "True", ",", "\n", "float_format", "=", "'%.6f'", ",", "index", "=", "False", ")", "\n", "\n", "return", "eigenvectorS", ".", "item", "(", ")", ",", "pagerankS", ".", "item", "(", ")", ",", "eigenvectorT", ".", "item", "(", ")", ",", "pagerankT", ".", "item", "(", ")", ",", "student_loss_G", ".", "item", "(", ")", ",", "teacher_loss_G", ".", "item", "(", ")", ",", "student_loss_KL", ".", "item", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline_with_discriminator_for_decoder.prediction.BaselineWDiscriminatorForDecoder.__init__": [[20, 32], ["torch.nn.L1Loss", "torch.device", "prediction.BaselineWDiscriminatorForDecoder.build_model", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.build_model"], ["        ", "self", ".", "real_morphological_loader", "=", "real_morphological_loader", "\n", "self", ".", "real_functional_loader", "=", "real_functional_loader", "\n", "self", ".", "criterionIdt", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "opts", "=", "opts", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "self", ".", "build_model", "(", ")", "\n", "\n", "", "def", "build_model", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Build teachers and students and encoder and initialize optimizers.\n        \"\"\"", "\n", "## Teacher model components", "\n", "self", ".", "encoder", "=", "GCNencoder", "(", "self", ".", "opts", ".", "in_feature_t0", ",", "self", ".", "opts", ".", "hidden1", ",", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline_with_discriminator_for_decoder.prediction.BaselineWDiscriminatorForDecoder.show_mtrx": [[33, 46], ["matplotlib.subplots", "matplotlib.subplots", "int", "int", "ax.matshow", "fig.colorbar", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "m.min", "m.max", "int"], "methods", ["None"], ["self", ".", "device", ")", "\n", "self", ".", "discriminator", "=", "Discriminator", "(", "self", ".", "opts", ".", "hidden2", ",", "1", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "generator", "=", "GCNdecoder", "(", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "hidden3", ",", "self", ".", "opts", ".", "SRout", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "\n", "self", ".", "device", ")", "\n", "## Student model", "\n", "self", ".", "Student", "=", "Student", "(", "self", ".", "opts", ".", "in_feature_t0", ",", "self", ".", "opts", ".", "hidden1", ",", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "hidden3", ",", "\n", "self", ".", "opts", ".", "SRout", ",", "\n", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "## initializations of optimizers", "\n", "self", ".", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "discriminator", ".", "parameters", "(", ")", ",", "self", ".", "opts", ".", "d_lr", ",", "\n", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "self", ".", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "generator", ".", "parameters", "(", ")", ",", "self", ".", "opts", ".", "g_lr", ",", "\n", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline_with_discriminator_for_decoder.prediction.BaselineWDiscriminatorForDecoder.build_model": [[48, 73], ["Teacher().to", "Student().to", "Discriminator().to", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "prediction.BaselineWDiscriminatorForDecoder.Teacher.parameters", "prediction.BaselineWDiscriminatorForDecoder.Student.parameters", "itertools.chain", "prediction.BaselineWDiscriminatorForDecoder.discriminator.parameters", "Teacher", "Student", "Discriminator"], "methods", ["None"], ["[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "param_list", "=", "[", "self", ".", "Student", ".", "parameters", "(", ")", "]", "\n", "self", ".", "student_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "itertools", ".", "chain", "(", "*", "param_list", ")", ",", "\n", "self", ".", "opts", ".", "s_lr", ",", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "\n", "", "def", "restore_model", "(", "self", ",", "resume_iters", ",", "model_name", "=", "\"teacher\"", ",", "fold", "=", "0", ")", ":", "\n", "        ", "\"\"\"\n        Restore the trained students and encoder.\n        \"\"\"", "\n", "print", "(", "'Loading the trained models from step {}...'", ".", "format", "(", "resume_iters", ")", ")", "\n", "\n", "if", "model_name", "==", "\"teacher\"", ":", "\n", "            ", "generator_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'generator-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "encoder_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'encoder-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "\n", "self", ".", "generator", ".", "load_state_dict", "(", "torch", ".", "load", "(", "generator_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "self", ".", "encoder", ".", "load_state_dict", "(", "torch", ".", "load", "(", "encoder_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "", "else", ":", "\n", "            ", "Student_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'student-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "self", ".", "Student", ".", "load_state_dict", "(", "torch", ".", "load", "(", "Student_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "\n", "", "", "def", "reset_grad", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline_with_discriminator_for_decoder.prediction.BaselineWDiscriminatorForDecoder.restore_model": [[74, 95], ["print", "os.path.join", "prediction.BaselineWDiscriminatorForDecoder.Teacher.load_state_dict", "os.path.join", "prediction.BaselineWDiscriminatorForDecoder.Student.load_state_dict", "torch.load", "torch.load"], "methods", ["None"], ["        ", "\"\"\"\n        Reset the gradient buffers.\n        \"\"\"", "\n", "self", ".", "student_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "d_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "g_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "e_optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "", "def", "show_mtrx", "(", "self", ",", "m", ",", "name", ")", ":", "\n", "        ", "\"\"\"\n        Visualize matrix and save.\n        \"\"\"", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "figsize", "=", "(", "20", ",", "10", ")", ")", "\n", "cax", "=", "ax", ".", "matshow", "(", "m", ",", "cmap", "=", "plt", ".", "cm", ".", "seismic", ")", "\n", "fig", ".", "colorbar", "(", "cax", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"{}_{}_{}.png\"", ".", "format", "(", "name", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ")", "\n", "# plt.show()", "\n", "\n", "", "def", "any_loss", "(", "self", ",", "real", ",", "predicted", ",", "metric", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline_with_discriminator_for_decoder.prediction.BaselineWDiscriminatorForDecoder.reset_grad": [[96, 103], ["prediction.BaselineWDiscriminatorForDecoder.student_optimizer.zero_grad", "prediction.BaselineWDiscriminatorForDecoder.d_optimizer.zero_grad", "prediction.BaselineWDiscriminatorForDecoder.g_optimizer.zero_grad"], "methods", ["None"], ["\n", "self", ".", "MAE", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "KL", "=", "nn", ".", "KLDivLoss", "(", ")", "\n", "if", "metric", "==", "'KL'", ":", "\n", "            ", "m", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "predicted", "=", "m", "(", "predicted", ")", "\n", "return", "self", ".", "KL", "(", "predicted", ",", "real", ")", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline_with_discriminator_for_decoder.prediction.BaselineWDiscriminatorForDecoder.any_loss": [[104, 144], ["torch.nn.L1Loss", "nn.KLDivLoss", "nn.LogSoftmax", "nn.LogSoftmax.", "prediction.BaselineWDiscriminatorForDecoder.KL", "prediction.BaselineWDiscriminatorForDecoder.MAE", "prediction.BaselineWDiscriminatorForDecoder.MAE", "topological_measures", "topological_measures", "torch.tensor", "torch.tensor", "topological_measures", "topological_measures", "torch.tensor", "sklearn.metrics.mean_absolute_error", "sklearn.metrics.mean_absolute_error", "sklearn.metrics.mean_absolute_error"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures"], ["", "elif", "metric", "==", "'MAE'", ":", "\n", "            ", "return", "self", ".", "MAE", "(", "real", ",", "predicted", ")", "\n", "", "elif", "metric", "==", "'global_topology'", ":", "\n", "            ", "return", "self", ".", "MAE", "(", "real", ",", "predicted", ")", "\n", "", "elif", "metric", "==", "'local_topology'", ":", "\n", "            ", "if", "real", ".", "shape", "[", "1", "]", "==", "595", ":", "# feature vector -> 595 extracted from 35x35", "\n", "                ", "size", "=", "35", "\n", "", "else", ":", "# feature vector -> 12720 extracted from 160x160", "\n", "                ", "size", "=", "160", "\n", "\n", "# Local topology loss", "\n", "", "real_topology", "=", "topological_measures", "(", "real", ",", "size", ")", "\n", "fake_topology", "=", "topological_measures", "(", "predicted", ",", "size", ")", "\n", "\n", "# 0:Eigenvector    1:PageRank", "\n", "return", "torch", ".", "tensor", "(", "\n", "mean_absolute_error", "(", "fake_topology", "[", "0", "]", ",", "real_topology", "[", "0", "]", ")", ",", "requires_grad", "=", "True", ")", ",", "torch", ".", "tensor", "(", "\n", "mean_absolute_error", "(", "fake_topology", "[", "1", "]", ",", "real_topology", "[", "1", "]", ")", ",", "requires_grad", "=", "True", ")", "\n", "", "elif", "metric", "==", "'eigenvector'", ":", "\n", "            ", "if", "real", ".", "shape", "[", "1", "]", "==", "595", ":", "# feature vector -> 595 extracted from 35x35", "\n", "                ", "size", "=", "35", "\n", "", "else", ":", "# feature vector -> 12720 extracted from 160x160", "\n", "                ", "size", "=", "160", "\n", "\n", "# Local topology loss", "\n", "", "real_topology", "=", "topological_measures", "(", "real", ",", "size", ",", "True", ")", "\n", "fake_topology", "=", "topological_measures", "(", "predicted", ",", "size", ",", "True", ")", "\n", "\n", "# 0:Eigenvector", "\n", "return", "torch", ".", "tensor", "(", "mean_absolute_error", "(", "fake_topology", "[", "0", "]", ",", "real_topology", "[", "0", "]", ")", ",", "requires_grad", "=", "True", ")", "\n", "", "", "def", "train", "(", "self", ",", "fold", ")", ":", "\n", "        ", "\"\"\"\n        Train TS\n        \"\"\"", "\n", "t0_iter_M", "=", "iter", "(", "self", ".", "real_morphological_loader", ")", "\n", "t0_iter_F", "=", "iter", "(", "self", ".", "real_functional_loader", ")", "\n", "\n", "morph_iters", "=", "[", "]", "\n", "for", "loader", "in", "self", ".", "real_morphological_loader", ":", "\n", "            ", "morph_iters", ".", "append", "(", "iter", "(", "loader", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline_with_discriminator_for_decoder.prediction.BaselineWDiscriminatorForDecoder.train": [[145, 385], ["iter", "iter", "print", "print", "print", "time.time", "print", "print", "print", "range", "morph_iters.append", "func_iters.append", "prediction.BaselineWDiscriminatorForDecoder.restore_model", "print", "t0_morph_encoder_T[].to", "t0_func_encoder_T[].to", "print", "torch.eye().to", "prediction.BaselineWDiscriminatorForDecoder.Teacher", "torch.eye().to", "prediction.BaselineWDiscriminatorForDecoder.discriminator", "F.binary_cross_entropy_with_logits", "prediction.BaselineWDiscriminatorForDecoder.any_loss", "prediction.BaselineWDiscriminatorForDecoder.any_loss().item", "prediction.BaselineWDiscriminatorForDecoder.reset_grad", "g_loss.backward", "prediction.BaselineWDiscriminatorForDecoder.g_optimizer.step", "print", "generator_loss.append", "torch.eye().to", "prediction.BaselineWDiscriminatorForDecoder.discriminator", "torch.eye().to", "prediction.BaselineWDiscriminatorForDecoder.discriminator", "print", "F.binary_cross_entropy_with_logits", "F.binary_cross_entropy_with_logits", "prediction.BaselineWDiscriminatorForDecoder.reset_grad", "d_loss.backward", "prediction.BaselineWDiscriminatorForDecoder.d_optimizer.step", "print", "discriminator_loss.append", "iter", "iter", "next", "next", "torch.ones_like", "g_loss.item", "g_loss.item", "torch.ones_like", "sigmoid_fake.detach", "torch.zeros_like", "d_loss.item", "d_loss.item", "print", "os.path.join", "torch.save", "print", "print", "print", "print", "prediction.BaselineWDiscriminatorForDecoder.restore_model", "prediction.BaselineWDiscriminatorForDecoder.Teacher.eval", "print", "print", "print", "range", "iter", "next", "iter", "next", "torch.eye", "torch.eye", "prediction.BaselineWDiscriminatorForDecoder.any_loss", "torch.eye", "torch.eye", "datetime.now", "str", "prediction.BaselineWDiscriminatorForDecoder.Teacher.state_dict", "torch.no_grad", "torch.eye().to", "prediction.BaselineWDiscriminatorForDecoder.Teacher", "print", "torch.eye().to", "prediction.BaselineWDiscriminatorForDecoder.Student", "prediction.BaselineWDiscriminatorForDecoder.any_loss", "prediction.BaselineWDiscriminatorForDecoder.any_loss", "print", "prediction.BaselineWDiscriminatorForDecoder.reset_grad", "student_loss.backward", "prediction.BaselineWDiscriminatorForDecoder.student_optimizer.step", "loss_students_plot.append", "loss_embedding_plot.append", "timedelta", "student_loss.detach().item", "student_loss.item", "os.path.join", "torch.save", "print", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "print", "print", "print", "torch.eye", "torch.eye", "prediction.BaselineWDiscriminatorForDecoder.Student.state_dict", "epochs.append", "losses.append", "epochs.append", "losses.append", "epochs.append", "losses.append", "student_loss.detach", "i.detach().item", "i.detach"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad"], ["", "func_iters", "=", "[", "]", "\n", "for", "loader", "in", "self", ".", "real_functional_loader", ":", "\n", "            ", "func_iters", ".", "append", "(", "iter", "(", "loader", ")", ")", "\n", "\n", "# Start training from scratch or resume training.", "\n", "", "start_iters", "=", "0", "\n", "if", "self", ".", "opts", ".", "resume_iters", ":", "\n", "            ", "start_iters", "=", "self", ".", "opts", ".", "resume_iters", "\n", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "resume_iters", ",", "fold", ")", "\n", "\n", "# Start training.", "\n", "", "print", "(", "\"********-------------*********\"", ")", "\n", "print", "(", "'Super-resolution TS network...'", ")", "\n", "print", "(", "\"********-------------*********\"", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "loss_students_plot", "=", "[", "]", "\n", "loss_embedding_plot", "=", "[", "]", "\n", "\n", "generator_loss", "=", "[", "]", "\n", "discriminator_loss", "=", "[", "]", "\n", "\n", "print", "(", "\"################################\"", ")", "\n", "print", "(", "\" 1. Train the Teacher\"", ")", "\n", "print", "(", "\"################################\"", ")", "\n", "for", "i", "in", "range", "(", "start_iters", ",", "self", ".", "opts", ".", "num_iters", ")", ":", "\n", "            ", "print", "(", "\"-------------iteration-{}-------------\"", ".", "format", "(", "i", ")", ")", "\n", "# =================================================================================== #", "\n", "#                             1. Preprocess input data                                #", "\n", "# =================================================================================== #", "\n", "try", ":", "\n", "                ", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "except", ":", "\n", "                ", "t0_iter_M", "=", "iter", "(", "self", ".", "real_morphological_loader", ")", "\n", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "t0_M_encoder_T", "=", "t0_morph_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "try", ":", "\n", "                ", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "", "except", ":", "\n", "                ", "t0_iter_F", "=", "iter", "(", "self", ".", "real_functional_loader", ")", "\n", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "", "t0_F_encoder_T", "=", "t0_func_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                           2. Train generators                                       #", "\n", "# =================================================================================== #", "\n", "print", "(", "\"-------------Train the generators-------------\"", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding", "=", "self", ".", "encoder", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "super_resolved_matrix", "=", "self", ".", "generator", "(", "embedding", ",", "adj", ")", "\n", "\n", "sigmoid", ",", "softmax", "=", "self", ".", "discriminator", "(", "embedding", ",", "adj", ")", "\n", "\n", "g_loss_adversarial", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid", ",", "torch", ".", "ones_like", "(", "sigmoid", ")", ")", "\n", "\n", "teacher_loss", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "super_resolved_matrix", ",", "\"global_topology\"", ")", "\n", "\n", "g_loss", "=", "g_loss_adversarial", "+", "(", "self", ".", "opts", ".", "teacher_loss_weight", "*", "teacher_loss", ")", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "self", ".", "g_optimizer", ".", "step", "(", ")", "\n", "self", ".", "e_optimizer", ".", "step", "(", ")", "\n", "\n", "print", "(", "\"Generator Loss: \"", ",", "g_loss", ".", "item", "(", ")", ")", "\n", "generator_loss", ".", "append", "(", "g_loss", ".", "item", "(", ")", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                             2. Train the discriminator                              #", "\n", "# =================================================================================== #", "\n", "\n", "(", "mu", ",", "sigma", ")", "=", "norm", ".", "fit", "(", "t0_F_encoder_T", ".", "detach", "(", ")", ")", "\n", "dist", "=", "np", ".", "random", ".", "normal", "(", "mu", ",", "sigma", ",", "(", "279", ",", "50", ")", ")", "\n", "real_dist", "=", "torch", ".", "Tensor", "(", "dist", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "dist", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "sigmoid_real", ",", "softmax_real", "=", "self", ".", "discriminator", "(", "real_dist", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "sigmoid_fake", ",", "softmax_fake", "=", "self", ".", "discriminator", "(", "embedding", ",", "adj", ")", "\n", "\n", "print", "(", "\"Train the discriminator\"", ")", "\n", "\n", "real_loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid_real", ",", "\n", "(", "torch", ".", "ones_like", "(", "sigmoid_real", ",", "requires_grad", "=", "False", ")", ")", ")", "\n", "fake_loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid_fake", ".", "detach", "(", ")", ",", "\n", "torch", ".", "zeros_like", "(", "sigmoid_fake", ")", ")", "\n", "\n", "d_loss", "=", "(", "real_loss", "+", "fake_loss", ")", "/", "2", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "self", ".", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "print", "(", "\"Discriminator Loss: \"", ",", "d_loss", ".", "item", "(", ")", ")", "\n", "discriminator_loss", ".", "append", "(", "d_loss", ".", "item", "(", ")", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                                 3. Miscellaneous                                    #", "\n", "# =================================================================================== #", "\n", "# print out training information.", "\n", "if", "(", "i", "+", "1", ")", "%", "self", ".", "opts", ".", "log_step", "==", "0", ":", "\n", "                ", "et", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "et", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "et", ")", ")", "[", ":", "-", "7", "]", "\n", "log", "=", "\"Elapsed [{}], Iteration [{}/{}]\"", ".", "format", "(", "et", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "num_iters", ")", "\n", "\"\"\"for tag, value in loss.items():\n                    log += \", {}: {:.4f}\".format(tag, value)\n                \"\"\"", "\n", "print", "(", "log", ")", "\n", "\n", "# save model checkpoints.", "\n", "", "if", "(", "i", "+", "1", ")", "%", "self", ".", "opts", ".", "model_save_step", "==", "0", ":", "\n", "                ", "generator_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'generator-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "\n", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "generator", ".", "state_dict", "(", ")", ",", "generator_path", ")", "\n", "\n", "encoder_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'encoder-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "encoder", ".", "state_dict", "(", ")", ",", "encoder_path", ")", "\n", "\n", "print", "(", "'Saved model checkpoints into {}...'", ".", "format", "(", "self", ".", "opts", ".", "checkpoint_dir", ")", ")", "\n", "\n", "print", "(", "'============================='", ")", "\n", "print", "(", "\"End of Training Teacher\"", ")", "\n", "print", "(", "'============================='", ")", "\n", "\n", "", "if", "i", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "# =================================================================================== #", "\n", "#      Restore the trained teacher  from the last iteration to train the Student      #", "\n", "# =================================================================================== #", "\n", "                ", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "test_iters", ",", "model_name", "=", "\"teacher\"", ",", "fold", "=", "fold", ")", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding", "=", "self", ".", "encoder", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "predicted_F_teacher", "=", "self", ".", "generator", "(", "embedding", ",", "adj", ")", "\n", "\n", "", "print", "(", "\"################################\"", ")", "\n", "print", "(", "\" 3. Train the Student \"", ")", "\n", "print", "(", "\"################################\"", ")", "\n", "for", "j", "in", "range", "(", "start_iters", ",", "self", ".", "opts", ".", "num_iters", ")", ":", "\n", "                    ", "print", "(", "\"-------------iteration{}-------------\"", ".", "format", "(", "j", ")", ")", "\n", "# =================================================================================== #", "\n", "#                                 Train the Student                                   #", "\n", "# =================================================================================== #", "\n", "student_loss", "=", "0", "\n", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding_student", ",", "predicted_F_student", "=", "self", ".", "Student", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding_student", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "predict_decoderof_t_usingembed_s", "=", "self", ".", "generator", "(", "embedding_student", ",", "adj", ")", "\n", "\n", "student_loss_1", "=", "self", ".", "any_loss", "(", "predicted_F_student", ",", "predicted_F_teacher", ",", "\"global_topology\"", ")", "\n", "student_loss_2", "=", "self", ".", "any_loss", "(", "embedding_student", ",", "embedding", ",", "\"global_topology\"", ")", "\n", "student_loss_3", "=", "self", ".", "any_loss", "(", "predict_decoderof_t_usingembed_s", ",", "predicted_F_teacher", ",", "\n", "\"global_topology\"", ")", "\n", "student_loss", "=", "(", "student_loss_1", "+", "student_loss_2", "+", "student_loss_3", ")", "/", "3", "\n", "\n", "print", "(", "\"Student Loss: \"", ",", "student_loss", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "student_loss", ".", "backward", "(", ")", "\n", "self", ".", "student_optimizer", ".", "step", "(", ")", "\n", "\n", "# Logging.", "\n", "loss", "=", "{", "'Student/loss'", ":", "student_loss", ".", "item", "(", ")", "}", "\n", "loss_students_plot", ".", "append", "(", "student_loss", ")", "\n", "loss_embedding_plot", ".", "append", "(", "student_loss_2", ")", "\n", "\n", "# save model checkpoints.", "\n", "if", "(", "j", "+", "1", ")", "%", "self", ".", "opts", ".", "model_save_step", "==", "0", ":", "\n", "                        ", "Student_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'student-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "Student", ".", "state_dict", "(", ")", ",", "Student_path", ")", "\n", "print", "(", "'Saved model checkpoints into {}...'", ".", "format", "(", "self", ".", "opts", ".", "checkpoint_dir", ")", ")", "\n", "\n", "", "if", "j", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "                        ", "plt", ".", "figure", "(", "1", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "generator_loss", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ")", "\n", "counter", "+=", "1", "\n", "", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-b'", ",", "label", "=", "\"Generator\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"generatorLoss_{}_{}_{}.png\"", ".", "format", "(", "\n", "fold", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "plt", ".", "figure", "(", "2", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "discriminator_loss", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ")", "\n", "counter", "+=", "1", "\n", "", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-r'", ",", "label", "=", "\"Discriminator\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"discriminatorLoss_{}_{}_{}.png\"", ".", "format", "(", "\n", "fold", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "", "if", "j", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "                        ", "plt", ".", "figure", "(", "3", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "loss_students_plot", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "counter", "+=", "1", "\n", "", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-g'", ",", "label", "=", "\"Student\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline_with_discriminator_for_decoder.prediction.BaselineWDiscriminatorForDecoder.test": [[389, 470], ["print", "print", "print", "prediction.BaselineWDiscriminatorForDecoder.restore_model", "prediction.BaselineWDiscriminatorForDecoder.Teacher.eval", "prediction.BaselineWDiscriminatorForDecoder.restore_model", "prediction.BaselineWDiscriminatorForDecoder.Student.eval", "iter", "iter", "t0_morph_encoder_T[].to", "t0_func_encoder_T[].to", "prediction.BaselineWDiscriminatorForDecoder.any_loss", "print", "prediction.BaselineWDiscriminatorForDecoder.any_loss", "prediction.BaselineWDiscriminatorForDecoder.any_loss", "prediction.BaselineWDiscriminatorForDecoder.any_loss", "print", "prediction.BaselineWDiscriminatorForDecoder.any_loss", "print", "print", "print", "print", "print", "predicted_F_teacher.detach().cpu().numpy", "pd.DataFrame", "pd.DataFrame.to_csv", "print", "predicted_F_student.detach().cpu().numpy", "pd.DataFrame", "pd.DataFrame.to_csv", "next", "next", "torch.no_grad", "torch.eye().to", "prediction.BaselineWDiscriminatorForDecoder.Teacher", "prediction.BaselineWDiscriminatorForDecoder.Student", "prediction.BaselineWDiscriminatorForDecoder.item", "prediction.BaselineWDiscriminatorForDecoder.item", "prediction.BaselineWDiscriminatorForDecoder.item", "eigenvectorS.item", "pagerankS.item", "eigenvectorT.item", "pagerankT.item", "prediction.BaselineWDiscriminatorForDecoder.item", "prediction.BaselineWDiscriminatorForDecoder.item", "prediction.BaselineWDiscriminatorForDecoder.item", "iter", "next", "iter", "next", "predicted_F_teacher.detach().cpu", "predicted_F_student.detach().cpu().numpy.astype", "predicted_F_student.detach().cpu", "predicted_F_student.detach().cpu().numpy.astype", "torch.eye", "predicted_F_teacher.detach", "predicted_F_student.detach"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss"], ["\n", "print", "(", "'============================================'", ")", "\n", "print", "(", "\"End of Training the Student\"", ")", "\n", "print", "(", "'============================================'", ")", "\n", "\n", "", "", "", "", "", "def", "test", "(", "self", ",", "real_morphological_loader", ",", "real_functional_loader", ",", "i", ")", ":", "\n", "        ", "\"\"\"\n        Test the trained Students on another dataset.\n        \"\"\"", "\n", "print", "(", "\"################################################################################\"", ")", "\n", "print", "(", "\" 2. Restore the trained student from the last iteration to test the Student \"", ")", "\n", "print", "(", "\"################################################################################\"", ")", "\n", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "test_iters", ",", "model_name", "=", "\"teacher\"", ",", "fold", "=", "i", ")", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "test_iters", ",", "model_name", "=", "\"student\"", ",", "fold", "=", "i", ")", "\n", "self", ".", "Student", ".", "eval", "(", ")", "\n", "\n", "t0_iter_M", "=", "iter", "(", "real_morphological_loader", ")", "\n", "t0_iter_F", "=", "iter", "(", "real_functional_loader", ")", "\n", "\n", "try", ":", "\n", "            ", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "except", ":", "\n", "            ", "t0_iter_M", "=", "iter", "(", "real_morphological_loader", ")", "\n", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "t0_M_encoder_T", "=", "t0_morph_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "try", ":", "\n", "            ", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "", "except", ":", "\n", "            ", "t0_iter_F", "=", "iter", "(", "real_functional_loader", ")", "\n", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "\n", "", "t0_F_encoder_T", "=", "t0_func_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding_teacher", "=", "self", ".", "encoder", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding_teacher", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "predicted_F_teacher", "=", "self", ".", "generator", "(", "embedding_teacher", ",", "adj", ")", "\n", "\n", "embedding_student", ",", "predicted_F_student", "=", "self", ".", "Student", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "", "student_loss_KL", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_student", ",", "\"KL\"", ")", "\n", "print", "(", "\"Student Evaluation KL: \"", ",", "student_loss_KL", ".", "item", "(", ")", ")", "\n", "\n", "eigenvectorS", ",", "pagerankS", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_student", ",", "\"local_topology\"", ")", "\n", "\n", "eigenvectorT", ",", "pagerankT", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_teacher", ",", "\"local_topology\"", ")", "\n", "\n", "student_loss_G", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_student", ",", "\"global_topology\"", ")", "\n", "print", "(", "\"Student Evaluation Global: \"", ",", "student_loss_G", ".", "item", "(", ")", ")", "\n", "\n", "teacher_loss_G", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_teacher", ",", "\"global_topology\"", ")", "\n", "print", "(", "\"Teacher Evaluation Global: \"", ",", "teacher_loss_G", ".", "item", "(", ")", ")", "\n", "\n", "print", "(", "'============================='", ")", "\n", "print", "(", "\"End of Testing both networks\"", ")", "\n", "print", "(", "'============================='", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                          Save results of both networks                              #", "\n", "# =================================================================================== #", "\n", "print", "(", "\"saving TS prediction into csv file...\"", ")", "\n", "f", "=", "predicted_F_teacher", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "dataframe", "=", "pd", ".", "DataFrame", "(", "data", "=", "f", ".", "astype", "(", "float", ")", ")", "\n", "dataframe", ".", "to_csv", "(", "\n", "r'%s/results/teacher_predicted_functional_graphs_%d_%f_%f.csv'", "%", "(", "\n", "self", ".", "opts", ".", "result_root", ",", "i", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ",", "sep", "=", "' '", ",", "header", "=", "True", ",", "\n", "float_format", "=", "'%.6f'", ",", "index", "=", "False", ")", "\n", "\n", "print", "(", "\"saving TS prediction into csv file...\"", ")", "\n", "f", "=", "predicted_F_student", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "dataframe", "=", "pd", ".", "DataFrame", "(", "data", "=", "f", ".", "astype", "(", "float", ")", ")", "\n", "dataframe", ".", "to_csv", "(", "\n", "r'%s/results/student_predicted_functional_graphs_%d_%f_%f.csv'", "%", "(", "self", ".", "opts", ".", "result_root", ",", "\n", "i", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ",", "sep", "=", "' '", ",", "\n", "header", "=", "True", ",", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline.prediction.Baseline.__init__": [[19, 28], ["torch.device", "prediction.Baseline.build_model", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.build_model"], ["\n", "        ", "self", ".", "real_morphological_loader", "=", "real_morphological_loader", "\n", "self", ".", "real_functional_loader", "=", "real_functional_loader", "\n", "self", ".", "criterionIdt", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "opts", "=", "opts", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "self", ".", "build_model", "(", ")", "\n", "\n", "", "def", "build_model", "(", "self", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline.prediction.Baseline.build_model": [[29, 48], ["Teacher().to", "Student().to", "torch.optim.Adam", "torch.optim.Adam", "prediction.Baseline.Teacher.parameters", "itertools.chain", "prediction.Baseline.Student.parameters", "itertools.chain", "Teacher", "Student"], "methods", ["None"], ["\n", "## Teacher model components", "\n", "self", ".", "encoder", "=", "GCNencoder", "(", "self", ".", "opts", ".", "in_feature_t0", ",", "self", ".", "opts", ".", "hidden1", ",", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "\n", "self", ".", "device", ")", "\n", "self", ".", "discriminator", "=", "Discriminator", "(", "self", ".", "opts", ".", "hidden2", ",", "1", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "generator", "=", "GCNdecoder", "(", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "hidden3", ",", "self", ".", "opts", ".", "SRout", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "\n", "self", ".", "device", ")", "\n", "## Student model", "\n", "self", ".", "Student", "=", "Student", "(", "self", ".", "opts", ".", "in_feature_t0", ",", "self", ".", "opts", ".", "hidden1", ",", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "hidden3", ",", "\n", "self", ".", "opts", ".", "SRout", ",", "\n", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "## initializations of optimizers", "\n", "self", ".", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "discriminator", ".", "parameters", "(", ")", ",", "self", ".", "opts", ".", "d_lr", ",", "\n", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "self", ".", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "generator", ".", "parameters", "(", ")", ",", "self", ".", "opts", ".", "g_lr", ",", "\n", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "self", ".", "e_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "encoder", ".", "parameters", "(", ")", ",", "self", ".", "opts", ".", "g_lr", ",", "\n", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline.prediction.Baseline.restore_model": [[49, 64], ["print", "os.path.join", "prediction.Baseline.Teacher.load_state_dict", "os.path.join", "prediction.Baseline.Student.load_state_dict", "torch.load", "torch.load"], "methods", ["None"], ["param_list", "=", "[", "self", ".", "Student", ".", "parameters", "(", ")", "]", "\n", "self", ".", "student_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "itertools", ".", "chain", "(", "*", "param_list", ")", ",", "\n", "self", ".", "opts", ".", "s_lr", ",", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "\n", "", "def", "restore_model", "(", "self", ",", "resume_iters", ",", "model_name", "=", "\"teacher\"", ",", "fold", "=", "0", ")", ":", "\n", "        ", "\"\"\"\n        Restore the trained students and encoder.\n        \"\"\"", "\n", "print", "(", "'Loading the trained models from step {}...'", ".", "format", "(", "resume_iters", ")", ")", "\n", "\n", "if", "model_name", "==", "\"teacher\"", ":", "\n", "            ", "generator_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'generator-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "encoder_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'encoder-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline.prediction.Baseline.reset_grad": [[65, 71], ["prediction.Baseline.student_optimizer.zero_grad", "prediction.Baseline.teacher_optimizer.zero_grad"], "methods", ["None"], ["\n", "self", ".", "generator", ".", "load_state_dict", "(", "torch", ".", "load", "(", "generator_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "self", ".", "encoder", ".", "load_state_dict", "(", "torch", ".", "load", "(", "encoder_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "", "else", ":", "\n", "            ", "Student_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'student-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "self", ".", "Student", ".", "load_state_dict", "(", "torch", ".", "load", "(", "Student_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline.prediction.Baseline.show_mtrx": [[72, 83], ["matplotlib.subplots", "matplotlib.subplots", "int", "int", "ax.matshow", "fig.colorbar", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "m.min", "m.max", "int"], "methods", ["None"], ["\n", "", "", "def", "reset_grad", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Reset the gradient buffers.\n        \"\"\"", "\n", "self", ".", "student_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "d_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "g_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "e_optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "", "def", "show_mtrx", "(", "self", ",", "m", ",", "name", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline.prediction.Baseline.any_loss": [[85, 125], ["torch.nn.L1Loss", "nn.KLDivLoss", "nn.LogSoftmax", "nn.LogSoftmax.", "prediction.Baseline.KL", "prediction.Baseline.MAE", "prediction.Baseline.MAE", "topological_measures", "topological_measures", "torch.tensor", "torch.tensor", "topological_measures", "topological_measures", "torch.tensor", "sklearn.metrics.mean_absolute_error", "sklearn.metrics.mean_absolute_error", "sklearn.metrics.mean_absolute_error"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures"], ["\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "figsize", "=", "(", "20", ",", "10", ")", ")", "\n", "cax", "=", "ax", ".", "matshow", "(", "m", ",", "cmap", "=", "plt", ".", "cm", ".", "seismic", ")", "\n", "fig", ".", "colorbar", "(", "cax", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"{}_{}_{}.png\"", ".", "format", "(", "name", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ")", "\n", "# plt.show()", "\n", "\n", "", "def", "any_loss", "(", "self", ",", "real", ",", "predicted", ",", "metric", ")", ":", "\n", "        ", "\"\"\"\n        Compute KL, MAE losses.\n        \"\"\"", "\n", "self", ".", "MAE", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "KL", "=", "nn", ".", "KLDivLoss", "(", ")", "\n", "if", "metric", "==", "'KL'", ":", "\n", "            ", "m", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "predicted", "=", "m", "(", "predicted", ")", "\n", "return", "self", ".", "KL", "(", "predicted", ",", "real", ")", "\n", "", "elif", "metric", "==", "'MAE'", ":", "\n", "            ", "return", "self", ".", "MAE", "(", "real", ",", "predicted", ")", "\n", "", "elif", "metric", "==", "'global_topology'", ":", "\n", "            ", "return", "self", ".", "MAE", "(", "real", ",", "predicted", ")", "\n", "", "elif", "metric", "==", "'local_topology'", ":", "\n", "            ", "if", "real", ".", "shape", "[", "1", "]", "==", "595", ":", "# feature vector -> 595 extracted from 35x35", "\n", "                ", "size", "=", "35", "\n", "", "else", ":", "# feature vector -> 12720 extracted from 160x160", "\n", "                ", "size", "=", "160", "\n", "\n", "# Local topology loss", "\n", "", "real_topology", "=", "topological_measures", "(", "real", ",", "size", ")", "\n", "fake_topology", "=", "topological_measures", "(", "predicted", ",", "size", ")", "\n", "\n", "# 0:Eigenvector    1:PageRank", "\n", "return", "torch", ".", "tensor", "(", "\n", "mean_absolute_error", "(", "fake_topology", "[", "0", "]", ",", "real_topology", "[", "0", "]", ")", ",", "requires_grad", "=", "True", ")", ",", "torch", ".", "tensor", "(", "\n", "mean_absolute_error", "(", "fake_topology", "[", "1", "]", ",", "real_topology", "[", "1", "]", ")", ",", "requires_grad", "=", "True", ")", "\n", "", "elif", "metric", "==", "'eigenvector'", ":", "\n", "            ", "if", "real", ".", "shape", "[", "1", "]", "==", "595", ":", "# feature vector -> 595 extracted from 35x35", "\n", "                ", "size", "=", "35", "\n", "", "else", ":", "# feature vector -> 12720 extracted from 160x160", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline.prediction.Baseline.train": [[125, 318], ["iter", "iter", "print", "print", "print", "datetime.datetime.datetime.now", "print", "print", "print", "range", "morph_iters.append", "func_iters.append", "print", "t0_morph_encoder_T[].to", "t0_func_encoder_T[].to", "torch.eye().to", "prediction.Baseline.Teacher", "prediction.Baseline.any_loss", "prediction.Baseline.any_loss().item", "prediction.Baseline.reset_grad", "teacher_loss.backward", "prediction.Baseline.teacher_optimizer.step", "print", "teacher_loss.item", "loss_teachers_plot.append", "iter", "iter", "next", "next", "teacher_loss.detach().item", "loss.items", "print", "os.path.join", "torch.save", "print", "print", "print", "print", "prediction.Baseline.restore_model", "prediction.Baseline.Teacher.eval", "print", "print", "print", "range", "iter", "next", "iter", "next", "torch.eye", "prediction.Baseline.any_loss", "datetime.datetime.datetime.now", "str", "prediction.Baseline.Teacher.state_dict", "torch.no_grad", "torch.eye().to", "prediction.Baseline.Teacher", "print", "torch.eye().to", "prediction.Baseline.Student", "prediction.Baseline.any_loss", "prediction.Baseline.any_loss", "print", "prediction.Baseline.reset_grad", "student_loss.backward", "prediction.Baseline.student_optimizer.step", "loss_students_plot.append", "loss_embedding_plot.append", "teacher_loss.detach", "datetime.datetime.timedelta", "student_loss.detach().item", "student_loss.item", "os.path.join", "torch.save", "print", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "print", "print", "print", "torch.eye", "torch.eye", "prediction.Baseline.Student.state_dict", "epochs.append", "losses.append", "epochs.append", "losses.append", "epochs.append", "losses.append", "student_loss.detach", "i.detach().item", "i.detach().item", "i.detach().item", "i.detach", "i.detach", "i.detach"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad"], ["", "else", ":", "# feature vector -> 12720 extracted from 160x160", "\n", "                ", "size", "=", "160", "\n", "\n", "# Local topology loss", "\n", "", "real_topology", "=", "topological_measures", "(", "real", ",", "size", ",", "True", ")", "\n", "fake_topology", "=", "topological_measures", "(", "predicted", ",", "size", ",", "True", ")", "\n", "\n", "# 0:Eigenvector", "\n", "return", "torch", ".", "tensor", "(", "mean_absolute_error", "(", "fake_topology", "[", "0", "]", ",", "real_topology", "[", "0", "]", ")", ",", "requires_grad", "=", "True", ")", "\n", "", "", "def", "train", "(", "self", ",", "fold", ")", ":", "\n", "        ", "\"\"\"\n        Train TS\n        \"\"\"", "\n", "t0_iter_M", "=", "iter", "(", "self", ".", "real_morphological_loader", ")", "\n", "t0_iter_F", "=", "iter", "(", "self", ".", "real_functional_loader", ")", "\n", "\n", "morph_iters", "=", "[", "]", "\n", "for", "loader", "in", "self", ".", "real_morphological_loader", ":", "\n", "            ", "morph_iters", ".", "append", "(", "iter", "(", "loader", ")", ")", "\n", "\n", "", "func_iters", "=", "[", "]", "\n", "for", "loader", "in", "self", ".", "real_functional_loader", ":", "\n", "            ", "func_iters", ".", "append", "(", "iter", "(", "loader", ")", ")", "\n", "\n", "# Start training from scratch or resume training.", "\n", "", "start_iters", "=", "0", "\n", "if", "self", ".", "opts", ".", "resume_iters", ":", "\n", "            ", "start_iters", "=", "self", ".", "opts", ".", "resume_iters", "\n", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "resume_iters", ",", "fold", ")", "\n", "\n", "# Start training.", "\n", "", "print", "(", "\"********-------------*********\"", ")", "\n", "print", "(", "'Super-resolution TS network...'", ")", "\n", "print", "(", "\"********-------------*********\"", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "loss_students_plot", "=", "[", "]", "\n", "loss_embedding_plot", "=", "[", "]", "\n", "\n", "generator_loss", "=", "[", "]", "\n", "discriminator_loss", "=", "[", "]", "\n", "\n", "print", "(", "\"################################\"", ")", "\n", "print", "(", "\" 1. Train the Teacher\"", ")", "\n", "print", "(", "\"################################\"", ")", "\n", "for", "i", "in", "range", "(", "start_iters", ",", "self", ".", "opts", ".", "num_iters", ")", ":", "\n", "            ", "print", "(", "\"-------------iteration-{}-------------\"", ".", "format", "(", "i", ")", ")", "\n", "# =================================================================================== #", "\n", "#                             1. Preprocess input data                                #", "\n", "# =================================================================================== #", "\n", "try", ":", "\n", "                ", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "except", ":", "\n", "                ", "t0_iter_M", "=", "iter", "(", "self", ".", "real_morphological_loader", ")", "\n", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "t0_M_encoder_T", "=", "t0_morph_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "try", ":", "\n", "                ", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "", "except", ":", "\n", "                ", "t0_iter_F", "=", "iter", "(", "self", ".", "real_functional_loader", ")", "\n", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "", "t0_F_encoder_T", "=", "t0_func_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                           2. Train generators                                       #", "\n", "# =================================================================================== #", "\n", "print", "(", "\"-------------Train the generators-------------\"", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding", "=", "self", ".", "encoder", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "super_resolved_matrix", "=", "self", ".", "generator", "(", "embedding", ",", "adj", ")", "\n", "\n", "sigmoid", ",", "softmax", "=", "self", ".", "discriminator", "(", "embedding", ",", "adj", ")", "\n", "\n", "g_loss_adversarial", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid", ",", "torch", ".", "ones_like", "(", "sigmoid", ")", ")", "\n", "\n", "teacher_loss", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "super_resolved_matrix", ",", "\"global_topology\"", ")", "\n", "\n", "g_loss", "=", "g_loss_adversarial", "+", "(", "self", ".", "opts", ".", "teacher_loss_weight", "*", "teacher_loss", ")", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "self", ".", "g_optimizer", ".", "step", "(", ")", "\n", "self", ".", "e_optimizer", ".", "step", "(", ")", "\n", "\n", "print", "(", "\"Generator Loss: \"", ",", "g_loss", ".", "item", "(", ")", ")", "\n", "generator_loss", ".", "append", "(", "g_loss", ".", "item", "(", ")", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                             2. Train the discriminator                              #", "\n", "# =================================================================================== #", "\n", "\n", "(", "mu", ",", "sigma", ")", "=", "norm", ".", "fit", "(", "t0_F_encoder_T", ".", "detach", "(", ")", ")", "\n", "dist", "=", "np", ".", "random", ".", "normal", "(", "mu", ",", "sigma", ",", "(", "279", ",", "50", ")", ")", "\n", "real_dist", "=", "torch", ".", "Tensor", "(", "dist", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "dist", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "sigmoid_real", ",", "softmax_real", "=", "self", ".", "discriminator", "(", "real_dist", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "sigmoid_fake", ",", "softmax_fake", "=", "self", ".", "discriminator", "(", "embedding", ",", "adj", ")", "\n", "\n", "print", "(", "\"Train the discriminator\"", ")", "\n", "\n", "real_loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid_real", ",", "\n", "(", "torch", ".", "ones_like", "(", "sigmoid_real", ",", "requires_grad", "=", "False", ")", ")", ")", "\n", "fake_loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid_fake", ".", "detach", "(", ")", ",", "\n", "torch", ".", "zeros_like", "(", "sigmoid_fake", ")", ")", "\n", "\n", "d_loss", "=", "(", "real_loss", "+", "fake_loss", ")", "/", "2", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "self", ".", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "print", "(", "\"Discriminator Loss: \"", ",", "d_loss", ".", "item", "(", ")", ")", "\n", "discriminator_loss", ".", "append", "(", "d_loss", ".", "item", "(", ")", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                                 3. Miscellaneous                                    #", "\n", "# =================================================================================== #", "\n", "# print out training information.", "\n", "if", "(", "i", "+", "1", ")", "%", "self", ".", "opts", ".", "log_step", "==", "0", ":", "\n", "                ", "et", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "et", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "et", ")", ")", "[", ":", "-", "7", "]", "\n", "log", "=", "\"Elapsed [{}], Iteration [{}/{}]\"", ".", "format", "(", "et", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "num_iters", ")", "\n", "\"\"\"for tag, value in loss.items():\n                    log += \", {}: {:.4f}\".format(tag, value)\n                \"\"\"", "\n", "print", "(", "log", ")", "\n", "\n", "# save model checkpoints.", "\n", "", "if", "(", "i", "+", "1", ")", "%", "self", ".", "opts", ".", "model_save_step", "==", "0", ":", "\n", "                ", "generator_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'generator-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "\n", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "generator", ".", "state_dict", "(", ")", ",", "generator_path", ")", "\n", "\n", "encoder_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'encoder-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "encoder", ".", "state_dict", "(", ")", ",", "encoder_path", ")", "\n", "\n", "print", "(", "'Saved model checkpoints into {}...'", ".", "format", "(", "self", ".", "opts", ".", "checkpoint_dir", ")", ")", "\n", "\n", "print", "(", "'============================='", ")", "\n", "print", "(", "\"End of Training Teacher\"", ")", "\n", "print", "(", "'============================='", ")", "\n", "\n", "", "if", "i", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "# =================================================================================== #", "\n", "#      Restore the trained teacher  from the last iteration to train the Student      #", "\n", "# =================================================================================== #", "\n", "                ", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "test_iters", ",", "model_name", "=", "\"teacher\"", ",", "fold", "=", "fold", ")", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding", "=", "self", ".", "encoder", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "predicted_F_teacher", "=", "self", ".", "generator", "(", "embedding", ",", "adj", ")", "\n", "\n", "", "print", "(", "\"################################\"", ")", "\n", "print", "(", "\" 3. Train the Student \"", ")", "\n", "print", "(", "\"################################\"", ")", "\n", "for", "j", "in", "range", "(", "start_iters", ",", "self", ".", "opts", ".", "num_iters", ")", ":", "\n", "                    ", "print", "(", "\"-------------iteration{}-------------\"", ".", "format", "(", "j", ")", ")", "\n", "# =================================================================================== #", "\n", "#                                 Train the Student                                   #", "\n", "# =================================================================================== #", "\n", "student_loss", "=", "0", "\n", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding_student", ",", "predicted_F_student", "=", "self", ".", "Student", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding_student", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "predict_decoderof_t_usingembed_s", "=", "self", ".", "generator", "(", "embedding_student", ",", "adj", ")", "\n", "\n", "student_loss_1", "=", "self", ".", "any_loss", "(", "predicted_F_student", ",", "predicted_F_teacher", ",", "\"global_topology\"", ")", "\n", "student_loss_2", "=", "self", ".", "any_loss", "(", "embedding_student", ",", "embedding", ",", "\"global_topology\"", ")", "\n", "student_loss_3", "=", "self", ".", "any_loss", "(", "predict_decoderof_t_usingembed_s", ",", "predicted_F_teacher", ",", "\n", "\"global_topology\"", ")", "\n", "student_loss", "=", "(", "student_loss_1", "+", "student_loss_2", "+", "student_loss_3", ")", "/", "3", "\n", "\n", "print", "(", "\"Student Loss: \"", ",", "student_loss", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "student_loss", ".", "backward", "(", ")", "\n", "self", ".", "student_optimizer", ".", "step", "(", ")", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.baseline.prediction.Baseline.test": [[322, 396], ["print", "print", "print", "prediction.Baseline.restore_model", "prediction.Baseline.Teacher.eval", "prediction.Baseline.restore_model", "prediction.Baseline.Student.eval", "iter", "iter", "t0_morph_encoder_T[].to", "t0_func_encoder_T[].to", "prediction.Baseline.any_loss", "print", "prediction.Baseline.any_loss", "prediction.Baseline.any_loss", "prediction.Baseline.any_loss", "print", "prediction.Baseline.any_loss", "print", "print", "print", "print", "print", "predicted_F_teacher.detach().cpu().numpy", "pd.DataFrame", "pd.DataFrame.to_csv", "print", "predicted_F_student.detach().cpu().numpy", "pd.DataFrame", "pd.DataFrame.to_csv", "next", "next", "torch.no_grad", "torch.eye().to", "prediction.Baseline.Teacher", "prediction.Baseline.Student", "prediction.Baseline.item", "prediction.Baseline.item", "prediction.Baseline.item", "eigenvectorS.item", "pagerankS.item", "eigenvectorT.item", "pagerankT.item", "prediction.Baseline.item", "prediction.Baseline.item", "prediction.Baseline.item", "iter", "next", "iter", "next", "predicted_F_teacher.detach().cpu", "predicted_F_student.detach().cpu().numpy.astype", "predicted_F_student.detach().cpu", "predicted_F_student.detach().cpu().numpy.astype", "torch.eye", "predicted_F_teacher.detach", "predicted_F_student.detach"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss"], ["loss_students_plot", ".", "append", "(", "student_loss", ")", "\n", "loss_embedding_plot", ".", "append", "(", "student_loss_2", ")", "\n", "\n", "# save model checkpoints.", "\n", "if", "(", "j", "+", "1", ")", "%", "self", ".", "opts", ".", "model_save_step", "==", "0", ":", "\n", "                        ", "Student_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'student-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "Student", ".", "state_dict", "(", ")", ",", "Student_path", ")", "\n", "print", "(", "'Saved model checkpoints into {}...'", ".", "format", "(", "self", ".", "opts", ".", "checkpoint_dir", ")", ")", "\n", "\n", "", "if", "j", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "                        ", "plt", ".", "figure", "(", "1", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "generator_loss", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ")", "\n", "counter", "+=", "1", "\n", "", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-b'", ",", "label", "=", "\"Generator\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"generatorLoss_{}_{}_{}.png\"", ".", "format", "(", "\n", "fold", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "plt", ".", "figure", "(", "2", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "discriminator_loss", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ")", "\n", "counter", "+=", "1", "\n", "", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-r'", ",", "label", "=", "\"Discriminator\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"discriminatorLoss_{}_{}_{}.png\"", ".", "format", "(", "\n", "fold", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "", "if", "j", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "                        ", "plt", ".", "figure", "(", "3", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "loss_students_plot", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "counter", "+=", "1", "\n", "", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-g'", ",", "label", "=", "\"Student\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"studentLoss_{}_{}_{}.png\"", ".", "format", "(", "\n", "fold", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "print", "(", "'============================================'", ")", "\n", "print", "(", "\"End of Training the Student\"", ")", "\n", "print", "(", "'============================================'", ")", "\n", "\n", "", "", "", "", "", "def", "test", "(", "self", ",", "real_morphological_loader", ",", "real_functional_loader", ",", "i", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.__init__": [[18, 26], ["torch.nn.L1Loss", "torch.device", "prediction.L2S_KDnet.build_model", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.build_model"], ["    ", "def", "__init__", "(", "self", ",", "real_morphological_loader", ",", "real_functional_loader", ",", "opts", ")", ":", "\n", "\n", "        ", "self", ".", "real_morphological_loader", "=", "real_morphological_loader", "\n", "self", ".", "real_functional_loader", "=", "real_functional_loader", "\n", "self", ".", "criterionIdt", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "opts", "=", "opts", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "self", ".", "build_model", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.build_model": [[27, 48], ["GCNencoder().to", "Discriminator().to", "GCNdecoder().to", "Student().to", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "prediction.L2S_KDnet.discriminator.parameters", "prediction.L2S_KDnet.generator.parameters", "prediction.L2S_KDnet.encoder.parameters", "prediction.L2S_KDnet.Student.parameters", "itertools.chain", "GCNencoder", "Discriminator", "GCNdecoder", "Student"], "methods", ["None"], ["", "def", "build_model", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Build teachers and students and encoder and initialize optimizers.\n        \"\"\"", "\n", "## Teacher model components", "\n", "self", ".", "encoder", "=", "GCNencoder", "(", "self", ".", "opts", ".", "in_feature_t0", ",", "self", ".", "opts", ".", "hidden1", ",", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "\n", "self", ".", "device", ")", "\n", "self", ".", "discriminator", "=", "Discriminator", "(", "self", ".", "opts", ".", "hidden2", ",", "1", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "generator", "=", "GCNdecoder", "(", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "hidden3", ",", "self", ".", "opts", ".", "SRout", ",", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "\n", "self", ".", "device", ")", "\n", "## Student model", "\n", "self", ".", "Student", "=", "Student", "(", "self", ".", "opts", ".", "in_feature_t0", ",", "self", ".", "opts", ".", "hidden1", ",", "self", ".", "opts", ".", "hidden2", ",", "self", ".", "opts", ".", "hidden3", ",", "\n", "self", ".", "opts", ".", "SRout", ",", "\n", "self", ".", "opts", ".", "dropout", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "## initializations of optimizers", "\n", "self", ".", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "discriminator", ".", "parameters", "(", ")", ",", "self", ".", "opts", ".", "d_lr", ",", "\n", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "self", ".", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "generator", ".", "parameters", "(", ")", ",", "self", ".", "opts", ".", "g_lr", ",", "\n", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "self", ".", "e_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "encoder", ".", "parameters", "(", ")", ",", "self", ".", "opts", ".", "g_lr", ",", "\n", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model": [[49, 73], ["print", "os.path.join", "os.path.join", "prediction.L2S_KDnet.generator.load_state_dict", "prediction.L2S_KDnet.encoder.load_state_dict", "os.path.join", "prediction.L2S_KDnet.Student.load_state_dict", "torch.load", "torch.load", "torch.load"], "methods", ["None"], ["param_list", "=", "[", "self", ".", "Student", ".", "parameters", "(", ")", "]", "\n", "self", ".", "student_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "itertools", ".", "chain", "(", "*", "param_list", ")", ",", "\n", "self", ".", "opts", ".", "s_lr", ",", "[", "self", ".", "opts", ".", "beta1", ",", "self", ".", "opts", ".", "beta2", "]", ")", "\n", "\n", "", "def", "restore_model", "(", "self", ",", "resume_iters", ",", "model_name", "=", "\"teacher\"", ",", "fold", "=", "0", ")", ":", "\n", "        ", "\"\"\"\n        Restore the trained students and encoder.\n        \"\"\"", "\n", "print", "(", "'Loading the trained models from step {}...'", ".", "format", "(", "resume_iters", ")", ")", "\n", "\n", "if", "model_name", "==", "\"teacher\"", ":", "\n", "            ", "generator_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'generator-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "encoder_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'encoder-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "\n", "self", ".", "generator", ".", "load_state_dict", "(", "torch", ".", "load", "(", "generator_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "self", ".", "encoder", ".", "load_state_dict", "(", "torch", ".", "load", "(", "encoder_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "", "else", ":", "\n", "            ", "Student_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'student-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "resume_iters", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "self", ".", "Student", ".", "load_state_dict", "(", "torch", ".", "load", "(", "Student_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "\n", "", "", "def", "reset_grad", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad": [[74, 82], ["prediction.L2S_KDnet.student_optimizer.zero_grad", "prediction.L2S_KDnet.d_optimizer.zero_grad", "prediction.L2S_KDnet.g_optimizer.zero_grad", "prediction.L2S_KDnet.e_optimizer.zero_grad"], "methods", ["None"], ["        ", "\"\"\"\n        Reset the gradient buffers.\n        \"\"\"", "\n", "self", ".", "student_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "d_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "g_optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "e_optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "", "def", "show_mtrx", "(", "self", ",", "m", ",", "name", ")", ":", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.show_mtrx": [[83, 93], ["matplotlib.subplots", "matplotlib.subplots", "ax.matshow", "fig.colorbar", "os.path.join", "matplotlib.savefig", "matplotlib.savefig"], "methods", ["None"], ["        ", "\"\"\"\n        Visualize matrix and save.\n        \"\"\"", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "figsize", "=", "(", "20", ",", "10", ")", ")", "\n", "cax", "=", "ax", ".", "matshow", "(", "m", ",", "cmap", "=", "plt", ".", "cm", ".", "seismic", ")", "\n", "fig", ".", "colorbar", "(", "cax", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"{}_{}_{}.png\"", ".", "format", "(", "name", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ")", "\n", "# plt.show()", "\n", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss": [[95, 135], ["torch.nn.L1Loss", "nn.KLDivLoss", "nn.LogSoftmax", "nn.LogSoftmax.", "prediction.L2S_KDnet.KL", "prediction.L2S_KDnet.MAE", "prediction.L2S_KDnet.MAE", "topological_measures", "topological_measures", "torch.tensor", "torch.tensor", "topological_measures", "topological_measures", "torch.tensor", "sklearn.metrics.mean_absolute_error", "sklearn.metrics.mean_absolute_error", "sklearn.metrics.mean_absolute_error"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.topological_measures"], ["        ", "\"\"\"\n        Compute KL, MAE losses.\n        \"\"\"", "\n", "self", ".", "MAE", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "KL", "=", "nn", ".", "KLDivLoss", "(", ")", "\n", "if", "metric", "==", "'KL'", ":", "\n", "            ", "m", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "predicted", "=", "m", "(", "predicted", ")", "\n", "return", "self", ".", "KL", "(", "predicted", ",", "real", ")", "\n", "", "elif", "metric", "==", "'MAE'", ":", "\n", "            ", "return", "self", ".", "MAE", "(", "real", ",", "predicted", ")", "\n", "", "elif", "metric", "==", "'global_topology'", ":", "\n", "            ", "return", "self", ".", "MAE", "(", "real", ",", "predicted", ")", "\n", "", "elif", "metric", "==", "'local_topology'", ":", "\n", "            ", "if", "real", ".", "shape", "[", "1", "]", "==", "595", ":", "# feature vector -> 595 extracted from 35x35", "\n", "                ", "size", "=", "35", "\n", "", "else", ":", "# feature vector -> 12720 extracted from 160x160", "\n", "                ", "size", "=", "160", "\n", "\n", "# Local topology loss", "\n", "", "real_topology", "=", "topological_measures", "(", "real", ",", "size", ")", "\n", "fake_topology", "=", "topological_measures", "(", "predicted", ",", "size", ")", "\n", "\n", "# 0:Eigenvector    1:PageRank", "\n", "return", "torch", ".", "tensor", "(", "\n", "mean_absolute_error", "(", "fake_topology", "[", "0", "]", ",", "real_topology", "[", "0", "]", ")", ",", "requires_grad", "=", "True", ")", ",", "torch", ".", "tensor", "(", "\n", "mean_absolute_error", "(", "fake_topology", "[", "1", "]", ",", "real_topology", "[", "1", "]", ")", ",", "requires_grad", "=", "True", ")", "\n", "", "elif", "metric", "==", "'eigenvector'", ":", "\n", "            ", "if", "real", ".", "shape", "[", "1", "]", "==", "595", ":", "# feature vector -> 595 extracted from 35x35", "\n", "                ", "size", "=", "35", "\n", "", "else", ":", "# feature vector -> 12720 extracted from 160x160", "\n", "                ", "size", "=", "160", "\n", "\n", "# Local topology loss", "\n", "", "real_topology", "=", "topological_measures", "(", "real", ",", "size", ",", "True", ")", "\n", "fake_topology", "=", "topological_measures", "(", "predicted", ",", "size", ",", "True", ")", "\n", "\n", "# 0:Eigenvector", "\n", "return", "torch", ".", "tensor", "(", "mean_absolute_error", "(", "fake_topology", "[", "0", "]", ",", "real_topology", "[", "0", "]", ")", ",", "requires_grad", "=", "True", ")", "\n", "", "", "def", "train", "(", "self", ",", "fold", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.train": [[136, 402], ["iter", "iter", "print", "print", "print", "time.time", "print", "print", "print", "range", "morph_iters.append", "func_iters.append", "prediction.L2S_KDnet.restore_model", "print", "t0_morph_encoder_T[].to", "t0_func_encoder_T[].to", "print", "torch.eye().to", "prediction.L2S_KDnet.encoder", "torch.eye().to", "prediction.L2S_KDnet.generator", "prediction.L2S_KDnet.discriminator", "F.binary_cross_entropy_with_logits", "prediction.L2S_KDnet.any_loss", "prediction.L2S_KDnet.any_loss().item", "prediction.L2S_KDnet.reset_grad", "g_loss.backward", "prediction.L2S_KDnet.g_optimizer.step", "prediction.L2S_KDnet.e_optimizer.step", "print", "generator_loss.append", "scipy.stats.norm.fit", "np.random.normal", "torch.Tensor", "torch.eye().to", "prediction.L2S_KDnet.discriminator", "torch.eye().to", "prediction.L2S_KDnet.discriminator", "print", "F.binary_cross_entropy_with_logits", "F.binary_cross_entropy_with_logits", "prediction.L2S_KDnet.reset_grad", "d_loss.backward", "prediction.L2S_KDnet.d_optimizer.step", "print", "discriminator_loss.append", "iter", "iter", "next", "next", "torch.ones_like", "g_loss.item", "g_loss.item", "t0_func_encoder_T[].to.detach", "torch.ones_like", "sigmoid_fake.detach", "torch.zeros_like", "d_loss.item", "d_loss.item", "print", "os.path.join", "torch.save", "os.path.join", "torch.save", "print", "print", "print", "print", "prediction.L2S_KDnet.restore_model", "prediction.L2S_KDnet.encoder.eval", "prediction.L2S_KDnet.generator.eval", "print", "print", "print", "range", "iter", "next", "iter", "next", "torch.eye", "torch.eye", "prediction.L2S_KDnet.any_loss", "torch.eye", "torch.eye", "time.time", "str", "prediction.L2S_KDnet.generator.state_dict", "prediction.L2S_KDnet.encoder.state_dict", "torch.no_grad", "torch.eye().to", "prediction.L2S_KDnet.encoder", "torch.eye().to", "prediction.L2S_KDnet.generator", "print", "torch.eye().to", "prediction.L2S_KDnet.Student", "torch.eye().to", "prediction.L2S_KDnet.generator", "prediction.L2S_KDnet.any_loss", "prediction.L2S_KDnet.any_loss", "prediction.L2S_KDnet.any_loss", "print", "prediction.L2S_KDnet.reset_grad", "student_loss.backward", "prediction.L2S_KDnet.student_optimizer.step", "loss_students_plot.append", "loss_embedding_plot.append", "datetime.timedelta", "student_loss.detach().item", "student_loss.item", "os.path.join", "torch.save", "print", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "os.path.join", "matplotlib.savefig", "matplotlib.savefig", "print", "print", "print", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "prediction.L2S_KDnet.Student.state_dict", "epochs.append", "losses.append", "epochs.append", "losses.append", "epochs.append", "losses.append", "student_loss.detach", "i.detach().item", "i.detach"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.reset_grad"], ["\n", "t0_iter_M", "=", "iter", "(", "self", ".", "real_morphological_loader", ")", "\n", "t0_iter_F", "=", "iter", "(", "self", ".", "real_functional_loader", ")", "\n", "\n", "morph_iters", "=", "[", "]", "\n", "for", "loader", "in", "self", ".", "real_morphological_loader", ":", "\n", "            ", "morph_iters", ".", "append", "(", "iter", "(", "loader", ")", ")", "\n", "\n", "", "func_iters", "=", "[", "]", "\n", "for", "loader", "in", "self", ".", "real_functional_loader", ":", "\n", "            ", "func_iters", ".", "append", "(", "iter", "(", "loader", ")", ")", "\n", "\n", "# Start training from scratch or resume training.", "\n", "", "start_iters", "=", "0", "\n", "if", "self", ".", "opts", ".", "resume_iters", ":", "\n", "            ", "start_iters", "=", "self", ".", "opts", ".", "resume_iters", "\n", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "resume_iters", ",", "fold", ")", "\n", "\n", "# Start training.", "\n", "", "print", "(", "\"********-------------*********\"", ")", "\n", "print", "(", "'Super-resolution TS network...'", ")", "\n", "print", "(", "\"********-------------*********\"", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "loss_students_plot", "=", "[", "]", "\n", "loss_embedding_plot", "=", "[", "]", "\n", "\n", "generator_loss", "=", "[", "]", "\n", "discriminator_loss", "=", "[", "]", "\n", "\n", "print", "(", "\"################################\"", ")", "\n", "print", "(", "\" 1. Train the Teacher\"", ")", "\n", "print", "(", "\"################################\"", ")", "\n", "for", "i", "in", "range", "(", "start_iters", ",", "self", ".", "opts", ".", "num_iters", ")", ":", "\n", "            ", "print", "(", "\"-------------iteration-{}-------------\"", ".", "format", "(", "i", ")", ")", "\n", "# =================================================================================== #", "\n", "#                             1. Preprocess input data                                #", "\n", "# =================================================================================== #", "\n", "try", ":", "\n", "                ", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "except", ":", "\n", "                ", "t0_iter_M", "=", "iter", "(", "self", ".", "real_morphological_loader", ")", "\n", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "t0_M_encoder_T", "=", "t0_morph_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "try", ":", "\n", "                ", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "", "except", ":", "\n", "                ", "t0_iter_F", "=", "iter", "(", "self", ".", "real_functional_loader", ")", "\n", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "", "t0_F_encoder_T", "=", "t0_func_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                           2. Train generators                                       #", "\n", "# =================================================================================== #", "\n", "print", "(", "\"-------------Train the generators-------------\"", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding", "=", "self", ".", "encoder", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "super_resolved_matrix", "=", "self", ".", "generator", "(", "embedding", ",", "adj", ")", "\n", "\n", "sigmoid", ",", "softmax", "=", "self", ".", "discriminator", "(", "embedding", ",", "adj", ")", "\n", "\n", "g_loss_adversarial", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid", ",", "torch", ".", "ones_like", "(", "sigmoid", ")", ")", "\n", "\n", "teacher_loss", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "super_resolved_matrix", ",", "\"global_topology\"", ")", "\n", "\n", "g_loss", "=", "g_loss_adversarial", "+", "(", "self", ".", "opts", ".", "teacher_loss_weight", "*", "teacher_loss", ")", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "self", ".", "g_optimizer", ".", "step", "(", ")", "\n", "self", ".", "e_optimizer", ".", "step", "(", ")", "\n", "\n", "print", "(", "\"Generator Loss: \"", ",", "g_loss", ".", "item", "(", ")", ")", "\n", "generator_loss", ".", "append", "(", "g_loss", ".", "item", "(", ")", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                             2. Train the discriminator                              #", "\n", "# =================================================================================== #", "\n", "\n", "(", "mu", ",", "sigma", ")", "=", "norm", ".", "fit", "(", "t0_F_encoder_T", ".", "detach", "(", ")", ")", "\n", "dist", "=", "np", ".", "random", ".", "normal", "(", "mu", ",", "sigma", ",", "(", "279", ",", "50", ")", ")", "\n", "real_dist", "=", "torch", ".", "Tensor", "(", "dist", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "dist", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "sigmoid_real", ",", "softmax_real", "=", "self", ".", "discriminator", "(", "real_dist", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "sigmoid_fake", ",", "softmax_fake", "=", "self", ".", "discriminator", "(", "embedding", ",", "adj", ")", "\n", "\n", "print", "(", "\"Train the discriminator\"", ")", "\n", "\n", "real_loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid_real", ",", "\n", "(", "torch", ".", "ones_like", "(", "sigmoid_real", ",", "requires_grad", "=", "False", ")", ")", ")", "\n", "fake_loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "sigmoid_fake", ".", "detach", "(", ")", ",", "\n", "torch", ".", "zeros_like", "(", "sigmoid_fake", ")", ")", "\n", "\n", "d_loss", "=", "(", "real_loss", "+", "fake_loss", ")", "/", "2", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "self", ".", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "print", "(", "\"Discriminator Loss: \"", ",", "d_loss", ".", "item", "(", ")", ")", "\n", "discriminator_loss", ".", "append", "(", "d_loss", ".", "item", "(", ")", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                                 3. Miscellaneous                                    #", "\n", "# =================================================================================== #", "\n", "# print out training information.", "\n", "if", "(", "i", "+", "1", ")", "%", "self", ".", "opts", ".", "log_step", "==", "0", ":", "\n", "                ", "et", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "et", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "et", ")", ")", "[", ":", "-", "7", "]", "\n", "log", "=", "\"Elapsed [{}], Iteration [{}/{}]\"", ".", "format", "(", "et", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "num_iters", ")", "\n", "\"\"\"for tag, value in loss.items():\n                    log += \", {}: {:.4f}\".format(tag, value)\n                \"\"\"", "\n", "print", "(", "log", ")", "\n", "\n", "# save model checkpoints.", "\n", "", "if", "(", "i", "+", "1", ")", "%", "self", ".", "opts", ".", "model_save_step", "==", "0", ":", "\n", "                ", "generator_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'generator-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "\n", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "generator", ".", "state_dict", "(", ")", ",", "generator_path", ")", "\n", "\n", "encoder_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'encoder-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "encoder", ".", "state_dict", "(", ")", ",", "encoder_path", ")", "\n", "\n", "print", "(", "'Saved model checkpoints into {}...'", ".", "format", "(", "self", ".", "opts", ".", "checkpoint_dir", ")", ")", "\n", "\n", "print", "(", "'============================='", ")", "\n", "print", "(", "\"End of Training Teacher\"", ")", "\n", "print", "(", "'============================='", ")", "\n", "\n", "", "if", "i", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "# =================================================================================== #", "\n", "#      Restore the trained teacher  from the last iteration to train the Student      #", "\n", "# =================================================================================== #", "\n", "                ", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "test_iters", ",", "model_name", "=", "\"teacher\"", ",", "fold", "=", "fold", ")", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding", "=", "self", ".", "encoder", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "predicted_F_teacher", "=", "self", ".", "generator", "(", "embedding", ",", "adj", ")", "\n", "\n", "", "print", "(", "\"################################\"", ")", "\n", "print", "(", "\" 3. Train the Student \"", ")", "\n", "print", "(", "\"################################\"", ")", "\n", "for", "j", "in", "range", "(", "start_iters", ",", "self", ".", "opts", ".", "num_iters", ")", ":", "\n", "                    ", "print", "(", "\"-------------iteration{}-------------\"", ".", "format", "(", "j", ")", ")", "\n", "# =================================================================================== #", "\n", "#                                 Train the Student                                   #", "\n", "# =================================================================================== #", "\n", "student_loss", "=", "0", "\n", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding_student", ",", "predicted_F_student", "=", "self", ".", "Student", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding_student", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "predict_decoderof_t_usingembed_s", "=", "self", ".", "generator", "(", "embedding_student", ",", "adj", ")", "\n", "\n", "student_loss_1", "=", "self", ".", "any_loss", "(", "predicted_F_student", ",", "predicted_F_teacher", ",", "\"global_topology\"", ")", "\n", "student_loss_2", "=", "self", ".", "any_loss", "(", "embedding_student", ",", "embedding", ",", "\"global_topology\"", ")", "\n", "student_loss_3", "=", "self", ".", "any_loss", "(", "predict_decoderof_t_usingembed_s", ",", "predicted_F_teacher", ",", "\n", "\"global_topology\"", ")", "\n", "student_loss", "=", "(", "student_loss_1", "+", "student_loss_2", "+", "student_loss_3", ")", "/", "3", "\n", "\n", "print", "(", "\"Student Loss: \"", ",", "student_loss", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "\n", "self", ".", "reset_grad", "(", ")", "\n", "student_loss", ".", "backward", "(", ")", "\n", "self", ".", "student_optimizer", ".", "step", "(", ")", "\n", "\n", "# Logging.", "\n", "loss", "=", "{", "'Student/loss'", ":", "student_loss", ".", "item", "(", ")", "}", "\n", "loss_students_plot", ".", "append", "(", "student_loss", ")", "\n", "loss_embedding_plot", ".", "append", "(", "student_loss_2", ")", "\n", "\n", "# save model checkpoints.", "\n", "if", "(", "j", "+", "1", ")", "%", "self", ".", "opts", ".", "model_save_step", "==", "0", ":", "\n", "                        ", "Student_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "checkpoint_dir", ",", "\n", "'student-{}-{}-{}-{}.ckpt'", ".", "format", "(", "fold", ",", "i", "+", "1", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "Student", ".", "state_dict", "(", ")", ",", "Student_path", ")", "\n", "print", "(", "'Saved model checkpoints into {}...'", ".", "format", "(", "self", ".", "opts", ".", "checkpoint_dir", ")", ")", "\n", "\n", "", "if", "j", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "                        ", "plt", ".", "figure", "(", "1", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "generator_loss", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ")", "\n", "counter", "+=", "1", "\n", "", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-b'", ",", "label", "=", "\"Generator\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"generatorLoss_{}_{}_{}.png\"", ".", "format", "(", "\n", "fold", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "plt", ".", "figure", "(", "2", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "discriminator_loss", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ")", "\n", "counter", "+=", "1", "\n", "", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-r'", ",", "label", "=", "\"Discriminator\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"discriminatorLoss_{}_{}_{}.png\"", ".", "format", "(", "\n", "fold", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "", "if", "j", "==", "(", "self", ".", "opts", ".", "num_iters", "-", "1", ")", ":", "\n", "                        ", "plt", ".", "figure", "(", "3", ")", "\n", "losses", "=", "[", "]", "\n", "epochs", "=", "[", "]", "\n", "counter", "=", "1", "\n", "for", "i", "in", "loss_students_plot", ":", "\n", "                            ", "epochs", ".", "append", "(", "counter", ")", "\n", "losses", ".", "append", "(", "i", ".", "detach", "(", ")", ".", "item", "(", ")", ")", "\n", "counter", "+=", "1", "\n", "", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "epochs", ",", "losses", ",", "'-g'", ",", "label", "=", "\"Student\"", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ")", "\n", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opts", ".", "plot_dir", ",", "\n", "\"studentLoss_{}_{}_{}.png\"", ".", "format", "(", "\n", "fold", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ")", "\n", "plt", ".", "savefig", "(", "plot_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "print", "(", "'============================================'", ")", "\n", "print", "(", "\"End of Training the Student\"", ")", "\n", "print", "(", "'============================================'", ")", "\n", "\n", "", "", "", "", "", "def", "test", "(", "self", ",", "real_morphological_loader", ",", "real_functional_loader", ",", "i", ")", ":", "\n", "        ", "\"\"\"\n        Test the trained Students on another dataset.\n        \"\"\"", "\n", "print", "(", "\"################################################################################\"", ")", "\n", "print", "(", "\" 2. Restore the trained student from the last iteration to test the Student \"", ")", "\n", "print", "(", "\"################################################################################\"", ")", "\n", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "test_iters", ",", "model_name", "=", "\"teacher\"", ",", "fold", "=", "i", ")", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n"]], "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.test": [[403, 489], ["print", "print", "print", "prediction.L2S_KDnet.restore_model", "prediction.L2S_KDnet.encoder.eval", "prediction.L2S_KDnet.generator.eval", "prediction.L2S_KDnet.restore_model", "prediction.L2S_KDnet.Student.eval", "iter", "iter", "t0_morph_encoder_T[].to", "t0_func_encoder_T[].to", "prediction.L2S_KDnet.show_mtrx", "prediction.L2S_KDnet.show_mtrx", "prediction.L2S_KDnet.show_mtrx", "prediction.L2S_KDnet.any_loss", "prediction.L2S_KDnet.any_loss", "prediction.L2S_KDnet.any_loss", "print", "print", "prediction.L2S_KDnet.any_loss", "prediction.L2S_KDnet.any_loss", "print", "print", "print", "print", "prediction.L2S_KDnet.detach().cpu().numpy", "pd.DataFrame", "pd.DataFrame.to_csv", "print", "predicted_F_student.detach().cpu().numpy", "pd.DataFrame", "pd.DataFrame.to_csv", "next", "next", "torch.no_grad", "torch.eye().to", "prediction.L2S_KDnet.encoder", "torch.eye().to", "prediction.L2S_KDnet.generator", "prediction.L2S_KDnet.Student", "to_2d", "str", "to_2d", "str", "to_2d", "str", "prediction.L2S_KDnet.item", "prediction.L2S_KDnet.item", "eigenvectorS.item", "pagerankS.item", "eigenvectorT.item", "pagerankT.item", "prediction.L2S_KDnet.item", "prediction.L2S_KDnet.item", "prediction.L2S_KDnet.item", "iter", "next", "iter", "next", "predicted_F_student[].detach().numpy", "t0_F_encoder_T[].detach().numpy", "prediction.L2S_KDnet.detach().cpu", "predicted_F_student.detach().cpu().numpy.astype", "predicted_F_student.detach().cpu", "predicted_F_student.detach().cpu().numpy.astype", "torch.eye", "torch.eye", "str", "str", "predicted_F_student[].detach().numpy", "t0_F_encoder_T[].detach().numpy", "str", "predicted_F_student[].detach", "t0_F_encoder_T[].detach", "prediction.L2S_KDnet.detach", "predicted_F_student.detach", "predicted_F_student[].detach", "t0_F_encoder_T[].detach"], "methods", ["home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.restore_model", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.show_mtrx", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.show_mtrx", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.show_mtrx", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.L2S_KDnet.prediction.L2S_KDnet.any_loss", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.to_2d", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.to_2d", "home.repos.pwc.inspect_result.basiralab_L2S-KDnet.None.centrality.to_2d"], ["self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "self", ".", "restore_model", "(", "self", ".", "opts", ".", "test_iters", ",", "model_name", "=", "\"student\"", ",", "fold", "=", "i", ")", "\n", "self", ".", "Student", ".", "eval", "(", ")", "\n", "\n", "t0_iter_M", "=", "iter", "(", "real_morphological_loader", ")", "\n", "t0_iter_F", "=", "iter", "(", "real_functional_loader", ")", "\n", "\n", "try", ":", "\n", "            ", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "except", ":", "\n", "            ", "t0_iter_M", "=", "iter", "(", "real_morphological_loader", ")", "\n", "t0_morph_encoder_T", "=", "next", "(", "t0_iter_M", ")", "\n", "", "t0_M_encoder_T", "=", "t0_morph_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "try", ":", "\n", "            ", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "", "except", ":", "\n", "            ", "t0_iter_F", "=", "iter", "(", "real_functional_loader", ")", "\n", "t0_func_encoder_T", "=", "next", "(", "t0_iter_F", ")", "\n", "\n", "", "t0_F_encoder_T", "=", "t0_func_encoder_T", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "adj", "=", "torch", ".", "eye", "(", "t0_M_encoder_T", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "embedding_teacher", "=", "self", ".", "encoder", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "adj", "=", "torch", ".", "eye", "(", "embedding_teacher", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "predicted_F_teacher", "=", "self", ".", "generator", "(", "embedding_teacher", ",", "adj", ")", "\n", "\n", "embedding_student", ",", "predicted_F_student", "=", "self", ".", "Student", "(", "t0_M_encoder_T", ",", "adj", ")", "\n", "\n", "", "student_loss_KL", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_student", ",", "\"KL\"", ")", "\n", "print", "(", "\"Student Evaluation KL: \"", ",", "student_loss_KL", ".", "item", "(", ")", ")", "\n", "\n", "eigenvectorS", ",", "pagerankS", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_student", ",", "\"local_topology\"", ")", "\n", "\n", "eigenvectorT", ",", "pagerankT", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_teacher", ",", "\"local_topology\"", ")", "\n", "\n", "student_loss_G", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_student", ",", "\"global_topology\"", ")", "\n", "print", "(", "\"Student Evaluation Global: \"", ",", "student_loss_G", ".", "item", "(", ")", ")", "\n", "\n", "teacher_loss_G", "=", "self", ".", "any_loss", "(", "t0_F_encoder_T", ",", "predicted_F_teacher", ",", "\"global_topology\"", ")", "\n", "print", "(", "\"Teacher Evaluation Global: \"", ",", "teacher_loss_G", ".", "item", "(", ")", ")", "\n", "\n", "print", "(", "'============================='", ")", "\n", "print", "(", "\"End of Testing both networks\"", ")", "\n", "print", "(", "'============================='", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                          Save results of both networks                              #", "\n", "# =================================================================================== #", "\n", "print", "(", "\"saving TS prediction into csv file...\"", ")", "\n", "f", "=", "predicted_F_teacher", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "dataframe", "=", "pd", ".", "DataFrame", "(", "data", "=", "f", ".", "astype", "(", "float", ")", ")", "\n", "dataframe", ".", "to_csv", "(", "\n", "r'%s/results/teacher_predicted_functional_graphs_%d_%f_%f.csv'", "%", "(", "\n", "self", ".", "opts", ".", "result_root", ",", "i", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "self", ".", "opts", ".", "teacher_loss_weight", ")", ",", "sep", "=", "' '", ",", "header", "=", "True", ",", "\n", "float_format", "=", "'%.6f'", ",", "index", "=", "False", ")", "\n", "\n", "print", "(", "\"saving TS prediction into csv file...\"", ")", "\n", "f", "=", "predicted_F_student", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "dataframe", "=", "pd", ".", "DataFrame", "(", "data", "=", "f", ".", "astype", "(", "float", ")", ")", "\n", "dataframe", ".", "to_csv", "(", "\n", "r'%s/results/student_predicted_functional_graphs_%d_%f_%f.csv'", "%", "(", "self", ".", "opts", ".", "result_root", ",", "\n", "i", ",", "self", ".", "opts", ".", "local_topology_loss_weight", ",", "\n", "self", ".", "opts", ".", "teacher_loss_weight", ")", ",", "sep", "=", "' '", ",", "\n", "header", "=", "True", ",", "\n", "float_format", "=", "'%.6f'", ",", "index", "=", "False", ")", "\n", "\n", "return", "eigenvectorS", ".", "item", "(", ")", ",", "pagerankS", ".", "item", "(", ")", ",", "eigenvectorT", ".", "item", "(", ")", ",", "pagerankT", ".", "item", "(", ")", ",", "student_loss_G", ".", "item", "(", ")", ",", "teacher_loss_G", ".", "item", "(", ")", ",", "student_loss_KL", ".", "item", "(", ")", "\n", "", "", ""]]}