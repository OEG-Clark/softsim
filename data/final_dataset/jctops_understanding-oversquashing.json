{"home.repos.pwc.inspect_result.jctops_understanding-oversquashing.experiment.splits.set_train_val_test_split": [[10, 41], ["numpy.random.RandomState", "math.ceil", "np.random.RandomState.choice", "numpy.random.RandomState", "range", "splits.set_train_val_test_split.get_mask"], "function", ["None"], ["def", "set_train_val_test_split", "(", "\n", "seed", ":", "int", ",", "\n", "data", ":", "Data", ",", "\n", "development_frac", ":", "float", "=", "0.5", ",", "\n", "num_per_class", ":", "int", "=", "20", ")", "->", "Data", ":", "\n", "    ", "rnd_state", "=", "np", ".", "random", ".", "RandomState", "(", "development_seed", ")", "\n", "num_nodes", "=", "data", ".", "y", ".", "shape", "[", "0", "]", "\n", "\n", "num_development", "=", "ceil", "(", "development_frac", "*", "num_nodes", ")", "\n", "\n", "development_idx", "=", "rnd_state", ".", "choice", "(", "num_nodes", ",", "num_development", ",", "replace", "=", "False", ")", "\n", "test_idx", "=", "[", "i", "for", "i", "in", "np", ".", "arange", "(", "num_nodes", ")", "if", "i", "not", "in", "development_idx", "]", "\n", "\n", "train_idx", "=", "[", "]", "\n", "rnd_state", "=", "np", ".", "random", ".", "RandomState", "(", "seed", ")", "\n", "for", "c", "in", "range", "(", "data", ".", "y", ".", "max", "(", ")", "+", "1", ")", ":", "\n", "        ", "class_idx", "=", "development_idx", "[", "np", ".", "where", "(", "data", ".", "y", "[", "development_idx", "]", ".", "cpu", "(", ")", "==", "c", ")", "[", "0", "]", "]", "\n", "train_idx", ".", "extend", "(", "rnd_state", ".", "choice", "(", "class_idx", ",", "min", "(", "num_per_class", ",", "ceil", "(", "len", "(", "class_idx", ")", "*", "0.5", ")", ")", ",", "replace", "=", "False", ")", ")", "\n", "\n", "", "val_idx", "=", "[", "i", "for", "i", "in", "development_idx", "if", "i", "not", "in", "train_idx", "]", "\n", "\n", "def", "get_mask", "(", "idx", ")", ":", "\n", "        ", "mask", "=", "torch", ".", "zeros", "(", "num_nodes", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "mask", "[", "idx", "]", "=", "1", "\n", "return", "mask", "\n", "\n", "", "data", ".", "train_mask", "=", "get_mask", "(", "train_idx", ")", "\n", "data", ".", "val_mask", "=", "get_mask", "(", "val_idx", ")", "\n", "data", ".", "test_mask", "=", "get_mask", "(", "test_idx", ")", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.experiment.splits.set_train_val_test_split_frac": [[43, 76], ["math.ceil", "math.ceil", "list", "random.seed", "random.shuffle", "sorted", "random.seed", "random.shuffle", "sorted", "sorted", "splits.set_train_val_test_split.get_mask"], "function", ["None"], ["", "def", "set_train_val_test_split_frac", "(", "seed", ":", "int", ",", "data", ":", "Data", ",", "val_frac", ":", "float", ",", "test_frac", ":", "float", ")", ":", "\n", "    ", "num_nodes", "=", "data", ".", "y", ".", "shape", "[", "0", "]", "\n", "\n", "val_size", "=", "ceil", "(", "val_frac", "*", "num_nodes", ")", "\n", "test_size", "=", "ceil", "(", "test_frac", "*", "num_nodes", ")", "\n", "train_size", "=", "num_nodes", "-", "val_size", "-", "test_size", "\n", "\n", "nodes", "=", "list", "(", "range", "(", "num_nodes", ")", ")", "\n", "\n", "# Take same test set every time using development seed for robustness", "\n", "random", ".", "seed", "(", "development_seed", ")", "\n", "random", ".", "shuffle", "(", "nodes", ")", "\n", "test_idx", "=", "sorted", "(", "nodes", "[", ":", "test_size", "]", ")", "\n", "nodes", "=", "[", "x", "for", "x", "in", "nodes", "if", "x", "not", "in", "test_idx", "]", "\n", "\n", "# Take train / val split according to seed", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "random", ".", "shuffle", "(", "nodes", ")", "\n", "train_idx", "=", "sorted", "(", "nodes", "[", ":", "train_size", "]", ")", "\n", "val_idx", "=", "sorted", "(", "nodes", "[", "train_size", ":", "]", ")", "\n", "\n", "assert", "len", "(", "train_idx", ")", "+", "len", "(", "val_idx", ")", "+", "len", "(", "test_idx", ")", "==", "num_nodes", "\n", "\n", "def", "get_mask", "(", "idx", ")", ":", "\n", "        ", "mask", "=", "torch", ".", "zeros", "(", "num_nodes", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "mask", "[", "idx", "]", "=", "1", "\n", "return", "mask", "\n", "\n", "", "data", ".", "train_mask", "=", "get_mask", "(", "train_idx", ")", "\n", "data", ".", "val_mask", "=", "get_mask", "(", "val_idx", ")", "\n", "data", ".", "test_mask", "=", "get_mask", "(", "test_idx", ")", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.experiment.node_classification.train": [[6, 14], ["model.train", "optimizer.zero_grad", "model", "torch.nll_loss", "F.nll_loss.backward", "optimizer.step", "F.nll_loss.item"], "function", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.experiment.node_classification.train"], ["def", "train", "(", "model", ":", "torch", ".", "nn", ".", "Module", ",", "optimizer", ":", "Optimizer", ",", "data", ":", "Data", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "logits", "=", "model", "(", "data", ")", "\n", "loss", "=", "F", ".", "nll_loss", "(", "logits", "[", "data", ".", "train_mask", "]", ",", "data", ".", "y", "[", "data", ".", "train_mask", "]", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "return", "loss", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.experiment.node_classification.evaluate": [[15, 27], ["model.eval", "torch.no_grad", "torch.no_grad", "model", "logits[].max", "pred.eq().sum().item", "mask.sum().item", "pred.eq().sum", "mask.sum", "pred.eq"], "function", ["None"], ["", "def", "evaluate", "(", "model", ":", "torch", ".", "nn", ".", "Module", ",", "data", ":", "Data", ",", "test", ":", "bool", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "logits", "=", "model", "(", "data", ")", "\n", "", "eval_dict", "=", "{", "}", "\n", "keys", "=", "[", "'val'", ",", "'test'", "]", "if", "test", "else", "[", "'val'", "]", "\n", "for", "key", "in", "keys", ":", "\n", "        ", "mask", "=", "data", "[", "f'{key}_mask'", "]", "\n", "pred", "=", "logits", "[", "mask", "]", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "acc", "=", "pred", ".", "eq", "(", "data", ".", "y", "[", "mask", "]", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "eval_dict", "[", "f'{key}_acc'", "]", "=", "acc", "\n", "", "return", "eval_dict", "\n", "", ""]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.experiment.optimizer.get_optimizer": [[3, 25], ["isinstance", "name.lower.lower", "Exception", "torch.optim.SGD", "torch.optim.RMSprop", "torch.optim.Adagrad", "torch.optim.Adam", "torch.optim.Adamax", "Exception"], "function", ["None"], ["def", "get_optimizer", "(", "name", ",", "model", ",", "lr", ",", "weight_decay", "=", "0", ")", ":", "\n", "    ", "if", "isinstance", "(", "name", ",", "str", ")", ":", "\n", "        ", "name", "=", "name", ".", "lower", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Unsupported optimizer: {}\"", ".", "format", "(", "name", ")", ")", "\n", "\n", "", "parameters", "=", "[", "\n", "{", "'params'", ":", "model", ".", "non_reg_params", ",", "'weight_decay'", ":", "0", "}", ",", "\n", "{", "'params'", ":", "model", ".", "reg_params", ",", "'weight_decay'", ":", "weight_decay", "}", "\n", "]", "\n", "if", "name", "==", "'sgd'", ":", "\n", "        ", "return", "torch", ".", "optim", ".", "SGD", "(", "parameters", ",", "lr", "=", "lr", ")", "\n", "", "elif", "name", "==", "'rmsprop'", ":", "\n", "        ", "return", "torch", ".", "optim", ".", "RMSprop", "(", "parameters", ",", "lr", "=", "lr", ")", "\n", "", "elif", "name", "==", "'adagrad'", ":", "\n", "        ", "return", "torch", ".", "optim", ".", "Adagrad", "(", "parameters", ",", "lr", "=", "lr", ")", "\n", "", "elif", "name", "==", "'adam'", ":", "\n", "        ", "return", "torch", ".", "optim", ".", "Adam", "(", "parameters", ",", "lr", "=", "lr", ")", "\n", "", "elif", "name", "==", "'adamax'", ":", "\n", "        ", "return", "torch", ".", "optim", ".", "Adamax", "(", "parameters", ",", "lr", "=", "lr", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Unsupported optimizer: {}\"", ".", "format", "(", "name", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.numba._balanced_forman_curvature": [[12, 54], ["numba.jit", "numba.prange", "numba.prange", "range"], "function", ["None"], ["@", "jit", "(", "nopython", "=", "True", ")", "\n", "def", "_balanced_forman_curvature", "(", "A", ",", "A2", ",", "d_in", ",", "d_out", ",", "N", ",", "C", ")", ":", "\n", "    ", "for", "i", "in", "prange", "(", "N", ")", ":", "\n", "        ", "for", "j", "in", "prange", "(", "N", ")", ":", "\n", "            ", "if", "A", "[", "i", ",", "j", "]", "==", "0", ":", "\n", "                ", "C", "[", "i", ",", "j", "]", "=", "0", "\n", "break", "\n", "\n", "", "if", "d_in", "[", "i", "]", ">", "d_out", "[", "j", "]", ":", "\n", "                ", "d_max", "=", "d_in", "[", "i", "]", "\n", "d_min", "=", "d_out", "[", "j", "]", "\n", "", "else", ":", "\n", "                ", "d_max", "=", "d_out", "[", "j", "]", "\n", "d_min", "=", "d_in", "[", "i", "]", "\n", "\n", "", "if", "d_max", "*", "d_min", "==", "0", ":", "\n", "                ", "C", "[", "i", ",", "j", "]", "=", "0", "\n", "break", "\n", "\n", "", "sharp_ij", "=", "0", "\n", "lambda_ij", "=", "0", "\n", "for", "k", "in", "range", "(", "N", ")", ":", "\n", "                ", "TMP", "=", "A", "[", "k", ",", "j", "]", "*", "(", "A2", "[", "i", ",", "k", "]", "-", "A", "[", "i", ",", "k", "]", ")", "*", "A", "[", "i", ",", "j", "]", "\n", "if", "TMP", ">", "0", ":", "\n", "                    ", "sharp_ij", "+=", "1", "\n", "if", "TMP", ">", "lambda_ij", ":", "\n", "                        ", "lambda_ij", "=", "TMP", "\n", "\n", "", "", "TMP", "=", "A", "[", "i", ",", "k", "]", "*", "(", "A2", "[", "k", ",", "j", "]", "-", "A", "[", "k", ",", "j", "]", ")", "*", "A", "[", "i", ",", "j", "]", "\n", "if", "TMP", ">", "0", ":", "\n", "                    ", "sharp_ij", "+=", "1", "\n", "if", "TMP", ">", "lambda_ij", ":", "\n", "                        ", "lambda_ij", "=", "TMP", "\n", "\n", "", "", "", "C", "[", "i", ",", "j", "]", "=", "(", "\n", "(", "2", "/", "d_max", ")", "\n", "+", "(", "2", "/", "d_min", ")", "\n", "-", "2", "\n", "+", "(", "2", "/", "d_max", "+", "1", "/", "d_min", ")", "*", "A2", "[", "i", ",", "j", "]", "*", "A", "[", "i", ",", "j", "]", "\n", ")", "\n", "if", "lambda_ij", ">", "0", ":", "\n", "                ", "C", "[", "i", ",", "j", "]", "+=", "sharp_ij", "/", "(", "d_max", "*", "lambda_ij", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.numba.balanced_forman_curvature": [[56, 66], ["numpy.matmul", "A.sum", "A.sum", "numba._balanced_forman_curvature", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.cuda._balanced_forman_curvature"], ["", "", "", "", "def", "balanced_forman_curvature", "(", "A", ",", "C", "=", "None", ")", ":", "\n", "    ", "N", "=", "A", ".", "shape", "[", "0", "]", "\n", "A2", "=", "np", ".", "matmul", "(", "A", ",", "A", ")", "\n", "d_in", "=", "A", ".", "sum", "(", "axis", "=", "0", ")", "\n", "d_out", "=", "A", ".", "sum", "(", "axis", "=", "1", ")", "\n", "if", "C", "is", "None", ":", "\n", "        ", "C", "=", "np", ".", "zeros", "(", "(", "N", ",", "N", ")", ")", "\n", "\n", "", "_balanced_forman_curvature", "(", "A", ",", "A2", ",", "d_in", ",", "d_out", ",", "N", ",", "C", ")", "\n", "return", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.numba._balanced_forman_post_delta": [[68, 147], ["numba.jit", "numba.prange", "numba.prange", "range"], "function", ["None"], ["", "@", "jit", "(", "nopython", "=", "True", ")", "\n", "def", "_balanced_forman_post_delta", "(", "\n", "A", ",", "A2", ",", "d_in_x", ",", "d_out_y", ",", "N", ",", "D", ",", "x", ",", "y", ",", "i_neighbors", ",", "j_neighbors", ",", "dim_i", ",", "dim_j", "\n", ")", ":", "\n", "    ", "for", "I", "in", "prange", "(", "dim_i", ")", ":", "\n", "        ", "for", "J", "in", "prange", "(", "dim_j", ")", ":", "\n", "            ", "i", "=", "i_neighbors", "[", "I", "]", "\n", "j", "=", "j_neighbors", "[", "J", "]", "\n", "\n", "if", "(", "i", "==", "j", ")", "or", "(", "A", "[", "i", ",", "j", "]", "!=", "0", ")", ":", "\n", "                ", "D", "[", "I", ",", "J", "]", "=", "-", "1000", "\n", "break", "\n", "\n", "# Difference in degree terms", "\n", "", "if", "j", "==", "x", ":", "\n", "                ", "d_in_x", "+=", "1", "\n", "", "elif", "i", "==", "y", ":", "\n", "                ", "d_out_y", "+=", "1", "\n", "\n", "", "if", "d_in_x", "*", "d_out_y", "==", "0", ":", "\n", "                ", "D", "[", "I", ",", "J", "]", "=", "0", "\n", "break", "\n", "\n", "", "if", "d_in_x", ">", "d_out_y", ":", "\n", "                ", "d_max", "=", "d_in_x", "\n", "d_min", "=", "d_out_y", "\n", "", "else", ":", "\n", "                ", "d_max", "=", "d_out_y", "\n", "d_min", "=", "d_in_x", "\n", "\n", "# Difference in triangles term", "\n", "", "A2_x_y", "=", "A2", "[", "x", ",", "y", "]", "\n", "if", "(", "x", "==", "i", ")", "and", "(", "A", "[", "j", ",", "y", "]", "!=", "0", ")", ":", "\n", "                ", "A2_x_y", "+=", "A", "[", "j", ",", "y", "]", "\n", "", "elif", "(", "y", "==", "j", ")", "and", "(", "A", "[", "x", ",", "i", "]", "!=", "0", ")", ":", "\n", "                ", "A2_x_y", "+=", "A", "[", "x", ",", "i", "]", "\n", "\n", "# Difference in four-cycles term", "\n", "", "sharp_ij", "=", "0", "\n", "lambda_ij", "=", "0", "\n", "for", "z", "in", "range", "(", "N", ")", ":", "\n", "                ", "A_z_y", "=", "A", "[", "z", ",", "y", "]", "+", "0", "\n", "A_x_z", "=", "A", "[", "x", ",", "z", "]", "+", "0", "\n", "A2_z_y", "=", "A2", "[", "z", ",", "y", "]", "+", "0", "\n", "A2_x_z", "=", "A2", "[", "x", ",", "z", "]", "+", "0", "\n", "\n", "if", "(", "z", "==", "i", ")", "and", "(", "y", "==", "j", ")", ":", "\n", "                    ", "A_z_y", "+=", "1", "\n", "", "if", "(", "x", "==", "i", ")", "and", "(", "z", "==", "j", ")", ":", "\n", "                    ", "A_x_z", "+=", "1", "\n", "", "if", "(", "z", "==", "i", ")", "and", "(", "A", "[", "j", ",", "y", "]", "!=", "0", ")", ":", "\n", "                    ", "A2_z_y", "+=", "A", "[", "j", ",", "y", "]", "\n", "", "if", "(", "x", "==", "i", ")", "and", "(", "A", "[", "j", ",", "z", "]", "!=", "0", ")", ":", "\n", "                    ", "A2_x_z", "+=", "A", "[", "j", ",", "z", "]", "\n", "", "if", "(", "y", "==", "j", ")", "and", "(", "A", "[", "z", ",", "i", "]", "!=", "0", ")", ":", "\n", "                    ", "A2_z_y", "+=", "A", "[", "z", ",", "i", "]", "\n", "", "if", "(", "z", "==", "j", ")", "and", "(", "A", "[", "x", ",", "i", "]", "!=", "0", ")", ":", "\n", "                    ", "A2_x_z", "+=", "A", "[", "x", ",", "i", "]", "\n", "\n", "", "TMP", "=", "A_z_y", "*", "(", "A2_x_z", "-", "A_x_z", ")", "*", "A", "[", "x", ",", "y", "]", "\n", "if", "TMP", ">", "0", ":", "\n", "                    ", "sharp_ij", "+=", "1", "\n", "if", "TMP", ">", "lambda_ij", ":", "\n", "                        ", "lambda_ij", "=", "TMP", "\n", "\n", "", "", "TMP", "=", "A_x_z", "*", "(", "A2_z_y", "-", "A_z_y", ")", "*", "A", "[", "x", ",", "y", "]", "\n", "if", "TMP", ">", "0", ":", "\n", "                    ", "sharp_ij", "+=", "1", "\n", "if", "TMP", ">", "lambda_ij", ":", "\n", "                        ", "lambda_ij", "=", "TMP", "\n", "\n", "", "", "", "D", "[", "I", ",", "J", "]", "=", "(", "\n", "(", "2", "/", "d_max", ")", "\n", "+", "(", "2", "/", "d_min", ")", "\n", "-", "2", "\n", "+", "(", "2", "/", "d_max", "+", "1", "/", "d_min", ")", "*", "A2_x_y", "*", "A", "[", "x", ",", "y", "]", "\n", ")", "\n", "if", "lambda_ij", ">", "0", ":", "\n", "                ", "D", "[", "I", ",", "J", "]", "+=", "sharp_ij", "/", "(", "d_max", "*", "lambda_ij", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.numba.balanced_forman_post_delta": [[149, 172], ["numpy.matmul", "A[].sum", "A[].sum", "numba._balanced_forman_post_delta", "numpy.zeros", "numpy.array", "numpy.array", "len", "len"], "function", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.cuda._balanced_forman_post_delta"], ["", "", "", "", "def", "balanced_forman_post_delta", "(", "A", ",", "x", ",", "y", ",", "i_neighbors", ",", "j_neighbors", ",", "D", "=", "None", ")", ":", "\n", "    ", "N", "=", "A", ".", "shape", "[", "0", "]", "\n", "A2", "=", "np", ".", "matmul", "(", "A", ",", "A", ")", "\n", "d_in", "=", "A", "[", ":", ",", "x", "]", ".", "sum", "(", ")", "\n", "d_out", "=", "A", "[", "y", "]", ".", "sum", "(", ")", "\n", "if", "D", "is", "None", ":", "\n", "        ", "D", "=", "np", ".", "zeros", "(", "(", "len", "(", "i_neighbors", ")", ",", "len", "(", "j_neighbors", ")", ")", ")", "\n", "\n", "", "_balanced_forman_post_delta", "(", "\n", "A", ",", "\n", "A2", ",", "\n", "d_in", ",", "\n", "d_out", ",", "\n", "N", ",", "\n", "D", ",", "\n", "x", ",", "\n", "y", ",", "\n", "np", ".", "array", "(", "i_neighbors", ")", ",", "\n", "np", ".", "array", "(", "j_neighbors", ")", ",", "\n", "D", ".", "shape", "[", "0", "]", ",", "\n", "D", ".", "shape", "[", "1", "]", ",", "\n", ")", "\n", "return", "D", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.numba.sdrf": [[174, 255], ["numpy.zeros", "torch_geometric.utils.to_networkx", "numpy.zeros", "range", "torch_geometric.utils.from_networkx", "zip", "zip", "G.to_undirected.to_undirected", "numba.balanced_forman_curvature", "np.zeros.argmin", "len", "numba.balanced_forman_post_delta", "G.to_undirected.add_edge", "np.zeros.argmax", "list", "list", "list", "list", "improvements.append", "G.to_undirected.remove_edge", "G.to_undirected.neighbors", "G.to_undirected.neighbors", "G.to_undirected.successors", "G.to_undirected.predecessors", "candidates.append", "numpy.random.choice", "G.to_undirected.has_edge", "range", "len", "gdl.curvature.utils.softmax", "x_neighbors.index", "y_neighbors.index", "numpy.array"], "function", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.cuda.balanced_forman_curvature", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.cuda.balanced_forman_post_delta", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.utils.softmax"], ["", "def", "sdrf", "(", "\n", "data", ",", "\n", "loops", "=", "10", ",", "\n", "remove_edges", "=", "True", ",", "\n", "removal_bound", "=", "0.5", ",", "\n", "tau", "=", "1", ",", "\n", "is_undirected", "=", "False", ",", "\n", ")", ":", "\n", "    ", "N", "=", "data", ".", "x", ".", "shape", "[", "0", "]", "\n", "A", "=", "np", ".", "zeros", "(", "shape", "=", "(", "N", ",", "N", ")", ")", "\n", "if", "is_undirected", ":", "\n", "        ", "for", "i", ",", "j", "in", "zip", "(", "data", ".", "edge_index", "[", "0", "]", ",", "data", ".", "edge_index", "[", "1", "]", ")", ":", "\n", "            ", "if", "i", "!=", "j", ":", "\n", "                ", "A", "[", "i", ",", "j", "]", "=", "A", "[", "j", ",", "i", "]", "=", "1.0", "\n", "", "", "", "else", ":", "\n", "        ", "for", "i", ",", "j", "in", "zip", "(", "data", ".", "edge_index", "[", "0", "]", ",", "data", ".", "edge_index", "[", "1", "]", ")", ":", "\n", "            ", "if", "i", "!=", "j", ":", "\n", "                ", "A", "[", "i", ",", "j", "]", "=", "1.0", "\n", "", "", "", "N", "=", "A", ".", "shape", "[", "0", "]", "\n", "G", "=", "to_networkx", "(", "data", ")", "\n", "if", "is_undirected", ":", "\n", "        ", "G", "=", "G", ".", "to_undirected", "(", ")", "\n", "", "C", "=", "np", ".", "zeros", "(", "(", "N", ",", "N", ")", ")", "\n", "\n", "for", "x", "in", "range", "(", "loops", ")", ":", "\n", "        ", "can_add", "=", "True", "\n", "balanced_forman_curvature", "(", "A", ",", "C", "=", "C", ")", "\n", "ix_min", "=", "C", ".", "argmin", "(", ")", "\n", "x", "=", "ix_min", "//", "N", "\n", "y", "=", "ix_min", "%", "N", "\n", "\n", "if", "is_undirected", ":", "\n", "            ", "x_neighbors", "=", "list", "(", "G", ".", "neighbors", "(", "x", ")", ")", "+", "[", "x", "]", "\n", "y_neighbors", "=", "list", "(", "G", ".", "neighbors", "(", "y", ")", ")", "+", "[", "y", "]", "\n", "", "else", ":", "\n", "            ", "x_neighbors", "=", "list", "(", "G", ".", "successors", "(", "x", ")", ")", "+", "[", "x", "]", "\n", "y_neighbors", "=", "list", "(", "G", ".", "predecessors", "(", "y", ")", ")", "+", "[", "y", "]", "\n", "", "candidates", "=", "[", "]", "\n", "for", "i", "in", "x_neighbors", ":", "\n", "            ", "for", "j", "in", "y_neighbors", ":", "\n", "                ", "if", "(", "i", "!=", "j", ")", "and", "(", "not", "G", ".", "has_edge", "(", "i", ",", "j", ")", ")", ":", "\n", "                    ", "candidates", ".", "append", "(", "(", "i", ",", "j", ")", ")", "\n", "\n", "", "", "", "if", "len", "(", "candidates", ")", ":", "\n", "            ", "D", "=", "balanced_forman_post_delta", "(", "A", ",", "x", ",", "y", ",", "x_neighbors", ",", "y_neighbors", ")", "\n", "improvements", "=", "[", "]", "\n", "for", "(", "i", ",", "j", ")", "in", "candidates", ":", "\n", "                ", "improvements", ".", "append", "(", "\n", "(", "D", "-", "C", "[", "x", ",", "y", "]", ")", "[", "x_neighbors", ".", "index", "(", "i", ")", ",", "y_neighbors", ".", "index", "(", "j", ")", "]", "\n", ")", "\n", "\n", "", "k", ",", "l", "=", "candidates", "[", "\n", "np", ".", "random", ".", "choice", "(", "\n", "range", "(", "len", "(", "candidates", ")", ")", ",", "p", "=", "softmax", "(", "np", ".", "array", "(", "improvements", ")", ",", "tau", "=", "tau", ")", "\n", ")", "\n", "]", "\n", "G", ".", "add_edge", "(", "k", ",", "l", ")", "\n", "if", "is_undirected", ":", "\n", "                ", "A", "[", "k", ",", "l", "]", "=", "A", "[", "l", ",", "k", "]", "=", "1", "\n", "", "else", ":", "\n", "                ", "A", "[", "k", ",", "l", "]", "=", "1", "\n", "", "", "else", ":", "\n", "            ", "can_add", "=", "False", "\n", "if", "not", "remove_edges", ":", "\n", "                ", "break", "\n", "\n", "", "", "if", "remove_edges", ":", "\n", "            ", "ix_max", "=", "C", ".", "argmax", "(", ")", "\n", "x", "=", "ix_max", "//", "N", "\n", "y", "=", "ix_max", "%", "N", "\n", "if", "C", "[", "x", ",", "y", "]", ">", "removal_bound", ":", "\n", "                ", "G", ".", "remove_edge", "(", "x", ",", "y", ")", "\n", "if", "is_undirected", ":", "\n", "                    ", "A", "[", "x", ",", "y", "]", "=", "A", "[", "y", ",", "x", "]", "=", "0", "\n", "", "else", ":", "\n", "                    ", "A", "[", "x", ",", "y", "]", "=", "0", "\n", "", "", "else", ":", "\n", "                ", "if", "can_add", "is", "False", ":", "\n", "                    ", "break", "\n", "\n", "", "", "", "", "return", "from_networkx", "(", "G", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.cuda._balanced_forman_curvature": [[16, 58], ["numba.cuda.jit", "numba.cuda.grid", "range"], "function", ["None"], ["@", "cuda", ".", "jit", "(", "\n", "\"void(float32[:,:], float32[:,:], float32[:], float32[:], int32, float32[:,:])\"", "\n", ")", "\n", "def", "_balanced_forman_curvature", "(", "A", ",", "A2", ",", "d_in", ",", "d_out", ",", "N", ",", "C", ")", ":", "\n", "    ", "i", ",", "j", "=", "cuda", ".", "grid", "(", "2", ")", "\n", "\n", "if", "(", "i", "<", "N", ")", "and", "(", "j", "<", "N", ")", ":", "\n", "        ", "if", "A", "[", "i", ",", "j", "]", "==", "0", ":", "\n", "            ", "C", "[", "i", ",", "j", "]", "=", "0", "\n", "return", "\n", "\n", "", "if", "d_in", "[", "i", "]", ">", "d_out", "[", "j", "]", ":", "\n", "            ", "d_max", "=", "d_in", "[", "i", "]", "\n", "d_min", "=", "d_out", "[", "j", "]", "\n", "", "else", ":", "\n", "            ", "d_max", "=", "d_out", "[", "j", "]", "\n", "d_min", "=", "d_in", "[", "i", "]", "\n", "\n", "", "if", "d_max", "*", "d_min", "==", "0", ":", "\n", "            ", "C", "[", "i", ",", "j", "]", "=", "0", "\n", "return", "\n", "\n", "", "sharp_ij", "=", "0", "\n", "lambda_ij", "=", "0", "\n", "for", "k", "in", "range", "(", "N", ")", ":", "\n", "            ", "TMP", "=", "A", "[", "k", ",", "j", "]", "*", "(", "A2", "[", "i", ",", "k", "]", "-", "A", "[", "i", ",", "k", "]", ")", "*", "A", "[", "i", ",", "j", "]", "\n", "if", "TMP", ">", "0", ":", "\n", "                ", "sharp_ij", "+=", "1", "\n", "if", "TMP", ">", "lambda_ij", ":", "\n", "                    ", "lambda_ij", "=", "TMP", "\n", "\n", "", "", "TMP", "=", "A", "[", "i", ",", "k", "]", "*", "(", "A2", "[", "k", ",", "j", "]", "-", "A", "[", "k", ",", "j", "]", ")", "*", "A", "[", "i", ",", "j", "]", "\n", "if", "TMP", ">", "0", ":", "\n", "                ", "sharp_ij", "+=", "1", "\n", "if", "TMP", ">", "lambda_ij", ":", "\n", "                    ", "lambda_ij", "=", "TMP", "\n", "\n", "", "", "", "C", "[", "i", ",", "j", "]", "=", "(", "\n", "(", "2", "/", "d_max", ")", "+", "(", "2", "/", "d_min", ")", "-", "2", "+", "(", "2", "/", "d_max", "+", "1", "/", "d_min", ")", "*", "A2", "[", "i", ",", "j", "]", "*", "A", "[", "i", ",", "j", "]", "\n", ")", "\n", "if", "lambda_ij", ">", "0", ":", "\n", "            ", "C", "[", "i", ",", "j", "]", "+=", "sharp_ij", "/", "(", "d_max", "*", "lambda_ij", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.cuda.balanced_forman_curvature": [[60, 75], ["torch.matmul", "A.sum", "A.sum", "math.ceil", "math.ceil", "torch.zeros().cuda", "torch.zeros"], "function", ["None"], ["", "", "", "def", "balanced_forman_curvature", "(", "A", ",", "C", "=", "None", ")", ":", "\n", "    ", "N", "=", "A", ".", "shape", "[", "0", "]", "\n", "A2", "=", "torch", ".", "matmul", "(", "A", ",", "A", ")", "\n", "d_in", "=", "A", ".", "sum", "(", "axis", "=", "0", ")", "\n", "d_out", "=", "A", ".", "sum", "(", "axis", "=", "1", ")", "\n", "if", "C", "is", "None", ":", "\n", "        ", "C", "=", "torch", ".", "zeros", "(", "N", ",", "N", ")", ".", "cuda", "(", ")", "\n", "\n", "", "threadsperblock", "=", "(", "16", ",", "16", ")", "\n", "blockspergrid_x", "=", "math", ".", "ceil", "(", "N", "/", "threadsperblock", "[", "0", "]", ")", "\n", "blockspergrid_y", "=", "math", ".", "ceil", "(", "N", "/", "threadsperblock", "[", "1", "]", ")", "\n", "blockspergrid", "=", "(", "blockspergrid_x", ",", "blockspergrid_y", ")", "\n", "\n", "_balanced_forman_curvature", "[", "blockspergrid", ",", "threadsperblock", "]", "(", "A", ",", "A2", ",", "d_in", ",", "d_out", ",", "N", ",", "C", ")", "\n", "return", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.cuda._balanced_forman_post_delta": [[77, 156], ["numba.cuda.jit", "numba.cuda.grid", "range"], "function", ["None"], ["", "@", "cuda", ".", "jit", "(", "\n", "\"void(float32[:,:], float32[:,:], float32, float32, int32, float32[:,:], int32, int32, int32[:], int32[:], int32, int32)\"", "\n", ")", "\n", "def", "_balanced_forman_post_delta", "(", "\n", "A", ",", "A2", ",", "d_in_x", ",", "d_out_y", ",", "N", ",", "D", ",", "x", ",", "y", ",", "i_neighbors", ",", "j_neighbors", ",", "dim_i", ",", "dim_j", "\n", ")", ":", "\n", "    ", "I", ",", "J", "=", "cuda", ".", "grid", "(", "2", ")", "\n", "\n", "if", "(", "I", "<", "dim_i", ")", "and", "(", "J", "<", "dim_j", ")", ":", "\n", "        ", "i", "=", "i_neighbors", "[", "I", "]", "\n", "j", "=", "j_neighbors", "[", "J", "]", "\n", "\n", "if", "(", "i", "==", "j", ")", "or", "(", "A", "[", "i", ",", "j", "]", "!=", "0", ")", ":", "\n", "            ", "D", "[", "I", ",", "J", "]", "=", "-", "1000", "\n", "return", "\n", "\n", "# Difference in degree terms", "\n", "", "if", "j", "==", "x", ":", "\n", "            ", "d_in_x", "+=", "1", "\n", "", "elif", "i", "==", "y", ":", "\n", "            ", "d_out_y", "+=", "1", "\n", "\n", "", "if", "d_in_x", "*", "d_out_y", "==", "0", ":", "\n", "            ", "D", "[", "I", ",", "J", "]", "=", "0", "\n", "return", "\n", "\n", "", "if", "d_in_x", ">", "d_out_y", ":", "\n", "            ", "d_max", "=", "d_in_x", "\n", "d_min", "=", "d_out_y", "\n", "", "else", ":", "\n", "            ", "d_max", "=", "d_out_y", "\n", "d_min", "=", "d_in_x", "\n", "\n", "# Difference in triangles term", "\n", "", "A2_x_y", "=", "A2", "[", "x", ",", "y", "]", "\n", "if", "(", "x", "==", "i", ")", "and", "(", "A", "[", "j", ",", "y", "]", "!=", "0", ")", ":", "\n", "            ", "A2_x_y", "+=", "A", "[", "j", ",", "y", "]", "\n", "", "elif", "(", "y", "==", "j", ")", "and", "(", "A", "[", "x", ",", "i", "]", "!=", "0", ")", ":", "\n", "            ", "A2_x_y", "+=", "A", "[", "x", ",", "i", "]", "\n", "\n", "# Difference in four-cycles term", "\n", "", "sharp_ij", "=", "0", "\n", "lambda_ij", "=", "0", "\n", "for", "z", "in", "range", "(", "N", ")", ":", "\n", "            ", "A_z_y", "=", "A", "[", "z", ",", "y", "]", "+", "0", "\n", "A_x_z", "=", "A", "[", "x", ",", "z", "]", "+", "0", "\n", "A2_z_y", "=", "A2", "[", "z", ",", "y", "]", "+", "0", "\n", "A2_x_z", "=", "A2", "[", "x", ",", "z", "]", "+", "0", "\n", "\n", "if", "(", "z", "==", "i", ")", "and", "(", "y", "==", "j", ")", ":", "\n", "                ", "A_z_y", "+=", "1", "\n", "", "if", "(", "x", "==", "i", ")", "and", "(", "z", "==", "j", ")", ":", "\n", "                ", "A_x_z", "+=", "1", "\n", "", "if", "(", "z", "==", "i", ")", "and", "(", "A", "[", "j", ",", "y", "]", "!=", "0", ")", ":", "\n", "                ", "A2_z_y", "+=", "A", "[", "j", ",", "y", "]", "\n", "", "if", "(", "x", "==", "i", ")", "and", "(", "A", "[", "j", ",", "z", "]", "!=", "0", ")", ":", "\n", "                ", "A2_x_z", "+=", "A", "[", "j", ",", "z", "]", "\n", "", "if", "(", "y", "==", "j", ")", "and", "(", "A", "[", "z", ",", "i", "]", "!=", "0", ")", ":", "\n", "                ", "A2_z_y", "+=", "A", "[", "z", ",", "i", "]", "\n", "", "if", "(", "z", "==", "j", ")", "and", "(", "A", "[", "x", ",", "i", "]", "!=", "0", ")", ":", "\n", "                ", "A2_x_z", "+=", "A", "[", "x", ",", "i", "]", "\n", "\n", "", "TMP", "=", "A_z_y", "*", "(", "A2_x_z", "-", "A_x_z", ")", "*", "A", "[", "x", ",", "y", "]", "\n", "if", "TMP", ">", "0", ":", "\n", "                ", "sharp_ij", "+=", "1", "\n", "if", "TMP", ">", "lambda_ij", ":", "\n", "                    ", "lambda_ij", "=", "TMP", "\n", "\n", "", "", "TMP", "=", "A_x_z", "*", "(", "A2_z_y", "-", "A_z_y", ")", "*", "A", "[", "x", ",", "y", "]", "\n", "if", "TMP", ">", "0", ":", "\n", "                ", "sharp_ij", "+=", "1", "\n", "if", "TMP", ">", "lambda_ij", ":", "\n", "                    ", "lambda_ij", "=", "TMP", "\n", "\n", "", "", "", "D", "[", "I", ",", "J", "]", "=", "(", "\n", "(", "2", "/", "d_max", ")", "+", "(", "2", "/", "d_min", ")", "-", "2", "+", "(", "2", "/", "d_max", "+", "1", "/", "d_min", ")", "*", "A2_x_y", "*", "A", "[", "x", ",", "y", "]", "\n", ")", "\n", "if", "lambda_ij", ">", "0", ":", "\n", "            ", "D", "[", "I", ",", "J", "]", "+=", "sharp_ij", "/", "(", "d_max", "*", "lambda_ij", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.cuda.balanced_forman_post_delta": [[158, 186], ["torch.matmul", "A[].sum", "A[].sum", "math.ceil", "math.ceil", "torch.zeros().cuda", "numpy.array", "numpy.array", "torch.zeros", "len", "len"], "function", ["None"], ["", "", "", "def", "balanced_forman_post_delta", "(", "A", ",", "x", ",", "y", ",", "i_neighbors", ",", "j_neighbors", ",", "D", "=", "None", ")", ":", "\n", "    ", "N", "=", "A", ".", "shape", "[", "0", "]", "\n", "A2", "=", "torch", ".", "matmul", "(", "A", ",", "A", ")", "\n", "d_in", "=", "A", "[", ":", ",", "x", "]", ".", "sum", "(", ")", "\n", "d_out", "=", "A", "[", "y", "]", ".", "sum", "(", ")", "\n", "if", "D", "is", "None", ":", "\n", "        ", "D", "=", "torch", ".", "zeros", "(", "len", "(", "i_neighbors", ")", ",", "len", "(", "j_neighbors", ")", ")", ".", "cuda", "(", ")", "\n", "\n", "", "threadsperblock", "=", "(", "16", ",", "16", ")", "\n", "blockspergrid_x", "=", "math", ".", "ceil", "(", "D", ".", "shape", "[", "0", "]", "/", "threadsperblock", "[", "0", "]", ")", "\n", "blockspergrid_y", "=", "math", ".", "ceil", "(", "D", ".", "shape", "[", "1", "]", "/", "threadsperblock", "[", "1", "]", ")", "\n", "blockspergrid", "=", "(", "blockspergrid_x", ",", "blockspergrid_y", ")", "\n", "\n", "_balanced_forman_post_delta", "[", "blockspergrid", ",", "threadsperblock", "]", "(", "\n", "A", ",", "\n", "A2", ",", "\n", "d_in", ",", "\n", "d_out", ",", "\n", "N", ",", "\n", "D", ",", "\n", "x", ",", "\n", "y", ",", "\n", "np", ".", "array", "(", "i_neighbors", ")", ",", "\n", "np", ".", "array", "(", "j_neighbors", ")", ",", "\n", "D", ".", "shape", "[", "0", "]", ",", "\n", "D", ".", "shape", "[", "1", "]", ",", "\n", ")", "\n", "return", "D", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.cuda.sdrf": [[188, 264], ["torch_geometric.utils.to_networkx", "A.cuda.cuda", "torch.zeros().cuda", "range", "torch_geometric.utils.from_networkx", "torch_geometric.utils.to_undirected", "torch_geometric.utils.to_dense_adj", "G.to_undirected.to_undirected", "cuda.balanced_forman_curvature", "torch.zeros().cuda.argmin().item", "len", "torch.zeros", "cuda.balanced_forman_post_delta", "G.to_undirected.add_edge", "torch.zeros().cuda.argmax().item", "cuda..", "torch.zeros().cuda.argmin", "list", "list", "list", "list", "improvements.append", "G.to_undirected.remove_edge", "G.to_undirected.neighbors", "G.to_undirected.neighbors", "G.to_undirected.successors", "G.to_undirected.predecessors", "candidates.append", "[].item", "numpy.random.choice", "torch.zeros().cuda.argmax", "G.to_undirected.has_edge", "range", "len", "gdl.curvature.utils.softmax", "numpy.array", "x_neighbors.index", "y_neighbors.index"], "function", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.cuda.balanced_forman_curvature", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.cuda.balanced_forman_post_delta", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.utils.softmax"], ["", "def", "sdrf", "(", "\n", "data", ",", "\n", "loops", "=", "10", ",", "\n", "remove_edges", "=", "True", ",", "\n", "removal_bound", "=", "0.5", ",", "\n", "tau", "=", "1", ",", "\n", "is_undirected", "=", "False", ",", "\n", ")", ":", "\n", "    ", "edge_index", "=", "data", ".", "edge_index", "\n", "if", "is_undirected", ":", "\n", "        ", "edge_index", "=", "to_undirected", "(", "edge_index", ")", "\n", "", "A", "=", "to_dense_adj", "(", "remove_self_loops", "(", "edge_index", ")", "[", "0", "]", ")", "[", "0", "]", "\n", "N", "=", "A", ".", "shape", "[", "0", "]", "\n", "G", "=", "to_networkx", "(", "data", ")", "\n", "if", "is_undirected", ":", "\n", "        ", "G", "=", "G", ".", "to_undirected", "(", ")", "\n", "", "A", "=", "A", ".", "cuda", "(", ")", "\n", "C", "=", "torch", ".", "zeros", "(", "N", ",", "N", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "x", "in", "range", "(", "loops", ")", ":", "\n", "        ", "can_add", "=", "True", "\n", "balanced_forman_curvature", "(", "A", ",", "C", "=", "C", ")", "\n", "ix_min", "=", "C", ".", "argmin", "(", ")", ".", "item", "(", ")", "\n", "x", "=", "ix_min", "//", "N", "\n", "y", "=", "ix_min", "%", "N", "\n", "\n", "if", "is_undirected", ":", "\n", "            ", "x_neighbors", "=", "list", "(", "G", ".", "neighbors", "(", "x", ")", ")", "+", "[", "x", "]", "\n", "y_neighbors", "=", "list", "(", "G", ".", "neighbors", "(", "y", ")", ")", "+", "[", "y", "]", "\n", "", "else", ":", "\n", "            ", "x_neighbors", "=", "list", "(", "G", ".", "successors", "(", "x", ")", ")", "+", "[", "x", "]", "\n", "y_neighbors", "=", "list", "(", "G", ".", "predecessors", "(", "y", ")", ")", "+", "[", "y", "]", "\n", "", "candidates", "=", "[", "]", "\n", "for", "i", "in", "x_neighbors", ":", "\n", "            ", "for", "j", "in", "y_neighbors", ":", "\n", "                ", "if", "(", "i", "!=", "j", ")", "and", "(", "not", "G", ".", "has_edge", "(", "i", ",", "j", ")", ")", ":", "\n", "                    ", "candidates", ".", "append", "(", "(", "i", ",", "j", ")", ")", "\n", "\n", "", "", "", "if", "len", "(", "candidates", ")", ":", "\n", "            ", "D", "=", "balanced_forman_post_delta", "(", "A", ",", "x", ",", "y", ",", "x_neighbors", ",", "y_neighbors", ")", "\n", "improvements", "=", "[", "]", "\n", "for", "(", "i", ",", "j", ")", "in", "candidates", ":", "\n", "                ", "improvements", ".", "append", "(", "\n", "(", "D", "-", "C", "[", "x", ",", "y", "]", ")", "[", "x_neighbors", ".", "index", "(", "i", ")", ",", "y_neighbors", ".", "index", "(", "j", ")", "]", ".", "item", "(", ")", "\n", ")", "\n", "\n", "", "k", ",", "l", "=", "candidates", "[", "\n", "np", ".", "random", ".", "choice", "(", "\n", "range", "(", "len", "(", "candidates", ")", ")", ",", "p", "=", "softmax", "(", "np", ".", "array", "(", "improvements", ")", ",", "tau", "=", "tau", ")", "\n", ")", "\n", "]", "\n", "G", ".", "add_edge", "(", "k", ",", "l", ")", "\n", "if", "is_undirected", ":", "\n", "                ", "A", "[", "k", ",", "l", "]", "=", "A", "[", "l", ",", "k", "]", "=", "1", "\n", "", "else", ":", "\n", "                ", "A", "[", "k", ",", "l", "]", "=", "1", "\n", "", "", "else", ":", "\n", "            ", "can_add", "=", "False", "\n", "if", "not", "remove_edges", ":", "\n", "                ", "break", "\n", "\n", "", "", "if", "remove_edges", ":", "\n", "            ", "ix_max", "=", "C", ".", "argmax", "(", ")", ".", "item", "(", ")", "\n", "x", "=", "ix_max", "//", "N", "\n", "y", "=", "ix_max", "%", "N", "\n", "if", "C", "[", "x", ",", "y", "]", ">", "removal_bound", ":", "\n", "                ", "G", ".", "remove_edge", "(", "x", ",", "y", ")", "\n", "if", "is_undirected", ":", "\n", "                    ", "A", "[", "x", ",", "y", "]", "=", "A", "[", "y", ",", "x", "]", "=", "0", "\n", "", "else", ":", "\n", "                    ", "A", "[", "x", ",", "y", "]", "=", "0", "\n", "", "", "else", ":", "\n", "                ", "if", "can_add", "is", "False", ":", "\n", "                    ", "break", "\n", "\n", "", "", "", "", "return", "from_networkx", "(", "G", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.utils.softmax": [[4, 7], ["numpy.exp", "np.exp.sum"], "function", ["None"], ["def", "softmax", "(", "a", ",", "tau", "=", "1", ")", ":", "\n", "    ", "exp_a", "=", "np", ".", "exp", "(", "a", "*", "tau", ")", "\n", "return", "exp_a", "/", "exp_a", ".", "sum", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.models.gcn_fa.GCN_FA.__init__": [[10, 30], ["super().__init__", "zip", "layers.append", "torch.nn.ModuleList", "list", "list", "torch.nn.Dropout", "torch.nn.ReLU", "layers.append", "torch.nn.Linear", "layers[].parameters", "torch_geometric.nn.GCNConv", "l.parameters"], "methods", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.digl.ppr.PPRDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "dataset", ":", "InMemoryDataset", ",", "hidden", ":", "List", "[", "int", "]", "=", "[", "64", "]", ",", "dropout", ":", "float", "=", "0.5", "\n", ")", ":", "\n", "        ", "super", "(", "GCN_FA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "num_features", "=", "[", "dataset", ".", "data", ".", "x", ".", "shape", "[", "1", "]", "]", "+", "hidden", "+", "[", "dataset", ".", "num_classes", "]", "\n", "layers", "=", "[", "]", "\n", "for", "in_features", ",", "out_features", "in", "zip", "(", "num_features", "[", ":", "-", "2", "]", ",", "num_features", "[", "1", ":", "-", "1", "]", ")", ":", "\n", "            ", "layers", ".", "append", "(", "GCNConv", "(", "in_features", ",", "out_features", ")", ")", "\n", "\n", "# Here's the +FA addition", "\n", "", "layers", ".", "append", "(", "Linear", "(", "num_features", "[", "-", "2", "]", ",", "num_features", "[", "-", "1", "]", ")", ")", "\n", "\n", "self", ".", "layers", "=", "ModuleList", "(", "layers", ")", "\n", "\n", "self", ".", "reg_params", "=", "list", "(", "layers", "[", "0", "]", ".", "parameters", "(", ")", ")", "\n", "self", ".", "non_reg_params", "=", "list", "(", "[", "p", "for", "l", "in", "layers", "[", "1", ":", "]", "for", "p", "in", "l", ".", "parameters", "(", ")", "]", ")", "\n", "\n", "self", ".", "dropout", "=", "Dropout", "(", "p", "=", "dropout", ")", "\n", "self", ".", "act_fn", "=", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.models.gcn_fa.GCN_FA.reset_parameters": [[31, 34], ["layer.reset_parameters"], "methods", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.models.gcn.GCN.reset_parameters"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "layer", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.models.gcn_fa.GCN_FA.forward": [[35, 49], ["enumerate", "torch.nn.functional.log_softmax", "layer", "gcn_fa.GCN_FA.act_fn", "gcn_fa.GCN_FA.dropout", "layer", "torch.matmul", "len", "torch.ones().cuda", "torch.ones"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "data", ":", "Data", ")", ":", "\n", "        ", "x", ",", "edge_index", ",", "edge_attr", "=", "data", ".", "x", ",", "data", ".", "edge_index", ",", "data", ".", "edge_attr", "\n", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "layers", ")", ":", "\n", "            ", "if", "i", "!=", "len", "(", "self", ".", "layers", ")", "-", "1", ":", "\n", "                ", "x", "=", "layer", "(", "x", ",", "edge_index", ",", "edge_weight", "=", "edge_attr", ")", "\n", "x", "=", "self", ".", "act_fn", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "", "else", ":", "\n", "# FA layer!", "\n", "                ", "x", "=", "layer", "(", "x", ")", "\n", "x", "=", "torch", ".", "matmul", "(", "torch", ".", "ones", "(", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "0", "]", ")", ".", "cuda", "(", ")", ",", "x", ")", "\n", "\n", "", "", "return", "torch", ".", "nn", ".", "functional", ".", "log_softmax", "(", "x", ",", "dim", "=", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.models.gcn.GCN.__init__": [[10, 26], ["super().__init__", "zip", "torch.nn.ModuleList", "list", "list", "torch.nn.Dropout", "torch.nn.ReLU", "layers.append", "layers[].parameters", "torch_geometric.nn.GCNConv", "l.parameters"], "methods", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.digl.ppr.PPRDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "dataset", ":", "InMemoryDataset", ",", "hidden", ":", "List", "[", "int", "]", "=", "[", "64", "]", ",", "dropout", ":", "float", "=", "0.5", "\n", ")", ":", "\n", "        ", "super", "(", "GCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "num_features", "=", "[", "dataset", ".", "data", ".", "x", ".", "shape", "[", "1", "]", "]", "+", "hidden", "+", "[", "dataset", ".", "num_classes", "]", "\n", "layers", "=", "[", "]", "\n", "for", "in_features", ",", "out_features", "in", "zip", "(", "num_features", "[", ":", "-", "1", "]", ",", "num_features", "[", "1", ":", "]", ")", ":", "\n", "            ", "layers", ".", "append", "(", "GCNConv", "(", "in_features", ",", "out_features", ")", ")", "\n", "", "self", ".", "layers", "=", "ModuleList", "(", "layers", ")", "\n", "\n", "self", ".", "reg_params", "=", "list", "(", "layers", "[", "0", "]", ".", "parameters", "(", ")", ")", "\n", "self", ".", "non_reg_params", "=", "list", "(", "[", "p", "for", "l", "in", "layers", "[", "1", ":", "]", "for", "p", "in", "l", ".", "parameters", "(", ")", "]", ")", "\n", "\n", "self", ".", "dropout", "=", "Dropout", "(", "p", "=", "dropout", ")", "\n", "self", ".", "act_fn", "=", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.models.gcn.GCN.reset_parameters": [[27, 30], ["layer.reset_parameters"], "methods", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.models.gcn.GCN.reset_parameters"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "layer", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.models.gcn.GCN.forward": [[31, 44], ["enumerate", "torch.nn.functional.log_softmax", "layer", "gcn.GCN.act_fn", "gcn.GCN.dropout", "len"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "data", ":", "Data", ")", ":", "\n", "        ", "x", ",", "edge_index", ",", "edge_attr", "=", "data", ".", "x", ",", "data", ".", "edge_index", ",", "data", ".", "edge_attr", "\n", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "layers", ")", ":", "\n", "            ", "x", "=", "layer", "(", "x", ",", "edge_index", ",", "edge_weight", "=", "edge_attr", ")", "\n", "\n", "if", "i", "==", "len", "(", "self", ".", "layers", ")", "-", "1", ":", "\n", "                ", "break", "\n", "\n", "", "x", "=", "self", ".", "act_fn", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "\n", "", "return", "torch", ".", "nn", ".", "functional", ".", "log_softmax", "(", "x", ",", "dim", "=", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.sdrf.SDRFDataset.__init__": [[17, 36], ["int", "super().init"], "methods", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.init"], ["def", "__init__", "(", "\n", "self", ",", "\n", "name", ":", "str", "=", "\"Cora\"", ",", "\n", "use_lcc", ":", "bool", "=", "True", ",", "\n", "max_steps", ":", "int", "=", "None", ",", "\n", "remove_edges", ":", "bool", "=", "True", ",", "\n", "removal_bound", ":", "float", "=", "0.5", ",", "\n", "tau", ":", "float", "=", "1", ",", "\n", "undirected", ":", "bool", "=", "False", ",", "\n", "data_dir", ":", "str", "=", "None", ",", "\n", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "use_lcc", "=", "use_lcc", "\n", "self", ".", "max_steps", "=", "int", "(", "max_steps", ")", "\n", "self", ".", "remove_edges", "=", "remove_edges", "\n", "self", ".", "removal_bound", "=", "removal_bound", "\n", "self", ".", "tau", "=", "tau", "\n", "self", ".", "undirected", "=", "undirected", "\n", "super", "(", "SDRFDataset", ",", "self", ")", ".", "init", "(", "data_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.sdrf.SDRFDataset.process": [[37, 48], ["sdrf.SDRFDataset.get_dataset", "sdrf", "sdrf.SDRFDataset.to_dataset"], "methods", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.get_dataset", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.curvature.cuda.sdrf", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.to_dataset"], ["", "def", "process", "(", "self", ")", ":", "\n", "        ", "base", "=", "self", ".", "get_dataset", "(", ")", "\n", "altered_data", "=", "sdrf", "(", "\n", "base", ".", "data", ",", "\n", "loops", "=", "self", ".", "max_steps", ",", "\n", "remove_edges", "=", "self", ".", "remove_edges", ",", "\n", "tau", "=", "self", ".", "tau", ",", "\n", "is_undirected", "=", "self", ".", "undirected", ",", "\n", ")", "\n", "edge_index", "=", "altered_data", ".", "edge_index", "\n", "self", ".", "to_dataset", "(", "base", ",", "edge_index", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.sdrf.SDRFDataset.__str__": [[49, 53], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "(", "\n", "f\"{self.name}_sdrf_ms={self.max_steps}_re={self.remove_edges}_rb={self.removal_bound}_tau={self.tau}_lcc={self.use_lcc}\"", "\n", "+", "(", "\"_undirected\"", "if", "self", ".", "undirected", "else", "\"\"", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.__init__": [[114, 125], ["base.BaseDataset.init"], "methods", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.init"], ["def", "__init__", "(", "\n", "self", ",", "\n", "name", ":", "str", "=", "\"Cora\"", ",", "\n", "use_lcc", ":", "bool", "=", "True", ",", "\n", "undirected", ":", "bool", "=", "False", ",", "\n", "data_dir", ":", "str", "=", "None", ",", "\n", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "use_lcc", "=", "use_lcc", "\n", "self", ".", "undirected", "=", "undirected", "\n", "self", ".", "init", "(", "data_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.init": [[126, 133], ["torch_geometric.data.InMemoryDataset.__init__", "torch.load"], "methods", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.digl.ppr.PPRDataset.__init__"], ["", "def", "init", "(", "self", ",", "data_dir", ")", ":", "\n", "        ", "if", "data_dir", "is", "None", ":", "\n", "            ", "data_dir", "=", "DEFAULT_DATA_PATH", "\n", "", "self", ".", "data_dir", "=", "data_dir", "\n", "\n", "super", "(", "BaseDataset", ",", "self", ")", ".", "__init__", "(", "self", ".", "data_dir", ")", "\n", "self", ".", "data", ",", "self", ".", "slices", "=", "torch", ".", "load", "(", "self", ".", "processed_paths", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.raw_file_names": [[134, 137], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "raw_file_names", "(", "self", ")", "->", "list", ":", "\n", "        ", "return", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.processed_file_names": [[138, 141], ["str"], "methods", ["None"], ["", "@", "property", "\n", "def", "processed_file_names", "(", "self", ")", "->", "list", ":", "\n", "        ", "return", "[", "str", "(", "self", ")", "+", "\".pt\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.download": [[142, 144], ["None"], "methods", ["None"], ["", "def", "download", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.get_dataset": [[145, 147], ["base.BaseDataset.get_dataset"], "methods", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.get_dataset"], ["", "def", "get_dataset", "(", "self", ")", ":", "\n", "        ", "return", "get_dataset", "(", "name", "=", "self", ".", "name", ",", "use_lcc", "=", "self", ".", "use_lcc", ",", "data_dir", "=", "self", ".", "data_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.to_dataset": [[148, 161], ["torch_geometric.data.Data", "base.BaseDataset.collate", "torch.save", "torch.LongTensor", "torch.zeros", "torch.zeros", "torch.zeros", "torch.FloatTensor", "base.data.train_mask.size", "base.data.test_mask.size", "base.data.val_mask.size"], "methods", ["None"], ["", "def", "to_dataset", "(", "self", ",", "base", ",", "edge_index", ",", "edge_attr", ")", ":", "\n", "        ", "data", "=", "Data", "(", "\n", "x", "=", "base", ".", "data", ".", "x", ",", "\n", "edge_index", "=", "torch", ".", "LongTensor", "(", "edge_index", ")", ",", "\n", "edge_attr", "=", "torch", ".", "FloatTensor", "(", "edge_attr", ")", "if", "edge_attr", "is", "not", "None", "else", "None", ",", "\n", "y", "=", "base", ".", "data", ".", "y", ",", "\n", "train_mask", "=", "torch", ".", "zeros", "(", "base", ".", "data", ".", "train_mask", ".", "size", "(", ")", "[", "0", "]", ",", "dtype", "=", "torch", ".", "bool", ")", ",", "\n", "test_mask", "=", "torch", ".", "zeros", "(", "base", ".", "data", ".", "test_mask", ".", "size", "(", ")", "[", "0", "]", ",", "dtype", "=", "torch", ".", "bool", ")", ",", "\n", "val_mask", "=", "torch", ".", "zeros", "(", "base", ".", "data", ".", "val_mask", ".", "size", "(", ")", "[", "0", "]", ",", "dtype", "=", "torch", ".", "bool", ")", ",", "\n", ")", "\n", "\n", "data", ",", "slices", "=", "self", ".", "collate", "(", "[", "data", "]", ")", "\n", "torch", ".", "save", "(", "(", "data", ",", "slices", ")", ",", "self", ".", "processed_paths", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.process": [[162, 187], ["base.BaseDataset.BaseDataset.get_dataset", "base.BaseDataset.BaseDataset.to_dataset", "gdl.data.utils.get_undirected_adj_matrix", "enumerate", "numpy.where", "edges_i.append", "edges_j.append", "edge_attr.append", "base.BaseDataset.BaseDataset.data.__dir__"], "methods", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.get_dataset", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.to_dataset", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.utils.get_undirected_adj_matrix"], ["", "def", "process", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Overwrites of this method must start with self.get_dataset() and\n        end with self.to_dataset(base, edge_index, edge_attr).\n        \"\"\"", "\n", "base", "=", "self", ".", "get_dataset", "(", ")", "\n", "\n", "if", "not", "self", ".", "undirected", ":", "\n", "            ", "adj_matrix", "=", "get_undirected_adj_matrix", "(", "base", ")", "\n", "edges_i", "=", "[", "]", "\n", "edges_j", "=", "[", "]", "\n", "edge_attr", "=", "[", "]", "\n", "for", "i", ",", "row", "in", "enumerate", "(", "adj_matrix", ")", ":", "\n", "                ", "for", "j", "in", "np", ".", "where", "(", "row", ">", "0", ")", "[", "0", "]", ":", "\n", "                    ", "edges_i", ".", "append", "(", "i", ")", "\n", "edges_j", ".", "append", "(", "j", ")", "\n", "edge_attr", ".", "append", "(", "adj_matrix", "[", "i", ",", "j", "]", ")", "\n", "", "", "edge_index", "=", "[", "edges_i", ",", "edges_j", "]", "\n", "", "else", ":", "\n", "            ", "edge_index", "=", "base", ".", "data", ".", "edge_index", "\n", "edge_attr", "=", "(", "\n", "base", ".", "data", ".", "edge_attr", "if", "\"edge_attr\"", "in", "base", ".", "data", ".", "__dir__", "(", ")", "else", "None", "\n", ")", "\n", "\n", "", "self", ".", "to_dataset", "(", "base", ",", "edge_index", ",", "edge_attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.__str__": [[188, 190], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "f\"{self.name}_{'base' if not self.undirected else 'undirected'}_lcc={self.use_lcc}\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.get_node_mapper": [[19, 26], ["None"], "function", ["None"], ["def", "get_node_mapper", "(", "lcc", ":", "np", ".", "ndarray", ")", "->", "dict", ":", "\n", "    ", "mapper", "=", "{", "}", "\n", "counter", "=", "0", "\n", "for", "node", "in", "lcc", ":", "\n", "        ", "mapper", "[", "node", "]", "=", "counter", "\n", "counter", "+=", "1", "\n", "", "return", "mapper", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.remap_edges": [[28, 34], ["list", "list", "map", "map"], "function", ["None"], ["", "def", "remap_edges", "(", "edges", ":", "list", ",", "mapper", ":", "dict", ")", "->", "list", ":", "\n", "    ", "row", "=", "[", "e", "[", "0", "]", "for", "e", "in", "edges", "]", "\n", "col", "=", "[", "e", "[", "1", "]", "for", "e", "in", "edges", "]", "\n", "row", "=", "list", "(", "map", "(", "lambda", "x", ":", "mapper", "[", "x", "]", ",", "row", ")", ")", "\n", "col", "=", "list", "(", "map", "(", "lambda", "x", ":", "mapper", "[", "x", "]", ",", "col", ")", ")", "\n", "return", "[", "row", ",", "col", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.get_component": [[36, 49], ["set", "set", "dataset.data.edge_index.numpy", "set.pop", "set.update", "set.update", "numpy.where"], "function", ["None"], ["", "def", "get_component", "(", "dataset", ":", "InMemoryDataset", ",", "start", ":", "int", "=", "0", ")", "->", "set", ":", "\n", "    ", "visited_nodes", "=", "set", "(", ")", "\n", "queued_nodes", "=", "set", "(", "[", "start", "]", ")", "\n", "row", ",", "col", "=", "dataset", ".", "data", ".", "edge_index", ".", "numpy", "(", ")", "\n", "while", "queued_nodes", ":", "\n", "        ", "current_node", "=", "queued_nodes", ".", "pop", "(", ")", "\n", "visited_nodes", ".", "update", "(", "[", "current_node", "]", ")", "\n", "neighbors", "=", "col", "[", "np", ".", "where", "(", "row", "==", "current_node", ")", "[", "0", "]", "]", "\n", "neighbors", "=", "[", "\n", "n", "for", "n", "in", "neighbors", "if", "n", "not", "in", "visited_nodes", "and", "n", "not", "in", "queued_nodes", "\n", "]", "\n", "queued_nodes", ".", "update", "(", "neighbors", ")", "\n", "", "return", "visited_nodes", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.get_largest_connected_component": [[51, 60], ["set", "numpy.array", "range", "min", "base.get_component", "comps.append", "remaining_nodes.difference.difference", "list", "numpy.argmax", "list", "map"], "function", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.get_component"], ["", "def", "get_largest_connected_component", "(", "dataset", ":", "InMemoryDataset", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "remaining_nodes", "=", "set", "(", "range", "(", "dataset", ".", "data", ".", "x", ".", "shape", "[", "0", "]", ")", ")", "\n", "comps", "=", "[", "]", "\n", "while", "remaining_nodes", ":", "\n", "        ", "start", "=", "min", "(", "remaining_nodes", ")", "\n", "comp", "=", "get_component", "(", "dataset", ",", "start", ")", "\n", "comps", ".", "append", "(", "comp", ")", "\n", "remaining_nodes", "=", "remaining_nodes", ".", "difference", "(", "comp", ")", "\n", "", "return", "np", ".", "array", "(", "list", "(", "comps", "[", "np", ".", "argmax", "(", "list", "(", "map", "(", "len", ",", "comps", ")", ")", ")", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.get_dataset": [[62, 107], ["os.path.join", "dict", "torch.LongTensor", "torch_geometric.datasets.Planetoid", "base.get_largest_connected_component", "torch_geometric.datasets.Actor.data.edge_index.numpy", "base.remap_edges", "torch_geometric.data.Data", "zip", "torch_geometric.datasets.Amazon", "base.get_node_mapper", "numpy.unique", "range", "torch_geometric.datasets.Coauthor", "zip", "torch.LongTensor", "torch.zeros", "torch.zeros", "torch.zeros", "len", "numpy.array", "torch_geometric.datasets.WebKB", "numpy.unique", "torch_geometric.datasets.WikipediaNetwork", "y_new.size", "y_new.size", "y_new.size", "torch_geometric.datasets.Actor", "Exception"], "function", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.get_largest_connected_component", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.remap_edges", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.get_node_mapper"], ["", "def", "get_dataset", "(", "\n", "name", ":", "str", ",", "use_lcc", ":", "bool", "=", "True", ",", "data_dir", "=", "DEFAULT_DATA_PATH", "\n", ")", "->", "InMemoryDataset", ":", "\n", "    ", "path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "name", ")", "\n", "if", "name", "in", "[", "\"Cora\"", ",", "\"Citeseer\"", ",", "\"Pubmed\"", "]", ":", "\n", "        ", "dataset", "=", "Planetoid", "(", "path", ",", "name", ")", "\n", "", "elif", "name", "in", "[", "\"Computers\"", ",", "\"Photo\"", "]", ":", "\n", "        ", "dataset", "=", "Amazon", "(", "path", ",", "name", ")", "\n", "", "elif", "name", "==", "\"CoauthorCS\"", ":", "\n", "        ", "dataset", "=", "Coauthor", "(", "path", ",", "\"CS\"", ")", "\n", "", "elif", "name", "in", "[", "\"Cornell\"", ",", "\"Texas\"", ",", "\"Wisconsin\"", "]", ":", "\n", "        ", "dataset", "=", "WebKB", "(", "path", ",", "name", ")", "\n", "", "elif", "name", "in", "[", "\"Chameleon\"", ",", "\"Squirrel\"", "]", ":", "\n", "        ", "dataset", "=", "WikipediaNetwork", "(", "path", ",", "name", ",", "geom_gcn_preprocess", "=", "True", ")", "\n", "", "elif", "name", "==", "\"Actor\"", ":", "\n", "        ", "dataset", "=", "Actor", "(", "path", ",", "\"Actor\"", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "f\"Unknown dataset: {name}\"", ")", "\n", "\n", "", "if", "use_lcc", ":", "\n", "        ", "lcc", "=", "get_largest_connected_component", "(", "dataset", ")", "\n", "\n", "x_new", "=", "dataset", ".", "data", ".", "x", "[", "lcc", "]", "\n", "y_new", "=", "dataset", ".", "data", ".", "y", "[", "lcc", "]", "\n", "\n", "row", ",", "col", "=", "dataset", ".", "data", ".", "edge_index", ".", "numpy", "(", ")", "\n", "edges", "=", "[", "[", "i", ",", "j", "]", "for", "i", ",", "j", "in", "zip", "(", "row", ",", "col", ")", "if", "i", "in", "lcc", "and", "j", "in", "lcc", "]", "\n", "edges", "=", "remap_edges", "(", "edges", ",", "get_node_mapper", "(", "lcc", ")", ")", "\n", "\n", "data", "=", "Data", "(", "\n", "x", "=", "x_new", ",", "\n", "edge_index", "=", "torch", ".", "LongTensor", "(", "edges", ")", ",", "\n", "y", "=", "y_new", ",", "\n", "train_mask", "=", "torch", ".", "zeros", "(", "y_new", ".", "size", "(", ")", "[", "0", "]", ",", "dtype", "=", "torch", ".", "bool", ")", ",", "\n", "test_mask", "=", "torch", ".", "zeros", "(", "y_new", ".", "size", "(", ")", "[", "0", "]", ",", "dtype", "=", "torch", ".", "bool", ")", ",", "\n", "val_mask", "=", "torch", ".", "zeros", "(", "y_new", ".", "size", "(", ")", "[", "0", "]", ",", "dtype", "=", "torch", ".", "bool", ")", ",", "\n", ")", "\n", "dataset", ".", "data", "=", "data", "\n", "\n", "", "mapping", "=", "dict", "(", "\n", "zip", "(", "np", ".", "unique", "(", "dataset", ".", "data", ".", "y", ")", ",", "range", "(", "len", "(", "np", ".", "unique", "(", "dataset", ".", "data", ".", "y", ")", ")", ")", ")", "\n", ")", "\n", "dataset", ".", "data", ".", "y", "=", "torch", ".", "LongTensor", "(", "[", "mapping", "[", "u", "]", "for", "u", "in", "np", ".", "array", "(", "dataset", ".", "data", ".", "y", ")", "]", ")", "\n", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.utils.get_adj_matrix": [[5, 11], ["numpy.zeros", "zip"], "function", ["None"], ["    ", "exp_a", "=", "np", ".", "exp", "(", "a", "*", "tau", ")", "\n", "return", "exp_a", "/", "exp_a", ".", "sum", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.utils.get_undirected_adj_matrix": [[13, 20], ["numpy.zeros", "zip"], "function", ["None"], []], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.utils.get_top_k_matrix": [[22, 29], ["numpy.arange", "A.sum", "A.argsort"], "function", ["None"], []], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.utils.get_clipped_matrix": [[31, 37], ["A.sum"], "function", ["None"], []], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.digl.heat.HeatDataset.__init__": [[24, 41], ["super().init"], "methods", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.init"], ["def", "__init__", "(", "\n", "self", ",", "\n", "name", ":", "str", "=", "\"Cora\"", ",", "\n", "use_lcc", ":", "bool", "=", "True", ",", "\n", "t", ":", "float", "=", "5.0", ",", "\n", "k", ":", "int", "=", "16", ",", "\n", "eps", ":", "float", "=", "None", ",", "\n", "undirected", ":", "bool", "=", "False", ",", "\n", "data_dir", ":", "str", "=", "None", ",", "\n", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "use_lcc", "=", "use_lcc", "\n", "self", ".", "t", "=", "t", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "undirected", "=", "undirected", "\n", "super", "(", "HeatDataset", ",", "self", ")", ".", "init", "(", "data_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.digl.heat.HeatDataset.process": [[42, 71], ["heat.HeatDataset.get_dataset", "gdl.data.utils.get_adj_matrix", "heat.get_heat_matrix", "enumerate", "heat.HeatDataset.to_dataset", "print", "gdl.data.utils.get_top_k_matrix", "print", "gdl.data.utils.get_clipped_matrix", "numpy.where", "edges_i.append", "edges_j.append", "edge_attr.append"], "methods", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.get_dataset", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.utils.get_adj_matrix", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.digl.heat.get_heat_matrix", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.to_dataset", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.utils.get_top_k_matrix", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.utils.get_clipped_matrix"], ["", "def", "process", "(", "self", ")", ":", "\n", "        ", "base", "=", "self", ".", "get_dataset", "(", ")", "\n", "adj_matrix", "=", "get_adj_matrix", "(", "base", ")", "\n", "# get heat matrix as described in Berberidis et al., 2019", "\n", "heat_matrix", "=", "get_heat_matrix", "(", "adj_matrix", ",", "t", "=", "self", ".", "t", ")", "\n", "if", "self", ".", "k", ":", "\n", "            ", "print", "(", "f\"Selecting top {self.k} edges per node.\"", ")", "\n", "heat_matrix", "=", "get_top_k_matrix", "(", "heat_matrix", ",", "k", "=", "self", ".", "k", ")", "\n", "", "elif", "self", ".", "eps", ":", "\n", "            ", "print", "(", "f\"Selecting edges with weight greater than {self.eps}.\"", ")", "\n", "heat_matrix", "=", "get_clipped_matrix", "(", "heat_matrix", ",", "eps", "=", "self", ".", "eps", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "\n", "\n", "", "if", "self", ".", "undirected", ":", "\n", "# Undirected modification suggested in DIGL paper", "\n", "            ", "heat_matrix", "=", "(", "heat_matrix", "+", "heat_matrix", ".", "T", ")", "/", "2", "\n", "\n", "# create PyG Data object", "\n", "", "edges_i", "=", "[", "]", "\n", "edges_j", "=", "[", "]", "\n", "edge_attr", "=", "[", "]", "\n", "for", "i", ",", "row", "in", "enumerate", "(", "heat_matrix", ")", ":", "\n", "            ", "for", "j", "in", "np", ".", "where", "(", "row", ">", "0", ")", "[", "0", "]", ":", "\n", "                ", "edges_i", ".", "append", "(", "i", ")", "\n", "edges_j", ".", "append", "(", "j", ")", "\n", "edge_attr", ".", "append", "(", "heat_matrix", "[", "i", ",", "j", "]", ")", "\n", "", "", "edge_index", "=", "[", "edges_i", ",", "edges_j", "]", "\n", "self", ".", "to_dataset", "(", "base", ",", "edge_index", ",", "edge_attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.digl.heat.HeatDataset.__str__": [[72, 76], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "(", "\n", "f\"{self.name}_heat_t={self.t}_k={self.k}_eps={self.eps}_lcc={self.use_lcc}\"", "\n", "+", "(", "\"_undirected\"", "if", "self", ".", "undirected", "else", "\"\"", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.digl.heat.get_heat_matrix": [[8, 14], ["numpy.diag", "scipy.linalg.expm", "numpy.eye", "numpy.sqrt", "A_tilde.sum", "numpy.eye"], "function", ["None"], ["def", "get_heat_matrix", "(", "adj_matrix", ":", "np", ".", "ndarray", ",", "t", ":", "float", "=", "5.0", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "num_nodes", "=", "adj_matrix", ".", "shape", "[", "0", "]", "\n", "A_tilde", "=", "adj_matrix", "+", "np", ".", "eye", "(", "num_nodes", ")", "\n", "D_tilde", "=", "np", ".", "diag", "(", "1", "/", "np", ".", "sqrt", "(", "A_tilde", ".", "sum", "(", "axis", "=", "1", ")", ")", ")", "\n", "H", "=", "D_tilde", "@", "A_tilde", "@", "D_tilde", "\n", "return", "expm", "(", "-", "t", "*", "(", "np", ".", "eye", "(", "num_nodes", ")", "-", "H", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.digl.ppr.PPRDataset.__init__": [[22, 39], ["super().init"], "methods", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.init"], ["def", "__init__", "(", "\n", "self", ",", "\n", "name", ":", "str", "=", "\"Cora\"", ",", "\n", "use_lcc", ":", "bool", "=", "True", ",", "\n", "alpha", ":", "float", "=", "0.1", ",", "\n", "k", ":", "int", "=", "16", ",", "\n", "eps", ":", "float", "=", "None", ",", "\n", "undirected", ":", "bool", "=", "False", ",", "\n", "data_dir", ":", "str", "=", "None", ",", "\n", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "use_lcc", "=", "use_lcc", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "undirected", "=", "undirected", "\n", "super", "(", "PPRDataset", ",", "self", ")", ".", "init", "(", "data_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.digl.ppr.PPRDataset.process": [[40, 72], ["ppr.PPRDataset.get_dataset", "gdl.data.utils.get_adj_matrix", "ppr.get_ppr_matrix", "enumerate", "ppr.PPRDataset.to_dataset", "print", "gdl.data.utils.get_top_k_matrix", "print", "gdl.data.utils.get_clipped_matrix", "numpy.where", "edges_i.append", "edges_j.append", "edge_attr.append"], "methods", ["home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.get_dataset", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.utils.get_adj_matrix", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.digl.ppr.get_ppr_matrix", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.base.BaseDataset.to_dataset", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.utils.get_top_k_matrix", "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.data.utils.get_clipped_matrix"], ["", "def", "process", "(", "self", ")", ":", "\n", "        ", "base", "=", "self", ".", "get_dataset", "(", ")", "\n", "# generate adjacency matrix from sparse representation", "\n", "adj_matrix", "=", "get_adj_matrix", "(", "base", ")", "\n", "# obtain exact PPR matrix", "\n", "ppr_matrix", "=", "get_ppr_matrix", "(", "adj_matrix", ",", "alpha", "=", "self", ".", "alpha", ")", "\n", "\n", "if", "self", ".", "k", ":", "\n", "            ", "print", "(", "f\"Selecting top {self.k} edges per node.\"", ")", "\n", "ppr_matrix", "=", "get_top_k_matrix", "(", "ppr_matrix", ",", "k", "=", "self", ".", "k", ")", "\n", "", "elif", "self", ".", "eps", ":", "\n", "            ", "print", "(", "f\"Selecting edges with weight greater than {self.eps}.\"", ")", "\n", "ppr_matrix", "=", "get_clipped_matrix", "(", "ppr_matrix", ",", "eps", "=", "self", ".", "eps", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "\n", "\n", "", "if", "self", ".", "undirected", ":", "\n", "# Undirected modification suggested in DIGL paper", "\n", "            ", "ppr_matrix", "=", "(", "ppr_matrix", "+", "ppr_matrix", ".", "T", ")", "/", "2", "\n", "\n", "# create PyG Data object", "\n", "", "edges_i", "=", "[", "]", "\n", "edges_j", "=", "[", "]", "\n", "edge_attr", "=", "[", "]", "\n", "for", "i", ",", "row", "in", "enumerate", "(", "ppr_matrix", ")", ":", "\n", "            ", "for", "j", "in", "np", ".", "where", "(", "row", ">", "0", ")", "[", "0", "]", ":", "\n", "                ", "edges_i", ".", "append", "(", "i", ")", "\n", "edges_j", ".", "append", "(", "j", ")", "\n", "edge_attr", ".", "append", "(", "ppr_matrix", "[", "i", ",", "j", "]", ")", "\n", "", "", "edge_index", "=", "[", "edges_i", ",", "edges_j", "]", "\n", "\n", "self", ".", "to_dataset", "(", "base", ",", "edge_index", ",", "edge_attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.digl.ppr.PPRDataset.__str__": [[73, 77], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "(", "\n", "f\"{self.name}_ppr_alpha={self.alpha}_k={self.k}_eps={self.eps}_lcc={self.use_lcc}\"", "\n", "+", "(", "\"_undirected\"", "if", "self", ".", "undirected", "else", "\"\"", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.digl.ppr.get_ppr_matrix": [[7, 13], ["numpy.diag", "numpy.eye", "numpy.linalg.inv", "numpy.sqrt", "A_tilde.sum", "numpy.eye"], "function", ["None"], ["def", "get_ppr_matrix", "(", "adj_matrix", ":", "np", ".", "ndarray", ",", "alpha", ":", "float", "=", "0.1", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "num_nodes", "=", "adj_matrix", ".", "shape", "[", "0", "]", "\n", "A_tilde", "=", "adj_matrix", "+", "np", ".", "eye", "(", "num_nodes", ")", "\n", "D_tilde", "=", "np", ".", "diag", "(", "1", "/", "np", ".", "sqrt", "(", "A_tilde", ".", "sum", "(", "axis", "=", "1", ")", ")", ")", "\n", "H", "=", "D_tilde", "@", "A_tilde", "@", "D_tilde", "\n", "return", "alpha", "*", "np", ".", "linalg", ".", "inv", "(", "np", ".", "eye", "(", "num_nodes", ")", "-", "(", "1", "-", "alpha", ")", "*", "H", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.tests.test_skeleton.test_fib": [[10, 17], ["gdl.skeleton.fib", "gdl.skeleton.fib", "gdl.skeleton.fib", "pytest.raises", "gdl.skeleton.fib"], "function", ["None"], ["def", "test_fib", "(", ")", ":", "\n", "    ", "\"\"\"API Tests\"\"\"", "\n", "assert", "fib", "(", "1", ")", "==", "1", "\n", "assert", "fib", "(", "2", ")", "==", "1", "\n", "assert", "fib", "(", "7", ")", "==", "13", "\n", "with", "pytest", ".", "raises", "(", "AssertionError", ")", ":", "\n", "        ", "fib", "(", "-", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jctops_understanding-oversquashing.tests.test_skeleton.test_main": [[19, 26], ["gdl.skeleton.main", "capsys.readouterr"], "function", ["None"], ["", "", "def", "test_main", "(", "capsys", ")", ":", "\n", "    ", "\"\"\"CLI Tests\"\"\"", "\n", "# capsys is a pytest fixture that allows asserts agains stdout/stderr", "\n", "# https://docs.pytest.org/en/stable/capture.html", "\n", "main", "(", "[", "\"7\"", "]", ")", "\n", "captured", "=", "capsys", ".", "readouterr", "(", ")", "\n", "assert", "\"The 7-th Fibonacci number is 13\"", "in", "captured", ".", "out", "\n", "", ""]]}