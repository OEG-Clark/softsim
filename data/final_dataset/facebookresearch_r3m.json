{"home.repos.pwc.inspect_result.facebookresearch_r3m.None.setup.read": [[13, 15], ["open().read", "open", "os.path.join", "os.path.dirname"], "function", ["home.repos.pwc.inspect_result.facebookresearch_r3m.None.setup.read"], ["", "def", "read", "(", "fname", ")", ":", "\n", "    ", "return", "open", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ",", "fname", ")", ")", ".", "read", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.__init__": [[34, 75], ["pathlib.Path.cwd", "print", "r3m.utils.utils.set_seed_everywhere", "torch.device", "train_representation.Workspace.setup", "print", "r3m.utils.data_loaders.R3MBuffer", "r3m.utils.data_loaders.R3MBuffer", "iter", "iter", "print", "train_representation.make_network", "r3m.utils.utils.Timer", "NameError", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "train_representation.Workspace.load_snapshot"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.set_seed_everywhere", "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.setup", "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.make_network", "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.load_snapshot"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "self", ".", "work_dir", "=", "Path", ".", "cwd", "(", ")", "\n", "print", "(", "f'workspace: {self.work_dir}'", ")", "\n", "\n", "self", ".", "cfg", "=", "cfg", "\n", "utils", ".", "set_seed_everywhere", "(", "cfg", ".", "seed", ")", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "cfg", ".", "device", ")", "\n", "self", ".", "setup", "(", ")", "\n", "\n", "print", "(", "\"Creating Dataloader\"", ")", "\n", "if", "self", ".", "cfg", ".", "dataset", "==", "\"ego4d\"", ":", "\n", "            ", "sources", "=", "[", "\"ego4d\"", "]", "\n", "", "else", ":", "\n", "            ", "raise", "NameError", "(", "'Invalid Dataset'", ")", "\n", "\n", "", "train_iterable", "=", "R3MBuffer", "(", "self", ".", "cfg", ".", "datapath", ",", "self", ".", "cfg", ".", "num_workers", ",", "\"train\"", ",", "\"train\"", ",", "\n", "alpha", "=", "self", ".", "cfg", ".", "alpha", ",", "datasources", "=", "sources", ",", "doaug", "=", "self", ".", "cfg", ".", "doaug", ")", "\n", "val_iterable", "=", "R3MBuffer", "(", "self", ".", "cfg", ".", "datapath", ",", "self", ".", "cfg", ".", "num_workers", ",", "\"val\"", ",", "\"validation\"", ",", "\n", "alpha", "=", "0", ",", "datasources", "=", "sources", ",", "doaug", "=", "0", ")", "\n", "\n", "self", ".", "train_loader", "=", "iter", "(", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_iterable", ",", "\n", "batch_size", "=", "self", ".", "cfg", ".", "batch_size", ",", "\n", "num_workers", "=", "self", ".", "cfg", ".", "num_workers", ",", "\n", "pin_memory", "=", "True", ")", ")", "\n", "self", ".", "val_loader", "=", "iter", "(", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "val_iterable", ",", "\n", "batch_size", "=", "self", ".", "cfg", ".", "batch_size", ",", "\n", "num_workers", "=", "self", ".", "cfg", ".", "num_workers", ",", "\n", "pin_memory", "=", "True", ")", ")", "\n", "\n", "\n", "## Init Model", "\n", "print", "(", "\"Initializing Model\"", ")", "\n", "self", ".", "model", "=", "make_network", "(", "cfg", ".", "agent", ")", "\n", "\n", "self", ".", "timer", "=", "utils", ".", "Timer", "(", ")", "\n", "self", ".", "_global_step", "=", "0", "\n", "\n", "## If reloading existing model", "\n", "if", "cfg", ".", "load_snap", ":", "\n", "            ", "print", "(", "\"LOADING\"", ",", "cfg", ".", "load_snap", ")", "\n", "self", ".", "load_snapshot", "(", "cfg", ".", "load_snap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.setup": [[76, 79], ["r3m.utils.logger.Logger"], "methods", ["None"], ["", "", "def", "setup", "(", "self", ")", ":", "\n", "# create logger", "\n", "        ", "self", ".", "logger", "=", "Logger", "(", "self", ".", "work_dir", ",", "use_tb", "=", "False", ",", "cfg", "=", "self", ".", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.global_step": [[80, 83], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "global_step", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_global_step", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.global_frame": [[84, 87], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "global_frame", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "global_step", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.train": [[88, 122], ["r3m.utils.utils.Until", "r3m.utils.utils.Every", "r3m.trainer.Trainer", "print", "r3m.utils.utils.Until.", "time.time", "next", "time.time", "r3m.trainer.Trainer.update", "time.time", "train_representation.Workspace.logger.log_metrics", "r3m.utils.utils.Every.", "print", "print", "print", "batch_f.cuda", "torch.no_grad", "next", "r3m.trainer.Trainer.update", "train_representation.Workspace.logger.log_metrics", "print", "train_representation.Workspace.save_snapshot", "batch_f.cuda"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log_metrics", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log_metrics", "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.save_snapshot"], ["", "def", "train", "(", "self", ")", ":", "\n", "# predicates", "\n", "        ", "train_until_step", "=", "utils", ".", "Until", "(", "self", ".", "cfg", ".", "train_steps", ",", "\n", "1", ")", "\n", "eval_freq", "=", "self", ".", "cfg", ".", "eval_freq", "\n", "eval_every_step", "=", "utils", ".", "Every", "(", "eval_freq", ",", "\n", "1", ")", "\n", "trainer", "=", "Trainer", "(", "eval_freq", ")", "\n", "\n", "## Training Loop", "\n", "print", "(", "\"Begin Training\"", ")", "\n", "while", "train_until_step", "(", "self", ".", "global_step", ")", ":", "\n", "## Sample Batch", "\n", "            ", "t0", "=", "time", ".", "time", "(", ")", "\n", "batch_f", ",", "batch_langs", "=", "next", "(", "self", ".", "train_loader", ")", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "metrics", ",", "st", "=", "trainer", ".", "update", "(", "self", ".", "model", ",", "(", "batch_f", ".", "cuda", "(", ")", ",", "batch_langs", ")", ",", "self", ".", "global_step", ")", "\n", "t2", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "logger", ".", "log_metrics", "(", "metrics", ",", "self", ".", "global_frame", ",", "ty", "=", "'train'", ")", "\n", "\n", "if", "self", ".", "global_step", "%", "10", "==", "0", ":", "\n", "                ", "print", "(", "self", ".", "global_step", ",", "metrics", ")", "\n", "print", "(", "f'Sample time {t1-t0}, Update time {t2-t1}'", ")", "\n", "print", "(", "st", ")", "\n", "\n", "", "if", "eval_every_step", "(", "self", ".", "global_step", ")", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "batch_f", ",", "batch_langs", "=", "next", "(", "self", ".", "val_loader", ")", "\n", "metrics", ",", "st", "=", "trainer", ".", "update", "(", "self", ".", "model", ",", "(", "batch_f", ".", "cuda", "(", ")", ",", "batch_langs", ")", ",", "self", ".", "global_step", ",", "eval", "=", "True", ")", "\n", "self", ".", "logger", ".", "log_metrics", "(", "metrics", ",", "self", ".", "global_frame", ",", "ty", "=", "'eval'", ")", "\n", "print", "(", "\"EVAL\"", ",", "self", ".", "global_step", ",", "metrics", ")", "\n", "\n", "self", ".", "save_snapshot", "(", ")", "\n", "", "", "self", ".", "_global_step", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.save_snapshot": [[123, 131], ["train_representation.Workspace.model.state_dict", "torch.save", "torch.save"], "methods", ["None"], ["", "", "def", "save_snapshot", "(", "self", ")", ":", "\n", "        ", "snapshot", "=", "self", ".", "work_dir", "/", "f'snapshot_{self.global_step}.pt'", "\n", "global_snapshot", "=", "self", ".", "work_dir", "/", "f'snapshot.pt'", "\n", "sdict", "=", "{", "}", "\n", "sdict", "[", "\"r3m\"", "]", "=", "self", ".", "model", ".", "state_dict", "(", ")", "\n", "torch", ".", "save", "(", "sdict", ",", "snapshot", ")", "\n", "sdict", "[", "\"global_step\"", "]", "=", "self", ".", "_global_step", "\n", "torch", ".", "save", "(", "sdict", ",", "global_snapshot", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.load_snapshot": [[132, 139], ["torch.load", "train_representation.Workspace.model.load_state_dict", "print"], "methods", ["None"], ["", "def", "load_snapshot", "(", "self", ",", "snapshot_path", ")", ":", "\n", "        ", "payload", "=", "torch", ".", "load", "(", "snapshot_path", ")", "\n", "self", ".", "model", ".", "load_state_dict", "(", "payload", "[", "'r3m'", "]", ")", "\n", "try", ":", "\n", "            ", "self", ".", "_global_step", "=", "payload", "[", "'global_step'", "]", "\n", "", "except", ":", "\n", "            ", "print", "(", "\"No global step found\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.make_network": [[27, 32], ["hydra.utils.instantiate", "print", "torch.nn.DataParallel", "torch.nn.DataParallel.cuda", "torch.cuda.device_count"], "function", ["None"], ["def", "make_network", "(", "cfg", ")", ":", "\n", "    ", "model", "=", "hydra", ".", "utils", ".", "instantiate", "(", "cfg", ")", "\n", "print", "(", "\"Let's use\"", ",", "torch", ".", "cuda", ".", "device_count", "(", ")", ",", "\"GPUs!\"", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "return", "model", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.main": [[140, 151], ["hydra.main", "pathlib.Path.cwd", "W", "snapshot.exists", "W.train", "print", "W.load_snapshot"], "function", ["home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.main", "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.train", "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.load_snapshot"], ["", "", "", "@", "hydra", ".", "main", "(", "config_path", "=", "'cfgs'", ",", "config_name", "=", "'config_rep'", ")", "\n", "def", "main", "(", "cfg", ")", ":", "\n", "    ", "from", "train_representation", "import", "Workspace", "as", "W", "\n", "root_dir", "=", "Path", ".", "cwd", "(", ")", "\n", "workspace", "=", "W", "(", "cfg", ")", "\n", "\n", "snapshot", "=", "root_dir", "/", "'snapshot.pt'", "\n", "if", "snapshot", ".", "exists", "(", ")", ":", "\n", "        ", "print", "(", "f'resuming: {snapshot}'", ")", "\n", "workspace", ".", "load_snapshot", "(", "snapshot", ")", "\n", "", "workspace", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.trainer.Trainer.__init__": [[22, 24], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "eval_freq", ")", ":", "\n", "        ", "self", ".", "eval_freq", "=", "eval_freq", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.trainer.Trainer.update": [[25, 163], ["time.time", "dict", "time.time", "time.time", "b_im.reshape", "model", "model.reshape", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean", "torch.linalg.norm().mean.item", "torch.linalg.norm().mean.item", "torch.linalg.norm().mean.item", "torch.linalg.norm().mean.item", "torch.linalg.norm().mean.item", "torch.linalg.norm().mean.item", "torch.linalg.norm().mean.item", "torch.linalg.norm().mean.item", "torch.linalg.norm().mean.item", "time.time", "time.time", "full_loss.item", "time.time", "time.time", "model.eval", "model.train", "model.module.get_reward", "model.module.get_reward", "model.module.get_reward", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "rewloss.mean.mean.mean", "rewloss.mean.mean.item", "lacc1.item", "lacc2.item", "lacc3.item", "model.module.sim", "model.module.sim", "model.module.sim", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "smoothloss.item", "a_state.item", "model.module.encoder_opt.zero_grad", "full_loss.backward", "model.module.encoder_opt.step", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "model.module.get_reward", "model.module.get_reward", "model.module.get_reward", "model.module.sim", "model.module.sim", "e0.size", "model.module.get_reward", "e0.size", "model.module.get_reward", "e0.size", "model.module.get_reward", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp.sum", "torch.exp.sum", "torch.exp.sum", "torch.exp.sum", "torch.exp.sum", "torch.exp.sum", "torch.exp.sum", "torch.exp.sum", "torch.exp.sum", "torch.stack.max", "torch.stack.max", "torch.stack.max", "torch.stack.max", "torch.stack.max", "torch.stack.max", "torch.stack.max", "torch.stack.max", "torch.stack.max", "es0.size", "es2.size", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp().sum", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.train", "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.get_reward", "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.get_reward", "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.get_reward", "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.sim", "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.sim", "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.sim", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log", "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.get_reward", "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.get_reward", "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.get_reward", "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.sim", "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.sim", "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.get_reward", "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.get_reward", "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.get_reward"], ["", "def", "update", "(", "self", ",", "model", ",", "batch", ",", "step", ",", "eval", "=", "False", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "metrics", "=", "dict", "(", ")", "\n", "if", "eval", ":", "\n", "            ", "model", ".", "eval", "(", ")", "\n", "", "else", ":", "\n", "            ", "model", ".", "train", "(", ")", "\n", "\n", "", "t1", "=", "time", ".", "time", "(", ")", "\n", "## Batch", "\n", "b_im", ",", "b_lang", "=", "batch", "\n", "t2", "=", "time", ".", "time", "(", ")", "\n", "\n", "## Encode Start and End Frames", "\n", "bs", "=", "b_im", ".", "shape", "[", "0", "]", "\n", "b_im_r", "=", "b_im", ".", "reshape", "(", "bs", "*", "5", ",", "3", ",", "224", ",", "224", ")", "\n", "alles", "=", "model", "(", "b_im_r", ")", "\n", "alle", "=", "alles", ".", "reshape", "(", "bs", ",", "5", ",", "-", "1", ")", "\n", "e0", "=", "alle", "[", ":", ",", "0", "]", "\n", "eg", "=", "alle", "[", ":", ",", "1", "]", "\n", "es0", "=", "alle", "[", ":", ",", "2", "]", "\n", "es1", "=", "alle", "[", ":", ",", "3", "]", "\n", "es2", "=", "alle", "[", ":", ",", "4", "]", "\n", "\n", "full_loss", "=", "0", "\n", "\n", "## LP Loss", "\n", "l2loss", "=", "torch", ".", "linalg", ".", "norm", "(", "alles", ",", "ord", "=", "2", ",", "dim", "=", "-", "1", ")", ".", "mean", "(", ")", "\n", "l1loss", "=", "torch", ".", "linalg", ".", "norm", "(", "alles", ",", "ord", "=", "1", ",", "dim", "=", "-", "1", ")", ".", "mean", "(", ")", "\n", "l0loss", "=", "torch", ".", "linalg", ".", "norm", "(", "alles", ",", "ord", "=", "0", ",", "dim", "=", "-", "1", ")", ".", "mean", "(", ")", "\n", "metrics", "[", "'l2loss'", "]", "=", "l2loss", ".", "item", "(", ")", "\n", "metrics", "[", "'l1loss'", "]", "=", "l1loss", ".", "item", "(", ")", "\n", "metrics", "[", "'l0loss'", "]", "=", "l0loss", ".", "item", "(", ")", "\n", "full_loss", "+=", "model", ".", "module", ".", "l2weight", "*", "l2loss", "\n", "full_loss", "+=", "model", ".", "module", ".", "l1weight", "*", "l1loss", "\n", "\n", "\n", "t3", "=", "time", ".", "time", "(", ")", "\n", "## Language Predictive Loss", "\n", "if", "model", ".", "module", ".", "langweight", ">", "0", ":", "\n", "## Number of negative examples to use for language", "\n", "            ", "num_neg", "=", "model", ".", "module", ".", "num_negatives", "\n", "\n", "## Trains to have G(e_0, e_t, l) be higher than G(e_0, e_<t, l) and G(e*_0, e*_<t, l)", "\n", "## where e* is a different video. For e_t uses e_g, e_1, and e_2", "\n", "\n", "## Setting the positive examples", "\n", "sim_pos1", ",", "_", "=", "model", ".", "module", ".", "get_reward", "(", "e0", ",", "eg", ",", "b_lang", ")", "\n", "sim_pos2", ",", "_", "=", "model", ".", "module", ".", "get_reward", "(", "e0", ",", "es1", ",", "b_lang", ")", "\n", "sim_pos3", ",", "_", "=", "model", ".", "module", ".", "get_reward", "(", "e0", ",", "es2", ",", "b_lang", ")", "\n", "\n", "## Adding e_<t as the first negative example", "\n", "sim_negs1", "=", "[", "]", "\n", "sim_negs2", "=", "[", "]", "\n", "sim_negs3", "=", "[", "]", "\n", "sim_negs1", ".", "append", "(", "model", ".", "module", ".", "get_reward", "(", "e0", ",", "e0", ",", "b_lang", ")", "[", "0", "]", ")", "\n", "sim_negs2", ".", "append", "(", "model", ".", "module", ".", "get_reward", "(", "e0", ",", "es0", ",", "b_lang", ")", "[", "0", "]", ")", "\n", "sim_negs3", ".", "append", "(", "model", ".", "module", ".", "get_reward", "(", "e0", ",", "es1", ",", "b_lang", ")", "[", "0", "]", ")", "\n", "\n", "## For the specified number of negative examples from other videos", "\n", "## add e* as a negative", "\n", "for", "_", "in", "range", "(", "num_neg", ")", ":", "\n", "                ", "negvidid", "=", "torch", ".", "randperm", "(", "e0", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "sim_negs1", ".", "append", "(", "model", ".", "module", ".", "get_reward", "(", "e0", "[", "negvidid", "]", ",", "eg", "[", "negvidid", "]", ",", "b_lang", ")", "[", "0", "]", ")", "\n", "negvidid", "=", "torch", ".", "randperm", "(", "e0", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "sim_negs2", ".", "append", "(", "model", ".", "module", ".", "get_reward", "(", "e0", "[", "negvidid", "]", ",", "es1", "[", "negvidid", "]", ",", "b_lang", ")", "[", "0", "]", ")", "\n", "negvidid", "=", "torch", ".", "randperm", "(", "e0", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "sim_negs3", ".", "append", "(", "model", ".", "module", ".", "get_reward", "(", "e0", "[", "negvidid", "]", ",", "es2", "[", "negvidid", "]", ",", "b_lang", ")", "[", "0", "]", ")", "\n", "", "sim_negs1", "=", "torch", ".", "stack", "(", "sim_negs1", ",", "-", "1", ")", "\n", "sim_negs_exp1", "=", "torch", ".", "exp", "(", "sim_negs1", ")", "\n", "sim_negs2", "=", "torch", ".", "stack", "(", "sim_negs2", ",", "-", "1", ")", "\n", "sim_negs_exp2", "=", "torch", ".", "exp", "(", "sim_negs2", ")", "\n", "sim_negs3", "=", "torch", ".", "stack", "(", "sim_negs3", ",", "-", "1", ")", "\n", "sim_negs_exp3", "=", "torch", ".", "exp", "(", "sim_negs3", ")", "\n", "\n", "## Compute InfoNCE loss", "\n", "rewloss1", "=", "-", "torch", ".", "log", "(", "epsilon", "+", "(", "torch", ".", "exp", "(", "sim_pos1", ")", "/", "(", "epsilon", "+", "torch", ".", "exp", "(", "sim_pos1", ")", "+", "sim_negs_exp1", ".", "sum", "(", "-", "1", ")", ")", ")", ")", "\n", "rewloss2", "=", "-", "torch", ".", "log", "(", "epsilon", "+", "(", "torch", ".", "exp", "(", "sim_pos2", ")", "/", "(", "epsilon", "+", "torch", ".", "exp", "(", "sim_pos2", ")", "+", "sim_negs_exp2", ".", "sum", "(", "-", "1", ")", ")", ")", ")", "\n", "rewloss3", "=", "-", "torch", ".", "log", "(", "epsilon", "+", "(", "torch", ".", "exp", "(", "sim_pos3", ")", "/", "(", "epsilon", "+", "torch", ".", "exp", "(", "sim_pos3", ")", "+", "sim_negs_exp3", ".", "sum", "(", "-", "1", ")", ")", ")", ")", "\n", "rewloss", "=", "(", "rewloss1", "+", "rewloss2", "+", "rewloss3", ")", "/", "3", "\n", "\n", "### Mask out videos without language", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "mask", "=", "torch", ".", "FloatTensor", "(", "[", "1.0", "*", "(", "b", "!=", "\"\"", ")", "for", "b", "in", "b_lang", "]", ")", ".", "cuda", "(", ")", "\n", "", "rewloss", "=", "rewloss", "*", "mask", "\n", "rewloss", "=", "rewloss", ".", "mean", "(", ")", "\n", "lacc1", "=", "(", "1.0", "*", "(", "sim_negs1", ".", "max", "(", "-", "1", ")", "[", "0", "]", "<", "sim_pos1", ")", ")", ".", "mean", "(", ")", "\n", "lacc2", "=", "(", "1.0", "*", "(", "sim_negs2", ".", "max", "(", "-", "1", ")", "[", "0", "]", "<", "sim_pos2", ")", ")", ".", "mean", "(", ")", "\n", "lacc3", "=", "(", "1.0", "*", "(", "sim_negs3", ".", "max", "(", "-", "1", ")", "[", "0", "]", "<", "sim_pos3", ")", ")", ".", "mean", "(", ")", "\n", "metrics", "[", "'rewloss'", "]", "=", "rewloss", ".", "item", "(", ")", "\n", "metrics", "[", "'rewacc1'", "]", "=", "lacc1", ".", "item", "(", ")", "\n", "metrics", "[", "'rewacc2'", "]", "=", "lacc2", ".", "item", "(", ")", "\n", "metrics", "[", "'rewacc3'", "]", "=", "lacc3", ".", "item", "(", ")", "\n", "full_loss", "+=", "model", ".", "module", ".", "langweight", "*", "rewloss", "\n", "\n", "", "t5", "=", "time", ".", "time", "(", ")", "\n", "## Within Video TCN Loss", "\n", "if", "model", ".", "module", ".", "tcnweight", ">", "0", ":", "\n", "## Number of negative video examples to use", "\n", "            ", "num_neg_v", "=", "model", ".", "module", ".", "num_negatives", "\n", "\n", "## Computing distance from t0-t2, t1-t2, t1-t0", "\n", "sim_0_2", "=", "model", ".", "module", ".", "sim", "(", "es2", ",", "es0", ")", "\n", "sim_1_2", "=", "model", ".", "module", ".", "sim", "(", "es2", ",", "es1", ")", "\n", "sim_0_1", "=", "model", ".", "module", ".", "sim", "(", "es1", ",", "es0", ")", "\n", "\n", "## For the specified number of negatives from other videos", "\n", "## Add it as a negative", "\n", "neg2", "=", "[", "]", "\n", "neg0", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_neg_v", ")", ":", "\n", "                ", "es0_shuf", "=", "es0", "[", "torch", ".", "randperm", "(", "es0", ".", "size", "(", ")", "[", "0", "]", ")", "]", "\n", "es2_shuf", "=", "es2", "[", "torch", ".", "randperm", "(", "es2", ".", "size", "(", ")", "[", "0", "]", ")", "]", "\n", "neg0", ".", "append", "(", "model", ".", "module", ".", "sim", "(", "es0", ",", "es0_shuf", ")", ")", "\n", "neg2", ".", "append", "(", "model", ".", "module", ".", "sim", "(", "es2", ",", "es2_shuf", ")", ")", "\n", "", "neg0", "=", "torch", ".", "stack", "(", "neg0", ",", "-", "1", ")", "\n", "neg2", "=", "torch", ".", "stack", "(", "neg2", ",", "-", "1", ")", "\n", "\n", "## TCN Loss", "\n", "smoothloss1", "=", "-", "torch", ".", "log", "(", "epsilon", "+", "(", "torch", ".", "exp", "(", "sim_1_2", ")", "/", "(", "epsilon", "+", "torch", ".", "exp", "(", "sim_0_2", ")", "+", "torch", ".", "exp", "(", "sim_1_2", ")", "+", "torch", ".", "exp", "(", "neg2", ")", ".", "sum", "(", "-", "1", ")", ")", ")", ")", "\n", "smoothloss2", "=", "-", "torch", ".", "log", "(", "epsilon", "+", "(", "torch", ".", "exp", "(", "sim_0_1", ")", "/", "(", "epsilon", "+", "torch", ".", "exp", "(", "sim_0_1", ")", "+", "torch", ".", "exp", "(", "sim_0_2", ")", "+", "torch", ".", "exp", "(", "neg0", ")", ".", "sum", "(", "-", "1", ")", ")", ")", ")", "\n", "smoothloss", "=", "(", "(", "smoothloss1", "+", "smoothloss2", ")", "/", "2.0", ")", ".", "mean", "(", ")", "\n", "a_state", "=", "(", "(", "1.0", "*", "(", "sim_0_2", "<", "sim_1_2", ")", ")", "*", "(", "1.0", "*", "(", "sim_0_1", ">", "sim_0_2", ")", ")", ")", ".", "mean", "(", ")", "\n", "metrics", "[", "'tcnloss'", "]", "=", "smoothloss", ".", "item", "(", ")", "\n", "metrics", "[", "'aligned'", "]", "=", "a_state", ".", "item", "(", ")", "\n", "full_loss", "+=", "model", ".", "module", ".", "tcnweight", "*", "smoothloss", "\n", "\n", "", "metrics", "[", "'full_loss'", "]", "=", "full_loss", ".", "item", "(", ")", "\n", "\n", "t6", "=", "time", ".", "time", "(", ")", "\n", "if", "not", "eval", ":", "\n", "            ", "model", ".", "module", ".", "encoder_opt", ".", "zero_grad", "(", ")", "\n", "full_loss", ".", "backward", "(", ")", "\n", "model", ".", "module", ".", "encoder_opt", ".", "step", "(", ")", "\n", "\n", "", "t7", "=", "time", ".", "time", "(", ")", "\n", "st", "=", "f\"Load time {t1-t0}, Batch time {t2-t1}, Encode and LP tine {t3-t2}, Lang time {t5-t3}, TCN time {t6-t5}, Backprop time {t7-t6}\"", "\n", "return", "metrics", ",", "st", "", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.trainer.do_nothing": [[19, 20], ["None"], "function", ["None"], ["def", "do_nothing", "(", "x", ")", ":", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.__init__.cleanup_config": [[21, 34], ["copy.deepcopy", "copy.deepcopy.agent.keys", "list"], "function", ["None"], ["", "def", "cleanup_config", "(", "cfg", ")", ":", "\n", "    ", "config", "=", "copy", ".", "deepcopy", "(", "cfg", ")", "\n", "keys", "=", "config", ".", "agent", ".", "keys", "(", ")", "\n", "for", "key", "in", "list", "(", "keys", ")", ":", "\n", "        ", "if", "key", "not", "in", "VALID_ARGS", ":", "\n", "            ", "del", "config", ".", "agent", "[", "key", "]", "\n", "", "", "config", ".", "agent", "[", "\"_target_\"", "]", "=", "\"r3m.R3M\"", "\n", "config", "[", "\"device\"", "]", "=", "device", "\n", "\n", "## Hardcodes to remove the language head", "\n", "## Assumes downstream use is as visual representation", "\n", "config", ".", "agent", "[", "\"langweight\"", "]", "=", "0", "\n", "return", "config", ".", "agent", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.__init__.remove_language_head": [[35, 43], ["state_dict.keys", "list"], "function", ["None"], ["", "def", "remove_language_head", "(", "state_dict", ")", ":", "\n", "    ", "keys", "=", "state_dict", ".", "keys", "(", ")", "\n", "## Hardcodes to remove the language head", "\n", "## Assumes downstream use is as visual representation", "\n", "for", "key", "in", "list", "(", "keys", ")", ":", "\n", "        ", "if", "(", "\"lang_enc\"", "in", "key", ")", "or", "(", "\"lang_rew\"", "in", "key", ")", ":", "\n", "            ", "del", "state_dict", "[", "key", "]", "\n", "", "", "return", "state_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.__init__.load_r3m": [[44, 76], ["os.path.join", "os.path.join", "os.path.join", "omegaconf.OmegaConf.load", "__init__.cleanup_config", "hydra.utils.instantiate", "torch.nn.DataParallel", "__init__.remove_language_head", "torch.nn.DataParallel.load_state_dict", "os.path.expanduser", "os.path.exists", "os.makedirs", "os.path.exists", "gdown.download", "gdown.download", "os.path.join", "os.path.join", "torch.load", "NameError", "torch.device"], "function", ["home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.__init__.cleanup_config", "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.__init__.remove_language_head"], ["", "def", "load_r3m", "(", "modelid", ")", ":", "\n", "    ", "home", "=", "os", ".", "path", ".", "join", "(", "expanduser", "(", "\"~\"", ")", ",", "\".r3m\"", ")", "\n", "if", "modelid", "==", "\"resnet50\"", ":", "\n", "        ", "foldername", "=", "\"r3m_50\"", "\n", "modelurl", "=", "'https://drive.google.com/uc?id=1Xu0ssuG0N1zjZS54wmWzJ7-nb0-7XzbA'", "\n", "configurl", "=", "'https://drive.google.com/uc?id=10jY2VxrrhfOdNPmsFdES568hjjIoBJx8'", "\n", "", "elif", "modelid", "==", "\"resnet34\"", ":", "\n", "        ", "foldername", "=", "\"r3m_34\"", "\n", "modelurl", "=", "'https://drive.google.com/uc?id=15bXD3QRhspIRacOKyWPw5y2HpoWUCEnE'", "\n", "configurl", "=", "'https://drive.google.com/uc?id=1RY0NS-Tl4G7M1Ik_lOym0b5VIBxX9dqW'", "\n", "", "elif", "modelid", "==", "\"resnet18\"", ":", "\n", "        ", "foldername", "=", "\"r3m_18\"", "\n", "modelurl", "=", "'https://drive.google.com/uc?id=1A1ic-p4KtYlKXdXHcV2QV0cUzI4kn0u-'", "\n", "configurl", "=", "'https://drive.google.com/uc?id=1nitbHQ-GRorxc7vMUiEHjHWP5N11Jvc6'", "\n", "", "else", ":", "\n", "        ", "raise", "NameError", "(", "'Invalid Model ID'", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "home", ",", "foldername", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "home", ",", "foldername", ")", ")", "\n", "", "modelpath", "=", "os", ".", "path", ".", "join", "(", "home", ",", "foldername", ",", "\"model.pt\"", ")", "\n", "configpath", "=", "os", ".", "path", ".", "join", "(", "home", ",", "foldername", ",", "\"config.yaml\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "modelpath", ")", ":", "\n", "        ", "gdown", ".", "download", "(", "modelurl", ",", "modelpath", ",", "quiet", "=", "False", ")", "\n", "gdown", ".", "download", "(", "configurl", ",", "configpath", ",", "quiet", "=", "False", ")", "\n", "\n", "", "modelcfg", "=", "omegaconf", ".", "OmegaConf", ".", "load", "(", "configpath", ")", "\n", "cleancfg", "=", "cleanup_config", "(", "modelcfg", ")", "\n", "rep", "=", "hydra", ".", "utils", ".", "instantiate", "(", "cleancfg", ")", "\n", "rep", "=", "torch", ".", "nn", ".", "DataParallel", "(", "rep", ")", "\n", "r3m_state_dict", "=", "remove_language_head", "(", "torch", ".", "load", "(", "modelpath", ",", "map_location", "=", "torch", ".", "device", "(", "device", ")", ")", "[", "'r3m'", "]", ")", "\n", "rep", ".", "load_state_dict", "(", "r3m_state_dict", ")", "\n", "return", "rep", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.__init__.load_r3m_reproduce": [[77, 114], ["os.path.join", "os.path.join", "os.path.join", "omegaconf.OmegaConf.load", "__init__.cleanup_config", "hydra.utils.instantiate", "torch.nn.DataParallel", "__init__.remove_language_head", "torch.nn.DataParallel.load_state_dict", "os.path.expanduser", "os.path.exists", "os.makedirs", "os.path.exists", "gdown.download", "gdown.download", "os.path.join", "os.path.join", "torch.load", "NameError", "torch.device"], "function", ["home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.__init__.cleanup_config", "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.__init__.remove_language_head"], ["", "def", "load_r3m_reproduce", "(", "modelid", ")", ":", "\n", "    ", "home", "=", "os", ".", "path", ".", "join", "(", "expanduser", "(", "\"~\"", ")", ",", "\".r3m\"", ")", "\n", "if", "modelid", "==", "\"r3m\"", ":", "\n", "        ", "foldername", "=", "\"original_r3m\"", "\n", "modelurl", "=", "'https://drive.google.com/uc?id=1jLb1yldIMfAcGVwYojSQmMpmRM7vqjp9'", "\n", "configurl", "=", "'https://drive.google.com/uc?id=1cu-Pb33qcfAieRIUptNlG1AQIMZlAI-q'", "\n", "", "elif", "modelid", "==", "\"r3m_noaug\"", ":", "\n", "        ", "foldername", "=", "\"original_r3m_noaug\"", "\n", "modelurl", "=", "'https://drive.google.com/uc?id=1k_ZlVtvlktoYLtBcfD0aVFnrZcyCNS9D'", "\n", "configurl", "=", "'https://drive.google.com/uc?id=1hPmJwDiWPkd6GGez6ywSC7UOTIX7NgeS'", "\n", "", "elif", "modelif", "==", "\"r3m_nol1\"", ":", "\n", "        ", "foldername", "=", "\"original_r3m_nol1\"", "\n", "modelurl", "=", "'https://drive.google.com/uc?id=1LpW3aBMdjoXsjYlkaDnvwx7q22myM_nB'", "\n", "configurl", "=", "'https://drive.google.com/uc?id=1rZUBrYJZvlF1ReFwRidZsH7-xe7csvab'", "\n", "", "elif", "modelif", "==", "\"r3m_nolang\"", ":", "\n", "        ", "foldername", "=", "\"original_r3m_nolang\"", "\n", "modelurl", "=", "'https://drive.google.com/uc?id=1FXcniRei2JDaGMJJ_KlVxHaLy0Fs_caV'", "\n", "configurl", "=", "'https://drive.google.com/uc?id=192G4UkcNJO4EKN46ECujMcH0AQVhnyQe'", "\n", "", "else", ":", "\n", "        ", "raise", "NameError", "(", "'Invalid Model ID'", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "home", ",", "foldername", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "home", ",", "foldername", ")", ")", "\n", "", "modelpath", "=", "os", ".", "path", ".", "join", "(", "home", ",", "foldername", ",", "\"model.pt\"", ")", "\n", "configpath", "=", "os", ".", "path", ".", "join", "(", "home", ",", "foldername", ",", "\"config.yaml\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "modelpath", ")", ":", "\n", "        ", "gdown", ".", "download", "(", "modelurl", ",", "modelpath", ",", "quiet", "=", "False", ")", "\n", "gdown", ".", "download", "(", "configurl", ",", "configpath", ",", "quiet", "=", "False", ")", "\n", "\n", "", "modelcfg", "=", "omegaconf", ".", "OmegaConf", ".", "load", "(", "configpath", ")", "\n", "cleancfg", "=", "cleanup_config", "(", "modelcfg", ")", "\n", "rep", "=", "hydra", ".", "utils", ".", "instantiate", "(", "cleancfg", ")", "\n", "rep", "=", "torch", ".", "nn", ".", "DataParallel", "(", "rep", ")", "\n", "r3m_state_dict", "=", "remove_language_head", "(", "torch", ".", "load", "(", "modelpath", ",", "map_location", "=", "torch", ".", "device", "(", "device", ")", ")", "[", "'r3m'", "]", ")", "\n", "\n", "rep", ".", "load_state_dict", "(", "r3m_state_dict", ")", "\n", "return", "rep", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.AverageMeter.__init__": [[27, 30], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_sum", "=", "0", "\n", "self", ".", "_count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.AverageMeter.update": [[31, 34], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "value", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "_sum", "+=", "value", "\n", "self", ".", "_count", "+=", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.AverageMeter.value": [[35, 37], ["max"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_sum", "/", "max", "(", "1", ",", "self", ".", "_count", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.MetersGroup.__init__": [[40, 46], ["collections.defaultdict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "csv_file_name", ",", "formating", ")", ":", "\n", "        ", "self", ".", "_csv_file_name", "=", "csv_file_name", "\n", "self", ".", "_formating", "=", "formating", "\n", "self", ".", "_meters", "=", "defaultdict", "(", "AverageMeter", ")", "\n", "self", ".", "_csv_file", "=", "None", "\n", "self", ".", "_csv_writer", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.MetersGroup.log": [[47, 49], ["logger.MetersGroup._meters[].update"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.AverageMeter.update"], ["", "def", "log", "(", "self", ",", "key", ",", "value", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "_meters", "[", "key", "]", ".", "update", "(", "value", ",", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.MetersGroup._prime_meters": [[50, 60], ["dict", "logger.MetersGroup._meters.items", "key.replace.replace.startswith", "key.replace.replace.replace", "meter.value", "len", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.AverageMeter.value"], ["", "def", "_prime_meters", "(", "self", ")", ":", "\n", "        ", "data", "=", "dict", "(", ")", "\n", "for", "key", ",", "meter", "in", "self", ".", "_meters", ".", "items", "(", ")", ":", "\n", "            ", "if", "key", ".", "startswith", "(", "'train'", ")", ":", "\n", "                ", "key", "=", "key", "[", "len", "(", "'train'", ")", "+", "1", ":", "]", "\n", "", "else", ":", "\n", "                ", "key", "=", "key", "[", "len", "(", "'eval'", ")", "+", "1", ":", "]", "\n", "", "key", "=", "key", ".", "replace", "(", "'/'", ",", "'_'", ")", "\n", "data", "[", "key", "]", "=", "meter", ".", "value", "(", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.MetersGroup._remove_old_entries": [[61, 76], ["logger.MetersGroup._csv_file_name.open", "csv.DictReader", "logger.MetersGroup._csv_file_name.open", "csv.DictWriter", "csv.DictWriter.writeheader", "rows.append", "csv.DictWriter.writerow", "float", "sorted", "data.keys"], "methods", ["None"], ["", "def", "_remove_old_entries", "(", "self", ",", "data", ")", ":", "\n", "        ", "rows", "=", "[", "]", "\n", "with", "self", ".", "_csv_file_name", ".", "open", "(", "'r'", ")", "as", "f", ":", "\n", "            ", "reader", "=", "csv", ".", "DictReader", "(", "f", ")", "\n", "for", "row", "in", "reader", ":", "\n", "                ", "if", "float", "(", "row", "[", "'episode'", "]", ")", ">=", "data", "[", "'episode'", "]", ":", "\n", "                    ", "break", "\n", "", "rows", ".", "append", "(", "row", ")", "\n", "", "", "with", "self", ".", "_csv_file_name", ".", "open", "(", "'w'", ")", "as", "f", ":", "\n", "            ", "writer", "=", "csv", ".", "DictWriter", "(", "f", ",", "\n", "fieldnames", "=", "sorted", "(", "data", ".", "keys", "(", ")", ")", ",", "\n", "restval", "=", "0.0", ")", "\n", "writer", ".", "writeheader", "(", ")", "\n", "for", "row", "in", "rows", ":", "\n", "                ", "writer", ".", "writerow", "(", "row", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.MetersGroup._dump_to_csv": [[77, 93], ["logger.MetersGroup._csv_writer.writerow", "logger.MetersGroup._csv_file.flush", "logger.MetersGroup._csv_file_name.exists", "logger.MetersGroup._csv_file_name.open", "csv.DictWriter", "logger.MetersGroup._remove_old_entries", "logger.MetersGroup._csv_writer.writeheader", "sorted", "data.keys"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.MetersGroup._remove_old_entries"], ["", "", "", "def", "_dump_to_csv", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "self", ".", "_csv_writer", "is", "None", ":", "\n", "            ", "should_write_header", "=", "True", "\n", "if", "self", ".", "_csv_file_name", ".", "exists", "(", ")", ":", "\n", "                ", "self", ".", "_remove_old_entries", "(", "data", ")", "\n", "should_write_header", "=", "False", "\n", "\n", "", "self", ".", "_csv_file", "=", "self", ".", "_csv_file_name", ".", "open", "(", "'a'", ")", "\n", "self", ".", "_csv_writer", "=", "csv", ".", "DictWriter", "(", "self", ".", "_csv_file", ",", "\n", "fieldnames", "=", "sorted", "(", "data", ".", "keys", "(", ")", ")", ",", "\n", "restval", "=", "0.0", ")", "\n", "if", "should_write_header", ":", "\n", "                ", "self", ".", "_csv_writer", ".", "writeheader", "(", ")", "\n", "\n", "", "", "self", ".", "_csv_writer", ".", "writerow", "(", "data", ")", "\n", "self", ".", "_csv_file", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.MetersGroup._format": [[94, 105], ["int", "str", "datetime.timedelta", "int"], "methods", ["None"], ["", "def", "_format", "(", "self", ",", "key", ",", "value", ",", "ty", ")", ":", "\n", "        ", "if", "ty", "==", "'int'", ":", "\n", "            ", "value", "=", "int", "(", "value", ")", "\n", "return", "f'{key}: {value}'", "\n", "", "elif", "ty", "==", "'float'", ":", "\n", "            ", "return", "f'{key}: {value:.04f}'", "\n", "", "elif", "ty", "==", "'time'", ":", "\n", "            ", "value", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "int", "(", "value", ")", ")", ")", "\n", "return", "f'{key}: {value}'", "\n", "", "else", ":", "\n", "            ", "raise", "f'invalid format type: {ty}'", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.MetersGroup._dump_to_console": [[106, 113], ["colored", "print", "data.get", "pieces.append", "logger.MetersGroup._format"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.MetersGroup._format"], ["", "", "def", "_dump_to_console", "(", "self", ",", "data", ",", "prefix", ")", ":", "\n", "        ", "prefix", "=", "colored", "(", "prefix", ",", "'yellow'", "if", "prefix", "==", "'train'", "else", "'green'", ")", "\n", "pieces", "=", "[", "f'| {prefix: <14}'", "]", "\n", "for", "key", ",", "disp_key", ",", "ty", "in", "self", ".", "_formating", ":", "\n", "            ", "value", "=", "data", ".", "get", "(", "key", ",", "0", ")", "\n", "pieces", ".", "append", "(", "self", ".", "_format", "(", "disp_key", ",", "value", ",", "ty", ")", ")", "\n", "", "print", "(", "' | '", ".", "join", "(", "pieces", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.MetersGroup.dump": [[114, 122], ["logger.MetersGroup._prime_meters", "logger.MetersGroup._dump_to_csv", "logger.MetersGroup._dump_to_console", "logger.MetersGroup._meters.clear", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.MetersGroup._prime_meters", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.MetersGroup._dump_to_csv", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.MetersGroup._dump_to_console"], ["", "def", "dump", "(", "self", ",", "step", ",", "prefix", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "_meters", ")", "==", "0", ":", "\n", "            ", "return", "\n", "", "data", "=", "self", ".", "_prime_meters", "(", ")", "\n", "data", "[", "'frame'", "]", "=", "step", "\n", "self", ".", "_dump_to_csv", "(", "data", ")", "\n", "self", ".", "_dump_to_console", "(", "data", ",", "prefix", ")", "\n", "self", ".", "_meters", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.__init__": [[125, 139], ["logger.MetersGroup", "logger.MetersGroup", "SummaryWriter", "print", "wandb.init", "wandb.config.update", "str"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.AverageMeter.update"], ["    ", "def", "__init__", "(", "self", ",", "log_dir", ",", "use_tb", ",", "cfg", "=", "None", ")", ":", "\n", "        ", "self", ".", "_log_dir", "=", "log_dir", "\n", "self", ".", "use_tb", "=", "use_tb", "\n", "self", ".", "_train_mg", "=", "MetersGroup", "(", "log_dir", "/", "'train.csv'", ",", "\n", "formating", "=", "COMMON_TRAIN_FORMAT", ")", "\n", "self", ".", "_eval_mg", "=", "MetersGroup", "(", "log_dir", "/", "'eval.csv'", ",", "\n", "formating", "=", "COMMON_EVAL_FORMAT", ")", "\n", "if", "use_tb", ":", "\n", "            ", "self", ".", "_sw", "=", "SummaryWriter", "(", "str", "(", "log_dir", "/", "'tb'", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "cfg", ".", "wandbuser", ")", "\n", "wandb", ".", "init", "(", "project", "=", "cfg", ".", "wandbproject", ",", "entity", "=", "cfg", ".", "wandbuser", ",", "name", "=", "cfg", ".", "experiment", ")", "\n", "fullcfg", "=", "{", "**", "cfg", ",", "**", "cfg", ".", "agent", "}", "\n", "wandb", ".", "config", ".", "update", "(", "fullcfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger._try_sw_log": [[140, 147], ["logger.Logger._sw.add_scalar", "wandb.log"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log"], ["", "", "def", "_try_sw_log", "(", "self", ",", "key", ",", "value", ",", "step", ")", ":", "\n", "        ", "if", "self", ".", "use_tb", ":", "\n", "            ", "self", ".", "_sw", ".", "add_scalar", "(", "key", ",", "value", ",", "step", ")", "\n", "", "else", ":", "\n", "            ", "logs", "=", "{", "}", "\n", "logs", "[", "key", "]", "=", "value", "\n", "wandb", ".", "log", "(", "logs", ",", "step", "=", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log": [[148, 155], ["logger.Logger._try_sw_log", "mg.log", "key.startswith", "key.startswith", "type", "value.item.item.item", "key.startswith"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger._try_sw_log", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log"], ["", "", "def", "log", "(", "self", ",", "key", ",", "value", ",", "step", ")", ":", "\n", "        ", "assert", "key", ".", "startswith", "(", "'train'", ")", "or", "key", ".", "startswith", "(", "'eval'", ")", "\n", "if", "type", "(", "value", ")", "==", "torch", ".", "Tensor", ":", "\n", "            ", "value", "=", "value", ".", "item", "(", ")", "\n", "", "self", ".", "_try_sw_log", "(", "key", ",", "value", ",", "step", ")", "\n", "mg", "=", "self", ".", "_train_mg", "if", "key", ".", "startswith", "(", "'train'", ")", "else", "self", ".", "_eval_mg", "\n", "mg", ".", "log", "(", "key", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log_metrics": [[156, 159], ["metrics.items", "logger.Logger.log"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log"], ["", "def", "log_metrics", "(", "self", ",", "metrics", ",", "step", ",", "ty", ")", ":", "\n", "        ", "for", "key", ",", "value", "in", "metrics", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "log", "(", "f'{ty}/{key}'", ",", "value", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.dump": [[160, 165], ["logger.Logger._eval_mg.dump", "logger.Logger._train_mg.dump"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.dump", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.dump"], ["", "", "def", "dump", "(", "self", ",", "step", ",", "ty", "=", "None", ")", ":", "\n", "        ", "if", "ty", "is", "None", "or", "ty", "==", "'eval'", ":", "\n", "            ", "self", ".", "_eval_mg", ".", "dump", "(", "step", ",", "'eval'", ")", "\n", "", "if", "ty", "is", "None", "or", "ty", "==", "'train'", ":", "\n", "            ", "self", ".", "_train_mg", ".", "dump", "(", "step", ",", "'train'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log_and_dump_ctx": [[166, 168], ["logger.LogAndDumpCtx"], "methods", ["None"], ["", "", "def", "log_and_dump_ctx", "(", "self", ",", "step", ",", "ty", ")", ":", "\n", "        ", "return", "LogAndDumpCtx", "(", "self", ",", "step", ",", "ty", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.LogAndDumpCtx.__init__": [[171, 175], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "logger", ",", "step", ",", "ty", ")", ":", "\n", "        ", "self", ".", "_logger", "=", "logger", "\n", "self", ".", "_step", "=", "step", "\n", "self", ".", "_ty", "=", "ty", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.LogAndDumpCtx.__enter__": [[176, 178], ["None"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.LogAndDumpCtx.__call__": [[179, 181], ["logger.LogAndDumpCtx._logger.log"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.log"], ["", "def", "__call__", "(", "self", ",", "key", ",", "value", ")", ":", "\n", "        ", "self", ".", "_logger", ".", "log", "(", "f'{self._ty}/{key}'", ",", "value", ",", "self", ".", "_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.LogAndDumpCtx.__exit__": [[182, 184], ["logger.LogAndDumpCtx._logger.dump"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.logger.Logger.dump"], ["", "def", "__exit__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "self", ".", "_logger", ".", "dump", "(", "self", ".", "_step", ",", "self", ".", "_ty", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.R3MBuffer.__init__": [[39, 62], ["max", "torch.nn.Sequential", "print", "pandas.read_csv", "print", "len", "NameError", "torchvision.transforms.RandomResizedCrop"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ego4dpath", ",", "num_workers", ",", "source1", ",", "source2", ",", "alpha", ",", "datasources", ",", "doaug", "=", "\"none\"", ")", ":", "\n", "        ", "self", ".", "_num_workers", "=", "max", "(", "1", ",", "num_workers", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "curr_same", "=", "0", "\n", "self", ".", "data_sources", "=", "datasources", "\n", "self", ".", "doaug", "=", "doaug", "\n", "\n", "# Augmentations", "\n", "if", "doaug", "in", "[", "\"rc\"", ",", "\"rctraj\"", "]", ":", "\n", "            ", "self", ".", "aug", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ",", "scale", "=", "(", "0.2", ",", "1.0", ")", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "aug", "=", "lambda", "a", ":", "a", "\n", "\n", "# Load Data", "\n", "", "if", "\"ego4d\"", "in", "self", ".", "data_sources", ":", "\n", "            ", "print", "(", "\"Ego4D\"", ")", "\n", "self", ".", "manifest", "=", "pd", ".", "read_csv", "(", "f\"{ego4dpath}manifest.csv\"", ")", "\n", "print", "(", "self", ".", "manifest", ")", "\n", "self", ".", "ego4dlen", "=", "len", "(", "self", ".", "manifest", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NameError", "(", "'Invalid Dataset'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.R3MBuffer._sample": [[64, 106], ["time.time", "random.choice", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "torch.stack", "data_loaders.get_ind", "data_loaders.get_ind", "data_loaders.get_ind", "data_loaders.get_ind", "data_loaders.get_ind", "torch.stack", "int", "int", "data_loaders.R3MBuffer.aug", "data_loaders.R3MBuffer.aug", "data_loaders.R3MBuffer.aug", "data_loaders.R3MBuffer.aug", "data_loaders.R3MBuffer.aug", "data_loaders.R3MBuffer.aug", "data_loaders.get_ind", "data_loaders.get_ind", "data_loaders.get_ind", "data_loaders.get_ind", "data_loaders.get_ind"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.get_ind", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.get_ind", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.get_ind", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.get_ind", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.get_ind", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.get_ind", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.get_ind", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.get_ind", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.get_ind", "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.get_ind"], ["", "", "def", "_sample", "(", "self", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "ds", "=", "random", ".", "choice", "(", "self", ".", "data_sources", ")", "\n", "\n", "vidid", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "ego4dlen", ")", "\n", "m", "=", "self", ".", "manifest", ".", "iloc", "[", "vidid", "]", "\n", "vidlen", "=", "m", "[", "\"len\"", "]", "\n", "txt", "=", "m", "[", "\"txt\"", "]", "\n", "label", "=", "txt", "[", "2", ":", "]", "## Cuts of the \"C \" part of the text", "\n", "vid", "=", "m", "[", "\"path\"", "]", "\n", "\n", "start_ind", "=", "np", ".", "random", ".", "randint", "(", "1", ",", "2", "+", "int", "(", "self", ".", "alpha", "*", "vidlen", ")", ")", "\n", "end_ind", "=", "np", ".", "random", ".", "randint", "(", "int", "(", "(", "1", "-", "self", ".", "alpha", ")", "*", "vidlen", ")", "-", "1", ",", "vidlen", ")", "\n", "s1_ind", "=", "np", ".", "random", ".", "randint", "(", "2", ",", "vidlen", ")", "\n", "s0_ind", "=", "np", ".", "random", ".", "randint", "(", "1", ",", "s1_ind", ")", "\n", "s2_ind", "=", "np", ".", "random", ".", "randint", "(", "s1_ind", ",", "vidlen", "+", "1", ")", "\n", "\n", "if", "self", ".", "doaug", "==", "\"rctraj\"", ":", "\n", "### Encode each image in the video at once the same way", "\n", "            ", "im0", "=", "get_ind", "(", "vid", ",", "start_ind", ",", "ds", ")", "\n", "img", "=", "get_ind", "(", "vid", ",", "end_ind", ",", "ds", ")", "\n", "imts0", "=", "get_ind", "(", "vid", ",", "s0_ind", ",", "ds", ")", "\n", "imts1", "=", "get_ind", "(", "vid", ",", "s1_ind", ",", "ds", ")", "\n", "imts2", "=", "get_ind", "(", "vid", ",", "s2_ind", ",", "ds", ")", "\n", "allims", "=", "torch", ".", "stack", "(", "[", "im0", ",", "img", ",", "imts0", ",", "imts1", ",", "imts2", "]", ",", "0", ")", "\n", "allims_aug", "=", "self", ".", "aug", "(", "allims", "/", "255.0", ")", "*", "255.0", "\n", "\n", "im0", "=", "allims_aug", "[", "0", "]", "\n", "img", "=", "allims_aug", "[", "1", "]", "\n", "imts0", "=", "allims_aug", "[", "2", "]", "\n", "imts1", "=", "allims_aug", "[", "3", "]", "\n", "imts2", "=", "allims_aug", "[", "4", "]", "\n", "", "else", ":", "\n", "### Encode each image individually", "\n", "            ", "im0", "=", "self", ".", "aug", "(", "get_ind", "(", "vid", ",", "start_ind", ",", "ds", ")", "/", "255.0", ")", "*", "255.0", "\n", "img", "=", "self", ".", "aug", "(", "get_ind", "(", "vid", ",", "end_ind", ",", "ds", ")", "/", "255.0", ")", "*", "255.0", "\n", "imts0", "=", "self", ".", "aug", "(", "get_ind", "(", "vid", ",", "s0_ind", ",", "ds", ")", "/", "255.0", ")", "*", "255.0", "\n", "imts1", "=", "self", ".", "aug", "(", "get_ind", "(", "vid", ",", "s1_ind", ",", "ds", ")", "/", "255.0", ")", "*", "255.0", "\n", "imts2", "=", "self", ".", "aug", "(", "get_ind", "(", "vid", ",", "s2_ind", ",", "ds", ")", "/", "255.0", ")", "*", "255.0", "\n", "\n", "", "im", "=", "torch", ".", "stack", "(", "[", "im0", ",", "img", ",", "imts0", ",", "imts1", ",", "imts2", "]", ")", "\n", "return", "(", "im", ",", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.R3MBuffer.__iter__": [[107, 110], ["data_loaders.R3MBuffer._sample"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.R3MBuffer._sample"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "yield", "self", ".", "_sample", "(", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.data_loaders.get_ind": [[30, 35], ["torchvision.io.read_image", "NameError"], "function", ["None"], ["def", "get_ind", "(", "vid", ",", "index", ",", "ds", ")", ":", "\n", "    ", "if", "ds", "==", "\"ego4d\"", ":", "\n", "        ", "return", "torchvision", ".", "io", ".", "read_image", "(", "f\"{vid}/{index:06}.jpg\"", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NameError", "(", "'Invalid Dataset'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.eval_mode.__init__": [[19, 21], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "*", "models", ")", ":", "\n", "        ", "self", ".", "models", "=", "models", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.eval_mode.__enter__": [[22, 27], ["utils.eval_mode.prev_states.append", "model.train"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.train"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "self", ".", "prev_states", "=", "[", "]", "\n", "for", "model", "in", "self", ".", "models", ":", "\n", "            ", "self", ".", "prev_states", ".", "append", "(", "model", ".", "training", ")", "\n", "model", ".", "train", "(", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.eval_mode.__exit__": [[28, 32], ["zip", "model.train"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.train"], ["", "", "def", "__exit__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "for", "model", ",", "state", "in", "zip", "(", "self", ".", "models", ",", "self", ".", "prev_states", ")", ":", "\n", "            ", "model", ".", "train", "(", "state", ")", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.Until.__init__": [[79, 82], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "until", ",", "action_repeat", "=", "1", ")", ":", "\n", "        ", "self", ".", "_until", "=", "until", "\n", "self", ".", "_action_repeat", "=", "action_repeat", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.Until.__call__": [[83, 88], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "step", ")", ":", "\n", "        ", "if", "self", ".", "_until", "is", "None", ":", "\n", "            ", "return", "True", "\n", "", "until", "=", "self", ".", "_until", "//", "self", ".", "_action_repeat", "\n", "return", "step", "<", "until", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.Every.__init__": [[91, 94], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "every", ",", "action_repeat", "=", "1", ")", ":", "\n", "        ", "self", ".", "_every", "=", "every", "\n", "self", ".", "_action_repeat", "=", "action_repeat", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.Every.__call__": [[95, 102], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "step", ")", ":", "\n", "        ", "if", "self", ".", "_every", "is", "None", ":", "\n", "            ", "return", "False", "\n", "", "every", "=", "self", ".", "_every", "//", "self", ".", "_action_repeat", "\n", "if", "step", "%", "every", "==", "0", ":", "\n", "            ", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.Timer.__init__": [[105, 108], ["time.time", "time.time"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_start_time", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "_last_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.Timer.reset": [[109, 114], ["time.time", "time.time", "time.time"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "elapsed_time", "=", "time", ".", "time", "(", ")", "-", "self", ".", "_last_time", "\n", "self", ".", "_last_time", "=", "time", ".", "time", "(", ")", "\n", "total_time", "=", "time", ".", "time", "(", ")", "-", "self", ".", "_start_time", "\n", "return", "elapsed_time", ",", "total_time", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.Timer.total_time": [[115, 117], ["time.time"], "methods", ["None"], ["", "def", "total_time", "(", "self", ")", ":", "\n", "        ", "return", "time", ".", "time", "(", ")", "-", "self", ".", "_start_time", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.TruncatedNormal.__init__": [[120, 125], ["torch.distributions.Normal.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_language.LanguageReward.__init__"], ["    ", "def", "__init__", "(", "self", ",", "loc", ",", "scale", ",", "low", "=", "-", "1.0", ",", "high", "=", "1.0", ",", "eps", "=", "1e-6", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "loc", ",", "scale", ",", "validate_args", "=", "False", ")", "\n", "self", ".", "low", "=", "low", "\n", "self", ".", "high", "=", "high", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.TruncatedNormal._clamp": [[126, 130], ["torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp.detach", "torch.clamp.detach", "torch.clamp.detach", "x.detach"], "methods", ["None"], ["", "def", "_clamp", "(", "self", ",", "x", ")", ":", "\n", "        ", "clamped_x", "=", "torch", ".", "clamp", "(", "x", ",", "self", ".", "low", "+", "self", ".", "eps", ",", "self", ".", "high", "-", "self", ".", "eps", ")", "\n", "x", "=", "x", "-", "x", ".", "detach", "(", ")", "+", "clamped_x", ".", "detach", "(", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.TruncatedNormal.sample": [[131, 141], ["torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "utils.TruncatedNormal._extended_shape", "torch.distributions.utils._standard_normal", "torch.distributions.utils._standard_normal", "torch.distributions.utils._standard_normal", "utils.TruncatedNormal._clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.TruncatedNormal._clamp"], ["", "def", "sample", "(", "self", ",", "clip", "=", "None", ",", "sample_shape", "=", "torch", ".", "Size", "(", ")", ")", ":", "\n", "        ", "shape", "=", "self", ".", "_extended_shape", "(", "sample_shape", ")", "\n", "eps", "=", "_standard_normal", "(", "shape", ",", "\n", "dtype", "=", "self", ".", "loc", ".", "dtype", ",", "\n", "device", "=", "self", ".", "loc", ".", "device", ")", "\n", "eps", "*=", "self", ".", "scale", "\n", "if", "clip", "is", "not", "None", ":", "\n", "            ", "eps", "=", "torch", ".", "clamp", "(", "eps", ",", "-", "clip", ",", "clip", ")", "\n", "", "x", "=", "self", ".", "loc", "+", "eps", "\n", "return", "self", ".", "_clamp", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.set_seed_everywhere": [[34, 40], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "numpy.random.seed", "random.seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all"], "function", ["None"], ["", "", "def", "set_seed_everywhere", "(", "seed", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.soft_update_params": [[42, 46], ["zip", "net.parameters", "target_net.parameters", "target_param.data.copy_"], "function", ["None"], ["", "def", "soft_update_params", "(", "net", ",", "target_net", ",", "tau", ")", ":", "\n", "    ", "for", "param", ",", "target_param", "in", "zip", "(", "net", ".", "parameters", "(", ")", ",", "target_net", ".", "parameters", "(", ")", ")", ":", "\n", "        ", "target_param", ".", "data", ".", "copy_", "(", "tau", "*", "param", ".", "data", "+", "\n", "(", "1", "-", "tau", ")", "*", "target_param", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.to_torch": [[48, 50], ["tuple", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor"], "function", ["None"], ["", "", "def", "to_torch", "(", "xs", ",", "device", ")", ":", "\n", "    ", "return", "tuple", "(", "torch", ".", "as_tensor", "(", "x", ",", "device", "=", "device", ")", "for", "x", "in", "xs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.weight_init": [[52, 62], ["isinstance", "torch.init.orthogonal_", "hasattr", "m.bias.data.fill_", "isinstance", "isinstance", "torch.init.calculate_gain", "torch.init.orthogonal_", "hasattr", "m.bias.data.fill_"], "function", ["None"], ["", "def", "weight_init", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "        ", "nn", ".", "init", ".", "orthogonal_", "(", "m", ".", "weight", ".", "data", ")", "\n", "if", "hasattr", "(", "m", ".", "bias", ",", "'data'", ")", ":", "\n", "            ", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "        ", "gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "'relu'", ")", "\n", "nn", ".", "init", ".", "orthogonal_", "(", "m", ".", "weight", ".", "data", ",", "gain", ")", "\n", "if", "hasattr", "(", "m", ".", "bias", ",", "'data'", ")", ":", "\n", "            ", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.accuracy": [[63, 77], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].reshape().float().sum", "res.append", "correct[].reshape().float().sum.mul_", "target.view", "correct[].reshape().float", "correct[].reshape"], "function", ["None"], ["", "", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the precision@k for the specified values of k\"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "reshape", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "1.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.utils.utils.schedule": [[143, 164], ["NotImplementedError", "float", "re.match", "re.match", "numpy.clip", "float", "float", "numpy.clip", "numpy.clip", "re.match.groups", "re.match.groups"], "function", ["None"], ["", "", "def", "schedule", "(", "schdl", ",", "step", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "return", "float", "(", "schdl", ")", "\n", "", "except", "ValueError", ":", "\n", "        ", "match", "=", "re", ".", "match", "(", "r'linear\\((.+),(.+),(.+)\\)'", ",", "schdl", ")", "\n", "if", "match", ":", "\n", "            ", "init", ",", "final", ",", "duration", "=", "[", "float", "(", "g", ")", "for", "g", "in", "match", ".", "groups", "(", ")", "]", "\n", "mix", "=", "np", ".", "clip", "(", "step", "/", "duration", ",", "0.0", ",", "1.0", ")", "\n", "return", "(", "1.0", "-", "mix", ")", "*", "init", "+", "mix", "*", "final", "\n", "", "match", "=", "re", ".", "match", "(", "r'step_linear\\((.+),(.+),(.+),(.+),(.+)\\)'", ",", "schdl", ")", "\n", "if", "match", ":", "\n", "            ", "init", ",", "final1", ",", "duration1", ",", "final2", ",", "duration2", "=", "[", "\n", "float", "(", "g", ")", "for", "g", "in", "match", ".", "groups", "(", ")", "\n", "]", "\n", "if", "step", "<=", "duration1", ":", "\n", "                ", "mix", "=", "np", ".", "clip", "(", "step", "/", "duration1", ",", "0.0", ",", "1.0", ")", "\n", "return", "(", "1.0", "-", "mix", ")", "*", "init", "+", "mix", "*", "final1", "\n", "", "else", ":", "\n", "                ", "mix", "=", "np", ".", "clip", "(", "(", "step", "-", "duration1", ")", "/", "duration2", ",", "0.0", ",", "1.0", ")", "\n", "return", "(", "1.0", "-", "mix", ")", "*", "final1", "+", "mix", "*", "final2", "\n", "", "", "", "raise", "NotImplementedError", "(", "schdl", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.__init__": [[22, 77], ["torch.Module.__init__", "torch.nn.CosineSimilarity", "torch.nn.CosineSimilarity", "torch.nn.CosineSimilarity", "torch.nn.CosineSimilarity", "torch.BCELoss", "torch.BCELoss", "torch.nn.modules.activation.Sigmoid", "torch.nn.modules.activation.Sigmoid", "torch.nn.modules.linear.Identity", "torch.nn.modules.linear.Identity", "models_r3m.R3M.convnet.train", "list", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torchvision.models.resnet18", "torchvision.models.resnet18", "torchvision.models.resnet18", "torchvision.models.resnet18", "torchvision.transforms.Normalize", "torchvision.transforms.Normalize", "torchvision.transforms.Normalize", "torchvision.transforms.Normalize", "models_r3m.R3M.convnet.parameters", "LangEncoder", "LanguageReward", "list", "torchvision.models.resnet34", "torchvision.models.resnet34", "torchvision.models.resnet34", "torchvision.models.resnet34", "models_r3m.R3M.lang_rew.parameters", "torchvision.models.resnet50", "torchvision.models.resnet50", "torchvision.models.resnet50", "torchvision.models.resnet50", "AutoModel.from_config().to", "AutoModel.from_config", "AutoConfig.from_pretrained"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_language.LanguageReward.__init__", "home.repos.pwc.inspect_result.facebookresearch_r3m.r3m.train_representation.Workspace.train"], ["    ", "def", "__init__", "(", "self", ",", "device", ",", "lr", ",", "hidden_dim", ",", "size", "=", "34", ",", "l2weight", "=", "1.0", ",", "l1weight", "=", "1.0", ",", "\n", "langweight", "=", "1.0", ",", "tcnweight", "=", "0.0", ",", "l2dist", "=", "True", ",", "bs", "=", "16", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "use_tb", "=", "False", "\n", "self", ".", "l2weight", "=", "l2weight", "\n", "self", ".", "l1weight", "=", "l1weight", "\n", "self", ".", "tcnweight", "=", "tcnweight", "## Weight on TCN loss (states closer in same clip closer in embedding)", "\n", "self", ".", "l2dist", "=", "l2dist", "## Use -l2 or cosine sim", "\n", "self", ".", "langweight", "=", "langweight", "## Weight on language reward", "\n", "self", ".", "size", "=", "size", "## Size ResNet or ViT", "\n", "self", ".", "num_negatives", "=", "3", "\n", "\n", "## Distances and Metrics", "\n", "self", ".", "cs", "=", "torch", ".", "nn", ".", "CosineSimilarity", "(", "1", ")", "\n", "self", ".", "bce", "=", "nn", ".", "BCELoss", "(", "reduce", "=", "False", ")", "\n", "self", ".", "sigm", "=", "Sigmoid", "(", ")", "\n", "\n", "params", "=", "[", "]", "\n", "######################################################################## Sub Modules", "\n", "## Visual Encoder", "\n", "if", "size", "==", "18", ":", "\n", "            ", "self", ".", "outdim", "=", "512", "\n", "self", ".", "convnet", "=", "torchvision", ".", "models", ".", "resnet18", "(", "pretrained", "=", "False", ")", "\n", "", "elif", "size", "==", "34", ":", "\n", "            ", "self", ".", "outdim", "=", "512", "\n", "self", ".", "convnet", "=", "torchvision", ".", "models", ".", "resnet34", "(", "pretrained", "=", "False", ")", "\n", "", "elif", "size", "==", "50", ":", "\n", "            ", "self", ".", "outdim", "=", "2048", "\n", "self", ".", "convnet", "=", "torchvision", ".", "models", ".", "resnet50", "(", "pretrained", "=", "False", ")", "\n", "", "elif", "size", "==", "0", ":", "\n", "            ", "from", "transformers", "import", "AutoConfig", "\n", "self", ".", "outdim", "=", "768", "\n", "self", ".", "convnet", "=", "AutoModel", ".", "from_config", "(", "config", "=", "AutoConfig", ".", "from_pretrained", "(", "'google/vit-base-patch32-224-in21k'", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "", "if", "self", ".", "size", "==", "0", ":", "\n", "            ", "self", ".", "normlayer", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "normlayer", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "", "self", ".", "convnet", ".", "fc", "=", "Identity", "(", ")", "\n", "self", ".", "convnet", ".", "train", "(", ")", "\n", "params", "+=", "list", "(", "self", ".", "convnet", ".", "parameters", "(", ")", ")", "\n", "\n", "## Language Reward", "\n", "if", "self", ".", "langweight", ">", "0.0", ":", "\n", "## Pretrained DistilBERT Sentence Encoder", "\n", "            ", "from", "r3m", ".", "models", ".", "models_language", "import", "LangEncoder", ",", "LanguageReward", "\n", "self", ".", "lang_enc", "=", "LangEncoder", "(", "self", ".", "device", ",", "0", ",", "0", ")", "\n", "self", ".", "lang_rew", "=", "LanguageReward", "(", "None", ",", "self", ".", "outdim", ",", "hidden_dim", ",", "self", ".", "lang_enc", ".", "lang_size", ",", "simfunc", "=", "self", ".", "sim", ")", "\n", "params", "+=", "list", "(", "self", ".", "lang_rew", ".", "parameters", "(", ")", ")", "\n", "########################################################################", "\n", "\n", "## Optimizer", "\n", "", "self", ".", "encoder_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "params", ",", "lr", "=", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.get_reward": [[78, 82], ["models_r3m.R3M.lang_enc", "models_r3m.R3M.lang_rew"], "methods", ["None"], ["", "def", "get_reward", "(", "self", ",", "e0", ",", "es", ",", "sentences", ")", ":", "\n", "## Only callable is langweight was set to be 1", "\n", "        ", "le", "=", "self", ".", "lang_enc", "(", "sentences", ")", "\n", "return", "self", ".", "lang_rew", "(", "e0", ",", "es", ",", "le", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.forward": [[84, 101], ["torch.Sequential.", "models_r3m.R3M.convnet", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "obs.float", "torchvision.transforms.Resize", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.CenterCrop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "obs", ",", "num_ims", "=", "1", ",", "obs_shape", "=", "[", "3", ",", "224", ",", "224", "]", ")", ":", "\n", "        ", "if", "obs_shape", "!=", "[", "3", ",", "224", ",", "224", "]", ":", "\n", "            ", "preprocess", "=", "nn", ".", "Sequential", "(", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "self", ".", "normlayer", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "preprocess", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "normlayer", ",", "\n", ")", "\n", "\n", "## Input must be [0, 255], [3,244,244]", "\n", "", "obs", "=", "obs", ".", "float", "(", ")", "/", "255.0", "\n", "obs_p", "=", "preprocess", "(", "obs", ")", "\n", "h", "=", "self", ".", "convnet", "(", "obs_p", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.R3M.sim": [[102, 108], ["models_r3m.R3M.cs", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm"], "methods", ["None"], ["", "def", "sim", "(", "self", ",", "tensor1", ",", "tensor2", ")", ":", "\n", "        ", "if", "self", ".", "l2dist", ":", "\n", "            ", "d", "=", "-", "torch", ".", "linalg", ".", "norm", "(", "tensor1", "-", "tensor2", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "d", "=", "self", ".", "cs", "(", "tensor1", ",", "tensor2", ")", "\n", "", "return", "d", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_r3m.do_nothing": [[19, 20], ["None"], "function", ["None"], ["def", "do_nothing", "(", "x", ")", ":", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_language.LangEncoder.__init__": [[14, 22], ["torch.Module.__init__", "AutoTokenizer.from_pretrained", "AutoModel.from_pretrained().to", "AutoModel.from_pretrained"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_language.LanguageReward.__init__"], ["  ", "def", "__init__", "(", "self", ",", "device", ",", "finetune", "=", "False", ",", "scratch", "=", "False", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "from", "transformers", "import", "AutoTokenizer", ",", "AutoModel", ",", "AutoConfig", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "modelname", "=", "\"distilbert-base-uncased\"", "\n", "self", ".", "tokenizer", "=", "AutoTokenizer", ".", "from_pretrained", "(", "self", ".", "modelname", ")", "\n", "self", ".", "model", "=", "AutoModel", ".", "from_pretrained", "(", "self", ".", "modelname", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "lang_size", "=", "768", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_language.LangEncoder.forward": [[23, 36], ["langs.tolist.tolist.tolist", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "models_language.LangEncoder.tokenizer", "encoded_input[].to", "encoded_input[].to", "lang_embedding.mean.mean.mean", "models_language.LangEncoder.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "langs", ")", ":", "\n", "    ", "try", ":", "\n", "      ", "langs", "=", "langs", ".", "tolist", "(", ")", "\n", "", "except", ":", "\n", "      ", "pass", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "      ", "encoded_input", "=", "self", ".", "tokenizer", "(", "langs", ",", "return_tensors", "=", "'pt'", ",", "padding", "=", "True", ")", "\n", "input_ids", "=", "encoded_input", "[", "'input_ids'", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "attention_mask", "=", "encoded_input", "[", "'attention_mask'", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "lang_embedding", "=", "self", ".", "model", "(", "input_ids", ",", "attention_mask", "=", "attention_mask", ")", ".", "last_hidden_state", "\n", "lang_embedding", "=", "lang_embedding", ".", "mean", "(", "1", ")", "\n", "", "return", "lang_embedding", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_language.LanguageReward.__init__": [[38, 52], ["torch.Module.__init__", "torch.nn.modules.activation.Sigmoid", "torch.nn.modules.activation.Sigmoid", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_language.LanguageReward.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ltype", ",", "im_dim", ",", "hidden_dim", ",", "lang_dim", ",", "simfunc", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ltype", "=", "ltype", "\n", "self", ".", "sim", "=", "simfunc", "\n", "self", ".", "sigm", "=", "Sigmoid", "(", ")", "\n", "self", ".", "pred", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "im_dim", "*", "2", "+", "lang_dim", ",", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_dim", ",", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_dim", ",", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_dim", ",", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_dim", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_r3m.models.models_language.LanguageReward.forward": [[53, 56], ["models_language.LanguageReward.pred().squeeze", "models_language.LanguageReward.pred", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "e0", ",", "eg", ",", "le", ")", ":", "\n", "        ", "info", "=", "{", "}", "\n", "return", "self", ".", "pred", "(", "torch", ".", "cat", "(", "[", "e0", ",", "eg", ",", "le", "]", ",", "-", "1", ")", ")", ".", "squeeze", "(", ")", ",", "info", "", "", "", ""]]}