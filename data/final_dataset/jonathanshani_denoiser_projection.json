{"home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_8.Struct.__init__": [[39, 41], ["run_data_for_fig_8.Struct.__dict__.update"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "entries", ")", ":", "\n", "        ", "self", ".", "__dict__", ".", "update", "(", "entries", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_8.create_flags": [[7, 28], ["dict", "run_data_for_fig_8.Struct", "run_data_for_fig_8.convert_type", "x.split"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.convert_type"], ["def", "create_flags", "(", "args", ")", ":", "\n", "    ", "special_cases", "=", "{", "'bool_vars'", ":", "[", "'projected'", "]", ",", "\n", "'str_vars'", ":", "[", "'alg_option'", ",", "'name_exp'", "]", ",", "\n", "'float_vars'", ":", "[", "'lr'", ",", "'sigma'", "]", "}", "\n", "\n", "default_vals", "=", "{", "'gpu_num'", ":", "0", ",", "\n", "'lr'", ":", "0.01", ",", "\n", "'sigma'", ":", "0.1", ",", "\n", "'N'", ":", "[", "]", ",", "\n", "'alg_option'", ":", "'BFGS'", ",", "\n", "'iterations_number'", ":", "400", ",", "\n", "'projected'", ":", "False", ",", "\n", "'name_exp'", ":", "'tmp_name'", "}", "\n", "\n", "\n", "\n", "dict_flags", "=", "dict", "(", "[", "convert_type", "(", "x", ".", "split", "(", "'='", ")", ",", "special_cases", ")", "for", "x", "in", "args", "]", ")", "\n", "dict_flags", "=", "{", "**", "default_vals", ",", "**", "dict_flags", "}", "\n", "flags", "=", "Struct", "(", "**", "dict_flags", ")", "\n", "\n", "return", "flags", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_8.convert_type": [[29, 37], ["float", "int"], "function", ["None"], ["", "def", "convert_type", "(", "flag", ",", "special_cases", ")", ":", "\n", "    ", "if", "flag", "[", "0", "]", "in", "special_cases", "[", "'bool_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "flag", "[", "1", "]", "==", "'True'", "\n", "", "elif", "flag", "[", "0", "]", "in", "special_cases", "[", "'float_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "float", "(", "flag", "[", "1", "]", ")", "\n", "", "elif", "flag", "[", "0", "]", "not", "in", "special_cases", "[", "'str_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "int", "(", "flag", "[", "1", "]", ")", "\n", "", "return", "flag", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_8.main": [[42, 60], ["run_data_for_fig_8.create_flags", "os.mkdir", "range", "run_MoM.run_MoM", "str", "str"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.create_flags", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.run_MoM"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "given_seed", "=", "26723683", "\n", "flags", "=", "create_flags", "(", "sys", ".", "argv", "[", "1", ":", "]", ")", "\n", "\n", "flags", ".", "image_path", "=", "'lena.png'", "\n", "\n", "os", ".", "mkdir", "(", "flags", ".", "name_exp", ")", "\n", "global_name_exp", "=", "flags", ".", "name_exp", "+", "'/'", "\n", "\n", "\n", "flags", ".", "sigma", "=", "1", "\n", "all_iterations_per_round", "=", "[", "1", ",", "5", ",", "10", ",", "20", ",", "50", ",", "100", "]", "\n", "\n", "for", "test", "in", "range", "(", "10", ")", ":", "\n", "        ", "for", "it", "in", "all_iterations_per_round", ":", "\n", "            ", "flags", ".", "iterations_per_round", "=", "it", "\n", "flags", ".", "name_exp", "=", "global_name_exp", "+", "'test_num_'", "+", "str", "(", "test", ")", "+", "'_it_'", "+", "str", "(", "it", ")", "+", "'_proj_MOM'", "\n", "run_MoM", ".", "run_MoM", "(", "flags", ",", "given_seed", "+", "test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.print_graphs.main": [[10, 232], ["os.mkdir", "numpy.floor", "enumerate", "os.mkdir", "os.mkdir", "enumerate", "matplotlib.subplots", "range", "axs[].legend", "axs[].set_xlabel", "axs[].set_ylabel", "axs[].set_xscale", "axs[].set_yscale", "axs[].yaxis.set_major_formatter", "axs[].legend", "axs[].set_xlabel", "axs[].set_ylabel", "axs[].set_xscale", "axs[].set_yscale", "numpy.array", "axs[].set_yticks", "axs[].yaxis.set_major_formatter", "matplotlib.tight_layout", "matplotlib.savefig", "os.mkdir", "numpy.linspace", "numpy.zeros", "range", "PIL.Image.open", "img.convert().resize.resize", "numpy.linalg.norm", "matplotlib.subplots", "axs.plot", "axs.set_xlabel", "axs.set_ylabel", "axs.set_xscale", "axs.set_yscale", "matplotlib.tight_layout", "matplotlib.savefig", "numpy.linspace", "numpy.zeros", "range", "matplotlib.subplots", "axs.plot", "axs.set_xlabel", "axs.set_ylabel", "axs.set_xscale", "axs.set_yscale", "axs.set_yticks", "axs.yaxis.set_major_formatter", "matplotlib.tight_layout", "matplotlib.savefig", "matplotlib.subplots", "axs.legend", "axs.set_xlabel", "axs.set_ylabel", "matplotlib.tight_layout", "matplotlib.savefig", "PIL.Image.open", "img.convert().resize.convert().resize", "numpy.roll", "numpy.zeros", "numpy.kron", "numpy.reshape", "matplotlib.imsave", "matplotlib.imsave", "matplotlib.imsave", "matplotlib.imsave", "range", "len", "numpy.array", "axs[].plot", "axs[].plot", "axs[].set_xscale", "axs[].set_yscale", "numpy.array", "axs[].plot", "axs[].plot", "axs[].set_xscale", "axs[].set_yscale", "matplotlib.ScalarFormatter", "matplotlib.ScalarFormatter", "str().replace().replace", "len", "len", "str().replace().replace", "range", "numpy.mean", "numpy.array().reshape", "len", "len", "str().replace", "range", "numpy.mean", "matplotlib.LogFormatterSciNotation", "range", "numpy.mean", "numpy.array", "axs.set_xscale", "axs.set_yscale", "axs.plot", "numpy.random.rand", "numpy.array().reshape", "numpy.ones", "numpy.load().item", "all_results_mom_proj[].append", "numpy.load().item", "all_results_mom_not_proj[].append", "numpy.load().item", "all_results_em_proj[].append", "numpy.load().item", "all_results_em_not_proj[].append", "range", "numpy.mean", "numpy.mean", "range", "numpy.mean", "numpy.mean", "numpy.load().item", "matplotlib.imsave", "numpy.load().item", "all_results.append", "numpy.load().item", "all_results.append", "numpy.load().item", "all_results.append", "range", "img.convert().resize.convert", "int", "int", "int", "int", "numpy.random.randn", "numpy.random.randn", "str().replace().replace", "numpy.load().item", "matplotlib.imsave", "numpy.load().item", "matplotlib.imsave", "numpy.load().item", "matplotlib.imsave", "len", "len", "str().replace", "str().replace", "numpy.array", "str", "str", "numpy.zeros", "range", "print", "print", "numpy.array", "str", "str", "str", "str", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "img.convert().resize.getdata", "numpy.exp", "round", "numpy.load", "numpy.load", "len", "numpy.load().item", "numpy.load().item", "img.convert().resize.getdata", "str().replace", "numpy.load", "numpy.load", "numpy.load", "str", "str", "str", "str().zfill", "str().zfill", "round", "numpy.load", "numpy.load", "str", "str().zfill", "str().zfill", "str().zfill", "str().zfill", "len", "str", "str", "str", "str().zfill", "str", "str().zfill", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str().replace", "str().replace", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "\n", "# create figure #1", "\n", "    ", "os", ".", "mkdir", "(", "'fig_1_output'", ")", "\n", "L_h", "=", "128", "\n", "L_l", "=", "64", "\n", "shift_ind", "=", "np", ".", "floor", "(", "L_h", "*", "np", ".", "random", ".", "rand", "(", "4", ",", "2", ")", ")", "\n", "images", "=", "[", "'lena.png'", ",", "'cameraman.png'", ",", "'fruits.png'", ",", "'cryo_em_img_1.png'", "]", "\n", "for", "ind", ",", "im", "in", "enumerate", "(", "images", ")", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "im", ")", "\n", "img", "=", "img", ".", "convert", "(", "'L'", ")", ".", "resize", "(", "(", "L_h", ",", "L_h", ")", ",", "Image", ".", "ANTIALIAS", ")", "\n", "img", "=", "np", ".", "array", "(", "img", ".", "getdata", "(", ")", ")", ".", "reshape", "(", "img", ".", "size", "[", "0", "]", ",", "img", ".", "size", "[", "1", "]", ")", "/", "255", "\n", "\n", "shift_img", "=", "np", ".", "roll", "(", "img", ",", "(", "int", "(", "shift_ind", "[", "ind", "]", "[", "0", "]", ")", ",", "int", "(", "shift_ind", "[", "ind", "]", "[", "1", "]", ")", ")", ",", "axis", "=", "(", "1", ",", "0", ")", ")", "\n", "\n", "base_mat", "=", "np", ".", "zeros", "(", "(", "int", "(", "L_h", "/", "L_l", ")", ",", "int", "(", "L_h", "/", "L_l", ")", ")", ")", "\n", "base_mat", "[", "0", ",", "0", "]", "=", "1", "\n", "sample_mat", "=", "np", ".", "kron", "(", "np", ".", "ones", "(", "(", "L_l", ",", "L_l", ")", ")", ",", "base_mat", ")", "\n", "sampled_img", "=", "np", ".", "reshape", "(", "shift_img", "[", "sample_mat", "==", "1", "]", ",", "(", "L_l", ",", "L_l", ")", ")", "\n", "\n", "low_noise", "=", "sampled_img", "+", "0.125", "*", "np", ".", "random", ".", "randn", "(", "L_l", ",", "L_l", ")", "\n", "high_noise", "=", "sampled_img", "+", "0.5", "*", "np", ".", "random", ".", "randn", "(", "L_l", ",", "L_l", ")", "\n", "\n", "plt", ".", "imsave", "(", "'fig_1_output/image_'", "+", "str", "(", "im", ")", "+", "'_original.png'", ",", "img", ",", "cmap", "=", "'gray'", ")", "\n", "plt", ".", "imsave", "(", "'fig_1_output/image_'", "+", "str", "(", "im", ")", "+", "'_sampled.png'", ",", "sampled_img", ",", "cmap", "=", "'gray'", ")", "\n", "plt", ".", "imsave", "(", "'fig_1_output/image_'", "+", "str", "(", "im", ")", "+", "'_low_noise.png'", ",", "low_noise", ",", "cmap", "=", "'gray'", ")", "\n", "plt", ".", "imsave", "(", "'fig_1_output/image_'", "+", "str", "(", "im", ")", "+", "'_high_noise.png'", ",", "high_noise", ",", "cmap", "=", "'gray'", ")", "\n", "\n", "\n", "# create figure #2", "\n", "", "os", ".", "mkdir", "(", "'fig_2_output'", ")", "\n", "for", "method", "in", "[", "'mom'", ",", "'em'", "]", ":", "\n", "        ", "for", "file_name", "in", "[", "'lena.png'", ",", "'cameraman.png'", ",", "'fruits.png'", ",", "'cryo_em_img_1.png'", "]", ":", "\n", "            ", "for", "version", "in", "[", "'proj'", ",", "'not_proj'", "]", ":", "\n", "                ", "str_name", "=", "str", "(", "file_name", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", ".", "replace", "(", "'-'", ",", "'m'", ")", "\n", "res", "=", "np", ".", "load", "(", "'visual_output/'", "+", "version", "+", "'_'", "+", "method", "+", "'_128_64_'", "+", "str_name", "+", "\n", "'/final_res.npy'", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "plt", ".", "imsave", "(", "'fig_2_output/'", "+", "version", "+", "'_'", "+", "method", "+", "'_128_64_'", "+", "str_name", "+", "'.png'", ",", "\n", "res", "[", "'curr_shifted_image'", "]", ",", "cmap", "=", "'gray'", ")", "\n", "\n", "# create figure #3 and #4", "\n", "", "", "", "l_list", "=", "[", "64", ",", "32", ",", "16", ",", "8", "]", "\n", "all_results_em_proj", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "\n", "all_results_em_not_proj", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "\n", "all_results_mom_proj", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "\n", "all_results_mom_not_proj", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "\n", "os", ".", "mkdir", "(", "'fig_3_output'", ")", "\n", "for", "i", ",", "l", "in", "enumerate", "(", "l_list", ")", ":", "\n", "        ", "for", "t", "in", "range", "(", "68", ")", ":", "\n", "            ", "res", "=", "np", ".", "load", "(", "'dataset_all_scales/proj_mom_128_'", "+", "str", "(", "l", ")", "+", "'_00'", "+", "str", "(", "t", ")", ".", "zfill", "(", "2", ")", "+", "\n", "'_png/eval_vec.npy'", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "all_results_mom_proj", "[", "i", "]", ".", "append", "(", "res", "[", "'error'", "]", ")", "\n", "res", "=", "np", ".", "load", "(", "'dataset_all_scales/not_proj_mom_128_'", "+", "str", "(", "l", ")", "+", "'_00'", "+", "str", "(", "t", ")", ".", "zfill", "(", "2", ")", "+", "\n", "'_png/eval_vec.npy'", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "all_results_mom_not_proj", "[", "i", "]", ".", "append", "(", "res", "[", "'error'", "]", ")", "\n", "res", "=", "np", ".", "load", "(", "'dataset_all_scales/proj_em_128_'", "+", "str", "(", "l", ")", "+", "'_00'", "+", "str", "(", "t", ")", ".", "zfill", "(", "2", ")", "+", "\n", "'_png/eval_vec.npy'", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "all_results_em_proj", "[", "i", "]", ".", "append", "(", "res", "[", "'error'", "]", ")", "\n", "res", "=", "np", ".", "load", "(", "'dataset_all_scales/not_proj_em_128_'", "+", "str", "(", "l", ")", "+", "'_00'", "+", "str", "(", "t", ")", ".", "zfill", "(", "2", ")", "+", "\n", "'_png/eval_vec.npy'", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "all_results_em_not_proj", "[", "i", "]", ".", "append", "(", "res", "[", "'error'", "]", ")", "\n", "if", "l", "==", "64", ":", "\n", "                ", "res", "=", "np", ".", "load", "(", "'dataset_all_scales/proj_em_128_'", "+", "str", "(", "l", ")", "+", "'_00'", "+", "str", "(", "t", ")", ".", "zfill", "(", "2", ")", "+", "\n", "'_png/final_res.npy'", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "plt", ".", "imsave", "(", "'fig_3_output/proj_em_'", "+", "str", "(", "t", ")", ".", "zfill", "(", "2", ")", "+", "'.png'", ",", "res", "[", "'curr_shifted_image'", "]", ",", "cmap", "=", "'gray'", ")", "\n", "res", "=", "np", ".", "load", "(", "'dataset_all_scales/proj_mom_128_'", "+", "str", "(", "l", ")", "+", "'_00'", "+", "str", "(", "t", ")", ".", "zfill", "(", "2", ")", "+", "\n", "'_png/final_res.npy'", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "plt", ".", "imsave", "(", "'fig_3_output/proj_mom_'", "+", "str", "(", "t", ")", ".", "zfill", "(", "2", ")", "+", "'.png'", ",", "res", "[", "'curr_shifted_image'", "]", ",", "cmap", "=", "'gray'", ")", "\n", "\n", "", "", "", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "2", ",", "1", ")", "\n", "for", "l", "in", "range", "(", "len", "(", "l_list", ")", ")", ":", "\n", "        ", "it", "=", "np", ".", "array", "(", "range", "(", "len", "(", "all_results_mom_proj", "[", "l", "]", "[", "0", "]", ")", ")", ")", "\n", "axs", "[", "0", "]", ".", "plot", "(", "it", ",", "np", ".", "mean", "(", "[", "x", "+", "[", "x", "[", "-", "1", "]", "]", "*", "(", "it", "[", "-", "1", "]", "+", "1", "-", "len", "(", "x", ")", ")", "for", "x", "in", "all_results_mom_not_proj", "[", "l", "]", "]", ",", "0", ")", ")", "\n", "axs", "[", "0", "]", ".", "plot", "(", "it", ",", "np", ".", "mean", "(", "all_results_mom_proj", "[", "l", "]", ",", "0", ")", ")", "\n", "axs", "[", "0", "]", ".", "set_xscale", "(", "'log'", ")", "\n", "axs", "[", "0", "]", ".", "set_yscale", "(", "'log'", ")", "\n", "\n", "it", "=", "np", ".", "array", "(", "range", "(", "len", "(", "all_results_em_proj", "[", "l", "]", "[", "0", "]", ")", ")", ")", "\n", "axs", "[", "1", "]", ".", "plot", "(", "it", ",", "np", ".", "mean", "(", "all_results_em_not_proj", "[", "l", "]", ",", "0", ")", ")", "\n", "axs", "[", "1", "]", ".", "plot", "(", "it", ",", "np", ".", "mean", "(", "all_results_em_proj", "[", "l", "]", ",", "0", ")", ")", "\n", "axs", "[", "1", "]", ".", "set_xscale", "(", "'log'", ")", "\n", "axs", "[", "1", "]", ".", "set_yscale", "(", "'log'", ")", "\n", "\n", "", "axs", "[", "0", "]", ".", "legend", "(", "[", "'unprojected method of moments , '", "+", "r'$\\mathit{L}_{low}$=64'", ",", "\n", "'projected method of moments , '", "+", "r'$\\mathit{L}_{low}$=64'", ",", "\n", "'unprojected method of moments , '", "+", "r'$\\mathit{L}_{low}$=32'", ",", "\n", "'projected method of moments , '", "+", "r'$\\mathit{L}_{low}$=32'", ",", "\n", "'unprojected method of moments , '", "+", "r'$\\mathit{L}_{low}$=16'", ",", "\n", "'projected method of moments , '", "+", "r'$\\mathit{L}_{low}$=16'", ",", "\n", "'unprojected method of moments , '", "+", "r'$\\mathit{L}_{low}$=8'", ",", "\n", "'projected method of moments , '", "+", "r'$\\mathit{L}_{low}$=8'", "\n", "]", ",", "fontsize", "=", "8", ")", "\n", "axs", "[", "0", "]", ".", "set_xlabel", "(", "'iterations'", ",", "fontsize", "=", "16", ")", "\n", "axs", "[", "0", "]", ".", "set_ylabel", "(", "'mean error'", ",", "fontsize", "=", "16", ")", "\n", "axs", "[", "0", "]", ".", "set_xscale", "(", "'log'", ")", "\n", "axs", "[", "0", "]", ".", "set_yscale", "(", "'log'", ")", "\n", "axs", "[", "0", "]", ".", "yaxis", ".", "set_major_formatter", "(", "ticker", ".", "ScalarFormatter", "(", ")", ")", "\n", "\n", "axs", "[", "1", "]", ".", "legend", "(", "[", "'unprojected EM , '", "+", "r'$\\mathit{L}_{low}$=64'", ",", "'projected EM , '", "+", "r'$\\mathit{L}_{low}$=64'", ",", "\n", "'unprojected EM , '", "+", "r'$\\mathit{L}_{low}$=32'", ",", "'projected EM , '", "+", "r'$\\mathit{L}_{low}$=32'", ",", "\n", "'unprojected EM , '", "+", "r'$\\mathit{L}_{low}$=16'", ",", "'projected EM , '", "+", "r'$\\mathit{L}_{low}$=16'", ",", "\n", "'unprojected EM , '", "+", "r'$\\mathit{L}_{low}$=8'", ",", "'projected EM , '", "+", "r'$\\mathit{L}_{low}$=8'", "\n", "]", ",", "fontsize", "=", "8", ")", "\n", "axs", "[", "1", "]", ".", "set_xlabel", "(", "'iterations'", ",", "fontsize", "=", "16", ")", "\n", "axs", "[", "1", "]", ".", "set_ylabel", "(", "'mean error'", ",", "fontsize", "=", "16", ")", "\n", "axs", "[", "1", "]", ".", "set_xscale", "(", "'log'", ")", "\n", "axs", "[", "1", "]", ".", "set_yscale", "(", "'log'", ")", "\n", "yticks", "=", "np", ".", "array", "(", "[", "0.05", ",", "0.07", ",", "0.1", ",", "0.3", ",", "0.5", "]", ")", "\n", "axs", "[", "1", "]", ".", "set_yticks", "(", "yticks", ")", "\n", "axs", "[", "1", "]", ".", "yaxis", ".", "set_major_formatter", "(", "ticker", ".", "ScalarFormatter", "(", ")", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'figure_4.png'", ")", "\n", "\n", "\n", "# create figure #5", "\n", "os", ".", "mkdir", "(", "'fig_5_output'", ")", "\n", "l_list", "=", "[", "64", ",", "32", ",", "16", "]", "\n", "for", "file_name", "in", "[", "'lena.png'", ",", "'cameraman.png'", ",", "'fruits.png'", ",", "'cryo_em_img_1.png'", "]", ":", "\n", "        ", "str_name", "=", "str", "(", "file_name", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", ".", "replace", "(", "'-'", ",", "'m'", ")", "\n", "for", "l", "in", "l_list", ":", "\n", "            ", "res", "=", "np", ".", "load", "(", "'visual_output/proj_em_128_'", "+", "str", "(", "l", ")", "+", "'_'", "+", "str_name", "+", "\n", "'/final_res.npy'", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "plt", ".", "imsave", "(", "'fig_5_output/proj_em_128_'", "+", "str", "(", "l", ")", "+", "'_'", "+", "str_name", "+", "'.png'", ",", "\n", "res", "[", "'curr_shifted_image'", "]", ",", "cmap", "=", "'gray'", ")", "\n", "\n", "\n", "# create figure #6", "\n", "", "", "all_log_sigma", "=", "np", ".", "linspace", "(", "-", "3", ",", "3", ",", "20", ")", "\n", "error_per_sigma", "=", "np", ".", "zeros", "(", "len", "(", "all_log_sigma", ")", ")", "\n", "for", "l", "in", "range", "(", "len", "(", "all_log_sigma", ")", ")", ":", "\n", "        ", "str_name", "=", "str", "(", "round", "(", "all_log_sigma", "[", "l", "]", ",", "2", ")", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", ".", "replace", "(", "'-'", ",", "'m'", ")", "\n", "all_results", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "100", ")", ":", "\n", "            ", "res", "=", "np", ".", "load", "(", "'noise_influence/test_num_'", "+", "str", "(", "t", ")", "+", "'_noise_'", "+", "str_name", "+", "'_proj_MOM/eval_vec.npy'", ",", "\n", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "all_results", ".", "append", "(", "res", "[", "'error'", "]", "[", "-", "1", "]", ")", "\n", "", "error_per_sigma", "[", "l", "]", "=", "np", ".", "mean", "(", "all_results", ")", "\n", "\n", "", "img", "=", "Image", ".", "open", "(", "'lena.png'", ")", "\n", "L", "=", "32", "\n", "img", "=", "img", ".", "resize", "(", "(", "L", ",", "L", ")", ",", "Image", ".", "ANTIALIAS", ")", "\n", "img", "=", "np", ".", "array", "(", "img", ".", "getdata", "(", ")", ")", ".", "reshape", "(", "img", ".", "size", "[", "0", "]", ",", "img", ".", "size", "[", "1", "]", ")", "/", "255", "\n", "norm_img", "=", "np", ".", "linalg", ".", "norm", "(", "img", ")", "\n", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "axs", ".", "plot", "(", "(", "norm_img", "**", "2", ")", "/", "(", "(", "L", "*", "np", ".", "exp", "(", "all_log_sigma", ")", ")", "**", "2", ")", ",", "error_per_sigma", ",", "linewidth", "=", "3", ")", "\n", "axs", ".", "set_xlabel", "(", "'SNR'", ",", "fontsize", "=", "16", ")", "\n", "axs", ".", "set_ylabel", "(", "'mean error'", ",", "fontsize", "=", "16", ")", "\n", "axs", ".", "set_xscale", "(", "'log'", ")", "\n", "axs", ".", "set_yscale", "(", "'log'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'figure_6.png'", ")", "\n", "\n", "\n", "# create figure #7", "\n", "all_log_N", "=", "np", ".", "linspace", "(", "2", ",", "6", ",", "20", ")", "\n", "error_per_N", "=", "np", ".", "zeros", "(", "len", "(", "all_log_N", ")", ")", "\n", "for", "n", "in", "range", "(", "len", "(", "all_log_N", ")", ")", ":", "\n", "        ", "str_name", "=", "str", "(", "round", "(", "all_log_N", "[", "n", "]", ",", "2", ")", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", "\n", "all_results", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "100", ")", ":", "\n", "            ", "res", "=", "np", ".", "load", "(", "'N_influence/test_num_'", "+", "str", "(", "t", ")", "+", "'_N'", "+", "str_name", "+", "'_proj_MOM/eval_vec.npy'", ",", "\n", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "all_results", ".", "append", "(", "res", "[", "'error'", "]", "[", "-", "1", "]", ")", "\n", "", "error_per_N", "[", "n", "]", "=", "np", ".", "mean", "(", "all_results", ")", "\n", "\n", "", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "axs", ".", "plot", "(", "10", "**", "all_log_N", ",", "error_per_N", ",", "linewidth", "=", "3", ")", "\n", "axs", ".", "set_xlabel", "(", "'N'", ",", "fontsize", "=", "16", ")", "\n", "axs", ".", "set_ylabel", "(", "'mean error'", ",", "fontsize", "=", "16", ")", "\n", "axs", ".", "set_xscale", "(", "'log'", ")", "\n", "axs", ".", "set_yscale", "(", "'log'", ")", "\n", "yticks", "=", "[", "0.2", ",", "0.25", ",", "0.3", ",", "0.35", ",", "0.4", "]", "\n", "axs", ".", "set_yticks", "(", "yticks", ")", "\n", "axs", ".", "yaxis", ".", "set_major_formatter", "(", "ticker", ".", "LogFormatterSciNotation", "(", ")", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'figure_7.png'", ")", "\n", "\n", "\n", "# create figure #8", "\n", "all_it", "=", "[", "1", ",", "5", ",", "10", ",", "20", ",", "50", ",", "100", "]", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "for", "it", "in", "all_it", ":", "\n", "        ", "all_results", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "10", ")", ":", "\n", "            ", "res", "=", "np", ".", "load", "(", "'F_influence/test_num_'", "+", "str", "(", "t", ")", "+", "'_it_'", "+", "str", "(", "it", ")", "+", "'_proj_MOM/eval_vec.npy'", ",", "\n", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "all_results", ".", "append", "(", "res", "[", "'error'", "]", ")", "\n", "", "convergence_curve", "=", "np", ".", "mean", "(", "all_results", ",", "0", ")", "\n", "x", "=", "np", ".", "array", "(", "range", "(", "1", ",", "1", "+", "len", "(", "convergence_curve", ")", ")", ")", "\n", "axs", ".", "set_xscale", "(", "'log'", ")", "\n", "axs", ".", "set_yscale", "(", "'log'", ")", "\n", "axs", ".", "plot", "(", "x", ",", "convergence_curve", ",", "linewidth", "=", "2", ")", "\n", "", "axs", ".", "legend", "(", "[", "r'$\\mathit{F}=$'", "+", "str", "(", "x", ")", "for", "x", "in", "all_it", "]", ")", "\n", "axs", ".", "set_xlabel", "(", "'iterations'", ",", "fontsize", "=", "16", ")", "\n", "axs", ".", "set_ylabel", "(", "'mean error'", ",", "fontsize", "=", "16", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "'figure_8.png'", ")", "\n", "\n", "\n", "# plot table 1", "\n", "all_sigma", "=", "[", "0.125", ",", "0.25", ",", "0.5", "]", "\n", "all_N", "=", "[", "100", ",", "10000", "]", "\n", "scales", "=", "[", "(", "128", ",", "32", ")", ",", "(", "128", ",", "16", ")", ",", "(", "64", ",", "32", ")", "]", "\n", "\n", "for", "sigma", "in", "all_sigma", ":", "\n", "        ", "for", "N", "in", "all_N", ":", "\n", "            ", "for", "scale", "in", "scales", ":", "\n", "                ", "final_res", "=", "np", ".", "zeros", "(", "4", ")", "\n", "for", "t", "in", "range", "(", "num_trails", ")", ":", "\n", "                    ", "res_mom", "=", "np", ".", "load", "(", "'proj_mom_em_comparison/'", "+", "str", "(", "scale", "[", "0", "]", ")", "+", "'_'", "+", "str", "(", "scale", "[", "1", "]", ")", "+", "'_sigma_'", "+", "\n", "str", "(", "sigma", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", "+", "'_N_'", "+", "str", "(", "N", ")", "+", "'_t_'", "+", "str", "(", "t", ")", "+", "\n", "'_proj_MOM/eval_vec.npy'", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "res_em", "=", "np", ".", "load", "(", "'proj_mom_em_comparison/'", "+", "str", "(", "scale", "[", "0", "]", ")", "+", "'_'", "+", "str", "(", "scale", "[", "1", "]", ")", "+", "'_sigma_'", "+", "\n", "str", "(", "sigma", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", "+", "'_N_'", "+", "str", "(", "N", ")", "+", "'_t_'", "+", "str", "(", "t", ")", "+", "\n", "'_proj_EM/eval_vec.npy'", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "final_res", "[", "0", "]", "=", "final_res", "[", "0", "]", "+", "res_mom", "[", "'error'", "]", "[", "-", "1", "]", "\n", "final_res", "[", "1", "]", "=", "final_res", "[", "1", "]", "+", "res_em", "[", "'error'", "]", "[", "-", "1", "]", "\n", "final_res", "[", "2", "]", "=", "final_res", "[", "2", "]", "+", "res_mom", "[", "'process_time'", "]", "[", "-", "1", "]", "\n", "final_res", "[", "3", "]", "=", "final_res", "[", "3", "]", "+", "res_em", "[", "'process_time'", "]", "[", "-", "1", "]", "\n", "", "print", "(", "'sigma = '", "+", "str", "(", "sigma", ")", "+", "', N = '", "+", "str", "(", "N", ")", "+", "' scale = '", "+", "str", "(", "scale", "[", "0", "]", ")", "+", "'_'", "+", "str", "(", "scale", "[", "1", "]", ")", ")", "\n", "print", "(", "final_res", "/", "num_trails", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_7.Struct.__init__": [[39, 41], ["run_data_for_fig_7.Struct.__dict__.update"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "entries", ")", ":", "\n", "        ", "self", ".", "__dict__", ".", "update", "(", "entries", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_7.create_flags": [[7, 28], ["dict", "run_data_for_fig_7.Struct", "run_data_for_fig_7.convert_type", "x.split"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.convert_type"], ["def", "create_flags", "(", "args", ")", ":", "\n", "    ", "special_cases", "=", "{", "'bool_vars'", ":", "[", "'projected'", "]", ",", "\n", "'str_vars'", ":", "[", "'alg_option'", ",", "'name_exp'", "]", ",", "\n", "'float_vars'", ":", "[", "'lr'", ",", "'sigma'", "]", "}", "\n", "\n", "default_vals", "=", "{", "'gpu_num'", ":", "0", ",", "\n", "'lr'", ":", "0.01", ",", "\n", "'sigma'", ":", "0.1", ",", "\n", "'N'", ":", "[", "]", ",", "\n", "'alg_option'", ":", "'BFGS'", ",", "\n", "'iterations_number'", ":", "400", ",", "\n", "'projected'", ":", "False", ",", "\n", "'name_exp'", ":", "'tmp_name'", "}", "\n", "\n", "\n", "\n", "dict_flags", "=", "dict", "(", "[", "convert_type", "(", "x", ".", "split", "(", "'='", ")", ",", "special_cases", ")", "for", "x", "in", "args", "]", ")", "\n", "dict_flags", "=", "{", "**", "default_vals", ",", "**", "dict_flags", "}", "\n", "flags", "=", "Struct", "(", "**", "dict_flags", ")", "\n", "\n", "return", "flags", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_7.convert_type": [[29, 37], ["float", "int"], "function", ["None"], ["", "def", "convert_type", "(", "flag", ",", "special_cases", ")", ":", "\n", "    ", "if", "flag", "[", "0", "]", "in", "special_cases", "[", "'bool_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "flag", "[", "1", "]", "==", "'True'", "\n", "", "elif", "flag", "[", "0", "]", "in", "special_cases", "[", "'float_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "float", "(", "flag", "[", "1", "]", ")", "\n", "", "elif", "flag", "[", "0", "]", "not", "in", "special_cases", "[", "'str_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "int", "(", "flag", "[", "1", "]", ")", "\n", "", "return", "flag", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_7.main": [[42, 60], ["run_data_for_fig_7.create_flags", "os.mkdir", "numpy.linspace", "range", "int", "str().replace", "run_MoM.run_MoM", "str", "round", "str"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.create_flags", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.run_MoM"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "given_seed", "=", "26723683", "\n", "flags", "=", "create_flags", "(", "sys", ".", "argv", "[", "1", ":", "]", ")", "\n", "\n", "flags", ".", "image_path", "=", "'lena.png'", "\n", "\n", "os", ".", "mkdir", "(", "flags", ".", "name_exp", ")", "\n", "global_name_exp", "=", "flags", ".", "name_exp", "+", "'/'", "\n", "\n", "\n", "all_log_N", "=", "np", ".", "linspace", "(", "2", ",", "6", ",", "20", ")", "\n", "\n", "for", "test", "in", "range", "(", "100", ")", ":", "\n", "        ", "for", "curr_N_times", "in", "all_log_N", ":", "\n", "            ", "flags", ".", "N", "=", "int", "(", "10", "**", "curr_N_times", ")", "\n", "str_name", "=", "str", "(", "round", "(", "curr_N_times", ",", "2", ")", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", "\n", "flags", ".", "name_exp", "=", "global_name_exp", "+", "'test_num_'", "+", "str", "(", "test", ")", "+", "'_N'", "+", "str_name", "+", "'_proj_MOM'", "\n", "run_MoM", ".", "run_MoM", "(", "flags", ",", "given_seed", "+", "test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.define_optimization_alg": [[12, 27], ["torch.optim.SGD", "torch.optim.LBFGS"], "function", ["None"], ["def", "define_optimization_alg", "(", "alg_option", ",", "x", ",", "rho_1", ",", "rho_2", ",", "lr", "=", "0.01", ")", ":", "\n", "    ", "\"\"\"\n    Define optimization algorithm according to alg_option given by the user\n    :param alg_option: Desired optimization method\n    :param x: Image estimation\n    :param rho_1: Desired horizontal distribution\n    :param rho_2: Desired vertical distribution\n    :param lr: Learning rate (relevant to gradient-descent)\n    :return: Torch optimization function\n    \"\"\"", "\n", "if", "alg_option", "==", "'GD'", ":", "\n", "        ", "opt", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "x", ",", "rho_1", ",", "rho_2", "]", ",", "lr", ")", "\n", "", "else", ":", "\n", "        ", "opt", "=", "torch", ".", "optim", ".", "LBFGS", "(", "[", "x", ",", "rho_1", ",", "rho_2", "]", ",", "line_search_fn", "=", "'strong_wolfe'", ")", "\n", "", "return", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.objective": [[29, 49], ["general_utils.normalize_rho_vector", "torch.matmul", "torch.sum", "torch.matmul", "torch.sum", "torch.square", "torch.transpose", "torch.square", "torch.mul", "general_utils.normalize_rho_vector.repeat"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.normalize_rho_vector"], ["", "def", "objective", "(", "x", ",", "rho_1", ",", "rho_2", ",", "mu1", ",", "mu2", ",", "model_lambda", ",", "bccb_ind_mat", ")", ":", "\n", "    ", "\"\"\"\n    Determine the objective function of the optimization process\n    :param x: Current estimation of the image\n    :param rho_1: Current estimation of the horizontal distribution\n    :param rho_2: Current estimation of the vertical distribution\n    :param mu1: first observed moment\n    :param mu2: second observed moment\n    :param model_lambda: Scales the penalty of first and second moments fidelity\n    :param bccb_ind_mat: The indexes of the BCCB matrix\n    :return: Loss value\n    \"\"\"", "\n", "norm_rho", "=", "general_utils", ".", "normalize_rho_vector", "(", "rho_1", ",", "rho_2", ")", "\n", "C_X", "=", "x", "[", "bccb_ind_mat", "]", "\n", "elem_1", "=", "torch", ".", "matmul", "(", "C_X", ",", "norm_rho", ")", "\n", "part_1", "=", "torch", ".", "sum", "(", "torch", ".", "square", "(", "elem_1", "-", "mu1", ")", ")", "\n", "elem_2", "=", "torch", ".", "matmul", "(", "C_X", ",", "torch", ".", "transpose", "(", "torch", ".", "mul", "(", "norm_rho", ".", "repeat", "(", "C_X", ".", "shape", "[", "0", "]", ",", "1", ")", ",", "C_X", ")", ",", "0", ",", "1", ")", ")", "\n", "part_2", "=", "torch", ".", "sum", "(", "torch", ".", "square", "(", "elem_2", "-", "mu2", ")", ")", "\n", "obj_val", "=", "part_1", "+", "model_lambda", "*", "part_2", "\n", "return", "obj_val", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.execute_matching": [[51, 124], ["run_MoM.define_optimization_alg", "time.time", "rho_1.size", "rho_2.size", "define_optimization_alg.zero_grad", "run_MoM.objective", "objective.backward", "range", "range", "define_optimization_alg.step", "run_MoM.objective", "print", "loss.extend", "general_utils.evaluate_data", "error.extend", "process_time.extend", "numpy.save", "numpy.save", "int", "range", "torch.transpose", "max", "print", "bm3d.bm3d", "torch.autograd.Variable", "run_MoM.define_optimization_alg", "torch.autograd.Variable.cpu().detach().numpy", "rho_1.cpu().detach().numpy", "rho_2.cpu().detach().numpy", "rolled_img.cpu().detach().numpy", "define_optimization_alg.step", "run_MoM.objective", "print", "loss.extend", "general_utils.evaluate_data", "error.extend", "process_time.extend", "numpy.save", "numpy.save", "torch.reshape", "numpy.atleast_3d", "torch.FloatTensor().to", "objective.item", "objective.item", "len", "len", "torch.autograd.Variable.cpu().detach().numpy", "rho_1.cpu().detach().numpy", "rho_2.cpu().detach().numpy", "rolled_img.cpu().detach().numpy", "str", "torch.transpose.cpu().detach().numpy", "time.time", "torch.autograd.Variable.cpu().detach", "rho_1.cpu().detach", "rho_2.cpu().detach", "rolled_img.cpu().detach", "set", "objective.item", "objective.item", "torch.FloatTensor", "time.time", "torch.autograd.Variable.cpu().detach", "rho_1.cpu().detach", "rho_2.cpu().detach", "rolled_img.cpu().detach", "torch.transpose.cpu().detach", "numpy.transpose().flatten", "torch.autograd.Variable.cpu", "rho_1.cpu", "rho_2.cpu", "rolled_img.cpu", "torch.autograd.Variable.cpu", "rho_1.cpu", "rho_2.cpu", "rolled_img.cpu", "torch.transpose.cpu", "numpy.transpose"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.define_optimization_alg", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.objective", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.objective", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.evaluate_data", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.define_optimization_alg", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.objective", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.evaluate_data"], ["", "def", "execute_matching", "(", "device", ",", "img", ",", "mu1", ",", "mu2", ",", "bccb_ind_mat", ",", "x", ",", "rho_1", ",", "rho_2", ",", "lr", ",", "model_lambda", ",", "projected", ",", "\n", "iterations_number", ",", "name_exp", ",", "iterations_per_round", ")", ":", "\n", "    ", "\"\"\"\n    Perform matching between the observed moments and the images and distributions\n    :param device: The torch process device\n    :param img: Original image\n    :param mu1: first observed moment\n    :param mu2: second observed moment\n    :param bccb_ind_mat: The indexes of the BCCB matrix\n    :param x: Current estimation of the image\n    :param rho_1: Current estimation of the horizontal distribution\n    :param rho_2: Current estimation of the vertical distribution\n    :param lr: Learning rate\n    :param model_lambda: Scales the penalty of first and second moments fidelity\n    :param projected: Boolean determine if running the projected version\n    :param iterations_number: Max number of iterations\n    :param name_exp: Name of output directory\n    :param iterations_per_round: number of iterations between projections\n    :return: None\n    \"\"\"", "\n", "H", "=", "rho_1", ".", "size", "(", ")", "[", "0", "]", "\n", "W", "=", "rho_2", ".", "size", "(", ")", "[", "1", "]", "\n", "opt", "=", "define_optimization_alg", "(", "'BFGS'", ",", "x", ",", "rho_1", ",", "rho_2", ",", "lr", ")", "\n", "loss", ",", "error", ",", "process_time", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n", "def", "closure", "(", ")", ":", "\n", "        ", "opt", ".", "zero_grad", "(", ")", "\n", "obj", "=", "objective", "(", "x", ",", "rho_1", ",", "rho_2", ",", "mu1", ",", "mu2", ",", "model_lambda", ",", "bccb_ind_mat", ")", "\n", "obj", ".", "backward", "(", ")", "\n", "return", "obj", "\n", "\n", "", "if", "not", "projected", ":", "\n", "        ", "for", "i", "in", "range", "(", "iterations_number", ")", ":", "\n", "            ", "opt", ".", "step", "(", "closure", ")", "\n", "obj", "=", "objective", "(", "x", ",", "rho_1", ",", "rho_2", ",", "mu1", ",", "mu2", ",", "model_lambda", ",", "bccb_ind_mat", ")", "\n", "print", "(", "\"Objective: %.10f\"", "%", "obj", ".", "item", "(", ")", ")", "\n", "loss", ".", "extend", "(", "[", "obj", ".", "item", "(", ")", "]", ")", "\n", "rolled_img", ",", "curr_error", "=", "general_utils", ".", "evaluate_data", "(", "device", ",", "x", ",", "H", ",", "W", ",", "img", ")", "\n", "error", ".", "extend", "(", "[", "curr_error", "]", ")", "\n", "process_time", ".", "extend", "(", "[", "time", ".", "time", "(", ")", "-", "t0", "]", ")", "\n", "curr_data", "=", "{", "'loss'", ":", "loss", ",", "'error'", ":", "error", ",", "'curr_x'", ":", "x", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "\n", "'curr_rho_1'", ":", "rho_1", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "'curr_rho_2'", ":", "rho_2", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "\n", "'curr_shifted_image'", ":", "rolled_img", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "}", "\n", "\n", "np", ".", "save", "(", "name_exp", "+", "'/eval_vec.npy'", ",", "{", "'loss'", ":", "loss", ",", "'error'", ":", "error", ",", "'process_time'", ":", "process_time", "}", ")", "\n", "np", ".", "save", "(", "name_exp", "+", "'/final_res.npy'", ",", "curr_data", ")", "\n", "if", "len", "(", "curr_data", "[", "'loss'", "]", ")", ">", "100", "and", "len", "(", "set", "(", "curr_data", "[", "'loss'", "]", "[", "-", "100", ":", "]", ")", ")", "==", "1", ":", "\n", "                ", "break", "\n", "", "", "", "else", ":", "\n", "        ", "for", "i", "in", "range", "(", "int", "(", "iterations_number", "/", "iterations_per_round", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "iterations_per_round", ")", ":", "\n", "                ", "opt", ".", "step", "(", "closure", ")", "\n", "obj", "=", "objective", "(", "x", ",", "rho_1", ",", "rho_2", ",", "mu1", ",", "mu2", ",", "model_lambda", ",", "bccb_ind_mat", ")", "\n", "print", "(", "\"Objective: %.10f\"", "%", "obj", ".", "item", "(", ")", ")", "\n", "loss", ".", "extend", "(", "[", "obj", ".", "item", "(", ")", "]", ")", "\n", "rolled_img", ",", "curr_error", "=", "general_utils", ".", "evaluate_data", "(", "device", ",", "x", ",", "H", ",", "W", ",", "img", ")", "\n", "error", ".", "extend", "(", "[", "curr_error", "]", ")", "\n", "process_time", ".", "extend", "(", "[", "time", ".", "time", "(", ")", "-", "t0", "]", ")", "\n", "curr_data", "=", "{", "'loss'", ":", "loss", ",", "'error'", ":", "error", ",", "'curr_x'", ":", "x", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "\n", "'curr_rho_1'", ":", "rho_1", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "'curr_rho_2'", ":", "rho_2", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "\n", "'curr_shifted_image'", ":", "rolled_img", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "'process_time'", ":", "process_time", "}", "\n", "\n", "np", ".", "save", "(", "name_exp", "+", "'/eval_vec.npy'", ",", "{", "'loss'", ":", "loss", ",", "'error'", ":", "error", ",", "'process_time'", ":", "process_time", "}", ")", "\n", "np", ".", "save", "(", "name_exp", "+", "'/final_res.npy'", ",", "curr_data", ")", "\n", "\n", "", "y", "=", "torch", ".", "transpose", "(", "torch", ".", "reshape", "(", "x", ",", "[", "H", ",", "W", "]", ")", ",", "0", ",", "1", ")", "\n", "chosen_den", "=", "max", "(", "2", "**", "(", "-", "0.1", "*", "i", ")", ",", "0.02", ")", "\n", "print", "(", "'used den - '", "+", "str", "(", "chosen_den", ")", ")", "\n", "y_clean", "=", "bm3d", "(", "np", ".", "atleast_3d", "(", "y", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", ",", "chosen_den", ")", "\n", "\n", "x", "=", "Variable", "(", "torch", ".", "FloatTensor", "(", "np", ".", "transpose", "(", "y_clean", ")", ".", "flatten", "(", ")", ")", ".", "to", "(", "device", ")", ",", "requires_grad", "=", "True", ")", "\n", "opt", "=", "define_optimization_alg", "(", "'BFGS'", ",", "x", ",", "rho_1", ",", "rho_2", ",", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.run_MoM": [[125, 176], ["numpy.random.seed", "torch.manual_seed", "torch.use_deterministic_algorithms", "general_utils.update_device", "os.mkdir", "time.time", "PIL.Image.open().convert", "torch.FloatTensor().to.resize", "numpy.random.rand", "numpy.random.rand", "numpy.save", "torch.FloatTensor().to", "general_utils.calculate_moments", "time.time", "numpy.save", "numpy.random.rand", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "run_MoM.execute_matching", "numpy.array().reshape", "numpy.sum", "numpy.sum", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "PIL.Image.open", "torch.FloatTensor", "mu1.detach().cpu().numpy", "mu2.detach().cpu().numpy", "numpy.mean", "numpy.random.rand", "numpy.random.rand", "torch.autograd.Variable.size", "numpy.array", "numpy.mean", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor().to.getdata", "mu1.detach().cpu", "mu2.detach().cpu", "mu1.cpu().numpy", "mu1.detach", "mu2.detach", "mu1.cpu"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.update_device", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.calculate_moments", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.execute_matching"], ["", "", "", "def", "run_MoM", "(", "flags", ",", "given_seed", ")", ":", "\n", "    ", "\"\"\"\n    Execute MoM optimization\n    :param flags: Execution parameters\n    :param given_seed: Desired seed given to numpy and torch\n    :return: None\n    \"\"\"", "\n", "np", ".", "random", ".", "seed", "(", "given_seed", ")", "\n", "torch", ".", "manual_seed", "(", "given_seed", ")", "\n", "torch", ".", "use_deterministic_algorithms", "(", "True", ")", "\n", "os", ".", "environ", "[", "\"CUBLAS_WORKSPACE_CONFIG\"", "]", "=", "\":4096:8\"", "\n", "\n", "device", "=", "general_utils", ".", "update_device", "(", "flags", ".", "gpu_num", ")", "\n", "os", ".", "mkdir", "(", "flags", ".", "name_exp", ")", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n", "# load data", "\n", "Lh", "=", "flags", ".", "high_res", "\n", "\n", "img", "=", "Image", ".", "open", "(", "flags", ".", "image_path", ")", ".", "convert", "(", "'L'", ")", "\n", "img", "=", "img", ".", "resize", "(", "(", "Lh", ",", "Lh", ")", ",", "Image", ".", "ANTIALIAS", ")", "\n", "img", "=", "np", ".", "array", "(", "img", ".", "getdata", "(", ")", ")", ".", "reshape", "(", "Lh", ",", "Lh", ")", "/", "255", "\n", "\n", "# generate random rho vectors", "\n", "real_rho_1", "=", "np", ".", "random", ".", "rand", "(", "Lh", ",", "1", ")", "\n", "real_rho_2", "=", "np", ".", "random", ".", "rand", "(", "1", ",", "Lh", ")", "\n", "real_rho_1", "=", "real_rho_1", "/", "np", ".", "sum", "(", "real_rho_1", ")", "\n", "real_rho_2", "=", "real_rho_2", "/", "np", ".", "sum", "(", "real_rho_2", ")", "\n", "np", ".", "save", "(", "flags", ".", "name_exp", "+", "'/real_vars.npy'", ",", "{", "'real_rho_1'", ":", "real_rho_1", ",", "'real_rho_2'", ":", "real_rho_2", ",", "'img'", ":", "img", "}", ")", "\n", "img", "=", "torch", ".", "FloatTensor", "(", "img", ")", ".", "to", "(", "device", ")", "\n", "\n", "# calculate moments", "\n", "mu1", ",", "mu2", ",", "bccb_ind_mat", "=", "general_utils", ".", "calculate_moments", "(", "device", ",", "flags", ".", "sigma", ",", "img", ",", "real_rho_1", ",", "real_rho_2", ",", "\n", "flags", ".", "high_res", ",", "flags", ".", "low_res", ",", "flags", ".", "N", ")", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "np", ".", "save", "(", "flags", ".", "name_exp", "+", "'/moments.npy'", ",", "{", "'mu1'", ":", "mu1", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "'mu2'", ":", "mu2", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "\n", "'time'", ":", "t1", "-", "t0", "}", ")", "\n", "\n", "# initial vars", "\n", "initial_start", "=", "np", ".", "random", ".", "rand", "(", "Lh", "*", "Lh", ")", "\n", "initial_start_x", "=", "initial_start", "*", "(", "2", "*", "np", ".", "mean", "(", "mu1", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "/", "np", ".", "mean", "(", "initial_start", ")", ")", "\n", "initial_start_rho_1", "=", "6", "*", "np", ".", "random", ".", "rand", "(", "Lh", ",", "1", ")", "-", "3", "\n", "initial_start_rho_2", "=", "6", "*", "np", ".", "random", ".", "rand", "(", "1", ",", "Lh", ")", "-", "3", "\n", "x", "=", "Variable", "(", "torch", ".", "FloatTensor", "(", "initial_start_x", ")", ".", "to", "(", "device", ")", ",", "requires_grad", "=", "True", ")", "\n", "rho_1", "=", "Variable", "(", "torch", ".", "FloatTensor", "(", "initial_start_rho_1", ")", ".", "to", "(", "device", ")", ",", "requires_grad", "=", "True", ")", "\n", "rho_2", "=", "Variable", "(", "torch", ".", "FloatTensor", "(", "initial_start_rho_2", ")", ".", "to", "(", "device", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n", "model_lambda", "=", "1", "/", "(", "x", ".", "size", "(", "0", ")", "*", "(", "1", "+", "flags", ".", "sigma", "**", "2", ")", ")", "\n", "execute_matching", "(", "device", ",", "img", ",", "mu1", ",", "mu2", ",", "bccb_ind_mat", ",", "x", ",", "rho_1", ",", "rho_2", ",", "flags", ".", "lr", ",", "model_lambda", ",", "flags", ".", "projected", ",", "\n", "flags", ".", "iterations_number", ",", "flags", ".", "name_exp", ",", "flags", ".", "iterations_per_round", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_6.Struct.__init__": [[40, 42], ["run_data_for_fig_6.Struct.__dict__.update"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "entries", ")", ":", "\n", "        ", "self", ".", "__dict__", ".", "update", "(", "entries", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_6.create_flags": [[8, 29], ["dict", "run_data_for_fig_6.Struct", "run_data_for_fig_6.convert_type", "x.split"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.convert_type"], ["def", "create_flags", "(", "args", ")", ":", "\n", "    ", "special_cases", "=", "{", "'bool_vars'", ":", "[", "'projected'", "]", ",", "\n", "'str_vars'", ":", "[", "'alg_option'", ",", "'name_exp'", "]", ",", "\n", "'float_vars'", ":", "[", "'lr'", ",", "'sigma'", "]", "}", "\n", "\n", "default_vals", "=", "{", "'gpu_num'", ":", "0", ",", "\n", "'lr'", ":", "0.01", ",", "\n", "'sigma'", ":", "0.1", ",", "\n", "'N'", ":", "[", "]", ",", "\n", "'alg_option'", ":", "'BFGS'", ",", "\n", "'iterations_number'", ":", "400", ",", "\n", "'projected'", ":", "False", ",", "\n", "'name_exp'", ":", "'tmp_name'", "}", "\n", "\n", "\n", "\n", "dict_flags", "=", "dict", "(", "[", "convert_type", "(", "x", ".", "split", "(", "'='", ")", ",", "special_cases", ")", "for", "x", "in", "args", "]", ")", "\n", "dict_flags", "=", "{", "**", "default_vals", ",", "**", "dict_flags", "}", "\n", "flags", "=", "Struct", "(", "**", "dict_flags", ")", "\n", "\n", "return", "flags", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_6.convert_type": [[30, 38], ["float", "int"], "function", ["None"], ["", "def", "convert_type", "(", "flag", ",", "special_cases", ")", ":", "\n", "    ", "if", "flag", "[", "0", "]", "in", "special_cases", "[", "'bool_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "flag", "[", "1", "]", "==", "'True'", "\n", "", "elif", "flag", "[", "0", "]", "in", "special_cases", "[", "'float_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "float", "(", "flag", "[", "1", "]", ")", "\n", "", "elif", "flag", "[", "0", "]", "not", "in", "special_cases", "[", "'str_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "int", "(", "flag", "[", "1", "]", ")", "\n", "", "return", "flag", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_6.main": [[43, 61], ["run_data_for_fig_6.create_flags", "os.mkdir", "numpy.linspace", "range", "numpy.exp", "str().replace().replace", "run_MoM.run_MoM", "str().replace", "str", "str", "round"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.create_flags", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.run_MoM"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "given_seed", "=", "26723683", "\n", "flags", "=", "create_flags", "(", "sys", ".", "argv", "[", "1", ":", "]", ")", "\n", "\n", "flags", ".", "image_path", "=", "'lena.png'", "\n", "\n", "os", ".", "mkdir", "(", "flags", ".", "name_exp", ")", "\n", "global_name_exp", "=", "flags", ".", "name_exp", "+", "'/'", "\n", "\n", "\n", "all_log_sigma", "=", "np", ".", "linspace", "(", "-", "3", ",", "3", ",", "20", ")", "\n", "\n", "for", "test", "in", "range", "(", "100", ")", ":", "\n", "        ", "for", "curr_log_sigma", "in", "all_log_sigma", ":", "\n", "            ", "flags", ".", "sigma", "=", "np", ".", "exp", "(", "curr_log_sigma", ")", "\n", "str_name", "=", "str", "(", "round", "(", "curr_log_sigma", ",", "2", ")", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", ".", "replace", "(", "'-'", ",", "'m'", ")", "\n", "flags", ".", "name_exp", "=", "global_name_exp", "+", "'test_num_'", "+", "str", "(", "test", ")", "+", "'_noise_'", "+", "str_name", "+", "'_proj_MOM'", "\n", "run_MoM", ".", "run_MoM", "(", "flags", ",", "given_seed", "+", "test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_2_5.Struct.__init__": [[39, 41], ["run_data_for_fig_2_5.Struct.__dict__.update"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "entries", ")", ":", "\n", "        ", "self", ".", "__dict__", ".", "update", "(", "entries", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_2_5.create_flags": [[7, 28], ["dict", "run_data_for_fig_2_5.Struct", "run_data_for_fig_2_5.convert_type", "x.split"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.convert_type"], ["def", "create_flags", "(", "args", ")", ":", "\n", "    ", "special_cases", "=", "{", "'bool_vars'", ":", "[", "'projected'", "]", ",", "\n", "'str_vars'", ":", "[", "'alg_option'", ",", "'name_exp'", "]", ",", "\n", "'float_vars'", ":", "[", "'lr'", ",", "'sigma'", "]", "}", "\n", "\n", "default_vals", "=", "{", "'gpu_num'", ":", "0", ",", "\n", "'lr'", ":", "0.01", ",", "\n", "'sigma'", ":", "0.1", ",", "\n", "'N'", ":", "[", "]", ",", "\n", "'alg_option'", ":", "'BFGS'", ",", "\n", "'iterations_number'", ":", "400", ",", "\n", "'projected'", ":", "False", ",", "\n", "'name_exp'", ":", "'tmp_name'", "}", "\n", "\n", "dict_flags", "=", "dict", "(", "[", "convert_type", "(", "x", ".", "split", "(", "'='", ")", ",", "special_cases", ")", "for", "x", "in", "args", "]", ")", "\n", "dict_flags", "=", "{", "**", "default_vals", ",", "**", "dict_flags", "}", "\n", "flags", "=", "Struct", "(", "**", "dict_flags", ")", "\n", "\n", "assert", "flags", ".", "alg_option", "in", "[", "'GD'", ",", "'BFGS'", "]", ",", "\"wrong optimization algorithm\"", "\n", "\n", "return", "flags", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_2_5.convert_type": [[29, 37], ["float", "int"], "function", ["None"], ["", "def", "convert_type", "(", "flag", ",", "special_cases", ")", ":", "\n", "    ", "if", "flag", "[", "0", "]", "in", "special_cases", "[", "'bool_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "flag", "[", "1", "]", "==", "'True'", "\n", "", "elif", "flag", "[", "0", "]", "in", "special_cases", "[", "'float_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "float", "(", "flag", "[", "1", "]", ")", "\n", "", "elif", "flag", "[", "0", "]", "not", "in", "special_cases", "[", "'str_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "int", "(", "flag", "[", "1", "]", ")", "\n", "", "return", "flag", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_2_5.main": [[42, 90], ["run_data_for_fig_2_5.create_flags", "os.mkdir", "str().replace().replace", "run_EM.run_EM", "run_MoM.run_MoM", "run_MoM.run_MoM", "run_EM.run_EM", "str().replace", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.create_flags", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_EM.run_EM", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.run_MoM", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.run_MoM", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_EM.run_EM"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "given_seed", "=", "26723683", "\n", "flags", "=", "create_flags", "(", "sys", ".", "argv", "[", "1", ":", "]", ")", "\n", "\n", "\n", "os", ".", "mkdir", "(", "flags", ".", "name_exp", ")", "\n", "global_name_exp", "=", "flags", ".", "name_exp", "+", "'/'", "\n", "\n", "images_dir", "=", "''", "\n", "images", "=", "[", "'lena.png'", ",", "'cameraman.png'", ",", "'fruits.png'", ",", "'cryo_em_img_1.png'", "]", "\n", "scales", "=", "[", "(", "128", ",", "64", ")", ",", "(", "128", ",", "32", ")", ",", "(", "128", ",", "16", ")", "]", "\n", "\n", "for", "scale", "in", "scales", ":", "\n", "        ", "flags", ".", "high_res", "=", "scale", "[", "0", "]", "\n", "flags", ".", "low_res", "=", "scale", "[", "1", "]", "\n", "\n", "for", "file_name", "in", "images", ":", "\n", "            ", "flags", ".", "image_path", "=", "images_dir", "+", "file_name", "\n", "str_name", "=", "str", "(", "file_name", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", ".", "replace", "(", "'-'", ",", "'m'", ")", "\n", "\n", "given_seed", "=", "26723631", "\n", "flags", ".", "sigma", "=", "0.125", "\n", "flags", ".", "N", "=", "[", "]", "\n", "flags", ".", "iterations_number", "=", "400", "\n", "\n", "\n", "if", "scale", "[", "1", "]", "==", "64", ":", "\n", "                ", "flags", ".", "projected", "=", "True", "\n", "flags", ".", "name_exp", "=", "global_name_exp", "+", "'proj_mom_'", "+", "str", "(", "scale", "[", "0", "]", ")", "+", "'_'", "+", "str", "(", "scale", "[", "1", "]", ")", "+", "'_'", "+", "str_name", "\n", "run_MoM", ".", "run_MoM", "(", "flags", ",", "given_seed", ")", "\n", "\n", "flags", ".", "projected", "=", "False", "\n", "flags", ".", "name_exp", "=", "global_name_exp", "+", "'not_proj_mom_'", "+", "str", "(", "scale", "[", "0", "]", ")", "+", "'_'", "+", "str", "(", "scale", "[", "1", "]", ")", "+", "'_'", "+", "str_name", "\n", "run_MoM", ".", "run_MoM", "(", "flags", ",", "given_seed", ")", "\n", "\n", "", "given_seed", "=", "26723631", "\n", "flags", ".", "sigma", "=", "0.125", "\n", "flags", ".", "N", "=", "10000", "\n", "flags", ".", "iterations_number", "=", "100", "\n", "\n", "flags", ".", "projected", "=", "True", "\n", "flags", ".", "name_exp", "=", "global_name_exp", "+", "'proj_em_'", "+", "str", "(", "scale", "[", "0", "]", ")", "+", "'_'", "+", "str", "(", "scale", "[", "1", "]", ")", "+", "'_'", "+", "str_name", "\n", "run_EM", ".", "run_EM", "(", "flags", ",", "given_seed", ")", "\n", "\n", "if", "scale", "[", "1", "]", "==", "64", ":", "\n", "                ", "flags", ".", "projected", "=", "False", "\n", "flags", ".", "name_exp", "=", "global_name_exp", "+", "'not_proj_em_'", "+", "str", "(", "scale", "[", "0", "]", ")", "+", "'_'", "+", "str", "(", "scale", "[", "1", "]", ")", "+", "'_'", "+", "str_name", "\n", "run_EM", ".", "run_EM", "(", "flags", ",", "given_seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_EM.Struct.__init__": [[85, 87], ["run_EM.Struct.__dict__.update"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "entries", ")", ":", "\n", "        ", "self", ".", "__dict__", ".", "update", "(", "entries", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_EM.SR_EM_iteration": [[12, 82], ["int", "torch.zeros().to", "torch.zeros().to", "int", "int", "general_utils.index_matrix_for_bccb", "general_utils.update_SR_model().to", "torch.zeros", "range", "torch.mean().to", "torch.diag", "numpy.sqrt", "numpy.ceil", "torch.zeros().to", "range", "torch.sum", "torch.sum", "range", "torch.matmul", "torch.zeros", "torch.zeros", "general_utils.update_SR_model", "range", "torch.exp", "torch.log", "torch.mul", "torch.sum", "range", "torch.sum", "torch.sum", "torch.mean", "torch.pinverse", "torch.zeros().to.unsqueeze", "int", "torch.zeros", "torch.transpose", "torch.sum", "torch.transpose().to", "torch.abs", "torch.remainder().to", "torch.transpose().flatten", "torch.exp", "torch.unsqueeze().repeat", "torch.sum", "torch.fft.ifft2().to", "torch.transpose().flatten", "x_est[].reshape", "torch.fft.ifft2().to", "torch.transpose", "torch.remainder", "torch.transpose", "torch.unsqueeze", "torch.fft.ifft2", "torch.transpose", "int", "int", "torch.transpose", "torch.fft.ifft2", "[].max", "torch.mul().cpu", "torch.flip", "torch.fft.fft2().repeat", "torch.mul().cpu", "torch.arange", "torch.remainder().to.repeat", "torch.remainder().to.repeat_interleave", "torch.arange", "torch.arange", "torch.roll", "int", "int", "torch.mul", "torch.abs", "torch.fft.fft2", "torch.mul", "torch.zeros().to.max", "torch.fft.fft2().to", "torch.conj", "torch.sum", "torch.transpose.cpu", "torch.conj", "int", "int", "torch.fft.fft2", "[].cpu", "torch.arange", "torch.arange"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.index_matrix_for_bccb", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.update_SR_model"], ["def", "SR_EM_iteration", "(", "device", ",", "x_est", ",", "rho_est", ",", "data_sum", ",", "fft_data", ",", "sigma", ",", "K", ")", ":", "\n", "    ", "\"\"\"\n    Execute one EM iteration\n    :param device: The torch process device\n    :param x_est: Current estimation of the image\n    :param rho_est: Current estimation of the joint distribution\n    :param data_sum: observations norm\n    :param fft_data: fft of the data\n    :param sigma: noise level\n    :param K: Original and observed resolution ration\n    :return: Updated estimation of the image and its likelihood\n    \"\"\"", "\n", "M", "=", "x_est", ".", "shape", "[", "0", "]", "\n", "m", "=", "int", "(", "np", ".", "sqrt", "(", "M", ")", ")", "\n", "\n", "aa", "=", "torch", ".", "zeros", "(", "M", ")", ".", "to", "(", "device", ")", "\n", "bb", "=", "torch", ".", "zeros", "(", "M", ")", ".", "to", "(", "device", ")", "\n", "\n", "split_val", "=", "int", "(", "np", ".", "ceil", "(", "data_sum", ".", "shape", "[", "0", "]", "/", "1000", ")", ")", "\n", "N", "=", "int", "(", "data_sum", ".", "shape", "[", "0", "]", "/", "split_val", ")", "\n", "bccb_ind_mat", "=", "general_utils", ".", "index_matrix_for_bccb", "(", "m", ",", "m", ")", "\n", "bccb_ind_mat", "=", "general_utils", ".", "update_SR_model", "(", "m", ",", "int", "(", "m", "/", "(", "K", "**", "1", ")", ")", ",", "bccb_ind_mat", ")", ".", "to", "(", "device", ")", "\n", "\n", "W_mean", "=", "torch", ".", "zeros", "(", "m", ",", "m", ",", "split_val", ")", "\n", "for", "nn", "in", "range", "(", "split_val", ")", ":", "\n", "        ", "TT", "=", "torch", ".", "zeros", "(", "m", ",", "m", ",", "N", ")", ".", "to", "(", "device", ")", "\n", "curr_fft", "=", "fft_data", "[", ":", ",", ":", ",", "(", "nn", "*", "N", ")", ":", "(", "(", "nn", "+", "1", ")", "*", "N", ")", "]", "\n", "curr_sum", "=", "data_sum", "[", "(", "nn", "*", "N", ")", ":", "(", "(", "nn", "+", "1", ")", "*", "N", ")", "]", "\n", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "K", ")", ":", "\n", "                ", "xk", "=", "torch", ".", "transpose", "(", "x_est", "[", "bccb_ind_mat", "[", ":", ",", "j", "*", "m", "+", "i", "]", "]", ".", "reshape", "(", "(", "int", "(", "m", "/", "K", ")", ",", "int", "(", "m", "/", "K", ")", ")", ")", ",", "0", ",", "1", ")", "\n", "est_sum", "=", "torch", ".", "sum", "(", "xk", "**", "2", ")", "\n", "\n", "fft_est", "=", "torch", ".", "transpose", "(", "torch", ".", "transpose", "(", "torch", ".", "fft", ".", "fft2", "(", "xk", ".", "cpu", "(", ")", ")", ".", "repeat", "(", "N", ",", "1", ",", "1", ")", ",", "0", ",", "1", ")", ",", "1", ",", "2", ")", ".", "to", "(", "\n", "device", ")", "\n", "CC", "=", "torch", ".", "abs", "(", "\n", "torch", ".", "fft", ".", "ifft2", "(", "torch", ".", "mul", "(", "fft_est", ",", "torch", ".", "conj", "(", "curr_fft", ")", ")", ".", "cpu", "(", ")", ",", "dim", "=", "(", "0", ",", "1", ")", ")", ".", "to", "(", "device", ")", ")", "\n", "\n", "tmp_vec", "=", "torch", ".", "remainder", "(", "-", "torch", ".", "arange", "(", "0", ",", "m", ",", "K", ")", ",", "m", ")", ".", "to", "(", "device", ")", "\n", "TT", "[", "i", "+", "tmp_vec", ".", "repeat", "(", "int", "(", "m", "/", "K", ")", ")", ",", "j", "+", "tmp_vec", ".", "repeat_interleave", "(", "int", "(", "m", "/", "K", ")", ")", "]", "=", "torch", ".", "transpose", "(", "(", "-", "(", "curr_sum", "+", "est_sum", "-", "2", "*", "CC", ")", "/", "(", "2", "*", "(", "sigma", "**", "2", ")", ")", ")", ",", "0", ",", "1", ")", ".", "flatten", "(", "0", ",", "1", ")", "\n", "\n", "\n", "", "", "exp_T", "=", "torch", ".", "sum", "(", "torch", ".", "exp", "(", "TT", ")", ",", "[", "0", ",", "1", "]", ")", "\n", "like_value", "=", "torch", ".", "sum", "(", "torch", ".", "log", "(", "exp_T", ")", ")", "\n", "\n", "WW", "=", "torch", ".", "mul", "(", "torch", ".", "exp", "(", "TT", "-", "TT", ".", "max", "(", "0", ")", "[", "0", "]", ".", "max", "(", "0", ")", "[", "0", "]", ")", ",", "torch", ".", "unsqueeze", "(", "rho_est", ",", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "N", ")", ")", "+", "1.e-20", "\n", "WW", "=", "WW", "/", "torch", ".", "sum", "(", "WW", ",", "(", "0", ",", "1", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "K", ")", ":", "\n", "                ", "aa", "[", "bccb_ind_mat", "[", ":", ",", "j", "*", "m", "+", "i", "]", "]", "=", "torch", ".", "sum", "(", "WW", "[", "torch", ".", "arange", "(", "i", ",", "m", ",", "K", ")", "]", "[", ":", ",", "torch", ".", "arange", "(", "j", ",", "m", ",", "K", ")", "]", ")", "\n", "\n", "ifft_calc", "=", "(", "torch", ".", "fft", ".", "ifft2", "(", "(", "torch", ".", "mul", "(", "\n", "torch", ".", "fft", ".", "fft2", "(", "(", "WW", "[", "torch", ".", "arange", "(", "i", ",", "m", ",", "K", ")", ",", ":", "]", "[", ":", ",", "torch", ".", "arange", "(", "j", ",", "m", ",", "K", ")", "]", ")", ".", "cpu", "(", ")", ",", "dim", "=", "(", "0", ",", "1", ")", ")", ".", "to", "(", "\n", "device", ")", ",", "\n", "torch", ".", "conj", "(", "curr_fft", ")", ")", ")", ".", "cpu", "(", ")", ",", "dim", "=", "(", "0", ",", "1", ")", ")", ")", ".", "to", "(", "device", ")", "\n", "\n", "bb", "[", "bccb_ind_mat", "[", ":", ",", "j", "*", "m", "+", "i", "]", "]", "=", "torch", ".", "transpose", "(", "torch", ".", "flip", "(", "torch", ".", "roll", "(", "\n", "torch", ".", "abs", "(", "torch", ".", "sum", "(", "ifft_calc", ",", "2", ")", ")", ",", "(", "int", "(", "m", "/", "K", ")", "-", "1", ",", "int", "(", "m", "/", "K", ")", "-", "1", ")", ",", "(", "0", ",", "1", ")", ")", ",", "(", "0", ",", "1", ")", ")", ",", "0", ",", "\n", "1", ")", ".", "flatten", "(", ")", "\n", "\n", "", "", "W_mean", "[", ":", ",", ":", ",", "nn", "]", "=", "torch", ".", "sum", "(", "WW", ",", "2", ")", "/", "torch", ".", "sum", "(", "WW", ")", "\n", "\n", "", "rho_est", "=", "torch", ".", "mean", "(", "W_mean", ",", "2", ")", ".", "to", "(", "device", ")", "\n", "A", "=", "torch", ".", "diag", "(", "aa", ")", "\n", "x_new", "=", "torch", ".", "matmul", "(", "torch", ".", "pinverse", "(", "A", ")", ",", "bb", ".", "unsqueeze", "(", "1", ")", ")", "[", ":", ",", "0", "]", "\n", "\n", "return", "x_new", ",", "like_value", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_EM.run_EM": [[89, 167], ["numpy.random.seed", "torch.manual_seed", "torch.use_deterministic_algorithms", "general_utils.update_device", "os.mkdir", "PIL.Image.open().convert", "torch.FloatTensor().to.resize", "torch.FloatTensor().to", "numpy.random.rand", "numpy.random.rand", "numpy.save", "general_utils.generate_clean_shifted_images", "general_utils.generate_observations", "torch.transpose", "torch.sum", "torch.fft.fft2().to", "numpy.zeros", "numpy.zeros", "time.time", "numpy.random.rand", "torch.FloatTensor().to", "numpy.random.rand", "torch.FloatTensor().to", "range", "numpy.array().reshape", "numpy.sum", "numpy.sum", "general_utils.generate_observations.reshape", "numpy.max", "numpy.sum", "run_EM.SR_EM_iteration", "general_utils.evaluate_data", "process_time.extend", "numpy.save", "numpy.save", "PIL.Image.open", "torch.FloatTensor", "torch.fft.fft2", "torch.FloatTensor", "torch.FloatTensor", "int", "x_curr_est.cpu().detach().numpy", "rolled_img.cpu().detach().numpy", "max", "print", "torch.transpose", "bm3d.bm3d", "torch.FloatTensor().to", "numpy.array", "torch.transpose.cpu", "numpy.mod", "torch.reshape", "numpy.atleast_3d", "torch.FloatTensor().to.getdata", "time.time", "x_curr_est.cpu().detach", "rolled_img.cpu().detach", "str", "torch.transpose.cpu().detach().numpy", "torch.FloatTensor", "numpy.transpose().flatten", "x_curr_est.cpu", "rolled_img.cpu", "torch.transpose.cpu().detach", "numpy.transpose", "torch.transpose.cpu"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.update_device", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.generate_clean_shifted_images", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.generate_observations", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_EM.SR_EM_iteration", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.evaluate_data"], ["", "", "def", "run_EM", "(", "flags", ",", "given_seen", ")", ":", "\n", "    ", "\"\"\"\n    Execute EM optimization\n    :param flags: execution parameters\n    :param given_seed: desired seed given to numpy and torch\n    :return: None\n    \"\"\"", "\n", "np", ".", "random", ".", "seed", "(", "given_seen", ")", "\n", "torch", ".", "manual_seed", "(", "given_seen", ")", "\n", "torch", ".", "use_deterministic_algorithms", "(", "True", ")", "\n", "os", ".", "environ", "[", "\"CUBLAS_WORKSPACE_CONFIG\"", "]", "=", "\":4096:8\"", "\n", "\n", "device", "=", "general_utils", ".", "update_device", "(", "flags", ".", "gpu_num", ")", "\n", "\n", "\n", "# load data", "\n", "Lh", "=", "flags", ".", "high_res", "\n", "\n", "os", ".", "mkdir", "(", "flags", ".", "name_exp", ")", "\n", "\n", "img", "=", "Image", ".", "open", "(", "flags", ".", "image_path", ")", ".", "convert", "(", "'L'", ")", "\n", "img", "=", "img", ".", "resize", "(", "(", "Lh", ",", "Lh", ")", ",", "Image", ".", "ANTIALIAS", ")", "\n", "img", "=", "np", ".", "array", "(", "img", ".", "getdata", "(", ")", ")", ".", "reshape", "(", "Lh", ",", "Lh", ")", "/", "255", "\n", "img", "=", "torch", ".", "FloatTensor", "(", "img", ")", ".", "to", "(", "device", ")", "\n", "\n", "# generate random rho vectors", "\n", "real_rho_1", "=", "np", ".", "random", ".", "rand", "(", "Lh", ",", "1", ")", "\n", "real_rho_2", "=", "np", ".", "random", ".", "rand", "(", "1", ",", "Lh", ")", "\n", "\n", "real_rho_1", "=", "real_rho_1", "/", "np", ".", "sum", "(", "real_rho_1", ")", "\n", "real_rho_2", "=", "real_rho_2", "/", "np", ".", "sum", "(", "real_rho_2", ")", "\n", "\n", "np", ".", "save", "(", "flags", ".", "name_exp", "+", "'/real_vars.npy'", ",", "{", "'real_rho_1'", ":", "real_rho_1", ",", "'real_rho_2'", ":", "real_rho_2", ",", "'img'", ":", "img", "}", ")", "\n", "\n", "# collect observations", "\n", "P_C", ",", "tot_rho", ",", "_", "=", "general_utils", ".", "generate_clean_shifted_images", "(", "device", ",", "img", ",", "real_rho_1", ",", "real_rho_2", ",", "Lh", ",", "flags", ".", "low_res", ")", "\n", "data", "=", "general_utils", ".", "generate_observations", "(", "P_C", ",", "flags", ".", "sigma", ",", "tot_rho", ",", "flags", ".", "N", ",", "device", ")", "\n", "data_im", "=", "torch", ".", "transpose", "(", "data", ".", "reshape", "(", "flags", ".", "low_res", ",", "flags", ".", "low_res", ",", "data", ".", "shape", "[", "1", "]", ")", ",", "0", ",", "1", ")", "\n", "data_sum", "=", "torch", ".", "sum", "(", "data_im", "**", "2", ",", "(", "0", ",", "1", ")", ")", "\n", "fft_data", "=", "torch", ".", "fft", ".", "fft2", "(", "data_im", ".", "cpu", "(", ")", ",", "dim", "=", "(", "0", ",", "1", ")", ")", ".", "to", "(", "device", ")", "\n", "\n", "\n", "max_likelihood", "=", "np", ".", "zeros", "(", "flags", ".", "iterations_number", ")", "\n", "error_val", "=", "np", ".", "zeros", "(", "flags", ".", "iterations_number", ")", "\n", "process_time", "=", "[", "]", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n", "initial_start", "=", "np", ".", "random", ".", "rand", "(", "Lh", "*", "Lh", ")", "\n", "initial_start_x", "=", "initial_start", "/", "np", ".", "max", "(", "initial_start", ")", "\n", "x_init", "=", "torch", ".", "FloatTensor", "(", "initial_start_x", ")", ".", "to", "(", "device", ")", "\n", "\n", "init_rho_tot", "=", "np", ".", "random", ".", "rand", "(", "Lh", ",", "Lh", ")", "\n", "init_rho_tot", "=", "init_rho_tot", "/", "np", ".", "sum", "(", "init_rho_tot", ")", "\n", "init_rho_tot", "=", "torch", ".", "FloatTensor", "(", "init_rho_tot", ")", ".", "to", "(", "device", ")", "\n", "\n", "for", "k", "in", "range", "(", "flags", ".", "iterations_number", ")", ":", "\n", "        ", "x_curr_est", ",", "max_likelihood", "[", "k", "]", "=", "SR_EM_iteration", "(", "device", ",", "x_init", ",", "init_rho_tot", ",", "data_sum", ",", "fft_data", ",", "\n", "flags", ".", "sigma", ",", "int", "(", "Lh", "/", "flags", ".", "low_res", ")", ")", "\n", "\n", "rolled_img", ",", "curr_error", "=", "general_utils", ".", "evaluate_data", "(", "device", ",", "x_curr_est", ",", "Lh", ",", "Lh", ",", "img", ")", "\n", "error_val", "[", "k", "]", "=", "curr_error", "\n", "process_time", ".", "extend", "(", "[", "time", ".", "time", "(", ")", "-", "t0", "]", ")", "\n", "\n", "curr_data", "=", "{", "'like_value'", ":", "max_likelihood", ",", "'error'", ":", "error_val", ",", "'curr_x'", ":", "x_curr_est", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "\n", "'curr_shifted_image'", ":", "rolled_img", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "}", "\n", "\n", "np", ".", "save", "(", "flags", ".", "name_exp", "+", "'/eval_vec.npy'", ",", "{", "'like_value'", ":", "max_likelihood", ",", "'error'", ":", "error_val", ",", "\n", "'process_time'", ":", "process_time", "}", ")", "\n", "np", ".", "save", "(", "flags", ".", "name_exp", "+", "'/final_res.npy'", ",", "curr_data", ")", "\n", "\n", "if", "flags", ".", "projected", "and", "np", ".", "mod", "(", "k", "+", "1", ",", "5", ")", "==", "0", ":", "\n", "            ", "chosen_den", "=", "max", "(", "2", "**", "(", "-", "0.1", "*", "(", "k", "+", "1", ")", "/", "5", ")", ",", "0.02", ")", "\n", "print", "(", "'used den - '", "+", "str", "(", "chosen_den", ")", ")", "\n", "curr_img", "=", "torch", ".", "transpose", "(", "torch", ".", "reshape", "(", "x_curr_est", ",", "[", "Lh", ",", "Lh", "]", ")", ",", "0", ",", "1", ")", "\n", "denoise_im", "=", "bm3d", "(", "np", ".", "atleast_3d", "(", "curr_img", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", ",", "chosen_den", ")", "\n", "x_init", "=", "torch", ".", "FloatTensor", "(", "np", ".", "transpose", "(", "denoise_im", ")", ".", "flatten", "(", ")", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "x_init", "=", "x_curr_est", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_table.Struct.__init__": [[39, 41], ["run_data_for_table.Struct.__dict__.update"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "entries", ")", ":", "\n", "        ", "self", ".", "__dict__", ".", "update", "(", "entries", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_table.create_flags": [[7, 28], ["dict", "run_data_for_table.Struct", "run_data_for_table.convert_type", "x.split"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.convert_type"], ["def", "create_flags", "(", "args", ")", ":", "\n", "    ", "special_cases", "=", "{", "'bool_vars'", ":", "[", "'projected'", "]", ",", "\n", "'str_vars'", ":", "[", "'alg_option'", ",", "'name_exp'", "]", ",", "\n", "'float_vars'", ":", "[", "'lr'", ",", "'sigma'", "]", "}", "\n", "\n", "default_vals", "=", "{", "'gpu_num'", ":", "0", ",", "\n", "'lr'", ":", "0.01", ",", "\n", "'sigma'", ":", "0.1", ",", "\n", "'N'", ":", "[", "]", ",", "\n", "'alg_option'", ":", "'BFGS'", ",", "\n", "'iterations_number'", ":", "100", ",", "\n", "'projected'", ":", "False", ",", "\n", "'name_exp'", ":", "'tmp_name'", "}", "\n", "\n", "dict_flags", "=", "dict", "(", "[", "convert_type", "(", "x", ".", "split", "(", "'='", ")", ",", "special_cases", ")", "for", "x", "in", "args", "]", ")", "\n", "dict_flags", "=", "{", "**", "default_vals", ",", "**", "dict_flags", "}", "\n", "flags", "=", "Struct", "(", "**", "dict_flags", ")", "\n", "\n", "assert", "flags", ".", "alg_option", "in", "[", "'GD'", ",", "'BFGS'", "]", ",", "\"wrong optimization algorithm\"", "\n", "\n", "return", "flags", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_table.convert_type": [[29, 37], ["float", "int"], "function", ["None"], ["", "def", "convert_type", "(", "flag", ",", "special_cases", ")", ":", "\n", "    ", "if", "flag", "[", "0", "]", "in", "special_cases", "[", "'bool_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "flag", "[", "1", "]", "==", "'True'", "\n", "", "elif", "flag", "[", "0", "]", "in", "special_cases", "[", "'float_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "float", "(", "flag", "[", "1", "]", ")", "\n", "", "elif", "flag", "[", "0", "]", "not", "in", "special_cases", "[", "'str_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "int", "(", "flag", "[", "1", "]", ")", "\n", "", "return", "flag", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_table.main": [[42, 71], ["run_data_for_table.create_flags", "os.mkdir", "range", "run_MoM.run_MoM", "run_EM.run_EM", "str", "str", "str", "str", "str().replace", "str().replace", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.create_flags", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.run_MoM", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_EM.run_EM"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "given_seed", "=", "26723683", "\n", "flags", "=", "create_flags", "(", "sys", ".", "argv", "[", "1", ":", "]", ")", "\n", "\n", "flags", ".", "image_path", "=", "'lena.png'", "\n", "\n", "os", ".", "mkdir", "(", "flags", ".", "name_exp", ")", "\n", "global_name_exp", "=", "flags", ".", "name_exp", "+", "'/'", "\n", "\n", "\n", "all_sigma", "=", "[", "0.125", ",", "0.25", ",", "0.5", "]", "\n", "all_N", "=", "[", "100", ",", "10000", "]", "\n", "scales", "=", "[", "(", "128", ",", "32", ")", ",", "(", "128", ",", "16", ")", ",", "(", "64", ",", "32", ")", "]", "\n", "\n", "for", "t", "in", "range", "(", "20", ")", ":", "\n", "        ", "for", "sigma", "in", "all_sigma", ":", "\n", "            ", "for", "N", "in", "all_N", ":", "\n", "                ", "for", "scale", "in", "scales", ":", "\n", "                    ", "flags", ".", "sigma", "=", "sigma", "\n", "flags", ".", "N", "=", "N", "\n", "flags", ".", "high_res", "=", "scale", "[", "0", "]", "\n", "flags", ".", "low_res", "=", "scale", "[", "1", "]", "\n", "flags", ".", "name_exp", "=", "global_name_exp", "+", "str", "(", "scale", "[", "0", "]", ")", "+", "'_'", "+", "str", "(", "scale", "[", "1", "]", ")", "+", "'_sigma_'", "+", "str", "(", "sigma", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", "+", "'_N_'", "+", "str", "(", "N", ")", "+", "'_t_'", "+", "str", "(", "t", ")", "+", "'_proj_MOM'", "\n", "run_MoM", ".", "run_MoM", "(", "flags", ",", "given_seed", ")", "\n", "\n", "flags", ".", "name_exp", "=", "global_name_exp", "+", "str", "(", "scale", "[", "0", "]", ")", "+", "'_'", "+", "str", "(", "scale", "[", "1", "]", ")", "+", "'_sigma_'", "+", "str", "(", "sigma", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", "+", "'_N_'", "+", "str", "(", "N", ")", "+", "'_t_'", "+", "str", "(", "t", ")", "+", "'_proj_EM'", "\n", "run_EM", ".", "run_EM", "(", "flags", ",", "given_seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.index_matrix_for_bccb": [[7, 27], ["numpy.reshape", "numpy.apply_along_axis", "scipy.linalg.circulant", "numpy.concatenate", "torch.Tensor().type", "scipy.linalg.circulant", "numpy.concatenate", "numpy.array", "numpy.array", "torch.Tensor", "range", "range"], "function", ["None"], ["def", "index_matrix_for_bccb", "(", "H", ",", "W", ")", ":", "\n", "    ", "\"\"\"\n    Creates a matrix containing the indexes of the BCCB matrix (transforms an image to a matrix where its columns are\n    all flatten shifted images)\n    :param H: Original image height\n    :param W: Original image width\n    :return: The index matrix\n    \"\"\"", "\n", "ccc", "=", "np", ".", "reshape", "(", "1", "+", "np", ".", "array", "(", "range", "(", "H", "*", "W", ")", ")", ",", "[", "H", ",", "W", "]", ")", "\n", "\n", "def", "my_func", "(", "a", ")", ":", "\n", "        ", "return", "circulant", "(", "a", ")", "\n", "\n", "", "fff", "=", "np", ".", "apply_along_axis", "(", "my_func", ",", "1", ",", "ccc", ")", "\n", "higher", "=", "circulant", "(", "1", "+", "np", ".", "array", "(", "range", "(", "H", ")", ")", ")", "\n", "all_small_ordered", "=", "fff", "[", "higher", "-", "1", ",", ":", ",", ":", "]", "\n", "\n", "index_mat", "=", "np", ".", "concatenate", "(", "np", ".", "concatenate", "(", "all_small_ordered", ",", "axis", "=", "-", "2", ")", ",", "axis", "=", "-", "1", ")", "\n", "bccb_ind_mat", "=", "index_mat", "-", "1", "\n", "return", "torch", ".", "Tensor", "(", "bccb_ind_mat", ")", ".", "type", "(", "torch", ".", "LongTensor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.update_SR_model": [[28, 43], ["numpy.zeros", "numpy.kron", "numpy.repeat", "torch.reshape", "numpy.ones", "numpy.expand_dims", "int", "int", "torch.reshape.flatten", "np.kron.flatten", "np.repeat.flatten"], "function", ["None"], ["", "def", "update_SR_model", "(", "high_res", ",", "low_res", ",", "bccb_ind_mat", ")", ":", "\n", "    ", "\"\"\"\n    Updates the BCCB index matrix so its columns will represent sampled images\n    :param high_res: Original image resolution\n    :param low_res: Observations resolution\n    :param bccb_ind_mat: The indexes of the BCCB matrix\n    :return:\n    \"\"\"", "\n", "if", "low_res", "<", "high_res", ":", "\n", "        ", "base_mat", "=", "np", ".", "zeros", "(", "(", "int", "(", "high_res", "/", "low_res", ")", ",", "int", "(", "high_res", "/", "low_res", ")", ")", ")", "\n", "base_mat", "[", "0", ",", "0", "]", "=", "1", "\n", "sample_mat", "=", "np", ".", "kron", "(", "np", ".", "ones", "(", "(", "low_res", ",", "low_res", ")", ")", ",", "base_mat", ")", "\n", "sample_C", "=", "np", ".", "repeat", "(", "np", ".", "expand_dims", "(", "sample_mat", ".", "flatten", "(", ")", "==", "1", ",", "axis", "=", "1", ")", ",", "high_res", "**", "2", ",", "axis", "=", "1", ")", "\n", "bccb_ind_mat", "=", "torch", ".", "reshape", "(", "bccb_ind_mat", ".", "flatten", "(", ")", "[", "sample_C", ".", "flatten", "(", ")", "]", ",", "(", "low_res", "**", "2", ",", "high_res", "**", "2", ")", ")", "\n", "", "return", "bccb_ind_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.generate_observations": [[44, 59], ["list", "torch.utils.data.DataLoader", "torch.transpose", "torch.utils.data.WeightedRandomSampler", "real_rho.squeeze", "torch.transpose", "list", "torch.randn().to", "torch.randn"], "function", ["None"], ["", "def", "generate_observations", "(", "P_C", ",", "sigma", ",", "real_rho", ",", "N", ",", "device", ")", ":", "\n", "    ", "\"\"\"\n    Generating observations according to all shifted observations, 2-D shift distribution and noise level\n    :param P_C: A matrix containing all shifted (flatten) image options\n    :param sigma: Noise level\n    :param real_rho: Original 2-D shift distribution\n    :param N: Number of observations\n    :param device: The torch process device\n    :return: A batch of observed data\n    \"\"\"", "\n", "ind_samples", "=", "list", "(", "torch", ".", "utils", ".", "data", ".", "WeightedRandomSampler", "(", "real_rho", ".", "squeeze", "(", ")", ",", "N", ")", ")", "\n", "trainLoader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", "=", "torch", ".", "transpose", "(", "P_C", ",", "0", ",", "1", ")", ",", "batch_size", "=", "N", ",", "sampler", "=", "ind_samples", ")", "\n", "curr_data", "=", "torch", ".", "transpose", "(", "list", "(", "trainLoader", ")", "[", "0", "]", ",", "0", ",", "1", ")", "\n", "observed_data", "=", "curr_data", "+", "sigma", "*", "torch", ".", "randn", "(", "curr_data", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "return", "observed_data", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.calculate_M": [[60, 82], ["torch.eye().to", "torch.mean", "torch.divide", "torch.divide", "torch.matmul", "torch.divide", "torch.eye", "torch.matmul", "torch.transpose", "torch.mean", "torch.transpose"], "function", ["None"], ["", "def", "calculate_M", "(", "batch", ",", "batch_id", ",", "sigma", ",", "prev_M1", ",", "prev_M2", ",", "device", ")", ":", "\n", "    ", "\"\"\"\n    Adds batch into the moments calculation\n    :param batch: Batch added to the current moments calculation\n    :param batch_id: Number of batch added to the calculation\n    :param sigma: Noise level\n    :param prev_M1: Previous first moment\n    :param prev_M2: Previous second moment\n    :param device: The torch process device\n    :return:\n    Updated moments after consideration to the extra batch\n    \"\"\"", "\n", "eye_mat", "=", "(", "sigma", "**", "2", ")", "*", "torch", ".", "eye", "(", "batch", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "device", ")", "\n", "if", "batch_id", "==", "0", ":", "\n", "        ", "M2", "=", "torch", ".", "divide", "(", "torch", ".", "matmul", "(", "batch", ",", "torch", ".", "transpose", "(", "batch", ",", "0", ",", "1", ")", ")", ",", "batch", ".", "shape", "[", "1", "]", ")", "-", "eye_mat", "\n", "M1", "=", "torch", ".", "mean", "(", "batch", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "all_prev_hist", "=", "(", "prev_M2", "+", "eye_mat", ")", "*", "batch", ".", "shape", "[", "1", "]", "*", "batch_id", "\n", "curr_hist", "=", "all_prev_hist", "+", "torch", ".", "matmul", "(", "batch", ",", "torch", ".", "transpose", "(", "batch", ",", "0", ",", "1", ")", ")", "\n", "M2", "=", "torch", ".", "divide", "(", "curr_hist", ",", "(", "batch_id", "+", "1", ")", "*", "batch", ".", "shape", "[", "1", "]", ")", "-", "eye_mat", "\n", "M1", "=", "torch", ".", "divide", "(", "prev_M1", "*", "batch_id", "+", "torch", ".", "mean", "(", "batch", ",", "1", ")", ",", "batch_id", "+", "1", ")", "\n", "", "return", "M1", ",", "M2", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.normalize_rho_vector": [[83, 105], ["torch.matmul", "torch.reshape().squeeze", "torch.exp", "torch.divide", "torch.exp", "torch.divide", "torch.sum", "torch.sum", "torch.divide", "torch.divide", "torch.reshape", "torch.sum", "torch.sum", "torch.transpose"], "function", ["None"], ["", "def", "normalize_rho_vector", "(", "rho_1", ",", "rho_2", ",", "normalization", "=", "'softmax'", ")", ":", "\n", "    ", "\"\"\"\n    Normalizing distribution vectors and calculating their joist distribution\n    :param rho_1: Horizontal shift distribution\n    :param rho_2: Vertical shift distribution\n    :param normalization: Method for normlization (softmax desired for projecting vectors which are not in [0,1])\n    :return: The joint distribution\n    \"\"\"", "\n", "if", "normalization", "==", "'softmax'", ":", "\n", "        ", "norm_rho_1", "=", "torch", ".", "exp", "(", "rho_1", ")", "\n", "norm_rho_1", "=", "torch", ".", "divide", "(", "norm_rho_1", ",", "torch", ".", "sum", "(", "norm_rho_1", ")", ")", "\n", "norm_rho_2", "=", "torch", ".", "exp", "(", "rho_2", ")", "\n", "norm_rho_2", "=", "torch", ".", "divide", "(", "norm_rho_2", ",", "torch", ".", "sum", "(", "norm_rho_2", ")", ")", "\n", "", "elif", "normalization", "==", "'uniform'", ":", "\n", "        ", "norm_rho_1", "=", "torch", ".", "divide", "(", "rho_1", ",", "torch", ".", "sum", "(", "rho_1", ")", ")", "\n", "norm_rho_2", "=", "torch", ".", "divide", "(", "rho_2", ",", "torch", ".", "sum", "(", "rho_2", ")", ")", "\n", "", "else", ":", "\n", "        ", "assert", "False", ",", "\"wrong rho normalization\"", "\n", "", "distribution_curr_shifts", "=", "torch", ".", "matmul", "(", "norm_rho_1", ",", "norm_rho_2", ")", "\n", "tot_rho", "=", "torch", ".", "reshape", "(", "torch", ".", "transpose", "(", "distribution_curr_shifts", ",", "0", ",", "1", ")", ",", "\n", "[", "rho_1", ".", "shape", "[", "0", "]", "*", "rho_2", ".", "shape", "[", "1", "]", ",", "1", "]", ")", ".", "squeeze", "(", ")", "\n", "return", "tot_rho", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.calculate_moments": [[106, 135], ["general_utils.generate_clean_shifted_images", "torch.zeros", "torch.zeros", "int", "range", "torch.matmul", "torch.matmul", "print", "general_utils.generate_observations", "general_utils.calculate_M", "torch.matmul", "torch.diag", "torch.transpose", "str"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.generate_clean_shifted_images", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.generate_observations", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.calculate_M"], ["", "def", "calculate_moments", "(", "device", ",", "sigma", ",", "img", ",", "real_rho_1", ",", "real_rho_2", ",", "high_res", ",", "low_res", ",", "N", ")", ":", "\n", "    ", "\"\"\"\n    Calculates the first two moments of the observed data\n    :param device: The torch process device\n    :param sigma: Noise level\n    :param img: Original image\n    :param real_rho_1: Original horizontal shift distribution\n    :param real_rho_2: Original vertical shift distribution\n    :param high_res: Original image resolution\n    :param low_res: Observations resolution\n    :param N: Number of observations\n    :return: The first two moments and\n    \"\"\"", "\n", "P_C", ",", "tot_rho", ",", "bccb_ind_mat", "=", "generate_clean_shifted_images", "(", "device", ",", "img", ",", "real_rho_1", ",", "real_rho_2", ",", "high_res", ",", "low_res", ")", "\n", "if", "N", ":", "\n", "        ", "prev_m1", "=", "torch", ".", "zeros", "(", "low_res", "*", "low_res", ")", "\n", "prev_m2", "=", "torch", ".", "zeros", "(", "low_res", "*", "low_res", ",", "low_res", "*", "low_res", ")", "\n", "num_it", "=", "100", "\n", "NN", "=", "int", "(", "N", "/", "num_it", ")", "\n", "for", "it", "in", "range", "(", "num_it", ")", ":", "\n", "            ", "print", "(", "'working on batch number '", "+", "str", "(", "it", ")", ")", "\n", "batch_img", "=", "generate_observations", "(", "P_C", ",", "sigma", ",", "tot_rho", ",", "NN", ",", "device", ")", "\n", "mu1", ",", "mu2", "=", "calculate_M", "(", "batch_img", ",", "it", ",", "sigma", ",", "prev_m1", ",", "prev_m2", ",", "device", ")", "\n", "prev_m1", "=", "mu1", "\n", "prev_m2", "=", "mu2", "\n", "", "", "else", ":", "# \"perfect\" moments", "\n", "        ", "mu1", "=", "torch", ".", "matmul", "(", "P_C", ",", "tot_rho", ")", "\n", "mu2", "=", "torch", ".", "matmul", "(", "P_C", ",", "torch", ".", "matmul", "(", "torch", ".", "diag", "(", "tot_rho", ")", ",", "torch", ".", "transpose", "(", "P_C", ",", "0", ",", "1", ")", ")", ")", "\n", "", "return", "mu1", ",", "mu2", ",", "bccb_ind_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.generate_clean_shifted_images": [[137, 158], ["general_utils.index_matrix_for_bccb", "general_utils.update_SR_model", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.reshape().squeeze", "general_utils.normalize_rho_vector", "torch.FloatTensor", "torch.FloatTensor", "torch.reshape", "torch.transpose"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.index_matrix_for_bccb", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.update_SR_model", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.normalize_rho_vector"], ["", "def", "generate_clean_shifted_images", "(", "device", ",", "img", ",", "real_rho_1", ",", "real_rho_2", ",", "high_res", ",", "low_res", ")", ":", "\n", "    ", "\"\"\"\n    Generates a matrix where its columns are all options of shifted (flatten) images\n    :param device: The torch process device\n    :param img: Original image\n    :param real_rho_1: Original horizontal shift distribution\n    :param real_rho_2: Original vertical shift distribution\n    :param high_res: Original image resolution\n    :param low_res: Observations resolution\n    :return: The shifted images matrix, the joint distribution of both shifts, the index matrix creating BCCB matrix\n    \"\"\"", "\n", "bccb_ind_mat", "=", "index_matrix_for_bccb", "(", "real_rho_1", ".", "shape", "[", "0", "]", ",", "real_rho_2", ".", "shape", "[", "1", "]", ")", "\n", "bccb_ind_mat", "=", "update_SR_model", "(", "high_res", ",", "low_res", ",", "bccb_ind_mat", ")", "\n", "\n", "real_rho_1", "=", "torch", ".", "FloatTensor", "(", "real_rho_1", ")", ".", "to", "(", "device", ")", "\n", "real_rho_2", "=", "torch", ".", "FloatTensor", "(", "real_rho_2", ")", ".", "to", "(", "device", ")", "\n", "\n", "x", "=", "torch", ".", "reshape", "(", "torch", ".", "transpose", "(", "img", ",", "0", ",", "1", ")", ",", "[", "real_rho_1", ".", "shape", "[", "0", "]", "*", "real_rho_2", ".", "shape", "[", "1", "]", ",", "1", "]", ")", ".", "squeeze", "(", ")", "\n", "P_C", "=", "x", "[", "bccb_ind_mat", "]", "\n", "tot_rho", "=", "normalize_rho_vector", "(", "real_rho_1", ",", "real_rho_2", ",", "'uniform'", ")", "\n", "return", "P_C", ",", "tot_rho", ",", "bccb_ind_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.evaluate_data": [[159, 179], ["torch.transpose", "torch.fft.fft2().to", "torch.fft.fft2().to", "torch.abs", "torch.where", "torch.roll", "print", "torch.reshape", "torch.fft.ifft2().to", "torch.norm", "torch.norm", "curr_error.item", "torch.fft.fft2", "torch.fft.fft2", "torch.max", "curr_error.item", "torch.transpose.cpu", "img.cpu", "torch.fft.ifft2", "torch.mul().cpu", "torch.mul", "torch.conj"], "function", ["None"], ["", "def", "evaluate_data", "(", "device", ",", "x_curr_est", ",", "H", ",", "W", ",", "img", ")", ":", "\n", "    ", "\"\"\"\n    Calculate the error of the given estimation, considering the shift-invariance of the model\n    :param device: The torch process device\n    :param x_curr_est: Current estimation of x\n    :param img: Original image\n    :param H: Original image height\n    :param W: Original image width\n    :return: The aligned estimation and its error\n    \"\"\"", "\n", "curr_img", "=", "torch", ".", "transpose", "(", "torch", ".", "reshape", "(", "x_curr_est", ",", "[", "H", ",", "W", "]", ")", ",", "0", ",", "1", ")", "\n", "fft_curr_img", "=", "torch", ".", "fft", ".", "fft2", "(", "curr_img", ".", "cpu", "(", ")", ")", ".", "to", "(", "device", ")", "\n", "fft_img", "=", "torch", ".", "fft", ".", "fft2", "(", "img", ".", "cpu", "(", ")", ")", ".", "to", "(", "device", ")", "\n", "CC", "=", "torch", ".", "abs", "(", "torch", ".", "fft", ".", "ifft2", "(", "(", "torch", ".", "mul", "(", "fft_img", ",", "torch", ".", "conj", "(", "fft_curr_img", ")", ")", ")", ".", "cpu", "(", ")", ")", ".", "to", "(", "device", ")", ")", "\n", "[", "row_shift", ",", "col_shift", "]", "=", "torch", ".", "where", "(", "CC", "==", "torch", ".", "max", "(", "CC", ")", ")", "\n", "rolled_img", "=", "torch", ".", "roll", "(", "curr_img", ",", "shifts", "=", "(", "row_shift", "[", "0", "]", ",", "col_shift", "[", "0", "]", ")", ",", "dims", "=", "(", "0", ",", "1", ")", ")", "\n", "img_error", "=", "rolled_img", "-", "img", "\n", "curr_error", "=", "torch", ".", "norm", "(", "img_error", ")", "/", "torch", ".", "norm", "(", "img", ")", "\n", "print", "(", "\"Error: %.10f\"", "%", "curr_error", ".", "item", "(", ")", ")", "\n", "return", "rolled_img", ",", "curr_error", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.general_utils.update_device": [[180, 193], ["torch.cuda.is_available", "torch.device", "torch.cuda.empty_cache", "print", "torch.device", "str", "str"], "function", ["None"], ["", "def", "update_device", "(", "gpu_num", ")", ":", "\n", "    ", "\"\"\"\n    Define the torch process device\n    :param gpu_num: Assignment to a specific GPU\n    :return: The torch process device\n    \"\"\"", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cuda:'", "+", "str", "(", "gpu_num", ")", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "print", "(", "\"Gpu #\"", "+", "str", "(", "gpu_num", ")", ")", "\n", "", "else", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "", "return", "device", "", "", ""]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.Struct.__init__": [[39, 41], ["run_data_for_fig_3_4.Struct.__dict__.update"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "entries", ")", ":", "\n", "        ", "self", ".", "__dict__", ".", "update", "(", "entries", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.create_flags": [[7, 28], ["dict", "run_data_for_fig_3_4.Struct", "run_data_for_fig_3_4.convert_type", "x.split"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.convert_type"], ["def", "create_flags", "(", "args", ")", ":", "\n", "    ", "special_cases", "=", "{", "'bool_vars'", ":", "[", "'projected'", "]", ",", "\n", "'str_vars'", ":", "[", "'alg_option'", ",", "'name_exp'", "]", ",", "\n", "'float_vars'", ":", "[", "'lr'", ",", "'sigma'", "]", "}", "\n", "\n", "default_vals", "=", "{", "'gpu_num'", ":", "0", ",", "\n", "'lr'", ":", "0.01", ",", "\n", "'sigma'", ":", "0.1", ",", "\n", "'N'", ":", "[", "]", ",", "\n", "'alg_option'", ":", "'BFGS'", ",", "\n", "'iterations_number'", ":", "400", ",", "\n", "'projected'", ":", "False", ",", "\n", "'name_exp'", ":", "'tmp_name'", "}", "\n", "\n", "dict_flags", "=", "dict", "(", "[", "convert_type", "(", "x", ".", "split", "(", "'='", ")", ",", "special_cases", ")", "for", "x", "in", "args", "]", ")", "\n", "dict_flags", "=", "{", "**", "default_vals", ",", "**", "dict_flags", "}", "\n", "flags", "=", "Struct", "(", "**", "dict_flags", ")", "\n", "\n", "assert", "flags", ".", "alg_option", "in", "[", "'GD'", ",", "'BFGS'", "]", ",", "\"wrong optimization algorithm\"", "\n", "\n", "return", "flags", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.convert_type": [[29, 37], ["float", "int"], "function", ["None"], ["", "def", "convert_type", "(", "flag", ",", "special_cases", ")", ":", "\n", "    ", "if", "flag", "[", "0", "]", "in", "special_cases", "[", "'bool_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "flag", "[", "1", "]", "==", "'True'", "\n", "", "elif", "flag", "[", "0", "]", "in", "special_cases", "[", "'float_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "float", "(", "flag", "[", "1", "]", ")", "\n", "", "elif", "flag", "[", "0", "]", "not", "in", "special_cases", "[", "'str_vars'", "]", ":", "\n", "        ", "flag", "[", "1", "]", "=", "int", "(", "flag", "[", "1", "]", ")", "\n", "", "return", "flag", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.main": [[42, 85], ["run_data_for_fig_3_4.create_flags", "os.listdir", "os.mkdir", "str().replace().replace", "run_MoM.run_MoM", "run_MoM.run_MoM", "run_EM.run_EM", "run_EM.run_EM", "str().replace", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_data_for_fig_3_4.create_flags", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.run_MoM", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_MoM.run_MoM", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_EM.run_EM", "home.repos.pwc.inspect_result.jonathanshani_denoiser_projection.None.run_EM.run_EM"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "given_seed", "=", "26723683", "\n", "flags", "=", "create_flags", "(", "sys", ".", "argv", "[", "1", ":", "]", ")", "\n", "\n", "images_dir", "=", "'CBSD68-dataset-master/CBSD68/original_png/'", "\n", "all_files", "=", "os", ".", "listdir", "(", "images_dir", ")", "\n", "\n", "os", ".", "mkdir", "(", "flags", ".", "name_exp", ")", "\n", "global_name_exp", "=", "flags", ".", "name_exp", "+", "'/'", "\n", "\n", "scales", "=", "[", "(", "128", ",", "8", ")", ",", "(", "128", ",", "16", ")", ",", "(", "128", ",", "32", ")", ",", "(", "128", ",", "64", ")", "]", "\n", "\n", "for", "scale", "in", "scales", ":", "\n", "        ", "flags", ".", "high_res", "=", "scale", "[", "0", "]", "\n", "flags", ".", "low_res", "=", "scale", "[", "1", "]", "\n", "\n", "for", "file_name", "in", "all_files", ":", "\n", "            ", "flags", ".", "image_path", "=", "images_dir", "+", "file_name", "\n", "str_name", "=", "str", "(", "file_name", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", ".", "replace", "(", "'-'", ",", "'m'", ")", "\n", "\n", "flags", ".", "sigma", "=", "0.125", "\n", "flags", ".", "N", "=", "[", "]", "\n", "flags", ".", "iterations_number", "=", "400", "\n", "\n", "flags", ".", "projected", "=", "True", "\n", "flags", ".", "name_exp", "=", "global_name_exp", "+", "'proj_mom_'", "+", "str", "(", "scale", "[", "0", "]", ")", "+", "'_'", "+", "str", "(", "scale", "[", "1", "]", ")", "+", "'_'", "+", "str_name", "\n", "run_MoM", ".", "run_MoM", "(", "flags", ",", "given_seed", ")", "\n", "\n", "flags", ".", "projected", "=", "False", "\n", "flags", ".", "name_exp", "=", "global_name_exp", "+", "'not_proj_mom_'", "+", "str", "(", "scale", "[", "0", "]", ")", "+", "'_'", "+", "str", "(", "scale", "[", "1", "]", ")", "+", "'_'", "+", "str_name", "\n", "run_MoM", ".", "run_MoM", "(", "flags", ",", "given_seed", ")", "\n", "\n", "flags", ".", "sigma", "=", "0.125", "\n", "flags", ".", "N", "=", "10000", "\n", "flags", ".", "iterations_number", "=", "100", "\n", "\n", "flags", ".", "projected", "=", "True", "\n", "flags", ".", "name_exp", "=", "global_name_exp", "+", "'proj_em_'", "+", "str", "(", "scale", "[", "0", "]", ")", "+", "'_'", "+", "str", "(", "scale", "[", "1", "]", ")", "+", "'_'", "+", "str_name", "\n", "run_EM", ".", "run_EM", "(", "flags", ",", "given_seed", ")", "\n", "\n", "flags", ".", "projected", "=", "False", "\n", "flags", ".", "name_exp", "=", "global_name_exp", "+", "'not_proj_em_'", "+", "str", "(", "scale", "[", "0", "]", ")", "+", "'_'", "+", "str", "(", "scale", "[", "1", "]", ")", "+", "'_'", "+", "str_name", "\n", "run_EM", ".", "run_EM", "(", "flags", ",", "given_seed", ")", "\n", "\n"]]}