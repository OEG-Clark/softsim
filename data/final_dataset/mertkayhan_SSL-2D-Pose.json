{"home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.nms.nms": [[5, 25], ["range", "scipy.ndimage.filters.maximum_filter", "range", "max", "min", "numpy.equal", "numpy.where", "list", "numpy.ones", "zip", "numpy.average"], "function", ["None"], ["def", "nms", "(", "heatmap", ")", ":", "\n", "\n", "    ", "NMS_THRESH", "=", "[", ".2", ",", ".1", ",", ".1", ",", ".1", ",", ".1", "]", "\n", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "        ", "NMS_THRESH", "[", "i", "]", "=", "max", "(", "np", ".", "average", "(", "heatmap", "[", ":", ",", ":", ",", "i", "]", ")", "*", "4.", ",", "NMS_THRESH", "[", "i", "]", ")", "\n", "NMS_THRESH", "[", "i", "]", "=", "min", "(", "NMS_THRESH", "[", "i", "]", ",", ".3", ")", "\n", "\n", "", "window_size", "=", "20", "\n", "peaks", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "# use only for data augmentation", "\n", "\n", "filtered", "=", "maximum_filter", "(", "heatmap", ",", "footprint", "=", "np", ".", "ones", "(", "(", "window_size", ",", "window_size", ",", "1", ")", ")", ")", "\n", "suppressed", "=", "heatmap", "*", "np", ".", "equal", "(", "heatmap", ",", "filtered", ")", "\n", "suppressed", "=", "suppressed", ">=", "NMS_THRESH", "\n", "\n", "for", "ch", "in", "range", "(", "heatmap", ".", "shape", "[", "-", "1", "]", ")", ":", "\n", "        ", "p", "=", "np", ".", "where", "(", "suppressed", "[", ":", ",", ":", ",", "ch", "]", "!=", "0", ")", "\n", "peaks", "[", "ch", "]", "+=", "list", "(", "zip", "(", "p", "[", "1", "]", ",", "p", "[", "0", "]", ")", ")", "\n", "\n", "", "return", "peaks", ",", "suppressed", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.read": [[15, 28], ["cv2.imread", "os.path.exists", "ValueError", "ValueError", "img_utils.bgr2rgb"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.bgr2rgb"], ["def", "read", "(", "img_dir", ",", "rgb", "=", "True", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "img_dir", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"Given directory does not exist! [\"", "+", "img_dir", "+", "\"]\"", ")", "\n", "\n", "", "img", "=", "cv2", ".", "imread", "(", "img_dir", ")", "\n", "\n", "if", "img", "is", "None", ":", "\n", "        ", "raise", "ValueError", "(", "\"Cannot read the image in the given directory!\"", ")", "\n", "\n", "", "if", "rgb", ":", "\n", "        ", "img", "=", "bgr2rgb", "(", "img", ")", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.bgr2rgb": [[30, 32], ["None"], "function", ["None"], ["", "def", "bgr2rgb", "(", "img", ")", ":", "\n", "    ", "return", "img", "[", ":", ",", ":", ",", "(", "2", ",", "1", ",", "0", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.augment": [[34, 66], ["NotImplementedError"], "function", ["None"], ["", "def", "augment", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "\n", "## FOR RMIT DATASET PLEASE UNCOMMENT THE FOLLOWING PART!", "\n", "    ", "\"\"\"\n    # geometric\n    stage1 = [no_augmentation, horizontal_flip, vertical_flip]\n    img, label, attention = stage1[np.random.randint(0, high=len(stage1))](img, label, attention)\n\n    stage2 = [random_translation, random_rotation, no_augmentation, swap_sides, random_swap]\n    img, label, attention = stage2[np.random.randint(0, high=len(stage2))](img, label, attention)\n\n    # perceptual\n    stage3 = [random_brightness, random_contrast, random_saturation, histogram_equalization,\n              blur, no_augmentation]\n\n    img, label, attention = stage3[np.random.randint(0, high=len(stage3))](img, label, attention)\n\n    \"\"\"", "\n", "## FOR ENDOVIS DATASET PLEASE UNCOMMENT THE FOLLOWING PART!", "\n", "\n", "\"\"\"\n    # geometric\n    stage1 = [no_augmentation, horizontal_flip, vertical_flip]\n    img, label, attention = stage1[np.random.randint(0, high=len(stage1))](img, label, attention)\n\n    stage2 = [random_translation, random_rotation, no_augmentation, swap_sides, random_swap]\n    img, label, attention = stage2[np.random.randint(0, high=len(stage2))](img, label, attention)\n    \"\"\"", "\n", "\n", "raise", "NotImplementedError", "(", "\"Please choose data augmentation strategy!\"", ")", "\n", "\n", "return", "img", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.no_augmentation": [[68, 70], ["None"], "function", ["None"], ["", "def", "no_augmentation", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "return", "img", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.fancy_pca": [[72, 100], ["np.clip.astype", "np.clip.mean", "numpy.cov", "numpy.linalg.eig", "numpy.random.normal", "numpy.dot", "np.clip.max", "numpy.clip", "numpy.clip"], "function", ["None"], ["", "def", "fancy_pca", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "\n", "    ", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "normalize", "=", "False", "\n", "if", "img", ".", "max", "(", ")", ">", "1", ":", "\n", "        ", "img", "/=", "255.", "\n", "normalize", "=", "True", "\n", "\n", "", "org_shape", "=", "img", ".", "shape", "\n", "img", ".", "shape", "=", "(", "-", "1", ",", "3", ")", "\n", "mu", "=", "img", ".", "mean", "(", "axis", "=", "0", ")", "\n", "img_c", "=", "img", "-", "mu", "\n", "\n", "cov", "=", "np", ".", "cov", "(", "img_c", ",", "rowvar", "=", "False", ")", "\n", "lambdas", ",", "p", "=", "np", ".", "linalg", ".", "eig", "(", "cov", ")", "\n", "alphas", "=", "np", ".", "random", ".", "normal", "(", "0", ",", ".1", ",", "3", ")", "\n", "\n", "noise", "=", "np", ".", "dot", "(", "p", ",", "alphas", "*", "lambdas", ")", "\n", "\n", "img", "+=", "noise", "\n", "img", ".", "shape", "=", "org_shape", "\n", "if", "normalize", ":", "\n", "        ", "img", "*=", "255.", "\n", "img", "=", "np", ".", "clip", "(", "img", ",", "0", ",", "255", ")", "\n", "", "else", ":", "\n", "        ", "img", "=", "np", ".", "clip", "(", "img", ",", "0", ",", "1", ")", "\n", "\n", "", "return", "img", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.tps": [[102, 129], ["cv2.createThinPlateSplineShapeTransformer", "src.nms.nms", "numpy.array().reshape", "np.array().reshape.copy", "numpy.random.randint", "numpy.random.randint", "cv2.createThinPlateSplineShapeTransformer.estimateTransformation", "numpy.sum", "len", "list", "numpy.random.randint", "numpy.random.randint", "cv2.DMatch", "cv2.createThinPlateSplineShapeTransformer.warpImage", "cv2.createThinPlateSplineShapeTransformer.warpImage", "map", "p_.append", "numpy.array", "range"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.nms.nms"], ["", "def", "tps", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "if", "np", ".", "sum", "(", "label", ")", "==", "0", ":", "\n", "        ", "return", "img", ",", "label", ",", "attention", "\n", "\n", "", "tps", "=", "cv2", ".", "createThinPlateSplineShapeTransformer", "(", ")", "\n", "multi", "=", "False", "\n", "points", ",", "_", "=", "nms", "(", "label", "[", ":", ",", ":", ",", ":", "5", "]", ")", "\n", "if", "len", "(", "points", "[", "0", "]", ")", ">", "1", ":", "\n", "        ", "multi", "=", "True", "\n", "\n", "", "p_", "=", "[", "]", "\n", "for", "p", "in", "points", ":", "\n", "        ", "for", "e", "in", "list", "(", "map", "(", "list", ",", "p", ")", ")", ":", "\n", "            ", "p_", ".", "append", "(", "e", ")", "\n", "", "", "points", "=", "np", ".", "array", "(", "p_", ")", ".", "reshape", "(", "1", ",", "-", "1", ",", "2", ")", "\n", "\n", "t_points", "=", "points", ".", "copy", "(", ")", "\n", "t_points", "[", ":", ",", "0", ",", "0", "]", "-=", "np", ".", "random", ".", "randint", "(", "-", "2", ",", "2", ",", "size", "=", "1", ")", "\n", "t_points", "[", ":", ",", "0", ",", "1", "]", "-=", "np", ".", "random", ".", "randint", "(", "-", "2", ",", "2", ",", "size", "=", "1", ")", "\n", "if", "multi", ":", "\n", "        ", "t_points", "[", ":", ",", "1", ",", "0", "]", "-=", "np", ".", "random", ".", "randint", "(", "-", "2", ",", "2", ",", "size", "=", "1", ")", "\n", "t_points", "[", ":", ",", "1", ",", "1", "]", "-=", "np", ".", "random", ".", "randint", "(", "-", "2", ",", "2", ",", "size", "=", "1", ")", "\n", "", "matches", "=", "[", "cv2", ".", "DMatch", "(", "i", ",", "i", ",", "0", ")", "for", "i", "in", "range", "(", "5", ")", "]", "\n", "\n", "tps", ".", "estimateTransformation", "(", "t_points", ",", "points", ",", "matches", ")", "\n", "\n", "return", "tps", ".", "warpImage", "(", "img", ")", ",", "tps", ".", "warpImage", "(", "label", ")", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.elastic_deform": [[131, 146], ["numpy.random.RandomState", "range", "numpy.meshgrid", "scipy.ndimage.interpolation.map_coordinates().reshape", "scipy.ndimage.filters.gaussian_filter", "scipy.ndimage.filters.gaussian_filter", "numpy.arange", "numpy.arange", "numpy.reshape", "numpy.reshape", "scipy.ndimage.interpolation.map_coordinates", "np.random.RandomState.rand", "np.random.RandomState.rand"], "function", ["None"], ["", "def", "elastic_deform", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "random_state", "=", "np", ".", "random", ".", "RandomState", "(", "None", ")", "\n", "shape", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "alpha", "=", "34", "\n", "sigma", "=", "4", "\n", "\n", "for", "ch", "in", "range", "(", "img", ".", "shape", "[", "-", "1", "]", ")", ":", "\n", "        ", "dx", "=", "gaussian_filter", "(", "(", "random_state", ".", "rand", "(", "*", "shape", ")", "*", "2", "-", "1", ")", ",", "sigma", "=", "sigma", ",", "mode", "=", "\"constant\"", ",", "cval", "=", "0", ")", "*", "alpha", "\n", "dy", "=", "gaussian_filter", "(", "(", "random_state", ".", "rand", "(", "*", "shape", ")", "*", "2", "-", "1", ")", ",", "sigma", "=", "sigma", ",", "mode", "=", "\"constant\"", ",", "cval", "=", "0", ")", "*", "alpha", "\n", "\n", "x", ",", "y", "=", "np", ".", "meshgrid", "(", "np", ".", "arange", "(", "shape", "[", "0", "]", ")", ",", "np", ".", "arange", "(", "shape", "[", "1", "]", ")", ",", "indexing", "=", "\"ij\"", ")", "\n", "indices", "=", "np", ".", "reshape", "(", "x", "+", "dx", ",", "(", "-", "1", ",", "1", ")", ")", ",", "np", ".", "reshape", "(", "y", "+", "dy", ",", "(", "-", "1", ",", "1", ")", ")", "\n", "img", "[", ":", ",", ":", ",", "ch", "]", "=", "map_coordinates", "(", "img", "[", ":", ",", ":", ",", "ch", "]", ",", "indices", ",", "order", "=", "1", ")", ".", "reshape", "(", "shape", ")", "\n", "\n", "", "return", "img", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.random_swap": [[148, 213], ["glob.glob", "numpy.random.randint", "img_utils.read", "cv2.resize", "numpy.load", "cv2.resize", "src.nms.nms", "src.nms.nms", "random_img[].astype", "numpy.sum", "len", "imgs[].split", "fname.split", "len", "len"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.read", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.nms.nms", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.nms.nms"], ["", "def", "random_swap", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "\n", "    ", "if", "img", ".", "shape", "[", "-", "1", "]", ">", "3", ":", "\n", "        ", "return", "img", ",", "label", ",", "attention", "\n", "\n", "", "if", "np", ".", "sum", "(", "label", ")", "==", "0", ":", "\n", "        ", "return", "img", ",", "label", ",", "attention", "\n", "\n", "", "root", "=", "\"/media/digits2/9baf4857-aa15-462d-b5db-022aa5cc3dc5/MicrosurgicalTooltracking/data/EndoVis/\"", "\n", "imgs", "=", "glob", "(", "root", "+", "\"labelled_train/*.jpg\"", ")", "\n", "idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "imgs", ")", ")", "\n", "random_img", "=", "read", "(", "imgs", "[", "idx", "]", ")", "\n", "random_img", "=", "cv2", ".", "resize", "(", "random_img", ",", "(", "img", ".", "shape", "[", "1", "]", ",", "img", ".", "shape", "[", "0", "]", ")", ")", "\n", "fname", "=", "imgs", "[", "idx", "]", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "fname", "=", "fname", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "random_label", "=", "np", ".", "load", "(", "root", "+", "\"training_labels/\"", "+", "fname", "+", "\".npy\"", ")", "\n", "random_label", "=", "cv2", ".", "resize", "(", "random_label", ",", "(", "img", ".", "shape", "[", "1", "]", ",", "img", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "peaks_random", ",", "_", "=", "nms", "(", "random_label", "[", ":", ",", ":", ",", ":", "5", "]", ")", "\n", "peaks", ",", "_", "=", "nms", "(", "label", "[", ":", ",", ":", ",", ":", "5", "]", ")", "\n", "\n", "if", "len", "(", "peaks", "[", "0", "]", ")", ">", "1", ":", "\n", "        ", "x1", ",", "_", "=", "peaks", "[", "0", "]", "[", "0", "]", "\n", "x2", ",", "_", "=", "peaks", "[", "0", "]", "[", "1", "]", "\n", "x", "=", "(", "x1", "+", "x2", ")", "//", "2", "\n", "", "else", ":", "\n", "        ", "x1", ",", "_", "=", "peaks", "[", "0", "]", "[", "0", "]", "\n", "try", ":", "\n", "            ", "if", "peaks", "[", "3", "]", "[", "0", "]", "[", "0", "]", ">", "img", ".", "shape", "[", "1", "]", "//", "2", ":", "\n", "                ", "x", "=", "x1", "-", "20", "\n", "", "else", ":", "\n", "                ", "x", "=", "x1", "+", "20", "\n", "", "", "except", ":", "\n", "            ", "x", "=", "x1", "\n", "\n", "", "", "if", "len", "(", "peaks_random", "[", "0", "]", ")", ">", "1", ":", "\n", "        ", "x1_r", ",", "_", "=", "peaks_random", "[", "0", "]", "[", "0", "]", "\n", "x2_r", ",", "_", "=", "peaks_random", "[", "0", "]", "[", "1", "]", "\n", "x_r", "=", "(", "x1_r", "+", "x2_r", ")", "//", "2", "\n", "", "else", ":", "\n", "        ", "x1_r", ",", "_", "=", "peaks", "[", "0", "]", "[", "0", "]", "\n", "try", ":", "\n", "            ", "if", "peaks_random", "[", "3", "]", "[", "0", "]", "[", "0", "]", ">", "img", ".", "shape", "[", "1", "]", "//", "2", ":", "\n", "                ", "x_r", "=", "x1_r", "-", "20", "\n", "", "else", ":", "\n", "                ", "x_r", "=", "x1_r", "+", "20", "\n", "", "", "except", ":", "\n", "            ", "x_r", "=", "x1_r", "\n", "\n", "", "", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "random_patch", "=", "random_img", "[", ":", ",", ":", "w", "-", "x_r", ",", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "random_patch_label", "=", "random_label", "[", ":", ",", ":", "w", "-", "x_r", ",", ":", "]", "\n", "\n", "img", "[", ":", ",", ":", "w", "-", "x_r", ",", ":", "]", "=", "random_patch", "\n", "if", "x_r", ">", "x", ":", "\n", "        ", "img", "[", ":", ",", "w", "-", "x", ":", "w", "-", "x_r", ",", ":", "]", "=", "0", "\n", "", "elif", "x_r", "<", "x", ":", "\n", "        ", "img", "[", ":", ",", "w", "-", "x_r", ":", "w", ":", "x", ",", ":", "]", "=", "0", "\n", "", "label", "[", ":", ",", ":", "w", "-", "x_r", ",", ":", "]", "=", "random_patch_label", "\n", "if", "x_r", ">", "x", ":", "\n", "        ", "label", "[", ":", ",", "w", "-", "x", ":", "w", "-", "x_r", ",", ":", "]", "=", "0", "\n", "", "elif", "x_r", "<", "x", ":", "\n", "        ", "label", "[", ":", ",", "w", "-", "x_r", ":", "w", ":", "x", ",", ":", "]", "=", "0", "\n", "\n", "", "return", "img", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.swap_sides": [[215, 249], ["src.nms.nms", "img.copy", "label.copy", "numpy.sum", "len"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.nms.nms"], ["", "def", "swap_sides", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "\n", "    ", "if", "img", ".", "shape", "[", "-", "1", "]", ">", "3", ":", "\n", "        ", "return", "img", ",", "label", ",", "attention", "\n", "\n", "", "if", "np", ".", "sum", "(", "label", ")", "==", "0", ":", "\n", "        ", "return", "img", ",", "label", ",", "attention", "\n", "\n", "", "peaks", ",", "_", "=", "nms", "(", "label", "[", ":", ",", ":", ",", ":", "5", "]", ")", "\n", "w", "=", "img", ".", "shape", "[", "1", "]", "\n", "\n", "if", "len", "(", "peaks", "[", "0", "]", ")", ">", "1", ":", "\n", "        ", "x1", ",", "_", "=", "peaks", "[", "0", "]", "[", "0", "]", "\n", "x2", ",", "_", "=", "peaks", "[", "0", "]", "[", "1", "]", "\n", "x", "=", "(", "x1", "+", "x2", ")", "//", "2", "\n", "", "else", ":", "\n", "        ", "x1", ",", "_", "=", "peaks", "[", "0", "]", "[", "0", "]", "\n", "try", ":", "\n", "            ", "if", "peaks", "[", "3", "]", "[", "0", "]", "[", "0", "]", ">", "img", ".", "shape", "[", "1", "]", "//", "2", ":", "\n", "                ", "x", "=", "x1", "-", "20", "\n", "", "else", ":", "\n", "                ", "x", "=", "x1", "+", "20", "\n", "", "", "except", ":", "\n", "            ", "x", "=", "x1", "\n", "\n", "", "", "tmp", "=", "img", ".", "copy", "(", ")", "\n", "img", "[", ":", ",", ":", "w", "-", "x", ",", ":", "]", "=", "tmp", "[", ":", ",", "x", ":", ",", ":", "]", "\n", "img", "[", ":", ",", "w", "-", "x", ":", ",", ":", "]", "=", "tmp", "[", ":", ",", ":", "x", ",", ":", "]", "\n", "\n", "tmp", "=", "label", ".", "copy", "(", ")", "\n", "label", "[", ":", ",", ":", "w", "-", "x", ",", ":", "]", "=", "tmp", "[", ":", ",", "x", ":", ",", ":", "]", "\n", "label", "[", ":", ",", "w", "-", "x", ":", ",", ":", "]", "=", "tmp", "[", ":", ",", ":", "x", ",", ":", "]", "\n", "\n", "return", "img", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.random_translation": [[251, 259], ["numpy.random.randint", "numpy.random.randint", "imutils.translate", "imutils.translate", "imutils.translate"], "function", ["None"], ["", "def", "random_translation", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "# t = [(0, 5), (5, 0), (-5, 0), (0, -5)]", "\n", "# idx = np.random.randint(0, len(t))", "\n", "# return translate(img, t[idx][0], t[idx][1]), translate(label, t[idx][0], t[idx][1]), \\", "\n", "#        translate(attention, t[idx][0], t[idx][1])", "\n", "    ", "x", "=", "np", ".", "random", ".", "randint", "(", "-", "5", ",", "5", ",", "size", "=", "1", ")", "\n", "y", "=", "np", ".", "random", ".", "randint", "(", "-", "5", ",", "5", ",", "size", "=", "1", ")", "\n", "return", "translate", "(", "img", ",", "x", ",", "y", ")", ",", "translate", "(", "label", ",", "x", ",", "y", ")", ",", "translate", "(", "attention", ",", "x", ",", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.horizontal_flip": [[261, 263], ["numpy.fliplr", "numpy.fliplr", "numpy.fliplr"], "function", ["None"], ["", "def", "horizontal_flip", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "return", "np", ".", "fliplr", "(", "img", ")", ",", "np", ".", "fliplr", "(", "label", ")", ",", "np", ".", "fliplr", "(", "attention", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.vertical_flip": [[265, 267], ["numpy.flipud", "numpy.flipud", "numpy.flipud"], "function", ["None"], ["", "def", "vertical_flip", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "return", "np", ".", "flipud", "(", "img", ")", ",", "np", ".", "flipud", "(", "label", ")", ",", "np", ".", "flipud", "(", "attention", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.add_gaussian_noise": [[269, 273], ["img.std", "numpy.random.normal"], "function", ["None"], ["", "def", "add_gaussian_noise", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "std", "=", "img", ".", "std", "(", ")", "\n", "noisy", "=", "img", "+", ".0005", "*", "np", ".", "random", ".", "normal", "(", "loc", "=", "0", ",", "scale", "=", "std", ",", "size", "=", "img", ".", "shape", ")", "\n", "return", "noisy", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.add_pepper_noise": [[275, 281], ["numpy.random.randint", "img.flatten.flatten", "img.flatten.reshape", "int"], "function", ["None"], ["", "def", "add_pepper_noise", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "img", ".", "size", ",", "size", "=", "int", "(", "img", ".", "size", "*", ".05", ")", ")", "\n", "org_shape", "=", "img", ".", "shape", "\n", "img", "=", "img", ".", "flatten", "(", ")", "\n", "img", "[", "idx", "]", "=", "0.", "\n", "return", "img", ".", "reshape", "(", "org_shape", ")", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.add_salt_noise": [[283, 289], ["numpy.random.randint", "img.flatten.flatten", "img.flatten.reshape", "int", "img.flatten.max"], "function", ["None"], ["", "def", "add_salt_noise", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "img", ".", "size", ",", "size", "=", "int", "(", "img", ".", "size", "*", ".05", ")", ")", "\n", "org_shape", "=", "img", ".", "shape", "\n", "img", "=", "img", ".", "flatten", "(", ")", "\n", "img", "[", "idx", "]", "=", "255.", "if", "img", ".", "max", "(", ")", ">", "1.", "else", "1.", "\n", "return", "img", ".", "reshape", "(", "org_shape", ")", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.convert2pil": [[291, 293], ["PIL.Image.fromarray", "img.astype"], "function", ["None"], ["", "def", "convert2pil", "(", "img", ")", ":", "\n", "    ", "return", "Image", ".", "fromarray", "(", "img", ".", "astype", "(", "\"uint8\"", ")", ",", "mode", "=", "\"RGB\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.convert2np": [[295, 297], ["numpy.array().reshape().astype", "numpy.array().reshape", "numpy.array", "pic.getdata"], "function", ["None"], ["", "def", "convert2np", "(", "pic", ")", ":", "\n", "    ", "return", "np", ".", "array", "(", "pic", ".", "getdata", "(", ")", ")", ".", "reshape", "(", "pic", ".", "size", "[", "1", "]", ",", "pic", ".", "size", "[", "0", "]", ",", "3", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.add_speckle_noise": [[299, 303], ["img.std", "numpy.random.normal"], "function", ["None"], ["", "def", "add_speckle_noise", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "std", "=", "img", ".", "std", "(", ")", "\n", "noisy", "=", "img", "+", ".0005", "*", "img", "*", "np", ".", "random", ".", "normal", "(", "loc", "=", "0", ",", "scale", "=", "std", ",", "size", "=", "img", ".", "shape", ")", "\n", "return", "noisy", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.random_brightness": [[305, 308], ["PIL.ImageEnhance.Brightness", "img_utils.convert2pil", "img_utils.convert2np", "ImageEnhance.Brightness.enhance", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.convert2pil", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.convert2np"], ["", "def", "random_brightness", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "b", "=", "ImageEnhance", ".", "Brightness", "(", "convert2pil", "(", "img", ")", ")", "\n", "return", "convert2np", "(", "b", ".", "enhance", "(", "np", ".", "random", ".", "uniform", "(", "low", "=", ".7", ",", "high", "=", "1.", ")", ")", ")", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.random_contrast": [[310, 313], ["PIL.ImageEnhance.Contrast", "img_utils.convert2pil", "img_utils.convert2np", "ImageEnhance.Contrast.enhance", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.convert2pil", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.convert2np"], ["", "def", "random_contrast", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "c", "=", "ImageEnhance", ".", "Contrast", "(", "convert2pil", "(", "img", ")", ")", "\n", "return", "convert2np", "(", "c", ".", "enhance", "(", "np", ".", "random", ".", "uniform", "(", "low", "=", ".7", ",", "high", "=", "1.", ")", ")", ")", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.random_saturation": [[315, 318], ["PIL.ImageEnhance.Color", "img_utils.convert2pil", "img_utils.convert2np", "ImageEnhance.Color.enhance", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.convert2pil", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.convert2np"], ["", "def", "random_saturation", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "c", "=", "ImageEnhance", ".", "Color", "(", "convert2pil", "(", "img", ")", ")", "\n", "return", "convert2np", "(", "c", ".", "enhance", "(", "np", ".", "random", ".", "uniform", "(", "low", "=", ".7", ",", "high", "=", "1.", ")", ")", ")", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.histogram_equalization": [[320, 328], ["cv2.cvtColor", "cv2.equalizeHist", "img.astype", "cv2.cvtColor().astype", "cv2.cvtColor"], "function", ["None"], ["", "def", "histogram_equalization", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "img_yuv", "=", "cv2", ".", "cvtColor", "(", "img", ".", "astype", "(", "\"uint8\"", ")", ",", "cv2", ".", "COLOR_RGB2YUV", ")", "\n", "\n", "# equalize the histogram of the Y channel", "\n", "img_yuv", "[", ":", ",", ":", ",", "0", "]", "=", "cv2", ".", "equalizeHist", "(", "img_yuv", "[", ":", ",", ":", ",", "0", "]", ")", "\n", "\n", "# convert the YUV image back to RGB format", "\n", "return", "cv2", ".", "cvtColor", "(", "img_yuv", ",", "cv2", ".", "COLOR_YUV2RGB", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.skew": [[330, 333], ["warnings.warn"], "function", ["None"], ["", "def", "skew", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "warnings", ".", "warn", "(", "\"Skewing is not implemented yet!\"", ",", "RuntimeWarning", ")", "\n", "return", "img", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.random_rotation": [[335, 338], ["numpy.random.randint", "imutils.rotate", "imutils.rotate", "imutils.rotate"], "function", ["None"], ["", "def", "random_rotation", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "angle", "=", "np", ".", "random", ".", "randint", "(", "-", "20", ",", "high", "=", "20", ")", "# 10", "\n", "return", "rotate", "(", "img", ",", "angle", ")", ",", "rotate", "(", "label", ",", "angle", ")", ",", "rotate", "(", "attention", ",", "angle", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.shear": [[340, 343], ["warnings.warn"], "function", ["None"], ["", "def", "shear", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "warnings", ".", "warn", "(", "\"Shearing is not implemented yet!\"", ",", "RuntimeWarning", ")", "\n", "return", "img", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.blur": [[345, 348], ["PIL.ImageEnhance.Sharpness", "img_utils.convert2pil", "img_utils.convert2np", "ImageEnhance.Sharpness.enhance", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.convert2pil", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.convert2np"], ["", "def", "blur", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "s", "=", "ImageEnhance", ".", "Sharpness", "(", "convert2pil", "(", "img", ")", ")", "\n", "return", "convert2np", "(", "s", ".", "enhance", "(", "np", ".", "random", ".", "uniform", "(", "low", "=", ".7", ",", "high", "=", "1.", ")", ")", ")", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.random_erase": [[350, 357], ["img.copy.copy", "numpy.random.randint", "numpy.random.uniform", "img.copy.max"], "function", ["None"], ["", "def", "random_erase", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "img", "=", "img", ".", "copy", "(", ")", "\n", "erase_size", "=", "10", "\n", "max_val", "=", "255", "if", "img", ".", "max", "(", ")", ">", "1", "else", "1", "\n", "x", "=", "np", ".", "random", ".", "randint", "(", "erase_size", ",", "high", "=", "img", ".", "shape", "[", "0", "]", ")", "\n", "img", "[", "x", "-", "erase_size", ":", "x", ",", "x", "-", "erase_size", ":", "x", ",", ":", "]", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0", ",", "high", "=", "max_val", ",", "size", "=", "(", "erase_size", ",", "erase_size", ",", "3", ")", ")", "\n", "return", "img", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.add_brown_noise": [[359, 362], ["warnings.warn"], "function", ["None"], ["", "def", "add_brown_noise", "(", "img", ",", "label", ",", "attention", ")", ":", "\n", "    ", "warnings", ".", "warn", "(", "\"Brownian noise is not implemented yet!\"", ",", "RuntimeWarning", ")", "\n", "return", "img", ",", "label", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.evaluate.evaluate_ENDOVIS": [[15, 258], ["tensorflow.GPUOptions", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "u_net.create_conv_net", "tensorflow.image.total_variation", "tensorflow.losses.mean_squared_error", "range", "tensorflow.contrib.framework.assign_from_checkpoint", "tf.Session.run", "print", "print", "get_batch.Batch", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "range", "precision", "recall", "print", "print", "print", "print", "print", "print", "print", "tensorflow.ConfigProto", "tensorflow.contrib.slim.get_variables_to_restore", "len", "get_batch.Batch.get_batch", "tf.Session.run", "output[].copy", "cv2.GaussianBlur", "nms.nms", "range", "range", "enumerate", "enumerate", "enumerate", "range", "numpy.sqrt", "f1", "cv2.addWeighted", "blur[].copy", "range", "cv2.minMaxLoc", "numpy.zeros", "enumerate", "scipy.optimize.linear_sum_assignment", "zip", "len", "list", "enumerate", "scipy.optimize.linear_sum_assignment", "zip", "cv2.GaussianBlur", "cv2.minMaxLoc", "loc_pred[].append", "loc_true[].append", "enumerate", "candidates[].append", "len", "range", "zip", "len", "enumerate", "numpy.zeros", "enumerate", "len", "abs", "numpy.sqrt", "len", "len", "line_integral.compute_integral", "parsed.append", "parsed[].insert", "parsed[].insert", "parsed[].insert", "numpy.zeros", "numpy.sqrt", "len", "len", "len", "len", "len", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.create_conv_net", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.get_batch.Batch.get_batch", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.nms.nms", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.line_integral.compute_integral"], ["def", "evaluate_ENDOVIS", "(", "root", ",", "model", ")", ":", "\n", "\n", "    ", "T", "=", "20", "# threshold", "\n", "\n", "# GPU Config", "\n", "gpu_options", "=", "tf", ".", "GPUOptions", "(", "per_process_gpu_memory_fraction", "=", ".9", ")", "\n", "\n", "# Start session and initialize weights", "\n", "# tf.reset_default_graph()", "\n", "# imported_meta = tf.train.import_meta_graph(model + \"/model.ckpt.meta\")", "\n", "sess", "=", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "gpu_options", "=", "gpu_options", ")", ")", "\n", "# imported_meta.restore(sess, tf.train.latest_checkpoint(model + \"/\"))", "\n", "# for n in tf.get_default_graph().as_graph_def().node:", "\n", "#     if \"output_map\" in n.name:", "\n", "#         print(n.name)", "\n", "\n", "net_in", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "1", ",", "256", ",", "320", ",", "3", "]", ")", "\n", "y", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "1", ",", "256", ",", "320", ",", "9", "]", ")", "\n", "is_training", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "keep_prob", "=", ".9", "\n", "num_parts", "=", "5", "\n", "num_connections", "=", "4", "\n", "\n", "net_out", ",", "attention", "=", "unet", "(", "net_in", ",", "keep_prob", ",", "3", ",", "num_parts", "+", "num_connections", ",", "\n", "is_training", "=", "is_training", ",", "features_root", "=", "64", ",", "alpha", "=", "1", "/", "5.5", ")", "\n", "tv", "=", "tf", ".", "image", ".", "total_variation", "(", "net_out", ")", "\n", "loss", "=", "tf", ".", "losses", ".", "mean_squared_error", "(", "labels", "=", "y", ",", "predictions", "=", "net_out", ")", "\n", "# net_out = post_processing(net_out)", "\n", "# print(attention[0].get_shape())", "\n", "# print(attention[1].get_shape())", "\n", "\n", "if", "model", "is", "not", "None", ":", "\n", "        ", "restore_op", ",", "restore_dict", "=", "tf", ".", "contrib", ".", "framework", ".", "assign_from_checkpoint", "(", "\n", "model", "+", "\"/model.ckpt\"", ",", "\n", "tf", ".", "contrib", ".", "slim", ".", "get_variables_to_restore", "(", ")", ",", "\n", "ignore_missing_vars", "=", "True", "\n", ")", "\n", "sess", ".", "run", "(", "restore_op", ",", "feed_dict", "=", "restore_dict", ")", "\n", "print", "(", "\"Restored session and reset global step\"", ")", "\n", "\n", "# net_in = tf.get_default_graph().get_tensor_by_name(\"Placeholder:0\")", "\n", "# is_training = tf.get_default_graph().get_tensor_by_name(\"Placeholder_1:0\")", "\n", "# try:", "\n", "#     net_out = tf.get_default_graph().get_tensor_by_name(\"output_map/Relu:0\")", "\n", "# except:", "\n", "# net_out = tf.get_default_graph().get_tensor_by_name(\"output_map/conv2d/dropout/cond/Merge:0\")", "\n", "\n", "", "mode", "=", "(", "\"training\"", ",", "\"test\"", ")", "\n", "testing", "=", "(", "False", ",", "True", ")", "\n", "\n", "for", "m", "in", "range", "(", "2", ")", ":", "\n", "\n", "        ", "print", "(", "\"Results for\"", ",", "mode", "[", "m", "]", ")", "\n", "\n", "b", "=", "Batch", "(", "root", ",", "1", ",", "testing", "=", "testing", "[", "m", "]", ",", "augment", "=", "False", ",", "dataset", "=", "\"ENDOVIS\"", ",", "include_unlabelled", "=", "False", ",", "\n", "train_postprocessing", "=", "True", ")", "# False for MSE", "\n", "false_pos", "=", "np", ".", "zeros", "(", "(", "5", ",", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "false_neg", "=", "np", ".", "zeros", "(", "(", "5", ",", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "true_pos", "=", "np", ".", "zeros", "(", "(", "5", ",", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "rmse", "=", "np", ".", "zeros_like", "(", "true_pos", ")", "\n", "mae", "=", "np", ".", "zeros_like", "(", "rmse", ")", "\n", "counter", "=", "np", ".", "zeros_like", "(", "rmse", ")", "\n", "\n", "precision", "=", "lambda", "fp", ",", "tp", ":", "tp", "/", "(", "tp", "+", "fp", ")", "\n", "recall", "=", "lambda", "fn", ",", "tp", ":", "tp", "/", "(", "tp", "+", "fn", ")", "\n", "# exclude = (\"test5\", \"test6\")", "\n", "# exclude = (\"test1\", \"test2\", \"test3\", \"test4\")", "\n", "exclude", "=", "(", ")", "\n", "w_multiplier", "=", "720.", "/", "320.", "\n", "h_multiplier", "=", "576.", "/", "256.", "\n", "avr_loss", "=", "0.", "\n", "\n", "for", "_", "in", "range", "(", "len", "(", "b", ".", "img_list", ")", ")", ":", "\n", "            ", "img", ",", "label", ",", "_", ",", "_", "=", "b", ".", "get_batch", "(", ")", "\n", "# if b.batch_instrument_count[0] == 1:", "\n", "#     continue", "\n", "skip", "=", "False", "\n", "for", "e", "in", "exclude", ":", "\n", "                ", "if", "e", "in", "b", ".", "name_list", "[", "0", "]", ":", "\n", "                    ", "skip", "=", "True", "\n", "break", "\n", "", "", "if", "skip", ":", "\n", "                ", "continue", "\n", "# t_loss = sess.run(loss, feed_dict={net_in: img, is_training: False, y: label})", "\n", "# avr_loss += t_loss", "\n", "\n", "\n", "", "output", ",", "a1", ",", "a0", ",", "total_var", "=", "sess", ".", "run", "(", "[", "net_out", ",", "attention", "[", "1", "]", ",", "attention", "[", "0", "]", ",", "tv", "]", ",", "\n", "feed_dict", "=", "{", "net_in", ":", "img", ",", "is_training", ":", "False", "}", ")", "\n", "# print(total_var)", "\n", "blur", "=", "output", "[", "0", "]", ".", "copy", "(", ")", "\n", "blur", "[", ":", ",", ":", ",", ":", "5", "]", "=", "cv2", ".", "GaussianBlur", "(", "blur", "[", ":", ",", ":", ",", ":", "5", "]", ",", "(", "T", "+", "1", ",", "T", "+", "1", ")", ",", "0", ")", "\n", "_", ",", "blur", "[", ":", ",", ":", ",", ":", "5", "]", "=", "nms", "(", "blur", "[", ":", ",", ":", ",", ":", "5", "]", ")", "\n", "\n", "# if blur[:, :, 5:].std() < .01:", "\n", "if", "1000", ">", "total_var", ">", "700", ":", "\n", "                ", "mask", "=", "cv2", ".", "addWeighted", "(", "blur", "[", ":", ",", ":", ",", "5", ":", "]", ",", "1", ",", "cv2", ".", "GaussianBlur", "(", "blur", "[", ":", ",", ":", ",", "5", ":", "]", ",", "(", "T", "+", "1", ",", "T", "+", "1", ")", ",", "0", ")", ",", "-", "1", ",", "0", ")", "\n", "blur", "[", ":", ",", ":", ",", "5", ":", "]", "+=", "mask", "\n", "\n", "", "loc_pred", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "\n", "loc_true", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "\n", "\n", "k", "=", "5", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "                ", "heatmap", "=", "blur", "[", ":", ",", ":", ",", "i", "]", ".", "copy", "(", ")", "\n", "for", "j", "in", "range", "(", "k", ")", ":", "\n", "                    ", "_", ",", "_", ",", "_", ",", "max_loc", "=", "cv2", ".", "minMaxLoc", "(", "heatmap", ")", "\n", "if", "max_loc", "[", "0", "]", "==", "max_loc", "[", "1", "]", "==", "0", ":", "\n", "                        ", "break", "\n", "", "loc_pred", "[", "i", "]", ".", "append", "(", "max_loc", ")", "\n", "y", ",", "x", "=", "max_loc", "\n", "heatmap", "[", "x", "-", "5", ":", "x", "+", "5", ",", "y", "-", "5", ":", "y", "+", "5", "]", "=", "0.", "\n", "\n", "", "", "for", "ch", "in", "range", "(", "10", ")", ":", "\n", "                ", "_", ",", "_", ",", "_", ",", "max_loc", "=", "cv2", ".", "minMaxLoc", "(", "label", "[", "0", "]", "[", ":", ",", ":", ",", "ch", "]", ")", "\n", "if", "max_loc", "[", "0", "]", "!=", "0", "and", "max_loc", "[", "1", "]", "!=", "0", ":", "\n", "                    ", "loc_true", "[", "ch", "%", "5", "]", ".", "append", "(", "max_loc", ")", "\n", "\n", "# print(loc_pred[0])", "\n", "# print(loc_true[0])", "\n", "# return", "\n", "\n", "", "", "candidates", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "\n", "\n", "for", "idx", ",", "tmp", "in", "enumerate", "(", "[", "(", "0", ",", "2", ",", "5", ")", ",", "(", "1", ",", "2", ",", "6", ")", ",", "(", "2", ",", "3", ",", "7", ")", ",", "(", "3", ",", "4", ",", "8", ")", "]", ")", ":", "\n", "\n", "                ", "joint_idx1", ",", "joint_idx2", ",", "connection_idx", "=", "tmp", "[", "0", "]", ",", "tmp", "[", "1", "]", ",", "tmp", "[", "2", "]", "\n", "\n", "matching_scores", "=", "np", ".", "zeros", "(", "(", "len", "(", "loc_pred", "[", "joint_idx1", "]", ")", ",", "len", "(", "loc_pred", "[", "joint_idx2", "]", ")", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "for", "y", ",", "pt1", "in", "enumerate", "(", "loc_pred", "[", "joint_idx1", "]", ")", ":", "\n", "                    ", "for", "x", ",", "pt2", "in", "enumerate", "(", "loc_pred", "[", "joint_idx2", "]", ")", ":", "\n", "\n", "                        ", "matching_scores", "[", "y", ",", "x", "]", "=", "compute_integral", "(", "pt1", ",", "pt2", ",", "blur", "[", ":", ",", ":", ",", "connection_idx", "]", ")", "\n", "# print(\"left2head\", matching_scores)", "\n", "\n", "# print(matching_scores)", "\n", "", "", "row_idx", ",", "col_idx", "=", "linear_sum_assignment", "(", "-", "matching_scores", ")", "\n", "\n", "for", "a", ",", "c", "in", "zip", "(", "row_idx", ",", "col_idx", ")", ":", "\n", "                    ", "candidates", "[", "idx", "]", ".", "append", "(", "(", "loc_pred", "[", "joint_idx1", "]", "[", "a", "]", ",", "loc_pred", "[", "joint_idx2", "]", "[", "c", "]", ")", ")", "\n", "\n", "# print(candidates)", "\n", "\n", "", "", "parsed", "=", "[", "]", "\n", "for", "pairs", "in", "candidates", "[", "-", "1", "]", ":", "\n", "                ", "shaft", ",", "end", "=", "pairs", "\n", "for", "next_pairs", "in", "candidates", "[", "-", "2", "]", ":", "\n", "                    ", "head", ",", "shaft_next", "=", "next_pairs", "\n", "if", "shaft", "[", "0", "]", "==", "shaft_next", "[", "0", "]", "and", "shaft", "[", "1", "]", "==", "shaft_next", "[", "1", "]", ":", "\n", "                        ", "parsed", ".", "append", "(", "[", "head", ",", "shaft", ",", "end", "]", ")", "\n", "\n", "# print(\"parsed top:\", parsed2)", "\n", "\n", "", "", "", "for", "i", ",", "partial_pose", "in", "enumerate", "(", "parsed", ")", ":", "\n", "                ", "head", ",", "_", ",", "_", "=", "partial_pose", "\n", "for", "next_pairs", "in", "candidates", "[", "-", "3", "]", ":", "\n", "                    ", "right", ",", "head_next", "=", "next_pairs", "\n", "if", "head", "[", "0", "]", "==", "head_next", "[", "0", "]", "and", "head", "[", "1", "]", "==", "head_next", "[", "1", "]", ":", "\n", "                        ", "parsed", "[", "i", "]", ".", "insert", "(", "0", ",", "right", ")", "\n", "", "", "for", "next_pairs", "in", "candidates", "[", "-", "4", "]", ":", "\n", "                    ", "left", ",", "head_next", "=", "next_pairs", "\n", "if", "head", "[", "0", "]", "==", "head_next", "[", "0", "]", "and", "head", "[", "1", "]", "==", "head_next", "[", "1", "]", ":", "\n", "                        ", "parsed", "[", "i", "]", ".", "insert", "(", "0", ",", "left", ")", "\n", "# print(parsed)", "\n", "\n", "", "", "", "for", "i", ",", "pose", "in", "enumerate", "(", "parsed", ")", ":", "\n", "                ", "if", "len", "(", "pose", ")", "<", "5", ":", "\n", "                    ", "for", "_", "in", "range", "(", "5", "-", "len", "(", "pose", ")", ")", ":", "\n", "                        ", "parsed", "[", "i", "]", ".", "insert", "(", "0", ",", "(", ")", ")", "\n", "\n", "", "", "", "parse_failed", "=", "False", "\n", "final_prediction", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "\n", "if", "len", "(", "parsed", ")", "==", "2", ":", "\n", "                ", "inst1", ",", "inst2", "=", "parsed", "\n", "final_prediction", "=", "list", "(", "zip", "(", "inst1", ",", "inst2", ")", ")", "\n", "", "elif", "len", "(", "parsed", ")", "==", "1", ":", "\n", "                ", "final_prediction", "=", "parsed", "\n", "", "else", ":", "\n", "                ", "parse_failed", "=", "True", "\n", "for", "i", ",", "pair", "in", "enumerate", "(", "candidates", ")", ":", "\n", "# print(pair[0][0])", "\n", "                    ", "if", "len", "(", "pair", ")", ">=", "2", ":", "\n", "                        ", "final_prediction", "[", "i", "]", "=", "[", "pair", "[", "0", "]", "[", "0", "]", ",", "pair", "[", "0", "]", "[", "1", "]", "]", "\n", "", "elif", "len", "(", "pair", ")", "==", "1", ":", "\n", "                        ", "final_prediction", "[", "i", "]", "=", "[", "pair", "[", "0", "]", "[", "0", "]", "]", "\n", "", "else", ":", "\n", "                        ", "final_prediction", "[", "i", "]", "=", "[", "]", "\n", "# print(final_prediction, \"\\n\")", "\n", "\n", "# print(final_prediction)", "\n", "# print(loc_true)", "\n", "\n", "# return", "\n", "\n", "", "", "", "for", "k", "in", "range", "(", "5", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "cost_matrix", "=", "np", ".", "zeros", "(", "(", "len", "(", "loc_true", "[", "k", "]", ")", ",", "len", "(", "final_prediction", "[", "k", "]", ")", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "pred", "=", "final_prediction", "[", "k", "]", "\n", "", "except", "IndexError", ":", "\n", "# print(final_prediction[0])", "\n", "                    ", "cost_matrix", "=", "np", ".", "zeros", "(", "(", "len", "(", "loc_true", "[", "k", "]", ")", ",", "len", "(", "final_prediction", "[", "0", "]", "[", "k", "]", ")", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "pred", "=", "[", "final_prediction", "[", "0", "]", "[", "k", "]", "]", "\n", "\n", "# print(b.batch_instrument_count[0] - len(final_prediction[k]))", "\n", "", "for", "y", ",", "e_true", "in", "enumerate", "(", "loc_true", "[", "k", "]", ")", ":", "\n", "                    ", "for", "x", ",", "e_pred", "in", "enumerate", "(", "pred", ")", ":", "# (final_prediction[k]):", "\n", "# print(e_true, e_pred)", "\n", "                        ", "try", ":", "\n", "                            ", "cost_matrix", "[", "y", ",", "x", "]", "=", "(", "(", "e_pred", "[", "0", "]", "-", "e_true", "[", "0", "]", ")", "*", "h_multiplier", ")", "**", "2", "+", "(", "(", "e_pred", "[", "1", "]", "-", "e_true", "[", "1", "]", ")", "*", "w_multiplier", ")", "**", "2", "\n", "", "except", "IndexError", ":", "\n", "                            ", "if", "len", "(", "final_prediction", "[", "0", "]", "[", "k", "]", ")", "!=", "0", ":", "\n", "                                ", "cost_matrix", "[", "y", ",", "x", "]", "=", "10000", "\n", "", "else", ":", "\n", "                                ", "continue", "\n", "\n", "", "", "", "", "row_idx", ",", "col_idx", "=", "linear_sum_assignment", "(", "cost_matrix", ")", "\n", "\n", "if", "len", "(", "pred", ")", "<", "b", ".", "batch_instrument_count", "[", "0", "]", ":", "\n", "                    ", "false_neg", "[", "k", "]", "+=", "abs", "(", "len", "(", "pred", ")", "-", "b", ".", "batch_instrument_count", "[", "0", "]", ")", "\n", "\n", "", "for", "r", ",", "c", "in", "zip", "(", "row_idx", ",", "col_idx", ")", ":", "\n", "# check true positive and additional false positive", "\n", "                    ", "mae", "[", "k", "]", "+=", "np", ".", "sqrt", "(", "cost_matrix", "[", "r", ",", "c", "]", ")", "\n", "counter", "[", "k", "]", "+=", "1", "\n", "if", "np", ".", "sqrt", "(", "cost_matrix", "[", "r", ",", "c", "]", ")", "<", "T", ":", "\n", "                        ", "rmse", "[", "k", "]", "+=", "cost_matrix", "[", "r", ",", "c", "]", "\n", "true_pos", "[", "k", "]", "+=", "1", "\n", "# print(cost_matrix[r, c])", "\n", "", "else", ":", "\n", "                        ", "false_pos", "[", "k", "]", "+=", "1", "\n", "\n", "", "", "", "", "f1", "=", "lambda", "p", ",", "r", ":", "(", "2", "*", "p", "*", "r", ")", "/", "(", "p", "+", "r", ")", "\n", "p", "=", "precision", "(", "false_pos", ",", "true_pos", ")", "\n", "r", "=", "recall", "(", "false_neg", ",", "true_pos", ")", "\n", "print", "(", "true_pos", ",", "false_neg", ",", "false_pos", ")", "\n", "print", "(", "\"RMSE\"", ",", "np", ".", "sqrt", "(", "rmse", "/", "true_pos", ")", ")", "\n", "print", "(", "\"Precision\"", ",", "p", ")", "\n", "print", "(", "\"Recall\"", ",", "r", ")", "\n", "print", "(", "\"F1\"", ",", "f1", "(", "p", ",", "r", ")", ")", "\n", "print", "(", "\"MEA\"", ",", "mae", "/", "counter", ")", "\n", "print", "(", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.evaluate.evaluate_RMIT": [[261, 364], ["tensorflow.GPUOptions", "tensorflow.reset_default_graph", "tensorflow.train.import_meta_graph", "tensorflow.Session", "tf.train.import_meta_graph.restore", "tensorflow.get_default_graph().get_tensor_by_name", "tensorflow.get_default_graph().get_tensor_by_name", "range", "tf.Session.close", "tensorflow.train.latest_checkpoint", "tensorflow.get_default_graph().get_tensor_by_name", "print", "numpy.zeros", "numpy.zeros_like", "get_batch.Batch", "range", "float", "float", "print", "print", "print", "print", "print", "numpy.array", "numpy.divide", "numpy.sqrt", "print", "print", "tensorflow.ConfigProto", "tensorflow.get_default_graph", "tensorflow.get_default_graph", "tensorflow.get_default_graph().get_tensor_by_name", "len", "get_batch.Batch.get_batch", "tf.Session.run", "cv2.GaussianBlur", "evaluate.get_minmaxloc", "evaluate.get_minmaxloc", "numpy.abs", "range", "euc_list.append", "numpy.sqrt", "cv2.circle.astype", "enumerate", "cv2.imwrite", "len", "len", "open", "json.dump", "range", "tensorflow.get_default_graph", "numpy.sqrt", "euc.append", "cv2.circle", "numpy.array", "float", "tensorflow.get_default_graph", "img[].copy", "len", "failed.append", "int", "int", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.get_batch.Batch.get_batch", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.evaluate.get_minmaxloc", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.evaluate.get_minmaxloc"], ["", "", "def", "evaluate_RMIT", "(", "root", ",", "model", ")", ":", "\n", "    ", "T", "=", "15", "# threshold", "\n", "\n", "# GPU Config", "\n", "gpu_options", "=", "tf", ".", "GPUOptions", "(", "per_process_gpu_memory_fraction", "=", ".9", ")", "\n", "\n", "# Start session and initialize weights", "\n", "tf", ".", "reset_default_graph", "(", ")", "\n", "imported_meta", "=", "tf", ".", "train", ".", "import_meta_graph", "(", "model", "+", "\"/model.ckpt.meta\"", ")", "\n", "sess", "=", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "gpu_options", "=", "gpu_options", ")", ")", "\n", "imported_meta", ".", "restore", "(", "sess", ",", "tf", ".", "train", ".", "latest_checkpoint", "(", "model", "+", "\"/\"", ")", ")", "\n", "# for n in tf.get_default_graph().as_graph_def().node:", "\n", "#     if \"output_map\" in n.name:", "\n", "#         print(n.name)", "\n", "\n", "net_in", "=", "tf", ".", "get_default_graph", "(", ")", ".", "get_tensor_by_name", "(", "\"Placeholder:0\"", ")", "\n", "is_training", "=", "tf", ".", "get_default_graph", "(", ")", ".", "get_tensor_by_name", "(", "\"Placeholder_1:0\"", ")", "\n", "try", ":", "\n", "        ", "net_out", "=", "tf", ".", "get_default_graph", "(", ")", ".", "get_tensor_by_name", "(", "\"output_map/Relu:0\"", ")", "\n", "", "except", ":", "\n", "        ", "net_out", "=", "tf", ".", "get_default_graph", "(", ")", ".", "get_tensor_by_name", "(", "\"output_map/conv2d/dropout/cond/Merge:0\"", ")", "\n", "\n", "", "mode", "=", "(", "\"training\"", ",", "\"test\"", ")", "\n", "testing", "=", "(", "False", ",", "True", ")", "\n", "\n", "for", "k", "in", "range", "(", "2", ")", ":", "\n", "\n", "        ", "print", "(", "\"Results for\"", ",", "mode", "[", "k", "]", ")", "\n", "\n", "diff_acc", "=", "np", ".", "zeros", "(", "(", "4", ",", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "unscaled", "=", "np", ".", "zeros_like", "(", "diff_acc", ")", "\n", "b", "=", "Batch", "(", "root", ",", "1", ",", "testing", "=", "testing", "[", "k", "]", ",", "augment", "=", "False", ",", "dataset", "=", "\"RMIT\"", ")", "\n", "detected", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", "\n", "euc_list", "=", "[", "]", "\n", "failed", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "b", ".", "img_list", ")", ")", ":", "\n", "            ", "img", ",", "label", ",", "_", ",", "_", "=", "b", ".", "get_batch", "(", ")", "\n", "output", "=", "sess", ".", "run", "(", "net_out", ",", "feed_dict", "=", "{", "net_in", ":", "[", "img", "[", "0", "]", "]", "*", "5", ",", "is_training", ":", "False", "}", ")", "\n", "blur", "=", "cv2", ".", "GaussianBlur", "(", "output", "[", "0", "]", ",", "(", "5", ",", "5", ")", ",", "0", ")", "\n", "loc_pred", "=", "get_minmaxloc", "(", "blur", ")", "\n", "loc_true", "=", "get_minmaxloc", "(", "label", "[", "0", "]", ")", "\n", "w", "=", "640", "\n", "h", "=", "480", "\n", "########################################################", "\n", "d", "=", "np", ".", "abs", "(", "loc_pred", "-", "loc_true", ")", "\n", "d", "[", ":", ",", "0", "]", "=", "(", "d", "[", ":", ",", "0", "]", "*", "h", ")", "/", "288.", "\n", "d", "[", ":", ",", "1", "]", "=", "(", "d", "[", ":", ",", "1", "]", "*", "w", ")", "/", "384.", "\n", "euc", "=", "[", "]", "\n", "for", "l", "in", "range", "(", "4", ")", ":", "\n", "                ", "euc_dist", "=", "np", ".", "sqrt", "(", "d", "[", "l", ",", "0", "]", "**", "2", "+", "d", "[", "l", ",", "1", "]", "**", "2", ")", "\n", "if", "euc_dist", "<", "T", ":", "\n", "                    ", "detected", "[", "l", "]", "+=", "1", "\n", "", "elif", "l", "==", "2", ":", "\n", "                    ", "failed", ".", "append", "(", "img", "[", "0", "]", ")", "\n", "# print(\"Failed:\", b.name_list[0])", "\n", "", "euc", ".", "append", "(", "euc_dist", ")", "\n", "", "euc_list", ".", "append", "(", "euc", ")", "\n", "########################################################", "\n", "diff", "=", "np", ".", "sqrt", "(", "(", "loc_true", "-", "loc_pred", ")", "**", "2", ")", "\n", "unscaled", "+=", "diff", "\n", "diff", "[", ":", ",", "0", "]", "=", "(", "diff", "[", ":", ",", "0", "]", "*", "h", ")", "/", "288.", "\n", "diff", "[", ":", ",", "1", "]", "=", "(", "diff", "[", ":", ",", "1", "]", "*", "w", ")", "/", "384.", "\n", "diff_acc", "+=", "diff", "\n", "\n", "img_", "=", "img", "[", "0", "]", ".", "copy", "(", ")", "*", "127.5", "+", "127.5", "\n", "img_", "=", "img_", ".", "astype", "(", "\"uint8\"", ")", "\n", "colors", "=", "[", "(", "0", ",", "0", ",", "255", ")", ",", "(", "0", ",", "255", ",", "0", ")", ",", "(", "255", ",", "0", ",", "0", ")", ",", "(", "255", ",", "255", ",", "0", ")", "]", "\n", "for", "j", ",", "c", "in", "enumerate", "(", "loc_pred", ")", ":", "\n", "                ", "img_", "=", "cv2", ".", "circle", "(", "img_", ",", "(", "int", "(", "c", "[", "0", "]", ")", ",", "int", "(", "c", "[", "1", "]", ")", ")", ",", "2", ",", "colors", "[", "j", "]", ",", "-", "1", ")", "\n", "", "cv2", ".", "imwrite", "(", "\"output_frames/{}.png\"", ".", "format", "(", "b", ".", "name_list", "[", "0", "]", ")", ",", "img_", ")", "\n", "\n", "", "diff_acc", "/=", "float", "(", "len", "(", "b", ".", "img_list", ")", ")", "\n", "unscaled", "/=", "float", "(", "len", "(", "b", ".", "img_list", ")", ")", "\n", "print", "(", "\"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"", ")", "\n", "print", "(", "\"Scaled:\"", ",", "diff_acc", ")", "\n", "print", "(", "\"Unscaled:\"", ",", "unscaled", ")", "\n", "print", "(", "\"Accuracy:\"", ",", "np", ".", "array", "(", "detected", ")", "/", "float", "(", "len", "(", "b", ".", "img_list", ")", ")", ")", "\n", "print", "(", "\"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"", ")", "\n", "with", "open", "(", "\"evaluation_results.json\"", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "json", ".", "dump", "(", "{", "\"p1\"", ":", "\"(\"", "+", "str", "(", "diff_acc", "[", "0", ",", "0", "]", ")", "+", "\", \"", "+", "str", "(", "diff_acc", "[", "0", ",", "1", "]", ")", "+", "\")\"", ",", "\n", "\"p2\"", ":", "\"(\"", "+", "str", "(", "diff_acc", "[", "1", ",", "0", "]", ")", "+", "\", \"", "+", "str", "(", "diff_acc", "[", "1", ",", "1", "]", ")", "+", "\")\"", ",", "\n", "\"p3\"", ":", "\"(\"", "+", "str", "(", "diff_acc", "[", "2", ",", "0", "]", ")", "+", "\", \"", "+", "str", "(", "diff_acc", "[", "2", ",", "1", "]", ")", "+", "\")\"", "}", ",", "\n", "f", ")", "\n", "\n", "", "counter", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", "\n", "acc", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", "\n", "\n", "for", "x", "in", "euc_list", ":", "\n", "            ", "for", "j", "in", "range", "(", "4", ")", ":", "\n", "                ", "if", "x", "[", "j", "]", "<", "15", ":", "\n", "                    ", "counter", "[", "j", "]", "+=", "1", "\n", "acc", "[", "j", "]", "+=", "x", "[", "j", "]", "**", "2", "\n", "\n", "", "", "", "acc", "=", "np", ".", "array", "(", "acc", ")", "\n", "acc", "=", "np", ".", "divide", "(", "acc", ",", "counter", ")", "\n", "acc", "=", "np", ".", "sqrt", "(", "acc", ")", "\n", "print", "(", "\"\\n RMSE on detected parts:\"", ")", "\n", "print", "(", "acc", ")", "\n", "\n", "", "sess", ".", "close", "(", ")", "\n", "\n", "return", "failed", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.evaluate.get_minmaxloc": [[366, 375], ["range", "numpy.array", "cv2.minMaxLoc", "loc.append"], "function", ["None"], ["", "def", "get_minmaxloc", "(", "M", ")", ":", "\n", "\n", "    ", "loc", "=", "[", "]", "\n", "\n", "for", "ch", "in", "range", "(", "M", ".", "shape", "[", "-", "1", "]", ")", ":", "\n", "        ", "_", ",", "_", ",", "_", ",", "max_loc", "=", "cv2", ".", "minMaxLoc", "(", "M", "[", ":", ",", ":", ",", "ch", "]", ")", "\n", "loc", ".", "append", "(", "max_loc", ")", "\n", "\n", "", "return", "np", ".", "array", "(", "loc", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.evaluate.main": [[377, 403], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "evaluate.evaluate_RMIT", "evaluate.evaluate_ENDOVIS"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.evaluate.evaluate_RMIT", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.evaluate.evaluate_ENDOVIS"], ["", "def", "main", "(", ")", ":", "\n", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--root\"", ",", "help", "=", "\"Directory that contains the data\"", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--model_dir\"", ",", "type", "=", "str", ",", "required", "=", "True", ",", "help", "=", "\"Checkpoint directory\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--gpu_id\"", ",", "type", "=", "str", ",", "default", "=", "\"0\"", ",", "help", "=", "\"Gpu id\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--dataset\"", ",", "required", "=", "True", ",", "help", "=", "\"Name of the dataset\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--speedtest\"", ",", "required", "=", "False", ",", "help", "=", "\"Measure runtime\"", ",", "type", "=", "str", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "args", ".", "gpu_id", "\n", "# os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"\"", "\n", "\n", "if", "args", ".", "dataset", "==", "\"RMIT\"", ":", "\n", "        ", "failed", "=", "evaluate_RMIT", "(", "args", ".", "root", ",", "args", ".", "model_dir", ")", "\n", "", "elif", "args", ".", "dataset", "==", "\"ENDOVIS\"", ":", "\n", "        ", "evaluate_ENDOVIS", "(", "args", ".", "root", ",", "args", ".", "model_dir", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "\n", "\n", "", "\"\"\"\n    for img in failed:\n        img = img * 127.5 + 127.5\n        cv2.imshow(\"failed\", img[:, :, (2, 1, 0)].astype(\"uint8\"))\n        cv2.waitKey(0)\n    \"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.vat.entropy_min": [[10, 13], ["tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "vat.logsoftmax"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.vat.logsoftmax"], ["def", "entropy_min", "(", "logit", ")", ":", "\n", "    ", "p", "=", "tf", ".", "nn", ".", "softmax", "(", "logit", ")", "\n", "return", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "p", "*", "logsoftmax", "(", "logit", ")", ",", "[", "1", ",", "2", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.vat.logsoftmax": [[15, 19], ["tensorflow.reduce_max", "tensorflow.log", "tensorflow.reduce_sum", "tensorflow.exp"], "function", ["None"], ["", "def", "logsoftmax", "(", "x", ")", ":", "\n", "    ", "xdev", "=", "x", "-", "tf", ".", "reduce_max", "(", "x", ",", "[", "1", ",", "2", "]", ",", "keepdims", "=", "True", ")", "\n", "lsm", "=", "xdev", "-", "tf", ".", "log", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "exp", "(", "xdev", ")", ",", "[", "1", ",", "2", "]", ",", "keepdims", "=", "True", ")", ")", "\n", "return", "lsm", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.vat.get_normalized_vector": [[21, 29], ["tensorflow.sqrt", "tensorflow.reduce_max", "tensorflow.abs", "tensorflow.reduce_sum", "tensorflow.pow"], "function", ["None"], ["", "def", "get_normalized_vector", "(", "d", ")", ":", "\n", "# print(d.get_shape())", "\n", "# d /= (1e-12 + tf.reduce_max(tf.abs(d), range(1, len(d.get_shape())), keep_dims=True))", "\n", "    ", "d", "/=", "(", "1e-12", "+", "tf", ".", "reduce_max", "(", "tf", ".", "abs", "(", "d", ")", ",", "axis", "=", "[", "1", ",", "2", "]", ",", "keepdims", "=", "True", ")", ")", "\n", "# d /= tf.sqrt(1e-6 + tf.reduce_sum(tf.pow(d, 2.0), range(1, len(d.get_shape())), keep_dims=True))", "\n", "d", "/=", "tf", ".", "sqrt", "(", "1e-6", "+", "tf", ".", "reduce_sum", "(", "tf", ".", "pow", "(", "d", ",", "2.0", ")", ",", "axis", "=", "[", "1", ",", "2", "]", ",", "keepdims", "=", "True", ")", ")", "\n", "\n", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.vat.generate_virtual_adversarial_perturbation": [[31, 43], ["tensorflow.random_normal", "range", "u_net.create_conv_net", "tensorflow.losses.mean_squared_error", "tensorflow.stop_gradient", "tensorflow.shape", "vat.get_normalized_vector", "tensorflow.gradients", "vat.get_normalized_vector"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.create_conv_net", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.vat.get_normalized_vector", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.vat.get_normalized_vector"], ["", "def", "generate_virtual_adversarial_perturbation", "(", "x", ",", "logit", ",", "is_training", "=", "True", ",", "alpha", "=", "None", ")", ":", "\n", "    ", "d", "=", "tf", ".", "random_normal", "(", "shape", "=", "tf", ".", "shape", "(", "x", ")", ")", "\n", "\n", "for", "_", "in", "range", "(", "num_power_iterations", ")", ":", "\n", "        ", "d", "=", "xi", "*", "get_normalized_vector", "(", "d", ")", "\n", "logit_p", "=", "logit", "\n", "logit_m", ",", "_", "=", "create_conv_net", "(", "x", "+", "d", ",", ".9", ",", "3", ",", "9", ",", "is_training", "=", "is_training", ",", "features_root", "=", "64", ",", "alpha", "=", "alpha", ")", "\n", "dist", "=", "tf", ".", "losses", ".", "mean_squared_error", "(", "logit_p", ",", "logit_m", ")", "\n", "grad", "=", "tf", ".", "gradients", "(", "dist", ",", "[", "d", "]", ",", "aggregation_method", "=", "2", ")", "[", "0", "]", "\n", "d", "=", "tf", ".", "stop_gradient", "(", "grad", ")", "\n", "\n", "return", "epsilon", "*", "get_normalized_vector", "(", "d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.vat.virtual_adversarial_loss": [[45, 53], ["vat.generate_virtual_adversarial_perturbation", "tensorflow.stop_gradient", "u_net.create_conv_net", "tensorflow.losses.mean_squared_error", "tensorflow.identity"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.vat.generate_virtual_adversarial_perturbation", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.create_conv_net"], ["", "", "def", "virtual_adversarial_loss", "(", "x", ",", "logit", ",", "is_training", "=", "True", ",", "name", "=", "\"vat_loss\"", ",", "alpha", "=", "None", ")", ":", "\n", "    ", "r_vadv", "=", "generate_virtual_adversarial_perturbation", "(", "x", ",", "logit", ",", "is_training", "=", "is_training", ",", "alpha", "=", "alpha", ",", "dist_", "=", "dist", ",", "\n", "bs", "=", "bs", ")", "\n", "logit", "=", "tf", ".", "stop_gradient", "(", "logit", ")", "\n", "logit_p", "=", "logit", "\n", "logit_m", ",", "_", "=", "create_conv_net", "(", "x", "+", "r_vadv", ",", ".9", ",", "3", ",", "9", ",", "is_training", "=", "is_training", ",", "features_root", "=", "64", ",", "alpha", "=", "alpha", ")", "\n", "loss", "=", "tf", ".", "losses", ".", "mean_squared_error", "(", "logit_p", ",", "logit_m", ")", "\n", "return", "tf", ".", "identity", "(", "loss", ",", "name", "=", "name", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.train.train": [[12, 161], ["tensorflow.GPUOptions", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Session", "tf.Session.run", "tensorflow.train.Saver", "get_batch.Batch", "get_batch.Batch", "print", "tensorflow.summary.FileWriter", "tf.summary.FileWriter.flush", "range", "tf.Session.close", "tensorflow.losses.mean_squared_error", "tensorflow.train.ExponentialMovingAverage", "tensorflow.get_variable_scope().set_custom_getter", "tensorflow.trainable_variables", "tensorflow.add_to_collection", "u_net.create_conv_net", "tensorflow.stop_gradient", "tensorflow.placeholder", "tensorflow.variable_scope", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.global_variables_initializer", "numpy.exp", "get_batch.Batch.get_batch", "tf.Session.run", "getter", "tf.train.ExponentialMovingAverage.average", "tf.train.ExponentialMovingAverage.apply", "tensorflow.losses.mean_squared_error", "vat.virtual_adversarial_loss", "tensorflow.ConfigProto", "print", "range", "print", "print", "os.path.join", "tf.train.Saver.save", "print", "tensorflow.reshape", "tensorflow.get_variable_scope", "tensorflow.reduce_sum", "tensorflow.losses.mean_squared_error", "tensorflow.train.AdamOptimizer", "current_loss.sum", "tensorflow.reshape", "tensorflow.reduce_sum", "train.train.sigmoid_schedule"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.create_conv_net", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.get_batch.Batch.get_batch", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.vat.virtual_adversarial_loss"], ["def", "train", "(", "input_t", ",", "output_map", ",", "alpha", ",", "max_it", ",", "root", ",", "batch_size", ",", "is_training", ",", "id", ",", "use_vat", ",", "use_pseudo_labels", ",", "\n", "use_mean_teacher", ",", "dataset", ")", ":", "\n", "    ", "\"\"\"\n    :param input_t: input tensor\n    :param output_map: output layer of the network\n    :param alpha: placeholder for leaky relu\n    :param max_it: maximum training iterations\n    :param root: base directory that contains the images\n    :param batch_size: batch size\n    :param is_training: toggle training\n    :param id: GPU id\n    :param use_vat: Enable VAT\n    :param use_pseudo_labels: Use pseudo labels\n    :param use_mean_teacher: Use mean teacher\n    :param dataset: Choose dataset\n    :return:\n    \"\"\"", "\n", "\n", "h", "=", "256", "if", "dataset", "==", "\"ENDOVIS\"", "else", "288", "\n", "w", "=", "320", "if", "dataset", "==", "\"ENDOVIS\"", "else", "384", "\n", "num_parts", "=", "5", "if", "dataset", "==", "\"ENDOVIS\"", "else", "4", "\n", "num_connections", "=", "4", "if", "dataset", "==", "\"ENDOVIS\"", "else", "0", "\n", "\n", "# GPU Config", "\n", "gpu_options", "=", "tf", ".", "GPUOptions", "(", "per_process_gpu_memory_fraction", "=", ".95", ")", "\n", "\n", "# Set up placeholders", "\n", "y", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "h", ",", "w", ",", "num_parts", "+", "num_connections", "]", ")", "\n", "lr", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "loss_mask", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "batch_size", "]", ")", "\n", "\n", "# Loss", "\n", "if", "not", "use_mean_teacher", ":", "\n", "        ", "avr_loss", "=", "tf", ".", "losses", ".", "mean_squared_error", "(", "y", ",", "output_map", ",", "\n", "weights", "=", "tf", ".", "reshape", "(", "loss_mask", ",", "\n", "[", "batch_size", ",", "1", ",", "1", ",", "1", "]", ")", ")", "\n", "", "if", "use_mean_teacher", ":", "\n", "        ", "ema", "=", "tf", ".", "train", ".", "ExponentialMovingAverage", "(", "decay", "=", ".95", ")", "\n", "\n", "def", "ema_getter", "(", "getter", ",", "name", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "            ", "var", "=", "getter", "(", "name", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "ema_var", "=", "ema", ".", "average", "(", "var", ")", "\n", "return", "ema_var", "if", "ema_var", "else", "var", "\n", "\n", "", "tf", ".", "get_variable_scope", "(", ")", ".", "set_custom_getter", "(", "ema_getter", ")", "\n", "model_vars", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "output_student", "=", "output_map", "\n", "tf", ".", "add_to_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ",", "ema", ".", "apply", "(", "model_vars", ")", ")", "\n", "output_teacher", ",", "_", "=", "unet", "(", "input_t", ",", ".9", "if", "dataset", "==", "\"RMIT\"", "else", ".7", ",", "3", ",", "\n", "num_parts", "+", "num_connections", ",", "\n", "is_training", "=", "is_training", ",", "\n", "features_root", "=", "64", ",", "\n", "alpha", "=", "alpha", ")", "\n", "output_teacher", "=", "tf", ".", "stop_gradient", "(", "output_teacher", ")", "\n", "avr_loss", "=", "batch_size", "/", "tf", ".", "reduce_sum", "(", "loss_mask", ")", "*", "tf", ".", "losses", ".", "mean_squared_error", "(", "y", ",", "output_student", ",", "\n", "weights", "=", "tf", ".", "reshape", "(", "loss_mask", ",", "\n", "[", "batch_size", ",", "1", ",", "1", ",", "1", "]", ")", ")", "\n", "m", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "]", ")", "\n", "avr_loss", "=", "avr_loss", "+", "m", "*", ".1", "*", "tf", ".", "losses", ".", "mean_squared_error", "(", "output_teacher", ",", "output_student", ")", "\n", "\n", "", "if", "use_vat", ":", "\n", "        ", "avr_loss", "=", "batch_size", "/", "tf", ".", "reduce_sum", "(", "loss_mask", ")", "*", "avr_loss", "+", "virtual_adversarial_loss", "(", "input_t", ",", "y", ",", "is_training", "=", "is_training", ",", "alpha", "=", "alpha", ")", "\n", "\n", "# Adam solver", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"Adam\"", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr", ")", ".", "minimize", "(", "avr_loss", ")", "\n", "\n", "# Start session and initialize weights", "\n", "", "sess", "=", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "gpu_options", "=", "gpu_options", ",", "\n", "allow_soft_placement", "=", "True", ",", "\n", "log_device_placement", "=", "True", ")", ")", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "max_to_keep", "=", "10000", ")", "\n", "\n", "b_train", "=", "Batch", "(", "root", ",", "batch_size", ",", "dataset", "=", "\"ENDOVIS\"", ",", "\n", "include_unlabelled", "=", "use_vat", "or", "use_mean_teacher", "or", "use_tvm", ",", "\n", "pseudo_label", "=", "use_pseudo_labels", ")", "\n", "b_test", "=", "Batch", "(", "root", ",", "batch_size", ",", "dataset", "=", "\"ENDOVIS\"", ",", "include_unlabelled", "=", "False", ",", "testing", "=", "True", ",", "augment", "=", "False", ",", "\n", "train_postprocessing", "=", "False", ")", "\n", "\n", "current_lr", "=", "1e-3", "\n", "print", "(", "\"Chosen lr:\"", ",", "current_lr", ")", "\n", "\n", "# if model_dir is not None:", "\n", "#     restore_op, restore_dict = tf.contrib.framework.assign_from_checkpoint(", "\n", "#         model_dir + \"/model.ckpt\",", "\n", "#         tf.contrib.slim.get_variables_to_restore(),", "\n", "#         ignore_missing_vars=True", "\n", "#     )", "\n", "#     sess.run(restore_op, feed_dict=restore_dict)", "\n", "#     print(\"Restored session\")", "\n", "\n", "# save graph", "\n", "writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "logdir", "=", "'logdir'", ",", "graph", "=", "sess", ".", "graph", ")", "\n", "writer", ".", "flush", "(", ")", "\n", "\n", "if", "use_vat", ":", "\n", "        ", "test_interval", "=", "250", "\n", "", "else", ":", "\n", "        ", "test_interval", "=", "200", "\n", "\n", "", "def", "sigmoid_schedule", "(", "global_step", ",", "warm_up_steps", "=", "20000", ")", ":", "\n", "        ", "if", "global_step", ">", "warm_up_steps", ":", "\n", "            ", "return", "1.", "\n", "\n", "", "return", "np", ".", "exp", "(", "-", "5.", "*", "(", "1.", "-", "(", "global_step", "/", "warm_up_steps", ")", ")", "**", "2", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "max_it", ")", ":", "\n", "\n", "        ", "imgs", ",", "targets", ",", "_", ",", "mask", "=", "b_train", ".", "get_batch", "(", ")", "\n", "\n", "current_loss", ",", "net_out", ",", "_", "=", "sess", ".", "run", "(", "\n", "[", "avr_loss", ",", "output_map", ",", "opt", "]", ",", "\n", "feed_dict", "=", "{", "input_t", ":", "imgs", ",", "\n", "y", ":", "targets", ",", "\n", "lr", ":", "current_lr", ",", "\n", "is_training", ":", "True", ",", "\n", "alpha", ":", "1", "/", "np", ".", "random", ".", "uniform", "(", "low", "=", "3", ",", "high", "=", "8", ")", ",", "\n", "loss_mask", ":", "mask", ",", "\n", "m", ":", "sigmoid_schedule", "(", "i", ")", "\n", "}", "\n", ")", "\n", "\n", "if", "i", "%", "100", "==", "0", ":", "\n", "            ", "print", "(", "\"Current regression loss:\"", ",", "current_loss", ".", "sum", "(", ")", ")", "\n", "loc_pred", "=", "[", "]", "\n", "loc_true", "=", "[", "]", "\n", "for", "ch", "in", "range", "(", "num_parts", ")", ":", "\n", "                ", "if", "b_train", ".", "batch_instrument_count", "[", "0", "]", "==", "1", ":", "\n", "                    ", "_", ",", "_", ",", "_", ",", "m_loc1", "=", "cv2", ".", "minMaxLoc", "(", "net_out", "[", "0", ",", ":", ",", ":", ",", "ch", "]", ")", "\n", "loc_pred", ".", "append", "(", "m_loc1", ")", "\n", "_", ",", "_", ",", "_", ",", "m_loc2", "=", "cv2", ".", "minMaxLoc", "(", "targets", "[", "0", "]", "[", ":", ",", ":", ",", "ch", "]", ")", "\n", "loc_true", ".", "append", "(", "m_loc2", ")", "\n", "", "else", ":", "\n", "                    ", "pass", "\n", "\n", "", "", "print", "(", "\"For the first sample-> Predicted: {}    Ground Truth: {}\\n\"", ".", "format", "(", "loc_pred", ",", "loc_true", ")", ")", "\n", "\n", "# save model for evaluation", "\n", "", "if", "i", "%", "test_interval", "==", "0", "and", "i", "!=", "0", ":", "\n", "\n", "            ", "print", "(", "\"Testing at iteration\"", ",", "i", ",", "\"...\"", ")", "\n", "dir2save", "=", "os", ".", "path", ".", "join", "(", "\"tmp\"", "+", "str", "(", "i", ")", ",", "\"model.ckpt\"", ")", "\n", "save_path", "=", "saver", ".", "save", "(", "sess", ",", "dir2save", ")", "\n", "print", "(", "\"Saved model to\"", ",", "save_path", ")", "\n", "\n", "", "", "sess", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.train.main": [[163, 196], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "parser.parse_args.dataset.upper", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder_with_default", "u_net.create_conv_net", "train.train"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.create_conv_net", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.train.train"], ["", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--root\"", ",", "help", "=", "\"Directory that contains the data\"", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--batch_size\"", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "\"Batch size for training\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--gpu_id\"", ",", "type", "=", "str", ",", "default", "=", "\"1\"", ",", "help", "=", "\"Select a gpu\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--use_vat\"", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "\"Enables VAT\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--use_pseudo_labels\"", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "\"Enables pseudo-label usage\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--use_mean_teacher\"", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "\"Enables mean teacher\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--dataset\"", ",", "type", "=", "str", ",", "default", "=", "\"ENDOVIS\"", ",", "help", "=", "\"Choose RMIT or Endovis to train on.\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "args", ".", "gpu_id", "\n", "dataset", "=", "args", ".", "dataset", ".", "upper", "(", ")", "\n", "\n", "# init network", "\n", "ch", "=", "3", "\n", "h", "=", "256", "if", "dataset", "==", "\"ENDOVIS\"", "else", "288", "\n", "w", "=", "320", "if", "dataset", "==", "\"ENDOVIS\"", "else", "384", "\n", "x", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "args", ".", "batch_size", ",", "h", ",", "w", ",", "ch", "]", ")", "\n", "is_training", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "alpha", "=", "tf", ".", "placeholder_with_default", "(", "1", "/", "5.5", ",", "[", "]", ",", "name", "=", "\"alpha_lrelu\"", ")", "\n", "num_parts", "=", "5", "if", "dataset", "==", "\"ENDOVIS\"", "else", "4", "\n", "num_connections", "=", "4", "if", "dataset", "==", "\"ENDOVIS\"", "else", "0", "\n", "keep_prob", "=", ".9", "if", "dataset", "==", "\"RMIT\"", "else", ".7", "\n", "output_map", ",", "_", "=", "unet", "(", "x", ",", "keep_prob", ",", "ch", ",", "\n", "num_parts", "+", "num_connections", ",", "\n", "is_training", "=", "is_training", ",", "\n", "features_root", "=", "64", ",", "\n", "alpha", "=", "alpha", ")", "\n", "\n", "train", "(", "x", ",", "output_map", ",", "alpha", ",", "50000", ",", "args", ".", "root", ",", "args", ".", "batch_size", ",", "\n", "is_training", ",", "args", ".", "gpu_id", ",", "args", ".", "use_vat", ",", "\n", "args", ".", "use_pseudo_labels", ",", "args", ".", "use_mean_teacher", ",", "args", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.line_integral.compute_integral": [[4, 17], ["line_integral.get_points", "connectivity[].sum"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.line_integral.get_points"], ["def", "compute_integral", "(", "pt1", ",", "pt2", ",", "connectivity", ")", ":", "\n", "# (y, x)", "\n", "\n", "# get the points on the connecting line", "\n", "    ", "points", ",", "num_points", "=", "get_points", "(", "pt1", ",", "pt2", ")", "\n", "\n", "# integral", "\n", "try", ":", "\n", "        ", "score", "=", "connectivity", "[", "points", "]", ".", "sum", "(", ")", "\n", "", "except", "IndexError", ":", "# basically no connectivity", "\n", "        ", "score", "=", "-", "200", "\n", "\n", "", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.line_integral.get_line": [[19, 25], ["float", "float"], "function", ["None"], ["", "def", "get_line", "(", "pt1", ",", "pt2", ")", ":", "\n", "# (y, x)", "\n", "\n", "    ", "m", "=", "float", "(", "pt1", "[", "0", "]", "-", "pt2", "[", "0", "]", ")", "/", "float", "(", "pt1", "[", "1", "]", "-", "pt2", "[", "1", "]", "+", "1e-5", ")", "\n", "b", "=", "pt2", "[", "0", "]", "-", "m", "*", "pt2", "[", "1", "]", "\n", "return", "m", ",", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.line_integral.get_points": [[27, 36], ["line_integral.get_line", "numpy.linspace", "abs", "y_s.astype", "np.linspace.astype", "min", "max"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.line_integral.get_line"], ["", "def", "get_points", "(", "pt1", ",", "pt2", ")", ":", "\n", "# (y, x)", "\n", "\n", "    ", "m", ",", "b", "=", "get_line", "(", "pt1", ",", "pt2", ")", "\n", "number_of_samples", "=", "abs", "(", "pt2", "[", "1", "]", "-", "pt1", "[", "1", "]", ")", "+", "1", "\n", "x_s", "=", "np", ".", "linspace", "(", "start", "=", "min", "(", "pt1", "[", "1", "]", ",", "pt2", "[", "1", "]", ")", ",", "stop", "=", "max", "(", "pt1", "[", "1", "]", ",", "pt2", "[", "1", "]", ")", ",", "num", "=", "number_of_samples", ")", "\n", "y_s", "=", "m", "*", "x_s", "+", "b", "\n", "points", "=", "[", "y_s", ".", "astype", "(", "np", ".", "int32", ")", ",", "x_s", ".", "astype", "(", "np", ".", "int32", ")", "]", "\n", "return", "points", ",", "number_of_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.get_batch.Batch.__init__": [[18, 70], ["random.shuffle", "glob.glob.glob", "len", "glob.glob.glob", "open", "json.load", "glob.glob.glob", "print", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "batch_size", ",", "testing", "=", "False", ",", "augment", "=", "True", ",", "dataset", "=", "\"ENDOVIS\"", ",", "include_unlabelled", "=", "True", ",", "\n", "pseudo_label", "=", "False", ",", "train_postprocessing", "=", "False", ")", ":", "\n", "        ", "if", "dataset", "==", "\"RMIT\"", ":", "\n", "            ", "mode", "=", "\"test\"", "if", "testing", "else", "\"training\"", "\n", "img_dir", "=", "root", "+", "\"/\"", "+", "mode", "+", "\"/image\"", "\n", "label_dir", "=", "root", "+", "\"/\"", "+", "mode", "+", "\"/label\"", "\n", "attention_dir", "=", "root", "+", "\"/attention_maps\"", "\n", "self", ".", "img_list", "=", "glob", "(", "img_dir", "+", "\"/*png\"", ")", "\n", "self", ".", "unlabelled_img_list", "=", "None", "\n", "", "elif", "dataset", "==", "\"ENDOVIS\"", ":", "\n", "            ", "img_dir", "=", "root", "+", "\"/labelled_test/\"", "if", "testing", "else", "root", "+", "\"/labelled_train\"", "\n", "if", "not", "use_partial_labels", "and", "not", "train_postprocessing", ":", "\n", "                ", "label_dir", "=", "root", "+", "\"/test_labels/\"", "if", "testing", "else", "root", "+", "\"/training_labels\"", "\n", "", "elif", "train_postprocessing", ":", "\n", "                ", "label_dir", "=", "root", "+", "\"/test_labels_postprocessing/\"", "if", "testing", "else", "root", "+", "\"/training_labels_postprocessing\"", "\n", "", "self", ".", "img_list", "=", "glob", "(", "img_dir", "+", "\"/*jpg\"", ")", "\n", "if", "include_unlabelled", "and", "(", "not", "testing", "or", "pseudo_label", ")", ":", "\n", "                ", "unlabelled_img_dirs", "=", "root", "+", "\"/unlabelled_train\"", "\n", "self", ".", "unlabelled_img_list", "=", "glob", "(", "unlabelled_img_dirs", "+", "\"/*\"", ")", "\n", "print", "(", "len", "(", "self", ".", "unlabelled_img_list", ")", ")", "\n", "", "if", "pseudo_label", ":", "\n", "                ", "self", ".", "pseudo_dir", "=", "root", "+", "\"/pseudo_labels\"", "\n", "", "else", ":", "\n", "                ", "self", ".", "unlabelled_img_list", "=", "None", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "\n", "", "assert", "(", "len", "(", "self", ".", "img_list", ")", ">", "0", ")", "\n", "shuffle", "(", "self", ".", "img_list", ")", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "idx", "=", "0", "\n", "self", ".", "pseudo_idx", "=", "0", "\n", "self", ".", "label_dir", "=", "label_dir", "\n", "# self.attention_dir = attention_dir", "\n", "self", ".", "name_list", "=", "[", "]", "\n", "self", ".", "org_shapes", "=", "[", "]", "\n", "self", ".", "testing", "=", "testing", "\n", "self", ".", "augment", "=", "augment", "\n", "self", ".", "real_shape", "=", "ENDOVIS_SHAPE", "if", "dataset", "==", "\"ENDOVIS\"", "else", "RMIT_SHAPE", "\n", "self", ".", "target_shape", "=", "ENDOVIS_TARGET_SHAPE", "if", "dataset", "==", "\"ENDOVIS\"", "else", "RMIT_TARGET_SHAPE", "\n", "self", ".", "num_parts", "=", "4", "if", "dataset", "==", "\"RMIT\"", "else", "None", "\n", "if", "self", ".", "num_parts", "is", "None", ":", "\n", "            ", "if", "train_postprocessing", ":", "\n", "                ", "self", ".", "num_parts", "=", "10", "\n", "", "else", ":", "\n", "                ", "self", ".", "num_parts", "=", "9", "\n", "", "", "if", "dataset", "==", "\"ENDOVIS\"", ":", "\n", "            ", "with", "open", "(", "root", "+", "\"/instrument_count.json\"", ",", "\"r\"", ")", "as", "p", ":", "\n", "                ", "self", ".", "instrument_count", "=", "json", ".", "load", "(", "p", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "instrument_count", "=", "{", "}", "\n", "", "self", ".", "batch_instrument_count", "=", "None", "\n", "self", ".", "pseudo_label", "=", "pseudo_label", "\n", "# print(self.instrument_count.keys())", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.get_batch.Batch.get_batch": [[72, 166], ["range", "range", "get_batch.get_img_batch", "get_batch.get_label_batch", "range", "int", "img_dir_list.append", "get_batch.Batch.name_list.append", "target_dir_list.append", "img_dir_list.append", "get_batch.Batch.name_list.append", "cv2.resize", "cv2.resize", "numpy.zeros_like", "numpy.random.uniform", "img_patches.append", "target_patches.append", "attention_patches.append", "get_batch.Batch.img_list[].split", "fname.split", "get_batch.Batch.batch_instrument_count.append", "len", "random.shuffle", "numpy.random.randint", "get_batch.Batch.unlabelled_img_list[].split", "fname.split", "target_dir_list.append", "target_dir_list.append", "random.shuffle", "src.img_utils.augment", "get_batch.Batch.batch_instrument_count.append", "len", "len"], "methods", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.get_batch.get_img_batch", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.get_batch.get_label_batch", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.augment"], ["", "def", "get_batch", "(", "self", ")", ":", "\n", "\n", "        ", "img_dir_list", "=", "[", "]", "\n", "target_dir_list", "=", "[", "]", "\n", "attention_dir_list", "=", "[", "]", "\n", "self", ".", "name_list", "=", "[", "]", "\n", "self", ".", "org_shapes", "=", "[", "]", "\n", "self", ".", "batch_instrument_count", "=", "[", "]", "\n", "\n", "# collect directories", "\n", "\n", "N", "=", "self", ".", "batch_size", "if", "self", ".", "unlabelled_img_list", "is", "None", "else", "int", "(", "self", ".", "batch_size", "*", ".8", ")", "\n", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "img_dir_list", ".", "append", "(", "self", ".", "img_list", "[", "self", ".", "idx", "]", ")", "\n", "fname", "=", "self", ".", "img_list", "[", "self", ".", "idx", "]", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "fname", "=", "fname", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "self", ".", "name_list", ".", "append", "(", "fname", ")", "\n", "target_dir_list", ".", "append", "(", "self", ".", "label_dir", "+", "\"/\"", "+", "fname", "+", "\".npy\"", ")", "\n", "try", ":", "\n", "                ", "self", ".", "batch_instrument_count", ".", "append", "(", "self", ".", "instrument_count", "[", "fname", "+", "\".npy\"", "]", ")", "\n", "", "except", ":", "\n", "                ", "self", ".", "batch_instrument_count", ".", "append", "(", "1", ")", "\n", "# attention_dir_list.append(self.attention_dir + \"/\" + fname + \".png\")", "\n", "", "self", ".", "idx", "+=", "1", "\n", "if", "self", ".", "idx", "==", "len", "(", "self", ".", "img_list", ")", ":", "\n", "                ", "self", ".", "idx", "=", "0", "\n", "shuffle", "(", "self", ".", "img_list", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "self", ".", "batch_size", "-", "N", ")", ":", "\n", "            ", "if", "self", ".", "pseudo_label", ":", "\n", "                ", "id", "=", "self", ".", "pseudo_idx", "\n", "", "else", ":", "\n", "                ", "id", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "unlabelled_img_list", ")", ")", "\n", "", "img_dir_list", ".", "append", "(", "self", ".", "unlabelled_img_list", "[", "id", "]", ")", "\n", "fname", "=", "self", ".", "unlabelled_img_list", "[", "id", "]", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "fname", "=", "fname", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "self", ".", "name_list", ".", "append", "(", "fname", ")", "\n", "if", "self", ".", "pseudo_label", ":", "\n", "                ", "target_dir_list", ".", "append", "(", "self", ".", "pseudo_dir", "+", "\"/\"", "+", "fname", "+", "\".npy\"", ")", "\n", "", "else", ":", "\n", "                ", "target_dir_list", ".", "append", "(", "None", ")", "\n", "", "if", "self", ".", "pseudo_idx", "+", "1", "==", "len", "(", "self", ".", "unlabelled_img_list", ")", "and", "self", ".", "pseudo_label", ":", "\n", "                ", "self", ".", "pseudo_idx", "=", "0", "\n", "shuffle", "(", "self", ".", "unlabelled_img_list", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "pseudo_idx", "+=", "1", "\n", "\n", "", "", "img_batch", "=", "get_img_batch", "(", "img_dir_list", ")", "\n", "target_batch", "=", "get_label_batch", "(", "target_dir_list", ",", "(", "self", ".", "real_shape", "[", "0", "]", ",", "self", ".", "real_shape", "[", "1", "]", ",", "self", ".", "num_parts", ")", ")", "\n", "# attention_batch = get_attention_batch(attention_dir_list)", "\n", "\n", "img_patches", "=", "[", "]", "\n", "target_patches", "=", "[", "]", "\n", "attention_patches", "=", "[", "]", "\n", "\n", "# process batch", "\n", "for", "i", "in", "range", "(", "self", ".", "batch_size", ")", ":", "\n", "            ", "resized_p", "=", "cv2", ".", "resize", "(", "img_batch", "[", "i", "]", ",", "self", ".", "target_shape", ")", "\n", "resized_t", "=", "cv2", ".", "resize", "(", "target_batch", "[", "i", "]", ",", "self", ".", "target_shape", ")", "\n", "resized_a", "=", "np", ".", "zeros_like", "(", "resized_p", ")", "\n", "if", "not", "self", ".", "testing", "and", "self", ".", "augment", ":", "\n", "                ", "resized_p", ",", "resized_t", ",", "resized_a", "=", "augment", "(", "resized_p", ",", "resized_t", ",", "resized_a", ")", "\n", "# rescale pixels between [-1, 1]", "\n", "", "resized_p", "-=", "127.5", "\n", "resized_p", "/=", "127.5", "\n", "# add noise to avoid overfitting", "\n", "resized_t", "+=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", ".01", ",", "high", "=", ".01", ")", "\n", "# print(resized_a.min())", "\n", "img_patches", ".", "append", "(", "resized_p", ")", "\n", "target_patches", ".", "append", "(", "resized_t", ")", "\n", "attention_patches", ".", "append", "(", "resized_a", ")", "\n", "\n", "# z = attention_patches[0]", "\n", "# cv2.imshow(\"z\", z)", "\n", "# x = target_patches[0] * 255", "\n", "# y = (img_patches[0] * 127.5) + 127.5", "\n", "# cv2.imshow(\"y\", y[:, :, 3].astype(\"uint8\"))", "\n", "# cv2.imshow(\"y\", y[:, :, (2, 1, 0)].astype(\"uint8\"))", "\n", "# cv2.imshow(\"x1\", x[:, :, 0].astype(\"uint8\"))", "\n", "# cv2.imshow(\"x2\", x[:, :, 1].astype(\"uint8\"))", "\n", "# cv2.imshow(\"x3\", x[:, :, 2].astype(\"uint8\"))", "\n", "# print(\"Number of instruments\", self.batch_instrument_count[0])", "\n", "# cv2.imshow(\"x4\", x[:, :, 3].astype(\"uint8\"))", "\n", "# cv2.imshow(\"x5\", x[:, :, 4].astype(\"uint8\"))", "\n", "# cv2.imshow(\"x6\", x[:, :, 5].astype(\"uint8\"))", "\n", "# cv2.imshow(\"x7\", x[:, :, 6].astype(\"uint8\"))", "\n", "# cv2.imshow(\"x8\", x[:, :, 7].astype(\"uint8\"))", "\n", "# cv2.imshow(\"x9\", x[:, :, 8].astype(\"uint8\"))", "\n", "# cv2.waitKey(0)", "\n", "\n", "", "label_mask", "=", "[", "1.", "]", "*", "N", "+", "[", "0.", "]", "*", "(", "self", ".", "batch_size", "-", "N", ")", "if", "not", "self", ".", "pseudo_label", "else", "[", "1.", "]", "*", "self", ".", "batch_size", "\n", "\n", "return", "img_patches", ",", "target_patches", ",", "attention_patches", ",", "label_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.get_batch.get_attention_batch": [[168, 178], ["cv2.imread", "numpy.zeros", "cv2.imread.reshape", "enumerate", "cv2.imread().reshape", "len", "cv2.imread"], "function", ["None"], ["", "", "def", "get_attention_batch", "(", "dir_list", ")", ":", "\n", "\n", "    ", "tmp", "=", "cv2", ".", "imread", "(", "dir_list", "[", "0", "]", ",", "cv2", ".", "IMREAD_GRAYSCALE", ")", "\n", "batch", "=", "np", ".", "zeros", "(", "(", "len", "(", "dir_list", ")", ",", "tmp", ".", "shape", "[", "0", "]", ",", "tmp", ".", "shape", "[", "1", "]", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "batch", "[", "0", ",", ":", ",", ":", ",", ":", "]", "=", "tmp", ".", "reshape", "(", "tmp", ".", "shape", "[", "0", "]", ",", "tmp", ".", "shape", "[", "1", "]", ",", "1", ")", "\n", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "dir_list", "[", "1", ":", "]", ")", ":", "\n", "        ", "batch", "[", "i", "+", "1", ",", ":", ",", ":", ",", ":", "]", "=", "cv2", ".", "imread", "(", "d", ",", "cv2", ".", "IMREAD_GRAYSCALE", ")", ".", "reshape", "(", "tmp", ".", "shape", "[", "0", "]", ",", "tmp", ".", "shape", "[", "1", "]", ",", "1", ")", "\n", "\n", "", "return", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.get_batch.get_img_batch": [[180, 190], ["src.img_utils.read", "numpy.zeros", "enumerate", "src.img_utils.read", "len"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.read", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.read"], ["", "def", "get_img_batch", "(", "dir_list", ")", ":", "\n", "\n", "    ", "tmp", "=", "read", "(", "dir_list", "[", "0", "]", ")", "\n", "batch", "=", "np", ".", "zeros", "(", "(", "len", "(", "dir_list", ")", ",", ")", "+", "tmp", ".", "shape", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "batch", "[", "0", ",", ":", ",", ":", ",", ":", "]", "=", "tmp", "\n", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "dir_list", "[", "1", ":", "]", ")", ":", "\n", "        ", "batch", "[", "i", "+", "1", ",", ":", ",", ":", ",", ":", "]", "=", "read", "(", "d", ")", "\n", "\n", "", "return", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.get_batch.get_label_batch": [[192, 203], ["numpy.zeros", "enumerate", "numpy.load", "len"], "function", ["None"], ["", "def", "get_label_batch", "(", "dir_list", ",", "label_dim", ")", ":", "\n", "\n", "    ", "batch", "=", "np", ".", "zeros", "(", "(", "len", "(", "dir_list", ")", ",", ")", "+", "label_dim", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "dir_list", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "batch", "[", "i", ",", ":", ",", ":", ",", ":", "]", "=", "np", ".", "load", "(", "d", ")", "\n", "", "except", ":", "\n", "            ", "batch", "[", "i", ",", ":", ",", ":", ",", ":", "]", "=", "0.", "\n", "\n", "", "", "return", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.create_conv_net": [[8, 109], ["tensorflow.variable_scope", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "range", "range", "tensorflow.name_scope", "u_net.weight_variable", "u_net.bias_variable", "u_net.conv2d", "tensorflow.nn.relu", "tensorflow.name_scope", "numpy.sqrt", "u_net.bias_variable", "u_net.weight_variable", "u_net.bias_variable", "u_net.conv2d", "tensorflow.contrib.layers.group_norm", "u_net.create_conv_net.rlrelu"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.weight_variable", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.bias_variable", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.conv2d", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.bias_variable", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.weight_variable", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.bias_variable", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.conv2d"], ["def", "create_conv_net", "(", "x", ",", "keep_prob", ",", "channels", ",", "n_class", ",", "layers", "=", "3", ",", "features_root", "=", "16", ",", "filter_size", "=", "3", ",", "pool_size", "=", "2", ",", "\n", "is_training", "=", "None", ",", "alpha", "=", "None", ")", ":", "\n", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "\"dau-net\"", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "\n", "        ", "def", "rlrelu", "(", "x", ")", ":", "\n", "            ", "return", "tf", ".", "nn", ".", "relu", "(", "x", ")", "-", "alpha", "*", "tf", ".", "nn", ".", "relu", "(", "-", "x", ")", "\n", "\n", "", "in_node", "=", "x", "\n", "pools", "=", "OrderedDict", "(", ")", "\n", "deconv", "=", "OrderedDict", "(", ")", "\n", "dw_h_convs", "=", "OrderedDict", "(", ")", "\n", "up_h_convs", "=", "OrderedDict", "(", ")", "\n", "\n", "# in_size = 1000", "\n", "# size = in_size", "\n", "\n", "counter", "=", "1", "\n", "\n", "# down layers", "\n", "for", "layer", "in", "range", "(", "0", ",", "layers", ")", ":", "\n", "            ", "with", "tf", ".", "name_scope", "(", "\"down_conv_{}\"", ".", "format", "(", "str", "(", "layer", ")", ")", ")", ":", "\n", "                ", "features", "=", "2", "**", "layer", "*", "features_root", "\n", "stddev", "=", "np", ".", "sqrt", "(", "2", "/", "(", "filter_size", "**", "2", "*", "features", ")", ")", "\n", "if", "layer", "==", "0", ":", "\n", "                    ", "w1", "=", "weight_variable", "(", "[", "filter_size", ",", "filter_size", ",", "channels", ",", "features", "]", ",", "stddev", ",", "name", "=", "\"w1\"", ")", "\n", "", "else", ":", "\n", "                    ", "w1", "=", "weight_variable", "(", "[", "filter_size", ",", "filter_size", ",", "features", "//", "2", ",", "features", "]", ",", "stddev", ",", "name", "=", "\"w1\"", ")", "\n", "", "b1", "=", "bias_variable", "(", "[", "features", "]", ",", "name", "=", "\"b1\"", ")", "\n", "\n", "w2", "=", "weight_variable", "(", "[", "filter_size", ",", "filter_size", ",", "features", ",", "features", "]", ",", "stddev", ",", "name", "=", "\"w2\"", ")", "\n", "b2", "=", "bias_variable", "(", "[", "features", "]", ",", "name", "=", "\"b2\"", ")", "\n", "\n", "conv1", "=", "conv2d", "(", "in_node", ",", "w1", ",", "b1", ",", "keep_prob", ",", "is_training", ")", "\n", "conv1", "=", "tf", ".", "contrib", ".", "layers", ".", "group_norm", "(", "conv1", ",", "mean_close_to_zero", "=", "True", ")", "\n", "tmp_h_conv", "=", "rlrelu", "(", "conv1", ")", "\n", "\n", "conv2", "=", "conv2d", "(", "tmp_h_conv", ",", "w2", ",", "b2", ",", "keep_prob", ",", "is_training", ")", "\n", "conv2", "=", "tf", ".", "contrib", ".", "layers", ".", "group_norm", "(", "conv2", ",", "mean_close_to_zero", "=", "True", ")", "\n", "dw_h_convs", "[", "layer", "]", "=", "rlrelu", "(", "conv2", ")", "\n", "\n", "# size -= 2 * 2 * (filter_size // 2) # valid conv", "\n", "\n", "if", "layer", "<", "layers", "-", "1", ":", "\n", "                    ", "pools", "[", "layer", "]", "=", "max_pool", "(", "dw_h_convs", "[", "layer", "]", ",", "pool_size", ")", "\n", "in_node", "=", "pools", "[", "layer", "]", "\n", "# size /= pool_size", "\n", "\n", "", "", "", "in_node", "=", "dw_h_convs", "[", "layers", "-", "1", "]", "\n", "attention_list", "=", "[", "]", "\n", "\n", "# up layers", "\n", "for", "layer", "in", "range", "(", "layers", "-", "2", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "            ", "with", "tf", ".", "name_scope", "(", "\"up_conv_{}\"", ".", "format", "(", "str", "(", "layer", ")", ")", ")", ":", "\n", "                ", "features", "=", "2", "**", "(", "layer", "+", "1", ")", "*", "features_root", "\n", "stddev", "=", "np", ".", "sqrt", "(", "2", "/", "(", "filter_size", "**", "2", "*", "features", ")", ")", "\n", "\n", "wd", "=", "weight_variable_devonc", "(", "[", "pool_size", ",", "pool_size", ",", "features", "//", "2", ",", "features", "]", ",", "stddev", ",", "name", "=", "\"wd\"", ")", "\n", "bd", "=", "bias_variable", "(", "[", "features", "//", "2", "]", ",", "name", "=", "\"bd\"", ")", "\n", "h_deconv", "=", "rlrelu", "(", "deconv2d", "(", "in_node", ",", "wd", ",", "pool_size", ")", "+", "bd", ")", "\n", "h_deconv_concat", "=", "crop_and_concat", "(", "dw_h_convs", "[", "layer", "]", ",", "h_deconv", ")", "\n", "\n", "with", "tf", ".", "name_scope", "(", "\"attention{}\"", ".", "format", "(", "layer", ")", ")", ":", "\n", "                    ", "attention", "=", "tf", ".", "contrib", ".", "layers", ".", "conv2d", "(", "h_deconv_concat", ",", "features_root", ",", "3", ",", "activation_fn", "=", "rlrelu", ")", "\n", "attention", "=", "tf", ".", "layers", ".", "dropout", "(", "attention", ",", "rate", "=", "1", "-", "keep_prob", ",", "training", "=", "is_training", ")", "\n", "attention", "=", "tf", ".", "contrib", ".", "layers", ".", "conv2d", "(", "attention", ",", "int", "(", "round", "(", "np", ".", "sqrt", "(", "features_root", ")", ")", ")", ",", "3", ",", "\n", "activation_fn", "=", "rlrelu", ")", "\n", "attention", "=", "tf", ".", "layers", ".", "dropout", "(", "attention", ",", "rate", "=", "1", "-", "keep_prob", ",", "training", "=", "is_training", ")", "\n", "attention", "=", "tf", ".", "contrib", ".", "layers", ".", "conv2d", "(", "attention", ",", "1", ",", "1", ",", "activation_fn", "=", "tf", ".", "nn", ".", "sigmoid", ")", "\n", "attention_list", ".", "append", "(", "attention", ")", "\n", "h_deconv_concat", "=", "tf", ".", "multiply", "(", "h_deconv_concat", ",", "attention", ")", "\n", "\n", "", "deconv", "[", "layer", "]", "=", "h_deconv_concat", "\n", "\n", "w1", "=", "weight_variable", "(", "[", "filter_size", ",", "filter_size", ",", "features", ",", "features", "//", "2", "]", ",", "stddev", ",", "name", "=", "\"w1\"", ")", "\n", "w2", "=", "weight_variable", "(", "[", "filter_size", ",", "filter_size", ",", "features", "//", "2", ",", "features", "//", "2", "]", ",", "stddev", ",", "name", "=", "\"w2\"", ")", "\n", "b1", "=", "bias_variable", "(", "[", "features", "//", "2", "]", ",", "name", "=", "\"b1\"", ")", "\n", "b2", "=", "bias_variable", "(", "[", "features", "//", "2", "]", ",", "name", "=", "\"b2\"", ")", "\n", "\n", "conv1", "=", "conv2d", "(", "h_deconv_concat", ",", "w1", ",", "b1", ",", "keep_prob", ",", "is_training", ")", "\n", "conv1", "=", "tf", ".", "contrib", ".", "layers", ".", "group_norm", "(", "conv1", ",", "mean_close_to_zero", "=", "True", ")", "\n", "h_conv", "=", "rlrelu", "(", "conv1", ")", "\n", "\n", "conv2", "=", "conv2d", "(", "h_conv", ",", "w2", ",", "b2", ",", "keep_prob", ",", "is_training", ")", "\n", "conv2", "=", "tf", ".", "contrib", ".", "layers", ".", "group_norm", "(", "conv2", ",", "mean_close_to_zero", "=", "True", ")", "\n", "in_node", "=", "rlrelu", "(", "conv2", ")", "\n", "\n", "up_h_convs", "[", "layer", "]", "=", "in_node", "\n", "\n", "# size *= pool_size", "\n", "# size -= 2 * 2 * (filter_size // 2)  # valid conv", "\n", "\n", "# Output Map", "\n", "", "", "with", "tf", ".", "name_scope", "(", "\"output_map\"", ")", ":", "\n", "\n", "            ", "weight", "=", "weight_variable", "(", "[", "1", ",", "1", ",", "features_root", ",", "n_class", "]", ",", "stddev", ")", "\n", "bias", "=", "bias_variable", "(", "[", "n_class", "]", ",", "name", "=", "\"bias\"", ")", "\n", "output_map", "=", "conv2d", "(", "in_node", ",", "weight", ",", "bias", ",", "tf", ".", "constant", "(", "1.0", ")", ",", "is_training", ")", "\n", "up_h_convs", "[", "\"out\"", "]", "=", "output_map", "\n", "\n", "", "", "return", "up_h_convs", "[", "\"out\"", "]", ",", "attention_list", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.weight_variable": [[111, 114], ["tensorflow.truncated_normal", "tensorflow.Variable"], "function", ["None"], ["", "def", "weight_variable", "(", "shape", ",", "stddev", "=", "0.1", ",", "name", "=", "\"weight\"", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "truncated_normal", "(", "shape", ",", "stddev", "=", "stddev", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.weight_variable_devonc": [[116, 118], ["tensorflow.Variable", "tensorflow.truncated_normal"], "function", ["None"], ["", "def", "weight_variable_devonc", "(", "shape", ",", "stddev", "=", "0.1", ",", "name", "=", "\"weight_devonc\"", ")", ":", "\n", "    ", "return", "tf", ".", "Variable", "(", "tf", ".", "truncated_normal", "(", "shape", ",", "stddev", "=", "stddev", ")", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.bias_variable": [[120, 123], ["tensorflow.constant", "tensorflow.Variable"], "function", ["None"], ["", "def", "bias_variable", "(", "shape", ",", "name", "=", "\"bias\"", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "shape", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.conv2d": [[125, 130], ["tensorflow.name_scope", "tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.layers.dropout"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.conv2d"], ["", "def", "conv2d", "(", "x", ",", "W", ",", "b", ",", "keep_prob_", ",", "is_training", ",", "stride", "=", "1", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "\"conv2d\"", ")", ":", "\n", "        ", "conv_2d", "=", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "W", ",", "strides", "=", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "conv_2d_b", "=", "tf", ".", "nn", ".", "bias_add", "(", "conv_2d", ",", "b", ")", "\n", "return", "tf", ".", "layers", ".", "dropout", "(", "conv_2d_b", ",", "rate", "=", "1", "-", "keep_prob_", ",", "training", "=", "is_training", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.deconv2d": [[132, 138], ["tensorflow.name_scope", "tensorflow.shape", "tensorflow.stack", "tensorflow.nn.conv2d_transpose"], "function", ["None"], ["", "", "def", "deconv2d", "(", "x", ",", "W", ",", "stride", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "\"deconv2d\"", ")", ":", "\n", "        ", "x_shape", "=", "tf", ".", "shape", "(", "x", ")", "\n", "output_shape", "=", "tf", ".", "stack", "(", "[", "x_shape", "[", "0", "]", ",", "x_shape", "[", "1", "]", "*", "2", ",", "x_shape", "[", "2", "]", "*", "2", ",", "x_shape", "[", "3", "]", "//", "2", "]", ")", "\n", "return", "tf", ".", "nn", ".", "conv2d_transpose", "(", "x", ",", "W", ",", "output_shape", ",", "strides", "=", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "padding", "=", "'VALID'", ",", "\n", "name", "=", "\"conv2d_transpose\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.max_pool": [[140, 142], ["tensorflow.nn.max_pool"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.max_pool"], ["", "", "def", "max_pool", "(", "x", ",", "n", ")", ":", "\n", "    ", "return", "tf", ".", "nn", ".", "max_pool", "(", "x", ",", "ksize", "=", "[", "1", ",", "n", ",", "n", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "n", ",", "n", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.crop_and_concat": [[144, 153], ["tensorflow.name_scope", "tensorflow.shape", "tensorflow.shape", "tensorflow.slice", "tensorflow.concat"], "function", ["None"], ["", "def", "crop_and_concat", "(", "x1", ",", "x2", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "\"crop_and_concat\"", ")", ":", "\n", "        ", "x1_shape", "=", "tf", ".", "shape", "(", "x1", ")", "\n", "x2_shape", "=", "tf", ".", "shape", "(", "x2", ")", "\n", "# offsets for the top left corner of the crop", "\n", "offsets", "=", "[", "0", ",", "(", "x1_shape", "[", "1", "]", "-", "x2_shape", "[", "1", "]", ")", "//", "2", ",", "(", "x1_shape", "[", "2", "]", "-", "x2_shape", "[", "2", "]", ")", "//", "2", ",", "0", "]", "\n", "size", "=", "[", "-", "1", ",", "x2_shape", "[", "1", "]", ",", "x2_shape", "[", "2", "]", ",", "-", "1", "]", "\n", "x1_crop", "=", "tf", ".", "slice", "(", "x1", ",", "offsets", ",", "size", ")", "\n", "return", "tf", ".", "concat", "(", "[", "x1_crop", ",", "x2", "]", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.generate_heatmap.main": [[12, 25], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "generate_heatmap.RMIT", "generate_heatmap.ENDOVIS"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.create_train_test_split.RMIT", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.create_train_test_split.ENDOVIS"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--label_dir\"", ",", "help", "=", "\"Directory that contains the labels\"", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--save_dir\"", ",", "help", "=", "\"Directory to save the heatmaps\"", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--dataset\"", ",", "type", "=", "str", ",", "default", "=", "\"RMIT\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--post_processing_labels\"", ",", "type", "=", "int", ",", "default", "=", "0", ",", "\n", "help", "=", "\"Generate labels for post-processing module\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "\"RMIT\"", ":", "\n", "        ", "RMIT", "(", "args", ")", "\n", "", "elif", "args", ".", "dataset", "==", "\"ENDOVIS\"", ":", "\n", "        ", "ENDOVIS", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.generate_heatmap.ENDOVIS": [[27, 146], ["range", "os.path.join", "glob.glob", "open", "json.dump", "json.dump", "float", "float", "os.path.join", "os.path.join", "open", "json.loads", "json.loads", "j.read", "json_.split", "seq_id.split", "numpy.save", "numpy.zeros", "range", "numpy.zeros", "os.path.join", "element[].split", "generate_heatmap.ENDOVIS.get_line"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.read", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.line_integral.get_line"], ["", "", "def", "ENDOVIS", "(", "args", ")", ":", "\n", "    ", "def", "get_line", "(", "pt1", ",", "pt2", ")", ":", "\n", "# (x, y)", "\n", "        ", "m", "=", "float", "(", "pt1", "[", "1", "]", "-", "pt2", "[", "1", "]", ")", "/", "float", "(", "pt1", "[", "0", "]", "-", "pt2", "[", "0", "]", ")", "\n", "b", "=", "pt2", "[", "1", "]", "-", "m", "*", "pt2", "[", "0", "]", "\n", "return", "m", ",", "b", "\n", "\n", "", "num_classes", "=", "5", "\n", "num_connections", "=", "4", "\n", "\n", "read_folder_name", "=", "(", "\"train_labels\"", ",", "\"test_labels\"", ")", "\n", "save_folder_name", "=", "(", "\"training_labels_postprocessing\"", ",", "\"test_labels_postprocessing\"", ")", "\n", "num_instruments", "=", "{", "}", "\n", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "\n", "        ", "label_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "label_dir", ",", "read_folder_name", "[", "i", "]", ")", "\n", "json_list", "=", "glob", "(", "os", ".", "path", ".", "join", "(", "label_dir", ",", "\"*.json\"", ")", ")", "\n", "\n", "mapper", "=", "{", "\"LeftClasperPoint\"", ":", "0", ",", "\n", "\"RightClasperPoint\"", ":", "1", ",", "\n", "\"ShaftPoint\"", ":", "3", ",", "\n", "\"EndPoint\"", ":", "4", ",", "\n", "\"HeadPoint\"", ":", "2", "}", "\n", "\n", "for", "json_", "in", "json_list", ":", "\n", "            ", "with", "open", "(", "json_", ",", "\"r\"", ")", "as", "j", ":", "\n", "                ", "dict_list", "=", "json", ".", "loads", "(", "j", ".", "read", "(", ")", ")", "\n", "seq_id", "=", "json_", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "seq_id", "=", "seq_id", ".", "split", "(", "\"_\"", ")", "[", "0", "]", "\n", "for", "element", "in", "dict_list", ":", "\n", "                    ", "if", "element", "[", "\"annotations\"", "]", "==", "[", "]", ":", "\n", "                        ", "continue", "\n", "", "if", "not", "args", ".", "post_processing_labels", ":", "\n", "                        ", "heatmap", "=", "np", ".", "zeros", "(", "(", "576", ",", "720", ",", "num_classes", "+", "num_connections", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "counter", "=", "0", "\n", "part_coord", "=", "{", "\"LeftClasperPoint\"", ":", "[", "]", ",", "\n", "\"RightClasperPoint\"", ":", "[", "]", ",", "\n", "\"ShaftPoint\"", ":", "[", "]", ",", "\n", "\"EndPoint\"", ":", "[", "]", ",", "\n", "\"HeadPoint\"", ":", "[", "]", "}", "\n", "for", "e", "in", "element", "[", "\"annotations\"", "]", ":", "\n", "                            ", "if", "e", "[", "\"class\"", "]", "in", "mapper", ".", "keys", "(", ")", ":", "\n", "                                ", "idx", "=", "mapper", "[", "e", "[", "\"class\"", "]", "]", "\n", "part_coord", "[", "e", "[", "\"class\"", "]", "]", ".", "append", "(", "(", "e", "[", "\"x\"", "]", ",", "e", "[", "\"y\"", "]", ")", ")", "\n", "heatmap", "[", ":", ",", ":", ",", "idx", "]", "+=", "eval_gaussian", "(", "[", "e", "[", "\"y\"", "]", ",", "e", "[", "\"x\"", "]", "]", ",", "h", "=", "576", ",", "w", "=", "720", ")", "\n", "counter", "+=", "1", "\n", "", "", "fname", "=", "element", "[", "\"filename\"", "]", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "fname", "=", "fname", ".", "split", "(", "\".\"", ")", "[", "0", "]", "+", "\"_\"", "+", "seq_id", "+", "\".npy\"", "\n", "num_instruments", "[", "fname", "]", "=", "counter", "//", "num_classes", "\n", "# print(fname)", "\n", "# return", "\n", "\n", "# determine the connections", "\n", "for", "idx", "in", "range", "(", "counter", "//", "num_classes", ")", ":", "\n", "# print(part_coord)", "\n", "# print(\"\\n\")", "\n", "\n", "# left2head", "\n", "                            ", "m", ",", "b", "=", "get_line", "(", "part_coord", "[", "\"LeftClasperPoint\"", "]", "[", "idx", "]", ",", "part_coord", "[", "\"HeadPoint\"", "]", "[", "idx", "]", ")", "\n", "heatmap", "[", ":", ",", ":", ",", "5", "]", "+=", "eval_line", "(", "part_coord", "[", "\"LeftClasperPoint\"", "]", "[", "idx", "]", ",", "part_coord", "[", "\"HeadPoint\"", "]", "[", "idx", "]", ",", "\n", "m", ",", "b", ")", "\n", "# rigth2head", "\n", "m", ",", "b", "=", "get_line", "(", "part_coord", "[", "\"RightClasperPoint\"", "]", "[", "idx", "]", ",", "part_coord", "[", "\"HeadPoint\"", "]", "[", "idx", "]", ")", "\n", "heatmap", "[", ":", ",", ":", ",", "6", "]", "+=", "eval_line", "(", "part_coord", "[", "\"RightClasperPoint\"", "]", "[", "idx", "]", ",", "part_coord", "[", "\"HeadPoint\"", "]", "[", "idx", "]", ",", "\n", "m", ",", "b", ")", "\n", "# head2shaft", "\n", "m", ",", "b", "=", "get_line", "(", "part_coord", "[", "\"HeadPoint\"", "]", "[", "idx", "]", ",", "part_coord", "[", "\"ShaftPoint\"", "]", "[", "idx", "]", ")", "\n", "heatmap", "[", ":", ",", ":", ",", "7", "]", "+=", "eval_line", "(", "part_coord", "[", "\"HeadPoint\"", "]", "[", "idx", "]", ",", "part_coord", "[", "\"ShaftPoint\"", "]", "[", "idx", "]", ",", "m", ",", "b", ")", "\n", "# shaft2end", "\n", "m", ",", "b", "=", "get_line", "(", "part_coord", "[", "\"ShaftPoint\"", "]", "[", "idx", "]", ",", "part_coord", "[", "\"EndPoint\"", "]", "[", "idx", "]", ")", "\n", "heatmap", "[", ":", ",", ":", ",", "8", "]", "+=", "eval_line", "(", "part_coord", "[", "\"ShaftPoint\"", "]", "[", "idx", "]", ",", "part_coord", "[", "\"EndPoint\"", "]", "[", "idx", "]", ",", "m", ",", "b", ")", "\n", "", "", "else", ":", "\n", "                        ", "heatmap", "=", "np", ".", "zeros", "(", "(", "576", ",", "720", ",", "10", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "mapper", "=", "{", "\"tool1\"", ":", "{", "\"LeftClasperPoint\"", ":", "0", ",", "\n", "\"RightClasperPoint\"", ":", "1", ",", "\n", "\"ShaftPoint\"", ":", "3", ",", "\n", "\"EndPoint\"", ":", "4", ",", "\n", "\"HeadPoint\"", ":", "2", "\n", "}", ",", "\n", "\"tool2\"", ":", "{", "\"LeftClasperPoint\"", ":", "5", ",", "\n", "\"RightClasperPoint\"", ":", "6", ",", "\n", "\"ShaftPoint\"", ":", "8", ",", "\n", "\"EndPoint\"", ":", "9", ",", "\n", "\"HeadPoint\"", ":", "7", "\n", "}", ",", "\n", "\"tool4\"", ":", "{", "\"LeftClasperPoint\"", ":", "5", ",", "\n", "\"RightClasperPoint\"", ":", "6", ",", "\n", "\"ShaftPoint\"", ":", "8", ",", "\n", "\"EndPoint\"", ":", "9", ",", "\n", "\"HeadPoint\"", ":", "7", "\n", "}", "\n", "}", "\n", "\n", "for", "e", "in", "element", "[", "\"annotations\"", "]", ":", "\n", "                            ", "try", ":", "\n", "                                ", "if", "e", "[", "\"class\"", "]", "in", "mapper", "[", "e", "[", "\"id\"", "]", "]", ".", "keys", "(", ")", ":", "\n", "                                    ", "idx", "=", "mapper", "[", "e", "[", "\"id\"", "]", "]", "[", "e", "[", "\"class\"", "]", "]", "\n", "heatmap", "[", ":", ",", ":", ",", "idx", "]", "+=", "eval_gaussian", "(", "[", "e", "[", "\"y\"", "]", ",", "e", "[", "\"x\"", "]", "]", ",", "h", "=", "576", ",", "w", "=", "720", ")", "\n", "# import cv2", "\n", "# cv2.imshow(\"heatmap\", (heatmap[:, :, idx] * 255).astype(\"uint8\"))", "\n", "# cv2.waitKey(0)", "\n", "", "", "except", "KeyError", "as", "err", ":", "\n", "                                ", "print", "(", "err", ")", "\n", "print", "(", "e", ")", "\n", "if", "e", "[", "\"x\"", "]", ">=", "720", "//", "2", ":", "\n", "                                    ", "tool_id", "=", "\"tool1\"", "\n", "idx", "=", "mapper", "[", "tool_id", "]", "[", "e", "[", "\"class\"", "]", "]", "\n", "heatmap", "[", ":", ",", ":", ",", "idx", "]", "+=", "eval_gaussian", "(", "[", "e", "[", "\"y\"", "]", ",", "e", "[", "\"x\"", "]", "]", ",", "h", "=", "576", ",", "w", "=", "720", ")", "\n", "", "else", ":", "\n", "                                    ", "raise", "ValueError", "\n", "", "", "", "fname", "=", "element", "[", "\"filename\"", "]", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "fname", "=", "fname", ".", "split", "(", "\".\"", ")", "[", "0", "]", "+", "\"_\"", "+", "seq_id", "+", "\".npy\"", "\n", "\n", "", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "save_folder_name", "[", "i", "]", ",", "fname", ")", ",", "heatmap", ")", "\n", "\n", "", "", "", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "\"instrument_count.json\"", ")", ",", "\"w\"", ")", "as", "d", ":", "\n", "        ", "json", ".", "dump", "(", "num_instruments", ",", "d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.generate_heatmap.RMIT": [[149, 169], ["sorted", "utils.annotation_parser.parse_annotation", "range", "os.path.exists", "os.mkdir", "glob.glob", "len", "range", "numpy.zeros", "utils.heatmap.eval_gaussian", "utils.heatmap.eval_gaussian", "utils.heatmap.eval_gaussian", "utils.heatmap.eval_gaussian", "numpy.save", "str"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.annotation_parser.parse_annotation", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.heatmap.eval_gaussian", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.heatmap.eval_gaussian", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.heatmap.eval_gaussian", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.heatmap.eval_gaussian"], ["", "", "def", "RMIT", "(", "args", ")", ":", "\n", "    ", "save_dir", "=", "args", ".", "save_dir", "+", "\"/heatmaps\"", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "save_dir", ")", "\n", "\n", "", "label_list", "=", "sorted", "(", "glob", "(", "args", ".", "label_dir", "+", "\"/*txt\"", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "0", "]", "<", "x", "[", "1", "]", ")", "\n", "parsed", "=", "parse_annotation", "(", "label_list", ")", "\n", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "        ", "data", "=", "parsed", "[", "\"seq\"", "+", "str", "(", "i", "+", "1", ")", "]", "\n", "size", "=", "len", "(", "data", "[", "\"fname\"", "]", ")", "\n", "\n", "for", "j", "in", "range", "(", "size", ")", ":", "\n", "            ", "heatmap", "=", "np", ".", "zeros", "(", "(", "480", ",", "640", ",", "4", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "heatmap", "[", ":", ",", ":", ",", "0", "]", "=", "eval_gaussian", "(", "data", "[", "\"p1\"", "]", "[", "j", "]", ")", "\n", "heatmap", "[", ":", ",", ":", ",", "1", "]", "=", "eval_gaussian", "(", "data", "[", "\"p2\"", "]", "[", "j", "]", ")", "\n", "heatmap", "[", ":", ",", ":", ",", "2", "]", "=", "eval_gaussian", "(", "data", "[", "\"p3\"", "]", "[", "j", "]", ")", "\n", "heatmap", "[", ":", ",", ":", ",", "3", "]", "=", "eval_gaussian", "(", "data", "[", "\"p4\"", "]", "[", "j", "]", ")", "\n", "np", ".", "save", "(", "save_dir", "+", "\"/\"", "+", "data", "[", "\"fname\"", "]", "[", "j", "]", "+", "\".npy\"", ",", "heatmap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.annotation_parser.parse_annotation": [[1, 25], ["file.split", "seq_name.split", "open", "line.split", "[].append", "[].append", "[].append", "[].append", "[].append"], "function", ["None"], ["def", "parse_annotation", "(", "label_list", ")", ":", "\n", "\n", "    ", "parsed", "=", "{", "}", "\n", "\n", "for", "file", "in", "label_list", ":", "\n", "        ", "seq_name", "=", "file", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "seq_name", "=", "seq_name", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "parsed", "[", "seq_name", "]", "=", "{", "\"fname\"", ":", "[", "]", ",", "\n", "\"p1\"", ":", "[", "]", ",", "\n", "\"p2\"", ":", "[", "]", ",", "\n", "\"p3\"", ":", "[", "]", ",", "\n", "\"p4\"", ":", "[", "]", "}", "\n", "with", "open", "(", "file", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "split", "=", "line", ".", "split", "(", "\" \"", ")", "\n", "if", "split", "[", "1", "]", "==", "\"-1\"", ":", "\n", "                    ", "continue", "\n", "", "parsed", "[", "seq_name", "]", "[", "\"fname\"", "]", ".", "append", "(", "split", "[", "0", "]", ")", "\n", "parsed", "[", "seq_name", "]", "[", "\"p1\"", "]", ".", "append", "(", "[", "split", "[", "1", "]", ",", "split", "[", "2", "]", "]", ")", "\n", "parsed", "[", "seq_name", "]", "[", "\"p2\"", "]", ".", "append", "(", "[", "split", "[", "3", "]", ",", "split", "[", "4", "]", "]", ")", "\n", "parsed", "[", "seq_name", "]", "[", "\"p3\"", "]", ".", "append", "(", "[", "split", "[", "5", "]", ",", "split", "[", "6", "]", "]", ")", "\n", "parsed", "[", "seq_name", "]", "[", "\"p4\"", "]", ".", "append", "(", "[", "split", "[", "7", "]", ",", "split", "[", "8", "]", "]", ")", "\n", "\n", "", "", "", "return", "parsed", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.bbox_extractor.extract_bbox": [[7, 16], ["max", "max", "min", "min", "max"], "function", ["None"], ["def", "extract_bbox", "(", "annotation", ",", "alpha", "=", "1", ")", ":", "\n", "    ", "relevant", "=", "annotation", "[", "1", ":", "]", "# shaft is not relevant", "\n", "max_y", "=", "max", "(", "relevant", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ")", "[", "1", "]", "\n", "max_x", "=", "max", "(", "relevant", ",", "key", "=", "lambda", "x", ":", "x", "[", "0", "]", ")", "[", "0", "]", "\n", "min_y", "=", "min", "(", "relevant", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ")", "[", "1", "]", "\n", "min_x", "=", "min", "(", "relevant", ",", "key", "=", "lambda", "x", ":", "x", "[", "0", "]", ")", "[", "0", "]", "\n", "delta", "=", "alpha", "*", "max", "(", "[", "max_x", "-", "min_x", ",", "max_y", "-", "min_y", "]", ")", "\n", "bbox", "=", "[", "(", "min_y", "-", "delta", ",", "min_x", "-", "delta", ")", ",", "(", "max_y", "+", "delta", ",", "max_x", "+", "delta", ")", "]", "\n", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.bbox_extractor.main": [[18, 47], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "glob.glob", "os.path.isdir", "os.mkdir", "open", "pickle.dump", "open", "map", "bbox_extractor.extract_bbox", "line.split"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.bbox_extractor.extract_bbox"], ["", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--dataset\"", ",", "help", "=", "\"Number of joints depend on the dataset\"", ",", "type", "=", "str", ",", "default", "=", "\"RMIT\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--save_dir\"", ",", "help", "=", "\"Directory to save pickle\"", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--root\"", ",", "help", "=", "\"Directory that contains the annotations\"", ",", "required", "=", "True", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "if", "args", ".", "dataset", "!=", "\"RMIT\"", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "parsed", "=", "{", "}", "\n", "\n", "for", "annotation", "in", "glob", "(", "args", ".", "root", "+", "\"/*txt\"", ")", ":", "\n", "        ", "with", "open", "(", "annotation", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "split", "=", "line", ".", "split", "(", "\" \"", ")", "[", ":", "9", "]", "\n", "if", "split", "[", "1", "]", "==", "\"-1\"", ":", "\n", "                    ", "continue", "\n", "", "split", "[", "1", ":", "]", "=", "map", "(", "int", ",", "split", "[", "1", ":", "]", ")", "\n", "parsed", "[", "split", "[", "0", "]", "]", "=", "extract_bbox", "(", "[", "[", "split", "[", "1", "]", ",", "split", "[", "2", "]", "]", ",", "\n", "[", "split", "[", "3", "]", ",", "split", "[", "4", "]", "]", ",", "\n", "[", "split", "[", "5", "]", ",", "split", "[", "6", "]", "]", ",", "\n", "[", "split", "[", "7", "]", ",", "split", "[", "8", "]", "]", "]", ")", "\n", "", "", "", "save_dir", "=", "args", ".", "save_dir", "+", "\"/bbox\"", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "save_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "save_dir", ")", "\n", "\n", "", "with", "open", "(", "save_dir", "+", "\"/bbox.pickle\"", ",", "\"wb\"", ")", "as", "p", ":", "\n", "        ", "pickle", ".", "dump", "(", "parsed", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.create_train_test_split.main": [[9, 24], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "create_train_test_split.RMIT", "create_train_test_split.ENDOVIS"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.create_train_test_split.RMIT", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.create_train_test_split.ENDOVIS"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--img_dir\"", ",", "help", "=", "\"Directory that contains the images\"", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--label_dir\"", ",", "help", "=", "\"Directory that contains the annotations\"", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--dataset\"", ",", "help", "=", "\"Splits depend on the dataset\"", ",", "type", "=", "str", ",", "default", "=", "\"RMIT\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--save_dir\"", ",", "help", "=", "\"Directory to save the training/test files\"", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--heatmap_dir\"", ",", "help", "=", "\"Directory that contains the heatmaps\"", ",", "required", "=", "True", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "\"RMIT\"", ":", "\n", "        ", "RMIT", "(", "args", ")", "\n", "", "elif", "args", ".", "dataset", "==", "\"ENDOVIS\"", ":", "\n", "        ", "ENDOVIS", "(", "args", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.create_train_test_split.ENDOVIS": [[26, 28], ["None"], "function", ["None"], ["", "", "def", "ENDOVIS", "(", "args", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.create_train_test_split.RMIT": [[30, 75], ["sorted", "utils.annotation_parser.parse_annotation", "range", "glob.glob", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "len", "range", "range", "subprocess.call", "subprocess.call", "subprocess.call", "subprocess.call"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.annotation_parser.parse_annotation"], ["", "def", "RMIT", "(", "args", ")", ":", "\n", "    ", "label_list", "=", "sorted", "(", "glob", "(", "args", ".", "label_dir", "+", "\"/*txt\"", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "0", "]", "<", "x", "[", "1", "]", ")", "\n", "parsed", "=", "parse_annotation", "(", "label_list", ")", "\n", "\n", "training_dir", "=", "args", ".", "save_dir", "+", "\"/training\"", "\n", "test_dir", "=", "args", ".", "save_dir", "+", "\"/test\"", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "training_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "training_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "test_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "test_dir", ")", "\n", "\n", "", "training_img_dir", "=", "training_dir", "+", "\"/image\"", "\n", "training_label_dir", "=", "training_dir", "+", "\"/label\"", "\n", "test_img_dir", "=", "test_dir", "+", "\"/image\"", "\n", "test_label_dir", "=", "test_dir", "+", "\"/label\"", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "training_img_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "training_img_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "training_label_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "training_label_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "test_img_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "test_img_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "test_label_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "test_label_dir", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "        ", "size", "=", "len", "(", "parsed", "[", "\"seq{}\"", ".", "format", "(", "i", "+", "1", ")", "]", "[", "\"fname\"", "]", ")", "\n", "train_size", "=", "size", "//", "2", "+", "1", "# size of training split", "\n", "\n", "for", "j", "in", "range", "(", "train_size", ")", ":", "\n", "            ", "fname", "=", "parsed", "[", "\"seq{}\"", ".", "format", "(", "i", "+", "1", ")", "]", "[", "\"fname\"", "]", "[", "j", "]", "\n", "sp", ".", "call", "(", "\"cp {} {}\"", ".", "format", "(", "args", ".", "img_dir", "+", "\"/\"", "+", "fname", "+", "\".png\"", ",", "training_img_dir", "+", "\"/\"", "+", "fname", "+", "\".png\"", ")", ",", "\n", "shell", "=", "True", ")", "\n", "sp", ".", "call", "(", "\"cp {} {}\"", ".", "format", "(", "args", ".", "heatmap_dir", "+", "\"/\"", "+", "fname", "+", "\".npy\"", ",", "\n", "training_label_dir", "+", "\"/\"", "+", "fname", "+", "\".npy\"", ")", ",", "\n", "shell", "=", "True", ")", "\n", "\n", "", "for", "j", "in", "range", "(", "train_size", ",", "size", ",", "1", ")", ":", "\n", "            ", "fname", "=", "parsed", "[", "\"seq{}\"", ".", "format", "(", "i", "+", "1", ")", "]", "[", "\"fname\"", "]", "[", "j", "]", "\n", "sp", ".", "call", "(", "\"cp {} {}\"", ".", "format", "(", "args", ".", "img_dir", "+", "\"/\"", "+", "fname", "+", "\".png\"", ",", "test_img_dir", "+", "\"/\"", "+", "fname", "+", "\".png\"", ")", ",", "\n", "shell", "=", "True", ")", "\n", "sp", ".", "call", "(", "\"cp {} {}\"", ".", "format", "(", "args", ".", "heatmap_dir", "+", "\"/\"", "+", "fname", "+", "\".npy\"", ",", "\n", "test_label_dir", "+", "\"/\"", "+", "fname", "+", "\".npy\"", ")", ",", "\n", "shell", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.pseudo_label.main": [[10, 48], ["tensorflow.Session", "tensorflow.placeholder", "tensorflow.placeholder", "src.u_net.create_conv_net", "tensorflow.image.total_variation", "tensorflow.contrib.framework.assign_from_checkpoint", "tf.Session.run", "print", "src.get_batch.Batch", "len", "print", "range", "print", "tensorflow.contrib.slim.get_variables_to_restore", "src.get_batch.Batch.get_batch", "tf.Session.run", "numpy.save", "os.path.join"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.create_conv_net", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.get_batch.Batch.get_batch"], ["def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "\"\"", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "\n", "net_in", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "1", ",", "256", ",", "320", ",", "3", "]", ")", "\n", "is_training", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "keep_prob", "=", ".9", "\n", "num_parts", "=", "5", "\n", "num_connections", "=", "4", "\n", "\n", "net_out", ",", "_", "=", "unet", "(", "net_in", ",", "keep_prob", ",", "3", ",", "num_parts", "+", "num_connections", ",", "\n", "is_training", "=", "is_training", ",", "features_root", "=", "64", ",", "alpha", "=", "1", "/", "5.5", ")", "\n", "tv", "=", "tf", ".", "image", ".", "total_variation", "(", "net_out", ")", "\n", "\n", "restore_op", ",", "restore_dict", "=", "tf", ".", "contrib", ".", "framework", ".", "assign_from_checkpoint", "(", "\n", "args", ".", "model_dir", "+", "\"/model.ckpt\"", ",", "\n", "tf", ".", "contrib", ".", "slim", ".", "get_variables_to_restore", "(", ")", ",", "\n", "ignore_missing_vars", "=", "True", "\n", ")", "\n", "sess", ".", "run", "(", "restore_op", ",", "feed_dict", "=", "restore_dict", ")", "\n", "print", "(", "\"Restored session and reset global step\"", ")", "\n", "\n", "b", "=", "Batch", "(", "args", ".", "root", ",", "1", ",", "testing", "=", "True", ",", "augment", "=", "False", ",", "dataset", "=", "\"ENDOVIS\"", ",", "include_unlabelled", "=", "True", ",", "pseudo_label", "=", "True", ")", "\n", "max_it", "=", "len", "(", "b", ".", "unlabelled_img_list", ")", "\n", "\n", "print", "(", "\"Found\"", ",", "max_it", ",", "\"unlabeled images.\"", ")", "\n", "\n", "for", "i", "in", "range", "(", "max_it", ")", ":", "\n", "        ", "img", ",", "label", ",", "_", ",", "_", "=", "b", ".", "get_batch", "(", ")", "\n", "output", ",", "total_variation", "=", "sess", ".", "run", "(", "[", "net_out", ",", "tv", "]", ",", "feed_dict", "=", "{", "net_in", ":", "img", ",", "is_training", ":", "False", "}", ")", "\n", "assert", "output", "[", "0", "]", ".", "shape", "[", "0", "]", "==", "256", "\n", "assert", "output", "[", "0", "]", ".", "shape", "[", "1", "]", "==", "320", "\n", "assert", "output", "[", "0", "]", ".", "shape", "[", "2", "]", "==", "9", "\n", "if", "total_variation", ">", "1000", "or", "700", ">", "total_variation", ">", "400", ":", "\n", "            ", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "b", ".", "name_list", "[", "0", "]", "+", "\".npy\"", ")", ",", "output", "[", "0", "]", ")", "\n", "\n", "", "", "print", "(", "\"Done.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.network_statistics.main": [[8, 38], ["tensorflow.Session", "tensorflow.ones", "src.u_net.create_conv_net", "tensorflow.trainable_variables", "print", "tf.Session.run", "time.time", "range", "time.time", "print", "variable.get_shape", "tensorflow.global_variables_initializer", "tf.Session.run"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.u_net.create_conv_net"], ["def", "main", "(", ")", ":", "\n", "    ", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "\"\"", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "\n", "x", "=", "tf", ".", "ones", "(", "shape", "=", "[", "1", ",", "256", ",", "320", ",", "3", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "net_out", ",", "_", "=", "create_conv_net", "(", "x", ",", ".9", ",", "3", ",", "9", ",", "is_training", "=", "False", ",", "features_root", "=", "64", ",", "alpha", "=", "1", "/", "5.5", ")", "\n", "\n", "total_parameters", "=", "0", "\n", "for", "variable", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "# shape is an array of tf.Dimension", "\n", "        ", "shape", "=", "variable", ".", "get_shape", "(", ")", "\n", "# print(shape)", "\n", "# print(len(shape))", "\n", "variable_parameters", "=", "1", "\n", "for", "dim", "in", "shape", ":", "\n", "# print(dim)", "\n", "            ", "variable_parameters", "*=", "dim", ".", "value", "\n", "# print(variable_parameters)", "\n", "", "total_parameters", "+=", "variable_parameters", "\n", "", "print", "(", "\"Total number of trainable parameters:\"", ",", "total_parameters", ")", "\n", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "begin", "=", "time", "(", ")", "\n", "max_it", "=", "1000", "\n", "for", "_", "in", "range", "(", "max_it", ")", ":", "\n", "        ", "sess", ".", "run", "(", "net_out", ")", "\n", "", "end", "=", "time", "(", ")", "\n", "\n", "print", "(", "\"Elapsed time\"", ",", "(", "end", "-", "begin", ")", "/", "max_it", ",", "\"ms\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.extract_frames.extract_frames": [[7, 67], ["glob.glob", "print", "print", "os.path.join", "len", "cv2.VideoCapture", "path.split", "glob.glob", "list", "list", "os.path.exists", "os.path.exists", "os.path.join", "len", "map", "map", "cv2.VideoCapture.read", "os.path.exists", "os.path.join", "os.path.join", "cv2.imwrite", "ValueError", "os.path.join", "x.split", "x.split"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.None.img_utils.read"], ["def", "extract_frames", "(", "args", ")", ":", "\n", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "video_dir", ")", "or", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "save_dir", ")", ":", "\n", "        ", "raise", "ValueError", "\n", "\n", "", "video_dirs", "=", "glob", "(", "os", ".", "path", ".", "join", "(", "args", ".", "video_dir", ",", "\"Dataset*\"", ",", "\"*.avi\"", ")", ")", "\n", "assert", "len", "(", "video_dirs", ")", "!=", "0", "\n", "\n", "in_counter", "=", "0", "\n", "total_counter", "=", "0", "\n", "\n", "for", "path", "in", "video_dirs", ":", "\n", "        ", "vidObj", "=", "cv2", ".", "VideoCapture", "(", "path", ")", "\n", "# Used as counter variable", "\n", "count", "=", "1", "\n", "\n", "# checks whether frames were extracted", "\n", "success", "=", "1", "\n", "\n", "split_", "=", "path", ".", "split", "(", "\"/\"", ")", "\n", "\n", "if", "split_", "[", "-", "3", "]", "==", "\"Training\"", ":", "\n", "            ", "phase", "=", "\"train\"", "\n", "label_ext", "=", "\"training_labels\"", "\n", "", "else", ":", "\n", "            ", "phase", "=", "\"test\"", "\n", "label_ext", "=", "\"test_labels\"", "\n", "\n", "", "label_names", "=", "glob", "(", "os", ".", "path", ".", "join", "(", "args", ".", "label_dir", ",", "label_ext", ",", "\"*npy\"", ")", ")", "\n", "assert", "len", "(", "label_names", ")", "!=", "0", "\n", "label_names", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "split", "(", "\".\"", ")", "[", "0", "]", ",", "label_names", ")", ")", "\n", "label_names", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ",", "label_names", ")", ")", "\n", "\n", "while", "success", ":", "\n", "# vidObj object calls read", "\n", "# function extract frames", "\n", "            ", "success", ",", "image", "=", "vidObj", ".", "read", "(", ")", "\n", "\n", "# Saves the frames with frame-count", "\n", "if", "split_", "[", "-", "3", "]", "==", "\"Training\"", ":", "\n", "                ", "fname", "=", "\"img_{0:0=6d}_raw_{1}\"", ".", "format", "(", "count", ",", "phase", "+", "split_", "[", "-", "2", "]", "[", "-", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "fname", "=", "\"img_{0:0=4d}_{1}\"", ".", "format", "(", "count", ",", "phase", "+", "split_", "[", "-", "2", "]", "[", "-", "1", "]", ")", "\n", "\n", "", "if", "fname", "in", "label_names", ":", "\n", "                ", "in_counter", "+=", "1", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "\"labelled_\"", "+", "phase", ")", "\n", "", "else", ":", "\n", "                ", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "\"unlabelled_\"", "+", "phase", ")", "\n", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "save_path", ")", ":", "\n", "                ", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "save_path", ",", "fname", "+", "\".jpg\"", ")", ",", "image", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "save_path", ")", "\n", "\n", "", "count", "+=", "1", "\n", "total_counter", "+=", "1", "\n", "\n", "", "", "print", "(", "\"Labelled images:\"", ",", "in_counter", ")", "\n", "print", "(", "\"Total images:\"", ",", "total_counter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.extract_frames.main": [[69, 77], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "extract_frames.extract_frames"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.extract_frames.extract_frames"], ["", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--video_dir\"", ",", "help", "=", "\"Directory that contains the videos\"", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--save_dir\"", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--label_dir\"", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "extract_frames", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.heatmap.eval_gaussian": [[4, 16], ["numpy.array().reshape", "numpy.linspace", "numpy.linspace", "numpy.array().reshape", "numpy.sum", "numpy.exp().reshape", "numpy.array", "numpy.array", "numpy.exp", "numpy.meshgrid"], "function", ["None"], ["def", "eval_gaussian", "(", "mu", ",", "sigma", "=", "20.", ",", "h", "=", "480", ",", "w", "=", "640", ")", ":", "\n", "\n", "    ", "mu_np", "=", "np", ".", "array", "(", "mu", ",", "dtype", "=", "np", ".", "float32", ")", ".", "reshape", "(", "1", ",", "2", ")", "\n", "x", "=", "np", ".", "linspace", "(", "0", ",", "w", "-", "1", ",", "w", ")", "\n", "y", "=", "np", ".", "linspace", "(", "0", ",", "h", "-", "1", ",", "h", ")", "\n", "\n", "grid", "=", "np", ".", "array", "(", "np", ".", "meshgrid", "(", "y", ",", "x", ")", ")", ".", "reshape", "(", "2", ",", "-", "1", ")", "\n", "diff", "=", "grid", "-", "mu_np", ".", "T", "\n", "norm_squared", "=", "np", ".", "sum", "(", "diff", "**", "2", ",", "axis", "=", "0", ")", "\n", "tmp", "=", "norm_squared", "/", "(", "sigma", "**", "2", ")", "\n", "proba", "=", "np", ".", "exp", "(", "-", "tmp", ")", ".", "reshape", "(", "w", ",", "h", ")", "\n", "return", "proba", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.heatmap.__gaussian": [[18, 20], ["numpy.exp"], "function", ["None"], ["", "def", "__gaussian", "(", "norm_squared", ",", "sigma", "=", "20.", ")", ":", "\n", "    ", "return", "np", ".", "exp", "(", "-", "norm_squared", "/", "(", "sigma", "**", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.heatmap.__circular_mask": [[22, 27], ["numpy.sqrt"], "function", ["None"], ["", "def", "__circular_mask", "(", "grid", ",", "center", ",", "radius", ")", ":", "\n", "\n", "    ", "dist_from_center", "=", "np", ".", "sqrt", "(", "(", "grid", "[", "0", ",", ":", "]", "-", "center", "[", "0", "]", ")", "**", "2", "+", "(", "grid", "[", "1", ",", ":", "]", "-", "center", "[", "1", "]", ")", "**", "2", ")", "\n", "mask", "=", "dist_from_center", "<=", "radius", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.heatmap.eval_line": [[29, 44], ["numpy.linspace", "numpy.linspace", "numpy.array().reshape", "__gaussian().reshape", "numpy.sqrt", "heatmap.__circular_mask", "__circular_mask.reshape", "numpy.abs", "numpy.sqrt", "numpy.array", "heatmap.__gaussian", "numpy.meshgrid"], "function", ["home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.heatmap.__circular_mask", "home.repos.pwc.inspect_result.mertkayhan_SSL-2D-Pose.utils.heatmap.__gaussian"], ["", "def", "eval_line", "(", "pt1", ",", "pt2", ",", "m", ",", "b", ",", "h", "=", "576", ",", "w", "=", "720", ",", "sigma", "=", "20", ")", ":", "\n", "# (x, y)", "\n", "\n", "    ", "x", "=", "np", ".", "linspace", "(", "0", ",", "w", "-", "1", ",", "w", ")", "\n", "y", "=", "np", ".", "linspace", "(", "0", ",", "h", "-", "1", ",", "h", ")", "\n", "\n", "grid", "=", "np", ".", "array", "(", "np", ".", "meshgrid", "(", "y", ",", "x", ")", ")", ".", "reshape", "(", "2", ",", "-", "1", ")", "\n", "distance", "=", "np", ".", "abs", "(", "m", "*", "grid", "[", "1", ",", ":", "]", "+", "-", "1", "*", "grid", "[", "0", ",", ":", "]", "+", "b", ")", "/", "np", ".", "sqrt", "(", "m", "**", "2", "+", "1", ")", "\n", "heatmap", "=", "__gaussian", "(", "distance", "**", "2", ",", "sigma", "=", "sigma", ")", ".", "reshape", "(", "w", ",", "h", ")", "\n", "center", "=", "(", "(", "pt1", "[", "0", "]", "+", "pt2", "[", "0", "]", ")", "/", "2", ",", "(", "pt1", "[", "1", "]", "+", "pt2", "[", "1", "]", ")", "/", "2", ")", "\n", "dist", "=", "np", ".", "sqrt", "(", "(", "pt1", "[", "0", "]", "-", "pt2", "[", "0", "]", ")", "**", "2", "+", "(", "pt1", "[", "1", "]", "-", "pt2", "[", "1", "]", ")", "**", "2", ")", "\n", "mask", "=", "__circular_mask", "(", "grid", ",", "center", ",", "dist", "//", "2", "+", "sigma", "//", "2", ")", "\n", "heatmap", "*=", "mask", ".", "reshape", "(", "w", ",", "h", ")", "\n", "\n", "return", "heatmap", ".", "T", "\n", "\n"]]}