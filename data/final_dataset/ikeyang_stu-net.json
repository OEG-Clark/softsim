{"home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.ST-synthesis.makeSparse": [[15, 26], ["numpy.random.choice", "numpy.random.choice", "numpy.where", "numpy.where", "int", "int", "len", "len"], "function", ["None"], ["def", "makeSparse", "(", "x", ",", "noise", ",", "sparseLevel", ",", "sparseRate", ")", ":", "\n", "    ", "ind", "=", "np", ".", "where", "(", "noise", ">", "sparseLevel", ")", "[", "0", "]", "\n", "indC", "=", "np", ".", "random", ".", "choice", "(", "ind", ",", "replace", "=", "False", ",", "size", "=", "int", "(", "len", "(", "ind", ")", "*", "sparseRate", ")", ")", "\n", "x", "[", "indC", "]", "=", "0", "\n", "noise", "[", "indC", "]", "=", "0", "\n", "\n", "ind", "=", "np", ".", "where", "(", "noise", ">", "0.985", ")", "[", "0", "]", "\n", "indC", "=", "np", ".", "random", ".", "choice", "(", "ind", ",", "replace", "=", "False", ",", "size", "=", "int", "(", "len", "(", "ind", ")", "*", "sparseRate", ")", ")", "\n", "x", "[", "indC", "]", "=", "0", "\n", "noise", "[", "indC", "]", "=", "0", "\n", "return", "x", ",", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.ST-synthesis.yCutDownF": [[27, 32], ["numpy.where"], "function", ["None"], ["", "def", "yCutDownF", "(", "x2", ",", "noise", ",", "yCutDownLevel", ")", ":", "\n", "    ", "ind", "=", "np", ".", "where", "(", "noise", ">", "yCutDownLevel", ")", "[", "0", "]", "\n", "x2", "[", "ind", "]", "=", "0", "\n", "noise", "[", "ind", "]", "=", "0", "\n", "return", "x2", ",", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.ST-synthesis.generatePict": [[34, 176], ["numpy.arange", "numpy.arange", "numpy.concatenate", "numpy.sort", "numpy.random.rand", "numpy.random.rand", "numpy.random.randint", "numpy.random.rand", "numpy.random.rand", "numpy.random.rand", "matplotlib.pyplot.subplots", "utlize.varModel", "numpy.random.randint", "utlize.addNoise", "ax.plot", "numpy.random.randint", "utlize.addNoise", "ax.plot", "numpy.random.choice", "numpy.random.randint", "utlize.addNoise", "ax.plot", "numpy.random.randint", "utlize.addNoise", "ax.plot", "ax.set_xticks", "ax.set_yticks", "ax.axis", "ax.set_xlim", "ax.set_ylim", "matplotlib.pyplot.close", "matplotlib.pyplot.subplots", "ax.set_xlim", "ax.set_ylim", "ax.plot", "ax.axis", "matplotlib.pyplot.close", "matplotlib.pyplot.close", "numpy.random.randint", "numpy.random.randint", "int", "len", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "utlize.DE", "utlize.ADE", "numpy.random.choice", "m", "ST-synthesis.makeSparse", "ST-synthesis.yCutDownF", "ST-synthesis.makeSparse", "ST-synthesis.yCutDownF", "utlize.addNoise", "ax.plot", "utlize.addNoise", "ax.plot", "utlize.addNoise", "ax.plot", "matplotlib.pyplot.show", "f.savefig", "matplotlib.pyplot.show", "f.savefig", "int", "int", "ST-synthesis.makeSparse", "ST-synthesis.yCutDownF", "len"], "function", ["home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.varModel", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.addNoise", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.addNoise", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.addNoise", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.addNoise", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.DE", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.ADE", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.ST-synthesis.makeSparse", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.ST-synthesis.yCutDownF", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.ST-synthesis.makeSparse", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.ST-synthesis.yCutDownF", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.addNoise", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.addNoise", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.addNoise", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.ST-synthesis.makeSparse", "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.ST-synthesis.yCutDownF"], ["", "def", "generatePict", "(", "name", ",", "model", "=", "'DE'", ",", "show", "=", "True", ",", "save", "=", "True", ",", "varProjectF", "=", "None", ")", ":", "\n", "    ", "Continue", "=", "True", "\n", "modelPool", "=", "[", "DE", ",", "ADE", "]", "\n", "modelL", "=", "[", "'DE'", ",", "'ADE'", "]", "\n", "while", "Continue", ":", "\n", "        ", "try", ":", "\n", "            ", "x", "=", "np", ".", "arange", "(", "0", ",", "1", ",", "1", "/", "500", ")", "\n", "x2", "=", "np", ".", "arange", "(", "0.1", ",", "0.7", ",", "1", "/", "500", ")", "\n", "x", "=", "np", ".", "concatenate", "(", "(", "x", ",", "x2", ")", ")", "\n", "xP", "=", "np", ".", "sort", "(", "x", ")", "\n", "\n", "####Sparse", "\n", "sparse", "=", "True", "\n", "sparseLevel", "=", "0.5", "\n", "prabSpase", "=", "0.3", "#abnormal Rate", "\n", "sparseRand", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "sparseLevel", "=", "np", ".", "random", ".", "randint", "(", "int", "(", "sparseLevel", "*", "100", ")", ",", "100", ")", "/", "100", "\n", "sparseRate", "=", "np", ".", "random", ".", "randint", "(", "90", ",", "95", ")", "/", "100", "\n", "if", "sparse", ":", "\n", "                ", "sparse", "=", "sparseRand", "<", "prabSpase", "\n", "\n", "\n", "#x cut down", "\n", "", "couOffRate", "=", "0.7", "\n", "prabcompletionEnd", "=", "0.5", "\n", "completionEnd", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "end", "=", "np", ".", "random", ".", "randint", "(", "int", "(", "len", "(", "xP", ")", "*", "couOffRate", ")", ",", "len", "(", "xP", ")", ")", "\n", "\n", "# y cut down", "\n", "prabYcut", "=", "0.1", "#abnormal Rate", "\n", "yCutDownLevel", "=", "np", ".", "random", ".", "randint", "(", "int", "(", "0.7", "*", "100", ")", ",", "100", ")", "/", "100", "\n", "yCutDownRand", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "yCUtDOwn", "=", "yCutDownRand", "<", "prabYcut", "\n", "\n", "\n", "##axis extend", "\n", "prabYcut", "=", "0.2", "#abnormal Rate", "\n", "yAxisExtendRand", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "xAxisExtendRand", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "yAxisExtend", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "10", ")", "/", "100", "\n", "xAxisExtend", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "10", ")", "/", "100", "\n", "if", "yAxisExtendRand", ">", "prabYcut", ":", "\n", "                ", "yAxisExtend", "=", "0", "\n", "", "if", "xAxisExtendRand", ">", "prabYcut", ":", "\n", "                ", "xAxisExtend", "=", "0", "\n", "\n", "####model", "\n", "", "if", "model", "==", "\"DE\"", ":", "\n", "                ", "y", ",", "derive", "=", "DE", "(", "xP", ",", "mod", "=", "'random'", ")", "\n", "", "if", "model", "==", "\"ADE\"", ":", "\n", "                ", "y", ",", "derive", "=", "ADE", "(", "xP", ",", "mod", "=", "'random'", ")", "\n", "", "if", "model", "==", "'random'", ":", "\n", "                ", "modelUsed", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ",", "size", "=", "1", ",", "p", "=", "[", "0.6", ",", "0.4", "]", ")", "\n", "# print(modelUsed)", "\n", "m", "=", "modelPool", "[", "modelUsed", "[", "0", "]", "]", "\n", "y", ",", "derive", "=", "m", "(", "xP", ",", "mod", "=", "'random'", ")", "\n", "model", "=", "modelL", "[", "modelUsed", "[", "0", "]", "]", "\n", "", "f", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ",", "1", ",", "figsize", "=", "(", "2.56", ",", "2.56", ")", ")", "\n", "\n", "xD", "=", "xP", "[", ":", "end", "]", "\n", "yD", "=", "y", "[", ":", "end", "]", "\n", "# derive1 = derive[:end]", "\n", "xD2", "=", "xP", "[", "end", ":", "]", "\n", "yD2", "=", "y", "[", "end", ":", "]", "\n", "# derive2 = derive[end:]", "\n", "var", "=", "varModel", "(", "derive", ",", "model", "=", "model", ",", "varProjectF", "=", "varProjectF", ")", "\n", "var1", "=", "var", "[", ":", "end", "]", "\n", "\n", "lengthN", "=", "np", ".", "random", ".", "randint", "(", "5", ",", "20", ")", "\n", "x2", ",", "noise", "=", "addNoise", "(", "xD", ",", "yD", ",", "var1", ",", "typeN", "=", "\"Gaussion\"", ",", "lengthN", "=", "lengthN", ")", "\n", "if", "sparse", ":", "\n", "                ", "x2", ",", "noise", "=", "makeSparse", "(", "x2", ",", "noise", ",", "sparseLevel", ",", "sparseRate", ")", "\n", "", "if", "yCUtDOwn", ":", "\n", "                ", "x2", ",", "noise", "=", "yCutDownF", "(", "x2", ",", "noise", ",", "yCutDownLevel", ")", "\n", "", "ax", ".", "plot", "(", "x2", ",", "noise", ",", "'.'", ",", "color", "=", "'black'", ")", "\n", "\n", "lengthN", "=", "np", ".", "random", ".", "randint", "(", "5", ",", "10", ")", "\n", "x2", ",", "noise", "=", "addNoise", "(", "xD", ",", "yD", ",", "var1", ",", "typeN", "=", "\"zero\"", ",", "lengthN", "=", "lengthN", ")", "\n", "ax", ".", "plot", "(", "x2", ",", "noise", ",", "'.'", ",", "color", "=", "'black'", ")", "\n", "\n", "stackN", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", ",", "2", ",", "3", "]", ",", "p", "=", "[", "0.2", ",", "0.5", ",", "0.2", ",", "0.1", "]", ")", "\n", "lengthN", "=", "np", ".", "random", ".", "randint", "(", "5", ",", "20", ")", "\n", "x2", ",", "noise", "=", "addNoise", "(", "xD", ",", "yD", ",", "var1", ",", "typeN", "=", "\"stacked\"", ",", "lengthN", "=", "lengthN", ",", "stackNum", "=", "stackN", ")", "\n", "if", "sparse", ":", "\n", "                ", "x2", ",", "noise", "=", "makeSparse", "(", "x2", ",", "noise", ",", "sparseLevel", ",", "sparseRate", "=", "0.95", ")", "\n", "", "if", "yCUtDOwn", ":", "\n", "                ", "x2", ",", "noise", "=", "yCutDownF", "(", "x2", ",", "noise", ",", "yCutDownLevel", ")", "\n", "", "ax", ".", "plot", "(", "x2", ",", "noise", ",", "'.'", ",", "color", "=", "'black'", ")", "\n", "\n", "lengthN", "=", "np", ".", "random", ".", "randint", "(", "5", ",", "50", ")", "\n", "x2", ",", "noise", "=", "addNoise", "(", "xD", ",", "yD", ",", "var1", ",", "typeN", "=", "\"random\"", ",", "lengthN", "=", "lengthN", ",", "xAxisExtend", "=", "xAxisExtend", ",", "yAxisExtend", "=", "yAxisExtend", ")", "\n", "ax", ".", "plot", "(", "x2", ",", "noise", ",", "'.'", ",", "color", "=", "'black'", ")", "\n", "\n", "\n", "\n", "if", "completionEnd", "<", "prabcompletionEnd", ":", "\n", "                ", "var2", "=", "var", "[", "end", ":", "]", "\n", "\n", "x2", ",", "noise", "=", "addNoise", "(", "xD2", ",", "yD2", ",", "var2", ",", "typeN", "=", "\"Gaussion\"", ",", "lengthN", "=", "1", ")", "\n", "if", "sparse", ":", "\n", "                    ", "x2", ",", "noise", "=", "makeSparse", "(", "x2", ",", "noise", ",", "sparseLevel", ",", "sparseRate", ")", "\n", "", "if", "yCUtDOwn", ":", "\n", "                    ", "x2", ",", "noise", "=", "yCutDownF", "(", "x2", ",", "noise", ",", "yCutDownLevel", ")", "\n", "", "ax", ".", "plot", "(", "x2", ",", "noise", ",", "'.'", ",", "color", "=", "'black'", ")", "\n", "\n", "x2", ",", "noise", "=", "addNoise", "(", "xD2", ",", "yD2", ",", "var2", ",", "typeN", "=", "\"zero\"", ",", "lengthN", "=", "2", ")", "\n", "ax", ".", "plot", "(", "x2", ",", "noise", ",", "'.'", ",", "color", "=", "'black'", ")", "\n", "# x2,noise=addNoise(xD2,yD2,var2,typeN=\"stacked\",lengthN=5)", "\n", "# ax.plot(x2,noise,'.',color='b')", "\n", "x2", ",", "noise", "=", "addNoise", "(", "xD2", ",", "yD2", ",", "var2", ",", "typeN", "=", "\"random\"", ",", "lengthN", "=", "5", ",", "xAxisExtend", "=", "xAxisExtend", ",", "yAxisExtend", "=", "yAxisExtend", ")", "\n", "ax", ".", "plot", "(", "x2", ",", "noise", ",", "'.'", ",", "color", "=", "'black'", ")", "\n", "\n", "\n", "", "ax", ".", "set_xticks", "(", "[", "]", ")", "\n", "ax", ".", "set_yticks", "(", "[", "]", ")", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_xlim", "(", "(", "0", ",", "1", "+", "xAxisExtend", ")", ")", "\n", "ax", ".", "set_ylim", "(", "(", "0", ",", "1", "+", "yAxisExtend", ")", ")", "\n", "if", "show", ":", "\n", "                ", "plt", ".", "show", "(", ")", "\n", "", "if", "save", ":", "\n", "                ", "f", ".", "savefig", "(", "name", "+", "'x.jpg'", ",", "dpi", "=", "100", ")", "\n", "# f.savefig('1.png', dpi=200, bbox_inches='tight')", "\n", "", "plt", ".", "close", "(", "f", ")", "\n", "\n", "\n", "#ground Truth", "\n", "f", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ",", "1", ",", "figsize", "=", "(", "2.56", ",", "2.56", ")", ")", "\n", "ax", ".", "set_xlim", "(", "(", "0", ",", "1", "+", "xAxisExtend", ")", ")", "\n", "ax", ".", "set_ylim", "(", "(", "0", ",", "1", "+", "yAxisExtend", ")", ")", "\n", "ax", ".", "plot", "(", "xP", ",", "y", ",", "color", "=", "'black'", ",", "linewidth", "=", "3", ")", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "if", "show", ":", "\n", "                ", "plt", ".", "show", "(", ")", "\n", "", "if", "save", ":", "\n", "                ", "f", ".", "savefig", "(", "name", "+", "'y.jpg'", ",", "dpi", "=", "100", ")", "\n", "# f.savefig('1.png', dpi=200, bbox_inches='tight')", "\n", "", "plt", ".", "close", "(", "f", ")", "\n", "Continue", "=", "False", "\n", "plt", ".", "close", "(", "'all'", ")", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.varProjectF0": [[6, 12], ["numpy.zeros_like"], "function", ["None"], ["def", "varProjectF0", "(", "x", ")", ":", "\n", "    ", "y", "=", "np", ".", "zeros_like", "(", "x", ")", "\n", "ind", "=", "x", "<", "0.7", "\n", "y", "[", "ind", "]", "=", "x", "[", "ind", "]", "\n", "y", "[", "~", "ind", "]", "=", "(", "1", "-", "(", "x", "[", "~", "ind", "]", "-", "1", ")", "**", "4", ")", "**", "0.55", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.DE": [[13, 22], ["numpy.exp", "numpy.random.uniform", "numpy.random.uniform", "numpy.exp", "numpy.exp", "numpy.exp", "numpy.exp"], "function", ["None"], ["", "def", "DE", "(", "x", ",", "t1", "=", "20", ",", "t2", "=", "-", "5", ",", "mod", "=", "'random'", ")", ":", "\n", "    ", "while", "True", ":", "\n", "        ", "if", "mod", "==", "'random'", ":", "\n", "            ", "t1", "=", "np", ".", "random", ".", "uniform", "(", "10", ",", "50", ",", "1", ")", "\n", "t2", "=", "np", ".", "random", ".", "uniform", "(", "-", "15", ",", "-", "8", ",", "1", ")", "\n", "", "y", "=", "np", ".", "exp", "(", "-", "t1", "*", "np", ".", "exp", "(", "t2", "*", "x", ")", ")", "\n", "if", "np", ".", "exp", "(", "-", "t1", "*", "np", ".", "exp", "(", "t2", "*", "0.75", ")", ")", ">", "0.95", ":", "\n", "            ", "derive", "=", "y", "*", "(", "-", "t1", ")", "*", "np", ".", "exp", "(", "t2", "*", "x", ")", "*", "t2", "\n", "return", "y", ",", "derive", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.ADE": [[25, 35], ["numpy.exp", "numpy.random.uniform", "numpy.random.uniform", "numpy.exp", "numpy.exp", "numpy.exp", "numpy.exp"], "function", ["None"], ["", "", "", "def", "ADE", "(", "x", ",", "a1", "=", "-", "10", ",", "a2", "=", "25", ",", "mod", "=", "'random'", ",", "a0", "=", "5", ",", "a3", "=", "15", ")", ":", "\n", "    ", "while", "True", ":", "\n", "        ", "if", "mod", "==", "'random'", ":", "\n", "            ", "a1", "=", "np", ".", "random", ".", "uniform", "(", "-", "20", ",", "20", ",", "1", ")", "\n", "a2", "=", "np", ".", "random", ".", "uniform", "(", "-", "15", ",", "10", ",", "1", ")", "\n", "\n", "", "y", "=", "np", ".", "exp", "(", "-", "np", ".", "exp", "(", "a0", "-", "a1", "*", "x", "-", "a2", "*", "x", "**", "2", "-", "a3", "*", "x", "**", "3", ")", ")", "\n", "if", "np", ".", "exp", "(", "-", "np", ".", "exp", "(", "a0", "-", "a1", "*", "0.7", "-", "a2", "*", "0.7", "**", "2", "-", "a3", "*", "0.7", "**", "3", ")", ")", ">", "0.95", ":", "\n", "            ", "derive", "=", "y", "*", "(", "a1", "+", "2", "*", "a2", "*", "x", "**", "1", "+", "3", "*", "a3", "*", "x", "**", "2", ")", "*", "np", ".", "exp", "(", "a0", "-", "a1", "*", "x", "-", "a2", "*", "x", "**", "2", "-", "a3", "*", "x", "**", "3", ")", "\n", "return", "y", ",", "derive", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.PLF4II": [[36, 39], ["None"], "function", ["None"], ["", "", "", "def", "PLF4II", "(", "x", ",", "a", ",", "b", ",", "r", ",", "d", ",", "mod", "=", "'random'", ")", ":", "\n", "   ", "y", "=", "a", "+", "(", "b", "-", "a", ")", "/", "(", "1", "+", "(", "x", "/", "r", ")", "**", "d", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.PLF5": [[40, 43], ["None"], "function", ["None"], ["", "def", "PLF5", "(", "x", ",", "a", ",", "b", ",", "r", ",", "d", ",", "t", ",", "mod", "=", "'random'", ")", ":", "\n", "   ", "y", "=", "a", "+", "(", "b", "-", "a", ")", "/", "(", "1", "+", "(", "x", "/", "r", ")", "**", "d", ")", "**", "t", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.varModel": [[48, 58], ["numpy.random.uniform", "numpy.random.uniform", "varProjectF", "varProjectF", "numpy.min", "numpy.max", "numpy.min", "numpy.min", "numpy.max", "numpy.min"], "function", ["None"], ["", "def", "varModel", "(", "derive", ",", "model", "=", "'DE'", ",", "varProjectF", "=", "None", ")", ":", "\n", "    ", "if", "varProjectF", "is", "None", ":", "\n", "        ", "varProjectF", "=", "varProjectF0", "\n", "", "if", "model", "==", "'ADE'", ":", "\n", "        ", "maxVar", "=", "np", ".", "random", ".", "uniform", "(", "0.1", ",", "0.3", ",", "1", ")", "\n", "std", "=", "varProjectF", "(", "(", "derive", "-", "np", ".", "min", "(", "derive", ")", ")", "/", "(", "np", ".", "max", "(", "derive", ")", "-", "np", ".", "min", "(", "derive", ")", ")", ")", "*", "maxVar", "+", "0.008", "\n", "return", "std", "\n", "", "maxVar", "=", "np", ".", "random", ".", "uniform", "(", "0.1", ",", "0.3", ",", "1", ")", "\n", "std", "=", "varProjectF", "(", "(", "derive", "-", "np", ".", "min", "(", "derive", ")", ")", "/", "(", "np", ".", "max", "(", "derive", ")", "-", "np", ".", "min", "(", "derive", ")", ")", ")", "*", "maxVar", "+", "0.007", "\n", "return", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.addNoise": [[59, 115], ["len", "std.reshape.reshape", "np.vstack.T.reshape", "numpy.tile", "len", "numpy.random.randint", "numpy.random.randint", "len", "numpy.abs", "numpy.tile", "np.vstack.T.reshape", "numpy.random.choice", "numpy.random.randint", "len", "numpy.random.uniform", "numpy.tile", "np.vstack.T.reshape", "range", "np.vstack.flatten", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "y.reshape", "numpy.random.randn", "int", "int", "len", "int", "numpy.random.choice", "numpy.random.randint", "len", "numpy.tile", "numpy.random.uniform", "noise2.T.reshape.T.reshape", "numpy.vstack().flatten", "numpy.vstack", "numpy.where", "numpy.where", "numpy.random.randn", "numpy.where", "numpy.ones", "numpy.random.randn", "len", "int", "numpy.where", "numpy.where", "numpy.where", "numpy.ones", "numpy.random.randn", "numpy.vstack", "np.vstack().flatten.reshape", "np.tile.reshape"], "function", ["None"], ["", "def", "addNoise", "(", "x", ",", "y", ",", "std", ",", "lengthN", "=", "10", ",", "typeN", "=", "\"Gaussion\"", ",", "stackNum", "=", "1", ",", "xAxisExtend", "=", "0", ",", "yAxisExtend", "=", "0", ")", ":", "\n", "    ", "if", "typeN", "==", "\"Gaussion\"", ":", "\n", "        ", "num1", "=", "len", "(", "x", ")", "\n", "std", "=", "std", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "noise", "=", "np", ".", "zeros", "(", "[", "num1", ",", "lengthN", "]", ")", "+", "y", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "randomG", "=", "np", ".", "random", ".", "randn", "(", "num1", ",", "lengthN", ")", "*", "std", "\n", "noise", "+=", "randomG", "\n", "noise", "=", "noise", ".", "T", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "noise", "[", "np", ".", "where", "(", "noise", ">", "1", ")", "]", "=", "1", "\n", "noise", "[", "np", ".", "where", "(", "noise", "<", "0", ")", "]", "=", "0", "\n", "x2", "=", "np", ".", "tile", "(", "x", ",", "lengthN", ")", "\n", "return", "x2", ",", "noise", "\n", "", "if", "typeN", "==", "\"zero\"", ":", "\n", "        ", "num1", "=", "len", "(", "x", ")", "\n", "start", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "int", "(", "num1", "/", "2", ")", ")", "\n", "end", "=", "np", ".", "random", ".", "randint", "(", "start", ",", "int", "(", "num1", "*", "0.9", ")", ")", "\n", "# print(start,end)", "\n", "num1", "=", "len", "(", "x", "[", "start", ":", "end", "]", ")", "\n", "noise", "=", "np", ".", "abs", "(", "np", ".", "random", ".", "randn", "(", "num1", ",", "lengthN", ")", "*", "0.005", ")", "\n", "x2", "=", "np", ".", "tile", "(", "x", "[", "start", ":", "end", "]", ",", "lengthN", ")", "\n", "noise", "=", "noise", ".", "T", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "return", "x2", ",", "noise", "\n", "", "if", "typeN", "==", "\"stacked\"", ":", "\n", "\n", "        ", "ind", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "where", "(", "(", "y", ">", "0.1", ")", "&", "(", "y", "<", "0.7", ")", ")", "[", "0", "]", ")", "\n", "lengthN", "=", "len", "(", "x", ")", "-", "ind", "\n", "end", "=", "np", ".", "random", ".", "randint", "(", "int", "(", "1", "/", "3", "*", "lengthN", ")", ",", "lengthN", ")", "\n", "xind", "=", "x", "[", "ind", ":", "ind", "+", "end", "]", "\n", "num1", "=", "len", "(", "xind", ")", "\n", "var", "=", "np", ".", "random", ".", "uniform", "(", "0.001", ",", "0.005", ",", "(", "num1", ",", "1", ")", ")", "\n", "x2", "=", "np", ".", "tile", "(", "xind", ",", "lengthN", ")", "\n", "noise", "=", "np", ".", "ones", "(", "[", "num1", ",", "lengthN", "]", ")", "*", "y", "[", "ind", "]", "+", "np", ".", "random", ".", "randn", "(", "num1", ",", "lengthN", ")", "*", "var", "\n", "# stackNum=2", "\n", "noise", "=", "noise", ".", "T", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "for", "i", "in", "range", "(", "stackNum", "-", "1", ")", ":", "\n", "\n", "            ", "ind", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "where", "(", "(", "y", ">", "0.1", ")", "&", "(", "y", "<", "0.9", ")", ")", "[", "0", "]", ")", "\n", "lengthN", "=", "len", "(", "x", ")", "-", "ind", "\n", "end", "=", "np", ".", "random", ".", "randint", "(", "int", "(", "1", "/", "3", "*", "lengthN", ")", ",", "lengthN", ")", "\n", "xind", "=", "x", "[", "ind", ":", "ind", "+", "end", "]", "\n", "num1", "=", "len", "(", "xind", ")", "\n", "x3", "=", "np", ".", "tile", "(", "xind", ",", "lengthN", ")", "\n", "var", "=", "np", ".", "random", ".", "uniform", "(", "0.002", ",", "0.005", ",", "(", "num1", ",", "1", ")", ")", "\n", "noise2", "=", "np", ".", "ones", "(", "[", "num1", ",", "lengthN", "]", ")", "*", "y", "[", "ind", "]", "+", "np", ".", "random", ".", "randn", "(", "num1", ",", "lengthN", ")", "*", "var", "\n", "noise2", "=", "noise2", ".", "T", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "x2", "=", "np", ".", "vstack", "(", "(", "x2", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", ",", "x3", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", ")", ")", ".", "flatten", "(", ")", "\n", "noise", "=", "np", ".", "vstack", "(", "(", "noise", ",", "noise2", ")", ")", "\n", "", "noise", "=", "noise", ".", "flatten", "(", ")", "\n", "noise", "[", "np", ".", "where", "(", "noise", ">", "1", ")", "]", "=", "1", "\n", "noise", "[", "np", ".", "where", "(", "noise", "<", "0", ")", "]", "=", "0", "\n", "return", "x2", ",", "noise", "\n", "", "if", "typeN", "==", "\"random\"", ":", "\n", "# lengthN=np.random.randint(20,50)", "\n", "        ", "x2", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", "+", "xAxisExtend", ",", "(", "lengthN", ",", ")", ")", "\n", "noise", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", "+", "yAxisExtend", ",", "(", "lengthN", ",", ")", ")", "\n", "return", "x2", ",", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.SCADADataSynthesis.utlize.addNoise2": [[116, 172], ["len", "std.reshape.reshape", "np.vstack.T.reshape", "numpy.tile", "len", "numpy.random.randint", "numpy.random.randint", "len", "numpy.abs", "numpy.tile", "np.vstack.T.reshape", "numpy.random.choice", "numpy.random.randint", "len", "numpy.random.uniform", "numpy.tile", "np.vstack.T.reshape", "range", "np.vstack.flatten", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "y.reshape", "numpy.random.randn", "int", "int", "len", "int", "numpy.random.choice", "numpy.random.randint", "len", "numpy.tile", "numpy.random.uniform", "noise2.T.reshape.T.reshape", "numpy.vstack().flatten", "numpy.vstack", "numpy.where", "numpy.where", "numpy.random.randn", "numpy.where", "numpy.ones", "numpy.random.randn", "len", "int", "numpy.where", "numpy.where", "numpy.where", "numpy.ones", "numpy.random.randn", "numpy.vstack", "np.vstack().flatten.reshape", "np.tile.reshape"], "function", ["None"], ["", "", "def", "addNoise2", "(", "x", ",", "y", ",", "std", ",", "lengthN", "=", "10", ",", "typeN", "=", "\"Gaussion\"", ",", "stackNum", "=", "1", ",", "xAxisExtend", "=", "0", ",", "yAxisExtend", "=", "0", ")", ":", "\n", "    ", "if", "typeN", "==", "\"Gaussion\"", ":", "\n", "        ", "num1", "=", "len", "(", "x", ")", "\n", "std", "=", "std", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "noise", "=", "np", ".", "zeros", "(", "[", "num1", ",", "lengthN", "]", ")", "+", "y", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "randomG", "=", "np", ".", "random", ".", "randn", "(", "num1", ",", "lengthN", ")", "*", "std", "\n", "noise", "+=", "randomG", "\n", "noise", "=", "noise", ".", "T", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "noise", "[", "np", ".", "where", "(", "noise", ">", "(", "1", "+", "yAxisExtend", ")", ")", "]", "=", "1", "+", "yAxisExtend", "\n", "noise", "[", "np", ".", "where", "(", "noise", "<", "0", ")", "]", "=", "0", "\n", "x2", "=", "np", ".", "tile", "(", "x", ",", "lengthN", ")", "\n", "return", "x2", ",", "noise", "\n", "", "if", "typeN", "==", "\"zero\"", ":", "\n", "        ", "num1", "=", "len", "(", "x", ")", "\n", "start", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "int", "(", "num1", "/", "2", ")", ")", "\n", "end", "=", "np", ".", "random", ".", "randint", "(", "start", ",", "int", "(", "num1", "*", "0.9", ")", ")", "\n", "# print(start,end)", "\n", "num1", "=", "len", "(", "x", "[", "start", ":", "end", "]", ")", "\n", "noise", "=", "np", ".", "abs", "(", "np", ".", "random", ".", "randn", "(", "num1", ",", "lengthN", ")", "*", "0.005", ")", "\n", "x2", "=", "np", ".", "tile", "(", "x", "[", "start", ":", "end", "]", ",", "lengthN", ")", "\n", "noise", "=", "noise", ".", "T", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "return", "x2", ",", "noise", "\n", "", "if", "typeN", "==", "\"stacked\"", ":", "\n", "\n", "        ", "ind", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "where", "(", "(", "y", ">", "0.1", ")", "&", "(", "y", "<", "0.7", ")", ")", "[", "0", "]", ")", "\n", "lengthN", "=", "len", "(", "x", ")", "-", "ind", "\n", "end", "=", "np", ".", "random", ".", "randint", "(", "int", "(", "1", "/", "3", "*", "lengthN", ")", ",", "lengthN", ")", "\n", "xind", "=", "x", "[", "ind", ":", "ind", "+", "end", "]", "\n", "num1", "=", "len", "(", "xind", ")", "\n", "var", "=", "np", ".", "random", ".", "uniform", "(", "0.001", ",", "0.005", ",", "(", "num1", ",", "1", ")", ")", "\n", "x2", "=", "np", ".", "tile", "(", "xind", ",", "lengthN", ")", "\n", "noise", "=", "np", ".", "ones", "(", "[", "num1", ",", "lengthN", "]", ")", "*", "y", "[", "ind", "]", "+", "np", ".", "random", ".", "randn", "(", "num1", ",", "lengthN", ")", "*", "var", "\n", "# stackNum=2", "\n", "noise", "=", "noise", ".", "T", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "for", "i", "in", "range", "(", "stackNum", "-", "1", ")", ":", "\n", "\n", "            ", "ind", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "where", "(", "(", "y", ">", "0.1", ")", "&", "(", "y", "<", "0.9", ")", ")", "[", "0", "]", ")", "\n", "lengthN", "=", "len", "(", "x", ")", "-", "ind", "\n", "end", "=", "np", ".", "random", ".", "randint", "(", "int", "(", "1", "/", "3", "*", "lengthN", ")", ",", "lengthN", ")", "\n", "xind", "=", "x", "[", "ind", ":", "ind", "+", "end", "]", "\n", "num1", "=", "len", "(", "xind", ")", "\n", "x3", "=", "np", ".", "tile", "(", "xind", ",", "lengthN", ")", "\n", "var", "=", "np", ".", "random", ".", "uniform", "(", "0.002", ",", "0.005", ",", "(", "num1", ",", "1", ")", ")", "\n", "noise2", "=", "np", ".", "ones", "(", "[", "num1", ",", "lengthN", "]", ")", "*", "y", "[", "ind", "]", "+", "np", ".", "random", ".", "randn", "(", "num1", ",", "lengthN", ")", "*", "var", "\n", "noise2", "=", "noise2", ".", "T", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "x2", "=", "np", ".", "vstack", "(", "(", "x2", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", ",", "x3", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", ")", ")", ".", "flatten", "(", ")", "\n", "noise", "=", "np", ".", "vstack", "(", "(", "noise", ",", "noise2", ")", ")", "\n", "", "noise", "=", "noise", ".", "flatten", "(", ")", "\n", "noise", "[", "np", ".", "where", "(", "noise", ">", "(", "1", "+", "yAxisExtend", ")", ")", "]", "=", "1", "+", "yAxisExtend", "\n", "noise", "[", "np", ".", "where", "(", "noise", "<", "0", ")", "]", "=", "0", "\n", "return", "x2", ",", "noise", "\n", "", "if", "typeN", "==", "\"random\"", ":", "\n", "# lengthN=np.random.randint(20,50)", "\n", "        ", "x2", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", "+", "xAxisExtend", ",", "(", "lengthN", ",", ")", ")", "\n", "noise", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", "+", "yAxisExtend", ",", "(", "lengthN", ",", ")", ")", "\n", "return", "x2", ",", "noise", "\n", "", "", "if", "__name__", "==", "'__main__'", ":", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.testPic.addData": [[13, 25], ["len", "int", "numpy.zeros", "range", "numpy.where", "numpy.where", "numpy.random.randn", "numpy.random.randn"], "function", ["None"], ["def", "addData", "(", "data", ",", "ind", ",", "thres", ",", "var", "=", "0.01", ")", ":", "\n", "    ", "lenD", "=", "len", "(", "ind", ")", "\n", "bs", "=", "int", "(", "thres", "/", "lenD", ")", "\n", "res", "=", "np", ".", "zeros", "(", "[", "bs", "*", "lenD", ",", "2", "]", ")", "\n", "x", "=", "data", "[", "ind", ",", "0", "]", "\n", "y", "=", "data", "[", "ind", ",", "1", "]", "\n", "for", "i", "in", "range", "(", "bs", ")", ":", "\n", "        ", "res", "[", "lenD", "*", "i", ":", "lenD", "*", "(", "i", "+", "1", ")", ",", "0", "]", "=", "x", "+", "np", ".", "random", ".", "randn", "(", "lenD", ")", "*", "var", "\n", "res", "[", "lenD", "*", "i", ":", "lenD", "*", "(", "i", "+", "1", ")", ",", "1", "]", "=", "y", "+", "np", ".", "random", ".", "randn", "(", "lenD", ")", "*", "var", "\n", "", "res", "[", "np", ".", "where", "(", "res", ">", "1", ")", "]", "=", "1", "\n", "res", "[", "np", ".", "where", "(", "res", "<", "0", ")", "]", "=", "0", "\n", "return", "res", "\n", "", "def", "checkAndEnhancYregion", "(", "data", ",", "deviation", "=", "10", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.testPic.checkAndEnhancYregion": [[25, 44], ["len", "range", "numpy.where", "len", "len", "numpy.vstack", "testPic.addData"], "function", ["home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.testPic.addData"], ["", "def", "checkAndEnhancYregion", "(", "data", ",", "deviation", "=", "10", ")", ":", "\n", "    ", "y", "=", "data", "[", ":", ",", "1", "]", "\n", "lenD", "=", "len", "(", "y", ")", "\n", "thres", "=", "0.05", "*", "10000", "*", "10", "/", "deviation", "\n", "for", "i", "in", "range", "(", "deviation", ")", ":", "\n", "\n", "        ", "start", "=", "1", "/", "deviation", "*", "i", "\n", "end", "=", "1", "/", "deviation", "*", "(", "i", "+", "1", ")", "\n", "# p=np.sum((y> start) * (y<end))/lenD", "\n", "# print(p)", "\n", "ind", "=", "np", ".", "where", "(", "(", "(", "y", ">", "start", ")", "*", "(", "y", "<", "end", ")", ")", "==", "1", ")", "[", "0", "]", "\n", "if", "len", "(", "ind", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "#", "\n", "# print(len(ind)/lenD)", "\n", "", "if", "len", "(", "ind", ")", "<", "thres", ":", "\n", "# print(len(ind))", "\n", "            ", "data", "=", "np", ".", "vstack", "(", "(", "data", ",", "addData", "(", "data", ",", "ind", ",", "thres", ")", ")", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.testPic.plotPict": [[45, 70], ["numpy.sqrt", "matplotlib.subplots", "ax.plot", "ax.set_xlim", "ax.set_ylim", "ax.set_xticks", "ax.set_yticks", "ax.axis", "f.savefig", "matplotlib.close", "PIL.Image.open().convert", "torchvision.transforms.Compose", "transforms.Compose.view", "PIL.Image.open", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "transforms.Compose."], "function", ["None"], ["", "def", "plotPict", "(", "data", ",", "name", ",", "nP", "=", "200", ")", ":", "\n", "    ", "ms", "=", "np", ".", "sqrt", "(", "nP", "*", "36", "/", "data", ".", "shape", "[", "0", "]", ")", "#200 is good", "\n", "f", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ",", "1", ",", "figsize", "=", "(", "2.56", ",", "2.56", ")", ")", "\n", "\n", "ax", ".", "plot", "(", "data", "[", ":", ",", "0", "]", ",", "data", "[", ":", ",", "1", "]", ",", "'.'", ",", "color", "=", "'black'", ",", "markersize", "=", "ms", ")", "\n", "ax", ".", "set_xlim", "(", "(", "0", ",", "1", ")", ")", "\n", "ax", ".", "set_ylim", "(", "(", "0", ",", "1", ")", ")", "\n", "ax", ".", "set_xticks", "(", "[", "]", ")", "\n", "ax", ".", "set_yticks", "(", "[", "]", ")", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "savePath", "=", "r\"savePict\"", "\n", "name1", "=", "savePath", "+", "r'\\\\'", "+", "name", "\n", "f", ".", "savefig", "(", "name1", "+", "'.jpg'", ",", "dpi", "=", "100", ")", "\n", "plt", ".", "close", "(", "f", ")", "\n", "img_nameX", "=", "r\"%s\\%s.jpg\"", "%", "(", "savePath", ",", "name", ")", "\n", "imageX", "=", "Image", ".", "open", "(", "img_nameX", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "transf", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.5", ",", "0.5", ",", "0.5", ")", ",", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", "\n", "]", ")", "\n", "\n", "imageX", "=", "transf", "(", "imageX", ")", ".", "view", "(", "1", ",", "3", ",", "256", ",", "256", ")", "\n", "return", "imageX", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.testPic.dataToImageBench": [[74, 97], ["torch.zeros", "thresRes.items", "torch.cat", "numpy.percentile", "testPic.checkAndEnhancYregion", "testPic.plotPict"], "function", ["home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.testPic.checkAndEnhancYregion", "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.testPic.plotPict"], ["", "def", "dataToImageBench", "(", "data", ",", "thresRes", ",", "enhance", "=", "False", ",", "dev", "=", "10", ",", "cutdownX", "=", "False", ",", "xPer", "=", "0.9", ",", "nP", "=", "200", ")", ":", "\n", "    ", "'''\n\n    :param data: dict k,v\n    :return: data1(bs,c,256,256) data2(bs,c,256,256) data3(bs,c,256,256) torch tensor\n    '''", "\n", "data1Torch", "=", "torch", ".", "zeros", "(", "1", ",", "3", ",", "256", ",", "256", ")", "\n", "\n", "\n", "for", "(", "k", ",", "v", ")", "in", "thresRes", ".", "items", "(", ")", ":", "\n", "\n", "        ", "data1", "=", "data", "[", "k", "]", "\n", "if", "cutdownX", ":", "\n", "            ", "num", "=", "np", ".", "percentile", "(", "data1", "[", ":", ",", "0", "]", ",", "xPer", ")", "\n", "ind", "=", "data1", "[", ":", ",", "0", "]", "<", "num", "\n", "data1", "=", "data1", "[", "ind", ",", ":", "]", "\n", "", "if", "enhance", ":", "\n", "            ", "data1", "=", "checkAndEnhancYregion", "(", "data1", ",", "dev", ")", "\n", "\n", "", "data1Torch", "=", "torch", ".", "cat", "(", "(", "data1Torch", ",", "plotPict", "(", "data", "=", "data1", ",", "name", "=", "k", ",", "nP", "=", "nP", ")", ")", ",", "dim", "=", "0", ")", "\n", "\n", "\n", "", "return", "data1Torch", "[", "1", ":", ",", ":", ",", ":", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.testPic.benchTest": [[99, 140], ["torchvision.transforms.Compose", "torch.device", "data.float().to.float().to", "train.model.UNet", "train.model.UNet.to", "train.model.UNet.eval", "torch.load", "train.model.UNet.load_state_dict", "range", "int", "train.model.UNet.", "ypred.detach().cpu().squeeze.detach().cpu().squeeze", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torch.cuda.is_available", "data.float().to.float", "int", "train.model.transform_invert().reshape", "numpy.concatenate", "ypred.detach().cpu().squeeze.detach().cpu", "train.model.transform_invert", "train.model.transform_invert().reshape", "ypred.detach().cpu().squeeze.detach", "train.model.transform_invert"], "function", ["home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.transform_invert", "home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.transform_invert"], ["", "def", "benchTest", "(", "data", ",", "epoch", "=", "1", ",", "bs", "=", "16", ",", "name", "=", "'DEAndADE'", ",", "setLen", "=", "4000", ",", "saveMiddle", "=", "False", ")", ":", "\n", "    ", "'''\n\n    :param data: bs c 256 256\n    :param plot:\n    :param epoch:\n    :param ms:\n    :return: yR bs,256,256\n    '''", "\n", "\n", "transf", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.5", ",", "0.5", ",", "0.5", ")", ",", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", "\n", "]", ")", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "data", "=", "data", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "outf", "=", "r\"..\\model\"", "\n", "unet", "=", "UNet", "(", "in_channels", "=", "3", ",", "out_channels", "=", "3", ")", "\n", "unet", ".", "to", "(", "device", ")", "\n", "unet", ".", "eval", "(", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "'%s/UnetS%d%sepoch%d.pth'", "%", "(", "outf", ",", "setLen", ",", "name", ",", "epoch", ")", ")", "\n", "unet", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "if", "data", ".", "shape", "[", "0", "]", "%", "bs", "==", "0", ":", "\n", "        ", "iter", "=", "int", "(", "data", ".", "shape", "[", "0", "]", "/", "bs", ")", "\n", "", "else", ":", "\n", "        ", "iter", "=", "int", "(", "data", ".", "shape", "[", "0", "]", "/", "bs", ")", "+", "1", "\n", "\n", "", "for", "i", "in", "range", "(", "iter", ")", ":", "\n", "        ", "ypred", "=", "unet", "(", "data", "[", "i", "*", "bs", ":", "(", "i", "+", "1", ")", "*", "bs", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "\n", "ly", "=", "ypred", ".", "shape", "[", "0", "]", "\n", "ypred", "=", "ypred", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", "\n", "\n", "\n", "if", "i", "==", "0", ":", "\n", "            ", "yR", "=", "transform_invert", "(", "ypred", ",", "transf", ")", ".", "reshape", "(", "(", "ly", ",", "256", ",", "256", ")", ")", "\n", "", "else", ":", "\n", "            ", "yR", "=", "np", ".", "concatenate", "(", "(", "yR", ",", "transform_invert", "(", "ypred", ",", "transf", ")", ".", "reshape", "(", "(", "ly", ",", "256", ",", "256", ")", ")", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "", "return", "yR", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.testPic.benchImageTest": [[143, 152], ["range", "Pixel_mapping_correction.imageToLine", "func.append"], "function", ["home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.imageToLine"], ["def", "benchImageTest", "(", "yr", ",", "p", "=", "15", ",", "domainCorrlation", "=", "True", ")", ":", "\n", "    ", "bs", "=", "yr", ".", "shape", "[", "0", "]", "\n", "\n", "func", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bs", ")", ":", "\n", "\n", "        ", "xi", ",", "yi", ",", "f1", "=", "imageToLine", "(", "yr", "[", "i", ",", ":", ",", ":", "]", ",", "p", "=", "p", ",", "domainCorrlation", "=", "domainCorrlation", ")", "\n", "func", ".", "append", "(", "f1", ")", "\n", "", "return", "func", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.testPic.pipLineTestUnet": [[158, 185], ["testPic.dataToImageBench", "testPic.benchTest", "testPic.benchImageTest", "data.items", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.testPic.dataToImageBench", "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.testPic.benchTest", "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.testPic.benchImageTest"], ["", "def", "pipLineTestUnet", "(", "data", ",", "thresRes", "=", "None", ",", "epoch", "=", "3", ",", "name", "=", "'DEAndADE'", ",", "setLen", "=", "4000", ",", "bs", "=", "16", ",", "enhance", "=", "True", ",", "dev", "=", "10", ",", "saveMiddle", "=", "False", ",", "cutdownX", "=", "False", ",", "xPer", "=", "0.9", ",", "p", "=", "12", ",", "domainCorrlation", "=", "True", ",", "nP", "=", "200", ")", ":", "\n", "    ", "'''\n\n    :param data: input scada data format: type dict {K,v} k name, v the [bs,(ws,wp)] data\n    :param thresRes: the cut points of picture the data where x> thresx y<thresy will be eliminated, dict type dict {K,v} k name, v the [number of cut,2]\n    :param epoch:which epoch of model default is 3\n    :param ms:marker size of plot\n    :param name:model name\n    :param setLen: training set length\n    :param bs: testing bs depends on GPU memory\n    :param enhance:if the data is sparse in some space, we will enhance these space\n    :param dev: nue number of devision of enhance\n    :param testOnly:if test only the data will not be divided\n    :param dataType:speed up for model testing\n    :param saveMiddle: middle tensor including xy,x\n    :return:\n    '''", "\n", "if", "thresRes", "is", "None", ":", "\n", "        ", "thresRes", "=", "{", "}", "\n", "for", "k", ",", "_", "in", "data", ".", "items", "(", ")", ":", "\n", "            ", "thresRes", "[", "k", "]", "=", "np", ".", "zeros", "(", "[", "2", ",", "2", "]", ")", "\n", "\n", "", "", "data1Torch", "=", "dataToImageBench", "(", "data", ",", "thresRes", ",", "enhance", "=", "enhance", ",", "\n", "dev", "=", "dev", ",", "cutdownX", "=", "cutdownX", ",", "xPer", "=", "xPer", ",", "nP", "=", "nP", ")", "\n", "yR", "=", "benchTest", "(", "data1Torch", ",", "epoch", "=", "epoch", ",", "bs", "=", "bs", ",", "name", "=", "name", ",", "setLen", "=", "setLen", ",", "saveMiddle", "=", "saveMiddle", ")", "\n", "f1", "=", "benchImageTest", "(", "yR", ",", "p", "=", "p", ",", "domainCorrlation", "=", "domainCorrlation", ")", "\n", "return", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.polyFunction.__init__": [[8, 12], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "f", ")", ":", "\n", "        ", "self", ".", "f", "=", "f", "\n", "self", ".", "order", "=", "f", ".", "o", "\n", "self", ".", "coefficients", "=", "f", ".", "coefficients", "\n", "", "def", "df", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.polyFunction.df": [[12, 17], ["range"], "methods", ["None"], ["", "def", "df", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "order", ")", ":", "\n", "            ", "res", "+=", "x", "**", "(", "self", ".", "order", "-", "i", "-", "1", ")", "*", "self", ".", "coefficients", "[", "i", "]", "*", "(", "self", ".", "order", "-", "i", ")", "\n", "", "return", "res", "\n", "", "def", "ddf", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.polyFunction.ddf": [[17, 22], ["range"], "methods", ["None"], ["", "def", "ddf", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "order", "-", "1", ")", ":", "\n", "            ", "res", "+=", "x", "**", "(", "self", ".", "order", "-", "i", "-", "2", ")", "*", "self", ".", "coefficients", "[", "i", "]", "*", "(", "self", ".", "order", "-", "i", "-", "1", ")", "*", "(", "self", ".", "order", "-", "i", ")", "\n", "", "return", "res", "\n", "", "def", "dddf", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.polyFunction.dddf": [[22, 27], ["range"], "methods", ["None"], ["", "def", "dddf", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "order", "-", "2", ")", ":", "\n", "            ", "res", "+=", "x", "**", "(", "self", ".", "order", "-", "i", "-", "3", ")", "*", "self", ".", "coefficients", "[", "i", "]", "*", "(", "self", ".", "order", "-", "i", "-", "2", ")", "*", "(", "self", ".", "order", "-", "i", "-", "1", ")", "*", "(", "self", ".", "order", "-", "i", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.finalFunc.__init__": [[96, 102], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "f", ",", "x1", ",", "b1", ",", "x2", ",", "b2", ")", ":", "\n", "        ", "self", ".", "f", "=", "f", "\n", "self", ".", "x1", "=", "x1", "\n", "self", ".", "b1", "=", "b1", "\n", "self", ".", "x2", "=", "x2", "\n", "self", ".", "b2", "=", "b2", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.finalFunc.forward": [[102, 109], ["Pixel_mapping_correction.finalFunc.f", "Pixel_mapping_correction.finalFunc.f"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "x", "<", "self", ".", "x1", ":", "\n", "            ", "return", "self", ".", "b1", "\n", "", "elif", "x", "<", "self", ".", "x2", ":", "\n", "            ", "return", "self", ".", "f", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "f", "(", "x", ")", "\n", "", "", "def", "forwardVector", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.finalFunc.forwardVector": [[109, 121], ["Pixel_mapping_correction.finalFunc.f", "numpy.where", "numpy.where", "Pixel_mapping_correction.finalFunc.flatten", "type", "Pixel_mapping_correction.finalFunc.forward"], "methods", ["home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.UNet.forward"], ["", "", "def", "forwardVector", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "type", "(", "x", ")", "is", "not", "np", ".", "ndarray", ":", "\n", "            ", "return", "self", ".", "forward", "(", "x", ")", "\n", "", "yy", "=", "self", ".", "f", "(", "x", ")", "\n", "ind", "=", "np", ".", "where", "(", "x", "<", "self", ".", "x1", ")", "\n", "\n", "yy", "[", "ind", "]", "*=", "0", "\n", "yy", "[", "ind", "]", "+=", "self", ".", "b1", "\n", "ind", "=", "np", ".", "where", "(", "x", ">", "self", ".", "x2", ")", "\n", "yy", "[", "ind", "]", "*=", "0", "\n", "yy", "[", "ind", "]", "+=", "self", ".", "b2", "\n", "return", "yy", ".", "flatten", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.paramFunc": [[28, 93], ["Pixel_mapping_correction.polyFunction", "f", "f", "Pixel_mapping_correction.findZeropoints", "scipy.optimize.newton", "scipy.optimize.newton", "scipy.optimize.newton", "Pixel_mapping_correction.findZeropoints", "f", "Pixel_mapping_correction.findZeropoints", "Pixel_mapping_correction.findZeropoints"], "function", ["home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.findZeropoints", "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.findZeropoints", "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.findZeropoints", "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.findZeropoints"], ["", "", "def", "paramFunc", "(", "f", ",", "r1", "=", "0.19", ")", ":", "\n", "    ", "rd", "=", "r1", "\n", "fx", "=", "polyFunction", "(", "f", ")", "\n", "pass1", "=", "False", "\n", "\n", "f_x", "=", "True", "\n", "count", "=", "0", "\n", "firstcome", "=", "True", "\n", "while", "not", "pass1", ":", "\n", "        ", "count", "+=", "1", "\n", "try", ":", "\n", "# print(1)", "\n", "            ", "if", "count", ">", "20", ":", "\n", "                ", "if", "firstcome", ":", "\n", "                    ", "r1", "=", "0.19", "\n", "firstcome", "=", "False", "\n", "", "x1", "=", "optimize", ".", "newton", "(", "fx", ".", "df", ",", "r1", ",", "fprime2", "=", "fx", ".", "dddf", ")", "\n", "", "else", ":", "\n", "\n", "                ", "x1", "=", "optimize", ".", "newton", "(", "fx", ".", "df", ",", "r1", ",", "fprime", "=", "fx", ".", "ddf", ",", "fprime2", "=", "fx", ".", "dddf", ")", "\n", "\n", "", "pass1", "=", "True", "\n", "if", "f_x", ":", "\n", "                ", "if", "x1", ">", "r1", "or", "f", "(", "x1", ")", ">", "0.01", ":", "\n", "                    ", "r1", "-=", "0.005", "\n", "pass1", "=", "False", "\n", "if", "r1", "<", "0.08", ":", "\n", "                        ", "f_x", "=", "False", "\n", "r1", "=", "0.19", "\n", "", "", "", "else", ":", "\n", "\n", "                ", "if", "x1", ">", "r1", ":", "\n", "                    ", "r1", "-=", "0.005", "\n", "pass1", "=", "False", "\n", "", "", "", "except", ":", "\n", "            ", "r1", "-=", "0.005", "\n", "\n", "", "", "b1", "=", "f", "(", "x1", ")", "\n", "\n", "\n", "pass1", "=", "False", "\n", "try", ":", "\n", "        ", "r2", "=", "findZeropoints", "(", "f", ",", "0.95", ")", "#0.95 too big?", "\n", "", "except", ":", "\n", "        ", "try", ":", "\n", "            ", "r2", "=", "findZeropoints", "(", "f", ",", "0.85", ")", "\n", "", "except", ":", "\n", "            ", "try", ":", "\n", "                ", "r2", "=", "findZeropoints", "(", "f", ",", "0.75", ")", "\n", "", "except", ":", "\n", "                ", "try", ":", "\n", "                    ", "r2", "=", "findZeropoints", "(", "f", ",", "0.65", ")", "\n", "", "except", ":", "\n", "                    ", "r2", "=", "0.45", "\n", "", "", "", "", "while", "not", "pass1", ":", "\n", "        ", "try", ":", "\n", "            ", "x2", "=", "optimize", ".", "newton", "(", "fx", ".", "df", ",", "r2", ",", "fprime2", "=", "fx", ".", "dddf", ")", "\n", "pass1", "=", "True", "\n", "if", "x2", "<", "r2", ":", "\n", "                ", "r2", "+=", "0.005", "\n", "pass1", "=", "False", "\n", "", "", "except", ":", "\n", "            ", "r2", "+=", "0.005", "\n", "", "", "b2", "=", "f", "(", "x2", ")", "\n", "return", "x1", ",", "b1", ",", "x2", ",", "b2", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.findZeropoints": [[124, 128], ["scipy.optimize.bisect", "Pixel_mapping_correction.finalFunc.forwardVector"], "function", ["home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.finalFunc.forwardVector"], ["", "", "def", "findZeropoints", "(", "f", ",", "b", ",", "c", "=", "0.8", ")", ":", "\n", "    ", "def", "pickUpFunc", "(", "x", ")", ":", "\n", "        ", "return", "f", "(", "x", ")", "-", "b", "\n", "", "return", "optimize", ".", "bisect", "(", "pickUpFunc", ",", "0", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.plotWPCGrey": [[129, 155], ["matplotlib.subplots", "ax.set_xlim", "ax.set_ylim", "ax.set_xticks", "ax.set_yticks", "ax.axis", "matplotlib.show", "numpy.arange", "input", "ax.plot", "f.savefig", "ax.plot", "ax.plot"], "function", ["None"], ["", "def", "plotWPCGrey", "(", "input", ",", "savename", "=", "None", ",", "typeWPC", "=", "'function'", ")", ":", "\n", "\n", "\n", "    ", "f", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ",", "1", ",", "figsize", "=", "(", "2.56", ",", "2.56", ")", ")", "\n", "if", "typeWPC", "==", "'function'", ":", "\n", "        ", "x", "=", "np", ".", "arange", "(", "0", ",", "1", ",", "1", "/", "1000", ")", "\n", "y", "=", "input", "(", "x", ")", "\n", "ax", ".", "plot", "(", "x", ",", "y", ",", "color", "=", "'black'", ")", "\n", "", "elif", "typeWPC", "==", "'curve'", ":", "\n", "        ", "x", "=", "input", "[", "0", "]", "\n", "y", "=", "input", "[", "1", "]", "\n", "ax", ".", "plot", "(", "x", ",", "y", ",", "color", "=", "'black'", ")", "\n", "", "else", ":", "\n", "        ", "x", "=", "input", "[", "0", "]", "\n", "y", "=", "input", "[", "1", "]", "\n", "ax", ".", "plot", "(", "x", ",", "y", ",", "'.'", ",", "ms", "=", "1.2", ",", "color", "=", "'black'", ")", "\n", "", "ax", ".", "set_xlim", "(", "(", "-", "0.01", ",", "1.01", ")", ")", "\n", "ax", ".", "set_ylim", "(", "(", "-", "0.01", ",", "1.01", ")", ")", "\n", "ax", ".", "set_xticks", "(", "[", "]", ")", "\n", "ax", ".", "set_yticks", "(", "[", "]", ")", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "if", "savename", "is", "not", "None", ":", "\n", "        ", "savePath", "=", "r\"savePict\"", "\n", "name1", "=", "savePath", "+", "r'\\\\'", "+", "savename", "\n", "f", ".", "savefig", "(", "name1", "+", "'.jpg'", ",", "dpi", "=", "100", ")", "\n", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.imageToLine": [[156, 220], ["numpy.copy", "numpy.arange", "numpy.copy", "range", "numpy.isnan", "numpy.min", "len", "numpy.poly1d", "numpy.poly1d", "time.time", "Pixel_mapping_correction.paramFunc", "Pixel_mapping_correction.finalFunc", "time.time", "numpy.polyfit", "numpy.poly1d.", "numpy.polyfit", "Pixel_mapping_correction.findZeropoints", "Pixel_mapping_correction.finalFunc.forwardVector", "Pixel_mapping_correction.finalFunc", "Pixel_mapping_correction.finalFunc.forwardVector", "numpy.where", "numpy.min", "numpy.mean", "numpy.argmin", "numpy.where", "numpy.mean", "numpy.where", "numpy.where"], "function", ["home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.paramFunc", "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.findZeropoints", "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.finalFunc.forwardVector", "home.repos.pwc.inspect_result.ikeyang_stu-net.testObservedSCADAData.Pixel_mapping_correction.finalFunc.forwardVector"], ["", "def", "imageToLine", "(", "x", ",", "p", "=", "12", ",", "domainCorrlation", "=", "True", ")", ":", "\n", "    ", "'''\n\n    :param x: gray pict 256,256\n    :return: x,y\n    '''", "\n", "x", "=", "x", "[", "31", ":", "228", ",", "32", ":", "230", "]", "\n", "xim", "=", "np", ".", "copy", "(", "x", ")", "\n", "L", "=", "x", ".", "shape", "[", "1", "]", "\n", "Y", "=", "x", ".", "shape", "[", "0", "]", "\n", "xL", "=", "np", ".", "arange", "(", "0", ",", "1", ",", "1", "/", "L", ")", "\n", "# xL = np.arange(0, L)*(1/(L-1))", "\n", "y", "=", "np", ".", "copy", "(", "xL", ")", "\n", "y0", "=", "0", "\n", "for", "i", "in", "range", "(", "L", ")", ":", "\n", "        ", "coloum", "=", "x", "[", ":", ",", "i", "]", "\n", "vm", "=", "np", ".", "min", "(", "coloum", ")", "\n", "lenVM", "=", "len", "(", "np", ".", "where", "(", "coloum", "==", "vm", ")", "[", "0", "]", ")", "\n", "if", "vm", ">", "220", ":", "#220", "\n", "            ", "y", "[", "i", "]", "=", "np", ".", "nan", "\n", "", "else", ":", "\n", "            ", "if", "lenVM", "==", "1", ":", "\n", "                ", "y", "[", "i", "]", "=", "1", "-", "np", ".", "where", "(", "coloum", "==", "vm", ")", "[", "0", "]", "/", "(", "Y", ")", "\n", "", "else", ":", "\n", "                ", "y", "[", "i", "]", "=", "1", "-", "np", ".", "mean", "(", "np", ".", "where", "(", "coloum", "==", "vm", ")", "[", "0", "]", ")", "/", "(", "Y", ")", "\n", "", "while", "y", "[", "i", "]", "-", "y0", ">", "0.1", ":", "\n", "                ", "coloum", "[", "np", ".", "argmin", "(", "coloum", ")", "]", "=", "224", "\n", "vm", "=", "np", ".", "min", "(", "coloum", ")", "\n", "if", "vm", ">", "220", ":", "# 220", "\n", "                    ", "y", "[", "i", "]", "=", "np", ".", "nan", "\n", "break", "\n", "", "else", ":", "\n", "                    ", "y", "[", "i", "]", "=", "1", "-", "np", ".", "mean", "(", "np", ".", "where", "(", "coloum", "==", "vm", ")", "[", "0", "]", ")", "/", "(", "Y", ")", "\n", "\n", "", "", "if", "y", "[", "i", "]", "!=", "np", ".", "nan", ":", "\n", "                ", "y0", "=", "y", "[", "i", "]", "\n", "# else:", "\n", "#     y[i] = 1 - np.mean(np.where(coloum == vm)[0]) / 256", "\n", "\n", "", "", "", "a", "=", "np", ".", "isnan", "(", "y", ")", "\n", "x", "=", "xL", "[", "~", "a", "]", "\n", "y", "=", "y", "[", "~", "a", "]", "\n", "x", "[", "-", "1", "]", "=", "1", "\n", "\n", "if", "not", "domainCorrlation", ":", "\n", "        ", "f3", "=", "poly1d", "(", "polyfit", "(", "x", ",", "y", ",", "p", ")", ")", "\n", "\n", "return", "x", ",", "f3", "(", "x", ")", ",", "f3", "\n", "", "else", ":", "\n", "\n", "        ", "f3", "=", "poly1d", "(", "polyfit", "(", "x", ",", "y", ",", "12", ")", ")", "\n", "import", "time", "\n", "s", "=", "time", ".", "time", "(", ")", "\n", "x1", ",", "b1", ",", "x2", ",", "b2", "=", "paramFunc", "(", "f3", ",", "0.19", ")", "\n", "\n", "fxx", "=", "finalFunc", "(", "f3", ",", "x1", ",", "b1", ",", "x2", ",", "b2", ")", "\n", "if", "b1", "<", "0", "and", "x1", ">", "0", ":", "\n", "# print(fxx.forwardVector(0),fxx.forwardVector(0.2))", "\n", "            ", "x1", "=", "findZeropoints", "(", "fxx", ".", "forwardVector", ",", "0", ",", "0.2", ")", "\n", "b1", "=", "fxx", ".", "forwardVector", "(", "x1", ")", "\n", "fxx", "=", "finalFunc", "(", "fxx", ".", "forwardVector", ",", "x1", ",", "b1", ",", "x2", ",", "b2", ")", "\n", "", "e", "=", "time", ".", "time", "(", ")", "\n", "# print(e-s)", "\n", "return", "x", ",", "fxx", ".", "forwardVector", "(", "x", ")", ",", "fxx", ".", "forwardVector", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.train.trainUnet.trainUnet": [[13, 87], ["torchvision.transforms.Compose", "WPCDEDataset", "torch.device", "torch.device", "torch.device", "model.UNet", "model.UNet.to", "torch.Adam", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "range", "list", "model.UNet.train", "enumerate", "torch.save", "torch.save", "torch.save", "PIL.Image.open().convert", "PIL.Image.open().convert", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "model.UNet.parameters", "int", "x.to.to", "y.to.to", "optim.Adam.zero_grad", "model.UNet.", "torch.mse_loss", "F.mse_loss.backward", "optim.Adam.step", "model.UNet.state_dict", "optim.Adam.state_dict", "trainUnet..transform", "trainUnet..transform", "print", "PIL.Image.open", "PIL.Image.open", "int", "len", "len", "len"], "function", ["None"], ["def", "trainUnet", "(", "dirP", ",", "name", ",", "setLen", ",", "epochs", "=", "20", ")", ":", "\n", "    ", "class", "WPCDEDataset", "(", "Dataset", ")", ":", "\n", "        ", "def", "__init__", "(", "self", ",", "lenG", ",", "root_dir", ",", "transform", "=", "None", ")", ":", "\n", "\n", "            ", "self", ".", "root_dir", "=", "root_dir", "\n", "self", ".", "lenG", "=", "lenG", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "\n", "            ", "return", "self", ".", "lenG", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "            ", "img_nameX", "=", "self", ".", "root_dir", "+", "'%dx.jpg'", "%", "(", "idx", ")", "\n", "img_nameY", "=", "self", ".", "root_dir", "+", "'%dy.jpg'", "%", "(", "idx", ")", "\n", "imageX", "=", "Image", ".", "open", "(", "img_nameX", ")", ".", "convert", "(", "'RGB'", ")", "\n", "imageY", "=", "Image", ".", "open", "(", "img_nameY", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "                ", "imageX", "=", "self", ".", "transform", "(", "imageX", ")", "\n", "imageY", "=", "self", ".", "transform", "(", "imageY", ")", "\n", "", "return", "imageX", ",", "imageY", "\n", "\n", "\n", "", "", "transf", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.5", ",", "0.5", ",", "0.5", ")", ",", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", "\n", "]", ")", "\n", "\n", "trainDatas", "=", "WPCDEDataset", "(", "setLen", ",", "dirP", "+", "r'\\\\'", "+", "'train'", ",", "transform", "=", "transf", ")", "\n", "\n", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "batch_size", "=", "16", "\n", "lr", "=", "2e-4", "\n", "weight_decay", "=", "0", "\n", "start_epoch", "=", "0", "\n", "outf", "=", "r\"..\\model\"", "\n", "\n", "unet", "=", "UNet", "(", "in_channels", "=", "3", ",", "out_channels", "=", "3", ")", "\n", "unet", ".", "to", "(", "device", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "list", "(", "unet", ".", "parameters", "(", ")", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "weight_decay", ")", "\n", "\n", "\n", "dataloaderT", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainDatas", ",", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "int", "(", "0", ")", ")", "\n", "\n", "# dataloaderV = torch.utils.data.DataLoader(valDatas, batch_size=batch_size,", "\n", "#                                          shuffle=True, num_workers=int(0))", "\n", "\n", "dataSplit", "=", "None", "# reserved rate of  data", "\n", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "start_epoch", "+", "epochs", ")", ":", "\n", "        ", "unet", ".", "train", "(", ")", "\n", "for", "i", ",", "(", "x", ",", "y", ")", "in", "enumerate", "(", "dataloaderT", ")", ":", "\n", "            ", "if", "dataSplit", "is", "not", "None", ":", "\n", "                ", "if", "i", ">", "len", "(", "dataloaderT", ")", "*", "dataSplit", ":", "\n", "                    ", "break", "\n", "", "", "x", "=", "x", ".", "to", "(", "device", ")", "\n", "y", "=", "y", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "ypred", "=", "unet", "(", "x", ")", "\n", "loss", "=", "F", ".", "mse_loss", "(", "y", ",", "ypred", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "# break", "\n", "if", "(", "i", ")", "%", "int", "(", "len", "(", "dataloaderT", ")", "/", "4", ")", "==", "0", ":", "\n", "                ", "print", "(", "'[%d/%d][%d/%d]\\tLoss: %.4f\\t '", "\n", "%", "(", "epoch", ",", "start_epoch", "+", "epochs", ",", "i", ",", "len", "(", "dataloaderT", ")", ",", "loss", ")", ")", "\n", "", "", "state", "=", "{", "'model'", ":", "unet", ".", "state_dict", "(", ")", ",", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", "}", "\n", "torch", ".", "save", "(", "state", ",", "'%s/UnetS%d%sepoch%d.pth'", "%", "(", "outf", ",", "setLen", ",", "name", ",", "epoch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.UNet.__init__": [[12, 46], ["torch.Module.__init__", "model.UNet._block", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "model.UNet._block", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "model.UNet._block", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "model.UNet._block", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "model.UNet._block", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "model.UNet._block", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "model.UNet._block", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "model.UNet._block", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "model.UNet._block", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.UNet.__init__", "home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.UNet._block", "home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.UNet._block", "home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.UNet._block", "home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.UNet._block", "home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.UNet._block", "home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.UNet._block", "home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.UNet._block", "home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.UNet._block", "home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.UNet._block"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "out_channels", "=", "1", ",", "init_features", "=", "32", ")", ":", "\n", "        ", "super", "(", "UNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "features", "=", "init_features", "\n", "self", ".", "encoder1", "=", "UNet", ".", "_block", "(", "in_channels", ",", "features", ",", "name", "=", "\"enc1\"", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "encoder2", "=", "UNet", ".", "_block", "(", "features", ",", "features", "*", "2", ",", "name", "=", "\"enc2\"", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "encoder3", "=", "UNet", ".", "_block", "(", "features", "*", "2", ",", "features", "*", "4", ",", "name", "=", "\"enc3\"", ")", "\n", "self", ".", "pool3", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "encoder4", "=", "UNet", ".", "_block", "(", "features", "*", "4", ",", "features", "*", "8", ",", "name", "=", "\"enc4\"", ")", "\n", "self", ".", "pool4", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "bottleneck", "=", "UNet", ".", "_block", "(", "features", "*", "8", ",", "features", "*", "16", ",", "name", "=", "\"bottleneck\"", ")", "\n", "\n", "self", ".", "upconv4", "=", "nn", ".", "ConvTranspose2d", "(", "\n", "features", "*", "16", ",", "features", "*", "8", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", "\n", ")", "\n", "self", ".", "decoder4", "=", "UNet", ".", "_block", "(", "(", "features", "*", "8", ")", "*", "2", ",", "features", "*", "8", ",", "name", "=", "\"dec4\"", ")", "\n", "self", ".", "upconv3", "=", "nn", ".", "ConvTranspose2d", "(", "\n", "features", "*", "8", ",", "features", "*", "4", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", "\n", ")", "\n", "self", ".", "decoder3", "=", "UNet", ".", "_block", "(", "(", "features", "*", "4", ")", "*", "2", ",", "features", "*", "4", ",", "name", "=", "\"dec3\"", ")", "\n", "self", ".", "upconv2", "=", "nn", ".", "ConvTranspose2d", "(", "\n", "features", "*", "4", ",", "features", "*", "2", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", "\n", ")", "\n", "self", ".", "decoder2", "=", "UNet", ".", "_block", "(", "(", "features", "*", "2", ")", "*", "2", ",", "features", "*", "2", ",", "name", "=", "\"dec2\"", ")", "\n", "self", ".", "upconv1", "=", "nn", ".", "ConvTranspose2d", "(", "\n", "features", "*", "2", ",", "features", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", "\n", ")", "\n", "self", ".", "decoder1", "=", "UNet", ".", "_block", "(", "features", "*", "2", ",", "features", ",", "name", "=", "\"dec1\"", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "features", ",", "out_channels", "=", "out_channels", ",", "kernel_size", "=", "1", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.UNet.forward": [[48, 69], ["model.UNet.encoder1", "model.UNet.encoder2", "model.UNet.encoder3", "model.UNet.encoder4", "model.UNet.bottleneck", "model.UNet.upconv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.UNet.decoder4", "model.UNet.upconv3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.UNet.decoder3", "model.UNet.upconv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.UNet.decoder2", "model.UNet.upconv1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.UNet.decoder1", "model.UNet.conv", "model.UNet.pool1", "model.UNet.pool2", "model.UNet.pool3", "model.UNet.pool4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "enc1", "=", "self", ".", "encoder1", "(", "x", ")", "\n", "enc2", "=", "self", ".", "encoder2", "(", "self", ".", "pool1", "(", "enc1", ")", ")", "\n", "enc3", "=", "self", ".", "encoder3", "(", "self", ".", "pool2", "(", "enc2", ")", ")", "\n", "enc4", "=", "self", ".", "encoder4", "(", "self", ".", "pool3", "(", "enc3", ")", ")", "\n", "\n", "bottleneck", "=", "self", ".", "bottleneck", "(", "self", ".", "pool4", "(", "enc4", ")", ")", "\n", "\n", "dec4", "=", "self", ".", "upconv4", "(", "bottleneck", ")", "\n", "dec4", "=", "torch", ".", "cat", "(", "(", "dec4", ",", "enc4", ")", ",", "dim", "=", "1", ")", "\n", "dec4", "=", "self", ".", "decoder4", "(", "dec4", ")", "\n", "dec3", "=", "self", ".", "upconv3", "(", "dec4", ")", "\n", "dec3", "=", "torch", ".", "cat", "(", "(", "dec3", ",", "enc3", ")", ",", "dim", "=", "1", ")", "\n", "dec3", "=", "self", ".", "decoder3", "(", "dec3", ")", "\n", "dec2", "=", "self", ".", "upconv2", "(", "dec3", ")", "\n", "dec2", "=", "torch", ".", "cat", "(", "(", "dec2", ",", "enc2", ")", ",", "dim", "=", "1", ")", "\n", "dec2", "=", "self", ".", "decoder2", "(", "dec2", ")", "\n", "dec1", "=", "self", ".", "upconv1", "(", "dec2", ")", "\n", "dec1", "=", "torch", ".", "cat", "(", "(", "dec1", ",", "enc1", ")", ",", "dim", "=", "1", ")", "\n", "dec1", "=", "self", ".", "decoder1", "(", "dec1", ")", "\n", "return", "self", ".", "conv", "(", "dec1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.UNet._block": [[70, 99], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "collections.OrderedDict", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_block", "(", "in_channels", ",", "features", ",", "name", ")", ":", "\n", "        ", "return", "nn", ".", "Sequential", "(", "\n", "OrderedDict", "(", "\n", "[", "\n", "(", "\n", "name", "+", "\"conv1\"", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", ")", ",", "\n", ")", ",", "\n", "(", "name", "+", "\"norm1\"", ",", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "features", ")", ")", ",", "\n", "(", "name", "+", "\"relu1\"", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "(", "\n", "name", "+", "\"conv2\"", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "features", ",", "\n", "out_channels", "=", "features", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", ")", ",", "\n", ")", ",", "\n", "(", "name", "+", "\"norm2\"", ",", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "features", ")", ")", ",", "\n", "(", "name", "+", "\"relu2\"", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.ikeyang_stu-net.train.model.transform_invert": [[104, 143], ["str", "list", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "Image.fromarray.mul_().add_", "Image.fromarray().convert.permute", "len", "range", "numpy.array", "filter", "str", "numpy.array", "numpy.min", "numpy.max", "PIL.Image.fromarray().convert", "model.transform_invert.convertOne"], "function", ["None"], ["", "", "def", "transform_invert", "(", "img_", ",", "transform_train", ",", "type", "=", "'L'", ")", ":", "\n", "    ", "\"\"\"\n    :param img_: Tensor\n    :param transform_train: torchvision.transforms\n    :return: PIL image\n    \"\"\"", "\n", "if", "'Normalize'", "in", "str", "(", "transform_train", ")", ":", "\n", "        ", "norm_transform", "=", "list", "(", "filter", "(", "lambda", "x", ":", "isinstance", "(", "x", ",", "transforms", ".", "Normalize", ")", ",", "transform_train", ".", "transforms", ")", ")", "\n", "mean", "=", "torch", ".", "tensor", "(", "norm_transform", "[", "0", "]", ".", "mean", ",", "dtype", "=", "img_", ".", "dtype", ",", "device", "=", "img_", ".", "device", ")", "\n", "std", "=", "torch", ".", "tensor", "(", "norm_transform", "[", "0", "]", ".", "std", ",", "dtype", "=", "img_", ".", "dtype", ",", "device", "=", "img_", ".", "device", ")", "\n", "img_", ".", "mul_", "(", "std", "[", ":", ",", "None", ",", "None", "]", ")", ".", "add_", "(", "mean", "[", ":", ",", "None", ",", "None", "]", ")", "\n", "\n", "# img_ = img_.transpose(0, 2).transpose(0, 1)  # C*H*W --> H*W*C", "\n", "", "def", "convertOne", "(", "img", ")", ":", "\n", "        ", "img", "=", "img", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "# C*H*W --> H*W*C", "\n", "if", "'ToTensor'", "in", "str", "(", "transform_train", ")", ":", "\n", "            ", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "img", "-=", "np", ".", "min", "(", "img", ")", "\n", "img", "/=", "np", ".", "max", "(", "img", ")", "\n", "img", "=", "img", "*", "255", "\n", "\n", "\n", "", "if", "img", ".", "shape", "[", "2", "]", "==", "3", ":", "\n", "            ", "img", "=", "Image", ".", "fromarray", "(", "img", ".", "astype", "(", "'uint8'", ")", ")", ".", "convert", "(", "type", ")", "\n", "", "elif", "img", ".", "shape", "[", "2", "]", "==", "1", ":", "\n", "            ", "img_", "=", "Image", ".", "fromarray", "(", "img", ".", "astype", "(", "'uint8'", ")", ".", "squeeze", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Invalid img shape, expected 1 or 3 in axis 2, but got {}!\"", ".", "format", "(", "img", ".", "shape", "[", "2", "]", ")", ")", "\n", "\n", "", "return", "img", "\n", "", "if", "len", "(", "img_", ".", "shape", ")", ">", "3", ":", "\n", "        ", "for", "i", "in", "range", "(", "img_", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "y", "=", "np", ".", "array", "(", "convertOne", "(", "img_", "[", "i", ",", ":", ",", ":", ",", ":", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "y", "=", "np", ".", "concatenate", "(", "(", "y", ",", "np", ".", "array", "(", "convertOne", "(", "img_", "[", "i", ",", ":", ",", ":", ",", ":", "]", ")", ")", ")", ",", "axis", "=", "0", ")", "\n", "", "", "return", "y", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "array", "(", "convertOne", "(", "img_", "[", ":", ",", ":", ",", ":", "]", ")", ")", "\n", "", "", "if", "__name__", "==", "'__main__'", ":", "\n"]]}