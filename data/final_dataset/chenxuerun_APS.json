{"home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent.__init__": [[14, 77], ["tensorflow.Module.__init__", "actor_critic.GoalConditionedActorNetwork", "agent.UvfAgent._actor_network.copy", "actor_critic.GoalConditionedCriticNetwork", "range", "tensorflow.compat.v1.train.AdamOptimizer", "tensorflow.compat.v1.train.AdamOptimizer", "tensorflow.Variable", "agent.UvfAgent.load_model", "agent.UvfAgent._get_target_updater", "tf_agents.policies.actor_policy.ActorPolicy", "tf_agents.policies.actor_policy.ActorPolicy", "tf_agents.policies.ou_noise_policy.OUNoisePolicy", "tf_agents.agents.tf_agent.TFAgent.__init__", "agent.UvfAgent._critic_network_list.append", "agent.UvfAgent._target_critic_network_list.append", "net.create_variables", "actor_critic.GoalConditionedCriticNetwork.copy", "actor_critic.GoalConditionedCriticNetwork.copy"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.NonTerminatingTimeLimit.__init__", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy.load_model", "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_target_updater", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.NonTerminatingTimeLimit.__init__"], ["    ", "def", "__init__", "(", "self", ",", "time_step_spec", ",", "action_spec", ",", "\n", "load_model_path", "=", "None", ",", "save_model_path", "=", "None", ",", "\n", "ou_stddev", "=", "0.0", ",", "ou_damping", "=", "1.0", ",", "\n", "target_update_tau", "=", "0.05", ",", "target_update_period", "=", "5", ",", "\n", "max_episode_steps", "=", "None", ",", "\n", "ensemble_size", "=", "3", ",", "combine_ensemble_method", "=", "'min'", ",", "\n", "distance_type", "=", "'distributional'", ")", ":", "\n", "        ", "tf", ".", "Module", ".", "__init__", "(", "self", ",", "name", "=", "'UvfAgent'", ")", "\n", "assert", "max_episode_steps", "is", "not", "None", "\n", "self", ".", "_max_episode_steps", "=", "max_episode_steps", "\n", "self", ".", "_ensemble_size", "=", "ensemble_size", "\n", "self", ".", "_distance_type", "=", "distance_type", "\n", "\n", "self", ".", "_actor_network", "=", "GoalConditionedActorNetwork", "(", "\n", "time_step_spec", ".", "observation", ",", "action_spec", ")", "\n", "self", ".", "_target_actor_network", "=", "self", ".", "_actor_network", ".", "copy", "(", "\n", "name", "=", "'TargetActorNetwork'", ")", "\n", "\n", "critic_net_input_specs", "=", "(", "time_step_spec", ".", "observation", ",", "action_spec", ")", "\n", "critic_network", "=", "GoalConditionedCriticNetwork", "(", "critic_net_input_specs", ",", "\n", "output_dim", "=", "max_episode_steps", "if", "distance_type", "==", "'distributional'", "else", "None", ")", "\n", "self", ".", "_critic_network_list", "=", "[", "]", "\n", "self", ".", "_target_critic_network_list", "=", "[", "]", "\n", "for", "ensemble_index", "in", "range", "(", "self", ".", "_ensemble_size", ")", ":", "\n", "            ", "self", ".", "_critic_network_list", ".", "append", "(", "\n", "critic_network", ".", "copy", "(", "name", "=", "'CriticNetwork%d'", "%", "ensemble_index", ")", ")", "\n", "self", ".", "_target_critic_network_list", ".", "append", "(", "\n", "critic_network", ".", "copy", "(", "name", "=", "'TargetCriticNetwork%d'", "%", "ensemble_index", ")", ")", "\n", "\n", "", "net_list", "=", "[", "\n", "self", ".", "_actor_network", ",", "self", ".", "_target_actor_network", "\n", "]", "+", "self", ".", "_critic_network_list", "+", "self", ".", "_target_critic_network_list", "\n", "for", "net", "in", "net_list", ":", "\n", "            ", "net", ".", "create_variables", "(", ")", "\n", "\n", "", "self", ".", "_actor_optimizer", "=", "tf", ".", "compat", ".", "v1", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "1e-4", ")", "\n", "self", ".", "_critic_optimizer", "=", "tf", ".", "compat", ".", "v1", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "1e-4", ")", "\n", "\n", "self", ".", "_train_iter", "=", "tf", ".", "Variable", "(", "0", ")", "\n", "mix_dict", "=", "self", ".", "model_variable", "\n", "self", ".", "load_model", "(", "load_model_path", ",", "save_model_path", ",", "mix_dict", ")", "\n", "\n", "self", ".", "_ou_stddev", "=", "ou_stddev", "\n", "self", ".", "_ou_damping", "=", "ou_damping", "\n", "self", ".", "_target_update_tau", "=", "target_update_tau", "\n", "self", ".", "_target_update_period", "=", "target_update_period", "\n", "\n", "self", ".", "_update_target", "=", "self", ".", "_get_target_updater", "(", "\n", "target_update_tau", ",", "target_update_period", ")", "\n", "\n", "policy", "=", "actor_policy", ".", "ActorPolicy", "(", "\n", "time_step_spec", "=", "time_step_spec", ",", "action_spec", "=", "action_spec", ",", "\n", "actor_network", "=", "self", ".", "_actor_network", ",", "clip", "=", "True", ")", "\n", "collect_policy", "=", "actor_policy", ".", "ActorPolicy", "(", "\n", "time_step_spec", "=", "time_step_spec", ",", "action_spec", "=", "action_spec", ",", "\n", "actor_network", "=", "self", ".", "_actor_network", ",", "clip", "=", "False", ")", "\n", "# noise x = (1-damping)*x + N(0,std)", "\n", "collect_policy", "=", "ou_noise_policy", ".", "OUNoisePolicy", "(", "\n", "collect_policy", ",", "ou_stddev", "=", "self", ".", "_ou_stddev", ",", "\n", "ou_damping", "=", "self", ".", "_ou_damping", ",", "clip", "=", "True", ")", "\n", "\n", "super", "(", "UvfAgent", ",", "self", ")", ".", "__init__", "(", "time_step_spec", ",", "\n", "action_spec", ",", "policy", ",", "collect_policy", ",", "train_sequence_length", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent.iter_plus": [[78, 80], ["agent.UvfAgent._train_iter.assign_add"], "methods", ["None"], ["", "def", "iter_plus", "(", "self", ")", ":", "\n", "        ", "self", ".", "_train_iter", ".", "assign_add", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent.model_variable": [[81, 97], ["range"], "methods", ["None"], ["", "@", "property", "\n", "def", "model_variable", "(", "self", ")", ":", "\n", "        ", "mix_dict", "=", "{", "}", "\n", "mix_dict", "[", "'train_iter'", "]", "=", "self", ".", "_train_iter", "\n", "mix_dict", "[", "'actor_optimizer'", "]", "=", "self", ".", "_actor_optimizer", "\n", "mix_dict", "[", "'critic_optimizer'", "]", "=", "self", ".", "_critic_optimizer", "\n", "mix_dict", "[", "'actor_network'", "]", "=", "self", ".", "_actor_network", "\n", "mix_dict", "[", "'target_actor_network'", "]", "=", "self", ".", "_target_actor_network", "\n", "for", "ensemble_index", "in", "range", "(", "self", ".", "_ensemble_size", ")", ":", "\n", "            ", "mix_dict", "[", "\n", "'critic_network%d'", "%", "ensemble_index", "\n", "]", "=", "self", ".", "_critic_network_list", "[", "ensemble_index", "]", "\n", "mix_dict", "[", "\n", "'target_critic_network%d'", "%", "ensemble_index", "\n", "]", "=", "self", ".", "_target_critic_network_list", "[", "ensemble_index", "]", "\n", "", "return", "mix_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent.load_model": [[98, 112], ["tensorflow.train.Checkpoint", "tensorflow.train.CheckpointManager", "agent.UvfAgent._ckpt.restore", "tensorflow.train.CheckpointManager", "print", "print"], "methods", ["None"], ["", "def", "load_model", "(", "self", ",", "load_model_path", ",", "save_model_path", ",", "model_variable", ")", ":", "\n", "        ", "if", "load_model_path", "or", "save_model_path", ":", "\n", "            ", "self", ".", "_ckpt", "=", "tf", ".", "train", ".", "Checkpoint", "(", "**", "model_variable", ")", "\n", "if", "load_model_path", ":", "\n", "                ", "self", ".", "_load_manager", "=", "tf", ".", "train", ".", "CheckpointManager", "(", "\n", "self", ".", "_ckpt", ",", "load_model_path", ",", "max_to_keep", "=", "1", ")", "\n", "self", ".", "_ckpt", ".", "restore", "(", "self", ".", "_load_manager", ".", "latest_checkpoint", ")", "\n", "if", "self", ".", "_load_manager", ".", "latest_checkpoint", ":", "\n", "                    ", "print", "(", "\"load agent,  {}.\"", ".", "format", "(", "self", ".", "_load_manager", ".", "latest_checkpoint", ")", ")", "\n", "", "else", ":", "\n", "                    ", "print", "(", "\"Initializing from scratch.\"", ")", "\n", "", "", "if", "save_model_path", ":", "\n", "                ", "self", ".", "_save_manager", "=", "tf", ".", "train", ".", "CheckpointManager", "(", "\n", "self", ".", "_ckpt", ",", "save_model_path", ",", "max_to_keep", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent.save_model": [[113, 118], ["agent.UvfAgent._save_manager.save", "print", "int"], "methods", ["None"], ["", "", "", "def", "save_model", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_save_manager", ":", "\n", "            ", "save_path", "=", "self", ".", "_save_manager", ".", "save", "(", ")", "\n", "# train_iter\u662fcheckpoint\u5bf9\u8c61\u521d\u59cb\u5316\u65f6\u4f20\u8fdb\u53bb\u7684dict\u53c2\u6570\uff0c\u662f\u5386\u53f2\u8bad\u7ec3\u603b\u6570", "\n", "print", "(", "\"save agent,  iter {}: {}\"", ".", "format", "(", "int", "(", "self", ".", "_ckpt", ".", "train_iter", ")", ",", "save_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_target_updater": [[119, 133], ["tensorflow.compat.v1.name_scope", "tf_agents.utils.common.Periodically", "range", "tf_agents.utils.common.soft_variables_update", "tensorflow.group", "tf_agents.utils.common.soft_variables_update", "critic_update_list.append"], "methods", ["None"], ["", "", "def", "_get_target_updater", "(", "self", ",", "tau", "=", "1.0", ",", "period", "=", "1", ")", ":", "\n", "        ", "with", "tf", ".", "compat", ".", "v1", ".", "name_scope", "(", "'get_target_updater'", ")", ":", "\n", "            ", "def", "update", "(", ")", ":", "\n", "                ", "critic_update_list", "=", "[", "]", "\n", "for", "ensemble_index", "in", "range", "(", "self", ".", "_ensemble_size", ")", ":", "\n", "                    ", "critic_update", "=", "common", ".", "soft_variables_update", "(", "\n", "self", ".", "_critic_network_list", "[", "ensemble_index", "]", ".", "variables", ",", "\n", "self", ".", "_target_critic_network_list", "[", "ensemble_index", "]", ".", "variables", ",", "tau", ")", "\n", "critic_update_list", ".", "append", "(", "critic_update", ")", "\n", "", "actor_update", "=", "common", ".", "soft_variables_update", "(", "\n", "self", ".", "_actor_network", ".", "variables", ",", "\n", "self", ".", "_target_actor_network", ".", "variables", ",", "tau", ")", "\n", "return", "tf", ".", "group", "(", "critic_update_list", "+", "[", "actor_update", "]", ")", "\n", "", "return", "common", ".", "Periodically", "(", "update", ",", "period", ",", "'periodic_update_targets'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._train": [[134, 164], ["agent.UvfAgent._experience_to_transitions", "range", "tensorflow.debugging.check_numerics", "tape.gradient", "agent.UvfAgent._apply_gradients", "tensorflow.debugging.check_numerics", "tape.gradient", "agent.UvfAgent._apply_gradients", "agent.UvfAgent.train_step_counter.assign_add", "agent.UvfAgent._update_target", "tf_agents.agents.tf_agent.LossInfo", "critic_vars.extend", "tensorflow.GradientTape", "tape.watch", "agent.UvfAgent.critic_loss", "tensorflow.GradientTape", "tape.watch", "agent.UvfAgent.actor_loss"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._experience_to_transitions", "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._apply_gradients", "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._apply_gradients", "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent.critic_loss", "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent.actor_loss"], ["", "", "def", "_train", "(", "self", ",", "experience", ",", "weights", "=", "None", ")", ":", "\n", "        ", "del", "weights", "\n", "time_steps", ",", "actions", ",", "next_time_steps", "=", "self", ".", "_experience_to_transitions", "(", "experience", ")", "\n", "\n", "critic_vars", "=", "[", "]", "\n", "for", "ensemble_index", "in", "range", "(", "self", ".", "_ensemble_size", ")", ":", "\n", "            ", "critic_net", "=", "self", ".", "_critic_network_list", "[", "ensemble_index", "]", "\n", "critic_vars", ".", "extend", "(", "critic_net", ".", "variables", ")", "\n", "\n", "", "with", "tf", ".", "GradientTape", "(", "watch_accessed_variables", "=", "False", ")", "as", "tape", ":", "\n", "            ", "assert", "critic_vars", "\n", "tape", ".", "watch", "(", "critic_vars", ")", "\n", "critic_loss", "=", "self", ".", "critic_loss", "(", "time_steps", ",", "actions", ",", "next_time_steps", ")", "\n", "", "tf", ".", "debugging", ".", "check_numerics", "(", "critic_loss", ",", "'Critic loss is inf or nan'", ")", "\n", "critic_grads", "=", "tape", ".", "gradient", "(", "critic_loss", ",", "critic_vars", ")", "\n", "self", ".", "_apply_gradients", "(", "critic_grads", ",", "critic_vars", ",", "self", ".", "_critic_optimizer", ")", "\n", "\n", "actor_vars", "=", "self", ".", "_actor_network", ".", "variables", "\n", "with", "tf", ".", "GradientTape", "(", "watch_accessed_variables", "=", "False", ")", "as", "tape", ":", "\n", "            ", "assert", "actor_vars", ",", "'No actor variables to optimize.'", "\n", "tape", ".", "watch", "(", "actor_vars", ")", "\n", "actor_loss", "=", "self", ".", "actor_loss", "(", "time_steps", ")", "\n", "", "tf", ".", "debugging", ".", "check_numerics", "(", "actor_loss", ",", "'Actor loss is inf or nan.'", ")", "\n", "actor_grads", "=", "tape", ".", "gradient", "(", "actor_loss", ",", "actor_vars", ")", "\n", "self", ".", "_apply_gradients", "(", "actor_grads", ",", "actor_vars", ",", "self", ".", "_actor_optimizer", ")", "\n", "\n", "self", ".", "train_step_counter", ".", "assign_add", "(", "1", ")", "\n", "self", ".", "_update_target", "(", ")", "\n", "total_loss", "=", "actor_loss", "+", "critic_loss", "\n", "return", "tf_agent", ".", "LossInfo", "(", "total_loss", ",", "(", "actor_loss", ",", "critic_loss", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent.actor_loss": [[165, 190], ["tensorflow.compat.v1.name_scope", "agent.UvfAgent._actor_network", "tape.gradient", "zip", "tensorflow.add_n", "tensorflow.GradientTape", "tape.watch", "agent.UvfAgent._get_state_values", "tensorflow.nest.flatten", "tf_agents.utils.common.element_wise_squared_loss", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "actor_losses.append", "tensorflow.compat.v1.name_scope", "tensorflow.compat.v2.summary.scalar", "tensorflow.stop_gradient"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_state_values"], ["", "def", "actor_loss", "(", "self", ",", "time_steps", ")", ":", "\n", "        ", "with", "tf", ".", "compat", ".", "v1", ".", "name_scope", "(", "'actor_loss'", ")", ":", "\n", "            ", "actions", ",", "_", "=", "self", ".", "_actor_network", "(", "time_steps", ".", "observation", ",", "time_steps", ".", "step_type", ")", "\n", "with", "tf", ".", "GradientTape", "(", "watch_accessed_variables", "=", "False", ")", "as", "tape", ":", "\n", "                ", "tape", ".", "watch", "(", "actions", ")", "\n", "avg_expected_q_values", "=", "self", ".", "_get_state_values", "(", "\n", "time_steps", ",", "actions", ",", "aggregate", "=", "'mean'", ")", "\n", "actions", "=", "tf", ".", "nest", ".", "flatten", "(", "actions", ")", "\n", "", "dqdas", "=", "tape", ".", "gradient", "(", "[", "avg_expected_q_values", "]", ",", "actions", ")", "\n", "\n", "actor_losses", "=", "[", "]", "\n", "for", "dqda", ",", "action", "in", "zip", "(", "dqdas", ",", "actions", ")", ":", "# \u5176\u5b9e\u5c31\u53ea\u6709\u4e00\u4e2a", "\n", "                ", "loss", "=", "common", ".", "element_wise_squared_loss", "(", "\n", "tf", ".", "stop_gradient", "(", "dqda", "+", "action", ")", ",", "action", ")", "\n", "loss", "=", "tf", ".", "reduce_sum", "(", "input_tensor", "=", "loss", ",", "axis", "=", "1", ")", "\n", "loss", "=", "tf", ".", "reduce_mean", "(", "input_tensor", "=", "loss", ")", "\n", "actor_losses", ".", "append", "(", "loss", ")", "\n", "\n", "", "actor_loss", "=", "tf", ".", "add_n", "(", "actor_losses", ")", "\n", "\n", "with", "tf", ".", "compat", ".", "v1", ".", "name_scope", "(", "'Losses/'", ")", ":", "\n", "                ", "tf", ".", "compat", ".", "v2", ".", "summary", ".", "scalar", "(", "\n", "name", "=", "'actor_loss'", ",", "data", "=", "actor_loss", ",", "step", "=", "self", ".", "train_step_counter", ")", "\n", "\n", "", "", "return", "actor_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_state_values": [[191, 210], ["tensorflow.compat.v1.name_scope", "agent.UvfAgent._get_expected_q_values", "tensorflow.maximum", "tensorflow.minimum", "tensorflow.reduce_mean", "tensorflow.reduce_min", "ValueError"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_expected_q_values"], ["", "def", "_get_state_values", "(", "self", ",", "time_steps", ",", "actions", "=", "None", ",", "aggregate", "=", "'mean'", ")", ":", "\n", "# \u96c6\u5408\u6240\u6709\u7f51\u7edc\uff0c\u7528\u9608\u503c\u9650\u5236", "\n", "        ", "with", "tf", ".", "compat", ".", "v1", ".", "name_scope", "(", "'state_values'", ")", ":", "\n", "            ", "expected_q_values", "=", "self", ".", "_get_expected_q_values", "(", "time_steps", ",", "actions", ")", "\n", "if", "aggregate", "is", "not", "None", ":", "\n", "                ", "if", "aggregate", "==", "'mean'", ":", "\n", "                    ", "expected_q_values", "=", "tf", ".", "reduce_mean", "(", "expected_q_values", ",", "axis", "=", "0", ")", "\n", "", "elif", "aggregate", "==", "'min'", ":", "\n", "                    ", "expected_q_values", "=", "tf", ".", "reduce_min", "(", "expected_q_values", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "(", "'Unknown method for combining ensemble: %s'", "%", "aggregate", ")", "\n", "\n", "", "", "if", "self", ".", "_distance_type", "!=", "'distributional'", ":", "\n", "                ", "min_q_val", "=", "-", "1.0", "*", "self", ".", "_max_episode_steps", "\n", "max_q_val", "=", "0.0", "\n", "expected_q_values", "=", "tf", ".", "maximum", "(", "expected_q_values", ",", "min_q_val", ")", "\n", "expected_q_values", "=", "tf", ".", "minimum", "(", "expected_q_values", ",", "max_q_val", ")", "\n", "\n", "", "return", "expected_q_values", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_expected_q_values": [[211, 238], ["agent.UvfAgent._get_critic_output", "tensorflow.stack", "agent.UvfAgent._actor_network", "tensorflow.nn.softmax", "tensorflow.range", "tensorflow.tile", "tensorflow.reduce_sum", "expected_q_values_list.append", "tensorflow.expand_dims", "expected_q_values_list.append", "expected_q_values_list.append", "tensorflow.exp"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_critic_output"], ["", "", "def", "_get_expected_q_values", "(", "self", ",", "time_steps", ",", "actions", "=", "None", ")", ":", "\n", "# \u5bf9\u96c6\u7fa4\u8f93\u51fa\u6c42\u671f\u671b", "\n", "        ", "if", "actions", "is", "None", ":", "\n", "            ", "actions", ",", "_", "=", "self", ".", "_actor_network", "(", "\n", "time_steps", ".", "observation", ",", "time_steps", ".", "step_type", ")", "\n", "", "q_values_list", "=", "self", ".", "_get_critic_output", "(", "\n", "self", ".", "_critic_network_list", ",", "time_steps", ",", "actions", ")", "\n", "expected_q_values_list", "=", "[", "]", "\n", "for", "q_values", "in", "q_values_list", ":", "\n", "            ", "if", "self", ".", "_distance_type", "==", "'distributional'", ":", "\n", "# \u6982\u7387\u548c\u8ddd\u79bb\u52a0\u6743\uff0c\u5f97\u5230\u5e73\u5747\u8ddd\u79bb\uff0c\u8f93\u51fa\u4e3a\u8d1f\u6570", "\n", "                ", "q_probs", "=", "tf", ".", "nn", ".", "softmax", "(", "q_values", ",", "axis", "=", "1", ")", "\n", "batch_size", "=", "q_probs", ".", "shape", "[", "0", "]", "\n", "bin_range", "=", "tf", ".", "range", "(", "1", ",", "self", ".", "_max_episode_steps", "+", "1", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "neg_bin_range", "=", "-", "1.0", "*", "bin_range", "\n", "tiled_bin_range", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "neg_bin_range", ",", "0", ")", ",", "[", "batch_size", ",", "1", "]", ")", "\n", "assert", "q_probs", ".", "shape", "==", "tiled_bin_range", ".", "shape", "\n", "expected_q_values", "=", "tf", ".", "reduce_sum", "(", "q_probs", "*", "tiled_bin_range", ",", "axis", "=", "1", ")", "\n", "expected_q_values_list", ".", "append", "(", "expected_q_values", ")", "\n", "", "elif", "self", ".", "_distance_type", "==", "'original'", ":", "\n", "                ", "expected_q_values_list", ".", "append", "(", "q_values", ")", "\n", "", "elif", "self", ".", "_distance_type", "==", "'sigmoid'", ":", "\n", "# \u539f\u672c\u8f93\u51fa\u7684\u662flogits", "\n", "                ", "q_values", "=", "-", "1", "-", "tf", ".", "exp", "(", "q_values", ")", "\n", "expected_q_values_list", ".", "append", "(", "q_values", ")", "\n", "\n", "", "", "return", "tf", ".", "stack", "(", "expected_q_values_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._apply_gradients": [[239, 242], ["tuple", "optimizer.apply_gradients", "zip"], "methods", ["None"], ["", "def", "_apply_gradients", "(", "self", ",", "gradients", ",", "variables", ",", "optimizer", ")", ":", "\n", "        ", "grads_and_vars", "=", "tuple", "(", "zip", "(", "gradients", ",", "variables", ")", ")", "\n", "optimizer", ".", "apply_gradients", "(", "grads_and_vars", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent.critic_loss": [[243, 306], ["tensorflow.compat.v1.name_scope", "agent.UvfAgent._target_actor_network", "agent.UvfAgent._get_critic_output", "agent.UvfAgent._get_critic_output", "range", "tensorflow.reduce_mean", "len", "tensorflow.reduce_mean", "critic_loss_list.append", "tensorflow.nn.softmax", "tensorflow.one_hot", "tensorflow.zeros", "tensorflow.reduce_sum", "tensorflow.concat", "tensorflow.compat.v1.where", "tensorflow.stop_gradient", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.zeros", "next_time_steps.is_last", "tensorflow.ones", "tensorflow.nn.sigmoid", "tensorflow.compat.v1.where", "tensorflow.stop_gradient", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "next_time_steps.is_last", "tensorflow.compat.v1.where", "tensorflow.stop_gradient", "tensorflow.stop_gradient", "tf_agents.utils.common.element_wise_huber_loss", "tensorflow.ones", "next_time_steps.is_last", "tensorflow.stop_gradient"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_critic_output", "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_critic_output"], ["", "def", "critic_loss", "(", "self", ",", "time_steps", ",", "actions", ",", "next_time_steps", ")", ":", "\n", "        ", "with", "tf", ".", "compat", ".", "v1", ".", "name_scope", "(", "'critic_loss'", ")", ":", "\n", "            ", "target_actions", ",", "_", "=", "self", ".", "_target_actor_network", "(", "\n", "next_time_steps", ".", "observation", ",", "next_time_steps", ".", "step_type", ")", "\n", "batch_size", "=", "target_actions", ".", "shape", "[", "0", "]", "\n", "\n", "critic_loss_list", "=", "[", "]", "\n", "q_values_list", "=", "self", ".", "_get_critic_output", "(", "\n", "self", ".", "_critic_network_list", ",", "time_steps", ",", "actions", ")", "\n", "target_q_values_list", "=", "self", ".", "_get_critic_output", "(", "\n", "self", ".", "_target_critic_network_list", ",", "next_time_steps", ",", "target_actions", ")", "\n", "assert", "len", "(", "target_q_values_list", ")", "==", "self", ".", "_ensemble_size", "\n", "\n", "for", "ensemble_index", "in", "range", "(", "self", ".", "_ensemble_size", ")", ":", "\n", "                ", "target_q_values", "=", "target_q_values_list", "[", "ensemble_index", "]", "\n", "\n", "if", "self", ".", "_distance_type", "==", "'distributional'", ":", "\n", "                    ", "target_q_probs", "=", "tf", ".", "nn", ".", "softmax", "(", "target_q_values", ",", "axis", "=", "1", ")", "\n", "one_hot", "=", "tf", ".", "one_hot", "(", "\n", "tf", ".", "zeros", "(", "batch_size", ",", "dtype", "=", "tf", ".", "int32", ")", ",", "self", ".", "_max_episode_steps", ")", "\n", "col_1", "=", "tf", ".", "zeros", "(", "(", "batch_size", ",", "1", ")", ")", "\n", "col_middle", "=", "target_q_probs", "[", ":", ",", ":", "-", "2", "]", "\n", "col_last", "=", "tf", ".", "reduce_sum", "(", "\n", "input_tensor", "=", "target_q_probs", "[", ":", ",", "-", "2", ":", "]", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "shifted_target_q_probs", "=", "tf", ".", "concat", "(", "[", "col_1", ",", "col_middle", ",", "col_last", "]", ",", "axis", "=", "1", ")", "\n", "assert", "one_hot", ".", "shape", "==", "shifted_target_q_probs", ".", "shape", "\n", "td_targets", "=", "tf", ".", "compat", ".", "v1", ".", "where", "(", "\n", "next_time_steps", ".", "is_last", "(", ")", ",", "one_hot", ",", "shifted_target_q_probs", ")", "\n", "td_targets", "=", "tf", ".", "stop_gradient", "(", "td_targets", ")", "\n", "", "elif", "self", ".", "_distance_type", "==", "'sigmoid'", ":", "\n", "                    ", "ones", "=", "tf", ".", "ones", "(", "shape", "=", "(", "batch_size", ",", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "sigmoids", "=", "tf", ".", "nn", ".", "sigmoid", "(", "target_q_values", ")", "\n", "original_td_targets", "=", "sigmoids", "/", "(", "sigmoids", "+", "1", ")", "\n", "assert", "ones", ".", "shape", "==", "original_td_targets", ".", "shape", "\n", "td_targets", "=", "tf", ".", "compat", ".", "v1", ".", "where", "(", "\n", "next_time_steps", ".", "is_last", "(", ")", ",", "ones", ",", "original_td_targets", ")", "\n", "td_targets", "=", "tf", ".", "stop_gradient", "(", "td_targets", ")", "\n", "", "elif", "self", ".", "_distance_type", "==", "'original'", ":", "\n", "                    ", "ones", "=", "-", "tf", ".", "ones", "(", "shape", "=", "(", "batch_size", ",", ")", ")", "\n", "original_td_targets", "=", "(", "next_time_steps", ".", "reward", "+", "\n", "next_time_steps", ".", "discount", "*", "target_q_values", ")", "\n", "# \u6211\u7684\u65b0\u4fee\u6539", "\n", "assert", "ones", ".", "shape", "==", "original_td_targets", ".", "shape", "\n", "td_targets", "=", "tf", ".", "compat", ".", "v1", ".", "where", "(", "\n", "next_time_steps", ".", "is_last", "(", ")", ",", "ones", ",", "original_td_targets", ")", "\n", "td_targets", "=", "tf", ".", "stop_gradient", "(", "td_targets", ")", "\n", "\n", "", "q_values", "=", "q_values_list", "[", "ensemble_index", "]", "\n", "\n", "if", "self", ".", "_distance_type", "==", "'distributional'", ":", "\n", "                    ", "critic_loss", "=", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "\n", "labels", "=", "tf", ".", "stop_gradient", "(", "td_targets", ")", ",", "logits", "=", "q_values", ")", "\n", "", "elif", "self", ".", "_distance_type", "==", "'sigmoid'", ":", "\n", "                    ", "critic_loss", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "\n", "labels", "=", "tf", ".", "stop_gradient", "(", "td_targets", ")", ",", "logits", "=", "q_values", ")", "\n", "", "elif", "self", ".", "_distance_type", "==", "'original'", ":", "\n", "                    ", "critic_loss", "=", "common", ".", "element_wise_huber_loss", "(", "td_targets", ",", "q_values", ")", "\n", "\n", "", "critic_loss", "=", "tf", ".", "reduce_mean", "(", "input_tensor", "=", "critic_loss", ")", "\n", "critic_loss_list", ".", "append", "(", "critic_loss", ")", "\n", "\n", "", "critic_loss", "=", "tf", ".", "reduce_mean", "(", "input_tensor", "=", "critic_loss_list", ")", "\n", "return", "critic_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_critic_output": [[307, 316], ["range", "critic_net", "q_values_list.append"], "methods", ["None"], ["", "", "def", "_get_critic_output", "(", "self", ",", "critic_net_list", ",", "time_steps", ",", "actions", "=", "None", ")", ":", "\n", "# \u57fa\u672c\u51fd\u6570\uff0c\u83b7\u5f97\u5217\u8868\u8f93\u51fa", "\n", "        ", "q_values_list", "=", "[", "]", "\n", "critic_net_input", "=", "(", "time_steps", ".", "observation", ",", "actions", ")", "\n", "for", "critic_index", "in", "range", "(", "self", ".", "_ensemble_size", ")", ":", "\n", "            ", "critic_net", "=", "critic_net_list", "[", "critic_index", "]", "\n", "q_values", ",", "_", "=", "critic_net", "(", "critic_net_input", ",", "time_steps", ".", "step_type", ")", "\n", "q_values_list", ".", "append", "(", "q_values", ")", "\n", "", "return", "q_values_list", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._experience_to_transitions": [[317, 323], ["tf_agents.trajectories.trajectory.to_transition", "tensorflow.nest.map_structure", "tensorflow.squeeze"], "methods", ["None"], ["", "def", "_experience_to_transitions", "(", "self", ",", "experience", ")", ":", "\n", "        ", "transitions", "=", "trajectory", ".", "to_transition", "(", "experience", ")", "# [s a s'] 1\u52063", "\n", "transitions", "=", "tf", ".", "nest", ".", "map_structure", "(", "lambda", "x", ":", "tf", ".", "squeeze", "(", "x", ",", "[", "1", "]", ")", ",", "transitions", ")", "\n", "time_steps", ",", "policy_steps", ",", "next_time_steps", "=", "transitions", "\n", "actions", "=", "policy_steps", ".", "action", "\n", "return", "time_steps", ",", "actions", ",", "next_time_steps", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_dist_to_goal": [[324, 328], ["agent.UvfAgent._get_state_values"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_state_values"], ["", "def", "_get_dist_to_goal", "(", "self", ",", "time_steps", ",", "aggregate", "=", "'mean'", ")", ":", "\n", "# \u5230\u76ee\u6807\u72b6\u6001\u7684\u8ddd\u79bb \u4e00\u5217", "\n", "        ", "q_values", "=", "self", ".", "_get_state_values", "(", "time_steps", ",", "aggregate", "=", "aggregate", ")", "\n", "return", "-", "1.0", "*", "q_values", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_pairwise_dist": [[329, 346], ["range", "tensorflow.stack", "tf_agents.trajectories.time_step.transition", "agent.UvfAgent._get_dist_to_goal", "dist_matrix.append", "tensorflow.ones_like", "tensorflow.expand_dims"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_dist_to_goal"], ["", "def", "_get_pairwise_dist", "(", "self", ",", "obs_tensor", ",", "goal_tensor", "=", "None", ",", "aggregate", "=", "'mean'", ")", ":", "\n", "        ", "assert", "aggregate", "is", "not", "None", ",", "'aggregate is None'", "\n", "if", "goal_tensor", "is", "None", ":", "\n", "            ", "goal_tensor", "=", "obs_tensor", "\n", "", "dist_matrix", "=", "[", "]", "\n", "for", "obs_index", "in", "range", "(", "obs_tensor", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "obs", "=", "obs_tensor", "[", "obs_index", "]", "\n", "obs_repeat_tensor", "=", "tf", ".", "ones_like", "(", "goal_tensor", ")", "*", "tf", ".", "expand_dims", "(", "obs", ",", "0", ")", "\n", "obs_goal_tensor", "=", "{", "'observation'", ":", "obs_repeat_tensor", ",", "'goal'", ":", "goal_tensor", "}", "\n", "time_steps", "=", "time_step", ".", "transition", "(", "obs_goal_tensor", ",", "reward", "=", "0", ",", "discount", "=", "1.0", ")", "\n", "dist", "=", "self", ".", "_get_dist_to_goal", "(", "time_steps", ",", "aggregate", "=", "aggregate", ")", "\n", "dist_matrix", ".", "append", "(", "dist", ")", "\n", "", "pairwise_dist", "=", "tf", ".", "stack", "(", "dist_matrix", ")", "\n", "# if aggregate is None:", "\n", "#     pairwise_dist = tf.transpose(a=pairwise_dist, perm=[1, 0, 2])", "\n", "\n", "return", "pairwise_dist", "", "", "", ""]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.train.train_eval": [[12, 83], ["numpy.random.seed", "random.seed", "tensorflow.compat.v1.set_random_seed", "tensorflow.compat.v1.train.get_or_create_global_step", "tf_agents.replay_buffers.tf_uniform_replay_buffer.TFUniformReplayBuffer", "tf_agents.drivers.dynamic_step_driver.DynamicStepDriver", "tf_agents.drivers.dynamic_step_driver.DynamicStepDriver", "tf_agents.utils.common.function", "tf_agents.utils.common.function", "tf_agents.utils.common.function", "dynamic_step_driver.DynamicStepDriver.run", "collect_policy.get_initial_state", "tf_uniform_replay_buffer.TFUniformReplayBuffer.as_dataset().prefetch", "iter", "range", "tf_agents.metrics.tf_metrics.AverageReturnMetric", "dynamic_step_driver.DynamicStepDriver.run", "next", "tf_agent.train", "tf_agent.iter_plus", "int", "tf_uniform_replay_buffer.TFUniformReplayBuffer.as_dataset", "tf_agent.save_model", "tensorflow.compat.v1.logging.info", "tf.compat.v1.train.get_or_create_global_step.numpy", "tensorflow.compat.v1.logging.info", "eval_tf_env.pyenv.envs[].gym.set_sample_goal_args", "tf_agents.eval.metric_utils.eager_compute", "metric_utils.eager_compute.items", "range", "tensorflow.compat.v1.logging.info", "tf.compat.v1.train.get_or_create_global_step.numpy", "tensorflow.compat.v1.logging.info", "eval_tf_env.reset", "pred_dist.append", "value.numpy", "tf_agent._get_dist_to_goal", "dist_to_goal.numpy", "numpy.mean", "numpy.std"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent.iter_plus", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy.save_model", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.set_sample_goal_args", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.reset", "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_dist_to_goal"], ["def", "train_eval", "(", "tf_agent", ",", "tf_env", ",", "eval_tf_env", ",", "num_iterations", "=", "2e6", ",", "\n", "initial_collect_steps", "=", "1000", ",", "batch_size", "=", "64", ",", "\n", "num_eval_episodes", "=", "100", ",", "eval_interval", "=", "10000", ",", "\n", "log_inverval", "=", "1000", ",", "random_seed", "=", "0", ")", ":", "\n", "# tf.compat.v1.logging.info('random_seed = %d' % random_seed)", "\n", "    ", "np", ".", "random", ".", "seed", "(", "random_seed", ")", "\n", "random", ".", "seed", "(", "random_seed", ")", "\n", "tf", ".", "compat", ".", "v1", ".", "set_random_seed", "(", "random_seed", ")", "\n", "\n", "max_episode_steps", "=", "tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "_duration", "\n", "global_step", "=", "tf", ".", "compat", ".", "v1", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "# initial_collect_steps \u6b63\u597d\u5c31\u662fbuffer_size", "\n", "replay_buffer", "=", "tf_uniform_replay_buffer", ".", "TFUniformReplayBuffer", "(", "\n", "tf_agent", ".", "collect_data_spec", ",", "batch_size", "=", "tf_env", ".", "batch_size", ",", "\n", "max_length", "=", "int", "(", "num_iterations", "/", "2", ")", ")", "# batch=1", "\n", "\n", "eval_metrics", "=", "[", "tf_metrics", ".", "AverageReturnMetric", "(", "buffer_size", "=", "num_eval_episodes", ")", "]", "\n", "\n", "eval_policy", "=", "tf_agent", ".", "policy", "\n", "collect_policy", "=", "tf_agent", ".", "collect_policy", "\n", "\n", "initial_collect_driver", "=", "dynamic_step_driver", ".", "DynamicStepDriver", "(", "\n", "tf_env", ",", "collect_policy", ",", "\n", "observers", "=", "[", "replay_buffer", ".", "add_batch", "]", ",", "num_steps", "=", "initial_collect_steps", ")", "\n", "\n", "collect_driver", "=", "dynamic_step_driver", ".", "DynamicStepDriver", "(", "\n", "tf_env", ",", "collect_policy", ",", "\n", "observers", "=", "[", "replay_buffer", ".", "add_batch", "]", ",", "num_steps", "=", "1", ")", "\n", "\n", "initial_collect_driver", ".", "run", "=", "common", ".", "function", "(", "initial_collect_driver", ".", "run", ")", "\n", "collect_driver", ".", "run", "=", "common", ".", "function", "(", "collect_driver", ".", "run", ")", "\n", "tf_agent", ".", "train", "=", "common", ".", "function", "(", "tf_agent", ".", "train", ")", "\n", "\n", "initial_collect_driver", ".", "run", "(", ")", "\n", "\n", "time_step", "=", "None", "\n", "policy_state", "=", "collect_policy", ".", "get_initial_state", "(", "tf_env", ".", "batch_size", ")", "\n", "\n", "dataset", "=", "replay_buffer", ".", "as_dataset", "(", "num_parallel_calls", "=", "3", ",", "\n", "sample_batch_size", "=", "batch_size", ",", "num_steps", "=", "2", ")", ".", "prefetch", "(", "3", ")", "\n", "iterator", "=", "iter", "(", "dataset", ")", "\n", "\n", "for", "_", "in", "range", "(", "num_iterations", ")", ":", "\n", "        ", "time_step", ",", "policy_state", "=", "collect_driver", ".", "run", "(", "\n", "time_step", "=", "time_step", ",", "policy_state", "=", "policy_state", ")", "\n", "experience", ",", "_", "=", "next", "(", "iterator", ")", "\n", "train_loss", "=", "tf_agent", ".", "train", "(", "experience", ")", "\n", "\n", "tf_agent", ".", "iter_plus", "(", ")", "\n", "\n", "if", "global_step", ".", "numpy", "(", ")", "%", "eval_interval", "==", "0", ":", "\n", "            ", "tf_agent", ".", "save_model", "(", ")", "\n", "tf", ".", "compat", ".", "v1", ".", "logging", ".", "info", "(", "'step = %d'", "%", "global_step", ".", "numpy", "(", ")", ")", "\n", "\n", "for", "dist", "in", "[", "2", ",", "5", ",", "10", "]", ":", "\n", "                ", "tf", ".", "compat", ".", "v1", ".", "logging", ".", "info", "(", "'\\t dist = %d'", "%", "dist", ")", "\n", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "set_sample_goal_args", "(", "\n", "prob_constraint", "=", "1.0", ",", "min_dist", "=", "dist", ",", "max_dist", "=", "dist", ")", "\n", "results", "=", "metric_utils", ".", "eager_compute", "(", "eval_metrics", ",", "eval_tf_env", ",", "eval_policy", ",", "\n", "num_episodes", "=", "num_eval_episodes", ",", "\n", "train_step", "=", "global_step", ",", "summary_prefix", "=", "'Metrics'", ")", "\n", "for", "(", "key", ",", "value", ")", "in", "results", ".", "items", "(", ")", ":", "\n", "                    ", "tf", ".", "compat", ".", "v1", ".", "logging", ".", "info", "(", "'\\t\\t %s = %.2f'", ",", "key", ",", "value", ".", "numpy", "(", ")", ")", "\n", "", "pred_dist", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_eval_episodes", ")", ":", "\n", "                    ", "ts", "=", "eval_tf_env", ".", "reset", "(", ")", "\n", "dist_to_goal", "=", "tf_agent", ".", "_get_dist_to_goal", "(", "ts", ")", "[", "0", "]", "\n", "pred_dist", ".", "append", "(", "dist_to_goal", ".", "numpy", "(", ")", ")", "\n", "", "tf", ".", "compat", ".", "v1", ".", "logging", ".", "info", "(", "'\\t\\t predicted_dist = %.1f (%.1f)'", "%", "\n", "(", "np", ".", "mean", "(", "pred_dist", ")", ",", "np", ".", "std", "(", "pred_dist", ")", ")", ")", "\n", "", "", "", "return", "train_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.train.train_sp_once": [[84, 161], ["time.clock", "range", "print", "plan_util.rollout_once", "time.clock", "time.clock", "plan_util.fill_map", "search_policy._change_active_set", "search_policy.save_model", "print", "search_policy._edge_len_threshold.assign_add", "search_policy._num_points.assign_add", "print", "print", "int", "time.clock", "search_policy._edge_len_threshold.assign_sub", "search_policy._edge_len_threshold.assign_sub", "search_policy._num_points.assign_sub", "search_policy._num_points.assign_sub", "search_policy._num_points.numpy"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.rollout_once", "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.fill_map", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._change_active_set", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy.save_model"], ["", "def", "train_sp_once", "(", "search_policy", ",", "eval_tf_env", ",", "num_iterations", "=", "10", ")", ":", "\n", "    ", "success", "=", "0", "# \u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u5e0c\u671b\u5c3d\u91cf\u51cf\u5c11\u8def\u5f84\u70b9", "\n", "no_way", "=", "0", "# \u603b\u662f\u627e\u4e0d\u5230\u8def\u5f84\uff0c\u5e94\u8be5\u589e\u5927\u5efa\u8fb9\u9608\u503c\uff0c\u589e\u52a0\u8def\u5f84\u70b9", "\n", "cannot_reach", "=", "0", "# \u627e\u5230\u8def\u5f84\u4f46\u603b\u5230\u4e0d\u4e86\uff0c\u5e94\u8be5\u51cf\u5c0f\u5efa\u8fb9\u9608\u503c", "\n", "\n", "start", "=", "time", ".", "clock", "(", ")", "\n", "for", "_", "in", "range", "(", "num_iterations", ")", ":", "\n", "        ", "result", "=", "rollout_once", "(", "eval_tf_env", ",", "search_policy", ")", "# 13, cpu8\u79d2", "\n", "if", "result", "==", "'success'", ":", "\n", "            ", "success", "+=", "1", "\n", "", "elif", "result", "==", "'no way'", ":", "\n", "            ", "no_way", "+=", "1", "\n", "", "elif", "result", "==", "'cannot reach'", ":", "\n", "            ", "cannot_reach", "+=", "1", "\n", "", "", "rollout_time", "=", "time", ".", "clock", "(", ")", "-", "start", "\n", "print", "(", "'rollout_num: %d, average_time: %.1f'", "%", "(", "\n", "num_iterations", ",", "rollout_time", "/", "num_iterations", ")", ")", "\n", "\n", "if", "search_policy", ".", "_learn", ":", "\n", "        ", "no_problem", "=", "True", "\n", "\n", "if", "(", "no_way", "/", "num_iterations", ")", ">", "search_policy", ".", "_cth", ":", "\n", "            ", "no_problem", "=", "False", "\n", "# \u786e\u5b9a\u7cfb\u6570", "\n", "if", "search_policy", ".", "_c1", ">", "0", ":", "\n", "                ", "search_policy", ".", "_k1", "*=", "search_policy", ".", "_rho", "\n", "", "elif", "search_policy", ".", "_c1", "==", "0", ":", "\n", "                ", "search_policy", ".", "_k1", "=", "1", "\n", "", "if", "search_policy", ".", "_c2", ">", "0", ":", "\n", "                ", "search_policy", ".", "_k2", "*=", "search_policy", ".", "_rho", "\n", "", "elif", "search_policy", ".", "_c2", "==", "0", ":", "\n", "                ", "search_policy", ".", "_k2", "=", "1", "\n", "\n", "", "search_policy", ".", "_edge_len_threshold", ".", "assign_add", "(", "\n", "search_policy", ".", "_k1", "*", "search_policy", ".", "_delta_edge_len_threshold", ")", "\n", "\n", "search_policy", ".", "_num_points", ".", "assign_add", "(", "search_policy", ".", "_k2", "*", "search_policy", ".", "_i", ")", "\n", "\n", "search_policy", ".", "_c1", "=", "5", "\n", "search_policy", ".", "_c2", "=", "5", "\n", "\n", "if", "search_policy", ".", "_n2", "==", "0", ":", "\n", "                ", "search_policy", ".", "_d", "*=", "search_policy", ".", "_gamma", "# \u7528\u4e8e\u7ec8\u6b62\u8bad\u7ec3", "\n", "", "print", "(", "'no way: %.2f'", "%", "(", "no_way", "/", "num_iterations", ")", ")", "\n", "\n", "", "if", "(", "cannot_reach", "/", "num_iterations", ")", ">", "search_policy", ".", "_cth", ":", "\n", "            ", "no_problem", "=", "False", "\n", "if", "search_policy", ".", "_n1", ">", "1", "and", "search_policy", ".", "_c1", "==", "1", ":", "\n", "                ", "search_policy", ".", "_n1", "-=", "1", "\n", "search_policy", ".", "_edge_len_threshold", ".", "assign_sub", "(", "\n", "search_policy", ".", "_k1", "*", "search_policy", ".", "_delta_edge_len_threshold", ")", "\n", "", "else", ":", "\n", "                ", "search_policy", ".", "_edge_len_threshold", ".", "assign_sub", "(", "\n", "search_policy", ".", "_delta_edge_len_threshold", ")", "\n", "", "if", "search_policy", ".", "_c1", ">", "0", ":", "\n", "                ", "search_policy", ".", "_c1", "-=", "1", "\n", "", "print", "(", "'cannot reach: %.2f'", "%", "(", "cannot_reach", "/", "num_iterations", ")", ")", "\n", "\n", "", "if", "no_problem", ":", "\n", "            ", "if", "search_policy", ".", "_n2", ">", "0", "and", "search_policy", ".", "_c2", "==", "1", ":", "\n", "                ", "search_policy", ".", "_n2", "-=", "1", "\n", "search_policy", ".", "_num_points", ".", "assign_sub", "(", "search_policy", ".", "_k2", "*", "search_policy", ".", "_i", ")", "\n", "", "else", ":", "\n", "                ", "search_policy", ".", "_num_points", ".", "assign_sub", "(", "search_policy", ".", "_d", ")", "\n", "", "if", "search_policy", ".", "_c1", ">", "0", ":", "\n", "                ", "search_policy", ".", "_c1", "-=", "1", "\n", "", "if", "search_policy", ".", "_c2", ">", "0", ":", "\n", "                ", "search_policy", ".", "_c2", "-=", "1", "\n", "\n", "", "", "start", "=", "time", ".", "clock", "(", ")", "\n", "points", "=", "fill_map", "(", "eval_tf_env", ",", "int", "(", "search_policy", ".", "_num_points", ".", "numpy", "(", ")", ")", ")", "\n", "search_policy", ".", "_change_active_set", "(", "points", ")", "\n", "rt", "=", "time", ".", "clock", "(", ")", "-", "start", "\n", "search_policy", ".", "save_model", "(", ")", "\n", "print", "(", "'change_active_set_time: %.1f \\n'", "%", "rt", ")", "\n", "\n", "", "return", "(", "search_policy", ".", "_d", "<", "search_policy", ".", "_tth", ")", "# \u7528\u4e8e\u7ec8\u6b62\u8bad\u7ec3", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.train.train_sp": [[162, 195], ["eval_tf_env.pyenv.envs[].gym.set_sample_goal_args", "range", "np.array.append", "np.array.append", "numpy.array", "numpy.array", "numpy.stack", "numpy.savetxt", "print", "print", "print", "np.array.append", "np.array.append", "search_policy._train_iter.assign_add", "train.train_sp_once", "search_policy._num_points.numpy", "search_policy._edge_len_threshold.numpy", "search_policy._num_points.numpy", "search_policy._edge_len_threshold.numpy", "search_policy._num_points.numpy", "search_policy._edge_len_threshold.numpy", "search_policy._num_points.numpy", "search_policy._edge_len_threshold.numpy"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.set_sample_goal_args", "home.repos.pwc.inspect_result.chenxuerun_APS.None.train.train_sp_once"], ["", "def", "train_sp", "(", "search_policy", ",", "eval_tf_env", ",", "times", "=", "1", ")", ":", "\n", "# \u4e00\u6b21\u8bad\u7ec3\u4f1a\u8bad\u7ec3\u5f88\u591a\u8f6e\uff0c\u4e00\u8f6e\u8bad\u7ec3\u4f1a\u8dd1\u5f88\u591a\u4e2aepisode\u5e76\u6539\u4e00\u6b21\u53c2\u6570", "\n", "\n", "    ", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "_duration", "=", "400", "\n", "max_goal_dist", "=", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "max_goal_dist", "\n", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "set_sample_goal_args", "(", "\n", "prob_constraint", "=", "1.0", ",", "min_dist", "=", "max_goal_dist", "*", "0.8", ",", "max_dist", "=", "max_goal_dist", ")", "\n", "\n", "points_nums", "=", "[", "]", "\n", "edge_len_thresholds", "=", "[", "]", "\n", "\n", "for", "_", "in", "range", "(", "times", ")", ":", "\n", "        ", "print", "(", "'num_points: %.1f, edge_len_threshold: %.1f'", "%", "(", "search_policy", ".", "_num_points", ".", "numpy", "(", ")", ",", "\n", "search_policy", ".", "_edge_len_threshold", ".", "numpy", "(", ")", ")", ")", "\n", "points_nums", ".", "append", "(", "search_policy", ".", "_num_points", ".", "numpy", "(", ")", ")", "\n", "edge_len_thresholds", ".", "append", "(", "search_policy", ".", "_edge_len_threshold", ".", "numpy", "(", ")", ")", "\n", "search_policy", ".", "_train_iter", ".", "assign_add", "(", "1", ")", "\n", "end", "=", "train_sp_once", "(", "search_policy", ",", "eval_tf_env", ",", "num_iterations", "=", "20", ")", "\n", "if", "end", ":", "\n", "            ", "break", "\n", "\n", "", "", "points_nums", ".", "append", "(", "search_policy", ".", "_num_points", ".", "numpy", "(", ")", ")", "\n", "edge_len_thresholds", ".", "append", "(", "search_policy", ".", "_edge_len_threshold", ".", "numpy", "(", ")", ")", "\n", "points_nums", "=", "np", ".", "array", "(", "points_nums", ")", "\n", "edge_len_thresholds", "=", "np", ".", "array", "(", "edge_len_thresholds", ")", "\n", "c", "=", "np", ".", "stack", "(", "[", "points_nums", ",", "edge_len_thresholds", "]", ",", "axis", "=", "1", ")", "\n", "np", ".", "savetxt", "(", "'plan_param.csv'", ",", "c", ",", "fmt", "=", "'%.1f'", ",", "delimiter", "=", "','", ")", "\n", "\n", "print", "(", "'sp training is over................'", ")", "\n", "print", "(", "'num_points: %.1f, edge_len_threshold: %.1f'", "%", "(", "search_policy", ".", "_num_points", ".", "numpy", "(", ")", ",", "\n", "search_policy", ".", "_edge_len_threshold", ".", "numpy", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.train.eval_sp": [[196, 223], ["eval_tf_env.pyenv.envs[].gym.set_sample_goal_args", "time.clock", "range", "print", "print", "plan_util.fill_map", "search_policy._change_active_set", "range", "time.clock", "int", "time.clock", "plan_util.rollout_once", "search_policy._num_points.numpy", "time.clock", "search_policy._num_points.numpy", "search_policy._edge_len_threshold.numpy"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.set_sample_goal_args", "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.fill_map", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._change_active_set", "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.rollout_once"], ["", "def", "eval_sp", "(", "search_policy", ",", "eval_tf_env", ",", "num_map", ",", "num_task", ")", ":", "\n", "    ", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "_duration", "=", "400", "\n", "max_goal_dist", "=", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "max_goal_dist", "\n", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "set_sample_goal_args", "(", "\n", "prob_constraint", "=", "1.0", ",", "min_dist", "=", "max_goal_dist", "*", "0.9", ",", "max_dist", "=", "max_goal_dist", "*", "0.9", ")", "\n", "\n", "s", "=", "time", ".", "clock", "(", ")", "\n", "\n", "success", "=", "0", "\n", "total_time", "=", "0.0", "\n", "for", "_", "in", "range", "(", "num_map", ")", ":", "\n", "        ", "points", "=", "fill_map", "(", "eval_tf_env", ",", "int", "(", "search_policy", ".", "_num_points", ".", "numpy", "(", ")", ")", ")", "\n", "search_policy", ".", "_change_active_set", "(", "points", ")", "\n", "for", "_", "in", "range", "(", "num_task", ")", ":", "\n", "            ", "start", "=", "time", ".", "clock", "(", ")", "\n", "result", "=", "rollout_once", "(", "eval_tf_env", ",", "search_policy", ")", "\n", "rt", "=", "time", ".", "clock", "(", ")", "-", "start", "\n", "if", "result", "==", "'success'", ":", "\n", "                ", "success", "+=", "1", "\n", "total_time", "+=", "rt", "\n", "\n", "", "", "", "print", "(", "'num_points: %.1f, edge_len_th: %.1f, success_rate: %.2f, avg_time: %.1f'", "%", "(", "search_policy", ".", "_num_points", ".", "numpy", "(", ")", ",", "search_policy", ".", "_edge_len_threshold", ".", "numpy", "(", ")", ",", "success", "/", "(", "num_map", "*", "num_task", ")", ",", "total_time", "/", "success", ")", ")", "\n", "\n", "r", "=", "time", ".", "clock", "(", ")", "-", "s", "\n", "print", "(", "'rt: %d'", "%", "r", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.train.eval": [[224, 245], ["tensorflow.compat.v1.train.get_or_create_global_step", "tf_agents.metrics.tf_metrics.AverageReturnMetric", "tensorflow.compat.v1.logging.info", "eval_tf_env.pyenv.envs[].gym.set_sample_goal_args", "tf_agents.eval.metric_utils.eager_compute", "metric_utils.eager_compute.items", "range", "tensorflow.compat.v1.logging.info", "tensorflow.compat.v1.logging.info", "eval_tf_env.reset", "pred_dist.append", "value.numpy", "tf_agent._get_dist_to_goal", "dist_to_goal.numpy", "numpy.mean", "numpy.std"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.set_sample_goal_args", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.reset", "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_dist_to_goal"], ["", "def", "eval", "(", "eval_tf_env", ",", "tf_agent", ")", ":", "\n", "    ", "global_step", "=", "tf", ".", "compat", ".", "v1", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "eval_policy", "=", "tf_agent", ".", "policy", "\n", "num_eval_episodes", "=", "100", "\n", "eval_metrics", "=", "[", "tf_metrics", ".", "AverageReturnMetric", "(", "buffer_size", "=", "num_eval_episodes", ")", "]", "\n", "for", "dist", "in", "[", "2", ",", "5", ",", "10", "]", ":", "\n", "        ", "tf", ".", "compat", ".", "v1", ".", "logging", ".", "info", "(", "'\\t dist = %d'", "%", "dist", ")", "\n", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "set_sample_goal_args", "(", "\n", "prob_constraint", "=", "1.0", ",", "min_dist", "=", "dist", ",", "max_dist", "=", "dist", ")", "\n", "results", "=", "metric_utils", ".", "eager_compute", "(", "eval_metrics", ",", "eval_tf_env", ",", "eval_policy", ",", "\n", "num_episodes", "=", "num_eval_episodes", ",", "\n", "train_step", "=", "global_step", ",", "summary_prefix", "=", "'Metrics'", ")", "\n", "for", "(", "key", ",", "value", ")", "in", "results", ".", "items", "(", ")", ":", "\n", "            ", "tf", ".", "compat", ".", "v1", ".", "logging", ".", "info", "(", "'\\t\\t %s = %.2f'", ",", "key", ",", "value", ".", "numpy", "(", ")", ")", "\n", "", "pred_dist", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_eval_episodes", ")", ":", "\n", "            ", "ts", "=", "eval_tf_env", ".", "reset", "(", ")", "\n", "dist_to_goal", "=", "tf_agent", ".", "_get_dist_to_goal", "(", "ts", ")", "[", "0", "]", "\n", "pred_dist", ".", "append", "(", "dist_to_goal", ".", "numpy", "(", ")", ")", "\n", "", "tf", ".", "compat", ".", "v1", ".", "logging", ".", "info", "(", "'\\t\\t predicted_dist = %.1f (%.1f)'", "%", "\n", "(", "np", ".", "mean", "(", "pred_dist", ")", ",", "np", ".", "std", "(", "pred_dist", ")", ")", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.prepare_rollout": [[8, 16], ["eval_tf_env.pyenv.envs[].gym.set_sample_goal_args", "max"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.set_sample_goal_args"], ["def", "prepare_rollout", "(", "eval_tf_env", ")", ":", "\n", "    ", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "_duration", "=", "100", "\n", "difficulty", "=", "0.4", "\n", "max_goal_dist", "=", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "max_goal_dist", "\n", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "set_sample_goal_args", "(", "\n", "prob_constraint", "=", "1.0", ",", "\n", "min_dist", "=", "max", "(", "0", ",", "max_goal_dist", "*", "(", "difficulty", "-", "0.05", ")", ")", ",", "\n", "max_dist", "=", "max_goal_dist", "*", "(", "difficulty", "+", "0.05", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.plot_rollouts": [[17, 36], ["matplotlib.figure", "range", "matplotlib.show", "matplotlib.subplot", "env.plot_walls", "plan_util.get_rollout", "plan_util.change_axis", "plan_util.change_axis", "matplotlib.plot", "matplotlib.scatter", "matplotlib.scatter", "matplotlib.scatter", "matplotlib.legend"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.plot_walls", "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.get_rollout", "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.change_axis", "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.change_axis"], ["", "def", "plot_rollouts", "(", "eval_tf_env", ",", "agent", ")", ":", "\n", "    ", "plt", ".", "figure", "(", "figsize", "=", "(", "6", ",", "6", ")", ")", "\n", "for", "col_index", "in", "range", "(", "1", ")", ":", "\n", "        ", "plt", ".", "subplot", "(", "1", ",", "1", ",", "col_index", "+", "1", ")", "\n", "plot_walls", "(", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "env", ".", "walls", ")", "\n", "obs_vec", ",", "goal", ",", "_", "=", "get_rollout", "(", "eval_tf_env", ",", "agent", ".", "policy", ")", "\n", "obs_vec", "=", "change_axis", "(", "obs_vec", ")", "\n", "goal", "=", "change_axis", "(", "goal", ")", "\n", "\n", "plt", ".", "plot", "(", "obs_vec", "[", ":", ",", "0", "]", ",", "obs_vec", "[", ":", ",", "1", "]", ",", "'b-o'", ",", "alpha", "=", "0.3", ")", "\n", "plt", ".", "scatter", "(", "[", "obs_vec", "[", "0", ",", "0", "]", "]", ",", "[", "obs_vec", "[", "0", ",", "1", "]", "]", ",", "marker", "=", "'+'", ",", "\n", "color", "=", "'red'", ",", "s", "=", "200", ",", "label", "=", "'start'", ")", "\n", "plt", ".", "scatter", "(", "[", "obs_vec", "[", "-", "1", ",", "0", "]", "]", ",", "[", "obs_vec", "[", "-", "1", ",", "1", "]", "]", ",", "marker", "=", "'+'", ",", "\n", "color", "=", "'green'", ",", "s", "=", "200", ",", "label", "=", "'end'", ")", "\n", "plt", ".", "scatter", "(", "[", "goal", "[", "0", "]", "]", ",", "[", "goal", "[", "1", "]", "]", ",", "marker", "=", "'*'", ",", "\n", "color", "=", "'green'", ",", "s", "=", "200", ",", "label", "=", "'goal'", ")", "\n", "if", "col_index", "==", "0", ":", "\n", "            ", "plt", ".", "legend", "(", "loc", "=", "'lower left'", ",", "bbox_to_anchor", "=", "(", "0.0", ",", "1", ")", ",", "ncol", "=", "3", ",", "fontsize", "=", "16", ")", "\n", "", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.get_rollout": [[37, 54], ["numpy.random.seed", "tf_env.reset", "range", "np.array.append", "numpy.array", "numpy.array", "tf_env.step.observation[].numpy", "np.array.append", "policy.action", "np.array.append", "tf_env.step", "tf_env.step.is_last", "tf_env.step.observation[].numpy", "tf_env.step.observation[].numpy", "tf_env.step.observation[].numpy"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.reset", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.step"], ["", "def", "get_rollout", "(", "tf_env", ",", "policy", ",", "seed", "=", "None", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "obs_vec", "=", "[", "]", "\n", "waypoint_vec", "=", "[", "]", "\n", "ts", "=", "tf_env", ".", "reset", "(", ")", "\n", "goal", "=", "ts", ".", "observation", "[", "'goal'", "]", ".", "numpy", "(", ")", "[", "0", "]", "\n", "for", "_", "in", "range", "(", "tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "_duration", ")", ":", "\n", "        ", "obs_vec", ".", "append", "(", "ts", ".", "observation", "[", "'observation'", "]", ".", "numpy", "(", ")", "[", "0", "]", ")", "\n", "action", "=", "policy", ".", "action", "(", "ts", ")", "\n", "waypoint_vec", ".", "append", "(", "ts", ".", "observation", "[", "'goal'", "]", ".", "numpy", "(", ")", "[", "0", "]", ")", "# \u6682\u65f6\u4e0d\u7528", "\n", "ts", "=", "tf_env", ".", "step", "(", "action", ")", "\n", "if", "ts", ".", "is_last", "(", ")", ":", "\n", "            ", "break", "\n", "", "", "obs_vec", ".", "append", "(", "ts", ".", "observation", "[", "'observation'", "]", ".", "numpy", "(", ")", "[", "0", "]", ")", "\n", "obs_vec", "=", "np", ".", "array", "(", "obs_vec", ")", "\n", "waypoint_vec", "=", "np", ".", "array", "(", "waypoint_vec", ")", "\n", "return", "obs_vec", ",", "goal", ",", "waypoint_vec", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.fill_map": [[55, 64], ["eval_tf_env.pyenv.envs[].gym.set_sample_goal_args", "range", "numpy.array", "eval_tf_env.reset", "np.array.append", "eval_tf_env.reset.observation[].numpy"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.set_sample_goal_args", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.reset"], ["", "def", "fill_map", "(", "eval_tf_env", ",", "amount", ")", ":", "\n", "    ", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "set_sample_goal_args", "(", "\n", "prob_constraint", "=", "0.0", ",", "min_dist", "=", "0", ",", "max_dist", "=", "np", ".", "inf", ")", "\n", "points", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "amount", ")", ":", "\n", "        ", "ts", "=", "eval_tf_env", ".", "reset", "(", ")", "\n", "points", ".", "append", "(", "ts", ".", "observation", "[", "'observation'", "]", ".", "numpy", "(", ")", "[", "0", "]", ")", "\n", "", "points", "=", "np", ".", "array", "(", "points", ")", "\n", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.plot_map": [[65, 71], ["plan_util.change_axis", "matplotlib.figure", "env.plot_walls", "matplotlib.scatter", "matplotlib.show"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.change_axis", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.plot_walls"], ["", "def", "plot_map", "(", "points", ",", "eval_tf_env", ")", ":", "\n", "    ", "points", "=", "change_axis", "(", "points", ")", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "6", ",", "6", ")", ")", "\n", "plot_walls", "(", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "env", ".", "walls", ")", "\n", "plt", ".", "scatter", "(", "*", "points", ".", "T", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.change_axis": [[72, 81], ["numpy.zeros_like", "len"], "function", ["None"], ["", "def", "change_axis", "(", "points", ")", ":", "\n", "    ", "changed_points", "=", "np", ".", "zeros_like", "(", "points", ")", "\n", "if", "len", "(", "points", ".", "shape", ")", "==", "1", ":", "\n", "        ", "changed_points", "[", "1", "]", "=", "1", "-", "points", "[", "0", "]", "\n", "changed_points", "[", "0", "]", "=", "points", "[", "1", "]", "\n", "", "else", ":", "\n", "        ", "changed_points", "[", ":", ",", "0", "]", "=", "points", "[", ":", ",", "1", "]", "\n", "changed_points", "[", ":", ",", "1", "]", "=", "1", "-", "points", "[", ":", ",", "0", "]", "\n", "", "return", "changed_points", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.plot_pd": [[82, 89], ["matplotlib.figure", "matplotlib.hist", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.show", "pdist.flatten", "range"], "function", ["None"], ["", "def", "plot_pd", "(", "pdist", ")", ":", "\n", "    ", "plt", ".", "figure", "(", "figsize", "=", "(", "6", ",", "3", ")", ")", "\n", "pdist", "[", "pdist", ">", "20", "]", "=", "20", "\n", "plt", ".", "hist", "(", "pdist", ".", "flatten", "(", ")", ",", "bins", "=", "range", "(", "21", ")", ")", "\n", "plt", ".", "xlabel", "(", "'predicted distance'", ")", "\n", "plt", ".", "ylabel", "(", "'number of (s, g) pairs'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.plot_construct_graph": [[90, 103], ["plan_util.change_axis", "matplotlib.figure", "env.plot_walls", "matplotlib.scatter", "enumerate", "matplotlib.show", "enumerate", "numpy.argsort", "matplotlib.plot"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.change_axis", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.plot_walls"], ["", "def", "plot_construct_graph", "(", "eval_tf_env", ",", "pdist", ",", "points", ")", ":", "\n", "    ", "points", "=", "change_axis", "(", "points", ")", "\n", "cutoff", "=", "5", "\n", "edges_to_display", "=", "8", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "6", ",", "6", ")", ")", "\n", "plot_walls", "(", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "env", ".", "walls", ")", "\n", "plt", ".", "scatter", "(", "*", "points", ".", "T", ")", "\n", "for", "i", ",", "s_i", "in", "enumerate", "(", "points", ")", ":", "\n", "        ", "for", "count", ",", "j", "in", "enumerate", "(", "np", ".", "argsort", "(", "pdist", "[", "i", "]", ")", ")", ":", "\n", "            ", "if", "count", "<", "edges_to_display", "and", "pdist", "[", "i", ",", "j", "]", "<", "cutoff", ":", "\n", "                ", "s_j", "=", "points", "[", "j", "]", "\n", "plt", ".", "plot", "(", "[", "s_i", "[", "0", "]", ",", "s_j", "[", "0", "]", "]", ",", "[", "s_i", "[", "1", "]", ",", "s_j", "[", "1", "]", "]", ",", "c", "=", "'k'", ",", "alpha", "=", "0.5", ")", "\n", "", "", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.compute_pairwise_distance": [[104, 107], ["agent._get_pairwise_dist().numpy", "agent._get_pairwise_dist"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_pairwise_dist"], ["", "def", "compute_pairwise_distance", "(", "agent", ",", "points", ")", ":", "\n", "    ", "pairwise_distance", "=", "agent", ".", "_get_pairwise_dist", "(", "points", ",", "aggregate", "=", "'min'", ")", ".", "numpy", "(", ")", "\n", "return", "pairwise_distance", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.plot_search_path": [[108, 136], ["eval_tf_env.pyenv.envs[].gym.set_sample_goal_args", "eval_tf_env.reset", "search_policy.action", "matplotlib.figure", "env.plot_walls", "np.array.append", "numpy.array", "matplotlib.scatter", "matplotlib.scatter", "matplotlib.plot", "matplotlib.legend", "matplotlib.show", "eval_tf_env.reset.observation[].numpy", "eval_tf_env.reset.observation[].numpy", "np.array.append", "max"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.set_sample_goal_args", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.reset", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.plot_walls"], ["", "def", "plot_search_path", "(", "eval_tf_env", ",", "search_policy", ")", ":", "\n", "    ", "difficulty", "=", "0.4", "#@param {min:0, max: 1, step: 0.1, type:\"slider\"}", "\n", "max_goal_dist", "=", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "max_goal_dist", "\n", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "set_sample_goal_args", "(", "\n", "prob_constraint", "=", "1.0", ",", "\n", "min_dist", "=", "max", "(", "0", ",", "max_goal_dist", "*", "(", "difficulty", "-", "0.05", ")", ")", ",", "\n", "max_dist", "=", "max_goal_dist", "*", "(", "difficulty", "+", "0.05", ")", ")", "\n", "ts", "=", "eval_tf_env", ".", "reset", "(", ")", "\n", "start", "=", "ts", ".", "observation", "[", "'observation'", "]", ".", "numpy", "(", ")", "[", "0", "]", "\n", "goal", "=", "ts", ".", "observation", "[", "'goal'", "]", ".", "numpy", "(", ")", "[", "0", "]", "\n", "search_policy", ".", "action", "(", "ts", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "6", ",", "6", ")", ")", "\n", "plot_walls", "(", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "env", ".", "walls", ")", "\n", "\n", "waypoint_vec", "=", "[", "start", "]", "\n", "for", "waypoint_index", "in", "search_policy", ".", "_waypoint_indexes", ":", "\n", "        ", "waypoint_vec", ".", "append", "(", "search_policy", ".", "_active_set", "[", "waypoint_index", "]", ")", "\n", "", "waypoint_vec", ".", "append", "(", "goal", ")", "\n", "waypoint_vec", "=", "np", ".", "array", "(", "waypoint_vec", ")", "\n", "\n", "plt", ".", "scatter", "(", "[", "start", "[", "0", "]", "]", ",", "[", "start", "[", "1", "]", "]", ",", "marker", "=", "'+'", ",", "\n", "color", "=", "'red'", ",", "s", "=", "200", ",", "label", "=", "'start'", ")", "\n", "plt", ".", "scatter", "(", "[", "goal", "[", "0", "]", "]", ",", "[", "goal", "[", "1", "]", "]", ",", "marker", "=", "'*'", ",", "\n", "color", "=", "'green'", ",", "s", "=", "200", ",", "label", "=", "'goal'", ")", "\n", "plt", ".", "plot", "(", "waypoint_vec", "[", ":", ",", "0", "]", ",", "waypoint_vec", "[", ":", ",", "1", "]", ",", "'y-s'", ",", "alpha", "=", "0.3", ",", "label", "=", "'waypoint'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'lower left'", ",", "bbox_to_anchor", "=", "(", "-", "0.1", ",", "-", "0.15", ")", ",", "ncol", "=", "4", ",", "fontsize", "=", "16", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.rollout_once": [[137, 181], ["eval_tf_env.reset", "range", "eval_tf_env.step.observation[].numpy", "eval_tf_env.step.observation[].numpy", "eval_tf_env.step.is_last", "eval_tf_env.step", "numpy.array", "plan_util.change_axis", "plan_util.change_axis", "matplotlib.figure", "env.plot_walls", "matplotlib.plot", "matplotlib.scatter", "matplotlib.scatter", "matplotlib.scatter", "change_axis.append", "numpy.array", "plan_util.change_axis", "matplotlib.plot", "matplotlib.legend", "matplotlib.show", "change_axis.append", "search_policy.action", "change_axis.append", "eval_tf_env.step.observation[].numpy"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.reset", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.step", "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.change_axis", "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.change_axis", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.plot_walls", "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.change_axis"], ["", "def", "rollout_once", "(", "eval_tf_env", ",", "search_policy", ")", ":", "\n", "    ", "ts", "=", "eval_tf_env", ".", "reset", "(", ")", "\n", "goal", "=", "ts", ".", "observation", "[", "'goal'", "]", ".", "numpy", "(", ")", "[", "0", "]", "\n", "start", "=", "ts", ".", "observation", "[", "'observation'", "]", ".", "numpy", "(", ")", "[", "0", "]", "\n", "if", "render", ":", "\n", "        ", "obs_vec", "=", "[", "]", "#", "\n", "", "for", "_", "in", "range", "(", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "_duration", ")", ":", "\n", "        ", "if", "ts", ".", "is_last", "(", ")", ":", "\n", "            ", "return", "'success'", "\n", "", "if", "render", ":", "\n", "            ", "obs_vec", ".", "append", "(", "ts", ".", "observation", "[", "'observation'", "]", ".", "numpy", "(", ")", "[", "0", "]", ")", "#", "\n", "", "try", ":", "\n", "            ", "action", "=", "search_policy", ".", "action", "(", "ts", ")", "\n", "", "except", ":", "\n", "# raise", "\n", "            ", "return", "'no way'", "\n", "", "ts", "=", "eval_tf_env", ".", "step", "(", "action", ")", "\n", "#", "\n", "", "if", "render", ":", "\n", "        ", "obs_vec", "=", "np", ".", "array", "(", "obs_vec", ")", "\n", "obs_vec", "=", "change_axis", "(", "obs_vec", ")", "\n", "changed_goal", "=", "change_axis", "(", "goal", ")", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "6", ",", "6", ")", ")", "\n", "plot_walls", "(", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "env", ".", "walls", ")", "\n", "plt", ".", "plot", "(", "obs_vec", "[", ":", ",", "0", "]", ",", "obs_vec", "[", ":", ",", "1", "]", ",", "'b-o'", ",", "alpha", "=", "0.3", ")", "\n", "plt", ".", "scatter", "(", "[", "obs_vec", "[", "0", ",", "0", "]", "]", ",", "[", "obs_vec", "[", "0", ",", "1", "]", "]", ",", "marker", "=", "'+'", ",", "\n", "color", "=", "'red'", ",", "s", "=", "200", ",", "label", "=", "'start'", ")", "\n", "plt", ".", "scatter", "(", "[", "obs_vec", "[", "-", "1", ",", "0", "]", "]", ",", "[", "obs_vec", "[", "-", "1", ",", "1", "]", "]", ",", "marker", "=", "'+'", ",", "\n", "color", "=", "'green'", ",", "s", "=", "200", ",", "label", "=", "'end'", ")", "\n", "plt", ".", "scatter", "(", "[", "changed_goal", "[", "0", "]", "]", ",", "[", "changed_goal", "[", "1", "]", "]", ",", "marker", "=", "'*'", ",", "\n", "color", "=", "'green'", ",", "s", "=", "200", ",", "label", "=", "'goal'", ")", "\n", "\n", "waypoint_vec", "=", "[", "start", "]", "\n", "for", "waypoint_index", "in", "search_policy", ".", "_waypoint_indexes", ":", "\n", "            ", "waypoint_vec", ".", "append", "(", "search_policy", ".", "_active_set", "[", "waypoint_index", "]", ")", "\n", "", "waypoint_vec", ".", "append", "(", "goal", ")", "\n", "waypoint_vec", "=", "np", ".", "array", "(", "waypoint_vec", ")", "\n", "waypoint_vec", "=", "change_axis", "(", "waypoint_vec", ")", "\n", "\n", "plt", ".", "plot", "(", "waypoint_vec", "[", ":", ",", "0", "]", ",", "waypoint_vec", "[", ":", ",", "1", "]", ",", "'y-s'", ",", "alpha", "=", "0.3", ",", "label", "=", "'waypoint'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'lower center'", ",", "bbox_to_anchor", "=", "(", "0", ",", "-", "0.2", ")", ",", "ncol", "=", "2", ",", "fontsize", "=", "16", ")", "\n", "plt", ".", "show", "(", ")", "\n", "#", "\n", "", "return", "'cannot reach'", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.rollout_with_search": [[182, 236], ["numpy.random.randint", "eval_tf_env.pyenv.envs[].gym.set_sample_goal_args", "matplotlib.figure", "range", "matplotlib.show", "numpy.random.seed", "eval_tf_env.reset", "range", "numpy.array", "plan_util.change_axis", "plan_util.change_axis", "matplotlib.subplot", "env.plot_walls", "matplotlib.plot", "matplotlib.scatter", "matplotlib.scatter", "matplotlib.scatter", "matplotlib.title", "max", "eval_tf_env.step.observation[].numpy", "eval_tf_env.step.observation[].numpy", "eval_tf_env.step.is_last", "change_axis.append", "eval_tf_env.step", "change_axis.append", "numpy.array", "plan_util.change_axis", "matplotlib.plot", "matplotlib.legend", "search_policy.action", "search_policy._agent.policy.action", "change_axis.append", "eval_tf_env.step.observation[].numpy"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.set_sample_goal_args", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.reset", "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.change_axis", "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.change_axis", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.plot_walls", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.step", "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.change_axis"], ["", "def", "rollout_with_search", "(", "eval_tf_env", ",", "search_policy", ")", ":", "\n", "    ", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "_duration", "=", "300", "\n", "seed", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "1000000", ")", "\n", "difficulty", "=", "0.9", "\n", "max_goal_dist", "=", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "max_goal_dist", "\n", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "set_sample_goal_args", "(", "\n", "prob_constraint", "=", "1.0", ",", "min_dist", "=", "max", "(", "0", ",", "max_goal_dist", "*", "(", "difficulty", "-", "0.05", ")", ")", ",", "\n", "max_dist", "=", "max_goal_dist", "*", "(", "difficulty", "+", "0.05", ")", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "12", ",", "5", ")", ")", "\n", "\n", "for", "col_index", "in", "range", "(", "2", ")", ":", "\n", "        ", "use_search", "=", "(", "col_index", "==", "1", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "ts", "=", "eval_tf_env", ".", "reset", "(", ")", "\n", "goal", "=", "ts", ".", "observation", "[", "'goal'", "]", ".", "numpy", "(", ")", "[", "0", "]", "\n", "start", "=", "ts", ".", "observation", "[", "'observation'", "]", ".", "numpy", "(", ")", "[", "0", "]", "\n", "obs_vec", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "_duration", ")", ":", "\n", "            ", "if", "ts", ".", "is_last", "(", ")", ":", "\n", "                ", "break", "\n", "", "obs_vec", ".", "append", "(", "ts", ".", "observation", "[", "'observation'", "]", ".", "numpy", "(", ")", "[", "0", "]", ")", "\n", "if", "use_search", ":", "\n", "                ", "action", "=", "search_policy", ".", "action", "(", "ts", ")", "\n", "", "else", ":", "\n", "                ", "action", "=", "search_policy", ".", "_agent", ".", "policy", ".", "action", "(", "ts", ")", "\n", "", "ts", "=", "eval_tf_env", ".", "step", "(", "action", ")", "\n", "", "obs_vec", "=", "np", ".", "array", "(", "obs_vec", ")", "\n", "obs_vec", "=", "change_axis", "(", "obs_vec", ")", "\n", "changed_goal", "=", "change_axis", "(", "goal", ")", "\n", "\n", "title", "=", "'no search'", "if", "col_index", "==", "0", "else", "'search'", "\n", "plt", ".", "subplot", "(", "1", ",", "2", ",", "col_index", "+", "1", ")", "\n", "plot_walls", "(", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "env", ".", "walls", ")", "\n", "plt", ".", "plot", "(", "obs_vec", "[", ":", ",", "0", "]", ",", "obs_vec", "[", ":", ",", "1", "]", ",", "'b-o'", ",", "alpha", "=", "0.3", ")", "\n", "plt", ".", "scatter", "(", "[", "obs_vec", "[", "0", ",", "0", "]", "]", ",", "[", "obs_vec", "[", "0", ",", "1", "]", "]", ",", "\n", "marker", "=", "'+'", ",", "color", "=", "'red'", ",", "s", "=", "200", ",", "label", "=", "'start'", ")", "\n", "plt", ".", "scatter", "(", "[", "obs_vec", "[", "-", "1", ",", "0", "]", "]", ",", "[", "obs_vec", "[", "-", "1", ",", "1", "]", "]", ",", "\n", "marker", "=", "'+'", ",", "color", "=", "'green'", ",", "s", "=", "200", ",", "label", "=", "'end'", ")", "\n", "plt", ".", "scatter", "(", "[", "changed_goal", "[", "0", "]", "]", ",", "[", "changed_goal", "[", "1", "]", "]", ",", "\n", "marker", "=", "'*'", ",", "color", "=", "'green'", ",", "s", "=", "200", ",", "label", "=", "'goal'", ")", "\n", "\n", "plt", ".", "title", "(", "title", ",", "fontsize", "=", "24", ")", "\n", "if", "use_search", "and", "search_policy", ".", "_open_loop", "==", "True", ":", "\n", "            ", "waypoint_vec", "=", "[", "start", "]", "\n", "for", "waypoint_index", "in", "search_policy", ".", "_waypoint_indexes", ":", "\n", "                ", "waypoint_vec", ".", "append", "(", "search_policy", ".", "_active_set", "[", "waypoint_index", "]", ")", "\n", "", "waypoint_vec", ".", "append", "(", "goal", ")", "\n", "waypoint_vec", "=", "np", ".", "array", "(", "waypoint_vec", ")", "\n", "waypoint_vec", "=", "change_axis", "(", "waypoint_vec", ")", "\n", "\n", "plt", ".", "plot", "(", "waypoint_vec", "[", ":", ",", "0", "]", ",", "waypoint_vec", "[", ":", ",", "1", "]", ",", "'y-s'", ",", "alpha", "=", "0.3", ",", "label", "=", "'waypoint'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'lower left'", ",", "bbox_to_anchor", "=", "(", "-", "0.8", ",", "-", "0.15", ")", ",", "ncol", "=", "4", ",", "fontsize", "=", "16", ")", "\n", "", "", "plt", ".", "show", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.test.main": [[1, 5], ["print"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "    ", "a", "=", "1", "\n", "b", "=", "2", "\n", "print", "(", "'%d,%d'", "%", "(", "a", ",", "b", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy.__init__": [[11, 34], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "search_policy.SearchPolicy._standard_learn_param", "search_policy.SearchPolicy.load_model", "plan_util.fill_map", "search_policy.SearchPolicy._change_active_set", "tf_agents.policies.tf_policy.Base.__init__", "int", "search_policy.SearchPolicy._num_points.numpy"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._standard_learn_param", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy.load_model", "home.repos.pwc.inspect_result.chenxuerun_APS.None.plan_util.fill_map", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._change_active_set", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.NonTerminatingTimeLimit.__init__"], ["    ", "def", "__init__", "(", "self", ",", "agent", ",", "eval_tf_env", ",", "model_path", "=", "None", ",", "num_points", "=", "1000", ",", "\n", "open_loop", "=", "False", ",", "edge_len_threshold", "=", "5.0", ",", "threshold_dist", "=", "3.0", ")", ":", "\n", "        ", "self", ".", "_agent", "=", "agent", "\n", "self", ".", "_eval_tf_env", "=", "eval_tf_env", "\n", "self", ".", "_open_loop", "=", "open_loop", "\n", "self", ".", "_combine_ensemble_method", "=", "'min'", "\n", "# \u5c0f\u4e8e\u503c\u8ba4\u4e3a\u5230\u8fbewaypoint\uff0c\u5982\u679c\u592a\u5c0f\uff0c\u7531\u4e8eQ\u4e2d\u5fc3\u5f88\u5927\uff0c\u4f1a\u5bfc\u81f4waypoint\u4e0d\u53d8", "\n", "self", ".", "_threshold_dist", "=", "threshold_dist", "\n", "\n", "self", ".", "_train_iter", "=", "tf", ".", "Variable", "(", "0", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "self", ".", "_edge_len_threshold", "=", "tf", ".", "Variable", "(", "edge_len_threshold", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "_num_points", "=", "tf", ".", "Variable", "(", "num_points", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "self", ".", "_standard_learn_param", "(", ")", "\n", "self", ".", "_learn", "=", "True", "\n", "\n", "mix_dict", "=", "self", ".", "model_variable", "\n", "self", ".", "load_model", "(", "model_path", ",", "mix_dict", ")", "\n", "\n", "points", "=", "fill_map", "(", "eval_tf_env", ",", "int", "(", "self", ".", "_num_points", ".", "numpy", "(", ")", ")", ")", "\n", "self", ".", "_change_active_set", "(", "points", ")", "\n", "super", "(", "SearchPolicy", ",", "self", ")", ".", "__init__", "(", "\n", "agent", ".", "policy", ".", "time_step_spec", ",", "agent", ".", "policy", ".", "action_spec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._standard_learn_param": [[35, 49], ["None"], "methods", ["None"], ["", "def", "_standard_learn_param", "(", "self", ")", ":", "\n", "        ", "self", ".", "_rho", "=", "2", "# \u6a21\u5f0f\u641c\u7d22\u4e58\u6570", "\n", "self", ".", "_delta_edge_len_threshold", "=", "0.1", "\n", "self", ".", "_k1", "=", "1", "\n", "self", ".", "_c1", "=", "4", "\n", "self", ".", "_n1", "=", "3", "\n", "self", ".", "_i", "=", "3.0", "\n", "self", ".", "_k2", "=", "1", "\n", "self", ".", "_c2", "=", "4", "\n", "self", ".", "_n2", "=", "3", "\n", "self", ".", "_d", "=", "1.0", "\n", "self", ".", "_tth", "=", "0.1", "\n", "self", ".", "_gamma", "=", "0.9", "\n", "self", ".", "_cth", "=", "0.05", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._learn_param": [[50, 62], ["None"], "methods", ["None"], ["", "def", "_learn_param", "(", "self", ")", ":", "\n", "        ", "self", ".", "_rou", "=", "2", "# \u6a21\u5f0f\u641c\u7d22\u4e58\u6570", "\n", "self", ".", "_delta_edge_len_threshold", "=", "0.1", "\n", "self", ".", "_k1", "=", "1", "\n", "self", ".", "_ps1", "=", "0", "\n", "self", ".", "_delta_num_points_increase", "=", "10.0", "\n", "self", ".", "_k2", "=", "1", "\n", "self", ".", "_ps2", "=", "0", "\n", "self", ".", "_delta_num_points_decrease", "=", "0.1", "\n", "self", ".", "_end_threshold", "=", "0.05", "\n", "self", ".", "_gamma", "=", "1.0", "\n", "self", ".", "_change_threshold", "=", "0.05", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy.load_model": [[63, 71], ["tensorflow.train.Checkpoint", "tensorflow.train.CheckpointManager", "search_policy.SearchPolicy._ckpt.restore", "print"], "methods", ["None"], ["", "def", "load_model", "(", "self", ",", "path", ",", "model_variable", ")", ":", "\n", "        ", "self", ".", "_manager", "=", "None", "\n", "if", "path", ":", "\n", "            ", "self", ".", "_ckpt", "=", "tf", ".", "train", ".", "Checkpoint", "(", "**", "model_variable", ")", "\n", "self", ".", "_manager", "=", "tf", ".", "train", ".", "CheckpointManager", "(", "self", ".", "_ckpt", ",", "path", ",", "max_to_keep", "=", "1", ")", "\n", "self", ".", "_ckpt", ".", "restore", "(", "self", ".", "_manager", ".", "latest_checkpoint", ")", "\n", "if", "self", ".", "_manager", ".", "latest_checkpoint", ":", "\n", "                ", "print", "(", "\"load sp,  {}.\"", ".", "format", "(", "self", ".", "_manager", ".", "latest_checkpoint", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy.save_model": [[72, 76], ["search_policy.SearchPolicy._manager.save", "print", "int"], "methods", ["None"], ["", "", "", "def", "save_model", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_manager", ":", "\n", "            ", "save_path", "=", "self", ".", "_manager", ".", "save", "(", ")", "\n", "print", "(", "\"save sp,  iter {}: {}\"", ".", "format", "(", "int", "(", "self", ".", "_ckpt", ".", "train_iter", ")", ",", "save_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy.model_variable": [[77, 84], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "model_variable", "(", "self", ")", ":", "\n", "        ", "mix_dict", "=", "{", "}", "\n", "mix_dict", "[", "'train_iter'", "]", "=", "self", ".", "_train_iter", "\n", "mix_dict", "[", "'edge_len_threshold'", "]", "=", "self", ".", "_edge_len_threshold", "\n", "mix_dict", "[", "'num_points'", "]", "=", "self", ".", "_num_points", "\n", "return", "mix_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._build_graph": [[85, 93], ["networkx.DiGraph", "enumerate", "enumerate", "networkx.DiGraph.add_edge"], "methods", ["None"], ["", "def", "_build_graph", "(", "self", ")", ":", "\n", "        ", "g", "=", "nx", ".", "DiGraph", "(", ")", "\n", "for", "i", ",", "s_i", "in", "enumerate", "(", "self", ".", "_active_set", ")", ":", "\n", "            ", "for", "j", ",", "s_j", "in", "enumerate", "(", "self", ".", "_active_set", ")", ":", "\n", "                ", "length", "=", "self", ".", "_pairwise_dist", "[", "i", ",", "j", "]", "\n", "if", "length", "<", "self", ".", "_edge_len_threshold", ":", "\n", "                    ", "g", ".", "add_edge", "(", "i", ",", "j", ",", "weight", "=", "length", ")", "\n", "", "", "", "self", ".", "_graph", "=", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._change_active_set": [[94, 105], ["search_policy.SearchPolicy._agent._get_pairwise_dist", "search_policy.SearchPolicy._mask", "scipy.sparse.csgraph.floyd_warshall", "way_dist.astype.astype.astype", "search_policy.SearchPolicy._build_graph"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_pairwise_dist", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._mask", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._build_graph"], ["", "def", "_change_active_set", "(", "self", ",", "points", ")", ":", "\n", "        ", "pairwise_dist", "=", "self", ".", "_agent", ".", "_get_pairwise_dist", "(", "\n", "points", ",", "aggregate", "=", "self", ".", "_combine_ensemble_method", ")", "\n", "pairwise_dist", "=", "self", ".", "_mask", "(", "pairwise_dist", ")", "\n", "way_dist", "=", "scipy", ".", "sparse", ".", "csgraph", ".", "floyd_warshall", "(", "pairwise_dist", ",", "directed", "=", "True", ")", "\n", "way_dist", "=", "way_dist", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "self", ".", "_active_set", "=", "points", "\n", "self", ".", "_pairwise_dist", "=", "pairwise_dist", "\n", "self", ".", "_way_dist", "=", "way_dist", "\n", "self", ".", "_build_graph", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._mask": [[106, 109], ["tensorflow.compat.v1.where", "tensorflow.fill"], "methods", ["None"], ["", "def", "_mask", "(", "self", ",", "pairwise_dist", ")", ":", "\n", "        ", "mask", "=", "(", "pairwise_dist", ">", "self", ".", "_edge_len_threshold", ")", "\n", "return", "tf", ".", "compat", ".", "v1", ".", "where", "(", "mask", ",", "tf", ".", "fill", "(", "pairwise_dist", ".", "shape", ",", "np", ".", "inf", ")", ",", "pairwise_dist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._get_waypoint": [[110, 134], ["search_policy.SearchPolicy._agent._get_pairwise_dist", "search_policy.SearchPolicy._mask", "search_policy.SearchPolicy._agent._get_pairwise_dist", "search_policy.SearchPolicy._mask", "sum", "tensorflow.reduce_min", "tensorflow.argmin", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.reduce_min"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_pairwise_dist", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._mask", "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_pairwise_dist", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._mask"], ["", "def", "_get_waypoint", "(", "self", ",", "time_step", ")", ":", "\n", "        ", "obs_tensor", "=", "time_step", ".", "observation", "[", "'observation'", "]", "\n", "goal_tensor", "=", "time_step", ".", "observation", "[", "'goal'", "]", "\n", "obs_to_active_set_dist", "=", "self", ".", "_agent", ".", "_get_pairwise_dist", "(", "\n", "obs_tensor", ",", "self", ".", "_active_set", ",", "aggregate", "=", "self", ".", "_combine_ensemble_method", ")", "# B x A", "\n", "obs_to_active_set_dist", "=", "self", ".", "_mask", "(", "obs_to_active_set_dist", ")", "\n", "active_set_to_goal_dist", "=", "self", ".", "_agent", ".", "_get_pairwise_dist", "(", "\n", "self", ".", "_active_set", ",", "goal_tensor", ",", "aggregate", "=", "self", ".", "_combine_ensemble_method", ")", "# A x B", "\n", "active_set_to_goal_dist", "=", "self", ".", "_mask", "(", "active_set_to_goal_dist", ")", "\n", "\n", "# The search_dist tensor should be (B x A x A)", "\n", "search_dist", "=", "sum", "(", "[", "\n", "tf", ".", "expand_dims", "(", "obs_to_active_set_dist", ",", "2", ")", ",", "\n", "tf", ".", "expand_dims", "(", "self", ".", "_way_dist", ",", "0", ")", ",", "\n", "tf", ".", "expand_dims", "(", "tf", ".", "transpose", "(", "a", "=", "active_set_to_goal_dist", ")", ",", "axis", "=", "1", ")", "]", ")", "\n", "\n", "# We assume a batch size of 1.", "\n", "assert", "obs_tensor", ".", "shape", "[", "0", "]", "==", "1", "\n", "min_search_dist", "=", "tf", ".", "reduce_min", "(", "input_tensor", "=", "search_dist", ",", "axis", "=", "[", "1", ",", "2", "]", ")", "[", "0", "]", "\n", "waypoint_index", "=", "tf", ".", "argmin", "(", "\n", "input", "=", "tf", ".", "reduce_min", "(", "input_tensor", "=", "search_dist", ",", "axis", "=", "[", "2", "]", ")", ",", "axis", "=", "1", ")", "[", "0", "]", "\n", "waypoint", "=", "self", ".", "_active_set", "[", "waypoint_index", "]", "\n", "\n", "return", "waypoint", ",", "min_search_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._action": [[135, 173], ["[].numpy", "search_policy.SearchPolicy._agent.policy.action", "time_step.is_first", "[].numpy", "util.outer_dist", "search_policy.SearchPolicy._get_waypoint", "dist_to_goal_via_wypt.numpy.numpy.numpy", "tensorflow.convert_to_tensor", "search_policy.SearchPolicy._get_path", "min", "[].numpy", "search_policy.SearchPolicy._agent._get_dist_to_goal", "search_policy.SearchPolicy._agent._get_dist_to_goal", "len", "search_policy.SearchPolicy._agent._get_dist_to_goal"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.util.outer_dist", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._get_waypoint", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._get_path", "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_dist_to_goal", "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_dist_to_goal", "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_dist_to_goal"], ["", "def", "_action", "(", "self", ",", "time_step", ",", "policy_state", "=", "(", ")", ",", "seed", "=", "None", ")", ":", "\n", "        ", "goal", "=", "time_step", ".", "observation", "[", "'goal'", "]", "\n", "dist_to_goal", "=", "self", ".", "_agent", ".", "_get_dist_to_goal", "(", "time_step", ")", "[", "0", "]", ".", "numpy", "(", ")", "\n", "\n", "if", "self", ".", "_open_loop", ":", "\n", "            ", "if", "time_step", ".", "is_first", "(", ")", ":", "\n", "                ", "self", ".", "_waypoint_indexes", ",", "self", ".", "_waypoint_to_goal_dists", "=", "self", ".", "_get_path", "(", "time_step", ")", "\n", "self", ".", "_waypoint_counter", "=", "0", "\n", "", "waypoint", "=", "self", ".", "_active_set", "[", "self", ".", "_waypoint_indexes", "[", "self", ".", "_waypoint_counter", "]", "]", "\n", "time_step", ".", "observation", "[", "'goal'", "]", "=", "waypoint", "[", "None", "]", "\n", "\n", "dist_to_waypoint", "=", "self", ".", "_agent", ".", "_get_dist_to_goal", "(", "time_step", ")", "[", "0", "]", ".", "numpy", "(", ")", "\n", "\n", "# trick: \u5f25\u8865\u5206\u5e03\u5f0frl\u7684\u503c\u51fd\u6570\u7f3a\u9677", "\n", "another_dist", "=", "outer_dist", "(", "self", ".", "_eval_tf_env", ",", "time_step", ")", "\n", "\n", "if", "(", "dist_to_waypoint", "<", "self", ".", "_threshold_dist", "or", "\n", "another_dist", "<", "self", ".", "_eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "_threshold_dist", ")", ":", "\n", "                ", "self", ".", "_waypoint_counter", "=", "min", "(", "self", ".", "_waypoint_counter", "+", "1", ",", "\n", "len", "(", "self", ".", "_waypoint_indexes", ")", "-", "1", ")", "\n", "waypoint", "=", "self", ".", "_active_set", "[", "self", ".", "_waypoint_indexes", "[", "self", ".", "_waypoint_counter", "]", "]", "\n", "time_step", ".", "observation", "[", "'goal'", "]", "=", "waypoint", "[", "None", "]", "\n", "dist_to_waypoint", "=", "self", ".", "_agent", ".", "_get_dist_to_goal", "(", "time_step", ")", "[", "0", "]", ".", "numpy", "(", ")", "\n", "\n", "", "dist_to_goal_via_wypt", "=", "dist_to_waypoint", "+", "self", ".", "_waypoint_to_goal_dists", "[", "self", ".", "_waypoint_counter", "]", "\n", "\n", "", "else", ":", "\n", "            ", "waypoint", ",", "dist_to_goal_via_wypt", "=", "self", ".", "_get_waypoint", "(", "time_step", ")", "\n", "dist_to_goal_via_wypt", "=", "dist_to_goal_via_wypt", ".", "numpy", "(", ")", "\n", "\n", "", "if", "(", "dist_to_goal_via_wypt", "<", "dist_to_goal", ")", "or", "(", "dist_to_goal", ">", "self", ".", "_edge_len_threshold", ")", ":", "\n", "            ", "time_step", ".", "observation", "[", "'goal'", "]", "=", "tf", ".", "convert_to_tensor", "(", "waypoint", "[", "None", "]", ")", "\n", "", "else", ":", "\n", "            ", "time_step", ".", "observation", "[", "'goal'", "]", "=", "goal", "\n", "\n", "", "return", "self", ".", "_agent", ".", "policy", ".", "action", "(", "time_step", ",", "policy_state", ",", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._get_path": [[174, 198], ["search_policy.SearchPolicy._agent._get_pairwise_dist().numpy().flatten", "search_policy.SearchPolicy._mask().numpy().flatten", "search_policy.SearchPolicy._agent._get_pairwise_dist().numpy().flatten", "search_policy.SearchPolicy._mask().numpy().flatten", "search_policy.SearchPolicy._graph.copy", "enumerate", "networkx.shortest_path", "zip", "zip", "edge_lengths.append", "numpy.cumsum", "list", "search_policy.SearchPolicy._agent._get_pairwise_dist().numpy", "search_policy.SearchPolicy._mask().numpy", "search_policy.SearchPolicy._agent._get_pairwise_dist().numpy", "search_policy.SearchPolicy._mask().numpy", "search_policy.SearchPolicy.add_edge", "search_policy.SearchPolicy.add_edge", "search_policy.SearchPolicy._agent._get_pairwise_dist", "search_policy.SearchPolicy._mask", "search_policy.SearchPolicy._agent._get_pairwise_dist", "search_policy.SearchPolicy._mask"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_pairwise_dist", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._mask", "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_pairwise_dist", "home.repos.pwc.inspect_result.chenxuerun_APS.None.search_policy.SearchPolicy._mask"], ["", "def", "_get_path", "(", "self", ",", "time_step", ")", ":", "\n", "        ", "start_to_active_set", "=", "self", ".", "_agent", ".", "_get_pairwise_dist", "(", "\n", "time_step", ".", "observation", "[", "'observation'", "]", ",", "self", ".", "_active_set", ",", "\n", "aggregate", "=", "'min'", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", "\n", "start_to_active_set", "=", "self", ".", "_mask", "(", "start_to_active_set", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", "\n", "active_set_to_goal", "=", "self", ".", "_agent", ".", "_get_pairwise_dist", "(", "\n", "self", ".", "_active_set", ",", "time_step", ".", "observation", "[", "'goal'", "]", ",", "\n", "aggregate", "=", "'min'", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", "\n", "active_set_to_goal", "=", "self", ".", "_mask", "(", "active_set_to_goal", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", "\n", "\n", "g2", "=", "self", ".", "_graph", ".", "copy", "(", ")", "\n", "for", "i", ",", "(", "dist_from_start", ",", "dist_to_goal", ")", "in", "enumerate", "(", "zip", "(", "start_to_active_set", ",", "active_set_to_goal", ")", ")", ":", "\n", "            ", "if", "(", "dist_from_start", "<", "self", ".", "_edge_len_threshold", ")", ":", "\n", "                ", "g2", ".", "add_edge", "(", "'start'", ",", "i", ",", "weight", "=", "dist_from_start", ")", "\n", "", "if", "(", "dist_to_goal", "<", "self", ".", "_edge_len_threshold", ")", ":", "\n", "                ", "g2", ".", "add_edge", "(", "i", ",", "'goal'", ",", "weight", "=", "dist_to_goal", ")", "\n", "", "", "path", "=", "nx", ".", "shortest_path", "(", "g2", ",", "'start'", ",", "'goal'", ")", "\n", "edge_lengths", "=", "[", "]", "\n", "for", "(", "i", ",", "j", ")", "in", "zip", "(", "path", "[", ":", "-", "1", "]", ",", "path", "[", "1", ":", "]", ")", ":", "\n", "            ", "edge_lengths", ".", "append", "(", "g2", "[", "i", "]", "[", "j", "]", "[", "'weight'", "]", ")", "\n", "", "wypt_to_goal_dist", "=", "np", ".", "cumsum", "(", "edge_lengths", "[", ":", ":", "-", "1", "]", ")", "[", ":", ":", "-", "1", "]", "\n", "waypoint_index", "=", "list", "(", "path", ")", "[", "1", ":", "-", "1", "]", "\n", "return", "waypoint_index", ",", "wypt_to_goal_dist", "[", "1", ":", "]", "# \u53bb\u6389start, \u8fd4\u56de\u7684\u662fwaypoint\u6570\u7ec4\u4e0b\u6807", "", "", "", ""]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.actor_critic.GoalConditionedActorNetwork.__init__": [[17, 23], ["tf_agents.agents.ddpg.actor_network.ActorNetwork.__init__"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.NonTerminatingTimeLimit.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_tensor_spec", ",", "output_tensor_spec", ",", "**", "kwargs", ")", ":", "\n", "        ", "modified_tensor_spec", "=", "None", "\n", "super", "(", "GoalConditionedActorNetwork", ",", "self", ")", ".", "__init__", "(", "\n", "modified_tensor_spec", ",", "output_tensor_spec", ",", "\n", "fc_layer_params", "=", "(", "256", ",", "256", ")", ",", "**", "kwargs", ")", "\n", "self", ".", "_input_tensor_spec", "=", "input_tensor_spec", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.actor_critic.GoalConditionedActorNetwork.call": [[24, 29], ["actor_critic.merge_obs_goal", "super().call"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.actor_critic.merge_obs_goal", "home.repos.pwc.inspect_result.chenxuerun_APS.None.actor_critic.GoalConditionedCriticNetwork.call"], ["", "def", "call", "(", "self", ",", "observations", ",", "step_type", "=", "(", ")", ",", "network_state", "=", "(", ")", ")", ":", "\n", "        ", "modified_observations", "=", "merge_obs_goal", "(", "observations", ")", "\n", "output_actions", ",", "network_state", "=", "super", "(", "GoalConditionedActorNetwork", ",", "self", ")", ".", "call", "(", "\n", "modified_observations", ",", "step_type", "=", "step_type", ",", "network_state", "=", "network_state", ")", "\n", "return", "output_actions", ",", "network_state", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.actor_critic.GoalConditionedCriticNetwork.__init__": [[31, 85], ["tf_agents.agents.ddpg.critic_network.CriticNetwork.__init__", "tensorflow.nest.flatten", "tf_agents.networks.utils.mlp_layers", "tf_agents.networks.utils.mlp_layers", "tf_agents.networks.utils.mlp_layers", "actor_critic.GoalConditionedCriticNetwork._joint_layers.append", "len", "ValueError", "tensorflow.keras.layers.Dense", "tensorflow.compat.v1.keras.initializers.VarianceScaling", "tensorflow.compat.v1.keras.initializers.VarianceScaling", "tensorflow.compat.v1.keras.initializers.VarianceScaling", "tensorflow.compat.v1.keras.initializers.RandomUniform"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.NonTerminatingTimeLimit.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_tensor_spec", ",", "\n", "observation_conv_layer_params", "=", "None", ",", "\n", "observation_fc_layer_params", "=", "(", "256", ",", ")", ",", "\n", "action_fc_layer_params", "=", "None", ",", "\n", "joint_fc_layer_params", "=", "(", "256", ",", ")", ",", "\n", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "name", "=", "'CriticNetwork'", ",", "output_dim", "=", "None", ")", ":", "\n", "        ", "self", ".", "_output_dim", "=", "output_dim", "\n", "(", "_", ",", "action_spec", ")", "=", "input_tensor_spec", "\n", "modified_obs_spec", "=", "None", "\n", "modified_tensor_spec", "=", "(", "modified_obs_spec", ",", "action_spec", ")", "\n", "\n", "super", "(", "critic_network", ".", "CriticNetwork", ",", "self", ")", ".", "__init__", "(", "\n", "input_tensor_spec", "=", "modified_tensor_spec", ",", "\n", "state_spec", "=", "(", ")", ",", "\n", "name", "=", "name", ")", "\n", "self", ".", "_input_tensor_spec", "=", "input_tensor_spec", "\n", "\n", "flat_action_spec", "=", "tf", ".", "nest", ".", "flatten", "(", "action_spec", ")", "\n", "if", "len", "(", "flat_action_spec", ")", ">", "1", ":", "\n", "            ", "raise", "ValueError", "(", "'Only a single action is supported by this network'", ")", "\n", "", "self", ".", "_single_action_spec", "=", "flat_action_spec", "[", "0", "]", "\n", "\n", "self", ".", "_observation_layers", "=", "utils", ".", "mlp_layers", "(", "\n", "observation_conv_layer_params", ",", "\n", "observation_fc_layer_params", ",", "\n", "activation_fn", "=", "activation_fn", ",", "\n", "kernel_initializer", "=", "tf", ".", "compat", ".", "v1", ".", "keras", ".", "initializers", ".", "VarianceScaling", "(", "\n", "scale", "=", "1.", "/", "3.", ",", "mode", "=", "'fan_in'", ",", "distribution", "=", "'uniform'", ")", ",", "\n", "name", "=", "'observation_encoding'", ")", "\n", "\n", "self", ".", "_action_layers", "=", "utils", ".", "mlp_layers", "(", "\n", "None", ",", "\n", "action_fc_layer_params", ",", "\n", "activation_fn", "=", "activation_fn", ",", "\n", "kernel_initializer", "=", "tf", ".", "compat", ".", "v1", ".", "keras", ".", "initializers", ".", "VarianceScaling", "(", "\n", "scale", "=", "1.", "/", "3.", ",", "mode", "=", "'fan_in'", ",", "distribution", "=", "'uniform'", ")", ",", "\n", "name", "=", "'action_encoding'", ")", "\n", "\n", "self", ".", "_joint_layers", "=", "utils", ".", "mlp_layers", "(", "\n", "None", ",", "\n", "joint_fc_layer_params", ",", "\n", "activation_fn", "=", "activation_fn", ",", "\n", "kernel_initializer", "=", "tf", ".", "compat", ".", "v1", ".", "keras", ".", "initializers", ".", "VarianceScaling", "(", "\n", "scale", "=", "1.", "/", "3.", ",", "mode", "=", "'fan_in'", ",", "distribution", "=", "'uniform'", ")", ",", "\n", "name", "=", "'joint_mlp'", ")", "\n", "\n", "self", ".", "_joint_layers", ".", "append", "(", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "\n", "self", ".", "_output_dim", "if", "self", ".", "_output_dim", "is", "not", "None", "else", "1", ",", "\n", "activation", "=", "None", ",", "\n", "kernel_initializer", "=", "tf", ".", "compat", ".", "v1", ".", "keras", ".", "initializers", ".", "RandomUniform", "(", "\n", "minval", "=", "-", "0.003", ",", "maxval", "=", "0.003", ")", ",", "\n", "name", "=", "'value'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.actor_critic.GoalConditionedCriticNetwork.call": [[86, 98], ["actor_critic.merge_obs_goal", "super().call", "tensorflow.reshape"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.actor_critic.merge_obs_goal", "home.repos.pwc.inspect_result.chenxuerun_APS.None.actor_critic.GoalConditionedCriticNetwork.call"], ["", "def", "call", "(", "self", ",", "inputs", ",", "step_type", "=", "(", ")", ",", "network_state", "=", "(", ")", ")", ":", "\n", "        ", "observations", ",", "actions", "=", "inputs", "\n", "modified_observations", "=", "merge_obs_goal", "(", "observations", ")", "\n", "modified_inputs", "=", "(", "modified_observations", ",", "actions", ")", "\n", "output", "=", "super", "(", "GoalConditionedCriticNetwork", ",", "self", ")", ".", "call", "(", "\n", "modified_inputs", ",", "step_type", "=", "step_type", ",", "network_state", "=", "network_state", ")", "\n", "predictions", ",", "network_state", "=", "output", "\n", "\n", "if", "self", ".", "_output_dim", "is", "not", "None", ":", "\n", "            ", "predictions", "=", "tf", ".", "reshape", "(", "predictions", ",", "[", "-", "1", ",", "self", ".", "_output_dim", "]", ")", "\n", "\n", "", "return", "predictions", ",", "network_state", "", "", "", ""]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.actor_critic.merge_obs_goal": [[6, 15], ["tensorflow.concat", "len"], "function", ["None"], ["def", "merge_obs_goal", "(", "observations", ")", ":", "\n", "    ", "obs", "=", "observations", "[", "'observation'", "]", "\n", "goal", "=", "observations", "[", "'goal'", "]", "\n", "assert", "obs", ".", "shape", "==", "goal", ".", "shape", "\n", "assert", "len", "(", "obs", ".", "shape", ")", "==", "2", "\n", "modified_observations", "=", "tf", ".", "concat", "(", "[", "obs", ",", "goal", "]", ",", "-", "1", ")", "\n", "assert", "obs", ".", "shape", "[", "0", "]", "==", "modified_observations", ".", "shape", "[", "0", "]", "\n", "assert", "modified_observations", ".", "shape", "[", "1", "]", "==", "obs", ".", "shape", "[", "1", "]", "+", "goal", ".", "shape", "[", "1", "]", "\n", "return", "modified_observations", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.util.q_image": [[8, 37], ["numpy.array", "matplotlib.subplots", "numpy.linspace", "numpy.linspace", "numpy.meshgrid", "numpy.expand_dims", "numpy.expand_dims", "numpy.concatenate", "np.concatenate.reshape", "agent._get_pairwise_dist().numpy().reshape", "matplotlib.contourf", "env.plot_walls", "fig.colorbar", "matplotlib.show", "env._is_blocked", "agent._get_pairwise_dist().numpy", "agent._get_pairwise_dist", "tensorflow.convert_to_tensor"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.plot_walls", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._is_blocked", "home.repos.pwc.inspect_result.chenxuerun_APS.None.agent.UvfAgent._get_pairwise_dist"], ["def", "q_image", "(", "tf_env", ",", "agent", ",", "state", ")", ":", "# state np.array", "\n", "    ", "state", "=", "np", ".", "array", "(", "state", ")", "\n", "env", "=", "tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "env", "\n", "assert", "not", "env", ".", "_is_blocked", "(", "state", ")", ",", "'\u8fd9\u4e2a\u70b9\u88ab\u963b\u585e'", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "figsize", "=", "(", "7", ",", "6", ")", ")", "\n", "\n", "(", "height", ",", "width", ")", "=", "env", ".", "walls", ".", "shape", "\n", "goal_states", "=", "[", "]", "\n", "shifted_goal_states", "=", "[", "]", "\n", "\n", "k", "=", "2", "# \u91c7\u6837\u5bc6\u96c6\u7a0b\u5ea6", "\n", "x", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "num", "=", "k", "*", "width", "+", "1", ")", "\n", "y", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "num", "=", "k", "*", "height", "+", "1", ")", "\n", "X", ",", "Y", "=", "np", ".", "meshgrid", "(", "x", ",", "y", ")", "# plt\u5750\u6807", "\n", "sh_X", "=", "1", "-", "Y", "\n", "sh_Y", "=", "X", "\n", "sh_X", "=", "np", ".", "expand_dims", "(", "sh_X", ",", "axis", "=", "2", ")", "\n", "sh_Y", "=", "np", ".", "expand_dims", "(", "sh_Y", ",", "axis", "=", "2", ")", "\n", "goal_states", "=", "np", ".", "concatenate", "(", "[", "sh_X", ",", "sh_Y", "]", ",", "axis", "=", "2", ")", "# env \u5750\u6807", "\n", "shifted_goal_states", "=", "goal_states", ".", "reshape", "(", "-", "1", ",", "2", ")", "\n", "\n", "dists", "=", "agent", ".", "_get_pairwise_dist", "(", "tf", ".", "convert_to_tensor", "(", "state", "[", "None", "]", ")", ",", "\n", "shifted_goal_states", ",", "aggregate", "=", "'min'", "\n", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "goal_states", ".", "shape", "[", "0", "]", ",", "goal_states", ".", "shape", "[", "1", "]", ")", "\n", "\n", "cs", "=", "plt", ".", "contourf", "(", "X", ",", "Y", ",", "dists", ",", "12", ",", "alpha", "=", "1", ",", "cmap", "=", "'PuBu'", ")", "# \u767b\u9ad8\u7ebf", "\n", "plot_walls", "(", "env", ".", "walls", ")", "\n", "fig", ".", "colorbar", "(", "cs", ",", "ax", "=", "ax", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.util.outer_dist": [[38, 47], ["math.sqrt"], "function", ["None"], ["", "def", "outer_dist", "(", "eval_tf_env", ",", "time_step", ")", ":", "\n", "    ", "height", "=", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "env", ".", "_height", "\n", "width", "=", "eval_tf_env", ".", "pyenv", ".", "envs", "[", "0", "]", ".", "gym", ".", "env", ".", "_width", "\n", "g_0", "=", "time_step", ".", "observation", "[", "'goal'", "]", "[", "0", "]", "[", "0", "]", "*", "height", "\n", "g_1", "=", "time_step", ".", "observation", "[", "'goal'", "]", "[", "0", "]", "[", "1", "]", "*", "width", "\n", "s_0", "=", "time_step", ".", "observation", "[", "'observation'", "]", "[", "0", "]", "[", "0", "]", "*", "height", "\n", "s_1", "=", "time_step", ".", "observation", "[", "'observation'", "]", "[", "0", "]", "[", "1", "]", "*", "width", "\n", "dist", "=", "math", ".", "sqrt", "(", "(", "s_0", "-", "g_0", ")", "**", "2", "+", "(", "s_1", "-", "g_1", ")", "**", "2", ")", "\n", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.util.plot_plan_param": [[48, 61], ["numpy.loadtxt", "matplotlib.figure", "matplotlib.subplot", "matplotlib.plot", "matplotlib.tick_params", "matplotlib.ylabel", "matplotlib.subplot", "matplotlib.plot", "matplotlib.tick_params", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.show"], "function", ["None"], ["", "def", "plot_plan_param", "(", "filename", "=", "'plan_param.csv'", ")", ":", "\n", "    ", "data", "=", "np", ".", "loadtxt", "(", "filename", ",", "dtype", "=", "np", ".", "float64", ",", "delimiter", "=", "','", ")", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "12", ",", "12", ")", ")", "\n", "plt", ".", "subplot", "(", "2", ",", "1", ",", "1", ")", "\n", "plt", ".", "plot", "(", "data", "[", ":", ",", "0", "]", ")", "\n", "plt", ".", "tick_params", "(", "labelsize", "=", "18", ")", "\n", "plt", ".", "ylabel", "(", "'number of waypoints'", ",", "{", "'size'", ":", "24", "}", ")", "\n", "plt", ".", "subplot", "(", "2", ",", "1", ",", "2", ")", "\n", "plt", ".", "plot", "(", "data", "[", ":", ",", "1", "]", ")", "\n", "plt", ".", "tick_params", "(", "labelsize", "=", "18", ")", "\n", "plt", ".", "ylabel", "(", "'maximum edge length'", ",", "{", "'size'", ":", "24", "}", ")", "\n", "plt", ".", "xlabel", "(", "'training iteration'", ",", "{", "'size'", ":", "24", "}", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.util.plot_comparison_nw": [[62, 80], ["numpy.loadtxt", "numpy.arange", "matplotlib.figure", "matplotlib.subplot", "plt.subplot.xaxis.set_major_locator", "matplotlib.ylabel", "plt.subplot.tick_params", "plt.subplot.plot", "matplotlib.subplot", "plt.subplot.xaxis.set_major_locator", "matplotlib.ylabel", "matplotlib.xlabel", "plt.subplot.tick_params", "plt.subplot.plot", "plt.subplot.legend", "plt.subplot.legend", "matplotlib.show", "len", "matplotlib.FixedLocator", "matplotlib.FixedLocator"], "function", ["None"], ["", "def", "plot_comparison_nw", "(", "filename", "=", "'num_waypoints.csv'", ")", ":", "\n", "    ", "data", "=", "np", ".", "loadtxt", "(", "filename", ",", "dtype", "=", "np", ".", "float64", ",", "delimiter", "=", "','", ")", "\n", "x", "=", "np", ".", "arange", "(", "len", "(", "data", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "12", ",", "12", ")", ")", "\n", "ax1", "=", "plt", ".", "subplot", "(", "2", ",", "1", ",", "1", ")", "\n", "ax1", ".", "xaxis", ".", "set_major_locator", "(", "ticker", ".", "FixedLocator", "(", "data", "[", ":", ",", "0", "]", ")", ")", "\n", "plt", ".", "ylabel", "(", "'success rate'", ",", "{", "'size'", ":", "24", "}", ")", "\n", "ax1", ".", "tick_params", "(", "labelsize", "=", "18", ")", "\n", "ax1", ".", "plot", "(", "data", "[", ":", ",", "0", "]", ",", "data", "[", ":", ",", "1", "]", ")", "\n", "ax2", "=", "plt", ".", "subplot", "(", "2", ",", "1", ",", "2", ")", "\n", "ax2", ".", "xaxis", ".", "set_major_locator", "(", "ticker", ".", "FixedLocator", "(", "data", "[", ":", ",", "0", "]", ")", ")", "\n", "plt", ".", "ylabel", "(", "'average task time (sec)'", ",", "{", "'size'", ":", "24", "}", ")", "\n", "plt", ".", "xlabel", "(", "'number of waypoints'", ",", "{", "'size'", ":", "24", "}", ")", "\n", "ax2", ".", "tick_params", "(", "labelsize", "=", "18", ")", "\n", "ax2", ".", "plot", "(", "data", "[", ":", ",", "0", "]", ",", "data", "[", ":", ",", "2", "]", ")", "\n", "ax1", ".", "legend", "(", "labels", "=", "[", "'maxium edge length = 5.0'", "]", ",", "loc", "=", "'lower right'", ",", "fontsize", "=", "'xx-large'", ")", "\n", "ax2", ".", "legend", "(", "labels", "=", "[", "'maxium edge length = 5.0'", "]", ",", "loc", "=", "'lower right'", ",", "fontsize", "=", "'xx-large'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.util.plot_comparison_me": [[81, 99], ["numpy.loadtxt", "numpy.arange", "matplotlib.figure", "matplotlib.subplot", "plt.subplot.xaxis.set_major_locator", "matplotlib.ylabel", "plt.subplot.tick_params", "plt.subplot.plot", "matplotlib.subplot", "plt.subplot.xaxis.set_major_locator", "matplotlib.ylabel", "matplotlib.xlabel", "plt.subplot.tick_params", "plt.subplot.plot", "plt.subplot.legend", "plt.subplot.legend", "matplotlib.show", "len", "matplotlib.FixedLocator", "matplotlib.FixedLocator"], "function", ["None"], ["", "def", "plot_comparison_me", "(", "filename", "=", "'maximum_edge_length.csv'", ")", ":", "\n", "    ", "data", "=", "np", ".", "loadtxt", "(", "filename", ",", "dtype", "=", "np", ".", "float64", ",", "delimiter", "=", "','", ")", "\n", "x", "=", "np", ".", "arange", "(", "len", "(", "data", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "12", ",", "12", ")", ")", "\n", "ax1", "=", "plt", ".", "subplot", "(", "2", ",", "1", ",", "1", ")", "\n", "ax1", ".", "xaxis", ".", "set_major_locator", "(", "ticker", ".", "FixedLocator", "(", "data", "[", ":", ",", "0", "]", ")", ")", "\n", "plt", ".", "ylabel", "(", "'success rate'", ",", "{", "'size'", ":", "24", "}", ")", "\n", "ax1", ".", "tick_params", "(", "labelsize", "=", "18", ")", "\n", "ax1", ".", "plot", "(", "data", "[", ":", ",", "0", "]", ",", "data", "[", ":", ",", "1", "]", ")", "\n", "ax2", "=", "plt", ".", "subplot", "(", "2", ",", "1", ",", "2", ")", "\n", "ax2", ".", "xaxis", ".", "set_major_locator", "(", "ticker", ".", "FixedLocator", "(", "data", "[", ":", ",", "0", "]", ")", ")", "\n", "plt", ".", "ylabel", "(", "'task time (sec)'", ",", "{", "'size'", ":", "24", "}", ")", "\n", "plt", ".", "xlabel", "(", "'maximum edge length'", ",", "{", "'size'", ":", "24", "}", ")", "\n", "ax2", ".", "tick_params", "(", "labelsize", "=", "18", ")", "\n", "ax2", ".", "plot", "(", "data", "[", ":", ",", "0", "]", ",", "data", "[", ":", ",", "2", "]", ")", "\n", "ax1", ".", "legend", "(", "labels", "=", "[", "'number of waypoints = 400'", "]", ",", "loc", "=", "'lower right'", ",", "fontsize", "=", "'xx-large'", ")", "\n", "ax2", ".", "legend", "(", "labels", "=", "[", "'number of waypoints = 400'", "]", ",", "loc", "=", "'upper right'", ",", "fontsize", "=", "'xx-large'", ")", "\n", "plt", ".", "show", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv.__init__": [[53, 75], ["env.PointEnv._compute_apsp", "gym.spaces.Box", "gym.spaces.Box", "env.PointEnv.reset", "env.resize_walls", "math.sqrt", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._compute_apsp", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.reset", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.resize_walls"], ["    ", "def", "__init__", "(", "self", ",", "walls", "=", "None", ",", "resize_factor", "=", "1", ",", "\n", "action_range", "=", "1.0", ",", "action_noise", "=", "0.0", ")", ":", "\n", "        ", "if", "resize_factor", ">", "1", ":", "\n", "            ", "self", ".", "_walls", "=", "resize_walls", "(", "WALLS", "[", "walls", "]", ",", "resize_factor", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_walls", "=", "WALLS", "[", "walls", "]", "\n", "", "self", ".", "_apsp", "=", "self", ".", "_compute_apsp", "(", "self", ".", "_walls", ")", "\n", "(", "height", ",", "width", ")", "=", "self", ".", "_walls", ".", "shape", "\n", "self", ".", "_height", "=", "height", "\n", "self", ".", "_width", "=", "width", "\n", "self", ".", "_action_noise", "=", "action_noise", "\n", "self", ".", "action_space", "=", "gym", ".", "spaces", ".", "Box", "(", "\n", "low", "=", "np", ".", "array", "(", "[", "-", "action_range", ",", "-", "action_range", "]", ")", ",", "\n", "high", "=", "np", ".", "array", "(", "[", "action_range", ",", "action_range", "]", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "observation_space", "=", "gym", ".", "spaces", ".", "Box", "(", "\n", "low", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", "]", ")", ",", "\n", "high", "=", "np", ".", "array", "(", "[", "self", ".", "_height", ",", "self", ".", "_width", "]", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "# \u8fd9\u4e2a\u503c\u53ef\u4ee5\u63cf\u8ff0\u73af\u5883\u7684\u96be\u5ea6", "\n", "self", ".", "_k", "=", "sqrt", "(", "self", ".", "_height", "*", "self", ".", "_width", ")", "/", "action_range", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv.reset": [[76, 79], ["env.PointEnv._sample_empty_state", "env.PointEnv.state.copy"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._sample_empty_state"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "state", "=", "self", ".", "_sample_empty_state", "(", ")", "\n", "return", "self", ".", "state", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._sample_empty_state": [[84, 93], ["numpy.where", "len", "numpy.random.choice", "numpy.array", "numpy.random.uniform", "env.PointEnv._is_blocked"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._is_blocked"], ["", "def", "_sample_empty_state", "(", "self", ")", ":", "\n", "        ", "candidate_states", "=", "np", ".", "where", "(", "self", ".", "_walls", "==", "0", ")", "\n", "num_candidate_states", "=", "len", "(", "candidate_states", "[", "0", "]", ")", "\n", "state_index", "=", "np", ".", "random", ".", "choice", "(", "num_candidate_states", ")", "\n", "state", "=", "np", ".", "array", "(", "[", "candidate_states", "[", "0", "]", "[", "state_index", "]", ",", "\n", "candidate_states", "[", "1", "]", "[", "state_index", "]", "]", ",", "dtype", "=", "np", ".", "float", ")", "\n", "state", "+=", "np", ".", "random", ".", "uniform", "(", "size", "=", "2", ")", "\n", "assert", "not", "self", ".", "_is_blocked", "(", "state", ")", "\n", "return", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._is_blocked": [[94, 99], ["env.PointEnv._discretize_state", "env.PointEnv.observation_space.contains"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._discretize_state"], ["", "def", "_is_blocked", "(", "self", ",", "state", ")", ":", "\n", "        ", "if", "not", "self", ".", "observation_space", ".", "contains", "(", "state", ")", ":", "\n", "            ", "return", "True", "\n", "", "(", "i", ",", "j", ")", "=", "self", ".", "_discretize_state", "(", "state", ")", "\n", "return", "self", ".", "_walls", "[", "i", ",", "j", "]", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._discretize_state": [[100, 107], ["numpy.floor().astype", "numpy.floor"], "methods", ["None"], ["", "def", "_discretize_state", "(", "self", ",", "state", ",", "resolution", "=", "1.0", ")", ":", "\n", "        ", "(", "i", ",", "j", ")", "=", "np", ".", "floor", "(", "resolution", "*", "state", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "if", "i", "==", "self", ".", "_height", ":", "\n", "            ", "i", "-=", "1", "\n", "", "if", "j", "==", "self", ".", "_width", ":", "\n", "            ", "j", "-=", "1", "\n", "", "return", "(", "i", ",", "j", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._compute_apsp": [[108, 135], ["networkx.Graph", "range", "range", "numpy.full", "networkx.shortest_path_length", "range", "range", "numpy.float", "dist_dict.items", "networkx.Graph.add_node", "networkx.Graph.add_edge"], "methods", ["None"], ["", "def", "_compute_apsp", "(", "self", ",", "walls", ")", ":", "# \u5916\u90e8\u5b9a\u4e49\u7684\u8ddd\u79bb", "\n", "        ", "(", "height", ",", "width", ")", "=", "walls", ".", "shape", "\n", "g", "=", "nx", ".", "Graph", "(", ")", "\n", "# Add all the nodes", "\n", "for", "i", "in", "range", "(", "height", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "width", ")", ":", "\n", "                ", "if", "walls", "[", "i", ",", "j", "]", "==", "0", ":", "\n", "                    ", "g", ".", "add_node", "(", "(", "i", ",", "j", ")", ")", "\n", "\n", "# Add all the edges", "\n", "", "", "", "for", "i", "in", "range", "(", "height", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "width", ")", ":", "\n", "                ", "for", "di", "in", "[", "-", "1", ",", "0", ",", "1", "]", ":", "\n", "                    ", "for", "dj", "in", "[", "-", "1", ",", "0", ",", "1", "]", ":", "\n", "                        ", "if", "di", "==", "dj", "==", "0", ":", "continue", "# Don't add self loops", "\n", "if", "i", "+", "di", "<", "0", "or", "i", "+", "di", ">", "height", "-", "1", ":", "continue", "# No cell here", "\n", "if", "j", "+", "dj", "<", "0", "or", "j", "+", "dj", ">", "width", "-", "1", ":", "continue", "# No cell here", "\n", "if", "walls", "[", "i", ",", "j", "]", "==", "1", ":", "continue", "# Don't add edges to walls", "\n", "if", "walls", "[", "i", "+", "di", ",", "j", "+", "dj", "]", "==", "1", ":", "continue", "# Don't add edges to walls", "\n", "g", ".", "add_edge", "(", "(", "i", ",", "j", ")", ",", "(", "i", "+", "di", ",", "j", "+", "dj", ")", ")", "\n", "\n", "# dist[i, j, k, l] is path from (i, j) -> (k, l)", "\n", "", "", "", "", "dist", "=", "np", ".", "full", "(", "(", "height", ",", "width", ",", "height", ",", "width", ")", ",", "np", ".", "float", "(", "'inf'", ")", ")", "\n", "for", "(", "(", "i1", ",", "j1", ")", ",", "dist_dict", ")", "in", "nx", ".", "shortest_path_length", "(", "g", ")", ":", "\n", "            ", "for", "(", "(", "i2", ",", "j2", ")", ",", "d", ")", "in", "dist_dict", ".", "items", "(", ")", ":", "\n", "                ", "dist", "[", "i1", ",", "j1", ",", "i2", ",", "j2", "]", "=", "d", "\n", "", "", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._get_distance": [[136, 140], ["env.PointEnv._discretize_state", "env.PointEnv._discretize_state"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._discretize_state", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._discretize_state"], ["", "def", "_get_distance", "(", "self", ",", "obs", ",", "goal", ")", ":", "\n", "        ", "(", "i1", ",", "j1", ")", "=", "self", ".", "_discretize_state", "(", "obs", ")", "\n", "(", "i2", ",", "j2", ")", "=", "self", ".", "_discretize_state", "(", "goal", ")", "\n", "return", "self", ".", "_apsp", "[", "i1", ",", "j1", ",", "i2", ",", "j2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv.step": [[141, 160], ["numpy.clip", "env.PointEnv.action_space.contains", "len", "range", "numpy.random.normal", "range", "env.PointEnv.state.copy", "env.PointEnv.state.copy", "env.PointEnv._is_blocked"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._is_blocked"], ["", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "        ", "if", "self", ".", "_action_noise", ">", "0", ":", "\n", "            ", "action", "+=", "np", ".", "random", ".", "normal", "(", "0", ",", "self", ".", "_action_noise", ")", "\n", "", "action", "=", "np", ".", "clip", "(", "action", ",", "self", ".", "action_space", ".", "low", ",", "self", ".", "action_space", ".", "high", ")", "\n", "assert", "self", ".", "action_space", ".", "contains", "(", "action", ")", "\n", "\n", "num_substeps", "=", "10", "\n", "dt", "=", "1.0", "/", "num_substeps", "\n", "num_axis", "=", "len", "(", "action", ")", "\n", "for", "_", "in", "range", "(", "num_substeps", ")", ":", "\n", "            ", "for", "axis", "in", "range", "(", "num_axis", ")", ":", "\n", "                ", "new_state", "=", "self", ".", "state", ".", "copy", "(", ")", "\n", "new_state", "[", "axis", "]", "+=", "dt", "*", "action", "[", "axis", "]", "\n", "if", "not", "self", ".", "_is_blocked", "(", "new_state", ")", ":", "\n", "                    ", "self", ".", "state", "=", "new_state", "\n", "\n", "", "", "", "done", "=", "False", "\n", "rew", "=", "-", "1.0", "\n", "return", "self", ".", "state", ".", "copy", "(", ")", ",", "rew", ",", "done", ",", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv.walls": [[161, 164], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "walls", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_walls", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv.apsp": [[165, 168], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "apsp", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_apsp", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.__init__": [[171, 181], ["gym.Wrapper.__init__", "gym.spaces.Dict"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.NonTerminatingTimeLimit.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "prob_constraint", "=", "0.8", ",", "\n", "min_dist", "=", "0", ",", "max_dist", "=", "5", ",", "threshold_dist", "=", "1.0", ")", ":", "\n", "        ", "self", ".", "_threshold_dist", "=", "threshold_dist", "\n", "self", ".", "_prob_constraint", "=", "prob_constraint", "\n", "self", ".", "_min_dist", "=", "min_dist", "\n", "self", ".", "_max_dist", "=", "max_dist", "\n", "super", "(", "GoalConditionedPointWrapper", ",", "self", ")", ".", "__init__", "(", "env", ")", "\n", "self", ".", "observation_space", "=", "gym", ".", "spaces", ".", "Dict", "(", "{", "\n", "'observation'", ":", "env", ".", "observation_space", ",", "\n", "'goal'", ":", "env", ".", "observation_space", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper._normalize_obs": [[182, 186], ["numpy.array", "float", "float"], "methods", ["None"], ["", "def", "_normalize_obs", "(", "self", ",", "obs", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "[", "\n", "obs", "[", "0", "]", "/", "float", "(", "self", ".", "env", ".", "_height", ")", ",", "\n", "obs", "[", "1", "]", "/", "float", "(", "self", ".", "env", ".", "_width", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.reset": [[194, 206], ["env.GoalConditionedPointWrapper.env.reset", "env.GoalConditionedPointWrapper._sample_goal", "env.GoalConditionedPointWrapper._normalize_obs", "env.GoalConditionedPointWrapper._normalize_obs", "print"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.reset", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper._sample_goal", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper._normalize_obs", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper._normalize_obs"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "goal", "=", "None", "\n", "count", "=", "0", "\n", "while", "goal", "is", "None", ":", "\n", "            ", "obs", "=", "self", ".", "env", ".", "reset", "(", ")", "\n", "(", "obs", ",", "goal", ")", "=", "self", ".", "_sample_goal", "(", "obs", ")", "\n", "count", "+=", "1", "\n", "if", "count", ">", "1000", ":", "\n", "                ", "print", "(", "'WARNING: Unable to find goal within constraints.'", ")", "\n", "", "", "self", ".", "_goal", "=", "goal", "\n", "return", "{", "'observation'", ":", "self", ".", "_normalize_obs", "(", "obs", ")", ",", "\n", "'goal'", ":", "self", ".", "_normalize_obs", "(", "self", ".", "_goal", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.step": [[207, 213], ["env.GoalConditionedPointWrapper.env.step", "env.GoalConditionedPointWrapper._is_done", "env.GoalConditionedPointWrapper._normalize_obs", "env.GoalConditionedPointWrapper._normalize_obs"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.step", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper._is_done", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper._normalize_obs", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper._normalize_obs"], ["", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "        ", "obs", ",", "_", ",", "_", ",", "_", "=", "self", ".", "env", ".", "step", "(", "action", ")", "\n", "rew", "=", "-", "1.0", "\n", "done", "=", "self", ".", "_is_done", "(", "obs", ",", "self", ".", "_goal", ")", "\n", "return", "{", "'observation'", ":", "self", ".", "_normalize_obs", "(", "obs", ")", ",", "\n", "'goal'", ":", "self", ".", "_normalize_obs", "(", "self", ".", "_goal", ")", "}", ",", "rew", ",", "done", ",", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper._is_done": [[214, 216], ["numpy.linalg.norm"], "methods", ["None"], ["", "def", "_is_done", "(", "self", ",", "obs", ",", "goal", ")", ":", "\n", "        ", "return", "np", ".", "linalg", ".", "norm", "(", "obs", "-", "goal", ")", "<", "self", ".", "_threshold_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper._sample_goal": [[217, 222], ["numpy.random.random", "env.GoalConditionedPointWrapper._sample_goal_constrained", "env.GoalConditionedPointWrapper._sample_goal_unconstrained"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper._sample_goal_constrained", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper._sample_goal_unconstrained"], ["", "def", "_sample_goal", "(", "self", ",", "obs", ")", ":", "\n", "        ", "if", "np", ".", "random", ".", "random", "(", ")", "<", "self", ".", "_prob_constraint", ":", "\n", "            ", "return", "self", ".", "_sample_goal_constrained", "(", "obs", ",", "self", ".", "_min_dist", ",", "self", ".", "_max_dist", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "_sample_goal_unconstrained", "(", "obs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.set_sample_goal_args": [[223, 233], ["None"], "methods", ["None"], ["", "", "def", "set_sample_goal_args", "(", "self", ",", "prob_constraint", "=", "None", ",", "\n", "min_dist", "=", "None", ",", "max_dist", "=", "None", ")", ":", "\n", "        ", "assert", "prob_constraint", "is", "not", "None", "\n", "assert", "min_dist", "is", "not", "None", "\n", "assert", "max_dist", "is", "not", "None", "\n", "assert", "min_dist", ">=", "0", "\n", "assert", "max_dist", ">=", "min_dist", "\n", "self", ".", "_prob_constraint", "=", "prob_constraint", "\n", "self", ".", "_min_dist", "=", "min_dist", "\n", "self", ".", "_max_dist", "=", "max_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper._sample_goal_constrained": [[236, 254], ["env.GoalConditionedPointWrapper.env._discretize_state", "numpy.logical_and", "numpy.logical_and", "numpy.where", "len", "numpy.random.choice", "numpy.array", "numpy.random.uniform", "env.GoalConditionedPointWrapper.env._get_distance", "env.GoalConditionedPointWrapper.env._is_blocked"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._discretize_state", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._get_distance", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._is_blocked"], ["", "def", "_sample_goal_constrained", "(", "self", ",", "obs", ",", "min_dist", ",", "max_dist", ")", ":", "\n", "        ", "(", "i", ",", "j", ")", "=", "self", ".", "env", ".", "_discretize_state", "(", "obs", ")", "\n", "mask", "=", "np", ".", "logical_and", "(", "self", ".", "env", ".", "_apsp", "[", "i", ",", "j", "]", ">=", "min_dist", ",", "\n", "self", ".", "env", ".", "_apsp", "[", "i", ",", "j", "]", "<=", "max_dist", ")", "\n", "mask", "=", "np", ".", "logical_and", "(", "mask", ",", "self", ".", "env", ".", "_walls", "==", "0", ")", "\n", "candidate_states", "=", "np", ".", "where", "(", "mask", ")", "\n", "num_candidate_states", "=", "len", "(", "candidate_states", "[", "0", "]", ")", "\n", "if", "num_candidate_states", "==", "0", ":", "\n", "            ", "return", "(", "obs", ",", "None", ")", "\n", "", "goal_index", "=", "np", ".", "random", ".", "choice", "(", "num_candidate_states", ")", "\n", "goal", "=", "np", ".", "array", "(", "[", "candidate_states", "[", "0", "]", "[", "goal_index", "]", ",", "\n", "candidate_states", "[", "1", "]", "[", "goal_index", "]", "]", ",", "dtype", "=", "np", ".", "float", ")", "\n", "goal", "+=", "np", ".", "random", ".", "uniform", "(", "size", "=", "2", ")", "\n", "# goal += np.array([0.5, 0.5]) # \u8fd9\u6837\u53d6\u7684\u76ee\u6807\uff0c\u8ddd\u79bb\u5dee\u4f1a\u7a33\u5b9a\u4e00\u4e9b", "\n", "dist_to_goal", "=", "self", ".", "env", ".", "_get_distance", "(", "obs", ",", "goal", ")", "\n", "assert", "min_dist", "<=", "dist_to_goal", "<=", "max_dist", "\n", "assert", "not", "self", ".", "env", ".", "_is_blocked", "(", "goal", ")", "\n", "return", "(", "obs", ",", "goal", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper._sample_goal_unconstrained": [[255, 257], ["env.GoalConditionedPointWrapper.env._sample_empty_state"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.PointEnv._sample_empty_state"], ["", "def", "_sample_goal_unconstrained", "(", "self", ",", "obs", ")", ":", "\n", "        ", "return", "(", "obs", ",", "self", ".", "env", ".", "_sample_empty_state", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.max_goal_dist": [[258, 262], ["numpy.max", "numpy.isfinite"], "methods", ["None"], ["", "@", "property", "\n", "def", "max_goal_dist", "(", "self", ")", ":", "\n", "        ", "apsp", "=", "self", ".", "env", ".", "_apsp", "\n", "return", "np", ".", "max", "(", "apsp", "[", "np", ".", "isfinite", "(", "apsp", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.NonTerminatingTimeLimit.__init__": [[264, 268], ["tf_agents.environments.wrappers.PyEnvironmentBaseWrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.NonTerminatingTimeLimit.__init__"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "duration", ")", ":", "\n", "        ", "super", "(", "NonTerminatingTimeLimit", ",", "self", ")", ".", "__init__", "(", "env", ")", "\n", "self", ".", "_duration", "=", "duration", "\n", "self", ".", "_step_count", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.NonTerminatingTimeLimit._reset": [[269, 272], ["env.NonTerminatingTimeLimit._env.reset"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.reset"], ["", "def", "_reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_step_count", "=", "0", "\n", "return", "self", ".", "_env", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.NonTerminatingTimeLimit.duration": [[273, 276], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "duration", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_duration", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.NonTerminatingTimeLimit._step": [[277, 285], ["env.NonTerminatingTimeLimit._env.step", "env.NonTerminatingTimeLimit.reset", "env.NonTerminatingTimeLimit.is_last"], "methods", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.step", "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.GoalConditionedPointWrapper.reset"], ["", "def", "_step", "(", "self", ",", "action", ")", ":", "\n", "        ", "if", "self", ".", "_step_count", "is", "None", ":", "\n", "            ", "return", "self", ".", "reset", "(", ")", "\n", "", "ts", "=", "self", ".", "_env", ".", "step", "(", "action", ")", "\n", "self", ".", "_step_count", "+=", "1", "\n", "if", "self", ".", "_step_count", ">=", "self", ".", "_duration", "or", "ts", ".", "is_last", "(", ")", ":", "\n", "            ", "self", ".", "_step_count", "=", "None", "\n", "", "return", "ts", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.resize_walls": [[42, 50], ["numpy.array", "numpy.array", "range", "range", "range", "range"], "function", ["None"], ["def", "resize_walls", "(", "walls", ",", "factor", ")", ":", "\n", "    ", "(", "height", ",", "width", ")", "=", "walls", ".", "shape", "\n", "row_indices", "=", "np", ".", "array", "(", "[", "i", "for", "i", "in", "range", "(", "height", ")", "for", "_", "in", "range", "(", "factor", ")", "]", ")", "\n", "col_indices", "=", "np", ".", "array", "(", "[", "i", "for", "i", "in", "range", "(", "width", ")", "for", "_", "in", "range", "(", "factor", ")", "]", ")", "\n", "walls", "=", "walls", "[", "row_indices", "]", "\n", "walls", "=", "walls", "[", ":", ",", "col_indices", "]", "\n", "assert", "walls", ".", "shape", "==", "(", "factor", "*", "height", ",", "factor", "*", "width", ")", "\n", "return", "walls", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.env_load_fn": [[286, 304], ["env.PointEnv", "env.GoalConditionedPointWrapper", "tf_agents.environments.gym_wrapper.GymWrapper", "tf_agents.environments.tf_py_environment.TFPyEnvironment", "tf_agents.environments.wrappers.TimeLimit", "env.NonTerminatingTimeLimit"], "function", ["None"], ["", "", "def", "env_load_fn", "(", "environment_name", ",", "max_episode_steps", "=", "None", ",", "\n", "resize_factor", "=", "1", ",", "action_range", "=", "1.0", ",", "action_noise", "=", "0.0", ",", "\n", "threshold_dist", "=", "1.0", ",", "terminate_on_timeout", "=", "False", ")", ":", "\n", "    ", "gym_env", "=", "PointEnv", "(", "walls", "=", "environment_name", ",", "resize_factor", "=", "resize_factor", ",", "\n", "action_range", "=", "action_range", ",", "action_noise", "=", "action_noise", ")", "\n", "gym_env", "=", "GoalConditionedPointWrapper", "(", "gym_env", ",", "threshold_dist", "=", "threshold_dist", ")", "\n", "env", "=", "gym_wrapper", ".", "GymWrapper", "(", "gym_env", ",", "discount", "=", "1.0", ",", "auto_reset", "=", "True", ")", "\n", "\n", "if", "max_episode_steps", ">", "0", ":", "\n", "        ", "if", "terminate_on_timeout", ":", "# test \u8d85\u65f6\u7684\u90a3\u4e2ats\u6539\u6210last", "\n", "            ", "env", "=", "wrappers", ".", "TimeLimit", "(", "env", ",", "max_episode_steps", ")", "\n", "", "else", ":", "# train \u8d85\u65f6\u4e0d\u4f1a\u628a\u90a3\u4e2ats\u6539\u6210last", "\n", "            ", "env", "=", "NonTerminatingTimeLimit", "(", "env", ",", "max_episode_steps", ")", "\n", "\n", "# tf_env.pyenv.envs[0].gym    <GoalConditionedPointWrapper<PointEnv instance>>", "\n", "# tf_env.pyenv.envs                   [<__main__.NonTerminatingTimeLimit at 0x7f9329d18080>]", "\n", "# tf_env.pyenv                              <tf_agents.environments.batched_py_environment.BatchedPyEnvironment at 0x7f9329d180f0>", "\n", "", "", "return", "tf_py_environment", ".", "TFPyEnvironment", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.plot_walls": [[305, 316], ["matplotlib.gca", "zip", "plt.gca.set_xlim", "plt.gca.set_ylim", "env.set_ticks", "plt.gca.fill_between", "numpy.where", "numpy.array", "float", "numpy.array", "float", "numpy.array", "float"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.set_ticks"], ["", "def", "plot_walls", "(", "walls", ")", ":", "\n", "    ", "(", "height", ",", "width", ")", "=", "walls", ".", "shape", "\n", "ax", "=", "plt", ".", "gca", "(", ")", "\n", "for", "(", "i", ",", "j", ")", "in", "zip", "(", "*", "np", ".", "where", "(", "walls", ")", ")", ":", "\n", "        ", "x", "=", "np", ".", "array", "(", "[", "j", ",", "j", "+", "1", "]", ")", "/", "float", "(", "width", ")", "\n", "y0", "=", "np", ".", "array", "(", "[", "height", "-", "i", "-", "1", ",", "height", "-", "i", "-", "1", "]", ")", "/", "float", "(", "height", ")", "\n", "y1", "=", "np", ".", "array", "(", "[", "height", "-", "i", ",", "height", "-", "i", "]", ")", "/", "float", "(", "height", ")", "\n", "ax", ".", "fill_between", "(", "x", ",", "y0", ",", "y1", ",", "color", "=", "'grey'", ")", "\n", "", "ax", ".", "set_xlim", "(", "[", "0", ",", "1", "]", ")", "\n", "ax", ".", "set_ylim", "(", "[", "0", ",", "1", "]", ")", "\n", "set_ticks", "(", "ax", ",", "width", ",", "height", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.set_ticks": [[317, 327], ["ax.xaxis.set_major_locator", "ax.xaxis.set_major_formatter", "ax.xaxis.set_minor_locator", "ax.xaxis.set_minor_formatter", "ax.yaxis.set_major_locator", "ax.yaxis.set_major_formatter", "ax.yaxis.set_minor_locator", "ax.yaxis.set_minor_formatter", "matplotlib.ticker.MultipleLocator", "matplotlib.ticker.FuncFormatter", "matplotlib.ticker.MultipleLocator", "matplotlib.ticker.NullFormatter", "matplotlib.ticker.MultipleLocator", "matplotlib.ticker.FuncFormatter", "matplotlib.ticker.MultipleLocator", "matplotlib.ticker.NullFormatter", "int", "int", "round", "round"], "function", ["None"], ["", "def", "set_ticks", "(", "ax", ",", "width", ",", "height", ")", ":", "\n", "    ", "ax", ".", "xaxis", ".", "set_major_locator", "(", "MultipleLocator", "(", "5", "/", "width", ")", ")", "\n", "ax", ".", "xaxis", ".", "set_major_formatter", "(", "FuncFormatter", "(", "lambda", "x", ",", "pos", ":", "int", "(", "round", "(", "width", "*", "x", ")", ")", ")", ")", "\n", "ax", ".", "xaxis", ".", "set_minor_locator", "(", "MultipleLocator", "(", "1", "/", "width", ")", ")", "\n", "ax", ".", "xaxis", ".", "set_minor_formatter", "(", "NullFormatter", "(", ")", ")", "\n", "\n", "ax", ".", "yaxis", ".", "set_major_locator", "(", "MultipleLocator", "(", "5", "/", "height", ")", ")", "\n", "ax", ".", "yaxis", ".", "set_major_formatter", "(", "FuncFormatter", "(", "lambda", "x", ",", "pos", ":", "int", "(", "round", "(", "height", "*", "x", ")", ")", ")", ")", "\n", "ax", ".", "yaxis", ".", "set_minor_locator", "(", "MultipleLocator", "(", "1", "/", "height", ")", ")", "\n", "ax", ".", "yaxis", ".", "set_minor_formatter", "(", "NullFormatter", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenxuerun_APS.None.env.plot_envs": [[328, 337], ["matplotlib.figure", "enumerate", "matplotlib.subplots_adjust", "matplotlib.suptitle", "matplotlib.show", "WALLS.items", "matplotlib.subplot", "matplotlib.title", "env.plot_walls"], "function", ["home.repos.pwc.inspect_result.chenxuerun_APS.None.env.plot_walls"], ["", "def", "plot_envs", "(", ")", ":", "\n", "    ", "plt", ".", "figure", "(", "figsize", "=", "(", "12", ",", "7", ")", ")", "\n", "for", "index", ",", "(", "name", ",", "walls", ")", "in", "enumerate", "(", "WALLS", ".", "items", "(", ")", ")", ":", "\n", "        ", "plt", ".", "subplot", "(", "3", ",", "6", ",", "index", "+", "1", ")", "\n", "plt", ".", "title", "(", "name", ")", "\n", "plot_walls", "(", "walls", ")", "\n", "", "plt", ".", "subplots_adjust", "(", "wspace", "=", "0.1", ",", "hspace", "=", "0.2", ")", "\n", "plt", ".", "suptitle", "(", "'Navigation Environments'", ",", "fontsize", "=", "20", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]]}