{"home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.linear_eval.accuracy": [[17, 31], ["torch.no_grad", "torch.no_grad", "max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "            ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.linear_eval.main": [[42, 157], ["util.dist_init.dist_init", "list", "pre_train.load_state_dict", "network.head.LinearHead", "torch.nn.parallel.DistributedDataParallel", "torch.optim.SGD", "torch.optim.SGD", "data.imagenet.Imagenet", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "data.imagenet.Imagenet", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "range", "torch.load", "torch.load", "state_dict.keys", "k.startswith", "torch.nn.parallel.DistributedDataParallel.to", "torch.nn.parallel.DistributedDataParallel.module.fc.parameters", "torch.utils.data.distributed.DistributedSampler.set_epoch", "util.meter.AverageMeter", "util.meter.AverageMeter", "util.meter.AverageMeter", "util.meter.ProgressMeter", "time.time", "torch.nn.parallel.DistributedDataParallel.eval", "enumerate", "torch.nn.parallel.DistributedDataParallel.eval", "util.meter.AverageMeter", "util.meter.AverageMeter", "util.torch_dist_sum.torch_dist_sum", "max", "max", "k.startswith", "len", "torch.utils.data.DataLoader.__len__", "util.meter.AverageMeter.update", "image.cuda.cuda", "label.cuda.cuda", "torch.nn.parallel.DistributedDataParallel.", "torch.cross_entropy", "torch.optim.SGD.zero_grad", "F.cross_entropy.backward", "torch.optim.SGD.step", "util.meter.AverageMeter.update", "time.time", "util.meter.AverageMeter.update", "torch.optim.lr_scheduler.CosineAnnealingLR.step", "torch.no_grad", "torch.no_grad", "time.time", "enumerate", "sum", "sum", "sum", "sum", "print", "F.cross_entropy.item", "util.meter.ProgressMeter.display", "image.cuda.cuda", "label.cuda.cuda", "torch.nn.parallel.DistributedDataParallel.", "linear_eval.accuracy", "util.meter.AverageMeter.update", "util.meter.AverageMeter.update", "util.meter.AverageMeter.update", "time.time", "sum1.float", "cnt1.float", "sum5.float", "cnt5.float", "time.time", "time.time", "image.cuda.size", "image.cuda.size", "time.time", "len"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.dist_init.dist_init", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.torch_dist_sum.torch_dist_sum", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.Imagenet.__len__", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.update", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.update", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.update", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.ProgressMeter.display", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.accuracy.accuracy", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.update", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.update", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.update"], ["def", "main", "(", ")", ":", "\n", "\n", "    ", "rank", ",", "local_rank", ",", "world_size", "=", "dist_init", "(", ")", "\n", "\n", "epochs", "=", "100", "\n", "batch_size", "=", "32", "\n", "num_workers", "=", "6", "\n", "\n", "\n", "pre_train", "=", "backbone_dict", "[", "args", ".", "backbone", "]", "(", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "'checkpoints/'", "+", "args", ".", "checkpoint", ",", "map_location", "=", "'cpu'", ")", "[", "'model'", "]", "\n", "\n", "for", "k", "in", "list", "(", "state_dict", ".", "keys", "(", ")", ")", ":", "\n", "        ", "if", "not", "k", ".", "startswith", "(", "'module.encoder_q.net.'", ")", ":", "\n", "            ", "del", "state_dict", "[", "k", "]", "\n", "", "if", "k", ".", "startswith", "(", "'module.encoder_q.net.'", ")", ":", "\n", "            ", "state_dict", "[", "k", "[", "len", "(", "\"module.encoder_q.net.\"", ")", ":", "]", "]", "=", "state_dict", "[", "k", "]", "\n", "del", "state_dict", "[", "k", "]", "\n", "\n", "", "", "pre_train", ".", "load_state_dict", "(", "state_dict", ")", "\n", "model", "=", "LinearHead", "(", "pre_train", ",", "dim_in", "=", "dim_dict", "[", "args", ".", "backbone", "]", ")", "\n", "model", "=", "DistributedDataParallel", "(", "model", ".", "to", "(", "local_rank", ")", ",", "device_ids", "=", "[", "local_rank", "]", ",", "output_device", "=", "local_rank", ",", "find_unused_parameters", "=", "True", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "model", ".", "module", ".", "fc", ".", "parameters", "(", ")", ",", "lr", "=", "0.3", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "0", ")", "\n", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "train_dataset", "=", "Imagenet", "(", ")", "\n", "train_sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "train_dataset", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "(", "train_sampler", "is", "None", ")", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "True", ",", "sampler", "=", "train_sampler", ")", "\n", "\n", "\n", "test_dataset", "=", "Imagenet", "(", "mode", "=", "'val'", ",", "aug", "=", "eval_aug", ")", "\n", "test_sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "test_dataset", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "test_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "(", "test_sampler", "is", "None", ")", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "True", ",", "sampler", "=", "test_sampler", ")", "\n", "\n", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "optimizer", ",", "epochs", "*", "len", "(", "train_loader", ")", ")", "\n", "\n", "\n", "best_acc", "=", "0", "\n", "best_acc5", "=", "0", "\n", "for", "epoch", "in", "range", "(", "epochs", ")", ":", "\n", "# ---------------------- Train --------------------------", "\n", "        ", "train_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "\n", "batch_time", "=", "AverageMeter", "(", "'Time'", ",", "':6.3f'", ")", "\n", "data_time", "=", "AverageMeter", "(", "'Data'", ",", "':6.3f'", ")", "\n", "losses", "=", "AverageMeter", "(", "'Loss'", ",", "':.4e'", ")", "\n", "progress", "=", "ProgressMeter", "(", "\n", "train_loader", ".", "__len__", "(", ")", ",", "\n", "[", "batch_time", ",", "data_time", ",", "losses", "]", ",", "\n", "prefix", "=", "\"Epoch: [{}]\"", ".", "format", "(", "epoch", ")", "\n", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "for", "i", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "image", "=", "image", ".", "cuda", "(", "local_rank", ",", "non_blocking", "=", "True", ")", "\n", "label", "=", "label", ".", "cuda", "(", "local_rank", ",", "non_blocking", "=", "True", ")", "\n", "\n", "out", "=", "model", "(", "image", ")", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "out", ",", "label", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ")", "\n", "\n", "if", "i", "%", "20", "==", "0", "and", "rank", "==", "0", ":", "\n", "                ", "progress", ".", "display", "(", "i", ")", "\n", "\n", "", "scheduler", ".", "step", "(", ")", "\n", "\n", "# ---------------------- Test --------------------------", "\n", "", "model", ".", "eval", "(", ")", "\n", "top1", "=", "AverageMeter", "(", "'Acc@1'", ",", "':6.2f'", ")", "\n", "top5", "=", "AverageMeter", "(", "'Acc@5'", ",", "':6.2f'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "\n", "                ", "image", "=", "image", ".", "cuda", "(", "local_rank", ",", "non_blocking", "=", "True", ")", "\n", "label", "=", "label", ".", "cuda", "(", "local_rank", ",", "non_blocking", "=", "True", ")", "\n", "\n", "# compute output", "\n", "output", "=", "model", "(", "image", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "acc1", ",", "acc5", "=", "accuracy", "(", "output", ",", "label", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "top1", ".", "update", "(", "acc1", "[", "0", "]", ",", "image", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "acc5", "[", "0", "]", ",", "image", ".", "size", "(", "0", ")", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "", "sum1", ",", "cnt1", ",", "sum5", ",", "cnt5", "=", "torch_dist_sum", "(", "local_rank", ",", "top1", ".", "sum", ",", "top1", ".", "count", ",", "top5", ".", "sum", ",", "top5", ".", "count", ")", "\n", "top1_acc", "=", "sum", "(", "sum1", ".", "float", "(", ")", ")", "/", "sum", "(", "cnt1", ".", "float", "(", ")", ")", "\n", "top5_acc", "=", "sum", "(", "sum5", ".", "float", "(", ")", ")", "/", "sum", "(", "cnt5", ".", "float", "(", ")", ")", "\n", "\n", "best_acc", "=", "max", "(", "top1_acc", ",", "best_acc", ")", "\n", "best_acc5", "=", "max", "(", "top5_acc", ",", "best_acc5", ")", "\n", "\n", "if", "rank", "==", "0", ":", "\n", "            ", "print", "(", "'Epoch:{} * Acc@1 {top1_acc:.3f} Acc@5 {top5_acc:.3f} Best_Acc@1 {best_acc:.3f} Best_Acc@5 {best_acc5:.3f}'", ".", "format", "(", "epoch", ",", "top1_acc", "=", "top1_acc", ",", "top5_acc", "=", "top5_acc", ",", "best_acc", "=", "best_acc", ",", "best_acc5", "=", "best_acc5", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.ressl_multi.adjust_learning_rate": [[27, 40], ["math.cos"], "function", ["None"], ["def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "base_lr", ",", "i", ",", "iteration_per_epoch", ")", ":", "\n", "    ", "T", "=", "epoch", "*", "iteration_per_epoch", "+", "i", "\n", "warmup_iters", "=", "warm_up", "*", "iteration_per_epoch", "\n", "total_iters", "=", "(", "epochs", "-", "warm_up", ")", "*", "iteration_per_epoch", "\n", "\n", "if", "epoch", "<", "warm_up", ":", "\n", "        ", "lr", "=", "base_lr", "*", "1.0", "*", "T", "/", "warmup_iters", "\n", "", "else", ":", "\n", "        ", "T", "=", "T", "-", "warmup_iters", "\n", "lr", "=", "0.5", "*", "base_lr", "*", "(", "1", "+", "math", ".", "cos", "(", "1.0", "*", "T", "/", "total_iters", "*", "math", ".", "pi", ")", ")", "\n", "\n", "", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.ressl_multi.train": [[42, 84], ["util.meter.AverageMeter", "util.meter.AverageMeter", "util.meter.AverageMeter", "util.meter.ProgressMeter", "model.train", "len", "time.time", "enumerate", "len", "ressl_multi.adjust_learning_rate", "util.meter.AverageMeter.update", "model", "util.meter.AverageMeter.update", "optimizer.zero_grad", "loss.backward", "optimizer.step", "util.meter.AverageMeter.update", "time.time", "torch.sum().mean", "torch.sum().mean", "torch.sum().mean", "loss.item", "logitsq.size", "util.meter.ProgressMeter.display", "time.time", "img.cuda", "time.time", "torch.sum", "torch.sum", "torch.sum", "torch.softmax", "torch.log_softmax", "ligitsk.detach"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.ressl.train", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.ressl.adjust_learning_rate", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.update", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.update", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.update", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.ProgressMeter.display"], ["", "", "def", "train", "(", "train_loader", ",", "model", ",", "local_rank", ",", "rank", ",", "criterion", ",", "optimizer", ",", "base_lr", ",", "epoch", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", "'Time'", ",", "':6.3f'", ")", "\n", "data_time", "=", "AverageMeter", "(", "'Data'", ",", "':6.3f'", ")", "\n", "losses", "=", "AverageMeter", "(", "'Loss'", ",", "':.4e'", ")", "\n", "progress", "=", "ProgressMeter", "(", "\n", "len", "(", "train_loader", ")", ",", "\n", "[", "batch_time", ",", "data_time", ",", "losses", "]", ",", "\n", "prefix", "=", "\"Epoch: [{}]\"", ".", "format", "(", "epoch", ")", ")", "\n", "\n", "# switch to train mode", "\n", "model", ".", "train", "(", ")", "\n", "\n", "iteration_per_epoch", "=", "len", "(", "train_loader", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "img_list", ",", "_", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "base_lr", ",", "i", ",", "iteration_per_epoch", ")", "\n", "# measure data loading time", "\n", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "if", "local_rank", "is", "not", "None", ":", "\n", "            ", "img_list", "=", "[", "img", ".", "cuda", "(", "local_rank", ",", "non_blocking", "=", "True", ")", "for", "img", "in", "img_list", "]", "\n", "\n", "# compute output", "\n", "", "logitsq", ",", "ligitsk", "=", "model", "(", "im_q", "=", "img_list", "[", "1", ":", "]", ",", "im_k", "=", "img_list", "[", "0", "]", ")", "\n", "loss", "=", "-", "torch", ".", "sum", "(", "F", ".", "softmax", "(", "ligitsk", ".", "detach", "(", ")", "/", "args", ".", "t", ",", "dim", "=", "1", ")", "*", "F", ".", "log_softmax", "(", "logitsq", "/", "0.1", ",", "dim", "=", "1", ")", ",", "dim", "=", "1", ")", ".", "mean", "(", ")", "\n", "\n", "# acc1/acc5 are (K+1)-way contrast classifier accuracy", "\n", "# measure accuracy and record loss", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "logitsq", ".", "size", "(", "0", ")", ")", "\n", "\n", "# compute gradient and do SGD step", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "i", "%", "20", "==", "0", "and", "rank", "==", "0", ":", "\n", "            ", "progress", ".", "display", "(", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.ressl_multi.main": [[86, 149], ["dist_init", "network.ressl_multi.ReSSL", "DistributedDataParallel", "DistributedDataParallel.named_parameters", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "data.imagenet.Imagenet", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.CrossEntropyLoss().cuda", "print", "os.path.exists", "DistributedDataParallel.train", "range", "DistributedDataParallel.to", "os.path.exists", "os.makedirs", "torch.load", "torch.load", "torch.load", "DistributedDataParallel.load_state_dict", "torch.optim.SGD.load_state_dict", "print", "print", "torch.utils.data.distributed.DistributedSampler.set_epoch", "ressl_multi.train", "param_dict.items", "param_dict.items", "data.augmentation.Multi_Transform", "torch.CrossEntropyLoss", "torch.save", "torch.save", "torch.save", "DistributedDataParallel.state_dict", "torch.optim.SGD.state_dict"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.dist_init.dist_init", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.ressl.train", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.ressl.train"], ["", "", "", "def", "main", "(", ")", ":", "\n", "    ", "from", "torch", ".", "nn", ".", "parallel", "import", "DistributedDataParallel", "\n", "import", "math", "\n", "from", "util", ".", "dist_init", "import", "dist_init", "\n", "\n", "rank", ",", "local_rank", ",", "world_size", "=", "dist_init", "(", "args", ".", "port", ")", "\n", "\n", "batch_size", "=", "32", "# single gpu", "\n", "num_workers", "=", "8", "\n", "base_lr", "=", "args", ".", "lr", "\n", "\n", "model", "=", "ReSSL", "(", "backbone", "=", "args", ".", "backbone", ")", "\n", "model", "=", "DistributedDataParallel", "(", "model", ".", "to", "(", "local_rank", ")", ",", "device_ids", "=", "[", "local_rank", "]", ",", "output_device", "=", "local_rank", ")", "\n", "\n", "param_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "param_dict", "[", "k", "]", "=", "v", "\n", "\n", "", "bn_params", "=", "[", "v", "for", "n", ",", "v", "in", "param_dict", ".", "items", "(", ")", "if", "(", "'bn'", "in", "n", "or", "'bias'", "in", "n", ")", "]", "\n", "rest_params", "=", "[", "v", "for", "n", ",", "v", "in", "param_dict", ".", "items", "(", ")", "if", "not", "(", "'bn'", "in", "n", "or", "'bias'", "in", "n", ")", "]", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "{", "'params'", ":", "bn_params", ",", "'weight_decay'", ":", "0", ",", "}", ",", "\n", "{", "'params'", ":", "rest_params", ",", "'weight_decay'", ":", "1e-4", "}", "]", ",", "\n", "lr", "=", "base_lr", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "1e-4", ")", "\n", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "train_dataset", "=", "Imagenet", "(", "aug", "=", "Multi_Transform", "(", "nmb_crops", "=", "[", "1", ",", "1", ",", "1", ",", "1", ",", "1", "]", ")", ",", "max_class", "=", "1000", ")", "\n", "train_sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "train_dataset", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "(", "train_sampler", "is", "None", ")", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "True", ",", "sampler", "=", "train_sampler", ",", "drop_last", "=", "True", ")", "\n", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "cuda", "(", "local_rank", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'checkpoints'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'checkpoints'", ")", "\n", "\n", "", "checkpoint_path", "=", "'checkpoints/ressl-multi-{}-{}.pth'", ".", "format", "(", "args", ".", "backbone", ",", "epochs", ")", "\n", "print", "(", "'checkpoint_path:'", ",", "checkpoint_path", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "checkpoint_path", ")", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ",", "map_location", "=", "'cpu'", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "print", "(", "checkpoint_path", ",", "'found, start from epoch'", ",", "start_epoch", ")", "\n", "", "else", ":", "\n", "        ", "start_epoch", "=", "0", "\n", "print", "(", "checkpoint_path", ",", "'not found, start from epoch 0'", ")", "\n", "\n", "\n", "", "model", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "epochs", ")", ":", "\n", "        ", "train_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "train", "(", "train_loader", ",", "model", ",", "local_rank", ",", "rank", ",", "criterion", ",", "optimizer", ",", "base_lr", ",", "epoch", ")", "\n", "\n", "if", "rank", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "\n", "{", "\n", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", "+", "1", "\n", "}", ",", "checkpoint_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.ressl.adjust_learning_rate": [[27, 40], ["math.cos"], "function", ["None"], ["def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "base_lr", ",", "i", ",", "iteration_per_epoch", ")", ":", "\n", "    ", "T", "=", "epoch", "*", "iteration_per_epoch", "+", "i", "\n", "warmup_iters", "=", "warm_up", "*", "iteration_per_epoch", "\n", "total_iters", "=", "(", "epochs", "-", "warm_up", ")", "*", "iteration_per_epoch", "\n", "\n", "if", "epoch", "<", "warm_up", ":", "\n", "        ", "lr", "=", "base_lr", "*", "1.0", "*", "T", "/", "warmup_iters", "\n", "", "else", ":", "\n", "        ", "T", "=", "T", "-", "warmup_iters", "\n", "lr", "=", "0.5", "*", "base_lr", "*", "(", "1", "+", "math", ".", "cos", "(", "1.0", "*", "T", "/", "total_iters", "*", "math", ".", "pi", ")", ")", "\n", "\n", "", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.ressl.train": [[42, 85], ["util.meter.AverageMeter", "util.meter.AverageMeter", "util.meter.AverageMeter", "util.meter.ProgressMeter", "model.train", "len", "time.time", "enumerate", "len", "ressl.adjust_learning_rate", "util.meter.AverageMeter.update", "model", "util.meter.AverageMeter.update", "optimizer.zero_grad", "loss.backward", "optimizer.step", "util.meter.AverageMeter.update", "time.time", "img1.cuda.cuda", "img2.cuda.cuda", "torch.sum().mean", "torch.sum().mean", "torch.sum().mean", "loss.item", "img1.cuda.size", "util.meter.ProgressMeter.display", "time.time", "time.time", "torch.sum", "torch.sum", "torch.sum", "torch.softmax", "torch.log_softmax", "ligitsk.detach"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.ressl.train", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.ressl.adjust_learning_rate", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.update", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.update", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.update", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.ProgressMeter.display"], ["", "", "def", "train", "(", "train_loader", ",", "model", ",", "local_rank", ",", "rank", ",", "criterion", ",", "optimizer", ",", "base_lr", ",", "epoch", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", "'Time'", ",", "':6.3f'", ")", "\n", "data_time", "=", "AverageMeter", "(", "'Data'", ",", "':6.3f'", ")", "\n", "losses", "=", "AverageMeter", "(", "'Loss'", ",", "':.4e'", ")", "\n", "progress", "=", "ProgressMeter", "(", "\n", "len", "(", "train_loader", ")", ",", "\n", "[", "batch_time", ",", "data_time", ",", "losses", "]", ",", "\n", "prefix", "=", "\"Epoch: [{}]\"", ".", "format", "(", "epoch", ")", ")", "\n", "\n", "# switch to train mode", "\n", "model", ".", "train", "(", ")", "\n", "\n", "iteration_per_epoch", "=", "len", "(", "train_loader", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "img1", ",", "img2", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "base_lr", ",", "i", ",", "iteration_per_epoch", ")", "\n", "# measure data loading time", "\n", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "if", "local_rank", "is", "not", "None", ":", "\n", "            ", "img1", "=", "img1", ".", "cuda", "(", "local_rank", ",", "non_blocking", "=", "True", ")", "\n", "img2", "=", "img2", ".", "cuda", "(", "local_rank", ",", "non_blocking", "=", "True", ")", "\n", "\n", "# compute output", "\n", "", "logitsq", ",", "ligitsk", "=", "model", "(", "im_q", "=", "img1", ",", "im_k", "=", "img2", ")", "\n", "loss", "=", "-", "torch", ".", "sum", "(", "F", ".", "softmax", "(", "ligitsk", ".", "detach", "(", ")", "/", "args", ".", "t", ",", "dim", "=", "1", ")", "*", "F", ".", "log_softmax", "(", "logitsq", "/", "0.1", ",", "dim", "=", "1", ")", ",", "dim", "=", "1", ")", ".", "mean", "(", ")", "\n", "\n", "# acc1/acc5 are (K+1)-way contrast classifier accuracy", "\n", "# measure accuracy and record loss", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "img1", ".", "size", "(", "0", ")", ")", "\n", "\n", "# compute gradient and do SGD step", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "i", "%", "20", "==", "0", "and", "rank", "==", "0", ":", "\n", "            ", "progress", ".", "display", "(", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.ressl.main": [[87, 149], ["dist_init", "network.ressl.ReSSL", "DistributedDataParallel", "DistributedDataParallel.named_parameters", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "data.imagenet.ImagenetContrastive", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.CrossEntropyLoss().cuda", "print", "os.path.exists", "DistributedDataParallel.train", "range", "DistributedDataParallel.to", "os.path.exists", "os.makedirs", "torch.load", "torch.load", "torch.load", "DistributedDataParallel.load_state_dict", "torch.optim.SGD.load_state_dict", "print", "print", "torch.utils.data.distributed.DistributedSampler.set_epoch", "ressl.train", "param_dict.items", "param_dict.items", "torch.CrossEntropyLoss", "torch.save", "torch.save", "torch.save", "DistributedDataParallel.state_dict", "torch.optim.SGD.state_dict"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.dist_init.dist_init", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.ressl.train", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.None.ressl.train"], ["", "", "", "def", "main", "(", ")", ":", "\n", "    ", "from", "torch", ".", "nn", ".", "parallel", "import", "DistributedDataParallel", "\n", "from", "util", ".", "dist_init", "import", "dist_init", "\n", "\n", "rank", ",", "local_rank", ",", "world_size", "=", "dist_init", "(", "args", ".", "port", ")", "\n", "\n", "batch_size", "=", "32", "# single gpu", "\n", "num_workers", "=", "8", "\n", "base_lr", "=", "args", ".", "lr", "\n", "\n", "model", "=", "ReSSL", "(", "backbone", "=", "args", ".", "backbone", ")", "\n", "model", "=", "DistributedDataParallel", "(", "model", ".", "to", "(", "local_rank", ")", ",", "device_ids", "=", "[", "local_rank", "]", ",", "output_device", "=", "local_rank", ")", "\n", "\n", "param_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "param_dict", "[", "k", "]", "=", "v", "\n", "\n", "", "bn_params", "=", "[", "v", "for", "n", ",", "v", "in", "param_dict", ".", "items", "(", ")", "if", "(", "'bn'", "in", "n", "or", "'bias'", "in", "n", ")", "]", "\n", "rest_params", "=", "[", "v", "for", "n", ",", "v", "in", "param_dict", ".", "items", "(", ")", "if", "not", "(", "'bn'", "in", "n", "or", "'bias'", "in", "n", ")", "]", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "{", "'params'", ":", "bn_params", ",", "'weight_decay'", ":", "0", ",", "}", ",", "\n", "{", "'params'", ":", "rest_params", ",", "'weight_decay'", ":", "1e-4", "}", "]", ",", "\n", "lr", "=", "base_lr", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "1e-4", ")", "\n", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "train_dataset", "=", "ImagenetContrastive", "(", "aug", "=", "[", "moco_aug", ",", "target_aug", "]", ",", "max_class", "=", "1000", ")", "\n", "train_sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "train_dataset", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "(", "train_sampler", "is", "None", ")", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "True", ",", "sampler", "=", "train_sampler", ",", "drop_last", "=", "True", ")", "\n", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "cuda", "(", "local_rank", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'checkpoints'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'checkpoints'", ")", "\n", "\n", "", "checkpoint_path", "=", "'checkpoints/ressl-{}-{}.pth'", ".", "format", "(", "args", ".", "backbone", ",", "epochs", ")", "\n", "print", "(", "'checkpoint_path:'", ",", "checkpoint_path", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "checkpoint_path", ")", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ",", "map_location", "=", "'cpu'", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "print", "(", "checkpoint_path", ",", "'found, start from epoch'", ",", "start_epoch", ")", "\n", "", "else", ":", "\n", "        ", "start_epoch", "=", "0", "\n", "print", "(", "checkpoint_path", ",", "'not found, start from epoch 0'", ")", "\n", "\n", "\n", "", "model", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "epochs", ")", ":", "\n", "        ", "train_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "train", "(", "train_loader", ",", "model", ",", "local_rank", ",", "rank", ",", "criterion", ",", "optimizer", ",", "base_lr", ",", "epoch", ")", "\n", "\n", "if", "rank", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "\n", "{", "\n", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", "+", "1", "\n", "}", ",", "checkpoint_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.BasicBlock.__init__": [[37, 54], ["torch.Module.__init__", "resnet.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "resnet.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Multi_Transform.__init__", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.conv3x3", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.BasicBlock.forward": [[55, 72], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.Bottleneck.__init__": [[83, 99], ["torch.Module.__init__", "resnet.conv1x1", "norm_layer", "resnet.conv3x3", "norm_layer", "resnet.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Multi_Transform.__init__", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.conv1x1", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.conv3x3", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.Bottleneck.forward": [[100, 121], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.ResNet.__init__": [[125, 175], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "resnet.ResNet.modules", "len", "ValueError", "isinstance", "resnet.ResNet.modules", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Multi_Transform.__init__", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ",", "zero_init_residual", "=", "False", ",", "\n", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "replace_stride_with_dilation", "=", "None", ",", "\n", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "# self.fc = nn.Linear(512 * block.expansion, num_classes)", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.ResNet._make_layer": [[176, 199], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "resnet.conv1x1", "norm_layer", "block"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.conv1x1"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "self", ".", "groups", ",", "\n", "self", ".", "base_width", ",", "previous_dilation", ",", "norm_layer", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm_layer", "=", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.ResNet._forward_impl": [[200, 217], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "resnet.ResNet.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten"], "methods", ["None"], ["", "def", "_forward_impl", "(", "self", ",", "x", ")", ":", "\n", "# See note [TorchScript super()]", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "# x = self.fc(x)", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.ResNet.forward": [[218, 220], ["resnet.ResNet._forward_impl"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.ResNet._forward_impl"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "_forward_impl", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.conv3x3": [[23, 27], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.conv1x1": [[29, 32], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet._resnet": [[222, 229], ["resnet.ResNet"], "function", ["None"], ["", "", "def", "_resnet", "(", "arch", ",", "block", ",", "layers", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "block", ",", "layers", ",", "**", "kwargs", ")", "\n", "# if pretrained:", "\n", "#     state_dict = load_state_dict_from_url(model_urls[arch],", "\n", "#                                           progress=progress)", "\n", "#     model.load_state_dict(state_dict)", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.resnet18": [[231, 241], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet._resnet"], ["", "def", "resnet18", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-18 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet18'", ",", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "pretrained", ",", "progress", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.resnet34": [[243, 253], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet._resnet"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-34 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet34'", ",", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.resnet50": [[255, 265], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet._resnet"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-50 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet50'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.resnet101": [[267, 277], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet._resnet"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-101 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet101'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.resnet152": [[279, 289], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet._resnet"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-152 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet152'", ",", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.resnext50_32x4d": [[291, 303], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet._resnet"], ["", "def", "resnext50_32x4d", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNeXt-50 32x4d model from\n    `\"Aggregated Residual Transformation for Deep Neural Networks\" <https://arxiv.org/pdf/1611.05431.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "kwargs", "[", "'groups'", "]", "=", "32", "\n", "kwargs", "[", "'width_per_group'", "]", "=", "4", "\n", "return", "_resnet", "(", "'resnext50_32x4d'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.resnext101_32x8d": [[305, 317], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet._resnet"], ["", "def", "resnext101_32x8d", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNeXt-101 32x8d model from\n    `\"Aggregated Residual Transformation for Deep Neural Networks\" <https://arxiv.org/pdf/1611.05431.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "kwargs", "[", "'groups'", "]", "=", "32", "\n", "kwargs", "[", "'width_per_group'", "]", "=", "8", "\n", "return", "_resnet", "(", "'resnext101_32x8d'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "\n", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.wide_resnet50_2": [[319, 335], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet._resnet"], ["", "def", "wide_resnet50_2", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"Wide ResNet-50-2 model from\n    `\"Wide Residual Networks\" <https://arxiv.org/pdf/1605.07146.pdf>`_\n\n    The model is the same as ResNet except for the bottleneck number of channels\n    which is twice larger in every block. The number of channels in outer 1x1\n    convolutions is the same, e.g. last block in ResNet-50 has 2048-512-2048\n    channels, and in Wide ResNet-50-2 has 2048-1024-2048.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "kwargs", "[", "'width_per_group'", "]", "=", "64", "*", "2", "\n", "return", "_resnet", "(", "'wide_resnet50_2'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet.wide_resnet101_2": [[337, 353], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.resnet._resnet"], ["", "def", "wide_resnet101_2", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"Wide ResNet-101-2 model from\n    `\"Wide Residual Networks\" <https://arxiv.org/pdf/1605.07146.pdf>`_\n\n    The model is the same as ResNet except for the bottleneck number of channels\n    which is twice larger in every block. The number of channels in outer 1x1\n    convolutions is the same, e.g. last block in ResNet-50 has 2048-512-2048\n    channels, and in Wide ResNet-50-2 has 2048-1024-2048.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "kwargs", "[", "'width_per_group'", "]", "=", "64", "*", "2", "\n", "return", "_resnet", "(", "'wide_resnet101_2'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "\n", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.head.LinearHead.__init__": [[7, 17], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "head.LinearHead.net.parameters", "head.LinearHead.fc.weight.data.normal_", "head.LinearHead.fc.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Multi_Transform.__init__"], ["    ", "def", "__init__", "(", "self", ",", "net", ",", "dim_in", "=", "2048", ",", "dim_out", "=", "1000", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "dim_in", ",", "dim_out", ")", "\n", "\n", "for", "param", "in", "self", ".", "net", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "self", ".", "fc", ".", "weight", ".", "data", ".", "normal_", "(", "mean", "=", "0.0", ",", "std", "=", "0.01", ")", "\n", "self", ".", "fc", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.head.LinearHead.forward": [[18, 22], ["head.LinearHead.fc", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "head.LinearHead.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "feat", "=", "self", ".", "net", "(", "x", ")", "\n", "", "return", "self", ".", "fc", "(", "feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.head.ProjectionHead.__init__": [[25, 31], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Multi_Transform.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", "=", "2048", ",", "hidden_dim", "=", "4096", ",", "dim_out", "=", "512", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "dim_in", ",", "hidden_dim", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "hidden_dim", ",", "dim_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.head.ProjectionHead.forward": [[32, 37], ["head.ProjectionHead.linear1", "head.ProjectionHead.relu1", "head.ProjectionHead.linear2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "linear1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu1", "(", "x", ")", "\n", "x", "=", "self", ".", "linear2", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl_multi.ReSSL.__init__": [[12, 37], ["torch.Module.__init__", "BackBone", "BackBone", "zip", "ressl_multi.ReSSL.register_buffer", "torch.functional.normalize", "torch.functional.normalize", "ressl_multi.ReSSL.register_buffer", "ressl_multi.ReSSL.encoder_q.parameters", "ressl_multi.ReSSL.encoder_k.parameters", "param_k.data.copy_", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Multi_Transform.__init__"], ["import", "os", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--port'", ",", "type", "=", "int", ",", "default", "=", "23457", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "200", ")", "\n", "parser", ".", "add_argument", "(", "'--t'", ",", "type", "=", "float", ",", "default", "=", "0.04", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "0.05", ")", "\n", "parser", ".", "add_argument", "(", "'--backbone'", ",", "type", "=", "str", ",", "default", "=", "'resnet50'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "print", "(", "args", ")", "\n", "\n", "epochs", "=", "args", ".", "epochs", "\n", "warm_up", "=", "5", "\n", "\n", "\n", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "base_lr", ",", "i", ",", "iteration_per_epoch", ")", ":", "\n", "    ", "T", "=", "epoch", "*", "iteration_per_epoch", "+", "i", "\n", "warmup_iters", "=", "warm_up", "*", "iteration_per_epoch", "\n", "total_iters", "=", "(", "epochs", "-", "warm_up", ")", "*", "iteration_per_epoch", "\n", "\n", "if", "epoch", "<", "warm_up", ":", "\n", "        ", "lr", "=", "base_lr", "*", "1.0", "*", "T", "/", "warmup_iters", "\n", "", "else", ":", "\n", "        ", "T", "=", "T", "-", "warmup_iters", "\n", "lr", "=", "0.5", "*", "base_lr", "*", "(", "1", "+", "math", ".", "cos", "(", "1.0", "*", "T", "/", "total_iters", "*", "math", ".", "pi", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl_multi.ReSSL._momentum_update_key_encoder": [[38, 45], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "zip", "ressl_multi.ReSSL.encoder_q.parameters", "ressl_multi.ReSSL.encoder_k.parameters"], "methods", ["None"], ["", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n", "\n", "", "", "def", "train", "(", "train_loader", ",", "model", ",", "local_rank", ",", "rank", ",", "criterion", ",", "optimizer", ",", "base_lr", ",", "epoch", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", "'Time'", ",", "':6.3f'", ")", "\n", "data_time", "=", "AverageMeter", "(", "'Data'", ",", "':6.3f'", ")", "\n", "losses", "=", "AverageMeter", "(", "'Loss'", ",", "':.4e'", ")", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl_multi.ReSSL._dequeue_and_enqueue": [[46, 61], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "ressl_multi.concat_all_gather", "int"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.concat_all_gather"], ["progress", "=", "ProgressMeter", "(", "\n", "len", "(", "train_loader", ")", ",", "\n", "[", "batch_time", ",", "data_time", ",", "losses", "]", ",", "\n", "prefix", "=", "\"Epoch: [{}]\"", ".", "format", "(", "epoch", ")", ")", "\n", "\n", "# switch to train mode", "\n", "model", ".", "train", "(", ")", "\n", "\n", "iteration_per_epoch", "=", "len", "(", "train_loader", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "img_list", ",", "_", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "base_lr", ",", "i", ",", "iteration_per_epoch", ")", "\n", "# measure data loading time", "\n", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl_multi.ReSSL._batch_shuffle_ddp": [[62, 89], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "ressl_multi.concat_all_gather", "torch.randperm().cuda", "torch.randperm().cuda", "torch.randperm().cuda", "torch.randperm().cuda", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.randperm().cuda.view", "torch.randperm().cuda.view", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.concat_all_gather"], ["if", "local_rank", "is", "not", "None", ":", "\n", "            ", "img_list", "=", "[", "img", ".", "cuda", "(", "local_rank", ",", "non_blocking", "=", "True", ")", "for", "img", "in", "img_list", "]", "\n", "\n", "# compute output", "\n", "", "logitsq", ",", "ligitsk", "=", "model", "(", "im_q", "=", "img_list", "[", "1", ":", "]", ",", "im_k", "=", "img_list", "[", "0", "]", ")", "\n", "loss", "=", "-", "torch", ".", "sum", "(", "F", ".", "softmax", "(", "ligitsk", ".", "detach", "(", ")", "/", "args", ".", "t", ",", "dim", "=", "1", ")", "*", "F", ".", "log_softmax", "(", "logitsq", "/", "0.1", ",", "dim", "=", "1", ")", ",", "dim", "=", "1", ")", ".", "mean", "(", ")", "\n", "\n", "# acc1/acc5 are (K+1)-way contrast classifier accuracy", "\n", "# measure accuracy and record loss", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "logitsq", ".", "size", "(", "0", ")", ")", "\n", "\n", "# compute gradient and do SGD step", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "i", "%", "20", "==", "0", "and", "rank", "==", "0", ":", "\n", "            ", "progress", ".", "display", "(", "i", ")", "\n", "\n", "\n", "", "", "", "def", "main", "(", ")", ":", "\n", "    ", "from", "torch", ".", "nn", ".", "parallel", "import", "DistributedDataParallel", "\n", "import", "math", "\n", "from", "util", ".", "dist_init", "import", "dist_init", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl_multi.ReSSL._batch_unshuffle_ddp": [[90, 108], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "ressl_multi.concat_all_gather", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "idx_unshuffle.view"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.concat_all_gather"], ["\n", "rank", ",", "local_rank", ",", "world_size", "=", "dist_init", "(", "args", ".", "port", ")", "\n", "\n", "batch_size", "=", "32", "# single gpu", "\n", "num_workers", "=", "8", "\n", "base_lr", "=", "args", ".", "lr", "\n", "\n", "model", "=", "ReSSL", "(", "backbone", "=", "args", ".", "backbone", ")", "\n", "model", "=", "DistributedDataParallel", "(", "model", ".", "to", "(", "local_rank", ")", ",", "device_ids", "=", "[", "local_rank", "]", ",", "output_device", "=", "local_rank", ")", "\n", "\n", "param_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "param_dict", "[", "k", "]", "=", "v", "\n", "\n", "", "bn_params", "=", "[", "v", "for", "n", ",", "v", "in", "param_dict", ".", "items", "(", ")", "if", "(", "'bn'", "in", "n", "or", "'bias'", "in", "n", ")", "]", "\n", "rest_params", "=", "[", "v", "for", "n", ",", "v", "in", "param_dict", ".", "items", "(", ")", "if", "not", "(", "'bn'", "in", "n", "or", "'bias'", "in", "n", ")", "]", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "{", "'params'", ":", "bn_params", ",", "'weight_decay'", ":", "0", ",", "}", ",", "\n", "{", "'params'", ":", "rest_params", ",", "'weight_decay'", ":", "1e-4", "}", "]", ",", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl_multi.ReSSL.forward": [[109, 135], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum().repeat", "torch.einsum().repeat", "torch.einsum().repeat", "torch.einsum().repeat", "ressl_multi.ReSSL._dequeue_and_enqueue", "ressl_multi.ReSSL.encoder_q", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "ressl_multi.ReSSL._momentum_update_key_encoder", "ressl_multi.ReSSL._batch_shuffle_ddp", "ressl_multi.ReSSL.encoder_k", "ressl_multi.ReSSL._batch_unshuffle_ddp", "len", "ressl_multi.ReSSL.queue.clone().detach", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "ressl_multi.ReSSL.queue.clone", "ressl_multi.ReSSL.queue.clone().detach", "ressl_multi.ReSSL.queue.clone"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.ReSSL._dequeue_and_enqueue", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.ReSSL._momentum_update_key_encoder", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.ReSSL._batch_shuffle_ddp", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.ReSSL._batch_unshuffle_ddp"], ["lr", "=", "base_lr", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "1e-4", ")", "\n", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "train_dataset", "=", "Imagenet", "(", "aug", "=", "Multi_Transform", "(", "nmb_crops", "=", "[", "1", ",", "1", ",", "1", ",", "1", ",", "1", "]", ")", ",", "max_class", "=", "1000", ")", "\n", "train_sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "train_dataset", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "(", "train_sampler", "is", "None", ")", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "True", ",", "sampler", "=", "train_sampler", ",", "drop_last", "=", "True", ")", "\n", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "cuda", "(", "local_rank", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'checkpoints'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'checkpoints'", ")", "\n", "\n", "", "checkpoint_path", "=", "'checkpoints/ressl-multi-{}-{}.pth'", ".", "format", "(", "args", ".", "backbone", ",", "epochs", ")", "\n", "print", "(", "'checkpoint_path:'", ",", "checkpoint_path", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "checkpoint_path", ")", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ",", "map_location", "=", "'cpu'", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "print", "(", "checkpoint_path", ",", "'found, start from epoch'", ",", "start_epoch", ")", "\n", "", "else", ":", "\n", "        ", "start_epoch", "=", "0", "\n", "print", "(", "checkpoint_path", ",", "'not found, start from epoch 0'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl_multi.concat_all_gather": [[138, 150], ["torch.no_grad", "torch.no_grad", "torch.distributed.all_gather", "torch.distributed.all_gather", "torch.cat", "torch.cat", "torch.ones_like", "torch.ones_like", "range", "torch.distributed.get_world_size", "torch.distributed.get_world_size"], "function", ["None"], ["for", "epoch", "in", "range", "(", "start_epoch", ",", "epochs", ")", ":", "\n", "        ", "train_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "train", "(", "train_loader", ",", "model", ",", "local_rank", ",", "rank", ",", "criterion", ",", "optimizer", ",", "base_lr", ",", "epoch", ")", "\n", "\n", "if", "rank", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "\n", "{", "\n", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", "+", "1", "\n", "}", ",", "checkpoint_path", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.ReSSL.__init__": [[12, 36], ["torch.Module.__init__", "BackBone", "BackBone", "zip", "ressl.ReSSL.register_buffer", "torch.functional.normalize", "torch.functional.normalize", "ressl.ReSSL.register_buffer", "ressl.ReSSL.encoder_q.parameters", "ressl.ReSSL.encoder_k.parameters", "param_k.data.copy_", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Multi_Transform.__init__"], ["import", "os", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--port'", ",", "type", "=", "int", ",", "default", "=", "23457", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "200", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "0.05", ")", "\n", "parser", ".", "add_argument", "(", "'--t'", ",", "type", "=", "float", ",", "default", "=", "0.04", ")", "\n", "parser", ".", "add_argument", "(", "'--backbone'", ",", "type", "=", "str", ",", "default", "=", "'resnet50'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "print", "(", "args", ")", "\n", "\n", "epochs", "=", "args", ".", "epochs", "\n", "warm_up", "=", "5", "\n", "\n", "\n", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "base_lr", ",", "i", ",", "iteration_per_epoch", ")", ":", "\n", "    ", "T", "=", "epoch", "*", "iteration_per_epoch", "+", "i", "\n", "warmup_iters", "=", "warm_up", "*", "iteration_per_epoch", "\n", "total_iters", "=", "(", "epochs", "-", "warm_up", ")", "*", "iteration_per_epoch", "\n", "\n", "if", "epoch", "<", "warm_up", ":", "\n", "        ", "lr", "=", "base_lr", "*", "1.0", "*", "T", "/", "warmup_iters", "\n", "", "else", ":", "\n", "        ", "T", "=", "T", "-", "warmup_iters", "\n", "lr", "=", "0.5", "*", "base_lr", "*", "(", "1", "+", "math", ".", "cos", "(", "1.0", "*", "T", "/", "total_iters", "*", "math", ".", "pi", ")", ")", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.ReSSL._momentum_update_key_encoder": [[37, 44], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "zip", "ressl.ReSSL.encoder_q.parameters", "ressl.ReSSL.encoder_k.parameters"], "methods", ["None"], ["\n", "", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n", "\n", "", "", "def", "train", "(", "train_loader", ",", "model", ",", "local_rank", ",", "rank", ",", "criterion", ",", "optimizer", ",", "base_lr", ",", "epoch", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", "'Time'", ",", "':6.3f'", ")", "\n", "data_time", "=", "AverageMeter", "(", "'Data'", ",", "':6.3f'", ")", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.ReSSL._dequeue_and_enqueue": [[45, 60], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "ressl.concat_all_gather", "int"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.concat_all_gather"], ["losses", "=", "AverageMeter", "(", "'Loss'", ",", "':.4e'", ")", "\n", "progress", "=", "ProgressMeter", "(", "\n", "len", "(", "train_loader", ")", ",", "\n", "[", "batch_time", ",", "data_time", ",", "losses", "]", ",", "\n", "prefix", "=", "\"Epoch: [{}]\"", ".", "format", "(", "epoch", ")", ")", "\n", "\n", "# switch to train mode", "\n", "model", ".", "train", "(", ")", "\n", "\n", "iteration_per_epoch", "=", "len", "(", "train_loader", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "img1", ",", "img2", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "base_lr", ",", "i", ",", "iteration_per_epoch", ")", "\n", "# measure data loading time", "\n", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.ReSSL._batch_shuffle_ddp": [[61, 88], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "ressl.concat_all_gather", "torch.randperm().cuda", "torch.randperm().cuda", "torch.randperm().cuda", "torch.randperm().cuda", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.distributed.broadcast", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.randperm().cuda.view", "torch.randperm().cuda.view", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.concat_all_gather"], ["\n", "if", "local_rank", "is", "not", "None", ":", "\n", "            ", "img1", "=", "img1", ".", "cuda", "(", "local_rank", ",", "non_blocking", "=", "True", ")", "\n", "img2", "=", "img2", ".", "cuda", "(", "local_rank", ",", "non_blocking", "=", "True", ")", "\n", "\n", "# compute output", "\n", "", "logitsq", ",", "ligitsk", "=", "model", "(", "im_q", "=", "img1", ",", "im_k", "=", "img2", ")", "\n", "loss", "=", "-", "torch", ".", "sum", "(", "F", ".", "softmax", "(", "ligitsk", ".", "detach", "(", ")", "/", "args", ".", "t", ",", "dim", "=", "1", ")", "*", "F", ".", "log_softmax", "(", "logitsq", "/", "0.1", ",", "dim", "=", "1", ")", ",", "dim", "=", "1", ")", ".", "mean", "(", ")", "\n", "\n", "# acc1/acc5 are (K+1)-way contrast classifier accuracy", "\n", "# measure accuracy and record loss", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "img1", ".", "size", "(", "0", ")", ")", "\n", "\n", "# compute gradient and do SGD step", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "i", "%", "20", "==", "0", "and", "rank", "==", "0", ":", "\n", "            ", "progress", ".", "display", "(", "i", ")", "\n", "\n", "\n", "", "", "", "def", "main", "(", ")", ":", "\n", "    ", "from", "torch", ".", "nn", ".", "parallel", "import", "DistributedDataParallel", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.ReSSL._batch_unshuffle_ddp": [[89, 107], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "ressl.concat_all_gather", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank", "idx_unshuffle.view"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.concat_all_gather"], ["from", "util", ".", "dist_init", "import", "dist_init", "\n", "\n", "rank", ",", "local_rank", ",", "world_size", "=", "dist_init", "(", "args", ".", "port", ")", "\n", "\n", "batch_size", "=", "32", "# single gpu", "\n", "num_workers", "=", "8", "\n", "base_lr", "=", "args", ".", "lr", "\n", "\n", "model", "=", "ReSSL", "(", "backbone", "=", "args", ".", "backbone", ")", "\n", "model", "=", "DistributedDataParallel", "(", "model", ".", "to", "(", "local_rank", ")", ",", "device_ids", "=", "[", "local_rank", "]", ",", "output_device", "=", "local_rank", ")", "\n", "\n", "param_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "param_dict", "[", "k", "]", "=", "v", "\n", "\n", "", "bn_params", "=", "[", "v", "for", "n", ",", "v", "in", "param_dict", ".", "items", "(", ")", "if", "(", "'bn'", "in", "n", "or", "'bias'", "in", "n", ")", "]", "\n", "rest_params", "=", "[", "v", "for", "n", ",", "v", "in", "param_dict", ".", "items", "(", ")", "if", "not", "(", "'bn'", "in", "n", "or", "'bias'", "in", "n", ")", "]", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "{", "'params'", ":", "bn_params", ",", "'weight_decay'", ":", "0", ",", "}", ",", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.ReSSL.forward": [[108, 135], ["ressl.ReSSL.encoder_q", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "ressl.ReSSL._dequeue_and_enqueue", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "ressl.ReSSL._momentum_update_key_encoder", "ressl.ReSSL._batch_shuffle_ddp", "ressl.ReSSL.encoder_k", "ressl.ReSSL._batch_unshuffle_ddp", "ressl.ReSSL.queue.clone().detach", "ressl.ReSSL.queue.clone().detach", "ressl.ReSSL.queue.clone", "ressl.ReSSL.queue.clone"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.ReSSL._dequeue_and_enqueue", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.ReSSL._momentum_update_key_encoder", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.ReSSL._batch_shuffle_ddp", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.ReSSL._batch_unshuffle_ddp"], ["{", "'params'", ":", "rest_params", ",", "'weight_decay'", ":", "1e-4", "}", "]", ",", "\n", "lr", "=", "base_lr", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "1e-4", ")", "\n", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "train_dataset", "=", "ImagenetContrastive", "(", "aug", "=", "[", "moco_aug", ",", "target_aug", "]", ",", "max_class", "=", "1000", ")", "\n", "train_sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "train_dataset", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "(", "train_sampler", "is", "None", ")", ",", "\n", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "True", ",", "sampler", "=", "train_sampler", ",", "drop_last", "=", "True", ")", "\n", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "cuda", "(", "local_rank", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'checkpoints'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'checkpoints'", ")", "\n", "\n", "", "checkpoint_path", "=", "'checkpoints/ressl-{}-{}.pth'", ".", "format", "(", "args", ".", "backbone", ",", "epochs", ")", "\n", "print", "(", "'checkpoint_path:'", ",", "checkpoint_path", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "checkpoint_path", ")", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ",", "map_location", "=", "'cpu'", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "print", "(", "checkpoint_path", ",", "'found, start from epoch'", ",", "start_epoch", ")", "\n", "", "else", ":", "\n", "        ", "start_epoch", "=", "0", "\n", "print", "(", "checkpoint_path", ",", "'not found, start from epoch 0'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.ressl.concat_all_gather": [[138, 150], ["torch.no_grad", "torch.no_grad", "torch.distributed.all_gather", "torch.distributed.all_gather", "torch.cat", "torch.cat", "torch.ones_like", "torch.ones_like", "range", "torch.distributed.get_world_size", "torch.distributed.get_world_size"], "function", ["None"], ["for", "epoch", "in", "range", "(", "start_epoch", ",", "epochs", ")", ":", "\n", "        ", "train_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "train", "(", "train_loader", ",", "model", ",", "local_rank", ",", "rank", ",", "criterion", ",", "optimizer", ",", "base_lr", ",", "epoch", ")", "\n", "\n", "if", "rank", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "\n", "{", "\n", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", "+", "1", "\n", "}", ",", "checkpoint_path", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.backbone.BackBone.__init__": [[20, 25], ["torch.Module.__init__", "ProjectionHead"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Multi_Transform.__init__"], ["    ", "def", "__init__", "(", "self", ",", "backbone", "=", "'resnet50'", ",", "hidden_dim", "=", "4096", ",", "dim", "=", "512", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "dim_in", "=", "dim_dict", "[", "backbone", "]", "\n", "self", ".", "net", "=", "backbone_dict", "[", "backbone", "]", "(", ")", "\n", "self", ".", "head", "=", "ProjectionHead", "(", "dim_in", "=", "dim_in", ",", "hidden_dim", "=", "hidden_dim", ",", "dim_out", "=", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.network.backbone.BackBone.forward": [[26, 30], ["backbone.BackBone.net", "backbone.BackBone.head", "F.normalize"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat", "=", "self", ".", "net", "(", "x", ")", "\n", "embedding", "=", "self", ".", "head", "(", "feat", ")", "\n", "return", "F", ".", "normalize", "(", "embedding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.torch_dist_sum.torch_dist_sum": [[15, 28], ["isinstance", "torch.distributed.all_reduce", "tensor_args.append", "arg.clone().reshape().detach().cuda", "torch.tensor().reshape().cuda", "arg.clone().reshape().detach", "torch.tensor().reshape", "arg.clone().reshape", "torch.tensor", "arg.clone"], "function", ["None"], ["def", "torch_dist_sum", "(", "gpu", ",", "*", "args", ")", ":", "\n", "    ", "process_group", "=", "torch", ".", "distributed", ".", "group", ".", "WORLD", "\n", "tensor_args", "=", "[", "]", "\n", "pending_res", "=", "[", "]", "\n", "for", "arg", "in", "args", ":", "\n", "        ", "if", "isinstance", "(", "arg", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "tensor_arg", "=", "arg", ".", "clone", "(", ")", ".", "reshape", "(", "-", "1", ")", ".", "detach", "(", ")", ".", "cuda", "(", "gpu", ")", "\n", "", "else", ":", "\n", "            ", "tensor_arg", "=", "torch", ".", "tensor", "(", "arg", ")", ".", "reshape", "(", "-", "1", ")", ".", "cuda", "(", "gpu", ")", "\n", "", "torch", ".", "distributed", ".", "all_reduce", "(", "tensor_arg", ",", "group", "=", "process_group", ")", "\n", "tensor_args", ".", "append", "(", "tensor_arg", ")", "\n", "\n", "", "return", "tensor_args", "\n", "", ""]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.__init__": [[4, 8], ["meter.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.reset"], ["def", "__init__", "(", "self", ",", "name", ",", "fmt", "=", "':f'", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "fmt", "=", "fmt", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.reset": [[9, 14], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.update": [[15, 20], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.AverageMeter.__str__": [[21, 24], ["fmtstr.format"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "fmtstr", "=", "'{name} {val'", "+", "self", ".", "fmt", "+", "'} ({avg'", "+", "self", ".", "fmt", "+", "'})'", "\n", "return", "fmtstr", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.ProgressMeter.__init__": [[27, 31], ["meter.ProgressMeter._get_batch_fmtstr"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.ProgressMeter._get_batch_fmtstr"], ["    ", "def", "__init__", "(", "self", ",", "num_batches", ",", "meters", ",", "prefix", "=", "\"\"", ")", ":", "\n", "        ", "self", ".", "batch_fmtstr", "=", "self", ".", "_get_batch_fmtstr", "(", "num_batches", ")", "\n", "self", ".", "meters", "=", "meters", "\n", "self", ".", "prefix", "=", "prefix", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.ProgressMeter.display": [[32, 36], ["print", "str", "meter.ProgressMeter.batch_fmtstr.format"], "methods", ["None"], ["", "def", "display", "(", "self", ",", "batch", ")", ":", "\n", "        ", "entries", "=", "[", "self", ".", "prefix", "+", "self", ".", "batch_fmtstr", ".", "format", "(", "batch", ")", "]", "\n", "entries", "+=", "[", "str", "(", "meter", ")", "for", "meter", "in", "self", ".", "meters", "]", "\n", "print", "(", "'\\t'", ".", "join", "(", "entries", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.meter.ProgressMeter._get_batch_fmtstr": [[37, 41], ["len", "str", "str", "fmt.format"], "methods", ["None"], ["", "def", "_get_batch_fmtstr", "(", "self", ",", "num_batches", ")", ":", "\n", "        ", "num_digits", "=", "len", "(", "str", "(", "num_batches", "//", "1", ")", ")", "\n", "fmt", "=", "'{:'", "+", "str", "(", "num_digits", ")", "+", "'d}'", "\n", "return", "'['", "+", "fmt", "+", "'/'", "+", "fmt", ".", "format", "(", "num_batches", ")", "+", "']'", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.dist_init.dist_init": [[4, 44], ["int", "int", "int", "dist_init.dist_init.parse_host_addr"], "function", ["None"], ["def", "dist_init", "(", "port", "=", "23456", ")", ":", "\n", "\n", "    ", "def", "init_parrots", "(", "host_addr", ",", "rank", ",", "local_rank", ",", "world_size", ",", "port", ")", ":", "\n", "        ", "os", ".", "environ", "[", "'MASTER_ADDR'", "]", "=", "str", "(", "host_addr", ")", "\n", "os", ".", "environ", "[", "'MASTER_PORT'", "]", "=", "str", "(", "port", ")", "\n", "os", ".", "environ", "[", "'WORLD_SIZE'", "]", "=", "str", "(", "world_size", ")", "\n", "os", ".", "environ", "[", "'RANK'", "]", "=", "str", "(", "rank", ")", "\n", "torch", ".", "distributed", ".", "init_process_group", "(", "backend", "=", "\"nccl\"", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "local_rank", ")", "\n", "\n", "", "def", "init", "(", "host_addr", ",", "rank", ",", "local_rank", ",", "world_size", ",", "port", ")", ":", "\n", "        ", "host_addr_full", "=", "'tcp://'", "+", "host_addr", "+", "':'", "+", "str", "(", "port", ")", "\n", "torch", ".", "distributed", ".", "init_process_group", "(", "\"nccl\"", ",", "init_method", "=", "host_addr_full", ",", "\n", "rank", "=", "rank", ",", "world_size", "=", "world_size", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "local_rank", ")", "\n", "assert", "torch", ".", "distributed", ".", "is_initialized", "(", ")", "\n", "\n", "\n", "", "def", "parse_host_addr", "(", "s", ")", ":", "\n", "        ", "if", "'['", "in", "s", ":", "\n", "            ", "left_bracket", "=", "s", ".", "index", "(", "'['", ")", "\n", "right_bracket", "=", "s", ".", "index", "(", "']'", ")", "\n", "prefix", "=", "s", "[", ":", "left_bracket", "]", "\n", "first_number", "=", "s", "[", "left_bracket", "+", "1", ":", "right_bracket", "]", ".", "split", "(", "','", ")", "[", "0", "]", ".", "split", "(", "'-'", ")", "[", "0", "]", "\n", "return", "prefix", "+", "first_number", "\n", "", "else", ":", "\n", "            ", "return", "s", "\n", "\n", "", "", "rank", "=", "int", "(", "os", ".", "environ", "[", "'SLURM_PROCID'", "]", ")", "\n", "local_rank", "=", "int", "(", "os", ".", "environ", "[", "'SLURM_LOCALID'", "]", ")", "\n", "world_size", "=", "int", "(", "os", ".", "environ", "[", "'SLURM_NTASKS'", "]", ")", "\n", "\n", "ip", "=", "parse_host_addr", "(", "os", ".", "environ", "[", "'SLURM_STEP_NODELIST'", "]", ")", "\n", "\n", "if", "torch", ".", "__version__", "==", "'parrots'", ":", "\n", "        ", "init_parrots", "(", "ip", ",", "rank", ",", "local_rank", ",", "world_size", ",", "port", ")", "\n", "", "else", ":", "\n", "        ", "init", "(", "ip", ",", "rank", ",", "local_rank", ",", "world_size", ",", "port", ")", "\n", "\n", "", "return", "rank", ",", "local_rank", ",", "world_size", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.util.accuracy.accuracy": [[4, 19], ["torch.no_grad", "max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the accuracy over the k top predictions for the specified values of k\"\"\"", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "            ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "", "", ""]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.DatasetCache.__init__": [[10, 13], ["torch.Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Multi_Transform.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "initialized", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.DatasetCache._init_memcached": [[15, 21], ["mc.MemcachedClient.GetInstance"], "methods", ["None"], ["", "def", "_init_memcached", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "initialized", ":", "\n", "            ", "server_list_config_file", "=", "\"/mnt/lustre/share/memcached_client/server_list.conf\"", "\n", "client_config_file", "=", "\"/mnt/lustre/share/memcached_client/client.conf\"", "\n", "self", ".", "mclient", "=", "mc", ".", "MemcachedClient", ".", "GetInstance", "(", "server_list_config_file", ",", "client_config_file", ")", "\n", "self", ".", "initialized", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.DatasetCache.load_image": [[22, 32], ["imagenet.DatasetCache._init_memcached", "mc.pyvector", "imagenet.DatasetCache.mclient.Get", "mc.ConvertBuffer", "io.BytesIO", "PIL.Image.open", "img.convert.convert.convert"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.DatasetCache._init_memcached"], ["", "", "def", "load_image", "(", "self", ",", "filename", ")", ":", "\n", "        ", "self", ".", "_init_memcached", "(", ")", "\n", "value", "=", "mc", ".", "pyvector", "(", ")", "\n", "self", ".", "mclient", ".", "Get", "(", "filename", ",", "value", ")", "\n", "value_str", "=", "mc", ".", "ConvertBuffer", "(", "value", ")", "\n", "\n", "buff", "=", "io", ".", "BytesIO", "(", "value_str", ")", "\n", "with", "Image", ".", "open", "(", "buff", ")", "as", "img", ":", "\n", "            ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.BaseDataset.__init__": [[36, 74], ["imagenet.DatasetCache.__init__", "os.path.join", "os.path.join", "open", "torchvision.Compose", "os.path.join", "os.path.join", "line.split", "int", "os.path.join", "os.path.join", "NotImplementedError", "imagenet.BaseDataset.samples.append", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Multi_Transform.__init__"], ["    ", "def", "__init__", "(", "self", ",", "mode", "=", "'train'", ",", "max_class", "=", "1000", ",", "aug", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "initialized", "=", "False", "\n", "\n", "\n", "prefix", "=", "'/mnt/lustreold/share/images/meta'", "\n", "image_folder_prefix", "=", "'/mnt/lustreold/share/images'", "\n", "if", "mode", "==", "'train'", ":", "\n", "            ", "image_list", "=", "os", ".", "path", ".", "join", "(", "prefix", ",", "'train.txt'", ")", "\n", "self", ".", "image_folder", "=", "os", ".", "path", ".", "join", "(", "image_folder_prefix", ",", "'train'", ")", "\n", "", "elif", "mode", "==", "'test'", ":", "\n", "            ", "image_list", "=", "os", ".", "path", ".", "join", "(", "prefix", ",", "'test.txt'", ")", "\n", "self", ".", "image_folder", "=", "os", ".", "path", ".", "join", "(", "image_folder_prefix", ",", "'test'", ")", "\n", "", "elif", "mode", "==", "'val'", ":", "\n", "            ", "image_list", "=", "os", ".", "path", ".", "join", "(", "prefix", ",", "'val.txt'", ")", "\n", "self", ".", "image_folder", "=", "os", ".", "path", ".", "join", "(", "image_folder_prefix", ",", "'val'", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'mode: '", "+", "mode", "+", "' does not exist please select from [train, test, eval]'", ")", "\n", "\n", "\n", "", "self", ".", "samples", "=", "[", "]", "\n", "with", "open", "(", "image_list", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "name", ",", "label", "=", "line", ".", "split", "(", ")", "\n", "label", "=", "int", "(", "label", ")", "\n", "if", "label", "<", "max_class", ":", "\n", "                    ", "self", ".", "samples", ".", "append", "(", "(", "label", ",", "name", ")", ")", "\n", "\n", "", "", "", "if", "aug", "is", "None", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "aug", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.ImagenetContrastive.__init__": [[79, 81], ["imagenet.BaseDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Multi_Transform.__init__"], ["    ", "def", "__init__", "(", "self", ",", "mode", "=", "'train'", ",", "max_class", "=", "1000", ",", "aug", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "mode", ",", "max_class", ",", "aug", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.ImagenetContrastive.__len__": [[82, 84], ["imagenet.ImagenetContrastive.samples.__len__"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.Imagenet.__len__"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "samples", ".", "__len__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.ImagenetContrastive.__getitem__": [[85, 92], ["os.path.join", "imagenet.ImagenetContrastive.load_image", "isinstance", "imagenet.ImagenetContrastive.transform", "imagenet.ImagenetContrastive.transform"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.DatasetCache.load_image"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "_", ",", "name", "=", "self", ".", "samples", "[", "index", "]", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_folder", ",", "name", ")", "\n", "img", "=", "self", ".", "load_image", "(", "filename", ")", "\n", "if", "isinstance", "(", "self", ".", "transform", ",", "list", ")", ":", "\n", "            ", "return", "self", ".", "transform", "[", "0", "]", "(", "img", ")", ",", "self", ".", "transform", "[", "1", "]", "(", "img", ")", "\n", "", "return", "self", ".", "transform", "(", "img", ")", ",", "self", ".", "transform", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.Imagenet.__init__": [[96, 98], ["imagenet.BaseDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Multi_Transform.__init__"], ["    ", "def", "__init__", "(", "self", ",", "mode", "=", "'train'", ",", "max_class", "=", "1000", ",", "aug", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "mode", ",", "max_class", ",", "aug", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.Imagenet.__len__": [[99, 101], ["imagenet.Imagenet.samples.__len__"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.Imagenet.__len__"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "samples", ".", "__len__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.Imagenet.__getitem__": [[102, 107], ["os.path.join", "imagenet.Imagenet.load_image", "imagenet.Imagenet.transform"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.imagenet.DatasetCache.load_image"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "label", ",", "name", "=", "self", ".", "samples", "[", "index", "]", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_folder", ",", "name", ")", "\n", "img", "=", "self", ".", "load_image", "(", "filename", ")", "\n", "return", "self", ".", "transform", "(", "img", ")", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.RandAugmentPC.__init__": [[189, 195], ["randaugment.my_augment_pool"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.my_augment_pool"], ["    ", "def", "__init__", "(", "self", ",", "n", ",", "m", ")", ":", "\n", "        ", "assert", "n", ">=", "1", "\n", "assert", "1", "<=", "m", "<=", "10", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "m", "=", "m", "\n", "self", ".", "augment_pool", "=", "my_augment_pool", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.RandAugmentPC.__call__": [[196, 204], ["random.choices", "randaugment.CutoutAbs", "numpy.random.uniform", "op", "random.random"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.CutoutAbs"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "ops", "=", "random", ".", "choices", "(", "self", ".", "augment_pool", ",", "k", "=", "self", ".", "n", ")", "\n", "for", "op", ",", "max_v", ",", "bias", "in", "ops", ":", "\n", "            ", "prob", "=", "np", ".", "random", ".", "uniform", "(", "0.2", ",", "0.8", ")", "\n", "if", "random", ".", "random", "(", ")", "+", "prob", ">=", "1", ":", "\n", "                ", "img", "=", "op", "(", "img", ",", "v", "=", "self", ".", "m", ",", "max_v", "=", "max_v", ",", "bias", "=", "bias", ")", "\n", "", "", "img", "=", "CutoutAbs", "(", "img", ",", "16", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.RandAugment.__init__": [[207, 213], ["randaugment.fixmatch_augment_pool"], "methods", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.fixmatch_augment_pool"], ["    ", "def", "__init__", "(", "self", ",", "n", ",", "m", ")", ":", "\n", "        ", "assert", "n", ">=", "0", "\n", "assert", "1", "<=", "m", "<=", "10", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "m", "=", "m", "\n", "self", ".", "augment_pool", "=", "fixmatch_augment_pool", "(", ")", "\n", "", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.RandAugment.__call__": [[213, 220], ["random.choices", "numpy.random.randint", "random.random", "op"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "ops", "=", "random", ".", "choices", "(", "self", ".", "augment_pool", ",", "k", "=", "self", ".", "n", ")", "\n", "for", "op", ",", "max_v", ",", "bias", "in", "ops", ":", "\n", "            ", "v", "=", "np", ".", "random", ".", "randint", "(", "1", ",", "self", ".", "m", ")", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "                ", "img", "=", "op", "(", "img", ",", "v", "=", "v", ",", "max_v", "=", "max_v", ",", "bias", "=", "bias", ")", "\n", "", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.AutoContrast": [[21, 23], ["PIL.ImageOps.autocontrast", "PIL.ImageOps.autocontrast", "PIL.ImageOps.autocontrast", "PIL.ImageOps.autocontrast"], "function", ["None"], ["def", "AutoContrast", "(", "img", ",", "**", "kwarg", ")", ":", "\n", "    ", "return", "PIL", ".", "ImageOps", ".", "autocontrast", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Brightness": [[25, 28], ["PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Brightness().enhance", "randaugment._float_parameter", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Brightness"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._float_parameter", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Brightness", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Brightness", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Brightness", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Brightness"], ["", "def", "Brightness", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageEnhance", ".", "Brightness", "(", "img", ")", ".", "enhance", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Color": [[30, 33], ["PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Color().enhance", "randaugment._float_parameter", "PIL.ImageEnhance.Color", "PIL.ImageEnhance.Color", "PIL.ImageEnhance.Color", "PIL.ImageEnhance.Color"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._float_parameter", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Color", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Color", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Color", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Color"], ["", "def", "Color", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageEnhance", ".", "Color", "(", "img", ")", ".", "enhance", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Contrast": [[35, 38], ["PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Contrast().enhance", "randaugment._float_parameter", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Contrast"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._float_parameter", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Contrast", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Contrast", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Contrast", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Contrast"], ["", "def", "Contrast", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageEnhance", ".", "Contrast", "(", "img", ")", ".", "enhance", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Cutout": [[40, 46], ["int", "randaugment.CutoutAbs", "randaugment._float_parameter", "min"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.CutoutAbs", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._float_parameter"], ["", "def", "Cutout", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "if", "v", "==", "0", ":", "\n", "        ", "return", "img", "\n", "", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "v", "=", "int", "(", "v", "*", "min", "(", "img", ".", "size", ")", ")", "\n", "return", "CutoutAbs", "(", "img", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.CutoutAbs": [[48, 62], ["numpy.random.uniform", "numpy.random.uniform", "int", "int", "int", "int", "img.copy.copy", "PIL.ImageDraw.Draw().rectangle", "PIL.ImageDraw.Draw().rectangle", "PIL.ImageDraw.Draw().rectangle", "PIL.ImageDraw.Draw().rectangle", "max", "max", "min", "min", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw"], "function", ["None"], ["", "def", "CutoutAbs", "(", "img", ",", "v", ",", "**", "kwarg", ")", ":", "\n", "    ", "w", ",", "h", "=", "img", ".", "size", "\n", "x0", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "w", ")", "\n", "y0", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "h", ")", "\n", "x0", "=", "int", "(", "max", "(", "0", ",", "x0", "-", "v", "/", "2.", ")", ")", "\n", "y0", "=", "int", "(", "max", "(", "0", ",", "y0", "-", "v", "/", "2.", ")", ")", "\n", "x1", "=", "int", "(", "min", "(", "w", ",", "x0", "+", "v", ")", ")", "\n", "y1", "=", "int", "(", "min", "(", "h", ",", "y0", "+", "v", ")", ")", "\n", "xy", "=", "(", "x0", ",", "y0", ",", "x1", ",", "y1", ")", "\n", "# gray", "\n", "color", "=", "(", "127", ",", "127", ",", "127", ")", "\n", "img", "=", "img", ".", "copy", "(", ")", "\n", "PIL", ".", "ImageDraw", ".", "Draw", "(", "img", ")", ".", "rectangle", "(", "xy", ",", "color", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Equalize": [[64, 66], ["PIL.ImageOps.equalize", "PIL.ImageOps.equalize", "PIL.ImageOps.equalize", "PIL.ImageOps.equalize"], "function", ["None"], ["", "def", "Equalize", "(", "img", ",", "**", "kwarg", ")", ":", "\n", "    ", "return", "PIL", ".", "ImageOps", ".", "equalize", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Identity": [[68, 70], ["None"], "function", ["None"], ["", "def", "Identity", "(", "img", ",", "**", "kwarg", ")", ":", "\n", "    ", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Invert": [[72, 74], ["PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert"], "function", ["None"], ["", "def", "Invert", "(", "img", ",", "**", "kwarg", ")", ":", "\n", "    ", "return", "PIL", ".", "ImageOps", ".", "invert", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Posterize": [[76, 79], ["PIL.ImageOps.posterize", "PIL.ImageOps.posterize", "PIL.ImageOps.posterize", "PIL.ImageOps.posterize", "randaugment._int_parameter"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._int_parameter"], ["", "def", "Posterize", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_int_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageOps", ".", "posterize", "(", "img", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Rotate": [[81, 86], ["img.rotate", "randaugment._int_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._int_parameter"], ["", "def", "Rotate", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_int_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "return", "img", ".", "rotate", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Sharpness": [[88, 91], ["PIL.ImageEnhance.Sharpness().enhance", "PIL.ImageEnhance.Sharpness().enhance", "PIL.ImageEnhance.Sharpness().enhance", "PIL.ImageEnhance.Sharpness().enhance", "randaugment._float_parameter", "PIL.ImageEnhance.Sharpness", "PIL.ImageEnhance.Sharpness", "PIL.ImageEnhance.Sharpness", "PIL.ImageEnhance.Sharpness"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._float_parameter", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Sharpness", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Sharpness", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Sharpness", "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Sharpness"], ["", "def", "Sharpness", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageEnhance", ".", "Sharpness", "(", "img", ")", ".", "enhance", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.ShearX": [[93, 98], ["img.transform", "randaugment._float_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._float_parameter"], ["", "def", "ShearX", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "return", "img", ".", "transform", "(", "img", ".", "size", ",", "PIL", ".", "Image", ".", "AFFINE", ",", "(", "1", ",", "v", ",", "0", ",", "0", ",", "1", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.ShearY": [[100, 105], ["img.transform", "randaugment._float_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._float_parameter"], ["", "def", "ShearY", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "return", "img", ".", "transform", "(", "img", ".", "size", ",", "PIL", ".", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "0", ",", "v", ",", "1", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.Solarize": [[107, 110], ["PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "randaugment._int_parameter"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._int_parameter"], ["", "def", "Solarize", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_int_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "return", "PIL", ".", "ImageOps", ".", "solarize", "(", "img", ",", "256", "-", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.SolarizeAdd": [[112, 122], ["numpy.array().astype", "numpy.clip", "img_np.astype.astype", "PIL.Image.fromarray", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "PIL.ImageOps.solarize", "randaugment._int_parameter", "random.random", "numpy.array"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._int_parameter"], ["", "def", "SolarizeAdd", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ",", "threshold", "=", "128", ")", ":", "\n", "    ", "v", "=", "_int_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "img_np", "=", "np", ".", "array", "(", "img", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "img_np", "=", "img_np", "+", "v", "\n", "img_np", "=", "np", ".", "clip", "(", "img_np", ",", "0", ",", "255", ")", "\n", "img_np", "=", "img_np", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "img_np", ")", "\n", "return", "PIL", ".", "ImageOps", ".", "solarize", "(", "img", ",", "threshold", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.TranslateX": [[124, 130], ["int", "img.transform", "randaugment._float_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._float_parameter"], ["", "def", "TranslateX", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "v", "=", "int", "(", "v", "*", "img", ".", "size", "[", "0", "]", ")", "\n", "return", "img", ".", "transform", "(", "img", ".", "size", ",", "PIL", ".", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "v", ",", "0", ",", "1", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.TranslateY": [[132, 138], ["int", "img.transform", "randaugment._float_parameter", "random.random"], "function", ["home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._float_parameter"], ["", "def", "TranslateY", "(", "img", ",", "v", ",", "max_v", ",", "bias", "=", "0", ")", ":", "\n", "    ", "v", "=", "_float_parameter", "(", "v", ",", "max_v", ")", "+", "bias", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "        ", "v", "=", "-", "v", "\n", "", "v", "=", "int", "(", "v", "*", "img", ".", "size", "[", "1", "]", ")", "\n", "return", "img", ".", "transform", "(", "img", ".", "size", ",", "PIL", ".", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "v", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._float_parameter": [[140, 142], ["float"], "function", ["None"], ["", "def", "_float_parameter", "(", "v", ",", "max_v", ")", ":", "\n", "    ", "return", "float", "(", "v", ")", "*", "max_v", "/", "PARAMETER_MAX", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment._int_parameter": [[144, 146], ["int"], "function", ["None"], ["", "def", "_int_parameter", "(", "v", ",", "max_v", ")", ":", "\n", "    ", "return", "int", "(", "v", "*", "max_v", "/", "PARAMETER_MAX", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.fixmatch_augment_pool": [[148, 165], ["None"], "function", ["None"], ["", "def", "fixmatch_augment_pool", "(", ")", ":", "\n", "# FixMatch paper", "\n", "    ", "augs", "=", "[", "(", "AutoContrast", ",", "None", ",", "None", ")", ",", "\n", "(", "Brightness", ",", "0.9", ",", "0.05", ")", ",", "\n", "(", "Color", ",", "0.9", ",", "0.05", ")", ",", "\n", "(", "Contrast", ",", "0.9", ",", "0.05", ")", ",", "\n", "(", "Equalize", ",", "None", ",", "None", ")", ",", "\n", "(", "Identity", ",", "None", ",", "None", ")", ",", "\n", "(", "Posterize", ",", "4", ",", "4", ")", ",", "\n", "(", "Rotate", ",", "30", ",", "0", ")", ",", "\n", "(", "Sharpness", ",", "0.9", ",", "0.05", ")", ",", "\n", "(", "ShearX", ",", "0.3", ",", "0", ")", ",", "\n", "(", "ShearY", ",", "0.3", ",", "0", ")", ",", "\n", "(", "Solarize", ",", "256", ",", "0", ")", ",", "\n", "(", "TranslateX", ",", "0.3", ",", "0", ")", ",", "\n", "(", "TranslateY", ",", "0.3", ",", "0", ")", "]", "\n", "return", "augs", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.randaugment.my_augment_pool": [[167, 186], ["None"], "function", ["None"], ["", "def", "my_augment_pool", "(", ")", ":", "\n", "# Test", "\n", "    ", "augs", "=", "[", "(", "AutoContrast", ",", "None", ",", "None", ")", ",", "\n", "(", "Brightness", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "Color", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "Contrast", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "Cutout", ",", "0.2", ",", "0", ")", ",", "\n", "(", "Equalize", ",", "None", ",", "None", ")", ",", "\n", "(", "Invert", ",", "None", ",", "None", ")", ",", "\n", "(", "Posterize", ",", "4", ",", "4", ")", ",", "\n", "(", "Rotate", ",", "30", ",", "0", ")", ",", "\n", "(", "Sharpness", ",", "1.8", ",", "0.1", ")", ",", "\n", "(", "ShearX", ",", "0.3", ",", "0", ")", ",", "\n", "(", "ShearY", ",", "0.3", ",", "0", ")", ",", "\n", "(", "Solarize", ",", "256", ",", "0", ")", ",", "\n", "(", "SolarizeAdd", ",", "110", ",", "0", ")", ",", "\n", "(", "TranslateX", ",", "0.45", ",", "0", ")", ",", "\n", "(", "TranslateY", ",", "0.45", ",", "0", ")", "]", "\n", "return", "augs", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.GaussianBlur.__init__": [[10, 12], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "sigma", "=", "[", ".1", ",", "2.", "]", ")", ":", "\n", "        ", "self", ".", "sigma", "=", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.GaussianBlur.__call__": [[13, 17], ["random.uniform", "x.filter.filter.filter", "PIL.ImageFilter.GaussianBlur"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "sigma", "=", "random", ".", "uniform", "(", "self", ".", "sigma", "[", "0", "]", ",", "self", ".", "sigma", "[", "1", "]", ")", "\n", "x", "=", "x", ".", "filter", "(", "ImageFilter", ".", "GaussianBlur", "(", "radius", "=", "sigma", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Solarize.__init__": [[20, 22], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "threshold", "=", "128", ")", ":", "\n", "        ", "self", ".", "threshold", "=", "threshold", "\n", "", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Solarize.__call__": [[22, 24], ["PIL.ImageOps.solarize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "return", "ImageOps", ".", "solarize", "(", "sample", ",", "self", ".", "threshold", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Multi_Transform.__init__": [[56, 117], ["torchvision.Normalize", "torchvision.Compose", "trans.append", "range", "trans.extend", "print", "len", "len", "len", "len", "len", "len", "torchvision.ColorJitter", "torchvision.ColorJitter", "len", "aug_list.extend", "torchvision.Compose", "trans_weak.extend", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.RandomResizedCrop", "torchvision.RandomApply", "torchvision.RandomGrayscale", "torchvision.RandomApply", "torchvision.RandomHorizontalFlip", "aug_list.append", "len", "data.randaugment.RandAugment", "torchvision.ToTensor", "augmentation.GaussianBlur"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "size_crops", "=", "[", "224", ",", "192", ",", "160", ",", "128", ",", "96", "]", ",", "\n", "nmb_crops", "=", "[", "1", ",", "1", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "min_scale_crops", "=", "[", "0.2", ",", "0.172", ",", "0.143", ",", "0.114", ",", "0.086", "]", ",", "\n", "max_scale_crops", "=", "[", "1.0", ",", "0.86", ",", "0.715", ",", "0.571", ",", "0.429", "]", ",", "\n", "init_size", "=", "224", ",", "\n", "strong", "=", "False", ")", ":", "\n", "        ", "assert", "len", "(", "size_crops", ")", "==", "len", "(", "nmb_crops", ")", "\n", "assert", "len", "(", "min_scale_crops", ")", "==", "len", "(", "nmb_crops", ")", "\n", "assert", "len", "(", "max_scale_crops", ")", "==", "len", "(", "nmb_crops", ")", "\n", "trans", "=", "[", "]", "\n", "\n", "self", ".", "strong", "=", "strong", "\n", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n", "#image_k", "\n", "weak", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "init_size", ",", "scale", "=", "(", "0.2", ",", "1.", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n", "trans", ".", "append", "(", "weak", ")", "\n", "\n", "\n", "trans_weak", "=", "[", "]", "\n", "if", "strong", ":", "\n", "            ", "min_scale_crops", "=", "[", "0.08", ",", "0.08", ",", "0.08", ",", "0.08", ",", "0.08", "]", "\n", "jitter", "=", "transforms", ".", "ColorJitter", "(", "0.8", ",", "0.8", ",", "0.8", ",", "0.2", ")", "\n", "", "else", ":", "\n", "            ", "jitter", "=", "transforms", ".", "ColorJitter", "(", "0.4", ",", "0.4", ",", "0.4", ",", "0.1", ")", "\n", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "size_crops", ")", ")", ":", "\n", "            ", "aug_list", "=", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "\n", "size_crops", "[", "i", "]", ",", "\n", "scale", "=", "(", "min_scale_crops", "[", "i", "]", ",", "max_scale_crops", "[", "i", "]", ")", "\n", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "jitter", "]", ",", "p", "=", "0.8", ")", ",", "\n", "transforms", ".", "RandomGrayscale", "(", "p", "=", "0.2", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "GaussianBlur", "(", "[", ".1", ",", "2.", "]", ")", "]", ",", "p", "=", "0.5", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "]", "\n", "\n", "if", "self", ".", "strong", ":", "\n", "                ", "aug_list", ".", "append", "(", "RandAugment", "(", "5", ",", "10", ")", ")", "\n", "\n", "", "aug_list", ".", "extend", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n", "\n", "aug", "=", "transforms", ".", "Compose", "(", "aug_list", ")", "\n", "trans_weak", ".", "extend", "(", "[", "aug", "]", "*", "nmb_crops", "[", "i", "]", ")", "\n", "\n", "", "trans", ".", "extend", "(", "trans_weak", ")", "\n", "self", ".", "trans", "=", "trans", "\n", "print", "(", "\"in total we have %d transforms\"", "%", "(", "len", "(", "self", ".", "trans", ")", ")", ")", "\n", "", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.KyleZheng1997_ReSSL.data.augmentation.Multi_Transform.__call__": [[117, 120], ["list", "map", "trans"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "multi_crops", "=", "list", "(", "map", "(", "lambda", "trans", ":", "trans", "(", "x", ")", ",", "self", ".", "trans", ")", ")", "\n", "return", "multi_crops", "\n", "\n"]]}