{"home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.layers.AddSingletonDepth.call": [[9, 16], ["keras.backend.expand_dims", "keras.backend.ndim", "keras.backend.permute_dimensions"], "methods", ["None"], ["    ", "def", "call", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "        ", "x", "=", "keras", ".", "backend", ".", "expand_dims", "(", "x", ",", "-", "1", ")", "# add a dimension of the right", "\n", "\n", "if", "keras", ".", "backend", ".", "ndim", "(", "x", ")", "==", "4", ":", "\n", "            ", "return", "keras", ".", "backend", ".", "permute_dimensions", "(", "x", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.layers.AddSingletonDepth.compute_output_shape": [[17, 22], ["len"], "methods", ["None"], ["", "", "def", "compute_output_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "if", "len", "(", "input_shape", ")", "==", "3", ":", "\n", "            ", "return", "input_shape", "[", "0", "]", ",", "1", ",", "input_shape", "[", "1", "]", ",", "input_shape", "[", "2", "]", "\n", "", "else", ":", "\n", "            ", "return", "input_shape", "[", "0", "]", ",", "input_shape", "[", "1", "]", ",", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.layers.Subtract.__init__": [[26, 28], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "Subtract", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.layers.Subtract.call": [[29, 31], ["None"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "        ", "return", "x", "[", "0", "]", "-", "x", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.layers.Subtract.compute_output_shape": [[32, 34], ["None"], "methods", ["None"], ["", "def", "compute_output_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "return", "input_shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.layers.Add.__init__": [[38, 40], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "Add", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.layers.Add.call": [[41, 46], ["range", "len"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "        ", "output", "=", "x", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "x", ")", ")", ":", "\n", "            ", "output", "+=", "x", "[", "i", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.layers.Add.compute_output_shape": [[47, 49], ["None"], "methods", ["None"], ["", "def", "compute_output_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "return", "input_shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.layers.Slice.__init__": [[53, 57], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "selector", ",", "output_shape", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "selector", "=", "selector", "\n", "self", ".", "desired_output_shape", "=", "output_shape", "\n", "super", "(", "Slice", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.layers.Slice.call": [[58, 71], ["keras.backend.permute_dimensions", "keras.backend.permute_dimensions", "len", "len", "type", "type", "type", "type"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "\n", "        ", "selector", "=", "self", ".", "selector", "\n", "if", "len", "(", "self", ".", "selector", ")", "==", "2", "and", "not", "type", "(", "self", ".", "selector", "[", "1", "]", ")", "is", "slice", "and", "not", "type", "(", "self", ".", "selector", "[", "1", "]", ")", "is", "int", ":", "\n", "            ", "x", "=", "keras", ".", "backend", ".", "permute_dimensions", "(", "x", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "selector", "=", "(", "self", ".", "selector", "[", "1", "]", ",", "self", ".", "selector", "[", "0", "]", ")", "\n", "\n", "", "y", "=", "x", "[", "selector", "]", "\n", "\n", "if", "len", "(", "self", ".", "selector", ")", "==", "2", "and", "not", "type", "(", "self", ".", "selector", "[", "1", "]", ")", "is", "slice", "and", "not", "type", "(", "self", ".", "selector", "[", "1", "]", ")", "is", "int", ":", "\n", "            ", "y", "=", "keras", ".", "backend", ".", "permute_dimensions", "(", "y", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.layers.Slice.compute_output_shape": [[73, 82], ["enumerate"], "methods", ["None"], ["", "def", "compute_output_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "\n", "        ", "output_shape", "=", "(", "None", ",", ")", "\n", "for", "i", ",", "dim_length", "in", "enumerate", "(", "self", ".", "desired_output_shape", ")", ":", "\n", "            ", "if", "dim_length", "==", "Ellipsis", ":", "\n", "                ", "output_shape", "=", "output_shape", "+", "(", "input_shape", "[", "i", "+", "1", "]", ",", ")", "\n", "", "else", ":", "\n", "                ", "output_shape", "=", "output_shape", "+", "(", "dim_length", ",", ")", "\n", "", "", "return", "output_shape", "\n", "", "", ""]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.separate.separate_sample": [[11, 173], ["int", "int", "tqdm.tqdm", "numpy.array", "os.path.join", "os.path.join", "util.write_wav", "util.write_wav", "int", "int", "tqdm.tqdm", "numpy.array", "numpy.array", "numpy.array", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "util.write_wav", "util.write_wav", "util.write_wav", "util.write_wav", "len", "ValueError", "numpy.ceil", "numpy.ceil", "range", "numpy.zeros", "range", "model.separate_batch", "vocals_output_fragment.flatten().tolist.flatten().tolist", "len", "ValueError", "numpy.ceil", "numpy.ceil", "range", "numpy.zeros", "range", "model.separate_batch", "vocals_output_fragment.flatten().tolist.flatten().tolist", "drums_output_fragment.flatten().tolist.flatten().tolist", "bass_output_fragment.flatten().tolist.flatten().tolist", "type", "type", "type", "type", "type", "type", "numpy.zeros", "vocals_output_fragment.flatten().tolist.flatten", "len", "numpy.zeros", "vocals_output_fragment.flatten().tolist.flatten", "drums_output_fragment.flatten().tolist.flatten", "bass_output_fragment.flatten().tolist.flatten", "len"], "function", ["None"], ["def", "separate_sample", "(", "model", ",", "input", ",", "batch_size", ",", "output_filename_prefix", ",", "sample_rate", ",", "output_path", ",", "target", ")", ":", "\n", "\n", "    ", "if", "target", "==", "'singing-voice'", ":", "\n", "\n", "        ", "if", "len", "(", "input", "[", "'mixture'", "]", ")", "<", "model", ".", "receptive_field_length", ":", "\n", "            ", "raise", "ValueError", "(", "'Input is not long enough to be used with this model.'", ")", "\n", "\n", "", "num_output_samples", "=", "input", "[", "'mixture'", "]", ".", "shape", "[", "0", "]", "-", "(", "model", ".", "receptive_field_length", "-", "1", ")", "\n", "num_fragments", "=", "int", "(", "np", ".", "ceil", "(", "num_output_samples", "/", "model", ".", "target_field_length", ")", ")", "\n", "num_batches", "=", "int", "(", "np", ".", "ceil", "(", "num_fragments", "/", "batch_size", ")", ")", "\n", "\n", "vocals_output", "=", "[", "]", "\n", "num_pad_values", "=", "0", "\n", "fragment_i", "=", "0", "\n", "for", "batch_i", "in", "tqdm", ".", "tqdm", "(", "range", "(", "0", ",", "num_batches", ")", ")", ":", "\n", "\n", "            ", "if", "batch_i", "==", "num_batches", "-", "1", ":", "# If its the last batch", "\n", "                ", "batch_size", "=", "num_fragments", "-", "batch_i", "*", "batch_size", "\n", "\n", "", "input_batch", "=", "np", ".", "zeros", "(", "(", "batch_size", ",", "model", ".", "input_length", ")", ")", "\n", "\n", "# Assemble batch", "\n", "for", "batch_fragment_i", "in", "range", "(", "0", ",", "batch_size", ")", ":", "\n", "\n", "                ", "if", "fragment_i", "+", "model", ".", "target_field_length", ">", "num_output_samples", ":", "\n", "                    ", "remainder", "=", "input", "[", "'mixture'", "]", "[", "fragment_i", ":", "]", "\n", "current_fragment", "=", "np", ".", "zeros", "(", "(", "model", ".", "input_length", ",", ")", ")", "\n", "current_fragment", "[", ":", "remainder", ".", "shape", "[", "0", "]", "]", "=", "remainder", "\n", "num_pad_values", "=", "model", ".", "input_length", "-", "remainder", ".", "shape", "[", "0", "]", "\n", "", "else", ":", "\n", "                    ", "current_fragment", "=", "input", "[", "'mixture'", "]", "[", "fragment_i", ":", "fragment_i", "+", "model", ".", "input_length", "]", "\n", "\n", "", "input_batch", "[", "batch_fragment_i", ",", ":", "]", "=", "current_fragment", "\n", "fragment_i", "+=", "model", ".", "target_field_length", "\n", "\n", "", "separated_output_fragments", "=", "model", ".", "separate_batch", "(", "{", "'data_input'", ":", "input_batch", "}", ")", "\n", "\n", "if", "type", "(", "separated_output_fragments", ")", "is", "list", ":", "\n", "                ", "vocals_output_fragment", "=", "separated_output_fragments", "[", "0", "]", "\n", "\n", "", "vocals_output_fragment", "=", "vocals_output_fragment", "[", ":", ",", "\n", "model", ".", "target_padding", ":", "model", ".", "target_padding", "+", "model", ".", "target_field_length", "]", "\n", "vocals_output_fragment", "=", "vocals_output_fragment", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "if", "type", "(", "separated_output_fragments", ")", "is", "float", ":", "\n", "                ", "vocals_output_fragment", "=", "[", "vocals_output_fragment", "]", "\n", "\n", "", "vocals_output", "=", "vocals_output", "+", "vocals_output_fragment", "\n", "\n", "", "vocals_output", "=", "np", ".", "array", "(", "vocals_output", ")", "\n", "\n", "if", "num_pad_values", "!=", "0", ":", "\n", "            ", "vocals_output", "=", "vocals_output", "[", ":", "-", "num_pad_values", "]", "\n", "\n", "", "mixture_valid_signal", "=", "input", "[", "'mixture'", "]", "[", "\n", "model", ".", "half_receptive_field_length", ":", "model", ".", "half_receptive_field_length", "+", "len", "(", "vocals_output", ")", "]", "\n", "\n", "accompaniment_output", "=", "mixture_valid_signal", "-", "vocals_output", "\n", "\n", "output_vocals_filename", "=", "output_filename_prefix", "+", "'_vocals.wav'", "\n", "output_accompaniment_filename", "=", "output_filename_prefix", "+", "'_accompaniment.wav'", "\n", "\n", "output_vocals_filepath", "=", "os", ".", "path", ".", "join", "(", "output_path", ",", "output_vocals_filename", ")", "\n", "output_accompaniment_filepath", "=", "os", ".", "path", ".", "join", "(", "output_path", ",", "output_accompaniment_filename", ")", "\n", "\n", "util", ".", "write_wav", "(", "vocals_output", ",", "output_vocals_filepath", ",", "sample_rate", ")", "\n", "util", ".", "write_wav", "(", "accompaniment_output", ",", "output_accompaniment_filepath", ",", "sample_rate", ")", "\n", "\n", "", "if", "target", "==", "'multi-instrument'", ":", "\n", "\n", "        ", "if", "len", "(", "input", "[", "'mixture'", "]", ")", "<", "model", ".", "receptive_field_length", ":", "\n", "            ", "raise", "ValueError", "(", "'Input is not long enough to be used with this model.'", ")", "\n", "\n", "", "num_output_samples", "=", "input", "[", "'mixture'", "]", ".", "shape", "[", "0", "]", "-", "(", "model", ".", "receptive_field_length", "-", "1", ")", "\n", "num_fragments", "=", "int", "(", "np", ".", "ceil", "(", "num_output_samples", "/", "model", ".", "target_field_length", ")", ")", "\n", "num_batches", "=", "int", "(", "np", ".", "ceil", "(", "num_fragments", "/", "batch_size", ")", ")", "\n", "\n", "vocals_output", "=", "[", "]", "\n", "drums_output", "=", "[", "]", "\n", "bass_output", "=", "[", "]", "\n", "\n", "num_pad_values", "=", "0", "\n", "fragment_i", "=", "0", "\n", "for", "batch_i", "in", "tqdm", ".", "tqdm", "(", "range", "(", "0", ",", "num_batches", ")", ")", ":", "\n", "\n", "            ", "if", "batch_i", "==", "num_batches", "-", "1", ":", "# If its the last batch", "\n", "                ", "batch_size", "=", "num_fragments", "-", "batch_i", "*", "batch_size", "\n", "\n", "", "input_batch", "=", "np", ".", "zeros", "(", "(", "batch_size", ",", "model", ".", "input_length", ")", ")", "\n", "\n", "# Assemble batch", "\n", "for", "batch_fragment_i", "in", "range", "(", "0", ",", "batch_size", ")", ":", "\n", "\n", "                ", "if", "fragment_i", "+", "model", ".", "target_field_length", ">", "num_output_samples", ":", "\n", "                    ", "remainder", "=", "input", "[", "'mixture'", "]", "[", "fragment_i", ":", "]", "\n", "current_fragment", "=", "np", ".", "zeros", "(", "(", "model", ".", "input_length", ",", ")", ")", "\n", "current_fragment", "[", ":", "remainder", ".", "shape", "[", "0", "]", "]", "=", "remainder", "\n", "num_pad_values", "=", "model", ".", "input_length", "-", "remainder", ".", "shape", "[", "0", "]", "\n", "", "else", ":", "\n", "                    ", "current_fragment", "=", "input", "[", "'mixture'", "]", "[", "fragment_i", ":", "fragment_i", "+", "model", ".", "input_length", "]", "\n", "\n", "", "input_batch", "[", "batch_fragment_i", ",", ":", "]", "=", "current_fragment", "\n", "fragment_i", "+=", "model", ".", "target_field_length", "\n", "\n", "", "separated_output_fragments", "=", "model", ".", "separate_batch", "(", "{", "'data_input'", ":", "input_batch", "}", ")", "\n", "\n", "if", "type", "(", "separated_output_fragments", ")", "is", "list", ":", "\n", "                ", "vocals_output_fragment", "=", "separated_output_fragments", "[", "0", "]", "\n", "drums_output_fragment", "=", "separated_output_fragments", "[", "1", "]", "\n", "bass_output_fragment", "=", "separated_output_fragments", "[", "2", "]", "\n", "\n", "", "vocals_output_fragment", "=", "vocals_output_fragment", "[", ":", ",", "\n", "model", ".", "target_padding", ":", "model", ".", "target_padding", "+", "model", ".", "target_field_length", "]", "\n", "vocals_output_fragment", "=", "vocals_output_fragment", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "drums_output_fragment", "=", "drums_output_fragment", "[", ":", ",", "\n", "model", ".", "target_padding", ":", "model", ".", "target_padding", "+", "model", ".", "target_field_length", "]", "\n", "drums_output_fragment", "=", "drums_output_fragment", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "bass_output_fragment", "=", "bass_output_fragment", "[", ":", ",", "\n", "model", ".", "target_padding", ":", "model", ".", "target_padding", "+", "model", ".", "target_field_length", "]", "\n", "bass_output_fragment", "=", "bass_output_fragment", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "if", "type", "(", "separated_output_fragments", ")", "is", "float", ":", "\n", "                ", "vocals_output_fragment", "=", "[", "vocals_output_fragment", "]", "\n", "", "if", "type", "(", "drums_output_fragment", ")", "is", "float", ":", "\n", "                ", "drums_output_fragment", "=", "[", "drums_output_fragment", "]", "\n", "", "if", "type", "(", "bass_output_fragment", ")", "is", "float", ":", "\n", "                ", "bass_output_fragment", "=", "[", "bass_output_fragment", "]", "\n", "\n", "", "vocals_output", "=", "vocals_output", "+", "vocals_output_fragment", "\n", "drums_output", "=", "drums_output", "+", "drums_output_fragment", "\n", "bass_output", "=", "bass_output", "+", "bass_output_fragment", "\n", "\n", "", "vocals_output", "=", "np", ".", "array", "(", "vocals_output", ")", "\n", "drums_output", "=", "np", ".", "array", "(", "drums_output", ")", "\n", "bass_output", "=", "np", ".", "array", "(", "bass_output", ")", "\n", "\n", "if", "num_pad_values", "!=", "0", ":", "\n", "            ", "vocals_output", "=", "vocals_output", "[", ":", "-", "num_pad_values", "]", "\n", "drums_output", "=", "drums_output", "[", ":", "-", "num_pad_values", "]", "\n", "bass_output", "=", "bass_output", "[", ":", "-", "num_pad_values", "]", "\n", "\n", "", "mixture_valid_signal", "=", "input", "[", "'mixture'", "]", "[", "\n", "model", ".", "half_receptive_field_length", ":", "model", ".", "half_receptive_field_length", "+", "len", "(", "vocals_output", ")", "]", "\n", "\n", "other_output", "=", "mixture_valid_signal", "-", "vocals_output", "-", "drums_output", "-", "bass_output", "\n", "\n", "output_vocals_filename", "=", "output_filename_prefix", "+", "'_vocals.wav'", "\n", "output_drums_filename", "=", "output_filename_prefix", "+", "'_drums.wav'", "\n", "output_bass_filename", "=", "output_filename_prefix", "+", "'_bass.wav'", "\n", "output_other_filename", "=", "output_filename_prefix", "+", "'_other.wav'", "\n", "\n", "output_vocals_filepath", "=", "os", ".", "path", ".", "join", "(", "output_path", ",", "output_vocals_filename", ")", "\n", "output_drums_filepath", "=", "os", ".", "path", ".", "join", "(", "output_path", ",", "output_drums_filename", ")", "\n", "output_bass_filepath", "=", "os", ".", "path", ".", "join", "(", "output_path", ",", "output_bass_filename", ")", "\n", "output_other_filepath", "=", "os", ".", "path", ".", "join", "(", "output_path", ",", "output_other_filename", ")", "\n", "\n", "util", ".", "write_wav", "(", "vocals_output", ",", "output_vocals_filepath", ",", "sample_rate", ")", "\n", "util", ".", "write_wav", "(", "drums_output", ",", "output_drums_filepath", ",", "sample_rate", ")", "\n", "util", ".", "write_wav", "(", "bass_output", ",", "output_bass_filepath", ",", "sample_rate", ")", "\n", "util", ".", "write_wav", "(", "other_output", ",", "output_other_filepath", ",", "sample_rate", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.SingingVoiceMUSDB18Dataset.__init__": [[13, 27], ["util.get_condition_input_encode_func"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.get_condition_input_encode_func"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "model", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "path", "=", "config", "[", "'dataset'", "]", "[", "'path'", "]", "\n", "self", ".", "sample_rate", "=", "config", "[", "'dataset'", "]", "[", "'sample_rate'", "]", "\n", "self", ".", "file_paths", "=", "{", "'train'", ":", "{", "'vocals'", ":", "[", "]", ",", "'mixture'", ":", "[", "]", ",", "'drums'", ":", "[", "]", ",", "'other'", ":", "[", "]", ",", "'bass'", ":", "[", "]", "}", ",", "'val'", ":", "\n", "{", "'vocals'", ":", "[", "]", ",", "'mixture'", ":", "[", "]", ",", "'drums'", ":", "[", "]", ",", "'other'", ":", "[", "]", ",", "'bass'", ":", "[", "]", "}", "}", "\n", "self", ".", "sequences", "=", "{", "'train'", ":", "{", "'vocals'", ":", "[", "]", ",", "'mixture'", ":", "[", "]", ",", "'drums'", ":", "[", "]", ",", "'other'", ":", "[", "]", ",", "'bass'", ":", "[", "]", "}", ",", "'val'", ":", "\n", "{", "'vocals'", ":", "[", "]", ",", "'mixture'", ":", "[", "]", ",", "'drums'", ":", "[", "]", ",", "'other'", ":", "[", "]", ",", "'bass'", ":", "[", "]", "}", "}", "\n", "self", ".", "voice_indices", "=", "{", "'train'", ":", "[", "]", ",", "'val'", ":", "[", "]", "}", "\n", "self", ".", "batch_size", "=", "config", "[", "'training'", "]", "[", "'batch_size'", "]", "\n", "self", ".", "extract_voice_percent", "=", "config", "[", "'dataset'", "]", "[", "'extract_voice_percentage'", "]", "\n", "self", ".", "in_memory_percentage", "=", "config", "[", "'dataset'", "]", "[", "'in_memory_percentage'", "]", "\n", "self", ".", "num_sequences_in_memory", "=", "0", "\n", "self", ".", "condition_encode_function", "=", "util", ".", "get_condition_input_encode_func", "(", "config", "[", "'model'", "]", "[", "'condition_encoding'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.SingingVoiceMUSDB18Dataset.load_dataset": [[28, 45], ["print", "musdb.DB", "musdb.DB.load_mus_tracks", "numpy.random.seed", "numpy.random.choice", "datasets.SingingVoiceMUSDB18Dataset.load_songs", "len", "range", "len"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.load_songs"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "\n", "        ", "print", "(", "'Loading MUSDB18 dataset for singing voice separation...'", ")", "\n", "\n", "mus", "=", "musdb", ".", "DB", "(", "root_dir", "=", "self", ".", "path", ",", "is_wav", "=", "True", ")", "\n", "tracks", "=", "mus", ".", "load_mus_tracks", "(", "subsets", "=", "'train'", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", "=", "1337", ")", "\n", "val_idx", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "tracks", ")", ",", "size", "=", "25", ",", "replace", "=", "False", ")", "\n", "train_idx", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "tracks", ")", ")", "if", "i", "not", "in", "val_idx", "]", "\n", "val_tracks", "=", "[", "tracks", "[", "i", "]", "for", "i", "in", "val_idx", "]", "\n", "train_tracks", "=", "[", "tracks", "[", "i", "]", "for", "i", "in", "train_idx", "]", "\n", "for", "condition", "in", "[", "'mixture'", ",", "'vocals'", "]", ":", "\n", "            ", "self", ".", "file_paths", "[", "'val'", "]", "[", "condition", "]", "=", "[", "track", ".", "path", "[", ":", "-", "11", "]", "+", "condition", "+", "'.wav'", "for", "track", "in", "val_tracks", "]", "\n", "", "for", "condition", "in", "[", "'mixture'", ",", "'vocals'", "]", ":", "\n", "            ", "self", ".", "file_paths", "[", "'train'", "]", "[", "condition", "]", "=", "[", "track", ".", "path", "[", ":", "-", "11", "]", "+", "condition", "+", "'.wav'", "for", "track", "in", "train_tracks", "]", "\n", "", "self", ".", "load_songs", "(", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.SingingVoiceMUSDB18Dataset.load_songs": [[46, 69], ["util.load_wav", "[].append", "datasets.SingingVoiceMUSDB18Dataset.voice_indices[].append", "util.load_wav", "[].append", "[].append", "util.get_sequence_with_singing_indices", "numpy.random.uniform"], "methods", ["None"], ["", "def", "load_songs", "(", "self", ")", ":", "\n", "\n", "        ", "for", "set", "in", "[", "'train'", ",", "'val'", "]", ":", "\n", "            ", "for", "condition", "in", "[", "'mixture'", ",", "'vocals'", "]", ":", "\n", "                ", "for", "filepath", "in", "self", ".", "file_paths", "[", "set", "]", "[", "condition", "]", ":", "\n", "\n", "                    ", "if", "condition", "==", "'vocals'", ":", "\n", "\n", "                        ", "sequence", "=", "util", ".", "load_wav", "(", "filepath", ",", "self", ".", "sample_rate", ")", "\n", "self", ".", "sequences", "[", "set", "]", "[", "condition", "]", ".", "append", "(", "sequence", ")", "\n", "self", ".", "num_sequences_in_memory", "+=", "1", "\n", "\n", "if", "self", ".", "extract_voice_percent", ">", "0", ":", "\n", "                            ", "self", ".", "voice_indices", "[", "set", "]", ".", "append", "(", "util", ".", "get_sequence_with_singing_indices", "(", "sequence", ")", ")", "\n", "", "", "else", ":", "\n", "\n", "                        ", "if", "self", ".", "in_memory_percentage", "==", "1", "or", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", "<=", "(", "\n", "self", ".", "in_memory_percentage", "-", "0.5", ")", "*", "2", ":", "\n", "                            ", "sequence", "=", "util", ".", "load_wav", "(", "filepath", ",", "self", ".", "sample_rate", ")", "\n", "self", ".", "sequences", "[", "set", "]", "[", "condition", "]", ".", "append", "(", "sequence", ")", "\n", "self", ".", "num_sequences_in_memory", "+=", "1", "\n", "", "else", ":", "\n", "                            ", "self", ".", "sequences", "[", "set", "]", "[", "condition", "]", ".", "append", "(", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.SingingVoiceMUSDB18Dataset.get_num_sequences_in_dataset": [[70, 73], ["len", "len", "len", "len"], "methods", ["None"], ["", "", "", "", "", "", "def", "get_num_sequences_in_dataset", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "sequences", "[", "'train'", "]", "[", "'vocals'", "]", ")", "+", "len", "(", "self", ".", "sequences", "[", "'train'", "]", "[", "'mixture'", "]", ")", "+", "len", "(", "\n", "self", ".", "sequences", "[", "'val'", "]", "[", "'vocals'", "]", ")", "+", "len", "(", "self", ".", "sequences", "[", "'val'", "]", "[", "'mixture'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.SingingVoiceMUSDB18Dataset.retrieve_sequence": [[74, 86], ["numpy.array", "len", "util.load_wav", "float", "datasets.SingingVoiceMUSDB18Dataset.get_num_sequences_in_dataset"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.get_num_sequences_in_dataset"], ["", "def", "retrieve_sequence", "(", "self", ",", "set", ",", "condition", ",", "sequence_num", ")", ":", "\n", "\n", "        ", "if", "len", "(", "self", ".", "sequences", "[", "set", "]", "[", "condition", "]", "[", "sequence_num", "]", ")", "==", "1", ":", "\n", "            ", "sequence", "=", "util", ".", "load_wav", "(", "self", ".", "file_paths", "[", "set", "]", "[", "condition", "]", "[", "sequence_num", "]", ",", "self", ".", "sample_rate", ")", "\n", "\n", "if", "(", "float", "(", "self", ".", "num_sequences_in_memory", ")", "/", "self", ".", "get_num_sequences_in_dataset", "(", ")", ")", "<", "self", ".", "in_memory_percentage", ":", "\n", "                ", "self", ".", "sequences", "[", "set", "]", "[", "condition", "]", "[", "sequence_num", "]", "=", "sequence", "\n", "self", ".", "num_sequences_in_memory", "+=", "1", "\n", "", "", "else", ":", "\n", "            ", "sequence", "=", "self", ".", "sequences", "[", "set", "]", "[", "condition", "]", "[", "sequence_num", "]", "\n", "\n", "", "return", "np", ".", "array", "(", "sequence", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.SingingVoiceMUSDB18Dataset.get_random_batch_generator": [[87, 142], ["ValueError", "numpy.random.randint", "enumerate", "numpy.array", "numpy.array", "numpy.array", "len", "numpy.squeeze", "numpy.array.append", "numpy.array.append", "numpy.array.append", "datasets.SingingVoiceMUSDB18Dataset.retrieve_sequence", "datasets.SingingVoiceMUSDB18Dataset.retrieve_sequence", "numpy.random.randint", "numpy.random.uniform", "util.get_indices_subsequence", "len", "numpy.random.randint", "datasets.SingingVoiceMUSDB18Dataset.model.get_padded_target_field_indices", "datasets.SingingVoiceMUSDB18Dataset.model.get_padded_target_field_indices", "len", "len"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.retrieve_sequence", "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.retrieve_sequence"], ["", "def", "get_random_batch_generator", "(", "self", ",", "set", ")", ":", "\n", "\n", "        ", "if", "set", "not", "in", "[", "'train'", ",", "'val'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\"Argument SET must be either 'train' or 'val'\"", ")", "\n", "\n", "", "while", "True", ":", "\n", "            ", "sample_indices", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "sequences", "[", "set", "]", "[", "'vocals'", "]", ")", ",", "self", ".", "batch_size", ")", "\n", "batch_inputs", "=", "[", "]", "\n", "batch_outputs_1", "=", "[", "]", "\n", "batch_outputs_2", "=", "[", "]", "\n", "\n", "for", "i", ",", "sample_i", "in", "enumerate", "(", "sample_indices", ")", ":", "\n", "\n", "                ", "while", "True", ":", "\n", "\n", "                    ", "starting_index", "=", "0", "\n", "\n", "mixture", "=", "self", ".", "retrieve_sequence", "(", "set", ",", "'mixture'", ",", "sample_i", ")", "\n", "vocals", "=", "self", ".", "retrieve_sequence", "(", "set", ",", "'vocals'", ",", "sample_i", ")", "\n", "accompaniment", "=", "mixture", "-", "vocals", "\n", "\n", "if", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", "<", "self", ".", "extract_voice_percent", ":", "\n", "                        ", "indices", "=", "self", ".", "voice_indices", "[", "set", "]", "[", "sample_i", "]", "\n", "vocals_indices", ",", "_", "=", "util", ".", "get_indices_subsequence", "(", "indices", ")", "\n", "vocals", "=", "vocals", "[", "vocals_indices", "[", "0", "]", ":", "vocals_indices", "[", "1", "]", "]", "\n", "starting_index", "=", "vocals_indices", "[", "0", "]", "\n", "\n", "", "if", "len", "(", "vocals", ")", "<", "self", ".", "model", ".", "input_length", ":", "\n", "                        ", "sample_i", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "sequences", "[", "set", "]", "[", "'vocals'", "]", ")", ")", "\n", "", "else", ":", "\n", "                        ", "break", "\n", "\n", "", "", "offset_1", "=", "np", ".", "squeeze", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "vocals", ")", "-", "self", ".", "model", ".", "input_length", "+", "1", ",", "1", ")", ")", "\n", "vocals_fragment", "=", "vocals", "[", "offset_1", ":", "offset_1", "+", "self", ".", "model", ".", "input_length", "]", "\n", "offset_2", "=", "offset_1", "+", "starting_index", "\n", "accompaniment_fragment", "=", "accompaniment", "[", "offset_2", ":", "offset_2", "+", "self", ".", "model", ".", "input_length", "]", "\n", "\n", "input", "=", "accompaniment_fragment", "+", "vocals_fragment", "\n", "output_vocals", "=", "vocals_fragment", "\n", "output_accompaniment", "=", "accompaniment_fragment", "\n", "\n", "batch_inputs", ".", "append", "(", "input", ")", "\n", "batch_outputs_1", ".", "append", "(", "output_vocals", ")", "\n", "batch_outputs_2", ".", "append", "(", "output_accompaniment", ")", "\n", "\n", "", "batch_inputs", "=", "np", ".", "array", "(", "batch_inputs", ",", "dtype", "=", "'float32'", ")", "\n", "batch_outputs_1", "=", "np", ".", "array", "(", "batch_outputs_1", ",", "dtype", "=", "'float32'", ")", "\n", "batch_outputs_2", "=", "np", ".", "array", "(", "batch_outputs_2", ",", "dtype", "=", "'float32'", ")", "\n", "batch_outputs_1", "=", "batch_outputs_1", "[", ":", ",", "self", ".", "model", ".", "get_padded_target_field_indices", "(", ")", "]", "\n", "batch_outputs_2", "=", "batch_outputs_2", "[", ":", ",", "self", ".", "model", ".", "get_padded_target_field_indices", "(", ")", "]", "\n", "\n", "batch", "=", "{", "'data_input'", ":", "batch_inputs", "}", ",", "{", "'data_output_1'", ":", "batch_outputs_1", ",", "\n", "'data_output_2'", ":", "batch_outputs_2", "}", "\n", "\n", "yield", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.SingingVoiceMUSDB18Dataset.get_condition_input_encode_func": [[143, 149], ["None"], "methods", ["None"], ["", "", "def", "get_condition_input_encode_func", "(", "self", ",", "representation", ")", ":", "\n", "\n", "        ", "if", "representation", "==", "'binary'", ":", "\n", "            ", "return", "util", ".", "binary_encode", "\n", "", "else", ":", "\n", "            ", "return", "util", ".", "one_hot_encode", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.SingingVoiceMUSDB18Dataset.get_target_sample_index": [[150, 152], ["int", "numpy.floor"], "methods", ["None"], ["", "", "def", "get_target_sample_index", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "np", ".", "floor", "(", "self", ".", "fragment_length", "/", "2.0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.SingingVoiceMUSDB18Dataset.get_samples_of_interest_indices": [[153, 161], ["datasets.SingingVoiceMUSDB18Dataset.get_target_sample_index", "range"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.get_target_sample_index"], ["", "def", "get_samples_of_interest_indices", "(", "self", ",", "causal", "=", "False", ")", ":", "\n", "\n", "        ", "if", "causal", ":", "\n", "            ", "return", "-", "1", "\n", "", "else", ":", "\n", "            ", "target_sample_index", "=", "self", ".", "get_target_sample_index", "(", ")", "\n", "return", "range", "(", "target_sample_index", "-", "self", ".", "half_target_field_length", "-", "self", ".", "target_padding", ",", "\n", "target_sample_index", "+", "self", ".", "half_target_field_length", "+", "self", ".", "target_padding", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.SingingVoiceMUSDB18Dataset.get_sample_weight_vector_length": [[162, 167], ["len", "datasets.SingingVoiceMUSDB18Dataset.get_samples_of_interest_indices"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.get_samples_of_interest_indices"], ["", "", "def", "get_sample_weight_vector_length", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "samples_of_interest_only", ":", "\n", "            ", "return", "len", "(", "self", ".", "get_samples_of_interest_indices", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "fragment_length", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.__init__": [[171, 185], ["util.get_condition_input_encode_func"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.get_condition_input_encode_func"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "model", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "path", "=", "config", "[", "'dataset'", "]", "[", "'path'", "]", "\n", "self", ".", "sample_rate", "=", "config", "[", "'dataset'", "]", "[", "'sample_rate'", "]", "\n", "self", ".", "file_paths", "=", "{", "'train'", ":", "{", "'vocals'", ":", "[", "]", ",", "'mixture'", ":", "[", "]", ",", "'drums'", ":", "[", "]", ",", "'other'", ":", "[", "]", ",", "'bass'", ":", "[", "]", "}", ",", "'val'", ":", "\n", "{", "'vocals'", ":", "[", "]", ",", "'mixture'", ":", "[", "]", ",", "'drums'", ":", "[", "]", ",", "'other'", ":", "[", "]", ",", "'bass'", ":", "[", "]", "}", "}", "\n", "self", ".", "sequences", "=", "{", "'train'", ":", "{", "'vocals'", ":", "[", "]", ",", "'mixture'", ":", "[", "]", ",", "'drums'", ":", "[", "]", ",", "'other'", ":", "[", "]", ",", "'bass'", ":", "[", "]", "}", ",", "'val'", ":", "\n", "{", "'vocals'", ":", "[", "]", ",", "'mixture'", ":", "[", "]", ",", "'drums'", ":", "[", "]", ",", "'other'", ":", "[", "]", ",", "'bass'", ":", "[", "]", "}", "}", "\n", "self", ".", "voice_indices", "=", "{", "'train'", ":", "[", "]", ",", "'val'", ":", "[", "]", "}", "\n", "self", ".", "batch_size", "=", "config", "[", "'training'", "]", "[", "'batch_size'", "]", "\n", "self", ".", "extract_voice_percent", "=", "config", "[", "'dataset'", "]", "[", "'extract_voice_percentage'", "]", "\n", "self", ".", "in_memory_percentage", "=", "config", "[", "'dataset'", "]", "[", "'in_memory_percentage'", "]", "\n", "self", ".", "num_sequences_in_memory", "=", "0", "\n", "self", ".", "condition_encode_function", "=", "util", ".", "get_condition_input_encode_func", "(", "config", "[", "'model'", "]", "[", "'condition_encoding'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.load_dataset": [[186, 203], ["print", "musdb.DB", "musdb.DB.load_mus_tracks", "numpy.random.seed", "numpy.random.choice", "datasets.MultiInstrumentMUSDB18Dataset.load_songs", "len", "range", "len"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.load_songs"], ["", "def", "load_dataset", "(", "self", ")", ":", "\n", "\n", "        ", "print", "(", "'Loading MUSDB18 dataset for multi-instrument separation...'", ")", "\n", "\n", "mus", "=", "musdb", ".", "DB", "(", "root_dir", "=", "self", ".", "path", ",", "is_wav", "=", "True", ")", "\n", "tracks", "=", "mus", ".", "load_mus_tracks", "(", "subsets", "=", "'train'", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", "=", "1337", ")", "\n", "val_idx", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "tracks", ")", ",", "size", "=", "25", ",", "replace", "=", "False", ")", "\n", "train_idx", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "tracks", ")", ")", "if", "i", "not", "in", "val_idx", "]", "\n", "val_tracks", "=", "[", "tracks", "[", "i", "]", "for", "i", "in", "val_idx", "]", "\n", "train_tracks", "=", "[", "tracks", "[", "i", "]", "for", "i", "in", "train_idx", "]", "\n", "for", "condition", "in", "[", "'mixture'", ",", "'vocals'", ",", "'drums'", ",", "'other'", ",", "'bass'", "]", ":", "\n", "            ", "self", ".", "file_paths", "[", "'val'", "]", "[", "condition", "]", "=", "[", "track", ".", "path", "[", ":", "-", "11", "]", "+", "condition", "+", "'.wav'", "for", "track", "in", "val_tracks", "]", "\n", "", "for", "condition", "in", "[", "'mixture'", ",", "'vocals'", ",", "'drums'", ",", "'other'", ",", "'bass'", "]", ":", "\n", "            ", "self", ".", "file_paths", "[", "'train'", "]", "[", "condition", "]", "=", "[", "track", ".", "path", "[", ":", "-", "11", "]", "+", "condition", "+", "'.wav'", "for", "track", "in", "train_tracks", "]", "\n", "", "self", ".", "load_songs", "(", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.load_songs": [[204, 227], ["util.load_wav", "[].append", "datasets.MultiInstrumentMUSDB18Dataset.voice_indices[].append", "util.load_wav", "[].append", "[].append", "util.get_sequence_with_singing_indices", "numpy.random.uniform"], "methods", ["None"], ["", "def", "load_songs", "(", "self", ")", ":", "\n", "\n", "        ", "for", "set", "in", "[", "'train'", ",", "'val'", "]", ":", "\n", "            ", "for", "condition", "in", "[", "'vocals'", ",", "'mixture'", ",", "'drums'", ",", "'other'", ",", "'bass'", "]", ":", "\n", "                ", "for", "filepath", "in", "self", ".", "file_paths", "[", "set", "]", "[", "condition", "]", ":", "\n", "\n", "                    ", "if", "condition", "==", "'vocals'", ":", "\n", "\n", "                        ", "sequence", "=", "util", ".", "load_wav", "(", "filepath", ",", "self", ".", "sample_rate", ")", "\n", "self", ".", "sequences", "[", "set", "]", "[", "condition", "]", ".", "append", "(", "sequence", ")", "\n", "self", ".", "num_sequences_in_memory", "+=", "1", "\n", "\n", "if", "self", ".", "extract_voice_percent", ">", "0", ":", "\n", "                            ", "self", ".", "voice_indices", "[", "set", "]", ".", "append", "(", "util", ".", "get_sequence_with_singing_indices", "(", "sequence", ")", ")", "\n", "", "", "else", ":", "\n", "\n", "                        ", "if", "self", ".", "in_memory_percentage", "==", "1", "or", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", "<=", "(", "\n", "self", ".", "in_memory_percentage", "-", "0.5", ")", "*", "2", ":", "\n", "                            ", "sequence", "=", "util", ".", "load_wav", "(", "filepath", ",", "self", ".", "sample_rate", ")", "\n", "self", ".", "sequences", "[", "set", "]", "[", "condition", "]", ".", "append", "(", "sequence", ")", "\n", "self", ".", "num_sequences_in_memory", "+=", "1", "\n", "", "else", ":", "\n", "                            ", "self", ".", "sequences", "[", "set", "]", "[", "condition", "]", ".", "append", "(", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.get_num_sequences_in_dataset": [[228, 231], ["len", "len", "len", "len"], "methods", ["None"], ["", "", "", "", "", "", "def", "get_num_sequences_in_dataset", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "sequences", "[", "'train'", "]", "[", "'vocals'", "]", ")", "+", "len", "(", "self", ".", "sequences", "[", "'train'", "]", "[", "'mixture'", "]", ")", "+", "len", "(", "\n", "self", ".", "sequences", "[", "'val'", "]", "[", "'vocals'", "]", ")", "+", "len", "(", "self", ".", "sequences", "[", "'val'", "]", "[", "'mixture'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.retrieve_sequence": [[232, 244], ["numpy.array", "len", "util.load_wav", "float", "datasets.MultiInstrumentMUSDB18Dataset.get_num_sequences_in_dataset"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.get_num_sequences_in_dataset"], ["", "def", "retrieve_sequence", "(", "self", ",", "set", ",", "condition", ",", "sequence_num", ")", ":", "\n", "\n", "        ", "if", "len", "(", "self", ".", "sequences", "[", "set", "]", "[", "condition", "]", "[", "sequence_num", "]", ")", "==", "1", ":", "\n", "            ", "sequence", "=", "util", ".", "load_wav", "(", "self", ".", "file_paths", "[", "set", "]", "[", "condition", "]", "[", "sequence_num", "]", ",", "self", ".", "sample_rate", ")", "\n", "\n", "if", "(", "float", "(", "self", ".", "num_sequences_in_memory", ")", "/", "self", ".", "get_num_sequences_in_dataset", "(", ")", ")", "<", "self", ".", "in_memory_percentage", ":", "\n", "                ", "self", ".", "sequences", "[", "set", "]", "[", "condition", "]", "[", "sequence_num", "]", "=", "sequence", "\n", "self", ".", "num_sequences_in_memory", "+=", "1", "\n", "", "", "else", ":", "\n", "            ", "sequence", "=", "self", ".", "sequences", "[", "set", "]", "[", "condition", "]", "[", "sequence_num", "]", "\n", "\n", "", "return", "np", ".", "array", "(", "sequence", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.get_random_batch_generator": [[245, 310], ["ValueError", "numpy.random.randint", "enumerate", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "len", "numpy.squeeze", "numpy.array.append", "numpy.array.append", "numpy.array.append", "numpy.array.append", "datasets.MultiInstrumentMUSDB18Dataset.retrieve_sequence", "datasets.MultiInstrumentMUSDB18Dataset.retrieve_sequence", "datasets.MultiInstrumentMUSDB18Dataset.retrieve_sequence", "datasets.MultiInstrumentMUSDB18Dataset.retrieve_sequence", "numpy.random.randint", "numpy.random.uniform", "util.get_indices_subsequence", "len", "numpy.random.randint", "datasets.MultiInstrumentMUSDB18Dataset.model.get_padded_target_field_indices", "datasets.MultiInstrumentMUSDB18Dataset.model.get_padded_target_field_indices", "datasets.MultiInstrumentMUSDB18Dataset.model.get_padded_target_field_indices", "len", "len"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.retrieve_sequence", "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.retrieve_sequence", "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.retrieve_sequence", "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.retrieve_sequence"], ["", "def", "get_random_batch_generator", "(", "self", ",", "set", ")", ":", "\n", "\n", "        ", "if", "set", "not", "in", "[", "'train'", ",", "'val'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\"Argument SET must be either 'train' or 'val'\"", ")", "\n", "\n", "", "while", "True", ":", "\n", "            ", "sample_indices", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "sequences", "[", "set", "]", "[", "'vocals'", "]", ")", ",", "self", ".", "batch_size", ")", "\n", "batch_inputs", "=", "[", "]", "\n", "batch_outputs_1", "=", "[", "]", "\n", "batch_outputs_2", "=", "[", "]", "\n", "batch_outputs_3", "=", "[", "]", "\n", "\n", "for", "i", ",", "sample_i", "in", "enumerate", "(", "sample_indices", ")", ":", "\n", "\n", "                ", "while", "True", ":", "\n", "\n", "                    ", "starting_index", "=", "0", "\n", "\n", "vocals", "=", "self", ".", "retrieve_sequence", "(", "set", ",", "'vocals'", ",", "sample_i", ")", "\n", "bass", "=", "self", ".", "retrieve_sequence", "(", "set", ",", "'bass'", ",", "sample_i", ")", "\n", "drums", "=", "self", ".", "retrieve_sequence", "(", "set", ",", "'drums'", ",", "sample_i", ")", "\n", "other", "=", "self", ".", "retrieve_sequence", "(", "set", ",", "'other'", ",", "sample_i", ")", "\n", "\n", "if", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", "<", "self", ".", "extract_voice_percent", ":", "\n", "                        ", "indices", "=", "self", ".", "voice_indices", "[", "set", "]", "[", "sample_i", "]", "\n", "vocals_indices", ",", "_", "=", "util", ".", "get_indices_subsequence", "(", "indices", ")", "\n", "vocals", "=", "vocals", "[", "vocals_indices", "[", "0", "]", ":", "vocals_indices", "[", "1", "]", "]", "\n", "starting_index", "=", "vocals_indices", "[", "0", "]", "\n", "\n", "", "if", "len", "(", "vocals", ")", "<", "self", ".", "model", ".", "input_length", ":", "\n", "                        ", "sample_i", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "sequences", "[", "set", "]", "[", "'vocals'", "]", ")", ")", "\n", "", "else", ":", "\n", "                        ", "break", "\n", "\n", "", "", "offset_1", "=", "np", ".", "squeeze", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "vocals", ")", "-", "self", ".", "model", ".", "input_length", "+", "1", ",", "1", ")", ")", "\n", "vocals_fragment", "=", "vocals", "[", "offset_1", ":", "offset_1", "+", "self", ".", "model", ".", "input_length", "]", "\n", "offset_2", "=", "offset_1", "+", "starting_index", "\n", "bass_fragment", "=", "bass", "[", "offset_2", ":", "offset_2", "+", "self", ".", "model", ".", "input_length", "]", "\n", "drums_fragment", "=", "drums", "[", "offset_2", ":", "offset_2", "+", "self", ".", "model", ".", "input_length", "]", "\n", "other_fragment", "=", "other", "[", "offset_2", ":", "offset_2", "+", "self", ".", "model", ".", "input_length", "]", "\n", "\n", "input", "=", "vocals_fragment", "+", "bass_fragment", "+", "drums_fragment", "+", "other_fragment", "\n", "output_vocals", "=", "vocals_fragment", "\n", "output_drums", "=", "drums_fragment", "\n", "output_bass", "=", "bass_fragment", "\n", "\n", "batch_inputs", ".", "append", "(", "input", ")", "\n", "batch_outputs_1", ".", "append", "(", "output_vocals", ")", "\n", "batch_outputs_2", ".", "append", "(", "output_drums", ")", "\n", "batch_outputs_3", ".", "append", "(", "output_bass", ")", "\n", "\n", "", "batch_inputs", "=", "np", ".", "array", "(", "batch_inputs", ",", "dtype", "=", "'float32'", ")", "\n", "batch_outputs_1", "=", "np", ".", "array", "(", "batch_outputs_1", ",", "dtype", "=", "'float32'", ")", "\n", "batch_outputs_2", "=", "np", ".", "array", "(", "batch_outputs_2", ",", "dtype", "=", "'float32'", ")", "\n", "batch_outputs_3", "=", "np", ".", "array", "(", "batch_outputs_3", ",", "dtype", "=", "'float32'", ")", "\n", "\n", "batch_outputs_1", "=", "batch_outputs_1", "[", ":", ",", "self", ".", "model", ".", "get_padded_target_field_indices", "(", ")", "]", "\n", "batch_outputs_2", "=", "batch_outputs_2", "[", ":", ",", "self", ".", "model", ".", "get_padded_target_field_indices", "(", ")", "]", "\n", "batch_outputs_3", "=", "batch_outputs_3", "[", ":", ",", "self", ".", "model", ".", "get_padded_target_field_indices", "(", ")", "]", "\n", "\n", "batch", "=", "{", "'data_input'", ":", "batch_inputs", "}", ",", "{", "'data_output_1'", ":", "batch_outputs_1", ",", "\n", "'data_output_2'", ":", "batch_outputs_2", ",", "\n", "'data_output_3'", ":", "batch_outputs_3", "}", "\n", "\n", "yield", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.get_condition_input_encode_func": [[311, 317], ["None"], "methods", ["None"], ["", "", "def", "get_condition_input_encode_func", "(", "self", ",", "representation", ")", ":", "\n", "\n", "        ", "if", "representation", "==", "'binary'", ":", "\n", "            ", "return", "util", ".", "binary_encode", "\n", "", "else", ":", "\n", "            ", "return", "util", ".", "one_hot_encode", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.get_target_sample_index": [[318, 320], ["int", "numpy.floor"], "methods", ["None"], ["", "", "def", "get_target_sample_index", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "np", ".", "floor", "(", "self", ".", "fragment_length", "/", "2.0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.get_samples_of_interest_indices": [[321, 329], ["datasets.MultiInstrumentMUSDB18Dataset.get_target_sample_index", "range"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.get_target_sample_index"], ["", "def", "get_samples_of_interest_indices", "(", "self", ",", "causal", "=", "False", ")", ":", "\n", "\n", "        ", "if", "causal", ":", "\n", "            ", "return", "-", "1", "\n", "", "else", ":", "\n", "            ", "target_sample_index", "=", "self", ".", "get_target_sample_index", "(", ")", "\n", "return", "range", "(", "target_sample_index", "-", "self", ".", "half_target_field_length", "-", "self", ".", "target_padding", ",", "\n", "target_sample_index", "+", "self", ".", "half_target_field_length", "+", "self", ".", "target_padding", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.get_sample_weight_vector_length": [[330, 335], ["len", "datasets.MultiInstrumentMUSDB18Dataset.get_samples_of_interest_indices"], "methods", ["home.repos.pwc.inspect_result.francesclluis_source-separation-wavenet.None.datasets.MultiInstrumentMUSDB18Dataset.get_samples_of_interest_indices"], ["", "", "def", "get_sample_weight_vector_length", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "samples_of_interest_only", ":", "\n", "            ", "return", "len", "(", "self", ".", "get_samples_of_interest_indices", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "fragment_length", "\n", "", "", "", ""]]}