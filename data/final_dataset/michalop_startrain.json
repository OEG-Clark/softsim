{"home.repos.pwc.inspect_result.michalop_startrain.None.observe_replay.valid_replay": [[19, 24], ["info.HasField", "len"], "function", ["None"], ["", "def", "valid_replay", "(", "info", ",", "ping", ")", ":", "\n", "    ", "if", "(", "info", ".", "HasField", "(", "\"error\"", ")", "or", "info", ".", "base_build", "!=", "ping", ".", "base_build", "or", "\n", "info", ".", "game_duration_loops", "<", "1000", "or", "len", "(", "info", ".", "player_info", ")", "!=", "2", ")", ":", "\n", "        ", "return", "False", "\n", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observe_replay.run_replay": [[25, 79], ["pysc2.run_configs.get", "run_configs.get.start", "run_configs.get.replay_data", "controller.ping", "replay_state.save_global_info", "pysc2.env.sc2_env.SC2Env._get_interface", "controller.start_replay", "pysc2.lib.features.features_from_game_info", "run_config.start.close", "controller.replay_info", "run_config.start.close", "print", "run_configs.get.map_data", "s2clientprotocol.sc2api_pb2.RequestStartReplay", "controller.game_info", "controller.step", "controller.observe", "replay_state.step", "run_config.start.close", "observe_replay.valid_replay"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.looptime.get", "home.repos.pwc.inspect_result.michalop_startrain.None.replay_state.ReplayState.save_global_info", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.step", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.observe", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.step", "home.repos.pwc.inspect_result.michalop_startrain.None.observe_replay.valid_replay"], ["", "def", "run_replay", "(", "replay_path", ",", "replay_state", ")", ":", "\n", "\n", "    ", "run_config", "=", "run_configs", ".", "get", "(", "version", "=", "version", ")", "\n", "sc2_proc", "=", "run_config", ".", "start", "(", ")", "\n", "controller", "=", "sc2_proc", ".", "controller", "\n", "replay_data", "=", "run_config", ".", "replay_data", "(", "replay_path", ")", "\n", "ping", "=", "controller", ".", "ping", "(", ")", "\n", "\n", "try", ":", "\n", "        ", "info", "=", "controller", ".", "replay_info", "(", "replay_data", ")", "\n", "", "except", "Exception", ":", "\n", "        ", "sc2_proc", ".", "close", "(", ")", "\n", "return", "False", "\n", "\n", "", "good", "=", "False", "\n", "for", "p", "in", "info", ".", "player_info", ":", "\n", "        ", "if", "p", ".", "player_info", ".", "race_actual", "==", "common_pb2", ".", "Race", ".", "Protoss", "and", "p", ".", "player_mmr", ">", "2400", "and", "p", ".", "player_apm", ">", "20", ":", "\n", "            ", "good", "=", "True", "\n", "player_id", "=", "p", ".", "player_info", ".", "player_id", "\n", "replay_state", ".", "mmr", "=", "p", ".", "player_mmr", "\n", "replay_state", ".", "result", "=", "p", ".", "player_result", ".", "result", "\n", "\n", "", "", "if", "not", "valid_replay", "(", "info", ",", "ping", ")", "or", "not", "good", ":", "\n", "        ", "sc2_proc", ".", "close", "(", ")", "\n", "return", "False", "\n", "\n", "", "replay_state", ".", "save_global_info", "(", ")", "\n", "interface", "=", "sc2_env", ".", "SC2Env", ".", "_get_interface", "(", "interface_format", ",", "False", ")", "\n", "\n", "map_data", "=", "None", "\n", "if", "info", ".", "local_map_path", ":", "\n", "        ", "print", "(", "info", ")", "\n", "map_data", "=", "run_config", ".", "map_data", "(", "info", ".", "local_map_path", ")", "\n", "\n", "", "controller", ".", "start_replay", "(", "\n", "sc_pb", ".", "RequestStartReplay", "(", "\n", "replay_data", "=", "replay_data", ",", "\n", "map_data", "=", "map_data", ",", "\n", "options", "=", "interface", ",", "\n", "observed_player_id", "=", "player_id", ",", "\n", ")", ")", "\n", "\n", "fts", "=", "features", ".", "features_from_game_info", "(", "controller", ".", "game_info", "(", ")", ")", "\n", "\n", "while", "True", ":", "\n", "        ", "controller", ".", "step", "(", "1", ")", "\n", "obs", "=", "controller", ".", "observe", "(", ")", "\n", "replay_state", ".", "step", "(", "obs", ",", "obs", ".", "actions", ",", "fts", ")", "\n", "if", "obs", ".", "player_result", ":", "\n", "            ", "break", "\n", "\n", "", "", "sc2_proc", ".", "close", "(", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observe_replay.get_data": [[81, 100], ["print", "FLAGS", "replay_state.ReplayState", "observe_replay.run_replay", "os.path.basename", "replay_state.ReplayState.stats", "observe_replay.WrongReplayException", "len", "replay_state.ReplayState.get_batch", "replay_state.ReplayState.save_global_info"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.observe_replay.run_replay", "home.repos.pwc.inspect_result.michalop_startrain.None.replay_state.ReplayState.stats", "home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.get_batch", "home.repos.pwc.inspect_result.michalop_startrain.None.replay_state.ReplayState.save_global_info"], ["", "def", "get_data", "(", "seq_length", ",", "replay_path", ",", "compress", "=", "False", ",", "target_dir", "=", "None", ")", ":", "\n", "\n", "    ", "FLAGS", "=", "flags", ".", "FLAGS", "\n", "print", "(", "sys", ".", "argv", ")", "\n", "FLAGS", "(", "sys", ".", "argv", "[", ":", "1", "]", ")", "\n", "\n", "state", "=", "ReplayState", "(", "seq_length", ",", "compress", ",", "target_dir", ",", "\n", "os", ".", "path", ".", "basename", "(", "replay_path", ")", ")", "\n", "\n", "if", "run_replay", "(", "replay_path", ",", "state", ")", ":", "\n", "        ", "while", "len", "(", "state", ".", "replay_data", ")", ">", "0", ":", "\n", "            ", "state", ".", "get_batch", "(", ")", "\n", "", "state", ".", "stats", "(", ")", "\n", "if", "not", "compress", ":", "\n", "            ", "return", "state", ".", "send_data", "\n", "", "else", ":", "\n", "            ", "state", ".", "save_global_info", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "WrongReplayException", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.michalop_startrain.None.replay_roller.ReplayRoller.__init__": [[80, 96], ["torch.Semaphore", "torch.Semaphore", "torch.Semaphore", "torch.Semaphore", "replay_roller.ReplayRoller.model.get_hidden", "tuple", "torch.Pipe", "torch.Pipe", "torch.Process", "torch.Process", "replay_roller.ReplayRoller.loader.start", "hid.cuda"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.get_hidden", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda"], ["    ", "def", "__init__", "(", "self", ",", "files_queue", ",", "model", ",", "sem", ",", "seq_length", ",", "prefetch", ")", ":", "\n", "        ", "self", ".", "seq_length", "=", "seq_length", "\n", "self", ".", "sem", "=", "sem", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "in_sem", "=", "mp", ".", "Semaphore", "(", "0", ")", "\n", "self", ".", "sem_consumed", "=", "mp", ".", "Semaphore", "(", "prefetch", ")", "\n", "self", ".", "data", "=", "[", "]", "\n", "self", ".", "hidden", "=", "self", ".", "model", ".", "get_hidden", "(", "1", ")", "\n", "self", ".", "hidden", "=", "tuple", "(", "[", "hid", ".", "cuda", "(", ")", "for", "hid", "in", "self", ".", "hidden", "]", ")", "\n", "self", ".", "pipe_my", ",", "pipe_other", "=", "mp", ".", "Pipe", "(", ")", "\n", "self", ".", "files", "=", "files_queue", "\n", "self", ".", "loader", "=", "mp", ".", "Process", "(", "target", "=", "loader", ",", "\n", "args", "=", "(", "self", ".", "files", ",", "pipe_other", ",", "self", ".", "sem", ",", "\n", "self", ".", "in_sem", ",", "self", ".", "sem_consumed", ",", "\n", "self", ".", "seq_length", ")", ")", "\n", "self", ".", "loader", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.replay_roller.ReplayRoller.get": [[97, 111], ["replay_roller.ReplayRoller.pipe_my.recv", "replay_roller.ReplayRoller.in_sem.acquire", "replay_roller.ReplayRoller.model.get_hidden", "tuple", "replay_roller.ReplayRoller.pipe_my.recv", "observations.to_cuda", "observations.to_cuda", "observations.to_cuda", "hid.cuda"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.get_hidden", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda"], ["", "def", "get", "(", "self", ")", ":", "\n", "\n", "        ", "if", "not", "self", ".", "in_sem", ".", "acquire", "(", "block", "=", "False", ")", ":", "\n", "            ", "return", "[", "]", "\n", "\n", "", "inputs", ",", "target", ",", "masks", ",", "flags", "=", "self", ".", "pipe_my", ".", "recv", "(", ")", "\n", "\n", "while", "inputs", "==", "\"RESET\"", ":", "\n", "            ", "self", ".", "hidden", "=", "self", ".", "model", ".", "get_hidden", "(", "1", ")", "\n", "self", ".", "hidden", "=", "tuple", "(", "[", "hid", ".", "cuda", "(", ")", "for", "hid", "in", "self", ".", "hidden", "]", ")", "\n", "inputs", ",", "target", ",", "masks", ",", "flags", "=", "self", ".", "pipe_my", ".", "recv", "(", ")", "\n", "\n", "", "return", "to_cuda", "(", "inputs", ")", ",", "to_cuda", "(", "target", ")", ",", "to_cuda", "(", "\n", "masks", ")", ",", "self", ".", "hidden", ",", "flags", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.replay_roller.ReplayRoller.set_hidden": [[112, 115], ["replay_roller.ReplayRoller.sem_consumed.release"], "methods", ["None"], ["", "def", "set_hidden", "(", "self", ",", "new_hidden", ")", ":", "\n", "        ", "self", ".", "sem_consumed", ".", "release", "(", ")", "\n", "self", ".", "hidden", "=", "new_hidden", "\n", "", "", ""]], "home.repos.pwc.inspect_result.michalop_startrain.None.replay_roller.loader": [[15, 73], ["torch.set_num_threads", "torch.set_num_threads", "random.seed", "len", "enumerate", "util.get_names", "observations.load_global_stats", "range", "pipe.send", "len", "random.random", "str", "str", "str", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "len", "range", "zip", "observations.concat_along_axis_tensor", "observations.concat_along_axis_tensor", "observations.concat_along_axis_tensor", "observations.shift_last_action", "observations.extend_batch", "sem2.release", "sem.release", "pipe.send", "sem_consumed.acquire", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "observations.extend_batch.append", "copy.deepcopy", "observations.extend_batch.append", "open", "pickle.loads", "os.path.join", "zstd.decompress", "str", "pickle.load"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.util.get_names", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.load_global_stats", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.shift_last_action", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.extend_batch", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.join"], ["def", "loader", "(", "files", ",", "pipe", ",", "sem", ",", "sem2", ",", "sem_consumed", ",", "seq_length", ")", ":", "\n", "    ", "torch", ".", "set_num_threads", "(", "1", ")", "\n", "seed", "(", "2137", ")", "\n", "length", "=", "len", "(", "files", ")", "\n", "while", "True", ":", "\n", "\n", "        ", "for", "d_id", ",", "directory", "in", "enumerate", "(", "files", ")", ":", "\n", "            ", "names", "=", "get_names", "(", "directory", ")", "\n", "if", "len", "(", "names", ")", "<", "2", ":", "\n", "                ", "continue", "\n", "\n", "", "stats", "=", "load_global_stats", "(", "directory", ")", "\n", "# print(stats)", "\n", "build_visible", "=", "random", "(", ")", "<", "0.9", "\n", "\n", "last_action", "=", "{", "\n", "'function'", ":", "torch", ".", "tensor", "(", "[", "[", "0", "]", "]", ")", ".", "long", "(", ")", ",", "\n", "str", "(", "ac", ".", "TYPES", ".", "screen", ")", ":", "torch", ".", "tensor", "(", "[", "[", "0", "]", "]", ")", ".", "long", "(", ")", ",", "\n", "str", "(", "ac", ".", "TYPES", ".", "screen2", ")", ":", "torch", ".", "tensor", "(", "[", "[", "0", "]", "]", ")", ".", "long", "(", ")", ",", "\n", "str", "(", "ac", ".", "TYPES", ".", "minimap", ")", ":", "torch", ".", "tensor", "(", "[", "[", "0", "]", "]", ")", ".", "long", "(", ")", "\n", "}", "\n", "rep_count", "=", "(", "len", "(", "names", ")", "-", "1", ")", "\n", "multi_load", "=", "seq_length", "//", "32", "\n", "for", "i", "in", "range", "(", "0", ",", "rep_count", ",", "multi_load", ")", ":", "\n", "                ", "batch", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "multi_load", ")", ":", "\n", "                    ", "if", "i", "+", "j", "<", "rep_count", ":", "\n", "                        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", "str", "(", "i", "+", "j", ")", ")", ",", "\n", "\"rb\"", ")", "as", "f", ":", "\n", "                            ", "loaded", "=", "loads", "(", "decompress", "(", "load", "(", "f", ")", ")", ")", "\n", "", "batch", ".", "append", "(", "loaded", ")", "\n", "", "else", ":", "\n", "                        ", "ins", ",", "ts", ",", "masks", "=", "deepcopy", "(", "batch", "[", "-", "1", "]", ")", "\n", "for", "k", "in", "masks", ":", "\n", "                            ", "masks", "[", "k", "]", "*=", "0", "\n", "", "batch", ".", "append", "(", "(", "ins", ",", "ts", ",", "masks", ")", ")", "\n", "\n", "", "", "inputs", ",", "targets", ",", "masks", "=", "zip", "(", "*", "batch", ")", "\n", "\n", "inputs", "=", "concat_along_axis_tensor", "(", "inputs", ",", "0", ")", "\n", "targets", "=", "concat_along_axis_tensor", "(", "targets", ",", "0", ")", "\n", "masks", "=", "concat_along_axis_tensor", "(", "masks", ",", "0", ")", "\n", "\n", "batch", "=", "(", "inputs", ",", "targets", ",", "masks", ")", "\n", "\n", "prev_actions", ",", "last_action", "=", "shift_last_action", "(", "\n", "batch", "[", "1", "]", ",", "last_action", ",", "seq_length", ")", "\n", "batch", "=", "extend_batch", "(", "batch", ",", "stats", ",", "seq_length", ",", "prev_actions", ",", "\n", "build_visible", ")", "\n", "flags", "=", "None", "\n", "sem2", ".", "release", "(", ")", "\n", "sem", ".", "release", "(", ")", "\n", "if", "i", ">=", "rep_count", "-", "multi_load", "and", "d_id", "==", "length", "-", "1", ":", "\n", "                    ", "flags", "=", "\"END\"", "\n", "", "pipe", ".", "send", "(", "batch", "+", "(", "flags", ",", ")", ")", "\n", "sem_consumed", ".", "acquire", "(", ")", "\n", "\n", "", "pipe", ".", "send", "(", "(", "\"RESET\"", ",", "None", ",", "None", ",", "None", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.replay_preprocessing.process_replays": [[23, 51], ["os.makedirs", "tqdm.tqdm", "replay_roller.get_names", "maps[].add", "print", "sc2reader.load_replay", "set", "shutil.copy", "os.path.split", "os.path.join"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.util.get_names", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.join"], ["def", "process_replays", "(", "DIR", ",", "TARGET_DIR", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "TARGET_DIR", ",", "exist_ok", "=", "True", ")", "\n", "maps", "=", "{", "}", "\n", "for", "name", "in", "tqdm", "(", "get_names", "(", "DIR", ")", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "replay", "=", "sc2reader", ".", "load_replay", "(", "name", ",", "load_level", "=", "2", ")", "\n", "", "except", "Exception", ":", "\n", "            ", "continue", "\n", "\n", "", "if", "replay", ".", "map_hash", "not", "in", "maps", ":", "\n", "            ", "maps", "[", "replay", ".", "map_hash", "]", "=", "set", "(", ")", "\n", "", "maps", "[", "replay", ".", "map_hash", "]", ".", "add", "(", "replay", ".", "map_name", ")", "\n", "good", "=", "True", "\n", "race_good", "=", "False", "\n", "for", "x", "in", "replay", ".", "players", ":", "\n", "            ", "if", "(", "x", ".", "detail_data", "[", "\"race\"", "]", "==", "\"Protoss\"", ")", ":", "\n", "                ", "race_good", "=", "True", "\n", "", "if", "x", ".", "init_data", "[", "\"scaled_rating\"", "]", "<", "2500", ":", "\n", "                ", "good", "=", "False", "\n", "\n", "", "", "good", "=", "good", "and", "race_good", "and", "(", "replay", ".", "map_hash", "in", "hashes", ")", "\n", "\n", "if", "good", ":", "\n", "            ", "filename", "=", "path", ".", "split", "(", "name", ")", "[", "-", "1", "]", "\n", "shutil", ".", "copy", "(", "DIR", "+", "filename", ",", "path", ".", "join", "(", "TARGET_DIR", ",", "filename", ")", ")", "\n", "\n", "", "", "for", "m", "in", "maps", ":", "\n", "        ", "print", "(", "m", ",", "maps", "[", "m", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.replay_state.ReplayState.__init__": [[27, 52], ["os.path.join", "os.mkdir", "print"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.join"], ["    ", "def", "__init__", "(", "self", ",", "batch_size", ",", "compress", "=", "False", ",", "store_dir", "=", "None", ",", "name", "=", "None", ")", ":", "\n", "        ", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "last_action", "=", "0", "\n", "self", ".", "steps", "=", "0", "\n", "self", ".", "mmr", "=", "0", "\n", "self", ".", "result", "=", "0", "\n", "self", ".", "last_obs", "=", "None", "\n", "self", ".", "replay_data", "=", "[", "]", "\n", "self", ".", "nops", "=", "MAX_NOPS", "\n", "self", ".", "total_nops", "=", "0", "\n", "self", ".", "max_nops", "=", "128", "\n", "self", ".", "last_action_time", "=", "0", "\n", "self", ".", "last_not_camera", "=", "0", "\n", "self", ".", "last_action", "=", "0", "\n", "self", ".", "ops", "=", "0", "\n", "self", ".", "send_data", "=", "[", "]", "\n", "self", ".", "stored_count", "=", "0", "\n", "self", ".", "compress", "=", "compress", "\n", "self", ".", "build", "=", "[", "]", "\n", "if", "self", ".", "compress", ":", "\n", "            ", "store_path", "=", "path", ".", "join", "(", "store_dir", ",", "name", ")", "\n", "mkdir", "(", "store_path", ")", "\n", "\n", "self", ".", "store_dir", "=", "store_path", "\n", "print", "(", "self", ".", "store_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.replay_state.ReplayState.save_global_info": [[53, 57], ["open", "pickle.dump"], "methods", ["None"], ["", "", "def", "save_global_info", "(", "self", ")", ":", "\n", "        ", "data", "=", "{", "\"mmr\"", ":", "self", ".", "mmr", ",", "\"build\"", ":", "self", ".", "build", ",", "\"result\"", ":", "self", ".", "result", "}", "\n", "with", "open", "(", "self", ".", "store_dir", "+", "\"/stats.pkl\"", ",", "\"wb\"", ")", "as", "f", ":", "\n", "            ", "dump", "(", "data", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.replay_state.ReplayState.get_batch": [[58, 79], ["observations.concat_along_axis", "observations.to_tensor", "observations.to_tensor", "observations.to_tensor", "len", "observations.generate_zeroed_dicts", "batch.append", "replay_state.ReplayState.send_data.append", "zstd.compress", "pickle.dumps", "open", "pickle.dump", "str"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.generate_zeroed_dicts"], ["", "", "def", "get_batch", "(", "self", ")", ":", "\n", "        ", "batch", "=", "self", ".", "replay_data", "[", ":", "self", ".", "batch_size", "]", "\n", "self", ".", "replay_data", "=", "self", ".", "replay_data", "[", "self", ".", "batch_size", ":", "]", "\n", "\n", "while", "len", "(", "batch", ")", "<", "self", ".", "batch_size", ":", "\n", "            ", "rd", ",", "md", "=", "generate_zeroed_dicts", "(", ")", "\n", "batch", ".", "append", "(", "(", "batch", "[", "-", "1", "]", "[", "0", "]", ",", "rd", ",", "md", ")", ")", "\n", "\n", "", "inputs", ",", "target", ",", "masks", "=", "concat_along_axis", "(", "batch", ",", "0", ")", "\n", "inputs", "=", "to_tensor", "(", "inputs", ")", "\n", "target", "=", "to_tensor", "(", "target", ",", "torch", ".", "int64", ")", "\n", "masks", "=", "to_tensor", "(", "masks", ")", "\n", "if", "not", "self", ".", "compress", ":", "\n", "            ", "self", ".", "send_data", ".", "append", "(", "(", "inputs", ",", "target", ",", "masks", ")", ")", "\n", "", "else", ":", "\n", "            ", "compressed", "=", "compress", "(", "dumps", "(", "(", "inputs", ",", "target", ",", "masks", ")", ")", ")", "\n", "\n", "with", "open", "(", "self", ".", "store_dir", "+", "\"/\"", "+", "str", "(", "self", ".", "stored_count", ")", ",", "\n", "\"wb\"", ")", "as", "f", ":", "\n", "                ", "dump", "(", "compressed", ",", "f", ")", "\n", "", "self", ".", "stored_count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.replay_state.ReplayState.stats": [[80, 83], ["print"], "methods", ["None"], ["", "", "def", "stats", "(", "self", ")", ":", "\n", "        ", "print", "(", "\n", "f\"steps: {self.steps}, batches: {self.stored_count}, valid: {self.ops}\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.replay_state.ReplayState.step": [[85, 150], ["len", "observations.extract_action", "replay_state.ReplayState.replay_data.append", "observations.set_skip", "features.reverse_action", "replay_state.ReplayState.build.append", "observations.extract_action", "replay_state.ReplayState.replay_data.append", "observations.set_skip", "len", "replay_state.get_unit_type", "observations.get_observation", "len", "replay_state.ReplayState.get_batch", "features.transform_obs", "observations.get_observation", "func_name.split", "features.transform_obs"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.extract_action", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.set_skip", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.extract_action", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.set_skip", "home.repos.pwc.inspect_result.michalop_startrain.None.replay_state.get_unit_type", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_observation", "home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.get_batch", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_observation"], ["", "def", "step", "(", "self", ",", "observation", ",", "actions", ",", "features", ")", ":", "\n", "        ", "if", "self", ".", "last_obs", "is", "not", "None", ":", "\n", "            ", "true_action", "=", "None", "\n", "if", "len", "(", "actions", ")", ">", "0", ":", "\n", "                ", "action", "=", "actions", "[", "0", "]", "\n", "try", ":", "\n", "                    ", "true_action", "=", "features", ".", "reverse_action", "(", "action", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "true_action", "=", "None", "\n", "\n", "", "", "if", "true_action", "is", "not", "None", ":", "\n", "                ", "rd", ",", "md", "=", "extract_action", "(", "true_action", ")", "\n", "\n", "new_obs", "=", "observation", "\n", "\n", "func_name", "=", "true_action", ".", "function", ".", "name", "\n", "if", "(", "\"Train\"", "in", "func_name", "\n", "or", "\"Build\"", "in", "func_name", ")", "and", "len", "(", "self", ".", "build", ")", "<", "20", ":", "\n", "                    ", "self", ".", "build", ".", "append", "(", "get_unit_type", "(", "func_name", ".", "split", "(", "\"_\"", ")", "[", "1", "]", ")", ")", "\n", "\n", "", "if", "true_action", ".", "function", "==", "1", ":", "\n", "                    ", "if", "self", ".", "last_action", "==", "1", ":", "\n", "# remove last camera so that it doesn't clutter the training data", "\n", "                        ", "if", "self", ".", "steps", "-", "self", ".", "last_not_camera", "<", "MAX_NOPS", ":", "\n", "                            ", "self", ".", "last_action_time", "=", "self", ".", "last_not_camera", "\n", "del", "self", ".", "replay_data", "[", "-", "1", "]", "\n", "self", ".", "ops", "-=", "1", "\n", "new_obs", "=", "self", ".", "last_obs", "\n", "", "else", ":", "\n", "                            ", "self", ".", "last_not_camera", "=", "self", ".", "steps", "# not actually a camera, but we need to update", "\n", "", "", "", "else", ":", "\n", "                    ", "self", ".", "last_not_camera", "=", "self", ".", "steps", "# we are not moving camera", "\n", "\n", "", "assert", "true_action", ".", "function", "<", "573", ",", "\"wrong action number\"", "\n", "\n", "self", ".", "replay_data", ".", "append", "(", "\n", "(", "get_observation", "(", "features", ".", "transform_obs", "(", "self", ".", "last_obs", ")", ")", ",", "\n", "rd", ",", "md", ")", ")", "\n", "self", ".", "ops", "+=", "1", "\n", "assert", "self", ".", "steps", "-", "self", ".", "last_action_time", "<", "128", ",", "\"too many nops\"", "\n", "set_skip", "(", "self", ".", "replay_data", "[", "-", "1", "]", ",", "\n", "self", ".", "steps", "-", "self", ".", "last_action_time", ")", "\n", "\n", "self", ".", "last_obs", "=", "new_obs", "\n", "self", ".", "last_action", "=", "true_action", ".", "function", "\n", "self", ".", "last_action_time", "=", "self", ".", "steps", "\n", "\n", "if", "self", ".", "last_action", "!=", "1", ":", "\n", "                    ", "self", ".", "last_not_camera", "=", "self", ".", "steps", "\n", "while", "len", "(", "self", ".", "replay_data", ")", ">", "self", ".", "batch_size", ":", "\n", "                        ", "self", ".", "get_batch", "(", ")", "\n", "", "", "", "else", ":", "\n", "                ", "self", ".", "total_nops", "+=", "1", "\n", "\n", "if", "self", ".", "steps", "-", "self", ".", "last_action_time", "==", "MAX_NOPS", "-", "1", ":", "\n", "                    ", "self", ".", "last_action", "=", "0", "\n", "rd", ",", "md", "=", "extract_action", "(", "None", ")", "\n", "self", ".", "replay_data", ".", "append", "(", "(", "get_observation", "(", "\n", "features", ".", "transform_obs", "(", "self", ".", "last_obs", ")", ")", ",", "rd", ",", "md", ")", ")", "\n", "self", ".", "last_obs", "=", "observation", "\n", "set_skip", "(", "self", ".", "replay_data", "[", "-", "1", "]", ",", "MAX_NOPS", "-", "1", ")", "\n", "self", ".", "last_action_time", "=", "self", ".", "steps", "\n", "", "", "", "else", ":", "\n", "            ", "self", ".", "last_obs", "=", "observation", "\n", "", "self", ".", "steps", "+=", "1", "\n", "", "", ""]], "home.repos.pwc.inspect_result.michalop_startrain.None.replay_state.get_unit_type": [[18, 24], ["None"], "function", ["None"], ["def", "get_unit_type", "(", "unit_name", ")", ":", "\n", "    ", "for", "race", "in", "(", "un", ".", "Neutral", ",", "un", ".", "Protoss", ",", "un", ".", "Terran", ",", "un", ".", "Zerg", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "race", "[", "unit_name", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "pass", "# Wrong race.", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.rl_training.selective_load": [[30, 40], ["target.load_state_dict"], "function", ["None"], ["def", "selective_load", "(", "source_dict", ",", "target", ")", ":", "\n", "    ", "'''\n    load_dict = {}\n    target_dict = target.state_dict()\n    for x in target_dict:\n        print(x)\n        if x in source_dict and source_dict[x].shape == target_dict[x].shape:\n            load_dict[x] = source_dict[x]\n    '''", "\n", "target", ".", "load_state_dict", "(", "source_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.rl_training.join_trajectories": [[42, 57], ["zip", "observations.to_cuda", "observations.to_cuda", "observations.to_cuda", "observations.to_cuda", "torch.cat().cuda", "torch.cat().cuda", "torch.cat().cuda", "torch.cat().cuda", "observations.concat_lstm_hidden", "tuple", "observations.concat_along_axis_tensor", "observations.concat_along_axis_tensor", "observations.concat_along_axis_tensor", "observations.concat_along_axis_tensor", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.cuda"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_lstm_hidden", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda"], ["", "def", "join_trajectories", "(", "trajectories", ")", ":", "\n", "    ", "obs", ",", "ac", ",", "ms", ",", "probs", ",", "vals", ",", "advs", ",", "active", ",", "ref_out", ",", "last_hidden", "=", "zip", "(", "*", "trajectories", ")", "\n", "\n", "obs", "=", "to_cuda", "(", "concat_along_axis_tensor", "(", "obs", ",", "1", ")", ")", "\n", "ac", "=", "to_cuda", "(", "concat_along_axis_tensor", "(", "ac", ",", "1", ")", ")", "\n", "ms", "=", "to_cuda", "(", "concat_along_axis_tensor", "(", "ms", ",", "1", ")", ")", "\n", "ref_out", "=", "to_cuda", "(", "concat_along_axis_tensor", "(", "ref_out", ",", "1", ")", ")", "\n", "probs", "=", "torch", ".", "cat", "(", "probs", ",", "dim", "=", "1", ")", ".", "cuda", "(", ")", "\n", "vals", "=", "torch", ".", "cat", "(", "vals", ",", "dim", "=", "1", ")", ".", "cuda", "(", ")", "\n", "advs", "=", "torch", ".", "cat", "(", "advs", ",", "dim", "=", "1", ")", ".", "cuda", "(", ")", "\n", "active", "=", "torch", ".", "cat", "(", "active", ",", "dim", "=", "1", ")", ".", "cuda", "(", ")", "\n", "hs", "=", "concat_lstm_hidden", "(", "last_hidden", ")", "\n", "hs", "=", "tuple", "(", "[", "x", ".", "cuda", "(", ")", "for", "x", "in", "hs", "]", ")", "\n", "\n", "return", "obs", ",", "ac", ",", "ms", ",", "probs", ",", "vals", ",", "advs", ",", "active", ",", "ref_out", ",", "hs", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.rl_training.rl_training": [[59, 211], ["torch.manual_seed", "random.seed", "model.Model", "torch.load", "rl_training.selective_load", "model.Model", "rl_training.selective_load", "model.Model.add_value", "model.Model.cuda", "model.Model.train", "model.Model.cuda", "torch.optim.Adam", "trajectory_generator.TrajectoryGenerator", "torch.optim.Adam.zero_grad", "torch.cuda.amp.GradScaler", "range", "model.Model.parameters", "clearml.Task.init", "Task.init.get_logger", "trajectory_generator.TrajectoryGenerator.generate_trajectories", "model.Model.train", "range", "model.Model.parameters", "task.get_logger.report_scalar", "print", "task.get_logger.report_scalar", "trajectory_generator.TrajectoryGenerator.step_score_queue", "zip", "numpy.array", "enumerate", "task.get_logger.report_scalar", "print", "torch.save", "print", "numpy.zeros", "range", "task.get_logger.report_scalar", "game_scores.append", "trajectory_generator.TrajectoryGenerator.step_score_queue", "len", "max", "task.get_logger.report_scalar", "rl_training.join_trajectories", "torch.cuda.amp.GradScaler.scale().backward", "loss_rl.item", "model.Model.state_dict", "torch.optim.Adam.state_dict", "torch.cuda.amp.autocast", "model.Model.", "model.PPO_loss", "len", "print", "torch.cuda.amp.GradScaler.step", "torch.cuda.amp.GradScaler.update", "torch.optim.Adam.zero_grad", "sum", "len", "torch.cuda.amp.GradScaler.scale", "losses_dict[].item", "scores_dict[].item", "losses_dict[].item", "scores_dict[].item", "sum", "len"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_training.selective_load", "home.repos.pwc.inspect_result.michalop_startrain.None.run_training.selective_load", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.add_value", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.train", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.TrajectoryGenerator.generate_trajectories", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.train", "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.TrajectoryGenerator.step_score_queue", "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.TrajectoryGenerator.step_score_queue", "home.repos.pwc.inspect_result.michalop_startrain.None.rl_training.join_trajectories", "home.repos.pwc.inspect_result.michalop_startrain.None.model.PPO_loss", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.step"], ["", "def", "rl_training", "(", "base_model", ",", "reference_replay", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "2138", ")", "\n", "seed", "(", "2137", ")", "\n", "\n", "model", "=", "Model", "(", ")", "\n", "start_epoch", "=", "0", "\n", "\n", "checkpoint", "=", "torch", ".", "load", "(", "base_model", ")", "\n", "selective_load", "(", "checkpoint", "[", "'model_state_dict'", "]", ",", "model", ")", "\n", "frozen_model", "=", "Model", "(", ")", "\n", "selective_load", "(", "checkpoint", "[", "'model_state_dict'", "]", ",", "frozen_model", ")", "\n", "\n", "model", ".", "add_value", "(", ")", "\n", "\n", "frozen_model", ".", "cuda", "(", ")", "\n", "frozen_model", ".", "train", "(", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "optimizer", "=", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "LEARNING_RATE", ",", "weight_decay", "=", "1e-7", ")", "\n", "generator", "=", "TrajectoryGenerator", "(", "model", ",", "frozen_model", ",", "reference_replay", ",", "num_envs", "=", "24", ",", "max_batch", "=", "12", ")", "\n", "\n", "if", "WRITE", ":", "\n", "        ", "task", "=", "Task", ".", "init", "(", "project_name", "=", "'StarTrain'", ",", "\n", "task_name", "=", "'rl batch 512'", ")", "\n", "logger", "=", "task", ".", "get_logger", "(", ")", "\n", "\n", "", "total_epoch_loss", "=", "0", "\n", "total_losses_dict", "=", "{", "}", "\n", "total_scores_dict", "=", "{", "}", "\n", "steps", "=", "0", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "scaler", "=", "GradScaler", "(", ")", "\n", "\n", "game_scores", "=", "[", "(", "np", ".", "zeros", "(", "(", "VALUE_DIM", ",", ")", ")", ",", "-", "1", ")", "]", "\n", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "1000000", ",", "1", ")", ":", "\n", "        ", "running_loss", "=", "0", "\n", "\n", "trajectories", "=", "generator", ".", "generate_trajectories", "(", "TRAJECTORIES", ")", "\n", "\n", "model", ".", "train", "(", ")", "\n", "\n", "for", "repeat", "in", "range", "(", "2", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "0", ",", "TRAJECTORIES", ",", "BATCH", ")", ":", "\n", "                ", "steps", "+=", "STEPS", "*", "BATCH", "\n", "\n", "losses_dict", "=", "{", "}", "\n", "scores_dict", "=", "{", "}", "\n", "\n", "obs", ",", "ac", ",", "ms", ",", "probs", ",", "vals", ",", "advs", ",", "actives", ",", "ref_output", ",", "hiddens", "=", "join_trajectories", "(", "\n", "trajectories", "[", "i", ":", "i", "+", "BATCH", "]", ")", "\n", "\n", "with", "autocast", "(", ")", ":", "\n", "                    ", "output", ",", "new_hiddens", "=", "model", "(", "obs", ",", "hiddens", ",", "ac", ")", "\n", "loss_rl", ",", "losses_dict_rl", ",", "scores_dict_rl", "=", "PPO_loss", "(", "\n", "output", ",", "ac", ",", "ms", ",", "vals", ",", "advs", ",", "actives", ",", "probs", ",", "ref_output", ",", "epoch", ">", "WARMUP", ")", "\n", "\n", "", "reduced_loss", "=", "(", "loss_rl", "*", "1.0", ")", "/", "BATCH", "/", "STEPS", "/", "OPT_STEPS", "\n", "scaler", ".", "scale", "(", "reduced_loss", ")", ".", "backward", "(", ")", "\n", "\n", "losses_dict", "|=", "losses_dict_rl", "\n", "scores_dict", "|=", "scores_dict_rl", "\n", "\n", "loss_val", "=", "loss_rl", ".", "item", "(", ")", "\n", "running_loss", "+=", "loss_val", "\n", "total_epoch_loss", "+=", "loss_val", "\n", "\n", "\n", "if", "len", "(", "total_losses_dict", ")", ">", "0", ":", "\n", "                    ", "for", "x", "in", "total_losses_dict", ":", "\n", "                        ", "total_losses_dict", "[", "x", "]", "+=", "losses_dict", "[", "x", "]", ".", "item", "(", ")", "\n", "total_scores_dict", "[", "x", "]", "+=", "scores_dict", "[", "x", "]", ".", "item", "(", ")", "\n", "", "", "else", ":", "\n", "                    ", "total_losses_dict", "=", "{", "\n", "x", ":", "losses_dict", "[", "x", "]", ".", "item", "(", ")", "\n", "for", "x", "in", "losses_dict", "\n", "}", "\n", "total_scores_dict", "=", "{", "\n", "x", ":", "scores_dict", "[", "x", "]", ".", "item", "(", ")", "\n", "for", "x", "in", "scores_dict", "\n", "}", "\n", "", "if", "(", "i", "//", "BATCH", ")", "%", "OPT_STEPS", "==", "OPT_STEPS", "-", "1", ":", "\n", "                    ", "print", "(", "'[%d, %d, %5d] loss: %.3f'", "%", "\n", "(", "epoch", ",", "repeat", ",", "i", ",", "running_loss", "/", "STEPS", "/", "BATCH", "/", "OPT_STEPS", ")", ")", "\n", "scaler", ".", "step", "(", "optimizer", ")", "\n", "scaler", ".", "update", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "running_loss", "=", "0.0", "\n", "\n", "", "", "", "weights", "=", "0", "\n", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "            ", "weights", "+=", "(", "param", "*", "param", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "logger", ".", "report_scalar", "(", "title", "=", "\"Stats\"", ",", "\n", "series", "=", "\"Weight Magnitude\"", ",", "\n", "value", "=", "weights", ",", "\n", "iteration", "=", "epoch", ")", "\n", "# writer.add_scalar(\"Stats/Gradient Magnitude\",", "\n", "#                   grad_magnitudes/steps,epoch)", "\n", "print", "(", "f\"avg loss in epoch {total_epoch_loss/steps}\"", ")", "\n", "logger", ".", "report_scalar", "(", "title", "=", "\"Losses\"", ",", "\n", "series", "=", "\"Total\"", ",", "\n", "value", "=", "total_epoch_loss", "/", "steps", ",", "\n", "iteration", "=", "epoch", ")", "\n", "for", "x", "in", "total_losses_dict", ":", "\n", "            ", "logger", ".", "report_scalar", "(", "title", "=", "\"Losses\"", ",", "\n", "series", "=", "x", ",", "\n", "value", "=", "total_losses_dict", "[", "x", "]", "/", "\n", "(", "total_scores_dict", "[", "x", "]", "+", "0.001", ")", ",", "\n", "iteration", "=", "epoch", ")", "\n", "\n", "", "game_score", "=", "generator", ".", "step_score_queue", "(", ")", "\n", "while", "game_score", "is", "not", "None", ":", "\n", "            ", "game_scores", ".", "append", "(", "game_score", ")", "\n", "game_score", "=", "generator", ".", "step_score_queue", "(", ")", "\n", "\n", "", "while", "len", "(", "game_scores", ")", ">", "100", ":", "\n", "            ", "del", "game_scores", "[", "0", "]", "\n", "\n", "", "rewards", ",", "wins", "=", "zip", "(", "*", "game_scores", ")", "\n", "wins", "=", "[", "max", "(", "0", ",", "x", ")", "for", "x", "in", "wins", "]", "\n", "\n", "rewards", "=", "np", ".", "array", "(", "rewards", ")", "\n", "for", "i", ",", "name", "in", "enumerate", "(", "value_names", ")", ":", "\n", "            ", "logger", ".", "report_scalar", "(", "title", "=", "\"Rewards\"", ",", "\n", "series", "=", "\"reward_\"", "+", "name", ",", "\n", "value", "=", "sum", "(", "rewards", "[", ":", ",", "i", "]", ")", "/", "len", "(", "rewards", ")", ",", "\n", "iteration", "=", "epoch", ")", "\n", "\n", "", "logger", ".", "report_scalar", "(", "title", "=", "\"Rewards\"", ",", "\n", "series", "=", "\"wins\"", ",", "\n", "value", "=", "sum", "(", "wins", ")", "/", "len", "(", "wins", ")", ",", "\n", "iteration", "=", "epoch", ")", "\n", "\n", "steps", "=", "0", "\n", "\n", "total_losses_dict", "=", "{", "}", "\n", "total_scores_dict", "=", "{", "}", "\n", "total_epoch_loss", "=", "0", "\n", "\n", "print", "(", "\"SAVING\"", ")", "\n", "\n", "torch", ".", "save", "(", "\n", "{", "\n", "'epoch'", ":", "epoch", ",", "\n", "'model_state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state_dict'", ":", "optimizer", ".", "state_dict", "(", ")", "\n", "}", ",", "SAVE_PATH", ")", "\n", "\n", "print", "(", "\"SAVED\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.WorkerImpl.__init__": [[34, 60], ["run_game.get_stats", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "pysc2.env.sc2_env.SC2Env", "pysc2.env.sc2_env.SC2Env", "game_env.SC2EnvWrapper", "trajectory_generator.WorkerImpl.pipe.send", "trajectory_generator.WorkerImpl.pipe.recv", "trajectory_generator.WorkerImpl.env.reset", "pysc2.env.sc2_env.Agent", "pysc2.env.sc2_env.Agent"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.get_stats", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.reset"], ["    ", "def", "__init__", "(", "self", ",", "pipe", ",", "queue", ",", "env_type", ",", "id_", ",", "data_queue", ",", "score_queue", ",", "\n", "hidden", ",", "ref_replay", ")", ":", "\n", "        ", "self", ".", "pipe", "=", "pipe", "\n", "self", ".", "queue", "=", "queue", "\n", "self", ".", "id_", "=", "id_", "\n", "self", ".", "data_queue", "=", "data_queue", "\n", "self", ".", "score_queue", "=", "score_queue", "\n", "self", ".", "zero_hidden", "=", "hidden", "\n", "self", ".", "stats", "=", "get_stats", "(", "ref_replay", ")", "\n", "torch", ".", "set_num_threads", "(", "1", ")", "\n", "\n", "env", "=", "SC2Env", "(", "\n", "map_name", "=", "\"Acropolis\"", ",", "\n", "players", "=", "[", "Agent", "(", "Race", ".", "protoss", ",", "\"StarTrain\"", ")", ",", "env_type", "]", ",", "\n", "agent_interface_format", "=", "interface_format", ",", "\n", "visualize", "=", "VISUALIZE", ",", "\n", "step_mul", "=", "1", ",", "\n", "ensure_available_actions", "=", "False", ",", "\n", "realtime", "=", "False", ",", "\n", "game_steps_per_episode", "=", "0", ",", "\n", "save_replay_episodes", "=", "1", ",", "\n", "score_index", "=", "-", "1", ",", "\n", "replay_dir", "=", "\"/home/michal/AI_research/StarTrain/showcase_replays\"", ")", "\n", "self", ".", "env", "=", "SC2EnvWrapper", "(", "env", ",", "self", ".", "stats", ",", "60", ")", "\n", "self", ".", "pipe", ".", "send", "(", "(", "self", ".", "env", ".", "reset", "(", ")", ",", "hidden", ")", ")", "\n", "self", ".", "input_buffer", ",", "self", ".", "hidden_buffer", "=", "self", ".", "pipe", ".", "recv", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.WorkerImpl.run_games": [[61, 65], ["trajectory_generator.WorkerImpl.run_game"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.run_game"], ["", "def", "run_games", "(", "self", ")", ":", "\n", "# try:", "\n", "        ", "while", "True", ":", "\n", "            ", "self", ".", "run_game", "(", ")", "\n", "# except Exception as e:", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.WorkerImpl.generate_trajectory": [[69, 98], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "reversed", "list", "range", "zip", "observations.concat_along_axis_tensor", "observations.concat_along_axis_tensor", "observations.concat_along_axis_tensor", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "observations.concat_along_axis_tensor", "list.append", "reversed", "list.append", "len", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor"], ["", "", "def", "generate_trajectory", "(", "self", ",", "buffer", ",", "last_hidden", ",", "bootstrap_value", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "trajectory", "=", "[", "]", "\n", "true_value", "=", "bootstrap_value", "\n", "for", "obs", ",", "action", ",", "probs", ",", "value", ",", "reward", ",", "ref_output", "in", "reversed", "(", "buffer", ")", ":", "\n", "                ", "true_value", "=", "true_value", "*", "0.999", "+", "reward", "\n", "advantage", "=", "true_value", "-", "value", "\n", "ac", ",", "ms", "=", "action", "\n", "trajectory", ".", "append", "(", "(", "obs", ",", "ac", ",", "ms", ",", "probs", ",", "true_value", ",", "advantage", ",", "\n", "torch", ".", "ones", "(", "(", "1", ",", "1", ",", "1", ")", ")", ",", "ref_output", ")", ")", "\n", "\n", "", "trajectory", "=", "list", "(", "reversed", "(", "trajectory", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "32", "-", "len", "(", "buffer", ")", ")", ":", "\n", "                ", "trajectory", ".", "append", "(", "(", "obs", ",", "ac", ",", "ms", ",", "probs", ",", "true_value", ",", "advantage", ",", "\n", "torch", ".", "zeros", "(", "(", "1", ",", "1", ",", "1", ")", ")", ",", "ref_output", ")", ")", "\n", "\n", "", "obs", ",", "ac", ",", "ms", ",", "probs", ",", "vals", ",", "advs", ",", "active", ",", "ref_output", "=", "zip", "(", "*", "trajectory", ")", "\n", "\n", "obs", "=", "concat_along_axis_tensor", "(", "obs", ",", "0", ")", "\n", "ac", "=", "concat_along_axis_tensor", "(", "ac", ",", "0", ")", "\n", "ms", "=", "concat_along_axis_tensor", "(", "ms", ",", "0", ")", "\n", "probs", "=", "torch", ".", "cat", "(", "probs", ",", "dim", "=", "0", ")", "\n", "vals", "=", "torch", ".", "cat", "(", "vals", ",", "dim", "=", "0", ")", "\n", "advs", "=", "torch", ".", "cat", "(", "advs", ",", "dim", "=", "0", ")", "\n", "active", "=", "torch", ".", "cat", "(", "active", ",", "dim", "=", "0", ")", "\n", "ref_output", "=", "concat_along_axis_tensor", "(", "ref_output", ",", "0", ")", "\n", "\n", "", "return", "[", "obs", ",", "ac", ",", "ms", ",", "probs", ",", "vals", ",", "advs", ",", "active", ",", "ref_output", ",", "last_hidden", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.WorkerImpl.place_inputs": [[99, 104], ["range", "len"], "methods", ["None"], ["", "def", "place_inputs", "(", "self", ",", "obs", ",", "hidden", ")", ":", "\n", "        ", "for", "key", "in", "obs", ":", "\n", "            ", "self", ".", "input_buffer", "[", "key", "]", "[", ":", ",", "self", ".", "id_", "]", "=", "obs", "[", "key", "]", "[", ":", ",", "0", "]", "\n", "", "for", "i", "in", "range", "(", "len", "(", "hidden", ")", ")", ":", "\n", "            ", "self", ".", "hidden_buffer", "[", "i", "]", "[", ":", ",", "self", ".", "id_", "]", "=", "hidden", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.WorkerImpl.run_game": [[105, 134], ["trajectory_generator.WorkerImpl.env.reset", "range", "trajectory_generator.WorkerImpl.place_inputs", "trajectory_generator.WorkerImpl.queue.put", "trajectory_generator.WorkerImpl.pipe.recv", "trajectory_generator.WorkerImpl.env.step", "model.compute_action_prob", "buffer.append", "len", "trajectory_generator.WorkerImpl.generate_trajectory", "trajectory_generator.WorkerImpl.data_queue.put", "trajectory_generator.WorkerImpl.generate_trajectory", "trajectory_generator.WorkerImpl.data_queue.put", "trajectory_generator.WorkerImpl.score_queue.put", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.reset", "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.WorkerImpl.place_inputs", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.step", "home.repos.pwc.inspect_result.michalop_startrain.None.model.compute_action_prob", "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.WorkerImpl.generate_trajectory", "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.WorkerImpl.generate_trajectory"], ["", "", "def", "run_game", "(", "self", ")", ":", "\n", "        ", "hidden", "=", "self", ".", "zero_hidden", "\n", "last_hidden", "=", "self", ".", "zero_hidden", "\n", "buffer", "=", "[", "]", "\n", "obs", "=", "self", ".", "env", ".", "reset", "(", ")", "\n", "total_rewards", "=", "0", "\n", "for", "i", "in", "range", "(", "1000000", ")", ":", "\n", "            ", "self", ".", "place_inputs", "(", "obs", ",", "hidden", ")", "\n", "self", ".", "queue", ".", "put", "(", "(", "Request", ".", "process", ",", "self", ".", "id_", ")", ")", "\n", "outputs", ",", "ref_output", ",", "hidden", "=", "self", ".", "pipe", ".", "recv", "(", ")", "\n", "new_obs", ",", "reward", ",", "done", ",", "game_result", ",", "action", "=", "self", ".", "env", ".", "step", "(", "outputs", ")", "\n", "reward", "=", "reward", "*", "REWARD_SCALING", "\n", "probs", "=", "compute_action_prob", "(", "outputs", ",", "action", "[", "0", "]", ",", "action", "[", "1", "]", ")", "\n", "if", "len", "(", "buffer", ")", "==", "32", ":", "\n", "                ", "t", "=", "self", ".", "generate_trajectory", "(", "buffer", ",", "last_hidden", ",", "\n", "outputs", "[", "'value'", "]", ")", "\n", "self", ".", "data_queue", ".", "put", "(", "t", ")", "\n", "buffer", "=", "[", "]", "\n", "last_hidden", "=", "hidden", "\n", "\n", "", "buffer", ".", "append", "(", "(", "obs", ",", "action", ",", "probs", ",", "outputs", "[", "'value'", "]", ",", "reward", ",", "ref_output", ")", ")", "\n", "obs", "=", "new_obs", "\n", "total_rewards", "+=", "reward", "\n", "if", "done", ":", "\n", "                ", "t", "=", "self", ".", "generate_trajectory", "(", "buffer", ",", "last_hidden", ",", "\n", "torch", ".", "zeros", "(", "(", "1", ",", "1", ",", "VALUE_DIM", ")", ")", ")", "\n", "self", ".", "data_queue", ".", "put", "(", "t", ")", "\n", "self", ".", "score_queue", ".", "put", "(", "(", "total_rewards", ",", "game_result", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.Worker.__init__": [[137, 145], ["torch.Pipe", "torch.Pipe", "torch.Pipe", "torch.Process", "torch.Process", "torch.Process", "trajectory_generator.Worker.proc.start"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "request_queue", ",", "zero_hidden", ",", "ref_replay", ",", "id_", ",", "env_type", ",", "data_queue", ",", "\n", "score_queue", ")", ":", "\n", "        ", "self", ".", "pipe", ",", "pipe2", "=", "mp", ".", "Pipe", "(", ")", "\n", "self", ".", "proc", "=", "mp", ".", "Process", "(", "target", "=", "Worker", ".", "run_games", ",", "\n", "args", "=", "(", "pipe2", ",", "request_queue", ",", "env_type", ",", "id_", ",", "\n", "data_queue", ",", "score_queue", ",", "zero_hidden", ",", "ref_replay", ")", ")", "\n", "self", ".", "proc", ".", "start", "(", ")", "\n", "self", ".", "id", "=", "id_", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.Worker.observe": [[147, 149], ["trajectory_generator.Worker.pipe.recv"], "methods", ["None"], ["", "def", "observe", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "pipe", ".", "recv", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.Worker.send": [[150, 152], ["trajectory_generator.Worker.pipe.send"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send"], ["", "def", "send", "(", "self", ",", "action", ",", "ref_output", ",", "hidden", ")", ":", "\n", "        ", "self", ".", "pipe", ".", "send", "(", "(", "action", ",", "ref_output", ",", "hidden", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.Worker.join": [[153, 155], ["trajectory_generator.Worker.proc.join"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.join"], ["", "def", "join", "(", "self", ")", ":", "\n", "        ", "self", ".", "proc", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.Worker.send_buffers": [[156, 158], ["trajectory_generator.Worker.pipe.send"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send"], ["", "def", "send_buffers", "(", "self", ",", "obs", ",", "hiddens", ")", ":", "\n", "        ", "return", "self", ".", "pipe", ".", "send", "(", "(", "obs", ",", "hiddens", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.Worker.run_games": [[159, 164], ["trajectory_generator.WorkerImpl", "trajectory_generator.WorkerImpl.run_games"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.run_games"], ["", "@", "staticmethod", "\n", "def", "run_games", "(", "pipe", ",", "queue", ",", "env_type", ",", "id_", ",", "data_queue", ",", "score_queue", ",", "hidden", ",", "ref_replay", ")", ":", "\n", "        ", "w", "=", "WorkerImpl", "(", "pipe", ",", "queue", ",", "env_type", ",", "id_", ",", "data_queue", ",", "score_queue", ",", "\n", "hidden", ",", "ref_replay", ")", "\n", "w", ".", "run_games", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.TrajectoryGenerator.start_worker": [[172, 181], ["trajectory_generator.Worker", "len"], "methods", ["None"], ["    ", "def", "start_worker", "(", "self", ",", "i", ")", ":", "\n", "        ", "return", "Worker", "(", "\n", "self", ".", "request_queue", ",", "\n", "self", ".", "zero_hidden", ",", "\n", "self", ".", "ref_replay", ",", "\n", "i", ",", "\n", "self", ".", "env_types", "[", "i", "%", "len", "(", "self", ".", "env_types", ")", "]", ",", "\n", "self", ".", "data_queue", ",", "\n", "self", ".", "score_queue", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.TrajectoryGenerator.__init__": [[183, 244], ["torch.Queue", "torch.Queue", "torch.Queue", "torch.Queue", "torch.Queue", "torch.Queue", "pysc2.env.sc2_env.Bot", "pysc2.env.sc2_env.Bot", "pysc2.env.sc2_env.Bot", "pysc2.env.sc2_env.Bot", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "trajectory_generator.TrajectoryGenerator.model.cuda", "trajectory_generator.TrajectoryGenerator.model.eval", "trajectory_generator.TrajectoryGenerator.ref_model.train", "model.get_hidden", "torch.Queue", "torch.Queue", "torch.Queue", "range", "range", "observations.concat_along_axis_tensor", "list", "list", "range", "range", "tuple", "tuple", "range", "trajectory_generator.TrajectoryGenerator.start_worker", "trajectory_generator.TrajectoryGenerator.envs_dict[].observe", "obs.append", "hiddens.append", "observations.concat_lstm_hidden", "observations.concat_lstm_hidden", "trajectory_generator.TrajectoryGenerator.obs_buffer[].clone", "len", "trajectory_generator.TrajectoryGenerator.hidden_buffer[].clone", "trajectory_generator.TrajectoryGenerator.reshape", "len", "trajectory_generator.TrajectoryGenerator.hidden_buffer2[].clone", "trajectory_generator.TrajectoryGenerator.reshape().cuda", "trajectory_generator.TrajectoryGenerator.envs_dict[].send_buffers", "trajectory_generator.TrajectoryGenerator.reshape"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.train", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.get_hidden", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.TrajectoryGenerator.start_worker", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.observe", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_lstm_hidden", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_lstm_hidden", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.Worker.send_buffers"], ["", "def", "__init__", "(", "self", ",", "\n", "model", ",", "\n", "ref_model", ",", "\n", "ref_replay", ",", "\n", "env_types", "=", "[", "Bot", "(", "Race", ".", "random", ",", "Difficulty", ".", "easy", ")", ",", "\n", "Bot", "(", "Race", ".", "random", ",", "Difficulty", ".", "medium", ")", "]", ",", "\n", "num_envs", "=", "1", ",", "\n", "max_batch", "=", "1", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "ref_model", "=", "ref_model", "\n", "self", ".", "ref_replay", "=", "ref_replay", "\n", "self", ".", "data_queue", "=", "mp", ".", "Queue", "(", ")", "\n", "self", ".", "score_queue", "=", "mp", ".", "Queue", "(", ")", "\n", "self", ".", "env_types", "=", "env_types", "\n", "self", ".", "max_batch", "=", "max_batch", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "model", ".", "cuda", "(", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "self", ".", "ref_model", ".", "train", "(", ")", "\n", "\n", "self", ".", "zero_hidden", "=", "model", ".", "get_hidden", "(", "1", ")", "\n", "\n", "self", ".", "envs_dict", "=", "{", "}", "\n", "self", ".", "request_queue", "=", "mp", ".", "Queue", "(", ")", "\n", "\n", "self", ".", "rewards", "=", "0", "\n", "for", "i", "in", "range", "(", "num_envs", ")", ":", "\n", "                ", "self", ".", "envs_dict", "[", "i", "]", "=", "self", ".", "start_worker", "(", "i", ")", "\n", "\n", "", "obs", ",", "hiddens", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "num_envs", ")", ":", "\n", "                ", "o", ",", "h", "=", "self", ".", "envs_dict", "[", "i", "]", ".", "observe", "(", ")", "\n", "obs", ".", "append", "(", "o", ")", "\n", "hiddens", ".", "append", "(", "h", ")", "\n", "\n", "", "self", ".", "obs_buffer", "=", "concat_along_axis_tensor", "(", "obs", ",", "1", ")", "\n", "self", ".", "hidden_buffer", "=", "list", "(", "concat_lstm_hidden", "(", "hiddens", ")", ")", "\n", "self", ".", "hidden_buffer2", "=", "list", "(", "concat_lstm_hidden", "(", "hiddens", ")", ")", "\n", "\n", "for", "k", "in", "self", ".", "obs_buffer", ":", "\n", "                ", "self", ".", "obs_buffer", "[", "k", "]", "=", "self", ".", "obs_buffer", "[", "k", "]", ".", "clone", "(", "\n", "memory_format", "=", "torch", ".", "contiguous_format", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "hidden_buffer", ")", ")", ":", "\n", "                ", "v", "=", "self", ".", "hidden_buffer", "[", "i", "]", ".", "clone", "(", "\n", "memory_format", "=", "torch", ".", "contiguous_format", ")", "\n", "self", ".", "hidden_buffer", "[", "i", "]", "=", "v", ".", "reshape", "(", "v", ".", "shape", "[", "0", "]", ",", "num_envs", ",", "-", "1", ",", "\n", "v", ".", "shape", "[", "2", "]", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "hidden_buffer2", ")", ")", ":", "\n", "                ", "v", "=", "self", ".", "hidden_buffer2", "[", "i", "]", ".", "clone", "(", "\n", "memory_format", "=", "torch", ".", "contiguous_format", ")", "\n", "self", ".", "hidden_buffer2", "[", "i", "]", "=", "v", ".", "reshape", "(", "v", ".", "shape", "[", "0", "]", ",", "num_envs", ",", "-", "1", ",", "\n", "v", ".", "shape", "[", "2", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "", "self", ".", "hidden_buffer", "=", "tuple", "(", "self", ".", "hidden_buffer", ")", "\n", "self", ".", "hidden_buffer2", "=", "tuple", "(", "self", ".", "hidden_buffer2", ")", "\n", "\n", "for", "i", "in", "range", "(", "num_envs", ")", ":", "\n", "                ", "self", ".", "envs_dict", "[", "i", "]", ".", "send_buffers", "(", "self", ".", "obs_buffer", ",", "\n", "self", ".", "hidden_buffer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.TrajectoryGenerator.gather_inputs": [[245, 267], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "range", "range", "torch.index_select().cuda", "torch.index_select().cuda", "torch.index_select().cuda", "torch.index_select().cuda", "torch.index_select().cuda", "torch.index_select().cuda", "torch.index_select().cuda", "torch.index_select().cuda", "torch.index_select().cuda", "len", "torch.index_select().cuda", "torch.index_select().cuda", "torch.index_select().cuda", "torch.index_select().cuda", "torch.index_select().cuda", "torch.index_select().cuda", "torch.index_select().cuda", "torch.index_select().cuda", "torch.index_select().cuda", "hidden.append", "len", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "hidden2.append", "torch.index_select.reshape", "torch.index_select.reshape", "torch.index_select.reshape", "torch.tensor.cuda", "torch.tensor.cuda", "torch.tensor.cuda", "torch.index_select.reshape", "torch.index_select.reshape", "torch.index_select.reshape", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda"], ["", "", "", "def", "gather_inputs", "(", "self", ",", "envs_list", ")", ":", "\n", "        ", "envs", "=", "torch", ".", "tensor", "(", "envs_list", ",", "dtype", "=", "torch", ".", "int64", ")", "\n", "obs_dict", "=", "{", "}", "\n", "hidden", ",", "hidden2", "=", "[", "]", ",", "[", "]", "\n", "\n", "for", "k", "in", "self", ".", "obs_buffer", ":", "\n", "            ", "obs_dict", "[", "k", "]", "=", "torch", ".", "index_select", "(", "self", ".", "obs_buffer", "[", "k", "]", ",", "1", ",", "\n", "envs", ")", ".", "cuda", "(", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "hidden_buffer", ")", ")", ":", "\n", "            ", "selected", "=", "torch", ".", "index_select", "(", "self", ".", "hidden_buffer", "[", "i", "]", ",", "1", ",", "\n", "envs", ")", ".", "cuda", "(", ")", "\n", "shape", "=", "selected", ".", "shape", "\n", "hidden", ".", "append", "(", "selected", ".", "reshape", "(", "shape", "[", "0", "]", ",", "-", "1", ",", "shape", "[", "3", "]", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "hidden_buffer2", ")", ")", ":", "\n", "            ", "selected", "=", "torch", ".", "index_select", "(", "self", ".", "hidden_buffer2", "[", "i", "]", ",", "1", ",", "\n", "envs", ".", "cuda", "(", ")", ")", "\n", "shape", "=", "selected", ".", "shape", "\n", "hidden2", ".", "append", "(", "selected", ".", "reshape", "(", "shape", "[", "0", "]", ",", "-", "1", ",", "shape", "[", "3", "]", ")", ")", "\n", "\n", "", "return", "obs_dict", ",", "hidden", ",", "hidden2", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.TrajectoryGenerator.step": [[268, 326], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "looptime.reset_t", "looptime.add_t", "looptime.reset_t", "trajectory_generator.TrajectoryGenerator.gather_inputs", "looptime.add_t", "looptime.reset_t", "looptime.add_t", "looptime.reset_t", "len", "list", "range", "enumerate", "enumerate", "looptime.add_t", "len", "trajectory_generator.TrajectoryGenerator.request_queue.get", "envs.append", "envs_ids.append", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "torch.cuda.amp.autocast", "trajectory_generator.TrajectoryGenerator.model", "trajectory_generator.TrajectoryGenerator.ref_model", "output[].cpu", "ref_output[].cpu", "len", "next_state[].cpu", "zip", "tuple", "env.send", "trajectory_generator.TrajectoryGenerator.envs_dict[].join", "trajectory_generator.TrajectoryGenerator.start_worker", "k.replace"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.looptime.reset_t", "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.add_t", "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.reset_t", "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.TrajectoryGenerator.gather_inputs", "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.add_t", "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.reset_t", "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.add_t", "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.reset_t", "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.add_t", "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.get", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.join", "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.TrajectoryGenerator.start_worker"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "envs", "=", "[", "]", "\n", "envs_ids", "=", "[", "]", "\n", "reset_t", "(", "\"waiting\"", ")", "\n", "while", "len", "(", "envs", ")", "<", "self", ".", "max_batch", ":", "\n", "                ", "req", "=", "self", ".", "request_queue", ".", "get", "(", ")", "\n", "if", "req", "[", "0", "]", "==", "Request", ".", "exception", ":", "\n", "                    ", "self", ".", "envs_dict", "[", "req", "[", "1", "]", "]", ".", "join", "(", ")", "\n", "self", ".", "envs_dict", "[", "req", "[", "1", "]", "]", "=", "self", ".", "start_worker", "(", "req", "[", "1", "]", ")", "\n", "continue", "\n", "", "g", "=", "self", ".", "envs_dict", "[", "req", "[", "1", "]", "]", "\n", "envs", ".", "append", "(", "g", ")", "\n", "envs_ids", ".", "append", "(", "req", "[", "1", "]", ")", "\n", "", "add_t", "(", "\"waiting\"", ")", "\n", "reset_t", "(", "\"gathering\"", ")", "\n", "inputs", ",", "hiddens", ",", "hiddens2", "=", "self", ".", "gather_inputs", "(", "envs_ids", ")", "\n", "add_t", "(", "\"gathering\"", ")", "\n", "reset_t", "(", "\"running\"", ")", "\n", "with", "autocast", "(", ")", ":", "\n", "                ", "output", ",", "next_state", "=", "self", ".", "model", "(", "inputs", ",", "hiddens", ")", "\n", "target", "=", "{", "k", ".", "replace", "(", "\"_sampled\"", ",", "\"\"", ")", ":", "output", "[", "k", "]", "for", "k", "in", "output", "if", "\"_sampled\"", "in", "k", "}", "\n", "ref_output", ",", "next_state2", "=", "self", ".", "ref_model", "(", "inputs", ",", "hiddens2", ",", "target", ")", "\n", "\n", "", "add_t", "(", "\"running\"", ")", "\n", "reset_t", "(", "\"sending\"", ")", "\n", "length", "=", "len", "(", "envs", ")", "\n", "\n", "for", "k", "in", "output", ":", "\n", "                ", "output", "[", "k", "]", "=", "output", "[", "k", "]", ".", "cpu", "(", ")", "\n", "\n", "", "for", "k", "in", "ref_output", ":", "\n", "                ", "ref_output", "[", "k", "]", "=", "ref_output", "[", "k", "]", ".", "cpu", "(", ")", "\n", "\n", "", "next_state", "=", "list", "(", "next_state", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "next_state", ")", ")", ":", "\n", "                ", "next_state", "[", "i", "]", "=", "next_state", "[", "i", "]", ".", "cpu", "(", ")", "\n", "\n", "", "for", "i", ",", "idx", "in", "enumerate", "(", "envs_ids", ")", ":", "\n", "                ", "for", "buf", ",", "val", "in", "zip", "(", "self", ".", "hidden_buffer2", ",", "next_state2", ")", ":", "\n", "                    ", "size", "=", "val", ".", "shape", "[", "1", "]", "//", "length", "\n", "buf", "[", ":", ",", "idx", "]", "=", "val", "[", ":", ",", "i", "*", "size", ":", "i", "*", "size", "+", "size", ",", ":", "]", "\n", "\n", "", "", "for", "i", ",", "env", "in", "enumerate", "(", "envs", ")", ":", "\n", "                ", "new_hidden", "=", "tuple", "(", ")", "\n", "for", "val", "in", "next_state", ":", "\n", "                    ", "size", "=", "val", ".", "shape", "[", "1", "]", "//", "length", "\n", "new_hidden", "+=", "(", "val", "[", ":", ",", "i", "*", "size", ":", "i", "*", "size", "+", "size", ",", ":", "]", ",", ")", "\n", "", "to_send", "=", "{", "}", "\n", "ref_to_send", "=", "{", "}", "\n", "for", "key", "in", "output", ":", "\n", "                    ", "to_send", "[", "key", "]", "=", "output", "[", "key", "]", "[", ":", ",", "i", ":", "i", "+", "1", "]", "\n", "\n", "", "for", "key", "in", "ref_output", ":", "\n", "                    ", "ref_to_send", "[", "key", "]", "=", "ref_output", "[", "key", "]", "[", ":", ",", "i", ":", "i", "+", "1", "]", "\n", "\n", "", "env", ".", "send", "(", "to_send", ",", "ref_to_send", ",", "new_hidden", ")", "\n", "", "add_t", "(", "\"sending\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.TrajectoryGenerator.generate_trajectories": [[327, 346], ["trajectory_generator.TrajectoryGenerator.model.eval", "looptime.log_by_tag", "looptime.clear_t", "len", "looptime.reset_t", "looptime.add_t", "trajectory_generator.TrajectoryGenerator.step", "len", "trajectories.append", "print", "trajectory_generator.TrajectoryGenerator.data_queue.get", "len"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.looptime.log_by_tag", "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.clear_t", "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.reset_t", "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.add_t", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.step", "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.get"], ["", "", "def", "generate_trajectories", "(", "self", ",", "min_traj", "=", "100", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "trajectories", "=", "[", "]", "\n", "\n", "while", "len", "(", "trajectories", ")", "<", "min_traj", ":", "\n", "            ", "reset_t", "(", "\"trajectories\"", ")", "\n", "while", "len", "(", "trajectories", ")", "<", "min_traj", ":", "\n", "                ", "try", ":", "\n", "                    ", "trajectories", ".", "append", "(", "self", ".", "data_queue", ".", "get", "(", "False", ")", ")", "\n", "print", "(", "len", "(", "trajectories", ")", ")", "\n", "", "except", "Empty", ":", "\n", "                    ", "break", "\n", "", "", "add_t", "(", "\"trajectories\"", ")", "\n", "self", ".", "step", "(", ")", "\n", "\n", "", "log_by_tag", "(", ")", "\n", "clear_t", "(", ")", "\n", "\n", "return", "trajectories", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.trajectory_generator.TrajectoryGenerator.step_score_queue": [[347, 352], ["trajectory_generator.TrajectoryGenerator.score_queue.get"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.looptime.get"], ["", "def", "step_score_queue", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "self", ".", "score_queue", ".", "get", "(", "False", ")", "\n", "", "except", "Empty", ":", "\n", "            ", "return", "None", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.insert_tcount": [[51, 59], ["tuple", "out.append", "out.append"], "function", ["None"], ["def", "insert_tcount", "(", "t", ")", ":", "\n", "    ", "out", "=", "[", "]", "\n", "for", "x", "in", "t", ":", "\n", "        ", "if", "x", "==", "0", ":", "\n", "            ", "out", ".", "append", "(", "TARGET_COUNT", ")", "\n", "", "else", ":", "\n", "            ", "out", ".", "append", "(", "x", ")", "\n", "", "", "return", "tuple", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_categorical_scalar": [[69, 80], ["categorical.append", "scalar.append", "Feat", "Feat", "pysc2.ft.SCREEN_FEATURES", "pysc2.ft.MINIMAP_FEATURES"], "function", ["None"], ["def", "get_categorical_scalar", "(", "features", ")", ":", "\n", "    ", "categorical", "=", "[", "]", "\n", "scalar", "=", "[", "]", "\n", "\n", "for", "feat", "in", "features", ":", "\n", "        ", "if", "feat", ".", "type", "==", "ft", ".", "FeatureType", ".", "CATEGORICAL", ":", "\n", "            ", "categorical", ".", "append", "(", "Feat", "(", "feat", ".", "index", ",", "feat", ".", "scale", ")", ")", "\n", "", "else", ":", "\n", "            ", "scalar", ".", "append", "(", "Feat", "(", "feat", ".", "index", ",", "feat", ".", "scale", ")", ")", "\n", "\n", "", "", "return", "categorical", ",", "scalar", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_max_val": [[87, 92], ["max"], "function", ["None"], ["def", "get_max_val", "(", "feats", ")", ":", "\n", "    ", "m", "=", "0", "\n", "for", "f", "in", "feats", ":", "\n", "        ", "m", "=", "max", "(", "m", ",", "f", ".", "scale", ")", "\n", "", "return", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_type": [[94, 100], ["observations.get_max_val"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_max_val"], ["", "def", "get_type", "(", "feats", ")", ":", "\n", "    ", "x", "=", "get_max_val", "(", "feats", ")", "\n", "if", "x", "<", "256", ":", "\n", "        ", "return", "np", ".", "uint8", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "int16", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_features_by_type": [[108, 119], ["numpy.asarray", "output.append"], "function", ["None"], ["def", "get_features_by_type", "(", "input", ",", "feat_list", ",", "normalize", "=", "False", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "\n", "for", "feat", "in", "feat_list", ":", "\n", "        ", "if", "normalize", ":", "\n", "            ", "norm", "=", "feat", ".", "scale", "\n", "", "else", ":", "\n", "            ", "norm", "=", "1", "\n", "", "output", ".", "append", "(", "input", "[", "feat", ".", "id", "]", "/", "norm", ")", "\n", "\n", "", "return", "np", ".", "asarray", "(", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_observation": [[121, 163], ["observations.get_features_by_type", "observations.get_features_by_type", "sc.reshape.reshape", "cat.reshape.reshape", "sc.reshape.astype", "cat.reshape.astype", "observations.get_features_by_type", "observations.get_features_by_type", "sc.reshape.reshape", "cat.reshape.reshape", "sc.reshape.astype", "cat.reshape.astype", "numpy.zeros", "np.zeros.reshape", "numpy.zeros", "numpy.minimum", "np.zeros.reshape", "obs[].copy", "out_dict[].resize", "numpy.log"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_features_by_type", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_features_by_type", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_features_by_type", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_features_by_type"], ["", "def", "get_observation", "(", "obs", ")", ":", "\n", "    ", "out_dict", "=", "{", "}", "\n", "for", "x", "in", "TRACKED_FEATURES", ":", "\n", "        ", "shape", "=", "TRACKED_FEATURES", "[", "x", "]", "\n", "if", "\"screen\"", "in", "x", ":", "\n", "            ", "screen", "=", "obs", "[", "x", "]", "\n", "sc", "=", "get_features_by_type", "(", "screen", ",", "screen_scalar", ")", "\n", "cat", "=", "get_features_by_type", "(", "screen", ",", "screen_categorical", ")", "\n", "\n", "sc", "=", "sc", ".", "reshape", "(", "(", "1", ",", "1", ")", "+", "sc", ".", "shape", ")", "\n", "cat", "=", "cat", ".", "reshape", "(", "(", "1", ",", "1", ")", "+", "cat", ".", "shape", ")", "\n", "\n", "out_dict", "[", "x", "+", "\"_scalar\"", "]", "=", "sc", ".", "astype", "(", "t_screen_sca", ")", "\n", "out_dict", "[", "x", "+", "\"_categorical\"", "]", "=", "cat", ".", "astype", "(", "t_screen_cat", ")", "\n", "", "elif", "\"minimap\"", "in", "x", ":", "\n", "            ", "minimap", "=", "obs", "[", "x", "]", "\n", "sc", "=", "get_features_by_type", "(", "minimap", ",", "minimap_scalar", ")", "\n", "cat", "=", "get_features_by_type", "(", "minimap", ",", "minimap_categorical", ")", "\n", "\n", "sc", "=", "sc", ".", "reshape", "(", "(", "1", ",", "1", ")", "+", "sc", ".", "shape", ")", "\n", "cat", "=", "cat", ".", "reshape", "(", "(", "1", ",", "1", ")", "+", "cat", ".", "shape", ")", "\n", "\n", "out_dict", "[", "x", "+", "\"_scalar\"", "]", "=", "sc", ".", "astype", "(", "t_minimap_sca", ")", "\n", "out_dict", "[", "x", "+", "\"_categorical\"", "]", "=", "cat", ".", "astype", "(", "t_minimap_cat", ")", "\n", "", "elif", "\"available_actions\"", "in", "x", ":", "\n", "            ", "thing", "=", "np", ".", "zeros", "(", "(", "573", ",", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "data", "in", "obs", "[", "x", "]", ":", "\n", "                ", "thing", "[", "data", "]", "=", "1", "\n", "\n", "", "out_dict", "[", "x", "]", "=", "thing", ".", "reshape", "(", "(", "1", ",", "1", ",", "573", ")", ")", "\n", "", "elif", "\"game_loop\"", "in", "x", ":", "\n", "            ", "thing", "=", "np", ".", "zeros", "(", "(", "1", ",", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "thing", "[", "0", "]", "=", "np", ".", "minimum", "(", "obs", "[", "x", "]", "/", "(", "22.4", "*", "60", "*", "20", ")", ",", "10", ")", "\n", "out_dict", "[", "x", "]", "=", "thing", ".", "reshape", "(", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "out_dict", "[", "x", "]", "=", "obs", "[", "x", "]", ".", "copy", "(", ")", "\n", "if", "\"player\"", "in", "x", ":", "\n", "                ", "out_dict", "[", "x", "]", "=", "np", ".", "log", "(", "out_dict", "[", "x", "]", "+", "1", ")", "\n", "\n", "", "out_dict", "[", "x", "]", ".", "resize", "(", "(", "1", ",", "1", ")", "+", "shape", ")", "\n", "\n", "", "", "return", "out_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_tensor": [[168, 176], ["torch.tensor", "torch.tensor"], "function", ["None"], ["def", "to_tensor", "(", "x", ",", "type", "=", "torch", ".", "float32", ")", ":", "\n", "    ", "result", "=", "{", "}", "\n", "for", "field", "in", "x", ":", "\n", "        ", "if", "\"feature\"", "in", "field", ":", "\n", "            ", "result", "[", "field", "]", "=", "torch", ".", "tensor", "(", "x", "[", "field", "]", ",", "dtype", "=", "None", ")", "\n", "", "else", ":", "\n", "            ", "result", "[", "field", "]", "=", "torch", ".", "tensor", "(", "x", "[", "field", "]", ",", "dtype", "=", "type", ")", "\n", "", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_cuda": [[178, 182], ["x[].cuda"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda"], ["", "def", "to_cuda", "(", "x", ")", ":", "\n", "    ", "for", "field", "in", "x", ":", "\n", "        ", "x", "[", "field", "]", "=", "x", "[", "field", "]", ".", "cuda", "(", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis": [[184, 195], ["zip", "tuple", "result.append", "numpy.concatenate"], "function", ["None"], ["", "def", "concat_along_axis", "(", "x", ",", "axis", ")", ":", "\n", "    ", "result", "=", "[", "]", "\n", "swapped", "=", "zip", "(", "*", "x", ")", "\n", "for", "field", "in", "swapped", ":", "\n", "        ", "output", "=", "{", "}", "\n", "for", "entry", "in", "field", "[", "0", "]", ":", "\n", "            ", "output", "[", "entry", "]", "=", "np", ".", "concatenate", "(", "[", "p", "[", "entry", "]", "for", "p", "in", "field", "]", ",", "\n", "axis", "=", "axis", ")", "\n", "", "result", ".", "append", "(", "output", ")", "\n", "\n", "", "return", "tuple", "(", "result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor": [[197, 203], ["torch.cat"], "function", ["None"], ["", "def", "concat_along_axis_tensor", "(", "x", ",", "axis", ")", ":", "\n", "    ", "output", "=", "{", "}", "\n", "for", "entry", "in", "x", "[", "0", "]", ":", "\n", "        ", "output", "[", "entry", "]", "=", "torch", ".", "cat", "(", "[", "p", "[", "entry", "]", "for", "p", "in", "x", "]", ",", "axis", "=", "axis", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.load_global_stats": [[205, 216], ["util.get_names", "open", "pickle.load", "open", "pickle.loads", "os.path.join", "len", "os.path.join", "zstd.decompress", "str", "pickle.load"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.util.get_names", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.join", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.join"], ["", "def", "load_global_stats", "(", "directory", ")", ":", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", "\"stats.pkl\"", ")", ",", "\"rb\"", ")", "as", "f", ":", "\n", "        ", "stats", "=", "load", "(", "f", ")", "\n", "\n", "", "names", "=", "get_names", "(", "directory", ")", "\n", "half", "=", "(", "len", "(", "names", ")", "-", "1", ")", "//", "2", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", "str", "(", "half", ")", ")", ",", "\"rb\"", ")", "as", "f", ":", "\n", "        ", "batch", "=", "loads", "(", "decompress", "(", "load", "(", "f", ")", ")", ")", "\n", "stats", "[", "\"control_groups\"", "]", "=", "batch", "[", "0", "]", "[", "\"control_groups\"", "]", "[", "0", ":", "1", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "", "return", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.screen_from_id": [[218, 224], ["torch.nn.functional.one_hot", "screen.reshape.short", "screen.reshape.reshape", "torch.zeros().long", "torch.zeros"], "function", ["None"], ["", "def", "screen_from_id", "(", "active", ",", "screen_pos", ")", ":", "\n", "    ", "screen", "=", "one_hot", "(", "torch", ".", "zeros", "(", "1", ",", "1", ")", ".", "long", "(", ")", ",", "num_classes", "=", "64", "*", "64", ")", "\n", "screen", "=", "screen", ".", "short", "(", ")", "\n", "screen", "=", "screen", "*", "active", "\n", "screen", "=", "screen", ".", "reshape", "(", "screen_pos", ".", "shape", "+", "(", "1", ",", "64", ",", "64", ")", ")", "\n", "return", "screen", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.shift_last_action": [[226, 238], ["torch.cat"], "function", ["None"], ["", "def", "shift_last_action", "(", "actions", ",", "last_action", ",", "length", ")", ":", "\n", "\n", "    ", "new_last_action", "=", "{", "}", "\n", "new_actions", "=", "{", "}", "\n", "\n", "for", "key", "in", "last_action", ":", "\n", "        ", "data", "=", "actions", "[", "key", "]", "\n", "new_last_action", "[", "key", "]", "=", "data", "[", "length", "-", "1", ":", "length", "]", "\n", "new_actions", "[", "key", "]", "=", "torch", ".", "cat", "(", "[", "last_action", "[", "key", "]", ",", "data", "[", ":", "length", "-", "1", "]", "]", ",", "\n", "dim", "=", "0", ")", "\n", "\n", "", "return", "new_actions", ",", "new_last_action", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.extend_batch": [[240, 287], ["numpy.zeros", "min", "numpy.zeros", "numpy.resize", "numpy.resize", "numpy.zeros", "numpy.zeros", "numpy.zeros", "prev_action[].reshape().numpy", "range", "torch.tensor", "torch.tensor", "torch.tensor", "observations.screen_from_id", "observations.screen_from_id", "observations.screen_from_id", "torch.cat", "torch.cat", "torch.tensor", "torch.tensor", "max", "enumerate", "torch.zeros", "int", "prev_action[].reshape", "int", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.observations.screen_from_id", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.screen_from_id", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.screen_from_id"], ["", "def", "extend_batch", "(", "batch", ",", "stats", ",", "batch_size", ",", "prev_action", ",", "visible", ")", ":", "\n", "    ", "mmr", "=", "np", ".", "zeros", "(", "(", "6", ",", ")", ")", "\n", "mmr_val", "=", "min", "(", "max", "(", "int", "(", "stats", "[", "'mmr'", "]", "-", "2500", ")", "//", "1000", ",", "0", ")", ",", "5", ")", "\n", "# print(mmr_val, stats['mmr'])", "\n", "mmr", "[", "mmr_val", "]", "=", "1", "\n", "build_order", "=", "np", ".", "zeros", "(", "20", ",", "dtype", "=", "np", ".", "long", ")", "\n", "\n", "if", "visible", ":", "\n", "        ", "for", "i", ",", "x", "in", "enumerate", "(", "stats", "[", "'build'", "]", ")", ":", "\n", "            ", "build_order", "[", "i", "]", "=", "int", "(", "x", ")", "\n", "\n", "", "", "mmr", "=", "np", ".", "resize", "(", "mmr", ",", "(", "batch_size", ",", "1", ",", "6", ")", ")", "\n", "build_order", "=", "np", ".", "resize", "(", "build_order", ",", "(", "batch_size", ",", "1", ",", "20", ")", ")", "\n", "\n", "uses_screen", "=", "np", ".", "zeros", "(", "(", "batch_size", ",", "1", ",", "1", ")", ",", "dtype", "=", "np", ".", "int16", ")", "\n", "uses_screen2", "=", "np", ".", "zeros", "(", "(", "batch_size", ",", "1", ",", "1", ")", ",", "dtype", "=", "np", ".", "int16", ")", "\n", "uses_minimap", "=", "np", ".", "zeros", "(", "(", "batch_size", ",", "1", ",", "1", ")", ",", "dtype", "=", "np", ".", "int16", ")", "\n", "functions", "=", "prev_action", "[", "'function'", "]", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", ".", "numpy", "(", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "inputs", "=", "ac", ".", "FUNCTION_TYPES", "[", "ac", ".", "FUNCTIONS", "[", "functions", "[", "i", "]", "]", ".", "function_type", "]", "\n", "if", "ac", ".", "TYPES", ".", "screen", "in", "inputs", ":", "\n", "            ", "uses_screen", "[", "i", "]", "=", "1", "\n", "", "if", "ac", ".", "TYPES", ".", "minimap", "in", "inputs", ":", "\n", "            ", "uses_minimap", "[", "i", "]", "=", "1", "\n", "", "if", "ac", ".", "TYPES", ".", "screen2", "in", "inputs", ":", "\n", "            ", "uses_screen2", "[", "i", "]", "=", "1", "\n", "", "", "uses_screen", "=", "torch", ".", "tensor", "(", "uses_screen", ")", "\n", "uses_minimap", "=", "torch", ".", "tensor", "(", "uses_minimap", ")", "\n", "uses_screen2", "=", "torch", ".", "tensor", "(", "uses_screen2", ")", "\n", "screen", "=", "screen_from_id", "(", "uses_screen", ",", "prev_action", "[", "str", "(", "ac", ".", "TYPES", ".", "screen", ")", "]", ")", "\n", "screen2", "=", "screen_from_id", "(", "uses_screen2", ",", "prev_action", "[", "str", "(", "ac", ".", "TYPES", ".", "screen2", ")", "]", ")", "\n", "minimap", "=", "screen_from_id", "(", "uses_minimap", ",", "prev_action", "[", "str", "(", "ac", ".", "TYPES", ".", "minimap", ")", "]", ")", "\n", "\n", "if", "visible", ":", "\n", "        ", "batch", "[", "0", "]", "[", "'control_groups_hint'", "]", "=", "stats", "[", "\"control_groups\"", "]", "\n", "", "else", ":", "\n", "        ", "batch", "[", "0", "]", "[", "'control_groups_hint'", "]", "=", "torch", ".", "zeros", "(", "\n", "stats", "[", "\"control_groups\"", "]", ".", "shape", ")", "\n", "", "batch", "[", "0", "]", "[", "'feature_screen_categorical'", "]", "=", "torch", ".", "cat", "(", "\n", "[", "batch", "[", "0", "]", "[", "'feature_screen_categorical'", "]", ",", "screen", ",", "screen2", "]", ",", "2", ")", "\n", "batch", "[", "0", "]", "[", "'feature_minimap_categorical'", "]", "=", "torch", ".", "cat", "(", "\n", "[", "batch", "[", "0", "]", "[", "'feature_minimap_categorical'", "]", ",", "minimap", "]", ",", "2", ")", "\n", "\n", "batch", "[", "0", "]", "[", "'prev_action'", "]", "=", "prev_action", "[", "'function'", "]", "\n", "batch", "[", "0", "]", "[", "'mmr'", "]", "=", "torch", ".", "tensor", "(", "mmr", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "batch", "[", "0", "]", "[", "'build_order'", "]", "=", "torch", ".", "tensor", "(", "build_order", ",", "dtype", "=", "torch", ".", "int64", ")", "\n", "return", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_lstm_hidden": [[289, 297], ["tuple", "zip", "torch.cat"], "function", ["None"], ["", "def", "concat_lstm_hidden", "(", "x", ")", ":", "\n", "    ", "result", "=", "tuple", "(", ")", "\n", "swapped", "=", "zip", "(", "*", "x", ")", "\n", "for", "field", "in", "swapped", ":", "\n", "        ", "output", "=", "torch", ".", "cat", "(", "field", ",", "axis", "=", "1", ")", "\n", "result", "=", "result", "+", "(", "output", ",", ")", "\n", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.generate_zeroed_dicts": [[299, 314], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "str", "numpy.zeros", "numpy.zeros"], "function", ["None"], ["", "def", "generate_zeroed_dicts", "(", ")", ":", "\n", "    ", "mask_dict", "=", "{", "}", "\n", "result_dict", "=", "{", "}", "\n", "\n", "result_dict", "[", "\"function\"", "]", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "mask_dict", "[", "\"function\"", "]", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ")", ")", "\n", "result_dict", "[", "\"time_skip\"", "]", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "mask_dict", "[", "\"time_skip\"", "]", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ")", ")", "\n", "\n", "for", "t", "in", "ac", ".", "TYPES", ":", "\n", "        ", "x", "=", "str", "(", "t", ")", "\n", "result_dict", "[", "x", "]", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "mask_dict", "[", "x", "]", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ")", ")", "\n", "\n", "", "return", "result_dict", ",", "mask_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.extract_action": [[316, 344], ["observations.generate_zeroed_dicts", "zip", "str", "len", "int"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.observations.generate_zeroed_dicts"], ["", "def", "extract_action", "(", "fun_call", ")", ":", "\n", "    ", "if", "fun_call", "is", "None", ":", "\n", "        ", "fun_id", "=", "0", "\n", "", "else", ":", "\n", "        ", "fun_id", "=", "fun_call", ".", "function", "\n", "\n", "", "rd", ",", "md", "=", "generate_zeroed_dicts", "(", ")", "\n", "\n", "rd", "[", "\"function\"", "]", "[", "0", ",", "0", "]", "=", "fun_id", "\n", "md", "[", "\"function\"", "]", "[", "0", ",", "0", "]", "=", "1.0", "\n", "md", "[", "\"time_skip\"", "]", "[", "0", ",", "0", "]", "=", "1.0", "\n", "rd", "[", "\"time_skip\"", "]", "[", "0", ",", "0", "]", "=", "0", "\n", "if", "fun_id", "==", "0", ":", "\n", "        ", "return", "rd", ",", "md", "\n", "\n", "", "for", "data", ",", "argt", "in", "zip", "(", "\n", "fun_call", ".", "arguments", ",", "\n", "ac", ".", "FUNCTION_TYPES", "[", "ac", ".", "FUNCTIONS", "[", "int", "(", "fun_id", ")", "]", ".", "function_type", "]", ")", ":", "\n", "        ", "a_id", "=", "data", "[", "0", "]", "\n", "shape", "=", "argt", ".", "sizes", "\n", "if", "len", "(", "shape", ")", ">", "1", ":", "\n", "            ", "a_id", "=", "data", "[", "0", "]", "*", "64", "+", "data", "[", "1", "]", "\n", "\n", "", "name", "=", "str", "(", "argt", ")", "\n", "rd", "[", "name", "]", "[", "0", ",", "0", "]", "=", "a_id", "\n", "md", "[", "name", "]", "[", "0", ",", "0", "]", "=", "1.0", "\n", "\n", "", "return", "rd", ",", "md", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_skip": [[346, 348], ["None"], "function", ["None"], ["", "def", "get_skip", "(", "data", ")", ":", "\n", "    ", "return", "data", "[", "1", "]", "[", "\"time_skip\"", "]", "[", "0", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.observations.set_skip": [[350, 352], ["None"], "function", ["None"], ["", "def", "set_skip", "(", "data", ",", "value", ")", ":", "\n", "    ", "data", "[", "1", "]", "[", "\"time_skip\"", "]", "[", "0", ",", "0", "]", "=", "value", "\n", "", ""]], "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.__init__": [[28, 34], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "stats", ",", "timeout", ",", "env_name", "=", "\"env\"", ")", ":", "\n", "        ", "self", ".", "env_name", "=", "env_name", "\n", "self", ".", "timeout", "=", "timeout", "\n", "self", ".", "stats", "=", "stats", "\n", "self", ".", "env", "=", "env", "\n", "self", ".", "minute", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.gen_obs": [[35, 41], ["observations.get_observation", "observations.to_tensor", "observations.extend_batch"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_observation", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.extend_batch"], ["", "def", "gen_obs", "(", "self", ",", "ts", ")", ":", "\n", "        ", "inputs", "=", "get_observation", "(", "ts", ".", "observation", ")", "\n", "inputs", "=", "to_tensor", "(", "inputs", ")", "\n", "inputs", "=", "extend_batch", "(", "(", "inputs", ",", ")", ",", "self", ".", "stats", ",", "1", ",", "self", ".", "last_action", ",", "\n", "True", ")", "[", "0", "]", "\n", "return", "inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.extract_action": [[42, 66], ["outputs[].squeeze().item", "outputs[].squeeze().item", "max", "outputs[].detach().cpu", "outputs[].squeeze().item", "action_data.append", "outputs[].squeeze", "outputs[].squeeze", "pysc2.FunctionCall", "x.replace", "outputs[].detach", "outputs[].squeeze", "str", "str", "str"], "methods", ["None"], ["", "def", "extract_action", "(", "self", ",", "outputs", ")", ":", "\n", "        ", "action", "=", "outputs", "[", "\"function_sampled\"", "]", ".", "squeeze", "(", ")", ".", "item", "(", ")", "\n", "true_delay", "=", "outputs", "[", "\"time_skip_sampled\"", "]", ".", "squeeze", "(", ")", ".", "item", "(", ")", "\n", "delay", "=", "max", "(", "true_delay", "-", "1", ",", "0", ")", "\n", "\n", "func", "=", "ac", ".", "FUNCTIONS", "[", "action", "]", "\n", "action_data", "=", "[", "]", "\n", "last_action", "=", "{", "}", "\n", "for", "x", "in", "outputs", ":", "\n", "            ", "last_action", "[", "x", ".", "replace", "(", "\"_sampled\"", ",", "\"\"", ")", "]", "=", "outputs", "[", "x", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "", "for", "x", "in", "ac", ".", "FUNCTION_TYPES", "[", "func", ".", "function_type", "]", ":", "\n", "            ", "sub_action", "=", "outputs", "[", "str", "(", "x", ")", "+", "\"_sampled\"", "]", ".", "squeeze", "(", ")", ".", "item", "(", ")", "\n", "\n", "if", "\"screen\"", "in", "str", "(", "x", ")", "or", "\"minimap\"", "in", "str", "(", "x", ")", ":", "\n", "                ", "sub_action", "=", "(", "sub_action", "//", "64", ",", "sub_action", "%", "64", ")", "\n", "", "else", ":", "\n", "                ", "sub_action", "=", "(", "sub_action", ",", ")", "\n", "", "action_data", ".", "append", "(", "sub_action", ")", "\n", "\n", "", "skip_target", "=", "self", ".", "time_step", ".", "observation", "[", "\"game_loop\"", "]", "[", "0", "]", "+", "delay", "\n", "\n", "return", "(", "[", "ac", ".", "FunctionCall", "(", "action", ",", "action_data", ")", "]", ",", "skip_target", ",", "\n", "last_action", ",", "true_delay", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.reset": [[67, 84], ["game_env.SC2EnvWrapper.env.reset", "game_env.weighted_score", "time.time", "game_env.SC2EnvWrapper.gen_obs", "pysc2.FunctionCall", "str", "str", "str", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.reset", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.weighted_score", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.gen_obs"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "minute", "=", "0", "\n", "self", ".", "scheduled", "=", "[", "ac", ".", "FunctionCall", "(", "0", ",", "[", "]", ")", "]", "\n", "obs", "=", "self", ".", "env", ".", "reset", "(", ")", "\n", "self", ".", "time_step", "=", "obs", "[", "0", "]", "\n", "self", ".", "last_score", "=", "weighted_score", "(", "\n", "self", ".", "time_step", ".", "observation", "[", "'score_cumulative'", "]", ",", "0", ")", "\n", "self", ".", "last_action", "=", "{", "\n", "'function'", ":", "torch", ".", "tensor", "(", "[", "[", "0", "]", "]", ")", ".", "long", "(", ")", ",", "\n", "str", "(", "ac", ".", "TYPES", ".", "screen", ")", ":", "torch", ".", "tensor", "(", "[", "[", "0", "]", "]", ")", ".", "long", "(", ")", ",", "\n", "str", "(", "ac", ".", "TYPES", ".", "screen2", ")", ":", "torch", ".", "tensor", "(", "[", "[", "0", "]", "]", ")", ".", "long", "(", ")", ",", "\n", "str", "(", "ac", ".", "TYPES", ".", "minimap", ")", ":", "torch", ".", "tensor", "(", "[", "[", "0", "]", "]", ")", ".", "long", "(", ")", "\n", "}", "\n", "\n", "self", ".", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n", "return", "self", ".", "gen_obs", "(", "self", ".", "time_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.game_end_return": [[85, 89], ["print", "game_env.SC2EnvWrapper.gen_obs"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.gen_obs"], ["", "def", "game_end_return", "(", "self", ",", "time_step", ",", "delta", ",", "end_action", ")", ":", "\n", "        ", "print", "(", "f\"{self.env_name}: GAME END\"", ",", "time_step", ".", "reward", ")", "\n", "return", "self", ".", "gen_obs", "(", "time_step", ")", ",", "delta", ",", "True", ",", "time_step", ".", "reward", ",", "end_action", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.step_wrap": [[90, 105], ["game_env.SC2EnvWrapper.env.step", "int", "print", "time.time"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.step"], ["", "def", "step_wrap", "(", "self", ",", "action", ",", "delay", ")", ":", "\n", "        ", "obs", "=", "self", ".", "env", ".", "step", "(", "action", ",", "delay", ")", "\n", "time_step", "=", "obs", "[", "0", "]", "\n", "game_loop", "=", "time_step", ".", "observation", "[", "\"game_loop\"", "]", "[", "0", "]", "\n", "mins", "=", "game_loop", "/", "22.4", "/", "60", "\n", "\n", "min_val", "=", "int", "(", "mins", ")", "\n", "\n", "if", "min_val", ">", "self", ".", "minute", ":", "\n", "            ", "self", ".", "minute", "=", "min_val", "\n", "print", "(", "f\"{self.env_name}: minute \"", ",", "min_val", ",", "\n", "f\"x{game_loop /(time.time()-self.t0)/ 22.4} realtime\"", ")", "\n", "\n", "", "end", "=", "time_step", ".", "step_type", "==", "StepType", ".", "LAST", "or", "mins", ">", "self", ".", "timeout", "\n", "return", "time_step", ",", "end", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.step": [[106, 124], ["game_env.SC2EnvWrapper.extract_action", "observations.extract_action", "observations.set_skip", "observations.to_tensor", "observations.to_tensor", "game_env.SC2EnvWrapper.step_wrap", "game_env.weighted_score", "max", "game_env.SC2EnvWrapper.game_end_return", "game_env.SC2EnvWrapper.gen_obs"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.extract_action", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.extract_action", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.set_skip", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.step_wrap", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.weighted_score", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.game_end_return", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.gen_obs"], ["", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "        ", "action", ",", "skip_target", ",", "self", ".", "last_action", ",", "true_skip", "=", "self", ".", "extract_action", "(", "\n", "action", ")", "\n", "\n", "act", ",", "md", "=", "extract_action", "(", "action", "[", "0", "]", ")", "\n", "set_skip", "(", "[", "None", ",", "act", "]", ",", "true_skip", ")", "\n", "act", "=", "to_tensor", "(", "act", ",", "type", "=", "torch", ".", "int64", ")", "\n", "md", "=", "to_tensor", "(", "md", ")", "\n", "\n", "self", ".", "time_step", ",", "end", "=", "self", ".", "step_wrap", "(", "action", ",", "max", "(", "1", ",", "true_skip", ")", ")", "\n", "score", "=", "weighted_score", "(", "\n", "self", ".", "time_step", ".", "observation", "[", "'score_cumulative'", "]", ",", "self", ".", "time_step", ".", "reward", ")", "\n", "delta", "=", "score", "-", "self", ".", "last_score", "\n", "self", ".", "last_score", "=", "score", "\n", "\n", "if", "end", ":", "\n", "            ", "return", "self", ".", "game_end_return", "(", "self", ".", "time_step", ",", "delta", ",", "(", "act", ",", "md", ")", ")", "\n", "", "return", "self", ".", "gen_obs", "(", "self", ".", "time_step", ")", ",", "delta", ",", "False", ",", "0", ",", "(", "act", ",", "md", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.weighted_score": [[13, 20], ["numpy.array"], "function", ["None"], ["def", "weighted_score", "(", "score", ",", "reward", ")", ":", "\n", "    ", "return", "np", ".", "array", "(", "[", "\n", "score", "[", "sc", ".", "killed_value_units", "]", "*", "0.03", ",", "\n", "score", "[", "sc", ".", "killed_value_structures", "]", "*", "0.1", ",", "\n", "score", "[", "sc", ".", "collected_minerals", "]", "*", "0.01", ",", "\n", "score", "[", "sc", ".", "collected_vespene", "]", "*", "0.05", ",", "\n", "reward", "*", "1000.0", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.reset_t": [[7, 9], ["time.time"], "function", ["None"], ["def", "reset_t", "(", "tag", ")", ":", "\n", "    ", "last_time", "[", "tag", "]", "=", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.add_t": [[11, 16], ["time.time", "time.time"], "function", ["None"], ["", "def", "add_t", "(", "tag", ")", ":", "\n", "    ", "if", "tag", "in", "sums", ":", "\n", "        ", "sums", "[", "tag", "]", "+=", "time", "(", ")", "-", "last_time", "[", "tag", "]", "\n", "", "else", ":", "\n", "        ", "sums", "[", "tag", "]", "=", "time", "(", ")", "-", "last_time", "[", "tag", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.clear_t": [[18, 21], ["None"], "function", ["None"], ["", "", "def", "clear_t", "(", ")", ":", "\n", "    ", "global", "sums", "\n", "sums", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.log_by_tag": [[23, 30], ["print", "tgt_file.write"], "function", ["None"], ["", "def", "log_by_tag", "(", "tgt_file", "=", "None", ")", ":", "\n", "    ", "if", "tgt_file", "is", "None", ":", "\n", "        ", "for", "t", "in", "sums", ":", "\n", "            ", "print", "(", "f\"{t}:{sums[t]}\"", ")", "\n", "", "", "else", ":", "\n", "        ", "for", "t", "in", "sums", ":", "\n", "            ", "tgt_file", ".", "write", "(", "f\"{t}:{sums[t]}\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.get": [[32, 34], ["None"], "function", ["None"], ["", "", "", "def", "get", "(", "tag", ")", ":", "\n", "    ", "return", "sums", "[", "tag", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.GLU.__init__": [[58, 62], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "gating_size", ",", "output_size", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gate", "=", "nn", ".", "Linear", "(", "gating_size", ",", "input_size", ")", "\n", "self", ".", "lin", "=", "nn", ".", "Linear", "(", "input_size", ",", "output_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.GLU.forward": [[63, 66], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "model.GLU.lin", "model.GLU.gate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "gating", ")", ":", "\n", "        ", "g", "=", "torch", ".", "sigmoid", "(", "self", ".", "gate", "(", "gating", ")", ")", "\n", "return", "self", ".", "lin", "(", "g", "*", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.ResidualBlock.__init__": [[69, 77], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.LayerNorm", "torch.LayerNorm", "torch.Sequential", "torch.Sequential", "torch.LayerNorm", "torch.LayerNorm", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_layers", ",", "size", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "c1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_layers", ",", "in_layers", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "1", ")", ",", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "n1", "=", "nn", ".", "LayerNorm", "(", "(", "in_layers", ",", "size", ",", "size", ")", ")", "\n", "self", ".", "c2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_layers", ",", "in_layers", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "1", ")", ",", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "n2", "=", "nn", ".", "LayerNorm", "(", "(", "in_layers", ",", "size", ",", "size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.ResidualBlock.forward": [[78, 86], ["model.ResidualBlock.n1", "model.ResidualBlock.c1", "model.ResidualBlock.n2", "model.ResidualBlock.c2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "old_x", "=", "x", "\n", "x", "=", "self", ".", "n1", "(", "x", ")", "\n", "x", "=", "self", ".", "c1", "(", "x", ")", "\n", "x", "=", "self", ".", "n2", "(", "x", ")", "\n", "x", "=", "self", ".", "c2", "(", "x", ")", "\n", "\n", "return", "x", "+", "old_x", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.FiLM.__init__": [[89, 93], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "output_size", ",", "gating_size", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "nn", ".", "Linear", "(", "gating_size", ",", "output_size", "[", "0", "]", ")", "\n", "self", ".", "shift", "=", "nn", ".", "Linear", "(", "gating_size", ",", "output_size", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.FiLM.forward": [[94, 98], ["model.FiLM.scale().unsqueeze().unsqueeze", "model.FiLM.shift().unsqueeze().unsqueeze", "model.FiLM.scale().unsqueeze", "model.FiLM.shift().unsqueeze", "model.FiLM.scale", "model.FiLM.shift"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "gating", ")", ":", "\n", "        ", "scale", "=", "self", ".", "scale", "(", "gating", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "shift", "=", "self", ".", "shift", "(", "gating", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "return", "scale", "*", "x", "+", "shift", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.ResidualFiLMBlock.__init__": [[101, 110], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.LayerNorm", "torch.LayerNorm", "torch.Conv2d", "torch.Conv2d", "torch.LayerNorm", "torch.LayerNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "model.FiLM"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_layers", ",", "size", ",", "gating_size", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "c1", "=", "nn", ".", "Conv2d", "(", "in_layers", ",", "in_layers", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "1", ")", "\n", "self", ".", "n1", "=", "nn", ".", "LayerNorm", "(", "(", "in_layers", ",", "size", ",", "size", ")", ")", "\n", "self", ".", "c2", "=", "nn", ".", "Conv2d", "(", "in_layers", ",", "in_layers", ",", "(", "3", ",", "3", ")", ",", "padding", "=", "1", ")", "\n", "self", ".", "n2", "=", "nn", ".", "LayerNorm", "(", "(", "in_layers", ",", "size", ",", "size", ")", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "film", "=", "FiLM", "(", "(", "in_layers", ",", "size", ",", "size", ")", ",", "gating_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.ResidualFiLMBlock.forward": [[111, 122], ["model.ResidualFiLMBlock.n1", "model.ResidualFiLMBlock.c1", "model.ResidualFiLMBlock.relu1", "model.ResidualFiLMBlock.c2", "model.ResidualFiLMBlock.n2", "model.ResidualFiLMBlock.film", "model.ResidualFiLMBlock.relu2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "gating", ")", ":", "\n", "        ", "old_x", "=", "x", "\n", "x", "=", "self", ".", "n1", "(", "x", ")", "\n", "x", "=", "self", ".", "c1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu1", "(", "x", ")", "\n", "x", "=", "self", ".", "c2", "(", "x", ")", "\n", "x", "=", "self", ".", "n2", "(", "x", ")", "\n", "x", "=", "self", ".", "film", "(", "x", ",", "gating", ")", "\n", "x", "=", "self", ".", "relu2", "(", "x", ")", "\n", "\n", "return", "x", "+", "old_x", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.ResidualDenseBlock.__init__": [[125, 131], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.LayerNorm", "torch.LayerNorm", "torch.Sequential", "torch.Sequential", "torch.LayerNorm", "torch.LayerNorm", "torch.Linear", "torch.Linear", "torch.ELU", "torch.ELU", "torch.Linear", "torch.Linear", "torch.ELU", "torch.ELU"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_layers", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "l1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "in_layers", ",", "in_layers", ")", ",", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "n1", "=", "nn", ".", "LayerNorm", "(", "(", "in_layers", ",", ")", ")", "\n", "self", ".", "l2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "in_layers", ",", "in_layers", ")", ",", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "n2", "=", "nn", ".", "LayerNorm", "(", "(", "in_layers", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.ResidualDenseBlock.forward": [[132, 140], ["model.ResidualDenseBlock.n1", "model.ResidualDenseBlock.l1", "model.ResidualDenseBlock.n2", "model.ResidualDenseBlock.l2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "old_x", "=", "x", "\n", "x", "=", "self", ".", "n1", "(", "x", ")", "\n", "x", "=", "self", ".", "l1", "(", "x", ")", "\n", "x", "=", "self", ".", "n2", "(", "x", ")", "\n", "x", "=", "self", ".", "l2", "(", "x", ")", "\n", "\n", "return", "x", "+", "old_x", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.CategoryEmbedder.__init__": [[143, 162], ["torch.Module.__init__", "enumerate", "torch.ELU", "torch.ELU", "model.CategoryEmbedder.category_embeddings.append", "torch.Embedding", "torch.Embedding", "model.CategoryEmbedder.add_module"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "categories", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "category_embeddings", "=", "[", "]", "\n", "one_dim", "=", "0", "\n", "high_dim", "=", "0", "\n", "for", "i", ",", "cat", "in", "enumerate", "(", "categories", ")", ":", "\n", "            ", "if", "cat", ".", "scale", "==", "2", ":", "\n", "                ", "em", "=", "None", "\n", "one_dim", "+=", "1", "\n", "", "else", ":", "\n", "                ", "high_dim", "+=", "1", "\n", "em", "=", "nn", ".", "Embedding", "(", "cat", ".", "scale", ",", "SPATIAL_EMBEDDING", ")", "\n", "self", ".", "add_module", "(", "f\"cat {i}\"", ",", "em", ")", "\n", "\n", "", "self", ".", "category_embeddings", ".", "append", "(", "em", ")", "\n", "\n", "", "self", ".", "output_shape", "=", "one_dim", "+", "SPATIAL_EMBEDDING", "\n", "self", ".", "relu", "=", "nn", ".", "ELU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.CategoryEmbedder.forward": [[163, 182], ["inputs.float", "inputs.unbind", "inputs.float.unbind", "zip", "torch.cat().sum", "torch.cat().sum", "torch.cat().sum", "torch.cat().sum", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "two_value.append", "result.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "f.unsqueeze", "em().permute().unsqueeze", "em().permute", "em"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "float_inputs", "=", "inputs", ".", "float", "(", ")", "\n", "unbound", "=", "inputs", ".", "unbind", "(", "\n", "dim", "=", "1", ")", "\n", "f_unbound", "=", "float_inputs", ".", "unbind", "(", "dim", "=", "1", ")", "\n", "result", "=", "[", "]", "\n", "two_value", "=", "[", "]", "\n", "for", "u", ",", "f", ",", "em", "in", "zip", "(", "unbound", ",", "f_unbound", ",", "self", ".", "category_embeddings", ")", ":", "\n", "            ", "if", "em", "is", "None", ":", "\n", "                ", "two_value", ".", "append", "(", "f", ".", "unsqueeze", "(", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "result", ".", "append", "(", "\n", "em", "(", "u", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "unsqueeze", "(", "0", ")", "\n", ")", "\n", "\n", "", "", "reduced", "=", "torch", ".", "cat", "(", "result", ",", "dim", "=", "0", ")", ".", "sum", "(", "dim", "=", "0", ")", "\n", "extended", "=", "torch", ".", "cat", "(", "[", "reduced", "]", "+", "two_value", ",", "dim", "=", "1", ")", "\n", "\n", "return", "extended", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.SpatialInput.__init__": [[188, 223], ["torch.Module.__init__", "model.CategoryEmbedder", "torch.tensor().unsqueeze().unsqueeze().unsqueeze().unsqueeze().cuda", "torch.tensor().unsqueeze().unsqueeze().unsqueeze().unsqueeze().cuda", "torch.tensor().unsqueeze().unsqueeze().unsqueeze().unsqueeze().cuda", "torch.tensor().unsqueeze().unsqueeze().unsqueeze().unsqueeze().cuda", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "torch.LayerNorm", "torch.LayerNorm", "enumerate", "scales.append", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU", "model.SpatialInput.input_column.append", "model.SpatialInput.add_module", "torch.tensor().unsqueeze().unsqueeze().unsqueeze().unsqueeze", "torch.tensor().unsqueeze().unsqueeze().unsqueeze().unsqueeze", "torch.tensor().unsqueeze().unsqueeze().unsqueeze().unsqueeze", "torch.tensor().unsqueeze().unsqueeze().unsqueeze().unsqueeze", "model.ResidualFiLMBlock", "len", "torch.tensor().unsqueeze().unsqueeze().unsqueeze", "torch.tensor().unsqueeze().unsqueeze().unsqueeze", "torch.tensor().unsqueeze().unsqueeze().unsqueeze", "torch.tensor().unsqueeze().unsqueeze().unsqueeze", "torch.tensor().unsqueeze().unsqueeze", "torch.tensor().unsqueeze().unsqueeze", "torch.tensor().unsqueeze().unsqueeze", "torch.tensor().unsqueeze().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda"], ["    ", "def", "__init__", "(", "self", ",", "scalar_input", ",", "categorical_input", ",", "name", "=", "\"in\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "input_column", "=", "[", "]", "\n", "\n", "self", ".", "cat_embedder", "=", "CategoryEmbedder", "(", "categorical_input", ")", "\n", "scales", "=", "[", "]", "\n", "for", "x", "in", "scalar_input", ":", "\n", "            ", "scales", ".", "append", "(", "x", ".", "scale", "-", "1", ")", "\n", "\n", "", "self", ".", "scales", "=", "torch", ".", "tensor", "(", "scales", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "\n", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "cuda", "(", ")", "\n", "\n", "self", ".", "reshaper", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "len", "(", "scalar_input", ")", "+", "self", ".", "cat_embedder", ".", "output_shape", ",", "\n", "SPATIAL_FILTERS", ",", "(", "1", ",", "1", ")", ",", "\n", "padding", "=", "0", ")", ",", "nn", ".", "ELU", "(", ")", ")", "\n", "\n", "self", ".", "reduce1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "SPATIAL_FILTERS", ",", "64", ",", "(", "4", ",", "4", ")", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ELU", "(", ")", ")", "# 32x32", "\n", "self", ".", "reduce2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "(", "4", ",", "4", ")", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "nn", ".", "ELU", "(", ")", ")", "# 16x16", "\n", "self", ".", "reduce3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "(", "4", ",", "4", ")", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "nn", ".", "ELU", "(", ")", ")", "# 8x8", "\n", "\n", "filters", "=", "128", "\n", "for", "i", "in", "range", "(", "INPUT_LAYERS_SPATIAL", ")", ":", "\n", "            ", "self", ".", "input_column", ".", "append", "(", "\n", "ResidualFiLMBlock", "(", "filters", ",", "8", ",", "SCALAR_LAYER", ")", ")", "\n", "\n", "", "self", ".", "layer_norm_out", "=", "nn", ".", "LayerNorm", "(", "(", "128", ",", "8", ",", "8", ")", ")", "\n", "\n", "for", "i", ",", "mod", "in", "enumerate", "(", "self", ".", "input_column", ")", ":", "\n", "            ", "self", ".", "add_module", "(", "f\"layer {i}\"", ",", "mod", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.SpatialInput.forward": [[224, 249], ["scalar.view.view.view", "model.SpatialInput.view", "model.SpatialInput.cat_embedder", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.SpatialInput.reshaper", "bypass.append", "model.SpatialInput.reduce1", "bypass.append", "model.SpatialInput.reduce2", "bypass.append", "model.SpatialInput.reduce3", "gating.view.view.view", "layer", "layer.view"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "scalar", ",", "categorical", ",", "gating", ")", ":", "\n", "\n", "        ", "shape", "=", "scalar", ".", "shape", "\n", "shape2", "=", "categorical", ".", "shape", "\n", "scalar", "=", "scalar", "/", "self", ".", "scales", "\n", "scalar", "=", "scalar", ".", "view", "(", "(", "shape", "[", "0", "]", "*", "shape", "[", "1", "]", ",", ")", "+", "shape", "[", "2", ":", "]", ")", "\n", "categorical", "=", "categorical", ".", "view", "(", "(", "shape2", "[", "0", "]", "*", "shape2", "[", "1", "]", ",", ")", "+", "shape2", "[", "2", ":", "]", ")", "\n", "categorical", "=", "self", ".", "cat_embedder", "(", "categorical", ")", "\n", "bypass", "=", "[", "]", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "scalar", ",", "categorical", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "reshaper", "(", "x", ")", "\n", "bypass", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "reduce1", "(", "x", ")", "\n", "bypass", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "reduce2", "(", "x", ")", "\n", "bypass", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "reduce3", "(", "x", ")", "\n", "gating", "=", "gating", ".", "view", "(", "-", "1", ",", "SCALAR_LAYER", ")", "\n", "i", "=", "0", "\n", "for", "layer", "in", "self", ".", "input_column", ":", "\n", "            ", "x", "=", "layer", "(", "x", ",", "gating", ")", "\n", "i", "+=", "1", "\n", "\n", "", "return", "x", ".", "view", "(", "shape", "[", ":", "2", "]", "+", "(", "128", ",", "8", ",", "8", ")", ")", ",", "bypass", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.ListInput.__init__": [[252, 261], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.LayerNorm", "torch.LayerNorm", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ELU", "torch.ELU"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_shape", ",", "embedder_size", ",", "name", "=", "\"in\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "encoder", "=", "nn", ".", "Linear", "(", "in_shape", "[", "1", "]", "+", "UNIT_EMBEDDING", "-", "1", ",", "\n", "AGGREGATOR_LAYER", ")", "\n", "self", ".", "unit_embedder", "=", "nn", ".", "Embedding", "(", "embedder_size", ",", "UNIT_EMBEDDING", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "(", "AGGREGATOR_LAYER", ",", ")", ")", "\n", "self", ".", "modifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "AGGREGATOR_LAYER", ",", "AGGREGATOR_LAYER", ")", ",", "nn", ".", "ELU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.ListInput.forward": [[262, 273], ["model.ListInput.unit_embedder", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.ListInput.encoder", "model.ListInput.modifier", "x[].long", "model.ListInput.max", "model.ListInput.layer_norm", "x[].float"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "norm", "=", "True", ")", ":", "\n", "        ", "embedded", "=", "self", ".", "unit_embedder", "(", "x", "[", ":", ",", ":", ",", ":", ",", "0", "]", ".", "long", "(", ")", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "embedded", ",", "x", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", ".", "float", "(", ")", "]", ",", "dim", "=", "-", "1", ")", "\n", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "v", "=", "x", ".", "max", "(", "dim", "=", "-", "2", ",", "keepdim", "=", "False", ")", ".", "values", "\n", "\n", "x", "=", "self", ".", "modifier", "(", "v", ")", "\n", "if", "norm", ":", "\n", "            ", "x", "=", "self", ".", "layer_norm", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.ControlGroupsInput.__init__": [[279, 288], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.LayerNorm", "torch.LayerNorm", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "max"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "name", "=", "\"in\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "layer_size", "=", "CONTROL_GROUP_SIZE", "\n", "self", ".", "unit_embedder", "=", "nn", ".", "Embedding", "(", "\n", "max", "(", "sd", ".", "UNIT_TYPES", ")", "+", "1", ",", "UNIT_EMBEDDING", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "(", "SIMPLE_LAYER", ",", ")", ")", "\n", "self", ".", "layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "layer_size", "*", "10", ",", "SIMPLE_LAYER", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.ControlGroupsInput.forward": [[289, 304], ["model.ControlGroupsInput.unit_embedder", "model.ControlGroupsInput.unit_embedder", "embedded_hint.repeat.repeat.repeat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.ControlGroupsInput.layer", "model.debug", "x[].long", "hint[].long", "model.ControlGroupsInput.view", "model.ControlGroupsInput.layer_norm", "model.ControlGroupsInput.std().item", "x[].float", "model.ControlGroupsInput.std"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.debug"], ["", "def", "forward", "(", "self", ",", "x", ",", "hint", ",", "norm", "=", "True", ")", ":", "\n", "        ", "embedded", "=", "self", ".", "unit_embedder", "(", "x", "[", ":", ",", ":", ",", ":", ",", "0", "]", ".", "long", "(", ")", ")", "\n", "embedded_hint", "=", "self", ".", "unit_embedder", "(", "hint", "[", ":", ",", ":", ",", ":", ",", "0", "]", ".", "long", "(", ")", ")", "\n", "embedded_hint", "=", "embedded_hint", ".", "repeat", "(", "\n", "embedded", ".", "shape", "[", "0", "]", "//", "embedded_hint", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "embedded", ",", "x", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", ".", "float", "(", ")", ",", "embedded_hint", "]", ",", "\n", "dim", "=", "-", "1", ")", "\n", "bypass", "=", "x", "\n", "s", "=", "x", ".", "shape", "\n", "x", "=", "self", ".", "layer", "(", "x", ".", "view", "(", "s", "[", ":", "2", "]", "+", "(", "10", "*", "self", ".", "layer_size", ",", ")", ")", ")", "\n", "\n", "if", "norm", ":", "\n", "            ", "x", "=", "self", ".", "layer_norm", "(", "x", ")", "\n", "", "debug", "(", "self", ".", "name", ",", "x", ".", "std", "(", ")", ".", "item", "(", ")", ")", "\n", "return", "x", ",", "bypass", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.SimpleInput.__init__": [[307, 319], ["torch.Module.__init__", "len", "torch.LayerNorm", "torch.LayerNorm", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_shape", ",", "name", "=", "\"in\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "cut", "=", "len", "(", "in_shape", ")", "\n", "self", ".", "size", "=", "1", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "(", "SIMPLE_LAYER", ",", ")", ")", "\n", "for", "x", "in", "in_shape", ":", "\n", "            ", "self", ".", "size", "*=", "x", "\n", "", "self", ".", "layer", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "self", ".", "size", ",", "SIMPLE_LAYER", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "SIMPLE_LAYER", ",", "SIMPLE_LAYER", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.SimpleInput.forward": [[320, 328], ["model.SimpleInput.layer", "model.SimpleInput.layer2", "model.debug", "model.SimpleInput.view().float", "model.SimpleInput.layer_norm", "model.SimpleInput.std().item", "model.SimpleInput.view", "model.SimpleInput.std"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.debug"], ["", "def", "forward", "(", "self", ",", "x", ",", "norm", "=", "True", ")", ":", "\n", "        ", "s", "=", "x", ".", "shape", "[", ":", "-", "self", ".", "cut", "]", "+", "(", "self", ".", "size", ",", ")", "\n", "x", "=", "self", ".", "layer", "(", "x", ".", "view", "(", "s", ")", ".", "float", "(", ")", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "if", "norm", ":", "\n", "            ", "x", "=", "self", ".", "layer_norm", "(", "x", ")", "\n", "", "debug", "(", "self", ".", "name", ",", "x", ".", "std", "(", ")", ".", "item", "(", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.RelationalCore.__init__": [[331, 345], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.LayerNorm", "torch.LayerNorm", "torch.TransformerEncoderLayer", "torch.TransformerEncoderLayer", "torch.LSTM", "torch.LSTM", "torch.TransformerEncoderLayer", "torch.TransformerEncoderLayer", "torch.TransformerEncoderLayer", "torch.TransformerEncoderLayer", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU", "torch.LayerNorm", "torch.LayerNorm", "torch.Conv2d", "torch.Conv2d", "torch.ELU", "torch.ELU", "torch.LayerNorm", "torch.LayerNorm"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "reduction1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "(", "4", ",", "4", ")", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "nn", ".", "ELU", "(", ")", ",", "\n", "nn", ".", "LayerNorm", "(", "(", "32", ",", "4", ",", "4", ")", ")", ")", "\n", "self", ".", "reduction2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "(", "4", ",", "4", ")", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "nn", ".", "ELU", "(", ")", ",", "\n", "nn", ".", "LayerNorm", "(", "(", "32", ",", "4", ",", "4", ")", ")", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "128", ")", "\n", "self", ".", "transform1", "=", "nn", ".", "TransformerEncoderLayer", "(", "128", ",", "4", ",", "512", ",", "dropout", "=", "0.0", ")", "\n", "self", ".", "lstm", "=", "nn", ".", "LSTM", "(", "128", ",", "128", ",", "1", ")", "\n", "self", ".", "transform2", "=", "nn", ".", "TransformerEncoderLayer", "(", "128", ",", "4", ",", "512", ",", "dropout", "=", "0.0", ")", "\n", "self", ".", "transform3", "=", "nn", ".", "TransformerEncoderLayer", "(", "128", ",", "4", ",", "512", ",", "dropout", "=", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.RelationalCore.forward": [[346, 385], ["screen.transpose().reshape.transpose().reshape.transpose().reshape", "minimap.transpose().reshape.transpose().reshape.transpose().reshape", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.RelationalCore.layer_norm", "x.transpose.transpose.transpose", "model.RelationalCore.transform1", "x.transpose.transpose.transpose", "x.transpose.transpose.reshape", "model.RelationalCore.lstm", "x.transpose.transpose.reshape", "model.RelationalCore.layer_norm", "x.transpose.transpose.transpose", "model.RelationalCore.transform2", "model.RelationalCore.transform3", "x.transpose.transpose.transpose", "x.transpose.transpose.reshape().transpose", "model.RelationalCore.reduction1().view", "model.RelationalCore.reduction2().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "screenout.view", "mapout.view", "screen.transpose().reshape.transpose().reshape.transpose", "minimap.transpose().reshape.transpose().reshape.transpose", "x.transpose.transpose.reshape", "model.RelationalCore.reduction1", "model.RelationalCore.reduction2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "screen", ",", "minimap", ",", "state", ")", ":", "\n", "        ", "shape", "=", "screen", ".", "shape", "\n", "\n", "screen", "=", "screen", ".", "transpose", "(", "2", ",", "4", ")", ".", "reshape", "(", "shape", "[", "0", "]", "*", "shape", "[", "1", "]", ",", "-", "1", ",", "\n", "shape", "[", "2", "]", ")", "\n", "minimap", "=", "minimap", ".", "transpose", "(", "2", ",", "4", ")", ".", "reshape", "(", "shape", "[", "0", "]", "*", "shape", "[", "1", "]", ",", "-", "1", ",", "\n", "shape", "[", "2", "]", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "screen", ",", "minimap", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "layer_norm", "(", "x", ")", "\n", "x", "=", "x", ".", "transpose", "(", "0", ",", "1", ")", "\n", "x", "=", "self", ".", "transform1", "(", "x", ")", "\n", "\n", "x", "=", "x", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "lstm_in", "=", "x", ".", "reshape", "(", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", "*", "shape", "[", "3", "]", "*", "shape", "[", "4", "]", "*", "2", ",", "\n", "shape", "[", "2", "]", ")", "\n", "\n", "x", ",", "nextstate", "=", "self", ".", "lstm", "(", "lstm_in", ",", "state", ")", "\n", "\n", "x", "=", "x", "+", "lstm_in", "\n", "\n", "x", "=", "x", ".", "reshape", "(", "shape", "[", "0", "]", "*", "shape", "[", "1", "]", ",", "-", "1", ",", "shape", "[", "2", "]", ")", "\n", "x", "=", "self", ".", "layer_norm", "(", "x", ")", "\n", "x", "=", "x", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "x", "=", "self", ".", "transform2", "(", "x", ")", "\n", "x", "=", "self", ".", "transform3", "(", "x", ")", "\n", "x", "=", "x", ".", "transpose", "(", "0", ",", "1", ")", "\n", "after", "=", "x", ".", "reshape", "(", "shape", "[", "0", "]", "*", "shape", "[", "1", "]", ",", "2", ",", "shape", "[", "3", "]", ",", "shape", "[", "4", "]", ",", "\n", "shape", "[", "2", "]", ")", ".", "transpose", "(", "2", ",", "4", ")", "\n", "screenout", "=", "after", "[", ":", ",", "0", "]", "\n", "mapout", "=", "after", "[", ":", ",", "1", "]", "\n", "reduced1", "=", "self", ".", "reduction1", "(", "screenout", ")", ".", "view", "(", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "reduced2", "=", "self", ".", "reduction2", "(", "mapout", ")", ".", "view", "(", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "out_reduced", "=", "torch", ".", "cat", "(", "[", "reduced1", ",", "reduced2", "]", ",", "dim", "=", "2", ")", "\n", "\n", "return", "screenout", ".", "view", "(", "shape", ")", ",", "mapout", ".", "view", "(", "\n", "shape", ")", ",", "out_reduced", ",", "nextstate", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.SpatialOutput.__init__": [[388, 419], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.SpatialOutput.output_column.append", "model.SpatialOutput.add_module", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ELU", "torch.ELU", "torch.LayerNorm", "torch.LayerNorm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ELU", "torch.ELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ELU", "torch.ELU", "torch.Conv2d", "torch.Conv2d", "model.ResidualFiLMBlock"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "output_column", "=", "[", "]", "\n", "self", ".", "deconv_layers", "=", "[", "]", "\n", "\n", "self", ".", "reencode", "=", "nn", ".", "Conv2d", "(", "128", "+", "16", ",", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "OUTPUT_LAYERS_SPATIAL", ")", ":", "\n", "            ", "self", ".", "output_column", ".", "append", "(", "ResidualFiLMBlock", "(", "128", ",", "8", ",", "LSTM_SIZE", ")", ")", "\n", "self", ".", "add_module", "(", "f\"layer {i}\"", ",", "self", ".", "output_column", "[", "i", "]", ")", "\n", "\n", "", "self", ".", "deconv_layer1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "128", ",", "\n", "128", ",", "\n", "kernel_size", "=", "(", "4", ",", "4", ")", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", ",", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "deconv_layer2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "LayerNorm", "(", "(", "128", ",", "16", ",", "16", ")", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "128", ",", "\n", "64", ",", "\n", "kernel_size", "=", "(", "4", ",", "4", ")", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", ",", "nn", ".", "ELU", "(", ")", ")", "\n", "\n", "self", ".", "deconv_layer3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "64", ",", "32", ",", "kernel_size", "=", "(", "4", ",", "4", ")", ",", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", ")", "\n", "self", ".", "output_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ELU", "(", ")", ",", "nn", ".", "Conv2d", "(", "32", ",", "1", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.SpatialOutput.forward": [[420, 448], ["lstm_in.view.view.view", "spatial_in.view.view.view", "lstm_in.view.view.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.SpatialOutput.reencode", "model.debug", "model.SpatialOutput.deconv_layer1", "model.SpatialOutput.deconv_layer2", "model.SpatialOutput.deconv_layer3", "model.SpatialOutput.output_layer", "layer.view", "layer"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.debug"], ["", "def", "forward", "(", "self", ",", "spatial_in", ",", "lstm_in", ")", ":", "\n", "        ", "spatial_in", ",", "bypass", "=", "spatial_in", "\n", "shape", "=", "spatial_in", ".", "shape", "\n", "lstm_in_shredded", "=", "lstm_in", ".", "view", "(", "(", "-", "1", ",", "16", ",", "8", ",", "8", ")", ")", "\n", "\n", "spatial_in", "=", "spatial_in", ".", "view", "(", "(", "shape", "[", "0", "]", "*", "shape", "[", "1", "]", ",", ")", "+", "shape", "[", "2", ":", "]", ")", "\n", "\n", "shape2", "=", "lstm_in", ".", "shape", "\n", "lstm_in", "=", "lstm_in", ".", "view", "(", "(", "shape2", "[", "0", "]", "*", "shape2", "[", "1", "]", ",", ")", "+", "shape2", "[", "2", ":", "]", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "spatial_in", ",", "lstm_in_shredded", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "reencode", "(", "x", ")", "\n", "\n", "debug", "(", "x", ".", "shape", ")", "\n", "\n", "i", "=", "0", "\n", "for", "layer", "in", "self", ".", "output_column", ":", "\n", "            ", "x", "=", "layer", "(", "x", ",", "lstm_in", ")", "\n", "i", "+=", "1", "\n", "\n", "", "x", "=", "self", ".", "deconv_layer1", "(", "x", ")", "\n", "x", "+=", "bypass", "[", "2", "]", "\n", "x", "=", "self", ".", "deconv_layer2", "(", "x", ")", "\n", "x", "+=", "bypass", "[", "1", "]", "\n", "x", "=", "self", ".", "deconv_layer3", "(", "x", ")", "\n", "x", "+=", "bypass", "[", "0", "]", "\n", "x", "=", "self", ".", "output_layer", "(", "x", ")", "\n", "\n", "return", "x", ".", "view", "(", "shape", "[", ":", "-", "3", "]", "+", "(", "64", "*", "64", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.DiscreteOutput.__init__": [[451, 457], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ELU", "torch.ELU"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "count", ",", "addition", "=", "0", ",", "name", "=", "\"out\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "l1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "LSTM_SIZE", "+", "addition", ",", "DISCRETE_OUTPUT_COUNT", ")", ",", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "l2", "=", "nn", ".", "Linear", "(", "DISCRETE_OUTPUT_COUNT", ",", "count", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.DiscreteOutput.forward": [[458, 462], ["model.DiscreteOutput.l1", "model.DiscreteOutput.l2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "l1", "(", "x", ")", "\n", "x", "=", "self", ".", "l2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.ControlGroupsOutput.__init__": [[469, 482], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Parameter", "torch.Parameter", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ELU", "torch.ELU", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "addition", "=", "0", ",", "name", "=", "\"out\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "l1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "LSTM_SIZE", "+", "addition", ",", "\n", "DISCRETE_OUTPUT_COUNT", "*", "2", ")", ",", "nn", ".", "ELU", "(", ")", "\n", ")", "# doubled because this is effectively two layers merged into one", "\n", "self", ".", "l2", "=", "nn", ".", "Linear", "(", "DISCRETE_OUTPUT_COUNT", "*", "2", ",", "\n", "CONTROL_GROUPS_SELECT", "+", "4", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Linear", "(", "CONTROL_GROUP_SIZE", ",", "CONTROL_GROUPS_SELECT", ")", "\n", "self", ".", "position_encoding", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "1", ",", "1", ",", "10", ",", "4", ")", ")", "\n", "self", ".", "action_output", "=", "nn", ".", "Linear", "(", "\n", "CONTROL_GROUP_SIZE", "+", "DISCRETE_OUTPUT_COUNT", "*", "2", ",", "CONTROL_GROUPS_ACT", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.ControlGroupsOutput.forward": [[483, 501], ["model.ControlGroupsOutput.l1", "model.ControlGroupsOutput.l2", "model.ControlGroupsOutput.encoder", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "selected.sum.sum.sum", "attention.view.view.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.ControlGroupsOutput.action_output", "model.ControlGroupsOutput.unsqueeze", "torch.functional.softmax().detach", "torch.functional.softmax().detach", "model.ControlGroupsOutput.position_encoding.repeat", "torch.functional.softmax", "torch.functional.softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "control_groups_data", ")", ":", "\n", "        ", "x", "=", "self", ".", "l1", "(", "x", ")", "\n", "select", "=", "self", ".", "l2", "(", "x", ")", "\n", "\n", "values", "=", "self", ".", "encoder", "(", "control_groups_data", ")", "\n", "values", "=", "torch", ".", "cat", "(", "\n", "[", "values", ",", "\n", "self", ".", "position_encoding", ".", "repeat", "(", "values", ".", "shape", "[", ":", "2", "]", "+", "(", "1", ",", "1", ")", ")", "]", ",", "\n", "dim", "=", "-", "1", ")", "\n", "attention", "=", "values", "@", "select", ".", "unsqueeze", "(", "-", "1", ")", "\n", "selected", "=", "nn", ".", "functional", ".", "softmax", "(", "attention", ",", "\n", "dim", "=", "-", "2", ")", ".", "detach", "(", ")", "*", "control_groups_data", "\n", "selected", "=", "selected", ".", "sum", "(", "-", "2", ")", "\n", "attention", "=", "attention", ".", "view", "(", "attention", ".", "shape", "[", ":", "-", "1", "]", ")", "\n", "\n", "act_in", "=", "torch", ".", "cat", "(", "[", "x", ",", "selected", "]", ",", "dim", "=", "-", "1", ")", "\n", "act_out", "=", "self", ".", "action_output", "(", "act_in", ")", "\n", "return", "attention", ",", "act_out", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.ActionOutput.__init__": [[504, 515], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "range", "model.GLU", "model.ActionOutput.layers.append", "model.ActionOutput.add_module", "model.ResidualDenseBlock"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "count", ",", "gating_size", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_layer", "=", "nn", ".", "Linear", "(", "input_size", ",", "ACTION_INTERNAL_SIZE", ")", "\n", "\n", "self", ".", "layers", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "            ", "self", ".", "layers", ".", "append", "(", "ResidualDenseBlock", "(", "ACTION_INTERNAL_SIZE", ")", ")", "\n", "self", ".", "add_module", "(", "f\"layer {i}\"", ",", "self", ".", "layers", "[", "i", "]", ")", "\n", "\n", "", "self", ".", "output", "=", "GLU", "(", "ACTION_INTERNAL_SIZE", ",", "gating_size", ",", "count", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.ActionOutput.forward": [[516, 523], ["model.ActionOutput.in_layer", "model.ActionOutput.output", "layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "gating", ")", ":", "\n", "        ", "x", "=", "self", ".", "in_layer", "(", "x", ")", "\n", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "x", "=", "layer", "(", "x", ")", "\n", "\n", "", "return", "self", ".", "output", "(", "x", ",", "gating", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.__init__": [[526, 631], ["torch.Module.__init__", "model.SpatialInput", "model.SpatialInput", "torch.Linear", "torch.Linear", "model.RelationalCore", "torch.LSTM", "torch.LSTM", "model.GLU", "model.ActionOutput", "torch.Embedding", "torch.Embedding", "model.DiscreteOutput", "torch.Embedding", "torch.Embedding", "model.Model.add_module", "len", "len", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model.Model.add_module", "model.Model.add_module", "str", "model.Model.add_module", "torch.Embedding", "torch.Embedding", "model.Model.add_module", "model.SpatialOutput", "torch.Sequential", "torch.Sequential", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model.ControlGroupsOutput", "observations.Feat", "observations.Feat", "observations.Feat", "torch.Embedding", "torch.Embedding", "model.SimpleInput", "model.ControlGroupsInput", "model.DiscreteOutput", "torch.Sequential", "torch.Sequential", "max", "torch.Embedding", "torch.Embedding", "model.SimpleInput", "model.ListInput", "model.debug", "model.SimpleInput", "len", "max", "max"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__", "home.repos.pwc.inspect_result.michalop_startrain.None.model.debug"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_cuda", "=", "False", "\n", "self", ".", "training", "=", "True", "\n", "self", ".", "input_columns", "=", "{", "}", "\n", "\n", "scalar_input_size", "=", "0", "\n", "\n", "# spatial input extended with previous actions", "\n", "in_type", "=", "{", "\n", "\"feature_screen\"", ":", "\n", "(", "screen_scalar", ",", "\n", "screen_categorical", "+", "[", "Feat", "(", "123", ",", "2", ")", ",", "Feat", "(", "124", ",", "2", ")", "]", ")", ",", "\n", "\"feature_minimap\"", ":", "\n", "(", "minimap_scalar", ",", "minimap_categorical", "+", "[", "Feat", "(", "125", ",", "2", ")", "]", ")", "\n", "}", "\n", "\n", "for", "name", "in", "TRACKED_FEATURES", ":", "\n", "            ", "shape", "=", "TRACKED_FEATURES", "[", "name", "]", "\n", "if", "\"screen\"", "in", "name", "or", "\"minimap\"", "in", "name", ":", "\n", "                ", "continue", "\n", "", "elif", "\"build_order\"", "in", "name", ":", "\n", "                ", "self", ".", "input_columns", "[", "name", "]", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Embedding", "(", "max", "(", "sd", ".", "UNIT_TYPES", ")", "+", "1", ",", "10", ")", ",", "\n", "SimpleInput", "(", "(", "20", ",", "10", ")", ",", "name", ")", ")", "\n", "scalar_input_size", "+=", "SIMPLE_LAYER", "\n", "", "elif", "\"control_group\"", "in", "name", ":", "\n", "                ", "self", ".", "input_columns", "[", "name", "]", "=", "ControlGroupsInput", "(", "name", ")", "\n", "scalar_input_size", "+=", "SIMPLE_LAYER", "\n", "\n", "", "elif", "\"prev_action\"", "in", "name", ":", "\n", "                ", "self", ".", "input_columns", "[", "name", "]", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Embedding", "(", "573", ",", "16", ")", ",", "SimpleInput", "(", "(", "16", ",", ")", ",", "name", ")", ")", "\n", "scalar_input_size", "+=", "SIMPLE_LAYER", "\n", "\n", "", "elif", "len", "(", "shape", ")", "==", "2", "and", "shape", "[", "-", "2", "]", "==", "0", ":", "# one type of list inputs", "\n", "\n", "                ", "if", "shape", "[", "-", "1", "]", "==", "2", ":", "# production queue", "\n", "                    ", "embedder_len", "=", "max", "(", "ac", ".", "ABILITY_IDS", ")", "+", "1", "\n", "", "else", ":", "# unit list", "\n", "                    ", "embedder_len", "=", "max", "(", "sd", ".", "UNIT_TYPES", ")", "+", "1", "\n", "\n", "", "self", ".", "input_columns", "[", "name", "]", "=", "ListInput", "(", "shape", ",", "embedder_len", ",", "name", ")", "\n", "scalar_input_size", "+=", "AGGREGATOR_LAYER", "\n", "", "else", ":", "\n", "                ", "debug", "(", "shape", ")", "\n", "self", ".", "input_columns", "[", "name", "]", "=", "SimpleInput", "(", "shape", ",", "name", ")", "\n", "scalar_input_size", "+=", "SIMPLE_LAYER", "\n", "\n", "", "self", ".", "add_module", "(", "name", "+", "\" column\"", ",", "self", ".", "input_columns", "[", "name", "]", ")", "\n", "\n", "", "sc", ",", "cat", "=", "in_type", "[", "\"feature_screen\"", "]", "\n", "self", ".", "screen_input", "=", "SpatialInput", "(", "sc", ",", "cat", ",", "\"feature_screen\"", ")", "\n", "sc", ",", "cat", "=", "in_type", "[", "\"feature_minimap\"", "]", "\n", "self", ".", "minimap_input", "=", "SpatialInput", "(", "sc", ",", "cat", ",", "\"feature_minimap\"", ")", "\n", "\n", "self", ".", "scalar_input_size", "=", "scalar_input_size", "\n", "self", ".", "scalar_reshape", "=", "nn", ".", "Linear", "(", "scalar_input_size", ",", "SCALAR_LAYER", ")", "\n", "\n", "self", ".", "core", "=", "RelationalCore", "(", ")", "\n", "self", ".", "lstm", "=", "nn", ".", "LSTM", "(", "SCALAR_LAYER", "+", "512", "+", "512", ",", "LSTM_INTERNAL", ",", "\n", "LSTM_LAYERS", ")", "\n", "after_lstm", "=", "LSTM_INTERNAL", "+", "SCALAR_LAYER", "+", "512", "+", "512", "\n", "self", ".", "lstm_reshape_gating", "=", "GLU", "(", "after_lstm", ",", "64", "*", "4", ",", "LSTM_SIZE", ")", "\n", "self", ".", "output_columns", "=", "{", "}", "\n", "self", ".", "embeddings", "=", "{", "}", "\n", "\n", "self", ".", "output_columns", "[", "\"function\"", "]", "=", "ActionOutput", "(", "after_lstm", ",", "\n", "len", "(", "ac", ".", "FUNCTIONS", ")", ",", "\n", "64", "*", "4", ")", "\n", "self", ".", "embeddings", "[", "\"function\"", "]", "=", "nn", ".", "Embedding", "(", "len", "(", "ac", ".", "FUNCTIONS", ")", ",", "\n", "LSTM_SIZE", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "embeddings", "[", "\"function\"", "]", ".", "weight", "*=", "1", "/", "LSTM_SIZE", "\n", "", "self", ".", "output_columns", "[", "\"time_skip\"", "]", "=", "DiscreteOutput", "(", "MAX_NOPS", ")", "\n", "self", ".", "embeddings", "[", "\"time_skip\"", "]", "=", "nn", ".", "Embedding", "(", "MAX_NOPS", ",", "LSTM_SIZE", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "embeddings", "[", "\"time_skip\"", "]", ".", "weight", "*=", "1", "/", "LSTM_SIZE", "\n", "\n", "", "for", "out", "in", "self", ".", "output_columns", ":", "\n", "            ", "self", ".", "add_module", "(", "out", "+", "\" column\"", ",", "self", ".", "output_columns", "[", "out", "]", ")", "\n", "self", ".", "add_module", "(", "out", "+", "\" embedding\"", ",", "self", ".", "embeddings", "[", "out", "]", ")", "\n", "\n", "", "for", "x", "in", "ac", ".", "TYPES", ":", "\n", "            ", "u", "=", "str", "(", "x", ")", "\n", "if", "u", "in", "AUTOREGRESSIVE_CHAIN", ":", "\n", "                ", "self", ".", "embeddings", "[", "u", "]", "=", "nn", ".", "Embedding", "(", "x", ".", "sizes", "[", "0", "]", ",", "LSTM_SIZE", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "self", ".", "embeddings", "[", "u", "]", ".", "weight", "*=", "1", "/", "LSTM_SIZE", "\n", "", "self", ".", "add_module", "(", "u", "+", "\" embedding\"", ",", "self", ".", "embeddings", "[", "u", "]", ")", "\n", "\n", "", "if", "\"screen\"", "in", "u", "or", "\"minimap\"", "in", "u", ":", "\n", "                ", "self", ".", "output_columns", "[", "u", "]", "=", "SpatialOutput", "(", ")", "\n", "", "elif", "\"control_group_id\"", "in", "u", ":", "\n", "                ", "self", ".", "control_group_id_name", "=", "u", "\n", "u", "=", "\"control_group\"", "\n", "self", ".", "output_columns", "[", "\"control_group\"", "]", "=", "ControlGroupsOutput", "(", ")", "\n", "", "elif", "\"control_group_act\"", "in", "u", ":", "\n", "                ", "self", ".", "control_group_act_name", "=", "u", "\n", "continue", "\n", "", "else", ":", "\n", "                ", "self", ".", "output_columns", "[", "u", "]", "=", "DiscreteOutput", "(", "x", ".", "sizes", "[", "0", "]", ")", "\n", "\n", "", "self", ".", "add_module", "(", "u", "+", "\" column\"", ",", "self", ".", "output_columns", "[", "u", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.add_value": [[633, 636], ["model.DiscreteOutput", "model.Model.add_module"], "methods", ["None"], ["", "", "def", "add_value", "(", "self", ")", ":", "\n", "        ", "self", ".", "output_columns", "[", "\"value\"", "]", "=", "DiscreteOutput", "(", "VALUE_DIM", ",", "name", "=", "\"value\"", ")", "\n", "self", ".", "add_module", "(", "\"value column\"", ",", "self", ".", "output_columns", "[", "\"value\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.get_hidden": [[637, 642], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "get_hidden", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "return", "(", "torch", ".", "zeros", "(", "1", ",", "batch_size", "*", "8", "*", "8", "*", "2", ",", "\n", "128", ")", ",", "torch", ".", "zeros", "(", "1", ",", "batch_size", "*", "8", "*", "8", "*", "2", ",", "128", ")", ",", "\n", "torch", ".", "zeros", "(", "LSTM_LAYERS", ",", "batch_size", ",", "LSTM_INTERNAL", ")", ",", "\n", "torch", ".", "zeros", "(", "LSTM_LAYERS", ",", "batch_size", ",", "LSTM_INTERNAL", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.train": [[643, 645], ["None"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "value", "=", "True", ")", ":", "\n", "        ", "self", ".", "training", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda": [[646, 649], ["super().cuda"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda"], ["", "def", "cuda", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "cuda", "(", ")", "\n", "self", ".", "_cuda", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.sample_action": [[650, 655], ["torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.distributions.Categorical().sample", "torch.distributions.Categorical().sample", "torch.distributions.Categorical().sample.unsqueeze", "torch.distributions.Categorical", "torch.distributions.Categorical", "torch.softmax.squeeze", "torch.softmax.squeeze"], "methods", ["None"], ["", "def", "sample_action", "(", "self", ",", "ps", ",", "name", ")", ":", "\n", "        ", "ps", "=", "torch", ".", "softmax", "(", "ps", ",", "dim", "=", "-", "1", ")", "\n", "indices", "=", "Categorical", "(", "ps", ".", "squeeze", "(", "0", ")", ")", ".", "sample", "(", ")", "\n", "action", "=", "indices", ".", "unsqueeze", "(", "0", ")", "\n", "return", "action", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.autoregressive_chain": [[656, 691], ["model.Model.lstm_reshape_gating", "model.Model.sample_action", "model.Model.sample_action"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.sample_action", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.sample_action"], ["", "def", "autoregressive_chain", "(", "self", ",", "lstm_output", ",", "gating", ",", "targets", "=", "None", ")", ":", "\n", "        ", "outputs", "=", "{", "}", "\n", "\n", "# processing the action first", "\n", "key", "=", "\"function\"", "\n", "result", "=", "self", ".", "output_columns", "[", "key", "]", "(", "lstm_output", ",", "gating", ")", "\n", "lstm_output", "=", "self", ".", "lstm_reshape_gating", "(", "lstm_output", ",", "gating", ")", "\n", "\n", "if", "\"value\"", "in", "self", ".", "output_columns", ":", "\n", "            ", "outputs", "[", "\"value\"", "]", "=", "self", ".", "output_columns", "[", "\"value\"", "]", "(", "lstm_output", ")", "\n", "\n", "", "if", "self", ".", "training", ":", "\n", "            ", "action", "=", "targets", "[", "key", "]", "\n", "", "else", ":", "\n", "            ", "action", "=", "self", ".", "sample_action", "(", "result", ",", "key", ")", "\n", "\n", "", "lstm_output", "=", "lstm_output", "+", "self", ".", "embeddings", "[", "key", "]", "(", "action", ")", "\n", "outputs", "[", "key", "]", "=", "result", "\n", "outputs", "[", "key", "+", "\"_sampled\"", "]", "=", "action", "\n", "# remaining outputs", "\n", "\n", "for", "key", "in", "AUTOREGRESSIVE_CHAIN", "[", "1", ":", "]", ":", "\n", "            ", "result", "=", "self", ".", "output_columns", "[", "key", "]", "(", "lstm_output", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "                ", "action", "=", "targets", "[", "key", "]", "\n", "", "else", ":", "\n", "                ", "action", "=", "self", ".", "sample_action", "(", "result", ",", "key", ")", "\n", "\n", "", "lstm_output", "=", "lstm_output", "+", "self", ".", "embeddings", "[", "key", "]", "(", "action", ")", "\n", "\n", "outputs", "[", "key", "]", "=", "result", "\n", "outputs", "[", "key", "+", "\"_sampled\"", "]", "=", "action", "\n", "\n", "", "return", "outputs", ",", "lstm_output", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.forward": [[692, 765], ["next", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "sorted", "model.Model.scalar_reshape", "model.Model.screen_input", "model.Model.minimap_input", "model.Model.core", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.Model.lstm", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.Model.autoregressive_chain", "list", "iter", "torch.cat.cuda", "torch.cat.cuda", "torch.cat.cuda", "torch.cat.cuda", "inputs[].float", "inputs[].long", "inputs[].float", "inputs[].long", "output_dict.keys", "inputs.values", "model.Model.sample_action", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.autoregressive_chain", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.sample_action"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "hidden", ",", "targets", "=", "None", ")", ":", "\n", "        ", "sample", "=", "next", "(", "iter", "(", "inputs", ".", "values", "(", ")", ")", ")", "\n", "scalar_input", "=", "torch", ".", "zeros", "(", "sample", ".", "shape", "[", ":", "2", "]", "+", "(", "0", ",", ")", ")", "\n", "gating_input", "=", "torch", ".", "zeros", "(", "sample", ".", "shape", "[", ":", "2", "]", "+", "(", "0", ",", ")", ")", "\n", "if", "self", ".", "_cuda", ":", "\n", "            ", "scalar_input", "=", "scalar_input", ".", "cuda", "(", ")", "\n", "gating_input", "=", "gating_input", ".", "cuda", "(", ")", "\n", "", "screen", "=", "None", "\n", "minimap", "=", "None", "\n", "control_groups", "=", "None", "\n", "for", "name", "in", "sorted", "(", "TRACKED_FEATURES", ")", ":", "\n", "            ", "if", "\"screen\"", "in", "name", "or", "\"minimap\"", "in", "name", ":", "\n", "                ", "continue", "\n", "", "elif", "\"control_group\"", "in", "name", ":", "\n", "                ", "x", ",", "control_groups", "=", "self", ".", "input_columns", "[", "name", "]", "(", "\n", "inputs", "[", "name", "]", ",", "inputs", "[", "name", "+", "\"_hint\"", "]", ")", "\n", "scalar_input", "=", "torch", ".", "cat", "(", "(", "scalar_input", ",", "x", ")", ",", "2", ")", "\n", "\n", "", "elif", "(", "\"available_actions\"", "in", "name", "or", "\"build_order\"", "in", "name", "\n", "or", "\"select\"", "in", "name", ")", ":", "\n", "                ", "x", "=", "self", ".", "input_columns", "[", "name", "]", "(", "inputs", "[", "name", "]", ")", "\n", "scalar_input", "=", "torch", ".", "cat", "(", "(", "scalar_input", ",", "x", ")", ",", "2", ")", "\n", "gating_input", "=", "torch", ".", "cat", "(", "(", "gating_input", ",", "x", ")", ",", "2", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "self", ".", "input_columns", "[", "name", "]", "(", "inputs", "[", "name", "]", ")", "\n", "scalar_input", "=", "torch", ".", "cat", "(", "(", "scalar_input", ",", "x", ")", ",", "2", ")", "\n", "\n", "", "", "scalar_input", "=", "self", ".", "scalar_reshape", "(", "scalar_input", ")", "\n", "\n", "screen_input", ",", "screen_bypass", "=", "self", ".", "screen_input", "(", "\n", "inputs", "[", "\"feature_screen_scalar\"", "]", ".", "float", "(", ")", ",", "\n", "inputs", "[", "\"feature_screen_categorical\"", "]", ".", "long", "(", ")", ",", "scalar_input", ")", "\n", "minimap_input", ",", "minimap_bypass", "=", "self", ".", "minimap_input", "(", "\n", "inputs", "[", "\"feature_minimap_scalar\"", "]", ".", "float", "(", ")", ",", "\n", "inputs", "[", "\"feature_minimap_categorical\"", "]", ".", "long", "(", ")", ",", "scalar_input", ")", "\n", "hidden_1", "=", "hidden", "[", ":", "2", "]", "\n", "hidden_2", "=", "hidden", "[", "2", ":", "]", "\n", "\n", "screen_output", ",", "minimap_output", ",", "lstm_input", ",", "next_hidden1", "=", "self", ".", "core", "(", "\n", "screen_input", ",", "minimap_input", ",", "hidden_1", ")", "\n", "lstm_input", "=", "torch", ".", "cat", "(", "[", "lstm_input", ",", "scalar_input", "]", ",", "dim", "=", "2", ")", "\n", "lstm_output", ",", "next_hidden2", "=", "self", ".", "lstm", "(", "lstm_input", ",", "hidden_2", ")", "\n", "lstm_output", "=", "torch", ".", "cat", "(", "[", "lstm_output", ",", "lstm_input", "]", ",", "dim", "=", "2", ")", "\n", "\n", "screen", "=", "(", "screen_output", ",", "screen_bypass", ")", "\n", "minimap", "=", "(", "minimap_output", ",", "minimap_bypass", ")", "\n", "\n", "output_dict", ",", "lstm_output", "=", "self", ".", "autoregressive_chain", "(", "lstm_output", ",", "\n", "gating_input", ",", "\n", "targets", "=", "targets", ")", "\n", "\n", "for", "x", "in", "self", ".", "output_columns", ":", "\n", "            ", "if", "x", "in", "AUTOREGRESSIVE_CHAIN", "or", "x", "==", "\"value\"", ":", "\n", "                ", "continue", "\n", "", "if", "\"screen\"", "in", "x", ":", "\n", "                ", "output_dict", "[", "x", "]", "=", "self", ".", "output_columns", "[", "x", "]", "(", "screen", ",", "lstm_output", ")", "\n", "", "elif", "\"minimap\"", "in", "x", ":", "\n", "                ", "output_dict", "[", "x", "]", "=", "self", ".", "output_columns", "[", "x", "]", "(", "minimap", ",", "lstm_output", ")", "\n", "", "elif", "\"control_group\"", "in", "x", ":", "\n", "                ", "output_dict", "[", "self", ".", "control_group_id_name", "]", ",", "output_dict", "[", "\n", "self", ".", "control_group_act_name", "]", "=", "self", ".", "output_columns", "[", "x", "]", "(", "\n", "lstm_output", ",", "control_groups", ")", "\n", "", "else", ":", "\n", "                ", "output_dict", "[", "x", "]", "=", "self", ".", "output_columns", "[", "x", "]", "(", "lstm_output", ")", "\n", "\n", "", "", "keys", "=", "list", "(", "output_dict", ".", "keys", "(", ")", ")", "\n", "if", "not", "self", ".", "training", ":", "\n", "            ", "for", "x", "in", "keys", ":", "\n", "                ", "if", "x", "in", "AUTOREGRESSIVE_CHAIN", "or", "\"_sampled\"", "in", "x", ":", "\n", "                    ", "continue", "\n", "", "output_dict", "[", "x", "+", "\"_sampled\"", "]", "=", "self", ".", "sample_action", "(", "\n", "output_dict", "[", "x", "]", ",", "x", ")", "\n", "", "", "return", "output_dict", ",", "next_hidden1", "+", "next_hidden2", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.debug": [[52, 55], ["print"], "function", ["None"], ["def", "debug", "(", "*", "x", ")", ":", "\n", "    ", "if", "DEBUG", ":", "\n", "        ", "print", "(", "*", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.compute_loss": [[767, 785], ["torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "loss_op.sum", "masks[].sum", "loss_op.sum", "loss.sum", "prediction[].view", "target[].view", "masks[].view", "str", "str"], "function", ["None"], ["", "", "def", "compute_loss", "(", "prediction", ",", "target", ",", "masks", ")", ":", "\n", "\n", "    ", "losses_dict", "=", "{", "}", "\n", "scores_dict", "=", "{", "}", "\n", "loss", "=", "0", "\n", "loss_op", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "\"none\"", ")", "\n", "for", "t", "in", "target", ":", "\n", "\n", "        ", "s1", "=", "prediction", "[", "t", "]", ".", "shape", "\n", "loss_value", "=", "loss_op", "(", "prediction", "[", "t", "]", ".", "view", "(", "(", "-", "1", ",", ")", "+", "(", "s1", "[", "-", "1", "]", ",", ")", ")", ",", "\n", "target", "[", "t", "]", ".", "view", "(", "(", "-", "1", ",", ")", ")", ")", "\n", "loss_value", "=", "masks", "[", "t", "]", ".", "view", "(", "(", "-", "1", ",", ")", ")", "*", "loss_value", "\n", "\n", "losses_dict", "[", "str", "(", "t", ")", "]", "=", "loss_value", ".", "sum", "(", ")", "\n", "scores_dict", "[", "str", "(", "t", ")", "]", "=", "masks", "[", "t", "]", ".", "sum", "(", ")", "\n", "loss", "+=", "loss_value", ".", "sum", "(", ")", "\n", "\n", "", "return", "loss", ".", "sum", "(", ")", ",", "losses_dict", ",", "scores_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.compute_action_prob": [[787, 797], ["torch.exp", "torch.exp", "torch.log_softmax", "torch.log_softmax", "torch.gather", "torch.gather", "prediction[].float", "target[].unsqueeze", "masks[].unsqueeze"], "function", ["None"], ["", "def", "compute_action_prob", "(", "prediction", ",", "target", ",", "masks", ",", "debug", "=", "False", ")", ":", "\n", "\n", "    ", "log_prob", "=", "0", "\n", "for", "t", "in", "target", ":", "\n", "        ", "log_p", "=", "torch", ".", "log_softmax", "(", "prediction", "[", "t", "]", ".", "float", "(", ")", ",", "dim", "=", "-", "1", ")", "\n", "value", "=", "torch", ".", "gather", "(", "log_p", ",", "-", "1", ",", "target", "[", "t", "]", ".", "unsqueeze", "(", "-", "1", ")", ")", "\n", "value", "=", "value", "*", "masks", "[", "t", "]", ".", "unsqueeze", "(", "-", "1", ")", "\n", "log_prob", "=", "log_prob", "+", "value", "\n", "\n", "", "return", "torch", ".", "exp", "(", "log_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.compute_kl_div": [[798, 809], ["torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.functional.kl_div", "prediction[].float", "target[].float", "masks[].unsqueeze", "nn.functional.kl_div.sum"], "function", ["None"], ["", "def", "compute_kl_div", "(", "prediction", ",", "target", ",", "masks", ",", "keys", ",", "debug", "=", "False", ")", ":", "\n", "\n", "    ", "sum", "=", "0", "\n", "for", "t", "in", "keys", ":", "\n", "        ", "log_p", "=", "torch", ".", "log_softmax", "(", "prediction", "[", "t", "]", ".", "float", "(", ")", ",", "dim", "=", "-", "1", ")", "\n", "log_p_target", "=", "torch", ".", "log_softmax", "(", "target", "[", "t", "]", ".", "float", "(", ")", ",", "dim", "=", "-", "1", ")", "\n", "value", "=", "nn", ".", "functional", ".", "kl_div", "(", "log_p", ",", "log_p_target", ",", "reduce", "=", "False", ",", "log_target", "=", "True", ")", "\n", "value", "=", "value", "*", "masks", "[", "t", "]", ".", "unsqueeze", "(", "-", "1", ")", "\n", "sum", "=", "sum", "+", "value", ".", "sum", "(", ")", "\n", "\n", "", "return", "sum", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.model.PPO_loss": [[810, 854], ["model.compute_action_prob", "torch.clamp", "torch.clamp", "actives.sum", "model.compute_kl_div", "actions.keys", "range", "range", "value.sum", "advantages.sum", "value.sum"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.compute_action_prob", "home.repos.pwc.inspect_result.michalop_startrain.None.model.compute_kl_div"], ["", "def", "PPO_loss", "(", "predictions", ",", "\n", "actions", ",", "\n", "masks", ",", "\n", "values", ",", "\n", "advantages", ",", "\n", "actives", ",", "\n", "old_probs", ",", "\n", "ref_outputs", ",", "\n", "train_policy", "=", "True", ")", ":", "\n", "\n", "    ", "probs", "=", "compute_action_prob", "(", "predictions", ",", "actions", ",", "masks", ",", "debug", "=", "True", ")", "\n", "\n", "ratios", "=", "probs", "/", "old_probs", "\n", "clipped_ratios", "=", "torch", ".", "clamp", "(", "ratios", ",", "0.9", ",", "1.1", ")", "\n", "\n", "policy", "=", "(", "(", "(", "clipped_ratios", "*", "advantages", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", ")", ")", "*", "actives", ")", ".", "sum", "(", ")", "\n", "value", "=", "(", "(", "(", "predictions", "[", "\"value\"", "]", "-", "values", ")", "**", "2", ")", "*", "actives", ")", ".", "reshape", "(", "\n", "-", "1", ",", "VALUE_DIM", ")", ".", "sum", "(", "dim", "=", "0", ")", "\n", "count", "=", "actives", ".", "sum", "(", ")", "\n", "\n", "policy_train", "=", "0", "\n", "if", "train_policy", ":", "\n", "        ", "policy_train", "=", "policy", "\n", "\n", "", "values_dict", "=", "{", "\n", "\"value_\"", "+", "value_names", "[", "i", "]", ":", "value", "[", "i", "]", "\n", "for", "i", "in", "range", "(", "VALUE_DIM", ")", "\n", "}", "\n", "values_counts", "=", "{", "\n", "\"value_\"", "+", "value_names", "[", "i", "]", ":", "count", "\n", "for", "i", "in", "range", "(", "VALUE_DIM", ")", "\n", "}", "\n", "\n", "kl_div", "=", "compute_kl_div", "(", "predictions", ",", "ref_outputs", ",", "masks", ",", "actions", ".", "keys", "(", ")", ")", "\n", "\n", "return", "-", "policy_train", "+", "value", ".", "sum", "(", ")", "*", "1.0", "+", "kl_div", "*", "0.004", ",", "{", "\n", "\"kl_div\"", ":", "kl_div", ",", "\n", "\"policy\"", ":", "policy", ",", "\n", "\"value\"", ":", "value", ".", "sum", "(", ")", "\n", "}", "|", "values_dict", ",", "{", "\n", "\"kl_div\"", ":", "count", ",", "\n", "\"policy\"", ":", "count", ",", "\n", "\"value\"", ":", "count", "\n", "}", "|", "values_counts", "\n", "", ""]], "home.repos.pwc.inspect_result.michalop_startrain.None.process_replays.process_replays": [[15, 28], ["os.path.abspath", "torch.set_num_threads", "enumerate", "print", "os.path.join", "os.path.basename", "observe_replay.get_data", "os.path.abspath", "os.path.abspath", "print", "os.path.exists", "print", "shutil.rmtree"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.join", "home.repos.pwc.inspect_result.michalop_startrain.None.observe_replay.get_data"], ["def", "process_replays", "(", "names", ",", "target_dir", ")", ":", "\n", "    ", "target_dir", "=", "os", ".", "path", ".", "abspath", "(", "target_dir", ")", "\n", "set_num_threads", "(", "1", ")", "\n", "for", "i", ",", "name", "in", "enumerate", "(", "names", ")", ":", "\n", "        ", "print", "(", "i", ",", "name", ")", "\n", "store_path", "=", "os", ".", "path", ".", "join", "(", "target_dir", ",", "os", ".", "path", ".", "basename", "(", "name", ")", ")", "\n", "try", ":", "\n", "            ", "get_data", "(", "SEQ_LENGTH", ",", "os", ".", "path", ".", "abspath", "(", "name", ")", ",", "True", ",", "os", ".", "path", ".", "abspath", "(", "target_dir", ")", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "print", "(", "store_path", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "store_path", ")", ":", "\n", "                ", "shutil", ".", "rmtree", "(", "store_path", ")", "\n", "", "print", "(", "e", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.process_replays.run": [[30, 39], ["util.get_names", "util.chunk_it", "torch.multiprocessing.Process", "torch.multiprocessing.Process.start"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.util.get_names", "home.repos.pwc.inspect_result.michalop_startrain.None.util.chunk_it"], ["", "", "", "def", "run", "(", "replay_dir", ",", "target_dir", ",", "num_workers", ")", ":", "\n", "\n", "    ", "files", "=", "get_names", "(", "replay_dir", ")", "\n", "\n", "files", "=", "chunk_it", "(", "files", ",", "num_workers", ")", "\n", "\n", "for", "group", "in", "files", ":", "\n", "        ", "worker", "=", "Process", "(", "target", "=", "process_replays", ",", "args", "=", "(", "group", ",", "target_dir", ")", ")", "\n", "worker", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.__init__": [[48, 67], ["pysc2.env.sc2_env.Bot", "pysc2.env.sc2_env.Bot", "torch.Pipe", "torch.Pipe", "torch.Pipe", "torch.Process", "torch.Process", "torch.Process", "run_game.Game.proc.start"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "games_count", ",", "\n", "request_queue", ",", "\n", "zero_hidden", ",", "\n", "id_", ",", "\n", "ref_replay_path", ",", "\n", "group_name", "=", "\"\"", ",", "\n", "bot", "=", "Bot", "(", "Race", ".", "zerg", ",", "Difficulty", ".", "easy", ")", ",", "\n", "data_collection_queue", "=", "None", ")", ":", "\n", "        ", "self", ".", "bot", "=", "bot", "\n", "self", ".", "pipe", ",", "pipe2", "=", "mp", ".", "Pipe", "(", ")", "\n", "self", ".", "proc", "=", "mp", ".", "Process", "(", "target", "=", "Game", ".", "run_games", ",", "\n", "args", "=", "(", "pipe2", ",", "request_queue", ",", "games_count", ",", "bot", ",", "\n", "id_", ",", "ref_replay_path", ")", ")", "\n", "self", ".", "proc", ".", "start", "(", ")", "\n", "self", ".", "id", "=", "id_", "\n", "self", ".", "group_name", "=", "group_name", "\n", "self", ".", "zero_hidden", "=", "zero_hidden", "\n", "self", ".", "hidden", "=", "zero_hidden", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.observe": [[68, 79], ["run_game.Game.pipe.recv", "run_game.Game.pipe.recv", "run_game.Game.pipe.recv"], "methods", ["None"], ["", "def", "observe", "(", "self", ")", ":", "\n", "        ", "reward", ",", "done", "=", "self", ".", "pipe", ".", "recv", "(", ")", "\n", "if", "done", ":", "\n", "            ", "shutdown", "=", "self", ".", "pipe", ".", "recv", "(", ")", "\n", "self", ".", "hidden", "=", "self", ".", "zero_hidden", "\n", "", "else", ":", "\n", "            ", "shutdown", "=", "False", "\n", "", "if", "shutdown", ":", "\n", "            ", "return", "None", ",", "None", ",", "reward", ",", "done", ",", "shutdown", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "pipe", ".", "recv", "(", ")", ",", "self", ".", "hidden", ",", "reward", ",", "done", ",", "shutdown", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send": [[80, 83], ["run_game.Game.pipe.send"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send"], ["", "", "def", "send", "(", "self", ",", "action", ",", "hidden", ")", ":", "\n", "        ", "self", ".", "hidden", "=", "hidden", "\n", "self", ".", "pipe", ".", "send", "(", "action", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.join": [[84, 86], ["run_game.Game.proc.join"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.join"], ["", "def", "join", "(", "self", ")", ":", "\n", "        ", "self", ".", "proc", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.run_games": [[87, 120], ["run_game.get_stats", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "pysc2.env.sc2_env.SC2Env", "pysc2.env.sc2_env.SC2Env", "game_env.SC2EnvWrapper", "pipe.send", "games_count.acquire", "print", "queue.put", "os.path.abspath", "pipe.send", "Game.run_game", "pipe.send", "queue.put", "pysc2.env.sc2_env.Agent", "pysc2.env.sc2_env.Agent"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.get_stats", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.run_game", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send"], ["", "@", "staticmethod", "\n", "def", "run_games", "(", "pipe", ",", "queue", ",", "games_count", ",", "bot_type", ",", "id_", ",", "ref_replay_path", ")", ":", "\n", "\n", "        ", "stats", "=", "get_stats", "(", "ref_replay_path", ")", "\n", "\n", "torch", ".", "set_num_threads", "(", "1", ")", "\n", "try", ":", "\n", "            ", "env", "=", "SC2Env", "(", "\n", "map_name", "=", "\"Acropolis\"", ",", "\n", "players", "=", "[", "Agent", "(", "Race", ".", "protoss", ",", "\"StarTrain\"", ")", ",", "bot_type", "]", ",", "\n", "agent_interface_format", "=", "interface_format", ",", "\n", "visualize", "=", "VISUALIZE", ",", "\n", "step_mul", "=", "1", ",", "\n", "ensure_available_actions", "=", "False", ",", "\n", "realtime", "=", "False", ",", "\n", "game_steps_per_episode", "=", "0", ",", "\n", "save_replay_episodes", "=", "1", ",", "\n", "score_index", "=", "-", "1", ",", "\n", "replay_dir", "=", "os", ".", "path", ".", "abspath", "(", "\"showcase_replays\"", ")", "\n", ")", "\n", "wrapper", "=", "SC2EnvWrapper", "(", "env", ",", "stats", ",", "60", ")", "\n", "pipe", ".", "send", "(", "(", "0", ",", "True", ")", ")", "\n", "while", "True", ":", "\n", "                ", "if", "games_count", ".", "acquire", "(", "block", "=", "False", ")", ":", "\n", "                    ", "pipe", ".", "send", "(", "False", ")", "\n", "Game", ".", "run_game", "(", "wrapper", ",", "pipe", ",", "queue", ",", "id_", ",", "game_id", "=", "id_", ")", "\n", "", "else", ":", "\n", "                    ", "pipe", ".", "send", "(", "True", ")", "\n", "queue", ".", "put", "(", "(", "Request", ".", "process", ",", "id_", ")", ")", "\n", "break", "\n", "", "", "", "except", "Exception", "as", "e", ":", "\n", "            ", "print", "(", "e", ")", "\n", "queue", ".", "put", "(", "(", "Request", ".", "exception", ",", "id_", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.run_game": [[121, 136], ["env.reset", "range", "queue.put", "pipe.send", "pipe.recv", "env.step", "pipe.send", "pipe.send"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.reset", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.step", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send"], ["", "", "@", "staticmethod", "\n", "def", "run_game", "(", "env", ",", "pipe", ",", "queue", ",", "id_", ",", "timeout", "=", "60", ",", "game_id", "=", "0", ")", ":", "\n", "        ", "obs", "=", "env", ".", "reset", "(", ")", "\n", "for", "i", "in", "range", "(", "1000000", ")", ":", "\n", "            ", "queue", ".", "put", "(", "(", "Request", ".", "process", ",", "id_", ")", ")", "\n", "pipe", ".", "send", "(", "obs", ")", "\n", "outputs", "=", "pipe", ".", "recv", "(", ")", "\n", "new_obs", ",", "reward", ",", "done", ",", "game_result", ",", "action", "=", "env", ".", "step", "(", "outputs", ")", "\n", "obs", "=", "new_obs", "\n", "\n", "if", "done", ":", "\n", "                ", "pipe", ".", "send", "(", "(", "1", "if", "game_result", ">", "0", "else", "0", ",", "True", ")", ")", "\n", "return", "\n", "\n", "", "pipe", ".", "send", "(", "(", "0", ",", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Evaluator.__init__": [[312, 317], ["torch.get_context", "torch.get_context", "torch.get_context"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "reference_replay", ",", "best_score", "=", "0", ")", ":", "\n", "        ", "self", ".", "reference_replay", "=", "reference_replay", "\n", "self", ".", "running", "=", "False", "\n", "self", ".", "ctx", "=", "mp", ".", "get_context", "(", "\"spawn\"", ")", "\n", "self", ".", "best_score", "=", "best_score", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Evaluator.start_eval": [[318, 332], ["copy.deepcopy", "copy.deepcopy.cpu", "run_game.Evaluator.ctx.Pipe", "run_game.Evaluator.ctx.Process", "run_game.Evaluator.proc.start"], "methods", ["None"], ["", "def", "start_eval", "(", "self", ",", "model", ",", "turn", ",", "test_groups", "=", "default_test_groups", ")", ":", "\n", "        ", "model", "=", "deepcopy", "(", "model", ")", "\n", "model", ".", "cpu", "(", ")", "\n", "self", ".", "stored_model", "=", "model", "\n", "self", ".", "pipe", ",", "pipe2", "=", "self", ".", "ctx", ".", "Pipe", "(", ")", "\n", "self", ".", "turn", "=", "turn", "\n", "self", ".", "proc", "=", "self", ".", "ctx", ".", "Process", "(", "target", "=", "launch_games2", ",", "\n", "args", "=", "(", "\n", "model", ",", "\n", "self", ".", "reference_replay", ",", "\n", "pipe2", ",", "\n", "test_groups", ")", ")", "\n", "self", ".", "proc", ".", "start", "(", ")", "\n", "self", ".", "running", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Evaluator.try_get_results": [[333, 351], ["run_game.Evaluator.pipe.poll", "run_game.Evaluator.pipe.recv", "run_game.Evaluator.pipe.send", "run_game.Evaluator.proc.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "run_game.Evaluator.stored_model.state_dict"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.join"], ["", "def", "try_get_results", "(", "self", ",", "block", "=", "0", ",", "save", "=", "True", ")", ":", "\n", "        ", "if", "self", ".", "running", "and", "self", ".", "pipe", ".", "poll", "(", "block", ")", ":", "\n", "            ", "self", ".", "running", "=", "False", "\n", "val", "=", "self", ".", "pipe", ".", "recv", "(", ")", "\n", "self", ".", "pipe", ".", "send", "(", "\"quit pls\"", ")", "\n", "self", ".", "proc", ".", "join", "(", ")", "\n", "\n", "score", "=", "(", "val", "[", "\"easy\"", "]", "+", "val", "[", "\"medium\"", "]", "*", "2", ")", "\n", "\n", "if", "score", ">", "self", ".", "best_score", "and", "save", ":", "\n", "                ", "self", ".", "best_score", "=", "score", "\n", "torch", ".", "save", "(", "\n", "{", "'model_state_dict'", ":", "self", ".", "stored_model", ".", "state_dict", "(", ")", "}", ",", "\n", "\"model/best.tm\"", ")", "\n", "\n", "", "return", "val", ",", "self", ".", "turn", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.model_load_from_checkpoint": [[31, 38], ["model.Model", "torch.load", "torch.load", "torch.load", "any", "model.Model.load_state_dict", "model.Model.add_value"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.add_value"], ["def", "model_load_from_checkpoint", "(", "model_path", ")", ":", "\n", "    ", "model", "=", "Model", "(", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "model_path", ")", "\n", "if", "any", "(", "[", "\"value\"", "in", "k", "for", "k", "in", "checkpoint", "[", "'model_state_dict'", "]", "]", ")", ":", "\n", "        ", "model", ".", "add_value", "(", ")", "\n", "", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model_state_dict'", "]", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.get_stats": [[40, 45], ["observations.load_global_stats"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.observations.load_global_stats"], ["", "def", "get_stats", "(", "stats_replay", ")", ":", "\n", "    ", "stats", "=", "load_global_stats", "(", "stats_replay", ")", "\n", "stats", "[", "'mmr'", "]", "=", "6000", "\n", "# stats['build'] = [0]*20", "\n", "return", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.run_game": [[138, 218], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "model.get_hidden", "tuple", "env.reset", "time.time", "range", "pysc2.FunctionCall", "str", "str", "str", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "env.step", "observations.get_observation", "observations.to_tensor", "observations.to_cuda", "model", "tuple", "outputs[].squeeze().item", "hid.cuda", "print", "env.step", "print", "observations.extend_batch", "max", "outputs[].detach().cpu", "outputs[].squeeze().item", "action_data.append", "pysc2.FunctionCall", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "print", "next_h.detach", "outputs[].squeeze", "pysc2.FunctionCall", "outputs[].squeeze().item", "x.replace", "outputs[].detach", "outputs[].squeeze", "str", "str", "outputs[].squeeze", "time.time", "str"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.get_hidden", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.reset", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.step", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.get_observation", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.step", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.extend_batch"], ["", "", "", "def", "run_game", "(", "env", ",", "model", ",", "stats", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\n", "        ", "hidden", "=", "model", ".", "get_hidden", "(", "1", ")", "\n", "hidden", "=", "tuple", "(", "[", "hid", ".", "cuda", "(", ")", "for", "hid", "in", "hidden", "]", ")", "\n", "scheduled", "=", "[", "ac", ".", "FunctionCall", "(", "0", ",", "[", "]", ")", "]", "\n", "obs", "=", "env", ".", "reset", "(", ")", "\n", "\n", "skip_target", "=", "0", "\n", "time_step", "=", "obs", "[", "0", "]", "\n", "t0", "=", "time", "(", ")", "\n", "\n", "last_action", "=", "{", "\n", "'function'", ":", "torch", ".", "tensor", "(", "[", "[", "0", "]", "]", ")", ".", "long", "(", ")", ",", "\n", "str", "(", "ac", ".", "TYPES", ".", "screen", ")", ":", "torch", ".", "tensor", "(", "[", "[", "0", "]", "]", ")", ".", "long", "(", ")", ",", "\n", "str", "(", "ac", ".", "TYPES", ".", "screen2", ")", ":", "torch", ".", "tensor", "(", "[", "[", "0", "]", "]", ")", ".", "long", "(", ")", ",", "\n", "str", "(", "ac", ".", "TYPES", ".", "minimap", ")", ":", "torch", ".", "tensor", "(", "[", "[", "0", "]", "]", ")", ".", "long", "(", ")", "\n", "}", "\n", "\n", "for", "i", "in", "range", "(", "1000000", ")", ":", "\n", "            ", "if", "i", "%", "(", "22", "*", "60", ")", "==", "0", ":", "\n", "                ", "print", "(", "\"minute \"", ",", "i", "//", "22", "//", "60", ",", "\n", "f\"x{i /(time()-t0)/ 22.4} realtime\"", ")", "\n", "\n", "", "if", "skip_target", ">", "time_step", ".", "observation", "[", "\"game_loop\"", "]", "[", "0", "]", ":", "\n", "                ", "obs", "=", "env", ".", "step", "(", "[", "ac", ".", "FunctionCall", "(", "0", ",", "[", "]", ")", "]", ")", "\n", "\n", "time_step", "=", "obs", "[", "0", "]", "\n", "\n", "if", "time_step", ".", "step_type", "==", "StepType", ".", "LAST", ":", "\n", "                    ", "print", "(", "\"GAME END\"", ",", "time_step", ".", "reward", ")", "\n", "if", "time_step", ".", "reward", ">", "0", ":", "\n", "                        ", "return", "1", "\n", "", "break", "\n", "\n", "", "continue", "\n", "\n", "", "obs", "=", "env", ".", "step", "(", "scheduled", ")", "\n", "\n", "time_step", "=", "obs", "[", "0", "]", "\n", "\n", "if", "time_step", ".", "step_type", "==", "StepType", ".", "LAST", ":", "\n", "                ", "print", "(", "\"GAME END\"", ",", "time_step", ".", "reward", ")", "\n", "if", "time_step", ".", "reward", ">", "0", ":", "\n", "                    ", "return", "1", "\n", "", "break", "\n", "\n", "", "inputs", "=", "get_observation", "(", "time_step", ".", "observation", ")", "\n", "inputs", "=", "to_tensor", "(", "inputs", ")", "\n", "\n", "inputs", "=", "extend_batch", "(", "(", "inputs", ",", ")", ",", "stats", ",", "1", ",", "last_action", ",", "True", ")", "[", "0", "]", "\n", "inputs", "=", "to_cuda", "(", "inputs", ")", "\n", "outputs", ",", "next_hidden", "=", "model", "(", "inputs", ",", "hidden", ")", "\n", "\n", "hidden", "=", "tuple", "(", "[", "next_h", ".", "detach", "(", ")", "for", "next_h", "in", "next_hidden", "]", ")", "\n", "\n", "action", "=", "outputs", "[", "\"function_sampled\"", "]", ".", "squeeze", "(", ")", ".", "item", "(", ")", "\n", "skip_target", "=", "max", "(", "\n", "outputs", "[", "\"time_skip_sampled\"", "]", ".", "squeeze", "(", ")", ".", "item", "(", ")", "-", "1", ",", "\n", "0", ")", "+", "time_step", ".", "observation", "[", "\"game_loop\"", "]", "[", "0", "]", "\n", "\n", "func", "=", "ac", ".", "FUNCTIONS", "[", "action", "]", "\n", "action_data", "=", "[", "]", "\n", "last_action", "=", "{", "}", "\n", "for", "x", "in", "outputs", ":", "\n", "                ", "last_action", "[", "x", ".", "replace", "(", "\"_sampled\"", ",", "\n", "\"\"", ")", "]", "=", "outputs", "[", "x", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "", "for", "x", "in", "ac", ".", "FUNCTION_TYPES", "[", "func", ".", "function_type", "]", ":", "\n", "                ", "sub_action", "=", "outputs", "[", "str", "(", "x", ")", "+", "\"_sampled\"", "]", ".", "squeeze", "(", ")", ".", "item", "(", ")", "\n", "\n", "if", "\"screen\"", "in", "str", "(", "x", ")", "or", "\"minimap\"", "in", "str", "(", "x", ")", ":", "\n", "                    ", "sub_action", "=", "(", "sub_action", "//", "64", ",", "sub_action", "%", "64", ")", "\n", "", "else", ":", "\n", "                    ", "sub_action", "=", "(", "sub_action", ",", ")", "\n", "", "action_data", ".", "append", "(", "sub_action", ")", "\n", "\n", "", "scheduled", "=", "[", "ac", ".", "FunctionCall", "(", "action", ",", "action_data", ")", "]", "\n", "\n", "", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.launch_games2": [[225, 309], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "model.cuda", "model.eval", "model.get_hidden", "tuple", "torch.Queue", "print", "envs_dict.keys", "torch.Semaphore", "sems.append", "range", "observations.concat_along_axis_tensor", "observations.concat_lstm_hidden", "len", "enumerate", "response_pipe.send", "print", "envs_dict[].join", "hid.cuda", "run_game.Game", "len", "min", "mp.Queue.get", "g.observe", "torch.cuda.amp.autocast", "model", "tuple", "env.send", "response_pipe.recv", "print", "envs.append", "states.append", "observations.append", "[].cpu", "observations.to_cuda"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.get_hidden", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_lstm_hidden", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.join", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.get", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.observe", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.send", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.to_cuda"], ["def", "launch_games2", "(", "model", ",", "\n", "ref_replay_path", ",", "\n", "response_pipe", "=", "None", ",", "\n", "test_groups", "=", "default_test_groups", ",", "\n", "max_batch", "=", "8", ",", "\n", "data_queue", "=", "None", ",", "\n", ")", ":", "\n", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", ".", "cuda", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "zero_hidden", "=", "model", ".", "get_hidden", "(", "1", ")", "\n", "zero_hidden", "=", "tuple", "(", "[", "hid", ".", "cuda", "(", ")", "for", "hid", "in", "zero_hidden", "]", ")", "\n", "\n", "envs_dict", "=", "{", "}", "\n", "worker_id", "=", "0", "\n", "rewards", "=", "{", "}", "\n", "sems", "=", "[", "]", "\n", "request_queue", "=", "mp", ".", "Queue", "(", ")", "\n", "\n", "for", "games", ",", "workers", ",", "opponent", ",", "group_name", "in", "test_groups", ":", "\n", "            ", "rewards", "[", "group_name", "]", "=", "0", "\n", "games_counter", "=", "mp", ".", "Semaphore", "(", "games", ")", "\n", "sems", ".", "append", "(", "games_counter", ")", "\n", "for", "i", "in", "range", "(", "workers", ")", ":", "\n", "                ", "envs_dict", "[", "worker_id", "]", "=", "Game", "(", "games_counter", ",", "request_queue", ",", "\n", "zero_hidden", ",", "worker_id", ",", "\n", "ref_replay_path", ",", "\n", "group_name", ",", "opponent", ")", "\n", "worker_id", "+=", "1", "\n", "\n", "", "", "envs_left", "=", "worker_id", "\n", "while", "True", ":", "\n", "\n", "            ", "envs", "=", "[", "]", "\n", "observations", "=", "[", "]", "\n", "states", "=", "[", "]", "\n", "\n", "while", "len", "(", "envs", ")", "<", "min", "(", "max_batch", ",", "envs_left", ")", ":", "\n", "                ", "req", "=", "request_queue", ".", "get", "(", ")", "\n", "if", "req", "[", "0", "]", "==", "Request", ".", "exception", ":", "\n", "                    ", "envs_left", "-=", "1", "\n", "continue", "\n", "", "g", "=", "envs_dict", "[", "req", "[", "1", "]", "]", "\n", "obs", ",", "s", ",", "reward", ",", "reset", ",", "stop", "=", "g", ".", "observe", "(", ")", "\n", "rewards", "[", "g", ".", "group_name", "]", "+=", "reward", "\n", "if", "reward", ">", "0", ":", "\n", "                    ", "print", "(", "rewards", ")", "\n", "", "if", "not", "stop", ":", "\n", "                    ", "envs", ".", "append", "(", "g", ")", "\n", "states", ".", "append", "(", "s", ")", "\n", "observations", ".", "append", "(", "to_cuda", "(", "obs", ")", ")", "\n", "", "else", ":", "\n", "                    ", "envs_left", "-=", "1", "\n", "\n", "", "", "if", "envs_left", "==", "0", ":", "\n", "                ", "break", "\n", "\n", "", "inputs", "=", "concat_along_axis_tensor", "(", "observations", ",", "1", ")", "\n", "hiddens", "=", "concat_lstm_hidden", "(", "states", ")", "\n", "with", "autocast", "(", ")", ":", "\n", "                ", "output", ",", "next_state", "=", "model", "(", "inputs", ",", "hiddens", ")", "\n", "\n", "", "states", "=", "[", "]", "\n", "length", "=", "len", "(", "envs", ")", "\n", "for", "i", ",", "env", "in", "enumerate", "(", "envs", ")", ":", "\n", "                ", "new_hidden", "=", "tuple", "(", ")", "\n", "for", "val", "in", "next_state", ":", "\n", "                    ", "size", "=", "val", ".", "shape", "[", "1", "]", "//", "length", "\n", "new_hidden", "+=", "(", "val", "[", ":", ",", "i", "*", "size", ":", "i", "*", "size", "+", "size", ",", ":", "]", ",", ")", "\n", "", "to_send", "=", "{", "}", "\n", "for", "key", "in", "output", ":", "\n", "                    ", "to_send", "[", "key", "]", "=", "output", "[", "key", "]", "[", ":", ",", "i", ":", "i", "+", "1", "]", ".", "cpu", "(", ")", "\n", "\n", "", "env", ".", "send", "(", "to_send", ",", "new_hidden", ")", "\n", "\n", "", "", "print", "(", "\"okay\"", ")", "\n", "if", "response_pipe", "is", "not", "None", ":", "\n", "            ", "response_pipe", ".", "send", "(", "rewards", ")", "\n", "print", "(", "response_pipe", ".", "recv", "(", ")", ")", "\n", "\n", "", "for", "id_", "in", "envs_dict", ".", "keys", "(", ")", ":", "\n", "            ", "envs_dict", "[", "id_", "]", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.run_lan_game": [[353, 375], ["run_game.get_stats", "torch.set_num_threads", "torch.set_num_threads", "torch.set_num_threads", "run_game.model_load_from_checkpoint", "model_load_from_checkpoint.cuda", "model_load_from_checkpoint.eval", "pysc2.env.lan_sc2_env.LanSC2Env", "run_game.run_game", "print", "int", "os.path.abspath"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.get_stats", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.model_load_from_checkpoint", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.run_game"], ["", "", "", "def", "run_lan_game", "(", "model_path", ",", "reference_replay", ",", "host", ",", "config_port", ")", ":", "\n", "    ", "stats", "=", "get_stats", "(", "reference_replay", ")", "\n", "torch", ".", "set_num_threads", "(", "1", ")", "\n", "model", "=", "model_load_from_checkpoint", "(", "model_path", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "env", "=", "LanSC2Env", "(", "\n", "host", "=", "host", ",", "\n", "config_port", "=", "int", "(", "config_port", ")", ",", "\n", "race", "=", "Race", ".", "protoss", ",", "\n", "name", "=", "\"StarTrain\"", ",", "\n", "agent_interface_format", "=", "interface_format", ",", "\n", "visualize", "=", "False", ",", "\n", "step_mul", "=", "1", ",", "\n", "realtime", "=", "True", ",", "\n", "replay_dir", "=", "os", ".", "path", ".", "abspath", "(", "\"showcase_replays\"", ")", ")", "\n", "\n", "wins", "=", "0", "\n", "\n", "while", "True", ":", "\n", "        ", "wins", "+=", "run_game", "(", "env", ",", "model", ",", "stats", ")", "\n", "print", "(", "\"wins:\"", ",", "wins", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.evaluate": [[378, 388], ["run_game.model_load_from_checkpoint", "torch.set_start_method", "run_game.Evaluator", "run_game.Evaluator.start_eval", "print", "run_game.Evaluator.try_get_results", "pysc2.env.sc2_env.Bot", "pysc2.env.sc2_env.Bot", "pysc2.env.sc2_env.Bot", "pysc2.env.sc2_env.Bot"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.model_load_from_checkpoint", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Evaluator.start_eval", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Evaluator.try_get_results"], ["", "", "def", "evaluate", "(", "model_path", ",", "reference_replay", ",", "race", ")", ":", "\n", "    ", "model", "=", "model_load_from_checkpoint", "(", "model_path", ")", "\n", "mp", ".", "set_start_method", "(", "\"spawn\"", ")", "\n", "test_groups", "=", "[", "[", "100", ",", "8", ",", "Bot", "(", "race", ",", "Difficulty", ".", "very_easy", ")", ",", "\"very_easy\"", "]", ",", "\n", "[", "100", ",", "8", ",", "Bot", "(", "race", ",", "Difficulty", ".", "easy", ")", ",", "\"easy\"", "]", ",", "\n", "[", "100", ",", "8", ",", "Bot", "(", "race", ",", "Difficulty", ".", "medium", ")", ",", "\"medium\"", "]", ",", "\n", "[", "100", ",", "8", ",", "Bot", "(", "race", ",", "Difficulty", ".", "hard", ")", ",", "\"hard\"", "]", "]", "\n", "ev", "=", "Evaluator", "(", "reference_replay", ")", "\n", "ev", ".", "start_eval", "(", "model", ",", "0", ",", "test_groups", ")", "\n", "print", "(", "ev", ".", "try_get_results", "(", "block", "=", "None", ",", "save", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_training.selective_load": [[30, 40], ["target.load_state_dict"], "function", ["None"], ["def", "selective_load", "(", "source_dict", ",", "target", ")", ":", "\n", "    ", "'''\n    load_dict = {}\n    target_dict = target.state_dict()\n    for x in target_dict:\n        print(x)\n        if x in source_dict and source_dict[x].shape == target_dict[x].shape:\n            load_dict[x] = source_dict[x]\n    '''", "\n", "target", ".", "load_state_dict", "(", "source_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.run_training.run_training": [[42, 188], ["torch.manual_seed", "random.seed", "util.get_names", "list", "run_game.Evaluator", "model.Model", "torch.optim.Adam", "loader.BatchSeqLoader", "torch.optim.Adam.zero_grad", "torch.cuda.amp.GradScaler", "range", "sorted", "model.Model.parameters", "torch.load", "run_training.selective_load", "run_training.selective_load", "torch.optim.Adam.state.values", "clearml.Task.init", "Task.init.get_logger", "model.Model.cuda", "range", "model.Model.parameters", "task.get_logger.report_scalar", "print", "task.get_logger.report_scalar", "run_game.Evaluator.try_get_results", "print", "torch.save", "print", "state.items", "loader.BatchSeqLoader.get_batch", "torch.cuda.amp.GradScaler.scale().backward", "loss.item", "loader.BatchSeqLoader.put_back", "task.get_logger.report_scalar", "isinstance", "torch.cuda.amp.autocast", "model.Model.", "model.compute_loss", "len", "print", "torch.cuda.amp.GradScaler.step", "torch.cuda.amp.GradScaler.update", "torch.optim.Adam.zero_grad", "task.get_logger.report_scalar", "print", "run_game.Evaluator.start_eval", "model.Model.state_dict", "torch.optim.Adam.state_dict", "v.cuda", "torch.cuda.amp.GradScaler.scale", "losses_dict[].item", "scores_dict[].item", "losses_dict[].item", "scores_dict[].item"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.util.get_names", "home.repos.pwc.inspect_result.michalop_startrain.None.run_training.selective_load", "home.repos.pwc.inspect_result.michalop_startrain.None.run_training.selective_load", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Evaluator.try_get_results", "home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.get_batch", "home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.put_back", "home.repos.pwc.inspect_result.michalop_startrain.None.model.compute_loss", "home.repos.pwc.inspect_result.michalop_startrain.None.game_env.SC2EnvWrapper.step", "home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Evaluator.start_eval", "home.repos.pwc.inspect_result.michalop_startrain.None.model.Model.cuda"], ["", "def", "run_training", "(", "data_dir", ",", "reference_replay", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "2138", ")", "\n", "seed", "(", "2137", ")", "\n", "\n", "names", "=", "get_names", "(", "data_dir", ")", "\n", "names", "=", "list", "(", "sorted", "(", "names", ")", ")", "\n", "evaluator", "=", "Evaluator", "(", "reference_replay", "=", "reference_replay", ")", "\n", "\n", "model", "=", "Model", "(", ")", "\n", "optimizer", "=", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "LEARNING_RATE", ",", "weight_decay", "=", "1e-5", ")", "\n", "start_epoch", "=", "0", "\n", "if", "LOAD", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "LOAD_PATH", ")", "\n", "selective_load", "(", "checkpoint", "[", "'model_state_dict'", "]", ",", "model", ")", "\n", "selective_load", "(", "checkpoint", "[", "'optimizer_state_dict'", "]", ",", "optimizer", ")", "\n", "\n", "for", "state", "in", "optimizer", ".", "state", ".", "values", "(", ")", ":", "\n", "            ", "for", "k", ",", "v", "in", "state", ".", "items", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "v", ",", "torch", ".", "Tensor", ")", ":", "\n", "                    ", "state", "[", "k", "]", "=", "v", ".", "cuda", "(", ")", "\n", "", "", "", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "\n", "", "loader", "=", "BatchSeqLoader", "(", "ENVS", ",", "names", ",", "STEPS", ",", "BATCH", ",", "model", ")", "\n", "\n", "if", "WRITE", ":", "\n", "        ", "task", "=", "Task", ".", "init", "(", "project_name", "=", "'StarTrain'", ",", "\n", "task_name", "=", "'train supervised'", ")", "\n", "logger", "=", "task", ".", "get_logger", "(", ")", "\n", "# 32 - 1.46 in 100 epochs", "\n", "", "CUDA", "=", "True", "\n", "\n", "if", "CUDA", ":", "\n", "        ", "model", ".", "cuda", "(", ")", "\n", "\n", "# print(list(model.parameters()))", "\n", "\n", "", "total_epoch_loss", "=", "0", "\n", "total_losses_dict", "=", "{", "}", "\n", "total_scores_dict", "=", "{", "}", "\n", "steps", "=", "0", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "scaler", "=", "GradScaler", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "1000000", ",", "1", ")", ":", "\n", "        ", "running_loss", "=", "0", "\n", "# grad_magnitudes = 0", "\n", "# needs to be divisble by 4 - shouldn't change much, but might improve", "\n", "# optimizer performance", "\n", "for", "i", "in", "range", "(", "STEPS_PER_EPOCH", ")", ":", "\n", "            ", "inputs", ",", "targets", ",", "masks", ",", "hiddens", "=", "loader", ".", "get_batch", "(", ")", "\n", "steps", "+=", "STEPS", "*", "BATCH", "\n", "\n", "with", "autocast", "(", ")", ":", "\n", "                ", "output", ",", "new_hiddens", "=", "model", "(", "inputs", ",", "hiddens", ",", "targets", ")", "\n", "loss", ",", "losses_dict", ",", "scores_dict", "=", "compute_loss", "(", "\n", "output", ",", "targets", ",", "masks", ")", "\n", "\n", "", "reduced_loss", "=", "loss", "/", "OPT_STEPS", "/", "BATCH", "\n", "scaler", ".", "scale", "(", "reduced_loss", ")", ".", "backward", "(", ")", "\n", "\n", "loss_val", "=", "loss", ".", "item", "(", ")", "\n", "running_loss", "+=", "loss_val", "\n", "total_epoch_loss", "+=", "loss_val", "\n", "\n", "del", "inputs", "\n", "del", "targets", "\n", "del", "masks", "\n", "\n", "if", "len", "(", "total_losses_dict", ")", ">", "0", ":", "\n", "                ", "for", "x", "in", "total_losses_dict", ":", "\n", "                    ", "total_losses_dict", "[", "x", "]", "+=", "losses_dict", "[", "x", "]", ".", "item", "(", ")", "\n", "total_scores_dict", "[", "x", "]", "+=", "scores_dict", "[", "x", "]", ".", "item", "(", ")", "\n", "", "", "else", ":", "\n", "                ", "total_losses_dict", "=", "{", "\n", "x", ":", "losses_dict", "[", "x", "]", ".", "item", "(", ")", "\n", "for", "x", "in", "losses_dict", "\n", "}", "\n", "total_scores_dict", "=", "{", "\n", "x", ":", "scores_dict", "[", "x", "]", ".", "item", "(", ")", "\n", "for", "x", "in", "scores_dict", "\n", "}", "\n", "# print(loss.item())", "\n", "", "if", "i", "%", "OPT_STEPS", "==", "OPT_STEPS", "-", "1", ":", "# print every 4 mini-batches", "\n", "                ", "print", "(", "'[%d, %5d] loss: %.3f'", "%", "\n", "(", "epoch", ",", "i", ",", "running_loss", "/", "OPT_STEPS", "/", "BATCH", ")", ")", "\n", "\n", "scaler", ".", "step", "(", "optimizer", ")", "\n", "scaler", ".", "update", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "running_loss", "=", "0.0", "\n", "\n", "", "loader", ".", "put_back", "(", "new_hiddens", ")", "\n", "\n", "", "weights", "=", "0", "\n", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "            ", "weights", "+=", "(", "param", "*", "param", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "logger", ".", "report_scalar", "(", "title", "=", "\"Stats\"", ",", "\n", "series", "=", "\"Weight Magnitude\"", ",", "\n", "value", "=", "weights", ",", "\n", "iteration", "=", "epoch", ")", "\n", "# writer.add_scalar(\"Stats/Gradient Magnitude\",", "\n", "#                   grad_magnitudes/steps,epoch)", "\n", "print", "(", "f\"avg loss in epoch {total_epoch_loss/steps}\"", ")", "\n", "logger", ".", "report_scalar", "(", "title", "=", "\"Losses\"", ",", "\n", "series", "=", "\"Total\"", ",", "\n", "value", "=", "total_epoch_loss", "/", "steps", ",", "\n", "iteration", "=", "epoch", ")", "\n", "for", "x", "in", "total_losses_dict", ":", "\n", "            ", "logger", ".", "report_scalar", "(", "title", "=", "\"Losses\"", ",", "\n", "series", "=", "x", ",", "\n", "value", "=", "total_losses_dict", "[", "x", "]", "/", "\n", "(", "total_scores_dict", "[", "x", "]", "+", "0.001", ")", ",", "\n", "iteration", "=", "epoch", ")", "\n", "\n", "", "eval_res", "=", "evaluator", ".", "try_get_results", "(", ")", "\n", "if", "eval_res", "is", "not", "None", ":", "\n", "            ", "d", ",", "ep", "=", "eval_res", "\n", "for", "key", "in", "d", ":", "\n", "                ", "logger", ".", "report_scalar", "(", "title", "=", "\"Wins\"", ",", "\n", "series", "=", "key", ",", "\n", "value", "=", "d", "[", "key", "]", ",", "\n", "iteration", "=", "ep", ")", "\n", "\n", "", "", "if", "evaluator", ".", "best_score", ">", "0", "or", "epoch", "%", "120", "==", "0", ":", "\n", "            ", "if", "not", "evaluator", ".", "running", ":", "\n", "                ", "print", "(", "\"STARTING EVALUATOR\"", ")", "\n", "evaluator", ".", "start_eval", "(", "model", ",", "epoch", ")", "\n", "\n", "", "", "steps", "=", "0", "\n", "\n", "total_losses_dict", "=", "{", "}", "\n", "total_scores_dict", "=", "{", "}", "\n", "total_epoch_loss", "=", "0", "\n", "\n", "print", "(", "\"SAVING\"", ")", "\n", "\n", "torch", ".", "save", "(", "\n", "{", "\n", "'epoch'", ":", "epoch", ",", "\n", "'model_state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state_dict'", ":", "optimizer", ".", "state_dict", "(", ")", "\n", "}", ",", "PATH", ")", "\n", "\n", "print", "(", "\"SAVED\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.util.chunk_it": [[5, 15], ["len", "float", "len", "out.append", "int", "int"], "function", ["None"], ["def", "chunk_it", "(", "seq", ",", "num", ")", ":", "\n", "    ", "avg", "=", "len", "(", "seq", ")", "/", "float", "(", "num", ")", "\n", "out", "=", "[", "]", "\n", "last", "=", "0.0", "\n", "\n", "while", "last", "<", "len", "(", "seq", ")", ":", "\n", "        ", "out", ".", "append", "(", "seq", "[", "int", "(", "last", ")", ":", "int", "(", "last", "+", "avg", ")", "]", ")", "\n", "last", "+=", "avg", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.util.mul_all": [[17, 22], ["None"], "function", ["None"], ["", "def", "mul_all", "(", "x", ")", ":", "\n", "    ", "out", "=", "1", "\n", "for", "v", "in", "x", ":", "\n", "        ", "out", "*=", "v", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.util.get_names": [[24, 30], ["os.listdir", "names.append", "os.path.join"], "function", ["home.repos.pwc.inspect_result.michalop_startrain.None.run_game.Game.join"], ["", "def", "get_names", "(", "directory", ")", ":", "\n", "    ", "names", "=", "[", "]", "\n", "for", "path", "in", "os", ".", "listdir", "(", "directory", ")", ":", "\n", "        ", "names", ".", "append", "(", "os", ".", "path", ".", "join", "(", "directory", ",", "path", ")", ")", "\n", "\n", "", "return", "names", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.__init__": [[15, 26], ["torch.Semaphore", "torch.Semaphore", "util.chunk_it", "range", "loader.BatchSeqLoader.rollers.append", "replay_roller.ReplayRoller"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.util.chunk_it"], ["def", "__init__", "(", "self", ",", "envs", ",", "names", ",", "steps", ",", "batch", ",", "model", ")", ":", "\n", "\n", "        ", "self", ".", "main_sem", "=", "mp", ".", "Semaphore", "(", "0", ")", "\n", "self", ".", "rollers", "=", "[", "]", "\n", "self", ".", "batch_size", "=", "batch", "\n", "\n", "names", "=", "chunk_it", "(", "names", ",", "envs", ")", "\n", "\n", "for", "i", "in", "range", "(", "envs", ")", ":", "\n", "            ", "self", ".", "rollers", ".", "append", "(", "\n", "ReplayRoller", "(", "names", "[", "i", "]", ",", "model", ",", "self", ".", "main_sem", ",", "steps", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.batch_lstm": [[27, 30], ["zip", "tuple", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "", "def", "batch_lstm", "(", "self", ",", "states", ")", ":", "\n", "        ", "states", "=", "zip", "(", "*", "states", ")", "\n", "return", "tuple", "(", "[", "torch", ".", "cat", "(", "s", ",", "1", ")", "for", "s", "in", "states", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.unbatch_lstm": [[31, 41], ["enumerate", "tuple", "states.append", "val[].detach"], "methods", ["None"], ["", "def", "unbatch_lstm", "(", "self", ",", "state", ")", ":", "\n", "        ", "states", "=", "[", "]", "\n", "for", "i", ",", "roller", "in", "enumerate", "(", "self", ".", "current_rollers", ")", ":", "\n", "            ", "extracted", "=", "tuple", "(", ")", "\n", "for", "val", "in", "state", ":", "\n", "                ", "size", "=", "val", ".", "shape", "[", "1", "]", "//", "self", ".", "batch_size", "\n", "extracted", "+=", "(", "val", "[", ":", ",", "i", "*", "size", ":", "(", "i", "+", "1", ")", "*", "size", ",", ":", "]", ".", "detach", "(", ")", ",", ")", "\n", "\n", "", "states", ".", "append", "(", "extracted", ")", "\n", "", "return", "states", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.get_batch": [[42, 69], ["random.shuffle", "observations.concat_along_axis_tensor", "observations.concat_along_axis_tensor", "observations.concat_along_axis_tensor", "observations.concat_lstm_hidden", "len", "loader.BatchSeqLoader.main_sem.acquire", "roller.get", "len", "observations.concat_along_axis_tensor.append", "observations.concat_along_axis_tensor.append", "observations.concat_along_axis_tensor.append", "observations.concat_lstm_hidden.append", "current_rollers.append", "len"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_along_axis_tensor", "home.repos.pwc.inspect_result.michalop_startrain.None.observations.concat_lstm_hidden", "home.repos.pwc.inspect_result.michalop_startrain.None.looptime.get"], ["", "def", "get_batch", "(", "self", ")", ":", "\n", "\n", "        ", "shuffle", "(", "self", ".", "rollers", ")", "\n", "inputs", ",", "targets", ",", "masks", ",", "hiddens", ",", "current_rollers", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "while", "len", "(", "inputs", ")", "<", "self", ".", "batch_size", ":", "\n", "            ", "self", ".", "main_sem", ".", "acquire", "(", ")", "\n", "for", "roller", "in", "self", ".", "rollers", ":", "\n", "                ", "maybe_data", "=", "roller", ".", "get", "(", ")", "\n", "if", "len", "(", "maybe_data", ")", ">", "0", ":", "\n", "                    ", "input", ",", "target", ",", "mask", ",", "hidden", ",", "_", "=", "maybe_data", "\n", "inputs", ".", "append", "(", "input", ")", "\n", "targets", ".", "append", "(", "target", ")", "\n", "masks", ".", "append", "(", "mask", ")", "\n", "hiddens", ".", "append", "(", "hidden", ")", "\n", "current_rollers", ".", "append", "(", "roller", ")", "\n", "if", "len", "(", "inputs", ")", "==", "self", ".", "batch_size", ":", "\n", "                        ", "break", "\n", "\n", "", "", "", "", "inputs", "=", "concat_along_axis_tensor", "(", "inputs", ",", "1", ")", "\n", "targets", "=", "concat_along_axis_tensor", "(", "targets", ",", "1", ")", "\n", "\n", "masks", "=", "concat_along_axis_tensor", "(", "masks", ",", "1", ")", "\n", "hiddens", "=", "concat_lstm_hidden", "(", "hiddens", ")", "\n", "\n", "self", ".", "current_rollers", "=", "current_rollers", "\n", "return", "inputs", ",", "targets", ",", "masks", ",", "hiddens", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.put_back": [[70, 74], ["loader.BatchSeqLoader.unbatch_lstm", "enumerate", "roller.set_hidden"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.unbatch_lstm", "home.repos.pwc.inspect_result.michalop_startrain.None.replay_roller.ReplayRoller.set_hidden"], ["", "def", "put_back", "(", "self", ",", "lstm_state", ")", ":", "\n", "        ", "lstm_state", "=", "self", ".", "unbatch_lstm", "(", "lstm_state", ")", "\n", "for", "i", ",", "roller", "in", "enumerate", "(", "self", ".", "current_rollers", ")", ":", "\n", "            ", "roller", ".", "set_hidden", "(", "lstm_state", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.kill": [[75, 78], ["roller.kill"], "methods", ["home.repos.pwc.inspect_result.michalop_startrain.None.loader.BatchSeqLoader.kill"], ["", "", "def", "kill", "(", "self", ")", ":", "\n", "        ", "for", "roller", "in", "self", ".", "rollers", ":", "\n", "            ", "roller", ".", "kill", "(", ")", "\n", "", "", "", ""]]}