{"home.repos.pwc.inspect_result.visinf_self-mono-sf.None.main.main": [[9, 88], ["os.chdir", "core.commandline.setup_logging_and_parse_arguments", "core.configuration.configure_random_seed", "core.configuration.configure_data_loaders", "any", "core.configuration.configure_runtime_augmentations", "core.configuration.configure_model_and_loss", "core.configuration.configure_checkpoint_saver", "core.configuration.configure_optimizer", "core.configuration.configure_lr_scheduler", "core.runtime.exec_runtime", "os.path.dirname", "logging.info", "quit", "core.logger.LoggingBlock", "logging.info", "os.path.realpath", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline.setup_logging_and_parse_arguments", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.configure_random_seed", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.configure_data_loaders", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.configure_runtime_augmentations", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.configure_model_and_loss", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.configure_checkpoint_saver", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.configure_optimizer", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.configure_lr_scheduler", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.exec_runtime"], ["def", "main", "(", ")", ":", "\n", "\n", "# Change working directory", "\n", "    ", "os", ".", "chdir", "(", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", ")", "\n", "\n", "# Parse commandline arguments", "\n", "args", "=", "commandline", ".", "setup_logging_and_parse_arguments", "(", "blocktitle", "=", "\"Commandline Arguments\"", ")", "\n", "\n", "# Set random seed, possibly on Cuda", "\n", "config", ".", "configure_random_seed", "(", "args", ")", "\n", "\n", "# DataLoader", "\n", "train_loader", ",", "validation_loader", ",", "inference_loader", "=", "config", ".", "configure_data_loaders", "(", "args", ")", "\n", "success", "=", "any", "(", "loader", "is", "not", "None", "for", "loader", "in", "[", "train_loader", ",", "validation_loader", ",", "inference_loader", "]", ")", "\n", "if", "not", "success", ":", "\n", "        ", "logging", ".", "info", "(", "\"No dataset could be loaded successfully. Please check dataset paths!\"", ")", "\n", "quit", "(", ")", "\n", "\n", "# Configure data augmentation", "\n", "", "training_augmentation", ",", "validation_augmentation", "=", "config", ".", "configure_runtime_augmentations", "(", "args", ")", "\n", "\n", "# Configure model and loss", "\n", "model_and_loss", "=", "config", ".", "configure_model_and_loss", "(", "args", ")", "\n", "\n", "# Resume from checkpoint if available ", "\n", "checkpoint_saver", ",", "checkpoint_stats", "=", "config", ".", "configure_checkpoint_saver", "(", "args", ",", "model_and_loss", ")", "\n", "\n", "if", "checkpoint_stats", "is", "not", "None", ":", "\n", "# Set checkpoint stats", "\n", "        ", "if", "args", ".", "checkpoint_mode", "in", "[", "\"resume_from_best\"", ",", "\"resume_from_latest\"", "]", ":", "\n", "            ", "args", ".", "start_epoch", "=", "checkpoint_stats", "[", "\"epoch\"", "]", "+", "1", "\n", "\n", "# # Multi-GPU automation", "\n", "# with logger.LoggingBlock(\"Multi GPU\", emph=True):", "\n", "#     if torch.cuda.device_count() > 1:", "\n", "#         logging.info(\"Let's use %d GPUs!\" % torch.cuda.device_count())", "\n", "#         model_and_loss._model = torch.nn.DataParallel(model_and_loss._model)", "\n", "#     else:", "\n", "#         logging.info(\"Let's use %d GPU!\" % torch.cuda.device_count())", "\n", "\n", "\n", "# Checkpoint and save directory", "\n", "", "", "with", "logger", ".", "LoggingBlock", "(", "\"Save Directory\"", ",", "emph", "=", "True", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Save directory: %s\"", "%", "args", ".", "save", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "save", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "args", ".", "save", ")", "\n", "\n", "# Configure optimizer", "\n", "", "", "optimizer", "=", "config", ".", "configure_optimizer", "(", "args", ",", "model_and_loss", ")", "\n", "\n", "# Configure learning rate", "\n", "lr_scheduler", "=", "config", ".", "configure_lr_scheduler", "(", "args", ",", "optimizer", ")", "\n", "\n", "# If this is just an evaluation: overwrite savers and epochs", "\n", "if", "args", ".", "evaluation", ":", "\n", "        ", "args", ".", "start_epoch", "=", "1", "\n", "args", ".", "total_epochs", "=", "1", "\n", "train_loader", "=", "None", "\n", "checkpoint_saver", "=", "None", "\n", "optimizer", "=", "None", "\n", "lr_scheduler", "=", "None", "\n", "\n", "# Cuda optimization", "\n", "", "if", "args", ".", "cuda", ":", "\n", "        ", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n", "# Kickoff training, validation and/or testing", "\n", "", "return", "runtime", ".", "exec_runtime", "(", "\n", "args", ",", "\n", "checkpoint_saver", "=", "checkpoint_saver", ",", "\n", "model_and_loss", "=", "model_and_loss", ",", "\n", "optimizer", "=", "optimizer", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "train_loader", "=", "train_loader", ",", "\n", "validation_loader", "=", "validation_loader", ",", "\n", "inference_loader", "=", "inference_loader", ",", "\n", "training_augmentation", "=", "training_augmentation", ",", "\n", "validation_augmentation", "=", "validation_augmentation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.PhotometricAugmentation.__init__": [[13, 26], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "PhotometricAugmentation", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_min_gamma", "=", "0.8", "\n", "self", ".", "_max_gamma", "=", "1.2", "\n", "self", ".", "_min_brght", "=", "0.5", "\n", "self", ".", "_max_brght", "=", "2.0", "\n", "self", ".", "_min_shift", "=", "0.8", "\n", "self", ".", "_max_shift", "=", "1.2", "\n", "\n", "self", ".", "_intv_gamma", "=", "self", ".", "_max_gamma", "-", "self", ".", "_min_gamma", "\n", "self", ".", "_intv_brght", "=", "self", ".", "_max_brght", "-", "self", ".", "_min_brght", "\n", "self", ".", "_intv_shift", "=", "self", ".", "_max_shift", "-", "self", ".", "_min_shift", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.PhotometricAugmentation.forward": [[27, 58], ["args[].size", "len", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.clamp.size", "torch.clamp.size", "torch.clamp.size", "int", "torch.cat.expand", "torch.cat.expand", "torch.cat.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "rand_gamma.expand", "rand_brightness.expand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "range"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "args", ")", ":", "\n", "\n", "        ", "_", ",", "orig_c", ",", "_", ",", "_", "=", "args", "[", "0", "]", ".", "size", "(", ")", "\n", "num_splits", "=", "len", "(", "args", ")", "\n", "concat_data", "=", "torch", ".", "cat", "(", "args", ",", "dim", "=", "1", ")", "\n", "d_dtype", "=", "concat_data", ".", "dtype", "\n", "d_device", "=", "concat_data", ".", "device", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "concat_data", ".", "size", "(", ")", "\n", "num_images", "=", "int", "(", "c", "/", "orig_c", ")", "\n", "\n", "rand_gamma", "=", "torch", ".", "rand", "(", "[", "b", ",", "1", ",", "1", ",", "1", "]", ",", "dtype", "=", "d_dtype", ",", "device", "=", "d_device", ",", "requires_grad", "=", "False", ")", "*", "self", ".", "_intv_gamma", "+", "self", ".", "_min_gamma", "\n", "rand_brightness", "=", "torch", ".", "rand", "(", "[", "b", ",", "1", ",", "1", ",", "1", "]", ",", "dtype", "=", "d_dtype", ",", "device", "=", "d_device", ",", "requires_grad", "=", "False", ")", "*", "self", ".", "_intv_brght", "+", "self", ".", "_min_brght", "\n", "rand_shift", "=", "torch", ".", "rand", "(", "[", "b", ",", "3", ",", "1", ",", "1", "]", ",", "dtype", "=", "d_dtype", ",", "device", "=", "d_device", ",", "requires_grad", "=", "False", ")", "*", "self", ".", "_intv_shift", "+", "self", ".", "_min_shift", "\n", "\n", "# gamma", "\n", "concat_data", "=", "concat_data", "**", "rand_gamma", ".", "expand", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "# brightness", "\n", "concat_data", "=", "concat_data", "*", "rand_brightness", ".", "expand", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "# color shift", "\n", "rand_shift", "=", "rand_shift", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "rand_shift", "=", "torch", ".", "cat", "(", "[", "rand_shift", "for", "i", "in", "range", "(", "0", ",", "num_images", ")", "]", ",", "dim", "=", "1", ")", "\n", "concat_data", "=", "concat_data", "*", "rand_shift", "\n", "\n", "# clip", "\n", "concat_data", "=", "torch", ".", "clamp", "(", "concat_data", ",", "0", ",", "1", ")", "\n", "\n", "split", "=", "torch", ".", "chunk", "(", "concat_data", ",", "num_splits", ",", "dim", "=", "1", ")", "\n", "\n", "return", "split", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._IdentityParams.__init__": [[61, 68], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "_IdentityParams", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_batch_size", "=", "0", "\n", "self", ".", "_device", "=", "None", "\n", "self", ".", "_o", "=", "None", "\n", "self", ".", "_i", "=", "None", "\n", "self", ".", "_identity_params", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._IdentityParams._update": [[69, 76], ["torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.ones().float", "torch.ones().float", "torch.ones().float", "torch.ones().float", "torch.ones().float", "torch.ones().float", "torch.ones().float", "torch.ones().float", "torch.ones().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["None"], ["", "def", "_update", "(", "self", ",", "batch_size", ",", "device", ")", ":", "\n", "        ", "self", ".", "_o", "=", "torch", ".", "zeros", "(", "[", "batch_size", ",", "1", ",", "1", "]", ",", "device", "=", "device", ")", ".", "float", "(", ")", "\n", "self", ".", "_i", "=", "torch", ".", "ones", "(", "[", "batch_size", ",", "1", ",", "1", "]", ",", "device", "=", "device", ")", ".", "float", "(", ")", "\n", "r1", "=", "torch", ".", "cat", "(", "[", "self", ".", "_i", ",", "self", ".", "_o", ",", "self", ".", "_o", "]", ",", "dim", "=", "2", ")", "\n", "r2", "=", "torch", ".", "cat", "(", "[", "self", ".", "_o", ",", "self", ".", "_i", ",", "self", ".", "_o", "]", ",", "dim", "=", "2", ")", "\n", "r3", "=", "torch", ".", "cat", "(", "[", "self", ".", "_o", ",", "self", ".", "_o", ",", "self", ".", "_i", "]", ",", "dim", "=", "2", ")", "\n", "return", "torch", ".", "cat", "(", "[", "r1", ",", "r2", ",", "r3", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._IdentityParams.forward": [[77, 84], ["augmentations._IdentityParams._identity_params.clone", "augmentations._IdentityParams._update"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._IdentityParams._update"], ["", "def", "forward", "(", "self", ",", "batch_size", ",", "device", ")", ":", "\n", "        ", "if", "self", ".", "_batch_size", "!=", "batch_size", "or", "self", ".", "_device", "!=", "device", ":", "\n", "            ", "self", ".", "_identity_params", "=", "self", ".", "_update", "(", "batch_size", ",", "device", ")", "\n", "self", ".", "_batch_size", "=", "batch_size", "\n", "self", ".", "_device", "=", "device", "\n", "\n", "", "return", "self", ".", "_identity_params", ".", "clone", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_MonoDepthBaseline.__init__": [[107, 114], ["torch.Module.__init__", "augmentations.PhotometricAugmentation"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "photometric", "=", "True", ")", ":", "\n", "        ", "super", "(", "Augmentation_MonoDepthBaseline", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# init", "\n", "self", ".", "_args", "=", "args", "\n", "self", ".", "_photometric", "=", "photometric", "\n", "self", ".", "_photo_augmentation", "=", "PhotometricAugmentation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_MonoDepthBaseline.forward": [[115, 127], ["augmentations.Augmentation_MonoDepthBaseline._photo_augmentation", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "example_dict", ")", ":", "\n", "\n", "        ", "im_l1", "=", "example_dict", "[", "\"input_l1\"", "]", "\n", "im_r1", "=", "example_dict", "[", "\"input_r1\"", "]", "\n", "\n", "if", "self", ".", "_photometric", "and", "torch", ".", "rand", "(", "1", ")", ">", "0.5", ":", "\n", "            ", "im_l1", ",", "im_r1", "=", "self", ".", "_photo_augmentation", "(", "im_l1", ",", "im_r1", ")", "\n", "\n", "", "example_dict", "[", "\"input_l1\"", "]", "=", "im_l1", "\n", "example_dict", "[", "\"input_r1\"", "]", "=", "im_r1", "\n", "\n", "return", "example_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.__init__": [[130, 148], ["torch.Module.__init__", "augmentations.PhotometricAugmentation", "augmentations._IdentityParams", "utils.interpolation.Meshgrid"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "photometric", "=", "True", ",", "trans", "=", "0.07", ",", "scale", "=", "[", "0.93", ",", "1.0", "]", ",", "resize", "=", "[", "256", ",", "832", "]", ")", ":", "\n", "        ", "super", "(", "Augmentation_ScaleCrop", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# init", "\n", "self", ".", "_args", "=", "args", "\n", "self", ".", "_photometric", "=", "photometric", "\n", "self", ".", "_photo_augmentation", "=", "PhotometricAugmentation", "(", ")", "\n", "\n", "self", ".", "_batch", "=", "None", "\n", "self", ".", "_device", "=", "None", "\n", "self", ".", "_identity", "=", "_IdentityParams", "(", ")", "\n", "self", ".", "_meshgrid", "=", "Meshgrid", "(", ")", "\n", "\n", "# Augmentation Parameters", "\n", "self", ".", "_min_scale", "=", "scale", "[", "0", "]", "\n", "self", ".", "_max_scale", "=", "scale", "[", "1", "]", "\n", "self", ".", "_max_trans", "=", "trans", "\n", "self", ".", "_resize", "=", "resize", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.compose_params": [[149, 151], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "compose_params", "(", "self", ",", "scale", ",", "rot", ",", "tx", ",", "ty", ")", ":", "\n", "        ", "return", "torch", ".", "cat", "(", "[", "scale", ",", "rot", ",", "tx", ",", "ty", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.decompose_params": [[152, 154], ["None"], "methods", ["None"], ["", "def", "decompose_params", "(", "self", ",", "params", ")", ":", "\n", "        ", "return", "params", "[", ":", ",", "0", ":", "1", "]", ",", "params", "[", ":", ",", "1", ":", "2", "]", ",", "params", "[", ":", ",", "2", ":", "3", "]", ",", "params", "[", ":", ",", "3", ":", "4", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.find_invalid": [[155, 193], ["augmentations.Augmentation_ScaleCrop.decompose_params", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "hf_h.unsqueeze_", "hf_w.unsqueeze_", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.matmul().transpose", "torch.matmul().transpose", "torch.matmul().transpose", "torch.matmul().transpose", "torch.matmul().transpose", "torch.matmul().transpose", "torch.matmul().transpose", "torch.matmul().transpose", "torch.matmul().transpose", "augmentations.Augmentation_ScaleCrop._identity", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.decompose_params"], ["", "def", "find_invalid", "(", "self", ",", "img_size", ",", "params", ")", ":", "\n", "\n", "        ", "scale", ",", "_", ",", "tx", ",", "ty", "=", "self", ".", "decompose_params", "(", "params", ")", "\n", "\n", "## Intermediate image", "\n", "intm_size_h", "=", "torch", ".", "floor", "(", "img_size", "[", "0", "]", "*", "scale", ")", "\n", "intm_size_w", "=", "torch", ".", "floor", "(", "img_size", "[", "1", "]", "*", "scale", ")", "\n", "\n", "## 4 representative points of the intermediate images", "\n", "hf_h", "=", "(", "intm_size_h", "-", "1.0", ")", "/", "2.0", "\n", "hf_w", "=", "(", "intm_size_w", "-", "1.0", ")", "/", "2.0", "\n", "hf_h", ".", "unsqueeze_", "(", "1", ")", "\n", "hf_w", ".", "unsqueeze_", "(", "1", ")", "\n", "hf_o", "=", "torch", ".", "zeros_like", "(", "hf_h", ")", "\n", "hf_i", "=", "torch", ".", "ones_like", "(", "hf_h", ")", "\n", "pt_mat", "=", "torch", ".", "cat", "(", "[", "torch", ".", "cat", "(", "[", "hf_w", ",", "hf_o", ",", "hf_o", "]", ",", "dim", "=", "2", ")", ",", "torch", ".", "cat", "(", "[", "hf_o", ",", "hf_h", ",", "hf_o", "]", ",", "dim", "=", "2", ")", ",", "torch", ".", "cat", "(", "[", "hf_o", ",", "hf_o", ",", "hf_i", "]", ",", "dim", "=", "2", ")", "]", ",", "dim", "=", "1", ")", "\n", "ref_mat", "=", "torch", ".", "ones", "(", "self", ".", "_batch", ",", "4", ",", "3", ",", "device", "=", "self", ".", "_device", ")", "\n", "ref_mat", "[", ":", ",", "1", ",", "1", "]", "=", "-", "1", "\n", "ref_mat", "[", ":", ",", "2", ",", "0", "]", "=", "-", "1", "\n", "ref_mat", "[", ":", ",", "3", ",", "0", "]", "=", "-", "1", "\n", "ref_mat", "[", ":", ",", "3", ",", "1", "]", "=", "-", "1", "\n", "ref_pts", "=", "torch", ".", "matmul", "(", "ref_mat", ",", "pt_mat", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "\n", "## Perform trainsform", "\n", "tform_mat", "=", "self", ".", "_identity", "(", "self", ".", "_batch", ",", "self", ".", "_device", ")", "\n", "tform_mat", "[", ":", ",", "0", ",", "2", "]", "=", "tx", "[", ":", ",", "0", "]", "\n", "tform_mat", "[", ":", ",", "1", ",", "2", "]", "=", "ty", "[", ":", ",", "0", "]", "\n", "pts_tform", "=", "torch", ".", "matmul", "(", "tform_mat", ",", "ref_pts", ")", "\n", "\n", "## Check validity: whether the 4 representative points are inside of the original images", "\n", "img_hf_h", "=", "(", "img_size", "[", "0", "]", "-", "1.0", ")", "/", "2.0", "\n", "img_hf_w", "=", "(", "img_size", "[", "1", "]", "-", "1.0", ")", "/", "2.0", "\n", "x_tf", "=", "pts_tform", "[", ":", ",", "0", ",", ":", "]", "\n", "y_tf", "=", "pts_tform", "[", ":", ",", "1", ",", ":", "]", "\n", "\n", "invalid", "=", "(", "(", "(", "x_tf", "<=", "-", "img_hf_w", ")", "|", "(", "y_tf", "<=", "-", "img_hf_h", ")", "|", "(", "x_tf", ">=", "img_hf_w", ")", "|", "(", "y_tf", ">=", "img_hf_h", ")", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ">", "0", ")", ".", "float", "(", ")", "\n", "\n", "return", "invalid", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.calculate_tform_and_grids": [[194, 228], ["augmentations.Augmentation_ScaleCrop.decompose_params", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "augmentations.Augmentation_ScaleCrop._meshgrid", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "augmentations.Augmentation_ScaleCrop._identity", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "augmentations.Augmentation_ScaleCrop._identity", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat().unsqueeze().expand.view", "torch.cat().unsqueeze().expand.view", "torch.cat().unsqueeze().expand.view", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "float", "float", "grid_img_ww.unsqueeze", "grid_img_hh.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.decompose_params"], ["", "def", "calculate_tform_and_grids", "(", "self", ",", "img_size", ",", "resize", ",", "params", ")", ":", "\n", "\n", "        ", "intm_scale", ",", "_", ",", "tx", ",", "ty", "=", "self", ".", "decompose_params", "(", "params", ")", "\n", "\n", "## Intermediate image", "\n", "intm_size_h", "=", "torch", ".", "floor", "(", "img_size", "[", "0", "]", "*", "intm_scale", ")", "\n", "intm_size_w", "=", "torch", ".", "floor", "(", "img_size", "[", "1", "]", "*", "intm_scale", ")", "\n", "scale_x", "=", "intm_size_w", "/", "resize", "[", "1", "]", "\n", "scale_y", "=", "intm_size_h", "/", "resize", "[", "0", "]", "\n", "\n", "## Coord of the resized image", "\n", "grid_ww", ",", "grid_hh", "=", "self", ".", "_meshgrid", "(", "resize", "[", "1", "]", ",", "resize", "[", "0", "]", ")", "\n", "grid_ww", "=", "(", "grid_ww", "-", "(", "resize", "[", "1", "]", "-", "1.0", ")", "/", "2.0", ")", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "grid_hh", "=", "(", "grid_hh", "-", "(", "resize", "[", "0", "]", "-", "1.0", ")", "/", "2.0", ")", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "grid_pts", "=", "torch", ".", "cat", "(", "[", "grid_ww", ",", "grid_hh", ",", "torch", ".", "ones_like", "(", "grid_hh", ")", "]", ",", "dim", "=", "0", ")", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "self", ".", "_batch", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "## 1st - scale_tform -> to intermediate image", "\n", "scale_tform", "=", "self", ".", "_identity", "(", "self", ".", "_batch", ",", "self", ".", "_device", ")", "\n", "scale_tform", "[", ":", ",", "0", ",", "0", "]", "=", "scale_x", "[", ":", ",", "0", "]", "\n", "scale_tform", "[", ":", ",", "1", ",", "1", "]", "=", "scale_y", "[", ":", ",", "0", "]", "\n", "pts_tform", "=", "torch", ".", "matmul", "(", "scale_tform", ",", "grid_pts", ".", "view", "(", "self", ".", "_batch", ",", "3", ",", "-", "1", ")", ")", "\n", "\n", "## 2st - trans and rotate -> to original image (each pixel contains the coordinates in the original images)", "\n", "tr_tform", "=", "self", ".", "_identity", "(", "self", ".", "_batch", ",", "self", ".", "_device", ")", "\n", "tr_tform", "[", ":", ",", "0", ",", "2", "]", "=", "tx", "[", ":", ",", "0", "]", "\n", "tr_tform", "[", ":", ",", "1", ",", "2", "]", "=", "ty", "[", ":", ",", "0", "]", "\n", "pts_tform", "=", "torch", ".", "matmul", "(", "tr_tform", ",", "pts_tform", ")", ".", "view", "(", "self", ".", "_batch", ",", "3", ",", "resize", "[", "0", "]", ",", "resize", "[", "1", "]", ")", "\n", "\n", "grid_img_ww", "=", "pts_tform", "[", ":", ",", "0", ",", ":", ",", ":", "]", "/", "float", "(", "img_size", "[", "1", "]", ")", "*", "2", "# x2 is for scaling [-1. 1]", "\n", "grid_img_hh", "=", "pts_tform", "[", ":", ",", "1", ",", ":", ",", ":", "]", "/", "float", "(", "img_size", "[", "0", "]", ")", "*", "2", "\n", "\n", "grid_img", "=", "torch", ".", "cat", "(", "[", "grid_img_ww", ".", "unsqueeze", "(", "3", ")", ",", "grid_img_hh", ".", "unsqueeze", "(", "3", ")", "]", ",", "dim", "=", "3", ")", "\n", "\n", "return", "grid_img", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.find_aug_params": [[230, 260], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "augmentations.Augmentation_ScaleCrop.compose_params", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "augmentations.Augmentation_ScaleCrop.sum", "torch.zeros.uniform_", "torch.zeros.uniform_", "torch.zeros.uniform_", "augmentations.Augmentation_ScaleCrop.compose_params", "augmentations.Augmentation_ScaleCrop.find_invalid", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.zeros_like.uniform_", "torch.zeros_like.uniform_", "torch.zeros_like.uniform_", "torch.zeros_like.uniform_", "torch.zeros_like.uniform_", "torch.zeros_like.uniform_", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.compose_params", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.compose_params", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.find_invalid"], ["", "def", "find_aug_params", "(", "self", ",", "img_size", ",", "resize", ")", ":", "\n", "\n", "## Init", "\n", "        ", "scale", "=", "torch", ".", "zeros", "(", "self", ".", "_batch", ",", "1", ",", "device", "=", "self", ".", "_device", ")", "\n", "rot", "=", "torch", ".", "zeros_like", "(", "scale", ")", "\n", "tx", "=", "torch", ".", "zeros_like", "(", "scale", ")", "\n", "ty", "=", "torch", ".", "zeros_like", "(", "scale", ")", "\n", "\n", "params", "=", "self", ".", "compose_params", "(", "scale", ",", "rot", ",", "tx", ",", "ty", ")", "\n", "\n", "invalid", "=", "torch", ".", "ones_like", "(", "scale", ")", "\n", "max_trans", "=", "torch", ".", "ones_like", "(", "scale", ")", "*", "self", ".", "_max_trans", "\n", "\n", "## find params", "\n", "# scale: for the size of intermediate images (original * scale = intermediate image)", "\n", "# rot and trans: rotating and translating of the intermedinate image", "\n", "# then resize the augmented images into the resize image", "\n", "\n", "while", "invalid", ".", "sum", "(", ")", ">", "0", ":", "\n", "\n", "            ", "scale", ".", "uniform_", "(", "self", ".", "_min_scale", ",", "self", ".", "_max_scale", ")", "\n", "max_t", "=", "torch", ".", "min", "(", "torch", ".", "ones_like", "(", "scale", ")", "-", "scale", ",", "max_trans", ")", "*", "0.5", "# 0.5 because the translation rage is [-0.5*trans, 0.5*trans]", "\n", "tx", "=", "tx", ".", "uniform_", "(", "-", "1.0", ",", "1.0", ")", "*", "max_t", "*", "img_size", "[", "1", "]", "\n", "ty", "=", "ty", ".", "uniform_", "(", "-", "1.0", ",", "1.0", ")", "*", "max_t", "*", "img_size", "[", "0", "]", "\n", "params_new", "=", "self", ".", "compose_params", "(", "scale", ",", "rot", ",", "tx", ",", "ty", ")", "\n", "params", "=", "invalid", "*", "params_new", "+", "(", "1", "-", "invalid", ")", "*", "params", "\n", "\n", "invalid", "=", "self", ".", "find_invalid", "(", "img_size", ",", "params", ")", "\n", "\n", "", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.augment_intrinsic_matrices": [[261, 304], ["augmentations.Augmentation_ScaleCrop.decompose_params", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "torch.cat().unsqueeze().expand", "augmentations.Augmentation_ScaleCrop._identity", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "augmentations.Augmentation_ScaleCrop._identity", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "str_p_ww[].expand", "str_p_hh[].expand", "torch.cat().unsqueeze().expand.view", "torch.cat().unsqueeze().expand.view", "torch.cat().unsqueeze().expand.view", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "float", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.decompose_params"], ["", "def", "augment_intrinsic_matrices", "(", "self", ",", "intrinsics", ",", "num_splits", ",", "img_size", ",", "resize", ",", "params", ")", ":", "\n", "\n", "### Finding the starting pt in the Original Image", "\n", "\n", "        ", "intm_scale", ",", "_", ",", "tx", ",", "ty", "=", "self", ".", "decompose_params", "(", "params", ")", "\n", "\n", "## Intermediate image: finding scale from \"Resize\" to \"Intermediate Image\"", "\n", "intm_size_h", "=", "torch", ".", "floor", "(", "img_size", "[", "0", "]", "*", "intm_scale", ")", "\n", "intm_size_w", "=", "torch", ".", "floor", "(", "img_size", "[", "1", "]", "*", "intm_scale", ")", "\n", "scale_x", "=", "intm_size_w", "/", "resize", "[", "1", "]", "\n", "scale_y", "=", "intm_size_h", "/", "resize", "[", "0", "]", "\n", "\n", "## Coord of the resized image", "\n", "pt_o", "=", "torch", ".", "zeros", "(", "[", "1", ",", "1", "]", ")", ".", "float", "(", ")", "\n", "grid_ww", "=", "(", "pt_o", "-", "(", "resize", "[", "1", "]", "-", "1.0", ")", "/", "2.0", ")", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "grid_hh", "=", "(", "pt_o", "-", "(", "resize", "[", "0", "]", "-", "1.0", ")", "/", "2.0", ")", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "grid_pts", "=", "torch", ".", "cat", "(", "[", "grid_ww", ",", "grid_hh", ",", "torch", ".", "ones_like", "(", "grid_hh", ")", "]", ",", "dim", "=", "0", ")", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "self", ".", "_batch", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "## 1st - scale_tform -> to intermediate image", "\n", "scale_tform", "=", "self", ".", "_identity", "(", "self", ".", "_batch", ",", "self", ".", "_device", ")", "\n", "scale_tform", "[", ":", ",", "0", ",", "0", "]", "=", "scale_x", "[", ":", ",", "0", "]", "\n", "scale_tform", "[", ":", ",", "1", ",", "1", "]", "=", "scale_y", "[", ":", ",", "0", "]", "\n", "pts_tform", "=", "torch", ".", "matmul", "(", "scale_tform", ",", "grid_pts", ".", "view", "(", "self", ".", "_batch", ",", "3", ",", "-", "1", ")", ")", "\n", "\n", "## 2st - trans and rotate -> to original image (each pixel contains the coordinates in the original images)", "\n", "tr_tform", "=", "self", ".", "_identity", "(", "self", ".", "_batch", ",", "self", ".", "_device", ")", "\n", "tr_tform", "[", ":", ",", "0", ",", "2", "]", "=", "tx", "[", ":", ",", "0", "]", "\n", "tr_tform", "[", ":", ",", "1", ",", "2", "]", "=", "ty", "[", ":", ",", "0", "]", "\n", "pts_tform", "=", "torch", ".", "matmul", "(", "tr_tform", ",", "pts_tform", ")", "\n", "str_p_ww", "=", "pts_tform", "[", ":", ",", "0", ",", ":", "]", "+", "torch", ".", "ones_like", "(", "pts_tform", "[", ":", ",", "0", ",", ":", "]", ")", "*", "float", "(", "img_size", "[", "1", "]", ")", "*", "0.5", "\n", "str_p_hh", "=", "pts_tform", "[", ":", ",", "1", ",", ":", "]", "+", "torch", ".", "ones_like", "(", "pts_tform", "[", ":", ",", "1", ",", ":", "]", ")", "*", "float", "(", "img_size", "[", "0", "]", ")", "*", "0.5", "\n", "\n", "## Cropping", "\n", "intrinsics", "[", ":", ",", ":", ",", "0", ",", "2", "]", "-=", "str_p_ww", "[", ":", ",", "0", ":", "1", "]", ".", "expand", "(", "-", "1", ",", "num_splits", ")", "\n", "intrinsics", "[", ":", ",", ":", ",", "1", ",", "2", "]", "-=", "str_p_hh", "[", ":", ",", "0", ":", "1", "]", ".", "expand", "(", "-", "1", ",", "num_splits", ")", "\n", "\n", "## Scaling        ", "\n", "intrinsics", "[", ":", ",", ":", ",", "0", ",", "0", "]", "=", "intrinsics", "[", ":", ",", ":", ",", "0", ",", "0", "]", "/", "scale_x", "\n", "intrinsics", "[", ":", ",", ":", ",", "1", ",", "1", "]", "=", "intrinsics", "[", ":", ",", ":", ",", "1", ",", "1", "]", "/", "scale_y", "\n", "intrinsics", "[", ":", ",", ":", ",", "0", ",", "2", "]", "=", "intrinsics", "[", ":", ",", ":", ",", "0", ",", "2", "]", "/", "scale_x", "\n", "intrinsics", "[", ":", ",", ":", ",", "1", ",", "2", "]", "=", "intrinsics", "[", ":", ",", ":", ",", "1", ",", "2", "]", "/", "scale_y", "\n", "\n", "return", "intrinsics", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow.__init__": [[307, 314], ["augmentations.Augmentation_ScaleCrop.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "photometric", "=", "True", ",", "trans", "=", "0.07", ",", "scale", "=", "[", "0.93", ",", "1.0", "]", ",", "resize", "=", "[", "256", ",", "832", "]", ")", ":", "\n", "        ", "super", "(", "Augmentation_SceneFlow", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "photometric", "=", "photometric", ",", "\n", "trans", "=", "trans", ",", "\n", "scale", "=", "scale", ",", "\n", "resize", "=", "resize", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow.forward": [[316, 391], ["example_dict[].clone", "example_dict[].clone", "example_dict[].clone", "example_dict[].clone", "torch.grid_sample.size", "augmentations.Augmentation_SceneFlow.find_aug_params", "augmentations.Augmentation_SceneFlow.calculate_tform_and_grids", "augmentations.Augmentation_SceneFlow.decompose_params", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "len", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "augmentations.Augmentation_SceneFlow.augment_intrinsic_matrices", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "k_l1.squeeze.squeeze.squeeze", "k_l2.squeeze.squeeze.squeeze", "k_r1.squeeze.squeeze.squeeze", "k_r2.squeeze.squeeze.squeeze", "k_l1.squeeze.squeeze.clone", "k_l2.squeeze.squeeze.clone", "k_r1.squeeze.squeeze.clone", "k_r2.squeeze.squeeze.clone", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "k_l1.squeeze.squeeze.unsqueeze", "k_l2.squeeze.squeeze.unsqueeze", "k_r1.squeeze.squeeze.unsqueeze", "k_r2.squeeze.squeeze.unsqueeze", "augmentations.Augmentation_SceneFlow._photo_augmentation", "torch.grid_sample.size", "torch.grid_sample.size", "torch.grid_sample.size", "torch.grid_sample.size", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.find_aug_params", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.calculate_tform_and_grids", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.decompose_params", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.augment_intrinsic_matrices"], ["", "def", "forward", "(", "self", ",", "example_dict", ")", ":", "\n", "\n", "# --------------------------------------------------------", "\n", "# Param init", "\n", "# --------------------------------------------------------", "\n", "        ", "im_l1", "=", "example_dict", "[", "\"input_l1\"", "]", "\n", "im_l2", "=", "example_dict", "[", "\"input_l2\"", "]", "\n", "im_r1", "=", "example_dict", "[", "\"input_r1\"", "]", "\n", "im_r2", "=", "example_dict", "[", "\"input_r2\"", "]", "\n", "k_l1", "=", "example_dict", "[", "\"input_k_l1\"", "]", ".", "clone", "(", ")", "\n", "k_l2", "=", "example_dict", "[", "\"input_k_l2\"", "]", ".", "clone", "(", ")", "\n", "k_r1", "=", "example_dict", "[", "\"input_k_r1\"", "]", ".", "clone", "(", ")", "\n", "k_r2", "=", "example_dict", "[", "\"input_k_r2\"", "]", ".", "clone", "(", ")", "\n", "self", ".", "_batch", ",", "_", ",", "h_orig", ",", "w_orig", "=", "im_l1", ".", "size", "(", ")", "\n", "self", ".", "_device", "=", "im_l1", ".", "device", "\n", "\n", "## Finding out augmentation parameters", "\n", "params", "=", "self", ".", "find_aug_params", "(", "[", "h_orig", ",", "w_orig", "]", ",", "self", ".", "_resize", ")", "\n", "coords", "=", "self", ".", "calculate_tform_and_grids", "(", "[", "h_orig", ",", "w_orig", "]", ",", "self", ".", "_resize", ",", "params", ")", "\n", "params_scale", ",", "_", ",", "_", ",", "_", "=", "self", ".", "decompose_params", "(", "params", ")", "\n", "\n", "## Augment images", "\n", "im_l1", "=", "tf", ".", "grid_sample", "(", "im_l1", ",", "coords", ")", "\n", "im_l2", "=", "tf", ".", "grid_sample", "(", "im_l2", ",", "coords", ")", "\n", "im_r1", "=", "tf", ".", "grid_sample", "(", "im_r1", ",", "coords", ")", "\n", "im_r2", "=", "tf", ".", "grid_sample", "(", "im_r2", ",", "coords", ")", "\n", "\n", "## Augment intrinsic matrix         ", "\n", "k_list", "=", "[", "k_l1", ".", "unsqueeze", "(", "1", ")", ",", "k_l2", ".", "unsqueeze", "(", "1", ")", ",", "k_r1", ".", "unsqueeze", "(", "1", ")", ",", "k_r2", ".", "unsqueeze", "(", "1", ")", "]", "\n", "num_splits", "=", "len", "(", "k_list", ")", "\n", "intrinsics", "=", "torch", ".", "cat", "(", "k_list", ",", "dim", "=", "1", ")", "\n", "intrinsics", "=", "self", ".", "augment_intrinsic_matrices", "(", "intrinsics", ",", "num_splits", ",", "[", "h_orig", ",", "w_orig", "]", ",", "self", ".", "_resize", ",", "params", ")", "\n", "k_l1", ",", "k_l2", ",", "k_r1", ",", "k_r2", "=", "torch", ".", "chunk", "(", "intrinsics", ",", "num_splits", ",", "dim", "=", "1", ")", "\n", "k_l1", "=", "k_l1", ".", "squeeze", "(", "1", ")", "\n", "k_l2", "=", "k_l2", ".", "squeeze", "(", "1", ")", "\n", "k_r1", "=", "k_r1", ".", "squeeze", "(", "1", ")", "\n", "k_r2", "=", "k_r2", ".", "squeeze", "(", "1", ")", "\n", "\n", "\n", "if", "self", ".", "_photometric", "and", "torch", ".", "rand", "(", "1", ")", ">", "0.5", ":", "\n", "            ", "im_l1", ",", "im_l2", ",", "im_r1", ",", "im_r2", "=", "self", ".", "_photo_augmentation", "(", "im_l1", ",", "im_l2", ",", "im_r1", ",", "im_r2", ")", "\n", "\n", "## construct updated dictionaries        ", "\n", "", "example_dict", "[", "\"input_coords\"", "]", "=", "coords", "\n", "example_dict", "[", "\"input_aug_scale\"", "]", "=", "params_scale", "\n", "\n", "example_dict", "[", "\"input_l1_aug\"", "]", "=", "im_l1", "\n", "example_dict", "[", "\"input_l2_aug\"", "]", "=", "im_l2", "\n", "example_dict", "[", "\"input_r1_aug\"", "]", "=", "im_r1", "\n", "example_dict", "[", "\"input_r2_aug\"", "]", "=", "im_r2", "\n", "\n", "example_dict", "[", "\"input_k_l1_aug\"", "]", "=", "k_l1", "\n", "example_dict", "[", "\"input_k_l2_aug\"", "]", "=", "k_l2", "\n", "example_dict", "[", "\"input_k_r1_aug\"", "]", "=", "k_r1", "\n", "example_dict", "[", "\"input_k_r2_aug\"", "]", "=", "k_r2", "\n", "\n", "k_l1_flip", "=", "k_l1", ".", "clone", "(", ")", "\n", "k_l2_flip", "=", "k_l2", ".", "clone", "(", ")", "\n", "k_r1_flip", "=", "k_r1", ".", "clone", "(", ")", "\n", "k_r2_flip", "=", "k_r2", ".", "clone", "(", ")", "\n", "k_l1_flip", "[", ":", ",", "0", ",", "2", "]", "=", "im_l1", ".", "size", "(", "3", ")", "-", "k_l1_flip", "[", ":", ",", "0", ",", "2", "]", "\n", "k_l2_flip", "[", ":", ",", "0", ",", "2", "]", "=", "im_l2", ".", "size", "(", "3", ")", "-", "k_l2_flip", "[", ":", ",", "0", ",", "2", "]", "\n", "k_r1_flip", "[", ":", ",", "0", ",", "2", "]", "=", "im_r1", ".", "size", "(", "3", ")", "-", "k_r1_flip", "[", ":", ",", "0", ",", "2", "]", "\n", "k_r2_flip", "[", ":", ",", "0", ",", "2", "]", "=", "im_r2", ".", "size", "(", "3", ")", "-", "k_r2_flip", "[", ":", ",", "0", ",", "2", "]", "\n", "example_dict", "[", "\"input_k_l1_flip_aug\"", "]", "=", "k_l1_flip", "\n", "example_dict", "[", "\"input_k_l2_flip_aug\"", "]", "=", "k_l2_flip", "\n", "example_dict", "[", "\"input_k_r1_flip_aug\"", "]", "=", "k_r1_flip", "\n", "example_dict", "[", "\"input_k_r2_flip_aug\"", "]", "=", "k_r2_flip", "\n", "\n", "aug_size", "=", "torch", ".", "zeros_like", "(", "example_dict", "[", "\"input_size\"", "]", ")", "\n", "aug_size", "[", ":", ",", "0", "]", "=", "self", ".", "_resize", "[", "0", "]", "\n", "aug_size", "[", ":", ",", "1", "]", "=", "self", ".", "_resize", "[", "1", "]", "\n", "example_dict", "[", "\"aug_size\"", "]", "=", "aug_size", "\n", "\n", "return", "example_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_MonoDepth.__init__": [[394, 401], ["augmentations.Augmentation_ScaleCrop.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "photometric", "=", "True", ",", "trans", "=", "0.1", ",", "scale", "=", "[", "0.9", ",", "1.0", "]", ",", "resize", "=", "[", "256", ",", "512", "]", ")", ":", "\n", "        ", "super", "(", "Augmentation_MonoDepth", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "photometric", "=", "photometric", ",", "\n", "trans", "=", "trans", ",", "\n", "scale", "=", "scale", ",", "\n", "resize", "=", "resize", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_MonoDepth.forward": [[402, 447], ["example_dict[].clone", "example_dict[].clone", "torch.grid_sample.size", "augmentations.Augmentation_MonoDepth.find_aug_params", "augmentations.Augmentation_MonoDepth.calculate_tform_and_grids", "augmentations.Augmentation_MonoDepth.decompose_params", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "len", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "augmentations.Augmentation_MonoDepth.augment_intrinsic_matrices", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "k_l1.squeeze.squeeze.squeeze", "k_r1.squeeze.squeeze.squeeze", "k_r1.squeeze.squeeze.clone", "k_l1.squeeze.squeeze.unsqueeze", "k_r1.squeeze.squeeze.unsqueeze", "augmentations.Augmentation_MonoDepth._photo_augmentation", "torch.grid_sample.size", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.find_aug_params", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.calculate_tform_and_grids", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.decompose_params", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_ScaleCrop.augment_intrinsic_matrices"], ["", "def", "forward", "(", "self", ",", "example_dict", ")", ":", "\n", "\n", "# --------------------------------------------------------", "\n", "# Param init", "\n", "# --------------------------------------------------------", "\n", "\n", "        ", "im_l1", "=", "example_dict", "[", "\"input_l1\"", "]", "\n", "im_r1", "=", "example_dict", "[", "\"input_r1\"", "]", "\n", "k_l1", "=", "example_dict", "[", "\"input_k_l1\"", "]", ".", "clone", "(", ")", "\n", "k_r1", "=", "example_dict", "[", "\"input_k_r1\"", "]", ".", "clone", "(", ")", "\n", "\n", "self", ".", "_batch", ",", "_", ",", "h_orig", ",", "w_orig", "=", "im_l1", ".", "size", "(", ")", "\n", "self", ".", "_device", "=", "im_l1", ".", "device", "\n", "\n", "## Finding out augmentation parameters", "\n", "params", "=", "self", ".", "find_aug_params", "(", "[", "h_orig", ",", "w_orig", "]", ",", "self", ".", "_resize", ")", "\n", "coords", "=", "self", ".", "calculate_tform_and_grids", "(", "[", "h_orig", ",", "w_orig", "]", ",", "self", ".", "_resize", ",", "params", ")", "\n", "params_scale", ",", "_", ",", "_", ",", "_", "=", "self", ".", "decompose_params", "(", "params", ")", "\n", "\n", "## Augment images", "\n", "im_l1", "=", "tf", ".", "grid_sample", "(", "im_l1", ",", "coords", ")", "\n", "im_r1", "=", "tf", ".", "grid_sample", "(", "im_r1", ",", "coords", ")", "\n", "\n", "## Augment intrinsic matrix", "\n", "k_list", "=", "[", "k_l1", ".", "unsqueeze", "(", "1", ")", ",", "k_r1", ".", "unsqueeze", "(", "1", ")", "]", "\n", "num_splits", "=", "len", "(", "k_list", ")", "\n", "intrinsics", "=", "torch", ".", "cat", "(", "k_list", ",", "dim", "=", "1", ")", "\n", "intrinsics", "=", "self", ".", "augment_intrinsic_matrices", "(", "intrinsics", ",", "num_splits", ",", "[", "h_orig", ",", "w_orig", "]", ",", "self", ".", "_resize", ",", "params", ")", "\n", "k_l1", ",", "k_r1", "=", "torch", ".", "chunk", "(", "intrinsics", ",", "num_splits", ",", "dim", "=", "1", ")", "\n", "k_l1", "=", "k_l1", ".", "squeeze", "(", "1", ")", "\n", "k_r1", "=", "k_r1", ".", "squeeze", "(", "1", ")", "\n", "\n", "if", "self", ".", "_photometric", "and", "torch", ".", "rand", "(", "1", ")", ">", "0.5", ":", "\n", "            ", "im_l1", ",", "im_r1", "=", "self", ".", "_photo_augmentation", "(", "im_l1", ",", "im_r1", ")", "\n", "\n", "", "k_r1_flip", "=", "k_r1", ".", "clone", "(", ")", "\n", "k_r1_flip", "[", ":", ",", "0", ",", "2", "]", "=", "im_r1", ".", "size", "(", "3", ")", "-", "k_r1_flip", "[", ":", ",", "0", ",", "2", "]", "\n", "\n", "example_dict", "[", "\"input_l1\"", "]", "=", "im_l1", "\n", "example_dict", "[", "\"input_r1\"", "]", "=", "im_r1", "\n", "example_dict", "[", "\"input_k_l1\"", "]", "=", "k_l1", "\n", "example_dict", "[", "\"input_k_r1\"", "]", "=", "k_r1", "\n", "example_dict", "[", "\"input_k_r1_flip\"", "]", "=", "k_r1_flip", "\n", "\n", "return", "example_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.__init__": [[450, 458], ["torch.Module.__init__", "augmentations.PhotometricAugmentation"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "photometric", "=", "True", ",", "imgsize", "=", "[", "256", ",", "832", "]", ")", ":", "\n", "        ", "super", "(", "Augmentation_SceneFlow_Finetuning", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# init", "\n", "self", ".", "_args", "=", "args", "\n", "self", ".", "_photometric", "=", "photometric", "\n", "self", ".", "_photo_augmentation", "=", "PhotometricAugmentation", "(", ")", "\n", "self", ".", "_imgsize", "=", "imgsize", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping": [[460, 463], ["None"], "methods", ["None"], ["", "def", "cropping", "(", "self", ",", "img", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", ":", "\n", "\n", "        ", "return", "img", "[", ":", ",", ":", ",", "str_y", ":", "end_y", ",", "str_x", ":", "end_x", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.kitti_random_crop": [[464, 513], ["im_l1.size", "numpy.random.uniform", "int", "int", "numpy.random.uniform", "numpy.random.uniform", "int", "int", "int", "int", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations.Augmentation_SceneFlow_Finetuning.cropping", "augmentations._intrinsic_crop", "augmentations._intrinsic_crop", "augmentations._intrinsic_crop", "augmentations._intrinsic_crop", "example_dict[].clone"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.cropping", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._intrinsic_crop", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._intrinsic_crop", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._intrinsic_crop", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._intrinsic_crop"], ["", "def", "kitti_random_crop", "(", "self", ",", "example_dict", ")", ":", "\n", "\n", "        ", "im_l1", "=", "example_dict", "[", "\"input_l1\"", "]", "\n", "_", ",", "_", ",", "height", ",", "width", "=", "im_l1", ".", "size", "(", ")", "\n", "\n", "scale", "=", "np", ".", "random", ".", "uniform", "(", "0.94", ",", "1.00", ")", "\n", "crop_height", "=", "int", "(", "scale", "*", "height", ")", "\n", "crop_width", "=", "int", "(", "scale", "*", "width", ")", "\n", "\n", "# get starting positions", "\n", "x", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "width", "-", "crop_width", "+", "1", ")", "\n", "y", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "height", "-", "crop_height", "+", "1", ")", "\n", "str_x", "=", "int", "(", "x", ")", "\n", "str_y", "=", "int", "(", "y", ")", "\n", "end_x", "=", "int", "(", "x", "+", "crop_width", ")", "\n", "end_y", "=", "int", "(", "y", "+", "crop_height", ")", "\n", "\n", "## Cropping", "\n", "example_dict", "[", "\"input_l1\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"input_l1\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "example_dict", "[", "\"input_l2\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"input_l2\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "example_dict", "[", "\"input_r1\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"input_r1\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "example_dict", "[", "\"input_r2\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"input_r2\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "\n", "example_dict", "[", "\"target_flow\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"target_flow\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "example_dict", "[", "\"target_flow_mask\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"target_flow_mask\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "example_dict", "[", "\"target_flow_noc\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"target_flow_noc\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "example_dict", "[", "\"target_flow_mask_noc\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"target_flow_mask_noc\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "\n", "example_dict", "[", "\"target_disp\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"target_disp\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "example_dict", "[", "\"target_disp_mask\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"target_disp_mask\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "example_dict", "[", "\"target_disp2_occ\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"target_disp2_occ\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "example_dict", "[", "\"target_disp2_mask_occ\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"target_disp2_mask_occ\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "\n", "example_dict", "[", "\"target_disp_noc\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"target_disp_noc\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "example_dict", "[", "\"target_disp_mask_noc\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"target_disp_mask_noc\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "example_dict", "[", "\"target_disp2_noc\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"target_disp2_noc\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "example_dict", "[", "\"target_disp2_mask_noc\"", "]", "=", "self", ".", "cropping", "(", "example_dict", "[", "\"target_disp2_mask_noc\"", "]", ",", "str_x", ",", "str_y", ",", "end_x", ",", "end_y", ")", "\n", "\n", "example_dict", "[", "\"input_k_l1\"", "]", "=", "_intrinsic_crop", "(", "example_dict", "[", "\"input_k_l1\"", "]", ",", "str_x", ",", "str_y", ")", "\n", "example_dict", "[", "\"input_k_l2\"", "]", "=", "_intrinsic_crop", "(", "example_dict", "[", "\"input_k_l2\"", "]", ",", "str_x", ",", "str_y", ")", "\n", "example_dict", "[", "\"input_k_r1\"", "]", "=", "_intrinsic_crop", "(", "example_dict", "[", "\"input_k_r1\"", "]", ",", "str_x", ",", "str_y", ")", "\n", "example_dict", "[", "\"input_k_r2\"", "]", "=", "_intrinsic_crop", "(", "example_dict", "[", "\"input_k_r2\"", "]", ",", "str_x", ",", "str_y", ")", "\n", "\n", "input_size", "=", "example_dict", "[", "\"input_size\"", "]", ".", "clone", "(", ")", "\n", "input_size", "[", ":", ",", "0", "]", "=", "crop_height", "\n", "input_size", "[", ":", ",", "1", "]", "=", "crop_width", "\n", "example_dict", "[", "\"input_size\"", "]", "=", "input_size", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.forward": [[515, 568], ["augmentations.Augmentation_SceneFlow_Finetuning.kitti_random_crop", "utils.interpolation.interpolate2d", "utils.interpolation.interpolate2d", "utils.interpolation.interpolate2d", "utils.interpolation.interpolate2d", "example_dict[].size", "augmentations._intrinsic_scale", "augmentations._intrinsic_scale", "augmentations._intrinsic_scale", "augmentations._intrinsic_scale", "_intrinsic_scale.clone", "_intrinsic_scale.clone", "_intrinsic_scale.clone", "_intrinsic_scale.clone", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "augmentations.Augmentation_SceneFlow_Finetuning._photo_augmentation", "utils.interpolation.interpolate2d.size", "utils.interpolation.interpolate2d.size", "utils.interpolation.interpolate2d.size", "utils.interpolation.interpolate2d.size", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_SceneFlow_Finetuning.kitti_random_crop", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.interpolate2d", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.interpolate2d", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.interpolate2d", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.interpolate2d", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._intrinsic_scale", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._intrinsic_scale", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._intrinsic_scale", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._intrinsic_scale"], ["", "def", "forward", "(", "self", ",", "example_dict", ")", ":", "\n", "\n", "## KITTI Random Crop", "\n", "        ", "self", ".", "kitti_random_crop", "(", "example_dict", ")", "\n", "\n", "# Image resizing", "\n", "im_l1", "=", "interpolate2d", "(", "example_dict", "[", "\"input_l1\"", "]", ",", "self", ".", "_imgsize", ")", "\n", "im_l2", "=", "interpolate2d", "(", "example_dict", "[", "\"input_l2\"", "]", ",", "self", ".", "_imgsize", ")", "\n", "im_r1", "=", "interpolate2d", "(", "example_dict", "[", "\"input_r1\"", "]", ",", "self", ".", "_imgsize", ")", "\n", "im_r2", "=", "interpolate2d", "(", "example_dict", "[", "\"input_r2\"", "]", ",", "self", ".", "_imgsize", ")", "\n", "\n", "# Focal length rescaling", "\n", "_", ",", "_", ",", "hh", ",", "ww", "=", "example_dict", "[", "\"input_l1\"", "]", ".", "size", "(", ")", "\n", "sy", "=", "self", ".", "_imgsize", "[", "0", "]", "/", "hh", "\n", "sx", "=", "self", ".", "_imgsize", "[", "1", "]", "/", "ww", "\n", "\n", "k_l1", "=", "_intrinsic_scale", "(", "example_dict", "[", "\"input_k_l1\"", "]", ",", "sx", ",", "sy", ")", "\n", "k_l2", "=", "_intrinsic_scale", "(", "example_dict", "[", "\"input_k_l2\"", "]", ",", "sx", ",", "sy", ")", "\n", "k_r1", "=", "_intrinsic_scale", "(", "example_dict", "[", "\"input_k_r1\"", "]", ",", "sx", ",", "sy", ")", "\n", "k_r2", "=", "_intrinsic_scale", "(", "example_dict", "[", "\"input_k_r2\"", "]", ",", "sx", ",", "sy", ")", "\n", "\n", "if", "self", ".", "_photometric", "and", "torch", ".", "rand", "(", "1", ")", ">", "0.5", ":", "\n", "            ", "im_l1", ",", "im_l2", ",", "im_r1", ",", "im_r2", "=", "self", ".", "_photo_augmentation", "(", "im_l1", ",", "im_l2", ",", "im_r1", ",", "im_r2", ")", "\n", "\n", "", "example_dict", "[", "\"input_l1_aug\"", "]", "=", "im_l1", "\n", "example_dict", "[", "\"input_l2_aug\"", "]", "=", "im_l2", "\n", "example_dict", "[", "\"input_r1_aug\"", "]", "=", "im_r1", "\n", "example_dict", "[", "\"input_r2_aug\"", "]", "=", "im_r2", "\n", "\n", "example_dict", "[", "\"input_k_l1_aug\"", "]", "=", "k_l1", "\n", "example_dict", "[", "\"input_k_l2_aug\"", "]", "=", "k_l2", "\n", "example_dict", "[", "\"input_k_r1_aug\"", "]", "=", "k_r1", "\n", "example_dict", "[", "\"input_k_r2_aug\"", "]", "=", "k_r2", "\n", "\n", "k_l1_flip", "=", "k_l1", ".", "clone", "(", ")", "\n", "k_l2_flip", "=", "k_l2", ".", "clone", "(", ")", "\n", "k_r1_flip", "=", "k_r1", ".", "clone", "(", ")", "\n", "k_r2_flip", "=", "k_r2", ".", "clone", "(", ")", "\n", "k_l1_flip", "[", ":", ",", "0", ",", "2", "]", "=", "im_l1", ".", "size", "(", "3", ")", "-", "k_l1_flip", "[", ":", ",", "0", ",", "2", "]", "\n", "k_l2_flip", "[", ":", ",", "0", ",", "2", "]", "=", "im_l2", ".", "size", "(", "3", ")", "-", "k_l2_flip", "[", ":", ",", "0", ",", "2", "]", "\n", "k_r1_flip", "[", ":", ",", "0", ",", "2", "]", "=", "im_r1", ".", "size", "(", "3", ")", "-", "k_r1_flip", "[", ":", ",", "0", ",", "2", "]", "\n", "k_r2_flip", "[", ":", ",", "0", ",", "2", "]", "=", "im_r2", ".", "size", "(", "3", ")", "-", "k_r2_flip", "[", ":", ",", "0", ",", "2", "]", "\n", "example_dict", "[", "\"input_k_l1_flip_aug\"", "]", "=", "k_l1_flip", "\n", "example_dict", "[", "\"input_k_l2_flip_aug\"", "]", "=", "k_l2_flip", "\n", "example_dict", "[", "\"input_k_r1_flip_aug\"", "]", "=", "k_r1_flip", "\n", "example_dict", "[", "\"input_k_r2_flip_aug\"", "]", "=", "k_r2_flip", "\n", "\n", "aug_size", "=", "torch", ".", "zeros_like", "(", "example_dict", "[", "\"input_size\"", "]", ")", "\n", "aug_size", "[", ":", ",", "0", "]", "=", "self", ".", "_imgsize", "[", "0", "]", "\n", "aug_size", "[", ":", ",", "1", "]", "=", "self", ".", "_imgsize", "[", "1", "]", "\n", "example_dict", "[", "\"aug_size\"", "]", "=", "aug_size", "\n", "\n", "return", "example_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_Resize_Only.__init__": [[571, 580], ["torch.Module.__init__", "augmentations.PhotometricAugmentation"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "photometric", "=", "False", ",", "imgsize", "=", "[", "256", ",", "832", "]", ")", ":", "\n", "        ", "super", "(", "Augmentation_Resize_Only", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# init", "\n", "self", ".", "_args", "=", "args", "\n", "self", ".", "_imgsize", "=", "imgsize", "\n", "self", ".", "_isRight", "=", "False", "\n", "self", ".", "_photometric", "=", "photometric", "\n", "self", ".", "_photo_augmentation", "=", "PhotometricAugmentation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations.Augmentation_Resize_Only.forward": [[581, 643], ["example_dict[].size", "utils.interpolation.interpolate2d", "utils.interpolation.interpolate2d", "augmentations._intrinsic_scale", "augmentations._intrinsic_scale", "_intrinsic_scale.clone", "_intrinsic_scale.clone", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "utils.interpolation.interpolate2d", "utils.interpolation.interpolate2d", "augmentations._intrinsic_scale", "augmentations._intrinsic_scale", "utils.interpolation.interpolate2d.size", "utils.interpolation.interpolate2d.size", "_intrinsic_scale.clone", "_intrinsic_scale.clone", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "augmentations.Augmentation_Resize_Only._photo_augmentation", "augmentations.Augmentation_Resize_Only._photo_augmentation", "utils.interpolation.interpolate2d.size", "utils.interpolation.interpolate2d.size"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.interpolate2d", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.interpolate2d", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._intrinsic_scale", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._intrinsic_scale", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.interpolate2d", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.interpolate2d", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._intrinsic_scale", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._intrinsic_scale"], ["", "def", "forward", "(", "self", ",", "example_dict", ")", ":", "\n", "\n", "        ", "if", "(", "'input_r1'", "in", "example_dict", ")", "and", "(", "'input_r2'", "in", "example_dict", ")", ":", "\n", "            ", "self", ".", "_isRight", "=", "True", "\n", "\n", "# Focal length rescaling", "\n", "", "_", ",", "_", ",", "hh", ",", "ww", "=", "example_dict", "[", "\"input_l1\"", "]", ".", "size", "(", ")", "\n", "sy", "=", "self", ".", "_imgsize", "[", "0", "]", "/", "hh", "\n", "sx", "=", "self", ".", "_imgsize", "[", "1", "]", "/", "ww", "\n", "\n", "# Image resizing", "\n", "im_l1", "=", "interpolate2d", "(", "example_dict", "[", "\"input_l1\"", "]", ",", "self", ".", "_imgsize", ")", "\n", "im_l2", "=", "interpolate2d", "(", "example_dict", "[", "\"input_l2\"", "]", ",", "self", ".", "_imgsize", ")", "\n", "k_l1", "=", "_intrinsic_scale", "(", "example_dict", "[", "\"input_k_l1\"", "]", ",", "sx", ",", "sy", ")", "\n", "k_l2", "=", "_intrinsic_scale", "(", "example_dict", "[", "\"input_k_l2\"", "]", ",", "sx", ",", "sy", ")", "\n", "\n", "if", "self", ".", "_isRight", ":", "\n", "            ", "im_r1", "=", "interpolate2d", "(", "example_dict", "[", "\"input_r1\"", "]", ",", "self", ".", "_imgsize", ")", "\n", "im_r2", "=", "interpolate2d", "(", "example_dict", "[", "\"input_r2\"", "]", ",", "self", ".", "_imgsize", ")", "\n", "k_r1", "=", "_intrinsic_scale", "(", "example_dict", "[", "\"input_k_r1\"", "]", ",", "sx", ",", "sy", ")", "\n", "k_r2", "=", "_intrinsic_scale", "(", "example_dict", "[", "\"input_k_r2\"", "]", ",", "sx", ",", "sy", ")", "\n", "\n", "\n", "", "if", "self", ".", "_photometric", "and", "torch", ".", "rand", "(", "1", ")", ">", "0.5", ":", "\n", "            ", "if", "self", ".", "_isRight", ":", "\n", "                ", "im_l1", ",", "im_l2", ",", "im_r1", ",", "im_r2", "=", "self", ".", "_photo_augmentation", "(", "im_l1", ",", "im_l2", ",", "im_r1", ",", "im_r2", ")", "\n", "", "else", ":", "\n", "                ", "im_l1", ",", "im_l2", "=", "self", ".", "_photo_augmentation", "(", "im_l1", ",", "im_l2", ")", "\n", "\n", "\n", "", "", "example_dict", "[", "\"input_l1_aug\"", "]", "=", "im_l1", "\n", "example_dict", "[", "\"input_l2_aug\"", "]", "=", "im_l2", "\n", "example_dict", "[", "\"input_k_l1_aug\"", "]", "=", "k_l1", "\n", "example_dict", "[", "\"input_k_l2_aug\"", "]", "=", "k_l2", "\n", "\n", "if", "self", ".", "_isRight", ":", "\n", "            ", "example_dict", "[", "\"input_r1_aug\"", "]", "=", "im_r1", "\n", "example_dict", "[", "\"input_r2_aug\"", "]", "=", "im_r2", "\n", "example_dict", "[", "\"input_k_r1_aug\"", "]", "=", "k_r1", "\n", "example_dict", "[", "\"input_k_r2_aug\"", "]", "=", "k_r2", "\n", "\n", "", "k_l1_flip", "=", "k_l1", ".", "clone", "(", ")", "\n", "k_l2_flip", "=", "k_l2", ".", "clone", "(", ")", "\n", "k_l1_flip", "[", ":", ",", "0", ",", "2", "]", "=", "im_l1", ".", "size", "(", "3", ")", "-", "k_l1_flip", "[", ":", ",", "0", ",", "2", "]", "\n", "k_l2_flip", "[", ":", ",", "0", ",", "2", "]", "=", "im_l2", ".", "size", "(", "3", ")", "-", "k_l2_flip", "[", ":", ",", "0", ",", "2", "]", "\n", "example_dict", "[", "\"input_k_l1_flip_aug\"", "]", "=", "k_l1_flip", "\n", "example_dict", "[", "\"input_k_l2_flip_aug\"", "]", "=", "k_l2_flip", "\n", "\n", "if", "self", ".", "_isRight", ":", "\n", "            ", "k_r1_flip", "=", "k_r1", ".", "clone", "(", ")", "\n", "k_r2_flip", "=", "k_r2", ".", "clone", "(", ")", "\n", "k_r1_flip", "[", ":", ",", "0", ",", "2", "]", "=", "im_r1", ".", "size", "(", "3", ")", "-", "k_r1_flip", "[", ":", ",", "0", ",", "2", "]", "\n", "k_r2_flip", "[", ":", ",", "0", ",", "2", "]", "=", "im_r2", ".", "size", "(", "3", ")", "-", "k_r2_flip", "[", ":", ",", "0", ",", "2", "]", "\n", "example_dict", "[", "\"input_k_r1_flip_aug\"", "]", "=", "k_r1_flip", "\n", "example_dict", "[", "\"input_k_r2_flip_aug\"", "]", "=", "k_r2_flip", "\n", "\n", "", "aug_size", "=", "torch", ".", "zeros_like", "(", "example_dict", "[", "\"input_size\"", "]", ")", "\n", "aug_size", "[", ":", ",", "0", "]", "=", "self", ".", "_imgsize", "[", "0", "]", "\n", "aug_size", "[", ":", ",", "1", "]", "=", "self", ".", "_imgsize", "[", "1", "]", "\n", "example_dict", "[", "\"aug_size\"", "]", "=", "aug_size", "\n", "\n", "return", "example_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._intrinsic_scale": [[86, 93], ["intrinsic.clone"], "function", ["None"], ["", "", "def", "_intrinsic_scale", "(", "intrinsic", ",", "sx", ",", "sy", ")", ":", "\n", "    ", "out", "=", "intrinsic", ".", "clone", "(", ")", "\n", "out", "[", ":", ",", "0", ",", "0", "]", "*=", "sx", "\n", "out", "[", ":", ",", "0", ",", "2", "]", "*=", "sx", "\n", "out", "[", ":", ",", "1", ",", "1", "]", "*=", "sy", "\n", "out", "[", ":", ",", "1", ",", "2", "]", "*=", "sy", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.augmentations._intrinsic_crop": [[95, 100], ["intrinsic.clone"], "function", ["None"], ["", "def", "_intrinsic_crop", "(", "intrinsic", ",", "str_x", ",", "str_y", ")", ":", "\n", "    ", "out", "=", "intrinsic", ".", "clone", "(", ")", "\n", "out", "[", ":", ",", "0", ",", "2", "]", "-=", "str_x", "\n", "out", "[", ":", ",", "1", ",", "2", "]", "-=", "str_y", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup.__init__": [[158, 166], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "Loss_SceneFlow_SelfSup", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_weights", "=", "[", "4.0", ",", "2.0", ",", "1.0", ",", "1.0", ",", "1.0", "]", "\n", "self", ".", "_ssim_w", "=", "0.85", "\n", "self", ".", "_disp_smooth_w", "=", "0.1", "\n", "self", ".", "_sf_3d_pts", "=", "0.2", "\n", "self", ".", "_sf_3d_sm", "=", "200", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup.depth_loss_left_img": [[167, 181], ["losses._generate_image_left", "_adaptive_disocc_detection_disp().detach", "img_diff[].mean", "img_diff[].detach_", "_smoothness_motion_2nd().mean", "losses._adaptive_disocc_detection_disp", "losses._smoothness_motion_2nd", "losses._elementwise_l1", "losses._SSIM"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._generate_image_left", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._adaptive_disocc_detection_disp", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM"], ["", "def", "depth_loss_left_img", "(", "self", ",", "disp_l", ",", "disp_r", ",", "img_l_aug", ",", "img_r_aug", ",", "ii", ")", ":", "\n", "\n", "        ", "img_r_warp", "=", "_generate_image_left", "(", "img_r_aug", ",", "disp_l", ")", "\n", "left_occ", "=", "_adaptive_disocc_detection_disp", "(", "disp_r", ")", ".", "detach", "(", ")", "\n", "\n", "## Photometric loss", "\n", "img_diff", "=", "(", "_elementwise_l1", "(", "img_l_aug", ",", "img_r_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l_aug", ",", "img_r_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "loss_img", "=", "(", "img_diff", "[", "left_occ", "]", ")", ".", "mean", "(", ")", "\n", "img_diff", "[", "~", "left_occ", "]", ".", "detach_", "(", ")", "\n", "\n", "## Disparities smoothness", "\n", "loss_smooth", "=", "_smoothness_motion_2nd", "(", "disp_l", ",", "img_l_aug", ",", "beta", "=", "10.0", ")", ".", "mean", "(", ")", "/", "(", "2", "**", "ii", ")", "\n", "\n", "return", "loss_img", "+", "self", ".", "_disp_smooth_w", "*", "loss_smooth", ",", "left_occ", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup.sceneflow_loss": [[183, 238], ["sf_f.size", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "utils.sceneflow_util.pixel2pts_ms", "utils.sceneflow_util.pixel2pts_ms", "utils.sceneflow_util.pts2pixel_ms", "utils.sceneflow_util.pts2pixel_ms", "utils.sceneflow_util.reconstructPts", "utils.sceneflow_util.reconstructPts", "utils.sceneflow_util.projectSceneFlow2Flow", "utils.sceneflow_util.projectSceneFlow2Flow", "utils.sceneflow_util.reconstructImg", "utils.sceneflow_util.reconstructImg", "img_diff1[].mean", "img_diff2[].mean", "img_diff1[].detach_", "img_diff2[].detach_", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "pts_diff1[].mean", "pts_diff2[].mean", "pts_diff1[].detach_", "pts_diff2[].detach_", "_adaptive_disocc_detection().detach", "_adaptive_disocc_detection().detach", "_elementwise_epe().mean", "_elementwise_epe().mean", "losses._adaptive_disocc_detection", "losses._adaptive_disocc_detection", "losses._elementwise_epe", "losses._elementwise_epe", "losses._elementwise_l1", "losses._SSIM", "losses._elementwise_l1", "losses._SSIM", "losses._smoothness_motion_2nd", "losses._smoothness_motion_2nd"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pts2pixel_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pts2pixel_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.reconstructPts", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.reconstructPts", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.projectSceneFlow2Flow", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.projectSceneFlow2Flow", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.reconstructImg", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.reconstructImg", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._adaptive_disocc_detection", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._adaptive_disocc_detection", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_epe", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_epe", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd"], ["", "def", "sceneflow_loss", "(", "self", ",", "sf_f", ",", "sf_b", ",", "disp_l1", ",", "disp_l2", ",", "disp_occ_l1", ",", "disp_occ_l2", ",", "k_l1_aug", ",", "k_l2_aug", ",", "img_l1_aug", ",", "img_l2_aug", ",", "aug_size", ",", "ii", ")", ":", "\n", "\n", "        ", "_", ",", "_", ",", "h_dp", ",", "w_dp", "=", "sf_f", ".", "size", "(", ")", "\n", "disp_l1", "=", "disp_l1", "*", "w_dp", "\n", "disp_l2", "=", "disp_l2", "*", "w_dp", "\n", "\n", "## scale", "\n", "local_scale", "=", "torch", ".", "zeros_like", "(", "aug_size", ")", "\n", "local_scale", "[", ":", ",", "0", "]", "=", "h_dp", "\n", "local_scale", "[", ":", ",", "1", "]", "=", "w_dp", "\n", "\n", "pts1", ",", "k1_scale", "=", "pixel2pts_ms", "(", "k_l1_aug", ",", "disp_l1", ",", "local_scale", "/", "aug_size", ")", "\n", "pts2", ",", "k2_scale", "=", "pixel2pts_ms", "(", "k_l2_aug", ",", "disp_l2", ",", "local_scale", "/", "aug_size", ")", "\n", "\n", "_", ",", "pts1_tf", ",", "coord1", "=", "pts2pixel_ms", "(", "k1_scale", ",", "pts1", ",", "sf_f", ",", "[", "h_dp", ",", "w_dp", "]", ")", "\n", "_", ",", "pts2_tf", ",", "coord2", "=", "pts2pixel_ms", "(", "k2_scale", ",", "pts2", ",", "sf_b", ",", "[", "h_dp", ",", "w_dp", "]", ")", "\n", "\n", "pts2_warp", "=", "reconstructPts", "(", "coord1", ",", "pts2", ")", "\n", "pts1_warp", "=", "reconstructPts", "(", "coord2", ",", "pts1", ")", "\n", "\n", "flow_f", "=", "projectSceneFlow2Flow", "(", "k1_scale", ",", "sf_f", ",", "disp_l1", ")", "\n", "flow_b", "=", "projectSceneFlow2Flow", "(", "k2_scale", ",", "sf_b", ",", "disp_l2", ")", "\n", "occ_map_b", "=", "_adaptive_disocc_detection", "(", "flow_f", ")", ".", "detach", "(", ")", "*", "disp_occ_l2", "\n", "occ_map_f", "=", "_adaptive_disocc_detection", "(", "flow_b", ")", ".", "detach", "(", ")", "*", "disp_occ_l1", "\n", "\n", "## Image reconstruction loss", "\n", "img_l2_warp", "=", "reconstructImg", "(", "coord1", ",", "img_l2_aug", ")", "\n", "img_l1_warp", "=", "reconstructImg", "(", "coord2", ",", "img_l1_aug", ")", "\n", "\n", "img_diff1", "=", "(", "_elementwise_l1", "(", "img_l1_aug", ",", "img_l2_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l1_aug", ",", "img_l2_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "img_diff2", "=", "(", "_elementwise_l1", "(", "img_l2_aug", ",", "img_l1_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l2_aug", ",", "img_l1_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "loss_im1", "=", "img_diff1", "[", "occ_map_f", "]", ".", "mean", "(", ")", "\n", "loss_im2", "=", "img_diff2", "[", "occ_map_b", "]", ".", "mean", "(", ")", "\n", "img_diff1", "[", "~", "occ_map_f", "]", ".", "detach_", "(", ")", "\n", "img_diff2", "[", "~", "occ_map_b", "]", ".", "detach_", "(", ")", "\n", "loss_im", "=", "loss_im1", "+", "loss_im2", "\n", "\n", "## Point reconstruction Loss", "\n", "pts_norm1", "=", "torch", ".", "norm", "(", "pts1", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "pts_norm2", "=", "torch", ".", "norm", "(", "pts2", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "pts_diff1", "=", "_elementwise_epe", "(", "pts1_tf", ",", "pts2_warp", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "/", "(", "pts_norm1", "+", "1e-8", ")", "\n", "pts_diff2", "=", "_elementwise_epe", "(", "pts2_tf", ",", "pts1_warp", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "/", "(", "pts_norm2", "+", "1e-8", ")", "\n", "loss_pts1", "=", "pts_diff1", "[", "occ_map_f", "]", ".", "mean", "(", ")", "\n", "loss_pts2", "=", "pts_diff2", "[", "occ_map_b", "]", ".", "mean", "(", ")", "\n", "pts_diff1", "[", "~", "occ_map_f", "]", ".", "detach_", "(", ")", "\n", "pts_diff2", "[", "~", "occ_map_b", "]", ".", "detach_", "(", ")", "\n", "loss_pts", "=", "loss_pts1", "+", "loss_pts2", "\n", "\n", "## 3D motion smoothness loss", "\n", "loss_3d_s", "=", "(", "(", "_smoothness_motion_2nd", "(", "sf_f", ",", "img_l1_aug", ",", "beta", "=", "10.0", ")", "/", "(", "pts_norm1", "+", "1e-8", ")", ")", ".", "mean", "(", ")", "+", "(", "_smoothness_motion_2nd", "(", "sf_b", ",", "img_l2_aug", ",", "beta", "=", "10.0", ")", "/", "(", "pts_norm2", "+", "1e-8", ")", ")", ".", "mean", "(", ")", ")", "/", "(", "2", "**", "ii", ")", "\n", "\n", "## Loss Summnation", "\n", "sceneflow_loss", "=", "loss_im", "+", "self", ".", "_sf_3d_pts", "*", "loss_pts", "+", "self", ".", "_sf_3d_sm", "*", "loss_3d_s", "\n", "\n", "return", "sceneflow_loss", ",", "loss_im", ",", "loss_pts", ",", "loss_3d_s", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup.detaching_grad_of_outputs": [[239, 248], ["range", "len", "[].detach_", "[].detach_", "[].detach_", "[].detach_"], "methods", ["None"], ["", "def", "detaching_grad_of_outputs", "(", "self", ",", "output_dict", ")", ":", "\n", "\n", "        ", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict", "[", "'flow_f'", "]", ")", ")", ":", "\n", "            ", "output_dict", "[", "'flow_f'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "output_dict", "[", "'flow_b'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "output_dict", "[", "'disp_l1'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "output_dict", "[", "'disp_l2'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup.forward": [[249, 318], ["target_dict[].size", "enumerate", "loss_sf_sum.detach", "loss_dp_sum.detach", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "losses.Loss_SceneFlow_SelfSup.detaching_grad_of_outputs", "zip", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "losses.Loss_SceneFlow_SelfSup.depth_loss_left_img", "losses.Loss_SceneFlow_SelfSup.depth_loss_left_img", "losses.Loss_SceneFlow_SelfSup.sceneflow_loss", "sf_f.size", "sf_b.size", "sf_f.size", "disp_l1.size", "sf_f.size", "disp_l2.size"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.detaching_grad_of_outputs", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.depth_loss_left_img", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.depth_loss_left_img", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoPtsNoOcc.sceneflow_loss"], ["", "def", "forward", "(", "self", ",", "output_dict", ",", "target_dict", ")", ":", "\n", "\n", "        ", "loss_dict", "=", "{", "}", "\n", "\n", "batch_size", "=", "target_dict", "[", "'input_l1'", "]", ".", "size", "(", "0", ")", "\n", "loss_sf_sum", "=", "0", "\n", "loss_dp_sum", "=", "0", "\n", "loss_sf_2d", "=", "0", "\n", "loss_sf_3d", "=", "0", "\n", "loss_sf_sm", "=", "0", "\n", "\n", "k_l1_aug", "=", "target_dict", "[", "'input_k_l1_aug'", "]", "\n", "k_l2_aug", "=", "target_dict", "[", "'input_k_l2_aug'", "]", "\n", "aug_size", "=", "target_dict", "[", "'aug_size'", "]", "\n", "\n", "disp_r1_dict", "=", "output_dict", "[", "'output_dict_r'", "]", "[", "'disp_l1'", "]", "\n", "disp_r2_dict", "=", "output_dict", "[", "'output_dict_r'", "]", "[", "'disp_l2'", "]", "\n", "\n", "for", "ii", ",", "(", "sf_f", ",", "sf_b", ",", "disp_l1", ",", "disp_l2", ",", "disp_r1", ",", "disp_r2", ")", "in", "enumerate", "(", "zip", "(", "output_dict", "[", "'flow_f'", "]", ",", "output_dict", "[", "'flow_b'", "]", ",", "output_dict", "[", "'disp_l1'", "]", ",", "output_dict", "[", "'disp_l2'", "]", ",", "disp_r1_dict", ",", "disp_r2_dict", ")", ")", ":", "\n", "\n", "            ", "assert", "(", "sf_f", ".", "size", "(", ")", "[", "2", ":", "4", "]", "==", "sf_b", ".", "size", "(", ")", "[", "2", ":", "4", "]", ")", "\n", "assert", "(", "sf_f", ".", "size", "(", ")", "[", "2", ":", "4", "]", "==", "disp_l1", ".", "size", "(", ")", "[", "2", ":", "4", "]", ")", "\n", "assert", "(", "sf_f", ".", "size", "(", ")", "[", "2", ":", "4", "]", "==", "disp_l2", ".", "size", "(", ")", "[", "2", ":", "4", "]", ")", "\n", "\n", "## For image reconstruction loss", "\n", "img_l1_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_l1_aug\"", "]", ",", "sf_f", ")", "\n", "img_l2_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_l2_aug\"", "]", ",", "sf_b", ")", "\n", "img_r1_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_r1_aug\"", "]", ",", "sf_f", ")", "\n", "img_r2_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_r2_aug\"", "]", ",", "sf_b", ")", "\n", "\n", "## Disp Loss", "\n", "loss_disp_l1", ",", "disp_occ_l1", "=", "self", ".", "depth_loss_left_img", "(", "disp_l1", ",", "disp_r1", ",", "img_l1_aug", ",", "img_r1_aug", ",", "ii", ")", "\n", "loss_disp_l2", ",", "disp_occ_l2", "=", "self", ".", "depth_loss_left_img", "(", "disp_l2", ",", "disp_r2", ",", "img_l2_aug", ",", "img_r2_aug", ",", "ii", ")", "\n", "loss_dp_sum", "=", "loss_dp_sum", "+", "(", "loss_disp_l1", "+", "loss_disp_l2", ")", "*", "self", ".", "_weights", "[", "ii", "]", "\n", "\n", "\n", "## Sceneflow Loss           ", "\n", "loss_sceneflow", ",", "loss_im", ",", "loss_pts", ",", "loss_3d_s", "=", "self", ".", "sceneflow_loss", "(", "sf_f", ",", "sf_b", ",", "\n", "disp_l1", ",", "disp_l2", ",", "\n", "disp_occ_l1", ",", "disp_occ_l2", ",", "\n", "k_l1_aug", ",", "k_l2_aug", ",", "\n", "img_l1_aug", ",", "img_l2_aug", ",", "\n", "aug_size", ",", "ii", ")", "\n", "\n", "loss_sf_sum", "=", "loss_sf_sum", "+", "loss_sceneflow", "*", "self", ".", "_weights", "[", "ii", "]", "\n", "loss_sf_2d", "=", "loss_sf_2d", "+", "loss_im", "\n", "loss_sf_3d", "=", "loss_sf_3d", "+", "loss_pts", "\n", "loss_sf_sm", "=", "loss_sf_sm", "+", "loss_3d_s", "\n", "\n", "# finding weight", "\n", "", "f_loss", "=", "loss_sf_sum", ".", "detach", "(", ")", "\n", "d_loss", "=", "loss_dp_sum", ".", "detach", "(", ")", "\n", "max_val", "=", "torch", ".", "max", "(", "f_loss", ",", "d_loss", ")", "\n", "f_weight", "=", "max_val", "/", "f_loss", "\n", "d_weight", "=", "max_val", "/", "d_loss", "\n", "\n", "total_loss", "=", "loss_sf_sum", "*", "f_weight", "+", "loss_dp_sum", "*", "d_weight", "\n", "\n", "loss_dict", "=", "{", "}", "\n", "loss_dict", "[", "\"dp\"", "]", "=", "loss_dp_sum", "\n", "loss_dict", "[", "\"sf\"", "]", "=", "loss_sf_sum", "\n", "loss_dict", "[", "\"s_2\"", "]", "=", "loss_sf_2d", "\n", "loss_dict", "[", "\"s_3\"", "]", "=", "loss_sf_3d", "\n", "loss_dict", "[", "\"s_3s\"", "]", "=", "loss_sf_sm", "\n", "loss_dict", "[", "\"total_loss\"", "]", "=", "total_loss", "\n", "\n", "self", ".", "detaching_grad_of_outputs", "(", "output_dict", "[", "'output_dict_r'", "]", ")", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SemiSupFinetune.__init__": [[321, 326], ["torch.Module.__init__", "losses.Loss_SceneFlow_SelfSup"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "Loss_SceneFlow_SemiSupFinetune", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_weights", "=", "[", "4.0", ",", "2.0", ",", "1.0", ",", "1.0", ",", "1.0", "]", "\n", "self", ".", "_unsup_loss", "=", "Loss_SceneFlow_SelfSup", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SemiSupFinetune.forward": [[328, 395], ["losses.Loss_SceneFlow_SemiSupFinetune._unsup_loss", "gt_disp1.size", "enumerate", "unsup_loss.detach", "disp_loss.detach", "flow_loss.detach", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "valid_abs_rel[].detach_", "valid_abs_rel[].mean", "utils.interpolation.interpolate2d_as", "utils.sceneflow_util.projectSceneFlow2Flow", "valid_epe[].detach_", "valid_epe[].mean", "losses._disp2depth_kitti_K", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "losses._depth2disp_kitti_K", "valid_abs_rel[].detach_", "valid_abs_rel[].mean", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "utils.interpolation.interpolate2d_as", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "losses._elementwise_robust_epe_char", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.projectSceneFlow2Flow", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._disp2depth_kitti_K", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._depth2disp_kitti_K", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_robust_epe_char"], ["", "def", "forward", "(", "self", ",", "output_dict", ",", "target_dict", ")", ":", "\n", "\n", "        ", "loss_dict", "=", "{", "}", "\n", "\n", "unsup_loss_dict", "=", "self", ".", "_unsup_loss", "(", "output_dict", ",", "target_dict", ")", "\n", "unsup_loss", "=", "unsup_loss_dict", "[", "'total_loss'", "]", "\n", "\n", "## Ground Truth", "\n", "gt_disp1", "=", "target_dict", "[", "'target_disp'", "]", "\n", "gt_disp1_mask", "=", "(", "target_dict", "[", "'target_disp_mask'", "]", "==", "1", ")", ".", "float", "(", ")", "\n", "gt_disp2", "=", "target_dict", "[", "'target_disp2_occ'", "]", "\n", "gt_disp2_mask", "=", "(", "target_dict", "[", "'target_disp2_mask_occ'", "]", "==", "1", ")", ".", "float", "(", ")", "\n", "gt_flow", "=", "target_dict", "[", "'target_flow'", "]", "\n", "gt_flow_mask", "=", "(", "target_dict", "[", "'target_flow_mask'", "]", "==", "1", ")", ".", "float", "(", ")", "\n", "\n", "b", ",", "_", ",", "h_dp", ",", "w_dp", "=", "gt_disp1", ".", "size", "(", ")", "\n", "\n", "disp_loss", "=", "0", "\n", "flow_loss", "=", "0", "\n", "\n", "for", "ii", ",", "sf_f", "in", "enumerate", "(", "output_dict", "[", "'flow_f_pp'", "]", ")", ":", "\n", "\n", "## disp1", "\n", "            ", "disp_l1", "=", "interpolate2d_as", "(", "output_dict", "[", "\"disp_l1_pp\"", "]", "[", "ii", "]", ",", "gt_disp1", ",", "mode", "=", "\"bilinear\"", ")", "*", "w_dp", "\n", "valid_abs_rel", "=", "torch", ".", "abs", "(", "gt_disp1", "-", "disp_l1", ")", "*", "gt_disp1_mask", "\n", "valid_abs_rel", "[", "gt_disp1_mask", "==", "0", "]", ".", "detach_", "(", ")", "\n", "disp_l1_loss", "=", "valid_abs_rel", "[", "gt_disp1_mask", "!=", "0", "]", ".", "mean", "(", ")", "\n", "\n", "## Flow Loss", "\n", "sf_f_up", "=", "interpolate2d_as", "(", "sf_f", ",", "gt_flow", ",", "mode", "=", "\"bilinear\"", ")", "\n", "out_flow", "=", "projectSceneFlow2Flow", "(", "target_dict", "[", "'input_k_l1'", "]", ",", "sf_f_up", ",", "disp_l1", ")", "\n", "valid_epe", "=", "_elementwise_robust_epe_char", "(", "out_flow", ",", "gt_flow", ")", "*", "gt_flow_mask", "\n", "\n", "valid_epe", "[", "gt_flow_mask", "==", "0", "]", ".", "detach_", "(", ")", "\n", "flow_l1_loss", "=", "valid_epe", "[", "gt_flow_mask", "!=", "0", "]", ".", "mean", "(", ")", "\n", "\n", "## disp1_next", "\n", "out_depth_l1", "=", "_disp2depth_kitti_K", "(", "disp_l1", ",", "target_dict", "[", "'input_k_l1'", "]", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "out_depth_l1", "=", "torch", ".", "clamp", "(", "out_depth_l1", ",", "1e-3", ",", "80", ")", "\n", "out_depth_l1_next", "=", "out_depth_l1", "+", "sf_f_up", "[", ":", ",", "2", ":", "3", ",", ":", ",", ":", "]", "\n", "disp_l1_next", "=", "_depth2disp_kitti_K", "(", "out_depth_l1_next", ",", "target_dict", "[", "'input_k_l1'", "]", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "\n", "valid_abs_rel", "=", "torch", ".", "abs", "(", "gt_disp2", "-", "disp_l1_next", ")", "*", "gt_disp2_mask", "\n", "valid_abs_rel", "[", "gt_disp2_mask", "==", "0", "]", ".", "detach_", "(", ")", "\n", "disp_l2_loss", "=", "valid_abs_rel", "[", "gt_disp2_mask", "!=", "0", "]", ".", "mean", "(", ")", "\n", "\n", "disp_loss", "=", "disp_loss", "+", "(", "disp_l1_loss", "+", "disp_l2_loss", ")", "*", "self", ".", "_weights", "[", "ii", "]", "\n", "flow_loss", "=", "flow_loss", "+", "flow_l1_loss", "*", "self", ".", "_weights", "[", "ii", "]", "\n", "\n", "# finding weight", "\n", "", "u_loss", "=", "unsup_loss", ".", "detach", "(", ")", "\n", "d_loss", "=", "disp_loss", ".", "detach", "(", ")", "\n", "f_loss", "=", "flow_loss", ".", "detach", "(", ")", "\n", "\n", "max_val", "=", "torch", ".", "max", "(", "torch", ".", "max", "(", "f_loss", ",", "d_loss", ")", ",", "u_loss", ")", "\n", "\n", "u_weight", "=", "max_val", "/", "u_loss", "\n", "d_weight", "=", "max_val", "/", "d_loss", "\n", "f_weight", "=", "max_val", "/", "f_loss", "\n", "\n", "total_loss", "=", "unsup_loss", "*", "u_weight", "+", "disp_loss", "*", "d_weight", "+", "flow_loss", "*", "f_weight", "\n", "loss_dict", "[", "\"unsup_loss\"", "]", "=", "unsup_loss", "\n", "loss_dict", "[", "\"dp_loss\"", "]", "=", "disp_loss", "\n", "loss_dict", "[", "\"fl_loss\"", "]", "=", "flow_loss", "\n", "loss_dict", "[", "\"total_loss\"", "]", "=", "total_loss", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Eval_MonoDepth_Eigen.__init__": [[428, 430], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Eval_MonoDepth_Eigen", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Eval_MonoDepth_Eigen.forward": [[431, 457], ["losses._disp2depth_kitti_K", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "utils.monodepth_eval.compute_errors", "utils.interpolation.interpolate2d_as", "gt_depth.size"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._disp2depth_kitti_K", "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.compute_errors", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as"], ["", "def", "forward", "(", "self", ",", "output_dict", ",", "target_dict", ")", ":", "\n", "\n", "        ", "loss_dict", "=", "{", "}", "\n", "\n", "## Depth Eval", "\n", "gt_depth", "=", "target_dict", "[", "'target_depth'", "]", "\n", "\n", "out_disp_l1", "=", "interpolate2d_as", "(", "output_dict", "[", "\"disp_l1_pp\"", "]", "[", "0", "]", ",", "gt_depth", ",", "mode", "=", "\"bilinear\"", ")", "*", "gt_depth", ".", "size", "(", "3", ")", "\n", "out_depth_l1", "=", "_disp2depth_kitti_K", "(", "out_disp_l1", ",", "target_dict", "[", "'input_k_l1'", "]", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "out_depth_l1", "=", "torch", ".", "clamp", "(", "out_depth_l1", ",", "1e-3", ",", "80", ")", "\n", "gt_depth_mask", "=", "(", "gt_depth", ">", "1e-3", ")", "*", "(", "gt_depth", "<", "80", ")", "\n", "\n", "## Compute metrics", "\n", "abs_rel", ",", "sq_rel", ",", "rms", ",", "log_rms", ",", "a1", ",", "a2", ",", "a3", "=", "compute_errors", "(", "gt_depth", "[", "gt_depth_mask", "]", ",", "out_depth_l1", "[", "gt_depth_mask", "]", ")", "\n", "\n", "output_dict", "[", "\"out_disp_l_pp\"", "]", "=", "out_disp_l1", "\n", "output_dict", "[", "\"out_depth_l_pp\"", "]", "=", "out_depth_l1", "\n", "loss_dict", "[", "\"ab_r\"", "]", "=", "abs_rel", "\n", "loss_dict", "[", "\"sq_r\"", "]", "=", "sq_rel", "\n", "loss_dict", "[", "\"rms\"", "]", "=", "rms", "\n", "loss_dict", "[", "\"log_rms\"", "]", "=", "log_rms", "\n", "loss_dict", "[", "\"a1\"", "]", "=", "a1", "\n", "loss_dict", "[", "\"a2\"", "]", "=", "a2", "\n", "loss_dict", "[", "\"a3\"", "]", "=", "a3", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Eval_SceneFlow_KITTI_Test.__init__": [[460, 462], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Eval_SceneFlow_KITTI_Test", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Eval_SceneFlow_KITTI_Test.forward": [[463, 495], ["losses._disp2depth_kitti_K", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "utils.interpolation.interpolate2d_as", "utils.sceneflow_util.projectSceneFlow2Flow", "losses._depth2disp_kitti_K", "utils.interpolation.interpolate2d_as", "input_l1.size"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._disp2depth_kitti_K", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.projectSceneFlow2Flow", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._depth2disp_kitti_K", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as"], ["", "def", "forward", "(", "self", ",", "output_dict", ",", "target_dict", ")", ":", "\n", "\n", "        ", "loss_dict", "=", "{", "}", "\n", "\n", "##################################################", "\n", "## Depth 1", "\n", "##################################################", "\n", "input_l1", "=", "target_dict", "[", "'input_l1'", "]", "\n", "intrinsics", "=", "target_dict", "[", "'input_k_l1'", "]", "\n", "\n", "out_disp_l1", "=", "interpolate2d_as", "(", "output_dict", "[", "\"disp_l1_pp\"", "]", "[", "0", "]", ",", "input_l1", ",", "mode", "=", "\"bilinear\"", ")", "*", "input_l1", ".", "size", "(", "3", ")", "\n", "out_depth_l1", "=", "_disp2depth_kitti_K", "(", "out_disp_l1", ",", "intrinsics", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "out_depth_l1", "=", "torch", ".", "clamp", "(", "out_depth_l1", ",", "1e-3", ",", "80", ")", "\n", "output_dict", "[", "\"out_disp_l_pp\"", "]", "=", "out_disp_l1", "\n", "\n", "##################################################", "\n", "## Optical Flow Eval", "\n", "##################################################", "\n", "out_sceneflow", "=", "interpolate2d_as", "(", "output_dict", "[", "'flow_f_pp'", "]", "[", "0", "]", ",", "input_l1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "out_flow", "=", "projectSceneFlow2Flow", "(", "target_dict", "[", "'input_k_l1'", "]", ",", "out_sceneflow", ",", "output_dict", "[", "\"out_disp_l_pp\"", "]", ")", "\n", "output_dict", "[", "\"out_flow_pp\"", "]", "=", "out_flow", "\n", "\n", "##################################################", "\n", "## Depth 2", "\n", "##################################################", "\n", "out_depth_l1_next", "=", "out_depth_l1", "+", "out_sceneflow", "[", ":", ",", "2", ":", "3", ",", ":", ",", ":", "]", "\n", "out_disp_l1_next", "=", "_depth2disp_kitti_K", "(", "out_depth_l1_next", ",", "intrinsics", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "output_dict", "[", "\"out_disp_l_pp_next\"", "]", "=", "out_disp_l1_next", "\n", "\n", "loss_dict", "[", "'sf'", "]", "=", "(", "out_disp_l1_next", "*", "0", ")", ".", "sum", "(", ")", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Eval_SceneFlow_KITTI_Train.__init__": [[498, 500], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "Eval_SceneFlow_KITTI_Train", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Eval_SceneFlow_KITTI_Train.forward": [[502, 582], ["gt_disp.size", "losses._disp2depth_kitti_K", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "losses._disp2depth_kitti_K", "losses.eval_module_disp_depth", "utils.interpolation.interpolate2d_as", "utils.sceneflow_util.projectSceneFlow2Flow", "losses._depth2disp_kitti_K", "losses._disp2depth_kitti_K", "losses.eval_module_disp_depth", "utils.interpolation.interpolate2d_as", "gt_disp_mask.bool", "losses._elementwise_epe", "valid_epe.view().sum().mean", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "flow_outlier_epe.view().sum().mean", "gt_disp2_mask.bool", "outlier_sf.view().sum().mean", "valid_epe.view().sum", "flow_outlier_epe.view().sum", "outlier_sf.view().sum", "d1_outlier_image.bool", "valid_epe.view", "flow_outlier_epe.view", "flow_outlier_epe.bool", "d0_outlier_image.bool", "outlier_sf.view"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._disp2depth_kitti_K", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._disp2depth_kitti_K", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.eval_module_disp_depth", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.projectSceneFlow2Flow", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._depth2disp_kitti_K", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._disp2depth_kitti_K", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.eval_module_disp_depth", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_epe", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean"], ["", "def", "forward", "(", "self", ",", "output_dict", ",", "target_dict", ")", ":", "\n", "\n", "        ", "loss_dict", "=", "{", "}", "\n", "\n", "gt_flow", "=", "target_dict", "[", "'target_flow'", "]", "\n", "gt_flow_mask", "=", "(", "target_dict", "[", "'target_flow_mask'", "]", "==", "1", ")", ".", "float", "(", ")", "\n", "\n", "gt_disp", "=", "target_dict", "[", "'target_disp'", "]", "\n", "gt_disp_mask", "=", "(", "target_dict", "[", "'target_disp_mask'", "]", "==", "1", ")", ".", "float", "(", ")", "\n", "\n", "gt_disp2_occ", "=", "target_dict", "[", "'target_disp2_occ'", "]", "\n", "gt_disp2_mask", "=", "(", "target_dict", "[", "'target_disp2_mask_occ'", "]", "==", "1", ")", ".", "float", "(", ")", "\n", "\n", "gt_sf_mask", "=", "gt_flow_mask", "*", "gt_disp_mask", "*", "gt_disp2_mask", "\n", "\n", "intrinsics", "=", "target_dict", "[", "'input_k_l1'", "]", "\n", "\n", "##################################################", "\n", "## Depth 1", "\n", "##################################################", "\n", "\n", "batch_size", ",", "_", ",", "_", ",", "width", "=", "gt_disp", ".", "size", "(", ")", "\n", "\n", "out_disp_l1", "=", "interpolate2d_as", "(", "output_dict", "[", "\"disp_l1_pp\"", "]", "[", "0", "]", ",", "gt_disp", ",", "mode", "=", "\"bilinear\"", ")", "*", "width", "\n", "out_depth_l1", "=", "_disp2depth_kitti_K", "(", "out_disp_l1", ",", "intrinsics", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "out_depth_l1", "=", "torch", ".", "clamp", "(", "out_depth_l1", ",", "1e-3", ",", "80", ")", "\n", "gt_depth_l1", "=", "_disp2depth_kitti_K", "(", "gt_disp", ",", "intrinsics", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "\n", "dict_disp0_occ", "=", "eval_module_disp_depth", "(", "gt_disp", ",", "gt_disp_mask", ".", "bool", "(", ")", ",", "out_disp_l1", ",", "gt_depth_l1", ",", "out_depth_l1", ")", "\n", "\n", "output_dict", "[", "\"out_disp_l_pp\"", "]", "=", "out_disp_l1", "\n", "output_dict", "[", "\"out_depth_l_pp\"", "]", "=", "out_depth_l1", "\n", "\n", "d0_outlier_image", "=", "dict_disp0_occ", "[", "'otl_img'", "]", "\n", "loss_dict", "[", "\"d_abs\"", "]", "=", "dict_disp0_occ", "[", "'abs_rel'", "]", "\n", "loss_dict", "[", "\"d_sq\"", "]", "=", "dict_disp0_occ", "[", "'sq_rel'", "]", "\n", "loss_dict", "[", "\"d1\"", "]", "=", "dict_disp0_occ", "[", "'otl'", "]", "\n", "\n", "##################################################", "\n", "## Optical Flow Eval", "\n", "##################################################", "\n", "\n", "out_sceneflow", "=", "interpolate2d_as", "(", "output_dict", "[", "'flow_f_pp'", "]", "[", "0", "]", ",", "gt_flow", ",", "mode", "=", "\"bilinear\"", ")", "\n", "out_flow", "=", "projectSceneFlow2Flow", "(", "target_dict", "[", "'input_k_l1'", "]", ",", "out_sceneflow", ",", "output_dict", "[", "\"out_disp_l_pp\"", "]", ")", "\n", "\n", "## Flow Eval", "\n", "valid_epe", "=", "_elementwise_epe", "(", "out_flow", ",", "gt_flow", ")", "*", "gt_flow_mask", "\n", "loss_dict", "[", "\"f_epe\"", "]", "=", "(", "valid_epe", ".", "view", "(", "batch_size", ",", "-", "1", ")", ".", "sum", "(", "1", ")", ")", ".", "mean", "(", ")", "/", "91875.68", "\n", "output_dict", "[", "\"out_flow_pp\"", "]", "=", "out_flow", "\n", "\n", "flow_gt_mag", "=", "torch", ".", "norm", "(", "target_dict", "[", "\"target_flow\"", "]", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "1e-8", "\n", "flow_outlier_epe", "=", "(", "valid_epe", ">", "3", ")", ".", "float", "(", ")", "*", "(", "(", "valid_epe", "/", "flow_gt_mag", ")", ">", "0.05", ")", ".", "float", "(", ")", "*", "gt_flow_mask", "\n", "loss_dict", "[", "\"f1\"", "]", "=", "(", "flow_outlier_epe", ".", "view", "(", "batch_size", ",", "-", "1", ")", ".", "sum", "(", "1", ")", ")", ".", "mean", "(", ")", "/", "91875.68", "\n", "\n", "\n", "##################################################", "\n", "## Depth 2", "\n", "##################################################", "\n", "\n", "out_depth_l1_next", "=", "out_depth_l1", "+", "out_sceneflow", "[", ":", ",", "2", ":", "3", ",", ":", ",", ":", "]", "\n", "out_disp_l1_next", "=", "_depth2disp_kitti_K", "(", "out_depth_l1_next", ",", "intrinsics", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "gt_depth_l1_next", "=", "_disp2depth_kitti_K", "(", "gt_disp2_occ", ",", "intrinsics", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "\n", "dict_disp1_occ", "=", "eval_module_disp_depth", "(", "gt_disp2_occ", ",", "gt_disp2_mask", ".", "bool", "(", ")", ",", "out_disp_l1_next", ",", "gt_depth_l1_next", ",", "out_depth_l1_next", ")", "\n", "\n", "output_dict", "[", "\"out_disp_l_pp_next\"", "]", "=", "out_disp_l1_next", "\n", "output_dict", "[", "\"out_depth_l_pp_next\"", "]", "=", "out_depth_l1_next", "\n", "\n", "d1_outlier_image", "=", "dict_disp1_occ", "[", "'otl_img'", "]", "\n", "loss_dict", "[", "\"d2\"", "]", "=", "dict_disp1_occ", "[", "'otl'", "]", "\n", "\n", "\n", "##################################################", "\n", "## Scene Flow Eval", "\n", "##################################################", "\n", "\n", "outlier_sf", "=", "(", "flow_outlier_epe", ".", "bool", "(", ")", "+", "d0_outlier_image", ".", "bool", "(", ")", "+", "d1_outlier_image", ".", "bool", "(", ")", ")", ".", "float", "(", ")", "*", "gt_sf_mask", "\n", "loss_dict", "[", "\"sf\"", "]", "=", "(", "outlier_sf", ".", "view", "(", "batch_size", ",", "-", "1", ")", ".", "sum", "(", "1", ")", ")", ".", "mean", "(", ")", "/", "91873.4", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoOcc.__init__": [[590, 598], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "Loss_SceneFlow_SelfSup_NoOcc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_weights", "=", "[", "4.0", ",", "2.0", ",", "1.0", ",", "1.0", ",", "1.0", "]", "\n", "self", ".", "_ssim_w", "=", "0.85", "\n", "self", ".", "_disp_smooth_w", "=", "0.1", "\n", "self", ".", "_sf_3d_pts", "=", "0.2", "\n", "self", ".", "_sf_3d_sm", "=", "200", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoOcc.depth_loss_left_img": [[600, 615], ["losses._generate_image_left", "img_diff.mean", "_smoothness_motion_2nd().mean", "losses._smoothness_motion_2nd", "losses._elementwise_l1", "losses._SSIM"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._generate_image_left", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM"], ["", "def", "depth_loss_left_img", "(", "self", ",", "disp_l", ",", "disp_r", ",", "img_l_aug", ",", "img_r_aug", ",", "ii", ")", ":", "\n", "\n", "        ", "img_r_warp", "=", "_generate_image_left", "(", "img_r_aug", ",", "disp_l", ")", "\n", "# left_occ = _adaptive_disocc_detection_disp(disp_r).detach()", "\n", "\n", "## Photometric loss: ", "\n", "img_diff", "=", "(", "_elementwise_l1", "(", "img_l_aug", ",", "img_r_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l_aug", ",", "img_r_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "loss_img", "=", "img_diff", ".", "mean", "(", ")", "\n", "# loss_img = (img_diff[left_occ]).mean()", "\n", "# img_diff[~left_occ].detach_()", "\n", "\n", "## Disparities smoothness", "\n", "loss_smooth", "=", "_smoothness_motion_2nd", "(", "disp_l", ",", "img_l_aug", ",", "beta", "=", "10.0", ")", ".", "mean", "(", ")", "/", "(", "2", "**", "ii", ")", "\n", "\n", "return", "loss_img", "+", "self", ".", "_disp_smooth_w", "*", "loss_smooth", "#, left_occ", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoOcc.sceneflow_loss": [[617, 679], ["sf_f.size", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "utils.sceneflow_util.pixel2pts_ms", "utils.sceneflow_util.pixel2pts_ms", "utils.sceneflow_util.pts2pixel_ms", "utils.sceneflow_util.pts2pixel_ms", "utils.sceneflow_util.reconstructPts", "utils.sceneflow_util.reconstructPts", "utils.sceneflow_util.projectSceneFlow2Flow", "utils.sceneflow_util.projectSceneFlow2Flow", "utils.sceneflow_util.reconstructImg", "utils.sceneflow_util.reconstructImg", "img_diff1.mean", "img_diff2.mean", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "pts_diff1.mean", "pts_diff2.mean", "_elementwise_epe().mean", "_elementwise_epe().mean", "losses._elementwise_epe", "losses._elementwise_epe", "losses._elementwise_l1", "losses._SSIM", "losses._elementwise_l1", "losses._SSIM", "losses._smoothness_motion_2nd", "losses._smoothness_motion_2nd"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pts2pixel_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pts2pixel_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.reconstructPts", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.reconstructPts", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.projectSceneFlow2Flow", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.projectSceneFlow2Flow", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.reconstructImg", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.reconstructImg", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_epe", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_epe", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd"], ["", "def", "sceneflow_loss", "(", "self", ",", "sf_f", ",", "sf_b", ",", "disp_l1", ",", "disp_l2", ",", "k_l1_aug", ",", "k_l2_aug", ",", "img_l1_aug", ",", "img_l2_aug", ",", "aug_size", ",", "ii", ")", ":", "\n", "\n", "## Depth2Pts", "\n", "        ", "_", ",", "_", ",", "h_dp", ",", "w_dp", "=", "sf_f", ".", "size", "(", ")", "\n", "disp_l1", "=", "disp_l1", "*", "w_dp", "\n", "disp_l2", "=", "disp_l2", "*", "w_dp", "\n", "\n", "## scale", "\n", "local_scale", "=", "torch", ".", "zeros_like", "(", "aug_size", ")", "\n", "local_scale", "[", ":", ",", "0", "]", "=", "h_dp", "\n", "local_scale", "[", ":", ",", "1", "]", "=", "w_dp", "\n", "\n", "pts1", ",", "k1_scale", "=", "pixel2pts_ms", "(", "k_l1_aug", ",", "disp_l1", ",", "local_scale", "/", "aug_size", ")", "\n", "pts2", ",", "k2_scale", "=", "pixel2pts_ms", "(", "k_l2_aug", ",", "disp_l2", ",", "local_scale", "/", "aug_size", ")", "\n", "\n", "_", ",", "pts1_tf", ",", "coord1", "=", "pts2pixel_ms", "(", "k1_scale", ",", "pts1", ",", "sf_f", ",", "[", "h_dp", ",", "w_dp", "]", ")", "\n", "_", ",", "pts2_tf", ",", "coord2", "=", "pts2pixel_ms", "(", "k2_scale", ",", "pts2", ",", "sf_b", ",", "[", "h_dp", ",", "w_dp", "]", ")", "\n", "\n", "pts2_warp", "=", "reconstructPts", "(", "coord1", ",", "pts2", ")", "\n", "pts1_warp", "=", "reconstructPts", "(", "coord2", ",", "pts1", ")", "\n", "\n", "flow_f", "=", "projectSceneFlow2Flow", "(", "k1_scale", ",", "sf_f", ",", "disp_l1", ")", "\n", "flow_b", "=", "projectSceneFlow2Flow", "(", "k2_scale", ",", "sf_b", ",", "disp_l2", ")", "\n", "# occ_map_b = _adaptive_disocc_detection(flow_f).detach() * disp_occ_l2", "\n", "# occ_map_f = _adaptive_disocc_detection(flow_b).detach() * disp_occ_l1", "\n", "\n", "## Image reconstruction loss", "\n", "# img_l2_warp = self.warping_layer_aug(img_l2, flow_f, aug_scale, coords)", "\n", "# img_l1_warp = self.warping_layer_aug(img_l1, flow_b, aug_scale, coords)", "\n", "img_l2_warp", "=", "reconstructImg", "(", "coord1", ",", "img_l2_aug", ")", "\n", "img_l1_warp", "=", "reconstructImg", "(", "coord2", ",", "img_l1_aug", ")", "\n", "\n", "img_diff1", "=", "(", "_elementwise_l1", "(", "img_l1_aug", ",", "img_l2_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l1_aug", ",", "img_l2_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "img_diff2", "=", "(", "_elementwise_l1", "(", "img_l2_aug", ",", "img_l1_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l2_aug", ",", "img_l1_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "loss_im1", "=", "img_diff1", ".", "mean", "(", ")", "\n", "loss_im2", "=", "img_diff2", ".", "mean", "(", ")", "\n", "# loss_im1 = img_diff1[occ_map_f].mean()", "\n", "# loss_im2 = img_diff2[occ_map_b].mean()", "\n", "# img_diff1[~occ_map_f].detach_()", "\n", "# img_diff2[~occ_map_b].detach_()", "\n", "loss_im", "=", "loss_im1", "+", "loss_im2", "\n", "\n", "## Point Reconstruction Loss", "\n", "pts_norm1", "=", "torch", ".", "norm", "(", "pts1", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "pts_norm2", "=", "torch", ".", "norm", "(", "pts2", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "pts_diff1", "=", "_elementwise_epe", "(", "pts1_tf", ",", "pts2_warp", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "/", "(", "pts_norm1", "+", "1e-8", ")", "\n", "pts_diff2", "=", "_elementwise_epe", "(", "pts2_tf", ",", "pts1_warp", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "/", "(", "pts_norm2", "+", "1e-8", ")", "\n", "loss_pts1", "=", "pts_diff1", ".", "mean", "(", ")", "\n", "loss_pts2", "=", "pts_diff2", ".", "mean", "(", ")", "\n", "# loss_pts1 = pts_diff1[occ_map_f].mean()", "\n", "# loss_pts2 = pts_diff2[occ_map_b].mean()", "\n", "# pts_diff1[~occ_map_f].detach_()", "\n", "# pts_diff2[~occ_map_b].detach_()", "\n", "loss_pts", "=", "loss_pts1", "+", "loss_pts2", "\n", "\n", "## 3D motion smoothness loss", "\n", "loss_3d_s", "=", "(", "(", "_smoothness_motion_2nd", "(", "sf_f", ",", "img_l1_aug", ",", "beta", "=", "10.0", ")", "/", "(", "pts_norm1", "+", "1e-8", ")", ")", ".", "mean", "(", ")", "+", "(", "_smoothness_motion_2nd", "(", "sf_b", ",", "img_l2_aug", ",", "beta", "=", "10.0", ")", "/", "(", "pts_norm2", "+", "1e-8", ")", ")", ".", "mean", "(", ")", ")", "/", "(", "2", "**", "ii", ")", "\n", "\n", "## Loss Summnation", "\n", "sceneflow_loss", "=", "loss_im", "+", "self", ".", "_sf_3d_pts", "*", "loss_pts", "+", "self", ".", "_sf_3d_sm", "*", "loss_3d_s", "\n", "\n", "return", "sceneflow_loss", ",", "loss_im", ",", "loss_pts", ",", "loss_3d_s", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoOcc.detaching_grad_of_outputs": [[680, 689], ["range", "len", "[].detach_", "[].detach_", "[].detach_", "[].detach_"], "methods", ["None"], ["", "def", "detaching_grad_of_outputs", "(", "self", ",", "output_dict", ")", ":", "\n", "\n", "        ", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict", "[", "'flow_f'", "]", ")", ")", ":", "\n", "            ", "output_dict", "[", "'flow_f'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "output_dict", "[", "'flow_b'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "output_dict", "[", "'disp_l1'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "output_dict", "[", "'disp_l2'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoOcc.forward": [[690, 759], ["target_dict[].size", "enumerate", "loss_sf_sum.detach", "loss_dp_sum.detach", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "losses.Loss_SceneFlow_SelfSup_NoOcc.detaching_grad_of_outputs", "zip", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "losses.Loss_SceneFlow_SelfSup_NoOcc.depth_loss_left_img", "losses.Loss_SceneFlow_SelfSup_NoOcc.depth_loss_left_img", "losses.Loss_SceneFlow_SelfSup_NoOcc.sceneflow_loss", "sf_f.size", "sf_b.size", "sf_f.size", "disp_l1.size", "sf_f.size", "disp_l2.size"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.detaching_grad_of_outputs", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.depth_loss_left_img", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.depth_loss_left_img", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoPtsNoOcc.sceneflow_loss"], ["", "def", "forward", "(", "self", ",", "output_dict", ",", "target_dict", ")", ":", "\n", "\n", "        ", "loss_dict", "=", "{", "}", "\n", "\n", "## SceneFlow Loss", "\n", "batch_size", "=", "target_dict", "[", "'input_l1'", "]", ".", "size", "(", "0", ")", "\n", "loss_sf_sum", "=", "0", "\n", "loss_dp_sum", "=", "0", "\n", "loss_sf_2d", "=", "0", "\n", "loss_sf_3d", "=", "0", "\n", "loss_sf_sm", "=", "0", "\n", "\n", "k_l1_aug", "=", "target_dict", "[", "'input_k_l1_aug'", "]", "\n", "k_l2_aug", "=", "target_dict", "[", "'input_k_l2_aug'", "]", "\n", "aug_size", "=", "target_dict", "[", "'aug_size'", "]", "\n", "\n", "disp_r1_dict", "=", "output_dict", "[", "'output_dict_r'", "]", "[", "'disp_l1'", "]", "\n", "disp_r2_dict", "=", "output_dict", "[", "'output_dict_r'", "]", "[", "'disp_l2'", "]", "\n", "\n", "for", "ii", ",", "(", "sf_f", ",", "sf_b", ",", "disp_l1", ",", "disp_l2", ",", "disp_r1", ",", "disp_r2", ")", "in", "enumerate", "(", "zip", "(", "output_dict", "[", "'flow_f'", "]", ",", "output_dict", "[", "'flow_b'", "]", ",", "output_dict", "[", "'disp_l1'", "]", ",", "output_dict", "[", "'disp_l2'", "]", ",", "disp_r1_dict", ",", "disp_r2_dict", ")", ")", ":", "\n", "\n", "            ", "assert", "(", "sf_f", ".", "size", "(", ")", "[", "2", ":", "4", "]", "==", "sf_b", ".", "size", "(", ")", "[", "2", ":", "4", "]", ")", "\n", "assert", "(", "sf_f", ".", "size", "(", ")", "[", "2", ":", "4", "]", "==", "disp_l1", ".", "size", "(", ")", "[", "2", ":", "4", "]", ")", "\n", "assert", "(", "sf_f", ".", "size", "(", ")", "[", "2", ":", "4", "]", "==", "disp_l2", ".", "size", "(", ")", "[", "2", ":", "4", "]", ")", "\n", "\n", "## For image reconstruction loss", "\n", "img_l1_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_l1_aug\"", "]", ",", "sf_f", ")", "\n", "img_l2_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_l2_aug\"", "]", ",", "sf_b", ")", "\n", "img_r1_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_r1_aug\"", "]", ",", "sf_f", ")", "\n", "img_r2_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_r2_aug\"", "]", ",", "sf_b", ")", "\n", "\n", "## Depth Loss", "\n", "loss_disp_l1", "=", "self", ".", "depth_loss_left_img", "(", "disp_l1", ",", "disp_r1", ",", "img_l1_aug", ",", "img_r1_aug", ",", "ii", ")", "\n", "loss_disp_l2", "=", "self", ".", "depth_loss_left_img", "(", "disp_l2", ",", "disp_r2", ",", "img_l2_aug", ",", "img_r2_aug", ",", "ii", ")", "\n", "loss_dp_sum", "=", "loss_dp_sum", "+", "(", "loss_disp_l1", "+", "loss_disp_l2", ")", "*", "self", ".", "_weights", "[", "ii", "]", "\n", "\n", "\n", "## Sceneflow Loss           ", "\n", "loss_sceneflow", ",", "loss_im", ",", "loss_pts", ",", "loss_3d_s", "=", "self", ".", "sceneflow_loss", "(", "sf_f", ",", "sf_b", ",", "\n", "disp_l1", ",", "disp_l2", ",", "\n", "k_l1_aug", ",", "k_l2_aug", ",", "\n", "img_l1_aug", ",", "img_l2_aug", ",", "\n", "aug_size", ",", "ii", ")", "\n", "\n", "loss_sf_sum", "=", "loss_sf_sum", "+", "loss_sceneflow", "*", "self", ".", "_weights", "[", "ii", "]", "\n", "loss_sf_2d", "=", "loss_sf_2d", "+", "loss_im", "\n", "loss_sf_3d", "=", "loss_sf_3d", "+", "loss_pts", "\n", "loss_sf_sm", "=", "loss_sf_sm", "+", "loss_3d_s", "\n", "\n", "# finding weight", "\n", "", "f_loss", "=", "loss_sf_sum", ".", "detach", "(", ")", "\n", "d_loss", "=", "loss_dp_sum", ".", "detach", "(", ")", "\n", "max_val", "=", "torch", ".", "max", "(", "f_loss", ",", "d_loss", ")", "\n", "f_weight", "=", "max_val", "/", "f_loss", "\n", "d_weight", "=", "max_val", "/", "d_loss", "\n", "\n", "total_loss", "=", "loss_sf_sum", "*", "f_weight", "+", "loss_dp_sum", "*", "d_weight", "\n", "\n", "loss_dict", "=", "{", "}", "\n", "loss_dict", "[", "\"dp\"", "]", "=", "loss_dp_sum", "\n", "loss_dict", "[", "\"sf\"", "]", "=", "loss_sf_sum", "\n", "loss_dict", "[", "\"s_2\"", "]", "=", "loss_sf_2d", "\n", "loss_dict", "[", "\"s_3\"", "]", "=", "loss_sf_3d", "\n", "loss_dict", "[", "\"s_3s\"", "]", "=", "loss_sf_sm", "\n", "loss_dict", "[", "\"total_loss\"", "]", "=", "total_loss", "\n", "\n", "self", ".", "detaching_grad_of_outputs", "(", "output_dict", "[", "'output_dict_r'", "]", ")", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoPts.__init__": [[761, 769], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "Loss_SceneFlow_SelfSup_NoPts", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_weights", "=", "[", "4.0", ",", "2.0", ",", "1.0", ",", "1.0", ",", "1.0", "]", "\n", "self", ".", "_ssim_w", "=", "0.85", "\n", "self", ".", "_disp_smooth_w", "=", "0.1", "\n", "self", ".", "_sf_3d_pts", "=", "0.2", "\n", "self", ".", "_sf_3d_sm", "=", "200", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoPts.depth_loss_left_img": [[771, 785], ["losses._generate_image_left", "_adaptive_disocc_detection_disp().detach", "img_diff[].mean", "img_diff[].detach_", "_smoothness_motion_2nd().mean", "losses._adaptive_disocc_detection_disp", "losses._smoothness_motion_2nd", "losses._elementwise_l1", "losses._SSIM"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._generate_image_left", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._adaptive_disocc_detection_disp", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM"], ["", "def", "depth_loss_left_img", "(", "self", ",", "disp_l", ",", "disp_r", ",", "img_l_aug", ",", "img_r_aug", ",", "ii", ")", ":", "\n", "\n", "        ", "img_r_warp", "=", "_generate_image_left", "(", "img_r_aug", ",", "disp_l", ")", "\n", "left_occ", "=", "_adaptive_disocc_detection_disp", "(", "disp_r", ")", ".", "detach", "(", ")", "\n", "\n", "## Photometric loss: ", "\n", "img_diff", "=", "(", "_elementwise_l1", "(", "img_l_aug", ",", "img_r_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l_aug", ",", "img_r_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "loss_img", "=", "(", "img_diff", "[", "left_occ", "]", ")", ".", "mean", "(", ")", "\n", "img_diff", "[", "~", "left_occ", "]", ".", "detach_", "(", ")", "\n", "\n", "## Disparities smoothness", "\n", "loss_smooth", "=", "_smoothness_motion_2nd", "(", "disp_l", ",", "img_l_aug", ",", "beta", "=", "10.0", ")", ".", "mean", "(", ")", "/", "(", "2", "**", "ii", ")", "\n", "\n", "return", "loss_img", "+", "self", ".", "_disp_smooth_w", "*", "loss_smooth", ",", "left_occ", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoPts.sceneflow_loss": [[787, 845], ["sf_f.size", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "utils.sceneflow_util.pixel2pts_ms", "utils.sceneflow_util.pixel2pts_ms", "utils.sceneflow_util.pts2pixel_ms", "utils.sceneflow_util.pts2pixel_ms", "utils.sceneflow_util.projectSceneFlow2Flow", "utils.sceneflow_util.projectSceneFlow2Flow", "utils.sceneflow_util.reconstructImg", "utils.sceneflow_util.reconstructImg", "img_diff1[].mean", "img_diff2[].mean", "img_diff1[].detach_", "img_diff2[].detach_", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "_adaptive_disocc_detection().detach", "_adaptive_disocc_detection().detach", "losses._adaptive_disocc_detection", "losses._adaptive_disocc_detection", "losses._elementwise_l1", "losses._SSIM", "losses._elementwise_l1", "losses._SSIM", "losses._smoothness_motion_2nd", "losses._smoothness_motion_2nd"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pts2pixel_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pts2pixel_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.projectSceneFlow2Flow", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.projectSceneFlow2Flow", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.reconstructImg", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.reconstructImg", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._adaptive_disocc_detection", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._adaptive_disocc_detection", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd"], ["", "def", "sceneflow_loss", "(", "self", ",", "sf_f", ",", "sf_b", ",", "disp_l1", ",", "disp_l2", ",", "disp_occ_l1", ",", "disp_occ_l2", ",", "k_l1_aug", ",", "k_l2_aug", ",", "img_l1_aug", ",", "img_l2_aug", ",", "aug_size", ",", "ii", ")", ":", "\n", "\n", "## Depth2Pts", "\n", "        ", "_", ",", "_", ",", "h_dp", ",", "w_dp", "=", "sf_f", ".", "size", "(", ")", "\n", "disp_l1", "=", "disp_l1", "*", "w_dp", "\n", "disp_l2", "=", "disp_l2", "*", "w_dp", "\n", "\n", "## scale", "\n", "local_scale", "=", "torch", ".", "zeros_like", "(", "aug_size", ")", "\n", "local_scale", "[", ":", ",", "0", "]", "=", "h_dp", "\n", "local_scale", "[", ":", ",", "1", "]", "=", "w_dp", "\n", "\n", "pts1", ",", "k1_scale", "=", "pixel2pts_ms", "(", "k_l1_aug", ",", "disp_l1", ",", "local_scale", "/", "aug_size", ")", "\n", "pts2", ",", "k2_scale", "=", "pixel2pts_ms", "(", "k_l2_aug", ",", "disp_l2", ",", "local_scale", "/", "aug_size", ")", "\n", "\n", "_", ",", "pts1_tf", ",", "coord1", "=", "pts2pixel_ms", "(", "k1_scale", ",", "pts1", ",", "sf_f", ",", "[", "h_dp", ",", "w_dp", "]", ")", "\n", "_", ",", "pts2_tf", ",", "coord2", "=", "pts2pixel_ms", "(", "k2_scale", ",", "pts2", ",", "sf_b", ",", "[", "h_dp", ",", "w_dp", "]", ")", "\n", "\n", "# pts2_warp = reconstructPts(coord1, pts2)", "\n", "# pts1_warp = reconstructPts(coord2, pts1) ", "\n", "\n", "flow_f", "=", "projectSceneFlow2Flow", "(", "k1_scale", ",", "sf_f", ",", "disp_l1", ")", "\n", "flow_b", "=", "projectSceneFlow2Flow", "(", "k2_scale", ",", "sf_b", ",", "disp_l2", ")", "\n", "occ_map_b", "=", "_adaptive_disocc_detection", "(", "flow_f", ")", ".", "detach", "(", ")", "*", "disp_occ_l2", "\n", "occ_map_f", "=", "_adaptive_disocc_detection", "(", "flow_b", ")", ".", "detach", "(", ")", "*", "disp_occ_l1", "\n", "\n", "## Image reconstruction loss", "\n", "# img_l2_warp = self.warping_layer_aug(img_l2, flow_f, aug_scale, coords)", "\n", "# img_l1_warp = self.warping_layer_aug(img_l1, flow_b, aug_scale, coords)", "\n", "img_l2_warp", "=", "reconstructImg", "(", "coord1", ",", "img_l2_aug", ")", "\n", "img_l1_warp", "=", "reconstructImg", "(", "coord2", ",", "img_l1_aug", ")", "\n", "\n", "img_diff1", "=", "(", "_elementwise_l1", "(", "img_l1_aug", ",", "img_l2_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l1_aug", ",", "img_l2_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "img_diff2", "=", "(", "_elementwise_l1", "(", "img_l2_aug", ",", "img_l1_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l2_aug", ",", "img_l1_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "loss_im1", "=", "img_diff1", "[", "occ_map_f", "]", ".", "mean", "(", ")", "\n", "loss_im2", "=", "img_diff2", "[", "occ_map_b", "]", ".", "mean", "(", ")", "\n", "img_diff1", "[", "~", "occ_map_f", "]", ".", "detach_", "(", ")", "\n", "img_diff2", "[", "~", "occ_map_b", "]", ".", "detach_", "(", ")", "\n", "loss_im", "=", "loss_im1", "+", "loss_im2", "\n", "\n", "# ## Point Reconstruction Loss", "\n", "pts_norm1", "=", "torch", ".", "norm", "(", "pts1", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "pts_norm2", "=", "torch", ".", "norm", "(", "pts2", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "# pts_diff1 = _elementwise_epe(pts1_tf, pts2_warp).mean(dim=1, keepdim=True) / (pts_norm1 + 1e-8)", "\n", "# pts_diff2 = _elementwise_epe(pts2_tf, pts1_warp).mean(dim=1, keepdim=True) / (pts_norm2 + 1e-8)", "\n", "# loss_pts1 = pts_diff1[occ_map_f].mean()", "\n", "# loss_pts2 = pts_diff2[occ_map_b].mean()", "\n", "# pts_diff1[~occ_map_f].detach_()", "\n", "# pts_diff2[~occ_map_b].detach_()", "\n", "# loss_pts = loss_pts1 + loss_pts2", "\n", "\n", "## 3D motion smoothness loss", "\n", "loss_3d_s", "=", "(", "(", "_smoothness_motion_2nd", "(", "sf_f", ",", "img_l1_aug", ",", "beta", "=", "10.0", ")", "/", "(", "pts_norm1", "+", "1e-8", ")", ")", ".", "mean", "(", ")", "+", "(", "_smoothness_motion_2nd", "(", "sf_b", ",", "img_l2_aug", ",", "beta", "=", "10.0", ")", "/", "(", "pts_norm2", "+", "1e-8", ")", ")", ".", "mean", "(", ")", ")", "/", "(", "2", "**", "ii", ")", "\n", "\n", "## Loss Summnation", "\n", "sceneflow_loss", "=", "loss_im", "+", "self", ".", "_sf_3d_sm", "*", "loss_3d_s", "# + self._sf_3d_pts * loss_pts", "\n", "\n", "return", "sceneflow_loss", ",", "loss_im", ",", "loss_3d_s", "#, loss_pts", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoPts.detaching_grad_of_outputs": [[846, 855], ["range", "len", "[].detach_", "[].detach_", "[].detach_", "[].detach_"], "methods", ["None"], ["", "def", "detaching_grad_of_outputs", "(", "self", ",", "output_dict", ")", ":", "\n", "\n", "        ", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict", "[", "'flow_f'", "]", ")", ")", ":", "\n", "            ", "output_dict", "[", "'flow_f'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "output_dict", "[", "'flow_b'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "output_dict", "[", "'disp_l1'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "output_dict", "[", "'disp_l2'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoPts.forward": [[856, 926], ["target_dict[].size", "enumerate", "loss_sf_sum.detach", "loss_dp_sum.detach", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "losses.Loss_SceneFlow_SelfSup_NoPts.detaching_grad_of_outputs", "zip", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "losses.Loss_SceneFlow_SelfSup_NoPts.depth_loss_left_img", "losses.Loss_SceneFlow_SelfSup_NoPts.depth_loss_left_img", "losses.Loss_SceneFlow_SelfSup_NoPts.sceneflow_loss", "sf_f.size", "sf_b.size", "sf_f.size", "disp_l1.size", "sf_f.size", "disp_l2.size"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.detaching_grad_of_outputs", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.depth_loss_left_img", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.depth_loss_left_img", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoPtsNoOcc.sceneflow_loss"], ["", "def", "forward", "(", "self", ",", "output_dict", ",", "target_dict", ")", ":", "\n", "\n", "        ", "loss_dict", "=", "{", "}", "\n", "\n", "## SceneFlow Loss", "\n", "batch_size", "=", "target_dict", "[", "'input_l1'", "]", ".", "size", "(", "0", ")", "\n", "loss_sf_sum", "=", "0", "\n", "loss_dp_sum", "=", "0", "\n", "loss_sf_2d", "=", "0", "\n", "# loss_sf_3d = 0", "\n", "loss_sf_sm", "=", "0", "\n", "\n", "k_l1_aug", "=", "target_dict", "[", "'input_k_l1_aug'", "]", "\n", "k_l2_aug", "=", "target_dict", "[", "'input_k_l2_aug'", "]", "\n", "aug_size", "=", "target_dict", "[", "'aug_size'", "]", "\n", "\n", "disp_r1_dict", "=", "output_dict", "[", "'output_dict_r'", "]", "[", "'disp_l1'", "]", "\n", "disp_r2_dict", "=", "output_dict", "[", "'output_dict_r'", "]", "[", "'disp_l2'", "]", "\n", "\n", "for", "ii", ",", "(", "sf_f", ",", "sf_b", ",", "disp_l1", ",", "disp_l2", ",", "disp_r1", ",", "disp_r2", ")", "in", "enumerate", "(", "zip", "(", "output_dict", "[", "'flow_f'", "]", ",", "output_dict", "[", "'flow_b'", "]", ",", "output_dict", "[", "'disp_l1'", "]", ",", "output_dict", "[", "'disp_l2'", "]", ",", "disp_r1_dict", ",", "disp_r2_dict", ")", ")", ":", "\n", "\n", "            ", "assert", "(", "sf_f", ".", "size", "(", ")", "[", "2", ":", "4", "]", "==", "sf_b", ".", "size", "(", ")", "[", "2", ":", "4", "]", ")", "\n", "assert", "(", "sf_f", ".", "size", "(", ")", "[", "2", ":", "4", "]", "==", "disp_l1", ".", "size", "(", ")", "[", "2", ":", "4", "]", ")", "\n", "assert", "(", "sf_f", ".", "size", "(", ")", "[", "2", ":", "4", "]", "==", "disp_l2", ".", "size", "(", ")", "[", "2", ":", "4", "]", ")", "\n", "\n", "## For image reconstruction loss", "\n", "img_l1_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_l1_aug\"", "]", ",", "sf_f", ")", "\n", "img_l2_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_l2_aug\"", "]", ",", "sf_b", ")", "\n", "img_r1_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_r1_aug\"", "]", ",", "sf_f", ")", "\n", "img_r2_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_r2_aug\"", "]", ",", "sf_b", ")", "\n", "\n", "## Depth Loss", "\n", "loss_disp_l1", ",", "disp_occ_l1", "=", "self", ".", "depth_loss_left_img", "(", "disp_l1", ",", "disp_r1", ",", "img_l1_aug", ",", "img_r1_aug", ",", "ii", ")", "\n", "loss_disp_l2", ",", "disp_occ_l2", "=", "self", ".", "depth_loss_left_img", "(", "disp_l2", ",", "disp_r2", ",", "img_l2_aug", ",", "img_r2_aug", ",", "ii", ")", "\n", "loss_dp_sum", "=", "loss_dp_sum", "+", "(", "loss_disp_l1", "+", "loss_disp_l2", ")", "*", "self", ".", "_weights", "[", "ii", "]", "\n", "\n", "\n", "## Sceneflow Loss           ", "\n", "loss_sceneflow", ",", "loss_im", ",", "loss_3d_s", "=", "self", ".", "sceneflow_loss", "(", "sf_f", ",", "sf_b", ",", "\n", "disp_l1", ",", "disp_l2", ",", "\n", "disp_occ_l1", ",", "disp_occ_l2", ",", "\n", "k_l1_aug", ",", "k_l2_aug", ",", "\n", "img_l1_aug", ",", "img_l2_aug", ",", "\n", "aug_size", ",", "ii", ")", "\n", "\n", "loss_sf_sum", "=", "loss_sf_sum", "+", "loss_sceneflow", "*", "self", ".", "_weights", "[", "ii", "]", "\n", "loss_sf_2d", "=", "loss_sf_2d", "+", "loss_im", "\n", "# loss_sf_3d = loss_sf_3d + loss_pts", "\n", "loss_sf_sm", "=", "loss_sf_sm", "+", "loss_3d_s", "\n", "\n", "# finding weight", "\n", "", "f_loss", "=", "loss_sf_sum", ".", "detach", "(", ")", "\n", "d_loss", "=", "loss_dp_sum", ".", "detach", "(", ")", "\n", "max_val", "=", "torch", ".", "max", "(", "f_loss", ",", "d_loss", ")", "\n", "f_weight", "=", "max_val", "/", "f_loss", "\n", "d_weight", "=", "max_val", "/", "d_loss", "\n", "\n", "total_loss", "=", "loss_sf_sum", "*", "f_weight", "+", "loss_dp_sum", "*", "d_weight", "\n", "\n", "loss_dict", "=", "{", "}", "\n", "loss_dict", "[", "\"dp\"", "]", "=", "loss_dp_sum", "\n", "loss_dict", "[", "\"sf\"", "]", "=", "loss_sf_sum", "\n", "loss_dict", "[", "\"s_2\"", "]", "=", "loss_sf_2d", "\n", "# loss_dict[\"s_3\"] = loss_sf_3d", "\n", "loss_dict", "[", "\"s_3s\"", "]", "=", "loss_sf_sm", "\n", "loss_dict", "[", "\"total_loss\"", "]", "=", "total_loss", "\n", "\n", "self", ".", "detaching_grad_of_outputs", "(", "output_dict", "[", "'output_dict_r'", "]", ")", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoPtsNoOcc.__init__": [[928, 936], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "Loss_SceneFlow_SelfSup_NoPtsNoOcc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_weights", "=", "[", "4.0", ",", "2.0", ",", "1.0", ",", "1.0", ",", "1.0", "]", "\n", "self", ".", "_ssim_w", "=", "0.85", "\n", "self", ".", "_disp_smooth_w", "=", "0.1", "\n", "self", ".", "_sf_3d_pts", "=", "0.2", "\n", "self", ".", "_sf_3d_sm", "=", "200", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoPtsNoOcc.depth_loss_left_img": [[938, 953], ["losses._generate_image_left", "img_diff.mean", "_smoothness_motion_2nd().mean", "losses._smoothness_motion_2nd", "losses._elementwise_l1", "losses._SSIM"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._generate_image_left", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM"], ["", "def", "depth_loss_left_img", "(", "self", ",", "disp_l", ",", "disp_r", ",", "img_l_aug", ",", "img_r_aug", ",", "ii", ")", ":", "\n", "\n", "        ", "img_r_warp", "=", "_generate_image_left", "(", "img_r_aug", ",", "disp_l", ")", "\n", "# left_occ = _adaptive_disocc_detection_disp(disp_r).detach()", "\n", "\n", "## Photometric loss: ", "\n", "img_diff", "=", "(", "_elementwise_l1", "(", "img_l_aug", ",", "img_r_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l_aug", ",", "img_r_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "loss_img", "=", "img_diff", ".", "mean", "(", ")", "\n", "# loss_img = (img_diff[left_occ]).mean()", "\n", "# img_diff[~left_occ].detach_()", "\n", "\n", "## Disparities smoothness", "\n", "loss_smooth", "=", "_smoothness_motion_2nd", "(", "disp_l", ",", "img_l_aug", ",", "beta", "=", "10.0", ")", ".", "mean", "(", ")", "/", "(", "2", "**", "ii", ")", "\n", "\n", "return", "loss_img", "+", "self", ".", "_disp_smooth_w", "*", "loss_smooth", "#, left_occ", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoPtsNoOcc.sceneflow_loss": [[955, 1017], ["sf_f.size", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "utils.sceneflow_util.pixel2pts_ms", "utils.sceneflow_util.pixel2pts_ms", "utils.sceneflow_util.pts2pixel_ms", "utils.sceneflow_util.pts2pixel_ms", "utils.sceneflow_util.projectSceneFlow2Flow", "utils.sceneflow_util.projectSceneFlow2Flow", "utils.sceneflow_util.reconstructImg", "utils.sceneflow_util.reconstructImg", "img_diff1.mean", "img_diff2.mean", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "losses._elementwise_l1", "losses._SSIM", "losses._elementwise_l1", "losses._SSIM", "losses._smoothness_motion_2nd", "losses._smoothness_motion_2nd"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pts2pixel_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pts2pixel_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.projectSceneFlow2Flow", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.projectSceneFlow2Flow", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.reconstructImg", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.reconstructImg", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd"], ["", "def", "sceneflow_loss", "(", "self", ",", "sf_f", ",", "sf_b", ",", "disp_l1", ",", "disp_l2", ",", "k_l1_aug", ",", "k_l2_aug", ",", "img_l1_aug", ",", "img_l2_aug", ",", "aug_size", ",", "ii", ")", ":", "\n", "\n", "## Depth2Pts", "\n", "        ", "_", ",", "_", ",", "h_dp", ",", "w_dp", "=", "sf_f", ".", "size", "(", ")", "\n", "disp_l1", "=", "disp_l1", "*", "w_dp", "\n", "disp_l2", "=", "disp_l2", "*", "w_dp", "\n", "\n", "## scale", "\n", "local_scale", "=", "torch", ".", "zeros_like", "(", "aug_size", ")", "\n", "local_scale", "[", ":", ",", "0", "]", "=", "h_dp", "\n", "local_scale", "[", ":", ",", "1", "]", "=", "w_dp", "\n", "\n", "pts1", ",", "k1_scale", "=", "pixel2pts_ms", "(", "k_l1_aug", ",", "disp_l1", ",", "local_scale", "/", "aug_size", ")", "\n", "pts2", ",", "k2_scale", "=", "pixel2pts_ms", "(", "k_l2_aug", ",", "disp_l2", ",", "local_scale", "/", "aug_size", ")", "\n", "\n", "_", ",", "pts1_tf", ",", "coord1", "=", "pts2pixel_ms", "(", "k1_scale", ",", "pts1", ",", "sf_f", ",", "[", "h_dp", ",", "w_dp", "]", ")", "\n", "_", ",", "pts2_tf", ",", "coord2", "=", "pts2pixel_ms", "(", "k2_scale", ",", "pts2", ",", "sf_b", ",", "[", "h_dp", ",", "w_dp", "]", ")", "\n", "\n", "# pts2_warp = reconstructPts(coord1, pts2)", "\n", "# pts1_warp = reconstructPts(coord2, pts1) ", "\n", "\n", "flow_f", "=", "projectSceneFlow2Flow", "(", "k1_scale", ",", "sf_f", ",", "disp_l1", ")", "\n", "flow_b", "=", "projectSceneFlow2Flow", "(", "k2_scale", ",", "sf_b", ",", "disp_l2", ")", "\n", "# occ_map_b = _adaptive_disocc_detection(flow_f).detach() * disp_occ_l2", "\n", "# occ_map_f = _adaptive_disocc_detection(flow_b).detach() * disp_occ_l1", "\n", "\n", "## Image reconstruction loss", "\n", "# img_l2_warp = self.warping_layer_aug(img_l2, flow_f, aug_scale, coords)", "\n", "# img_l1_warp = self.warping_layer_aug(img_l1, flow_b, aug_scale, coords)", "\n", "img_l2_warp", "=", "reconstructImg", "(", "coord1", ",", "img_l2_aug", ")", "\n", "img_l1_warp", "=", "reconstructImg", "(", "coord2", ",", "img_l1_aug", ")", "\n", "\n", "img_diff1", "=", "(", "_elementwise_l1", "(", "img_l1_aug", ",", "img_l2_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l1_aug", ",", "img_l2_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "img_diff2", "=", "(", "_elementwise_l1", "(", "img_l2_aug", ",", "img_l1_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l2_aug", ",", "img_l1_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "loss_im1", "=", "img_diff1", ".", "mean", "(", ")", "\n", "loss_im2", "=", "img_diff2", ".", "mean", "(", ")", "\n", "# loss_im1 = img_diff1[occ_map_f].mean()", "\n", "# loss_im2 = img_diff2[occ_map_b].mean()", "\n", "# img_diff1[~occ_map_f].detach_()", "\n", "# img_diff2[~occ_map_b].detach_()", "\n", "loss_im", "=", "loss_im1", "+", "loss_im2", "\n", "\n", "## Point Reconstruction Loss", "\n", "pts_norm1", "=", "torch", ".", "norm", "(", "pts1", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "pts_norm2", "=", "torch", ".", "norm", "(", "pts2", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "# pts_diff1 = _elementwise_epe(pts1_tf, pts2_warp).mean(dim=1, keepdim=True) / (pts_norm1 + 1e-8)", "\n", "# pts_diff2 = _elementwise_epe(pts2_tf, pts1_warp).mean(dim=1, keepdim=True) / (pts_norm2 + 1e-8)", "\n", "# loss_pts1 = pts_diff1.mean()", "\n", "# loss_pts2 = pts_diff2.mean()", "\n", "# loss_pts1 = pts_diff1[occ_map_f].mean()", "\n", "# loss_pts2 = pts_diff2[occ_map_b].mean()", "\n", "# pts_diff1[~occ_map_f].detach_()", "\n", "# pts_diff2[~occ_map_b].detach_()", "\n", "# loss_pts = loss_pts1 + loss_pts2", "\n", "\n", "## 3D motion smoothness loss", "\n", "loss_3d_s", "=", "(", "(", "_smoothness_motion_2nd", "(", "sf_f", ",", "img_l1_aug", ",", "beta", "=", "10.0", ")", "/", "(", "pts_norm1", "+", "1e-8", ")", ")", ".", "mean", "(", ")", "+", "(", "_smoothness_motion_2nd", "(", "sf_b", ",", "img_l2_aug", ",", "beta", "=", "10.0", ")", "/", "(", "pts_norm2", "+", "1e-8", ")", ")", ".", "mean", "(", ")", ")", "/", "(", "2", "**", "ii", ")", "\n", "\n", "## Loss Summnation", "\n", "sceneflow_loss", "=", "loss_im", "+", "self", ".", "_sf_3d_sm", "*", "loss_3d_s", "# + self._sf_3d_pts * loss_pts", "\n", "\n", "return", "sceneflow_loss", ",", "loss_im", ",", "loss_3d_s", "# , loss_pts", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoPtsNoOcc.detaching_grad_of_outputs": [[1018, 1027], ["range", "len", "[].detach_", "[].detach_", "[].detach_", "[].detach_"], "methods", ["None"], ["", "def", "detaching_grad_of_outputs", "(", "self", ",", "output_dict", ")", ":", "\n", "\n", "        ", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict", "[", "'flow_f'", "]", ")", ")", ":", "\n", "            ", "output_dict", "[", "'flow_f'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "output_dict", "[", "'flow_b'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "output_dict", "[", "'disp_l1'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "output_dict", "[", "'disp_l2'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoPtsNoOcc.forward": [[1028, 1097], ["target_dict[].size", "enumerate", "loss_sf_sum.detach", "loss_dp_sum.detach", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "losses.Loss_SceneFlow_SelfSup_NoPtsNoOcc.detaching_grad_of_outputs", "zip", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "losses.Loss_SceneFlow_SelfSup_NoPtsNoOcc.depth_loss_left_img", "losses.Loss_SceneFlow_SelfSup_NoPtsNoOcc.depth_loss_left_img", "losses.Loss_SceneFlow_SelfSup_NoPtsNoOcc.sceneflow_loss", "sf_f.size", "sf_b.size", "sf_f.size", "disp_l1.size", "sf_f.size", "disp_l2.size"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.detaching_grad_of_outputs", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.depth_loss_left_img", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.depth_loss_left_img", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_SceneFlow_SelfSup_NoPtsNoOcc.sceneflow_loss"], ["", "def", "forward", "(", "self", ",", "output_dict", ",", "target_dict", ")", ":", "\n", "\n", "        ", "loss_dict", "=", "{", "}", "\n", "\n", "## SceneFlow Loss", "\n", "batch_size", "=", "target_dict", "[", "'input_l1'", "]", ".", "size", "(", "0", ")", "\n", "loss_sf_sum", "=", "0", "\n", "loss_dp_sum", "=", "0", "\n", "loss_sf_2d", "=", "0", "\n", "# loss_sf_3d = 0", "\n", "loss_sf_sm", "=", "0", "\n", "\n", "k_l1_aug", "=", "target_dict", "[", "'input_k_l1_aug'", "]", "\n", "k_l2_aug", "=", "target_dict", "[", "'input_k_l2_aug'", "]", "\n", "aug_size", "=", "target_dict", "[", "'aug_size'", "]", "\n", "\n", "disp_r1_dict", "=", "output_dict", "[", "'output_dict_r'", "]", "[", "'disp_l1'", "]", "\n", "disp_r2_dict", "=", "output_dict", "[", "'output_dict_r'", "]", "[", "'disp_l2'", "]", "\n", "\n", "for", "ii", ",", "(", "sf_f", ",", "sf_b", ",", "disp_l1", ",", "disp_l2", ",", "disp_r1", ",", "disp_r2", ")", "in", "enumerate", "(", "zip", "(", "output_dict", "[", "'flow_f'", "]", ",", "output_dict", "[", "'flow_b'", "]", ",", "output_dict", "[", "'disp_l1'", "]", ",", "output_dict", "[", "'disp_l2'", "]", ",", "disp_r1_dict", ",", "disp_r2_dict", ")", ")", ":", "\n", "\n", "            ", "assert", "(", "sf_f", ".", "size", "(", ")", "[", "2", ":", "4", "]", "==", "sf_b", ".", "size", "(", ")", "[", "2", ":", "4", "]", ")", "\n", "assert", "(", "sf_f", ".", "size", "(", ")", "[", "2", ":", "4", "]", "==", "disp_l1", ".", "size", "(", ")", "[", "2", ":", "4", "]", ")", "\n", "assert", "(", "sf_f", ".", "size", "(", ")", "[", "2", ":", "4", "]", "==", "disp_l2", ".", "size", "(", ")", "[", "2", ":", "4", "]", ")", "\n", "\n", "## For image reconstruction loss", "\n", "img_l1_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_l1_aug\"", "]", ",", "sf_f", ")", "\n", "img_l2_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_l2_aug\"", "]", ",", "sf_b", ")", "\n", "img_r1_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_r1_aug\"", "]", ",", "sf_f", ")", "\n", "img_r2_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_r2_aug\"", "]", ",", "sf_b", ")", "\n", "\n", "## Depth Loss", "\n", "loss_disp_l1", "=", "self", ".", "depth_loss_left_img", "(", "disp_l1", ",", "disp_r1", ",", "img_l1_aug", ",", "img_r1_aug", ",", "ii", ")", "\n", "loss_disp_l2", "=", "self", ".", "depth_loss_left_img", "(", "disp_l2", ",", "disp_r2", ",", "img_l2_aug", ",", "img_r2_aug", ",", "ii", ")", "\n", "loss_dp_sum", "=", "loss_dp_sum", "+", "(", "loss_disp_l1", "+", "loss_disp_l2", ")", "*", "self", ".", "_weights", "[", "ii", "]", "\n", "\n", "\n", "## Sceneflow Loss           ", "\n", "loss_sceneflow", ",", "loss_im", ",", "loss_3d_s", "=", "self", ".", "sceneflow_loss", "(", "sf_f", ",", "sf_b", ",", "\n", "disp_l1", ",", "disp_l2", ",", "\n", "k_l1_aug", ",", "k_l2_aug", ",", "\n", "img_l1_aug", ",", "img_l2_aug", ",", "\n", "aug_size", ",", "ii", ")", "\n", "\n", "loss_sf_sum", "=", "loss_sf_sum", "+", "loss_sceneflow", "*", "self", ".", "_weights", "[", "ii", "]", "\n", "loss_sf_2d", "=", "loss_sf_2d", "+", "loss_im", "\n", "# loss_sf_3d = loss_sf_3d + loss_pts", "\n", "loss_sf_sm", "=", "loss_sf_sm", "+", "loss_3d_s", "\n", "\n", "# finding weight", "\n", "", "f_loss", "=", "loss_sf_sum", ".", "detach", "(", ")", "\n", "d_loss", "=", "loss_dp_sum", ".", "detach", "(", ")", "\n", "max_val", "=", "torch", ".", "max", "(", "f_loss", ",", "d_loss", ")", "\n", "f_weight", "=", "max_val", "/", "f_loss", "\n", "d_weight", "=", "max_val", "/", "d_loss", "\n", "\n", "total_loss", "=", "loss_sf_sum", "*", "f_weight", "+", "loss_dp_sum", "*", "d_weight", "\n", "\n", "loss_dict", "=", "{", "}", "\n", "loss_dict", "[", "\"dp\"", "]", "=", "loss_dp_sum", "\n", "loss_dict", "[", "\"sf\"", "]", "=", "loss_sf_sum", "\n", "loss_dict", "[", "\"s_2\"", "]", "=", "loss_sf_2d", "\n", "# loss_dict[\"s_3\"] = loss_sf_3d", "\n", "loss_dict", "[", "\"s_3s\"", "]", "=", "loss_sf_sm", "\n", "loss_dict", "[", "\"total_loss\"", "]", "=", "total_loss", "\n", "\n", "self", ".", "detaching_grad_of_outputs", "(", "output_dict", "[", "'output_dict_r'", "]", ")", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Flow_Only.__init__": [[1104, 1110], ["torch.Module.__init__", "models.modules_sceneflow.WarpingLayer_Flow"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Loss_Flow_Only", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_weights", "=", "[", "4.0", ",", "2.0", ",", "1.0", ",", "1.0", ",", "1.0", "]", "\n", "self", ".", "_ssim_w", "=", "0.85", "\n", "self", ".", "_warping_layer", "=", "WarpingLayer_Flow", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Flow_Only.forward": [[1111, 1150], ["enumerate", "zip", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "losses.Loss_Flow_Only._warping_layer", "losses.Loss_Flow_Only._warping_layer", "_adaptive_disocc_detection().detach", "_adaptive_disocc_detection().detach", "img_diff1[].mean", "img_diff2[].mean", "img_diff1[].detach_", "img_diff2[].detach_", "_smoothness_motion_2nd().mean", "_smoothness_motion_2nd().mean", "losses._adaptive_disocc_detection", "losses._adaptive_disocc_detection", "losses._smoothness_motion_2nd", "losses._smoothness_motion_2nd", "losses._elementwise_l1", "losses._SSIM", "losses._elementwise_l1", "losses._SSIM"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._adaptive_disocc_detection", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._adaptive_disocc_detection", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM"], ["", "def", "forward", "(", "self", ",", "output_dict", ",", "target_dict", ")", ":", "\n", "\n", "## Loss", "\n", "        ", "total_loss", "=", "0", "\n", "loss_sf_2d", "=", "0", "\n", "loss_sf_sm", "=", "0", "\n", "\n", "for", "ii", ",", "(", "sf_f", ",", "sf_b", ")", "in", "enumerate", "(", "zip", "(", "output_dict", "[", "'flow_f'", "]", ",", "output_dict", "[", "'flow_b'", "]", ")", ")", ":", "\n", "\n", "## Depth2Pts            ", "\n", "            ", "img_l1", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_l1_aug\"", "]", ",", "sf_f", ")", "\n", "img_l2", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_l2_aug\"", "]", ",", "sf_b", ")", "\n", "\n", "img_l2_warp", "=", "self", ".", "_warping_layer", "(", "img_l2", ",", "sf_f", ")", "\n", "img_l1_warp", "=", "self", ".", "_warping_layer", "(", "img_l1", ",", "sf_b", ")", "\n", "occ_map_f", "=", "_adaptive_disocc_detection", "(", "sf_b", ")", ".", "detach", "(", ")", "\n", "occ_map_b", "=", "_adaptive_disocc_detection", "(", "sf_f", ")", ".", "detach", "(", ")", "\n", "\n", "img_diff1", "=", "(", "_elementwise_l1", "(", "img_l1", ",", "img_l2_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l1", ",", "img_l2_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "img_diff2", "=", "(", "_elementwise_l1", "(", "img_l2", ",", "img_l1_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l2", ",", "img_l1_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "loss_im1", "=", "img_diff1", "[", "occ_map_f", "]", ".", "mean", "(", ")", "\n", "loss_im2", "=", "img_diff2", "[", "occ_map_b", "]", ".", "mean", "(", ")", "\n", "img_diff1", "[", "~", "occ_map_f", "]", ".", "detach_", "(", ")", "\n", "img_diff2", "[", "~", "occ_map_b", "]", ".", "detach_", "(", ")", "\n", "loss_im", "=", "loss_im1", "+", "loss_im2", "\n", "\n", "loss_smooth", "=", "_smoothness_motion_2nd", "(", "sf_f", "/", "20.0", ",", "img_l1", ",", "beta", "=", "10.0", ")", ".", "mean", "(", ")", "+", "_smoothness_motion_2nd", "(", "sf_b", "/", "20.0", ",", "img_l2", ",", "beta", "=", "10.0", ")", ".", "mean", "(", ")", "\n", "\n", "total_loss", "=", "total_loss", "+", "(", "loss_im", "+", "10.0", "*", "loss_smooth", ")", "*", "self", ".", "_weights", "[", "ii", "]", "\n", "\n", "loss_sf_2d", "=", "loss_sf_2d", "+", "loss_im", "\n", "loss_sf_sm", "=", "loss_sf_sm", "+", "loss_smooth", "\n", "\n", "", "loss_dict", "=", "{", "}", "\n", "loss_dict", "[", "\"ofd2\"", "]", "=", "loss_sf_2d", "\n", "loss_dict", "[", "\"ofs2\"", "]", "=", "loss_sf_sm", "\n", "loss_dict", "[", "\"total_loss\"", "]", "=", "total_loss", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Eval_Flow_Only.__init__": [[1152, 1154], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Eval_Flow_Only", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Eval_Flow_Only.upsample_flow_as": [[1156, 1165], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate.chunk", "float", "float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "flow.size", "output_as.size"], "methods", ["None"], ["", "def", "upsample_flow_as", "(", "self", ",", "flow", ",", "output_as", ")", ":", "\n", "        ", "size_inputs", "=", "flow", ".", "size", "(", ")", "[", "2", ":", "4", "]", "\n", "size_targets", "=", "output_as", ".", "size", "(", ")", "[", "2", ":", "4", "]", "\n", "resized_flow", "=", "tf", ".", "interpolate", "(", "flow", ",", "size", "=", "size_targets", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "True", ")", "\n", "# correct scaling of flow", "\n", "u", ",", "v", "=", "resized_flow", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "u", "*=", "float", "(", "size_targets", "[", "1", "]", "/", "size_inputs", "[", "1", "]", ")", "\n", "v", "*=", "float", "(", "size_targets", "[", "0", "]", "/", "size_inputs", "[", "0", "]", ")", "\n", "return", "torch", ".", "cat", "(", "[", "u", ",", "v", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Eval_Flow_Only.forward": [[1167, 1189], ["im_l1.size", "losses.Eval_Flow_Only.upsample_flow_as", "losses._elementwise_epe", "gt_flow_mask.float", "valid_epe.view().sum().mean", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "outlier_epe.view().sum().mean", "valid_epe.view().sum", "outlier_epe.view().sum", "valid_epe.view", "outlier_epe.view"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Eval_Flow_Only.upsample_flow_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_epe", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean"], ["", "def", "forward", "(", "self", ",", "output_dict", ",", "target_dict", ")", ":", "\n", "\n", "        ", "loss_dict", "=", "{", "}", "\n", "\n", "im_l1", "=", "target_dict", "[", "'input_l1'", "]", "\n", "batch_size", ",", "_", ",", "_", ",", "_", "=", "im_l1", ".", "size", "(", ")", "\n", "\n", "gt_flow", "=", "target_dict", "[", "'target_flow'", "]", "\n", "gt_flow_mask", "=", "target_dict", "[", "'target_flow_mask'", "]", "\n", "\n", "## Flow EPE", "\n", "out_flow", "=", "self", ".", "upsample_flow_as", "(", "output_dict", "[", "'flow_f'", "]", "[", "0", "]", ",", "gt_flow", ")", "\n", "valid_epe", "=", "_elementwise_epe", "(", "out_flow", ",", "gt_flow", ")", "*", "gt_flow_mask", ".", "float", "(", ")", "\n", "loss_dict", "[", "\"epe\"", "]", "=", "(", "valid_epe", ".", "view", "(", "batch_size", ",", "-", "1", ")", ".", "sum", "(", "1", ")", ")", ".", "mean", "(", ")", "/", "91875.68", "\n", "\n", "flow_gt_mag", "=", "torch", ".", "norm", "(", "target_dict", "[", "\"target_flow\"", "]", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "1e-8", "\n", "outlier_epe", "=", "(", "valid_epe", ">", "3", ")", ".", "float", "(", ")", "*", "(", "(", "valid_epe", "/", "flow_gt_mag", ")", ">", "0.05", ")", ".", "float", "(", ")", "*", "gt_flow_mask", "\n", "loss_dict", "[", "\"f1\"", "]", "=", "(", "outlier_epe", ".", "view", "(", "batch_size", ",", "-", "1", ")", ".", "sum", "(", "1", ")", ")", ".", "mean", "(", ")", "/", "91875.68", "\n", "\n", "output_dict", "[", "\"out_flow_pp\"", "]", "=", "out_flow", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.__init__": [[1192, 1198], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "Loss_Disp_Only", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_weights", "=", "[", "4.0", ",", "2.0", ",", "1.0", ",", "1.0", ",", "1.0", "]", "\n", "self", ".", "_ssim_w", "=", "0.85", "\n", "self", ".", "_disp_smooth_w", "=", "0.1", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.depth_loss_left_img": [[1200, 1214], ["losses._generate_image_left", "_adaptive_disocc_detection_disp().detach", "img_diff[].mean", "img_diff[].detach_", "_smoothness_motion_2nd().mean", "losses._adaptive_disocc_detection_disp", "losses._smoothness_motion_2nd", "losses._elementwise_l1", "losses._SSIM"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._generate_image_left", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._adaptive_disocc_detection_disp", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM"], ["", "def", "depth_loss_left_img", "(", "self", ",", "disp_l", ",", "disp_r", ",", "img_l_aug", ",", "img_r_aug", ",", "ii", ")", ":", "\n", "\n", "        ", "img_r_warp", "=", "_generate_image_left", "(", "img_r_aug", ",", "disp_l", ")", "\n", "left_occ", "=", "_adaptive_disocc_detection_disp", "(", "disp_r", ")", ".", "detach", "(", ")", "\n", "\n", "## Image loss: ", "\n", "img_diff", "=", "(", "_elementwise_l1", "(", "img_l_aug", ",", "img_r_warp", ")", "*", "(", "1.0", "-", "self", ".", "_ssim_w", ")", "+", "_SSIM", "(", "img_l_aug", ",", "img_r_warp", ")", "*", "self", ".", "_ssim_w", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "loss_img", "=", "(", "img_diff", "[", "left_occ", "]", ")", ".", "mean", "(", ")", "\n", "img_diff", "[", "~", "left_occ", "]", ".", "detach_", "(", ")", "\n", "\n", "## Disparities smoothness", "\n", "loss_smooth", "=", "_smoothness_motion_2nd", "(", "disp_l", ",", "img_l_aug", ",", "beta", "=", "10.0", ")", ".", "mean", "(", ")", "/", "(", "2", "**", "ii", ")", "\n", "\n", "return", "loss_img", "+", "self", ".", "_disp_smooth_w", "*", "loss_smooth", ",", "left_occ", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.detaching_grad_of_outputs": [[1215, 1222], ["range", "len", "[].detach_", "[].detach_"], "methods", ["None"], ["", "def", "detaching_grad_of_outputs", "(", "self", ",", "output_dict", ")", ":", "\n", "\n", "        ", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict", "[", "'disp_l1'", "]", ")", ")", ":", "\n", "            ", "output_dict", "[", "'disp_l1'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "output_dict", "[", "'disp_l2'", "]", "[", "ii", "]", ".", "detach_", "(", ")", "\n", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.forward": [[1223, 1262], ["target_dict[].size", "enumerate", "losses.Loss_Disp_Only.detaching_grad_of_outputs", "zip", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "losses.Loss_Disp_Only.depth_loss_left_img", "losses.Loss_Disp_Only.depth_loss_left_img", "disp_l1.size", "disp_l2.size"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.detaching_grad_of_outputs", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.depth_loss_left_img", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_Disp_Only.depth_loss_left_img"], ["", "def", "forward", "(", "self", ",", "output_dict", ",", "target_dict", ")", ":", "\n", "\n", "        ", "loss_dict", "=", "{", "}", "\n", "\n", "## SceneFlow Loss", "\n", "batch_size", "=", "target_dict", "[", "'input_l1'", "]", ".", "size", "(", "0", ")", "\n", "loss_dp_sum", "=", "0", "\n", "\n", "k_l1_aug", "=", "target_dict", "[", "'input_k_l1_aug'", "]", "\n", "k_l2_aug", "=", "target_dict", "[", "'input_k_l2_aug'", "]", "\n", "aug_size", "=", "target_dict", "[", "'aug_size'", "]", "\n", "\n", "disp_r1_dict", "=", "output_dict", "[", "'output_dict_r'", "]", "[", "'disp_l1'", "]", "\n", "disp_r2_dict", "=", "output_dict", "[", "'output_dict_r'", "]", "[", "'disp_l2'", "]", "\n", "\n", "for", "ii", ",", "(", "disp_l1", ",", "disp_l2", ",", "disp_r1", ",", "disp_r2", ")", "in", "enumerate", "(", "zip", "(", "output_dict", "[", "'disp_l1'", "]", ",", "output_dict", "[", "'disp_l2'", "]", ",", "disp_r1_dict", ",", "disp_r2_dict", ")", ")", ":", "\n", "\n", "            ", "assert", "(", "disp_l1", ".", "size", "(", ")", "[", "2", ":", "4", "]", "==", "disp_l2", ".", "size", "(", ")", "[", "2", ":", "4", "]", ")", "\n", "\n", "## For image reconstruction loss", "\n", "img_l1_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_l1_aug\"", "]", ",", "disp_l1", ")", "\n", "img_l2_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_l2_aug\"", "]", ",", "disp_l2", ")", "\n", "img_r1_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_r1_aug\"", "]", ",", "disp_l1", ")", "\n", "img_r2_aug", "=", "interpolate2d_as", "(", "target_dict", "[", "\"input_r2_aug\"", "]", ",", "disp_l2", ")", "\n", "\n", "## Depth Loss", "\n", "loss_disp_l1", ",", "_", "=", "self", ".", "depth_loss_left_img", "(", "disp_l1", ",", "disp_r1", ",", "img_l1_aug", ",", "img_r1_aug", ",", "ii", ")", "\n", "loss_disp_l2", ",", "_", "=", "self", ".", "depth_loss_left_img", "(", "disp_l2", ",", "disp_r2", ",", "img_l2_aug", ",", "img_r2_aug", ",", "ii", ")", "\n", "loss_dp_sum", "=", "loss_dp_sum", "+", "(", "loss_disp_l1", "+", "loss_disp_l2", ")", "*", "self", ".", "_weights", "[", "ii", "]", "\n", "\n", "", "total_loss", "=", "loss_dp_sum", "\n", "\n", "loss_dict", "=", "{", "}", "\n", "loss_dict", "[", "\"dp\"", "]", "=", "loss_dp_sum", "\n", "loss_dict", "[", "\"total_loss\"", "]", "=", "total_loss", "\n", "\n", "self", ".", "detaching_grad_of_outputs", "(", "output_dict", "[", "'output_dict_r'", "]", ")", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Eval_Disp_Only.__init__": [[1264, 1266], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Eval_Disp_Only", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Eval_Disp_Only.forward": [[1268, 1300], ["losses._disp2depth_kitti_K", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "losses._disp2depth_kitti_K", "losses.eval_module_disp_depth", "utils.interpolation.interpolate2d_as", "gt_disp.size"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._disp2depth_kitti_K", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._disp2depth_kitti_K", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.eval_module_disp_depth", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as"], ["", "def", "forward", "(", "self", ",", "output_dict", ",", "target_dict", ")", ":", "\n", "\n", "\n", "        ", "loss_dict", "=", "{", "}", "\n", "\n", "## Depth Eval", "\n", "gt_disp", "=", "target_dict", "[", "'target_disp'", "]", "\n", "gt_disp_mask", "=", "(", "target_dict", "[", "'target_disp_mask'", "]", "==", "1", ")", "\n", "intrinsics", "=", "target_dict", "[", "'input_k_l1'", "]", "\n", "\n", "out_disp_l1", "=", "interpolate2d_as", "(", "output_dict", "[", "\"disp_l1_pp\"", "]", "[", "0", "]", ",", "gt_disp", ",", "mode", "=", "\"bilinear\"", ")", "*", "gt_disp", ".", "size", "(", "3", ")", "\n", "out_depth_l1", "=", "_disp2depth_kitti_K", "(", "out_disp_l1", ",", "intrinsics", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "out_depth_l1", "=", "torch", ".", "clamp", "(", "out_depth_l1", ",", "1e-3", ",", "80", ")", "\n", "gt_depth_pp", "=", "_disp2depth_kitti_K", "(", "gt_disp", ",", "intrinsics", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "\n", "output_dict_displ", "=", "eval_module_disp_depth", "(", "gt_disp", ",", "gt_disp_mask", ",", "out_disp_l1", ",", "gt_depth_pp", ",", "out_depth_l1", ")", "\n", "\n", "output_dict", "[", "\"out_disp_l_pp\"", "]", "=", "out_disp_l1", "\n", "output_dict", "[", "\"out_depth_l_pp\"", "]", "=", "out_depth_l1", "\n", "\n", "loss_dict", "[", "\"d1\"", "]", "=", "output_dict_displ", "[", "'otl'", "]", "\n", "\n", "loss_dict", "[", "\"ab\"", "]", "=", "output_dict_displ", "[", "'abs_rel'", "]", "\n", "loss_dict", "[", "\"sq\"", "]", "=", "output_dict_displ", "[", "'sq_rel'", "]", "\n", "loss_dict", "[", "\"rms\"", "]", "=", "output_dict_displ", "[", "'rms'", "]", "\n", "loss_dict", "[", "\"lrms\"", "]", "=", "output_dict_displ", "[", "'log_rms'", "]", "\n", "loss_dict", "[", "\"a1\"", "]", "=", "output_dict_displ", "[", "'a1'", "]", "\n", "loss_dict", "[", "\"a2\"", "]", "=", "output_dict_displ", "[", "'a2'", "]", "\n", "loss_dict", "[", "\"a3\"", "]", "=", "output_dict_displ", "[", "'a3'", "]", "\n", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.__init__": [[1307, 1313], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Basis_MonoDepthLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ssim_w", "=", "0.85", "\n", "self", ".", "disp_gradient_w", "=", "0.1", "\n", "self", ".", "lr_w", "=", "1.0", "\n", "self", ".", "n", "=", "4", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.scale_pyramid": [[1314, 1319], ["enumerate", "scaled_imgs.append", "utils.interpolation.interpolate2d_as"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as"], ["", "def", "scale_pyramid", "(", "self", ",", "img_input", ",", "depths", ")", ":", "\n", "        ", "scaled_imgs", "=", "[", "]", "\n", "for", "_", ",", "depth", "in", "enumerate", "(", "depths", ")", ":", "\n", "            ", "scaled_imgs", ".", "append", "(", "interpolate2d_as", "(", "img_input", ",", "depth", ")", ")", "\n", "", "return", "scaled_imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.gradient_x": [[1320, 1325], ["torch.pad", "torch.pad", "torch.pad"], "methods", ["None"], ["", "def", "gradient_x", "(", "self", ",", "img", ")", ":", "\n", "# Pad input to keep output size consistent", "\n", "        ", "img", "=", "tf", ".", "pad", "(", "img", ",", "(", "0", ",", "1", ",", "0", ",", "0", ")", ",", "mode", "=", "\"replicate\"", ")", "\n", "gx", "=", "img", "[", ":", ",", ":", ",", ":", ",", ":", "-", "1", "]", "-", "img", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", "# NCHW", "\n", "return", "gx", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.gradient_y": [[1326, 1331], ["torch.pad", "torch.pad", "torch.pad"], "methods", ["None"], ["", "def", "gradient_y", "(", "self", ",", "img", ")", ":", "\n", "# Pad input to keep output size consistent", "\n", "        ", "img", "=", "tf", ".", "pad", "(", "img", ",", "(", "0", ",", "0", ",", "0", ",", "1", ")", ",", "mode", "=", "\"replicate\"", ")", "\n", "gy", "=", "img", "[", ":", ",", ":", ",", ":", "-", "1", ",", ":", "]", "-", "img", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "# NCHW", "\n", "return", "gy", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.apply_disparity": [[1332, 1346], ["img.size", "torch.linspace().repeat().type_as", "torch.linspace().repeat().type_as", "torch.linspace().repeat().type_as", "torch.linspace().repeat().type_as", "torch.linspace().repeat().type_as", "torch.linspace().repeat().type_as", "torch.linspace().repeat().type_as", "torch.linspace().repeat().type_as", "torch.linspace().repeat().type_as", "torch.linspace().repeat().transpose().type_as", "torch.linspace().repeat().transpose().type_as", "torch.linspace().repeat().transpose().type_as", "torch.linspace().repeat().transpose().type_as", "torch.linspace().repeat().transpose().type_as", "torch.linspace().repeat().transpose().type_as", "torch.linspace().repeat().transpose().type_as", "torch.linspace().repeat().transpose().type_as", "torch.linspace().repeat().transpose().type_as", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat().transpose", "torch.linspace().repeat().transpose", "torch.linspace().repeat().transpose", "torch.linspace().repeat().transpose", "torch.linspace().repeat().transpose", "torch.linspace().repeat().transpose", "torch.linspace().repeat().transpose", "torch.linspace().repeat().transpose", "torch.linspace().repeat().transpose", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace"], "methods", ["None"], ["", "def", "apply_disparity", "(", "self", ",", "img", ",", "disp", ")", ":", "\n", "        ", "batch_size", ",", "_", ",", "height", ",", "width", "=", "img", ".", "size", "(", ")", "\n", "\n", "# Original coordinates of pixels", "\n", "x_base", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "width", ")", ".", "repeat", "(", "batch_size", ",", "height", ",", "1", ")", ".", "type_as", "(", "img", ")", "\n", "y_base", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "height", ")", ".", "repeat", "(", "batch_size", ",", "width", ",", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "type_as", "(", "img", ")", "\n", "\n", "# Apply shift in X direction", "\n", "x_shifts", "=", "disp", "[", ":", ",", "0", ",", ":", ",", ":", "]", "# Disparity is passed in NCHW format with 1 channel", "\n", "flow_field", "=", "torch", ".", "stack", "(", "(", "x_base", "+", "x_shifts", ",", "y_base", ")", ",", "dim", "=", "3", ")", "\n", "# In grid_sample coordinates are assumed to be between -1 and 1", "\n", "output", "=", "tf", ".", "grid_sample", "(", "img", ",", "2", "*", "flow_field", "-", "1", ",", "mode", "=", "'bilinear'", ",", "padding_mode", "=", "'zeros'", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.generate_image_left": [[1347, 1349], ["losses.Basis_MonoDepthLoss.apply_disparity"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.apply_disparity"], ["", "def", "generate_image_left", "(", "self", ",", "img", ",", "disp", ")", ":", "\n", "        ", "return", "self", ".", "apply_disparity", "(", "img", ",", "-", "disp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.generate_image_right": [[1350, 1352], ["losses.Basis_MonoDepthLoss.apply_disparity"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.apply_disparity"], ["", "def", "generate_image_right", "(", "self", ",", "img", ",", "disp", ")", ":", "\n", "        ", "return", "self", ".", "apply_disparity", "(", "img", ",", "disp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.SSIM": [[1353, 1374], ["mu_x.pow", "mu_y.pow", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.pad", "torch.pad", "torch.pad", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d"], "methods", ["None"], ["", "def", "SSIM", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "C1", "=", "0.01", "**", "2", "\n", "C2", "=", "0.03", "**", "2", "\n", "\n", "mu_x", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "1", ")", "(", "x", ")", "\n", "mu_y", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "1", ")", "(", "y", ")", "\n", "mu_x_mu_y", "=", "mu_x", "*", "mu_y", "\n", "mu_x_sq", "=", "mu_x", ".", "pow", "(", "2", ")", "\n", "mu_y_sq", "=", "mu_y", ".", "pow", "(", "2", ")", "\n", "\n", "sigma_x", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "1", ")", "(", "x", "*", "x", ")", "-", "mu_x_sq", "\n", "sigma_y", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "1", ")", "(", "y", "*", "y", ")", "-", "mu_y_sq", "\n", "sigma_xy", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "1", ")", "(", "x", "*", "y", ")", "-", "mu_x_mu_y", "\n", "\n", "SSIM_n", "=", "(", "2", "*", "mu_x_mu_y", "+", "C1", ")", "*", "(", "2", "*", "sigma_xy", "+", "C2", ")", "\n", "SSIM_d", "=", "(", "mu_x_sq", "+", "mu_y_sq", "+", "C1", ")", "*", "(", "sigma_x", "+", "sigma_y", "+", "C2", ")", "\n", "SSIM", "=", "SSIM_n", "/", "SSIM_d", "\n", "\n", "SSIM_img", "=", "torch", ".", "clamp", "(", "(", "1", "-", "SSIM", ")", "/", "2", ",", "0", ",", "1", ")", "\n", "\n", "return", "tf", ".", "pad", "(", "SSIM_img", ",", "pad", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'constant'", ",", "value", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.disp_smoothness": [[1375, 1389], ["losses.Basis_MonoDepthLoss.gradient_x", "losses.Basis_MonoDepthLoss.gradient_y", "losses.Basis_MonoDepthLoss.gradient_x", "losses.Basis_MonoDepthLoss.gradient_y", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "range", "range", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "range", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.gradient_x", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.gradient_y", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.gradient_x", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.gradient_y", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean"], ["", "def", "disp_smoothness", "(", "self", ",", "disp", ",", "pyramid", ")", ":", "\n", "        ", "disp_gradients_x", "=", "[", "self", ".", "gradient_x", "(", "d", ")", "for", "d", "in", "disp", "]", "\n", "disp_gradients_y", "=", "[", "self", ".", "gradient_y", "(", "d", ")", "for", "d", "in", "disp", "]", "\n", "\n", "image_gradients_x", "=", "[", "self", ".", "gradient_x", "(", "img", ")", "for", "img", "in", "pyramid", "]", "\n", "image_gradients_y", "=", "[", "self", ".", "gradient_y", "(", "img", ")", "for", "img", "in", "pyramid", "]", "\n", "\n", "weights_x", "=", "[", "torch", ".", "exp", "(", "-", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "g", ")", ",", "1", ",", "keepdim", "=", "True", ")", ")", "for", "g", "in", "image_gradients_x", "]", "\n", "weights_y", "=", "[", "torch", ".", "exp", "(", "-", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "g", ")", ",", "1", ",", "keepdim", "=", "True", ")", ")", "for", "g", "in", "image_gradients_y", "]", "\n", "\n", "smoothness_x", "=", "[", "disp_gradients_x", "[", "i", "]", "*", "weights_x", "[", "i", "]", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "smoothness_y", "=", "[", "disp_gradients_y", "[", "i", "]", "*", "weights_y", "[", "i", "]", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "\n", "return", "[", "torch", ".", "abs", "(", "smoothness_x", "[", "i", "]", ")", "+", "torch", ".", "abs", "(", "smoothness_y", "[", "i", "]", ")", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.forward": [[1390, 1442], ["len", "losses.Basis_MonoDepthLoss.scale_pyramid", "losses.Basis_MonoDepthLoss.scale_pyramid", "sum", "sum", "losses.Basis_MonoDepthLoss.disp_smoothness", "losses.Basis_MonoDepthLoss.disp_smoothness", "sum", "losses._adaptive_disocc_detection_disp", "losses._adaptive_disocc_detection_disp", "losses.Basis_MonoDepthLoss.generate_image_left", "losses.Basis_MonoDepthLoss.generate_image_right", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "losses.Basis_MonoDepthLoss.generate_image_left", "losses.Basis_MonoDepthLoss.generate_image_right", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "range", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "range", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "losses.Basis_MonoDepthLoss.SSIM().mean", "losses.Basis_MonoDepthLoss.SSIM().mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "losses.Basis_MonoDepthLoss.SSIM", "losses.Basis_MonoDepthLoss.SSIM"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.scale_pyramid", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.scale_pyramid", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.disp_smoothness", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.disp_smoothness", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._adaptive_disocc_detection_disp", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._adaptive_disocc_detection_disp", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.generate_image_left", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.generate_image_right", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.generate_image_left", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.generate_image_right", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.SSIM", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Basis_MonoDepthLoss.SSIM"], ["", "def", "forward", "(", "self", ",", "disp_l", ",", "disp_r", ",", "img_l", ",", "img_r", ")", ":", "\n", "\n", "        ", "self", ".", "n", "=", "len", "(", "disp_l", ")", "\n", "\n", "## Image pyramid", "\n", "img_l_pyramid", "=", "self", ".", "scale_pyramid", "(", "img_l", ",", "disp_l", ")", "\n", "img_r_pyramid", "=", "self", ".", "scale_pyramid", "(", "img_r", ",", "disp_r", ")", "\n", "\n", "## Disocc map", "\n", "right_occ", "=", "[", "_adaptive_disocc_detection_disp", "(", "-", "disp_l", "[", "i", "]", ")", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "left_occ", "=", "[", "_adaptive_disocc_detection_disp", "(", "disp_r", "[", "i", "]", ")", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "\n", "\n", "## Image reconstruction loss", "\n", "left_est", "=", "[", "self", ".", "generate_image_left", "(", "img_r_pyramid", "[", "i", "]", ",", "disp_l", "[", "i", "]", ")", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "right_est", "=", "[", "self", ".", "generate_image_right", "(", "img_l_pyramid", "[", "i", "]", ",", "disp_r", "[", "i", "]", ")", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "\n", "# L1", "\n", "l1_left", "=", "[", "torch", ".", "mean", "(", "(", "torch", ".", "abs", "(", "left_est", "[", "i", "]", "-", "img_l_pyramid", "[", "i", "]", ")", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "[", "left_occ", "[", "i", "]", "]", ")", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "l1_right", "=", "[", "torch", ".", "mean", "(", "(", "torch", ".", "abs", "(", "right_est", "[", "i", "]", "-", "img_r_pyramid", "[", "i", "]", ")", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "[", "right_occ", "[", "i", "]", "]", ")", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "\n", "# SSIM", "\n", "ssim_left", "=", "[", "torch", ".", "mean", "(", "(", "self", ".", "SSIM", "(", "left_est", "[", "i", "]", ",", "img_l_pyramid", "[", "i", "]", ")", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "[", "left_occ", "[", "i", "]", "]", ")", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "ssim_right", "=", "[", "torch", ".", "mean", "(", "(", "self", ".", "SSIM", "(", "right_est", "[", "i", "]", ",", "img_r_pyramid", "[", "i", "]", ")", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "[", "right_occ", "[", "i", "]", "]", ")", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "\n", "image_loss_left", "=", "[", "self", ".", "ssim_w", "*", "ssim_left", "[", "i", "]", "+", "(", "1", "-", "self", ".", "ssim_w", ")", "*", "l1_left", "[", "i", "]", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "image_loss_right", "=", "[", "self", ".", "ssim_w", "*", "ssim_right", "[", "i", "]", "+", "(", "1", "-", "self", ".", "ssim_w", ")", "*", "l1_right", "[", "i", "]", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "image_loss", "=", "sum", "(", "image_loss_left", "+", "image_loss_right", ")", "\n", "\n", "\n", "## L-R Consistency loss", "\n", "right_left_disp", "=", "[", "self", ".", "generate_image_left", "(", "disp_r", "[", "i", "]", ",", "disp_l", "[", "i", "]", ")", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "left_right_disp", "=", "[", "self", ".", "generate_image_right", "(", "disp_l", "[", "i", "]", ",", "disp_r", "[", "i", "]", ")", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "\n", "lr_left_loss", "=", "[", "torch", ".", "mean", "(", "(", "torch", ".", "abs", "(", "right_left_disp", "[", "i", "]", "-", "disp_l", "[", "i", "]", ")", ")", "[", "left_occ", "[", "i", "]", "]", ")", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "lr_right_loss", "=", "[", "torch", ".", "mean", "(", "(", "torch", ".", "abs", "(", "left_right_disp", "[", "i", "]", "-", "disp_r", "[", "i", "]", ")", ")", "[", "right_occ", "[", "i", "]", "]", ")", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "lr_loss", "=", "sum", "(", "lr_left_loss", "+", "lr_right_loss", ")", "\n", "\n", "\n", "## Disparities smoothness", "\n", "disp_left_smoothness", "=", "self", ".", "disp_smoothness", "(", "disp_l", ",", "img_l_pyramid", ")", "\n", "disp_right_smoothness", "=", "self", ".", "disp_smoothness", "(", "disp_r", ",", "img_r_pyramid", ")", "\n", "\n", "disp_left_loss", "=", "[", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "disp_left_smoothness", "[", "i", "]", ")", ")", "/", "2", "**", "i", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "disp_right_loss", "=", "[", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "disp_right_smoothness", "[", "i", "]", ")", ")", "/", "2", "**", "i", "for", "i", "in", "range", "(", "self", ".", "n", ")", "]", "\n", "disp_gradient_loss", "=", "sum", "(", "disp_left_loss", "+", "disp_right_loss", ")", "\n", "\n", "\n", "## Loss sum", "\n", "loss", "=", "image_loss", "+", "self", ".", "disp_gradient_w", "*", "disp_gradient_loss", "+", "self", ".", "lr_w", "*", "lr_loss", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_MonoDepth.__init__": [[1444, 1448], ["torch.Module.__init__", "losses.Basis_MonoDepthLoss"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "\n", "        ", "super", "(", "Loss_MonoDepth", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_depth_loss", "=", "Basis_MonoDepthLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Loss_MonoDepth.forward": [[1449, 1456], ["losses.Loss_MonoDepth._depth_loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "output_dict", ",", "target_dict", ")", ":", "\n", "\n", "        ", "loss_dict", "=", "{", "}", "\n", "depth_loss", "=", "self", ".", "_depth_loss", "(", "output_dict", "[", "'disp_l1'", "]", ",", "output_dict", "[", "'disp_r1'", "]", ",", "target_dict", "[", "'input_l1'", "]", ",", "target_dict", "[", "'input_r1'", "]", ")", "\n", "loss_dict", "[", "'total_loss'", "]", "=", "depth_loss", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Eval_MonoDepth.__init__": [[1458, 1460], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Eval_MonoDepth", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.Eval_MonoDepth.forward": [[1461, 1483], ["losses._disp2depth_kitti_K", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "losses._disp2depth_kitti_K", "losses.eval_module_disp_depth", "utils.interpolation.interpolate2d_as", "gt_disp.size"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._disp2depth_kitti_K", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._disp2depth_kitti_K", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.eval_module_disp_depth", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as"], ["", "def", "forward", "(", "self", ",", "output_dict", ",", "target_dict", ")", ":", "\n", "\n", "        ", "loss_dict", "=", "{", "}", "\n", "\n", "## Depth Eval", "\n", "gt_disp", "=", "target_dict", "[", "'target_disp'", "]", "\n", "gt_disp_mask", "=", "(", "target_dict", "[", "'target_disp_mask'", "]", "==", "1", ")", "\n", "intrinsics", "=", "target_dict", "[", "'input_k_l1_orig'", "]", "\n", "\n", "out_disp_l_pp", "=", "interpolate2d_as", "(", "output_dict", "[", "\"disp_l1_pp\"", "]", "[", "0", "]", ",", "gt_disp", ",", "mode", "=", "\"bilinear\"", ")", "*", "gt_disp", ".", "size", "(", "3", ")", "\n", "out_depth_l_pp", "=", "_disp2depth_kitti_K", "(", "out_disp_l_pp", ",", "intrinsics", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "out_depth_l_pp", "=", "torch", ".", "clamp", "(", "out_depth_l_pp", ",", "1e-3", ",", "80", ")", "\n", "gt_depth_pp", "=", "_disp2depth_kitti_K", "(", "gt_disp", ",", "intrinsics", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "\n", "output_dict_displ", "=", "eval_module_disp_depth", "(", "gt_disp", ",", "gt_disp_mask", ",", "out_disp_l_pp", ",", "gt_depth_pp", ",", "out_depth_l_pp", ")", "\n", "\n", "output_dict", "[", "\"out_disp_l_pp\"", "]", "=", "out_disp_l_pp", "\n", "output_dict", "[", "\"out_depth_l_pp\"", "]", "=", "out_depth_l_pp", "\n", "loss_dict", "[", "\"ab_r\"", "]", "=", "output_dict_displ", "[", "'abs_rel'", "]", "\n", "loss_dict", "[", "\"sq_r\"", "]", "=", "output_dict_displ", "[", "'sq_rel'", "]", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_epe": [[18, 21], ["torch.norm", "torch.norm", "torch.norm"], "function", ["None"], ["def", "_elementwise_epe", "(", "input_flow", ",", "target_flow", ")", ":", "\n", "    ", "residual", "=", "target_flow", "-", "input_flow", "\n", "return", "torch", ".", "norm", "(", "residual", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_l1": [[22, 25], ["torch.norm", "torch.norm", "torch.norm"], "function", ["None"], ["", "def", "_elementwise_l1", "(", "input_flow", ",", "target_flow", ")", ":", "\n", "    ", "residual", "=", "target_flow", "-", "input_flow", "\n", "return", "torch", ".", "norm", "(", "residual", ",", "p", "=", "1", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_robust_epe_char": [[26, 29], ["torch.pow", "torch.pow", "torch.pow", "torch.norm", "torch.norm", "torch.norm"], "function", ["None"], ["", "def", "_elementwise_robust_epe_char", "(", "input_flow", ",", "target_flow", ")", ":", "\n", "    ", "residual", "=", "target_flow", "-", "input_flow", "\n", "return", "torch", ".", "pow", "(", "torch", ".", "norm", "(", "residual", ",", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "0.01", ",", "0.4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._SSIM": [[30, 51], ["mu_x.pow", "mu_y.pow", "torch.clamp", "torch.clamp", "torch.clamp", "torch.pad", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d"], "function", ["None"], ["", "def", "_SSIM", "(", "x", ",", "y", ")", ":", "\n", "    ", "C1", "=", "0.01", "**", "2", "\n", "C2", "=", "0.03", "**", "2", "\n", "\n", "mu_x", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "1", ")", "(", "x", ")", "\n", "mu_y", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "1", ")", "(", "y", ")", "\n", "mu_x_mu_y", "=", "mu_x", "*", "mu_y", "\n", "mu_x_sq", "=", "mu_x", ".", "pow", "(", "2", ")", "\n", "mu_y_sq", "=", "mu_y", ".", "pow", "(", "2", ")", "\n", "\n", "sigma_x", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "1", ")", "(", "x", "*", "x", ")", "-", "mu_x_sq", "\n", "sigma_y", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "1", ")", "(", "y", "*", "y", ")", "-", "mu_y_sq", "\n", "sigma_xy", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "1", ")", "(", "x", "*", "y", ")", "-", "mu_x_mu_y", "\n", "\n", "SSIM_n", "=", "(", "2", "*", "mu_x_mu_y", "+", "C1", ")", "*", "(", "2", "*", "sigma_xy", "+", "C2", ")", "\n", "SSIM_d", "=", "(", "mu_x_sq", "+", "mu_y_sq", "+", "C1", ")", "*", "(", "sigma_x", "+", "sigma_y", "+", "C2", ")", "\n", "SSIM", "=", "SSIM_n", "/", "SSIM_d", "\n", "\n", "SSIM_img", "=", "torch", ".", "clamp", "(", "(", "1", "-", "SSIM", ")", "/", "2", ",", "0", ",", "1", ")", "\n", "\n", "return", "tf", ".", "pad", "(", "SSIM_img", ",", "pad", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'constant'", ",", "value", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._apply_disparity": [[52, 66], ["img.size", "torch.linspace().repeat().type_as", "torch.linspace().repeat().type_as", "torch.linspace().repeat().type_as", "torch.linspace().repeat().transpose().type_as", "torch.linspace().repeat().transpose().type_as", "torch.linspace().repeat().transpose().type_as", "torch.stack", "torch.stack", "torch.stack", "torch.grid_sample", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat().transpose", "torch.linspace().repeat().transpose", "torch.linspace().repeat().transpose", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace().repeat", "torch.linspace", "torch.linspace", "torch.linspace"], "function", ["None"], ["", "def", "_apply_disparity", "(", "img", ",", "disp", ")", ":", "\n", "    ", "batch_size", ",", "_", ",", "height", ",", "width", "=", "img", ".", "size", "(", ")", "\n", "\n", "# Original coordinates of pixels", "\n", "x_base", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "width", ")", ".", "repeat", "(", "batch_size", ",", "height", ",", "1", ")", ".", "type_as", "(", "img", ")", "\n", "y_base", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "height", ")", ".", "repeat", "(", "batch_size", ",", "width", ",", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "type_as", "(", "img", ")", "\n", "\n", "# Apply shift in X direction", "\n", "x_shifts", "=", "disp", "[", ":", ",", "0", ",", ":", ",", ":", "]", "# Disparity is passed in NCHW format with 1 channel", "\n", "flow_field", "=", "torch", ".", "stack", "(", "(", "x_base", "+", "x_shifts", ",", "y_base", ")", ",", "dim", "=", "3", ")", "\n", "# In grid_sample coordinates are assumed to be between -1 and 1", "\n", "output", "=", "tf", ".", "grid_sample", "(", "img", ",", "2", "*", "flow_field", "-", "1", ",", "mode", "=", "'bilinear'", ",", "padding_mode", "=", "'zeros'", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._generate_image_left": [[67, 69], ["losses._apply_disparity"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._apply_disparity"], ["", "def", "_generate_image_left", "(", "img", ",", "disp", ")", ":", "\n", "    ", "return", "_apply_disparity", "(", "img", ",", "-", "disp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._adaptive_disocc_detection": [[70, 84], ["flow.transpose().transpose.size", "torch.ones().float().requires_grad_", "torch.ones().float().requires_grad_", "torch.ones().float().requires_grad_", "flow.transpose().transpose.transpose().transpose", "torch.clamp", "torch.clamp", "torch.clamp", "torch.ones().requires_grad_.float().sum", "torch.ones().requires_grad_", "torch.ones().requires_grad_", "torch.ones().requires_grad_", "torch.ones().float", "torch.ones().float", "torch.ones().float", "flow.transpose().transpose.transpose", "models.forwardwarp_package.forward_warp.forward_warp", "torch.ones().requires_grad_.float", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "function", ["None"], ["", "def", "_adaptive_disocc_detection", "(", "flow", ")", ":", "\n", "\n", "# init mask", "\n", "    ", "b", ",", "_", ",", "h", ",", "w", ",", "=", "flow", ".", "size", "(", ")", "\n", "mask", "=", "torch", ".", "ones", "(", "b", ",", "1", ",", "h", ",", "w", ",", "dtype", "=", "flow", ".", "dtype", ",", "device", "=", "flow", ".", "device", ")", ".", "float", "(", ")", ".", "requires_grad_", "(", "False", ")", "\n", "flow", "=", "flow", ".", "transpose", "(", "1", ",", "2", ")", ".", "transpose", "(", "2", ",", "3", ")", "\n", "\n", "disocc", "=", "torch", ".", "clamp", "(", "forward_warp", "(", ")", "(", "mask", ",", "flow", ")", ",", "0", ",", "1", ")", "\n", "disocc_map", "=", "(", "disocc", ">", "0.5", ")", "\n", "\n", "if", "disocc_map", ".", "float", "(", ")", ".", "sum", "(", ")", "<", "(", "b", "*", "h", "*", "w", "/", "2", ")", ":", "\n", "        ", "disocc_map", "=", "torch", ".", "ones", "(", "b", ",", "1", ",", "h", ",", "w", ",", "dtype", "=", "torch", ".", "bool", ",", "device", "=", "flow", ".", "device", ")", ".", "requires_grad_", "(", "False", ")", "\n", "\n", "", "return", "disocc_map", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._adaptive_disocc_detection_disp": [[85, 101], ["disp.size", "torch.ones().float().requires_grad_", "torch.ones().float().requires_grad_", "torch.ones().float().requires_grad_", "torch.zeros().float().requires_grad_", "torch.zeros().float().requires_grad_", "torch.zeros().float().requires_grad_", "flow.transpose().transpose.transpose().transpose", "torch.clamp", "torch.clamp", "torch.clamp", "torch.ones().requires_grad_.float().sum", "torch.ones().requires_grad_", "torch.ones().requires_grad_", "torch.ones().requires_grad_", "torch.ones().float", "torch.ones().float", "torch.ones().float", "torch.zeros().float", "torch.zeros().float", "torch.zeros().float", "flow.transpose().transpose.transpose", "models.forwardwarp_package.forward_warp.forward_warp", "torch.ones().requires_grad_.float", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros"], "function", ["None"], ["", "def", "_adaptive_disocc_detection_disp", "(", "disp", ")", ":", "\n", "\n", "# # init", "\n", "    ", "b", ",", "_", ",", "h", ",", "w", ",", "=", "disp", ".", "size", "(", ")", "\n", "mask", "=", "torch", ".", "ones", "(", "b", ",", "1", ",", "h", ",", "w", ",", "dtype", "=", "disp", ".", "dtype", ",", "device", "=", "disp", ".", "device", ")", ".", "float", "(", ")", ".", "requires_grad_", "(", "False", ")", "\n", "flow", "=", "torch", ".", "zeros", "(", "b", ",", "2", ",", "h", ",", "w", ",", "dtype", "=", "disp", ".", "dtype", ",", "device", "=", "disp", ".", "device", ")", ".", "float", "(", ")", ".", "requires_grad_", "(", "False", ")", "\n", "flow", "[", ":", ",", "0", ":", "1", ",", ":", ",", ":", "]", "=", "disp", "*", "w", "\n", "flow", "=", "flow", ".", "transpose", "(", "1", ",", "2", ")", ".", "transpose", "(", "2", ",", "3", ")", "\n", "\n", "disocc", "=", "torch", ".", "clamp", "(", "forward_warp", "(", ")", "(", "mask", ",", "flow", ")", ",", "0", ",", "1", ")", "\n", "disocc_map", "=", "(", "disocc", ">", "0.5", ")", "\n", "\n", "if", "disocc_map", ".", "float", "(", ")", ".", "sum", "(", ")", "<", "(", "b", "*", "h", "*", "w", "/", "2", ")", ":", "\n", "        ", "disocc_map", "=", "torch", ".", "ones", "(", "b", ",", "1", ",", "h", ",", "w", ",", "dtype", "=", "torch", ".", "bool", ",", "device", "=", "disp", ".", "device", ")", ".", "requires_grad_", "(", "False", ")", "\n", "\n", "", "return", "disocc_map", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._gradient_x": [[102, 106], ["torch.pad"], "function", ["None"], ["", "def", "_gradient_x", "(", "img", ")", ":", "\n", "    ", "img", "=", "tf", ".", "pad", "(", "img", ",", "(", "0", ",", "1", ",", "0", ",", "0", ")", ",", "mode", "=", "\"replicate\"", ")", "\n", "gx", "=", "img", "[", ":", ",", ":", ",", ":", ",", ":", "-", "1", "]", "-", "img", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", "# NCHW", "\n", "return", "gx", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._gradient_y": [[107, 111], ["torch.pad"], "function", ["None"], ["", "def", "_gradient_y", "(", "img", ")", ":", "\n", "    ", "img", "=", "tf", ".", "pad", "(", "img", ",", "(", "0", ",", "0", ",", "0", ",", "1", ")", ",", "mode", "=", "\"replicate\"", ")", "\n", "gy", "=", "img", "[", ":", ",", ":", ",", ":", "-", "1", ",", ":", "]", "-", "img", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "# NCHW", "\n", "return", "gy", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._gradient_x_2nd": [[112, 117], ["torch.pad", "torch.pad"], "function", ["None"], ["", "def", "_gradient_x_2nd", "(", "img", ")", ":", "\n", "    ", "img_l", "=", "tf", ".", "pad", "(", "img", ",", "(", "1", ",", "0", ",", "0", ",", "0", ")", ",", "mode", "=", "\"replicate\"", ")", "[", ":", ",", ":", ",", ":", ",", ":", "-", "1", "]", "\n", "img_r", "=", "tf", ".", "pad", "(", "img", ",", "(", "0", ",", "1", ",", "0", ",", "0", ")", ",", "mode", "=", "\"replicate\"", ")", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", "\n", "gx", "=", "img_l", "+", "img_r", "-", "2", "*", "img", "\n", "return", "gx", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._gradient_y_2nd": [[118, 123], ["torch.pad", "torch.pad"], "function", ["None"], ["", "def", "_gradient_y_2nd", "(", "img", ")", ":", "\n", "    ", "img_t", "=", "tf", ".", "pad", "(", "img", ",", "(", "0", ",", "0", ",", "1", ",", "0", ")", ",", "mode", "=", "\"replicate\"", ")", "[", ":", ",", ":", ",", ":", "-", "1", ",", ":", "]", "\n", "img_b", "=", "tf", ".", "pad", "(", "img", ",", "(", "0", ",", "0", ",", "0", ",", "1", ")", ",", "mode", "=", "\"replicate\"", ")", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "\n", "gy", "=", "img_t", "+", "img_b", "-", "2", "*", "img", "\n", "return", "gy", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._smoothness_motion_2nd": [[124, 137], ["losses._gradient_x_2nd", "losses._gradient_y_2nd", "losses._gradient_x", "losses._gradient_y", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "smoothness_x.abs", "smoothness_y.abs", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._gradient_x_2nd", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._gradient_y_2nd", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._gradient_x", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._gradient_y", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean"], ["", "def", "_smoothness_motion_2nd", "(", "sf", ",", "img", ",", "beta", "=", "1", ")", ":", "\n", "    ", "sf_grad_x", "=", "_gradient_x_2nd", "(", "sf", ")", "\n", "sf_grad_y", "=", "_gradient_y_2nd", "(", "sf", ")", "\n", "\n", "img_grad_x", "=", "_gradient_x", "(", "img", ")", "\n", "img_grad_y", "=", "_gradient_y", "(", "img", ")", "\n", "weights_x", "=", "torch", ".", "exp", "(", "-", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "img_grad_x", ")", ",", "1", ",", "keepdim", "=", "True", ")", "*", "beta", ")", "\n", "weights_y", "=", "torch", ".", "exp", "(", "-", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "img_grad_y", ")", ",", "1", ",", "keepdim", "=", "True", ")", "*", "beta", ")", "\n", "\n", "smoothness_x", "=", "sf_grad_x", "*", "weights_x", "\n", "smoothness_y", "=", "sf_grad_y", "*", "weights_y", "\n", "\n", "return", "(", "smoothness_x", ".", "abs", "(", ")", "+", "smoothness_y", ".", "abs", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._disp2depth_kitti_K": [[138, 144], ["k_value.unsqueeze().unsqueeze().unsqueeze", "k_value.unsqueeze().unsqueeze", "k_value.unsqueeze"], "function", ["None"], ["", "def", "_disp2depth_kitti_K", "(", "disp", ",", "k_value", ")", ":", "\n", "\n", "    ", "mask", "=", "(", "disp", ">", "0", ")", ".", "float", "(", ")", "\n", "depth", "=", "k_value", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", "*", "0.54", "/", "(", "disp", "+", "(", "1.0", "-", "mask", ")", ")", "\n", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._depth2disp_kitti_K": [[145, 150], ["k_value.unsqueeze().unsqueeze().unsqueeze", "k_value.unsqueeze().unsqueeze", "k_value.unsqueeze"], "function", ["None"], ["", "def", "_depth2disp_kitti_K", "(", "depth", ",", "k_value", ")", ":", "\n", "\n", "    ", "disp", "=", "k_value", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", "*", "0.54", "/", "depth", "\n", "\n", "return", "disp", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses.eval_module_disp_depth": [[402, 425], ["gt_disp.size", "gt_disp_mask.float", "utils.monodepth_eval.compute_errors", "losses._elementwise_epe", "d_outlier_epe.view().sum().mean", "d_outlier_epe.view().sum", "d_outlier_epe.view"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.compute_errors", "home.repos.pwc.inspect_result.visinf_self-mono-sf.None.losses._elementwise_epe", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean"], ["", "", "def", "eval_module_disp_depth", "(", "gt_disp", ",", "gt_disp_mask", ",", "output_disp", ",", "gt_depth", ",", "output_depth", ")", ":", "\n", "\n", "    ", "loss_dict", "=", "{", "}", "\n", "batch_size", "=", "gt_disp", ".", "size", "(", "0", ")", "\n", "gt_disp_mask_f", "=", "gt_disp_mask", ".", "float", "(", ")", "\n", "\n", "## KITTI disparity metric", "\n", "d_valid_epe", "=", "_elementwise_epe", "(", "output_disp", ",", "gt_disp", ")", "*", "gt_disp_mask_f", "\n", "d_outlier_epe", "=", "(", "d_valid_epe", ">", "3", ")", ".", "float", "(", ")", "*", "(", "(", "d_valid_epe", "/", "gt_disp", ")", ">", "0.05", ")", ".", "float", "(", ")", "*", "gt_disp_mask_f", "\n", "loss_dict", "[", "\"otl\"", "]", "=", "(", "d_outlier_epe", ".", "view", "(", "batch_size", ",", "-", "1", ")", ".", "sum", "(", "1", ")", ")", ".", "mean", "(", ")", "/", "91875.68", "\n", "loss_dict", "[", "\"otl_img\"", "]", "=", "d_outlier_epe", "\n", "\n", "## MonoDepth metric", "\n", "abs_rel", ",", "sq_rel", ",", "rms", ",", "log_rms", ",", "a1", ",", "a2", ",", "a3", "=", "compute_errors", "(", "gt_depth", "[", "gt_disp_mask", "]", ",", "output_depth", "[", "gt_disp_mask", "]", ")", "\n", "loss_dict", "[", "\"abs_rel\"", "]", "=", "abs_rel", "\n", "loss_dict", "[", "\"sq_rel\"", "]", "=", "sq_rel", "\n", "loss_dict", "[", "\"rms\"", "]", "=", "rms", "\n", "loss_dict", "[", "\"log_rms\"", "]", "=", "log_rms", "\n", "loss_dict", "[", "\"a1\"", "]", "=", "a1", "\n", "loss_dict", "[", "\"a2\"", "]", "=", "a2", "\n", "loss_dict", "[", "\"a3\"", "]", "=", "a3", "\n", "\n", "return", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.Meshgrid.__init__": [[27, 35], ["torch.nn.Module.__init__", "interpolation.Meshgrid.register_buffer", "interpolation.Meshgrid.register_buffer", "interpolation.Meshgrid.register_buffer", "interpolation.Meshgrid.register_buffer", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Meshgrid", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "width", "=", "0", "\n", "self", ".", "height", "=", "0", "\n", "self", ".", "register_buffer", "(", "\"xx\"", ",", "torch", ".", "zeros", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"yy\"", ",", "torch", ".", "zeros", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"rangex\"", ",", "torch", ".", "zeros", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"rangey\"", ",", "torch", ".", "zeros", "(", "1", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.Meshgrid._compute_meshgrid": [[36, 41], ["torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "interpolation.Meshgrid.rangex.repeat().contiguous", "interpolation.Meshgrid.rangey.repeat().t().contiguous", "interpolation.Meshgrid.rangex.repeat", "interpolation.Meshgrid.rangey.repeat().t", "interpolation.Meshgrid.rangey.repeat"], "methods", ["None"], ["", "def", "_compute_meshgrid", "(", "self", ",", "width", ",", "height", ")", ":", "\n", "        ", "torch", ".", "arange", "(", "0", ",", "width", ",", "out", "=", "self", ".", "rangex", ")", "\n", "torch", ".", "arange", "(", "0", ",", "height", ",", "out", "=", "self", ".", "rangey", ")", "\n", "self", ".", "xx", "=", "self", ".", "rangex", ".", "repeat", "(", "height", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "self", ".", "yy", "=", "self", ".", "rangey", ".", "repeat", "(", "width", ",", "1", ")", ".", "t", "(", ")", ".", "contiguous", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.Meshgrid.forward": [[42, 48], ["interpolation.Meshgrid._compute_meshgrid"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.Meshgrid._compute_meshgrid"], ["", "def", "forward", "(", "self", ",", "width", ",", "height", ")", ":", "\n", "        ", "if", "self", ".", "width", "!=", "width", "or", "self", ".", "height", "!=", "height", ":", "\n", "            ", "self", ".", "_compute_meshgrid", "(", "width", "=", "width", ",", "height", "=", "height", ")", "\n", "self", ".", "width", "=", "width", "\n", "self", ".", "height", "=", "height", "\n", "", "return", "self", ".", "xx", ",", "self", ".", "yy", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.BatchSub2Ind.__init__": [[51, 54], ["torch.nn.Module.__init__", "interpolation.BatchSub2Ind.register_buffer", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "BatchSub2Ind", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "register_buffer", "(", "\"_offsets\"", ",", "torch", ".", "LongTensor", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.BatchSub2Ind.forward": [[55, 66], ["row_sub.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "interpolation.BatchSub2Ind._offsets.view", "interpolation.BatchSub2Ind._offsets.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "shape", ",", "row_sub", ",", "col_sub", ",", "out", "=", "None", ")", ":", "\n", "        ", "batch_size", "=", "row_sub", ".", "size", "(", "0", ")", "\n", "height", ",", "width", "=", "shape", "\n", "ind", "=", "row_sub", "*", "width", "+", "col_sub", "\n", "torch", ".", "arange", "(", "batch_size", ",", "out", "=", "self", ".", "_offsets", ")", "\n", "self", ".", "_offsets", "*=", "(", "height", "*", "width", ")", "\n", "\n", "if", "out", "is", "None", ":", "\n", "            ", "return", "torch", ".", "add", "(", "ind", ",", "self", ".", "_offsets", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "torch", ".", "add", "(", "ind", ",", "self", ".", "_offsets", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", ",", "out", "=", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.Interp2.__init__": [[69, 87], ["torch.nn.Module.__init__", "interpolation.BatchSub2Ind", "interpolation.Interp2.register_buffer", "interpolation.Interp2.register_buffer", "interpolation.Interp2.register_buffer", "interpolation.Interp2.register_buffer", "interpolation.Interp2.register_buffer", "interpolation.Interp2.register_buffer", "interpolation.Interp2.register_buffer", "interpolation.Interp2.register_buffer", "interpolation.Interp2.register_buffer", "interpolation.Interp2.register_buffer", "interpolation.Interp2.register_buffer", "interpolation.Interp2.register_buffer", "interpolation.Interp2.register_buffer", "interpolation.Interp2.register_buffer", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "clamp", "=", "False", ")", ":", "\n", "        ", "super", "(", "Interp2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_clamp", "=", "clamp", "\n", "self", ".", "_batch_sub2ind", "=", "BatchSub2Ind", "(", ")", "\n", "self", ".", "register_buffer", "(", "\"_x0\"", ",", "torch", ".", "LongTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_x1\"", ",", "torch", ".", "LongTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_y0\"", ",", "torch", ".", "LongTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_y1\"", ",", "torch", ".", "LongTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_i00\"", ",", "torch", ".", "LongTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_i01\"", ",", "torch", ".", "LongTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_i10\"", ",", "torch", ".", "LongTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_i11\"", ",", "torch", ".", "LongTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_v00\"", ",", "torch", ".", "FloatTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_v01\"", ",", "torch", ".", "FloatTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_v10\"", ",", "torch", ".", "FloatTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_v11\"", ",", "torch", ".", "FloatTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_x\"", ",", "torch", ".", "FloatTensor", "(", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"_y\"", ",", "torch", ".", "FloatTensor", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.Interp2.forward": [[88, 150], ["v.size", "torch.floor().long().clamp", "torch.floor().long().clamp", "torch.floor().long().clamp", "torch.floor().long().clamp", "torch.floor().long().clamp", "torch.floor().long().clamp", "torch.floor().long().clamp", "torch.floor().long().clamp", "torch.add().clamp", "torch.add().clamp", "torch.add().clamp", "torch.add().clamp", "torch.add().clamp", "torch.add().clamp", "torch.add().clamp", "torch.add().clamp", "interpolation.Interp2._batch_sub2ind", "interpolation.Interp2._batch_sub2ind", "interpolation.Interp2._batch_sub2ind", "interpolation.Interp2._batch_sub2ind", "_bchw2bhwc().contiguous().view", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "xq.clamp_", "yq.clamp_", "interpolation._bhwc2bchw", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "_bchw2bhwc().contiguous", "interpolation.Interp2._i00.view", "interpolation.Interp2._i01.view", "interpolation.Interp2._i10.view", "interpolation.Interp2._i11.view", "interpolation.Interp2._x0.float", "interpolation.Interp2._y0.float", "u.view", "interpolation.Interp2.forward._reshape"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation._bhwc2bchw"], ["", "def", "forward", "(", "self", ",", "v", ",", "xq", ",", "yq", ")", ":", "\n", "        ", "batch_size", ",", "channels", ",", "height", ",", "width", "=", "v", ".", "size", "(", ")", "\n", "\n", "# clamp if wanted", "\n", "if", "self", ".", "_clamp", ":", "\n", "            ", "xq", ".", "clamp_", "(", "0", ",", "width", "-", "1", ")", "\n", "yq", ".", "clamp_", "(", "0", ",", "height", "-", "1", ")", "\n", "\n", "# ------------------------------------------------------------------", "\n", "# Find neighbors", "\n", "#", "\n", "# x0 = torch.floor(xq).long(),          x0.clamp_(0, width - 1)", "\n", "# x1 = x0 + 1,                          x1.clamp_(0, width - 1)", "\n", "# y0 = torch.floor(yq).long(),          y0.clamp_(0, height - 1)", "\n", "# y1 = y0 + 1,                          y1.clamp_(0, height - 1)", "\n", "#", "\n", "# ------------------------------------------------------------------", "\n", "", "self", ".", "_x0", "=", "torch", ".", "floor", "(", "xq", ")", ".", "long", "(", ")", ".", "clamp", "(", "0", ",", "width", "-", "1", ")", "\n", "self", ".", "_y0", "=", "torch", ".", "floor", "(", "yq", ")", ".", "long", "(", ")", ".", "clamp", "(", "0", ",", "height", "-", "1", ")", "\n", "\n", "self", ".", "_x1", "=", "torch", ".", "add", "(", "self", ".", "_x0", ",", "1", ")", ".", "clamp", "(", "0", ",", "width", "-", "1", ")", "\n", "self", ".", "_y1", "=", "torch", ".", "add", "(", "self", ".", "_y0", ",", "1", ")", ".", "clamp", "(", "0", ",", "height", "-", "1", ")", "\n", "\n", "# batch_sub2ind", "\n", "self", ".", "_batch_sub2ind", "(", "[", "height", ",", "width", "]", ",", "self", ".", "_y0", ",", "self", ".", "_x0", ",", "out", "=", "self", ".", "_i00", ")", "\n", "self", ".", "_batch_sub2ind", "(", "[", "height", ",", "width", "]", ",", "self", ".", "_y0", ",", "self", ".", "_x1", ",", "out", "=", "self", ".", "_i01", ")", "\n", "self", ".", "_batch_sub2ind", "(", "[", "height", ",", "width", "]", ",", "self", ".", "_y1", ",", "self", ".", "_x0", ",", "out", "=", "self", ".", "_i10", ")", "\n", "self", ".", "_batch_sub2ind", "(", "[", "height", ",", "width", "]", ",", "self", ".", "_y1", ",", "self", ".", "_x1", ",", "out", "=", "self", ".", "_i11", ")", "\n", "\n", "# reshape", "\n", "v_flat", "=", "_bchw2bhwc", "(", "v", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "channels", ")", "\n", "torch", ".", "index_select", "(", "v_flat", ",", "dim", "=", "0", ",", "index", "=", "self", ".", "_i00", ".", "view", "(", "-", "1", ")", ",", "out", "=", "self", ".", "_v00", ")", "\n", "torch", ".", "index_select", "(", "v_flat", ",", "dim", "=", "0", ",", "index", "=", "self", ".", "_i01", ".", "view", "(", "-", "1", ")", ",", "out", "=", "self", ".", "_v01", ")", "\n", "torch", ".", "index_select", "(", "v_flat", ",", "dim", "=", "0", ",", "index", "=", "self", ".", "_i10", ".", "view", "(", "-", "1", ")", ",", "out", "=", "self", ".", "_v10", ")", "\n", "torch", ".", "index_select", "(", "v_flat", ",", "dim", "=", "0", ",", "index", "=", "self", ".", "_i11", ".", "view", "(", "-", "1", ")", ",", "out", "=", "self", ".", "_v11", ")", "\n", "\n", "# local_coords", "\n", "torch", ".", "add", "(", "xq", ",", "-", "self", ".", "_x0", ".", "float", "(", ")", ",", "out", "=", "self", ".", "_x", ")", "\n", "torch", ".", "add", "(", "yq", ",", "-", "self", ".", "_y0", ".", "float", "(", ")", ",", "out", "=", "self", ".", "_y", ")", "\n", "\n", "# weights", "\n", "w00", "=", "torch", ".", "unsqueeze", "(", "(", "1.0", "-", "self", ".", "_y", ")", "*", "(", "1.0", "-", "self", ".", "_x", ")", ",", "dim", "=", "1", ")", "\n", "w01", "=", "torch", ".", "unsqueeze", "(", "(", "1.0", "-", "self", ".", "_y", ")", "*", "self", ".", "_x", ",", "dim", "=", "1", ")", "\n", "w10", "=", "torch", ".", "unsqueeze", "(", "self", ".", "_y", "*", "(", "1.0", "-", "self", ".", "_x", ")", ",", "dim", "=", "1", ")", "\n", "w11", "=", "torch", ".", "unsqueeze", "(", "self", ".", "_y", "*", "self", ".", "_x", ",", "dim", "=", "1", ")", "\n", "\n", "def", "_reshape", "(", "u", ")", ":", "\n", "            ", "return", "_bhwc2bchw", "(", "u", ".", "view", "(", "batch_size", ",", "height", ",", "width", ",", "channels", ")", ")", "\n", "\n", "# values", "\n", "", "values", "=", "_reshape", "(", "self", ".", "_v00", ")", "*", "w00", "+", "_reshape", "(", "self", ".", "_v01", ")", "*", "w01", "+", "_reshape", "(", "self", ".", "_v10", ")", "*", "w10", "+", "_reshape", "(", "self", ".", "_v11", ")", "*", "w11", "\n", "\n", "if", "self", ".", "_clamp", ":", "\n", "            ", "return", "values", "\n", "", "else", ":", "\n", "#  find_invalid", "\n", "            ", "invalid", "=", "(", "(", "xq", "<", "0", ")", "|", "(", "xq", ">=", "width", ")", "|", "(", "yq", "<", "0", ")", "|", "(", "yq", ">=", "height", ")", ")", ".", "unsqueeze", "(", "dim", "=", "1", ")", ".", "float", "(", ")", "\n", "# maskout invalid", "\n", "transformed", "=", "invalid", "*", "torch", ".", "zeros_like", "(", "values", ")", "+", "(", "1.0", "-", "invalid", ")", "*", "values", "\n", "\n", "", "return", "transformed", "\n", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d": [[10, 12], ["torch.interpolate"], "function", ["None"], ["def", "interpolate2d", "(", "inputs", ",", "size", ",", "mode", "=", "\"bilinear\"", ")", ":", "\n", "    ", "return", "tf", ".", "interpolate", "(", "inputs", ",", "size", ",", "mode", "=", "mode", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as": [[14, 17], ["target_as.size", "torch.interpolate"], "function", ["None"], ["", "def", "interpolate2d_as", "(", "inputs", ",", "target_as", ",", "mode", "=", "\"bilinear\"", ")", ":", "\n", "    ", "_", ",", "_", ",", "h", ",", "w", "=", "target_as", ".", "size", "(", ")", "\n", "return", "tf", ".", "interpolate", "(", "inputs", ",", "[", "h", ",", "w", "]", ",", "mode", "=", "mode", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation._bchw2bhwc": [[19, 21], ["tensor.transpose().transpose", "tensor.transpose"], "function", ["None"], ["", "def", "_bchw2bhwc", "(", "tensor", ")", ":", "\n", "    ", "return", "tensor", ".", "transpose", "(", "1", ",", "2", ")", ".", "transpose", "(", "2", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation._bhwc2bchw": [[23, 25], ["tensor.transpose().transpose", "tensor.transpose"], "function", ["None"], ["", "def", "_bhwc2bchw", "(", "tensor", ")", ":", "\n", "    ", "return", "tensor", ".", "transpose", "(", "2", ",", "3", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.monodepth_eval.disp_post_processing": [[8, 19], ["int", "torch.flip", "torch.flip", "torch.linspace().view().expand().float().requires_grad_().cuda", "torch.linspace().view().expand().float().requires_grad_().cuda", "torch.flip", "torch.flip", "torch.clamp", "torch.clamp", "torch.linspace().view().expand().float().requires_grad_", "torch.linspace().view().expand().float().requires_grad_", "torch.linspace().view().expand().float", "torch.linspace().view().expand().float", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view", "torch.linspace().view", "torch.linspace", "torch.linspace"], "function", ["None"], ["def", "disp_post_processing", "(", "disp", ")", ":", "\n", "    ", "b", ",", "_", ",", "h", ",", "w", "=", "disp", ".", "shape", "\n", "b_h", "=", "int", "(", "b", "/", "2", ")", "\n", "\n", "l_disp", "=", "disp", "[", "0", ":", "b_h", ",", ":", ",", ":", ",", ":", "]", "\n", "r_disp", "=", "torch", ".", "flip", "(", "disp", "[", "b_h", ":", ",", ":", ",", ":", ",", ":", "]", ",", "[", "3", "]", ")", "\n", "m_disp", "=", "0.5", "*", "(", "l_disp", "+", "r_disp", ")", "\n", "grid_l", "=", "torch", ".", "linspace", "(", "0.0", ",", "1.0", ",", "w", ")", ".", "view", "(", "1", ",", "1", ",", "1", ",", "w", ")", ".", "expand", "(", "1", ",", "1", ",", "h", ",", "w", ")", ".", "float", "(", ")", ".", "requires_grad_", "(", "False", ")", ".", "cuda", "(", ")", "\n", "l_mask", "=", "1.0", "-", "torch", ".", "clamp", "(", "20", "*", "(", "grid_l", "-", "0.05", ")", ",", "0", ",", "1", ")", "\n", "r_mask", "=", "torch", ".", "flip", "(", "l_mask", ",", "[", "3", "]", ")", "\n", "return", "r_mask", "*", "l_disp", "+", "l_mask", "*", "r_disp", "+", "(", "1.0", "-", "l_mask", "-", "r_mask", ")", "*", "m_disp", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.monodepth_eval.compute_errors": [[21, 38], ["torch.max", "torch.max", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.sqrt.mean", "torch.sqrt.mean", "torch.log", "torch.log", "torch.log", "torch.log", "torch.abs", "torch.abs"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean"], ["", "def", "compute_errors", "(", "gt", ",", "pred", ")", ":", "\n", "    ", "thresh", "=", "torch", ".", "max", "(", "(", "gt", "/", "pred", ")", ",", "(", "pred", "/", "gt", ")", ")", "\n", "a1", "=", "(", "thresh", "<", "1.25", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "a2", "=", "(", "thresh", "<", "1.25", "**", "2", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "a3", "=", "(", "thresh", "<", "1.25", "**", "3", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "\n", "rmse", "=", "(", "gt", "-", "pred", ")", "**", "2", "\n", "rmse", "=", "torch", ".", "sqrt", "(", "rmse", ".", "mean", "(", ")", ")", "\n", "\n", "rmse_log", "=", "(", "torch", ".", "log", "(", "gt", ")", "-", "torch", ".", "log", "(", "pred", ")", ")", "**", "2", "\n", "rmse_log", "=", "torch", ".", "sqrt", "(", "rmse_log", ".", "mean", "(", ")", ")", "\n", "\n", "abs_rel", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "gt", "-", "pred", ")", "/", "gt", ")", "\n", "\n", "sq_rel", "=", "torch", ".", "mean", "(", "(", "(", "gt", "-", "pred", ")", "**", "2", ")", "/", "gt", ")", "\n", "\n", "return", "abs_rel", ",", "sq_rel", ",", "rmse", ",", "rmse_log", ",", "a1", ",", "a2", ",", "a3", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.monodepth_eval.compute_d1_all": [[40, 46], ["torch.abs", "torch.abs", "gt_mask.sum().float", "bad_pixels.sum().float", "gt_mask.sum", "bad_pixels.sum"], "function", ["None"], ["", "def", "compute_d1_all", "(", "gt_disps", ",", "disp_t", ",", "gt_mask", ")", ":", "\n", "    ", "disp_diff", "=", "torch", ".", "abs", "(", "gt_disps", "[", "gt_mask", "]", "-", "disp_t", "[", "gt_mask", "]", ")", "\n", "bad_pixels", "=", "(", "disp_diff", ">=", "3", ")", "&", "(", "(", "disp_diff", "/", "gt_disps", "[", "gt_mask", "]", ")", ">=", "0.05", ")", "\n", "d1_all", "=", "100.0", "*", "bad_pixels", ".", "sum", "(", ")", ".", "float", "(", ")", "/", "gt_mask", ".", "sum", "(", ")", ".", "float", "(", ")", "\n", "\n", "return", "d1_all", "\n", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.flow.write_depth_png": [[12, 15], ["skimage.io.imsave"], "function", ["None"], ["def", "write_depth_png", "(", "filename", ",", "disp_map", ")", ":", "\n", "\n", "    ", "io", ".", "imsave", "(", "filename", ",", "(", "disp_map", "*", "256.0", ")", ".", "astype", "(", "np", ".", "uint16", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.flow.write_flow_png": [[17, 43], ["numpy.clip().astype", "numpy.clip().astype", "numpy.stack", "numpy.ones", "open", "png.Writer", "png.Writer.write", "numpy.clip", "numpy.clip", "numpy.reshape"], "function", ["None"], ["", "def", "write_flow_png", "(", "filename", ",", "uv", ",", "v", "=", "None", ",", "mask", "=", "None", ")", ":", "\n", "\n", "    ", "if", "v", "is", "None", ":", "\n", "        ", "assert", "(", "uv", ".", "ndim", "==", "3", ")", "\n", "assert", "(", "uv", ".", "shape", "[", "2", "]", "==", "2", ")", "\n", "u", "=", "uv", "[", ":", ",", ":", ",", "0", "]", "\n", "v", "=", "uv", "[", ":", ",", ":", ",", "1", "]", "\n", "", "else", ":", "\n", "        ", "u", "=", "uv", "\n", "\n", "", "assert", "(", "u", ".", "shape", "==", "v", ".", "shape", ")", "\n", "\n", "height_img", ",", "width_img", "=", "u", ".", "shape", "\n", "if", "mask", "is", "None", ":", "\n", "        ", "valid_mask", "=", "np", ".", "ones", "(", "[", "height_img", ",", "width_img", "]", ")", "\n", "", "else", ":", "\n", "        ", "valid_mask", "=", "mask", "\n", "\n", "", "flow_u", "=", "np", ".", "clip", "(", "(", "u", "*", "64", "+", "2", "**", "15", ")", ",", "0.0", ",", "65535.0", ")", ".", "astype", "(", "np", ".", "uint16", ")", "\n", "flow_v", "=", "np", ".", "clip", "(", "(", "v", "*", "64", "+", "2", "**", "15", ")", ",", "0.0", ",", "65535.0", ")", ".", "astype", "(", "np", ".", "uint16", ")", "\n", "\n", "output", "=", "np", ".", "stack", "(", "(", "flow_u", ",", "flow_v", ",", "valid_mask", ")", ",", "axis", "=", "-", "1", ")", "\n", "\n", "with", "open", "(", "filename", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "writer", "=", "png", ".", "Writer", "(", "width", "=", "width_img", ",", "height", "=", "height_img", ",", "bitdepth", "=", "16", ")", "\n", "writer", ".", "write", "(", "f", ",", "np", ".", "reshape", "(", "output", ",", "(", "-", "1", ",", "width_img", "*", "3", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.flow.compute_color": [[45, 87], ["numpy.zeros", "flow.make_color_wheel", "numpy.size", "numpy.sqrt", "numpy.floor().astype", "range", "numpy.isnan", "numpy.isnan", "numpy.arctan2", "numpy.size", "numpy.logical_not", "numpy.uint8", "numpy.floor", "numpy.floor"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.make_color_wheel"], ["", "", "def", "compute_color", "(", "u", ",", "v", ")", ":", "\n", "    ", "\"\"\"\n    compute optical flow color map\n    :param u: optical flow horizontal map\n    :param v: optical flow vertical map\n    :return: optical flow in color code\n    \"\"\"", "\n", "[", "h", ",", "w", "]", "=", "u", ".", "shape", "\n", "img", "=", "np", ".", "zeros", "(", "[", "h", ",", "w", ",", "3", "]", ")", "\n", "nanIdx", "=", "np", ".", "isnan", "(", "u", ")", "|", "np", ".", "isnan", "(", "v", ")", "\n", "u", "[", "nanIdx", "]", "=", "0", "\n", "v", "[", "nanIdx", "]", "=", "0", "\n", "\n", "colorwheel", "=", "make_color_wheel", "(", ")", "\n", "ncols", "=", "np", ".", "size", "(", "colorwheel", ",", "0", ")", "\n", "\n", "rad", "=", "np", ".", "sqrt", "(", "u", "**", "2", "+", "v", "**", "2", ")", "\n", "\n", "a", "=", "np", ".", "arctan2", "(", "-", "v", ",", "-", "u", ")", "/", "np", ".", "pi", "\n", "\n", "fk", "=", "(", "a", "+", "1", ")", "/", "2", "*", "(", "ncols", "-", "1", ")", "+", "1", "\n", "\n", "k0", "=", "np", ".", "floor", "(", "fk", ")", ".", "astype", "(", "int", ")", "\n", "\n", "k1", "=", "k0", "+", "1", "\n", "k1", "[", "k1", "==", "ncols", "+", "1", "]", "=", "1", "\n", "f", "=", "fk", "-", "k0", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "np", ".", "size", "(", "colorwheel", ",", "1", ")", ")", ":", "\n", "        ", "tmp", "=", "colorwheel", "[", ":", ",", "i", "]", "\n", "col0", "=", "tmp", "[", "k0", "-", "1", "]", "/", "255", "\n", "col1", "=", "tmp", "[", "k1", "-", "1", "]", "/", "255", "\n", "col", "=", "(", "1", "-", "f", ")", "*", "col0", "+", "f", "*", "col1", "\n", "\n", "idx", "=", "rad", "<=", "1", "\n", "col", "[", "idx", "]", "=", "1", "-", "rad", "[", "idx", "]", "*", "(", "1", "-", "col", "[", "idx", "]", ")", "\n", "notidx", "=", "np", ".", "logical_not", "(", "idx", ")", "\n", "\n", "col", "[", "notidx", "]", "*=", "0.75", "\n", "img", "[", ":", ",", ":", ",", "i", "]", "=", "np", ".", "uint8", "(", "np", ".", "floor", "(", "255", "*", "col", "*", "(", "1", "-", "nanIdx", ")", ")", ")", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.flow.make_color_wheel": [[89, 137], ["numpy.zeros", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.floor", "numpy.transpose", "numpy.floor", "numpy.transpose", "numpy.floor", "numpy.transpose", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange"], "function", ["None"], ["", "def", "make_color_wheel", "(", ")", ":", "\n", "    ", "\"\"\"\n    Generate color wheel according Middlebury color code\n    :return: Color wheel\n    \"\"\"", "\n", "RY", "=", "15", "\n", "YG", "=", "6", "\n", "GC", "=", "4", "\n", "CB", "=", "11", "\n", "BM", "=", "13", "\n", "MR", "=", "6", "\n", "\n", "ncols", "=", "RY", "+", "YG", "+", "GC", "+", "CB", "+", "BM", "+", "MR", "\n", "\n", "colorwheel", "=", "np", ".", "zeros", "(", "[", "ncols", ",", "3", "]", ")", "\n", "\n", "col", "=", "0", "\n", "\n", "# RY", "\n", "colorwheel", "[", "0", ":", "RY", ",", "0", "]", "=", "255", "\n", "colorwheel", "[", "0", ":", "RY", ",", "1", "]", "=", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "RY", ")", "/", "RY", ")", ")", "\n", "col", "+=", "RY", "\n", "\n", "# YG", "\n", "colorwheel", "[", "col", ":", "col", "+", "YG", ",", "0", "]", "=", "255", "-", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "YG", ")", "/", "YG", ")", ")", "\n", "colorwheel", "[", "col", ":", "col", "+", "YG", ",", "1", "]", "=", "255", "\n", "col", "+=", "YG", "\n", "\n", "# GC", "\n", "colorwheel", "[", "col", ":", "col", "+", "GC", ",", "1", "]", "=", "255", "\n", "colorwheel", "[", "col", ":", "col", "+", "GC", ",", "2", "]", "=", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "GC", ")", "/", "GC", ")", ")", "\n", "col", "+=", "GC", "\n", "\n", "# CB", "\n", "colorwheel", "[", "col", ":", "col", "+", "CB", ",", "1", "]", "=", "255", "-", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "CB", ")", "/", "CB", ")", ")", "\n", "colorwheel", "[", "col", ":", "col", "+", "CB", ",", "2", "]", "=", "255", "\n", "col", "+=", "CB", "\n", "\n", "# BM", "\n", "colorwheel", "[", "col", ":", "col", "+", "BM", ",", "2", "]", "=", "255", "\n", "colorwheel", "[", "col", ":", "col", "+", "BM", ",", "0", "]", "=", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "BM", ")", "/", "BM", ")", ")", "\n", "col", "+=", "+", "BM", "\n", "\n", "# MR", "\n", "colorwheel", "[", "col", ":", "col", "+", "MR", ",", "2", "]", "=", "255", "-", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "MR", ")", "/", "MR", ")", ")", "\n", "colorwheel", "[", "col", ":", "col", "+", "MR", ",", "0", "]", "=", "255", "\n", "\n", "return", "colorwheel", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.flow.flow_to_png_middlebury": [[139, 177], ["flow.transpose.transpose", "max", "min", "max", "min", "numpy.sqrt", "max", "flow.compute_color", "numpy.repeat", "numpy.uint8", "numpy.max", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "abs", "abs", "numpy.finfo", "numpy.finfo"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.compute_color"], ["", "def", "flow_to_png_middlebury", "(", "flow", ")", ":", "\n", "    ", "\"\"\"\n    Convert flow into middlebury color code image\n    :param flow: optical flow map\n    :return: optical flow image in middlebury color\n    \"\"\"", "\n", "\n", "flow", "=", "flow", ".", "transpose", "(", "[", "1", ",", "2", ",", "0", "]", ")", "\n", "u", "=", "flow", "[", ":", ",", ":", ",", "0", "]", "\n", "v", "=", "flow", "[", ":", ",", ":", ",", "1", "]", "\n", "\n", "maxu", "=", "-", "999.", "\n", "maxv", "=", "-", "999.", "\n", "minu", "=", "999.", "\n", "minv", "=", "999.", "\n", "\n", "idxUnknow", "=", "(", "abs", "(", "u", ")", ">", "UNKNOWN_FLOW_THRESH", ")", "|", "(", "abs", "(", "v", ")", ">", "UNKNOWN_FLOW_THRESH", ")", "\n", "u", "[", "idxUnknow", "]", "=", "0", "\n", "v", "[", "idxUnknow", "]", "=", "0", "\n", "\n", "maxu", "=", "max", "(", "maxu", ",", "np", ".", "max", "(", "u", ")", ")", "\n", "minu", "=", "min", "(", "minu", ",", "np", ".", "min", "(", "u", ")", ")", "\n", "\n", "maxv", "=", "max", "(", "maxv", ",", "np", ".", "max", "(", "v", ")", ")", "\n", "minv", "=", "min", "(", "minv", ",", "np", ".", "min", "(", "v", ")", ")", "\n", "\n", "rad", "=", "np", ".", "sqrt", "(", "u", "**", "2", "+", "v", "**", "2", ")", "\n", "maxrad", "=", "max", "(", "-", "1", ",", "np", ".", "max", "(", "rad", ")", ")", "\n", "\n", "u", "=", "u", "/", "(", "maxrad", "+", "np", ".", "finfo", "(", "float", ")", ".", "eps", ")", "\n", "v", "=", "v", "/", "(", "maxrad", "+", "np", ".", "finfo", "(", "float", ")", ".", "eps", ")", "\n", "\n", "img", "=", "compute_color", "(", "u", ",", "v", ")", "\n", "\n", "idx", "=", "np", ".", "repeat", "(", "idxUnknow", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", ",", "3", ",", "axis", "=", "2", ")", "\n", "img", "[", "idx", "]", "=", "0", "\n", "\n", "return", "np", ".", "uint8", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.flow.np_flow2rgb": [[179, 194], ["numpy.ones().astype", "np.ones().astype.clip", "numpy.ones", "numpy.abs().max", "numpy.abs"], "function", ["None"], ["", "def", "np_flow2rgb", "(", "flow_map", ",", "max_value", "=", "None", ")", ":", "\n", "    ", "_", ",", "h", ",", "w", "=", "flow_map", ".", "shape", "\n", "# flow_map[:,(flow_map[0] == 0) & (flow_map[1] == 0)] = float('nan')", "\n", "# print np.any(np.isnan(flow_map))", "\n", "rgb_map", "=", "np", ".", "ones", "(", "(", "h", ",", "w", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "max_value", "=", "80", "\n", "if", "max_value", "is", "not", "None", ":", "\n", "        ", "normalized_flow_map", "=", "flow_map", "/", "max_value", "\n", "", "else", ":", "\n", "        ", "normalized_flow_map", "=", "flow_map", "/", "(", "np", ".", "abs", "(", "flow_map", ")", ".", "max", "(", ")", ")", "\n", "\n", "", "rgb_map", "[", ":", ",", ":", ",", "0", "]", "+=", "normalized_flow_map", "[", "0", "]", "\n", "rgb_map", "[", ":", ",", ":", ",", "1", "]", "-=", "0.5", "*", "(", "normalized_flow_map", "[", "0", "]", "+", "normalized_flow_map", "[", "1", "]", ")", "\n", "rgb_map", "[", ":", ",", ":", ",", "2", "]", "+=", "normalized_flow_map", "[", "1", "]", "\n", "return", "rgb_map", ".", "clip", "(", "0", ",", "1", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing": [[8, 16], ["torch.linspace().view().expand().float().requires_grad_().cuda", "torch.linspace().view().expand().float().requires_grad_().cuda", "torch.flip", "torch.flip", "torch.clamp", "torch.clamp", "torch.linspace().view().expand().float().requires_grad_", "torch.linspace().view().expand().float().requires_grad_", "torch.linspace().view().expand().float", "torch.linspace().view().expand().float", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view", "torch.linspace().view", "torch.linspace", "torch.linspace"], "function", ["None"], ["def", "post_processing", "(", "l_disp", ",", "r_disp", ")", ":", "\n", "\n", "    ", "b", ",", "_", ",", "h", ",", "w", "=", "l_disp", ".", "shape", "\n", "m_disp", "=", "0.5", "*", "(", "l_disp", "+", "r_disp", ")", "\n", "grid_l", "=", "torch", ".", "linspace", "(", "0.0", ",", "1.0", ",", "w", ")", ".", "view", "(", "1", ",", "1", ",", "1", ",", "w", ")", ".", "expand", "(", "1", ",", "1", ",", "h", ",", "w", ")", ".", "float", "(", ")", ".", "requires_grad_", "(", "False", ")", ".", "cuda", "(", ")", "\n", "l_mask", "=", "1.0", "-", "torch", ".", "clamp", "(", "20", "*", "(", "grid_l", "-", "0.05", ")", ",", "0", ",", "1", ")", "\n", "r_mask", "=", "torch", ".", "flip", "(", "l_mask", ",", "[", "3", "]", ")", "\n", "return", "r_mask", "*", "l_disp", "+", "l_mask", "*", "r_disp", "+", "(", "1.0", "-", "l_mask", "-", "r_mask", ")", "*", "m_disp", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip": [[18, 24], ["torch.flip", "torch.flip", "torch.flip.contiguous"], "function", ["None"], ["", "def", "flow_horizontal_flip", "(", "flow_input", ")", ":", "\n", "\n", "    ", "flow_flip", "=", "torch", ".", "flip", "(", "flow_input", ",", "[", "3", "]", ")", "\n", "flow_flip", "[", ":", ",", "0", ":", "1", ",", ":", ",", ":", "]", "*=", "-", "1", "\n", "\n", "return", "flow_flip", ".", "contiguous", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.disp2depth_kitti": [[26, 32], ["torch.clamp", "torch.clamp", "k_value.unsqueeze().unsqueeze().unsqueeze", "k_value.unsqueeze().unsqueeze", "k_value.unsqueeze"], "function", ["None"], ["", "def", "disp2depth_kitti", "(", "pred_disp", ",", "k_value", ")", ":", "\n", "\n", "    ", "pred_depth", "=", "k_value", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", "*", "0.54", "/", "(", "pred_disp", "+", "1e-8", ")", "\n", "pred_depth", "=", "torch", ".", "clamp", "(", "pred_depth", ",", "1e-3", ",", "80", ")", "\n", "\n", "return", "pred_depth", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.get_pixelgrid": [[34, 42], ["torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.ones_like", "torch.ones_like", "torch.cat().float().requires_grad_().cuda", "torch.cat().float().requires_grad_().cuda", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.cat().float().requires_grad_", "torch.cat().float().requires_grad_", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.cat().float", "torch.cat().float", "torch.cat", "torch.cat"], "function", ["None"], ["", "def", "get_pixelgrid", "(", "b", ",", "h", ",", "w", ")", ":", "\n", "    ", "grid_h", "=", "torch", ".", "linspace", "(", "0.0", ",", "w", "-", "1", ",", "w", ")", ".", "view", "(", "1", ",", "1", ",", "1", ",", "w", ")", ".", "expand", "(", "b", ",", "1", ",", "h", ",", "w", ")", "\n", "grid_v", "=", "torch", ".", "linspace", "(", "0.0", ",", "h", "-", "1", ",", "h", ")", ".", "view", "(", "1", ",", "1", ",", "h", ",", "1", ")", ".", "expand", "(", "b", ",", "1", ",", "h", ",", "w", ")", "\n", "\n", "ones", "=", "torch", ".", "ones_like", "(", "grid_h", ")", "\n", "pixelgrid", "=", "torch", ".", "cat", "(", "(", "grid_h", ",", "grid_v", ",", "ones", ")", ",", "dim", "=", "1", ")", ".", "float", "(", ")", ".", "requires_grad_", "(", "False", ")", ".", "cuda", "(", ")", "\n", "\n", "return", "pixelgrid", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pixel2pts": [[44, 55], ["depth.size", "sceneflow_util.get_pixelgrid", "depth.view", "get_pixelgrid.view", "pts_mat.view", "torch.matmul", "torch.matmul", "torch.inverse().cuda", "torch.inverse().cuda", "torch.inverse", "torch.inverse", "intrinsics.cpu"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.get_pixelgrid"], ["", "def", "pixel2pts", "(", "intrinsics", ",", "depth", ")", ":", "\n", "    ", "b", ",", "_", ",", "h", ",", "w", "=", "depth", ".", "size", "(", ")", "\n", "\n", "pixelgrid", "=", "get_pixelgrid", "(", "b", ",", "h", ",", "w", ")", "\n", "\n", "depth_mat", "=", "depth", ".", "view", "(", "b", ",", "1", ",", "-", "1", ")", "\n", "pixel_mat", "=", "pixelgrid", ".", "view", "(", "b", ",", "3", ",", "-", "1", ")", "\n", "pts_mat", "=", "torch", ".", "matmul", "(", "torch", ".", "inverse", "(", "intrinsics", ".", "cpu", "(", ")", ")", ".", "cuda", "(", ")", ",", "pixel_mat", ")", "*", "depth_mat", "\n", "pts", "=", "pts_mat", ".", "view", "(", "b", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "\n", "return", "pts", ",", "pixelgrid", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pts2pixel": [[57, 63], ["pts.size", "torch.matmul", "torch.matmul", "pixels_mat.view", "pts.view", "torch.matmul.div"], "function", ["None"], ["", "def", "pts2pixel", "(", "pts", ",", "intrinsics", ")", ":", "\n", "    ", "b", ",", "_", ",", "h", ",", "w", "=", "pts", ".", "size", "(", ")", "\n", "proj_pts", "=", "torch", ".", "matmul", "(", "intrinsics", ",", "pts", ".", "view", "(", "b", ",", "3", ",", "-", "1", ")", ")", "\n", "pixels_mat", "=", "proj_pts", ".", "div", "(", "proj_pts", "[", ":", ",", "2", ":", "3", ",", ":", "]", "+", "1e-8", ")", "[", ":", ",", "0", ":", "2", ",", ":", "]", "\n", "\n", "return", "pixels_mat", ".", "view", "(", "b", ",", "2", ",", "h", ",", "w", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.intrinsic_scale": [[65, 79], ["intrinsic.size", "torch.zeros_like", "torch.zeros_like", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.tensor().cuda().unsqueeze().expand", "torch.tensor().cuda().unsqueeze().expand", "torch.stack", "torch.stack", "torch.tensor().cuda().unsqueeze", "torch.tensor().cuda().unsqueeze", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor", "torch.tensor"], "function", ["None"], ["", "def", "intrinsic_scale", "(", "intrinsic", ",", "scale_y", ",", "scale_x", ")", ":", "\n", "    ", "b", ",", "h", ",", "w", "=", "intrinsic", ".", "size", "(", ")", "\n", "fx", "=", "intrinsic", "[", ":", ",", "0", ",", "0", "]", "*", "scale_x", "\n", "fy", "=", "intrinsic", "[", ":", ",", "1", ",", "1", "]", "*", "scale_y", "\n", "cx", "=", "intrinsic", "[", ":", ",", "0", ",", "2", "]", "*", "scale_x", "\n", "cy", "=", "intrinsic", "[", ":", ",", "1", ",", "2", "]", "*", "scale_y", "\n", "\n", "zeros", "=", "torch", ".", "zeros_like", "(", "fx", ")", "\n", "r1", "=", "torch", ".", "stack", "(", "[", "fx", ",", "zeros", ",", "cx", "]", ",", "dim", "=", "1", ")", "\n", "r2", "=", "torch", ".", "stack", "(", "[", "zeros", ",", "fy", ",", "cy", "]", ",", "dim", "=", "1", ")", "\n", "r3", "=", "torch", ".", "tensor", "(", "[", "0.", ",", "0.", ",", "1.", "]", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "b", ",", "-", "1", ")", "\n", "intrinsic_s", "=", "torch", ".", "stack", "(", "[", "r1", ",", "r2", ",", "r3", "]", ",", "dim", "=", "1", ")", "\n", "\n", "return", "intrinsic_s", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pixel2pts_ms": [[81, 88], ["sceneflow_util.intrinsic_scale", "sceneflow_util.disp2depth_kitti", "sceneflow_util.pixel2pts"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.intrinsic_scale", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.disp2depth_kitti", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts"], ["", "def", "pixel2pts_ms", "(", "intrinsic", ",", "output_disp", ",", "rel_scale", ")", ":", "\n", "# pixel2pts", "\n", "    ", "intrinsic_dp_s", "=", "intrinsic_scale", "(", "intrinsic", ",", "rel_scale", "[", ":", ",", "0", "]", ",", "rel_scale", "[", ":", ",", "1", "]", ")", "\n", "output_depth", "=", "disp2depth_kitti", "(", "output_disp", ",", "intrinsic_dp_s", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "pts", ",", "_", "=", "pixel2pts", "(", "intrinsic_dp_s", ",", "output_depth", ")", "\n", "\n", "return", "pts", ",", "intrinsic_dp_s", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pts2pixel_ms": [[90, 102], ["torch.interpolate", "sceneflow_util.pts2pixel", "torch.cat", "torch.cat"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pts2pixel"], ["", "def", "pts2pixel_ms", "(", "intrinsic", ",", "pts", ",", "output_sf", ",", "disp_size", ")", ":", "\n", "\n", "# +sceneflow and reprojection", "\n", "    ", "sf_s", "=", "tf", ".", "interpolate", "(", "output_sf", ",", "disp_size", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "True", ")", "\n", "pts_tform", "=", "pts", "+", "sf_s", "\n", "coord", "=", "pts2pixel", "(", "pts_tform", ",", "intrinsic", ")", "\n", "\n", "norm_coord_w", "=", "coord", "[", ":", ",", "0", ":", "1", ",", ":", ",", ":", "]", "/", "(", "disp_size", "[", "1", "]", "-", "1", ")", "*", "2", "-", "1", "\n", "norm_coord_h", "=", "coord", "[", ":", ",", "1", ":", "2", ",", ":", ",", ":", "]", "/", "(", "disp_size", "[", "0", "]", "-", "1", ")", "*", "2", "-", "1", "\n", "norm_coord", "=", "torch", ".", "cat", "(", "(", "norm_coord_w", ",", "norm_coord_h", ")", ",", "dim", "=", "1", ")", "\n", "\n", "return", "sf_s", ",", "pts_tform", ",", "norm_coord", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.reconstructImg": [[104, 112], ["coord.transpose().transpose", "torch.grid_sample", "torch.ones_like", "torch.ones_like", "torch.grid_sample", "coord.transpose"], "function", ["None"], ["", "def", "reconstructImg", "(", "coord", ",", "img", ")", ":", "\n", "    ", "grid", "=", "coord", ".", "transpose", "(", "1", ",", "2", ")", ".", "transpose", "(", "2", ",", "3", ")", "\n", "img_warp", "=", "tf", ".", "grid_sample", "(", "img", ",", "grid", ")", "\n", "\n", "mask", "=", "torch", ".", "ones_like", "(", "img", ",", "requires_grad", "=", "False", ")", "\n", "mask", "=", "tf", ".", "grid_sample", "(", "mask", ",", "grid", ")", "\n", "mask", "=", "(", "mask", ">=", "1.0", ")", ".", "float", "(", ")", "\n", "return", "img_warp", "*", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.reconstructPts": [[114, 122], ["coord.transpose().transpose", "torch.grid_sample", "torch.ones_like", "torch.ones_like", "torch.grid_sample", "coord.transpose"], "function", ["None"], ["", "def", "reconstructPts", "(", "coord", ",", "pts", ")", ":", "\n", "    ", "grid", "=", "coord", ".", "transpose", "(", "1", ",", "2", ")", ".", "transpose", "(", "2", ",", "3", ")", "\n", "pts_warp", "=", "tf", ".", "grid_sample", "(", "pts", ",", "grid", ")", "\n", "\n", "mask", "=", "torch", ".", "ones_like", "(", "pts", ",", "requires_grad", "=", "False", ")", "\n", "mask", "=", "tf", ".", "grid_sample", "(", "mask", ",", "grid", ")", "\n", "mask", "=", "(", "mask", ">=", "1.0", ")", ".", "float", "(", ")", "\n", "return", "pts_warp", "*", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.projectSceneFlow2Flow": [[124, 137], ["disp.size", "sceneflow_util.disp2depth_kitti", "sceneflow_util.pixel2pts", "torch.interpolate", "sceneflow_util.pts2pixel"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.disp2depth_kitti", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pts2pixel"], ["", "def", "projectSceneFlow2Flow", "(", "intrinsic", ",", "sceneflow", ",", "disp", ")", ":", "\n", "\n", "    ", "_", ",", "_", ",", "h", ",", "w", "=", "disp", ".", "size", "(", ")", "\n", "\n", "output_depth", "=", "disp2depth_kitti", "(", "disp", ",", "intrinsic", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "pts", ",", "pixelgrid", "=", "pixel2pts", "(", "intrinsic", ",", "output_depth", ")", "\n", "\n", "sf_s", "=", "tf", ".", "interpolate", "(", "sceneflow", ",", "[", "h", ",", "w", "]", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "True", ")", "\n", "pts_tform", "=", "pts", "+", "sf_s", "\n", "coord", "=", "pts2pixel", "(", "pts_tform", ",", "intrinsic", ")", "\n", "flow", "=", "coord", "-", "pixelgrid", "[", ":", ",", "0", ":", "2", ",", ":", ",", ":", "]", "\n", "\n", "return", "flow", "\n", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_2015_test.KITTI_2015_Test.__init__": [[14, 72], ["os.path.join", "os.path.join", "range", "os.path.dirname", "len", "common.read_calib_into_dict", "torchvision.transforms.Compose", "os.path.isdir", "ValueError", "os.path.isdir", "ValueError", "os.path.realpath", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "enumerate", "kitti_2015_test.KITTI_2015_Test._image_list.append", "len", "torchvision.transforms.ToPILImage", "torchvision.transforms.transforms.ToTensor", "os.path.isfile", "ValueError"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_calib_into_dict"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "root", ")", ":", "\n", "\n", "        ", "self", ".", "_args", "=", "args", "\n", "\n", "images_l_root", "=", "os", ".", "path", ".", "join", "(", "root", ",", "\"data_scene_flow\"", ",", "\"testing\"", ",", "\"image_2_jpg\"", ")", "\n", "images_r_root", "=", "os", ".", "path", ".", "join", "(", "root", ",", "\"data_scene_flow\"", ",", "\"testing\"", ",", "\"image_3_jpg\"", ")", "\n", "\n", "## loading image -----------------------------------", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "images_l_root", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Image directory %s not found!\"", ",", "images_l_root", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "images_r_root", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Image directory %s not found!\"", ",", "images_r_root", ")", "\n", "\n", "# ----------------------------------------------------------", "\n", "# Construct list of indices for training/validation", "\n", "# ----------------------------------------------------------", "\n", "", "num_images", "=", "200", "\n", "list_of_indices", "=", "range", "(", "num_images", ")", "\n", "\n", "# ----------------------------------------------------------", "\n", "# Save list of actual filenames for inputs and disp/flow", "\n", "# ----------------------------------------------------------", "\n", "path_dir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "\n", "self", ".", "_image_list", "=", "[", "]", "\n", "self", ".", "_flow_list", "=", "[", "]", "\n", "self", ".", "_disp_list", "=", "[", "]", "\n", "img_ext", "=", "'.jpg'", "\n", "\n", "for", "ii", "in", "list_of_indices", ":", "\n", "\n", "            ", "file_idx", "=", "'%.6d'", "%", "ii", "\n", "\n", "im_l1", "=", "os", ".", "path", ".", "join", "(", "images_l_root", ",", "file_idx", "+", "\"_10\"", "+", "img_ext", ")", "\n", "im_l2", "=", "os", ".", "path", ".", "join", "(", "images_l_root", ",", "file_idx", "+", "\"_11\"", "+", "img_ext", ")", "\n", "im_r1", "=", "os", ".", "path", ".", "join", "(", "images_r_root", ",", "file_idx", "+", "\"_10\"", "+", "img_ext", ")", "\n", "im_r2", "=", "os", ".", "path", ".", "join", "(", "images_r_root", ",", "file_idx", "+", "\"_11\"", "+", "img_ext", ")", "\n", "\n", "\n", "file_list", "=", "[", "im_l1", ",", "im_l2", ",", "im_r1", ",", "im_r2", "]", "\n", "for", "_", ",", "item", "in", "enumerate", "(", "file_list", ")", ":", "\n", "                ", "if", "not", "os", ".", "path", ".", "isfile", "(", "item", ")", ":", "\n", "                    ", "raise", "ValueError", "(", "\"File not exist: %s\"", ",", "item", ")", "\n", "\n", "", "", "self", ".", "_image_list", ".", "append", "(", "[", "im_l1", ",", "im_l2", ",", "im_r1", ",", "im_r2", "]", ")", "\n", "\n", "", "self", ".", "_size", "=", "len", "(", "self", ".", "_image_list", ")", "\n", "assert", "len", "(", "self", ".", "_image_list", ")", "!=", "0", "\n", "\n", "## loading calibration matrix", "\n", "self", ".", "intrinsic_dict_l", "=", "{", "}", "\n", "self", ".", "intrinsic_dict_r", "=", "{", "}", "\n", "self", ".", "intrinsic_dict_l", ",", "self", ".", "intrinsic_dict_r", "=", "read_calib_into_dict", "(", "path_dir", ")", "\n", "\n", "self", ".", "_to_tensor", "=", "vision_transforms", ".", "Compose", "(", "[", "\n", "vision_transforms", ".", "ToPILImage", "(", ")", ",", "\n", "vision_transforms", ".", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_2015_test.KITTI_2015_Test.__getitem__": [[75, 120], ["common.read_image_as_byte", "common.read_image_as_byte", "common.read_image_as_byte", "common.read_image_as_byte", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "kitti_2015_test.KITTI_2015_Test._to_tensor", "kitti_2015_test.KITTI_2015_Test._to_tensor", "kitti_2015_test.KITTI_2015_Test._to_tensor", "kitti_2015_test.KITTI_2015_Test._to_tensor", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "os.path.basename", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.array", "common.get_date_from_width", "common.get_date_from_width"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_image_as_byte", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_image_as_byte", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_image_as_byte", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_image_as_byte", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.get_date_from_width", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.get_date_from_width"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "index", "=", "index", "%", "self", ".", "_size", "\n", "im_l1_filename", "=", "self", ".", "_image_list", "[", "index", "]", "[", "0", "]", "\n", "im_l2_filename", "=", "self", ".", "_image_list", "[", "index", "]", "[", "1", "]", "\n", "im_r1_filename", "=", "self", ".", "_image_list", "[", "index", "]", "[", "2", "]", "\n", "im_r2_filename", "=", "self", ".", "_image_list", "[", "index", "]", "[", "3", "]", "\n", "\n", "# read float32 images and flow", "\n", "im_l1_np", "=", "read_image_as_byte", "(", "im_l1_filename", ")", "\n", "im_l2_np", "=", "read_image_as_byte", "(", "im_l2_filename", ")", "\n", "im_r1_np", "=", "read_image_as_byte", "(", "im_r1_filename", ")", "\n", "im_r2_np", "=", "read_image_as_byte", "(", "im_r2_filename", ")", "\n", "\n", "# example filename", "\n", "basename", "=", "os", ".", "path", ".", "basename", "(", "im_l1_filename", ")", "[", ":", "6", "]", "\n", "\n", "# find intrinsic", "\n", "k_l1", "=", "torch", ".", "from_numpy", "(", "self", ".", "intrinsic_dict_l", "[", "get_date_from_width", "(", "im_l1_np", ".", "shape", "[", "1", "]", ")", "]", ")", ".", "float", "(", ")", "\n", "k_r1", "=", "torch", ".", "from_numpy", "(", "self", ".", "intrinsic_dict_r", "[", "get_date_from_width", "(", "im_r1_np", ".", "shape", "[", "1", "]", ")", "]", ")", ".", "float", "(", ")", "\n", "\n", "im_l1", "=", "self", ".", "_to_tensor", "(", "im_l1_np", ")", "\n", "im_l2", "=", "self", ".", "_to_tensor", "(", "im_l2_np", ")", "\n", "im_r1", "=", "self", ".", "_to_tensor", "(", "im_r1_np", ")", "\n", "im_r2", "=", "self", ".", "_to_tensor", "(", "im_r2_np", ")", "\n", "\n", "# input size", "\n", "h_orig", ",", "w_orig", ",", "_", "=", "im_l1_np", ".", "shape", "\n", "input_im_size", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "h_orig", ",", "w_orig", "]", ")", ")", ".", "float", "(", ")", "\n", "\n", "example_dict", "=", "{", "\n", "\"input_l1\"", ":", "im_l1", ",", "\n", "\"input_l2\"", ":", "im_l2", ",", "\n", "\"input_r1\"", ":", "im_r1", ",", "\n", "\"input_r2\"", ":", "im_r2", ",", "\n", "\"index\"", ":", "index", ",", "\n", "\"basename\"", ":", "basename", ",", "\n", "\"input_k_l1\"", ":", "k_l1", ",", "\n", "\"input_k_l2\"", ":", "k_l1", ",", "\n", "\"input_k_r1\"", ":", "k_r1", ",", "\n", "\"input_k_r2\"", ":", "k_r1", ",", "\n", "\"input_size\"", ":", "input_im_size", "\n", "}", "\n", "\n", "return", "example_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_2015_test.KITTI_2015_Test.__len__": [[121, 123], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_size", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_2015_train.KITTI_2015_Train_Base.__init__": [[17, 104], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.dirname", "len", "common.read_calib_into_dict", "os.path.isdir", "ValueError", "os.path.isdir", "ValueError", "os.path.isdir", "ValueError", "os.path.isdir", "ValueError", "os.path.isdir", "ValueError", "os.path.isdir", "ValueError", "os.path.isdir", "ValueError", "os.path.isdir", "ValueError", "os.path.realpath", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "enumerate", "kitti_2015_train.KITTI_2015_Train_Base._image_list.append", "kitti_2015_train.KITTI_2015_Train_Base._flow_list.append", "kitti_2015_train.KITTI_2015_Train_Base._disp_list.append", "len", "range", "range", "range", "ValueError", "os.path.isfile", "ValueError"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_calib_into_dict"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "data_root", "=", "None", ",", "\n", "dstype", "=", "\"full\"", ")", ":", "\n", "\n", "        ", "images_l_root", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "\"data_scene_flow\"", ",", "\"training\"", ",", "\"image_2_jpg\"", ")", "\n", "images_r_root", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "\"data_scene_flow\"", ",", "\"training\"", ",", "\"image_3_jpg\"", ")", "\n", "flow_root_occ", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "\"data_scene_flow\"", ",", "\"training\"", ",", "\"flow_occ\"", ")", "\n", "flow_root_noc", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "\"data_scene_flow\"", ",", "\"training\"", ",", "\"flow_noc\"", ")", "\n", "disp0_root_occ", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "\"data_scene_flow\"", ",", "\"training\"", ",", "\"disp_occ_0\"", ")", "\n", "disp1_root_occ", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "\"data_scene_flow\"", ",", "\"training\"", ",", "\"disp_occ_1\"", ")", "\n", "disp0_root_noc", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "\"data_scene_flow\"", ",", "\"training\"", ",", "\"disp_noc_0\"", ")", "\n", "disp1_root_noc", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "\"data_scene_flow\"", ",", "\"training\"", ",", "\"disp_noc_1\"", ")", "\n", "\n", "## loading image -----------------------------------", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "images_l_root", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Image directory {} not found!\"", ".", "format", "(", "images_l_root", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "images_r_root", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Image directory {} not found!\"", ".", "format", "(", "images_r_root", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "flow_root_occ", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Image directory {} not found!\"", ".", "format", "(", "flow_root_occ", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "flow_root_noc", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Image directory {} not found!\"", ".", "format", "(", "flow_root_noc", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "disp0_root_occ", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"disparity directory {} not found!\"", ".", "format", "(", "disp0_root_occ", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "disp1_root_occ", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"disparity directory {} not found!\"", ".", "format", "(", "disp1_root_occ", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "disp0_root_noc", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"disparity directory {} not found!\"", ".", "format", "(", "disp0_root_noc", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "disp1_root_noc", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"disparity directory {} not found!\"", ".", "format", "(", "disp1_root_noc", ")", ")", "\n", "\n", "# ----------------------------------------------------------", "\n", "# Construct list of indices for training/validation", "\n", "# ----------------------------------------------------------", "\n", "", "num_images", "=", "200", "\n", "validate_indices", "=", "[", "x", "for", "x", "in", "VALIDATE_INDICES", "if", "x", "in", "range", "(", "num_images", ")", "]", "\n", "if", "dstype", "==", "\"train\"", ":", "\n", "            ", "list_of_indices", "=", "[", "x", "for", "x", "in", "range", "(", "num_images", ")", "if", "x", "not", "in", "validate_indices", "]", "\n", "", "elif", "dstype", "==", "\"valid\"", ":", "\n", "            ", "list_of_indices", "=", "validate_indices", "\n", "", "elif", "dstype", "==", "\"full\"", ":", "\n", "            ", "list_of_indices", "=", "range", "(", "num_images", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"KITTI: dstype {} unknown!\"", ".", "format", "(", "dstype", ")", ")", "\n", "\n", "# ----------------------------------------------------------", "\n", "# Save list of actual filenames for inputs and disp/flow", "\n", "# ----------------------------------------------------------", "\n", "", "path_dir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "\n", "self", ".", "_image_list", "=", "[", "]", "\n", "self", ".", "_flow_list", "=", "[", "]", "\n", "self", ".", "_disp_list", "=", "[", "]", "\n", "img_ext", "=", "'.jpg'", "\n", "\n", "for", "ii", "in", "list_of_indices", ":", "\n", "\n", "            ", "file_idx", "=", "'%.6d'", "%", "ii", "\n", "\n", "im_l1", "=", "os", ".", "path", ".", "join", "(", "images_l_root", ",", "file_idx", "+", "\"_10\"", "+", "img_ext", ")", "\n", "im_l2", "=", "os", ".", "path", ".", "join", "(", "images_l_root", ",", "file_idx", "+", "\"_11\"", "+", "img_ext", ")", "\n", "im_r1", "=", "os", ".", "path", ".", "join", "(", "images_r_root", ",", "file_idx", "+", "\"_10\"", "+", "img_ext", ")", "\n", "im_r2", "=", "os", ".", "path", ".", "join", "(", "images_r_root", ",", "file_idx", "+", "\"_11\"", "+", "img_ext", ")", "\n", "\n", "flow_occ", "=", "os", ".", "path", ".", "join", "(", "flow_root_occ", ",", "file_idx", "+", "\"_10.png\"", ")", "\n", "flow_noc", "=", "os", ".", "path", ".", "join", "(", "flow_root_noc", ",", "file_idx", "+", "\"_10.png\"", ")", "\n", "disparity0_occ", "=", "os", ".", "path", ".", "join", "(", "disp0_root_occ", ",", "file_idx", "+", "\"_10.png\"", ")", "\n", "disparity1_occ", "=", "os", ".", "path", ".", "join", "(", "disp1_root_occ", ",", "file_idx", "+", "\"_10.png\"", ")", "\n", "disparity0_noc", "=", "os", ".", "path", ".", "join", "(", "disp0_root_noc", ",", "file_idx", "+", "\"_10.png\"", ")", "\n", "disparity1_noc", "=", "os", ".", "path", ".", "join", "(", "disp1_root_noc", ",", "file_idx", "+", "\"_10.png\"", ")", "\n", "\n", "file_list", "=", "[", "im_l1", ",", "im_l2", ",", "im_r1", ",", "im_r2", ",", "flow_occ", ",", "flow_noc", ",", "disparity0_occ", ",", "disparity1_occ", ",", "disparity0_noc", ",", "disparity1_noc", "]", "\n", "for", "_", ",", "item", "in", "enumerate", "(", "file_list", ")", ":", "\n", "                ", "if", "not", "os", ".", "path", ".", "isfile", "(", "item", ")", ":", "\n", "                    ", "raise", "ValueError", "(", "\"File not exist: %s\"", ",", "item", ")", "\n", "\n", "", "", "self", ".", "_image_list", ".", "append", "(", "[", "im_l1", ",", "im_l2", ",", "im_r1", ",", "im_r2", "]", ")", "\n", "self", ".", "_flow_list", ".", "append", "(", "[", "flow_occ", ",", "flow_noc", "]", ")", "\n", "self", ".", "_disp_list", ".", "append", "(", "[", "disparity0_occ", ",", "disparity1_occ", ",", "disparity0_noc", ",", "disparity1_noc", "]", ")", "\n", "\n", "", "self", ".", "_size", "=", "len", "(", "self", ".", "_image_list", ")", "\n", "assert", "len", "(", "self", ".", "_image_list", ")", "!=", "0", "\n", "\n", "## loading calibration matrix", "\n", "self", ".", "intrinsic_dict_l", "=", "{", "}", "\n", "self", ".", "intrinsic_dict_r", "=", "{", "}", "\n", "self", ".", "intrinsic_dict_l", ",", "self", ".", "intrinsic_dict_r", "=", "read_calib_into_dict", "(", "path_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_2015_train.KITTI_2015_MonoSceneFlow.__init__": [[108, 126], ["kitti_2015_train.KITTI_2015_Train_Base.__init__", "torchvision.transforms.Compose", "torchvision.transforms.ToPILImage", "torchvision.transforms.transforms.ToTensor"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "data_root", "=", "None", ",", "\n", "preprocessing_crop", "=", "False", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "dstype", "=", "\"full\"", ")", ":", "\n", "        ", "super", "(", "KITTI_2015_MonoSceneFlow", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "data_root", "=", "data_root", ",", "\n", "dstype", "=", "dstype", ")", "\n", "\n", "self", ".", "_args", "=", "args", "\n", "self", ".", "_preprocessing_crop", "=", "preprocessing_crop", "\n", "self", ".", "_crop_size", "=", "crop_size", "\n", "\n", "self", ".", "_to_tensor", "=", "vision_transforms", ".", "Compose", "(", "[", "\n", "vision_transforms", ".", "ToPILImage", "(", ")", ",", "\n", "vision_transforms", ".", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_2015_train.KITTI_2015_MonoSceneFlow.__getitem__": [[128, 203], ["common.list_flatten", "common.list_flatten", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "common.read_image_as_byte", "common.read_png_flow", "common.read_png_disp", "os.path.basename", "numpy.random.uniform", "numpy.random.uniform", "common.kitti_crop_image_list", "common.kitti_crop_image_list", "common.kitti_crop_image_list", "common.kitti_adjust_intrinsic", "kitti_2015_train.KITTI_2015_MonoSceneFlow._to_tensor", "common.numpy2torch", "common.numpy2torch", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "int", "int", "int", "int", "numpy.array", "common.get_date_from_width", "common.get_date_from_width"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.list_flatten", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.list_flatten", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_image_as_byte", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.read_png_flow", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.read_png_disp", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.kitti_crop_image_list", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.kitti_crop_image_list", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.kitti_crop_image_list", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.kitti_adjust_intrinsic", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.numpy2torch", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.numpy2torch", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.get_date_from_width", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.get_date_from_width"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index", "=", "index", "%", "self", ".", "_size", "\n", "\n", "# read images and flow", "\n", "# im_l1, im_l2, im_r1, im_r2", "\n", "img_list_np", "=", "[", "read_image_as_byte", "(", "img", ")", "for", "img", "in", "self", ".", "_image_list", "[", "index", "]", "]", "\n", "\n", "# flo_occ, mask_flo_occ, flo_noc, mask_flo_noc", "\n", "flo_list_np", "=", "[", "read_png_flow", "(", "img", ")", "for", "img", "in", "self", ".", "_flow_list", "[", "index", "]", "]", "\n", "flo_list_np", "=", "list_flatten", "(", "flo_list_np", ")", "\n", "\n", "# disp0_occ, mask0_disp_occ, disp1_occ, mask1_disp_occ", "\n", "# disp0_noc, mask0_disp_noc, disp1_noc, mask1_disp_noc", "\n", "disp_list_np", "=", "[", "read_png_disp", "(", "img", ")", "for", "img", "in", "self", ".", "_disp_list", "[", "index", "]", "]", "\n", "disp_list_np", "=", "list_flatten", "(", "disp_list_np", ")", "\n", "\n", "# example filename", "\n", "basename", "=", "os", ".", "path", ".", "basename", "(", "self", ".", "_image_list", "[", "index", "]", "[", "0", "]", ")", "[", ":", "6", "]", "\n", "k_l1", "=", "torch", ".", "from_numpy", "(", "self", ".", "intrinsic_dict_l", "[", "get_date_from_width", "(", "img_list_np", "[", "0", "]", ".", "shape", "[", "1", "]", ")", "]", ")", ".", "float", "(", ")", "\n", "k_r1", "=", "torch", ".", "from_numpy", "(", "self", ".", "intrinsic_dict_r", "[", "get_date_from_width", "(", "img_list_np", "[", "2", "]", ".", "shape", "[", "1", "]", ")", "]", ")", ".", "float", "(", ")", "\n", "\n", "# input size", "\n", "h_orig", ",", "w_orig", ",", "_", "=", "img_list_np", "[", "0", "]", ".", "shape", "\n", "input_im_size", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "h_orig", ",", "w_orig", "]", ")", ")", ".", "float", "(", ")", "\n", "\n", "# cropping ", "\n", "if", "self", ".", "_preprocessing_crop", ":", "\n", "\n", "# get starting positions", "\n", "            ", "crop_height", "=", "self", ".", "_crop_size", "[", "0", "]", "\n", "crop_width", "=", "self", ".", "_crop_size", "[", "1", "]", "\n", "x", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "w_orig", "-", "crop_width", "+", "1", ")", "\n", "y", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "h_orig", "-", "crop_height", "+", "1", ")", "\n", "crop_info", "=", "[", "int", "(", "x", ")", ",", "int", "(", "y", ")", ",", "int", "(", "x", "+", "crop_width", ")", ",", "int", "(", "y", "+", "crop_height", ")", "]", "\n", "\n", "# cropping images and adjust intrinsic accordingly", "\n", "img_list_np", "=", "kitti_crop_image_list", "(", "img_list_np", ",", "crop_info", ")", "\n", "flo_list_np", "=", "kitti_crop_image_list", "(", "flo_list_np", ",", "crop_info", ")", "\n", "disp_list_np", "=", "kitti_crop_image_list", "(", "disp_list_np", ",", "crop_info", ")", "\n", "k_l1", ",", "k_r1", "=", "kitti_adjust_intrinsic", "(", "k_l1", ",", "k_r1", ",", "crop_info", ")", "\n", "\n", "\n", "# convert np to tensor", "\n", "", "img_list_tensor", "=", "[", "self", ".", "_to_tensor", "(", "img", ")", "for", "img", "in", "img_list_np", "]", "\n", "flo_list_tensor", "=", "[", "numpy2torch", "(", "img", ")", "for", "img", "in", "flo_list_np", "]", "\n", "disp_list_tensor", "=", "[", "numpy2torch", "(", "img", ")", "for", "img", "in", "disp_list_np", "]", "\n", "\n", "\n", "example_dict", "=", "{", "\n", "\"input_l1\"", ":", "img_list_tensor", "[", "0", "]", ",", "\n", "\"input_l2\"", ":", "img_list_tensor", "[", "1", "]", ",", "\n", "\"input_r1\"", ":", "img_list_tensor", "[", "2", "]", ",", "\n", "\"input_r2\"", ":", "img_list_tensor", "[", "3", "]", ",", "\n", "\"index\"", ":", "index", ",", "\n", "\"basename\"", ":", "basename", ",", "\n", "\"target_flow\"", ":", "flo_list_tensor", "[", "0", "]", ",", "\n", "\"target_flow_mask\"", ":", "flo_list_tensor", "[", "1", "]", ",", "\n", "\"target_flow_noc\"", ":", "flo_list_tensor", "[", "2", "]", ",", "\n", "\"target_flow_mask_noc\"", ":", "flo_list_tensor", "[", "3", "]", ",", "\n", "\"target_disp\"", ":", "disp_list_tensor", "[", "0", "]", ",", "\n", "\"target_disp_mask\"", ":", "disp_list_tensor", "[", "1", "]", ",", "\n", "\"target_disp2_occ\"", ":", "disp_list_tensor", "[", "2", "]", ",", "\n", "\"target_disp2_mask_occ\"", ":", "disp_list_tensor", "[", "3", "]", ",", "\n", "\"target_disp_noc\"", ":", "disp_list_tensor", "[", "4", "]", ",", "\n", "\"target_disp_mask_noc\"", ":", "disp_list_tensor", "[", "5", "]", ",", "\n", "\"target_disp2_noc\"", ":", "disp_list_tensor", "[", "6", "]", ",", "\n", "\"target_disp2_mask_noc\"", ":", "disp_list_tensor", "[", "7", "]", ",", "\n", "\"input_k_l1\"", ":", "k_l1", ",", "\n", "\"input_k_l2\"", ":", "k_l1", ",", "\n", "\"input_k_r1\"", ":", "k_r1", ",", "\n", "\"input_k_r2\"", ":", "k_r1", ",", "\n", "\"input_size\"", ":", "input_im_size", "\n", "}", "\n", "\n", "return", "example_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_2015_train.KITTI_2015_MonoSceneFlow.__len__": [[204, 206], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_size", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_2015_train.KITTI_2015_MonoSceneFlow_Full.__init__": [[209, 220], ["kitti_2015_train.KITTI_2015_MonoSceneFlow.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "root", ",", "\n", "preprocessing_crop", "=", "False", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ")", ":", "\n", "        ", "super", "(", "KITTI_2015_MonoSceneFlow_Full", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "data_root", "=", "root", ",", "\n", "preprocessing_crop", "=", "preprocessing_crop", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "dstype", "=", "\"full\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_2015_train.KITTI_2015_MonoDepth.__init__": [[225, 239], ["kitti_2015_train.KITTI_2015_Train_Base.__init__", "torchvision.transforms.Compose", "torchvision.transforms.ToPILImage", "torchvision.transforms.Resize", "torchvision.transforms.transforms.ToTensor"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "data_root", "=", "None", ",", "\n", "dstype", "=", "\"full\"", ")", ":", "\n", "        ", "super", "(", "KITTI_2015_MonoDepth", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "data_root", "=", "data_root", ",", "\n", "dstype", "=", "dstype", ")", "\n", "\n", "self", ".", "_args", "=", "args", "\n", "self", ".", "_resize_to_tensor", "=", "vision_transforms", ".", "Compose", "(", "[", "\n", "vision_transforms", ".", "ToPILImage", "(", ")", ",", "\n", "vision_transforms", ".", "Resize", "(", "(", "256", ",", "512", ")", ")", ",", "\n", "vision_transforms", ".", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_2015_train.KITTI_2015_MonoDepth.__getitem__": [[242, 288], ["common.read_png_disp", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "common.intrinsic_scale.clone", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "common.numpy2torch", "common.numpy2torch", "common.intrinsic_scale", "common.intrinsic_scale.clone", "common.read_image_as_byte", "os.path.basename", "kitti_2015_train.KITTI_2015_MonoDepth._resize_to_tensor", "im_l1.size", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "im_l1.size", "im_l1.size", "numpy.array", "common.get_date_from_width"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.read_png_disp", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.numpy2torch", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.numpy2torch", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.intrinsic_scale", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_image_as_byte", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.get_date_from_width"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index", "=", "index", "%", "self", ".", "_size", "\n", "\n", "# read images and disp", "\n", "# im_l1, im_l2, im_r1, im_r2", "\n", "img_list_np", "=", "[", "read_image_as_byte", "(", "img", ")", "for", "img", "in", "self", ".", "_image_list", "[", "index", "]", "]", "\n", "disp_np", ",", "mask_disp", "=", "read_png_disp", "(", "self", ".", "_disp_list", "[", "index", "]", "[", "0", "]", ")", "\n", "\n", "# example filename", "\n", "basename", "=", "os", ".", "path", ".", "basename", "(", "self", ".", "_image_list", "[", "index", "]", "[", "0", "]", ")", "[", ":", "6", "]", "\n", "\n", "# find intrinsic", "\n", "h_orig", ",", "w_orig", ",", "_", "=", "img_list_np", "[", "0", "]", ".", "shape", "\n", "k_l1", "=", "torch", ".", "from_numpy", "(", "self", ".", "intrinsic_dict_l", "[", "get_date_from_width", "(", "w_orig", ")", "]", ")", ".", "float", "(", ")", "\n", "k_l1_orig", "=", "k_l1", ".", "clone", "(", ")", "\n", "input_im_size", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "h_orig", ",", "w_orig", "]", ")", ")", ".", "float", "(", ")", "\n", "\n", "# np to tensor (resizing img only)", "\n", "img_list_tensor", "=", "[", "self", ".", "_resize_to_tensor", "(", "img", ")", "for", "img", "in", "img_list_np", "]", "\n", "disp_t", "=", "numpy2torch", "(", "disp_np", ")", "\n", "mask_disp_t", "=", "numpy2torch", "(", "mask_disp", ")", "\n", "\n", "# resizing intrinsic matrix    ", "\n", "im_l1", "=", "img_list_tensor", "[", "0", "]", "\n", "k_l1", "=", "intrinsic_scale", "(", "k_l1", ",", "im_l1", ".", "size", "(", "1", ")", "/", "h_orig", ",", "im_l1", ".", "size", "(", "2", ")", "/", "w_orig", ")", "\n", "k_l1_flip", "=", "k_l1", ".", "clone", "(", ")", "\n", "k_l1_flip", "[", "0", ",", "2", "]", "=", "im_l1", ".", "size", "(", "2", ")", "-", "k_l1_flip", "[", "0", ",", "2", "]", "\n", "\n", "\n", "example_dict", "=", "{", "\n", "\"input_l1\"", ":", "img_list_tensor", "[", "0", "]", ",", "\n", "\"input_l2\"", ":", "img_list_tensor", "[", "1", "]", ",", "\n", "\"input_r1\"", ":", "img_list_tensor", "[", "2", "]", ",", "\n", "\"input_r2\"", ":", "img_list_tensor", "[", "3", "]", ",", "\n", "\"index\"", ":", "index", ",", "\n", "\"basename\"", ":", "basename", ",", "\n", "\"target_disp\"", ":", "disp_t", ",", "\n", "\"target_disp_mask\"", ":", "mask_disp_t", ",", "\n", "\"input_k_l1_orig\"", ":", "k_l1_orig", ",", "\n", "\"input_k_l1\"", ":", "k_l1", ",", "\n", "\"input_k_l1_flip\"", ":", "k_l1_flip", ",", "\n", "\"input_k_l2\"", ":", "k_l1", ",", "\n", "\"input_size\"", ":", "input_im_size", "\n", "}", "\n", "\n", "return", "example_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_2015_train.KITTI_2015_MonoDepth.__len__": [[289, 291], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_size", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_2015_train.KITTI_2015_MonoDepth_Full.__init__": [[294, 301], ["kitti_2015_train.KITTI_2015_MonoDepth.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "root", ")", ":", "\n", "        ", "super", "(", "KITTI_2015_MonoDepth_Full", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "data_root", "=", "root", ",", "\n", "dstype", "=", "\"full\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_eigen_test.KITTI_Eigen_Test.__init__": [[14, 68], ["os.path.dirname", "os.path.join", "open", "len", "common.read_calib_into_dict", "torchvision.transforms.Compose", "os.path.realpath", "os.path.exists", "ValueError", "os.path.isdir", "ValueError", "line.rstrip().split", "name_l1.replace", "open.readlines", "[].split", "os.path.isfile", "name_l1.replace", "os.path.isfile", "os.path.isfile", "os.path.isfile", "kitti_eigen_test.KITTI_Eigen_Test._image_list.append", "torchvision.transforms.ToPILImage", "torchvision.transforms.transforms.ToTensor", "line.rstrip", "int", "int", "item[].split"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_calib_into_dict"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "root", ",", "\n", "num_examples", "=", "-", "1", ")", ":", "\n", "\n", "        ", "self", ".", "_args", "=", "args", "\n", "\n", "index_file", "=", "\"index_txt/eigen_text.txt\"", "\n", "\n", "\n", "path_dir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "\n", "path_index_file", "=", "os", ".", "path", ".", "join", "(", "path_dir", ",", "index_file", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path_index_file", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Index File '%s' not found!\"", ",", "path_index_file", ")", "\n", "", "index_file", "=", "open", "(", "path_index_file", ",", "'r'", ")", "\n", "\n", "## loading image -----------------------------------", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "root", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Image directory '%s' not found!\"", ",", "root", ")", "\n", "\n", "", "filename_list", "=", "[", "line", ".", "rstrip", "(", ")", ".", "split", "(", "' '", ")", "for", "line", "in", "index_file", ".", "readlines", "(", ")", "]", "\n", "self", ".", "_image_list", "=", "[", "]", "\n", "\n", "view1", "=", "'image_02/data'", "\n", "view2", "=", "'image_03/data'", "\n", "ext", "=", "'.jpg'", "\n", "for", "item", "in", "filename_list", ":", "\n", "\n", "            ", "name_l1", "=", "root", "+", "'/'", "+", "item", "[", "0", "]", "\n", "name_depth", "=", "(", "root", "+", "'/'", "+", "item", "[", "0", "]", ")", ".", "replace", "(", "\"jpg\"", ",", "\"npy\"", ")", ".", "replace", "(", "\"image_02\"", ",", "\"projected_depth\"", ")", "\n", "idx_src", "=", "item", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "4", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "idx_tgt", "=", "'%.10d'", "%", "(", "int", "(", "idx_src", ")", "+", "1", ")", "\n", "name_l2", "=", "name_l1", ".", "replace", "(", "idx_src", ",", "idx_tgt", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "name_l2", ")", ":", "\n", "                ", "idx_prev", "=", "'%.10d'", "%", "(", "int", "(", "idx_src", ")", "-", "1", ")", "\n", "name_l2", "=", "name_l1", ".", "replace", "(", "idx_src", ",", "idx_prev", ")", "\n", "\n", "", "if", "os", ".", "path", ".", "isfile", "(", "name_l1", ")", "and", "os", ".", "path", ".", "isfile", "(", "name_l2", ")", "and", "os", ".", "path", ".", "isfile", "(", "name_depth", ")", ":", "\n", "                ", "self", ".", "_image_list", ".", "append", "(", "[", "name_l1", ",", "name_l2", ",", "name_depth", "]", ")", "\n", "\n", "", "", "if", "num_examples", ">", "0", ":", "\n", "            ", "self", ".", "_image_list", "=", "self", ".", "_image_list", "[", ":", "num_examples", "]", "\n", "\n", "", "self", ".", "_size", "=", "len", "(", "self", ".", "_image_list", ")", "\n", "\n", "## loading calibration matrix", "\n", "self", ".", "intrinsic_dict_l", "=", "{", "}", "\n", "self", ".", "intrinsic_dict_r", "=", "{", "}", "\n", "self", ".", "intrinsic_dict_l", ",", "self", ".", "intrinsic_dict_r", "=", "read_calib_into_dict", "(", "path_dir", ")", "\n", "\n", "self", ".", "_to_tensor", "=", "vision_transforms", ".", "Compose", "(", "[", "\n", "vision_transforms", ".", "ToPILImage", "(", ")", ",", "\n", "vision_transforms", ".", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_eigen_test.KITTI_Eigen_Test.__getitem__": [[70, 112], ["common.read_image_as_byte", "common.read_image_as_byte", "numpy.load", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "kitti_eigen_test.KITTI_Eigen_Test._to_tensor", "kitti_eigen_test.KITTI_Eigen_Test._to_tensor", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "os.path.dirname", "os.path.basename().split", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "os.path.dirname().split", "numpy.array", "os.path.basename", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "os.path.dirname"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_image_as_byte", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_image_as_byte"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index", "=", "index", "%", "self", ".", "_size", "\n", "\n", "im_l1_filename", "=", "self", ".", "_image_list", "[", "index", "]", "[", "0", "]", "\n", "im_l2_filename", "=", "self", ".", "_image_list", "[", "index", "]", "[", "1", "]", "\n", "depth_filename", "=", "self", ".", "_image_list", "[", "index", "]", "[", "2", "]", "\n", "\n", "# read images and flow", "\n", "im_l1_np", "=", "read_image_as_byte", "(", "im_l1_filename", ")", "\n", "im_l2_np", "=", "read_image_as_byte", "(", "im_l2_filename", ")", "\n", "im_l1_depth_np", "=", "np", ".", "load", "(", "depth_filename", ")", "\n", "\n", "# example filename", "\n", "basename", "=", "os", ".", "path", ".", "dirname", "(", "im_l1_filename", ")", ".", "split", "(", "'/'", ")", "[", "-", "3", "]", "+", "'_'", "+", "os", ".", "path", ".", "basename", "(", "im_l1_filename", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "im_l1_filename", ")", "[", "-", "51", ":", "]", "\n", "datename", "=", "dirname", "[", ":", "10", "]", "\n", "\n", "k_l1", "=", "torch", ".", "from_numpy", "(", "self", ".", "intrinsic_dict_l", "[", "datename", "]", ")", ".", "float", "(", ")", "\n", "k_r1", "=", "torch", ".", "from_numpy", "(", "self", ".", "intrinsic_dict_r", "[", "datename", "]", ")", ".", "float", "(", ")", "\n", "\n", "im_l1", "=", "self", ".", "_to_tensor", "(", "im_l1_np", ")", "\n", "im_l2", "=", "self", ".", "_to_tensor", "(", "im_l2_np", ")", "\n", "im_l1_depth", "=", "torch", ".", "from_numpy", "(", "im_l1_depth_np", ")", ".", "unsqueeze", "(", "0", ")", ".", "float", "(", ")", "\n", "\n", "# input size", "\n", "h_orig", ",", "w_orig", ",", "_", "=", "im_l1_np", ".", "shape", "\n", "input_im_size", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "h_orig", ",", "w_orig", "]", ")", ")", ".", "float", "(", ")", "\n", "\n", "\n", "example_dict", "=", "{", "\n", "\"input_l1\"", ":", "im_l1", ",", "\n", "\"input_l2\"", ":", "im_l2", ",", "\n", "\"index\"", ":", "index", ",", "\n", "\"basename\"", ":", "basename", ",", "\n", "\"datename\"", ":", "datename", ",", "\n", "\"input_k_l1\"", ":", "k_l1", ",", "\n", "\"input_k_l2\"", ":", "k_l1", ",", "\n", "\"input_size\"", ":", "input_im_size", ",", "\n", "\"target_depth\"", ":", "im_l1_depth", "\n", "}", "\n", "\n", "return", "example_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_eigen_test.KITTI_Eigen_Test.__len__": [[113, 115], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_size", "\n", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.get_date_from_width": [[17, 19], ["None"], "function", ["None"], ["def", "get_date_from_width", "(", "width", ")", ":", "\n", "    ", "return", "width_to_date", "[", "width", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.list_flatten": [[21, 23], ["None"], "function", ["None"], ["", "def", "list_flatten", "(", "input_list", ")", ":", "\n", "    ", "return", "[", "img", "for", "sub_list", "in", "input_list", "for", "img", "in", "sub_list", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.intrinsic_scale": [[25, 32], ["mat.clone"], "function", ["None"], ["", "def", "intrinsic_scale", "(", "mat", ",", "sy", ",", "sx", ")", ":", "\n", "    ", "out", "=", "mat", ".", "clone", "(", ")", "\n", "out", "[", "0", ",", "0", "]", "*=", "sx", "\n", "out", "[", "0", ",", "2", "]", "*=", "sx", "\n", "out", "[", "1", ",", "1", "]", "*=", "sy", "\n", "out", "[", "1", ",", "2", "]", "*=", "sy", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.kitti_adjust_intrinsic": [[34, 42], ["None"], "function", ["None"], ["", "def", "kitti_adjust_intrinsic", "(", "k_l1", ",", "k_r1", ",", "crop_info", ")", ":", "\n", "    ", "str_x", "=", "crop_info", "[", "0", "]", "\n", "str_y", "=", "crop_info", "[", "1", "]", "\n", "k_l1", "[", "0", ",", "2", "]", "-=", "str_x", "\n", "k_l1", "[", "1", ",", "2", "]", "-=", "str_y", "\n", "k_r1", "[", "0", ",", "2", "]", "-=", "str_x", "\n", "k_r1", "[", "1", ",", "2", "]", "-=", "str_y", "\n", "return", "k_l1", ",", "k_r1", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.kitti_crop_image_list": [[43, 52], ["None"], "function", ["None"], ["", "def", "kitti_crop_image_list", "(", "img_list", ",", "crop_info", ")", ":", "\n", "    ", "str_x", "=", "crop_info", "[", "0", "]", "\n", "str_y", "=", "crop_info", "[", "1", "]", "\n", "end_x", "=", "crop_info", "[", "2", "]", "\n", "end_y", "=", "crop_info", "[", "3", "]", "\n", "\n", "transformed", "=", "[", "img", "[", "str_y", ":", "end_y", ",", "str_x", ":", "end_x", ",", ":", "]", "for", "img", "in", "img_list", "]", "\n", "\n", "return", "transformed", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.numpy2torch": [[54, 61], ["isinstance", "torch.from_numpy().float", "numpy.transpose", "numpy.expand_dims", "torch.from_numpy", "np.expand_dims.copy"], "function", ["None"], ["", "def", "numpy2torch", "(", "array", ")", ":", "\n", "    ", "assert", "(", "isinstance", "(", "array", ",", "np", ".", "ndarray", ")", ")", "\n", "if", "array", ".", "ndim", "==", "3", ":", "\n", "        ", "array", "=", "np", ".", "transpose", "(", "array", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "        ", "array", "=", "np", ".", "expand_dims", "(", "array", ",", "axis", "=", "0", ")", "\n", "", "return", "torch", ".", "from_numpy", "(", "array", ".", "copy", "(", ")", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_image_as_byte": [[63, 65], ["skimage.imread"], "function", ["None"], ["", "def", "read_image_as_byte", "(", "filename", ")", ":", "\n", "    ", "return", "io", ".", "imread", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_png_flow": [[67, 83], ["png.Reader", "png.Reader.asDirect", "list", "numpy.zeros", "range", "len"], "function", ["None"], ["", "def", "read_png_flow", "(", "flow_file", ")", ":", "\n", "    ", "flow_object", "=", "png", ".", "Reader", "(", "filename", "=", "flow_file", ")", "\n", "flow_direct", "=", "flow_object", ".", "asDirect", "(", ")", "\n", "flow_data", "=", "list", "(", "flow_direct", "[", "2", "]", ")", "\n", "(", "w", ",", "h", ")", "=", "flow_direct", "[", "3", "]", "[", "'size'", "]", "\n", "flow", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "3", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "flow_data", ")", ")", ":", "\n", "        ", "flow", "[", "i", ",", ":", ",", "0", "]", "=", "flow_data", "[", "i", "]", "[", "0", ":", ":", "3", "]", "\n", "flow", "[", "i", ",", ":", ",", "1", "]", "=", "flow_data", "[", "i", "]", "[", "1", ":", ":", "3", "]", "\n", "flow", "[", "i", ",", ":", ",", "2", "]", "=", "flow_data", "[", "i", "]", "[", "2", ":", ":", "3", "]", "\n", "\n", "", "invalid_idx", "=", "(", "flow", "[", ":", ",", ":", ",", "2", "]", "==", "0", ")", "\n", "flow", "[", ":", ",", ":", ",", "0", ":", "2", "]", "=", "(", "flow", "[", ":", ",", ":", ",", "0", ":", "2", "]", "-", "2", "**", "15", ")", "/", "64.0", "\n", "flow", "[", "invalid_idx", ",", "0", "]", "=", "0", "\n", "flow", "[", "invalid_idx", ",", "1", "]", "=", "0", "\n", "return", "flow", "[", ":", ",", ":", ",", "0", ":", "2", "]", ",", "(", "1", "-", "invalid_idx", "*", "1", ")", "[", ":", ",", ":", ",", "None", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_png_disp": [[85, 90], ["numpy.expand_dims", "skimage.imread().astype", "skimage.imread"], "function", ["None"], ["", "def", "read_png_disp", "(", "disp_file", ")", ":", "\n", "    ", "disp_np", "=", "io", ".", "imread", "(", "disp_file", ")", ".", "astype", "(", "np", ".", "uint16", ")", "/", "256.0", "\n", "disp_np", "=", "np", ".", "expand_dims", "(", "disp_np", ",", "axis", "=", "2", ")", "\n", "mask_disp", "=", "(", "disp_np", ">", "0", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "return", "disp_np", ",", "mask_disp", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_raw_calib_file": [[92, 107], ["open", "f.readlines", "line.split", "numpy.array", "float", "value.split"], "function", ["None"], ["", "def", "read_raw_calib_file", "(", "filepath", ")", ":", "\n", "# From https://github.com/utiasSTARS/pykitti/blob/master/pykitti/utils.py", "\n", "    ", "\"\"\"Read in a calibration file and parse into a dictionary.\"\"\"", "\n", "data", "=", "{", "}", "\n", "\n", "with", "open", "(", "filepath", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ".", "readlines", "(", ")", ":", "\n", "            ", "key", ",", "value", "=", "line", ".", "split", "(", "':'", ",", "1", ")", "\n", "# The only non-float values in these files are dates, which", "\n", "# we don't care about anyway", "\n", "try", ":", "\n", "                ", "data", "[", "key", "]", "=", "np", ".", "array", "(", "[", "float", "(", "x", ")", "for", "x", "in", "value", ".", "split", "(", ")", "]", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "pass", "\n", "", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_calib_into_dict": [[109, 125], ["enumerate", "os.path.join", "common.read_raw_calib_file", "numpy.reshape", "numpy.reshape"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_raw_calib_file"], ["", "def", "read_calib_into_dict", "(", "path_dir", ")", ":", "\n", "\n", "    ", "calibration_file_list", "=", "[", "'2011_09_26'", ",", "'2011_09_28'", ",", "'2011_09_29'", ",", "'2011_09_30'", ",", "'2011_10_03'", "]", "\n", "intrinsic_dict_l", "=", "{", "}", "\n", "intrinsic_dict_r", "=", "{", "}", "\n", "\n", "for", "ii", ",", "date", "in", "enumerate", "(", "calibration_file_list", ")", ":", "\n", "        ", "file_name", "=", "\"cam_intrinsics/calib_cam_to_cam_\"", "+", "date", "+", "'.txt'", "\n", "file_name_full", "=", "os", ".", "path", ".", "join", "(", "path_dir", ",", "file_name", ")", "\n", "file_data", "=", "read_raw_calib_file", "(", "file_name_full", ")", "\n", "P_rect_02", "=", "np", ".", "reshape", "(", "file_data", "[", "'P_rect_02'", "]", ",", "(", "3", ",", "4", ")", ")", "\n", "P_rect_03", "=", "np", ".", "reshape", "(", "file_data", "[", "'P_rect_03'", "]", ",", "(", "3", ",", "4", ")", ")", "\n", "intrinsic_dict_l", "[", "date", "]", "=", "P_rect_02", "[", ":", "3", ",", ":", "3", "]", "\n", "intrinsic_dict_r", "[", "date", "]", "=", "P_rect_03", "[", ":", "3", ",", ":", "3", "]", "\n", "\n", "", "return", "intrinsic_dict_l", ",", "intrinsic_dict_r", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.custom_batchsampler.CustomBatchSampler.__init__": [[5, 17], ["len", "iter", "isinstance", "ValueError"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sampler", ")", ":", "\n", "        ", "for", "samp", "in", "sampler", ":", "\n", "            ", "if", "not", "isinstance", "(", "samp", ",", "Sampler", ")", ":", "\n", "                ", "raise", "ValueError", "(", "\"sampler should be an instance of \"", "\n", "\"torch.utils.data.Sampler, but got sampler={}\"", "\n", ".", "format", "(", "samp", ")", ")", "\n", "", "", "self", ".", "samplers", "=", "sampler", "\n", "self", ".", "n_samples", "=", "[", "len", "(", "samp", ")", "for", "samp", "in", "self", ".", "samplers", "]", "\n", "self", ".", "sample_cnt", "=", "[", "0", "for", "samp", "in", "self", ".", "samplers", "]", "\n", "self", ".", "iters", "=", "[", "iter", "(", "samp", ")", "for", "samp", "in", "self", ".", "samplers", "]", "\n", "\n", "self", ".", "batch_size", "=", "[", "1", ",", "3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.custom_batchsampler.CustomBatchSampler.__iter__": [[18, 41], ["range", "len", "enumerate", "range", "len", "range", "iter", "batch.append", "next"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "\n", "        ", "for", "ii", "in", "range", "(", "len", "(", "self", ")", ")", ":", "\n", "\n", "            ", "for", "ss", ",", "samp", "in", "enumerate", "(", "self", ".", "samplers", ")", ":", "\n", "                ", "self", ".", "sample_cnt", "[", "ss", "]", "+=", "self", ".", "batch_size", "[", "ss", "]", "\n", "if", "self", ".", "sample_cnt", "[", "ss", "]", ">", "self", ".", "n_samples", "[", "ss", "]", ":", "\n", "                    ", "self", ".", "iters", "[", "ss", "]", "=", "iter", "(", "samp", ")", "\n", "self", ".", "sample_cnt", "[", "ss", "]", "=", "self", ".", "batch_size", "[", "ss", "]", "\n", "\n", "", "", "batch", "=", "[", "]", "\n", "\n", "## for each sampler", "\n", "for", "ss", "in", "range", "(", "len", "(", "self", ".", "samplers", ")", ")", ":", "\n", "                ", "if", "ss", "is", "0", ":", "\n", "                    ", "prev_idx", "=", "0", "\n", "", "else", ":", "\n", "                    ", "prev_idx", "=", "self", ".", "n_samples", "[", "ss", "-", "1", "]", "\n", "\n", "", "for", "bb", "in", "range", "(", "self", ".", "batch_size", "[", "ss", "]", ")", ":", "\n", "                    ", "batch", ".", "append", "(", "next", "(", "self", ".", "iters", "[", "ss", "]", ")", "+", "prev_idx", ")", "\n", "\n", "", "", "yield", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.custom_batchsampler.CustomBatchSampler.__len__": [[42, 44], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "samplers", "[", "0", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_raw_monosf.KITTI_Raw.__init__": [[14, 72], ["os.path.dirname", "os.path.join", "open", "len", "common.read_calib_into_dict", "torchvision.transforms.Compose", "os.path.realpath", "os.path.exists", "ValueError", "os.path.isdir", "ValueError", "line.rstrip().split", "open.readlines", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.isfile", "os.path.isfile", "os.path.isfile", "os.path.isfile", "kitti_raw_monosf.KITTI_Raw._image_list.append", "torchvision.transforms.ToPILImage", "torchvision.transforms.transforms.ToTensor", "line.rstrip", "int"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_calib_into_dict"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "images_root", "=", "None", ",", "\n", "flip_augmentations", "=", "True", ",", "\n", "preprocessing_crop", "=", "True", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "num_examples", "=", "-", "1", ",", "\n", "index_file", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "_args", "=", "args", "\n", "self", ".", "_seq_len", "=", "1", "\n", "self", ".", "_flip_augmentations", "=", "flip_augmentations", "\n", "self", ".", "_preprocessing_crop", "=", "preprocessing_crop", "\n", "self", ".", "_crop_size", "=", "crop_size", "\n", "\n", "path_dir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "\n", "path_index_file", "=", "os", ".", "path", ".", "join", "(", "path_dir", ",", "index_file", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path_index_file", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Index File '%s' not found!\"", ",", "path_index_file", ")", "\n", "", "index_file", "=", "open", "(", "path_index_file", ",", "'r'", ")", "\n", "\n", "## loading image -----------------------------------", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "images_root", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Image directory '%s' not found!\"", ")", "\n", "\n", "", "filename_list", "=", "[", "line", ".", "rstrip", "(", ")", ".", "split", "(", "' '", ")", "for", "line", "in", "index_file", ".", "readlines", "(", ")", "]", "\n", "self", ".", "_image_list", "=", "[", "]", "\n", "view1", "=", "'image_02/data'", "\n", "view2", "=", "'image_03/data'", "\n", "ext", "=", "'.jpg'", "\n", "\n", "for", "item", "in", "filename_list", ":", "\n", "            ", "date", "=", "item", "[", "0", "]", "[", ":", "10", "]", "\n", "scene", "=", "item", "[", "0", "]", "\n", "idx_src", "=", "item", "[", "1", "]", "\n", "idx_tgt", "=", "'%.10d'", "%", "(", "int", "(", "idx_src", ")", "+", "1", ")", "\n", "name_l1", "=", "os", ".", "path", ".", "join", "(", "images_root", ",", "date", ",", "scene", ",", "view1", ",", "idx_src", ")", "+", "ext", "\n", "name_l2", "=", "os", ".", "path", ".", "join", "(", "images_root", ",", "date", ",", "scene", ",", "view1", ",", "idx_tgt", ")", "+", "ext", "\n", "name_r1", "=", "os", ".", "path", ".", "join", "(", "images_root", ",", "date", ",", "scene", ",", "view2", ",", "idx_src", ")", "+", "ext", "\n", "name_r2", "=", "os", ".", "path", ".", "join", "(", "images_root", ",", "date", ",", "scene", ",", "view2", ",", "idx_tgt", ")", "+", "ext", "\n", "\n", "if", "os", ".", "path", ".", "isfile", "(", "name_l1", ")", "and", "os", ".", "path", ".", "isfile", "(", "name_l2", ")", "and", "os", ".", "path", ".", "isfile", "(", "name_r1", ")", "and", "os", ".", "path", ".", "isfile", "(", "name_r2", ")", ":", "\n", "                ", "self", ".", "_image_list", ".", "append", "(", "[", "name_l1", ",", "name_l2", ",", "name_r1", ",", "name_r2", "]", ")", "\n", "\n", "", "", "if", "num_examples", ">", "0", ":", "\n", "            ", "self", ".", "_image_list", "=", "self", ".", "_image_list", "[", ":", "num_examples", "]", "\n", "\n", "", "self", ".", "_size", "=", "len", "(", "self", ".", "_image_list", ")", "\n", "\n", "## loading calibration matrix", "\n", "self", ".", "intrinsic_dict_l", "=", "{", "}", "\n", "self", ".", "intrinsic_dict_r", "=", "{", "}", "\n", "self", ".", "intrinsic_dict_l", ",", "self", ".", "intrinsic_dict_r", "=", "read_calib_into_dict", "(", "path_dir", ")", "\n", "\n", "self", ".", "_to_tensor", "=", "vision_transforms", ".", "Compose", "(", "[", "\n", "vision_transforms", ".", "ToPILImage", "(", ")", ",", "\n", "vision_transforms", ".", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_raw_monosf.KITTI_Raw.__getitem__": [[74, 159], ["torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "common.read_image_as_byte", "os.path.basename", "os.path.dirname", "numpy.random.uniform", "numpy.random.uniform", "common.kitti_crop_image_list", "common.kitti_adjust_intrinsic", "kitti_raw_monosf.KITTI_Raw._to_tensor", "im_l1.size", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "example_dict.update", "example_dict.update", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "int", "int", "int", "int", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_image_as_byte", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.kitti_crop_image_list", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.kitti_adjust_intrinsic", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.update", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.update"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index", "=", "index", "%", "self", ".", "_size", "\n", "\n", "# read images and flow", "\n", "# im_l1, im_l2, im_r1, im_r2", "\n", "img_list_np", "=", "[", "read_image_as_byte", "(", "img", ")", "for", "img", "in", "self", ".", "_image_list", "[", "index", "]", "]", "\n", "\n", "# example filename", "\n", "im_l1_filename", "=", "self", ".", "_image_list", "[", "index", "]", "[", "0", "]", "\n", "basename", "=", "os", ".", "path", ".", "basename", "(", "im_l1_filename", ")", "[", ":", "6", "]", "\n", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "im_l1_filename", ")", "[", "-", "51", ":", "]", "\n", "datename", "=", "dirname", "[", ":", "10", "]", "\n", "k_l1", "=", "torch", ".", "from_numpy", "(", "self", ".", "intrinsic_dict_l", "[", "datename", "]", ")", ".", "float", "(", ")", "\n", "k_r1", "=", "torch", ".", "from_numpy", "(", "self", ".", "intrinsic_dict_r", "[", "datename", "]", ")", ".", "float", "(", ")", "\n", "\n", "# input size", "\n", "h_orig", ",", "w_orig", ",", "_", "=", "img_list_np", "[", "0", "]", ".", "shape", "\n", "input_im_size", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "h_orig", ",", "w_orig", "]", ")", ")", ".", "float", "(", ")", "\n", "\n", "# cropping ", "\n", "if", "self", ".", "_preprocessing_crop", ":", "\n", "\n", "# get starting positions", "\n", "            ", "crop_height", "=", "self", ".", "_crop_size", "[", "0", "]", "\n", "crop_width", "=", "self", ".", "_crop_size", "[", "1", "]", "\n", "x", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "w_orig", "-", "crop_width", "+", "1", ")", "\n", "y", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "h_orig", "-", "crop_height", "+", "1", ")", "\n", "crop_info", "=", "[", "int", "(", "x", ")", ",", "int", "(", "y", ")", ",", "int", "(", "x", "+", "crop_width", ")", ",", "int", "(", "y", "+", "crop_height", ")", "]", "\n", "\n", "# cropping images and adjust intrinsic accordingly", "\n", "img_list_np", "=", "kitti_crop_image_list", "(", "img_list_np", ",", "crop_info", ")", "\n", "k_l1", ",", "k_r1", "=", "kitti_adjust_intrinsic", "(", "k_l1", ",", "k_r1", ",", "crop_info", ")", "\n", "\n", "# to tensors", "\n", "", "img_list_tensor", "=", "[", "self", ".", "_to_tensor", "(", "img", ")", "for", "img", "in", "img_list_np", "]", "\n", "\n", "im_l1", "=", "img_list_tensor", "[", "0", "]", "\n", "im_l2", "=", "img_list_tensor", "[", "1", "]", "\n", "im_r1", "=", "img_list_tensor", "[", "2", "]", "\n", "im_r2", "=", "img_list_tensor", "[", "3", "]", "\n", "\n", "common_dict", "=", "{", "\n", "\"index\"", ":", "index", ",", "\n", "\"basename\"", ":", "basename", ",", "\n", "\"datename\"", ":", "datename", ",", "\n", "\"input_size\"", ":", "input_im_size", "\n", "}", "\n", "\n", "# random flip", "\n", "if", "self", ".", "_flip_augmentations", "is", "True", "and", "torch", ".", "rand", "(", "1", ")", ">", "0.5", ":", "\n", "            ", "_", ",", "_", ",", "ww", "=", "im_l1", ".", "size", "(", ")", "\n", "im_l1_flip", "=", "torch", ".", "flip", "(", "im_l1", ",", "dims", "=", "[", "2", "]", ")", "\n", "im_l2_flip", "=", "torch", ".", "flip", "(", "im_l2", ",", "dims", "=", "[", "2", "]", ")", "\n", "im_r1_flip", "=", "torch", ".", "flip", "(", "im_r1", ",", "dims", "=", "[", "2", "]", ")", "\n", "im_r2_flip", "=", "torch", ".", "flip", "(", "im_r2", ",", "dims", "=", "[", "2", "]", ")", "\n", "\n", "k_l1", "[", "0", ",", "2", "]", "=", "ww", "-", "k_l1", "[", "0", ",", "2", "]", "\n", "k_r1", "[", "0", ",", "2", "]", "=", "ww", "-", "k_r1", "[", "0", ",", "2", "]", "\n", "\n", "example_dict", "=", "{", "\n", "\"input_l1\"", ":", "im_r1_flip", ",", "\n", "\"input_r1\"", ":", "im_l1_flip", ",", "\n", "\"input_l2\"", ":", "im_r2_flip", ",", "\n", "\"input_r2\"", ":", "im_l2_flip", ",", "\n", "\"input_k_l1\"", ":", "k_r1", ",", "\n", "\"input_k_r1\"", ":", "k_l1", ",", "\n", "\"input_k_l2\"", ":", "k_r1", ",", "\n", "\"input_k_r2\"", ":", "k_l1", ",", "\n", "}", "\n", "example_dict", ".", "update", "(", "common_dict", ")", "\n", "\n", "", "else", ":", "\n", "            ", "example_dict", "=", "{", "\n", "\"input_l1\"", ":", "im_l1", ",", "\n", "\"input_r1\"", ":", "im_r1", ",", "\n", "\"input_l2\"", ":", "im_l2", ",", "\n", "\"input_r2\"", ":", "im_r2", ",", "\n", "\"input_k_l1\"", ":", "k_l1", ",", "\n", "\"input_k_r1\"", ":", "k_r1", ",", "\n", "\"input_k_l2\"", ":", "k_l1", ",", "\n", "\"input_k_r2\"", ":", "k_r1", ",", "\n", "}", "\n", "example_dict", ".", "update", "(", "common_dict", ")", "\n", "\n", "", "return", "example_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_raw_monosf.KITTI_Raw.__len__": [[160, 162], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_size", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_raw_monosf.KITTI_Raw_KittiSplit_Train.__init__": [[166, 181], ["kitti_raw_monosf.KITTI_Raw.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "root", ",", "\n", "flip_augmentations", "=", "True", ",", "\n", "preprocessing_crop", "=", "True", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "num_examples", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "KITTI_Raw_KittiSplit_Train", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "images_root", "=", "root", ",", "\n", "flip_augmentations", "=", "flip_augmentations", ",", "\n", "preprocessing_crop", "=", "preprocessing_crop", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "num_examples", "=", "num_examples", ",", "\n", "index_file", "=", "\"index_txt/kitti_train.txt\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_raw_monosf.KITTI_Raw_KittiSplit_Valid.__init__": [[184, 199], ["kitti_raw_monosf.KITTI_Raw.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "root", ",", "\n", "flip_augmentations", "=", "False", ",", "\n", "preprocessing_crop", "=", "False", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "num_examples", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "KITTI_Raw_KittiSplit_Valid", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "images_root", "=", "root", ",", "\n", "flip_augmentations", "=", "flip_augmentations", ",", "\n", "preprocessing_crop", "=", "preprocessing_crop", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "num_examples", "=", "num_examples", ",", "\n", "index_file", "=", "\"index_txt/kitti_valid.txt\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_raw_monosf.KITTI_Raw_KittiSplit_Full.__init__": [[202, 217], ["kitti_raw_monosf.KITTI_Raw.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "root", ",", "\n", "flip_augmentations", "=", "True", ",", "\n", "preprocessing_crop", "=", "True", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "num_examples", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "KITTI_Raw_KittiSplit_Full", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "images_root", "=", "root", ",", "\n", "flip_augmentations", "=", "flip_augmentations", ",", "\n", "preprocessing_crop", "=", "preprocessing_crop", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "num_examples", "=", "num_examples", ",", "\n", "index_file", "=", "\"index_txt/kitti_full.txt\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_raw_monosf.KITTI_Raw_EigenSplit_Train.__init__": [[220, 235], ["kitti_raw_monosf.KITTI_Raw.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "root", ",", "\n", "flip_augmentations", "=", "True", ",", "\n", "preprocessing_crop", "=", "True", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "num_examples", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "KITTI_Raw_EigenSplit_Train", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "images_root", "=", "root", ",", "\n", "flip_augmentations", "=", "flip_augmentations", ",", "\n", "preprocessing_crop", "=", "preprocessing_crop", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "num_examples", "=", "num_examples", ",", "\n", "index_file", "=", "\"index_txt/eigen_train.txt\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_raw_monosf.KITTI_Raw_EigenSplit_Valid.__init__": [[238, 253], ["kitti_raw_monosf.KITTI_Raw.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "root", ",", "\n", "flip_augmentations", "=", "False", ",", "\n", "preprocessing_crop", "=", "False", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "num_examples", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "KITTI_Raw_EigenSplit_Valid", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "images_root", "=", "root", ",", "\n", "flip_augmentations", "=", "flip_augmentations", ",", "\n", "preprocessing_crop", "=", "preprocessing_crop", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "num_examples", "=", "num_examples", ",", "\n", "index_file", "=", "\"index_txt/eigen_valid.txt\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_raw_monosf.KITTI_Raw_EigenSplit_Full.__init__": [[256, 271], ["kitti_raw_monosf.KITTI_Raw.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "root", ",", "\n", "flip_augmentations", "=", "True", ",", "\n", "preprocessing_crop", "=", "True", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "num_examples", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "KITTI_Raw_EigenSplit_Full", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "images_root", "=", "root", ",", "\n", "flip_augmentations", "=", "flip_augmentations", ",", "\n", "preprocessing_crop", "=", "preprocessing_crop", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "num_examples", "=", "num_examples", ",", "\n", "index_file", "=", "\"index_txt/eigen_full.txt\"", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_raw_monodepth.KITTI_Raw.__init__": [[15, 75], ["os.path.dirname", "os.path.join", "open", "len", "common.read_calib_into_dict", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "os.path.realpath", "os.path.exists", "ValueError", "os.path.isdir", "ValueError", "line.rstrip().split", "range", "open.readlines", "torchvision.transforms.ToPILImage", "torchvision.transforms.Resize", "torchvision.transforms.transforms.ToTensor", "torchvision.transforms.transforms.ToTensor", "line.rstrip", "os.path.join", "os.path.join", "os.path.isfile", "os.path.isfile", "kitti_raw_monodepth.KITTI_Raw._image_list.append", "int"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_calib_into_dict"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "images_root", "=", "None", ",", "\n", "preprocessing_crop", "=", "False", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "num_examples", "=", "-", "1", ",", "\n", "index_file", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "_args", "=", "args", "\n", "self", ".", "_seq_len", "=", "1", "\n", "self", ".", "_preprocessing_crop", "=", "preprocessing_crop", "\n", "self", ".", "_crop_size", "=", "crop_size", "\n", "\n", "path_dir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "\n", "path_index_file", "=", "os", ".", "path", ".", "join", "(", "path_dir", ",", "index_file", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path_index_file", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Index File '%s' not found!\"", ",", "path_index_file", ")", "\n", "", "index_file", "=", "open", "(", "path_index_file", ",", "'r'", ")", "\n", "\n", "## loading image -----------------------------------", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "images_root", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Image directory '%s' not found!\"", ")", "\n", "\n", "", "filename_list", "=", "[", "line", ".", "rstrip", "(", ")", ".", "split", "(", "' '", ")", "for", "line", "in", "index_file", ".", "readlines", "(", ")", "]", "\n", "self", ".", "_image_list", "=", "[", "]", "\n", "view1", "=", "'image_02/data'", "\n", "view2", "=", "'image_03/data'", "\n", "ext", "=", "'.jpg'", "\n", "for", "item", "in", "filename_list", ":", "\n", "            ", "date", "=", "item", "[", "0", "]", "[", ":", "10", "]", "\n", "scene", "=", "item", "[", "0", "]", "\n", "idx_src", "=", "item", "[", "1", "]", "\n", "for", "ii", "in", "range", "(", "self", ".", "_seq_len", ")", ":", "\n", "                ", "idx_tgt", "=", "'%.10d'", "%", "(", "int", "(", "idx_src", ")", "+", "ii", "+", "1", ")", "\n", "name_l1", "=", "os", ".", "path", ".", "join", "(", "images_root", ",", "date", ",", "scene", ",", "view1", ",", "idx_src", ")", "+", "ext", "\n", "name_r1", "=", "os", ".", "path", ".", "join", "(", "images_root", ",", "date", ",", "scene", ",", "view2", ",", "idx_src", ")", "+", "ext", "\n", "if", "os", ".", "path", ".", "isfile", "(", "name_l1", ")", "and", "os", ".", "path", ".", "isfile", "(", "name_r1", ")", ":", "\n", "                    ", "self", ".", "_image_list", ".", "append", "(", "[", "name_l1", ",", "name_r1", "]", ")", "\n", "\n", "", "", "", "if", "num_examples", ">", "0", ":", "\n", "            ", "self", ".", "_image_list", "=", "self", ".", "_image_list", "[", ":", "num_examples", "]", "\n", "\n", "", "self", ".", "_size", "=", "len", "(", "self", ".", "_image_list", ")", "\n", "\n", "## loading calibration matrix", "\n", "self", ".", "intrinsic_dict_l", "=", "{", "}", "\n", "self", ".", "intrinsic_dict_r", "=", "{", "}", "\n", "self", ".", "intrinsic_dict_l", ",", "self", ".", "intrinsic_dict_r", "=", "read_calib_into_dict", "(", "path_dir", ")", "\n", "\n", "# ----------------------------------------------------------", "\n", "# Image resize only", "\n", "# ----------------------------------------------------------", "\n", "self", ".", "_resize_to_tensor", "=", "vision_transforms", ".", "Compose", "(", "[", "\n", "vision_transforms", ".", "ToPILImage", "(", ")", ",", "\n", "vision_transforms", ".", "Resize", "(", "(", "256", ",", "512", ")", ")", ",", "\n", "vision_transforms", ".", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "self", ".", "_to_tensor", "=", "vision_transforms", ".", "Compose", "(", "[", "\n", "vision_transforms", ".", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_raw_monodepth.KITTI_Raw.__getitem__": [[77, 141], ["common.read_image_as_byte", "common.read_image_as_byte", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "common.intrinsic_scale.clone", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "common.intrinsic_scale.clone", "os.path.basename", "os.path.dirname", "kitti_raw_monodepth.KITTI_Raw._resize_to_tensor", "kitti_raw_monodepth.KITTI_Raw._resize_to_tensor", "common.intrinsic_scale", "common.intrinsic_scale", "numpy.random.uniform", "numpy.random.uniform", "common.kitti_crop_image_list", "kitti_raw_monodepth.KITTI_Raw._to_tensor", "kitti_raw_monodepth.KITTI_Raw._to_tensor", "common.kitti_adjust_intrinsic", "kitti_raw_monodepth.KITTI_Raw.size", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "int", "int", "int", "int", "numpy.array", "kitti_raw_monodepth.KITTI_Raw.size", "kitti_raw_monodepth.KITTI_Raw.size", "kitti_raw_monodepth.KITTI_Raw.size", "kitti_raw_monodepth.KITTI_Raw.size"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_image_as_byte", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_image_as_byte", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.intrinsic_scale", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.intrinsic_scale", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.kitti_crop_image_list", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.kitti_adjust_intrinsic"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index", "=", "index", "%", "self", ".", "_size", "\n", "\n", "im_l1_filename", "=", "self", ".", "_image_list", "[", "index", "]", "[", "0", "]", "\n", "im_r1_filename", "=", "self", ".", "_image_list", "[", "index", "]", "[", "1", "]", "\n", "\n", "# read float32 images and flow", "\n", "im_l1_np", "=", "read_image_as_byte", "(", "im_l1_filename", ")", "\n", "im_r1_np", "=", "read_image_as_byte", "(", "im_r1_filename", ")", "\n", "\n", "# example filename", "\n", "basename", "=", "os", ".", "path", ".", "basename", "(", "im_l1_filename", ")", "[", ":", "6", "]", "\n", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "im_l1_filename", ")", "[", "-", "51", ":", "]", "\n", "datename", "=", "dirname", "[", ":", "10", "]", "\n", "k_l1", "=", "torch", ".", "from_numpy", "(", "self", ".", "intrinsic_dict_l", "[", "datename", "]", ")", ".", "float", "(", ")", "\n", "k_r1", "=", "torch", ".", "from_numpy", "(", "self", ".", "intrinsic_dict_r", "[", "datename", "]", ")", ".", "float", "(", ")", "\n", "k_l1_orig", "=", "k_l1", ".", "clone", "(", ")", "\n", "\n", "h_orig", ",", "w_orig", ",", "_", "=", "im_l1_np", ".", "shape", "\n", "input_im_size", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "h_orig", ",", "w_orig", "]", ")", ")", ".", "float", "(", ")", "\n", "\n", "# resizing image ", "\n", "if", "self", ".", "_preprocessing_crop", "==", "False", ":", "\n", "# No Geometric Augmentation, Resizing to 256 x 512 here", "\n", "# resizing input images", "\n", "            ", "im_l1", "=", "self", ".", "_resize_to_tensor", "(", "im_l1_np", ")", "\n", "im_r1", "=", "self", ".", "_resize_to_tensor", "(", "im_r1_np", ")", "\n", "# resizing intrinsic matrix            ", "\n", "k_l1", "=", "intrinsic_scale", "(", "k_l1", ",", "im_l1", ".", "size", "(", "1", ")", "/", "h_orig", ",", "im_l1", ".", "size", "(", "2", ")", "/", "w_orig", ")", "\n", "k_r1", "=", "intrinsic_scale", "(", "k_r1", ",", "im_r1", ".", "size", "(", "1", ")", "/", "h_orig", ",", "im_r1", ".", "size", "(", "2", ")", "/", "w_orig", ")", "\n", "", "else", ":", "\n", "# For Geometric Augmentation, first croping the images to 370 x 1224 here, ", "\n", "# then do the augmentation in augmentation.py", "\n", "# get starting positions", "\n", "            ", "crop_height", "=", "self", ".", "_crop_size", "[", "0", "]", "\n", "crop_width", "=", "self", ".", "_crop_size", "[", "1", "]", "\n", "x", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "w_orig", "-", "crop_width", "+", "1", ")", "\n", "y", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "h_orig", "-", "crop_height", "+", "1", ")", "\n", "crop_info", "=", "[", "int", "(", "x", ")", ",", "int", "(", "y", ")", ",", "int", "(", "x", "+", "crop_width", ")", ",", "int", "(", "y", "+", "crop_height", ")", "]", "\n", "\n", "# cropping images and adjust intrinsic accordingly", "\n", "im_l1_np", ",", "im_r1_np", "=", "kitti_crop_image_list", "(", "[", "im_l1_np", ",", "im_r1_np", "]", ",", "crop_info", ")", "\n", "im_l1", "=", "self", ".", "_to_tensor", "(", "im_l1_np", ")", "\n", "im_r1", "=", "self", ".", "_to_tensor", "(", "im_r1_np", ")", "\n", "k_l1", ",", "k_r1", "=", "kitti_adjust_intrinsic", "(", "k_l1", ",", "k_r1", ",", "crop_info", ")", "\n", "\n", "# For CamCOnv", "\n", "", "k_r1_flip", "=", "k_r1", ".", "clone", "(", ")", "\n", "k_r1_flip", "[", "0", ",", "2", "]", "=", "im_r1", ".", "size", "(", "2", ")", "-", "k_r1_flip", "[", "0", ",", "2", "]", "\n", "\n", "example_dict", "=", "{", "\n", "\"input_l1\"", ":", "im_l1", ",", "\n", "\"input_r1\"", ":", "im_r1", ",", "\n", "\"index\"", ":", "index", ",", "\n", "\"basename\"", ":", "basename", ",", "\n", "\"datename\"", ":", "datename", ",", "\n", "\"input_k_l1_orig\"", ":", "k_l1_orig", ",", "\n", "\"input_k_l1\"", ":", "k_l1", ",", "\n", "\"input_k_r1\"", ":", "k_r1", ",", "\n", "\"input_k_r1_flip\"", ":", "k_r1_flip", ",", "\n", "\"input_size\"", ":", "input_im_size", "\n", "}", "\n", "\n", "return", "example_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_raw_monodepth.KITTI_Raw.__len__": [[142, 144], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_size", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_raw_monodepth.KITTI_Raw_KittiSplit_Train.__init__": [[147, 160], ["kitti_raw_monodepth.KITTI_Raw.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "root", ",", "\n", "preprocessing_crop", "=", "False", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "num_examples", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "KITTI_Raw_KittiSplit_Train", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "images_root", "=", "root", ",", "\n", "preprocessing_crop", "=", "preprocessing_crop", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "num_examples", "=", "num_examples", ",", "\n", "index_file", "=", "\"index_txt/kitti_train.txt\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_raw_monodepth.KITTI_Raw_KittiSplit_Valid.__init__": [[163, 176], ["kitti_raw_monodepth.KITTI_Raw.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "root", ",", "\n", "preprocessing_crop", "=", "False", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "num_examples", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "KITTI_Raw_KittiSplit_Valid", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "images_root", "=", "root", ",", "\n", "preprocessing_crop", "=", "preprocessing_crop", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "num_examples", "=", "num_examples", ",", "\n", "index_file", "=", "\"index_txt/kitti_valid.txt\"", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_comb_mnsf.KITTI_Raw_for_Finetune.__init__": [[20, 36], ["kitti_raw_monosf.KITTI_Raw.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "root", ",", "\n", "flip_augmentations", "=", "True", ",", "\n", "preprocessing_crop", "=", "True", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "num_examples", "=", "-", "1", ",", "\n", "index_file", "=", "\"\"", ")", ":", "\n", "        ", "super", "(", "KITTI_Raw_for_Finetune", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "images_root", "=", "root", ",", "\n", "flip_augmentations", "=", "flip_augmentations", ",", "\n", "preprocessing_crop", "=", "preprocessing_crop", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "num_examples", "=", "num_examples", ",", "\n", "index_file", "=", "index_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_comb_mnsf.KITTI_Raw_for_Finetune.__getitem__": [[37, 134], ["torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "common.read_image_as_byte", "os.path.basename", "os.path.dirname", "numpy.random.uniform", "numpy.random.uniform", "common.kitti_crop_image_list", "common.kitti_adjust_intrinsic", "kitti_comb_mnsf.KITTI_Raw_for_Finetune._to_tensor", "im_l1.size", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "example_dict.update", "example_dict.update", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "int", "int", "int", "int", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.read_image_as_byte", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.kitti_crop_image_list", "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.common.kitti_adjust_intrinsic", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.update", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.update"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index", "=", "index", "%", "self", ".", "_size", "\n", "\n", "# read images and flow", "\n", "img_list_np", "=", "[", "read_image_as_byte", "(", "img", ")", "for", "img", "in", "self", ".", "_image_list", "[", "index", "]", "]", "\n", "\n", "# example filename", "\n", "im_l1_filename", "=", "self", ".", "_image_list", "[", "index", "]", "[", "0", "]", "\n", "basename", "=", "os", ".", "path", ".", "basename", "(", "im_l1_filename", ")", "[", ":", "6", "]", "\n", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "im_l1_filename", ")", "[", "-", "51", ":", "]", "\n", "datename", "=", "dirname", "[", ":", "10", "]", "\n", "k_l1", "=", "torch", ".", "from_numpy", "(", "self", ".", "intrinsic_dict_l", "[", "datename", "]", ")", ".", "float", "(", ")", "\n", "k_r1", "=", "torch", ".", "from_numpy", "(", "self", ".", "intrinsic_dict_r", "[", "datename", "]", ")", ".", "float", "(", ")", "\n", "\n", "# input size", "\n", "h_orig", ",", "w_orig", ",", "_", "=", "img_list_np", "[", "0", "]", ".", "shape", "\n", "input_im_size", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "h_orig", ",", "w_orig", "]", ")", ")", ".", "float", "(", ")", "\n", "\n", "# cropping ", "\n", "if", "self", ".", "_preprocessing_crop", ":", "\n", "# get starting positions", "\n", "            ", "crop_height", "=", "self", ".", "_crop_size", "[", "0", "]", "\n", "crop_width", "=", "self", ".", "_crop_size", "[", "1", "]", "\n", "x", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "w_orig", "-", "crop_width", "+", "1", ")", "\n", "y", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "h_orig", "-", "crop_height", "+", "1", ")", "\n", "crop_info", "=", "[", "int", "(", "x", ")", ",", "int", "(", "y", ")", ",", "int", "(", "x", "+", "crop_width", ")", ",", "int", "(", "y", "+", "crop_height", ")", "]", "\n", "\n", "# cropping images and adjust intrinsic accordingly", "\n", "img_list_np", "=", "kitti_crop_image_list", "(", "img_list_np", ",", "crop_info", ")", "\n", "k_l1", ",", "k_r1", "=", "kitti_adjust_intrinsic", "(", "k_l1", ",", "k_r1", ",", "crop_info", ")", "\n", "\n", "# to tensors", "\n", "", "img_list_tensor", "=", "[", "self", ".", "_to_tensor", "(", "img", ")", "for", "img", "in", "img_list_np", "]", "\n", "im_l1", "=", "img_list_tensor", "[", "0", "]", "\n", "im_l2", "=", "img_list_tensor", "[", "1", "]", "\n", "im_r1", "=", "img_list_tensor", "[", "2", "]", "\n", "im_r2", "=", "img_list_tensor", "[", "3", "]", "\n", "\n", "void_tensor1", "=", "im_l1", "[", "0", ":", "1", ",", ":", ",", ":", "]", "*", "0", "\n", "void_tensor2", "=", "im_l1", "[", "0", ":", "2", ",", ":", ",", ":", "]", "*", "0", "\n", "\n", "common_dict", "=", "{", "\n", "\"index\"", ":", "index", ",", "\n", "\"basename\"", ":", "basename", ",", "\n", "\"datename\"", ":", "datename", ",", "\n", "\"input_size\"", ":", "input_im_size", ",", "\n", "\"target_flow\"", ":", "void_tensor2", ",", "\n", "\"target_flow_mask\"", ":", "void_tensor1", ",", "\n", "\"target_flow_noc\"", ":", "void_tensor2", ",", "\n", "\"target_flow_mask_noc\"", ":", "void_tensor1", ",", "\n", "\"target_disp\"", ":", "void_tensor1", ",", "\n", "\"target_disp_mask\"", ":", "void_tensor1", ",", "\n", "\"target_disp2_occ\"", ":", "void_tensor1", ",", "\n", "\"target_disp2_mask_occ\"", ":", "void_tensor1", ",", "\n", "\"target_disp_noc\"", ":", "void_tensor1", ",", "\n", "\"target_disp_mask_noc\"", ":", "void_tensor1", ",", "\n", "\"target_disp2_noc\"", ":", "void_tensor1", ",", "\n", "\"target_disp2_mask_noc\"", ":", "void_tensor1", "\n", "}", "\n", "\n", "# random flip", "\n", "if", "self", ".", "_flip_augmentations", "is", "True", "and", "torch", ".", "rand", "(", "1", ")", ">", "0.5", ":", "\n", "            ", "_", ",", "_", ",", "ww", "=", "im_l1", ".", "size", "(", ")", "\n", "im_l1_flip", "=", "torch", ".", "flip", "(", "im_l1", ",", "dims", "=", "[", "2", "]", ")", "\n", "im_l2_flip", "=", "torch", ".", "flip", "(", "im_l2", ",", "dims", "=", "[", "2", "]", ")", "\n", "im_r1_flip", "=", "torch", ".", "flip", "(", "im_r1", ",", "dims", "=", "[", "2", "]", ")", "\n", "im_r2_flip", "=", "torch", ".", "flip", "(", "im_r2", ",", "dims", "=", "[", "2", "]", ")", "\n", "\n", "k_l1", "[", "0", ",", "2", "]", "=", "ww", "-", "k_l1", "[", "0", ",", "2", "]", "\n", "k_r1", "[", "0", ",", "2", "]", "=", "ww", "-", "k_r1", "[", "0", ",", "2", "]", "\n", "\n", "example_dict", "=", "{", "\n", "\"input_l1\"", ":", "im_r1_flip", ",", "\n", "\"input_r1\"", ":", "im_l1_flip", ",", "\n", "\"input_l2\"", ":", "im_r2_flip", ",", "\n", "\"input_r2\"", ":", "im_l2_flip", ",", "\n", "\"input_k_l1\"", ":", "k_r1", ",", "\n", "\"input_k_r1\"", ":", "k_l1", ",", "\n", "\"input_k_l2\"", ":", "k_r1", ",", "\n", "\"input_k_r2\"", ":", "k_l1", ",", "\n", "}", "\n", "example_dict", ".", "update", "(", "common_dict", ")", "\n", "\n", "", "else", ":", "\n", "            ", "example_dict", "=", "{", "\n", "\"input_l1\"", ":", "im_l1", ",", "\n", "\"input_r1\"", ":", "im_r1", ",", "\n", "\"input_l2\"", ":", "im_l2", ",", "\n", "\"input_r2\"", ":", "im_r2", ",", "\n", "\"input_k_l1\"", ":", "k_l1", ",", "\n", "\"input_k_r1\"", ":", "k_r1", ",", "\n", "\"input_k_l2\"", ":", "k_l1", ",", "\n", "\"input_k_r2\"", ":", "k_r1", ",", "\n", "}", "\n", "example_dict", ".", "update", "(", "common_dict", ")", "\n", "\n", "", "return", "example_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_comb_mnsf.KITTI_Comb_Train.__init__": [[137, 157], ["kitti_2015_train.KITTI_2015_MonoSceneFlow", "kitti_comb_mnsf.KITTI_Raw_for_Finetune", "torch.utils.data.dataset.ConcatDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "root", ")", ":", "\n", "\n", "        ", "self", ".", "dataset1", "=", "KITTI_2015_MonoSceneFlow", "(", "\n", "args", ",", "\n", "root", "+", "'/KITTI_flow/'", ",", "\n", "preprocessing_crop", "=", "True", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "dstype", "=", "\"train\"", ")", "\n", "\n", "self", ".", "dataset2", "=", "KITTI_Raw_for_Finetune", "(", "\n", "args", ",", "\n", "root", "+", "'/KITTI_raw_noPCL/'", ",", "\n", "flip_augmentations", "=", "True", ",", "\n", "preprocessing_crop", "=", "True", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "num_examples", "=", "-", "1", ",", "\n", "index_file", "=", "'index_txt/kitti_full.txt'", ")", "\n", "\n", "super", "(", "KITTI_Comb_Train", ",", "self", ")", ".", "__init__", "(", "\n", "datasets", "=", "[", "self", ".", "dataset1", ",", "self", ".", "dataset2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_comb_mnsf.KITTI_Comb_Val.__init__": [[160, 171], ["kitti_2015_train.KITTI_2015_MonoSceneFlow.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "root", ",", "\n", "preprocessing_crop", "=", "False", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ")", ":", "\n", "        ", "super", "(", "KITTI_Comb_Val", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "\n", "data_root", "=", "root", "+", "'/KITTI_flow/'", ",", "\n", "preprocessing_crop", "=", "preprocessing_crop", ",", "\n", "crop_size", "=", "crop_size", ",", "\n", "dstype", "=", "\"valid\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.datasets.kitti_comb_mnsf.KITTI_Comb_Full.__init__": [[175, 195], ["kitti_2015_train.KITTI_2015_MonoSceneFlow", "kitti_comb_mnsf.KITTI_Raw_for_Finetune", "torch.utils.data.dataset.ConcatDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "root", ")", ":", "\n", "\n", "        ", "self", ".", "dataset1", "=", "KITTI_2015_MonoSceneFlow", "(", "\n", "args", ",", "\n", "root", "+", "'/KITTI_flow/'", ",", "\n", "preprocessing_crop", "=", "True", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "dstype", "=", "\"full\"", ")", "\n", "\n", "self", ".", "dataset2", "=", "KITTI_Raw_for_Finetune", "(", "\n", "args", ",", "\n", "root", "+", "'/KITTI_raw_noPCL/'", ",", "\n", "flip_augmentations", "=", "True", ",", "\n", "preprocessing_crop", "=", "True", ",", "\n", "crop_size", "=", "[", "370", ",", "1224", "]", ",", "\n", "num_examples", "=", "-", "1", ",", "\n", "index_file", "=", "'index_txt/kitti_raw_all_imgs.txt'", ")", "\n", "\n", "super", "(", "KITTI_Comb_Full", ",", "self", ")", ".", "__init__", "(", "\n", "datasets", "=", "[", "self", ".", "dataset1", ",", "self", ".", "dataset2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.CollectDataList.__init__": [[91, 111], ["prepare_train_data.CollectDataList.collect_train_frames", "open", "f.readlines", "t.rstrip"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.CollectDataList.collect_train_frames"], ["    ", "def", "__init__", "(", "self", ",", "dataset_dir", ",", "split", "=", "'eigen'", ",", "sequence_length", "=", "1", ")", ":", "\n", "\n", "## filename / variable definition", "\n", "        ", "excluded_frames_file", "=", "dir_path", "+", "'/provided/excluded_frames.txt'", "\n", "self", ".", "date_list", "=", "[", "'2011_09_26'", ",", "'2011_09_28'", ",", "'2011_09_29'", ",", "'2011_09_30'", ",", "'2011_10_03'", "]", "\n", "self", ".", "sequence_length", "=", "sequence_length", "\n", "self", ".", "dataset_dir", "=", "dataset_dir", "\n", "self", ".", "excluded_frames", "=", "[", "]", "\n", "self", ".", "train_frames", "=", "[", "]", "\n", "self", ".", "num_train", "=", "-", "1", "\n", "self", ".", "split", "=", "split", "\n", "\n", "## parsing data", "\n", "test_scene_file", "=", "dir_path", "+", "'/generated/'", "+", "self", ".", "split", "+", "'_test_scenes.txt'", "\n", "with", "open", "(", "test_scene_file", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "test_scenes", "=", "f", ".", "readlines", "(", ")", "\n", "", "self", ".", "test_scenes", "=", "[", "t", ".", "rstrip", "(", ")", "for", "t", "in", "test_scenes", "]", "\n", "\n", "# self.collect_excluded_frames(excluded_frames_file)", "\n", "self", ".", "collect_train_frames", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.CollectDataList.collect_excluded_frames": [[113, 120], ["open", "f.readlines", "fr.rstrip().split", "prepare_train_data.CollectDataList.excluded_frames.append", "fr.rstrip"], "methods", ["None"], ["", "def", "collect_excluded_frames", "(", "self", ",", "excluded_frames_file", ")", ":", "\n", "        ", "with", "open", "(", "excluded_frames_file", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "frames", "=", "f", ".", "readlines", "(", ")", "\n", "\n", "", "for", "fr", "in", "frames", ":", "\n", "            ", "date", ",", "drive", ",", "frame_id", "=", "fr", ".", "rstrip", "(", ")", ".", "split", "(", "' '", ")", "\n", "self", ".", "excluded_frames", ".", "append", "(", "drive", "+", "' '", "+", "frame_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.CollectDataList.collect_train_frames": [[121, 149], ["len", "print", "os.listdir", "open", "os.path.join", "os.path.isdir", "all_frames.remove", "os.path.join", "tf.write", "os.path.join", "len", "range", "glob.glob.glob", "all_frames.append"], "methods", ["None"], ["", "", "def", "collect_train_frames", "(", "self", ")", ":", "\n", "        ", "all_frames", "=", "[", "]", "\n", "for", "date", "in", "self", ".", "date_list", ":", "\n", "            ", "drive_set", "=", "os", ".", "listdir", "(", "self", ".", "dataset_dir", "+", "date", "+", "'/'", ")", "\n", "for", "dr", "in", "drive_set", ":", "\n", "                ", "drive_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_dir", ",", "date", ",", "dr", ")", "\n", "\n", "if", "os", ".", "path", ".", "isdir", "(", "drive_dir", ")", ":", "\n", "                    ", "if", "dr", "in", "self", ".", "test_scenes", ":", "\n", "                        ", "continue", "\n", "", "img_dir", "=", "os", ".", "path", ".", "join", "(", "drive_dir", ",", "'image_02'", ",", "'data'", ")", "\n", "num_images", "=", "len", "(", "glob", "(", "img_dir", "+", "'/*.jpg'", ")", ")", "\n", "for", "n", "in", "range", "(", "num_images", "-", "self", ".", "sequence_length", ")", ":", "\n", "                        ", "frame_id", "=", "'%.10d'", "%", "n", "\n", "all_frames", ".", "append", "(", "dr", "+", "' '", "+", "frame_id", ")", "\n", "\n", "", "", "", "", "for", "s", "in", "self", ".", "excluded_frames", ":", "\n", "            ", "try", ":", "\n", "                ", "all_frames", ".", "remove", "(", "s", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "\n", "", "", "self", ".", "train_frames", "=", "all_frames", "\n", "self", ".", "num_train", "=", "len", "(", "self", ".", "train_frames", ")", "\n", "print", "(", "self", ".", "num_train", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'generated'", ",", "self", ".", "split", "+", "'_full.txt'", ")", ",", "'w'", ")", "as", "tf", ":", "\n", "            ", "for", "item", "in", "self", ".", "train_frames", ":", "\n", "                ", "tf", ".", "write", "(", "'%s\\n'", "%", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal.__init__": [[152, 166], ["set", "set", "set", "prepare_train_data.SplitTrainVal.build_data", "prepare_train_data.SplitTrainVal.write_dataset_file"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal_even.build_data", "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal_even.write_dataset_file"], ["    ", "def", "__init__", "(", "self", ",", "dataset_dir", ",", "file_name", ",", "seq_len", ",", "alias", ")", ":", "\n", "\n", "# Variable definition", "\n", "        ", "self", ".", "dataset_dir", "=", "dataset_dir", "\n", "self", ".", "seq_len", "=", "seq_len", "\n", "self", ".", "file_name", "=", "file_name", "\n", "self", ".", "alias", "=", "alias", "\n", "self", ".", "train_set", "=", "set", "(", ")", "\n", "self", ".", "ref_val_set", "=", "set", "(", ")", "\n", "self", ".", "eff_ref_val_set", "=", "set", "(", ")", "\n", "\n", "# build dataset", "\n", "self", ".", "build_data", "(", ")", "\n", "self", ".", "write_dataset_file", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal.build_data": [[167, 218], ["numpy.random.seed", "numpy.random.shuffle", "int", "set", "copy.deepcopy", "copy.deepcopy", "print", "print", "print", "print", "print", "open", "tf.readlines", "ff.rstrip", "fr.rstrip().split", "int", "range", "set", "fr.rstrip().split", "int", "range", "len", "len", "len", "len", "len", "os.path.join", "len", "prepare_train_data.SplitTrainVal.eff_ref_val_set.add", "fr.rstrip", "fr.rstrip", "prepare_train_data.SplitTrainVal.train_set.remove", "prepare_train_data.SplitTrainVal.train_set.remove"], "methods", ["None"], ["", "def", "build_data", "(", "self", ")", ":", "\n", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir_path", ",", "self", ".", "file_name", ")", ",", "'r'", ")", "as", "tf", ":", "\n", "            ", "all_frames", "=", "tf", ".", "readlines", "(", ")", "\n", "\n", "", "all_frames", "=", "[", "ff", ".", "rstrip", "(", ")", "for", "ff", "in", "all_frames", "]", "\n", "np", ".", "random", ".", "seed", "(", "8964", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "all_frames", ")", "\n", "\n", "# 1. pick ref. val. image", "\n", "n_val_images", "=", "int", "(", "0.03", "*", "(", "len", "(", "all_frames", ")", ")", ")", "\n", "self", ".", "ref_val_set", "=", "set", "(", "all_frames", "[", ":", "n_val_images", "]", ")", "\n", "self", ".", "eff_ref_val_set", "=", "copy", ".", "deepcopy", "(", "self", ".", "ref_val_set", ")", "\n", "\n", "# 2. create a set ('val. images' + '+seq_len val. images' + '-seq_len val. images')", "\n", "for", "fr", "in", "self", ".", "ref_val_set", ":", "\n", "            ", "drive", ",", "frame_id", "=", "fr", ".", "rstrip", "(", ")", ".", "split", "(", "' '", ")", "\n", "ref_id", "=", "int", "(", "frame_id", ")", "\n", "\n", "for", "ii", "in", "range", "(", "ref_id", "-", "self", ".", "seq_len", ",", "ref_id", "+", "self", ".", "seq_len", "+", "1", ")", ":", "\n", "                ", "if", "ii", "<", "0", ":", "\n", "                    ", "continue", "\n", "", "fr_alias", "=", "drive", "+", "' '", "+", "'%.10d'", "%", "ii", "\n", "if", "fr_alias", "not", "in", "all_frames", ":", "\n", "                    ", "continue", "\n", "\n", "", "self", ".", "eff_ref_val_set", ".", "add", "(", "drive", "+", "' '", "+", "'%.10d'", "%", "ii", ")", "\n", "\n", "# 3. refine the train set (exclude frames that are included in the eff_ref_val_set)", "\n", "", "", "self", ".", "eff_ref_train_set", "=", "set", "(", "all_frames", ")", "-", "self", ".", "eff_ref_val_set", "\n", "self", ".", "train_set", "=", "copy", ".", "deepcopy", "(", "self", ".", "eff_ref_train_set", ")", "\n", "for", "fr", "in", "self", ".", "eff_ref_train_set", ":", "\n", "            ", "drive", ",", "frame_id", "=", "fr", ".", "rstrip", "(", ")", ".", "split", "(", "' '", ")", "\n", "ref_id", "=", "int", "(", "frame_id", ")", "\n", "\n", "for", "ii", "in", "range", "(", "ref_id", "-", "self", ".", "seq_len", ",", "ref_id", "+", "self", ".", "seq_len", "+", "1", ")", ":", "\n", "                ", "if", "ii", "<", "0", ":", "\n", "                    ", "self", ".", "train_set", ".", "remove", "(", "fr", ")", "\n", "break", "\n", "", "fr_alias", "=", "drive", "+", "' '", "+", "'%.10d'", "%", "ii", "\n", "if", "fr_alias", "in", "self", ".", "eff_ref_val_set", ":", "\n", "                    ", "self", ".", "train_set", ".", "remove", "(", "fr", ")", "\n", "break", "\n", "\n", "# 4. training ref. image = Total dataset - the set above", "\n", "\n", "", "", "", "print", "(", "'all frame '", ",", "len", "(", "all_frames", ")", ")", "\n", "print", "(", "'eff ref train set'", ",", "len", "(", "self", ".", "eff_ref_train_set", ")", ")", "\n", "print", "(", "'train set '", ",", "len", "(", "self", ".", "train_set", ")", ")", "\n", "print", "(", "'eff ref val set'", ",", "len", "(", "self", ".", "eff_ref_val_set", ")", ")", "\n", "print", "(", "'ref val set'", ",", "len", "(", "self", ".", "ref_val_set", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal.write_dataset_file": [[219, 227], ["open", "sorted", "open", "sorted", "os.path.join", "tf.write", "os.path.join", "vf.write"], "methods", ["None"], ["", "def", "write_dataset_file", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir_path", ",", "self", ".", "alias", "+", "'_our_train.txt'", ")", ",", "'w'", ")", "as", "tf", ":", "\n", "            ", "for", "item", "in", "sorted", "(", "self", ".", "train_set", ")", ":", "\n", "                ", "tf", ".", "write", "(", "'%s\\n'", "%", "item", ")", "\n", "\n", "", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir_path", ",", "self", ".", "alias", "+", "'_our_valid.txt'", ")", ",", "'w'", ")", "as", "vf", ":", "\n", "            ", "for", "item", "in", "sorted", "(", "self", ".", "ref_val_set", ")", ":", "\n", "                ", "vf", ".", "write", "(", "'%s\\n'", "%", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal_discard_last_frame.__init__": [[232, 246], ["set", "set", "set", "prepare_train_data.SplitTrainVal_discard_last_frame.build_data", "prepare_train_data.SplitTrainVal_discard_last_frame.write_dataset_file"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal_even.build_data", "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal_even.write_dataset_file"], ["    ", "def", "__init__", "(", "self", ",", "dataset_dir", ",", "file_name", ",", "seq_len", ",", "alias", ")", ":", "\n", "\n", "# Variable definition", "\n", "        ", "self", ".", "dataset_dir", "=", "dataset_dir", "\n", "self", ".", "seq_len", "=", "seq_len", "\n", "self", ".", "file_name", "=", "file_name", "\n", "self", ".", "alias", "=", "alias", "\n", "self", ".", "train_set", "=", "set", "(", ")", "\n", "self", ".", "ref_val_set", "=", "set", "(", ")", "\n", "self", ".", "eff_ref_val_set", "=", "set", "(", ")", "\n", "\n", "# build dataset", "\n", "self", ".", "build_data", "(", ")", "\n", "self", ".", "write_dataset_file", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal_discard_last_frame.build_data": [[247, 272], ["numpy.random.seed", "numpy.random.shuffle", "copy.deepcopy", "print", "print", "open", "tf.readlines", "ff.rstrip", "fr.rstrip().split", "int", "len", "len", "os.path.join", "prepare_train_data.SplitTrainVal_discard_last_frame.train_set.remove", "fr.rstrip"], "methods", ["None"], ["", "def", "build_data", "(", "self", ")", ":", "\n", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir_path", ",", "self", ".", "file_name", ")", ",", "'r'", ")", "as", "tf", ":", "\n", "            ", "all_frames", "=", "tf", ".", "readlines", "(", ")", "\n", "\n", "", "all_frames", "=", "[", "ff", ".", "rstrip", "(", ")", "for", "ff", "in", "all_frames", "]", "\n", "np", ".", "random", ".", "seed", "(", "8964", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "all_frames", ")", "\n", "\n", "self", ".", "train_set", "=", "copy", ".", "deepcopy", "(", "all_frames", ")", "\n", "\n", "# 1. Discard last frame", "\n", "for", "fr", "in", "all_frames", ":", "\n", "            ", "drive", ",", "frame_id", "=", "fr", ".", "rstrip", "(", ")", ".", "split", "(", "' '", ")", "\n", "ref_id", "=", "int", "(", "frame_id", ")", "\n", "\n", "fr_alias", "=", "drive", "+", "' '", "+", "'%.10d'", "%", "(", "ref_id", "+", "1", ")", "\n", "if", "fr_alias", "not", "in", "all_frames", ":", "\n", "                ", "self", ".", "train_set", ".", "remove", "(", "fr", ")", "\n", "\n", "\n", "# 4. training ref. image = Total dataset - the set above", "\n", "\n", "", "", "print", "(", "'all frame '", ",", "len", "(", "all_frames", ")", ")", "\n", "print", "(", "'train set '", ",", "len", "(", "self", ".", "train_set", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal_discard_last_frame.write_dataset_file": [[273, 277], ["open", "sorted", "os.path.join", "tf.write"], "methods", ["None"], ["", "def", "write_dataset_file", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir_path", ",", "self", ".", "alias", "+", "'_our_train.txt'", ")", ",", "'w'", ")", "as", "tf", ":", "\n", "            ", "for", "item", "in", "sorted", "(", "self", ".", "train_set", ")", ":", "\n", "                ", "tf", ".", "write", "(", "'%s\\n'", "%", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal_even.__init__": [[281, 295], ["set", "set", "set", "prepare_train_data.SplitTrainVal_even.build_data", "prepare_train_data.SplitTrainVal_even.write_dataset_file"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal_even.build_data", "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal_even.write_dataset_file"], ["    ", "def", "__init__", "(", "self", ",", "dataset_dir", ",", "file_name", ",", "seq_len", ",", "alias", ")", ":", "\n", "\n", "# Variable definition", "\n", "        ", "self", ".", "dataset_dir", "=", "dataset_dir", "\n", "self", ".", "seq_len", "=", "seq_len", "\n", "self", ".", "file_name", "=", "file_name", "\n", "self", ".", "alias", "=", "alias", "\n", "self", ".", "train_set", "=", "set", "(", ")", "\n", "self", ".", "ref_val_set", "=", "set", "(", ")", "\n", "self", ".", "eff_ref_val_set", "=", "set", "(", ")", "\n", "\n", "# build dataset", "\n", "self", ".", "build_data", "(", ")", "\n", "self", ".", "write_dataset_file", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal_even.build_data": [[296, 382], ["numpy.random.seed", "numpy.random.shuffle", "int", "set", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "print", "print", "print", "print", "print", "open", "tf.readlines", "ff.rstrip", "sorted", "fr.rstrip().split", "int", "fr.rstrip().split", "int", "set", "fr.rstrip().split", "int", "range", "fr.rstrip().split", "int", "range", "len", "len", "len", "len", "len", "os.path.join", "len", "prepare_train_data.SplitTrainVal_even.eff_ref_val_set.add", "fr.rstrip", "prepare_train_data.SplitTrainVal_even.eff_ref_val_set.add", "fr.rstrip", "prepare_train_data.SplitTrainVal_even.eff_ref_val_set.add", "fr.rstrip", "prepare_train_data.SplitTrainVal_even.train_set.remove", "prepare_train_data.SplitTrainVal_even.train_set.remove", "fr.rstrip", "prepare_train_data.SplitTrainVal_even.ref_val_set.remove", "prepare_train_data.SplitTrainVal_even.ref_val_set.remove", "prepare_train_data.SplitTrainVal_even.eff_ref_val_set.add"], "methods", ["None"], ["", "def", "build_data", "(", "self", ")", ":", "\n", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir_path", ",", "self", ".", "file_name", ")", ",", "'r'", ")", "as", "tf", ":", "\n", "            ", "all_frames", "=", "tf", ".", "readlines", "(", ")", "\n", "\n", "", "all_frames", "=", "[", "ff", ".", "rstrip", "(", ")", "for", "ff", "in", "all_frames", "]", "\n", "np", ".", "random", ".", "seed", "(", "8964", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "all_frames", ")", "\n", "\n", "# 1. pick ref. val. image", "\n", "n_val_images", "=", "int", "(", "0.05", "*", "(", "len", "(", "all_frames", ")", ")", ")", "\n", "self", ".", "ref_val_set", "=", "set", "(", "sorted", "(", "all_frames", "[", ":", "n_val_images", "]", ")", ")", "\n", "self", ".", "eff_ref_val_set", "=", "copy", ".", "deepcopy", "(", "self", ".", "ref_val_set", ")", "\n", "\n", "# 2. create a set ", "\n", "for", "fr", "in", "self", ".", "ref_val_set", ":", "\n", "            ", "drive", ",", "frame_id", "=", "fr", ".", "rstrip", "(", ")", ".", "split", "(", "' '", ")", "\n", "ref_id", "=", "int", "(", "frame_id", ")", "\n", "\n", "# if id is 1, add 0th frame as well", "\n", "if", "ref_id", "==", "1", ":", "\n", "                ", "self", ".", "eff_ref_val_set", ".", "add", "(", "drive", "+", "' '", "+", "'%.10d'", "%", "0", ")", "\n", "\n", "# Add next frame as well", "\n", "", "next1_fr_alias", "=", "drive", "+", "' '", "+", "'%.10d'", "%", "(", "ref_id", "+", "1", ")", "\n", "next2_fr_alias", "=", "drive", "+", "' '", "+", "'%.10d'", "%", "(", "ref_id", "+", "2", ")", "\n", "next3_fr_alias", "=", "drive", "+", "' '", "+", "'%.10d'", "%", "(", "ref_id", "+", "3", ")", "\n", "if", "next1_fr_alias", "in", "all_frames", ":", "\n", "                ", "if", "next2_fr_alias", "not", "in", "all_frames", ":", "\n", "                    ", "self", ".", "eff_ref_val_set", ".", "add", "(", "next1_fr_alias", ")", "# when curr is 2nd last frame", "\n", "", "else", ":", "\n", "                    ", "if", "next3_fr_alias", "in", "all_frames", ":", "\n", "                        ", "self", ".", "eff_ref_val_set", ".", "add", "(", "next1_fr_alias", ")", "\n", "", "else", ":", "\n", "                        ", "continue", "# when curr is 3nd last frame", "\n", "\n", "\n", "# 3. filling hole", "\n", "", "", "", "", "self", ".", "eff_ref_val_set_iter", "=", "copy", ".", "deepcopy", "(", "self", ".", "eff_ref_val_set", ")", "\n", "for", "fr", "in", "self", ".", "eff_ref_val_set_iter", ":", "\n", "            ", "drive", ",", "frame_id", "=", "fr", ".", "rstrip", "(", ")", ".", "split", "(", "' '", ")", "\n", "ref_id", "=", "int", "(", "frame_id", ")", "\n", "\n", "next1_fr_alias", "=", "drive", "+", "' '", "+", "'%.10d'", "%", "(", "ref_id", "+", "1", ")", "\n", "next2_fr_alias", "=", "drive", "+", "' '", "+", "'%.10d'", "%", "(", "ref_id", "+", "2", ")", "\n", "\n", "if", "(", "next1_fr_alias", "in", "all_frames", ")", "and", "(", "next2_fr_alias", "in", "all_frames", ")", ":", "\n", "                ", "if", "(", "next1_fr_alias", "not", "in", "self", ".", "eff_ref_val_set", ")", "and", "(", "next2_fr_alias", "in", "self", ".", "eff_ref_val_set", ")", ":", "\n", "                    ", "self", ".", "eff_ref_val_set", ".", "add", "(", "next1_fr_alias", ")", "\n", "\n", "\n", "# 4. refine the train set (exclude frames that are included in the eff_ref_val_set)", "\n", "", "", "", "self", ".", "eff_ref_train_set", "=", "set", "(", "all_frames", ")", "-", "self", ".", "eff_ref_val_set", "\n", "self", ".", "train_set", "=", "copy", ".", "deepcopy", "(", "self", ".", "eff_ref_train_set", ")", "\n", "for", "fr", "in", "self", ".", "eff_ref_train_set", ":", "\n", "            ", "drive", ",", "frame_id", "=", "fr", ".", "rstrip", "(", ")", ".", "split", "(", "' '", ")", "\n", "ref_id", "=", "int", "(", "frame_id", ")", "\n", "\n", "for", "ii", "in", "range", "(", "ref_id", ",", "ref_id", "+", "1", "+", "1", ")", ":", "\n", "                ", "fr_alias", "=", "drive", "+", "' '", "+", "'%.10d'", "%", "ii", "\n", "if", "fr_alias", "in", "self", ".", "eff_ref_val_set", ":", "\n", "                    ", "self", ".", "train_set", ".", "remove", "(", "fr", ")", "\n", "", "if", "fr_alias", "not", "in", "all_frames", ":", "\n", "                    ", "self", ".", "train_set", ".", "remove", "(", "fr", ")", "\n", "\n", "\n", "", "", "", "self", ".", "ref_val_set", "=", "copy", ".", "deepcopy", "(", "self", ".", "eff_ref_val_set", ")", "\n", "for", "fr", "in", "self", ".", "eff_ref_val_set", ":", "\n", "            ", "drive", ",", "frame_id", "=", "fr", ".", "rstrip", "(", ")", ".", "split", "(", "' '", ")", "\n", "ref_id", "=", "int", "(", "frame_id", ")", "\n", "\n", "for", "ii", "in", "range", "(", "ref_id", ",", "ref_id", "+", "1", "+", "1", ")", ":", "\n", "                ", "fr_alias", "=", "drive", "+", "' '", "+", "'%.10d'", "%", "ii", "\n", "if", "fr_alias", "in", "self", ".", "eff_ref_train_set", ":", "\n", "                    ", "self", ".", "ref_val_set", ".", "remove", "(", "fr", ")", "\n", "", "if", "fr_alias", "not", "in", "all_frames", ":", "\n", "                    ", "self", ".", "ref_val_set", ".", "remove", "(", "fr", ")", "\n", "\n", "\n", "# 4. training ref. image = Total dataset - the set above", "\n", "\n", "", "", "", "print", "(", "'all frame '", ",", "len", "(", "all_frames", ")", ")", "\n", "print", "(", "'eff ref train set'", ",", "len", "(", "self", ".", "eff_ref_train_set", ")", ")", "\n", "print", "(", "'train set '", ",", "len", "(", "self", ".", "train_set", ")", ")", "\n", "print", "(", "'eff ref val set'", ",", "len", "(", "self", ".", "eff_ref_val_set", ")", ")", "\n", "print", "(", "'ref val set'", ",", "len", "(", "self", ".", "ref_val_set", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.SplitTrainVal_even.write_dataset_file": [[383, 391], ["open", "sorted", "open", "sorted", "os.path.join", "tf.write", "os.path.join", "vf.write"], "methods", ["None"], ["", "def", "write_dataset_file", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'generated'", ",", "self", ".", "alias", "+", "'_train.txt'", ")", ",", "'w'", ")", "as", "tf", ":", "\n", "            ", "for", "item", "in", "sorted", "(", "self", ".", "train_set", ")", ":", "\n", "                ", "tf", ".", "write", "(", "'%s\\n'", "%", "item", ")", "\n", "\n", "", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'generated'", ",", "self", ".", "alias", "+", "'_valid.txt'", ")", ",", "'w'", ")", "as", "vf", ":", "\n", "            ", "for", "item", "in", "sorted", "(", "self", ".", "ref_val_set", ")", ":", "\n", "                ", "vf", ".", "write", "(", "'%s\\n'", "%", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.extract_kitti_benchmark_scene": [[12, 31], ["os.path.join", "open", "set", "sorted", "os.path.exists", "ValueError", "line.split", "sorted.add", "open", "open.readlines", "len", "os.path.join", "tf.write"], "function", ["None"], ["def", "extract_kitti_benchmark_scene", "(", ")", ":", "\n", "    ", "eigen_test_file", "=", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'provided/train_mapping.txt'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "eigen_test_file", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"KITTI Train File '%s' not found!\"", ",", "eigen_test_file", ")", "\n", "", "eigen_test", "=", "open", "(", "eigen_test_file", ",", "'r'", ")", "\n", "\n", "scene_name_set", "=", "set", "(", ")", "\n", "filename_list", "=", "[", "line", ".", "split", "(", "' '", ")", "for", "line", "in", "eigen_test", ".", "readlines", "(", ")", "]", "\n", "for", "item", "in", "filename_list", ":", "\n", "        ", "if", "len", "(", "item", ")", "!=", "3", ":", "\n", "            ", "continue", "\n", "", "_", ",", "scene_name", ",", "_", "=", "item", "\n", "scene_name_set", ".", "add", "(", "scene_name", ")", "\n", "\n", "", "scene_name_set", "=", "sorted", "(", "scene_name_set", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'generated/kitti_test_scenes.txt'", ")", ",", "'w'", ")", "as", "tf", ":", "\n", "        ", "for", "item", "in", "scene_name_set", ":", "\n", "            ", "tf", ".", "write", "(", "'%s\\n'", "%", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.extract_eigen_test_scene": [[34, 51], ["os.path.join", "open", "set", "sorted", "os.path.exists", "ValueError", "line.split", "item[].split", "sorted.add", "open", "open.readlines", "os.path.join", "tf.write"], "function", ["None"], ["", "", "", "def", "extract_eigen_test_scene", "(", ")", ":", "\n", "    ", "eigen_test_file", "=", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'provided/eigen_test_files.txt'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "eigen_test_file", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"Eigen Test File '%s' not found!\"", ",", "eigen_test_file", ")", "\n", "", "eigen_test", "=", "open", "(", "eigen_test_file", ",", "'r'", ")", "\n", "\n", "scene_name_set", "=", "set", "(", ")", "\n", "filename_list", "=", "[", "line", ".", "split", "(", "' '", ")", "for", "line", "in", "eigen_test", ".", "readlines", "(", ")", "]", "\n", "for", "item", "in", "filename_list", ":", "\n", "        ", "_", ",", "scene_name", ",", "_", ",", "_", ",", "_", "=", "item", "[", "0", "]", ".", "split", "(", "'/'", ")", "\n", "scene_name_set", ".", "add", "(", "scene_name", ")", "\n", "\n", "", "scene_name_set", "=", "sorted", "(", "scene_name_set", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'generated/eigen_test_scenes.txt'", ")", ",", "'w'", ")", "as", "tf", ":", "\n", "        ", "for", "item", "in", "scene_name_set", ":", "\n", "            ", "tf", ".", "write", "(", "'%s\\n'", "%", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.extract_eigen_test_kitti_benchmark_scene": [[53, 88], ["os.path.join", "open", "set", "os.path.join", "open", "sorted", "os.path.exists", "ValueError", "line.split", "item[].split", "sorted.add", "os.path.exists", "ValueError", "line.split", "sorted.add", "open", "open.readlines", "open.readlines", "len", "os.path.join", "tf.write"], "function", ["None"], ["", "", "", "def", "extract_eigen_test_kitti_benchmark_scene", "(", ")", ":", "\n", "\n", "## Eigen", "\n", "    ", "eigen_test_file", "=", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'txt/eigen_test_files.txt'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "eigen_test_file", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"Eigen Test File '%s' not found!\"", ",", "eigen_test_file", ")", "\n", "", "eigen_test", "=", "open", "(", "eigen_test_file", ",", "'r'", ")", "\n", "\n", "scene_name_set", "=", "set", "(", ")", "\n", "filename_list", "=", "[", "line", ".", "split", "(", "' '", ")", "for", "line", "in", "eigen_test", ".", "readlines", "(", ")", "]", "\n", "for", "item", "in", "filename_list", ":", "\n", "        ", "_", ",", "scene_name", ",", "_", ",", "_", ",", "_", "=", "item", "[", "0", "]", ".", "split", "(", "'/'", ")", "\n", "scene_name_set", ".", "add", "(", "scene_name", ")", "\n", "\n", "\n", "## KITTI", "\n", "", "kitti_test_file", "=", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'txt/train_mapping.txt'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "kitti_test_file", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"KITTI Train File '%s' not found!\"", ",", "kitti_test_file", ")", "\n", "", "kitti_test", "=", "open", "(", "kitti_test_file", ",", "'r'", ")", "\n", "\n", "filename_list", "=", "[", "line", ".", "split", "(", "' '", ")", "for", "line", "in", "kitti_test", ".", "readlines", "(", ")", "]", "\n", "for", "item", "in", "filename_list", ":", "\n", "        ", "if", "len", "(", "item", ")", "!=", "3", ":", "\n", "            ", "continue", "\n", "", "_", ",", "scene_name", ",", "_", "=", "item", "\n", "scene_name_set", ".", "add", "(", "scene_name", ")", "\n", "\n", "\n", "", "scene_name_set", "=", "sorted", "(", "scene_name_set", ")", "\n", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'txt/eigen_kitti_test_scenes.txt'", ")", ",", "'w'", ")", "as", "tf", ":", "\n", "        ", "for", "item", "in", "scene_name_set", ":", "\n", "            ", "tf", ".", "write", "(", "'%s\\n'", "%", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.main": [[393, 407], ["prepare_train_data.extract_kitti_benchmark_scene", "prepare_train_data.CollectDataList", "prepare_train_data.SplitTrainVal_even", "prepare_train_data.extract_eigen_test_scene", "prepare_train_data.CollectDataList", "prepare_train_data.SplitTrainVal_even"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.extract_kitti_benchmark_scene", "home.repos.pwc.inspect_result.visinf_self-mono-sf.index_generator.prepare_train_data.extract_eigen_test_scene"], ["", "", "", "", "def", "main", "(", ")", ":", "\n", "\n", "    ", "sequence_length", "=", "1", "\n", "dataset_dir", "=", "'/fastdata/jhur/KITTI_raw_noPCL/'", "\n", "\n", "## KITTI SPLIT", "\n", "extract_kitti_benchmark_scene", "(", ")", "\n", "CollectDataList", "(", "dataset_dir", "=", "dataset_dir", ",", "split", "=", "'kitti'", ",", "sequence_length", "=", "sequence_length", ")", "\n", "SplitTrainVal_even", "(", "dataset_dir", "=", "dataset_dir", ",", "file_name", "=", "'generated/kitti_full.txt'", ",", "seq_len", "=", "sequence_length", ",", "alias", "=", "'kitti'", ")", "\n", "\n", "# EIGEN SPLIT", "\n", "extract_eigen_test_scene", "(", ")", "\n", "CollectDataList", "(", "dataset_dir", "=", "dataset_dir", ",", "split", "=", "'eigen'", ",", "sequence_length", "=", "sequence_length", ")", "\n", "SplitTrainVal_even", "(", "dataset_dir", "=", "dataset_dir", ",", "file_name", "=", "'generated/eigen_full.txt'", ",", "seq_len", "=", "sequence_length", ",", "alias", "=", "'eigen'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.compute_errors": [[6, 23], ["numpy.maximum", "numpy.sqrt", "numpy.sqrt", "numpy.mean", "numpy.mean", "np.sqrt.mean", "np.sqrt.mean", "numpy.log", "numpy.log", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean"], ["def", "compute_errors", "(", "gt", ",", "pred", ")", ":", "\n", "    ", "thresh", "=", "np", ".", "maximum", "(", "(", "gt", "/", "pred", ")", ",", "(", "pred", "/", "gt", ")", ")", "\n", "a1", "=", "(", "thresh", "<", "1.25", ")", ".", "mean", "(", ")", "\n", "a2", "=", "(", "thresh", "<", "1.25", "**", "2", ")", ".", "mean", "(", ")", "\n", "a3", "=", "(", "thresh", "<", "1.25", "**", "3", ")", ".", "mean", "(", ")", "\n", "\n", "rmse", "=", "(", "gt", "-", "pred", ")", "**", "2", "\n", "rmse", "=", "np", ".", "sqrt", "(", "rmse", ".", "mean", "(", ")", ")", "\n", "\n", "rmse_log", "=", "(", "np", ".", "log", "(", "gt", ")", "-", "np", ".", "log", "(", "pred", ")", ")", "**", "2", "\n", "rmse_log", "=", "np", ".", "sqrt", "(", "rmse_log", ".", "mean", "(", ")", ")", "\n", "\n", "abs_rel", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "gt", "-", "pred", ")", "/", "gt", ")", "\n", "\n", "sq_rel", "=", "np", ".", "mean", "(", "(", "(", "gt", "-", "pred", ")", "**", "2", ")", "/", "gt", ")", "\n", "\n", "return", "abs_rel", ",", "sq_rel", ",", "rmse", ",", "rmse_log", ",", "a1", ",", "a2", ",", "a3", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.load_gt_disp_kitti": [[33, 40], ["range", "cv2.imread", "gt_disparities.append", "cv2.imread.astype", "str().zfill", "str"], "function", ["None"], ["def", "load_gt_disp_kitti", "(", "path", ")", ":", "\n", "    ", "gt_disparities", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "200", ")", ":", "\n", "        ", "disp", "=", "cv2", ".", "imread", "(", "path", "+", "\"/training/disp_noc_0/\"", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "\"_10.png\"", ",", "-", "1", ")", "\n", "disp", "=", "disp", ".", "astype", "(", "np", ".", "float32", ")", "/", "256", "\n", "gt_disparities", ".", "append", "(", "disp", ")", "\n", "", "return", "gt_disparities", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.convert_disps_to_depths_kitti": [[41, 63], ["range", "len", "pred_disparities_resized.append", "gt_depths.append", "pred_depths.append", "cv2.resize"], "function", ["None"], ["", "def", "convert_disps_to_depths_kitti", "(", "gt_disparities", ",", "pred_disparities", ")", ":", "\n", "    ", "gt_depths", "=", "[", "]", "\n", "pred_depths", "=", "[", "]", "\n", "pred_disparities_resized", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "gt_disparities", ")", ")", ":", "\n", "        ", "gt_disp", "=", "gt_disparities", "[", "i", "]", "\n", "height", ",", "width", "=", "gt_disp", ".", "shape", "\n", "\n", "pred_disp", "=", "pred_disparities", "[", "i", "]", "\n", "pred_disp", "=", "width", "*", "cv2", ".", "resize", "(", "pred_disp", ",", "(", "width", ",", "height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "pred_disparities_resized", ".", "append", "(", "pred_disp", ")", "\n", "\n", "mask", "=", "gt_disp", ">", "0", "\n", "\n", "gt_depth", "=", "width_to_focal", "[", "width", "]", "*", "0.54", "/", "(", "gt_disp", "+", "(", "1.0", "-", "mask", ")", ")", "\n", "pred_depth", "=", "width_to_focal", "[", "width", "]", "*", "0.54", "/", "pred_disp", "\n", "\n", "gt_depths", ".", "append", "(", "gt_depth", ")", "\n", "pred_depths", ".", "append", "(", "pred_depth", ")", "\n", "", "return", "gt_depths", ",", "pred_depths", ",", "pred_disparities_resized", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.read_text_lines": [[68, 74], ["open", "open.readlines", "open.close", "l.rstrip"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.close"], ["", "def", "read_text_lines", "(", "file_path", ")", ":", "\n", "    ", "f", "=", "open", "(", "file_path", ",", "'r'", ")", "\n", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "f", ".", "close", "(", ")", "\n", "lines", "=", "[", "l", ".", "rstrip", "(", ")", "for", "l", "in", "lines", "]", "\n", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.read_file_data": [[75, 105], ["print", "filename.split", "numpy.int32", "filename.split", "os.path.isfile", "os.path.isfile", "gt_files.append", "gt_calib.append", "im_sizes.append", "im_files.append", "cams.append", "print", "cv2.imread"], "function", ["None"], ["", "def", "read_file_data", "(", "files", ",", "data_root", ")", ":", "\n", "    ", "gt_files", "=", "[", "]", "\n", "gt_calib", "=", "[", "]", "\n", "im_sizes", "=", "[", "]", "\n", "im_files", "=", "[", "]", "\n", "cams", "=", "[", "]", "\n", "num_probs", "=", "0", "\n", "for", "filename", "in", "files", ":", "\n", "        ", "filename", "=", "filename", ".", "split", "(", ")", "[", "0", "]", "\n", "splits", "=", "filename", ".", "split", "(", "'/'", ")", "\n", "camera_id", "=", "np", ".", "int32", "(", "splits", "[", "2", "]", "[", "-", "1", ":", "]", ")", "# 2 is left, 3 is right", "\n", "date", "=", "splits", "[", "0", "]", "\n", "im_id", "=", "splits", "[", "4", "]", "[", ":", "10", "]", "\n", "file_root", "=", "'{}/{}'", "\n", "\n", "im", "=", "filename", "\n", "vel", "=", "'{}/{}/velodyne_points/data/{}.bin'", ".", "format", "(", "splits", "[", "0", "]", ",", "splits", "[", "1", "]", ",", "im_id", ")", "\n", "\n", "if", "os", ".", "path", ".", "isfile", "(", "data_root", "+", "im", ")", "and", "os", ".", "path", ".", "isfile", "(", "data_root", "+", "vel", ")", ":", "\n", "            ", "gt_files", ".", "append", "(", "data_root", "+", "vel", ")", "\n", "gt_calib", ".", "append", "(", "data_root", "+", "date", "+", "'/'", ")", "\n", "im_sizes", ".", "append", "(", "cv2", ".", "imread", "(", "data_root", "+", "im", ")", ".", "shape", "[", ":", "2", "]", ")", "\n", "im_files", ".", "append", "(", "data_root", "+", "im", ")", "\n", "cams", ".", "append", "(", "2", ")", "\n", "", "else", ":", "\n", "            ", "num_probs", "+=", "1", "\n", "print", "(", "'{} missing'", ".", "format", "(", "data_root", "+", "im", ")", ")", "\n", "", "", "print", "(", "num_probs", ",", "'files missing'", ")", "\n", "\n", "return", "gt_files", ",", "gt_calib", ",", "im_sizes", ",", "im_files", ",", "cams", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.load_velodyne_points": [[106, 111], ["numpy.fromfile().reshape", "numpy.fromfile"], "function", ["None"], ["", "def", "load_velodyne_points", "(", "file_name", ")", ":", "\n", "# adapted from https://github.com/hunse/kitti", "\n", "    ", "points", "=", "np", ".", "fromfile", "(", "file_name", ",", "dtype", "=", "np", ".", "float32", ")", ".", "reshape", "(", "-", "1", ",", "4", ")", "\n", "points", "[", ":", ",", "3", "]", "=", "1.0", "# homogeneous", "\n", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.lin_interp": [[113, 122], ["LinearNDInterpolator", "numpy.meshgrid", "LinearNDInterpolator.reshape", "numpy.arange", "numpy.arange", "numpy.vstack", "LinearNDInterpolator.", "I.flatten", "J.flatten"], "function", ["None"], ["", "def", "lin_interp", "(", "shape", ",", "xyd", ")", ":", "\n", "# taken from https://github.com/hunse/kitti", "\n", "    ", "m", ",", "n", "=", "shape", "\n", "ij", ",", "d", "=", "xyd", "[", ":", ",", "1", ":", ":", "-", "1", "]", ",", "xyd", "[", ":", ",", "2", "]", "\n", "f", "=", "LinearNDInterpolator", "(", "ij", ",", "d", ",", "fill_value", "=", "0", ")", "\n", "J", ",", "I", "=", "np", ".", "meshgrid", "(", "np", ".", "arange", "(", "n", ")", ",", "np", ".", "arange", "(", "m", ")", ")", "\n", "IJ", "=", "np", ".", "vstack", "(", "[", "I", ".", "flatten", "(", ")", ",", "J", ".", "flatten", "(", ")", "]", ")", ".", "T", "\n", "disparity", "=", "f", "(", "IJ", ")", ".", "reshape", "(", "shape", ")", "\n", "return", "disparity", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.read_calib_file": [[124, 142], ["set", "open", "f.readlines", "line.split", "value.strip.strip", "set.issuperset", "numpy.array", "list", "map", "value.strip.split"], "function", ["None"], ["", "def", "read_calib_file", "(", "path", ")", ":", "\n", "# taken from https://github.com/hunse/kitti", "\n", "    ", "float_chars", "=", "set", "(", "\"0123456789.e+- \"", ")", "\n", "data", "=", "{", "}", "\n", "with", "open", "(", "path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ".", "readlines", "(", ")", ":", "\n", "            ", "key", ",", "value", "=", "line", ".", "split", "(", "':'", ",", "1", ")", "\n", "value", "=", "value", ".", "strip", "(", ")", "\n", "data", "[", "key", "]", "=", "value", "\n", "if", "float_chars", ".", "issuperset", "(", "value", ")", ":", "\n", "# try to cast to float array", "\n", "                ", "try", ":", "\n", "                    ", "data", "[", "key", "]", "=", "np", ".", "array", "(", "list", "(", "map", "(", "float", ",", "value", ".", "split", "(", "' '", ")", ")", ")", ")", "\n", "", "except", "ValueError", ":", "\n", "# casting error: data[key] already eq. value, so pass", "\n", "                    ", "pass", "\n", "\n", "", "", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.get_focal_length_baseline": [[144, 161], ["godard_evaluation_utils.read_calib_file", "cam2cam[].reshape", "cam2cam[].reshape"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.read_calib_file"], ["", "def", "get_focal_length_baseline", "(", "calib_dir", ",", "cam", ")", ":", "\n", "    ", "cam2cam", "=", "read_calib_file", "(", "calib_dir", "+", "'calib_cam_to_cam.txt'", ")", "\n", "P2_rect", "=", "cam2cam", "[", "'P_rect_02'", "]", ".", "reshape", "(", "3", ",", "4", ")", "\n", "P3_rect", "=", "cam2cam", "[", "'P_rect_03'", "]", ".", "reshape", "(", "3", ",", "4", ")", "\n", "\n", "# cam 2 is left of camera 0  -6cm", "\n", "# cam 3 is to the right  +54cm", "\n", "b2", "=", "P2_rect", "[", "0", ",", "3", "]", "/", "-", "P2_rect", "[", "0", ",", "0", "]", "\n", "b3", "=", "P3_rect", "[", "0", ",", "3", "]", "/", "-", "P3_rect", "[", "0", ",", "0", "]", "\n", "baseline", "=", "b3", "-", "b2", "\n", "\n", "if", "cam", "==", "2", ":", "\n", "        ", "focal_length", "=", "P2_rect", "[", "0", ",", "0", "]", "\n", "", "elif", "cam", "==", "3", ":", "\n", "        ", "focal_length", "=", "P3_rect", "[", "0", ",", "0", "]", "\n", "\n", "", "return", "focal_length", ",", "baseline", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.sub2ind": [[163, 166], ["None"], "function", ["None"], ["", "def", "sub2ind", "(", "matrixSize", ",", "rowSub", ",", "colSub", ")", ":", "\n", "    ", "m", ",", "n", "=", "matrixSize", "\n", "return", "rowSub", "*", "(", "n", "-", "1", ")", "+", "colSub", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.generate_depth_map": [[167, 232], ["godard_evaluation_utils.read_calib_file", "godard_evaluation_utils.read_calib_file", "numpy.hstack", "numpy.vstack", "numpy.eye", "cam2cam[].reshape", "cam2cam[].reshape", "numpy.dot", "godard_evaluation_utils.load_velodyne_points", "numpy.zeros", "godard_evaluation_utils.sub2ind", "numpy.dot", "numpy.dot", "numpy.round", "numpy.round", "int", "int", "velo_pts_im[].min", "velo2cam[].reshape", "numpy.array", "collections.Counter().items", "numpy.where", "velo_pts_im[].astype", "velo_pts_im[].astype", "collections.Counter", "str"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.read_calib_file", "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.read_calib_file", "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.load_velodyne_points", "home.repos.pwc.inspect_result.visinf_self-mono-sf.kitti_lidar_to_depth.godard_evaluation_utils.sub2ind"], ["", "def", "generate_depth_map", "(", "calib_dir", ",", "velo_file_name", ",", "im_shape", ",", "cam", "=", "2", ",", "interp", "=", "False", ",", "vel_depth", "=", "False", ")", ":", "\n", "# load calibration files", "\n", "    ", "cam2cam", "=", "read_calib_file", "(", "calib_dir", "+", "'calib_cam_to_cam.txt'", ")", "\n", "velo2cam", "=", "read_calib_file", "(", "calib_dir", "+", "'calib_velo_to_cam.txt'", ")", "\n", "velo2cam", "=", "np", ".", "hstack", "(", "(", "velo2cam", "[", "'R'", "]", ".", "reshape", "(", "3", ",", "3", ")", ",", "velo2cam", "[", "'T'", "]", "[", "...", ",", "np", ".", "newaxis", "]", ")", ")", "\n", "velo2cam", "=", "np", ".", "vstack", "(", "(", "velo2cam", ",", "np", ".", "array", "(", "[", "0", ",", "0", ",", "0", ",", "1.0", "]", ")", ")", ")", "\n", "\n", "# compute projection matrix velodyne->image plane", "\n", "R_cam2rect", "=", "np", ".", "eye", "(", "4", ")", "\n", "R_cam2rect", "[", ":", "3", ",", ":", "3", "]", "=", "cam2cam", "[", "'R_rect_00'", "]", ".", "reshape", "(", "3", ",", "3", ")", "\n", "P_rect", "=", "cam2cam", "[", "'P_rect_0'", "+", "str", "(", "cam", ")", "]", ".", "reshape", "(", "3", ",", "4", ")", "\n", "P_velo2im", "=", "np", ".", "dot", "(", "np", ".", "dot", "(", "P_rect", ",", "R_cam2rect", ")", ",", "velo2cam", ")", "\n", "\n", "# load velodyne points and remove all behind image plane (approximation)", "\n", "# each row of the velodyne data is forward, left, up, reflectance", "\n", "velo", "=", "load_velodyne_points", "(", "velo_file_name", ")", "\n", "velo", "=", "velo", "[", "velo", "[", ":", ",", "0", "]", ">=", "0", ",", ":", "]", "\n", "\n", "# project the points to the camera", "\n", "# velo_pts_im = np.dot(P_velo2im, velo.T).T", "\n", "# velo_pts_im[:, :2] = velo_pts_im[:,:2] / velo_pts_im[:,2][..., np.newaxis]", "\n", "\n", "# if vel_depth:", "\n", "#     velo_pts_im[:, 2] = velo[:, 0]", "\n", "velo_pts_im", "=", "np", ".", "dot", "(", "P_velo2im", ",", "velo", ".", "T", ")", ".", "T", "\n", "velo_pts_im", "[", ":", ",", ":", "2", "]", "=", "velo_pts_im", "[", ":", ",", ":", "2", "]", "/", "velo_pts_im", "[", ":", ",", "-", "1", ":", "]", "\n", "\n", "# check if in bounds", "\n", "# use minus 1 to get the exact same value as KITTI matlab code", "\n", "velo_pts_im", "[", ":", ",", "0", "]", "=", "np", ".", "round", "(", "velo_pts_im", "[", ":", ",", "0", "]", ")", "-", "1", "\n", "velo_pts_im", "[", ":", ",", "1", "]", "=", "np", ".", "round", "(", "velo_pts_im", "[", ":", ",", "1", "]", ")", "-", "1", "\n", "val_inds", "=", "(", "velo_pts_im", "[", ":", ",", "0", "]", ">=", "0", ")", "&", "(", "velo_pts_im", "[", ":", ",", "1", "]", ">=", "0", ")", "\n", "val_inds", "=", "val_inds", "&", "(", "velo_pts_im", "[", ":", ",", "0", "]", "<", "im_shape", "[", "1", "]", ")", "&", "(", "velo_pts_im", "[", ":", ",", "1", "]", "<", "im_shape", "[", "0", "]", ")", "\n", "velo_pts_im", "=", "velo_pts_im", "[", "val_inds", ",", ":", "]", "\n", "\n", "# project to image", "\n", "depth", "=", "np", ".", "zeros", "(", "(", "im_shape", ")", ")", "\n", "depth", "[", "velo_pts_im", "[", ":", ",", "1", "]", ".", "astype", "(", "np", ".", "int", ")", ",", "velo_pts_im", "[", ":", ",", "0", "]", ".", "astype", "(", "np", ".", "int", ")", "]", "=", "velo_pts_im", "[", ":", ",", "2", "]", "\n", "\n", "# # find the duplicate points and choose the closest depth", "\n", "# inds = sub2ind(depth.shape, velo_pts_im[:, 1], velo_pts_im[:, 0])", "\n", "# dupe_inds = [item for item, count in Counter(inds).iteritems() if count > 1]", "\n", "# for dd in dupe_inds:", "\n", "#     pts = np.where(inds==dd)[0]", "\n", "#     x_loc = int(velo_pts_im[pts[0], 0])", "\n", "#     y_loc = int(velo_pts_im[pts[0], 1])", "\n", "#     depth[y_loc, x_loc] = velo_pts_im[pts, 2].min()", "\n", "# depth[depth<0] = 0", "\n", "\n", "# if interp:", "\n", "#     # interpolate the depth map to fill in holes", "\n", "#     depth_interp = lin_interp(im_shape, velo_pts_im)", "\n", "#     return depth, depth_interp", "\n", "# else:", "\n", "#     return depth", "\n", "# find the duplicate points and choose the closest depth", "\n", "inds", "=", "sub2ind", "(", "depth", ".", "shape", ",", "velo_pts_im", "[", ":", ",", "1", "]", ",", "velo_pts_im", "[", ":", ",", "0", "]", ")", "\n", "dupe_inds", "=", "[", "item", "for", "item", ",", "count", "in", "Counter", "(", "inds", ")", ".", "items", "(", ")", "if", "count", ">", "1", "]", "\n", "for", "dd", "in", "dupe_inds", ":", "\n", "        ", "pts", "=", "np", ".", "where", "(", "inds", "==", "dd", ")", "[", "0", "]", "\n", "x_loc", "=", "int", "(", "velo_pts_im", "[", "pts", "[", "0", "]", ",", "0", "]", ")", "\n", "y_loc", "=", "int", "(", "velo_pts_im", "[", "pts", "[", "0", "]", ",", "1", "]", ")", "\n", "depth", "[", "y_loc", ",", "x_loc", "]", "=", "velo_pts_im", "[", "pts", ",", "2", "]", ".", "min", "(", ")", "\n", "", "depth", "[", "depth", "<", "0", "]", "=", "0", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.run.get_pcd": [[37, 114], ["utils_misc.numpy2torch().unsqueeze", "utils_misc.numpy2torch().unsqueeze", "utils_misc.numpy2torch().unsqueeze", "utils_misc.numpy2torch().unsqueeze", "numpy2torch().unsqueeze.size", "numpy.array", "utils_misc.numpy2torch", "utils_misc.pixel2pts_ms", "utils_misc.pixel2pts_ms", "numpy.repeat", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.concatenate", "numpy.array", "numpy.concatenate", "numpy.transpose", "numpy.concatenate", "numpy.reshape", "numpy.concatenate", "open3d.geometry.PointCloud", "open3d.utility.Vector3dVector", "open3d.utility.Vector3dVector", "open3d.geometry.AxisAlignedBoundingBox", "pcd1.crop.crop", "utils_misc.read_png_flow", "utils_misc.read_png_disp", "utils_misc.read_png_disp", "numpy.expand_dims", "torch.cat().data.cpu().numpy", "utils_misc.flow_to_png_middlebury", "numpy.float32", "pts1_tform[].view().data.numpy", "skimage.imread", "numpy.float32", "os.path.join", "os.path.join", "os.path.join", "utils_misc.numpy2torch", "utils_misc.numpy2torch", "utils_misc.numpy2torch", "utils_misc.numpy2torch", "skimage.color.rgb2gray", "os.path.join", "torch.cat().data.cpu", "pts1_tform[].view", "torch.cat"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.numpy2torch", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.read_png_flow", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.read_png_disp", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.read_png_disp", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.flow_to_png_middlebury", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.numpy2torch", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.numpy2torch", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.numpy2torch", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.numpy2torch"], ["def", "get_pcd", "(", "img_idx", ",", "image_dir", ",", "result_dir", ",", "tt", ")", ":", "\n", "\n", "    ", "idx_curr", "=", "'%06d'", "%", "(", "img_idx", ")", "\n", "\n", "im1_np0", "=", "(", "io", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "image_dir", ",", "\"image_2/\"", "+", "idx_curr", "+", "\"_10.png\"", ")", ")", "/", "np", ".", "float32", "(", "255.0", ")", ")", "[", "110", ":", ",", ":", ",", ":", "]", "\n", "\n", "flo_f_np0", "=", "read_png_flow", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "\"flow/\"", "+", "idx_curr", "+", "\"_10.png\"", ")", ")", "[", "110", ":", ",", ":", ",", ":", "]", "\n", "disp1_np0", "=", "read_png_disp", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "\"disp_0/\"", "+", "idx_curr", "+", "\"_10.png\"", ")", ")", "[", "110", ":", ",", ":", ",", ":", "]", "\n", "disp2_np0", "=", "read_png_disp", "(", "os", ".", "path", ".", "join", "(", "result_dir", ",", "\"disp_1/\"", "+", "idx_curr", "+", "\"_10.png\"", ")", ")", "[", "110", ":", ",", ":", ",", ":", "]", "\n", "\n", "im1", "=", "numpy2torch", "(", "im1_np0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "disp1", "=", "numpy2torch", "(", "disp1_np0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "disp_diff", "=", "numpy2torch", "(", "disp2_np0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "flo_f", "=", "numpy2torch", "(", "flo_f_np0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "_", ",", "_", ",", "hh", ",", "ww", "=", "im1", ".", "size", "(", ")", "\n", "\n", "## Intrinsic", "\n", "focal_length", "=", "width_to_focal", "[", "ww", "]", "\n", "cx", "=", "cam_center_dict", "[", "ww", "]", "[", "0", "]", "\n", "cy", "=", "cam_center_dict", "[", "ww", "]", "[", "1", "]", "\n", "\n", "k1_np", "=", "np", ".", "array", "(", "[", "[", "focal_length", ",", "0", ",", "cx", "]", ",", "[", "0", ",", "focal_length", ",", "cy", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "k1", "=", "numpy2torch", "(", "k1_np", ")", "\n", "\n", "# Forward warping Pts1 using disp_change and flow", "\n", "pts1", "=", "pixel2pts_ms", "(", "disp1", ",", "k1", ")", "\n", "pts1_warp", "=", "pixel2pts_ms", "(", "disp_diff", ",", "k1", ",", "flo_f", ")", "\n", "sf", "=", "pts1_warp", "-", "pts1", "\n", "\n", "## Composing Image", "\n", "im1_np0_g", "=", "np", ".", "repeat", "(", "np", ".", "expand_dims", "(", "rgb2gray", "(", "im1_np0", ")", ",", "axis", "=", "2", ")", ",", "3", ",", "axis", "=", "2", ")", "\n", "flow", "=", "torch", ".", "cat", "(", "(", "sf", "[", ":", ",", "0", ":", "1", ",", ":", ",", ":", "]", ",", "sf", "[", ":", ",", "2", ":", "3", ",", ":", ",", ":", "]", ")", ",", "dim", "=", "1", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", ",", ":", ",", ":", ",", ":", "]", "\n", "flow_img", "=", "flow_to_png_middlebury", "(", "flow", ")", "/", "np", ".", "float32", "(", "255.0", ")", "\n", "\n", "if", "imgflag", "==", "0", ":", "\n", "        ", "flow_img", "=", "im1_np0", "\n", "", "else", ":", "\n", "        ", "flow_img", "=", "(", "flow_img", "*", "0.75", "+", "im1_np0_g", "*", "0.25", ")", "\n", "\n", "## Crop", "\n", "", "max_crop", "=", "(", "60", ",", "0.7", ",", "82", ")", "\n", "min_crop", "=", "(", "-", "60", ",", "-", "20", ",", "0", ")", "\n", "\n", "x1", "=", "-", "60", "\n", "x2", "=", "60", "\n", "y1", "=", "0.7", "\n", "y2", "=", "-", "20", "\n", "z1", "=", "80", "\n", "z2", "=", "0", "\n", "pp1", "=", "np", ".", "array", "(", "[", "[", "x1", ",", "y1", ",", "z1", "]", "]", ")", "\n", "pp2", "=", "np", ".", "array", "(", "[", "[", "x1", ",", "y1", ",", "z2", "]", "]", ")", "\n", "pp3", "=", "np", ".", "array", "(", "[", "[", "x1", ",", "y2", ",", "z1", "]", "]", ")", "\n", "pp4", "=", "np", ".", "array", "(", "[", "[", "x1", ",", "y2", ",", "z2", "]", "]", ")", "\n", "pp5", "=", "np", ".", "array", "(", "[", "[", "x2", ",", "y1", ",", "z1", "]", "]", ")", "\n", "pp6", "=", "np", ".", "array", "(", "[", "[", "x2", ",", "y1", ",", "z2", "]", "]", ")", "\n", "pp7", "=", "np", ".", "array", "(", "[", "[", "x2", ",", "y2", ",", "z1", "]", "]", ")", "\n", "pp8", "=", "np", ".", "array", "(", "[", "[", "x2", ",", "y2", ",", "z2", "]", "]", ")", "\n", "bb_pts", "=", "np", ".", "concatenate", "(", "(", "pp1", ",", "pp2", ",", "pp3", ",", "pp4", ",", "pp5", ",", "pp6", ",", "pp7", ",", "pp8", ")", ",", "axis", "=", "0", ")", "\n", "wp", "=", "np", ".", "array", "(", "[", "[", "1.0", ",", "1.0", ",", "1.0", "]", "]", ")", "\n", "bb_colors", "=", "np", ".", "concatenate", "(", "(", "wp", ",", "wp", ",", "wp", ",", "wp", ",", "wp", ",", "wp", ",", "wp", ",", "wp", ")", ",", "axis", "=", "0", ")", "\n", "\n", "## Open3D Vis", "\n", "pts1_tform", "=", "pts1", "+", "sf", "*", "tt", "\n", "pts1_np", "=", "np", ".", "transpose", "(", "pts1_tform", "[", "0", "]", ".", "view", "(", "3", ",", "-", "1", ")", ".", "data", ".", "numpy", "(", ")", ",", "(", "1", ",", "0", ")", ")", "\n", "pts1_np", "=", "np", ".", "concatenate", "(", "(", "pts1_np", ",", "bb_pts", ")", ",", "axis", "=", "0", ")", "\n", "pts1_color", "=", "np", ".", "reshape", "(", "flow_img", ",", "(", "hh", "*", "ww", ",", "3", ")", ")", "\n", "pts1_color", "=", "np", ".", "concatenate", "(", "(", "pts1_color", ",", "bb_colors", ")", ",", "axis", "=", "0", ")", "\n", "\n", "pcd1", "=", "o3d", ".", "geometry", ".", "PointCloud", "(", ")", "\n", "pcd1", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "pts1_np", ")", "\n", "pcd1", ".", "colors", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "pts1_color", ")", "\n", "\n", "bbox", "=", "o3d", ".", "geometry", ".", "AxisAlignedBoundingBox", "(", "min_crop", ",", "max_crop", ")", "\n", "pcd1", "=", "pcd1", ".", "crop", "(", "bbox", ")", "\n", "\n", "return", "pcd1", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.run.custom_vis": [[116, 200], ["open3d.io.read_pinhole_camera_trajectory", "open3d.visualization.Visualizer", "run.get_pcd", "vis.create_window", "vis.add_geometry", "vis.get_view_control", "vis.get_view_control.scale", "vis.get_view_control.rotate", "vis.get_view_control.translate", "vis.register_animation_callback", "vis.run", "vis.destroy_window", "vis.capture_depth_float_buffer", "vis.capture_screen_float_buffer", "print", "skimage.imsave", "run.get_pcd", "vis.clear_geometries", "vis.add_geometry", "vis.get_view_control", "vis.get_view_control.scale", "vis.get_view_control.rotate", "vis.get_view_control.translate", "os.path.join", "os.path.join", "numpy.asarray", "custom_vis.vis.register_animation_callback", "len", "math.sin", "str", "math.cos", "str"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.run.get_pcd", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.EvaluationEpoch.run", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.run.get_pcd"], ["", "def", "custom_vis", "(", "imglist", ",", "kitti_data_dir", ",", "result_dir", ",", "vis_dir", ")", ":", "\n", "\n", "    ", "custom_vis", ".", "index", "=", "0", "\n", "custom_vis", ".", "trajectory", "=", "o3d", ".", "io", ".", "read_pinhole_camera_trajectory", "(", "\"cam_pose.json\"", ")", "\n", "custom_vis", ".", "vis", "=", "o3d", ".", "visualization", ".", "Visualizer", "(", ")", "\n", "\n", "img_id", "=", "imglist", "[", "custom_vis", ".", "index", "]", "\n", "init_pcd", "=", "get_pcd", "(", "img_id", ",", "kitti_data_dir", ",", "result_dir", ",", "0", ")", "\n", "custom_vis", ".", "prev_pcd", "=", "init_pcd", "\n", "\n", "def", "move_forward", "(", "vis", ")", ":", "\n", "\n", "        ", "glb", "=", "custom_vis", "\n", "\n", "## Capture", "\n", "depth", "=", "vis", ".", "capture_depth_float_buffer", "(", "False", ")", "\n", "image", "=", "vis", ".", "capture_screen_float_buffer", "(", "False", ")", "\n", "save_id", "=", "imglist", "[", "glb", ".", "index", "-", "1", "]", "\n", "file_name", "=", "\"\"", "\n", "\n", "if", "imgflag", "==", "0", ":", "\n", "            ", "file_name", "=", "os", ".", "path", ".", "join", "(", "vis_dir", ",", "\"{:06d}_{:02d}.png\"", ".", "format", "(", "save_id", ",", "glb", ".", "index", ")", ")", "\n", "", "else", ":", "\n", "            ", "file_name", "=", "os", ".", "path", ".", "join", "(", "vis_dir", ",", "\"{:06d}_{:02d}.png\"", ".", "format", "(", "save_id", ",", "glb", ".", "index", ")", ")", "\n", "\n", "", "print", "(", "' '", "+", "str", "(", "glb", ".", "index", ")", "+", "' '", "+", "str", "(", "save_id", ")", "+", "' '", "+", "file_name", ")", "\n", "io", ".", "imsave", "(", "file_name", ",", "np", ".", "asarray", "(", "image", ")", ",", "check_contrast", "=", "False", ")", "\n", "\n", "## Rendering", "\n", "max_d_x", "=", "13", "\n", "max_d_y", "=", "4", "\n", "\n", "if", "glb", ".", "index", "<", "sampling", "[", "0", "]", ":", "\n", "            ", "tt", "=", "0", "\n", "rx", "=", "0", "\n", "ry", "=", "0", "\n", "", "elif", "glb", ".", "index", "<", "sampling", "[", "1", "]", ":", "# only rotation", "\n", "            ", "tt", "=", "0", "\n", "rad", "=", "2", "*", "3.14159265359", "/", "(", "sampling", "[", "1", "]", "-", "sampling", "[", "0", "]", ")", "*", "(", "glb", ".", "index", "-", "sampling", "[", "0", "]", ")", "\n", "rx", "=", "max_d_x", "*", "math", ".", "sin", "(", "rad", ")", "\n", "ry", "=", "(", "max_d_y", "*", "math", ".", "cos", "(", "rad", ")", "-", "max_d_y", ")", "\n", "", "elif", "glb", ".", "index", "<", "sampling", "[", "2", "]", ":", "\n", "            ", "tt", "=", "0", "\n", "rx", "=", "0", "\n", "ry", "=", "0", "\n", "", "elif", "glb", ".", "index", "<", "sampling", "[", "3", "]", ":", "\n", "            ", "tt", "=", "(", "glb", ".", "index", "-", "sampling", "[", "2", "]", ")", "/", "(", "sampling", "[", "3", "]", "-", "sampling", "[", "2", "]", ")", "\n", "rx", "=", "0", "\n", "ry", "=", "0", "\n", "", "else", ":", "\n", "            ", "tt", "=", "1", "\n", "rx", "=", "0", "\n", "ry", "=", "0", "\n", "\n", "", "img_id", "=", "imglist", "[", "glb", ".", "index", "]", "\n", "pcd", "=", "get_pcd", "(", "img_id", ",", "kitti_data_dir", ",", "result_dir", ",", "tt", ")", "\n", "glb", ".", "index", "=", "glb", ".", "index", "+", "1", "\n", "\n", "vis", ".", "clear_geometries", "(", ")", "\n", "vis", ".", "add_geometry", "(", "pcd", ")", "\n", "glb", ".", "prev_pcd", "=", "pcd", "\n", "\n", "ctr", "=", "vis", ".", "get_view_control", "(", ")", "\n", "ctr", ".", "scale", "(", "-", "24", ")", "\n", "\n", "ctr", ".", "rotate", "(", "rx", ",", "980.0", "+", "ry", ",", "0", ",", "0", ")", "\n", "ctr", ".", "translate", "(", "-", "5", ",", "0", ")", "\n", "\n", "if", "not", "glb", ".", "index", "<", "len", "(", "imglist", ")", ":", "\n", "            ", "custom_vis", ".", "vis", ".", "register_animation_callback", "(", "None", ")", "\n", "\n", "", "return", "False", "\n", "\n", "", "vis", "=", "custom_vis", ".", "vis", "\n", "vis", ".", "create_window", "(", ")", "\n", "vis", ".", "add_geometry", "(", "init_pcd", ")", "\n", "\n", "ctr", "=", "vis", ".", "get_view_control", "(", ")", "\n", "ctr", ".", "scale", "(", "-", "24", ")", "\n", "ctr", ".", "rotate", "(", "0", ",", "980.0", ",", "0", ",", "0", ")", "\n", "ctr", ".", "translate", "(", "-", "5", ",", "0", ")", "\n", "vis", ".", "register_animation_callback", "(", "move_forward", ")", "\n", "vis", ".", "run", "(", ")", "\n", "vis", ".", "destroy_window", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.compute_color": [[10, 52], ["numpy.zeros", "utils_misc.make_color_wheel", "numpy.size", "numpy.sqrt", "numpy.floor().astype", "range", "numpy.isnan", "numpy.isnan", "numpy.arctan2", "numpy.size", "numpy.logical_not", "numpy.uint8", "numpy.floor", "numpy.floor"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.make_color_wheel"], ["def", "compute_color", "(", "u", ",", "v", ")", ":", "\n", "    ", "\"\"\"\n    compute optical flow color map\n    :param u: optical flow horizontal map\n    :param v: optical flow vertical map\n    :return: optical flow in color code\n    \"\"\"", "\n", "[", "h", ",", "w", "]", "=", "u", ".", "shape", "\n", "img", "=", "np", ".", "zeros", "(", "[", "h", ",", "w", ",", "3", "]", ")", "\n", "nanIdx", "=", "np", ".", "isnan", "(", "u", ")", "|", "np", ".", "isnan", "(", "v", ")", "\n", "u", "[", "nanIdx", "]", "=", "0", "\n", "v", "[", "nanIdx", "]", "=", "0", "\n", "\n", "colorwheel", "=", "make_color_wheel", "(", ")", "\n", "ncols", "=", "np", ".", "size", "(", "colorwheel", ",", "0", ")", "\n", "\n", "rad", "=", "np", ".", "sqrt", "(", "u", "**", "2", "+", "v", "**", "2", ")", "\n", "\n", "a", "=", "np", ".", "arctan2", "(", "-", "v", ",", "-", "u", ")", "/", "np", ".", "pi", "\n", "\n", "fk", "=", "(", "a", "+", "1", ")", "/", "2", "*", "(", "ncols", "-", "1", ")", "+", "1", "\n", "\n", "k0", "=", "np", ".", "floor", "(", "fk", ")", ".", "astype", "(", "int", ")", "\n", "\n", "k1", "=", "k0", "+", "1", "\n", "k1", "[", "k1", "==", "ncols", "+", "1", "]", "=", "1", "\n", "f", "=", "fk", "-", "k0", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "np", ".", "size", "(", "colorwheel", ",", "1", ")", ")", ":", "\n", "        ", "tmp", "=", "colorwheel", "[", ":", ",", "i", "]", "\n", "col0", "=", "tmp", "[", "k0", "-", "1", "]", "/", "255", "\n", "col1", "=", "tmp", "[", "k1", "-", "1", "]", "/", "255", "\n", "col", "=", "(", "1", "-", "f", ")", "*", "col0", "+", "f", "*", "col1", "\n", "\n", "idx", "=", "rad", "<=", "1", "\n", "col", "[", "idx", "]", "=", "1", "-", "rad", "[", "idx", "]", "*", "(", "1", "-", "col", "[", "idx", "]", ")", "\n", "notidx", "=", "np", ".", "logical_not", "(", "idx", ")", "\n", "\n", "col", "[", "notidx", "]", "*=", "0.75", "\n", "img", "[", ":", ",", ":", ",", "i", "]", "=", "np", ".", "uint8", "(", "np", ".", "floor", "(", "255", "*", "col", "*", "(", "1", "-", "nanIdx", ")", ")", ")", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.make_color_wheel": [[54, 102], ["numpy.zeros", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.floor", "numpy.transpose", "numpy.floor", "numpy.transpose", "numpy.floor", "numpy.transpose", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange"], "function", ["None"], ["", "def", "make_color_wheel", "(", ")", ":", "\n", "    ", "\"\"\"\n    Generate color wheel according Middlebury color code\n    :return: Color wheel\n    \"\"\"", "\n", "RY", "=", "15", "\n", "YG", "=", "6", "\n", "GC", "=", "4", "\n", "CB", "=", "11", "\n", "BM", "=", "13", "\n", "MR", "=", "6", "\n", "\n", "ncols", "=", "RY", "+", "YG", "+", "GC", "+", "CB", "+", "BM", "+", "MR", "\n", "\n", "colorwheel", "=", "np", ".", "zeros", "(", "[", "ncols", ",", "3", "]", ")", "\n", "\n", "col", "=", "0", "\n", "\n", "# RY", "\n", "colorwheel", "[", "0", ":", "RY", ",", "0", "]", "=", "255", "\n", "colorwheel", "[", "0", ":", "RY", ",", "1", "]", "=", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "RY", ")", "/", "RY", ")", ")", "\n", "col", "+=", "RY", "\n", "\n", "# YG", "\n", "colorwheel", "[", "col", ":", "col", "+", "YG", ",", "0", "]", "=", "255", "-", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "YG", ")", "/", "YG", ")", ")", "\n", "colorwheel", "[", "col", ":", "col", "+", "YG", ",", "1", "]", "=", "255", "\n", "col", "+=", "YG", "\n", "\n", "# GC", "\n", "colorwheel", "[", "col", ":", "col", "+", "GC", ",", "1", "]", "=", "255", "\n", "colorwheel", "[", "col", ":", "col", "+", "GC", ",", "2", "]", "=", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "GC", ")", "/", "GC", ")", ")", "\n", "col", "+=", "GC", "\n", "\n", "# CB", "\n", "colorwheel", "[", "col", ":", "col", "+", "CB", ",", "1", "]", "=", "255", "-", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "CB", ")", "/", "CB", ")", ")", "\n", "colorwheel", "[", "col", ":", "col", "+", "CB", ",", "2", "]", "=", "255", "\n", "col", "+=", "CB", "\n", "\n", "# BM", "\n", "colorwheel", "[", "col", ":", "col", "+", "BM", ",", "2", "]", "=", "255", "\n", "colorwheel", "[", "col", ":", "col", "+", "BM", ",", "0", "]", "=", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "BM", ")", "/", "BM", ")", ")", "\n", "col", "+=", "+", "BM", "\n", "\n", "# MR", "\n", "colorwheel", "[", "col", ":", "col", "+", "MR", ",", "2", "]", "=", "255", "-", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "MR", ")", "/", "MR", ")", ")", "\n", "colorwheel", "[", "col", ":", "col", "+", "MR", ",", "0", "]", "=", "255", "\n", "\n", "return", "colorwheel", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.flow_to_png_middlebury": [[104, 143], ["flow.transpose.transpose", "max", "min", "max", "min", "numpy.sqrt", "max", "utils_misc.compute_color", "numpy.repeat", "numpy.uint8", "numpy.max", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "abs", "abs", "numpy.finfo", "numpy.finfo"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.compute_color"], ["", "def", "flow_to_png_middlebury", "(", "flow", ")", ":", "\n", "    ", "\"\"\"\n    Convert flow into middlebury color code image\n    :param flow: optical flow map\n    :return: optical flow image in middlebury color\n    \"\"\"", "\n", "\n", "flow", "=", "flow", ".", "transpose", "(", "[", "1", ",", "2", ",", "0", "]", ")", "\n", "u", "=", "flow", "[", ":", ",", ":", ",", "0", "]", "\n", "v", "=", "flow", "[", ":", ",", ":", ",", "1", "]", "\n", "\n", "maxu", "=", "-", "999.", "\n", "maxv", "=", "-", "999.", "\n", "minu", "=", "999.", "\n", "minv", "=", "999.", "\n", "\n", "idxUnknow", "=", "(", "abs", "(", "u", ")", ">", "UNKNOWN_FLOW_THRESH", ")", "|", "(", "abs", "(", "v", ")", ">", "UNKNOWN_FLOW_THRESH", ")", "\n", "u", "[", "idxUnknow", "]", "=", "0", "\n", "v", "[", "idxUnknow", "]", "=", "0", "\n", "\n", "maxu", "=", "max", "(", "maxu", ",", "np", ".", "max", "(", "u", ")", ")", "\n", "minu", "=", "min", "(", "minu", ",", "np", ".", "min", "(", "u", ")", ")", "\n", "\n", "maxv", "=", "max", "(", "maxv", ",", "np", ".", "max", "(", "v", ")", ")", "\n", "minv", "=", "min", "(", "minv", ",", "np", ".", "min", "(", "v", ")", ")", "\n", "\n", "rad", "=", "np", ".", "sqrt", "(", "u", "**", "2", "+", "v", "**", "2", ")", "\n", "maxrad", "=", "max", "(", "-", "1", ",", "np", ".", "max", "(", "rad", ")", ")", "\n", "# maxrad = 4", "\n", "\n", "u", "=", "u", "/", "(", "maxrad", "+", "np", ".", "finfo", "(", "float", ")", ".", "eps", ")", "\n", "v", "=", "v", "/", "(", "maxrad", "+", "np", ".", "finfo", "(", "float", ")", ".", "eps", ")", "\n", "\n", "img", "=", "compute_color", "(", "u", ",", "v", ")", "\n", "\n", "idx", "=", "np", ".", "repeat", "(", "idxUnknow", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", ",", "3", ",", "axis", "=", "2", ")", "\n", "img", "[", "idx", "]", "=", "0", "\n", "\n", "return", "np", ".", "uint8", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.numpy2torch": [[145, 152], ["isinstance", "torch.from_numpy().float", "numpy.transpose", "numpy.expand_dims", "torch.from_numpy", "np.expand_dims.copy"], "function", ["None"], ["", "def", "numpy2torch", "(", "array", ")", ":", "\n", "    ", "assert", "(", "isinstance", "(", "array", ",", "np", ".", "ndarray", ")", ")", "\n", "if", "array", ".", "ndim", "==", "3", ":", "\n", "        ", "array", "=", "np", ".", "transpose", "(", "array", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "        ", "array", "=", "np", ".", "expand_dims", "(", "array", ",", "axis", "=", "0", ")", "\n", "", "return", "torch", ".", "from_numpy", "(", "array", ".", "copy", "(", ")", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.get_pixelgrid": [[154, 166], ["torch.linspace().view().expand", "torch.linspace().view().expand", "torch.ones_like", "torch.cat().float().requires_grad_", "torch.cat().float().requires_grad_", "torch.linspace().view", "torch.linspace().view", "torch.cat().float", "torch.cat().float", "torch.linspace", "torch.linspace", "torch.cat", "torch.cat"], "function", ["None"], ["", "def", "get_pixelgrid", "(", "b", ",", "h", ",", "w", ",", "flow", "=", "None", ")", ":", "\n", "\n", "    ", "grid_h", "=", "torch", ".", "linspace", "(", "0.0", ",", "w", "-", "1", ",", "w", ")", ".", "view", "(", "1", ",", "1", ",", "1", ",", "w", ")", ".", "expand", "(", "b", ",", "1", ",", "h", ",", "w", ")", "\n", "grid_v", "=", "torch", ".", "linspace", "(", "0.0", ",", "h", "-", "1", ",", "h", ")", ".", "view", "(", "1", ",", "1", ",", "h", ",", "1", ")", ".", "expand", "(", "b", ",", "1", ",", "h", ",", "w", ")", "\n", "ones", "=", "torch", ".", "ones_like", "(", "grid_h", ")", "\n", "\n", "if", "flow", "is", "None", ":", "\n", "        ", "pixelgrid", "=", "torch", ".", "cat", "(", "(", "grid_h", ",", "grid_v", ",", "ones", ")", ",", "dim", "=", "1", ")", ".", "float", "(", ")", ".", "requires_grad_", "(", "False", ")", "\n", "", "else", ":", "\n", "        ", "pixelgrid", "=", "torch", ".", "cat", "(", "(", "grid_h", "+", "flow", "[", ":", ",", "0", ":", "1", ",", ":", ",", ":", "]", ",", "grid_v", "+", "flow", "[", ":", ",", "1", ":", "2", ",", ":", ",", ":", "]", ",", "ones", ")", ",", "dim", "=", "1", ")", ".", "float", "(", ")", ".", "requires_grad_", "(", "False", ")", "\n", "\n", "", "return", "pixelgrid", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts": [[168, 181], ["depth.size", "utils_misc.get_pixelgrid", "depth.view", "get_pixelgrid.view", "pts_mat.view", "torch.matmul", "torch.inverse"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.get_pixelgrid"], ["", "def", "pixel2pts", "(", "depth", ",", "intrinsic", ",", "flow", "=", "None", ")", ":", "\n", "\n", "    ", "b", ",", "_", ",", "h", ",", "w", "=", "depth", ".", "size", "(", ")", "\n", "pixelgrid", "=", "get_pixelgrid", "(", "b", ",", "h", ",", "w", ",", "flow", ")", "\n", "\n", "depth_mat", "=", "depth", ".", "view", "(", "b", ",", "1", ",", "-", "1", ")", "\n", "pixel_mat", "=", "pixelgrid", ".", "view", "(", "b", ",", "3", ",", "-", "1", ")", "\n", "\n", "pts_mat", "=", "torch", ".", "matmul", "(", "torch", ".", "inverse", "(", "intrinsic", ")", ",", "pixel_mat", ")", "*", "depth_mat", "\n", "\n", "pts", "=", "pts_mat", ".", "view", "(", "b", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "\n", "return", "pts", ",", "pixelgrid", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.disp2depth_kitti": [[182, 186], ["torch.clamp"], "function", ["None"], ["", "def", "disp2depth_kitti", "(", "pred_disp", ",", "focal_length", ")", ":", "\n", "    ", "pred_depth", "=", "focal_length", "*", "0.54", "/", "pred_disp", "\n", "pred_depth", "=", "torch", ".", "clamp", "(", "pred_depth", ",", "1e-3", ",", "80", ")", "\n", "return", "pred_depth", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts_ms": [[187, 192], ["utils_misc.disp2depth_kitti", "utils_misc.pixel2pts"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.disp2depth_kitti", "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts"], ["", "def", "pixel2pts_ms", "(", "output_disp", ",", "intrinsic", ",", "flow", "=", "None", ")", ":", "\n", "    ", "focal_length", "=", "intrinsic", "[", ":", ",", "0", ",", "0", "]", "\n", "output_depth", "=", "disp2depth_kitti", "(", "output_disp", ",", "focal_length", ")", "\n", "pts", ",", "_", "=", "pixel2pts", "(", "output_depth", ",", "intrinsic", ",", "flow", ")", "\n", "return", "pts", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.get_grid": [[194, 200], ["torch.linspace().view().expand", "torch.linspace().view().expand", "torch.cat", "torch.cat.float().requires_grad_", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "torch.linspace().view", "torch.linspace().view", "torch.cat.float", "x.size", "x.size", "torch.linspace", "torch.linspace", "x.size", "x.size"], "function", ["None"], ["", "def", "get_grid", "(", "x", ")", ":", "\n", "    ", "grid_H", "=", "torch", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "x", ".", "size", "(", "3", ")", ")", ".", "view", "(", "1", ",", "1", ",", "1", ",", "x", ".", "size", "(", "3", ")", ")", ".", "expand", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "grid_V", "=", "torch", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "x", ".", "size", "(", "2", ")", ")", ".", "view", "(", "1", ",", "1", ",", "x", ".", "size", "(", "2", ")", ",", "1", ")", ".", "expand", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "grid", "=", "torch", ".", "cat", "(", "[", "grid_H", ",", "grid_V", "]", ",", "1", ")", "\n", "grids_cuda", "=", "grid", ".", "float", "(", ")", ".", "requires_grad_", "(", "False", ")", "\n", "return", "grids_cuda", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.read_png_disp": [[202, 207], ["numpy.expand_dims", "skimage.imread().astype", "skimage.imread"], "function", ["None"], ["", "def", "read_png_disp", "(", "disp_file", ")", ":", "\n", "    ", "disp_np", "=", "io", ".", "imread", "(", "disp_file", ")", ".", "astype", "(", "np", ".", "uint16", ")", "/", "256.0", "\n", "disp_np", "=", "np", ".", "expand_dims", "(", "disp_np", ",", "axis", "=", "2", ")", "\n", "mask_disp", "=", "(", "disp_np", ">", "0", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "return", "disp_np", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.read_png_flow": [[208, 213], ["[].astype", "cv2.imread"], "function", ["None"], ["", "def", "read_png_flow", "(", "flow_file", ")", ":", "\n", "    ", "flow", "=", "cv2", ".", "imread", "(", "flow_file", ",", "cv2", ".", "IMREAD_ANYDEPTH", "|", "cv2", ".", "IMREAD_COLOR", ")", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", ".", "astype", "(", "np", ".", "float64", ")", "\n", "flow", ",", "valid", "=", "flow", "[", ":", ",", ":", ",", ":", "2", "]", ",", "flow", "[", ":", ",", ":", ",", "2", ":", "]", "\n", "flow", "=", "(", "flow", "-", "2", "**", "15", ")", "/", "64.0", "\n", "return", "flow", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.conv.__init__": [[10, 15], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_in_layers", ",", "num_out_layers", ",", "kernel_size", ",", "stride", ")", ":", "\n", "        ", "super", "(", "conv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "conv_base", "=", "nn", ".", "Conv2d", "(", "num_in_layers", ",", "num_out_layers", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ")", "\n", "self", ".", "normalize", "=", "nn", ".", "BatchNorm2d", "(", "num_out_layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.conv.forward": [[16, 22], ["int", "modules_monodepth.conv.conv_base", "modules_monodepth.conv.normalize", "torch.elu", "torch.elu", "torch.elu", "numpy.floor", "torch.pad", "torch.pad", "torch.pad"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "p", "=", "int", "(", "np", ".", "floor", "(", "(", "self", ".", "kernel_size", "-", "1", ")", "/", "2", ")", ")", "\n", "p2d", "=", "(", "p", ",", "p", ",", "p", ",", "p", ")", "\n", "x", "=", "self", ".", "conv_base", "(", "tf", ".", "pad", "(", "x", ",", "p2d", ")", ")", "\n", "x", "=", "self", ".", "normalize", "(", "x", ")", "\n", "return", "tf", ".", "elu", "(", "x", ",", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.convblock.__init__": [[25, 29], ["torch.Module.__init__", "modules_monodepth.conv", "modules_monodepth.conv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "num_in_layers", ",", "num_out_layers", ",", "kernel_size", ")", ":", "\n", "        ", "super", "(", "convblock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv", "(", "num_in_layers", ",", "num_out_layers", ",", "kernel_size", ",", "1", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "num_out_layers", ",", "num_out_layers", ",", "kernel_size", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.convblock.forward": [[30, 33], ["modules_monodepth.convblock.conv1", "modules_monodepth.convblock.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "return", "self", ".", "conv2", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.maxpool.__init__": [[36, 39], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "kernel_size", ")", ":", "\n", "        ", "super", "(", "maxpool", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.maxpool.forward": [[40, 44], ["int", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "numpy.floor", "torch.pad", "torch.pad", "torch.pad"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "p", "=", "int", "(", "np", ".", "floor", "(", "(", "self", ".", "kernel_size", "-", "1", ")", "/", "2", ")", ")", "\n", "p2d", "=", "(", "p", ",", "p", ",", "p", ",", "p", ")", "\n", "return", "tf", ".", "max_pool2d", "(", "tf", ".", "pad", "(", "x", ",", "p2d", ")", ",", "self", ".", "kernel_size", ",", "stride", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.resconv_basic.__init__": [[48, 56], ["torch.Module.__init__", "modules_monodepth.conv", "modules_monodepth.conv", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "num_in_layers", ",", "num_out_layers", ",", "stride", ")", ":", "\n", "        ", "super", "(", "resconv_basic", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_out_layers", "=", "num_out_layers", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "conv1", "=", "conv", "(", "num_in_layers", ",", "num_out_layers", ",", "3", ",", "stride", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "num_out_layers", ",", "num_out_layers", ",", "3", ",", "1", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "num_in_layers", ",", "num_out_layers", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ")", "\n", "self", ".", "normalize", "=", "nn", ".", "BatchNorm2d", "(", "num_out_layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.resconv_basic.forward": [[57, 67], ["modules_monodepth.resconv_basic.conv1", "modules_monodepth.resconv_basic.conv2", "torch.elu", "torch.elu", "torch.elu", "modules_monodepth.resconv_basic.conv3", "modules_monodepth.resconv_basic.normalize"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "do_proj", "=", "True", "\n", "shortcut", "=", "[", "]", "\n", "x_out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x_out", "=", "self", ".", "conv2", "(", "x_out", ")", "\n", "if", "do_proj", ":", "\n", "            ", "shortcut", "=", "self", ".", "conv3", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "shortcut", "=", "x", "\n", "", "return", "tf", ".", "elu", "(", "self", ".", "normalize", "(", "x_out", "+", "shortcut", ")", ",", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.upconv.__init__": [[78, 82], ["torch.Module.__init__", "modules_monodepth.conv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "num_in_layers", ",", "num_out_layers", ",", "kernel_size", ",", "scale", ")", ":", "\n", "        ", "super", "(", "upconv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "conv1", "=", "conv", "(", "num_in_layers", ",", "num_out_layers", ",", "kernel_size", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.upconv.forward": [[83, 86], ["torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "modules_monodepth.upconv.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "nn", ".", "functional", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "self", ".", "scale", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "return", "self", ".", "conv1", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.get_disp_1ch.__init__": [[89, 94], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_in_layers", ")", ":", "\n", "        ", "super", "(", "get_disp_1ch", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "num_in_layers", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "normalize", "=", "nn", ".", "BatchNorm2d", "(", "1", ")", "\n", "self", ".", "sigmoid", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.get_disp_1ch.forward": [[95, 101], ["modules_monodepth.get_disp_1ch.conv1", "modules_monodepth.get_disp_1ch.normalize", "torch.pad", "torch.pad", "torch.pad", "modules_monodepth.get_disp_1ch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "p", "=", "1", "\n", "p2d", "=", "(", "p", ",", "p", ",", "p", ",", "p", ")", "\n", "x", "=", "self", ".", "conv1", "(", "tf", ".", "pad", "(", "x", ",", "p2d", ")", ")", "\n", "x", "=", "self", ".", "normalize", "(", "x", ")", "\n", "return", "0.3", "*", "self", ".", "sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.Resnet18_MonoDepth_Single.__init__": [[104, 140], ["torch.Module.__init__", "modules_monodepth.conv", "modules_monodepth.maxpool", "modules_monodepth.resblock_basic", "modules_monodepth.resblock_basic", "modules_monodepth.resblock_basic", "modules_monodepth.resblock_basic", "modules_monodepth.upconv", "modules_monodepth.conv", "modules_monodepth.upconv", "modules_monodepth.conv", "modules_monodepth.upconv", "modules_monodepth.conv", "modules_monodepth.get_disp_1ch", "modules_monodepth.upconv", "modules_monodepth.conv", "modules_monodepth.get_disp_1ch", "modules_monodepth.upconv", "modules_monodepth.conv", "modules_monodepth.get_disp_1ch", "modules_monodepth.upconv", "modules_monodepth.conv", "modules_monodepth.get_disp_1ch", "modules_monodepth.Resnet18_MonoDepth_Single.modules", "isinstance", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.resblock_basic", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.resblock_basic", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.resblock_basic", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.resblock_basic", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Resnet18_MonoDepth_Single", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# encoder", "\n", "self", ".", "conv1", "=", "conv", "(", "3", ",", "64", ",", "7", ",", "2", ")", "# H/2  -   64D", "\n", "self", ".", "pool1", "=", "maxpool", "(", "3", ")", "# H/4  -   64D", "\n", "self", ".", "conv2", "=", "resblock_basic", "(", "64", ",", "64", ",", "2", ",", "2", ")", "# H/8  -  64D", "\n", "self", ".", "conv3", "=", "resblock_basic", "(", "64", ",", "128", ",", "2", ",", "2", ")", "# H/16 -  128D", "\n", "self", ".", "conv4", "=", "resblock_basic", "(", "128", ",", "256", ",", "2", ",", "2", ")", "# H/32 - 256D", "\n", "self", ".", "conv5", "=", "resblock_basic", "(", "256", ",", "512", ",", "2", ",", "2", ")", "# H/64 - 512D", "\n", "\n", "# decoder", "\n", "self", ".", "upconv6", "=", "upconv", "(", "512", ",", "512", ",", "3", ",", "2", ")", "\n", "self", ".", "iconv6", "=", "conv", "(", "256", "+", "512", ",", "512", ",", "3", ",", "1", ")", "\n", "\n", "self", ".", "upconv5", "=", "upconv", "(", "512", ",", "256", ",", "3", ",", "2", ")", "\n", "self", ".", "iconv5", "=", "conv", "(", "128", "+", "256", ",", "256", ",", "3", ",", "1", ")", "\n", "\n", "self", ".", "upconv4", "=", "upconv", "(", "256", ",", "128", ",", "3", ",", "2", ")", "\n", "self", ".", "iconv4", "=", "conv", "(", "64", "+", "128", ",", "128", ",", "3", ",", "1", ")", "\n", "self", ".", "disp4_layer", "=", "get_disp_1ch", "(", "128", ")", "\n", "\n", "self", ".", "upconv3", "=", "upconv", "(", "128", ",", "64", ",", "3", ",", "2", ")", "\n", "self", ".", "iconv3", "=", "conv", "(", "64", "+", "64", "+", "1", ",", "64", ",", "3", ",", "1", ")", "\n", "self", ".", "disp3_layer", "=", "get_disp_1ch", "(", "64", ")", "\n", "\n", "self", ".", "upconv2", "=", "upconv", "(", "64", ",", "32", ",", "3", ",", "2", ")", "\n", "self", ".", "iconv2", "=", "conv", "(", "64", "+", "32", "+", "1", ",", "32", ",", "3", ",", "1", ")", "\n", "self", ".", "disp2_layer", "=", "get_disp_1ch", "(", "32", ")", "\n", "\n", "self", ".", "upconv1", "=", "upconv", "(", "32", ",", "16", ",", "3", ",", "2", ")", "\n", "self", ".", "iconv1", "=", "conv", "(", "16", "+", "1", ",", "16", ",", "3", ",", "1", ")", "\n", "self", ".", "disp1_layer", "=", "get_disp_1ch", "(", "16", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.Resnet18_MonoDepth_Single.forward": [[141, 189], ["modules_monodepth.Resnet18_MonoDepth_Single.conv1", "modules_monodepth.Resnet18_MonoDepth_Single.pool1", "modules_monodepth.Resnet18_MonoDepth_Single.conv2", "modules_monodepth.Resnet18_MonoDepth_Single.conv3", "modules_monodepth.Resnet18_MonoDepth_Single.conv4", "modules_monodepth.Resnet18_MonoDepth_Single.conv5", "modules_monodepth.Resnet18_MonoDepth_Single.upconv6", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_monodepth.Resnet18_MonoDepth_Single.iconv6", "modules_monodepth.Resnet18_MonoDepth_Single.upconv5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_monodepth.Resnet18_MonoDepth_Single.iconv5", "modules_monodepth.Resnet18_MonoDepth_Single.upconv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_monodepth.Resnet18_MonoDepth_Single.iconv4", "modules_monodepth.Resnet18_MonoDepth_Single.disp4_layer", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "modules_monodepth.Resnet18_MonoDepth_Single.upconv3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_monodepth.Resnet18_MonoDepth_Single.iconv3", "modules_monodepth.Resnet18_MonoDepth_Single.disp3_layer", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "modules_monodepth.Resnet18_MonoDepth_Single.upconv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_monodepth.Resnet18_MonoDepth_Single.iconv2", "modules_monodepth.Resnet18_MonoDepth_Single.disp2_layer", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "modules_monodepth.Resnet18_MonoDepth_Single.upconv1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_monodepth.Resnet18_MonoDepth_Single.iconv1", "modules_monodepth.Resnet18_MonoDepth_Single.disp1_layer"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# encoder", "\n", "        ", "x1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x_pool1", "=", "self", ".", "pool1", "(", "x1", ")", "\n", "x2", "=", "self", ".", "conv2", "(", "x_pool1", ")", "\n", "x3", "=", "self", ".", "conv3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "conv4", "(", "x3", ")", "\n", "x5", "=", "self", ".", "conv5", "(", "x4", ")", "\n", "\n", "# skips", "\n", "skip1", "=", "x1", "\n", "skip2", "=", "x_pool1", "\n", "skip3", "=", "x2", "\n", "skip4", "=", "x3", "\n", "skip5", "=", "x4", "\n", "\n", "# decoder", "\n", "upconv6", "=", "self", ".", "upconv6", "(", "x5", ")", "\n", "concat6", "=", "torch", ".", "cat", "(", "(", "upconv6", ",", "skip5", ")", ",", "1", ")", "\n", "iconv6", "=", "self", ".", "iconv6", "(", "concat6", ")", "\n", "\n", "upconv5", "=", "self", ".", "upconv5", "(", "iconv6", ")", "\n", "concat5", "=", "torch", ".", "cat", "(", "(", "upconv5", ",", "skip4", ")", ",", "1", ")", "\n", "iconv5", "=", "self", ".", "iconv5", "(", "concat5", ")", "\n", "\n", "upconv4", "=", "self", ".", "upconv4", "(", "iconv5", ")", "\n", "concat4", "=", "torch", ".", "cat", "(", "(", "upconv4", ",", "skip3", ")", ",", "1", ")", "\n", "iconv4", "=", "self", ".", "iconv4", "(", "concat4", ")", "\n", "self", ".", "disp4", "=", "self", ".", "disp4_layer", "(", "iconv4", ")", "\n", "self", ".", "udisp4", "=", "nn", ".", "functional", ".", "interpolate", "(", "self", ".", "disp4", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "upconv3", "=", "self", ".", "upconv3", "(", "iconv4", ")", "\n", "concat3", "=", "torch", ".", "cat", "(", "(", "upconv3", ",", "skip2", ",", "self", ".", "udisp4", ")", ",", "1", ")", "\n", "iconv3", "=", "self", ".", "iconv3", "(", "concat3", ")", "\n", "self", ".", "disp3", "=", "self", ".", "disp3_layer", "(", "iconv3", ")", "\n", "self", ".", "udisp3", "=", "nn", ".", "functional", ".", "interpolate", "(", "self", ".", "disp3", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "upconv2", "=", "self", ".", "upconv2", "(", "iconv3", ")", "\n", "concat2", "=", "torch", ".", "cat", "(", "(", "upconv2", ",", "skip1", ",", "self", ".", "udisp3", ")", ",", "1", ")", "\n", "iconv2", "=", "self", ".", "iconv2", "(", "concat2", ")", "\n", "self", ".", "disp2", "=", "self", ".", "disp2_layer", "(", "iconv2", ")", "\n", "self", ".", "udisp2", "=", "nn", ".", "functional", ".", "interpolate", "(", "self", ".", "disp2", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "upconv1", "=", "self", ".", "upconv1", "(", "iconv2", ")", "\n", "concat1", "=", "torch", ".", "cat", "(", "(", "upconv1", ",", "self", ".", "udisp2", ")", ",", "1", ")", "\n", "iconv1", "=", "self", ".", "iconv1", "(", "concat1", ")", "\n", "self", ".", "disp1", "=", "self", ".", "disp1_layer", "(", "iconv1", ")", "\n", "return", "self", ".", "disp1", ",", "self", ".", "disp2", ",", "self", ".", "disp3", ",", "self", ".", "disp4", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.Resnet18_MonoDepth_Single_CamConv.__init__": [[192, 230], ["torch.Module.__init__", "modules_monodepth.conv", "modules_monodepth.maxpool", "modules_monodepth.resblock_basic", "modules_monodepth.resblock_basic", "modules_monodepth.resblock_basic", "modules_monodepth.resblock_basic", "modules_monodepth.upconv", "modules_monodepth.conv", "modules_monodepth.upconv", "modules_monodepth.conv", "modules_monodepth.upconv", "modules_monodepth.conv", "modules_monodepth.get_disp_1ch", "modules_monodepth.upconv", "modules_monodepth.conv", "modules_monodepth.get_disp_1ch", "modules_monodepth.upconv", "modules_monodepth.conv", "modules_monodepth.get_disp_1ch", "modules_monodepth.upconv", "modules_monodepth.conv", "modules_monodepth.get_disp_1ch", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.modules", "modules_camconv.CamConvModule", "isinstance", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.resblock_basic", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.resblock_basic", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.resblock_basic", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.resblock_basic", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Resnet18_MonoDepth_Single_CamConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# encoder", "\n", "self", ".", "conv1", "=", "conv", "(", "3", ",", "64", ",", "7", ",", "2", ")", "# H/2  -   64D", "\n", "self", ".", "pool1", "=", "maxpool", "(", "3", ")", "# H/4  -   64D", "\n", "self", ".", "conv2", "=", "resblock_basic", "(", "64", ",", "64", ",", "2", ",", "2", ")", "# H/8  -  64D", "\n", "self", ".", "conv3", "=", "resblock_basic", "(", "64", ",", "128", ",", "2", ",", "2", ")", "# H/16 -  128D", "\n", "self", ".", "conv4", "=", "resblock_basic", "(", "128", ",", "256", ",", "2", ",", "2", ")", "# H/32 - 256D", "\n", "self", ".", "conv5", "=", "resblock_basic", "(", "256", ",", "512", ",", "2", ",", "2", ")", "# H/64 - 512D", "\n", "\n", "# decoder", "\n", "self", ".", "upconv6", "=", "upconv", "(", "512", "+", "6", ",", "512", ",", "3", ",", "2", ")", "\n", "self", ".", "iconv6", "=", "conv", "(", "256", "+", "512", "+", "6", ",", "512", ",", "3", ",", "1", ")", "\n", "\n", "self", ".", "upconv5", "=", "upconv", "(", "512", ",", "256", ",", "3", ",", "2", ")", "\n", "self", ".", "iconv5", "=", "conv", "(", "128", "+", "256", "+", "6", ",", "256", ",", "3", ",", "1", ")", "\n", "\n", "self", ".", "upconv4", "=", "upconv", "(", "256", ",", "128", ",", "3", ",", "2", ")", "\n", "self", ".", "iconv4", "=", "conv", "(", "64", "+", "128", "+", "6", ",", "128", ",", "3", ",", "1", ")", "\n", "self", ".", "disp4_layer", "=", "get_disp_1ch", "(", "128", ")", "\n", "\n", "self", ".", "upconv3", "=", "upconv", "(", "128", ",", "64", ",", "3", ",", "2", ")", "\n", "self", ".", "iconv3", "=", "conv", "(", "64", "+", "64", "+", "1", "+", "6", ",", "64", ",", "3", ",", "1", ")", "\n", "self", ".", "disp3_layer", "=", "get_disp_1ch", "(", "64", ")", "\n", "\n", "self", ".", "upconv2", "=", "upconv", "(", "64", ",", "32", ",", "3", ",", "2", ")", "\n", "self", ".", "iconv2", "=", "conv", "(", "64", "+", "32", "+", "1", "+", "6", ",", "32", ",", "3", ",", "1", ")", "\n", "self", ".", "disp2_layer", "=", "get_disp_1ch", "(", "32", ")", "\n", "\n", "self", ".", "upconv1", "=", "upconv", "(", "32", ",", "16", ",", "3", ",", "2", ")", "\n", "self", ".", "iconv1", "=", "conv", "(", "16", "+", "1", ",", "16", ",", "3", ",", "1", ")", "\n", "self", ".", "disp1_layer", "=", "get_disp_1ch", "(", "16", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ")", "\n", "\n", "", "", "self", ".", "camconv", "=", "CamConvModule", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.Resnet18_MonoDepth_Single_CamConv.forward": [[231, 281], ["modules_monodepth.Resnet18_MonoDepth_Single_CamConv.conv1", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.pool1", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.conv2", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.conv3", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.conv4", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.conv5", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.camconv", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.camconv", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.camconv", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.camconv", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.camconv", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.upconv6", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.iconv6", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.upconv5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.iconv5", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.upconv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.iconv4", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.disp4_layer", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.upconv3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.iconv3", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.disp3_layer", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.upconv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.iconv2", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.disp2_layer", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.upconv1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.iconv1", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.disp1_layer", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv.camconv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "intrinsic", ")", ":", "\n", "\n", "# encoder", "\n", "        ", "x1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x_pool1", "=", "self", ".", "pool1", "(", "x1", ")", "\n", "x2", "=", "self", ".", "conv2", "(", "x_pool1", ")", "\n", "x3", "=", "self", ".", "conv3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "conv4", "(", "x3", ")", "\n", "x5", "=", "self", ".", "conv5", "(", "x4", ")", "\n", "\n", "# skips", "\n", "skip1", "=", "self", ".", "camconv", "(", "x1", ",", "x", ",", "intrinsic", ")", "\n", "skip2", "=", "self", ".", "camconv", "(", "x_pool1", ")", "\n", "skip3", "=", "self", ".", "camconv", "(", "x2", ")", "\n", "skip4", "=", "self", ".", "camconv", "(", "x3", ")", "\n", "skip5", "=", "self", ".", "camconv", "(", "x4", ")", "\n", "\n", "# decoder", "\n", "upconv6", "=", "self", ".", "upconv6", "(", "self", ".", "camconv", "(", "x5", ")", ")", "\n", "concat6", "=", "torch", ".", "cat", "(", "(", "upconv6", ",", "skip5", ")", ",", "1", ")", "\n", "iconv6", "=", "self", ".", "iconv6", "(", "concat6", ")", "\n", "\n", "upconv5", "=", "self", ".", "upconv5", "(", "iconv6", ")", "\n", "concat5", "=", "torch", ".", "cat", "(", "(", "upconv5", ",", "skip4", ")", ",", "1", ")", "\n", "iconv5", "=", "self", ".", "iconv5", "(", "concat5", ")", "\n", "\n", "upconv4", "=", "self", ".", "upconv4", "(", "iconv5", ")", "\n", "concat4", "=", "torch", ".", "cat", "(", "(", "upconv4", ",", "skip3", ")", ",", "1", ")", "\n", "iconv4", "=", "self", ".", "iconv4", "(", "concat4", ")", "\n", "self", ".", "disp4", "=", "self", ".", "disp4_layer", "(", "iconv4", ")", "\n", "self", ".", "udisp4", "=", "nn", ".", "functional", ".", "interpolate", "(", "self", ".", "disp4", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "upconv3", "=", "self", ".", "upconv3", "(", "iconv4", ")", "\n", "concat3", "=", "torch", ".", "cat", "(", "(", "upconv3", ",", "skip2", ",", "self", ".", "udisp4", ")", ",", "1", ")", "\n", "iconv3", "=", "self", ".", "iconv3", "(", "concat3", ")", "\n", "self", ".", "disp3", "=", "self", ".", "disp3_layer", "(", "iconv3", ")", "\n", "self", ".", "udisp3", "=", "nn", ".", "functional", ".", "interpolate", "(", "self", ".", "disp3", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "upconv2", "=", "self", ".", "upconv2", "(", "iconv3", ")", "\n", "concat2", "=", "torch", ".", "cat", "(", "(", "upconv2", ",", "skip1", ",", "self", ".", "udisp3", ")", ",", "1", ")", "\n", "iconv2", "=", "self", ".", "iconv2", "(", "concat2", ")", "\n", "self", ".", "disp2", "=", "self", ".", "disp2_layer", "(", "iconv2", ")", "\n", "self", ".", "udisp2", "=", "nn", ".", "functional", ".", "interpolate", "(", "self", ".", "disp2", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "upconv1", "=", "self", ".", "upconv1", "(", "iconv2", ")", "\n", "concat1", "=", "torch", ".", "cat", "(", "(", "upconv1", ",", "self", ".", "udisp2", ")", ",", "1", ")", "\n", "iconv1", "=", "self", ".", "iconv1", "(", "concat1", ")", "\n", "self", ".", "disp1", "=", "self", ".", "disp1_layer", "(", "iconv1", ")", "\n", "\n", "return", "self", ".", "disp1", ",", "self", ".", "disp2", ",", "self", ".", "disp3", ",", "self", ".", "disp4", "", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_monodepth.resblock_basic": [[69, 75], ["layers.append", "range", "torch.Sequential", "modules_monodepth.resconv_basic", "layers.append", "modules_monodepth.resconv_basic"], "function", ["None"], ["", "", "def", "resblock_basic", "(", "num_in_layers", ",", "num_out_layers", ",", "num_blocks", ",", "stride", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "resconv_basic", "(", "num_in_layers", ",", "num_out_layers", ",", "stride", ")", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "num_blocks", ")", ":", "\n", "        ", "layers", ".", "append", "(", "resconv_basic", "(", "num_out_layers", ",", "num_out_layers", ",", "1", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow.MonoSceneFlow.__init__": [[20, 57], ["torch.Module.__init__", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "modules_sceneflow.FeatureExtractor", "modules_sceneflow.WarpingLayer_SF", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "enumerate", "modules_sceneflow.ContextNetwork", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "modules_sceneflow.initialize_msra", "modules_sceneflow.MonoSceneFlowDecoder", "model_monosceneflow.MonoSceneFlow.flow_estimators.append", "model_monosceneflow.MonoSceneFlow.modules", "model_monosceneflow.MonoSceneFlow.upconv_layers.append", "modules_sceneflow.upconv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.initialize_msra"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "MonoSceneFlow", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_args", "=", "args", "\n", "self", ".", "num_chs", "=", "[", "3", ",", "32", ",", "64", ",", "96", ",", "128", ",", "192", ",", "256", "]", "\n", "self", ".", "search_range", "=", "4", "\n", "self", ".", "output_level", "=", "4", "\n", "self", ".", "num_levels", "=", "7", "\n", "\n", "self", ".", "leakyRELU", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "feature_pyramid_extractor", "=", "FeatureExtractor", "(", "self", ".", "num_chs", ")", "\n", "self", ".", "warping_layer_sf", "=", "WarpingLayer_SF", "(", ")", "\n", "\n", "self", ".", "flow_estimators", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "upconv_layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "self", ".", "dim_corr", "=", "(", "self", ".", "search_range", "*", "2", "+", "1", ")", "**", "2", "\n", "\n", "for", "l", ",", "ch", "in", "enumerate", "(", "self", ".", "num_chs", "[", ":", ":", "-", "1", "]", ")", ":", "\n", "            ", "if", "l", ">", "self", ".", "output_level", ":", "\n", "                ", "break", "\n", "\n", "", "if", "l", "==", "0", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "\n", "", "else", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "+", "32", "+", "3", "+", "1", "\n", "self", ".", "upconv_layers", ".", "append", "(", "upconv", "(", "32", ",", "32", ",", "3", ",", "2", ")", ")", "\n", "\n", "", "layer_sf", "=", "MonoSceneFlowDecoder", "(", "num_ch_in", ")", "\n", "self", ".", "flow_estimators", ".", "append", "(", "layer_sf", ")", "\n", "\n", "", "self", ".", "corr_params", "=", "{", "\"pad_size\"", ":", "self", ".", "search_range", ",", "\"kernel_size\"", ":", "1", ",", "\"max_disp\"", ":", "self", ".", "search_range", ",", "\"stride1\"", ":", "1", ",", "\"stride2\"", ":", "1", ",", "\"corr_multiply\"", ":", "1", "}", "\n", "self", ".", "context_networks", "=", "ContextNetwork", "(", "32", "+", "3", "+", "1", ")", "\n", "self", ".", "sigmoid", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "\n", "initialize_msra", "(", "self", ".", "modules", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow.MonoSceneFlow.run_pwc": [[58, 131], ["enumerate", "modules_sceneflow.upsample_outputs_as", "modules_sceneflow.upsample_outputs_as", "modules_sceneflow.upsample_outputs_as", "modules_sceneflow.upsample_outputs_as", "model_monosceneflow.MonoSceneFlow.feature_pyramid_extractor", "model_monosceneflow.MonoSceneFlow.feature_pyramid_extractor", "zip", "correlation_package.correlation.Correlation.apply", "correlation_package.correlation.Correlation.apply", "model_monosceneflow.MonoSceneFlow.leakyRELU", "model_monosceneflow.MonoSceneFlow.leakyRELU", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "model_monosceneflow.MonoSceneFlow.warping_layer_sf", "model_monosceneflow.MonoSceneFlow.warping_layer_sf", "sceneflows_f.append", "sceneflows_b.append", "disps_1.append", "disps_2.append", "model_monosceneflow.MonoSceneFlow.context_networks", "model_monosceneflow.MonoSceneFlow.context_networks", "sceneflows_f.append", "sceneflows_b.append", "disps_1.append", "disps_2.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_monosceneflow.MonoSceneFlow.sigmoid", "model_monosceneflow.MonoSceneFlow.sigmoid", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as"], ["", "def", "run_pwc", "(", "self", ",", "input_dict", ",", "x1_raw", ",", "x2_raw", ",", "k1", ",", "k2", ")", ":", "\n", "\n", "        ", "output_dict", "=", "{", "}", "\n", "\n", "# on the bottom level are original images", "\n", "x1_pyramid", "=", "self", ".", "feature_pyramid_extractor", "(", "x1_raw", ")", "+", "[", "x1_raw", "]", "\n", "x2_pyramid", "=", "self", ".", "feature_pyramid_extractor", "(", "x2_raw", ")", "+", "[", "x2_raw", "]", "\n", "\n", "# outputs", "\n", "sceneflows_f", "=", "[", "]", "\n", "sceneflows_b", "=", "[", "]", "\n", "disps_1", "=", "[", "]", "\n", "disps_2", "=", "[", "]", "\n", "\n", "for", "l", ",", "(", "x1", ",", "x2", ")", "in", "enumerate", "(", "zip", "(", "x1_pyramid", ",", "x2_pyramid", ")", ")", ":", "\n", "\n", "# warping", "\n", "            ", "if", "l", "==", "0", ":", "\n", "                ", "x2_warp", "=", "x2", "\n", "x1_warp", "=", "x1", "\n", "", "else", ":", "\n", "                ", "flow_f", "=", "interpolate2d_as", "(", "flow_f", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "flow_b", "=", "interpolate2d_as", "(", "flow_b", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "disp_l1", "=", "interpolate2d_as", "(", "disp_l1", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "disp_l2", "=", "interpolate2d_as", "(", "disp_l2", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "x1_out", "=", "self", ".", "upconv_layers", "[", "l", "-", "1", "]", "(", "x1_out", ")", "\n", "x2_out", "=", "self", ".", "upconv_layers", "[", "l", "-", "1", "]", "(", "x2_out", ")", "\n", "x2_warp", "=", "self", ".", "warping_layer_sf", "(", "x2", ",", "flow_f", ",", "disp_l1", ",", "k1", ",", "input_dict", "[", "'aug_size'", "]", ")", "# becuase K can be changing when doing augmentation", "\n", "x1_warp", "=", "self", ".", "warping_layer_sf", "(", "x1", ",", "flow_b", ",", "disp_l2", ",", "k2", ",", "input_dict", "[", "'aug_size'", "]", ")", "\n", "\n", "# correlation", "\n", "", "out_corr_f", "=", "Correlation", ".", "apply", "(", "x1", ",", "x2_warp", ",", "self", ".", "corr_params", ")", "\n", "out_corr_b", "=", "Correlation", ".", "apply", "(", "x2", ",", "x1_warp", ",", "self", ".", "corr_params", ")", "\n", "out_corr_relu_f", "=", "self", ".", "leakyRELU", "(", "out_corr_f", ")", "\n", "out_corr_relu_b", "=", "self", ".", "leakyRELU", "(", "out_corr_b", ")", "\n", "\n", "# monosf estimator", "\n", "if", "l", "==", "0", ":", "\n", "                ", "x1_out", ",", "flow_f", ",", "disp_l1", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_f", ",", "x1", "]", ",", "dim", "=", "1", ")", ")", "\n", "x2_out", ",", "flow_b", ",", "disp_l2", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_b", ",", "x2", "]", ",", "dim", "=", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "x1_out", ",", "flow_f_res", ",", "disp_l1", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_f", ",", "x1", ",", "x1_out", ",", "flow_f", ",", "disp_l1", "]", ",", "dim", "=", "1", ")", ")", "\n", "x2_out", ",", "flow_b_res", ",", "disp_l2", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_b", ",", "x2", ",", "x2_out", ",", "flow_b", ",", "disp_l2", "]", ",", "dim", "=", "1", ")", ")", "\n", "flow_f", "=", "flow_f", "+", "flow_f_res", "\n", "flow_b", "=", "flow_b", "+", "flow_b_res", "\n", "\n", "# upsampling or post-processing", "\n", "", "if", "l", "!=", "self", ".", "output_level", ":", "\n", "                ", "disp_l1", "=", "self", ".", "sigmoid", "(", "disp_l1", ")", "*", "0.3", "\n", "disp_l2", "=", "self", ".", "sigmoid", "(", "disp_l2", ")", "*", "0.3", "\n", "sceneflows_f", ".", "append", "(", "flow_f", ")", "\n", "sceneflows_b", ".", "append", "(", "flow_b", ")", "\n", "disps_1", ".", "append", "(", "disp_l1", ")", "\n", "disps_2", ".", "append", "(", "disp_l2", ")", "\n", "", "else", ":", "\n", "                ", "flow_res_f", ",", "disp_l1", "=", "self", ".", "context_networks", "(", "torch", ".", "cat", "(", "[", "x1_out", ",", "flow_f", ",", "disp_l1", "]", ",", "dim", "=", "1", ")", ")", "\n", "flow_res_b", ",", "disp_l2", "=", "self", ".", "context_networks", "(", "torch", ".", "cat", "(", "[", "x2_out", ",", "flow_b", ",", "disp_l2", "]", ",", "dim", "=", "1", ")", ")", "\n", "flow_f", "=", "flow_f", "+", "flow_res_f", "\n", "flow_b", "=", "flow_b", "+", "flow_res_b", "\n", "sceneflows_f", ".", "append", "(", "flow_f", ")", "\n", "sceneflows_b", ".", "append", "(", "flow_b", ")", "\n", "disps_1", ".", "append", "(", "disp_l1", ")", "\n", "disps_2", ".", "append", "(", "disp_l2", ")", "\n", "break", "\n", "\n", "", "", "x1_rev", "=", "x1_pyramid", "[", ":", ":", "-", "1", "]", "\n", "\n", "output_dict", "[", "'flow_f'", "]", "=", "upsample_outputs_as", "(", "sceneflows_f", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "output_dict", "[", "'flow_b'", "]", "=", "upsample_outputs_as", "(", "sceneflows_b", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "output_dict", "[", "'disp_l1'", "]", "=", "upsample_outputs_as", "(", "disps_1", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "output_dict", "[", "'disp_l2'", "]", "=", "upsample_outputs_as", "(", "disps_2", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "\n", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow.MonoSceneFlow.forward": [[133, 189], ["model_monosceneflow.MonoSceneFlow.run_pwc", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "model_monosceneflow.MonoSceneFlow.run_pwc", "range", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "model_monosceneflow.MonoSceneFlow.run_pwc", "range", "len", "utils.sceneflow_util.flow_horizontal_flip", "utils.sceneflow_util.flow_horizontal_flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "len", "flow_f_pp.append", "flow_b_pp.append", "disp_l1_pp.append", "disp_l2_pp.append", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.flow_horizontal_flip", "utils.sceneflow_util.flow_horizontal_flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip"], ["", "def", "forward", "(", "self", ",", "input_dict", ")", ":", "\n", "\n", "        ", "output_dict", "=", "{", "}", "\n", "\n", "## Left", "\n", "output_dict", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_dict", "[", "'input_l1_aug'", "]", ",", "input_dict", "[", "'input_l2_aug'", "]", ",", "input_dict", "[", "'input_k_l1_aug'", "]", ",", "input_dict", "[", "'input_k_l2_aug'", "]", ")", "\n", "\n", "## Right", "\n", "## ss: train val ", "\n", "## ft: train ", "\n", "if", "self", ".", "training", "or", "(", "not", "self", ".", "_args", ".", "finetuning", "and", "not", "self", ".", "_args", ".", "evaluation", ")", ":", "\n", "            ", "input_r1_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_r1_aug'", "]", ",", "[", "3", "]", ")", "\n", "input_r2_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_r2_aug'", "]", ",", "[", "3", "]", ")", "\n", "k_r1_flip", "=", "input_dict", "[", "\"input_k_r1_flip_aug\"", "]", "\n", "k_r2_flip", "=", "input_dict", "[", "\"input_k_r2_flip_aug\"", "]", "\n", "\n", "output_dict_r", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_r1_flip", ",", "input_r2_flip", ",", "k_r1_flip", ",", "k_r2_flip", ")", "\n", "\n", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict_r", "[", "'flow_f'", "]", ")", ")", ":", "\n", "                ", "output_dict_r", "[", "'flow_f'", "]", "[", "ii", "]", "=", "flow_horizontal_flip", "(", "output_dict_r", "[", "'flow_f'", "]", "[", "ii", "]", ")", "\n", "output_dict_r", "[", "'flow_b'", "]", "[", "ii", "]", "=", "flow_horizontal_flip", "(", "output_dict_r", "[", "'flow_b'", "]", "[", "ii", "]", ")", "\n", "output_dict_r", "[", "'disp_l1'", "]", "[", "ii", "]", "=", "torch", ".", "flip", "(", "output_dict_r", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", "\n", "output_dict_r", "[", "'disp_l2'", "]", "[", "ii", "]", "=", "torch", ".", "flip", "(", "output_dict_r", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", "\n", "\n", "", "output_dict", "[", "'output_dict_r'", "]", "=", "output_dict_r", "\n", "\n", "## Post Processing ", "\n", "## ss:           eval", "\n", "## ft: train val eval", "\n", "", "if", "self", ".", "_args", ".", "evaluation", "or", "self", ".", "_args", ".", "finetuning", ":", "\n", "\n", "            ", "input_l1_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_l1_aug'", "]", ",", "[", "3", "]", ")", "\n", "input_l2_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_l2_aug'", "]", ",", "[", "3", "]", ")", "\n", "k_l1_flip", "=", "input_dict", "[", "\"input_k_l1_flip_aug\"", "]", "\n", "k_l2_flip", "=", "input_dict", "[", "\"input_k_l2_flip_aug\"", "]", "\n", "\n", "output_dict_flip", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_l1_flip", ",", "input_l2_flip", ",", "k_l1_flip", ",", "k_l2_flip", ")", "\n", "\n", "flow_f_pp", "=", "[", "]", "\n", "flow_b_pp", "=", "[", "]", "\n", "disp_l1_pp", "=", "[", "]", "\n", "disp_l2_pp", "=", "[", "]", "\n", "\n", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict_flip", "[", "'flow_f'", "]", ")", ")", ":", "\n", "\n", "                ", "flow_f_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'flow_f'", "]", "[", "ii", "]", ",", "flow_horizontal_flip", "(", "output_dict_flip", "[", "'flow_f'", "]", "[", "ii", "]", ")", ")", ")", "\n", "flow_b_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'flow_b'", "]", "[", "ii", "]", ",", "flow_horizontal_flip", "(", "output_dict_flip", "[", "'flow_b'", "]", "[", "ii", "]", ")", ")", ")", "\n", "disp_l1_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "torch", ".", "flip", "(", "output_dict_flip", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", ")", ")", "\n", "disp_l2_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "torch", ".", "flip", "(", "output_dict_flip", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", ")", ")", "\n", "\n", "", "output_dict", "[", "'flow_f_pp'", "]", "=", "flow_f_pp", "\n", "output_dict", "[", "'flow_b_pp'", "]", "=", "flow_b_pp", "\n", "output_dict", "[", "'disp_l1_pp'", "]", "=", "disp_l1_pp", "\n", "output_dict", "[", "'disp_l2_pp'", "]", "=", "disp_l2_pp", "\n", "\n", "", "return", "output_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.__init__": [[9, 25], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "norm_const", "=", "256.0", ")", ":", "\n", "        ", "super", "(", "CamConvModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_inputimg_size", "=", "None", "\n", "self", ".", "_norm_const", "=", "norm_const", "\n", "\n", "self", ".", "_fx", "=", "None", "\n", "self", ".", "_fy", "=", "None", "\n", "self", ".", "_cx", "=", "None", "\n", "self", ".", "_cy", "=", "None", "\n", "\n", "self", ".", "_grid_w", "=", "None", "\n", "self", ".", "_grid_h", "=", "None", "\n", "self", ".", "_norm_coord", "=", "None", "\n", "self", ".", "_centered_coord", "=", "None", "\n", "self", ".", "_fov_maps", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.ue_as": [[27, 29], ["input_tensor.unsqueeze().unsqueeze().unsqueeze().expand().clone", "input_tensor.unsqueeze().unsqueeze().unsqueeze().expand", "target_as.size", "input_tensor.unsqueeze().unsqueeze().unsqueeze", "input_tensor.unsqueeze().unsqueeze", "input_tensor.unsqueeze"], "methods", ["None"], ["", "def", "ue_as", "(", "self", ",", "input_tensor", ",", "target_as", ")", ":", "\n", "        ", "return", "input_tensor", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "target_as", ".", "size", "(", ")", ")", ".", "clone", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.interpolate2d": [[30, 32], ["torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "interpolate2d", "(", "self", ",", "inputs", ",", "h", ",", "w", ",", "mode", "=", "\"bilinear\"", ")", ":", "\n", "        ", "return", "tf", ".", "interpolate", "(", "inputs", ",", "[", "h", ",", "w", "]", ",", "mode", "=", "mode", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.calculate_CoordConv": [[33, 44], ["torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand.float().requires_grad_().cuda", "torch.linspace().view().expand.float().requires_grad_().cuda", "torch.linspace().view().expand.float().requires_grad_().cuda", "torch.linspace().view().expand.float().requires_grad_().cuda", "torch.linspace().view().expand.float().requires_grad_().cuda", "torch.linspace().view().expand.float().requires_grad_().cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view().expand.float().requires_grad_", "torch.linspace().view().expand.float().requires_grad_", "torch.linspace().view().expand.float().requires_grad_", "torch.linspace().view().expand.float().requires_grad_", "torch.linspace().view().expand.float().requires_grad_", "torch.linspace().view().expand.float().requires_grad_", "x.size", "x.size", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace().view().expand.float", "torch.linspace().view().expand.float", "torch.linspace().view().expand.float", "torch.linspace().view().expand.float", "torch.linspace().view().expand.float", "torch.linspace().view().expand.float", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size"], "methods", ["None"], ["", "def", "calculate_CoordConv", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "grid_w", "=", "torch", ".", "linspace", "(", "0", ",", "x", ".", "size", "(", "3", ")", "-", "1", ",", "x", ".", "size", "(", "3", ")", ")", ".", "view", "(", "1", ",", "1", ",", "1", ",", "x", ".", "size", "(", "3", ")", ")", ".", "expand", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "grid_h", "=", "torch", ".", "linspace", "(", "0", ",", "x", ".", "size", "(", "2", ")", "-", "1", ",", "x", ".", "size", "(", "2", ")", ")", ".", "view", "(", "1", ",", "1", ",", "x", ".", "size", "(", "2", ")", ",", "1", ")", ".", "expand", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "self", ".", "_grid_w", "=", "grid_w", ".", "float", "(", ")", ".", "requires_grad_", "(", "False", ")", ".", "cuda", "(", ")", "\n", "self", ".", "_grid_h", "=", "grid_h", ".", "float", "(", ")", ".", "requires_grad_", "(", "False", ")", ".", "cuda", "(", ")", "\n", "norm_grid_w", "=", "self", ".", "_grid_w", "/", "(", "x", ".", "size", "(", "3", ")", "-", "1", ")", "*", "2", "-", "1", "\n", "norm_grid_h", "=", "self", ".", "_grid_h", "/", "(", "x", ".", "size", "(", "2", ")", "-", "1", ")", "*", "2", "-", "1", "\n", "self", ".", "_norm_coord", "=", "torch", ".", "cat", "(", "(", "norm_grid_w", ",", "norm_grid_h", ")", ",", "dim", "=", "1", ")", "\n", "\n", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.calculate_CamConv": [[45, 58], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.atan", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_camconv.CamConvModule.ue_as", "modules_camconv.CamConvModule.ue_as", "modules_camconv.CamConvModule.ue_as", "modules_camconv.CamConvModule.ue_as"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.ue_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.ue_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.ue_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.ue_as"], ["", "def", "calculate_CamConv", "(", "self", ")", ":", "\n", "\n", "## Centered coordinates    ", "\n", "        ", "centered_coord_w", "=", "self", ".", "_grid_w", "-", "self", ".", "ue_as", "(", "self", ".", "_cx", ",", "self", ".", "_grid_w", ")", "+", "0.5", "\n", "centered_coord_h", "=", "self", ".", "_grid_h", "-", "self", ".", "ue_as", "(", "self", ".", "_cy", ",", "self", ".", "_grid_h", ")", "+", "0.5", "\n", "self", ".", "_centered_coord", "=", "torch", ".", "cat", "(", "(", "centered_coord_w", "/", "self", ".", "_norm_const", ",", "centered_coord_h", "/", "self", ".", "_norm_const", ")", ",", "dim", "=", "1", ")", "\n", "\n", "## 3) FOV maps", "\n", "fov_xx_channel", "=", "torch", ".", "atan", "(", "centered_coord_w", "/", "self", ".", "ue_as", "(", "self", ".", "_fx", ",", "self", ".", "_grid_w", ")", ")", "\n", "fov_yy_channel", "=", "torch", ".", "atan", "(", "centered_coord_h", "/", "self", ".", "ue_as", "(", "self", ".", "_fy", ",", "self", ".", "_grid_h", ")", ")", "\n", "self", ".", "_fov_maps", "=", "torch", ".", "cat", "(", "(", "fov_xx_channel", ",", "fov_yy_channel", ")", ",", "dim", "=", "1", ")", "\n", "\n", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.initialize": [[59, 69], ["modules_camconv.CamConvModule.calculate_CoordConv", "modules_camconv.CamConvModule.calculate_CamConv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.calculate_CoordConv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.calculate_CamConv"], ["", "def", "initialize", "(", "self", ",", "intrinsic", ",", "input_img", ")", ":", "\n", "\n", "        ", "self", ".", "_fx", "=", "intrinsic", "[", ":", ",", "0", ",", "0", "]", "\n", "self", ".", "_fy", "=", "intrinsic", "[", ":", ",", "1", ",", "1", "]", "\n", "self", ".", "_cx", "=", "intrinsic", "[", ":", ",", "0", ",", "2", "]", "\n", "self", ".", "_cy", "=", "intrinsic", "[", ":", ",", "1", ",", "2", "]", "\n", "self", ".", "calculate_CoordConv", "(", "input_img", ")", "\n", "self", ".", "calculate_CamConv", "(", ")", "\n", "\n", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.forward": [[70, 81], ["input_tensor.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_camconv.CamConvModule.interpolate2d", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules_camconv.CamConvModule.initialize", "modules_camconv.CamConvModule.detach_"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.interpolate2d", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_camconv.CamConvModule.initialize"], ["", "def", "forward", "(", "self", ",", "input_tensor", ",", "input_img", "=", "None", ",", "intrinsic", "=", "None", ")", ":", "\n", "\n", "        ", "if", "input_img", "is", "not", "None", ":", "\n", "            ", "self", ".", "initialize", "(", "intrinsic", ",", "input_img", ")", "\n", "\n", "", "_", ",", "_", ",", "hh_t", ",", "ww_t", "=", "input_tensor", ".", "size", "(", ")", "\n", "cam_conv_tensor", "=", "torch", ".", "cat", "(", "(", "self", ".", "_norm_coord", ",", "self", ".", "_centered_coord", ",", "self", ".", "_fov_maps", ")", ",", "dim", "=", "1", ")", "\n", "cam_conv_tensor", "=", "self", ".", "interpolate2d", "(", "cam_conv_tensor", ",", "hh_t", ",", "ww_t", ",", "mode", "=", "\"bilinear\"", ")", "\n", "\n", "\n", "return", "torch", ".", "cat", "(", "(", "cam_conv_tensor", ".", "detach_", "(", ")", ",", "input_tensor", ")", ",", "dim", "=", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.ContextNetwork_separate_base.__init__": [[21, 43], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "ch_in1", ",", "ch_in2", ")", ":", "\n", "        ", "super", "(", "ContextNetwork_separate_base", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "convs_sf", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in1", ",", "89", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "conv", "(", "89", ",", "89", ",", "3", ",", "1", ",", "2", ")", ",", "\n", "conv", "(", "89", ",", "89", ",", "3", ",", "1", ",", "4", ")", ",", "\n", "conv", "(", "89", ",", "67", ",", "3", ",", "1", ",", "8", ")", ",", "\n", "conv", "(", "67", ",", "44", ",", "3", ",", "1", ",", "16", ")", ",", "\n", "conv", "(", "44", ",", "22", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "conv", "(", "22", ",", "3", ",", "isReLU", "=", "False", ")", "\n", ")", "\n", "\n", "self", ".", "convs_dp", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in2", ",", "89", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "conv", "(", "89", ",", "89", ",", "3", ",", "1", ",", "2", ")", ",", "\n", "conv", "(", "89", ",", "89", ",", "3", ",", "1", ",", "4", ")", ",", "\n", "conv", "(", "89", ",", "67", ",", "3", ",", "1", ",", "8", ")", ",", "\n", "conv", "(", "67", ",", "44", ",", "3", ",", "1", ",", "16", ")", ",", "\n", "conv", "(", "44", ",", "22", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "conv", "(", "22", ",", "1", ",", "isReLU", "=", "False", ")", ",", "\n", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.ContextNetwork_separate_base.forward": [[45, 50], ["model_monosceneflow_ablation_decoder_split.ContextNetwork_separate_base.convs_sf", "model_monosceneflow_ablation_decoder_split.ContextNetwork_separate_base.convs_dp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_sf", ",", "x_dp", ")", ":", "\n", "\n", "        ", "sf", "=", "self", ".", "convs_sf", "(", "x_sf", ")", "\n", "dp", "=", "self", ".", "convs_dp", "(", "x_dp", ")", "\n", "return", "sf", ",", "dp", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.ContextNetwork_separate.__init__": [[52, 74], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "ch_in1", ",", "ch_in2", ")", ":", "\n", "        ", "super", "(", "ContextNetwork_separate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "convs_sf", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in1", ",", "91", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "conv", "(", "91", ",", "91", ",", "3", ",", "1", ",", "2", ")", ",", "\n", "conv", "(", "91", ",", "91", ",", "3", ",", "1", ",", "4", ")", ",", "\n", "conv", "(", "91", ",", "69", ",", "3", ",", "1", ",", "8", ")", ",", "\n", "conv", "(", "69", ",", "46", ",", "3", ",", "1", ",", "16", ")", ",", "\n", "conv", "(", "46", ",", "23", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "conv", "(", "23", ",", "3", ",", "isReLU", "=", "False", ")", "\n", ")", "\n", "\n", "self", ".", "convs_dp", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in2", ",", "91", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "conv", "(", "91", ",", "91", ",", "3", ",", "1", ",", "2", ")", ",", "\n", "conv", "(", "91", ",", "91", ",", "3", ",", "1", ",", "4", ")", ",", "\n", "conv", "(", "91", ",", "69", ",", "3", ",", "1", ",", "8", ")", ",", "\n", "conv", "(", "69", ",", "46", ",", "3", ",", "1", ",", "16", ")", ",", "\n", "conv", "(", "46", ",", "23", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "conv", "(", "23", ",", "1", ",", "isReLU", "=", "False", ")", ",", "\n", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.ContextNetwork_separate.forward": [[76, 81], ["model_monosceneflow_ablation_decoder_split.ContextNetwork_separate.convs_sf", "model_monosceneflow_ablation_decoder_split.ContextNetwork_separate.convs_dp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_sf", ",", "x_dp", ")", ":", "\n", "\n", "        ", "sf", "=", "self", ".", "convs_sf", "(", "x_sf", ")", "\n", "dp", "=", "self", ".", "convs_dp", "(", "x_dp", ")", "\n", "return", "sf", ",", "dp", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SplitDec1.__init__": [[84, 98], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "ch_in", ")", ":", "\n", "        ", "super", "(", "SplitDec1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in", ",", "128", ")", ",", "\n", "conv", "(", "128", ",", "128", ")", ",", "\n", "conv", "(", "128", ",", "96", ")", ",", "\n", "conv", "(", "96", ",", "68", ")", "\n", ")", "\n", "self", ".", "conv_sf", "=", "conv", "(", "68", ",", "16", ")", "\n", "self", ".", "conv_dp", "=", "conv", "(", "68", ",", "16", ")", "\n", "\n", "self", ".", "conv_sf_out", "=", "conv", "(", "16", ",", "3", ",", "isReLU", "=", "False", ")", "\n", "self", ".", "conv_dp_out", "=", "conv", "(", "16", ",", "1", ",", "isReLU", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SplitDec1.forward": [[99, 109], ["model_monosceneflow_ablation_decoder_split.SplitDec1.convs", "model_monosceneflow_ablation_decoder_split.SplitDec1.conv_sf", "model_monosceneflow_ablation_decoder_split.SplitDec1.conv_dp", "model_monosceneflow_ablation_decoder_split.SplitDec1.conv_sf_out", "model_monosceneflow_ablation_decoder_split.SplitDec1.conv_dp_out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_out", "=", "self", ".", "convs", "(", "x", ")", "\n", "\n", "sf_out", "=", "self", ".", "conv_sf", "(", "x_out", ")", "\n", "dp_out", "=", "self", ".", "conv_dp", "(", "x_out", ")", "\n", "\n", "sf", "=", "self", ".", "conv_sf_out", "(", "sf_out", ")", "\n", "dp", "=", "self", ".", "conv_dp_out", "(", "dp_out", ")", "\n", "\n", "return", "sf_out", ",", "sf", ",", "dp_out", ",", "dp", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SplitDec2.__init__": [[111, 130], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "ch_in", ")", ":", "\n", "        ", "super", "(", "SplitDec2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in", ",", "128", ")", ",", "\n", "conv", "(", "128", ",", "128", ")", ",", "\n", "conv", "(", "128", ",", "81", ")", "\n", ")", "\n", "self", ".", "conv_sf", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "81", ",", "54", ")", ",", "\n", "conv", "(", "54", ",", "16", ")", "\n", ")", "\n", "self", ".", "conv_dp", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "81", ",", "54", ")", ",", "\n", "conv", "(", "54", ",", "16", ")", "\n", ")", "\n", "\n", "self", ".", "conv_sf_out", "=", "conv", "(", "16", ",", "3", ",", "isReLU", "=", "False", ")", "\n", "self", ".", "conv_dp_out", "=", "conv", "(", "16", ",", "1", ",", "isReLU", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SplitDec2.forward": [[131, 141], ["model_monosceneflow_ablation_decoder_split.SplitDec2.convs", "model_monosceneflow_ablation_decoder_split.SplitDec2.conv_sf", "model_monosceneflow_ablation_decoder_split.SplitDec2.conv_dp", "model_monosceneflow_ablation_decoder_split.SplitDec2.conv_sf_out", "model_monosceneflow_ablation_decoder_split.SplitDec2.conv_dp_out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_out", "=", "self", ".", "convs", "(", "x", ")", "\n", "\n", "sf_out", "=", "self", ".", "conv_sf", "(", "x_out", ")", "\n", "dp_out", "=", "self", ".", "conv_dp", "(", "x_out", ")", "\n", "\n", "sf", "=", "self", ".", "conv_sf_out", "(", "sf_out", ")", "\n", "dp", "=", "self", ".", "conv_dp_out", "(", "dp_out", ")", "\n", "\n", "return", "sf_out", ",", "sf", ",", "dp_out", ",", "dp", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SplitDec3.__init__": [[143, 163], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "ch_in", ")", ":", "\n", "        ", "super", "(", "SplitDec3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in", ",", "128", ")", ",", "\n", "conv", "(", "128", ",", "101", ")", "\n", ")", "\n", "self", ".", "conv_sf", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "101", ",", "75", ")", ",", "\n", "conv", "(", "75", ",", "51", ")", ",", "\n", "conv", "(", "51", ",", "16", ")", "\n", ")", "\n", "self", ".", "conv_dp", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "101", ",", "75", ")", ",", "\n", "conv", "(", "75", ",", "51", ")", ",", "\n", "conv", "(", "51", ",", "16", ")", "\n", ")", "\n", "\n", "self", ".", "conv_sf_out", "=", "conv", "(", "16", ",", "3", ",", "isReLU", "=", "False", ")", "\n", "self", ".", "conv_dp_out", "=", "conv", "(", "16", ",", "1", ",", "isReLU", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SplitDec3.forward": [[164, 174], ["model_monosceneflow_ablation_decoder_split.SplitDec3.convs", "model_monosceneflow_ablation_decoder_split.SplitDec3.conv_sf", "model_monosceneflow_ablation_decoder_split.SplitDec3.conv_dp", "model_monosceneflow_ablation_decoder_split.SplitDec3.conv_sf_out", "model_monosceneflow_ablation_decoder_split.SplitDec3.conv_dp_out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_out", "=", "self", ".", "convs", "(", "x", ")", "\n", "\n", "sf_out", "=", "self", ".", "conv_sf", "(", "x_out", ")", "\n", "dp_out", "=", "self", ".", "conv_dp", "(", "x_out", ")", "\n", "\n", "sf", "=", "self", ".", "conv_sf_out", "(", "sf_out", ")", "\n", "dp", "=", "self", ".", "conv_dp_out", "(", "dp_out", ")", "\n", "\n", "return", "sf_out", ",", "sf", ",", "dp_out", ",", "dp", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SplitDec4.__init__": [[176, 197], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "ch_in", ")", ":", "\n", "        ", "super", "(", "SplitDec4", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in", ",", "100", ")", ",", "\n", ")", "\n", "self", ".", "conv_sf", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "100", ",", "100", ")", ",", "\n", "conv", "(", "100", ",", "75", ")", ",", "\n", "conv", "(", "75", ",", "52", ")", ",", "\n", "conv", "(", "52", ",", "16", ")", "\n", ")", "\n", "self", ".", "conv_dp", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "100", ",", "100", ")", ",", "\n", "conv", "(", "100", ",", "75", ")", ",", "\n", "conv", "(", "75", ",", "52", ")", ",", "\n", "conv", "(", "52", ",", "16", ")", "\n", ")", "\n", "\n", "self", ".", "conv_sf_out", "=", "conv", "(", "16", ",", "3", ",", "isReLU", "=", "False", ")", "\n", "self", ".", "conv_dp_out", "=", "conv", "(", "16", ",", "1", ",", "isReLU", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SplitDec4.forward": [[198, 208], ["model_monosceneflow_ablation_decoder_split.SplitDec4.convs", "model_monosceneflow_ablation_decoder_split.SplitDec4.conv_sf", "model_monosceneflow_ablation_decoder_split.SplitDec4.conv_dp", "model_monosceneflow_ablation_decoder_split.SplitDec4.conv_sf_out", "model_monosceneflow_ablation_decoder_split.SplitDec4.conv_dp_out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_out", "=", "self", ".", "convs", "(", "x", ")", "\n", "\n", "sf_out", "=", "self", ".", "conv_sf", "(", "x_out", ")", "\n", "dp_out", "=", "self", ".", "conv_dp", "(", "x_out", ")", "\n", "\n", "sf", "=", "self", ".", "conv_sf_out", "(", "sf_out", ")", "\n", "dp", "=", "self", ".", "conv_dp_out", "(", "dp_out", ")", "\n", "\n", "return", "sf_out", ",", "sf", ",", "dp_out", ",", "dp", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SplitDec5.__init__": [[210, 230], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "ch_in", ")", ":", "\n", "        ", "super", "(", "SplitDec5", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv_sf", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in", ",", "80", ")", ",", "\n", "conv", "(", "80", ",", "80", ")", ",", "\n", "conv", "(", "80", ",", "62", ")", ",", "\n", "conv", "(", "62", ",", "41", ")", ",", "\n", "conv", "(", "41", ",", "16", ")", "\n", ")", "\n", "self", ".", "conv_dp", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in", ",", "80", ")", ",", "\n", "conv", "(", "80", ",", "80", ")", ",", "\n", "conv", "(", "80", ",", "62", ")", ",", "\n", "conv", "(", "62", ",", "41", ")", ",", "\n", "conv", "(", "41", ",", "16", ")", "\n", ")", "\n", "\n", "self", ".", "conv_sf_out", "=", "conv", "(", "16", ",", "3", ",", "isReLU", "=", "False", ")", "\n", "self", ".", "conv_dp_out", "=", "conv", "(", "16", ",", "1", ",", "isReLU", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SplitDec5.forward": [[231, 240], ["model_monosceneflow_ablation_decoder_split.SplitDec5.conv_sf", "model_monosceneflow_ablation_decoder_split.SplitDec5.conv_dp", "model_monosceneflow_ablation_decoder_split.SplitDec5.conv_sf_out", "model_monosceneflow_ablation_decoder_split.SplitDec5.conv_dp_out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "sf_out", "=", "self", ".", "conv_sf", "(", "x", ")", "\n", "dp_out", "=", "self", ".", "conv_dp", "(", "x", ")", "\n", "\n", "sf", "=", "self", ".", "conv_sf_out", "(", "sf_out", ")", "\n", "dp", "=", "self", ".", "conv_dp_out", "(", "dp_out", ")", "\n", "\n", "return", "sf_out", ",", "sf", ",", "dp_out", ",", "dp", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SplitDec6.__init__": [[242, 262], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "ch_in1", ",", "ch_in2", ")", ":", "\n", "        ", "super", "(", "SplitDec6", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv_sf", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in1", ",", "88", ")", ",", "\n", "conv", "(", "88", ",", "88", ")", ",", "\n", "conv", "(", "88", ",", "67", ")", ",", "\n", "conv", "(", "67", ",", "44", ")", ",", "\n", "conv", "(", "44", ",", "16", ")", "\n", ")", "\n", "self", ".", "conv_dp", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in2", ",", "88", ")", ",", "\n", "conv", "(", "88", ",", "88", ")", ",", "\n", "conv", "(", "88", ",", "67", ")", ",", "\n", "conv", "(", "67", ",", "44", ")", ",", "\n", "conv", "(", "44", ",", "16", ")", "\n", ")", "\n", "\n", "self", ".", "conv_sf_out", "=", "conv", "(", "16", ",", "3", ",", "isReLU", "=", "False", ")", "\n", "self", ".", "conv_dp_out", "=", "conv", "(", "16", ",", "1", ",", "isReLU", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SplitDec6.forward": [[263, 272], ["model_monosceneflow_ablation_decoder_split.SplitDec6.conv_sf", "model_monosceneflow_ablation_decoder_split.SplitDec6.conv_dp", "model_monosceneflow_ablation_decoder_split.SplitDec6.conv_sf_out", "model_monosceneflow_ablation_decoder_split.SplitDec6.conv_dp_out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_sf", ",", "x_dp", ")", ":", "\n", "\n", "        ", "sf_out", "=", "self", ".", "conv_sf", "(", "x_sf", ")", "\n", "dp_out", "=", "self", ".", "conv_dp", "(", "x_dp", ")", "\n", "\n", "sf", "=", "self", ".", "conv_sf_out", "(", "sf_out", ")", "\n", "dp", "=", "self", ".", "conv_dp_out", "(", "dp_out", ")", "\n", "\n", "return", "sf_out", ",", "sf", ",", "dp_out", ",", "dp", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.__init__": [[275, 312], ["torch.Module.__init__", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "modules_sceneflow.FeatureExtractor", "modules_sceneflow.WarpingLayer_SF", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "enumerate", "model_monosceneflow_ablation_decoder_split.ContextNetwork_separate_base", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "modules_sceneflow.initialize_msra", "modules_sceneflow.MonoSceneFlowDecoder", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.flow_estimators.append", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.modules", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.upconv_layers.append", "modules_sceneflow.upconv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.initialize_msra"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "SceneFlow_pwcnet_split_base", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_args", "=", "args", "\n", "self", ".", "num_chs", "=", "[", "3", ",", "32", ",", "64", ",", "96", ",", "128", ",", "192", ",", "256", "]", "\n", "self", ".", "search_range", "=", "4", "\n", "self", ".", "output_level", "=", "4", "\n", "self", ".", "num_levels", "=", "7", "\n", "\n", "self", ".", "leakyRELU", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "feature_pyramid_extractor", "=", "FeatureExtractor", "(", "self", ".", "num_chs", ")", "\n", "self", ".", "warping_layer_sf", "=", "WarpingLayer_SF", "(", ")", "\n", "\n", "self", ".", "flow_estimators", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "upconv_layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "self", ".", "dim_corr", "=", "(", "self", ".", "search_range", "*", "2", "+", "1", ")", "**", "2", "\n", "\n", "for", "l", ",", "ch", "in", "enumerate", "(", "self", ".", "num_chs", "[", ":", ":", "-", "1", "]", ")", ":", "\n", "            ", "if", "l", ">", "self", ".", "output_level", ":", "\n", "                ", "break", "\n", "\n", "", "if", "l", "==", "0", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "\n", "", "else", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "+", "32", "+", "3", "+", "1", "\n", "self", ".", "upconv_layers", ".", "append", "(", "upconv", "(", "32", ",", "32", ",", "3", ",", "2", ")", ")", "\n", "\n", "", "layer_disp", "=", "MonoSceneFlowDecoder", "(", "num_ch_in", ")", "\n", "self", ".", "flow_estimators", ".", "append", "(", "layer_disp", ")", "\n", "\n", "", "self", ".", "corr_params", "=", "{", "\"pad_size\"", ":", "self", ".", "search_range", ",", "\"kernel_size\"", ":", "1", ",", "\"max_disp\"", ":", "self", ".", "search_range", ",", "\"stride1\"", ":", "1", ",", "\"stride2\"", ":", "1", ",", "\"corr_multiply\"", ":", "1", "}", "\n", "self", ".", "context_networks", "=", "ContextNetwork_separate_base", "(", "32", "+", "3", ",", "32", "+", "1", ")", "\n", "self", ".", "sigmoid", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "\n", "initialize_msra", "(", "self", ".", "modules", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.run_pwc": [[313, 388], ["enumerate", "modules_sceneflow.upsample_outputs_as", "modules_sceneflow.upsample_outputs_as", "modules_sceneflow.upsample_outputs_as", "modules_sceneflow.upsample_outputs_as", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.feature_pyramid_extractor", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.feature_pyramid_extractor", "zip", "correlation_package.correlation.Correlation.apply", "correlation_package.correlation.Correlation.apply", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.leakyRELU", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.leakyRELU", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.warping_layer_sf", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.warping_layer_sf", "flows_f.append", "flows_b.append", "disps_l1.append", "disps_l2.append", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.context_networks", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.context_networks", "flows_f.append", "flows_b.append", "disps_l1.append", "disps_l2.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.sigmoid", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.sigmoid", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as"], ["", "def", "run_pwc", "(", "self", ",", "input_dict", ",", "x1_raw", ",", "x2_raw", ",", "k1", ",", "k2", ")", ":", "\n", "\n", "        ", "output_dict", "=", "{", "}", "\n", "\n", "# on the bottom level are original images", "\n", "x1_pyramid", "=", "self", ".", "feature_pyramid_extractor", "(", "x1_raw", ")", "+", "[", "x1_raw", "]", "\n", "x2_pyramid", "=", "self", ".", "feature_pyramid_extractor", "(", "x2_raw", ")", "+", "[", "x2_raw", "]", "\n", "\n", "# outputs", "\n", "flows_f", "=", "[", "]", "\n", "flows_b", "=", "[", "]", "\n", "disps_l1", "=", "[", "]", "\n", "disps_l2", "=", "[", "]", "\n", "\n", "\n", "for", "l", ",", "(", "x1", ",", "x2", ")", "in", "enumerate", "(", "zip", "(", "x1_pyramid", ",", "x2_pyramid", ")", ")", ":", "\n", "\n", "# warping", "\n", "            ", "if", "l", "==", "0", ":", "\n", "                ", "x2_warp", "=", "x2", "\n", "x1_warp", "=", "x1", "\n", "", "else", ":", "\n", "                ", "flow_f", "=", "interpolate2d_as", "(", "flow_f", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "flow_b", "=", "interpolate2d_as", "(", "flow_b", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "disp_l1", "=", "interpolate2d_as", "(", "disp_l1", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "disp_l2", "=", "interpolate2d_as", "(", "disp_l2", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "x1_out", "=", "self", ".", "upconv_layers", "[", "l", "-", "1", "]", "(", "x1_out", ")", "\n", "x2_out", "=", "self", ".", "upconv_layers", "[", "l", "-", "1", "]", "(", "x2_out", ")", "\n", "x2_warp", "=", "self", ".", "warping_layer_sf", "(", "x2", ",", "flow_f", ",", "disp_l1", ",", "k1", ",", "input_dict", "[", "'aug_size'", "]", ")", "# becuase K can be changing when doing augmentation", "\n", "x1_warp", "=", "self", ".", "warping_layer_sf", "(", "x1", ",", "flow_b", ",", "disp_l2", ",", "k2", ",", "input_dict", "[", "'aug_size'", "]", ")", "\n", "\n", "# correlation", "\n", "", "out_corr_f", "=", "Correlation", ".", "apply", "(", "x1", ",", "x2_warp", ",", "self", ".", "corr_params", ")", "\n", "out_corr_b", "=", "Correlation", ".", "apply", "(", "x2", ",", "x1_warp", ",", "self", ".", "corr_params", ")", "\n", "out_corr_relu_f", "=", "self", ".", "leakyRELU", "(", "out_corr_f", ")", "\n", "out_corr_relu_b", "=", "self", ".", "leakyRELU", "(", "out_corr_b", ")", "\n", "\n", "# flow estimator", "\n", "if", "l", "==", "0", ":", "\n", "                ", "x1_out", ",", "flow_f", ",", "disp_l1", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_f", ",", "x1", "]", ",", "dim", "=", "1", ")", ")", "\n", "x2_out", ",", "flow_b", ",", "disp_l2", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_b", ",", "x2", "]", ",", "dim", "=", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "x1_out", ",", "flow_f_res", ",", "disp_l1", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_f", ",", "x1", ",", "x1_out", ",", "flow_f", ",", "disp_l1", "]", ",", "dim", "=", "1", ")", ")", "\n", "x2_out", ",", "flow_b_res", ",", "disp_l2", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_b", ",", "x2", ",", "x2_out", ",", "flow_b", ",", "disp_l2", "]", ",", "dim", "=", "1", ")", ")", "\n", "flow_f", "=", "flow_f", "+", "flow_f_res", "\n", "flow_b", "=", "flow_b", "+", "flow_b_res", "\n", "\n", "# upsampling or post-processing", "\n", "", "if", "l", "!=", "self", ".", "output_level", ":", "\n", "                ", "disp_l1", "=", "self", ".", "sigmoid", "(", "disp_l1", ")", "*", "0.3", "\n", "disp_l2", "=", "self", ".", "sigmoid", "(", "disp_l2", ")", "*", "0.3", "\n", "flows_f", ".", "append", "(", "flow_f", ")", "\n", "flows_b", ".", "append", "(", "flow_b", ")", "\n", "disps_l1", ".", "append", "(", "disp_l1", ")", "\n", "disps_l2", ".", "append", "(", "disp_l2", ")", "\n", "", "else", ":", "\n", "                ", "flow_res_f", ",", "disp_l1", "=", "self", ".", "context_networks", "(", "torch", ".", "cat", "(", "[", "x1_out", ",", "flow_f", "]", ",", "dim", "=", "1", ")", ",", "torch", ".", "cat", "(", "[", "x1_out", ",", "disp_l1", "]", ",", "dim", "=", "1", ")", ")", "\n", "flow_res_b", ",", "disp_l2", "=", "self", ".", "context_networks", "(", "torch", ".", "cat", "(", "[", "x2_out", ",", "flow_b", "]", ",", "dim", "=", "1", ")", ",", "torch", ".", "cat", "(", "[", "x2_out", ",", "disp_l2", "]", ",", "dim", "=", "1", ")", ")", "\n", "flow_f", "=", "flow_f", "+", "flow_res_f", "\n", "flow_b", "=", "flow_b", "+", "flow_res_b", "\n", "flows_f", ".", "append", "(", "flow_f", ")", "\n", "flows_b", ".", "append", "(", "flow_b", ")", "\n", "disps_l1", ".", "append", "(", "disp_l1", ")", "\n", "disps_l2", ".", "append", "(", "disp_l2", ")", "\n", "break", "\n", "\n", "\n", "", "", "x1_rev", "=", "x1_pyramid", "[", ":", ":", "-", "1", "]", "\n", "\n", "output_dict", "[", "'flow_f'", "]", "=", "upsample_outputs_as", "(", "flows_f", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "output_dict", "[", "'flow_b'", "]", "=", "upsample_outputs_as", "(", "flows_b", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "output_dict", "[", "'disp_l1'", "]", "=", "upsample_outputs_as", "(", "disps_l1", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "output_dict", "[", "'disp_l2'", "]", "=", "upsample_outputs_as", "(", "disps_l2", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "\n", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.forward": [[389, 441], ["model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.run_pwc", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.run_pwc", "range", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_base.run_pwc", "range", "len", "utils.sceneflow_util.flow_horizontal_flip", "utils.sceneflow_util.flow_horizontal_flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "len", "flow_f_pp.append", "flow_b_pp.append", "disp_l1_pp.append", "disp_l2_pp.append", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.flow_horizontal_flip", "utils.sceneflow_util.flow_horizontal_flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip"], ["", "def", "forward", "(", "self", ",", "input_dict", ")", ":", "\n", "\n", "        ", "output_dict", "=", "{", "}", "\n", "\n", "## Left", "\n", "output_dict", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_dict", "[", "'input_l1_aug'", "]", ",", "input_dict", "[", "'input_l2_aug'", "]", ",", "input_dict", "[", "'input_k_l1_aug'", "]", ",", "input_dict", "[", "'input_k_l2_aug'", "]", ")", "\n", "\n", "## Right", "\n", "if", "not", "self", ".", "_args", ".", "evaluation", ":", "\n", "            ", "input_r1_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_r1_aug'", "]", ",", "[", "3", "]", ")", "\n", "input_r2_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_r2_aug'", "]", ",", "[", "3", "]", ")", "\n", "k_r1_flip", "=", "input_dict", "[", "\"input_k_r1_flip_aug\"", "]", "\n", "k_r2_flip", "=", "input_dict", "[", "\"input_k_r2_flip_aug\"", "]", "\n", "\n", "output_dict_r", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_r1_flip", ",", "input_r2_flip", ",", "k_r1_flip", ",", "k_r2_flip", ")", "\n", "\n", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict_r", "[", "'flow_f'", "]", ")", ")", ":", "\n", "                ", "output_dict_r", "[", "'flow_f'", "]", "[", "ii", "]", "=", "flow_horizontal_flip", "(", "output_dict_r", "[", "'flow_f'", "]", "[", "ii", "]", ")", "\n", "output_dict_r", "[", "'flow_b'", "]", "[", "ii", "]", "=", "flow_horizontal_flip", "(", "output_dict_r", "[", "'flow_b'", "]", "[", "ii", "]", ")", "\n", "output_dict_r", "[", "'disp_l1'", "]", "[", "ii", "]", "=", "torch", ".", "flip", "(", "output_dict_r", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", "\n", "output_dict_r", "[", "'disp_l2'", "]", "[", "ii", "]", "=", "torch", ".", "flip", "(", "output_dict_r", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", "\n", "\n", "", "output_dict", "[", "'output_dict_r'", "]", "=", "output_dict_r", "\n", "\n", "\n", "## Eval", "\n", "", "if", "self", ".", "_args", ".", "evaluation", ":", "\n", "            ", "input_l1_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_l1_aug'", "]", ",", "[", "3", "]", ")", "\n", "input_l2_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_l2_aug'", "]", ",", "[", "3", "]", ")", "\n", "k_l1_flip", "=", "input_dict", "[", "\"input_k_l1_flip_aug\"", "]", "\n", "k_l2_flip", "=", "input_dict", "[", "\"input_k_l2_flip_aug\"", "]", "\n", "\n", "output_dict_flip", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_l1_flip", ",", "input_l2_flip", ",", "k_l1_flip", ",", "k_l2_flip", ")", "\n", "\n", "flow_f_pp", "=", "[", "]", "\n", "flow_b_pp", "=", "[", "]", "\n", "disp_l1_pp", "=", "[", "]", "\n", "disp_l2_pp", "=", "[", "]", "\n", "\n", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict_flip", "[", "'flow_f'", "]", ")", ")", ":", "\n", "\n", "                ", "flow_f_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'flow_f'", "]", "[", "ii", "]", ",", "flow_horizontal_flip", "(", "output_dict_flip", "[", "'flow_f'", "]", "[", "ii", "]", ")", ")", ")", "\n", "flow_b_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'flow_b'", "]", "[", "ii", "]", ",", "flow_horizontal_flip", "(", "output_dict_flip", "[", "'flow_b'", "]", "[", "ii", "]", ")", ")", ")", "\n", "disp_l1_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "torch", ".", "flip", "(", "output_dict_flip", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", ")", ")", "\n", "disp_l2_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "torch", ".", "flip", "(", "output_dict_flip", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", ")", ")", "\n", "\n", "", "output_dict", "[", "'flow_f_pp'", "]", "=", "flow_f_pp", "\n", "output_dict", "[", "'flow_b_pp'", "]", "=", "flow_b_pp", "\n", "output_dict", "[", "'disp_l1_pp'", "]", "=", "disp_l1_pp", "\n", "output_dict", "[", "'disp_l2_pp'", "]", "=", "disp_l2_pp", "\n", "\n", "", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.__init__": [[444, 481], ["torch.Module.__init__", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "modules_sceneflow.FeatureExtractor", "modules_sceneflow.WarpingLayer_SF", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "enumerate", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "model_monosceneflow_ablation_decoder_split.ContextNetwork_separate", "modules_sceneflow.initialize_msra", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.modules", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.upconv_layers_sf.append", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.upconv_layers_dp.append", "modules_sceneflow.upconv", "modules_sceneflow.upconv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.initialize_msra"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "SceneFlow_pwcnet_split_n", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_args", "=", "args", "\n", "self", ".", "num_chs", "=", "[", "3", ",", "32", ",", "64", ",", "96", ",", "128", ",", "192", ",", "256", "]", "\n", "self", ".", "search_range", "=", "4", "\n", "self", ".", "output_level", "=", "4", "\n", "self", ".", "num_levels", "=", "7", "\n", "\n", "self", ".", "leakyRELU", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "feature_pyramid_extractor", "=", "FeatureExtractor", "(", "self", ".", "num_chs", ")", "\n", "self", ".", "warping_layer_sf", "=", "WarpingLayer_SF", "(", ")", "\n", "\n", "self", ".", "sf_estimators", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "upconv_layers_sf", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "upconv_layers_dp", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "self", ".", "dim_corr", "=", "(", "self", ".", "search_range", "*", "2", "+", "1", ")", "**", "2", "\n", "\n", "for", "l", ",", "ch", "in", "enumerate", "(", "self", ".", "num_chs", "[", ":", ":", "-", "1", "]", ")", ":", "\n", "            ", "if", "l", ">", "self", ".", "output_level", ":", "\n", "                ", "break", "\n", "\n", "", "if", "l", "==", "0", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "\n", "", "else", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "+", "32", "+", "3", "+", "1", "\n", "self", ".", "upconv_layers_sf", ".", "append", "(", "upconv", "(", "16", ",", "16", ",", "3", ",", "2", ")", ")", "\n", "self", ".", "upconv_layers_dp", ".", "append", "(", "upconv", "(", "16", ",", "16", ",", "3", ",", "2", ")", ")", "\n", "\n", "", "", "self", ".", "corr_params", "=", "{", "\"pad_size\"", ":", "self", ".", "search_range", ",", "\"kernel_size\"", ":", "1", ",", "\"max_disp\"", ":", "self", ".", "search_range", ",", "\"stride1\"", ":", "1", ",", "\"stride2\"", ":", "1", ",", "\"corr_multiply\"", ":", "1", "}", "\n", "self", ".", "sigmoid", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "\n", "self", ".", "context_networks", "=", "ContextNetwork_separate", "(", "16", "+", "3", ",", "16", "+", "1", ")", "\n", "\n", "initialize_msra", "(", "self", ".", "modules", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.run_pwc": [[482, 557], ["enumerate", "modules_sceneflow.upsample_outputs_as", "modules_sceneflow.upsample_outputs_as", "modules_sceneflow.upsample_outputs_as", "modules_sceneflow.upsample_outputs_as", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.feature_pyramid_extractor", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.feature_pyramid_extractor", "zip", "correlation_package.correlation.Correlation.apply", "correlation_package.correlation.Correlation.apply", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.leakyRELU", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.leakyRELU", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.warping_layer_sf", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.warping_layer_sf", "flows_f.append", "flows_b.append", "disps_l1.append", "disps_l2.append", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.context_networks", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.context_networks", "flows_f.append", "flows_b.append", "disps_l1.append", "disps_l2.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.sigmoid", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.sigmoid", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as"], ["", "def", "run_pwc", "(", "self", ",", "input_dict", ",", "x1_raw", ",", "x2_raw", ",", "k1", ",", "k2", ")", ":", "\n", "\n", "        ", "output_dict", "=", "{", "}", "\n", "x1_pyramid", "=", "self", ".", "feature_pyramid_extractor", "(", "x1_raw", ")", "+", "[", "x1_raw", "]", "\n", "x2_pyramid", "=", "self", ".", "feature_pyramid_extractor", "(", "x2_raw", ")", "+", "[", "x2_raw", "]", "\n", "\n", "# outputs", "\n", "flows_f", "=", "[", "]", "\n", "flows_b", "=", "[", "]", "\n", "disps_l1", "=", "[", "]", "\n", "disps_l2", "=", "[", "]", "\n", "\n", "for", "l", ",", "(", "x1", ",", "x2", ")", "in", "enumerate", "(", "zip", "(", "x1_pyramid", ",", "x2_pyramid", ")", ")", ":", "\n", "\n", "# warping", "\n", "            ", "if", "l", "==", "0", ":", "\n", "                ", "x2_warp", "=", "x2", "\n", "x1_warp", "=", "x1", "\n", "", "else", ":", "\n", "                ", "sf_f", "=", "interpolate2d_as", "(", "sf_f", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "sf_b", "=", "interpolate2d_as", "(", "sf_b", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "dp_f", "=", "interpolate2d_as", "(", "dp_f", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "dp_b", "=", "interpolate2d_as", "(", "dp_b", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "\n", "sf_f_out", "=", "self", ".", "upconv_layers_sf", "[", "l", "-", "1", "]", "(", "sf_f_out", ")", "\n", "sf_b_out", "=", "self", ".", "upconv_layers_sf", "[", "l", "-", "1", "]", "(", "sf_b_out", ")", "\n", "dp_f_out", "=", "self", ".", "upconv_layers_dp", "[", "l", "-", "1", "]", "(", "dp_f_out", ")", "\n", "dp_b_out", "=", "self", ".", "upconv_layers_dp", "[", "l", "-", "1", "]", "(", "dp_b_out", ")", "\n", "\n", "x2_warp", "=", "self", ".", "warping_layer_sf", "(", "x2", ",", "sf_f", ",", "dp_f", ",", "k1", ",", "input_dict", "[", "'aug_size'", "]", ")", "# becuase K can be changing when doing augmentation", "\n", "x1_warp", "=", "self", ".", "warping_layer_sf", "(", "x1", ",", "sf_b", ",", "dp_b", ",", "k2", ",", "input_dict", "[", "'aug_size'", "]", ")", "\n", "\n", "# correlation", "\n", "", "out_corr_f", "=", "Correlation", ".", "apply", "(", "x1", ",", "x2_warp", ",", "self", ".", "corr_params", ")", "\n", "out_corr_b", "=", "Correlation", ".", "apply", "(", "x2", ",", "x1_warp", ",", "self", ".", "corr_params", ")", "\n", "out_corr_relu_f", "=", "self", ".", "leakyRELU", "(", "out_corr_f", ")", "\n", "out_corr_relu_b", "=", "self", ".", "leakyRELU", "(", "out_corr_b", ")", "\n", "\n", "# flow estimator", "\n", "if", "l", "==", "0", ":", "\n", "                ", "sf_f_out", ",", "sf_f", ",", "dp_f_out", ",", "dp_f", "=", "self", ".", "sf_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_f", ",", "x1", "]", ",", "dim", "=", "1", ")", ")", "\n", "sf_b_out", ",", "sf_b", ",", "dp_b_out", ",", "dp_b", "=", "self", ".", "sf_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_b", ",", "x2", "]", ",", "dim", "=", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "sf_f_out", ",", "sf_f_res", ",", "dp_f_out", ",", "dp_f", "=", "self", ".", "sf_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_f", ",", "x1", ",", "sf_f_out", ",", "sf_f", ",", "dp_f_out", ",", "dp_f", "]", ",", "dim", "=", "1", ")", ")", "\n", "sf_b_out", ",", "sf_b_res", ",", "dp_b_out", ",", "dp_b", "=", "self", ".", "sf_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_b", ",", "x2", ",", "sf_b_out", ",", "sf_b", ",", "dp_b_out", ",", "dp_b", "]", ",", "dim", "=", "1", ")", ")", "\n", "sf_f", "=", "sf_f", "+", "sf_f_res", "\n", "sf_b", "=", "sf_b", "+", "sf_b_res", "\n", "\n", "# upsampling or post-processing", "\n", "", "if", "l", "!=", "self", ".", "output_level", ":", "\n", "                ", "dp_f", "=", "self", ".", "sigmoid", "(", "dp_f", ")", "*", "0.3", "\n", "dp_b", "=", "self", ".", "sigmoid", "(", "dp_b", ")", "*", "0.3", "\n", "flows_f", ".", "append", "(", "sf_f", ")", "\n", "flows_b", ".", "append", "(", "sf_b", ")", "\n", "disps_l1", ".", "append", "(", "dp_f", ")", "\n", "disps_l2", ".", "append", "(", "dp_b", ")", "\n", "", "else", ":", "\n", "                ", "sf_res_f", ",", "dp_f", "=", "self", ".", "context_networks", "(", "torch", ".", "cat", "(", "[", "sf_f_out", ",", "sf_f", "]", ",", "dim", "=", "1", ")", ",", "torch", ".", "cat", "(", "[", "dp_f_out", ",", "dp_f", "]", ",", "dim", "=", "1", ")", ")", "\n", "sf_res_b", ",", "dp_b", "=", "self", ".", "context_networks", "(", "torch", ".", "cat", "(", "[", "sf_b_out", ",", "sf_b", "]", ",", "dim", "=", "1", ")", ",", "torch", ".", "cat", "(", "[", "dp_b_out", ",", "dp_b", "]", ",", "dim", "=", "1", ")", ")", "\n", "sf_f", "=", "sf_f", "+", "sf_res_f", "\n", "sf_b", "=", "sf_b", "+", "sf_res_b", "\n", "flows_f", ".", "append", "(", "sf_f", ")", "\n", "flows_b", ".", "append", "(", "sf_b", ")", "\n", "disps_l1", ".", "append", "(", "dp_f", ")", "\n", "disps_l2", ".", "append", "(", "dp_b", ")", "\n", "break", "\n", "\n", "", "", "x1_rev", "=", "x1_pyramid", "[", ":", ":", "-", "1", "]", "\n", "\n", "output_dict", "[", "'flow_f'", "]", "=", "upsample_outputs_as", "(", "flows_f", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "output_dict", "[", "'flow_b'", "]", "=", "upsample_outputs_as", "(", "flows_b", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "output_dict", "[", "'disp_l1'", "]", "=", "upsample_outputs_as", "(", "disps_l1", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "output_dict", "[", "'disp_l2'", "]", "=", "upsample_outputs_as", "(", "disps_l2", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "\n", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.forward": [[559, 611], ["model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.run_pwc", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.run_pwc", "range", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.run_pwc", "range", "len", "utils.sceneflow_util.flow_horizontal_flip", "utils.sceneflow_util.flow_horizontal_flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "len", "flow_f_pp.append", "flow_b_pp.append", "disp_l1_pp.append", "disp_l2_pp.append", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.flow_horizontal_flip", "utils.sceneflow_util.flow_horizontal_flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip"], ["", "def", "forward", "(", "self", ",", "input_dict", ")", ":", "\n", "\n", "        ", "output_dict", "=", "{", "}", "\n", "\n", "## Left", "\n", "output_dict", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_dict", "[", "'input_l1_aug'", "]", ",", "input_dict", "[", "'input_l2_aug'", "]", ",", "input_dict", "[", "'input_k_l1_aug'", "]", ",", "input_dict", "[", "'input_k_l2_aug'", "]", ")", "\n", "\n", "## Right", "\n", "if", "not", "self", ".", "_args", ".", "evaluation", ":", "\n", "            ", "input_r1_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_r1_aug'", "]", ",", "[", "3", "]", ")", "\n", "input_r2_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_r2_aug'", "]", ",", "[", "3", "]", ")", "\n", "k_r1_flip", "=", "input_dict", "[", "\"input_k_r1_flip_aug\"", "]", "\n", "k_r2_flip", "=", "input_dict", "[", "\"input_k_r2_flip_aug\"", "]", "\n", "\n", "output_dict_r", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_r1_flip", ",", "input_r2_flip", ",", "k_r1_flip", ",", "k_r2_flip", ")", "\n", "\n", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict_r", "[", "'flow_f'", "]", ")", ")", ":", "\n", "                ", "output_dict_r", "[", "'flow_f'", "]", "[", "ii", "]", "=", "flow_horizontal_flip", "(", "output_dict_r", "[", "'flow_f'", "]", "[", "ii", "]", ")", "\n", "output_dict_r", "[", "'flow_b'", "]", "[", "ii", "]", "=", "flow_horizontal_flip", "(", "output_dict_r", "[", "'flow_b'", "]", "[", "ii", "]", ")", "\n", "output_dict_r", "[", "'disp_l1'", "]", "[", "ii", "]", "=", "torch", ".", "flip", "(", "output_dict_r", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", "\n", "output_dict_r", "[", "'disp_l2'", "]", "[", "ii", "]", "=", "torch", ".", "flip", "(", "output_dict_r", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", "\n", "\n", "", "output_dict", "[", "'output_dict_r'", "]", "=", "output_dict_r", "\n", "\n", "\n", "## Eval", "\n", "", "if", "self", ".", "_args", ".", "evaluation", ":", "\n", "            ", "input_l1_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_l1_aug'", "]", ",", "[", "3", "]", ")", "\n", "input_l2_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_l2_aug'", "]", ",", "[", "3", "]", ")", "\n", "k_l1_flip", "=", "input_dict", "[", "\"input_k_l1_flip_aug\"", "]", "\n", "k_l2_flip", "=", "input_dict", "[", "\"input_k_l2_flip_aug\"", "]", "\n", "\n", "output_dict_flip", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_l1_flip", ",", "input_l2_flip", ",", "k_l1_flip", ",", "k_l2_flip", ")", "\n", "\n", "flow_f_pp", "=", "[", "]", "\n", "flow_b_pp", "=", "[", "]", "\n", "disp_l1_pp", "=", "[", "]", "\n", "disp_l2_pp", "=", "[", "]", "\n", "\n", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict_flip", "[", "'flow_f'", "]", ")", ")", ":", "\n", "\n", "                ", "flow_f_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'flow_f'", "]", "[", "ii", "]", ",", "flow_horizontal_flip", "(", "output_dict_flip", "[", "'flow_f'", "]", "[", "ii", "]", ")", ")", ")", "\n", "flow_b_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'flow_b'", "]", "[", "ii", "]", ",", "flow_horizontal_flip", "(", "output_dict_flip", "[", "'flow_b'", "]", "[", "ii", "]", ")", ")", ")", "\n", "disp_l1_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "torch", ".", "flip", "(", "output_dict_flip", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", ")", ")", "\n", "disp_l2_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "torch", ".", "flip", "(", "output_dict_flip", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", ")", ")", "\n", "\n", "", "output_dict", "[", "'flow_f_pp'", "]", "=", "flow_f_pp", "\n", "output_dict", "[", "'flow_b_pp'", "]", "=", "flow_b_pp", "\n", "output_dict", "[", "'disp_l1_pp'", "]", "=", "disp_l1_pp", "\n", "output_dict", "[", "'disp_l2_pp'", "]", "=", "disp_l2_pp", "\n", "\n", "", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split1.__init__": [[614, 627], ["model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.__init__", "enumerate", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split1.sf_estimators.append", "model_monosceneflow_ablation_decoder_split.SplitDec1"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "SceneFlow_pwcnet_split1", ",", "self", ")", ".", "__init__", "(", "args", ")", "\n", "\n", "for", "l", ",", "ch", "in", "enumerate", "(", "self", ".", "num_chs", "[", ":", ":", "-", "1", "]", ")", ":", "\n", "            ", "if", "l", ">", "self", ".", "output_level", ":", "\n", "                ", "break", "\n", "\n", "", "if", "l", "==", "0", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "\n", "", "else", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "+", "32", "+", "3", "+", "1", "\n", "\n", "", "self", ".", "sf_estimators", ".", "append", "(", "SplitDec1", "(", "num_ch_in", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split2.__init__": [[630, 643], ["model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.__init__", "enumerate", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split2.sf_estimators.append", "model_monosceneflow_ablation_decoder_split.SplitDec2"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "SceneFlow_pwcnet_split2", ",", "self", ")", ".", "__init__", "(", "args", ")", "\n", "\n", "for", "l", ",", "ch", "in", "enumerate", "(", "self", ".", "num_chs", "[", ":", ":", "-", "1", "]", ")", ":", "\n", "            ", "if", "l", ">", "self", ".", "output_level", ":", "\n", "                ", "break", "\n", "\n", "", "if", "l", "==", "0", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "\n", "", "else", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "+", "32", "+", "3", "+", "1", "\n", "\n", "", "self", ".", "sf_estimators", ".", "append", "(", "SplitDec2", "(", "num_ch_in", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split3.__init__": [[646, 659], ["model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.__init__", "enumerate", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split3.sf_estimators.append", "model_monosceneflow_ablation_decoder_split.SplitDec3"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "SceneFlow_pwcnet_split3", ",", "self", ")", ".", "__init__", "(", "args", ")", "\n", "\n", "for", "l", ",", "ch", "in", "enumerate", "(", "self", ".", "num_chs", "[", ":", ":", "-", "1", "]", ")", ":", "\n", "            ", "if", "l", ">", "self", ".", "output_level", ":", "\n", "                ", "break", "\n", "\n", "", "if", "l", "==", "0", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "\n", "", "else", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "+", "32", "+", "3", "+", "1", "\n", "\n", "", "self", ".", "sf_estimators", ".", "append", "(", "SplitDec3", "(", "num_ch_in", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split4.__init__": [[662, 675], ["model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.__init__", "enumerate", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split4.sf_estimators.append", "model_monosceneflow_ablation_decoder_split.SplitDec4"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "SceneFlow_pwcnet_split4", ",", "self", ")", ".", "__init__", "(", "args", ")", "\n", "\n", "for", "l", ",", "ch", "in", "enumerate", "(", "self", ".", "num_chs", "[", ":", ":", "-", "1", "]", ")", ":", "\n", "            ", "if", "l", ">", "self", ".", "output_level", ":", "\n", "                ", "break", "\n", "\n", "", "if", "l", "==", "0", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "\n", "", "else", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "+", "32", "+", "3", "+", "1", "\n", "\n", "", "self", ".", "sf_estimators", ".", "append", "(", "SplitDec4", "(", "num_ch_in", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split5.__init__": [[678, 691], ["model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split_n.__init__", "enumerate", "model_monosceneflow_ablation_decoder_split.SceneFlow_pwcnet_split5.sf_estimators.append", "model_monosceneflow_ablation_decoder_split.SplitDec5"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "SceneFlow_pwcnet_split5", ",", "self", ")", ".", "__init__", "(", "args", ")", "\n", "\n", "for", "l", ",", "ch", "in", "enumerate", "(", "self", ".", "num_chs", "[", ":", ":", "-", "1", "]", ")", ":", "\n", "            ", "if", "l", ">", "self", ".", "output_level", ":", "\n", "                ", "break", "\n", "\n", "", "if", "l", "==", "0", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "\n", "", "else", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "+", "32", "+", "3", "+", "1", "\n", "\n", "", "self", ".", "sf_estimators", ".", "append", "(", "SplitDec5", "(", "num_ch_in", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_CamConv.__init__": [[22, 60], ["torch.Module.__init__", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "modules_sceneflow.FeatureExtractor", "modules_sceneflow.WarpingLayer_SF", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "enumerate", "modules_sceneflow.ContextNetwork", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "modules_camconv.CamConvModule", "modules_sceneflow.initialize_msra", "modules_sceneflow.MonoSceneFlowDecoder", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.flow_estimators.append", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.modules", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.upconv_layers.append", "modules_sceneflow.upconv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.initialize_msra"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "MonoSceneFlow_CamConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_args", "=", "args", "\n", "self", ".", "num_chs", "=", "[", "3", ",", "32", ",", "64", ",", "96", ",", "128", ",", "192", ",", "256", "]", "\n", "self", ".", "search_range", "=", "4", "\n", "self", ".", "output_level", "=", "4", "\n", "self", ".", "num_levels", "=", "7", "\n", "\n", "self", ".", "leakyRELU", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "feature_pyramid_extractor", "=", "FeatureExtractor", "(", "self", ".", "num_chs", ")", "\n", "self", ".", "warping_layer_sf", "=", "WarpingLayer_SF", "(", ")", "\n", "\n", "self", ".", "flow_estimators", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "upconv_layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "self", ".", "dim_corr", "=", "(", "self", ".", "search_range", "*", "2", "+", "1", ")", "**", "2", "\n", "\n", "for", "l", ",", "ch", "in", "enumerate", "(", "self", ".", "num_chs", "[", ":", ":", "-", "1", "]", ")", ":", "\n", "            ", "if", "l", ">", "self", ".", "output_level", ":", "\n", "                ", "break", "\n", "\n", "", "if", "l", "==", "0", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "+", "6", "\n", "", "else", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "+", "32", "+", "3", "+", "1", "+", "6", "\n", "self", ".", "upconv_layers", ".", "append", "(", "upconv", "(", "32", ",", "32", ",", "3", ",", "2", ")", ")", "\n", "\n", "", "layer_sf", "=", "MonoSceneFlowDecoder", "(", "num_ch_in", ")", "\n", "self", ".", "flow_estimators", ".", "append", "(", "layer_sf", ")", "\n", "\n", "", "self", ".", "corr_params", "=", "{", "\"pad_size\"", ":", "self", ".", "search_range", ",", "\"kernel_size\"", ":", "1", ",", "\"max_disp\"", ":", "self", ".", "search_range", ",", "\"stride1\"", ":", "1", ",", "\"stride2\"", ":", "1", ",", "\"corr_multiply\"", ":", "1", "}", "\n", "self", ".", "context_networks", "=", "ContextNetwork", "(", "32", "+", "3", "+", "1", ")", "\n", "self", ".", "sigmoid", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "\n", "self", ".", "camconv", "=", "CamConvModule", "(", ")", "\n", "initialize_msra", "(", "self", ".", "modules", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_CamConv.run_pwc": [[61, 138], ["enumerate", "modules_sceneflow.upsample_outputs_as", "modules_sceneflow.upsample_outputs_as", "modules_sceneflow.upsample_outputs_as", "modules_sceneflow.upsample_outputs_as", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.feature_pyramid_extractor", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.feature_pyramid_extractor", "zip", "correlation_package.correlation.Correlation.apply", "correlation_package.correlation.Correlation.apply", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.leakyRELU", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.leakyRELU", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.warping_layer_sf", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.warping_layer_sf", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.camconv", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.camconv", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.camconv", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.camconv", "sceneflows_f.append", "sceneflows_b.append", "disps_1.append", "disps_2.append", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.context_networks", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.context_networks", "sceneflows_f.append", "sceneflows_b.append", "disps_1.append", "disps_2.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.sigmoid", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.sigmoid", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as"], ["", "def", "run_pwc", "(", "self", ",", "input_dict", ",", "x1_raw", ",", "x2_raw", ",", "k1", ",", "k2", ")", ":", "\n", "\n", "        ", "output_dict", "=", "{", "}", "\n", "\n", "# on the bottom level are original images", "\n", "x1_pyramid", "=", "self", ".", "feature_pyramid_extractor", "(", "x1_raw", ")", "+", "[", "x1_raw", "]", "\n", "x2_pyramid", "=", "self", ".", "feature_pyramid_extractor", "(", "x2_raw", ")", "+", "[", "x2_raw", "]", "\n", "\n", "# outputs", "\n", "sceneflows_f", "=", "[", "]", "\n", "sceneflows_b", "=", "[", "]", "\n", "disps_1", "=", "[", "]", "\n", "disps_2", "=", "[", "]", "\n", "\n", "for", "l", ",", "(", "x1", ",", "x2", ")", "in", "enumerate", "(", "zip", "(", "x1_pyramid", ",", "x2_pyramid", ")", ")", ":", "\n", "\n", "# warping", "\n", "            ", "if", "l", "==", "0", ":", "\n", "                ", "x2_warp", "=", "x2", "\n", "x1_warp", "=", "x1", "\n", "", "else", ":", "\n", "                ", "flow_f", "=", "interpolate2d_as", "(", "flow_f", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "flow_b", "=", "interpolate2d_as", "(", "flow_b", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "disp_l1", "=", "interpolate2d_as", "(", "disp_l1", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "disp_l2", "=", "interpolate2d_as", "(", "disp_l2", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "x1_out", "=", "self", ".", "upconv_layers", "[", "l", "-", "1", "]", "(", "x1_out", ")", "\n", "x2_out", "=", "self", ".", "upconv_layers", "[", "l", "-", "1", "]", "(", "x2_out", ")", "\n", "x2_warp", "=", "self", ".", "warping_layer_sf", "(", "x2", ",", "flow_f", ",", "disp_l1", ",", "k1", ",", "input_dict", "[", "'aug_size'", "]", ")", "# becuase K can be changing when doing augmentation", "\n", "x1_warp", "=", "self", ".", "warping_layer_sf", "(", "x1", ",", "flow_b", ",", "disp_l2", ",", "k2", ",", "input_dict", "[", "'aug_size'", "]", ")", "\n", "\n", "# correlation", "\n", "", "out_corr_f", "=", "Correlation", ".", "apply", "(", "x1", ",", "x2_warp", ",", "self", ".", "corr_params", ")", "\n", "out_corr_b", "=", "Correlation", ".", "apply", "(", "x2", ",", "x1_warp", ",", "self", ".", "corr_params", ")", "\n", "out_corr_relu_f", "=", "self", ".", "leakyRELU", "(", "out_corr_f", ")", "\n", "out_corr_relu_b", "=", "self", ".", "leakyRELU", "(", "out_corr_b", ")", "\n", "\n", "# monosf estimator", "\n", "if", "l", "==", "0", ":", "\n", "                ", "x1", "=", "self", ".", "camconv", "(", "x1", ",", "x1_raw", ",", "k1", ")", "\n", "x2", "=", "self", ".", "camconv", "(", "x2", ",", "x2_raw", ",", "k2", ")", "\n", "x1_out", ",", "flow_f", ",", "disp_l1", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_f", ",", "x1", "]", ",", "dim", "=", "1", ")", ")", "\n", "x2_out", ",", "flow_b", ",", "disp_l2", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_b", ",", "x2", "]", ",", "dim", "=", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "x1", "=", "self", ".", "camconv", "(", "x1", ")", "\n", "x2", "=", "self", ".", "camconv", "(", "x2", ")", "\n", "x1_out", ",", "flow_f_res", ",", "disp_l1", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_f", ",", "x1", ",", "x1_out", ",", "flow_f", ",", "disp_l1", "]", ",", "dim", "=", "1", ")", ")", "\n", "x2_out", ",", "flow_b_res", ",", "disp_l2", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_b", ",", "x2", ",", "x2_out", ",", "flow_b", ",", "disp_l2", "]", ",", "dim", "=", "1", ")", ")", "\n", "flow_f", "=", "flow_f", "+", "flow_f_res", "\n", "flow_b", "=", "flow_b", "+", "flow_b_res", "\n", "\n", "# upsampling or post-processing", "\n", "", "if", "l", "!=", "self", ".", "output_level", ":", "\n", "                ", "disp_l1", "=", "self", ".", "sigmoid", "(", "disp_l1", ")", "*", "0.3", "\n", "disp_l2", "=", "self", ".", "sigmoid", "(", "disp_l2", ")", "*", "0.3", "\n", "sceneflows_f", ".", "append", "(", "flow_f", ")", "\n", "sceneflows_b", ".", "append", "(", "flow_b", ")", "\n", "disps_1", ".", "append", "(", "disp_l1", ")", "\n", "disps_2", ".", "append", "(", "disp_l2", ")", "\n", "", "else", ":", "\n", "                ", "flow_res_f", ",", "disp_l1", "=", "self", ".", "context_networks", "(", "torch", ".", "cat", "(", "[", "x1_out", ",", "flow_f", ",", "disp_l1", "]", ",", "dim", "=", "1", ")", ")", "\n", "flow_res_b", ",", "disp_l2", "=", "self", ".", "context_networks", "(", "torch", ".", "cat", "(", "[", "x2_out", ",", "flow_b", ",", "disp_l2", "]", ",", "dim", "=", "1", ")", ")", "\n", "flow_f", "=", "flow_f", "+", "flow_res_f", "\n", "flow_b", "=", "flow_b", "+", "flow_res_b", "\n", "sceneflows_f", ".", "append", "(", "flow_f", ")", "\n", "sceneflows_b", ".", "append", "(", "flow_b", ")", "\n", "disps_1", ".", "append", "(", "disp_l1", ")", "\n", "disps_2", ".", "append", "(", "disp_l2", ")", "\n", "break", "\n", "\n", "", "", "x1_rev", "=", "x1_pyramid", "[", ":", ":", "-", "1", "]", "\n", "\n", "output_dict", "[", "'flow_f'", "]", "=", "upsample_outputs_as", "(", "sceneflows_f", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "output_dict", "[", "'flow_b'", "]", "=", "upsample_outputs_as", "(", "sceneflows_b", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "output_dict", "[", "'disp_l1'", "]", "=", "upsample_outputs_as", "(", "disps_1", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "output_dict", "[", "'disp_l2'", "]", "=", "upsample_outputs_as", "(", "disps_2", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "\n", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_CamConv.forward": [[140, 191], ["model_monosceneflow_ablation.MonoSceneFlow_CamConv.run_pwc", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.run_pwc", "range", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "model_monosceneflow_ablation.MonoSceneFlow_CamConv.run_pwc", "range", "len", "utils.sceneflow_util.flow_horizontal_flip", "utils.sceneflow_util.flow_horizontal_flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "len", "flow_f_pp.append", "flow_b_pp.append", "disp_l1_pp.append", "disp_l2_pp.append", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.flow_horizontal_flip", "utils.sceneflow_util.flow_horizontal_flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.flow_horizontal_flip"], ["", "def", "forward", "(", "self", ",", "input_dict", ")", ":", "\n", "\n", "        ", "output_dict", "=", "{", "}", "\n", "\n", "## Left", "\n", "output_dict", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_dict", "[", "'input_l1_aug'", "]", ",", "input_dict", "[", "'input_l2_aug'", "]", ",", "input_dict", "[", "'input_k_l1_aug'", "]", ",", "input_dict", "[", "'input_k_l2_aug'", "]", ")", "\n", "\n", "## Right", "\n", "if", "not", "self", ".", "_args", ".", "evaluation", ":", "\n", "            ", "input_r1_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_r1_aug'", "]", ",", "[", "3", "]", ")", "\n", "input_r2_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_r2_aug'", "]", ",", "[", "3", "]", ")", "\n", "k_r1_flip", "=", "input_dict", "[", "\"input_k_r1_flip_aug\"", "]", "\n", "k_r2_flip", "=", "input_dict", "[", "\"input_k_r2_flip_aug\"", "]", "\n", "\n", "output_dict_r", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_r1_flip", ",", "input_r2_flip", ",", "k_r1_flip", ",", "k_r2_flip", ")", "\n", "\n", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict_r", "[", "'flow_f'", "]", ")", ")", ":", "\n", "                ", "output_dict_r", "[", "'flow_f'", "]", "[", "ii", "]", "=", "flow_horizontal_flip", "(", "output_dict_r", "[", "'flow_f'", "]", "[", "ii", "]", ")", "\n", "output_dict_r", "[", "'flow_b'", "]", "[", "ii", "]", "=", "flow_horizontal_flip", "(", "output_dict_r", "[", "'flow_b'", "]", "[", "ii", "]", ")", "\n", "output_dict_r", "[", "'disp_l1'", "]", "[", "ii", "]", "=", "torch", ".", "flip", "(", "output_dict_r", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", "\n", "output_dict_r", "[", "'disp_l2'", "]", "[", "ii", "]", "=", "torch", ".", "flip", "(", "output_dict_r", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", "\n", "\n", "", "output_dict", "[", "'output_dict_r'", "]", "=", "output_dict_r", "\n", "\n", "## Eval", "\n", "", "if", "self", ".", "_args", ".", "evaluation", ":", "\n", "            ", "input_l1_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_l1_aug'", "]", ",", "[", "3", "]", ")", "\n", "input_l2_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_l2_aug'", "]", ",", "[", "3", "]", ")", "\n", "k_l1_flip", "=", "input_dict", "[", "\"input_k_l1_flip_aug\"", "]", "\n", "k_l2_flip", "=", "input_dict", "[", "\"input_k_l2_flip_aug\"", "]", "\n", "\n", "output_dict_flip", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_l1_flip", ",", "input_l2_flip", ",", "k_l1_flip", ",", "k_l2_flip", ")", "\n", "\n", "flow_f_pp", "=", "[", "]", "\n", "flow_b_pp", "=", "[", "]", "\n", "disp_l1_pp", "=", "[", "]", "\n", "disp_l2_pp", "=", "[", "]", "\n", "\n", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict_flip", "[", "'flow_f'", "]", ")", ")", ":", "\n", "\n", "                ", "flow_f_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'flow_f'", "]", "[", "ii", "]", ",", "flow_horizontal_flip", "(", "output_dict_flip", "[", "'flow_f'", "]", "[", "ii", "]", ")", ")", ")", "\n", "flow_b_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'flow_b'", "]", "[", "ii", "]", ",", "flow_horizontal_flip", "(", "output_dict_flip", "[", "'flow_b'", "]", "[", "ii", "]", ")", ")", ")", "\n", "disp_l1_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "torch", ".", "flip", "(", "output_dict_flip", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", ")", ")", "\n", "disp_l2_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "torch", ".", "flip", "(", "output_dict_flip", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", ")", ")", "\n", "\n", "", "output_dict", "[", "'flow_f_pp'", "]", "=", "flow_f_pp", "\n", "output_dict", "[", "'flow_b_pp'", "]", "=", "flow_b_pp", "\n", "output_dict", "[", "'disp_l1_pp'", "]", "=", "disp_l1_pp", "\n", "output_dict", "[", "'disp_l2_pp'", "]", "=", "disp_l2_pp", "\n", "\n", "", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.OpticalFlowDecoder.__init__": [[194, 205], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "ch_in", ")", ":", "\n", "        ", "super", "(", "OpticalFlowDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in", ",", "128", ")", ",", "\n", "conv", "(", "128", ",", "128", ")", ",", "\n", "conv", "(", "128", ",", "96", ")", ",", "\n", "conv", "(", "96", ",", "64", ")", ",", "\n", "conv", "(", "64", ",", "32", ")", "\n", ")", "\n", "self", ".", "conv_sf", "=", "conv", "(", "32", ",", "2", ",", "isReLU", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.OpticalFlowDecoder.forward": [[206, 210], ["model_monosceneflow_ablation.OpticalFlowDecoder.convs", "model_monosceneflow_ablation.OpticalFlowDecoder.conv_sf"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_out", "=", "self", ".", "convs", "(", "x", ")", "\n", "sf", "=", "self", ".", "conv_sf", "(", "x_out", ")", "\n", "return", "x_out", ",", "sf", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.OpticalFlowContextNet.__init__": [[213, 225], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "ch_in", ")", ":", "\n", "        ", "super", "(", "OpticalFlowContextNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in", ",", "128", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "conv", "(", "128", ",", "128", ",", "3", ",", "1", ",", "2", ")", ",", "\n", "conv", "(", "128", ",", "128", ",", "3", ",", "1", ",", "4", ")", ",", "\n", "conv", "(", "128", ",", "96", ",", "3", ",", "1", ",", "8", ")", ",", "\n", "conv", "(", "96", ",", "64", ",", "3", ",", "1", ",", "16", ")", ",", "\n", "conv", "(", "64", ",", "32", ",", "3", ",", "1", ",", "1", ")", "\n", ")", "\n", "self", ".", "conv_sf", "=", "conv", "(", "32", ",", "2", ",", "isReLU", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.OpticalFlowContextNet.forward": [[226, 231], ["model_monosceneflow_ablation.OpticalFlowContextNet.convs", "model_monosceneflow_ablation.OpticalFlowContextNet.conv_sf"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x_out", "=", "self", ".", "convs", "(", "x", ")", "\n", "sf", "=", "self", ".", "conv_sf", "(", "x_out", ")", "\n", "return", "sf", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.__init__": [[234, 270], ["torch.Module.__init__", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "modules_sceneflow.FeatureExtractor", "modules_sceneflow.WarpingLayer_Flow", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "enumerate", "model_monosceneflow_ablation.OpticalFlowContextNet", "modules_sceneflow.initialize_msra", "model_monosceneflow_ablation.OpticalFlowDecoder", "model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.flow_estimators.append", "model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.modules", "model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.upconv_layers.append", "modules_sceneflow.upconv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.initialize_msra"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "MonoSceneFlow_OpticalFlowOnly", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_args", "=", "args", "\n", "self", ".", "num_chs", "=", "[", "3", ",", "32", ",", "64", ",", "96", ",", "128", ",", "192", ",", "256", "]", "\n", "self", ".", "search_range", "=", "4", "\n", "self", ".", "output_level", "=", "4", "\n", "self", ".", "num_levels", "=", "7", "\n", "\n", "self", ".", "leakyRELU", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "feature_pyramid_extractor", "=", "FeatureExtractor", "(", "self", ".", "num_chs", ")", "\n", "self", ".", "warping_layer", "=", "WarpingLayer_Flow", "(", ")", "\n", "\n", "self", ".", "flow_estimators", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "upconv_layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "self", ".", "dim_corr", "=", "(", "self", ".", "search_range", "*", "2", "+", "1", ")", "**", "2", "\n", "\n", "for", "l", ",", "ch", "in", "enumerate", "(", "self", ".", "num_chs", "[", ":", ":", "-", "1", "]", ")", ":", "\n", "            ", "if", "l", ">", "self", ".", "output_level", ":", "\n", "                ", "break", "\n", "\n", "", "if", "l", "==", "0", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "\n", "", "else", ":", "\n", "                ", "num_ch_in", "=", "self", ".", "dim_corr", "+", "ch", "+", "32", "+", "2", "\n", "self", ".", "upconv_layers", ".", "append", "(", "upconv", "(", "32", ",", "32", ",", "3", ",", "2", ")", ")", "\n", "\n", "", "layer_flow", "=", "OpticalFlowDecoder", "(", "num_ch_in", ")", "\n", "self", ".", "flow_estimators", ".", "append", "(", "layer_flow", ")", "\n", "\n", "", "self", ".", "corr_params", "=", "{", "\"pad_size\"", ":", "self", ".", "search_range", ",", "\"kernel_size\"", ":", "1", ",", "\"max_disp\"", ":", "self", ".", "search_range", ",", "\"stride1\"", ":", "1", ",", "\"stride2\"", ":", "1", ",", "\"corr_multiply\"", ":", "1", "}", "\n", "self", ".", "context_networks", "=", "OpticalFlowContextNet", "(", "32", "+", "2", ")", "\n", "\n", "initialize_msra", "(", "self", ".", "modules", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.run_pwc": [[271, 332], ["enumerate", "modules_sceneflow.upsample_outputs_as", "modules_sceneflow.upsample_outputs_as", "model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.feature_pyramid_extractor", "model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.feature_pyramid_extractor", "zip", "correlation_package.correlation.Correlation.apply", "correlation_package.correlation.Correlation.apply", "model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.leakyRELU", "model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.leakyRELU", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.warping_layer", "model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.warping_layer", "flows_f.append", "flows_b.append", "model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.context_networks", "model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.context_networks", "flows_f.append", "flows_b.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as"], ["", "def", "run_pwc", "(", "self", ",", "input_dict", ",", "x1_raw", ",", "x2_raw", ",", "k1", ",", "k2", ")", ":", "\n", "\n", "        ", "output_dict", "=", "{", "}", "\n", "\n", "# on the bottom level are original images", "\n", "x1_pyramid", "=", "self", ".", "feature_pyramid_extractor", "(", "x1_raw", ")", "+", "[", "x1_raw", "]", "\n", "x2_pyramid", "=", "self", ".", "feature_pyramid_extractor", "(", "x2_raw", ")", "+", "[", "x2_raw", "]", "\n", "\n", "# outputs", "\n", "flows_f", "=", "[", "]", "\n", "flows_b", "=", "[", "]", "\n", "\n", "for", "l", ",", "(", "x1", ",", "x2", ")", "in", "enumerate", "(", "zip", "(", "x1_pyramid", ",", "x2_pyramid", ")", ")", ":", "\n", "\n", "# warping", "\n", "            ", "if", "l", "==", "0", ":", "\n", "                ", "x2_warp", "=", "x2", "\n", "x1_warp", "=", "x1", "\n", "", "else", ":", "\n", "                ", "flow_f", "=", "interpolate2d_as", "(", "flow_f", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "flow_b", "=", "interpolate2d_as", "(", "flow_b", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "x1_out", "=", "self", ".", "upconv_layers", "[", "l", "-", "1", "]", "(", "x1_out", ")", "\n", "x2_out", "=", "self", ".", "upconv_layers", "[", "l", "-", "1", "]", "(", "x2_out", ")", "\n", "x2_warp", "=", "self", ".", "warping_layer", "(", "x2", ",", "flow_f", ")", "\n", "x1_warp", "=", "self", ".", "warping_layer", "(", "x1", ",", "flow_b", ")", "\n", "\n", "# correlation", "\n", "", "out_corr_f", "=", "Correlation", ".", "apply", "(", "x1", ",", "x2_warp", ",", "self", ".", "corr_params", ")", "\n", "out_corr_b", "=", "Correlation", ".", "apply", "(", "x2", ",", "x1_warp", ",", "self", ".", "corr_params", ")", "\n", "out_corr_relu_f", "=", "self", ".", "leakyRELU", "(", "out_corr_f", ")", "\n", "out_corr_relu_b", "=", "self", ".", "leakyRELU", "(", "out_corr_b", ")", "\n", "\n", "# flow estimator", "\n", "if", "l", "==", "0", ":", "\n", "                ", "x1_out", ",", "flow_f", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_f", ",", "x1", "]", ",", "dim", "=", "1", ")", ")", "\n", "x2_out", ",", "flow_b", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_b", ",", "x2", "]", ",", "dim", "=", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "x1_out", ",", "flow_f_res", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_f", ",", "x1", ",", "x1_out", ",", "flow_f", "]", ",", "dim", "=", "1", ")", ")", "\n", "x2_out", ",", "flow_b_res", "=", "self", ".", "flow_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "out_corr_relu_b", ",", "x2", ",", "x2_out", ",", "flow_b", "]", ",", "dim", "=", "1", ")", ")", "\n", "flow_f", "=", "flow_f", "+", "flow_f_res", "\n", "flow_b", "=", "flow_b", "+", "flow_b_res", "\n", "\n", "# upsampling or post-processing", "\n", "", "if", "l", "!=", "self", ".", "output_level", ":", "\n", "                ", "flows_f", ".", "append", "(", "flow_f", ")", "\n", "flows_b", ".", "append", "(", "flow_b", ")", "\n", "", "else", ":", "\n", "                ", "flow_res_f", "=", "self", ".", "context_networks", "(", "torch", ".", "cat", "(", "[", "x1_out", ",", "flow_f", "]", ",", "dim", "=", "1", ")", ")", "\n", "flow_res_b", "=", "self", ".", "context_networks", "(", "torch", ".", "cat", "(", "[", "x2_out", ",", "flow_b", "]", ",", "dim", "=", "1", ")", ")", "\n", "flow_f", "=", "flow_f", "+", "flow_res_f", "\n", "flow_b", "=", "flow_b", "+", "flow_res_b", "\n", "flows_f", ".", "append", "(", "flow_f", ")", "\n", "flows_b", ".", "append", "(", "flow_b", ")", "\n", "break", "\n", "\n", "", "", "x1_rev", "=", "x1_pyramid", "[", ":", ":", "-", "1", "]", "\n", "\n", "output_dict", "[", "'flow_f'", "]", "=", "upsample_outputs_as", "(", "flows_f", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "output_dict", "[", "'flow_b'", "]", "=", "upsample_outputs_as", "(", "flows_b", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "\n", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.forward": [[334, 341], ["model_monosceneflow_ablation.MonoSceneFlow_OpticalFlowOnly.run_pwc"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc"], ["", "def", "forward", "(", "self", ",", "input_dict", ")", ":", "\n", "\n", "        ", "output_dict", "=", "{", "}", "\n", "\n", "output_dict", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_dict", "[", "'input_l1_aug'", "]", ",", "input_dict", "[", "'input_l2_aug'", "]", ",", "input_dict", "[", "'input_k_l1_aug'", "]", ",", "input_dict", "[", "'input_k_l2_aug'", "]", ")", "\n", "\n", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.DisparityDecoder.__init__": [[344, 356], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "ch_in", ")", ":", "\n", "        ", "super", "(", "DisparityDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in", ",", "128", ")", ",", "\n", "conv", "(", "128", ",", "128", ")", ",", "\n", "conv", "(", "128", ",", "96", ")", ",", "\n", "conv", "(", "96", ",", "64", ")", ",", "\n", "conv", "(", "64", ",", "32", ")", "\n", ")", "\n", "\n", "self", ".", "conv_d1", "=", "conv", "(", "32", ",", "1", ",", "isReLU", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.DisparityDecoder.forward": [[357, 361], ["model_monosceneflow_ablation.DisparityDecoder.convs", "model_monosceneflow_ablation.DisparityDecoder.conv_d1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_out", "=", "self", ".", "convs", "(", "x", ")", "\n", "disp1", "=", "self", ".", "conv_d1", "(", "x_out", ")", "\n", "return", "x_out", ",", "disp1", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.DisparityContextNet.__init__": [[364, 378], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "ch_in", ")", ":", "\n", "        ", "super", "(", "DisparityContextNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in", ",", "128", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "conv", "(", "128", ",", "128", ",", "3", ",", "1", ",", "2", ")", ",", "\n", "conv", "(", "128", ",", "128", ",", "3", ",", "1", ",", "4", ")", ",", "\n", "conv", "(", "128", ",", "96", ",", "3", ",", "1", ",", "8", ")", ",", "\n", "conv", "(", "96", ",", "64", ",", "3", ",", "1", ",", "16", ")", ",", "\n", "conv", "(", "64", ",", "32", ",", "3", ",", "1", ",", "1", ")", "\n", ")", "\n", "self", ".", "conv_d1", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "32", ",", "1", ",", "isReLU", "=", "False", ")", ",", "\n", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.DisparityContextNet.forward": [[380, 386], ["model_monosceneflow_ablation.DisparityContextNet.convs", "model_monosceneflow_ablation.DisparityContextNet.conv_d1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x_out", "=", "self", ".", "convs", "(", "x", ")", "\n", "disp1", "=", "self", ".", "conv_d1", "(", "x_out", ")", "*", "0.3", "\n", "\n", "return", "sf", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.__init__": [[389, 422], ["torch.Module.__init__", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "modules_sceneflow.FeatureExtractor", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "enumerate", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "model_monosceneflow_ablation.DisparityContextNet", "modules_sceneflow.initialize_msra", "model_monosceneflow_ablation.DisparityDecoder", "model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.disp_estimators.append", "model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.modules", "model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.upconv_layers.append", "modules_sceneflow.upconv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.initialize_msra"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "MonoSceneFlow_DisparityOnly", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_args", "=", "args", "\n", "self", ".", "num_chs", "=", "[", "3", ",", "32", ",", "64", ",", "96", ",", "128", ",", "192", ",", "256", "]", "\n", "self", ".", "search_range", "=", "4", "\n", "self", ".", "output_level", "=", "4", "\n", "self", ".", "num_levels", "=", "7", "\n", "\n", "self", ".", "leakyRELU", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "feature_pyramid_extractor", "=", "FeatureExtractor", "(", "self", ".", "num_chs", ")", "\n", "\n", "self", ".", "disp_estimators", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "upconv_layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "for", "l", ",", "ch", "in", "enumerate", "(", "self", ".", "num_chs", "[", ":", ":", "-", "1", "]", ")", ":", "\n", "            ", "if", "l", ">", "self", ".", "output_level", ":", "\n", "                ", "break", "\n", "\n", "", "if", "l", "==", "0", ":", "\n", "                ", "num_ch_in", "=", "ch", "\n", "", "else", ":", "\n", "                ", "num_ch_in", "=", "ch", "+", "32", "+", "1", "\n", "self", ".", "upconv_layers", ".", "append", "(", "upconv", "(", "32", ",", "32", ",", "3", ",", "2", ")", ")", "\n", "\n", "", "layer_disp", "=", "DisparityDecoder", "(", "num_ch_in", ")", "\n", "self", ".", "disp_estimators", ".", "append", "(", "layer_disp", ")", "\n", "\n", "", "self", ".", "sigmoid", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "context_networks", "=", "DisparityContextNet", "(", "32", "+", "1", ")", "\n", "\n", "initialize_msra", "(", "self", ".", "modules", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc": [[423, 470], ["enumerate", "modules_sceneflow.upsample_outputs_as", "modules_sceneflow.upsample_outputs_as", "model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.feature_pyramid_extractor", "model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.feature_pyramid_extractor", "zip", "disps_1.append", "disps_2.append", "utils.interpolation.interpolate2d_as", "utils.interpolation.interpolate2d_as", "model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.sigmoid", "model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.sigmoid", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as"], ["", "def", "run_pwc", "(", "self", ",", "input_dict", ",", "x1_raw", ",", "x2_raw", ",", "k1", ",", "k2", ")", ":", "\n", "\n", "        ", "output_dict", "=", "{", "}", "\n", "\n", "# on the bottom level are original images", "\n", "x1_pyramid", "=", "self", ".", "feature_pyramid_extractor", "(", "x1_raw", ")", "+", "[", "x1_raw", "]", "\n", "x2_pyramid", "=", "self", ".", "feature_pyramid_extractor", "(", "x2_raw", ")", "+", "[", "x2_raw", "]", "\n", "\n", "# outputs", "\n", "disps_1", "=", "[", "]", "\n", "disps_2", "=", "[", "]", "\n", "\n", "for", "l", ",", "(", "x1", ",", "x2", ")", "in", "enumerate", "(", "zip", "(", "x1_pyramid", ",", "x2_pyramid", ")", ")", ":", "\n", "\n", "# warping", "\n", "            ", "if", "l", "==", "0", ":", "\n", "                ", "x2_warp", "=", "x2", "\n", "x1_warp", "=", "x1", "\n", "", "else", ":", "\n", "                ", "disp_1", "=", "interpolate2d_as", "(", "disp_1", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "disp_2", "=", "interpolate2d_as", "(", "disp_2", ",", "x1", ",", "mode", "=", "\"bilinear\"", ")", "\n", "x1_out", "=", "self", ".", "upconv_layers", "[", "l", "-", "1", "]", "(", "x1_out", ")", "\n", "x2_out", "=", "self", ".", "upconv_layers", "[", "l", "-", "1", "]", "(", "x2_out", ")", "\n", "\n", "# disparity estimator", "\n", "", "if", "l", "==", "0", ":", "\n", "                ", "x1_out", ",", "disp_1", "=", "self", ".", "disp_estimators", "[", "l", "]", "(", "x1", ")", "\n", "x2_out", ",", "disp_2", "=", "self", ".", "disp_estimators", "[", "l", "]", "(", "x2", ")", "\n", "", "else", ":", "\n", "                ", "x1_out", ",", "disp_1", "=", "self", ".", "disp_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "x1", ",", "x1_out", ",", "disp_1", "]", ",", "dim", "=", "1", ")", ")", "\n", "x2_out", ",", "disp_2", "=", "self", ".", "disp_estimators", "[", "l", "]", "(", "torch", ".", "cat", "(", "[", "x2", ",", "x2_out", ",", "disp_2", "]", ",", "dim", "=", "1", ")", ")", "\n", "\n", "# upsampling or post-processing", "\n", "", "disp_1", "=", "self", ".", "sigmoid", "(", "disp_1", ")", "*", "0.3", "\n", "disp_2", "=", "self", ".", "sigmoid", "(", "disp_2", ")", "*", "0.3", "\n", "disps_1", ".", "append", "(", "disp_1", ")", "\n", "disps_2", ".", "append", "(", "disp_2", ")", "\n", "\n", "if", "l", "==", "self", ".", "output_level", ":", "\n", "                ", "break", "\n", "\n", "", "", "x1_rev", "=", "x1_pyramid", "[", ":", ":", "-", "1", "]", "\n", "\n", "output_dict", "[", "'disp_l1'", "]", "=", "upsample_outputs_as", "(", "disps_1", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "output_dict", "[", "'disp_l2'", "]", "=", "upsample_outputs_as", "(", "disps_2", "[", ":", ":", "-", "1", "]", ",", "x1_rev", ")", "\n", "\n", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.forward": [[472, 516], ["model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "range", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "range", "len", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "len", "disp_l1_pp.append", "disp_l2_pp.append", "utils.sceneflow_util.post_processing", "utils.sceneflow_util.post_processing", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monosceneflow_ablation.MonoSceneFlow_DisparityOnly.run_pwc", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.post_processing"], ["", "def", "forward", "(", "self", ",", "input_dict", ")", ":", "\n", "\n", "        ", "output_dict", "=", "{", "}", "\n", "\n", "## Left", "\n", "output_dict", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_dict", "[", "'input_l1_aug'", "]", ",", "input_dict", "[", "'input_l2_aug'", "]", ",", "input_dict", "[", "'input_k_l1_aug'", "]", ",", "input_dict", "[", "'input_k_l2_aug'", "]", ")", "\n", "\n", "## Right", "\n", "if", "not", "self", ".", "_args", ".", "evaluation", ":", "\n", "            ", "input_r1_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_r1_aug'", "]", ",", "[", "3", "]", ")", "\n", "input_r2_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_r2_aug'", "]", ",", "[", "3", "]", ")", "\n", "k_r1_flip", "=", "input_dict", "[", "\"input_k_r1_flip_aug\"", "]", "\n", "k_r2_flip", "=", "input_dict", "[", "\"input_k_r2_flip_aug\"", "]", "\n", "\n", "output_dict_r", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_r1_flip", ",", "input_r2_flip", ",", "k_r1_flip", ",", "k_r2_flip", ")", "\n", "\n", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict_r", "[", "'disp_l1'", "]", ")", ")", ":", "\n", "                ", "output_dict_r", "[", "'disp_l1'", "]", "[", "ii", "]", "=", "torch", ".", "flip", "(", "output_dict_r", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", "\n", "output_dict_r", "[", "'disp_l2'", "]", "[", "ii", "]", "=", "torch", ".", "flip", "(", "output_dict_r", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", "\n", "\n", "", "output_dict", "[", "'output_dict_r'", "]", "=", "output_dict_r", "\n", "\n", "\n", "## Eval", "\n", "", "if", "self", ".", "_args", ".", "evaluation", ":", "\n", "            ", "input_l1_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_l1_aug'", "]", ",", "[", "3", "]", ")", "\n", "input_l2_flip", "=", "torch", ".", "flip", "(", "input_dict", "[", "'input_l2_aug'", "]", ",", "[", "3", "]", ")", "\n", "k_l1_flip", "=", "input_dict", "[", "\"input_k_l1_flip_aug\"", "]", "\n", "k_l2_flip", "=", "input_dict", "[", "\"input_k_l2_flip_aug\"", "]", "\n", "\n", "output_dict_flip", "=", "self", ".", "run_pwc", "(", "input_dict", ",", "input_l1_flip", ",", "input_l2_flip", ",", "k_l1_flip", ",", "k_l2_flip", ")", "\n", "\n", "disp_l1_pp", "=", "[", "]", "\n", "disp_l2_pp", "=", "[", "]", "\n", "\n", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "output_dict_flip", "[", "'disp_l1'", "]", ")", ")", ":", "\n", "\n", "                ", "disp_l1_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "torch", ".", "flip", "(", "output_dict_flip", "[", "'disp_l1'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", ")", ")", "\n", "disp_l2_pp", ".", "append", "(", "post_processing", "(", "output_dict", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "torch", ".", "flip", "(", "output_dict_flip", "[", "'disp_l2'", "]", "[", "ii", "]", ",", "[", "3", "]", ")", ")", ")", "\n", "\n", "", "output_dict", "[", "'disp_l1_pp'", "]", "=", "disp_l1_pp", "\n", "output_dict", "[", "'disp_l2_pp'", "]", "=", "disp_l2_pp", "\n", "\n", "", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monodepth_ablation.MonoDepth_Baseline.__init__": [[10, 15], ["torch.Module.__init__", "modules_monodepth.Resnet18_MonoDepth_Single"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "MonoDepth_Baseline", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_args", "=", "args", "\n", "self", ".", "_mono_resnet18", "=", "Resnet18_MonoDepth_Single", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monodepth_ablation.MonoDepth_Baseline.forward": [[16, 39], ["model_monodepth_ablation.MonoDepth_Baseline._mono_resnet18", "model_monodepth_ablation.MonoDepth_Baseline._mono_resnet18", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_monodepth_ablation.MonoDepth_Baseline._mono_resnet18", "utils.monodepth_eval.disp_post_processing", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.monodepth_eval.disp_post_processing"], ["", "def", "forward", "(", "self", ",", "input_dict", ")", ":", "\n", "\n", "        ", "output_dict", "=", "{", "}", "\n", "\n", "if", "not", "self", ".", "_args", ".", "evaluation", ":", "\n", "            ", "disp_l1_1", ",", "disp_l1_2", ",", "disp_l1_3", ",", "disp_l1_4", "=", "self", ".", "_mono_resnet18", "(", "input_dict", "[", "'input_l1'", "]", ")", "\n", "disp_r1_1", ",", "disp_r1_2", ",", "disp_r1_3", ",", "disp_r1_4", "=", "self", ".", "_mono_resnet18", "(", "torch", ".", "flip", "(", "input_dict", "[", "'input_r1'", "]", ",", "[", "3", "]", ")", ")", "\n", "\n", "disp_r1_1", "=", "torch", ".", "flip", "(", "disp_r1_1", ",", "[", "3", "]", ")", "\n", "disp_r1_2", "=", "torch", ".", "flip", "(", "disp_r1_2", ",", "[", "3", "]", ")", "\n", "disp_r1_3", "=", "torch", ".", "flip", "(", "disp_r1_3", ",", "[", "3", "]", ")", "\n", "disp_r1_4", "=", "torch", ".", "flip", "(", "disp_r1_4", ",", "[", "3", "]", ")", "\n", "\n", "output_dict", "[", "'disp_l1'", "]", "=", "[", "disp_l1_1", ",", "disp_l1_2", ",", "disp_l1_3", ",", "disp_l1_4", "]", "\n", "output_dict", "[", "'disp_r1'", "]", "=", "[", "disp_r1_1", ",", "disp_r1_2", ",", "disp_r1_3", ",", "disp_r1_4", "]", "\n", "\n", "", "else", ":", "\n", "            ", "inputs", "=", "torch", ".", "cat", "(", "(", "input_dict", "[", "'input_l1'", "]", ",", "torch", ".", "flip", "(", "input_dict", "[", "'input_l1'", "]", ",", "[", "3", "]", ")", ")", ",", "dim", "=", "0", ")", "\n", "disp_l1_1", ",", "disp_l1_2", ",", "disp_l1_3", ",", "disp_l1_4", "=", "self", ".", "_mono_resnet18", "(", "inputs", ")", "\n", "out_disp_1_pp", "=", "disp_post_processing", "(", "disp_l1_1", ")", "\n", "output_dict", "[", "'disp_l1_pp'", "]", "=", "[", "out_disp_1_pp", "]", "\n", "\n", "", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monodepth_ablation.MonoDepth_CamConv.__init__": [[42, 47], ["torch.Module.__init__", "modules_monodepth.Resnet18_MonoDepth_Single_CamConv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "MonoDepth_CamConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_args", "=", "args", "\n", "self", ".", "_mono_resnet18", "=", "Resnet18_MonoDepth_Single_CamConv", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.model_monodepth_ablation.MonoDepth_CamConv.forward": [[48, 72], ["model_monodepth_ablation.MonoDepth_CamConv._mono_resnet18", "model_monodepth_ablation.MonoDepth_CamConv._mono_resnet18", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_monodepth_ablation.MonoDepth_CamConv._mono_resnet18", "utils.monodepth_eval.disp_post_processing", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.monodepth_eval.disp_post_processing"], ["", "def", "forward", "(", "self", ",", "input_dict", ")", ":", "\n", "\n", "        ", "output_dict", "=", "{", "}", "\n", "\n", "if", "not", "self", ".", "_args", ".", "evaluation", ":", "\n", "            ", "disp_l1_1", ",", "disp_l1_2", ",", "disp_l1_3", ",", "disp_l1_4", "=", "self", ".", "_mono_resnet18", "(", "input_dict", "[", "'input_l1'", "]", ",", "input_dict", "[", "'input_k_l1'", "]", ")", "\n", "disp_r1_1", ",", "disp_r1_2", ",", "disp_r1_3", ",", "disp_r1_4", "=", "self", ".", "_mono_resnet18", "(", "torch", ".", "flip", "(", "input_dict", "[", "'input_r1'", "]", ",", "[", "3", "]", ")", ",", "input_dict", "[", "'input_k_r1_flip'", "]", ")", "\n", "\n", "disp_r1_1", "=", "torch", ".", "flip", "(", "disp_r1_1", ",", "[", "3", "]", ")", "\n", "disp_r1_2", "=", "torch", ".", "flip", "(", "disp_r1_2", ",", "[", "3", "]", ")", "\n", "disp_r1_3", "=", "torch", ".", "flip", "(", "disp_r1_3", ",", "[", "3", "]", ")", "\n", "disp_r1_4", "=", "torch", ".", "flip", "(", "disp_r1_4", ",", "[", "3", "]", ")", "\n", "\n", "output_dict", "[", "'disp_l1'", "]", "=", "[", "disp_l1_1", ",", "disp_l1_2", ",", "disp_l1_3", ",", "disp_l1_4", "]", "\n", "output_dict", "[", "'disp_r1'", "]", "=", "[", "disp_r1_1", ",", "disp_r1_2", ",", "disp_r1_3", ",", "disp_r1_4", "]", "\n", "\n", "", "else", ":", "\n", "            ", "input_img", "=", "torch", ".", "cat", "(", "(", "input_dict", "[", "'input_l1'", "]", ",", "torch", ".", "flip", "(", "input_dict", "[", "'input_l1'", "]", ",", "[", "3", "]", ")", ")", ",", "dim", "=", "0", ")", "\n", "intrinsic", "=", "torch", ".", "cat", "(", "(", "input_dict", "[", "'input_k_l1'", "]", ",", "input_dict", "[", "'input_k_l1_flip'", "]", ")", ",", "dim", "=", "0", ")", "\n", "disp_l1_1", ",", "disp_l1_2", ",", "disp_l1_3", ",", "disp_l1_4", "=", "self", ".", "_mono_resnet18", "(", "input_img", ",", "intrinsic", ")", "\n", "out_disp_1_pp", "=", "disp_post_processing", "(", "disp_l1_1", ")", "\n", "output_dict", "[", "'disp_l1_pp'", "]", "=", "[", "out_disp_1_pp", "]", "\n", "\n", "", "return", "output_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.WarpingLayer_Flow.__init__": [[20, 22], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "WarpingLayer_Flow", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.WarpingLayer_Flow.forward": [[23, 38], ["flo_list.append", "flo_list.append", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.add().transpose().transpose", "torch.add().transpose().transpose", "torch.add().transpose().transpose", "torch.add().transpose().transpose", "torch.add().transpose().transpose", "torch.add().transpose().transpose", "torch.add().transpose().transpose", "torch.add().transpose().transpose", "torch.add().transpose().transpose", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "max", "max", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.add().transpose", "torch.add().transpose", "torch.add().transpose", "torch.add().transpose", "torch.add().transpose", "torch.add().transpose", "torch.add().transpose", "torch.add().transpose", "torch.add().transpose", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "x.size", "x.size", "x.size", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "modules_sceneflow.get_grid"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.get_grid"], ["", "def", "forward", "(", "self", ",", "x", ",", "flow", ")", ":", "\n", "        ", "flo_list", "=", "[", "]", "\n", "flo_w", "=", "flow", "[", ":", ",", "0", "]", "*", "2", "/", "max", "(", "x", ".", "size", "(", "3", ")", "-", "1", ",", "1", ")", "\n", "flo_h", "=", "flow", "[", ":", ",", "1", "]", "*", "2", "/", "max", "(", "x", ".", "size", "(", "2", ")", "-", "1", ",", "1", ")", "\n", "flo_list", ".", "append", "(", "flo_w", ")", "\n", "flo_list", ".", "append", "(", "flo_h", ")", "\n", "flow_for_grid", "=", "torch", ".", "stack", "(", "flo_list", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grid", "=", "torch", ".", "add", "(", "get_grid", "(", "x", ")", ",", "flow_for_grid", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "transpose", "(", "2", ",", "3", ")", "\n", "x_warp", "=", "tf", ".", "grid_sample", "(", "x", ",", "grid", ")", "\n", "\n", "mask", "=", "torch", ".", "ones", "(", "x", ".", "size", "(", ")", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", "\n", "mask", "=", "tf", ".", "grid_sample", "(", "mask", ",", "grid", ")", "\n", "mask", "=", "(", "mask", ">=", "1.0", ")", ".", "float", "(", ")", "\n", "\n", "return", "x_warp", "*", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.WarpingLayer_SF.__init__": [[41, 43], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "WarpingLayer_SF", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.WarpingLayer_SF.forward": [[44, 64], ["x.size", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "utils.sceneflow_util.pixel2pts_ms", "utils.sceneflow_util.pts2pixel_ms", "coord1.transpose().transpose", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "utils.interpolation.interpolate2d_as", "coord1.transpose"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.pixel2pts_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.sceneflow_util.pts2pixel_ms", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as"], ["", "def", "forward", "(", "self", ",", "x", ",", "sceneflow", ",", "disp", ",", "k1", ",", "input_size", ")", ":", "\n", "\n", "        ", "_", ",", "_", ",", "h_x", ",", "w_x", "=", "x", ".", "size", "(", ")", "\n", "disp", "=", "interpolate2d_as", "(", "disp", ",", "x", ")", "*", "w_x", "\n", "\n", "local_scale", "=", "torch", ".", "zeros_like", "(", "input_size", ")", "\n", "local_scale", "[", ":", ",", "0", "]", "=", "h_x", "\n", "local_scale", "[", ":", ",", "1", "]", "=", "w_x", "\n", "\n", "pts1", ",", "k1_scale", "=", "pixel2pts_ms", "(", "k1", ",", "disp", ",", "local_scale", "/", "input_size", ")", "\n", "_", ",", "_", ",", "coord1", "=", "pts2pixel_ms", "(", "k1_scale", ",", "pts1", ",", "sceneflow", ",", "[", "h_x", ",", "w_x", "]", ")", "\n", "\n", "grid", "=", "coord1", ".", "transpose", "(", "1", ",", "2", ")", ".", "transpose", "(", "2", ",", "3", ")", "\n", "x_warp", "=", "tf", ".", "grid_sample", "(", "x", ",", "grid", ")", "\n", "\n", "mask", "=", "torch", ".", "ones_like", "(", "x", ",", "requires_grad", "=", "False", ")", "\n", "mask", "=", "tf", ".", "grid_sample", "(", "mask", ",", "grid", ")", "\n", "mask", "=", "(", "mask", ">=", "1.0", ")", ".", "float", "(", ")", "\n", "\n", "return", "x_warp", "*", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upconv.__init__": [[109, 113], ["torch.Module.__init__", "modules_sceneflow.conv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "num_in_layers", ",", "num_out_layers", ",", "kernel_size", ",", "scale", ")", ":", "\n", "        ", "super", "(", "upconv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "conv1", "=", "conv", "(", "num_in_layers", ",", "num_out_layers", ",", "kernel_size", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upconv.forward": [[114, 117], ["torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "modules_sceneflow.upconv.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "nn", ".", "functional", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "self", ".", "scale", ",", "mode", "=", "'nearest'", ")", "\n", "return", "self", ".", "conv1", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.FeatureExtractor.__init__": [[120, 131], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "enumerate", "zip", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.FeatureExtractor.convs.append", "modules_sceneflow.conv", "modules_sceneflow.conv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "num_chs", ")", ":", "\n", "        ", "super", "(", "FeatureExtractor", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_chs", "=", "num_chs", "\n", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "for", "l", ",", "(", "ch_in", ",", "ch_out", ")", "in", "enumerate", "(", "zip", "(", "num_chs", "[", ":", "-", "1", "]", ",", "num_chs", "[", "1", ":", "]", ")", ")", ":", "\n", "            ", "layer", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in", ",", "ch_out", ",", "stride", "=", "2", ")", ",", "\n", "conv", "(", "ch_out", ",", "ch_out", ")", "\n", ")", "\n", "self", ".", "convs", ".", "append", "(", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.FeatureExtractor.forward": [[132, 139], ["modules_sceneflow.conv", "feature_pyramid.append"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feature_pyramid", "=", "[", "]", "\n", "for", "conv", "in", "self", ".", "convs", ":", "\n", "            ", "x", "=", "conv", "(", "x", ")", "\n", "feature_pyramid", ".", "append", "(", "x", ")", "\n", "\n", "", "return", "feature_pyramid", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.MonoSceneFlowDecoder.__init__": [[142, 154], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "ch_in", ")", ":", "\n", "        ", "super", "(", "MonoSceneFlowDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in", ",", "128", ")", ",", "\n", "conv", "(", "128", ",", "128", ")", ",", "\n", "conv", "(", "128", ",", "96", ")", ",", "\n", "conv", "(", "96", ",", "64", ")", ",", "\n", "conv", "(", "64", ",", "32", ")", "\n", ")", "\n", "self", ".", "conv_sf", "=", "conv", "(", "32", ",", "3", ",", "isReLU", "=", "False", ")", "\n", "self", ".", "conv_d1", "=", "conv", "(", "32", ",", "1", ",", "isReLU", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.MonoSceneFlowDecoder.forward": [[155, 161], ["modules_sceneflow.MonoSceneFlowDecoder.convs", "modules_sceneflow.MonoSceneFlowDecoder.conv_sf", "modules_sceneflow.MonoSceneFlowDecoder.conv_d1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_out", "=", "self", ".", "convs", "(", "x", ")", "\n", "sf", "=", "self", ".", "conv_sf", "(", "x_out", ")", "\n", "disp1", "=", "self", ".", "conv_d1", "(", "x_out", ")", "\n", "\n", "return", "x_out", ",", "sf", ",", "disp1", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.ContextNetwork.__init__": [[164, 179], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "modules_sceneflow.conv", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv", "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv"], ["    ", "def", "__init__", "(", "self", ",", "ch_in", ")", ":", "\n", "        ", "super", "(", "ContextNetwork", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "ch_in", ",", "128", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "conv", "(", "128", ",", "128", ",", "3", ",", "1", ",", "2", ")", ",", "\n", "conv", "(", "128", ",", "128", ",", "3", ",", "1", ",", "4", ")", ",", "\n", "conv", "(", "128", ",", "96", ",", "3", ",", "1", ",", "8", ")", ",", "\n", "conv", "(", "96", ",", "64", ",", "3", ",", "1", ",", "16", ")", ",", "\n", "conv", "(", "64", ",", "32", ",", "3", ",", "1", ",", "1", ")", "\n", ")", "\n", "self", ".", "conv_sf", "=", "conv", "(", "32", ",", "3", ",", "isReLU", "=", "False", ")", "\n", "self", ".", "conv_d1", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "32", ",", "1", ",", "isReLU", "=", "False", ")", ",", "\n", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.ContextNetwork.forward": [[181, 188], ["modules_sceneflow.ContextNetwork.convs", "modules_sceneflow.ContextNetwork.conv_sf", "modules_sceneflow.ContextNetwork.conv_d1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x_out", "=", "self", ".", "convs", "(", "x", ")", "\n", "sf", "=", "self", ".", "conv_sf", "(", "x_out", ")", "\n", "disp1", "=", "self", ".", "conv_d1", "(", "x_out", ")", "*", "0.3", "\n", "\n", "return", "sf", ",", "disp1", "\n", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.get_grid": [[11, 17], ["torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat.float().requires_grad_().cuda", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.cat.float().requires_grad_", "x.size", "x.size", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.cat.float", "x.size", "x.size"], "function", ["None"], ["def", "get_grid", "(", "x", ")", ":", "\n", "    ", "grid_H", "=", "torch", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "x", ".", "size", "(", "3", ")", ")", ".", "view", "(", "1", ",", "1", ",", "1", ",", "x", ".", "size", "(", "3", ")", ")", ".", "expand", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "grid_V", "=", "torch", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "x", ".", "size", "(", "2", ")", ")", ".", "view", "(", "1", ",", "1", ",", "x", ".", "size", "(", "2", ")", ",", "1", ")", ".", "expand", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "grid", "=", "torch", ".", "cat", "(", "[", "grid_H", ",", "grid_V", "]", ",", "1", ")", "\n", "grids_cuda", "=", "grid", ".", "float", "(", ")", ".", "requires_grad_", "(", "False", ")", ".", "cuda", "(", ")", "\n", "return", "grids_cuda", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.initialize_msra": [[66, 84], ["logging.info", "isinstance", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "isinstance"], "function", ["None"], ["", "", "def", "initialize_msra", "(", "modules", ")", ":", "\n", "    ", "logging", ".", "info", "(", "\"Initializing MSRA\"", ")", "\n", "for", "layer", "in", "modules", ":", "\n", "        ", "if", "isinstance", "(", "layer", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "nn", ".", "init", ".", "kaiming_normal_", "(", "layer", ".", "weight", ")", "\n", "if", "layer", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "layer", ".", "bias", ",", "0", ")", "\n", "\n", "", "", "elif", "isinstance", "(", "layer", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "            ", "nn", ".", "init", ".", "kaiming_normal_", "(", "layer", ".", "weight", ")", "\n", "if", "layer", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "layer", ".", "bias", ",", "0", ")", "\n", "\n", "", "", "elif", "isinstance", "(", "layer", ",", "nn", ".", "LeakyReLU", ")", ":", "\n", "            ", "pass", "\n", "\n", "", "elif", "isinstance", "(", "layer", ",", "nn", ".", "Sequential", ")", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.upsample_outputs_as": [[86, 92], ["range", "len", "output_list.append", "utils.interpolation.interpolate2d_as"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.interpolation.interpolate2d_as"], ["", "", "", "def", "upsample_outputs_as", "(", "input_list", ",", "ref_list", ")", ":", "\n", "    ", "output_list", "=", "[", "]", "\n", "for", "ii", "in", "range", "(", "0", ",", "len", "(", "input_list", ")", ")", ":", "\n", "        ", "output_list", ".", "append", "(", "interpolate2d_as", "(", "input_list", "[", "ii", "]", ",", "ref_list", "[", "ii", "]", ")", ")", "\n", "\n", "", "return", "output_list", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.models.modules_sceneflow.conv": [[94, 105], ["torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.LeakyReLU", "torch.Conv2d"], "function", ["None"], ["", "def", "conv", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "isReLU", "=", "True", ")", ":", "\n", "    ", "if", "isReLU", ":", "\n", "        ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "dilation", "=", "dilation", ",", "\n", "padding", "=", "(", "(", "kernel_size", "-", "1", ")", "*", "dilation", ")", "//", "2", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", ")", "\n", "", "else", ":", "\n", "        ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "dilation", "=", "dilation", ",", "\n", "padding", "=", "(", "(", "kernel_size", "-", "1", ")", "*", "dilation", ")", "//", "2", ",", "bias", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.correlation_package.correlation.Correlation.forward": [[8, 28], ["ctx.save_for_backward", "torch.cuda.device_of", "input1.new", "input2.new", "input1.new", "correlation_cuda.forward"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.ModelAndLoss.forward"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "input1", ",", "input2", ",", "param_dict", ")", ":", "\n", "        ", "ctx", ".", "save_for_backward", "(", "input1", ",", "input2", ")", "\n", "\n", "ctx", ".", "pad_size", "=", "param_dict", "[", "\"pad_size\"", "]", "\n", "ctx", ".", "kernel_size", "=", "param_dict", "[", "\"kernel_size\"", "]", "\n", "ctx", ".", "max_disp", "=", "param_dict", "[", "\"max_disp\"", "]", "\n", "ctx", ".", "stride1", "=", "param_dict", "[", "\"stride1\"", "]", "\n", "ctx", ".", "stride2", "=", "param_dict", "[", "\"stride2\"", "]", "\n", "ctx", ".", "corr_multiply", "=", "param_dict", "[", "\"corr_multiply\"", "]", "\n", "\n", "with", "torch", ".", "cuda", ".", "device_of", "(", "input1", ")", ":", "\n", "            ", "rbot1", "=", "input1", ".", "new", "(", ")", "\n", "rbot2", "=", "input2", ".", "new", "(", ")", "\n", "output", "=", "input1", ".", "new", "(", ")", "\n", "\n", "correlation_cuda", ".", "forward", "(", "input1", ",", "input2", ",", "rbot1", ",", "rbot2", ",", "output", ",", "\n", "ctx", ".", "pad_size", ",", "ctx", ".", "kernel_size", ",", "ctx", ".", "max_disp", ",", "ctx", ".", "stride1", ",", "ctx", ".", "stride2", ",", "ctx", ".", "corr_multiply", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.correlation_package.correlation.Correlation.backward": [[29, 44], ["torch.cuda.device_of", "input1.new", "input2.new", "input1.new", "input2.new", "correlation_cuda.backward"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.forwardwarp_package.forward_warp.forward_warp_function.backward"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "input1", ",", "input2", "=", "ctx", ".", "saved_tensors", "\n", "\n", "with", "torch", ".", "cuda", ".", "device_of", "(", "input1", ")", ":", "\n", "            ", "rbot1", "=", "input1", ".", "new", "(", ")", "\n", "rbot2", "=", "input2", ".", "new", "(", ")", "\n", "\n", "grad_input1", "=", "input1", ".", "new", "(", ")", "\n", "grad_input2", "=", "input2", ".", "new", "(", ")", "\n", "\n", "correlation_cuda", ".", "backward", "(", "input1", ",", "input2", ",", "rbot1", ",", "rbot2", ",", "grad_output", ",", "grad_input1", ",", "grad_input2", ",", "\n", "ctx", ".", "pad_size", ",", "ctx", ".", "kernel_size", ",", "ctx", ".", "max_disp", ",", "ctx", ".", "stride1", ",", "ctx", ".", "stride2", ",", "ctx", ".", "corr_multiply", ")", "\n", "\n", "", "return", "grad_input1", ",", "grad_input2", ",", "None", "\n", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.forwardwarp_package.forward_warp.forward_warp_function.forward": [[9, 30], ["im0.contiguous.contiguous.contiguous", "flow.contiguous.contiguous.contiguous", "ctx.save_for_backward", "torch.zeros", "forward_warp_cuda.forward", "len", "len", "im0.contiguous.contiguous.size"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.ModelAndLoss.forward"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "im0", ",", "flow", ")", ":", "\n", "        ", "'''\n        im0: the first image with shape [B, C, H, W]\n        flow: the optical flow with shape [B, H, W, 2] (different to grid_sample, it's range is from [-W, -H] to [W, H])\n        '''", "\n", "assert", "(", "len", "(", "im0", ".", "shape", ")", "==", "len", "(", "flow", ".", "shape", ")", "==", "4", ")", "\n", "assert", "(", "im0", ".", "shape", "[", "0", "]", "==", "flow", ".", "shape", "[", "0", "]", ")", "\n", "assert", "(", "im0", ".", "shape", "[", "-", "2", ":", "]", "==", "flow", ".", "shape", "[", "1", ":", "3", "]", ")", "\n", "assert", "(", "flow", ".", "shape", "[", "3", "]", "==", "2", ")", "\n", "\n", "im0", "=", "im0", ".", "contiguous", "(", ")", "\n", "flow", "=", "flow", ".", "contiguous", "(", ")", "\n", "ctx", ".", "save_for_backward", "(", "im0", ",", "flow", ")", "\n", "\n", "im1", "=", "torch", ".", "zeros", "(", "im0", ".", "size", "(", ")", ",", "dtype", "=", "im0", ".", "dtype", ",", "layout", "=", "im0", ".", "layout", ",", "device", "=", "im0", ".", "device", ")", "\n", "\n", "# with torch.cuda.device_of(im0):", "\n", "forward_warp_cuda", ".", "forward", "(", "im0", ",", "flow", ",", "im1", ")", "\n", "\n", "return", "im1", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.forwardwarp_package.forward_warp.forward_warp_function.backward": [[31, 43], ["grad_output.contiguous.contiguous.contiguous", "torch.zeros", "torch.zeros", "forward_warp_cuda.backward", "im0.size", "flow.size"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.forwardwarp_package.forward_warp.forward_warp_function.backward"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "\n", "        ", "grad_output", "=", "grad_output", ".", "contiguous", "(", ")", "\n", "im0", ",", "flow", "=", "ctx", ".", "saved_variables", "\n", "im0_grad", "=", "torch", ".", "zeros", "(", "im0", ".", "size", "(", ")", ",", "dtype", "=", "im0", ".", "dtype", ",", "layout", "=", "im0", ".", "layout", ",", "device", "=", "im0", ".", "device", ")", "\n", "flow_grad", "=", "torch", ".", "zeros", "(", "flow", ".", "size", "(", ")", ",", "dtype", "=", "flow", ".", "dtype", ",", "layout", "=", "flow", ".", "layout", ",", "device", "=", "flow", ".", "device", ")", "\n", "\n", "#with torch.cuda.device_of(im0):", "\n", "forward_warp_cuda", ".", "backward", "(", "grad_output", ",", "im0", ",", "flow", ",", "im0_grad", ",", "flow_grad", ")", "\n", "\n", "return", "im0_grad", ",", "flow_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.forwardwarp_package.forward_warp.forward_warp.__init__": [[47, 49], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "forward_warp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.forwardwarp_package.forward_warp.forward_warp.forward": [[50, 56], ["im0.size", "torch.clamp", "forward_warp_function.apply"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "im0", ",", "flow", ")", ":", "\n", "\n", "        ", "_", ",", "_", ",", "h", ",", "w", "=", "im0", ".", "size", "(", ")", "\n", "flow", "=", "torch", ".", "clamp", "(", "flow", ",", "-", "2", "*", "w", ",", "2", "*", "w", ")", "\n", "\n", "return", "forward_warp_function", ".", "apply", "(", "im0", ",", "flow", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.MovingAverage.__init__": [[287, 290], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_sum", "=", "0.0", "\n", "self", ".", "_count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.MovingAverage.add_value": [[291, 294], ["None"], "methods", ["None"], ["", "def", "add_value", "(", "self", ",", "sigma", ",", "addcount", "=", "1", ")", ":", "\n", "        ", "self", ".", "_sum", "+=", "sigma", "\n", "self", ".", "_count", "+=", "addcount", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.MovingAverage.add_average": [[295, 298], ["None"], "methods", ["None"], ["", "def", "add_average", "(", "self", ",", "avg", ",", "addcount", ")", ":", "\n", "        ", "self", ".", "_sum", "+=", "avg", "*", "addcount", "\n", "self", ".", "_count", "+=", "addcount", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.MovingAverage.mean": [[299, 301], ["None"], "methods", ["None"], ["", "def", "mean", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_sum", "/", "self", ".", "_count", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.__init__": [[306, 310], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "alpha", "=", "0.7", ")", ":", "\n", "        ", "self", ".", "_weighted_sum", "=", "0.0", "\n", "self", ".", "_weighted_count", "=", "0", "\n", "self", ".", "_alpha", "=", "alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.add_value": [[311, 314], ["None"], "methods", ["None"], ["", "def", "add_value", "(", "self", ",", "sigma", ",", "addcount", "=", "1", ")", ":", "\n", "        ", "self", ".", "_weighted_sum", "=", "sigma", "+", "(", "1.0", "-", "self", ".", "_alpha", ")", "*", "self", ".", "_weighted_sum", "\n", "self", ".", "_weighted_count", "=", "1", "+", "(", "1.0", "-", "self", ".", "_alpha", ")", "*", "self", ".", "_weighted_count", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.add_average": [[315, 318], ["None"], "methods", ["None"], ["", "def", "add_average", "(", "self", ",", "avg", ",", "addcount", ")", ":", "\n", "        ", "self", ".", "_weighted_sum", "=", "avg", "*", "addcount", "+", "(", "1.0", "-", "self", ".", "_alpha", ")", "*", "self", ".", "_weighted_sum", "\n", "self", ".", "_weighted_count", "=", "addcount", "+", "(", "1.0", "-", "self", ".", "_alpha", ")", "*", "self", ".", "_weighted_count", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean": [[319, 321], ["None"], "methods", ["None"], ["", "def", "mean", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_weighted_sum", "/", "self", ".", "_weighted_count", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.__init__": [[329, 349], ["tqdm.tqdm.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "iterable", "=", "None", ",", "desc", "=", "None", ",", "total", "=", "None", ",", "leave", "=", "True", ",", "\n", "file", "=", "None", ",", "ncols", "=", "None", ",", "mininterval", "=", "0.1", ",", "\n", "maxinterval", "=", "10.0", ",", "miniters", "=", "None", ",", "ascii", "=", "None", ",", "disable", "=", "False", ",", "\n", "unit", "=", "'it'", ",", "unit_scale", "=", "False", ",", "dynamic_ncols", "=", "False", ",", "\n", "smoothing", "=", "0.3", ",", "bar_format", "=", "None", ",", "initial", "=", "0", ",", "position", "=", "None", ",", "\n", "postfix", "=", "None", ",", "\n", "logging_on_close", "=", "True", ",", "\n", "logging_on_update", "=", "False", ")", ":", "\n", "\n", "        ", "super", "(", "TqdmToLogger", ",", "self", ")", ".", "__init__", "(", "\n", "iterable", "=", "iterable", ",", "desc", "=", "desc", ",", "total", "=", "total", ",", "leave", "=", "leave", ",", "\n", "file", "=", "file", ",", "ncols", "=", "ncols", ",", "mininterval", "=", "mininterval", ",", "\n", "maxinterval", "=", "maxinterval", ",", "miniters", "=", "miniters", ",", "ascii", "=", "ascii", ",", "disable", "=", "disable", ",", "\n", "unit", "=", "unit", ",", "unit_scale", "=", "unit_scale", ",", "dynamic_ncols", "=", "dynamic_ncols", ",", "\n", "smoothing", "=", "smoothing", ",", "bar_format", "=", "bar_format", ",", "initial", "=", "initial", ",", "position", "=", "position", ",", "\n", "postfix", "=", "postfix", ")", "\n", "\n", "self", ".", "_logging_on_close", "=", "logging_on_close", "\n", "self", ".", "_logging_on_update", "=", "logging_on_update", "\n", "self", ".", "_closed", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.format_meter": [[350, 366], ["tqdm.tqdm.format_meter", "meter.replace.replace.replace"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.format_meter"], ["", "@", "staticmethod", "\n", "def", "format_meter", "(", "n", ",", "total", ",", "elapsed", ",", "ncols", "=", "None", ",", "prefix", "=", "''", ",", "ascii", "=", "False", ",", "\n", "unit", "=", "'it'", ",", "unit_scale", "=", "False", ",", "rate", "=", "None", ",", "bar_format", "=", "None", ",", "\n", "postfix", "=", "None", ",", "unit_divisor", "=", "1000", ")", ":", "\n", "\n", "        ", "meter", "=", "tqdm", ".", "tqdm", ".", "format_meter", "(", "\n", "n", "=", "n", ",", "total", "=", "total", ",", "elapsed", "=", "elapsed", ",", "ncols", "=", "ncols", ",", "prefix", "=", "prefix", ",", "ascii", "=", "ascii", ",", "\n", "unit", "=", "unit", ",", "unit_scale", "=", "unit_scale", ",", "rate", "=", "rate", ",", "bar_format", "=", "bar_format", ",", "\n", "postfix", "=", "postfix", ",", "unit_divisor", "=", "unit_divisor", ")", "\n", "\n", "# get rid of that stupid comma before the postfix", "\n", "if", "postfix", "is", "not", "None", ":", "\n", "            ", "postfix_with_comma", "=", "\", %s\"", "%", "postfix", "\n", "meter", "=", "meter", ".", "replace", "(", "postfix_with_comma", ",", "postfix", ")", "\n", "\n", "", "return", "meter", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.update": [[367, 372], ["super().update", "tools.TqdmToLogger.__repr__", "logging.logbook"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.update"], ["", "def", "update", "(", "self", ",", "n", "=", "1", ")", ":", "\n", "        ", "if", "self", ".", "_logging_on_update", ":", "\n", "            ", "msg", "=", "self", ".", "__repr__", "(", ")", "\n", "logging", ".", "logbook", "(", "msg", ")", "\n", "", "return", "super", "(", "TqdmToLogger", ",", "self", ")", ".", "update", "(", "n", "=", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.close": [[373, 379], ["super().close", "tools.TqdmToLogger.__repr__", "logging.logbook"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_logging_on_close", "and", "not", "self", ".", "_closed", ":", "\n", "            ", "msg", "=", "self", ".", "__repr__", "(", ")", "\n", "logging", ".", "logbook", "(", "msg", ")", "\n", "self", ".", "_closed", "=", "True", "\n", "", "return", "super", "(", "TqdmToLogger", ",", "self", ")", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.x2module": [[25, 30], ["isinstance"], "function", ["None"], ["def", "x2module", "(", "module_or_data_parallel", ")", ":", "\n", "    ", "if", "isinstance", "(", "module_or_data_parallel", ",", "torch", ".", "nn", ".", "DataParallel", ")", ":", "\n", "        ", "return", "module_or_data_parallel", ".", "module", "\n", "", "else", ":", "\n", "        ", "return", "module_or_data_parallel", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.addLoggingLevel": [[37, 61], ["hasattr", "hasattr", "hasattr", "logging.addLevelName", "setattr", "setattr", "setattr", "level_name.lower", "AttributeError", "AttributeError", "logging.getLoggerClass", "AttributeError", "tools..isEnabledFor", "logging.log", "logging.getLoggerClass", "tools.._log"], "function", ["None"], ["", "", "def", "addLoggingLevel", "(", "level_name", ",", "level_num", ",", "method_name", "=", "None", ")", ":", "\n", "    ", "if", "not", "method_name", ":", "\n", "        ", "method_name", "=", "level_name", ".", "lower", "(", ")", "\n", "", "if", "hasattr", "(", "logging", ",", "level_name", ")", ":", "\n", "        ", "raise", "AttributeError", "(", "'{} already defined in logging module'", ".", "format", "(", "level_name", ")", ")", "\n", "", "if", "hasattr", "(", "logging", ",", "method_name", ")", ":", "\n", "        ", "raise", "AttributeError", "(", "'{} already defined in logging module'", ".", "format", "(", "method_name", ")", ")", "\n", "", "if", "hasattr", "(", "logging", ".", "getLoggerClass", "(", ")", ",", "method_name", ")", ":", "\n", "        ", "raise", "AttributeError", "(", "'{} already defined in logger class'", ".", "format", "(", "method_name", ")", ")", "\n", "\n", "# This method was inspired by the answers to Stack Overflow post", "\n", "# http://stackoverflow.com/q/2183233/2988730, especially", "\n", "# http://stackoverflow.com/a/13638084/2988730", "\n", "", "def", "logForLevel", "(", "self", ",", "message", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "isEnabledFor", "(", "level_num", ")", ":", "\n", "            ", "self", ".", "_log", "(", "level_num", ",", "message", ",", "args", ",", "**", "kwargs", ")", "\n", "\n", "", "", "def", "logToRoot", "(", "message", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "logging", ".", "log", "(", "level_num", ",", "message", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "", "logging", ".", "addLevelName", "(", "level_num", ",", "level_name", ")", "\n", "setattr", "(", "logging", ",", "level_name", ",", "level_num", ")", "\n", "setattr", "(", "logging", ".", "getLoggerClass", "(", ")", ",", "method_name", ",", "logForLevel", ")", "\n", "setattr", "(", "logging", ",", "method_name", ",", "logToRoot", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.kwargs_from_args": [[67, 78], ["isinstance", "vars", "vars.items", "len", "all"], "function", ["None"], ["", "def", "kwargs_from_args", "(", "args", ",", "name", ",", "exclude", "=", "[", "]", ")", ":", "\n", "    ", "if", "isinstance", "(", "exclude", ",", "str", ")", ":", "\n", "        ", "exclude", "=", "[", "exclude", "]", "\n", "", "exclude", "+=", "[", "\"class\"", "]", "\n", "args_dict", "=", "vars", "(", "args", ")", "\n", "name", "+=", "\"_\"", "\n", "subargs_dict", "=", "{", "\n", "key", "[", "len", "(", "name", ")", ":", "]", ":", "value", "for", "key", ",", "value", "in", "args_dict", ".", "items", "(", ")", "\n", "if", "name", "in", "key", "and", "all", "(", "[", "key", "!=", "name", "+", "x", "for", "x", "in", "exclude", "]", ")", "\n", "}", "\n", "return", "subargs_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.instance_from_kwargs": [[84, 90], ["inspect.getargspec", "dict", "class_constructor", "kwargs.items"], "function", ["None"], ["", "def", "instance_from_kwargs", "(", "class_constructor", ",", "kwargs", ")", ":", "\n", "    ", "argspec", "=", "inspect", ".", "getargspec", "(", "class_constructor", ".", "__init__", ")", "\n", "full_args", "=", "argspec", ".", "args", "\n", "filtered_args", "=", "dict", "(", "[", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "kwargs", ".", "items", "(", ")", "if", "k", "in", "full_args", "]", ")", "\n", "instance", "=", "class_constructor", "(", "**", "filtered_args", ")", "\n", "return", "instance", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.module_classes_to_dict": [[92, 125], ["dict", "dict", "tools.filter_list_of_strings", "dict", "isinstance", "isinstance", "dict.keys", "getattr", "dir", "dict.items", "inspect.isclass", "dict.items", "getattr"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.filter_list_of_strings"], ["", "def", "module_classes_to_dict", "(", "module", ",", "include_classes", "=", "\"*\"", ",", "exclude_classes", "=", "(", ")", ")", ":", "\n", "# -------------------------------------------------------------------------", "\n", "# If arguments are strings, convert them to a list", "\n", "# -------------------------------------------------------------------------", "\n", "    ", "if", "include_classes", "is", "not", "None", ":", "\n", "        ", "if", "isinstance", "(", "include_classes", ",", "str", ")", ":", "\n", "            ", "include_classes", "=", "[", "include_classes", "]", "\n", "\n", "", "", "if", "exclude_classes", "is", "not", "None", ":", "\n", "        ", "if", "isinstance", "(", "exclude_classes", ",", "str", ")", ":", "\n", "            ", "exclude_classes", "=", "[", "exclude_classes", "]", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Obtain dictionary from given module", "\n", "# -------------------------------------------------------------------------", "\n", "", "", "item_dict", "=", "dict", "(", "[", "(", "name", ",", "getattr", "(", "module", ",", "name", ")", ")", "for", "name", "in", "dir", "(", "module", ")", "]", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Filter classes", "\n", "# -------------------------------------------------------------------------", "\n", "item_dict", "=", "dict", "(", "[", "\n", "(", "name", ",", "value", ")", "for", "name", ",", "value", "in", "item_dict", ".", "items", "(", ")", "if", "inspect", ".", "isclass", "(", "getattr", "(", "module", ",", "name", ")", ")", "\n", "]", ")", "\n", "\n", "filtered_keys", "=", "filter_list_of_strings", "(", "\n", "item_dict", ".", "keys", "(", ")", ",", "include", "=", "include_classes", ",", "exclude", "=", "exclude_classes", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Construct dictionary from matched results", "\n", "# -------------------------------------------------------------------------", "\n", "result_dict", "=", "dict", "(", "[", "(", "name", ",", "value", ")", "for", "name", ",", "value", "in", "item_dict", ".", "items", "(", ")", "if", "name", "in", "filtered_keys", "]", ")", "\n", "\n", "return", "result_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ensure_dir": [[127, 131], ["os.path.dirname", "os.path.exists", "os.makedirs"], "function", ["None"], ["", "def", "ensure_dir", "(", "file_path", ")", ":", "\n", "    ", "directory", "=", "os", ".", "path", ".", "dirname", "(", "file_path", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "directory", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "directory", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.search_and_replace": [[133, 141], ["re.search", "string.replace.replace", "re.search.group"], "function", ["None"], ["", "", "def", "search_and_replace", "(", "string", ",", "regex", ",", "replace", ")", ":", "\n", "    ", "while", "True", ":", "\n", "        ", "match", "=", "re", ".", "search", "(", "regex", ",", "string", ")", "\n", "if", "match", ":", "\n", "            ", "string", "=", "string", ".", "replace", "(", "match", ".", "group", "(", "0", ")", ",", "replace", ")", "\n", "", "else", ":", "\n", "            ", "break", "\n", "", "", "return", "string", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.hostname": [[143, 149], ["socket.gethostname", "socket.gethostname.find"], "function", ["None"], ["", "def", "hostname", "(", ")", ":", "\n", "    ", "name", "=", "socket", ".", "gethostname", "(", ")", "\n", "n", "=", "name", ".", "find", "(", "'.'", ")", "\n", "if", "n", ">", "0", ":", "\n", "        ", "name", "=", "name", "[", ":", "n", "]", "\n", "", "return", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.get_filenames": [[151, 168], ["os.walk", "isinstance", "isinstance", "list", "list", "list", "itertools.chain.from_iterable", "itertools.chain.from_iterable", "os.path.join", "set", "set", "fnmatch.filter", "fnmatch.filter"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.SkipLogbookFilter.filter", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.SkipLogbookFilter.filter"], ["", "def", "get_filenames", "(", "directory", ",", "match", "=", "'*.*'", ",", "not_match", "=", "(", ")", ")", ":", "\n", "    ", "if", "match", "is", "not", "None", ":", "\n", "        ", "if", "isinstance", "(", "match", ",", "str", ")", ":", "\n", "            ", "match", "=", "[", "match", "]", "\n", "", "", "if", "not_match", "is", "not", "None", ":", "\n", "        ", "if", "isinstance", "(", "not_match", ",", "str", ")", ":", "\n", "            ", "not_match", "=", "[", "not_match", "]", "\n", "\n", "", "", "result", "=", "[", "]", "\n", "for", "dirpath", ",", "_", ",", "filenames", "in", "os", ".", "walk", "(", "directory", ")", ":", "\n", "        ", "filtered_matches", "=", "list", "(", "itertools", ".", "chain", ".", "from_iterable", "(", "\n", "[", "fnmatch", ".", "filter", "(", "filenames", ",", "x", ")", "for", "x", "in", "match", "]", ")", ")", "\n", "filtered_nomatch", "=", "list", "(", "itertools", ".", "chain", ".", "from_iterable", "(", "\n", "[", "fnmatch", ".", "filter", "(", "filenames", ",", "x", ")", "for", "x", "in", "not_match", "]", ")", ")", "\n", "matched", "=", "list", "(", "set", "(", "filtered_matches", ")", "-", "set", "(", "filtered_nomatch", ")", ")", "\n", "result", "+=", "[", "os", ".", "path", ".", "join", "(", "dirpath", ",", "x", ")", "for", "x", "in", "matched", "]", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.str2bool": [[170, 177], ["v.lower", "v.lower", "argparse.ArgumentTypeError"], "function", ["None"], ["", "def", "str2bool", "(", "v", ")", ":", "\n", "    ", "if", "v", ".", "lower", "(", ")", "in", "(", "'yes'", ",", "'true'", ",", "'t'", ",", "'y'", ",", "'1'", ")", ":", "\n", "        ", "return", "True", "\n", "", "elif", "v", ".", "lower", "(", ")", "in", "(", "'no'", ",", "'false'", ",", "'f'", ",", "'n'", ",", "'0'", ")", ":", "\n", "        ", "return", "False", "\n", "", "else", ":", "\n", "        ", "raise", "argparse", ".", "ArgumentTypeError", "(", "'Boolean value expected.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.str2str_or_none": [[179, 183], ["v.lower"], "function", ["None"], ["", "", "def", "str2str_or_none", "(", "v", ")", ":", "\n", "    ", "if", "v", ".", "lower", "(", ")", "==", "\"none\"", ":", "\n", "        ", "return", "None", "\n", "", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.str2dict": [[185, 187], ["ast.literal_eval"], "function", ["None"], ["", "def", "str2dict", "(", "v", ")", ":", "\n", "    ", "return", "ast", ".", "literal_eval", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.str2intlist": [[189, 191], ["int", "x.strip", "[].split", "v.strip"], "function", ["None"], ["", "def", "str2intlist", "(", "v", ")", ":", "\n", "    ", "return", "[", "int", "(", "x", ".", "strip", "(", ")", ")", "for", "x", "in", "v", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", ".", "split", "(", "','", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.str2list": [[193, 195], ["str", "x.strip", "[].split", "v.strip"], "function", ["None"], ["", "def", "str2list", "(", "v", ")", ":", "\n", "    ", "return", "[", "str", "(", "x", ".", "strip", "(", ")", ")", "for", "x", "in", "v", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", ".", "split", "(", "','", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.read_json": [[197, 222], ["dict", "six.iteritems", "open", "f.readlines", "tools.read_json._convert_from_unicode"], "function", ["None"], ["", "def", "read_json", "(", "filename", ")", ":", "\n", "\n", "    ", "def", "_convert_from_unicode", "(", "data", ")", ":", "\n", "        ", "new_data", "=", "dict", "(", ")", "\n", "for", "name", ",", "value", "in", "six", ".", "iteritems", "(", "data", ")", ":", "\n", "            ", "if", "isinstance", "(", "name", ",", "six", ".", "string_types", ")", ":", "\n", "                ", "name", "=", "unicodedata", ".", "normalize", "(", "'NFKD'", ",", "name", ")", ".", "encode", "(", "\n", "'ascii'", ",", "'ignore'", ")", "\n", "", "if", "isinstance", "(", "value", ",", "six", ".", "string_types", ")", ":", "\n", "                ", "value", "=", "unicodedata", ".", "normalize", "(", "'NFKD'", ",", "value", ")", ".", "encode", "(", "\n", "'ascii'", ",", "'ignore'", ")", "\n", "", "if", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "                ", "value", "=", "_convert_from_unicode", "(", "value", ")", "\n", "", "new_data", "[", "name", "]", "=", "value", "\n", "", "return", "new_data", "\n", "\n", "", "output_dict", "=", "None", "\n", "with", "open", "(", "filename", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "try", ":", "\n", "            ", "output_dict", "=", "json", ".", "loads", "(", "''", ".", "join", "(", "lines", ")", ",", "encoding", "=", "'utf-8'", ")", "\n", "", "except", ":", "\n", "            ", "raise", "ValueError", "(", "'Could not read %s. %s'", "%", "(", "filename", ",", "sys", ".", "exc_info", "(", ")", "[", "1", "]", ")", ")", "\n", "", "output_dict", "=", "_convert_from_unicode", "(", "output_dict", ")", "\n", "", "return", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.write_json": [[224, 227], ["open", "json.dump"], "function", ["None"], ["", "def", "write_json", "(", "data_dict", ",", "filename", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "\"w\"", ")", "as", "file", ":", "\n", "        ", "json", ".", "dump", "(", "data_dict", ",", "file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.datestr": [[229, 233], ["pytz.timezone", "datetime.datetime.now"], "function", ["None"], ["", "", "def", "datestr", "(", ")", ":", "\n", "    ", "pacific", "=", "timezone", "(", "'US/Pacific'", ")", "\n", "now", "=", "datetime", ".", "now", "(", "pacific", ")", "\n", "return", "'{}{:02}{:02}_{:02}{:02}'", ".", "format", "(", "now", ".", "year", ",", "now", ".", "month", ",", "now", ".", "day", ",", "now", ".", "hour", ",", "now", ".", "minute", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.filter_list_of_strings": [[235, 240], ["list", "list", "list", "itertools.chain.from_iterable", "itertools.chain.from_iterable", "set", "set", "fnmatch.filter", "fnmatch.filter"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.SkipLogbookFilter.filter", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.SkipLogbookFilter.filter"], ["", "def", "filter_list_of_strings", "(", "lst", ",", "include", "=", "\"*\"", ",", "exclude", "=", "(", ")", ")", ":", "\n", "    ", "filtered_matches", "=", "list", "(", "itertools", ".", "chain", ".", "from_iterable", "(", "[", "fnmatch", ".", "filter", "(", "lst", ",", "x", ")", "for", "x", "in", "include", "]", ")", ")", "\n", "filtered_nomatch", "=", "list", "(", "itertools", ".", "chain", ".", "from_iterable", "(", "[", "fnmatch", ".", "filter", "(", "lst", ",", "x", ")", "for", "x", "in", "exclude", "]", ")", ")", "\n", "matched", "=", "list", "(", "set", "(", "filtered_matches", ")", "-", "set", "(", "filtered_nomatch", ")", ")", "\n", "return", "matched", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.write_dictionary_to_file": [[246, 282], ["os.path.dirname", "os.path.exists", "os.makedirs", "os.path.splitext", "x.replace", "open", "file.write", "enumerate", "file.write", "open", "isinstance", "file.write", "list", "file.write", "isinstance", "file.write", "file.write", "value.replace.replace", "file.write", "isinstance", "len", "file.write", "file.write", "tools.write_dictionary_to_file.replace_quotes"], "function", ["None"], ["", "def", "write_dictionary_to_file", "(", "arguments_dict", ",", "filename", ")", ":", "\n", "# ensure dir", "\n", "    ", "d", "=", "os", ".", "path", ".", "dirname", "(", "filename", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "d", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "d", ")", "\n", "\n", "# check for json extension", "\n", "", "ext", "=", "os", ".", "path", ".", "splitext", "(", "filename", ")", "[", "1", "]", "\n", "if", "ext", "==", "\".json\"", ":", "\n", "\n", "        ", "def", "replace_quotes", "(", "x", ")", ":", "\n", "            ", "return", "x", ".", "replace", "(", "\"\\'\"", ",", "\"\\\"\"", ")", "\n", "\n", "", "with", "open", "(", "filename", ",", "'w'", ")", "as", "file", ":", "\n", "            ", "file", ".", "write", "(", "\"{\\n\"", ")", "\n", "for", "i", ",", "(", "key", ",", "value", ")", "in", "enumerate", "(", "arguments_dict", ")", ":", "\n", "                ", "if", "isinstance", "(", "value", ",", "tuple", ")", ":", "\n", "                    ", "value", "=", "list", "(", "value", ")", "\n", "", "if", "value", "is", "None", ":", "\n", "                    ", "file", ".", "write", "(", "\"  \\\"%s\\\": null\"", "%", "key", ")", "\n", "", "elif", "isinstance", "(", "value", ",", "str", ")", ":", "\n", "                    ", "value", "=", "value", ".", "replace", "(", "\"\\'\"", ",", "\"\\\"\"", ")", "\n", "file", ".", "write", "(", "\"  \\\"%s\\\": \\\"%s\\\"\"", "%", "(", "key", ",", "replace_quotes", "(", "str", "(", "value", ")", ")", ")", ")", "\n", "", "elif", "isinstance", "(", "value", ",", "bool", ")", ":", "\n", "                    ", "file", ".", "write", "(", "\"  \\\"%s\\\": %s\"", "%", "(", "key", ",", "str", "(", "value", ")", ".", "lower", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "file", ".", "write", "(", "\"  \\\"%s\\\": %s\"", "%", "(", "key", ",", "replace_quotes", "(", "str", "(", "value", ")", ")", ")", ")", "\n", "", "if", "i", "<", "len", "(", "arguments_dict", ")", "-", "1", ":", "\n", "                    ", "file", ".", "write", "(", "',\\n'", ")", "\n", "", "else", ":", "\n", "                    ", "file", ".", "write", "(", "'\\n'", ")", "\n", "", "", "file", ".", "write", "(", "\"}\\n\"", ")", "\n", "", "", "else", ":", "\n", "        ", "with", "open", "(", "filename", ",", "'w'", ")", "as", "file", ":", "\n", "            ", "for", "key", ",", "value", "in", "arguments_dict", ":", "\n", "                ", "file", ".", "write", "(", "'%s: %s\\n'", "%", "(", "key", ",", "value", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.tqdm_with_logging": [[381, 399], ["tools.TqdmToLogger"], "function", ["None"], ["", "", "def", "tqdm_with_logging", "(", "iterable", "=", "None", ",", "desc", "=", "None", ",", "total", "=", "None", ",", "leave", "=", "True", ",", "\n", "ncols", "=", "None", ",", "mininterval", "=", "0.1", ",", "\n", "maxinterval", "=", "10.0", ",", "miniters", "=", "None", ",", "ascii", "=", "None", ",", "disable", "=", "False", ",", "\n", "unit", "=", "\"it\"", ",", "unit_scale", "=", "False", ",", "dynamic_ncols", "=", "False", ",", "\n", "smoothing", "=", "0.3", ",", "bar_format", "=", "None", ",", "initial", "=", "0", ",", "position", "=", "None", ",", "\n", "postfix", "=", "None", ",", "\n", "logging_on_close", "=", "True", ",", "\n", "logging_on_update", "=", "False", ")", ":", "\n", "\n", "    ", "return", "TqdmToLogger", "(", "\n", "iterable", "=", "iterable", ",", "desc", "=", "desc", ",", "total", "=", "total", ",", "leave", "=", "leave", ",", "\n", "ncols", "=", "ncols", ",", "mininterval", "=", "mininterval", ",", "\n", "maxinterval", "=", "maxinterval", ",", "miniters", "=", "miniters", ",", "ascii", "=", "ascii", ",", "disable", "=", "disable", ",", "\n", "unit", "=", "unit", ",", "unit_scale", "=", "unit_scale", ",", "dynamic_ncols", "=", "dynamic_ncols", ",", "\n", "smoothing", "=", "smoothing", ",", "bar_format", "=", "bar_format", ",", "initial", "=", "initial", ",", "position", "=", "position", ",", "\n", "postfix", "=", "postfix", ",", "\n", "logging_on_close", "=", "logging_on_close", ",", "\n", "logging_on_update", "=", "logging_on_update", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.cd_dotdot": [[401, 403], ["os.path.abspath", "os.path.join", "os.path.dirname"], "function", ["None"], ["", "def", "cd_dotdot", "(", "path_or_filename", ")", ":", "\n", "    ", "return", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "path_or_filename", ")", ",", "\"..\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.cd_dotdotdot": [[405, 407], ["os.path.abspath", "os.path.join", "os.path.dirname"], "function", ["None"], ["", "def", "cd_dotdotdot", "(", "path_or_filename", ")", ":", "\n", "    ", "return", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "path_or_filename", ")", ",", "\"../..\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.cd_dotdotdotdot": [[409, 411], ["os.path.abspath", "os.path.join", "os.path.dirname"], "function", ["None"], ["", "def", "cd_dotdotdotdot", "(", "path_or_filename", ")", ":", "\n", "    ", "return", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "path_or_filename", ")", ",", "\"../../..\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.tensor2numpy": [[413, 423], ["isinstance", "isinstance", "tensor.dim", "tensor.cpu().numpy().transpose", "tensor.cpu().numpy().transpose", "tensor.cpu().numpy", "tensor.cpu().numpy", "tensor.cpu", "tensor.cpu"], "function", ["None"], ["", "def", "tensor2numpy", "(", "tensor", ")", ":", "\n", "    ", "if", "isinstance", "(", "tensor", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "return", "tensor", "\n", "", "else", ":", "\n", "        ", "if", "isinstance", "(", "tensor", ",", "torch", ".", "autograd", ".", "Variable", ")", ":", "\n", "            ", "tensor", "=", "tensor", ".", "data", "\n", "", "if", "tensor", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "return", "tensor", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "[", "1", ",", "2", ",", "0", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "tensor", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._get_type_from_arg": [[20, 25], ["isinstance", "type"], "function", ["None"], ["def", "_get_type_from_arg", "(", "arg", ")", ":", "\n", "    ", "if", "isinstance", "(", "arg", ",", "bool", ")", ":", "\n", "        ", "return", "tools", ".", "str2bool", "\n", "", "else", ":", "\n", "        ", "return", "type", "(", "arg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._add_arguments_for_module": [[27, 134], ["core.tools.module_classes_to_dict", "parser.add_argument", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "vars", "inspect.getargspec", "dict", "parser.parse_known_args", "argparse.ArgumentParser.parse_known_args", "zip", "print", "print", "ValueError", "param_defaults.keys", "parser.add_argument", "tools.module_classes_to_dict.keys", "tools.module_classes_to_dict.keys", "dict.keys", "parser.add_argument", "commandline._get_type_from_arg", "forced_default_types.keys", "commandline._get_type_from_arg", "unknown_default_types.keys", "parser.add_argument", "ValueError", "len", "losses", "losses", "models", "augmentations", "augmentations", "datasets", "datasets", "core.optim", "torch.optim.lr_scheduler"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.module_classes_to_dict", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._get_type_from_arg", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._get_type_from_arg"], ["", "", "def", "_add_arguments_for_module", "(", "parser", ",", "\n", "module", ",", "\n", "name", ",", "\n", "default_class", ",", "\n", "add_class_argument", "=", "True", ",", "# whether to add class choice as argument", "\n", "include_classes", "=", "\"*\"", ",", "\n", "exclude_classes", "=", "[", "]", ",", "\n", "exclude_params", "=", "[", "\"self\"", ",", "\"args\"", "]", ",", "\n", "param_defaults", "=", "{", "}", ",", "# allows to overwrite any default param", "\n", "forced_default_types", "=", "{", "}", ",", "# allows to set types for known arguments", "\n", "unknown_default_types", "=", "{", "}", ")", ":", "# allows to set types for unknown arguments", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Determine possible choices from class names in module, possibly apply include/exclude filters", "\n", "# -------------------------------------------------------------------------", "\n", "    ", "module_dict", "=", "tools", ".", "module_classes_to_dict", "(", "\n", "module", ",", "include_classes", "=", "include_classes", ",", "exclude_classes", "=", "exclude_classes", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Parse known arguments to determine choice for argument name", "\n", "# -------------------------------------------------------------------------", "\n", "if", "add_class_argument", ":", "\n", "        ", "parser", ".", "add_argument", "(", "\n", "\"--%s\"", "%", "name", ",", "type", "=", "str", ",", "default", "=", "default_class", ",", "choices", "=", "module_dict", ".", "keys", "(", ")", ")", "\n", "known_args", "=", "parser", ".", "parse_known_args", "(", "sys", ".", "argv", "[", "1", ":", "]", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "# build a temporary parser, and do not add the class as argument", "\n", "        ", "tmp_parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "tmp_parser", ".", "add_argument", "(", "\n", "\"--%s\"", "%", "name", ",", "type", "=", "str", ",", "default", "=", "default_class", ",", "choices", "=", "module_dict", ".", "keys", "(", ")", ")", "\n", "known_args", "=", "tmp_parser", ".", "parse_known_args", "(", "sys", ".", "argv", "[", "1", ":", "]", ")", "[", "0", "]", "\n", "\n", "", "class_name", "=", "vars", "(", "known_args", ")", "[", "name", "]", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# If class is None, there is no point in trying to parse further arguments", "\n", "# -------------------------------------------------------------------------", "\n", "if", "class_name", "is", "None", ":", "\n", "        ", "return", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Get constructor of that argument choice", "\n", "# -------------------------------------------------------------------------", "\n", "", "class_constructor", "=", "module_dict", "[", "class_name", "]", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Determine constructor argument names and defaults", "\n", "# -------------------------------------------------------------------------", "\n", "try", ":", "\n", "        ", "argspec", "=", "inspect", ".", "getargspec", "(", "class_constructor", ".", "__init__", ")", "\n", "argspec_defaults", "=", "argspec", ".", "defaults", "if", "argspec", ".", "defaults", "is", "not", "None", "else", "[", "]", "\n", "full_args", "=", "argspec", ".", "args", "\n", "default_args_dict", "=", "dict", "(", "zip", "(", "argspec", ".", "args", "[", "-", "len", "(", "argspec_defaults", ")", ":", "]", ",", "argspec_defaults", ")", ")", "\n", "", "except", "TypeError", ":", "\n", "        ", "print", "(", "argspec", ")", "\n", "print", "(", "argspec", ".", "defaults", ")", "\n", "raise", "ValueError", "(", "\"unknown_default_types should be adjusted for module: '%s.py'\"", "%", "name", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Add sub_arguments", "\n", "# -------------------------------------------------------------------------", "\n", "", "for", "argname", "in", "full_args", ":", "\n", "\n", "# ---------------------------------------------------------------------", "\n", "# Skip", "\n", "# ---------------------------------------------------------------------", "\n", "        ", "if", "argname", "in", "exclude_params", ":", "\n", "            ", "continue", "\n", "\n", "# ---------------------------------------------------------------------", "\n", "# Sub argument name", "\n", "# ---------------------------------------------------------------------", "\n", "", "sub_arg_name", "=", "\"%s_%s\"", "%", "(", "name", ",", "argname", ")", "\n", "\n", "# ---------------------------------------------------------------------", "\n", "# If a default argument is given, take that one", "\n", "# ---------------------------------------------------------------------", "\n", "if", "argname", "in", "param_defaults", ".", "keys", "(", ")", ":", "\n", "            ", "parser", ".", "add_argument", "(", "\n", "\"--%s\"", "%", "sub_arg_name", ",", "\n", "type", "=", "_get_type_from_arg", "(", "param_defaults", "[", "argname", "]", ")", ",", "\n", "default", "=", "param_defaults", "[", "argname", "]", ")", "\n", "\n", "# ---------------------------------------------------------------------", "\n", "# If a default parameter can be inferred from the module, pick that one", "\n", "# ---------------------------------------------------------------------", "\n", "", "elif", "argname", "in", "default_args_dict", ".", "keys", "(", ")", ":", "\n", "\n", "# -----------------------------------------------------------------", "\n", "# Check for forced default types", "\n", "# -----------------------------------------------------------------", "\n", "            ", "if", "argname", "in", "forced_default_types", ".", "keys", "(", ")", ":", "\n", "                ", "argtype", "=", "forced_default_types", "[", "argname", "]", "\n", "", "else", ":", "\n", "                ", "argtype", "=", "_get_type_from_arg", "(", "default_args_dict", "[", "argname", "]", ")", "\n", "", "parser", ".", "add_argument", "(", "\n", "\"--%s\"", "%", "sub_arg_name", ",", "type", "=", "argtype", ",", "default", "=", "default_args_dict", "[", "argname", "]", ")", "\n", "\n", "# ---------------------------------------------------------------------", "\n", "# Take from the unkowns list", "\n", "# ---------------------------------------------------------------------", "\n", "", "elif", "argname", "in", "unknown_default_types", ".", "keys", "(", ")", ":", "\n", "            ", "parser", ".", "add_argument", "(", "\"--%s\"", "%", "sub_arg_name", ",", "type", "=", "unknown_default_types", "[", "argname", "]", ")", "\n", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Do not know how to handle argument '%s' for class '%s'\"", "%", "(", "argname", ",", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._add_special_arguments": [[136, 175], ["vars", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.parse_known_args"], "function", ["None"], ["", "", "", "def", "_add_special_arguments", "(", "parser", ")", ":", "\n", "# -------------------------------------------------------------------------", "\n", "# Known arguments so far", "\n", "# -------------------------------------------------------------------------", "\n", "    ", "known_args", "=", "vars", "(", "parser", ".", "parse_known_args", "(", "sys", ".", "argv", "[", "1", ":", "]", ")", "[", "0", "]", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Add special arguments for training", "\n", "# -------------------------------------------------------------------------", "\n", "training_loss", "=", "known_args", "[", "\"training_loss\"", "]", "\n", "if", "training_loss", "is", "not", "None", ":", "\n", "        ", "parser", ".", "add_argument", "(", "\"--training_key\"", ",", "type", "=", "str", ",", "default", "=", "\"total_loss\"", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Add special arguments for validation", "\n", "# -------------------------------------------------------------------------", "\n", "", "validation_loss", "=", "known_args", "[", "\"validation_loss\"", "]", "\n", "if", "validation_loss", "is", "not", "None", ":", "\n", "        ", "parser", ".", "add_argument", "(", "\"--validation_key\"", ",", "type", "=", "str", ",", "default", "=", "\"total_loss\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--validation_key_minimize\"", ",", "type", "=", "tools", ".", "str2bool", ",", "default", "=", "True", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Add special arguments for checkpoints", "\n", "# -------------------------------------------------------------------------", "\n", "", "checkpoint", "=", "known_args", "[", "\"checkpoint\"", "]", "\n", "if", "checkpoint", "is", "not", "None", ":", "\n", "        ", "parser", ".", "add_argument", "(", "\n", "\"--checkpoint_mode\"", ",", "type", "=", "str", ",", "default", "=", "\"resume_from_latest\"", ",", "\n", "choices", "=", "[", "\"resume_from_latest\"", ",", "\"resume_from_best\"", "]", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "\"--checkpoint_include_params\"", ",", "type", "=", "tools", ".", "str2list", ",", "default", "=", "\"[*]\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--checkpoint_exclude_params\"", ",", "type", "=", "tools", ".", "str2list", ",", "default", "=", "\"[]\"", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Add special arguments for optimizer groups", "\n", "# -------------------------------------------------------------------------", "\n", "", "parser", ".", "add_argument", "(", "\"--optimizer_group\"", ",", "action", "=", "\"append\"", ",", "type", "=", "tools", ".", "str2dict", ",", "default", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._parse_arguments": [[177, 333], ["argparse.ArgumentParser", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "commandline._add_arguments_for_module", "commandline._add_arguments_for_module", "commandline._add_arguments_for_module", "commandline._add_arguments_for_module", "commandline._add_arguments_for_module", "commandline._add_arguments_for_module", "commandline._add_arguments_for_module", "commandline._add_arguments_for_module", "commandline._add_arguments_for_module", "commandline._add_special_arguments", "argparse.ArgumentParser.parse_args", "vars", "torch.cuda.is_available", "argparse.ArgumentParser.parse_known_args"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._add_arguments_for_module", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._add_arguments_for_module", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._add_arguments_for_module", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._add_arguments_for_module", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._add_arguments_for_module", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._add_arguments_for_module", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._add_arguments_for_module", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._add_arguments_for_module", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._add_arguments_for_module", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._add_special_arguments"], ["", "def", "_parse_arguments", "(", ")", ":", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Argument parser and shortcut function to add arguments", "\n", "# -------------------------------------------------------------------------", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "add", "=", "parser", ".", "add_argument", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Standard arguments", "\n", "# -------------------------------------------------------------------------", "\n", "add", "(", "\"--batch_size\"", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "add", "(", "\"--batch_size_val\"", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "add", "(", "\"--checkpoint\"", ",", "type", "=", "tools", ".", "str2str_or_none", ",", "default", "=", "None", ")", "\n", "add", "(", "\"--cuda\"", ",", "type", "=", "tools", ".", "str2bool", ",", "default", "=", "True", ")", "\n", "add", "(", "\"--evaluation\"", ",", "type", "=", "tools", ".", "str2bool", ",", "default", "=", "False", ")", "\n", "add", "(", "\"--num_workers\"", ",", "type", "=", "int", ",", "default", "=", "4", ")", "\n", "add", "(", "\"--save\"", ",", "\"-s\"", ",", "default", "=", "\"temp_exp/\"", ",", "type", "=", "str", ")", "\n", "add", "(", "\"--seed\"", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "add", "(", "\"--start_epoch\"", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "add", "(", "\"--total_epochs\"", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "add", "(", "\"--save_flow\"", ",", "type", "=", "tools", ".", "str2bool", ",", "default", "=", "False", ")", "\n", "add", "(", "\"--save_disp\"", ",", "type", "=", "tools", ".", "str2bool", ",", "default", "=", "False", ")", "\n", "add", "(", "\"--save_disp2\"", ",", "type", "=", "tools", ".", "str2bool", ",", "default", "=", "False", ")", "\n", "add", "(", "\"--finetuning\"", ",", "type", "=", "tools", ".", "str2bool", ",", "default", "=", "False", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Arguments inferred from losses", "\n", "# -------------------------------------------------------------------------", "\n", "_add_arguments_for_module", "(", "\n", "parser", ",", "\n", "losses", ",", "\n", "name", "=", "\"training_loss\"", ",", "\n", "default_class", "=", "None", ",", "\n", "exclude_classes", "=", "[", "\"_*\"", ",", "\"Variable\"", "]", ",", "\n", "exclude_params", "=", "[", "\"self\"", ",", "\"args\"", "]", ")", "\n", "\n", "_add_arguments_for_module", "(", "\n", "parser", ",", "\n", "losses", ",", "\n", "name", "=", "\"validation_loss\"", ",", "\n", "default_class", "=", "None", ",", "\n", "exclude_classes", "=", "[", "\"_*\"", ",", "\"Variable\"", "]", ",", "\n", "exclude_params", "=", "[", "\"self\"", ",", "\"args\"", "]", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Arguments inferred from models", "\n", "# -------------------------------------------------------------------------", "\n", "_add_arguments_for_module", "(", "\n", "parser", ",", "\n", "models", ",", "\n", "name", "=", "\"model\"", ",", "\n", "default_class", "=", "\"FlowNet1S\"", ",", "\n", "exclude_classes", "=", "[", "\"_*\"", ",", "\"Variable\"", "]", ",", "\n", "exclude_params", "=", "[", "\"self\"", ",", "\"args\"", "]", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Arguments inferred from augmentations for training", "\n", "# -------------------------------------------------------------------------", "\n", "_add_arguments_for_module", "(", "\n", "parser", ",", "\n", "augmentations", ",", "\n", "name", "=", "\"training_augmentation\"", ",", "\n", "default_class", "=", "None", ",", "\n", "exclude_classes", "=", "[", "\"_*\"", "]", ",", "\n", "exclude_params", "=", "[", "\"self\"", ",", "\"args\"", "]", ",", "\n", "forced_default_types", "=", "{", "\"crop\"", ":", "tools", ".", "str2intlist", "}", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Arguments inferred from augmentations for validation", "\n", "# -------------------------------------------------------------------------", "\n", "_add_arguments_for_module", "(", "\n", "parser", ",", "\n", "augmentations", ",", "\n", "name", "=", "\"validation_augmentation\"", ",", "\n", "default_class", "=", "None", ",", "\n", "exclude_classes", "=", "[", "\"_*\"", "]", ",", "\n", "exclude_params", "=", "[", "\"self\"", ",", "\"args\"", "]", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Arguments inferred from datasets for training", "\n", "# -------------------------------------------------------------------------", "\n", "_add_arguments_for_module", "(", "\n", "parser", ",", "\n", "datasets", ",", "\n", "name", "=", "\"training_dataset\"", ",", "\n", "default_class", "=", "None", ",", "\n", "exclude_params", "=", "[", "\"self\"", ",", "\"args\"", ",", "\"is_cropped\"", "]", ",", "\n", "exclude_classes", "=", "[", "\"_*\"", "]", ",", "\n", "unknown_default_types", "=", "{", "\"root\"", ":", "str", "}", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Arguments inferred from datasets for validation", "\n", "# -------------------------------------------------------------------------", "\n", "_add_arguments_for_module", "(", "\n", "parser", ",", "\n", "datasets", ",", "\n", "name", "=", "\"validation_dataset\"", ",", "\n", "default_class", "=", "None", ",", "\n", "exclude_params", "=", "[", "\"self\"", ",", "\"args\"", ",", "\"is_cropped\"", "]", ",", "\n", "exclude_classes", "=", "[", "\"_*\"", "]", ",", "\n", "unknown_default_types", "=", "{", "\"root\"", ":", "str", "}", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Arguments inferred from PyTorch optimizers", "\n", "# -------------------------------------------------------------------------", "\n", "_add_arguments_for_module", "(", "\n", "parser", ",", "\n", "optim", ",", "\n", "name", "=", "\"optimizer\"", ",", "\n", "default_class", "=", "\"Adam\"", ",", "\n", "exclude_classes", "=", "[", "\"_*\"", ",", "\"Optimizer\"", ",", "\"constructor\"", "]", ",", "\n", "exclude_params", "=", "[", "\"self\"", ",", "\"args\"", ",", "\"params\"", "]", ",", "\n", "forced_default_types", "=", "{", "\"lr\"", ":", "float", ",", "\n", "\"momentum\"", ":", "float", ",", "\n", "\"dampening\"", ":", "float", ",", "\n", "\"weight_decay\"", ":", "float", ",", "\n", "\"nesterov\"", ":", "tools", ".", "str2bool", "}", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Arguments inferred from PyTorch lr schedulers", "\n", "# -------------------------------------------------------------------------", "\n", "_add_arguments_for_module", "(", "\n", "parser", ",", "\n", "torch", ".", "optim", ".", "lr_scheduler", ",", "\n", "name", "=", "\"lr_scheduler\"", ",", "\n", "default_class", "=", "None", ",", "\n", "exclude_classes", "=", "[", "\"_*\"", ",", "\"Optimizer\"", "]", ",", "\n", "exclude_params", "=", "[", "\"self\"", ",", "\"args\"", ",", "\"optimizer\"", "]", ",", "\n", "unknown_default_types", "=", "{", "\"T_max\"", ":", "int", ",", "\n", "\"lr_lambda\"", ":", "str", ",", "\n", "\"step_size\"", ":", "int", ",", "\n", "\"milestones\"", ":", "tools", ".", "str2intlist", ",", "\n", "\"gamma\"", ":", "float", "}", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Special arguments", "\n", "# -------------------------------------------------------------------------", "\n", "_add_special_arguments", "(", "parser", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Parse arguments", "\n", "# -------------------------------------------------------------------------", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Parse default arguments from a dummy commandline not specifying any args", "\n", "# -------------------------------------------------------------------------", "\n", "defaults", "=", "vars", "(", "parser", ".", "parse_known_args", "(", "[", "'--dummy'", "]", ")", "[", "0", "]", ")", "\n", "\n", "# -------------------------------------------------------------------------", "\n", "# Consistency checks", "\n", "# -------------------------------------------------------------------------", "\n", "args", ".", "cuda", "=", "args", ".", "cuda", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "\n", "return", "args", ",", "defaults", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline.postprocess_args": [[335, 375], ["core.tools.module_classes_to_dict", "core.tools.module_classes_to_dict", "core.tools.module_classes_to_dict", "core.tools.module_classes_to_dict", "core.tools.module_classes_to_dict", "core.tools.module_classes_to_dict", "core.tools.module_classes_to_dict", "core.tools.module_classes_to_dict", "core.tools.module_classes_to_dict"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.module_classes_to_dict", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.module_classes_to_dict", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.module_classes_to_dict", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.module_classes_to_dict", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.module_classes_to_dict", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.module_classes_to_dict", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.module_classes_to_dict", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.module_classes_to_dict", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.module_classes_to_dict"], ["", "def", "postprocess_args", "(", "args", ")", ":", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# Get appropriate class constructors from modules", "\n", "# ----------------------------------------------------------------------------", "\n", "    ", "args", ".", "model_class", "=", "tools", ".", "module_classes_to_dict", "(", "models", ")", "[", "args", ".", "model", "]", "\n", "\n", "if", "args", ".", "optimizer", "is", "not", "None", ":", "\n", "        ", "optimizer_classes", "=", "tools", ".", "module_classes_to_dict", "(", "optim", ")", "\n", "args", ".", "optimizer_class", "=", "optimizer_classes", "[", "args", ".", "optimizer", "]", "\n", "\n", "", "if", "args", ".", "training_loss", "is", "not", "None", ":", "\n", "        ", "loss_classes", "=", "tools", ".", "module_classes_to_dict", "(", "losses", ")", "\n", "args", ".", "training_loss_class", "=", "loss_classes", "[", "args", ".", "training_loss", "]", "\n", "\n", "", "if", "args", ".", "validation_loss", "is", "not", "None", ":", "\n", "        ", "loss_classes", "=", "tools", ".", "module_classes_to_dict", "(", "losses", ")", "\n", "args", ".", "validation_loss_class", "=", "loss_classes", "[", "args", ".", "validation_loss", "]", "\n", "\n", "", "if", "args", ".", "lr_scheduler", "is", "not", "None", ":", "\n", "        ", "scheduler_classes", "=", "tools", ".", "module_classes_to_dict", "(", "torch", ".", "optim", ".", "lr_scheduler", ")", "\n", "args", ".", "lr_scheduler_class", "=", "scheduler_classes", "[", "args", ".", "lr_scheduler", "]", "\n", "\n", "", "if", "args", ".", "training_dataset", "is", "not", "None", ":", "\n", "        ", "dataset_classes", "=", "tools", ".", "module_classes_to_dict", "(", "datasets", ")", "\n", "args", ".", "training_dataset_class", "=", "dataset_classes", "[", "args", ".", "training_dataset", "]", "\n", "\n", "", "if", "args", ".", "validation_dataset", "is", "not", "None", ":", "\n", "        ", "dataset_classes", "=", "tools", ".", "module_classes_to_dict", "(", "datasets", ")", "\n", "args", ".", "validation_dataset_class", "=", "dataset_classes", "[", "args", ".", "validation_dataset", "]", "\n", "\n", "", "if", "args", ".", "training_augmentation", "is", "not", "None", ":", "\n", "        ", "augmentation_classes", "=", "tools", ".", "module_classes_to_dict", "(", "augmentations", ")", "\n", "args", ".", "training_augmentation_class", "=", "augmentation_classes", "[", "args", ".", "training_augmentation", "]", "\n", "\n", "", "if", "args", ".", "validation_augmentation", "is", "not", "None", ":", "\n", "        ", "augmentation_classes", "=", "tools", ".", "module_classes_to_dict", "(", "augmentations", ")", "\n", "args", ".", "validation_augmentation_class", "=", "augmentation_classes", "[", "args", ".", "validation_augmentation", "]", "\n", "\n", "", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline.setup_logging_and_parse_arguments": [[377, 410], ["commandline._parse_arguments", "core.logger.configure_logging", "core.tools.write_dictionary_to_file", "commandline.postprocess_args", "os.path.join", "sorted", "core.logger.LoggingBlock", "sorted", "vars().items", "os.path.join", "vars().items", "logging.info", "vars", "vars"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline._parse_arguments", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.configure_logging", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.write_dictionary_to_file", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.commandline.postprocess_args"], ["", "def", "setup_logging_and_parse_arguments", "(", "blocktitle", ")", ":", "\n", "# ----------------------------------------------------------------------------", "\n", "# Get parse commandline and default arguments", "\n", "# ----------------------------------------------------------------------------", "\n", "    ", "args", ",", "defaults", "=", "_parse_arguments", "(", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# Setup logbook before everything else", "\n", "# ----------------------------------------------------------------------------", "\n", "logger", ".", "configure_logging", "(", "os", ".", "path", ".", "join", "(", "args", ".", "save", ",", "'logbook.txt'", ")", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# Write arguments to file, as txt", "\n", "# ----------------------------------------------------------------------------", "\n", "tools", ".", "write_dictionary_to_file", "(", "\n", "sorted", "(", "vars", "(", "args", ")", ".", "items", "(", ")", ")", ",", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save", ",", "'args.txt'", ")", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# Log arguments", "\n", "# ----------------------------------------------------------------------------", "\n", "with", "logger", ".", "LoggingBlock", "(", "blocktitle", ",", "emph", "=", "True", ")", ":", "\n", "        ", "for", "argument", ",", "value", "in", "sorted", "(", "vars", "(", "args", ")", ".", "items", "(", ")", ")", ":", "\n", "            ", "reset", "=", "colorama", ".", "Style", ".", "RESET_ALL", "\n", "color", "=", "reset", "if", "value", "==", "defaults", "[", "argument", "]", "else", "colorama", ".", "Fore", ".", "CYAN", "\n", "logging", ".", "info", "(", "'{}{}: {}{}'", ".", "format", "(", "color", ",", "argument", ",", "value", ",", "reset", ")", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# Postprocess", "\n", "# ----------------------------------------------------------------------------", "\n", "", "", "args", "=", "postprocess_args", "(", "args", ")", "\n", "\n", "return", "args", "\n", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.LogbookFormatter.__init__": [[36, 39], ["logging.Formatter.__init__", "re.compile"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "fmt", "=", "None", ",", "datefmt", "=", "None", ")", ":", "\n", "        ", "super", "(", "LogbookFormatter", ",", "self", ")", ".", "__init__", "(", "fmt", "=", "fmt", ",", "datefmt", "=", "datefmt", ")", "\n", "self", ".", "_re", "=", "re", ".", "compile", "(", "r\"\\033\\[[0-9]+m\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.LogbookFormatter.remove_colors_from_msg": [[40, 43], ["re.sub"], "methods", ["None"], ["", "def", "remove_colors_from_msg", "(", "self", ",", "msg", ")", ":", "\n", "        ", "msg", "=", "re", ".", "sub", "(", "self", ".", "_re", ",", "\"\"", ",", "msg", ")", "\n", "return", "msg", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.LogbookFormatter.format": [[44, 47], ["logger.LogbookFormatter.remove_colors_from_msg", "logging.Formatter.format"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.LogbookFormatter.remove_colors_from_msg", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.ConsoleFormatter.format"], ["", "def", "format", "(", "self", ",", "record", "=", "None", ")", ":", "\n", "        ", "record", ".", "msg", "=", "self", ".", "remove_colors_from_msg", "(", "record", ".", "msg", ")", "\n", "return", "super", "(", "LogbookFormatter", ",", "self", ")", ".", "format", "(", "record", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.ConsoleFormatter.__init__": [[50, 52], ["logging.Formatter.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "fmt", "=", "None", ",", "datefmt", "=", "None", ")", ":", "\n", "        ", "super", "(", "ConsoleFormatter", ",", "self", ")", ".", "__init__", "(", "fmt", "=", "fmt", ",", "datefmt", "=", "datefmt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.ConsoleFormatter.format": [[53, 57], ["logging.Formatter.format"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.ConsoleFormatter.format"], ["", "def", "format", "(", "self", ",", "record", "=", "None", ")", ":", "\n", "        ", "indent", "=", "sys", ".", "modules", "[", "__name__", "]", ".", "global_indent", "\n", "record", ".", "msg", "=", "\" \"", "*", "indent", "+", "record", ".", "msg", "\n", "return", "super", "(", "ConsoleFormatter", ",", "self", ")", ".", "format", "(", "record", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.SkipLogbookFilter.filter": [[60, 62], ["None"], "methods", ["None"], ["    ", "def", "filter", "(", "self", ",", "record", ")", ":", "\n", "        ", "return", "record", ".", "levelno", "!=", "logging", ".", "LOGBOOK", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.LoggingBlock.__init__": [[109, 118], ["logging.info", "logging.info"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "title", ",", "emph", "=", "False", ")", ":", "\n", "        ", "self", ".", "_emph", "=", "emph", "\n", "bright", "=", "colorama", ".", "Style", ".", "BRIGHT", "\n", "cyan", "=", "colorama", ".", "Fore", ".", "CYAN", "\n", "reset", "=", "colorama", ".", "Style", ".", "RESET_ALL", "\n", "if", "emph", ":", "\n", "            ", "logging", ".", "info", "(", "\"%s==>%s %s%s%s\"", "%", "(", "cyan", ",", "reset", ",", "bright", ",", "title", ",", "reset", ")", ")", "\n", "", "else", ":", "\n", "            ", "logging", ".", "info", "(", "title", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.LoggingBlock.__enter__": [[119, 122], ["None"], "methods", ["None"], ["", "", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "sys", ".", "modules", "[", "__name__", "]", ".", "global_indent", "+=", "2", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.LoggingBlock.__exit__": [[123, 125], ["None"], "methods", ["None"], ["", "def", "__exit__", "(", "self", ",", "exc_type", ",", "exc_value", ",", "traceback", ")", ":", "\n", "        ", "sys", ".", "modules", "[", "__name__", "]", ".", "global_indent", "-=", "2", "\n", "", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.get_default_logging_format": [[13, 23], ["None"], "function", ["None"], ["def", "get_default_logging_format", "(", "colorize", "=", "False", ",", "brackets", "=", "False", ")", ":", "\n", "    ", "style", "=", "colorama", ".", "Style", ".", "DIM", "if", "colorize", "else", "''", "\n", "# color = colorama.Fore.CYAN if colorize else ''", "\n", "color", "=", "colorama", ".", "Fore", ".", "WHITE", "if", "colorize", "else", "''", "\n", "reset", "=", "colorama", ".", "Style", ".", "RESET_ALL", "if", "colorize", "else", "''", "\n", "if", "brackets", ":", "\n", "        ", "result", "=", "\"{}{}[%(asctime)s]{} %(message)s\"", ".", "format", "(", "style", ",", "color", ",", "reset", ")", "\n", "", "else", ":", "\n", "        ", "result", "=", "\"{}{}%(asctime)s{} %(message)s\"", ".", "format", "(", "style", ",", "color", ",", "reset", ")", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.get_default_logging_datefmt": [[25, 27], ["None"], "function", ["None"], ["", "def", "get_default_logging_datefmt", "(", ")", ":", "\n", "    ", "return", "\"%Y-%m-%d %H:%M:%S\"", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.log_module_info": [[29, 33], ["module.__str__().split", "logging.info", "module.__str__"], "function", ["None"], ["", "def", "log_module_info", "(", "module", ")", ":", "\n", "    ", "lines", "=", "module", ".", "__str__", "(", ")", ".", "split", "(", "\"\\n\"", ")", "\n", "for", "line", "in", "lines", ":", "\n", "        ", "logging", ".", "info", "(", "line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.configure_logging": [[64, 106], ["core.tools.addLoggingLevel", "logging.getLogger", "logging.getLogger.setLevel", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logger.get_default_logging_format", "logger.get_default_logging_datefmt", "logger.ConsoleFormatter", "logging.StreamHandler.setFormatter", "logger.SkipLogbookFilter", "logging.StreamHandler.addFilter", "logging.getLogger.addHandler", "os.path.dirname", "logging.FileHandler", "logging.FileHandler.setLevel", "logger.get_default_logging_format", "logger.LogbookFormatter", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.addLoggingLevel", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.get_default_logging_format", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.get_default_logging_datefmt", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.get_default_logging_format"], ["", "", "def", "configure_logging", "(", "filename", "=", "None", ")", ":", "\n", "# set global indent level", "\n", "    ", "sys", ".", "modules", "[", "__name__", "]", ".", "global_indent", "=", "0", "\n", "\n", "# add custom tqdm logger", "\n", "tools", ".", "addLoggingLevel", "(", "\"LOGBOOK\"", ",", "1000", ")", "\n", "\n", "# create logger", "\n", "root_logger", "=", "logging", ".", "getLogger", "(", "\"\"", ")", "\n", "root_logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "\n", "# create console handler and set level to debug", "\n", "console", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "console", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "fmt", "=", "get_default_logging_format", "(", "colorize", "=", "True", ",", "brackets", "=", "False", ")", "\n", "datefmt", "=", "get_default_logging_datefmt", "(", ")", "\n", "formatter", "=", "ConsoleFormatter", "(", "fmt", "=", "fmt", ",", "datefmt", "=", "datefmt", ")", "\n", "console", ".", "setFormatter", "(", "formatter", ")", "\n", "\n", "# Skip logging.tqdm requests for console outputs", "\n", "skip_logbook_filter", "=", "SkipLogbookFilter", "(", ")", "\n", "console", ".", "addFilter", "(", "skip_logbook_filter", ")", "\n", "\n", "# add console to root_logger", "\n", "root_logger", ".", "addHandler", "(", "console", ")", "\n", "\n", "# add logbook", "\n", "if", "filename", "is", "not", "None", ":", "\n", "# ensure dir", "\n", "        ", "d", "=", "os", ".", "path", ".", "dirname", "(", "filename", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "d", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "d", ")", "\n", "\n", "# --------------------------------------------------------------------------------------", "\n", "# Configure handler that removes color codes from logbook", "\n", "# --------------------------------------------------------------------------------------", "\n", "", "logbook", "=", "logging", ".", "FileHandler", "(", "filename", "=", "filename", ",", "mode", "=", "\"a\"", ",", "encoding", "=", "\"utf-8\"", ")", "\n", "logbook", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "fmt", "=", "get_default_logging_format", "(", "colorize", "=", "False", ",", "brackets", "=", "True", ")", "\n", "logbook_formatter", "=", "LogbookFormatter", "(", "fmt", "=", "fmt", ",", "datefmt", "=", "datefmt", ")", "\n", "logbook", ".", "setFormatter", "(", "logbook_formatter", ")", "\n", "root_logger", ".", "addHandler", "(", "logbook", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.TrainingEpoch.__init__": [[116, 130], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "loader", ",", "\n", "augmentation", "=", "None", ",", "\n", "tbwriter", "=", "None", ",", "\n", "add_progress_stats", "=", "{", "}", ",", "\n", "desc", "=", "\"Training Epoch\"", ")", ":", "\n", "\n", "        ", "self", ".", "_args", "=", "args", "\n", "self", ".", "_desc", "=", "desc", "\n", "self", ".", "_loader", "=", "loader", "\n", "self", ".", "_augmentation", "=", "augmentation", "\n", "self", ".", "_add_progress_stats", "=", "add_progress_stats", "\n", "self", ".", "_tbwriter", "=", "tbwriter", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.TrainingEpoch._step": [[131, 172], ["list", "list", "runtime.TrainingEpoch.items", "optimizer.zero_grad", "model_and_loss", "training_loss.backward", "optimizer.step", "filter", "filter", "runtime.TrainingEpoch.items", "numpy.isnan", "runtime.TrainingEpoch.keys", "runtime.TrainingEpoch.keys", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "runtime.TrainingEpoch._augmentation", "tensor.requires_grad_", "training_loss.item", "value.cuda", "tensor.requires_grad_"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.forwardwarp_package.forward_warp.forward_warp_function.backward", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.SkipLogbookFilter.filter", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.SkipLogbookFilter.filter"], ["", "def", "_step", "(", "self", ",", "example_dict", ",", "model_and_loss", ",", "optimizer", ")", ":", "\n", "\n", "# Get input and target tensor keys", "\n", "        ", "input_keys", "=", "list", "(", "filter", "(", "lambda", "x", ":", "\"input\"", "in", "x", ",", "example_dict", ".", "keys", "(", ")", ")", ")", "\n", "target_keys", "=", "list", "(", "filter", "(", "lambda", "x", ":", "\"target\"", "in", "x", ",", "example_dict", ".", "keys", "(", ")", ")", ")", "\n", "tensor_keys", "=", "input_keys", "+", "target_keys", "\n", "\n", "# Possibly transfer to Cuda", "\n", "if", "self", ".", "_args", ".", "cuda", ":", "\n", "            ", "for", "key", ",", "value", "in", "example_dict", ".", "items", "(", ")", ":", "\n", "                ", "if", "key", "in", "tensor_keys", ":", "\n", "                    ", "example_dict", "[", "key", "]", "=", "value", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "# Optionally perform augmentations", "\n", "", "", "", "if", "self", ".", "_augmentation", "is", "not", "None", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "example_dict", "=", "self", ".", "_augmentation", "(", "example_dict", ")", "\n", "\n", "# Convert inputs/targets to variables that require gradients", "\n", "", "", "for", "key", ",", "tensor", "in", "example_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "key", "in", "input_keys", ":", "\n", "                ", "example_dict", "[", "key", "]", "=", "tensor", ".", "requires_grad_", "(", "True", ")", "\n", "", "elif", "key", "in", "target_keys", ":", "\n", "                ", "example_dict", "[", "key", "]", "=", "tensor", ".", "requires_grad_", "(", "False", ")", "\n", "\n", "# Reset gradients", "\n", "", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# Run forward pass to get losses and outputs.", "\n", "loss_dict", ",", "output_dict", "=", "model_and_loss", "(", "example_dict", ")", "\n", "\n", "# Check total_loss for NaNs", "\n", "training_loss", "=", "loss_dict", "[", "self", ".", "_args", ".", "training_key", "]", "\n", "assert", "(", "not", "np", ".", "isnan", "(", "training_loss", ".", "item", "(", ")", ")", ")", ",", "\"training_loss is NaN\"", "\n", "\n", "# Back propagation", "\n", "training_loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Return success flag, loss and output dictionary", "\n", "return", "loss_dict", ",", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.TrainingEpoch.run": [[173, 217], ["model_and_loss.train", "runtime.create_progressbar", "ma.mean", "runtime.TrainingEpoch._step", "runtime.tensor2float_dict", "tensor2float_dict.items", "runtime.format_moving_averages_as_progress_dict", "progress.set_postfix", "moving_averages_dict.items", "moving_averages_dict[].add_average", "core.tools.MovingAverage", "tensor2float_dict.keys"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.create_progressbar", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.EvaluationEpoch._step", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.tensor2float_dict", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.format_moving_averages_as_progress_dict", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.add_average"], ["", "def", "run", "(", "self", ",", "model_and_loss", ",", "optimizer", ")", ":", "\n", "\n", "        ", "n_iter", "=", "0", "\n", "model_and_loss", ".", "train", "(", ")", "\n", "moving_averages_dict", "=", "None", "\n", "progressbar_args", "=", "{", "\n", "\"iterable\"", ":", "self", ".", "_loader", ",", "\n", "\"desc\"", ":", "self", ".", "_desc", ",", "\n", "\"train\"", ":", "True", ",", "\n", "\"offset\"", ":", "0", ",", "\n", "\"logging_on_update\"", ":", "False", ",", "\n", "\"logging_on_close\"", ":", "True", ",", "\n", "\"postfix\"", ":", "True", "\n", "}", "\n", "\n", "# Perform training steps", "\n", "with", "create_progressbar", "(", "**", "progressbar_args", ")", "as", "progress", ":", "\n", "            ", "for", "example_dict", "in", "progress", ":", "\n", "\n", "# perform step", "\n", "                ", "loss_dict_per_step", ",", "output_dict", "=", "self", ".", "_step", "(", "example_dict", ",", "model_and_loss", ",", "optimizer", ")", "\n", "# convert", "\n", "loss_dict_per_step", "=", "tensor2float_dict", "(", "loss_dict_per_step", ")", "\n", "\n", "# Possibly initialize moving averages and  Add moving averages", "\n", "if", "moving_averages_dict", "is", "None", ":", "\n", "                    ", "moving_averages_dict", "=", "{", "\n", "key", ":", "MovingAverage", "(", ")", "for", "key", "in", "loss_dict_per_step", ".", "keys", "(", ")", "\n", "}", "\n", "\n", "", "for", "key", ",", "loss", "in", "loss_dict_per_step", ".", "items", "(", ")", ":", "\n", "                    ", "moving_averages_dict", "[", "key", "]", ".", "add_average", "(", "loss", ",", "addcount", "=", "self", ".", "_args", ".", "batch_size", ")", "\n", "\n", "# view statistics in progress bar", "\n", "", "progress_stats", "=", "format_moving_averages_as_progress_dict", "(", "\n", "moving_averages_dict", "=", "moving_averages_dict", ",", "\n", "moving_averages_postfix", "=", "\"_ema\"", ")", "\n", "\n", "progress", ".", "set_postfix", "(", "progress_stats", ")", "\n", "\n", "\n", "# Return loss and output dictionary", "\n", "", "", "ema_loss_dict", "=", "{", "key", ":", "ma", ".", "mean", "(", ")", "for", "key", ",", "ma", "in", "moving_averages_dict", ".", "items", "(", ")", "}", "\n", "return", "ema_loss_dict", ",", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.EvaluationEpoch.__init__": [[220, 236], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "args", ",", "\n", "loader", ",", "\n", "augmentation", "=", "None", ",", "\n", "tbwriter", "=", "None", ",", "\n", "add_progress_stats", "=", "{", "}", ",", "\n", "desc", "=", "\"Evaluation Epoch\"", ")", ":", "\n", "        ", "self", ".", "_args", "=", "args", "\n", "self", ".", "_desc", "=", "desc", "\n", "self", ".", "_loader", "=", "loader", "\n", "self", ".", "_add_progress_stats", "=", "add_progress_stats", "\n", "self", ".", "_augmentation", "=", "augmentation", "\n", "self", ".", "_tbwriter", "=", "tbwriter", "\n", "self", ".", "_save_output", "=", "False", "\n", "if", "self", ".", "_args", ".", "save_flow", "or", "self", ".", "_args", ".", "save_disp", "or", "self", ".", "_args", ".", "save_disp2", ":", "\n", "            ", "self", ".", "_save_output", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.EvaluationEpoch.save_outputs": [[237, 311], ["output_dict[].data.cpu().numpy", "output_dict[].data.size", "range", "range", "output_dict[].data.size", "output_dict[].data.cpu().numpy", "range", "range", "output_dict[].data.size", "output_dict[].data.cpu().numpy", "range", "range", "file_names_flow.append", "os.path.dirname", "utils.flow.flow_to_png_middlebury", "skimage.io.imsave", "utils.flow.write_flow_png", "file_names_disp.append", "os.path.dirname", "matplotlib.imsave", "utils.flow.write_depth_png", "file_names_disp2.append", "os.path.dirname", "matplotlib.imsave", "utils.flow.write_depth_png", "output_dict[].data.cpu", "str", "os.path.exists", "os.makedirs", "print", "out_flow[].swapaxes().swapaxes", "output_dict[].data.cpu", "str", "os.path.exists", "os.makedirs", "print", "output_dict[].data.cpu", "str", "os.path.exists", "os.makedirs", "print", "out_flow[].swapaxes", "disp_ii.max", "disp2_ii.max"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.demo_generator.utils_misc.flow_to_png_middlebury", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.flow.write_flow_png", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.flow.write_depth_png", "home.repos.pwc.inspect_result.visinf_self-mono-sf.utils.flow.write_depth_png"], ["", "", "def", "save_outputs", "(", "self", ",", "example_dict", ",", "output_dict", ")", ":", "\n", "\n", "# save occ", "\n", "        ", "save_root_flow", "=", "self", ".", "_args", ".", "save", "+", "'/flow/'", "\n", "save_root_disp", "=", "self", ".", "_args", ".", "save", "+", "'/disp_0/'", "\n", "save_root_disp2", "=", "self", ".", "_args", ".", "save", "+", "'/disp_1/'", "\n", "\n", "if", "self", ".", "_args", ".", "save_flow", ":", "\n", "            ", "out_flow", "=", "output_dict", "[", "\"out_flow_pp\"", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "b_size", "=", "output_dict", "[", "\"out_flow_pp\"", "]", ".", "data", ".", "size", "(", "0", ")", "\n", "file_names_flow", "=", "[", "]", "\n", "for", "ii", "in", "range", "(", "0", ",", "b_size", ")", ":", "\n", "                ", "file_name_flow", "=", "save_root_flow", "+", "'/'", "+", "str", "(", "example_dict", "[", "\"basename\"", "]", "[", "ii", "]", ")", "\n", "file_names_flow", ".", "append", "(", "file_name_flow", ")", "\n", "directory_flow", "=", "os", ".", "path", ".", "dirname", "(", "file_name_flow", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "directory_flow", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "directory_flow", ")", "\n", "print", "(", "directory_flow", ",", "' has been created.'", ")", "\n", "\n", "", "", "for", "ii", "in", "range", "(", "0", ",", "b_size", ")", ":", "\n", "# Vis", "\n", "                ", "flow_f_rgb", "=", "flow_to_png_middlebury", "(", "out_flow", "[", "ii", ",", "...", "]", ")", "\n", "file_name_flo_vis", "=", "file_names_flow", "[", "ii", "]", "+", "'_flow.png'", "\n", "io", ".", "imsave", "(", "file_name_flo_vis", ",", "flow_f_rgb", ")", "\n", "# Png output", "\n", "file_name", "=", "file_names_flow", "[", "ii", "]", "+", "'_10.png'", "\n", "write_flow_png", "(", "file_name", ",", "out_flow", "[", "ii", ",", "...", "]", ".", "swapaxes", "(", "0", ",", "1", ")", ".", "swapaxes", "(", "1", ",", "2", ")", ")", "\n", "\n", "", "", "if", "self", ".", "_args", ".", "save_disp", ":", "\n", "\n", "            ", "b_size", "=", "output_dict", "[", "\"out_disp_l_pp\"", "]", ".", "data", ".", "size", "(", "0", ")", "\n", "out_disp", "=", "output_dict", "[", "\"out_disp_l_pp\"", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "file_names_disp", "=", "[", "]", "\n", "\n", "for", "ii", "in", "range", "(", "0", ",", "b_size", ")", ":", "\n", "                ", "file_name_disp", "=", "save_root_disp", "+", "'/'", "+", "str", "(", "example_dict", "[", "\"basename\"", "]", "[", "ii", "]", ")", "\n", "file_names_disp", ".", "append", "(", "file_name_disp", ")", "\n", "directory_disp", "=", "os", ".", "path", ".", "dirname", "(", "file_name_disp", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "directory_disp", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "directory_disp", ")", "\n", "print", "(", "directory_disp", ",", "' has been created.'", ")", "\n", "\n", "", "", "for", "ii", "in", "range", "(", "0", ",", "b_size", ")", ":", "\n", "# Vis", "\n", "                ", "disp_ii", "=", "out_disp", "[", "ii", ",", "0", ",", "...", "]", "\n", "norm_disp", "=", "(", "disp_ii", "/", "disp_ii", ".", "max", "(", ")", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "plt", ".", "imsave", "(", "file_names_disp", "[", "ii", "]", "+", "'_disp.jpg'", ",", "norm_disp", ",", "cmap", "=", "'plasma'", ")", "\n", "# Png", "\n", "file_name", "=", "file_names_disp", "[", "ii", "]", "+", "'_10.png'", "\n", "write_depth_png", "(", "file_name", ",", "out_disp", "[", "ii", ",", "0", ",", "...", "]", ")", "\n", "\n", "\n", "", "", "if", "self", ".", "_args", ".", "save_disp2", ":", "\n", "\n", "            ", "b_size", "=", "output_dict", "[", "\"out_disp_l_pp_next\"", "]", ".", "data", ".", "size", "(", "0", ")", "\n", "out_disp2", "=", "output_dict", "[", "\"out_disp_l_pp_next\"", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "file_names_disp2", "=", "[", "]", "\n", "\n", "for", "ii", "in", "range", "(", "0", ",", "b_size", ")", ":", "\n", "                ", "file_name_disp2", "=", "save_root_disp2", "+", "'/'", "+", "str", "(", "example_dict", "[", "\"basename\"", "]", "[", "ii", "]", ")", "\n", "file_names_disp2", ".", "append", "(", "file_name_disp2", ")", "\n", "directory_disp2", "=", "os", ".", "path", ".", "dirname", "(", "file_name_disp2", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "directory_disp2", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "directory_disp2", ")", "\n", "print", "(", "directory_disp2", ",", "' has been created.'", ")", "\n", "\n", "", "", "for", "ii", "in", "range", "(", "0", ",", "b_size", ")", ":", "\n", "# Vis", "\n", "                ", "disp2_ii", "=", "out_disp2", "[", "ii", ",", "0", ",", "...", "]", "\n", "norm_disp2", "=", "(", "disp2_ii", "/", "disp2_ii", ".", "max", "(", ")", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "plt", ".", "imsave", "(", "file_names_disp2", "[", "ii", "]", "+", "'_disp2.jpg'", ",", "norm_disp2", ",", "cmap", "=", "'plasma'", ")", "\n", "# Png", "\n", "file_name2", "=", "file_names_disp2", "[", "ii", "]", "+", "'_10.png'", "\n", "write_depth_png", "(", "file_name2", ",", "out_disp2", "[", "ii", ",", "0", ",", "...", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.EvaluationEpoch._step": [[313, 334], ["list", "list", "model_and_loss", "filter", "filter", "runtime.EvaluationEpoch.items", "runtime.EvaluationEpoch._augmentation", "runtime.EvaluationEpoch.keys", "runtime.EvaluationEpoch.keys", "value.cuda"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.SkipLogbookFilter.filter", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.logger.SkipLogbookFilter.filter"], ["", "", "", "def", "_step", "(", "self", ",", "example_dict", ",", "model_and_loss", ")", ":", "\n", "\n", "# Get input and target tensor keys", "\n", "        ", "input_keys", "=", "list", "(", "filter", "(", "lambda", "x", ":", "\"input\"", "in", "x", ",", "example_dict", ".", "keys", "(", ")", ")", ")", "\n", "target_keys", "=", "list", "(", "filter", "(", "lambda", "x", ":", "\"target\"", "in", "x", ",", "example_dict", ".", "keys", "(", ")", ")", ")", "\n", "tensor_keys", "=", "input_keys", "+", "target_keys", "\n", "\n", "# Possibly transfer to Cuda", "\n", "if", "self", ".", "_args", ".", "cuda", ":", "\n", "            ", "for", "key", ",", "value", "in", "example_dict", ".", "items", "(", ")", ":", "\n", "                ", "if", "key", "in", "tensor_keys", ":", "\n", "                    ", "example_dict", "[", "key", "]", "=", "value", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "# Optionally perform augmentations", "\n", "", "", "", "if", "self", ".", "_augmentation", "is", "not", "None", ":", "\n", "            ", "example_dict", "=", "self", ".", "_augmentation", "(", "example_dict", ")", "\n", "\n", "# Run forward pass to get losses and outputs.", "\n", "", "loss_dict", ",", "output_dict", "=", "model_and_loss", "(", "example_dict", ")", "\n", "\n", "return", "loss_dict", ",", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.EvaluationEpoch.run": [[335, 391], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model_and_loss.eval", "runtime.create_progressbar", "ma.mean", "runtime.EvaluationEpoch._step", "runtime.tensor2float_dict", "tensor2float_dict.items", "runtime.format_moving_averages_as_progress_dict", "progress.set_postfix", "moving_averages_dict.items", "runtime.EvaluationEpoch.save_outputs", "moving_averages_dict[].add_average", "core.tools.MovingAverage", "tensor2float_dict.keys"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.create_progressbar", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.EvaluationEpoch._step", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.tensor2float_dict", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.format_moving_averages_as_progress_dict", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.EvaluationEpoch.save_outputs", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.add_average"], ["", "def", "run", "(", "self", ",", "model_and_loss", ",", "epoch", ")", ":", "\n", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\n", "# Tell model that we want to evaluate", "\n", "            ", "model_and_loss", ".", "eval", "(", ")", "\n", "\n", "# Keep track of moving averages", "\n", "moving_averages_dict", "=", "None", "\n", "\n", "# Progress bar arguments", "\n", "progressbar_args", "=", "{", "\n", "\"iterable\"", ":", "self", ".", "_loader", ",", "\n", "\"desc\"", ":", "self", ".", "_desc", ",", "\n", "\"train\"", ":", "False", ",", "\n", "\"offset\"", ":", "0", ",", "\n", "\"logging_on_update\"", ":", "False", ",", "\n", "\"logging_on_close\"", ":", "True", ",", "\n", "\"postfix\"", ":", "True", "\n", "}", "\n", "\n", "# Perform evaluation steps", "\n", "with", "create_progressbar", "(", "**", "progressbar_args", ")", "as", "progress", ":", "\n", "                ", "for", "example_dict", "in", "progress", ":", "\n", "\n", "# Perform forward evaluation step", "\n", "                    ", "loss_dict_per_step", ",", "output_dict", "=", "self", ".", "_step", "(", "example_dict", ",", "model_and_loss", ")", "\n", "\n", "# Save results", "\n", "if", "self", ".", "_save_output", ":", "\n", "                        ", "self", ".", "save_outputs", "(", "example_dict", ",", "output_dict", ")", "\n", "\n", "# Convert loss dictionary to float", "\n", "", "loss_dict_per_step", "=", "tensor2float_dict", "(", "loss_dict_per_step", ")", "\n", "\n", "# Possibly initialize moving averages", "\n", "if", "moving_averages_dict", "is", "None", ":", "\n", "                        ", "moving_averages_dict", "=", "{", "\n", "key", ":", "MovingAverage", "(", ")", "for", "key", "in", "loss_dict_per_step", ".", "keys", "(", ")", "\n", "}", "\n", "\n", "# Add moving averages", "\n", "", "for", "key", ",", "loss", "in", "loss_dict_per_step", ".", "items", "(", ")", ":", "\n", "                        ", "moving_averages_dict", "[", "key", "]", ".", "add_average", "(", "loss", ",", "addcount", "=", "self", ".", "_args", ".", "batch_size", ")", "\n", "\n", "# view statistics in progress bar", "\n", "", "progress_stats", "=", "format_moving_averages_as_progress_dict", "(", "\n", "moving_averages_dict", "=", "moving_averages_dict", ",", "\n", "moving_averages_postfix", "=", "\"\"", ")", "\n", "\n", "progress", ".", "set_postfix", "(", "progress_stats", ")", "\n", "\n", "# Record average losses", "\n", "", "", "avg_loss_dict", "=", "{", "key", ":", "ma", ".", "mean", "(", ")", "for", "key", ",", "ma", "in", "moving_averages_dict", ".", "items", "(", ")", "}", "\n", "\n", "return", "avg_loss_dict", ",", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.create_progressbar": [[34, 93], ["core.tools.tqdm_with_logging", "len"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.tqdm_with_logging"], ["def", "create_progressbar", "(", "iterable", ",", "\n", "desc", "=", "\"\"", ",", "\n", "train", "=", "False", ",", "\n", "unit", "=", "\"it\"", ",", "\n", "initial", "=", "0", ",", "\n", "offset", "=", "0", ",", "\n", "invert_iterations", "=", "False", ",", "\n", "logging_on_update", "=", "False", ",", "\n", "logging_on_close", "=", "True", ",", "\n", "postfix", "=", "False", ")", ":", "\n", "\n", "# ---------------------------------------------------------------", "\n", "# Pick colors", "\n", "# ---------------------------------------------------------------", "\n", "    ", "reset", "=", "colorama", ".", "Style", ".", "RESET_ALL", "\n", "bright", "=", "colorama", ".", "Style", ".", "BRIGHT", "\n", "cyan", "=", "colorama", ".", "Fore", ".", "CYAN", "\n", "dim", "=", "colorama", ".", "Style", ".", "DIM", "\n", "green", "=", "colorama", ".", "Fore", ".", "GREEN", "\n", "\n", "# ---------------------------------------------------------------", "\n", "# Specify progressbar layout:", "\n", "#   l_bar, bar, r_bar, n, n_fmt, total, total_fmt, percentage,", "\n", "#   rate, rate_fmt, rate_noinv, rate_noinv_fmt, rate_inv,", "\n", "#   rate_inv_fmt, elapsed, remaining, desc, postfix.", "\n", "# ---------------------------------------------------------------", "\n", "bar_format", "=", "\"\"", "\n", "bar_format", "+=", "\"%s==>%s%s {desc}:%s \"", "%", "(", "cyan", ",", "reset", ",", "bright", ",", "reset", ")", "# description", "\n", "bar_format", "+=", "\"{percentage:3.0f}%\"", "# percentage", "\n", "bar_format", "+=", "\"%s|{bar}|%s \"", "%", "(", "dim", ",", "reset", ")", "# bar", "\n", "bar_format", "+=", "\" {n_fmt}/{total_fmt}  \"", "# i/n counter", "\n", "bar_format", "+=", "\"{elapsed}<{remaining}\"", "# eta", "\n", "if", "invert_iterations", ":", "\n", "        ", "bar_format", "+=", "\" {rate_inv_fmt}  \"", "# iteration timings", "\n", "", "else", ":", "\n", "        ", "bar_format", "+=", "\" {rate_noinv_fmt}  \"", "\n", "", "bar_format", "+=", "\"%s{postfix}%s\"", "%", "(", "green", ",", "reset", ")", "# postfix", "\n", "\n", "# ---------------------------------------------------------------", "\n", "# Specify TQDM arguments", "\n", "# ---------------------------------------------------------------", "\n", "tqdm_args", "=", "{", "\n", "\"iterable\"", ":", "iterable", ",", "\n", "\"desc\"", ":", "desc", ",", "# Prefix for the progress bar", "\n", "\"total\"", ":", "len", "(", "iterable", ")", ",", "# The number of expected iterations", "\n", "\"leave\"", ":", "True", ",", "# Leave progress bar when done", "\n", "\"miniters\"", ":", "1", "if", "train", "else", "None", ",", "# Minimum display update interval in iterations", "\n", "\"unit\"", ":", "unit", ",", "# String be used to define the unit of each iteration", "\n", "\"initial\"", ":", "initial", ",", "# The initial counter value.", "\n", "\"dynamic_ncols\"", ":", "True", ",", "# Allow window resizes", "\n", "\"smoothing\"", ":", "TQDM_SMOOTHING", ",", "# Moving average smoothing factor for speed estimates", "\n", "\"bar_format\"", ":", "bar_format", ",", "# Specify a custom bar string formatting", "\n", "\"position\"", ":", "offset", ",", "# Specify vertical line offset", "\n", "\"ascii\"", ":", "True", ",", "\n", "\"logging_on_update\"", ":", "logging_on_update", ",", "\n", "\"logging_on_close\"", ":", "logging_on_close", "\n", "}", "\n", "\n", "return", "tools", ".", "tqdm_with_logging", "(", "**", "tqdm_args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.tensor2float_dict": [[95, 97], ["tensor.item", "tensor_dict.items"], "function", ["None"], ["", "def", "tensor2float_dict", "(", "tensor_dict", ")", ":", "\n", "    ", "return", "{", "key", ":", "tensor", ".", "item", "(", ")", "for", "key", ",", "tensor", "in", "tensor_dict", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.format_moving_averages_as_progress_dict": [[99, 106], ["collections.OrderedDict", "sorted", "moving_averages_dict[].mean", "moving_averages_dict.keys"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ExponentialMovingAverage.mean"], ["", "def", "format_moving_averages_as_progress_dict", "(", "moving_averages_dict", "=", "{", "}", ",", "\n", "moving_averages_postfix", "=", "\"avg\"", ")", ":", "\n", "    ", "progress_dict", "=", "collections", ".", "OrderedDict", "(", "[", "\n", "(", "key", "+", "moving_averages_postfix", ",", "\"%1.4f\"", "%", "moving_averages_dict", "[", "key", "]", ".", "mean", "(", ")", ")", "\n", "for", "key", "in", "sorted", "(", "moving_averages_dict", ".", "keys", "(", ")", ")", "\n", "]", ")", "\n", "return", "progress_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.format_learning_rate": [[108, 113], ["numpy.isscalar", "str", "len"], "function", ["None"], ["", "def", "format_learning_rate", "(", "lr", ")", ":", "\n", "    ", "if", "np", ".", "isscalar", "(", "lr", ")", ":", "\n", "        ", "return", "\"{}\"", ".", "format", "(", "lr", ")", "\n", "", "else", ":", "\n", "        ", "return", "\"{}\"", ".", "format", "(", "str", "(", "lr", "[", "0", "]", ")", "if", "len", "(", "lr", ")", "==", "1", "else", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.exec_runtime": [[393, 557], ["runtime.create_progressbar", "print", "range", "create_progressbar.close", "logging.info", "torch.utils.tensorboard.SummaryWriter", "runtime.TrainingEpoch", "runtime.EvaluationEpoch", "core.logger.LoggingBlock", "logging.info", "logging.info", "range", "print", "logging.logbook", "float", "torch.utils.tensorboard.SummaryWriter.close", "float", "core.logger.LoggingBlock", "create_progressbar.set_postfix", "create_progressbar.update", "print", "logging.info", "logging.info", "runtime.TrainingEpoch.run", "runtime.EvaluationEpoch.run", "lr_scheduler.step", "checkpoint_saver.save_latest", "print", "logging.logbook", "torch.utils.tensorboard.SummaryWriter.add_scalar", "torch.utils.tensorboard.SummaryWriter.add_scalar", "runtime.format_learning_rate", "runtime.format_learning_rate", "dict", "lr_scheduler.get_lr"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.create_progressbar", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.close", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.close", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.TqdmToLogger.update", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.EvaluationEpoch.run", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.EvaluationEpoch.run", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.save_latest", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.format_learning_rate", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.runtime.format_learning_rate"], ["", "", "", "def", "exec_runtime", "(", "args", ",", "\n", "checkpoint_saver", ",", "\n", "model_and_loss", ",", "\n", "optimizer", ",", "\n", "lr_scheduler", ",", "\n", "train_loader", ",", "\n", "validation_loader", ",", "\n", "inference_loader", ",", "\n", "training_augmentation", ",", "\n", "validation_augmentation", ")", ":", "\n", "\n", "# ----------------------------------------------------------------------------------------------", "\n", "# Tensorboard writer", "\n", "# ----------------------------------------------------------------------------------------------", "\n", "\n", "    ", "if", "args", ".", "evaluation", "is", "False", ":", "\n", "        ", "tensorBoardWriter", "=", "SummaryWriter", "(", "args", ".", "save", "+", "'/writer'", ")", "\n", "", "else", ":", "\n", "        ", "tensorBoardWriter", "=", "None", "\n", "\n", "\n", "", "if", "train_loader", "is", "not", "None", ":", "\n", "        ", "training_module", "=", "TrainingEpoch", "(", "\n", "args", ",", "\n", "desc", "=", "\"   Train\"", ",", "\n", "loader", "=", "train_loader", ",", "\n", "augmentation", "=", "training_augmentation", ",", "\n", "tbwriter", "=", "tensorBoardWriter", ")", "\n", "\n", "", "if", "validation_loader", "is", "not", "None", ":", "\n", "        ", "evaluation_module", "=", "EvaluationEpoch", "(", "\n", "args", ",", "\n", "desc", "=", "\"Validate\"", ",", "\n", "loader", "=", "validation_loader", ",", "\n", "augmentation", "=", "validation_augmentation", ",", "\n", "tbwriter", "=", "tensorBoardWriter", ")", "\n", "\n", "# --------------------------------------------------------", "\n", "# Log some runtime info", "\n", "# --------------------------------------------------------", "\n", "", "with", "logger", ".", "LoggingBlock", "(", "\"Runtime\"", ",", "emph", "=", "True", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"start_epoch: %i\"", "%", "args", ".", "start_epoch", ")", "\n", "logging", ".", "info", "(", "\"total_epochs: %i\"", "%", "args", ".", "total_epochs", ")", "\n", "\n", "# ---------------------------------------", "\n", "# Total progress bar arguments", "\n", "# ---------------------------------------", "\n", "", "progressbar_args", "=", "{", "\n", "\"desc\"", ":", "\"Progress\"", ",", "\n", "\"initial\"", ":", "args", ".", "start_epoch", "-", "1", ",", "\n", "\"invert_iterations\"", ":", "True", ",", "\n", "\"iterable\"", ":", "range", "(", "1", ",", "args", ".", "total_epochs", "+", "1", ")", ",", "\n", "\"logging_on_close\"", ":", "True", ",", "\n", "\"logging_on_update\"", ":", "True", ",", "\n", "\"postfix\"", ":", "False", ",", "\n", "\"unit\"", ":", "\"ep\"", "\n", "}", "\n", "\n", "# --------------------------------------------------------", "\n", "# Total progress bar", "\n", "# --------------------------------------------------------", "\n", "print", "(", "''", ")", ",", "logging", ".", "logbook", "(", "''", ")", "\n", "total_progress", "=", "create_progressbar", "(", "**", "progressbar_args", ")", "\n", "print", "(", "\"\\n\"", ")", "\n", "\n", "# --------------------------------------------------------", "\n", "# Remember validation loss", "\n", "# --------------------------------------------------------", "\n", "best_validation_loss", "=", "float", "(", "\"inf\"", ")", "if", "args", ".", "validation_key_minimize", "else", "-", "float", "(", "\"inf\"", ")", "\n", "store_as_best", "=", "False", "\n", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "start_epoch", ",", "args", ".", "total_epochs", "+", "1", ")", ":", "\n", "        ", "with", "logger", ".", "LoggingBlock", "(", "\"Epoch %i/%i\"", "%", "(", "epoch", ",", "args", ".", "total_epochs", ")", ",", "emph", "=", "True", ")", ":", "\n", "\n", "# --------------------------------------------------------", "\n", "# Always report learning rate", "\n", "# --------------------------------------------------------", "\n", "            ", "if", "lr_scheduler", "is", "None", ":", "\n", "                ", "logging", ".", "info", "(", "\"lr: %s\"", "%", "format_learning_rate", "(", "args", ".", "optimizer_lr", ")", ")", "\n", "", "else", ":", "\n", "                ", "logging", ".", "info", "(", "\"lr: %s\"", "%", "format_learning_rate", "(", "lr_scheduler", ".", "get_lr", "(", ")", ")", ")", "\n", "\n", "# -------------------------------------------", "\n", "# Create and run a training epoch", "\n", "# -------------------------------------------", "\n", "", "if", "train_loader", "is", "not", "None", ":", "\n", "                ", "avg_loss_dict", ",", "_", "=", "training_module", ".", "run", "(", "model_and_loss", "=", "model_and_loss", ",", "optimizer", "=", "optimizer", ")", "\n", "\n", "if", "args", ".", "evaluation", "is", "False", ":", "\n", "                    ", "tensorBoardWriter", ".", "add_scalar", "(", "'Train/Loss'", ",", "avg_loss_dict", "[", "args", ".", "training_key", "]", ",", "epoch", ")", "\n", "\n", "# -------------------------------------------", "\n", "# Create and run a validation epoch", "\n", "# -------------------------------------------", "\n", "", "", "if", "validation_loader", "is", "not", "None", ":", "\n", "\n", "# ---------------------------------------------------", "\n", "# Construct holistic recorder for epoch", "\n", "# ---------------------------------------------------", "\n", "                ", "avg_loss_dict", ",", "output_dict", "=", "evaluation_module", ".", "run", "(", "model_and_loss", "=", "model_and_loss", ",", "epoch", "=", "epoch", ")", "\n", "\n", "# --------------------------------------------------------", "\n", "# Tensorboard X writing", "\n", "# --------------------------------------------------------", "\n", "if", "args", ".", "evaluation", "is", "False", ":", "\n", "                    ", "tensorBoardWriter", ".", "add_scalar", "(", "'Val/Metric'", ",", "avg_loss_dict", "[", "args", ".", "validation_key", "]", ",", "epoch", ")", "\n", "\n", "# ----------------------------------------------------------------", "\n", "# Evaluate whether this is the best validation_loss", "\n", "# ----------------------------------------------------------------", "\n", "", "validation_loss", "=", "avg_loss_dict", "[", "args", ".", "validation_key", "]", "\n", "if", "args", ".", "validation_key_minimize", ":", "\n", "                    ", "store_as_best", "=", "validation_loss", "<", "best_validation_loss", "\n", "", "else", ":", "\n", "                    ", "store_as_best", "=", "validation_loss", ">", "best_validation_loss", "\n", "", "if", "store_as_best", ":", "\n", "                    ", "best_validation_loss", "=", "validation_loss", "\n", "\n", "# --------------------------------------------------------", "\n", "# Update standard learning scheduler", "\n", "# --------------------------------------------------------", "\n", "", "", "if", "lr_scheduler", "is", "not", "None", ":", "\n", "                ", "lr_scheduler", ".", "step", "(", "epoch", ")", "\n", "\n", "\n", "# ----------------------------------------------------------------", "\n", "# Also show best loss on total_progress", "\n", "# ----------------------------------------------------------------", "\n", "", "total_progress_stats", "=", "{", "\n", "\"best_\"", "+", "args", ".", "validation_key", "+", "\"_avg\"", ":", "\"%1.4f\"", "%", "best_validation_loss", "\n", "}", "\n", "total_progress", ".", "set_postfix", "(", "total_progress_stats", ")", "\n", "\n", "# # ----------------------------------------------------------------", "\n", "# # Bump total progress", "\n", "# # ----------------------------------------------------------------", "\n", "total_progress", ".", "update", "(", ")", "\n", "print", "(", "''", ")", "\n", "\n", "# ----------------------------------------------------------------", "\n", "# Store checkpoint", "\n", "# ----------------------------------------------------------------", "\n", "if", "checkpoint_saver", "is", "not", "None", ":", "\n", "                ", "checkpoint_saver", ".", "save_latest", "(", "\n", "directory", "=", "args", ".", "save", ",", "\n", "model_and_loss", "=", "model_and_loss", ",", "\n", "stats_dict", "=", "dict", "(", "avg_loss_dict", ",", "epoch", "=", "epoch", ")", ",", "\n", "store_as_best", "=", "store_as_best", ")", "\n", "\n", "# ----------------------------------------------------------------", "\n", "# Vertical space between epochs", "\n", "# ----------------------------------------------------------------", "\n", "", "print", "(", "''", ")", ",", "logging", ".", "logbook", "(", "''", ")", "\n", "\n", "\n", "# ----------------------------------------------------------------", "\n", "# Finish", "\n", "# ----------------------------------------------------------------", "\n", "", "", "if", "args", ".", "evaluation", "is", "False", ":", "\n", "        ", "tensorBoardWriter", ".", "close", "(", ")", "\n", "\n", "", "total_progress", ".", "close", "(", ")", "\n", "logging", ".", "info", "(", "\"Finished.\"", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.ModelAndLoss.__init__": [[24, 29], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "model", ",", "training_loss", ",", "evaluation_loss", "=", "None", ")", ":", "\n", "        ", "super", "(", "ModelAndLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_model", "=", "model", "\n", "self", ".", "_training_loss", "=", "training_loss", "\n", "self", ".", "_evaluation_loss", "=", "evaluation_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.ModelAndLoss.training_loss": [[30, 33], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "training_loss", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_training_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.ModelAndLoss.evaluation_loss": [[34, 37], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "evaluation_loss", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_evaluation_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.ModelAndLoss.model": [[38, 41], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "model", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_model", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.ModelAndLoss.num_parameters": [[42, 44], ["sum", "p.data.nelement", "configuration.ModelAndLoss.parameters"], "methods", ["None"], ["", "def", "num_parameters", "(", "self", ")", ":", "\n", "        ", "return", "sum", "(", "[", "p", ".", "data", ".", "nelement", "(", ")", "if", "p", ".", "requires_grad", "else", "0", "for", "p", "in", "self", ".", "parameters", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.ModelAndLoss.forward": [[48, 66], ["configuration.ModelAndLoss._model", "configuration.ModelAndLoss._training_loss", "configuration.ModelAndLoss._evaluation_loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "example_dict", ")", ":", "\n", "# -------------------------------------", "\n", "# Run forward pass", "\n", "# -------------------------------------", "\n", "        ", "output_dict", "=", "self", ".", "_model", "(", "example_dict", ")", "\n", "\n", "# -------------------------------------", "\n", "# Compute losses", "\n", "# -------------------------------------", "\n", "if", "self", ".", "training", ":", "\n", "            ", "loss_dict", "=", "self", ".", "_training_loss", "(", "output_dict", ",", "example_dict", ")", "\n", "", "else", ":", "\n", "            ", "loss_dict", "=", "self", ".", "_evaluation_loss", "(", "output_dict", ",", "example_dict", ")", "\n", "\n", "# -------------------------------------", "\n", "# Return losses and outputs", "\n", "# -------------------------------------", "\n", "", "return", "loss_dict", ",", "output_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.__init__": [[196, 208], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "prefix", "=", "\"checkpoint\"", ",", "\n", "latest_postfix", "=", "\"_latest\"", ",", "\n", "best_postfix", "=", "\"_best\"", ",", "\n", "model_key", "=", "\"state_dict\"", ",", "\n", "extension", "=", "\".ckpt\"", ")", ":", "\n", "\n", "        ", "self", ".", "_prefix", "=", "prefix", "\n", "self", ".", "_model_key", "=", "model_key", "\n", "self", ".", "_latest_postfix", "=", "latest_postfix", "\n", "self", ".", "_best_postfix", "=", "best_postfix", "\n", "self", ".", "_extension", "=", "extension", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver._load_state_dict_into_module": [[214, 237], ["module.state_dict", "state_dict.items", "isinstance", "set", "set", "len", "KeyError", "own_state[].resize_as_", "own_state[].copy_", "KeyError", "module.state_dict.keys", "state_dict.keys", "RuntimeError", "own_state[].size", "param.size"], "methods", ["None"], ["", "def", "_load_state_dict_into_module", "(", "self", ",", "state_dict", ",", "module", ",", "strict", "=", "True", ")", ":", "\n", "        ", "own_state", "=", "module", ".", "state_dict", "(", ")", "\n", "\n", "for", "name", ",", "param", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "name", "in", "own_state", ":", "\n", "                ", "if", "isinstance", "(", "param", ",", "nn", ".", "Parameter", ")", ":", "\n", "# backwards compatibility for serialized parameters", "\n", "                    ", "param", "=", "param", ".", "data", "\n", "", "try", ":", "\n", "                    ", "own_state", "[", "name", "]", ".", "resize_as_", "(", "param", ")", "\n", "own_state", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "raise", "RuntimeError", "(", "'While copying the parameter named {}, '", "\n", "'whose dimensions in the model are {} and '", "\n", "'whose dimensions in the checkpoint are {}.'", "\n", ".", "format", "(", "name", ",", "own_state", "[", "name", "]", ".", "size", "(", ")", ",", "param", ".", "size", "(", ")", ")", ")", "\n", "", "", "elif", "strict", ":", "\n", "                ", "raise", "KeyError", "(", "'unexpected key \"{}\" in state_dict'", "\n", ".", "format", "(", "name", ")", ")", "\n", "", "", "if", "strict", ":", "\n", "            ", "missing", "=", "set", "(", "own_state", ".", "keys", "(", ")", ")", "-", "set", "(", "state_dict", ".", "keys", "(", ")", ")", "\n", "if", "len", "(", "missing", ")", ">", "0", ":", "\n", "                ", "raise", "KeyError", "(", "'missing keys in state_dict: \"{}\"'", ".", "format", "(", "missing", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.restore": [[238, 273], ["torch.load", "core.tools.filter_list_of_strings", "configuration.CheckpointSaver._load_state_dict_into_module", "logging.info", "os.path.isfile", "logging.info", "quit", "state_dict.keys", "logging.info", "state_dict.items", "torch.load.items"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.filter_list_of_strings", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver._load_state_dict_into_module"], ["", "", "", "def", "restore", "(", "self", ",", "filename", ",", "model_and_loss", ",", "include_params", "=", "\"*\"", ",", "exclude_params", "=", "(", ")", ")", ":", "\n", "# -----------------------------------------------------------------------------------------", "\n", "# Make sure file exists", "\n", "# -----------------------------------------------------------------------------------------", "\n", "        ", "if", "not", "os", ".", "path", ".", "isfile", "(", "filename", ")", ":", "\n", "            ", "logging", ".", "info", "(", "\"Could not find checkpoint file '%s'!\"", "%", "filename", ")", "\n", "quit", "(", ")", "\n", "\n", "# -----------------------------------------------------------------------------------------", "\n", "# Load checkpoint from file including the state_dict", "\n", "# -----------------------------------------------------------------------------------------", "\n", "", "checkpoint_with_state", "=", "torch", ".", "load", "(", "filename", ")", "\n", "\n", "# -----------------------------------------------------------------------------------------", "\n", "# Load filtered state dictionary", "\n", "# -----------------------------------------------------------------------------------------", "\n", "state_dict", "=", "checkpoint_with_state", "[", "self", ".", "_model_key", "]", "\n", "restore_keys", "=", "tools", ".", "filter_list_of_strings", "(", "\n", "state_dict", ".", "keys", "(", ")", ",", "\n", "include", "=", "include_params", ",", "\n", "exclude", "=", "exclude_params", ")", "\n", "state_dict", "=", "{", "key", ":", "value", "for", "key", ",", "value", "in", "state_dict", ".", "items", "(", ")", "if", "key", "in", "restore_keys", "}", "\n", "self", ".", "_load_state_dict_into_module", "(", "state_dict", ",", "model_and_loss", ")", "\n", "logging", ".", "info", "(", "\"  Restore keys:\"", ")", "\n", "for", "key", "in", "restore_keys", ":", "\n", "            ", "logging", ".", "info", "(", "\"    %s\"", "%", "key", ")", "\n", "\n", "# -----------------------------------------------------------------------------------------", "\n", "# Get checkpoint statistics without the state dict", "\n", "# -----------------------------------------------------------------------------------------", "\n", "", "checkpoint_stats", "=", "{", "\n", "key", ":", "value", "for", "key", ",", "value", "in", "checkpoint_with_state", ".", "items", "(", ")", "if", "key", "!=", "self", ".", "_model_key", "\n", "}", "\n", "\n", "return", "checkpoint_stats", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.restore_latest": [[274, 278], ["os.path.join", "configuration.CheckpointSaver.restore"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.restore"], ["", "def", "restore_latest", "(", "self", ",", "directory", ",", "model_and_loss", ",", "include_params", "=", "\"*\"", ",", "exclude_params", "=", "(", ")", ")", ":", "\n", "        ", "latest_checkpoint_filename", "=", "os", ".", "path", ".", "join", "(", "\n", "directory", ",", "self", ".", "_prefix", "+", "self", ".", "_latest_postfix", "+", "self", ".", "_extension", ")", "\n", "return", "self", ".", "restore", "(", "latest_checkpoint_filename", ",", "model_and_loss", ",", "include_params", ",", "exclude_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.restore_best": [[279, 283], ["os.path.join", "configuration.CheckpointSaver.restore"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.restore"], ["", "def", "restore_best", "(", "self", ",", "directory", ",", "model_and_loss", ",", "include_params", "=", "\"*\"", ",", "exclude_params", "=", "(", ")", ")", ":", "\n", "        ", "best_checkpoint_filename", "=", "os", ".", "path", ".", "join", "(", "\n", "directory", ",", "self", ".", "_prefix", "+", "self", ".", "_best_postfix", "+", "self", ".", "_extension", ")", "\n", "return", "self", ".", "restore", "(", "best_checkpoint_filename", ",", "model_and_loss", ",", "include_params", ",", "exclude_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.save_latest": [[284, 307], ["core.tools.ensure_dir", "dict", "model_and_loss.state_dict", "os.path.join", "torch.save", "os.path.join", "logging.info", "shutil.copyfile"], "methods", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.ensure_dir"], ["", "def", "save_latest", "(", "self", ",", "directory", ",", "model_and_loss", ",", "stats_dict", ",", "store_as_best", "=", "False", ")", ":", "\n", "# -----------------------------------------------------------------------------------------", "\n", "# Make sure directory exists", "\n", "# -----------------------------------------------------------------------------------------", "\n", "        ", "tools", ".", "ensure_dir", "(", "directory", ")", "\n", "\n", "# -----------------------------------------------------------------------------------------", "\n", "# Save", "\n", "# -----------------------------------------------------------------------------------------", "\n", "save_dict", "=", "dict", "(", "stats_dict", ")", "\n", "save_dict", "[", "self", ".", "_model_key", "]", "=", "model_and_loss", ".", "state_dict", "(", ")", "\n", "\n", "latest_checkpoint_filename", "=", "os", ".", "path", ".", "join", "(", "directory", ",", "self", ".", "_prefix", "+", "self", ".", "_latest_postfix", "+", "self", ".", "_extension", ")", "\n", "torch", ".", "save", "(", "save_dict", ",", "latest_checkpoint_filename", ")", "\n", "\n", "# -----------------------------------------------------------------------------------------", "\n", "# Possibly store as best", "\n", "# -----------------------------------------------------------------------------------------", "\n", "if", "store_as_best", ":", "\n", "            ", "best_checkpoint_filename", "=", "os", ".", "path", ".", "join", "(", "directory", ",", "self", ".", "_prefix", "+", "self", ".", "_best_postfix", "+", "self", ".", "_extension", ")", "\n", "\n", "logging", ".", "info", "(", "\"Saved checkpoint as best model..\"", ")", "\n", "shutil", ".", "copyfile", "(", "latest_checkpoint_filename", ",", "best_checkpoint_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.configure_runtime_augmentations": [[68, 109], ["core.logger.LoggingBlock", "core.tools.kwargs_from_args", "logging.info", "sorted", "core.tools.instance_from_kwargs", "logging.info", "core.tools.kwargs_from_args", "logging.info", "sorted", "core.tools.instance_from_kwargs", "logging.info", "tools.kwargs_from_args.items", "logging.info", "training_augmentation.cuda.cuda", "tools.kwargs_from_args.items", "logging.info", "validation_augmentation.cuda.cuda"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.kwargs_from_args", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.instance_from_kwargs", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.kwargs_from_args", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.instance_from_kwargs"], ["", "", "def", "configure_runtime_augmentations", "(", "args", ")", ":", "\n", "    ", "with", "logger", ".", "LoggingBlock", "(", "\"Runtime Augmentations\"", ",", "emph", "=", "True", ")", ":", "\n", "\n", "        ", "training_augmentation", "=", "None", "\n", "validation_augmentation", "=", "None", "\n", "\n", "# ----------------------------------------------------", "\n", "# Training Augmentation", "\n", "# ----------------------------------------------------", "\n", "if", "args", ".", "training_augmentation", "is", "not", "None", ":", "\n", "            ", "kwargs", "=", "tools", ".", "kwargs_from_args", "(", "args", ",", "\"training_augmentation\"", ")", "\n", "logging", ".", "info", "(", "\"training_augmentation: %s\"", "%", "args", ".", "training_augmentation", ")", "\n", "for", "param", ",", "default", "in", "sorted", "(", "kwargs", ".", "items", "(", ")", ")", ":", "\n", "                ", "logging", ".", "info", "(", "\"  %s: %s\"", "%", "(", "param", ",", "default", ")", ")", "\n", "", "kwargs", "[", "\"args\"", "]", "=", "args", "\n", "training_augmentation", "=", "tools", ".", "instance_from_kwargs", "(", "\n", "args", ".", "training_augmentation_class", ",", "kwargs", ")", "\n", "if", "args", ".", "cuda", ":", "\n", "                ", "training_augmentation", "=", "training_augmentation", ".", "cuda", "(", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "logging", ".", "info", "(", "\"training_augmentation: None\"", ")", "\n", "\n", "# ----------------------------------------------------", "\n", "# Validation Augmentation", "\n", "# ----------------------------------------------------", "\n", "", "if", "args", ".", "validation_augmentation", "is", "not", "None", ":", "\n", "            ", "kwargs", "=", "tools", ".", "kwargs_from_args", "(", "args", ",", "\"validation_augmentation\"", ")", "\n", "logging", ".", "info", "(", "\"validation_augmentation: %s\"", "%", "args", ".", "validation_augmentation", ")", "\n", "for", "param", ",", "default", "in", "sorted", "(", "kwargs", ".", "items", "(", ")", ")", ":", "\n", "                ", "logging", ".", "info", "(", "\"  %s: %s\"", "%", "(", "param", ",", "default", ")", ")", "\n", "", "kwargs", "[", "\"args\"", "]", "=", "args", "\n", "validation_augmentation", "=", "tools", ".", "instance_from_kwargs", "(", "\n", "args", ".", "validation_augmentation_class", ",", "kwargs", ")", "\n", "if", "args", ".", "cuda", ":", "\n", "                ", "validation_augmentation", "=", "validation_augmentation", ".", "cuda", "(", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "logging", ".", "info", "(", "\"validation_augmentation: None\"", ")", "\n", "\n", "", "", "return", "training_augmentation", ",", "validation_augmentation", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.configure_model_and_loss": [[111, 170], ["core.logger.LoggingBlock", "core.tools.kwargs_from_args", "core.tools.instance_from_kwargs", "configuration.ModelAndLoss", "logging.info", "logging.info", "logging.info", "core.tools.kwargs_from_args", "core.tools.instance_from_kwargs", "core.tools.kwargs_from_args", "core.tools.instance_from_kwargs", "model_and_loss.cuda.cuda", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "core.tools.x2module().num_parameters", "core.tools.x2module"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.kwargs_from_args", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.instance_from_kwargs", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.kwargs_from_args", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.instance_from_kwargs", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.kwargs_from_args", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.instance_from_kwargs", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.ModelAndLoss.num_parameters", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.x2module"], ["", "def", "configure_model_and_loss", "(", "args", ")", ":", "\n", "\n", "# ----------------------------------------------------", "\n", "# Dynamically load model and loss class with parameters", "\n", "# passed in via \"--model_[param]=[value]\" or \"--loss_[param]=[value]\" arguments", "\n", "# ----------------------------------------------------", "\n", "    ", "with", "logger", ".", "LoggingBlock", "(", "\"Model and Loss\"", ",", "emph", "=", "True", ")", ":", "\n", "\n", "# ----------------------------------------------------", "\n", "# Model", "\n", "# ----------------------------------------------------", "\n", "        ", "kwargs", "=", "tools", ".", "kwargs_from_args", "(", "args", ",", "\"model\"", ")", "\n", "kwargs", "[", "\"args\"", "]", "=", "args", "\n", "model", "=", "tools", ".", "instance_from_kwargs", "(", "args", ".", "model_class", ",", "kwargs", ")", "\n", "\n", "# ----------------------------------------------------", "\n", "# Training loss", "\n", "# ----------------------------------------------------", "\n", "training_loss", "=", "None", "\n", "if", "args", ".", "training_loss", "is", "not", "None", ":", "\n", "            ", "kwargs", "=", "tools", ".", "kwargs_from_args", "(", "args", ",", "\"training_loss\"", ")", "\n", "kwargs", "[", "\"args\"", "]", "=", "args", "\n", "training_loss", "=", "tools", ".", "instance_from_kwargs", "(", "args", ".", "training_loss_class", ",", "kwargs", ")", "\n", "\n", "# ----------------------------------------------------", "\n", "# Validation loss", "\n", "# ----------------------------------------------------", "\n", "", "validation_loss", "=", "None", "\n", "if", "args", ".", "validation_loss", "is", "not", "None", ":", "\n", "            ", "kwargs", "=", "tools", ".", "kwargs_from_args", "(", "args", ",", "\"validation_loss\"", ")", "\n", "kwargs", "[", "\"args\"", "]", "=", "args", "\n", "validation_loss", "=", "tools", ".", "instance_from_kwargs", "(", "args", ".", "validation_loss_class", ",", "kwargs", ")", "\n", "\n", "# ----------------------------------------------------", "\n", "# Model and loss", "\n", "# ----------------------------------------------------", "\n", "", "model_and_loss", "=", "ModelAndLoss", "(", "args", ",", "model", ",", "training_loss", ",", "validation_loss", ")", "\n", "\n", "# -----------------------------------------------------------", "\n", "# If Cuda, transfer model to Cuda and wrap with DataParallel.", "\n", "# -----------------------------------------------------------", "\n", "if", "args", ".", "cuda", ":", "\n", "            ", "model_and_loss", "=", "model_and_loss", ".", "cuda", "(", ")", "\n", "\n", "# ---------------------------------------------------------------", "\n", "# Report some network statistics", "\n", "# ---------------------------------------------------------------", "\n", "", "logging", ".", "info", "(", "\"Batch Size: %i\"", "%", "args", ".", "batch_size", ")", "\n", "logging", ".", "info", "(", "\"GPGPU: Cuda\"", ")", "if", "args", ".", "cuda", "else", "logging", ".", "info", "(", "\"GPGPU: off\"", ")", "\n", "logging", ".", "info", "(", "\"Network: %s\"", "%", "args", ".", "model", ")", "\n", "logging", ".", "info", "(", "\"Number of parameters: %i\"", "%", "tools", ".", "x2module", "(", "model_and_loss", ")", ".", "num_parameters", "(", ")", ")", "\n", "if", "training_loss", "is", "not", "None", ":", "\n", "            ", "logging", ".", "info", "(", "\"Training Key: %s\"", "%", "args", ".", "training_key", ")", "\n", "logging", ".", "info", "(", "\"Training Loss: %s\"", "%", "args", ".", "training_loss", ")", "\n", "", "if", "validation_loss", "is", "not", "None", ":", "\n", "            ", "logging", ".", "info", "(", "\"Validation Key: %s\"", "%", "args", ".", "validation_key", ")", "\n", "logging", ".", "info", "(", "\"Validation Loss: %s\"", "%", "args", ".", "validation_loss", ")", "\n", "\n", "", "", "return", "model_and_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.configure_random_seed": [[172, 190], ["core.logger.LoggingBlock", "random.seed", "logging.info", "numpy.random.seed", "logging.info", "torch.manual_seed", "logging.info", "torch.cuda.manual_seed", "logging.info"], "function", ["None"], ["", "def", "configure_random_seed", "(", "args", ")", ":", "\n", "    ", "with", "logger", ".", "LoggingBlock", "(", "\"Random Seeds\"", ",", "emph", "=", "True", ")", ":", "\n", "# python", "\n", "        ", "seed", "=", "args", ".", "seed", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "logging", ".", "info", "(", "\"Python seed: %i\"", "%", "seed", ")", "\n", "# numpy", "\n", "seed", "+=", "1", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "logging", ".", "info", "(", "\"Numpy seed: %i\"", "%", "seed", ")", "\n", "# torch", "\n", "seed", "+=", "1", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "logging", ".", "info", "(", "\"Torch CPU seed: %i\"", "%", "seed", ")", "\n", "# torch cuda", "\n", "seed", "+=", "1", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "logging", ".", "info", "(", "\"Torch CUDA seed: %i\"", "%", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.configure_checkpoint_saver": [[309, 349], ["core.logger.LoggingBlock", "configuration.CheckpointSaver", "logging.info", "logging.info", "os.path.isfile", "configuration.CheckpointSaver.restore", "os.path.isdir", "logging.info", "quit", "logging.info", "configuration.CheckpointSaver.restore_best", "logging.info", "configuration.CheckpointSaver.restore_latest", "logging.info", "quit"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.restore", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.restore_best", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.CheckpointSaver.restore_latest"], ["", "", "", "def", "configure_checkpoint_saver", "(", "args", ",", "model_and_loss", ")", ":", "\n", "    ", "with", "logger", ".", "LoggingBlock", "(", "\"Checkpoint\"", ",", "emph", "=", "True", ")", ":", "\n", "        ", "checkpoint_saver", "=", "CheckpointSaver", "(", ")", "\n", "checkpoint_stats", "=", "None", "\n", "\n", "if", "args", ".", "checkpoint", "is", "None", ":", "\n", "            ", "logging", ".", "info", "(", "\"No checkpoint given.\"", ")", "\n", "logging", ".", "info", "(", "\"Starting from scratch with random initialization.\"", ")", "\n", "\n", "", "elif", "os", ".", "path", ".", "isfile", "(", "args", ".", "checkpoint", ")", ":", "\n", "            ", "checkpoint_stats", ",", "filename", "=", "checkpoint_saver", ".", "restore", "(", "\n", "filename", "=", "args", ".", "checkpoint", ",", "\n", "model_and_loss", "=", "model_and_loss", ",", "\n", "include_params", "=", "args", ".", "checkpoint_include_params", ",", "\n", "exclude_params", "=", "args", ".", "checkpoint_exclude_params", ")", "\n", "\n", "", "elif", "os", ".", "path", ".", "isdir", "(", "args", ".", "checkpoint", ")", ":", "\n", "            ", "if", "args", ".", "checkpoint_mode", "in", "[", "\"resume_from_best\"", "]", ":", "\n", "                ", "logging", ".", "info", "(", "\"Loading best checkpoint in %s\"", "%", "args", ".", "checkpoint", ")", "\n", "checkpoint_stats", ",", "filename", "=", "checkpoint_saver", ".", "restore_best", "(", "\n", "directory", "=", "args", ".", "checkpoint", ",", "\n", "model_and_loss", "=", "model_and_loss", ",", "\n", "include_params", "=", "args", ".", "checkpoint_include_params", ",", "\n", "exclude_params", "=", "args", ".", "checkpoint_exclude_params", ")", "\n", "\n", "", "elif", "args", ".", "checkpoint_mode", "in", "[", "\"resume_from_latest\"", "]", ":", "\n", "                ", "logging", ".", "info", "(", "\"Loading latest checkpoint in %s\"", "%", "args", ".", "checkpoint", ")", "\n", "checkpoint_stats", ",", "filename", "=", "checkpoint_saver", ".", "restore_latest", "(", "\n", "directory", "=", "args", ".", "checkpoint", ",", "\n", "model_and_loss", "=", "model_and_loss", ",", "\n", "include_params", "=", "args", ".", "checkpoint_include_params", ",", "\n", "exclude_params", "=", "args", ".", "checkpoint_exclude_params", ")", "\n", "", "else", ":", "\n", "                ", "logging", ".", "info", "(", "\"Unknown checkpoint_restore '%s' given!\"", "%", "args", ".", "checkpoint_restore", ")", "\n", "quit", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "logging", ".", "info", "(", "\"Could not find checkpoint file or directory '%s'\"", "%", "args", ".", "checkpoint", ")", "\n", "quit", "(", ")", "\n", "\n", "", "", "return", "checkpoint_saver", ",", "checkpoint_stats", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.configure_data_loaders": [[354, 448], ["core.logger.LoggingBlock", "numpy.isscalar", "core.tools.kwargs_from_args", "core.tools.instance_from_kwargs", "configuration.configure_data_loaders._log_statistics"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.kwargs_from_args", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.instance_from_kwargs"], ["", "def", "configure_data_loaders", "(", "args", ")", ":", "\n", "    ", "with", "logger", ".", "LoggingBlock", "(", "\"Datasets\"", ",", "emph", "=", "True", ")", ":", "\n", "\n", "        ", "def", "_sizes_to_str", "(", "value", ")", ":", "\n", "            ", "if", "np", ".", "isscalar", "(", "value", ")", ":", "\n", "                ", "return", "'[1L]'", "\n", "", "else", ":", "\n", "                ", "return", "' '", ".", "join", "(", "[", "str", "(", "[", "d", "for", "d", "in", "value", ".", "size", "(", ")", "]", ")", "]", ")", "\n", "\n", "", "", "def", "_log_statistics", "(", "dataset", ",", "prefix", ",", "name", ")", ":", "\n", "            ", "with", "logger", ".", "LoggingBlock", "(", "\"%s Dataset: %s\"", "%", "(", "prefix", ",", "name", ")", ")", ":", "\n", "                ", "example_dict", "=", "dataset", "[", "0", "]", "# get sizes from first dataset example", "\n", "for", "key", ",", "value", "in", "sorted", "(", "example_dict", ".", "items", "(", ")", ")", ":", "\n", "                    ", "if", "key", "in", "[", "\"index\"", ",", "\"basename\"", "]", ":", "# no need to display these", "\n", "                        ", "continue", "\n", "", "if", "isinstance", "(", "value", ",", "str", ")", ":", "\n", "                        ", "logging", ".", "info", "(", "\"{}: {}\"", ".", "format", "(", "key", ",", "value", ")", ")", "\n", "", "else", ":", "\n", "                        ", "logging", ".", "info", "(", "\"%s: %s\"", "%", "(", "key", ",", "_sizes_to_str", "(", "value", ")", ")", ")", "\n", "", "", "logging", ".", "info", "(", "\"num_examples: %i\"", "%", "len", "(", "dataset", ")", ")", "\n", "\n", "# -----------------------------------------------------------------------------------------", "\n", "# GPU parameters", "\n", "# -----------------------------------------------------------------------------------------", "\n", "", "", "gpuargs", "=", "{", "\"num_workers\"", ":", "args", ".", "num_workers", ",", "\"pin_memory\"", ":", "True", "}", "if", "args", ".", "cuda", "else", "{", "}", "\n", "\n", "train_loader", "=", "None", "\n", "validation_loader", "=", "None", "\n", "inference_loader", "=", "None", "\n", "\n", "# -----------------------------------------------------------------------------------------", "\n", "# Training dataset", "\n", "# -----------------------------------------------------------------------------------------", "\n", "if", "args", ".", "training_dataset", "is", "not", "None", ":", "\n", "\n", "# ----------------------------------------------", "\n", "# Figure out training_dataset arguments", "\n", "# ----------------------------------------------", "\n", "            ", "kwargs", "=", "tools", ".", "kwargs_from_args", "(", "args", ",", "\"training_dataset\"", ")", "\n", "kwargs", "[", "\"is_cropped\"", "]", "=", "True", "\n", "kwargs", "[", "\"args\"", "]", "=", "args", "\n", "\n", "# ----------------------------------------------", "\n", "# Create training dataset", "\n", "# ----------------------------------------------", "\n", "train_dataset", "=", "tools", ".", "instance_from_kwargs", "(", "args", ".", "training_dataset_class", ",", "kwargs", ")", "\n", "\n", "# ----------------------------------------------", "\n", "# Create training loader", "\n", "# ----------------------------------------------            ", "\n", "if", "args", ".", "training_dataset", "==", "'KITTI_Comb_Train'", "or", "args", ".", "training_dataset", "==", "'KITTI_Comb_Full'", ":", "\n", "                ", "custom_batch_sampler", "=", "CustomBatchSampler", "(", "[", "RandomSampler", "(", "train_dataset", ".", "dataset1", ")", ",", "RandomSampler", "(", "train_dataset", ".", "dataset2", ")", "]", ")", "\n", "train_loader", "=", "DataLoader", "(", "dataset", "=", "train_dataset", ",", "batch_sampler", "=", "custom_batch_sampler", ",", "**", "gpuargs", ")", "\n", "\n", "", "else", ":", "\n", "                ", "train_loader", "=", "DataLoader", "(", "\n", "train_dataset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "drop_last", "=", "True", ",", "\n", "**", "gpuargs", ")", "\n", "\n", "", "_log_statistics", "(", "train_dataset", ",", "prefix", "=", "\"Training\"", ",", "name", "=", "args", ".", "training_dataset", ")", "\n", "\n", "# -----------------------------------------------------------------------------------------", "\n", "# Validation dataset", "\n", "# -----------------------------------------------------------------------------------------", "\n", "", "if", "args", ".", "validation_dataset", "is", "not", "None", ":", "\n", "\n", "# ----------------------------------------------", "\n", "# Figure out validation_dataset arguments", "\n", "# ----------------------------------------------", "\n", "            ", "kwargs", "=", "tools", ".", "kwargs_from_args", "(", "args", ",", "\"validation_dataset\"", ")", "\n", "kwargs", "[", "\"is_cropped\"", "]", "=", "True", "\n", "kwargs", "[", "\"args\"", "]", "=", "args", "\n", "\n", "# ----------------------------------------------", "\n", "# Create validation dataset", "\n", "# ----------------------------------------------", "\n", "validation_dataset", "=", "tools", ".", "instance_from_kwargs", "(", "args", ".", "validation_dataset_class", ",", "kwargs", ")", "\n", "\n", "# ----------------------------------------------", "\n", "# Create validation loader", "\n", "# ----------------------------------------------", "\n", "validation_loader", "=", "DataLoader", "(", "\n", "validation_dataset", ",", "\n", "batch_size", "=", "args", ".", "batch_size_val", ",", "\n", "shuffle", "=", "False", ",", "\n", "drop_last", "=", "False", ",", "\n", "**", "gpuargs", ")", "\n", "\n", "_log_statistics", "(", "validation_dataset", ",", "prefix", "=", "\"Validation\"", ",", "name", "=", "args", ".", "validation_dataset", ")", "\n", "\n", "", "", "return", "train_loader", ",", "validation_loader", ",", "inference_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration._print_trainable_params": [[453, 464], ["model_and_loss.named_parameters", "logging.info", "fnmatch.fnmatch", "str", "logging.info", "logging.info", "print", "print", "p.numel", "str", "p.numel", "p.numel"], "function", ["None"], ["", "def", "_print_trainable_params", "(", "model_and_loss", ",", "match", "=", "\"*\"", ")", ":", "\n", "    ", "sum", "=", "0", "\n", "for", "name", ",", "p", "in", "model_and_loss", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "fnmatch", ".", "fnmatch", "(", "name", ",", "match", ")", ":", "\n", "            ", "if", "p", ".", "requires_grad", ":", "\n", "                ", "logging", ".", "info", "(", "name", ")", "\n", "logging", ".", "info", "(", "str", "(", "p", ".", "numel", "(", ")", ")", ")", "\n", "print", "(", "name", ")", "\n", "print", "(", "p", ".", "numel", "(", ")", ")", "\n", "sum", "+=", "p", ".", "numel", "(", ")", "\n", "", "", "", "logging", ".", "info", "(", "str", "(", "sum", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration._generate_trainable_params": [[465, 470], ["model_and_loss.named_parameters", "fnmatch.fnmatch"], "function", ["None"], ["", "def", "_generate_trainable_params", "(", "model_and_loss", ",", "match", "=", "\"*\"", ")", ":", "\n", "    ", "for", "name", ",", "p", "in", "model_and_loss", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "fnmatch", ".", "fnmatch", "(", "name", ",", "match", ")", ":", "\n", "            ", "if", "p", ".", "requires_grad", ":", "\n", "                ", "yield", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration._param_names_and_trainable_generator": [[472, 480], ["model_and_loss.named_parameters", "fnmatch.fnmatch", "configuration._generate_trainable_params", "names.append"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration._generate_trainable_params"], ["", "", "", "", "def", "_param_names_and_trainable_generator", "(", "model_and_loss", ",", "match", "=", "\"*\"", ")", ":", "\n", "    ", "names", "=", "[", "]", "\n", "for", "name", ",", "p", "in", "model_and_loss", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "fnmatch", ".", "fnmatch", "(", "name", ",", "match", ")", ":", "\n", "            ", "if", "p", ".", "requires_grad", ":", "\n", "                ", "names", ".", "append", "(", "name", ")", "\n", "\n", "", "", "", "return", "names", ",", "_generate_trainable_params", "(", "model_and_loss", ",", "match", "=", "match", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.configure_optimizer": [[485, 571], ["core.logger.LoggingBlock", "model_and_loss.num_parameters", "logging.info", "logging.info", "logging.info", "core.tools.kwargs_from_args", "sorted", "dict", "core.tools.instance_from_kwargs", "kwargs_without_groups.items", "logging.info", "configuration._generate_trainable_params", "configuration._param_names_and_trainable_generator", "set", "set", "tools.kwargs_from_args.items", "list", "core.logger.LoggingBlock", "trainable_parameter_groups.append", "core.logger.LoggingBlock", "sorted", "core.logger.LoggingBlock", "configuration._param_names_and_trainable_generator", "sorted", "trainable_parameter_groups.append", "set", "set", "list", "logging.info", "group.items", "logging.info", "list"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.ModelAndLoss.num_parameters", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.kwargs_from_args", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.instance_from_kwargs", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration._generate_trainable_params", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration._param_names_and_trainable_generator", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration._param_names_and_trainable_generator"], ["", "def", "configure_optimizer", "(", "args", ",", "model_and_loss", ")", ":", "\n", "    ", "optimizer", "=", "None", "\n", "with", "logger", ".", "LoggingBlock", "(", "\"Optimizer\"", ",", "emph", "=", "True", ")", ":", "\n", "        ", "if", "args", ".", "optimizer", "is", "not", "None", ":", "\n", "            ", "if", "model_and_loss", ".", "num_parameters", "(", ")", "==", "0", ":", "\n", "                ", "logging", ".", "info", "(", "\"No trainable parameters detected.\"", ")", "\n", "logging", ".", "info", "(", "\"Setting optimizer to None.\"", ")", "\n", "", "else", ":", "\n", "                ", "logging", ".", "info", "(", "args", ".", "optimizer", ")", "\n", "\n", "# -------------------------------------------", "\n", "# Figure out all optimizer arguments", "\n", "# -------------------------------------------", "\n", "all_kwargs", "=", "tools", ".", "kwargs_from_args", "(", "args", ",", "\"optimizer\"", ")", "\n", "\n", "# -------------------------------------------", "\n", "# Get the split of param groups", "\n", "# -------------------------------------------", "\n", "kwargs_without_groups", "=", "{", "\n", "key", ":", "value", "for", "key", ",", "value", "in", "all_kwargs", ".", "items", "(", ")", "if", "key", "!=", "\"group\"", "\n", "}", "\n", "param_groups", "=", "all_kwargs", "[", "\"group\"", "]", "\n", "\n", "# ----------------------------------------------------------------------", "\n", "# Print arguments (without groups)", "\n", "# ----------------------------------------------------------------------", "\n", "for", "param", ",", "default", "in", "sorted", "(", "kwargs_without_groups", ".", "items", "(", ")", ")", ":", "\n", "                    ", "logging", ".", "info", "(", "\"%s: %s\"", "%", "(", "param", ",", "default", ")", ")", "\n", "\n", "# ----------------------------------------------------------------------", "\n", "# Construct actual optimizer params", "\n", "# ----------------------------------------------------------------------", "\n", "", "kwargs", "=", "dict", "(", "kwargs_without_groups", ")", "\n", "if", "param_groups", "is", "None", ":", "\n", "# ---------------------------------------------------------", "\n", "# Add all trainable parameters if there is no param groups", "\n", "# ---------------------------------------------------------", "\n", "                    ", "all_trainable_parameters", "=", "_generate_trainable_params", "(", "model_and_loss", ")", "\n", "kwargs", "[", "\"params\"", "]", "=", "all_trainable_parameters", "\n", "", "else", ":", "\n", "# -------------------------------------------", "\n", "# Add list of parameter groups instead", "\n", "# -------------------------------------------", "\n", "                    ", "trainable_parameter_groups", "=", "[", "]", "\n", "dnames", ",", "dparams", "=", "_param_names_and_trainable_generator", "(", "model_and_loss", ")", "\n", "dnames", "=", "set", "(", "dnames", ")", "\n", "dparams", "=", "set", "(", "list", "(", "dparams", ")", ")", "\n", "with", "logger", ".", "LoggingBlock", "(", "\"parameter_groups:\"", ")", ":", "\n", "                        ", "for", "group", "in", "param_groups", ":", "\n", "#  log group settings", "\n", "                            ", "group_match", "=", "group", "[", "\"params\"", "]", "\n", "group_args", "=", "{", "\n", "key", ":", "value", "for", "key", ",", "value", "in", "group", ".", "items", "(", ")", "if", "key", "!=", "\"params\"", "\n", "}", "\n", "\n", "with", "logger", ".", "LoggingBlock", "(", "\"%s: %s\"", "%", "(", "group_match", ",", "group_args", ")", ")", ":", "\n", "# retrieve parameters by matching name", "\n", "                                ", "gnames", ",", "gparams", "=", "_param_names_and_trainable_generator", "(", "\n", "model_and_loss", ",", "match", "=", "group_match", ")", "\n", "# log all names affected", "\n", "for", "n", "in", "sorted", "(", "gnames", ")", ":", "\n", "                                    ", "logging", ".", "info", "(", "n", ")", "\n", "# set generator for group", "\n", "", "group_args", "[", "\"params\"", "]", "=", "gparams", "\n", "# append parameter group", "\n", "trainable_parameter_groups", ".", "append", "(", "group_args", ")", "\n", "# update remaining trainable parameters", "\n", "dnames", "-=", "set", "(", "gnames", ")", "\n", "dparams", "-=", "set", "(", "list", "(", "gparams", ")", ")", "\n", "\n", "# append default parameter group", "\n", "", "", "trainable_parameter_groups", ".", "append", "(", "{", "\"params\"", ":", "list", "(", "dparams", ")", "}", ")", "\n", "# and log its parameter names", "\n", "with", "logger", ".", "LoggingBlock", "(", "\"default:\"", ")", ":", "\n", "                            ", "for", "dname", "in", "sorted", "(", "dnames", ")", ":", "\n", "                                ", "logging", ".", "info", "(", "dname", ")", "\n", "\n", "# set params in optimizer kwargs", "\n", "", "", "", "kwargs", "[", "\"params\"", "]", "=", "trainable_parameter_groups", "\n", "\n", "# -------------------------------------------", "\n", "# Create optimizer instance", "\n", "# -------------------------------------------", "\n", "", "optimizer", "=", "tools", ".", "instance_from_kwargs", "(", "args", ".", "optimizer_class", ",", "kwargs", ")", "\n", "\n", "", "", "", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.configuration.configure_lr_scheduler": [[576, 606], ["core.logger.LoggingBlock", "logging.info", "core.tools.kwargs_from_args", "sorted", "core.tools.instance_from_kwargs", "tools.kwargs_from_args.items", "logging.info"], "function", ["home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.kwargs_from_args", "home.repos.pwc.inspect_result.visinf_self-mono-sf.core.tools.instance_from_kwargs"], ["", "def", "configure_lr_scheduler", "(", "args", ",", "optimizer", ")", ":", "\n", "    ", "lr_scheduler", "=", "None", "\n", "\n", "with", "logger", ".", "LoggingBlock", "(", "\"Learning Rate Scheduler\"", ",", "emph", "=", "True", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"class: %s\"", "%", "args", ".", "lr_scheduler", ")", "\n", "\n", "if", "args", ".", "lr_scheduler", "is", "not", "None", ":", "\n", "\n", "# ----------------------------------------------", "\n", "# Figure out lr_scheduler arguments", "\n", "# ----------------------------------------------", "\n", "            ", "kwargs", "=", "tools", ".", "kwargs_from_args", "(", "args", ",", "\"lr_scheduler\"", ")", "\n", "\n", "# -------------------------------------------", "\n", "# Print arguments", "\n", "# -------------------------------------------", "\n", "for", "param", ",", "default", "in", "sorted", "(", "kwargs", ".", "items", "(", ")", ")", ":", "\n", "                ", "logging", ".", "info", "(", "\"%s: %s\"", "%", "(", "param", ",", "default", ")", ")", "\n", "\n", "# -------------------------------------------", "\n", "# Add optimizer", "\n", "# -------------------------------------------", "\n", "", "kwargs", "[", "\"optimizer\"", "]", "=", "optimizer", "\n", "\n", "# -------------------------------------------", "\n", "# Create lr_scheduler instance", "\n", "# -------------------------------------------", "\n", "lr_scheduler", "=", "tools", ".", "instance_from_kwargs", "(", "args", ".", "lr_scheduler_class", ",", "kwargs", ")", "\n", "\n", "", "", "return", "lr_scheduler", "\n", "", ""]]}