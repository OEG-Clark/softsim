{"home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.main.get_parameters": [[17, 83], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "get_parameters", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"-dataset\"", ",", "default", "=", "\"WN18RR\"", ",", "type", "=", "str", ",", "help", "=", "\"dataset name\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-model_name\"", ",", "default", "=", "\"DisMult\"", ",", "type", "=", "str", ",", "help", "=", "\"initial embedding model\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-opt\"", ",", "\n", "default", "=", "\"adagrad\"", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"optimizer. Currenty only adagrad and adam are supported\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-emb_method\"", ",", "\n", "default", "=", "\"ERAverage\"", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"method to find new enitity's embedding\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\"-emb_dim\"", ",", "default", "=", "200", ",", "type", "=", "int", ",", "help", "=", "\"embedding dimension\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-neg_ratio\"", ",", "\n", "default", "=", "1", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "\"number of negative examples per positive example\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\"-batch_size\"", ",", "default", "=", "1000", ",", "type", "=", "int", ",", "help", "=", "\"batch size\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-simulated_batch_size\"", ",", "\n", "default", "=", "1000", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "\"batch size to be simulated\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-save_each\"", ",", "default", "=", "5", ",", "type", "=", "int", ",", "help", "=", "\"validate every k epochs\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\"-ne\"", ",", "default", "=", "1000", ",", "type", "=", "int", ",", "help", "=", "\"number of epochs\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-lr\"", ",", "default", "=", "0.1", ",", "type", "=", "float", ",", "help", "=", "\"learning rate\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-reg_lambda\"", ",", "default", "=", "0.01", ",", "type", "=", "float", ",", "help", "=", "\"l2 regularization parameter\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-reg_ls\"", ",", "\n", "default", "=", "0.01", ",", "\n", "type", "=", "float", ",", "\n", "help", "=", "\"l2 regularization parameter (for Least Squares)\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-val\"", ",", "default", "=", "False", ",", "type", "=", "bool", ",", "help", "=", "\"start validation after training\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-use_custom_reg\"", ",", "default", "=", "True", ",", "type", "=", "bool", ",", "help", "=", "\"use custom regularisation\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\"-use_acc\"", ",", "default", "=", "False", ",", "type", "=", "bool", ",", "help", "=", "\"use_acc flag\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-cons_mask\"", ",", "default", "=", "False", ",", "type", "=", "bool", ",", "help", "=", "\"Use consistent masking\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-mask_prob\"", ",", "\n", "default", "=", "0.5", ",", "\n", "type", "=", "float", ",", "\n", "help", "=", "\"The probability of observed entities\"", ",", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.trainer.OutKGTrainer.__init__": [[15, 22], ["torch.device", "model.DisMultOutKG.DisMultOutKG", "torch.nn.DataParallel", "torch.nn.Softplus", "torch.cuda.is_available"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "args", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "self", ".", "model", "=", "DisMultOutKG", "(", "self", ".", "dataset", ",", "self", ".", "args", ",", "self", ".", "device", ")", "\n", "self", ".", "model", "=", "nn", ".", "DataParallel", "(", "self", ".", "model", ")", "\n", "self", ".", "predict_loss", "=", "nn", ".", "Softplus", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.trainer.OutKGTrainer.l2_loss": [[23, 25], ["trainer.OutKGTrainer.model.module.l2_loss"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.l2_loss"], ["", "def", "l2_loss", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "model", ".", "module", ".", "l2_loss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.trainer.OutKGTrainer.train": [[26, 130], ["trainer.OutKGTrainer.model.train", "range", "print", "torch.optim.Adagrad", "print", "torch.optim.Adam", "print", "torch.optim.Adam.zero_grad", "print", "trainer.OutKGTrainer.model.parameters", "trainer.OutKGTrainer.model.parameters", "trainer.OutKGTrainer.dataset.next_batch", "trainer.OutKGTrainer.dataset.was_last_batch", "trainer.OutKGTrainer.model", "torch.sum", "loss.backward", "print", "utils.save_model", "trainer.OutKGTrainer.predict_loss", "torch.optim.Adam.step", "torch.optim.Adam.zero_grad", "print", "print", "trainer.OutKGTrainer.dataset.num_batch_simulated", "trainer.OutKGTrainer.l2_loss", "str", "total_loss.item", "str"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.trainer.OutKGTrainer.train", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.next_batch", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.was_last_batch", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.utils.save_model", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_batch_simulated", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.l2_loss"], ["", "def", "train", "(", "self", ",", "save", "=", "True", ")", ":", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "if", "self", ".", "args", ".", "use_acc", ":", "\n", "            ", "initial_accumulator_value", "=", "0.1", "\n", "", "else", ":", "\n", "            ", "initial_accumulator_value", "=", "0.0", "\n", "\n", "", "if", "self", ".", "args", ".", "use_custom_reg", ":", "\n", "            ", "weight_decay", "=", "0.0", "\n", "", "else", ":", "\n", "            ", "weight_decay", "=", "self", ".", "args", ".", "reg_lambda", "\n", "\n", "", "if", "self", ".", "args", ".", "opt", "==", "\"adagrad\"", ":", "\n", "            ", "print", "(", "\"using adagrad\"", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adagrad", "(", "\n", "self", ".", "model", ".", "parameters", "(", ")", ",", "\n", "lr", "=", "self", ".", "args", ".", "lr", ",", "\n", "weight_decay", "=", "weight_decay", ",", "\n", "initial_accumulator_value", "=", "initial_accumulator_value", ",", "\n", "# this is added because of the consistency to the original tensorflow code", "\n", ")", "\n", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"using adam\"", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "\n", "self", ".", "model", ".", "parameters", "(", ")", ",", "\n", "lr", "=", "self", ".", "args", ".", "lr", ",", "\n", "weight_decay", "=", "self", ".", "args", ".", "reg_lambda", ",", "\n", ")", "\n", "\n", "", "iters_per_update", "=", "self", ".", "args", ".", "simulated_batch_size", "//", "self", ".", "args", ".", "batch_size", "\n", "\n", "if", "iters_per_update", "<", "1", ":", "\n", "            ", "raise", "(", "\"Actual batch size smaller than batch size to be simulated.\"", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"iterations before the gradient step : \"", ",", "iters_per_update", ")", "\n", "\n", "", "for", "epoch", "in", "range", "(", "self", ".", "args", ".", "ne", ")", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "last_batch", "=", "False", "\n", "total_loss", "=", "0.0", "\n", "num_iters", "=", "1", "\n", "while", "not", "last_batch", ":", "\n", "\n", "                ", "triples", ",", "l", ",", "new_ent_mask", "=", "self", ".", "dataset", ".", "next_batch", "(", "\n", "self", ".", "args", ".", "batch_size", ",", "\n", "neg_ratio", "=", "self", ".", "args", ".", "neg_ratio", ",", "\n", "device", "=", "self", ".", "device", ",", "\n", ")", "\n", "last_batch", "=", "self", ".", "dataset", ".", "was_last_batch", "(", ")", "\n", "scores", ",", "predicted_emb", "=", "self", ".", "model", "(", "triples", ",", "new_ent_mask", ")", "\n", "predict_loss", "=", "torch", ".", "sum", "(", "self", ".", "predict_loss", "(", "-", "l", "*", "scores", ")", ")", "\n", "if", "self", ".", "args", ".", "use_custom_reg", ":", "\n", "                    ", "if", "num_iters", "%", "iters_per_update", "==", "0", "or", "last_batch", "==", "True", ":", "\n", "                        ", "l2_loss", "=", "(", "\n", "self", ".", "args", ".", "reg_lambda", "\n", "*", "self", ".", "l2_loss", "(", ")", "\n", "/", "(", "\n", "self", ".", "dataset", ".", "num_batch_simulated", "(", "\n", "self", ".", "args", ".", "simulated_batch_size", "\n", ")", "\n", ")", "\n", ")", "\n", "loss", "=", "predict_loss", "+", "l2_loss", "\n", "\n", "", "else", ":", "\n", "                        ", "loss", "=", "predict_loss", "\n", "", "", "else", ":", "\n", "                    ", "loss", "=", "predict_loss", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "if", "num_iters", "%", "iters_per_update", "==", "0", "or", "last_batch", "==", "True", ":", "\n", "                    ", "if", "last_batch", ":", "\n", "                        ", "print", "(", "\"last batch triggered gradient update.\"", ")", "\n", "print", "(", "\n", "\"remaining iters for gradient update :\"", ",", "\n", "num_iters", "%", "iters_per_update", ",", "\n", ")", "\n", "", "optimizer", ".", "step", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "", "total_loss", "+=", "loss", "\n", "num_iters", "+=", "1", "\n", "\n", "", "print", "(", "\n", "\"Loss in iteration \"", "\n", "+", "str", "(", "epoch", ")", "\n", "+", "\": \"", "\n", "+", "str", "(", "total_loss", ".", "item", "(", ")", ")", "\n", "+", "\"(\"", "\n", "+", "self", ".", "dataset", ".", "dataset_name", "\n", "+", "\")\"", "\n", ")", "\n", "if", "epoch", "%", "self", ".", "args", ".", "save_each", "==", "0", "and", "save", ":", "\n", "                ", "print", "(", "'save model...'", ")", "\n", "save_model", "(", "\n", "self", ".", "model", ",", "\n", "self", ".", "args", ".", "model_name", ",", "\n", "self", ".", "args", ".", "emb_method", ",", "\n", "self", ".", "dataset", ".", "dataset_name", ",", "\n", "epoch", ",", "\n", "self", ".", "args", ".", "lr", ",", "\n", "self", ".", "args", ".", "reg_lambda", ",", "\n", "self", ".", "args", ".", "neg_ratio", ",", "\n", "self", ".", "args", ".", "emb_dim", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.tester.OutKGTester.__init__": [[14, 20], ["common.measure.Measure", "torch.device", "tester.OutKGTester.get_unseen_entities", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.tester.OutKGTester.get_unseen_entities"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "measure", "=", "Measure", "(", ")", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "self", ".", "unseen_ent", "=", "self", ".", "get_unseen_entities", "(", ")", "\n", "self", ".", "new_node_init", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.tester.OutKGTester.test": [[21, 36], ["tester.OutKGTester.model.eval", "enumerate", "tester.OutKGTester.measure.normalize", "tester.OutKGTester.measure.print_", "torch.load", "tester.OutKGTester.dataset.val_test_data[].keys", "tester.OutKGTester.get_ent_triples", "range", "len", "numpy.delete", "tester.OutKGTester.predict"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.measure.Measure.normalize", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.measure.Measure.print_", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_ent_triples", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.tester.OutKGTester.predict"], ["", "def", "test", "(", "self", ",", "model_path", ",", "valid_or_test", ")", ":", "\n", "        ", "self", ".", "model", "=", "torch", ".", "load", "(", "model_path", ")", ".", "module", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "for", "i", ",", "new_ent", "in", "enumerate", "(", "self", ".", "dataset", ".", "val_test_data", "[", "valid_or_test", "]", ".", "keys", "(", ")", ")", ":", "\n", "            ", "self", ".", "new_node_init", "=", "None", "\n", "ent_triples", "=", "self", ".", "get_ent_triples", "(", "new_ent", ",", "valid_or_test", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "ent_triples", ")", ")", ":", "\n", "                ", "obs_triples", "=", "np", ".", "delete", "(", "ent_triples", ",", "[", "j", "]", ",", "axis", "=", "0", ")", "\n", "target_triple", "=", "ent_triples", "[", "j", "]", "\n", "new_ent_id", "=", "self", ".", "dataset", ".", "init_num_ent", "\n", "self", ".", "predict", "(", "target_triple", ",", "new_ent_id", ",", "obs_triples", ")", "\n", "\n", "", "", "self", ".", "measure", ".", "normalize", "(", ")", "\n", "self", ".", "measure", ".", "print_", "(", ")", "\n", "return", "self", ".", "measure", ".", "mrr", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.tester.OutKGTester.predict": [[37, 52], ["tester.OutKGTester.create_queries", "tester.OutKGTester.model.get_rel_embs", "tester.OutKGTester.model.find_embedding", "tester.OutKGTester.model.get_ent_embs", "tester.OutKGTester.model.cal_score", "tester.OutKGTester.get_rank", "tester.OutKGTester.measure.update", "torch.tensor().to", "torch.tensor().to", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.tester.OutKGTester.create_queries", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.get_rel_embs", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.find_embedding", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.get_ent_embs", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.cal_score", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.tester.OutKGTester.get_rank", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.measure.Measure.update"], ["", "def", "predict", "(", "self", ",", "target_triple", ",", "new_ent", ",", "obs_triples", ")", ":", "\n", "        ", "head_or_tail", "=", "\"tail\"", "if", "target_triple", "[", "0", "]", "==", "new_ent", "else", "\"head\"", "\n", "queries_ent", ",", "rel_id", "=", "self", ".", "create_queries", "(", "\n", "target_triple", ",", "head_or_tail", ",", "obs_triples", "\n", ")", "\n", "rel_emb", "=", "self", ".", "model", ".", "get_rel_embs", "(", "\n", "torch", ".", "tensor", "(", "rel_id", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "self", ".", "device", ")", "\n", ")", "\n", "new_ent_emb", "=", "self", ".", "model", ".", "find_embedding", "(", "new_ent", ",", "obs_triples", ")", "\n", "queries_ent_emb", "=", "self", ".", "model", ".", "get_ent_embs", "(", "\n", "torch", ".", "tensor", "(", "queries_ent", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "self", ".", "device", ")", "\n", ")", "\n", "scores", "=", "self", ".", "model", ".", "cal_score", "(", "queries_ent_emb", ",", "new_ent_emb", ",", "rel_emb", ")", "\n", "rank", "=", "self", ".", "get_rank", "(", "scores", ")", "\n", "self", ".", "measure", ".", "update", "(", "rank", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.tester.OutKGTester.filter_entities": [[53, 59], ["numpy.where"], "methods", ["None"], ["", "def", "filter_entities", "(", "self", ",", "obs_triples", ",", "rel_id", ",", "head_or_tail", ")", ":", "\n", "        ", "idx", "=", "np", ".", "where", "(", "obs_triples", "[", ":", ",", "1", "]", "==", "rel_id", ")", "[", "0", "]", "\n", "if", "head_or_tail", "==", "\"head\"", ":", "\n", "            ", "return", "obs_triples", "[", "idx", ",", "0", "]", "\n", "", "else", ":", "\n", "            ", "return", "obs_triples", "[", "idx", ",", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.tester.OutKGTester.create_queries": [[60, 73], ["list", "tester.OutKGTester.filter_entities().tolist", "range", "set", "set", "list", "tester.OutKGTester.filter_entities", "list", "set", "set"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.tester.OutKGTester.filter_entities"], ["", "", "def", "create_queries", "(", "self", ",", "target_triple", ",", "head_or_tail", ",", "obs_triples", ")", ":", "\n", "        ", "head_id", ",", "rel_id", ",", "tail_id", "=", "target_triple", "\n", "ent_list", "=", "list", "(", "range", "(", "self", ".", "dataset", ".", "init_num_ent", ")", ")", "\n", "filtered_ent_list", "=", "self", ".", "filter_entities", "(", "\n", "obs_triples", ",", "rel_id", ",", "head_or_tail", "\n", ")", ".", "tolist", "(", ")", "\n", "ent_list", "=", "set", "(", "ent_list", ")", "-", "set", "(", "filtered_ent_list", ")", "\n", "if", "head_or_tail", "==", "\"head\"", ":", "\n", "            ", "ent_list", "=", "list", "(", "ent_list", "-", "set", "(", "[", "head_id", "]", ")", ")", "\n", "return", "[", "head_id", "]", "+", "ent_list", ",", "rel_id", "\n", "", "elif", "head_or_tail", "==", "\"tail\"", ":", "\n", "            ", "ent_list", "=", "list", "(", "ent_list", "-", "set", "(", "[", "tail_id", "]", ")", ")", "\n", "return", "[", "tail_id", "]", "+", "ent_list", ",", "rel_id", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.tester.OutKGTester.get_rank": [[74, 80], ["None"], "methods", ["None"], ["", "", "def", "get_rank", "(", "self", ",", "sim_scores", ")", ":", "\n", "# assuming the test fact is the first one", "\n", "        ", "equals", "=", "(", "(", "sim_scores", "==", "sim_scores", "[", "0", "]", ")", ".", "sum", "(", ")", "-", "1", ")", "//", "2", "\n", "higher", "=", "(", "sim_scores", ">", "sim_scores", "[", "0", "]", ")", ".", "sum", "(", ")", "\n", "rank", "=", "(", "equals", "+", "higher", "+", "1.0", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "return", "rank", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.tester.OutKGTester.get_unseen_entities": [[81, 85], ["set", "set", "set.union", "tester.OutKGTester.dataset.val_test_data[].keys", "tester.OutKGTester.dataset.val_test_data[].keys"], "methods", ["None"], ["", "def", "get_unseen_entities", "(", "self", ")", ":", "\n", "        ", "valid_ent", "=", "set", "(", "self", ".", "dataset", ".", "val_test_data", "[", "\"valid\"", "]", ".", "keys", "(", ")", ")", "\n", "test_ent", "=", "set", "(", "self", ".", "dataset", ".", "val_test_data", "[", "\"test\"", "]", ".", "keys", "(", ")", ")", "\n", "return", "valid_ent", ".", "union", "(", "test_ent", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.tester.OutKGTester.get_ent_triples": [[86, 93], ["numpy.asarray", "numpy.where", "numpy.where", "numpy.asarray.astype"], "methods", ["None"], ["", "def", "get_ent_triples", "(", "self", ",", "ent", ",", "valid_or_test", ")", ":", "\n", "        ", "triples", "=", "np", ".", "asarray", "(", "self", ".", "dataset", ".", "val_test_data", "[", "valid_or_test", "]", "[", "ent", "]", ")", "\n", "h", "=", "np", ".", "where", "(", "triples", "[", ":", ",", "0", "]", "==", "ent", ")", "\n", "triples", "[", "h", ",", "0", "]", "=", "self", ".", "dataset", ".", "init_num_ent", "\n", "t", "=", "np", ".", "where", "(", "triples", "[", ":", ",", "2", "]", "==", "ent", ")", "\n", "triples", "[", "t", ",", "2", "]", "=", "self", ".", "dataset", ".", "init_num_ent", "\n", "return", "triples", ".", "astype", "(", "int", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.utils.save_model": [[13, 40], ["print", "os.makedirs", "torch.save", "str", "str", "str", "str", "str"], "function", ["None"], ["def", "save_model", "(", "\n", "model", ",", "\n", "model_name", ",", "\n", "emb_method", ",", "\n", "dataset_name", ",", "\n", "chkpnt", ",", "\n", "lr", ",", "\n", "reg_lambda", ",", "\n", "neg_ratio", ",", "\n", "emb_dim", ",", "\n", ")", ":", "\n", "    ", "print", "(", "\"Saving the model\"", ")", "\n", "directory", "=", "\"logs/\"", "+", "model_name", "+", "\"/\"", "+", "emb_method", "+", "\"/\"", "+", "dataset_name", "+", "\"/\"", "\n", "os", ".", "makedirs", "(", "directory", ",", "exist_ok", "=", "True", ")", "\n", "torch", ".", "save", "(", "\n", "model", ",", "\n", "directory", "\n", "+", "str", "(", "chkpnt", ")", "\n", "+", "\"_\"", "\n", "+", "str", "(", "lr", ")", "\n", "+", "\"_\"", "\n", "+", "str", "(", "reg_lambda", ")", "\n", "+", "\"_\"", "\n", "+", "str", "(", "neg_ratio", ")", "\n", "+", "\"_\"", "\n", "+", "str", "(", "emb_dim", ")", "\n", "+", "\".chkpnt\"", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.utils.random_new_ent_mask": [[43, 53], ["numpy.random.choice"], "function", ["None"], ["", "def", "random_new_ent_mask", "(", "triples", ",", "mask_prob", ")", ":", "\n", "    ", "\"\"\"\n    Assign a random mask value to each triplet based on the given probability.\n    mask_prob here corresponds to (1-psi) in Algorithm 2 (https://arxiv.org/pdf/2004.13230.pdf)\n    if mask = 0, the head of the triplet is considered as an unobserved entity\n    if mask = 2, the tail of the triplet is considered as an unobserved entity\n    if mask = 1, both head and tail are observed\n    \"\"\"", "\n", "probs", "=", "[", "(", "1", "-", "mask_prob", ")", "/", "2", ",", "mask_prob", ",", "(", "1", "-", "mask_prob", ")", "/", "2", "]", "\n", "return", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", ",", "2", "]", ",", "triples", ".", "shape", "[", "0", "]", ",", "p", "=", "probs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.DisMultOutKG.DisMultOutKG.build_model": [[15, 27], ["DisMultOutKG.DisMultOutKG.dataset.num_rel", "torch.nn.Embedding().to", "torch.nn.Embedding().to", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.Embedding", "torch.nn.Embedding"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_rel"], ["    ", "def", "build_model", "(", "self", ")", ":", "\n", "        ", "self", ".", "num_ent", "=", "self", ".", "dataset", ".", "init_num_ent", "\n", "self", ".", "num_rel", "=", "self", ".", "dataset", ".", "num_rel", "(", ")", "\n", "\n", "self", ".", "ent_embs", "=", "nn", ".", "Embedding", "(", "\n", "self", ".", "num_ent", "+", "1", ",", "self", ".", "emb_dim", ",", "padding_idx", "=", "self", ".", "num_ent", "\n", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "rel_embs", "=", "nn", ".", "Embedding", "(", "\n", "self", ".", "num_rel", "+", "1", ",", "self", ".", "emb_dim", ",", "padding_idx", "=", "self", ".", "num_rel", "\n", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "ent_embs", ".", "weight", "[", ":", "-", "1", "]", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "rel_embs", ".", "weight", "[", ":", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.DisMultOutKG.DisMultOutKG.get_ent_embs": [[28, 31], ["DisMultOutKG.DisMultOutKG.ent_embs"], "methods", ["None"], ["", "def", "get_ent_embs", "(", "self", ",", "ent_id", ")", ":", "\n", "# lookup the embedding", "\n", "        ", "return", "self", ".", "ent_embs", "(", "ent_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.DisMultOutKG.DisMultOutKG.get_rel_embs": [[32, 34], ["DisMultOutKG.DisMultOutKG.rel_embs"], "methods", ["None"], ["", "def", "get_rel_embs", "(", "self", ",", "rel_id", ")", ":", "\n", "        ", "return", "self", ".", "rel_embs", "(", "rel_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.DisMultOutKG.DisMultOutKG.get_new_ent_embs": [[35, 55], ["DisMultOutKG.DisMultOutKG.dataset.adj_list[].to", "DisMultOutKG.DisMultOutKG.get_ent_embs().view", "DisMultOutKG.DisMultOutKG.get_rel_embs().view", "DisMultOutKG.DisMultOutKG.infer_emb", "ent_mask.unsqueeze().expand().to", "ent_mask.unsqueeze().expand().to", "DisMultOutKG.DisMultOutKG.get_ent_embs", "DisMultOutKG.DisMultOutKG.get_rel_embs", "DisMultOutKG.DisMultOutKG.obs_ents_id.unsqueeze", "torch.arange", "ent_neighbors[].view", "ent_neighbors[].view", "ent_mask.unsqueeze().expand", "ent_mask.unsqueeze().expand", "ent_mask.unsqueeze", "ent_mask.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.DisMultOutKG.DisMultOutKG.infer_emb", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.get_ent_embs", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.get_rel_embs"], ["", "def", "get_new_ent_embs", "(", "self", ",", "triples", ",", "mask", ")", ":", "\n", "# find the embedding for the unobserved entities", "\n", "        ", "new_ents_id", "=", "triples", "[", "torch", ".", "arange", "(", "triples", ".", "shape", "[", "0", "]", ",", "dtype", "=", "torch", ".", "long", ")", ",", "mask", "]", "\n", "ent_neighbors", "=", "self", ".", "dataset", ".", "adj_list", "[", "new_ents_id", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "neighbors_ent_embs", "=", "self", ".", "get_ent_embs", "(", "ent_neighbors", "[", ":", ",", ":", ",", "0", "]", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "\n", "ent_neighbors", ".", "shape", "[", "0", "]", ",", "ent_neighbors", ".", "shape", "[", "1", "]", ",", "self", ".", "emb_dim", "\n", ")", "\n", "neighbors_rel_embs", "=", "self", ".", "get_rel_embs", "(", "ent_neighbors", "[", ":", ",", ":", ",", "1", "]", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "\n", "ent_neighbors", ".", "shape", "[", "0", "]", ",", "ent_neighbors", ".", "shape", "[", "1", "]", ",", "self", ".", "emb_dim", "\n", ")", "\n", "ent_mask", "=", "(", "ent_neighbors", "[", ":", ",", ":", ",", "0", "]", "!=", "self", ".", "obs_ents_id", ".", "unsqueeze", "(", "1", ")", ")", "*", "(", "\n", "ent_neighbors", "[", ":", ",", ":", ",", "0", "]", "!=", "self", ".", "num_ent", "\n", ")", "\n", "neighbors_ent_embs", "=", "neighbors_ent_embs", "*", "ent_mask", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "\n", "neighbors_ent_embs", ".", "shape", "\n", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "neighbors_rel_embs", "=", "neighbors_rel_embs", "*", "ent_mask", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "\n", "neighbors_rel_embs", ".", "shape", "\n", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "return", "self", ".", "infer_emb", "(", "neighbors_ent_embs", ",", "neighbors_rel_embs", ",", "mask", "=", "ent_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.DisMultOutKG.DisMultOutKG.l2_loss": [[56, 61], ["torch.norm", "torch.norm"], "methods", ["None"], ["", "def", "l2_loss", "(", "self", ")", ":", "\n", "        ", "emb_reg", "=", "(", "torch", ".", "norm", "(", "self", ".", "ent_embs", ".", "weight", ",", "p", "=", "2", ")", "**", "2", ")", "+", "(", "\n", "torch", ".", "norm", "(", "self", ".", "rel_embs", ".", "weight", ",", "p", "=", "2", ")", "**", "2", "\n", ")", "\n", "return", "emb_reg", "/", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.DisMultOutKG.DisMultOutKG.get_ent_exc_ids": [[62, 76], ["numpy.zeros", "numpy.zeros", "numpy.zeros.fill", "numpy.expand_dims", "numpy.concatenate", "numpy.expand_dims", "numpy.concatenate", "numpy.concatenate", "obs_ent[].astype", "numpy.where", "numpy.where", "len", "len", "numpy.argsort"], "methods", ["None"], ["", "def", "get_ent_exc_ids", "(", "self", ",", "obs_triples", ",", "new_ent", ")", ":", "\n", "        ", "heads", "=", "np", ".", "where", "(", "obs_triples", "[", ":", ",", "0", "]", "!=", "new_ent", ")", "[", "0", "]", "\n", "h1", "=", "np", ".", "zeros", "(", "(", "len", "(", "heads", ")", ",", "1", ")", ")", "\n", "tails", "=", "np", ".", "where", "(", "obs_triples", "[", ":", ",", "2", "]", "!=", "new_ent", ")", "[", "0", "]", "\n", "t1", "=", "np", ".", "zeros", "(", "(", "len", "(", "tails", ")", ",", "1", ")", ")", "\n", "t1", ".", "fill", "(", "2", ")", "\n", "heads", "=", "np", ".", "expand_dims", "(", "heads", ",", "axis", "=", "1", ")", "\n", "heads", "=", "np", ".", "concatenate", "(", "(", "heads", ",", "h1", ")", ",", "axis", "=", "1", ")", "\n", "tails", "=", "np", ".", "expand_dims", "(", "tails", ",", "axis", "=", "1", ")", "\n", "tails", "=", "np", ".", "concatenate", "(", "(", "tails", ",", "t1", ")", ",", "axis", "=", "1", ")", "\n", "obs_ent", "=", "np", ".", "concatenate", "(", "(", "heads", ",", "tails", ")", ")", "\n", "obs_ent", "=", "obs_ent", "[", "np", ".", "argsort", "(", "obs_ent", "[", ":", ",", "0", "]", ")", "]", ".", "astype", "(", "int", ")", "\n", "obs_ent_ids", "=", "obs_triples", "[", "obs_ent", "[", ":", ",", "0", "]", ",", "obs_ent", "[", ":", ",", "1", "]", "]", "\n", "return", "obs_ent_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.DisMultOutKG.DisMultOutKG.find_embedding": [[77, 87], ["DisMultOutKG.DisMultOutKG.get_ent_exc_ids", "DisMultOutKG.DisMultOutKG.get_ent_embs().unsqueeze", "DisMultOutKG.DisMultOutKG.get_rel_embs().unsqueeze", "DisMultOutKG.DisMultOutKG.infer_emb().squeeze", "DisMultOutKG.DisMultOutKG.get_ent_embs", "DisMultOutKG.DisMultOutKG.get_rel_embs", "DisMultOutKG.DisMultOutKG.infer_emb", "torch.tensor().to", "torch.tensor().to", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.DisMultOutKG.DisMultOutKG.get_ent_exc_ids", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.get_ent_embs", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.get_rel_embs", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.DisMultOutKG.DisMultOutKG.infer_emb"], ["", "def", "find_embedding", "(", "self", ",", "new_ent", ",", "obs_triples", ")", ":", "\n", "        ", "obs_ent_ids", "=", "self", ".", "get_ent_exc_ids", "(", "obs_triples", ",", "new_ent", ")", "\n", "obs_rel_ids", "=", "obs_triples", "[", ":", ",", "1", "]", "\n", "obs_ent_embs", "=", "self", ".", "get_ent_embs", "(", "\n", "torch", ".", "tensor", "(", "obs_ent_ids", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "self", ".", "device", ")", "\n", ")", ".", "unsqueeze", "(", "0", ")", "\n", "obs_rel_embs", "=", "self", ".", "get_rel_embs", "(", "\n", "torch", ".", "tensor", "(", "obs_rel_ids", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "self", ".", "device", ")", "\n", ")", ".", "unsqueeze", "(", "0", ")", "\n", "return", "self", ".", "infer_emb", "(", "obs_ent_embs", ",", "obs_rel_embs", ")", ".", "squeeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.DisMultOutKG.DisMultOutKG.infer_emb": [[88, 129], ["DisMultOutKG.DisMultOutKG.find_neighbors_avg", "DisMultOutKG.DisMultOutKG.find_neighbors_avg", "torch.ones().to", "torch.nn.functional.normalize", "torch.nn.functional.normalize.permute", "torch.inverse", "torch.bmm().squeeze", "torch.ones().to", "torch.nn.functional.normalize.permute", "torch.inverse", "torch.bmm().squeeze", "torch.ones", "mask.to", "torch.bmm", "torch.bmm", "torch.eye().unsqueeze().expand().to", "torch.bmm", "torch.ones().to.unsqueeze", "torch.ones", "mask.to", "torch.bmm", "torch.bmm", "torch.eye().unsqueeze().expand().to", "torch.bmm", "torch.ones().to.unsqueeze", "torch.eye().unsqueeze().expand", "torch.eye().unsqueeze().expand", "torch.eye().unsqueeze", "torch.eye().unsqueeze", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.DisMultOutKG.DisMultOutKG.find_neighbors_avg", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.DisMultOutKG.DisMultOutKG.find_neighbors_avg", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.measure.Measure.normalize"], ["", "def", "infer_emb", "(", "self", ",", "ent_emb", ",", "rel_emb", ",", "mask", "=", "None", ")", ":", "\n", "# infers embedding of unobserved entities based on the emb_method (aggregation function)", "\n", "        ", "if", "self", ".", "emb_method", "==", "\"ERAverage\"", ":", "\n", "            ", "return", "self", ".", "find_neighbors_avg", "(", "ent_emb", ",", "rel_emb", "=", "rel_emb", ",", "mask", "=", "mask", ")", "\n", "", "elif", "self", ".", "emb_method", "==", "\"Average\"", ":", "\n", "            ", "return", "self", ".", "find_neighbors_avg", "(", "ent_emb", ",", "mask", "=", "mask", ")", "\n", "", "elif", "self", ".", "emb_method", "==", "\"LS\"", ":", "\n", "            ", "labels", "=", "torch", ".", "ones", "(", "ent_emb", ".", "shape", "[", "0", "]", ",", "ent_emb", ".", "shape", "[", "1", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "                ", "labels", "=", "labels", "*", "mask", ".", "to", "(", "torch", ".", "float", ")", "\n", "\n", "", "A", "=", "nn", ".", "functional", ".", "normalize", "(", "ent_emb", "*", "rel_emb", ",", "dim", "=", "2", ")", "\n", "A_t", "=", "A", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "c", "=", "torch", ".", "inverse", "(", "\n", "torch", ".", "bmm", "(", "A_t", ",", "A", ")", "\n", "+", "self", ".", "args", ".", "reg_ls", "\n", "*", "(", "\n", "torch", ".", "eye", "(", "A", ".", "shape", "[", "2", "]", ")", "\n", ".", "unsqueeze", "(", "0", ")", "\n", ".", "expand", "(", "A", ".", "shape", "[", "0", "]", ",", "A", ".", "shape", "[", "2", "]", ",", "A", ".", "shape", "[", "2", "]", ")", "\n", ")", ".", "to", "(", "self", ".", "device", ")", "\n", ")", "\n", "return", "torch", ".", "bmm", "(", "torch", ".", "bmm", "(", "c", ",", "A_t", ")", ",", "labels", ".", "unsqueeze", "(", "2", ")", ")", ".", "squeeze", "(", ")", "\n", "\n", "", "elif", "self", ".", "emb_method", "==", "\"LS_unnorm\"", ":", "\n", "            ", "labels", "=", "torch", ".", "ones", "(", "ent_emb", ".", "shape", "[", "0", "]", ",", "ent_emb", ".", "shape", "[", "1", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "                ", "labels", "=", "labels", "*", "mask", ".", "to", "(", "torch", ".", "float", ")", "\n", "\n", "", "A", "=", "ent_emb", "*", "rel_emb", "\n", "A_t", "=", "A", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "c", "=", "torch", ".", "inverse", "(", "\n", "torch", ".", "bmm", "(", "A_t", ",", "A", ")", "\n", "+", "self", ".", "args", ".", "reg_ls", "\n", "*", "(", "\n", "torch", ".", "eye", "(", "A", ".", "shape", "[", "2", "]", ")", "\n", ".", "unsqueeze", "(", "0", ")", "\n", ".", "expand", "(", "A", ".", "shape", "[", "0", "]", ",", "A", ".", "shape", "[", "2", "]", ",", "A", ".", "shape", "[", "2", "]", ")", "\n", ")", ".", "to", "(", "self", ".", "device", ")", "\n", ")", "\n", "return", "torch", ".", "bmm", "(", "torch", ".", "bmm", "(", "c", ",", "A_t", ")", ",", "labels", ".", "unsqueeze", "(", "2", ")", ")", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.DisMultOutKG.DisMultOutKG.find_neighbors_avg": [[130, 144], ["torch.sum", "torch.mean", "torch.mean", "torch.sum", "torch.sum.unsqueeze().to", "torch.sum", "torch.sum.unsqueeze().to", "torch.sum.unsqueeze", "torch.sum.unsqueeze"], "methods", ["None"], ["", "", "def", "find_neighbors_avg", "(", "self", ",", "ent_emb", ",", "rel_emb", "=", "None", ",", "mask", "=", "None", ")", ":", "\n", "        ", "if", "mask", "is", "None", ":", "\n", "            ", "if", "rel_emb", "is", "None", ":", "\n", "                ", "return", "torch", ".", "mean", "(", "ent_emb", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "                ", "return", "torch", ".", "mean", "(", "ent_emb", "*", "rel_emb", ",", "dim", "=", "1", ")", "\n", "", "", "else", ":", "\n", "            ", "mask_sum", "=", "torch", ".", "sum", "(", "mask", ",", "dim", "=", "1", ")", "\n", "mask_sum", "[", "mask_sum", "==", "0", "]", "=", "1.0", "\n", "if", "rel_emb", "is", "None", ":", "\n", "                ", "return", "torch", ".", "sum", "(", "ent_emb", ",", "dim", "=", "1", ")", "/", "mask_sum", ".", "unsqueeze", "(", "1", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "", "else", ":", "\n", "                ", "return", "torch", ".", "sum", "(", "ent_emb", "*", "rel_emb", ",", "dim", "=", "1", ")", "/", "mask_sum", ".", "unsqueeze", "(", "1", ")", ".", "to", "(", "\n", "torch", ".", "float", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.__init__": [[12, 20], ["torch.nn.Module.__init__", "BaseOutKG.BaseOutKG.build_model"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.__init__", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.build_model"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "args", ",", "device", ")", ":", "\n", "        ", "super", "(", "BaseOutKG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "emb_method", "=", "self", ".", "args", ".", "emb_method", "\n", "self", ".", "emb_dim", "=", "self", ".", "args", ".", "emb_dim", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "build_model", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.build_model": [[21, 23], ["None"], "methods", ["None"], ["", "def", "build_model", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.forward": [[24, 45], ["torch.zeros().to", "torch.zeros().to", "BaseOutKG.BaseOutKG.get_ent_embs", "BaseOutKG.BaseOutKG.get_ent_embs", "BaseOutKG.BaseOutKG.get_rel_embs", "BaseOutKG.BaseOutKG.cal_score", "len", "torch.add", "BaseOutKG.BaseOutKG.get_ent_embs", "BaseOutKG.BaseOutKG.get_new_ent_embs", "torch.zeros", "torch.zeros", "torch.mul"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.get_ent_embs", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.get_ent_embs", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.get_rel_embs", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.cal_score", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.get_ent_embs", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.get_new_ent_embs"], ["", "def", "forward", "(", "self", ",", "triples", ",", "mask", ")", ":", "\n", "        ", "new_ent_embs", "=", "torch", ".", "zeros", "(", "mask", ".", "shape", "[", "0", "]", ",", "self", ".", "emb_dim", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "obs_ent_embs", "=", "torch", ".", "zeros", "(", "mask", ".", "shape", "[", "0", "]", ",", "self", ".", "emb_dim", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# get embeddings for unobserved entities (entity mask = 0 or 2)", "\n", "deep_mask", "=", "mask", "[", "mask", "!=", "1", "]", "\n", "if", "len", "(", "deep_mask", ")", ">", "0", ":", "\n", "            ", "obs_ents_mask", "=", "torch", ".", "add", "(", "torch", ".", "mul", "(", "deep_mask", ",", "-", "1", ")", ",", "2", ")", "\n", "self", ".", "obs_ents_id", "=", "triples", "[", "mask", "!=", "1", ",", "obs_ents_mask", "]", "\n", "obs_ent_embs", "[", "mask", "!=", "1", "]", "=", "self", ".", "get_ent_embs", "(", "self", ".", "obs_ents_id", ")", "\n", "new_ent_embs", "[", "mask", "!=", "1", "]", "=", "self", ".", "get_new_ent_embs", "(", "\n", "triples", "[", "mask", "!=", "1", "]", ",", "deep_mask", "\n", ")", "\n", "\n", "# get embeddings for observed entities (entity mask = 1)", "\n", "", "obs_ent_embs", "[", "mask", "==", "1", "]", "=", "self", ".", "get_ent_embs", "(", "triples", "[", "mask", "==", "1", ",", "0", "]", ")", "\n", "new_ent_embs", "[", "mask", "==", "1", "]", "=", "self", ".", "get_ent_embs", "(", "triples", "[", "mask", "==", "1", ",", "2", "]", ")", "\n", "\n", "rel_embs", "=", "self", ".", "get_rel_embs", "(", "triples", "[", ":", ",", "1", "]", ")", "\n", "scores", "=", "self", ".", "cal_score", "(", "obs_ent_embs", ",", "new_ent_embs", ",", "rel_embs", ")", "\n", "return", "scores", ",", "new_ent_embs", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.cal_score": [[46, 50], ["torch.sum"], "methods", ["None"], ["", "def", "cal_score", "(", "self", ",", "obs_ents", ",", "new_ents", ",", "rels", ")", ":", "\n", "        ", "scores", "=", "(", "obs_ents", "*", "new_ents", ")", "*", "rels", "\n", "scores", "=", "torch", ".", "sum", "(", "scores", ",", "dim", "=", "1", ")", "\n", "return", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.get_ent_embs": [[51, 53], ["None"], "methods", ["None"], ["", "def", "get_ent_embs", "(", "self", ",", "ent_id", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.get_new_ent_embs": [[54, 56], ["None"], "methods", ["None"], ["", "def", "get_new_ent_embs", "(", "self", ",", "triples", ",", "mask", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.get_rel_embs": [[57, 59], ["None"], "methods", ["None"], ["", "def", "get_rel_embs", "(", "self", ",", "rel_id", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.l2_loss": [[60, 62], ["None"], "methods", ["None"], ["", "def", "l2_loss", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.model.BaseOutKG.BaseOutKG.find_embedding": [[63, 65], ["None"], "methods", ["None"], ["", "def", "find_embedding", "(", "self", ",", "new_ent", ",", "obs_triples", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.__init__": [[20, 30], ["dataset_prep.DatasetPreprocess.read_all"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.read_all"], ["    ", "def", "__init__", "(", "self", ",", "dataset_name", ",", "smpl_ratio", "=", "0.2", ",", "spl_ratio", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "data_path", "=", "\"datasets/\"", "+", "dataset_name", "+", "\"/\"", "\n", "self", ".", "ent2id", "=", "{", "}", "\n", "self", ".", "rel2id", "=", "{", "}", "\n", "self", ".", "all_triples", "=", "self", ".", "read_all", "(", ")", "\n", "self", ".", "smpl_ratio", "=", "smpl_ratio", "\n", "self", ".", "spl_ratio", "=", "spl_ratio", "\n", "self", ".", "old_ent", "=", "[", "]", "\n", "self", ".", "new_ent", "=", "[", "]", "\n", "self", ".", "test_triples", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.read_all": [[31, 43], ["numpy.zeros", "enumerate", "numpy.array", "open", "f.readlines", "len", "dataset_prep.DatasetPreprocess.triple2ids", "all_lines.append", "line.strip().split", "line.strip"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.triple2ids"], ["", "def", "read_all", "(", "self", ")", ":", "\n", "        ", "all_lines", "=", "[", "]", "\n", "for", "spl", "in", "[", "\"train\"", ",", "\"valid\"", ",", "\"test\"", "]", ":", "\n", "            ", "file_path", "=", "self", ".", "data_path", "+", "spl", "+", "\".txt\"", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "                ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "for", "line", "in", "lines", ":", "\n", "                    ", "all_lines", ".", "append", "(", "line", ")", "\n", "", "", "", "triples", "=", "np", ".", "zeros", "(", "(", "len", "(", "all_lines", ")", ",", "3", ")", ",", "dtype", "=", "int", ")", "\n", "for", "i", ",", "line", "in", "enumerate", "(", "all_lines", ")", ":", "\n", "            ", "triples", "[", "i", "]", "=", "np", ".", "array", "(", "self", ".", "triple2ids", "(", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", ")", ")", "\n", "", "return", "triples", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.make_dataset": [[44, 53], ["dataset_prep.DatasetPreprocess.single_triple_ent", "dataset_prep.DatasetPreprocess.split_entities", "dataset_prep.DatasetPreprocess.separate_triples", "dataset_prep.DatasetPreprocess.find_dangling_ent", "dataset_prep.DatasetPreprocess.find_dangling_rel", "dataset_prep.DatasetPreprocess.explore_split_dataset", "dataset_prep.DatasetPreprocess.constraint_check", "dataset_prep.DatasetPreprocess.save_dataset"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.single_triple_ent", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.split_entities", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.separate_triples", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.find_dangling_ent", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.find_dangling_rel", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.explore_split_dataset", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.constraint_check", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.save_dataset"], ["", "def", "make_dataset", "(", "self", ")", ":", "\n", "        ", "self", ".", "single_triple_ent", "(", ")", "\n", "self", ".", "split_entities", "(", ")", "\n", "self", ".", "separate_triples", "(", ")", "\n", "self", ".", "find_dangling_ent", "(", ")", "\n", "self", ".", "find_dangling_rel", "(", ")", "\n", "self", ".", "explore_split_dataset", "(", ")", "\n", "self", ".", "constraint_check", "(", ")", "\n", "self", ".", "save_dataset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.single_triple_ent": [[54, 66], ["numpy.zeros", "range", "dataset_prep.DatasetPreprocess.old_ent.extend", "dataset_prep.DatasetPreprocess.num_ent", "dataset_prep.DatasetPreprocess.num_ent", "numpy.where", "list", "numpy.sum", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_ent", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_ent"], ["", "def", "single_triple_ent", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        find those entities that are participated in only one triple \n        add them to self.old_ent\n        \"\"\"", "\n", "ent_triple_count", "=", "np", ".", "zeros", "(", "self", ".", "num_ent", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_ent", "(", ")", ")", ":", "\n", "            ", "ent_triple_count", "[", "i", "]", "=", "np", ".", "sum", "(", "self", ".", "all_triples", "[", ":", ",", "0", "]", "==", "i", ")", "+", "np", ".", "sum", "(", "\n", "self", ".", "all_triples", "[", ":", ",", "2", "]", "==", "i", "\n", ")", "\n", "", "single_triple_ent", "=", "np", ".", "where", "(", "ent_triple_count", "==", "1", ")", "[", "0", "]", "\n", "self", ".", "old_ent", ".", "extend", "(", "list", "(", "single_triple_ent", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.split_entities": [[67, 72], ["set", "random.sample", "dataset_prep.DatasetPreprocess.old_ent.extend", "range", "set", "list", "int", "list", "dataset_prep.DatasetPreprocess.num_ent", "len", "set"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_ent"], ["", "def", "split_entities", "(", "self", ")", ":", "\n", "        ", "all_ent", "=", "set", "(", "range", "(", "self", ".", "num_ent", "(", ")", ")", ")", "\n", "all_ent", "=", "all_ent", "-", "set", "(", "self", ".", "old_ent", ")", "\n", "self", ".", "new_ent", "=", "random", ".", "sample", "(", "list", "(", "all_ent", ")", ",", "int", "(", "len", "(", "all_ent", ")", "*", "self", ".", "smpl_ratio", ")", ")", "\n", "self", ".", "old_ent", ".", "extend", "(", "list", "(", "all_ent", "-", "set", "(", "self", ".", "new_ent", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.save_dataset": [[73, 90], ["print", "open", "open.writelines", "open.close", "print", "os.path.isdir", "os.makedirs", "dataset_prep.DatasetPreprocess.ids2triple", "open", "json.dump", "open", "json.dump"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.ids2triple"], ["", "def", "save_dataset", "(", "self", ")", ":", "\n", "# save train", "\n", "        ", "new_dir", "=", "self", ".", "data_path", "+", "\"processed/\"", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "new_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "new_dir", ")", "\n", "", "print", "(", "\"Saving old triples\"", ")", "\n", "old_triples_seq", "=", "[", "self", ".", "ids2triple", "(", "t", ")", "for", "t", "in", "self", ".", "old_triples", "]", "\n", "out_f", "=", "open", "(", "new_dir", "+", "\"train.txt\"", ",", "\"w\"", ")", "\n", "out_f", ".", "writelines", "(", "old_triples_seq", ")", "\n", "out_f", ".", "close", "(", ")", "\n", "\n", "# split new triples to [val, test] and save", "\n", "print", "(", "\"Saving new triples\"", ")", "\n", "with", "open", "(", "new_dir", "+", "\"valid.json\"", ",", "\"w\"", ")", "as", "json_file", ":", "\n", "            ", "json", ".", "dump", "(", "self", ".", "valid_dict", ",", "json_file", ")", "\n", "", "with", "open", "(", "new_dir", "+", "\"test.json\"", ",", "\"w\"", ")", "as", "json_file", ":", "\n", "            ", "json", ".", "dump", "(", "self", ".", "test_dict", ",", "json_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.constraint_check": [[91, 119], ["numpy.union1d", "set().union", "print", "print", "print", "print", "print", "set", "len", "len", "dataset_prep.DatasetPreprocess.num_ent", "len", "len", "len", "set", "dataset_prep.DatasetPreprocess.valid_dict.keys", "len", "dataset_prep.DatasetPreprocess.num_ent", "len", "len", "len", "len", "dataset_prep.DatasetPreprocess.test_dict.keys", "dataset_prep.DatasetPreprocess.num_ent", "len"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_ent", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_ent", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_ent"], ["", "", "def", "constraint_check", "(", "self", ")", ":", "\n", "        ", "old_ent", "=", "np", ".", "union1d", "(", "self", ".", "old_triples", "[", ":", ",", "0", "]", ",", "self", ".", "old_triples", "[", ":", ",", "2", "]", ")", "\n", "new_ent", "=", "set", "(", "self", ".", "test_dict", ".", "keys", "(", ")", ")", ".", "union", "(", "set", "(", "self", ".", "valid_dict", ".", "keys", "(", ")", ")", ")", "\n", "all_ent", "=", "len", "(", "old_ent", ")", "+", "len", "(", "new_ent", ")", "\n", "removed_ent", "=", "self", ".", "num_ent", "(", ")", "-", "all_ent", "\n", "print", "(", "\"New entity ratio: \"", ",", "len", "(", "new_ent", ")", "/", "self", ".", "num_ent", "(", ")", ")", "\n", "print", "(", "\n", "\"Number of deleted entities: {}, ratio: {}\"", ".", "format", "(", "\n", "removed_ent", ",", "removed_ent", "/", "self", ".", "num_ent", "(", ")", "\n", ")", "\n", ")", "\n", "\n", "total_triples", "=", "len", "(", "self", ".", "old_triples", ")", "+", "len", "(", "self", ".", "test_triples", ")", "\n", "removed_triples", "=", "len", "(", "self", ".", "all_triples", ")", "-", "total_triples", "\n", "print", "(", "\n", "\"Number of deleted triples: {}, ratio: {}\"", ".", "format", "(", "\n", "removed_triples", ",", "removed_triples", "/", "len", "(", "self", ".", "all_triples", ")", "\n", ")", "\n", ")", "\n", "\n", "print", "(", "\n", "\"[Train] #entities: {}, #triples: {}\"", ".", "format", "(", "\n", "len", "(", "self", ".", "old_ent", ")", ",", "len", "(", "self", ".", "old_triples", ")", "\n", ")", "\n", ")", "\n", "print", "(", "\n", "\"[Valid/Test] #entities: {}, #triples: {}\"", ".", "format", "(", "\n", "len", "(", "new_ent", ")", ",", "len", "(", "self", ".", "test_triples", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.separate_triples": [[122, 129], ["dataset_prep.DatasetPreprocess.get_ent_triples", "numpy.ones", "len"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_ent_triples"], ["", "def", "separate_triples", "(", "self", ")", ":", "\n", "        ", "self", ".", "new_triples", ",", "new_ids", "=", "self", ".", "get_ent_triples", "(", "\n", "self", ".", "new_ent", ",", "self", ".", "all_triples", ",", "return_ids", "=", "True", "\n", ")", "\n", "mask", "=", "np", ".", "ones", "(", "len", "(", "self", ".", "all_triples", ")", ",", "dtype", "=", "bool", ")", "\n", "mask", "[", "new_ids", "]", "=", "False", "\n", "self", ".", "old_triples", "=", "self", ".", "all_triples", "[", "mask", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.find_dangling_ent": [[130, 133], ["numpy.union1d", "list", "set", "set"], "methods", ["None"], ["", "def", "find_dangling_ent", "(", "self", ")", ":", "\n", "        ", "old_triples_ent", "=", "np", ".", "union1d", "(", "self", ".", "old_triples", "[", ":", ",", "0", "]", ",", "self", ".", "old_triples", "[", ":", ",", "2", "]", ")", "\n", "self", ".", "dang_ent", "=", "list", "(", "set", "(", "self", ".", "old_ent", ")", "-", "set", "(", "old_triples_ent", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.find_dangling_rel": [[134, 138], ["set", "list", "list", "dataset_prep.DatasetPreprocess.rel2id.values", "set"], "methods", ["None"], ["", "def", "find_dangling_rel", "(", "self", ")", ":", "\n", "        ", "old_triples_rel", "=", "set", "(", "self", ".", "old_triples", "[", ":", ",", "1", "]", ")", "\n", "rel_ids", "=", "list", "(", "self", ".", "rel2id", ".", "values", "(", ")", ")", "\n", "self", ".", "dang_rel", "=", "list", "(", "set", "(", "rel_ids", ")", "-", "old_triples_rel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.explore_split_dataset": [[139, 182], ["list", "random.sample", "list", "dataset_prep.DatasetPreprocess.get_ent_triples", "dataset_prep.DatasetPreprocess.get_ent_triples", "numpy.ones", "numpy.nonzero", "numpy.ones", "list", "dataset_prep.DatasetPreprocess.get_ent_triples", "numpy.ones", "numpy.where", "numpy.ones", "new_ent_dict.keys", "int", "len", "numpy.in1d", "len", "len", "len", "len", "dataset_prep.DatasetPreprocess.test_triples.extend", "set", "set", "set", "set", "dataset_prep.DatasetPreprocess.tolist", "len", "dataset_prep.DatasetPreprocess.get_ent_str", "dataset_prep.DatasetPreprocess.get_ent_str", "dataset_prep.DatasetPreprocess.get_rel_str", "dataset_prep.DatasetPreprocess.get_ent_str"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_ent_triples", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_ent_triples", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_ent_triples", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_ent_str", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_ent_str", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_rel_str", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_ent_str"], ["", "def", "explore_split_dataset", "(", "self", ")", ":", "\n", "        ", "new_ent_dict", "=", "{", "}", "\n", "for", "new_e", "in", "self", ".", "new_ent", ":", "\n", "            ", "ent_triples", "=", "self", ".", "get_ent_triples", "(", "[", "new_e", "]", ",", "self", ".", "new_triples", ")", "\n", "# remove those triples that contain dangle entity", "\n", "_", ",", "ids", "=", "self", ".", "get_ent_triples", "(", "self", ".", "dang_ent", ",", "ent_triples", ",", "return_ids", "=", "True", ")", "\n", "mask", "=", "np", ".", "ones", "(", "len", "(", "ent_triples", ")", ",", "dtype", "=", "bool", ")", "\n", "mask", "[", "ids", "]", "=", "False", "\n", "ent_triples", "=", "ent_triples", "[", "mask", "]", "\n", "# remove those triples that contain dangle relations", "\n", "ids", "=", "np", ".", "nonzero", "(", "np", ".", "in1d", "(", "ent_triples", "[", ":", ",", "1", "]", ",", "self", ".", "dang_rel", ")", ")", "\n", "mask", "=", "np", ".", "ones", "(", "len", "(", "ent_triples", ")", ",", "dtype", "=", "bool", ")", "\n", "mask", "[", "ids", "]", "=", "False", "\n", "ent_triples", "=", "ent_triples", "[", "mask", "]", "\n", "# remove those triples that contain other new_ent", "\n", "other_new_ent", "=", "list", "(", "set", "(", "self", ".", "new_ent", ")", "-", "set", "(", "[", "new_e", "]", ")", ")", "\n", "_", ",", "ids", "=", "self", ".", "get_ent_triples", "(", "other_new_ent", ",", "ent_triples", ",", "return_ids", "=", "True", ")", "\n", "mask", "=", "np", ".", "ones", "(", "len", "(", "ent_triples", ")", ",", "dtype", "=", "bool", ")", "\n", "mask", "[", "ids", "]", "=", "False", "\n", "ent_triples", "=", "ent_triples", "[", "mask", "]", "\n", "\n", "# remove reflexive triples", "\n", "ref_ids", "=", "np", ".", "where", "(", "ent_triples", "[", ":", ",", "0", "]", "==", "ent_triples", "[", ":", ",", "2", "]", ")", "\n", "mask", "=", "np", ".", "ones", "(", "len", "(", "ent_triples", ")", ",", "dtype", "=", "bool", ")", "\n", "mask", "[", "ref_ids", "]", "=", "False", "\n", "ent_triples", "=", "ent_triples", "[", "mask", "]", "\n", "\n", "if", "len", "(", "ent_triples", ")", ">=", "2", ":", "\n", "                ", "new_ent_dict", "[", "self", ".", "get_ent_str", "(", "new_e", ")", "]", "=", "[", "\n", "[", "\n", "self", ".", "get_ent_str", "(", "t", "[", "0", "]", ")", ",", "\n", "self", ".", "get_rel_str", "(", "t", "[", "1", "]", ")", ",", "\n", "self", ".", "get_ent_str", "(", "t", "[", "2", "]", ")", ",", "\n", "]", "\n", "for", "t", "in", "ent_triples", "\n", "]", "\n", "self", ".", "test_triples", ".", "extend", "(", "ent_triples", ".", "tolist", "(", ")", ")", "\n", "\n", "", "", "new_keys", "=", "list", "(", "new_ent_dict", ".", "keys", "(", ")", ")", "\n", "valid_ent", "=", "random", ".", "sample", "(", "new_keys", ",", "int", "(", "len", "(", "new_keys", ")", "*", "self", ".", "spl_ratio", ")", ")", "\n", "test_ent", "=", "list", "(", "set", "(", "new_keys", ")", "-", "set", "(", "valid_ent", ")", ")", "\n", "self", ".", "valid_dict", "=", "{", "k", ":", "new_ent_dict", "[", "k", "]", "for", "k", "in", "valid_ent", "}", "\n", "self", ".", "test_dict", "=", "{", "k", ":", "new_ent_dict", "[", "k", "]", "for", "k", "in", "test_ent", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_ent_triples": [[183, 190], ["numpy.nonzero", "numpy.nonzero", "numpy.union1d", "numpy.in1d", "numpy.in1d"], "methods", ["None"], ["", "def", "get_ent_triples", "(", "self", ",", "e_ids", ",", "triples", ",", "return_ids", "=", "False", ")", ":", "\n", "        ", "h_ids", "=", "np", ".", "nonzero", "(", "np", ".", "in1d", "(", "triples", "[", ":", ",", "0", "]", ",", "e_ids", ")", ")", "\n", "t_ids", "=", "np", ".", "nonzero", "(", "np", ".", "in1d", "(", "triples", "[", ":", ",", "2", "]", ",", "e_ids", ")", ")", "\n", "triple_ids", "=", "np", ".", "union1d", "(", "h_ids", ",", "t_ids", ")", "\n", "if", "return_ids", ":", "\n", "            ", "return", "triples", "[", "triple_ids", "]", ",", "triple_ids", "\n", "", "return", "triples", "[", "triple_ids", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.smpl_new_ent": [[191, 199], ["dataset_prep.DatasetPreprocess.ent2id.keys", "random.sample", "list", "list", "int", "set", "set", "dataset_prep.DatasetPreprocess.new_ent2id.values", "dataset_prep.DatasetPreprocess.old_ent2id.values", "dataset_prep.DatasetPreprocess.num_ent"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_ent"], ["", "def", "smpl_new_ent", "(", "self", ")", ":", "\n", "        ", "all_keys", "=", "self", ".", "ent2id", ".", "keys", "(", ")", "\n", "new_keys", "=", "random", ".", "sample", "(", "all_keys", ",", "int", "(", "self", ".", "num_ent", "(", ")", "*", "self", ".", "smpl_ratio", ")", ")", "\n", "old_keys", "=", "set", "(", "all_keys", ")", "-", "set", "(", "new_keys", ")", "\n", "self", ".", "new_ent2id", "=", "{", "k", ":", "self", ".", "ent2id", "[", "k", "]", "for", "k", "in", "new_keys", "}", "\n", "self", ".", "old_ent2id", "=", "{", "k", ":", "self", ".", "ent2id", "[", "k", "]", "for", "k", "in", "old_keys", "}", "\n", "self", ".", "new_ent", "=", "list", "(", "self", ".", "new_ent2id", ".", "values", "(", ")", ")", "\n", "self", ".", "old_ent", "=", "list", "(", "self", ".", "old_ent2id", ".", "values", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.num_ent": [[200, 202], ["len"], "methods", ["None"], ["", "def", "num_ent", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "ent2id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.num_rel": [[203, 205], ["len"], "methods", ["None"], ["", "def", "num_rel", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "rel2id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.triple2ids": [[206, 211], ["dataset_prep.DatasetPreprocess.get_ent_id", "dataset_prep.DatasetPreprocess.get_rel_id", "dataset_prep.DatasetPreprocess.get_ent_id"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.get_ent_id", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.get_rel_id", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.get_ent_id"], ["", "def", "triple2ids", "(", "self", ",", "triple", ")", ":", "\n", "        ", "return", "[", "\n", "self", ".", "get_ent_id", "(", "triple", "[", "0", "]", ")", ",", "\n", "self", ".", "get_rel_id", "(", "triple", "[", "1", "]", ")", ",", "\n", "self", ".", "get_ent_id", "(", "triple", "[", "2", "]", ")", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.ids2triple": [[213, 216], ["dataset_prep.DatasetPreprocess.get_ent_str", "dataset_prep.DatasetPreprocess.get_rel_str", "dataset_prep.DatasetPreprocess.get_ent_str"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_ent_str", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_rel_str", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_ent_str"], ["", "def", "ids2triple", "(", "self", ",", "ids", ")", ":", "\n", "        ", "return", "\"{0}\\t{1}\\t{2}\\n\"", ".", "format", "(", "\n", "self", ".", "get_ent_str", "(", "ids", "[", "0", "]", ")", ",", "self", ".", "get_rel_str", "(", "ids", "[", "1", "]", ")", ",", "self", ".", "get_ent_str", "(", "ids", "[", "2", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_ent_id": [[218, 222], ["len"], "methods", ["None"], ["", "def", "get_ent_id", "(", "self", ",", "ent", ")", ":", "\n", "        ", "if", "not", "ent", "in", "self", ".", "ent2id", ":", "\n", "            ", "self", ".", "ent2id", "[", "ent", "]", "=", "len", "(", "self", ".", "ent2id", ")", "\n", "", "return", "self", ".", "ent2id", "[", "ent", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_rel_id": [[223, 227], ["len"], "methods", ["None"], ["", "def", "get_rel_id", "(", "self", ",", "rel", ")", ":", "\n", "        ", "if", "not", "rel", "in", "self", ".", "rel2id", ":", "\n", "            ", "self", ".", "rel2id", "[", "rel", "]", "=", "len", "(", "self", ".", "rel2id", ")", "\n", "", "return", "self", ".", "rel2id", "[", "rel", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_ent_str": [[228, 232], ["dataset_prep.DatasetPreprocess.ent2id.items"], "methods", ["None"], ["", "def", "get_ent_str", "(", "self", ",", "e_id", ")", ":", "\n", "        ", "for", "key", ",", "value", "in", "self", ".", "ent2id", ".", "items", "(", ")", ":", "\n", "            ", "if", "value", "==", "e_id", ":", "\n", "                ", "return", "key", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.preprocess.dataset_prep.DatasetPreprocess.get_rel_str": [[233, 237], ["dataset_prep.DatasetPreprocess.rel2id.items"], "methods", ["None"], ["", "", "", "def", "get_rel_str", "(", "self", ",", "r_id", ")", ":", "\n", "        ", "for", "key", ",", "value", "in", "self", ".", "rel2id", ".", "items", "(", ")", ":", "\n", "            ", "if", "value", "==", "r_id", ":", "\n", "                ", "return", "key", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.measure.Measure.__init__": [[10, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "hit1", "=", "0.0", "\n", "self", ".", "hit3", "=", "0.0", "\n", "self", ".", "hit10", "=", "0.0", "\n", "self", ".", "mrr", "=", "0.0", "\n", "self", ".", "mr", "=", "0.0", "\n", "self", ".", "num_facts", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.measure.Measure.update": [[18, 28], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "rank", ")", ":", "\n", "        ", "if", "rank", "==", "1", ":", "\n", "            ", "self", ".", "hit1", "+=", "1.0", "\n", "", "if", "rank", "<=", "3", ":", "\n", "            ", "self", ".", "hit3", "+=", "1.0", "\n", "", "if", "rank", "<=", "10", ":", "\n", "            ", "self", ".", "hit10", "+=", "1.0", "\n", "", "self", ".", "mr", "+=", "rank", "\n", "self", ".", "mrr", "+=", "1.0", "/", "rank", "\n", "self", ".", "num_facts", "+=", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.measure.Measure.normalize": [[29, 38], ["None"], "methods", ["None"], ["", "def", "normalize", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "hit1", ">", "0.0", ":", "\n", "            ", "self", ".", "hit1", "/=", "self", ".", "num_facts", "\n", "", "if", "self", ".", "hit3", ">", "0.0", ":", "\n", "            ", "self", ".", "hit3", "/=", "self", ".", "num_facts", "\n", "", "if", "self", ".", "hit10", ">", "0.0", ":", "\n", "            ", "self", ".", "hit10", "/=", "self", ".", "num_facts", "\n", "", "self", ".", "mr", "/=", "self", ".", "num_facts", "\n", "self", ".", "mrr", "/=", "self", ".", "num_facts", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.measure.Measure.print_": [[39, 46], ["print", "print", "print", "print", "print", "print"], "methods", ["None"], ["", "def", "print_", "(", "self", ")", ":", "\n", "        ", "print", "(", "\"\\tHit@1 =\"", ",", "self", ".", "hit1", ")", "\n", "print", "(", "\"\\tHit@3 =\"", ",", "self", ".", "hit3", ")", "\n", "print", "(", "\"\\tHit@10 =\"", ",", "self", ".", "hit10", ")", "\n", "print", "(", "\"\\tMR =\"", ",", "self", ".", "mr", ")", "\n", "print", "(", "\"\\tMRR =\"", ",", "self", ".", "mrr", ")", "\n", "print", "(", "\"\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.__init__": [[21, 37], ["dataset.Dataset.read_text", "dataset.Dataset.num_ent", "dataset.Dataset.dataset_stat", "max", "map", "dataset.Dataset.read_json", "dataset.Dataset.read_json"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.read_text", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_ent", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.dataset_stat", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.read_json", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.read_json"], ["    ", "def", "__init__", "(", "self", ",", "dataset_name", ",", "cons_masking", "=", "False", ",", "mask_prob", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "dataset_name", "=", "dataset_name", "\n", "self", ".", "data_path", "=", "\"../datasets/\"", "+", "dataset_name", "+", "\"/processed/\"", "\n", "self", ".", "ent2id", "=", "{", "}", "\n", "self", ".", "rel2id", "=", "{", "}", "\n", "self", ".", "train_data", "=", "self", ".", "read_text", "(", "self", ".", "data_path", "+", "\"train.txt\"", ")", "\n", "self", ".", "init_num_ent", "=", "self", ".", "num_ent", "(", ")", "\n", "self", ".", "adj_list", ",", "self", ".", "ent_freq", ",", "self", ".", "rel_freq", "=", "self", ".", "dataset_stat", "(", "self", ".", "train_data", ")", "\n", "self", ".", "max_degree", "=", "max", "(", "map", "(", "len", ",", "self", ".", "adj_list", ")", ")", "\n", "self", ".", "val_test_data", "=", "{", "\n", "\"valid\"", ":", "self", ".", "read_json", "(", "self", ".", "data_path", "+", "\"valid.json\"", ")", ",", "\n", "\"test\"", ":", "self", ".", "read_json", "(", "self", ".", "data_path", "+", "\"test.json\"", ")", ",", "\n", "}", "\n", "self", ".", "batch_index", "=", "0", "\n", "self", ".", "cons_masking", "=", "cons_masking", "\n", "self", ".", "mask_prob", "=", "mask_prob", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.read_text": [[38, 46], ["numpy.zeros", "enumerate", "open", "f.readlines", "numpy.array", "len", "dataset.Dataset.triple2ids", "line.strip().split", "line.strip"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.triple2ids"], ["", "def", "read_text", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "\n", "", "triples", "=", "np", ".", "zeros", "(", "(", "len", "(", "lines", ")", ",", "3", ")", ")", "\n", "for", "i", ",", "line", "in", "enumerate", "(", "lines", ")", ":", "\n", "            ", "triples", "[", "i", "]", "=", "np", ".", "array", "(", "self", ".", "triple2ids", "(", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", ")", ")", "\n", "", "return", "triples", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.dataset_stat": [[47, 67], ["torch.zeros", "torch.zeros", "max", "dataset.Dataset.num_ent", "dataset.Dataset.num_rel", "t.astype.astype.astype", "adj_list[].append", "adj_list[].append", "map", "item.extend", "torch.tensor", "range", "dataset.Dataset.num_ent", "len", "dataset.Dataset.num_ent", "dataset.Dataset.num_rel"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_ent", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_rel", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_ent", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_ent", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_rel"], ["", "def", "dataset_stat", "(", "self", ",", "triples", ")", ":", "\n", "        ", "adj_list", "=", "[", "[", "]", "for", "_", "in", "range", "(", "self", ".", "num_ent", "(", ")", ")", "]", "\n", "ent_freq", "=", "torch", ".", "zeros", "(", "self", ".", "num_ent", "(", ")", ")", "\n", "rel_freq", "=", "torch", ".", "zeros", "(", "self", ".", "num_rel", "(", ")", ")", "\n", "for", "t", "in", "triples", ":", "\n", "            ", "t", "=", "t", ".", "astype", "(", "int", ")", "\n", "adj_list", "[", "t", "[", "0", "]", "]", ".", "append", "(", "[", "t", "[", "2", "]", ",", "t", "[", "1", "]", ",", "0", "]", ")", "\n", "adj_list", "[", "t", "[", "2", "]", "]", ".", "append", "(", "[", "t", "[", "0", "]", ",", "t", "[", "1", "]", ",", "1", "]", ")", "\n", "ent_freq", "[", "t", "[", "0", "]", "]", "+=", "1", "\n", "ent_freq", "[", "t", "[", "2", "]", "]", "+=", "1", "\n", "rel_freq", "[", "t", "[", "1", "]", "]", "+=", "1", "\n", "", "max_degree", "=", "max", "(", "map", "(", "len", ",", "adj_list", ")", ")", "\n", "for", "item", "in", "adj_list", ":", "\n", "            ", "item", ".", "extend", "(", "\n", "[", "[", "self", ".", "num_ent", "(", ")", ",", "self", ".", "num_rel", "(", ")", ",", "0", "]", "]", "*", "(", "max_degree", "-", "len", "(", "item", ")", ")", "\n", ")", "\n", "", "return", "(", "\n", "torch", ".", "tensor", "(", "adj_list", ")", ",", "\n", "ent_freq", "/", "triples", ".", "shape", "[", "0", "]", ",", "\n", "rel_freq", "/", "triples", ".", "shape", "[", "0", "]", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.read_json": [[69, 83], ["json.load.items", "open", "json.load", "triples.append", "dataset.Dataset.get_rel_id", "dataset.Dataset.get_ent_id", "dataset.Dataset.get_ent_id", "dataset.Dataset.get_rel_id"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.get_rel_id", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.get_ent_id", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.get_ent_id", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.get_rel_id"], ["", "def", "read_json", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "with", "open", "(", "file_path", ")", "as", "json_file", ":", "\n", "            ", "data", "=", "json", ".", "load", "(", "json_file", ")", "\n", "\n", "", "for", "k", ",", "v", "in", "data", ".", "items", "(", ")", ":", "\n", "            ", "triples", "=", "[", "]", "\n", "for", "t", "in", "v", ":", "\n", "                ", "if", "t", "[", "0", "]", "==", "k", ":", "\n", "                    ", "triples_ids", "=", "[", "t", "[", "0", "]", ",", "self", ".", "get_rel_id", "(", "t", "[", "1", "]", ")", ",", "self", ".", "get_ent_id", "(", "t", "[", "2", "]", ")", "]", "\n", "", "else", ":", "\n", "                    ", "triples_ids", "=", "[", "self", ".", "get_ent_id", "(", "t", "[", "0", "]", ")", ",", "self", ".", "get_rel_id", "(", "t", "[", "1", "]", ")", ",", "t", "[", "2", "]", "]", "\n", "", "triples", ".", "append", "(", "triples_ids", ")", "\n", "", "data", "[", "k", "]", "=", "triples", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.triple2ids": [[84, 89], ["dataset.Dataset.get_ent_id", "dataset.Dataset.get_rel_id", "dataset.Dataset.get_ent_id"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.get_ent_id", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.get_rel_id", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.get_ent_id"], ["", "def", "triple2ids", "(", "self", ",", "triple", ")", ":", "\n", "        ", "return", "[", "\n", "self", ".", "get_ent_id", "(", "triple", "[", "0", "]", ")", ",", "\n", "self", ".", "get_rel_id", "(", "triple", "[", "1", "]", ")", ",", "\n", "self", ".", "get_ent_id", "(", "triple", "[", "2", "]", ")", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.get_ent_id": [[91, 98], ["len"], "methods", ["None"], ["", "def", "get_ent_id", "(", "self", ",", "ent", ",", "add_ent", "=", "True", ")", ":", "\n", "        ", "if", "not", "ent", "in", "self", ".", "ent2id", ":", "\n", "            ", "if", "add_ent", ":", "\n", "                ", "self", ".", "ent2id", "[", "ent", "]", "=", "len", "(", "self", ".", "ent2id", ")", "\n", "", "else", ":", "\n", "                ", "return", "self", ".", "init_num_ent", "\n", "", "", "return", "self", ".", "ent2id", "[", "ent", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.get_rel_id": [[99, 103], ["len"], "methods", ["None"], ["", "def", "get_rel_id", "(", "self", ",", "rel", ")", ":", "\n", "        ", "if", "not", "rel", "in", "self", ".", "rel2id", ":", "\n", "            ", "self", ".", "rel2id", "[", "rel", "]", "=", "len", "(", "self", ".", "rel2id", ")", "\n", "", "return", "self", ".", "rel2id", "[", "rel", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_ent": [[104, 106], ["len"], "methods", ["None"], ["", "def", "num_ent", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "ent2id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_rel": [[107, 109], ["len"], "methods", ["None"], ["", "def", "num_rel", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "rel2id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.rand_ent_except": [[110, 115], ["random.randint", "random.randint"], "methods", ["None"], ["", "def", "rand_ent_except", "(", "self", ",", "ent", ")", ":", "\n", "        ", "rand_ent", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "init_num_ent", "-", "1", ")", "\n", "while", "rand_ent", "==", "ent", ":", "\n", "            ", "rand_ent", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "init_num_ent", "-", "1", ")", "\n", "", "return", "rand_ent", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.next_pos_batch": [[116, 125], ["numpy.append().astype", "len", "numpy.append", "numpy.ones", "len"], "methods", ["None"], ["", "def", "next_pos_batch", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "if", "self", ".", "batch_index", "+", "batch_size", "<", "len", "(", "self", ".", "train_data", ")", ":", "\n", "            ", "batch", "=", "self", ".", "train_data", "[", "self", ".", "batch_index", ":", "self", ".", "batch_index", "+", "batch_size", "]", "\n", "self", ".", "batch_index", "+=", "batch_size", "\n", "", "else", ":", "\n", "            ", "batch", "=", "self", ".", "train_data", "[", "self", ".", "batch_index", ":", "]", "\n", "self", ".", "batch_index", "=", "0", "\n", "", "return", "np", ".", "append", "(", "batch", ",", "np", ".", "ones", "(", "(", "len", "(", "batch", ")", ",", "1", ")", ")", ",", "axis", "=", "1", ")", ".", "astype", "(", "\n", "\"int\"", "\n", ")", "# appending the +1 label", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.generate_neg": [[127, 136], ["numpy.repeat", "range", "numpy.copy", "len", "random.random", "dataset.Dataset.rand_ent_except", "dataset.Dataset.rand_ent_except"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.rand_ent_except", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.rand_ent_except"], ["", "def", "generate_neg", "(", "self", ",", "pos_batch", ",", "neg_ratio", ")", ":", "\n", "        ", "neg_batch", "=", "np", ".", "repeat", "(", "np", ".", "copy", "(", "pos_batch", ")", ",", "neg_ratio", ",", "axis", "=", "0", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "neg_batch", ")", ")", ":", "\n", "            ", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "                ", "neg_batch", "[", "i", "]", "[", "0", "]", "=", "self", ".", "rand_ent_except", "(", "neg_batch", "[", "i", "]", "[", "0", "]", ")", "# flipping head", "\n", "", "else", ":", "\n", "                ", "neg_batch", "[", "i", "]", "[", "2", "]", "=", "self", ".", "rand_ent_except", "(", "neg_batch", "[", "i", "]", "[", "2", "]", ")", "# flipping tail", "\n", "", "", "neg_batch", "[", ":", ",", "-", "1", "]", "=", "-", "1", "\n", "return", "neg_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.next_batch": [[137, 158], ["dataset.Dataset.next_pos_batch", "dataset.Dataset.generate_neg", "numpy.append", "torch.tensor", "utils.random_new_ent_mask", "numpy.repeat", "numpy.append", "torch.tensor().to", "torch.tensor().to", "torch.tensor", "numpy.copy", "torch.tensor", "torch.tensor", "utils.random_new_ent_mask"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.next_pos_batch", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.generate_neg", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.utils.random_new_ent_mask", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.src.utils.random_new_ent_mask"], ["", "def", "next_batch", "(", "self", ",", "batch_size", ",", "neg_ratio", ",", "device", ")", ":", "\n", "        ", "pos_batch", "=", "self", ".", "next_pos_batch", "(", "batch_size", ")", "\n", "neg_batch", "=", "self", ".", "generate_neg", "(", "pos_batch", ",", "neg_ratio", ")", "\n", "batch", "=", "np", ".", "append", "(", "pos_batch", ",", "neg_batch", ",", "axis", "=", "0", ")", "\n", "labels", "=", "torch", ".", "tensor", "(", "batch", "[", ":", ",", "3", "]", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", "\n", "triples", "=", "batch", "[", ":", ",", "0", ":", "3", "]", "\n", "\n", "if", "self", ".", "cons_masking", ":", "\n", "            ", "pos_new_ent_mask", "=", "random_new_ent_mask", "(", "pos_batch", "[", ":", ",", "0", ":", "3", "]", ",", "self", ".", "mask_prob", ")", "\n", "neg_new_ent_mask", "=", "np", ".", "repeat", "(", "np", ".", "copy", "(", "pos_new_ent_mask", ")", ",", "neg_ratio", ",", "axis", "=", "0", ")", "\n", "new_ent_mask", "=", "np", ".", "append", "(", "pos_new_ent_mask", ",", "neg_new_ent_mask", ",", "axis", "=", "0", ")", "\n", "new_ent_mask", "=", "torch", ".", "tensor", "(", "new_ent_mask", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "new_ent_mask", "=", "torch", ".", "tensor", "(", "\n", "random_new_ent_mask", "(", "triples", ",", "self", ".", "mask_prob", ")", ",", "dtype", "=", "torch", ".", "long", "\n", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "return", "(", "\n", "torch", ".", "tensor", "(", "triples", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "device", ")", ",", "\n", "labels", ",", "\n", "new_ent_mask", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.was_last_batch": [[160, 162], ["None"], "methods", ["None"], ["", "def", "was_last_batch", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "batch_index", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_batch": [[163, 165], ["int", "math.ceil", "float", "len"], "methods", ["None"], ["", "def", "num_batch", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "return", "int", "(", "math", ".", "ceil", "(", "float", "(", "len", "(", "self", ".", "train_data", ")", ")", "/", "batch_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.num_batch_simulated": [[166, 168], ["int", "math.ceil", "float", "len"], "methods", ["None"], ["", "def", "num_batch_simulated", "(", "self", ",", "simulate_batch_size", ")", ":", "\n", "        ", "return", "int", "(", "math", ".", "ceil", "(", "float", "(", "len", "(", "self", ".", "train_data", ")", ")", "/", "simulate_batch_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.generate_neg_obs": [[169, 179], ["numpy.repeat", "range", "numpy.copy", "len", "dataset.Dataset.rand_ent_except", "dataset.Dataset.rand_ent_except"], "methods", ["home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.rand_ent_except", "home.repos.pwc.inspect_result.BorealisAI_OOS-KGE.common.dataset.Dataset.rand_ent_except"], ["", "def", "generate_neg_obs", "(", "self", ",", "obs_triples", ",", "new_ent", ",", "neg_ratio", ")", ":", "\n", "        ", "neg_triples", "=", "np", ".", "repeat", "(", "np", ".", "copy", "(", "obs_triples", ")", ",", "neg_ratio", ",", "axis", "=", "0", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "neg_triples", ")", ")", ":", "\n", "            ", "if", "neg_triples", "[", "i", ",", "0", "]", "==", "new_ent", ":", "\n", "# new entity is in head -> flip tail", "\n", "                ", "neg_triples", "[", "i", ",", "2", "]", "=", "self", ".", "rand_ent_except", "(", "neg_triples", "[", "i", ",", "2", "]", ")", "\n", "", "else", ":", "\n", "# new entity is in tail -> flip head", "\n", "                ", "neg_triples", "[", "i", ",", "0", "]", "=", "self", ".", "rand_ent_except", "(", "neg_triples", "[", "i", ",", "0", "]", ")", "\n", "", "", "return", "neg_triples", "\n", "", "", ""]]}