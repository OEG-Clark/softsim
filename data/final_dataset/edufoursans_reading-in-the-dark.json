{"home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.Vector.__init__": [[20, 37], ["utils.is_array", "models.Vector.fromFile", "len", "models.WrongInputError", "len", "utils.is_scalar", "models.Vector.content.append", "int"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.fromFile", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_scalar"], ["def", "__init__", "(", "self", ",", "array", "=", "None", ",", "source", "=", "''", ")", ":", "\n", "        ", "if", "source", ":", "\n", "            ", "self", ".", "fromFile", "(", "source", ")", "\n", "return", "\n", "", "if", "is_array", "(", "array", ")", ":", "\n", "            ", "assert", "(", "\n", "len", "(", "array", ")", ">", "0", "\n", ")", ",", "(", "\n", "'Trying to generate an image from an empty vector.'", "\n", ")", "\n", "self", ".", "n", "=", "len", "(", "array", ")", "\n", "self", ".", "content", "=", "[", "]", "\n", "for", "s", "in", "array", ":", "\n", "                ", "assert", "is_scalar", "(", "s", ")", ",", "\"Input doesn't contain valid scalars.\"", "\n", "self", ".", "content", ".", "append", "(", "int", "(", "s", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "WrongInputError", "(", "array", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.EncryptedVector.__init__": [[43, 75], ["utils.is_array", "utils.is_array", "len", "models.EncryptedVector.fromFile", "len", "len", "len", "utils.is_array", "utils.is_array", "len", "len"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.fromFile", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array"], ["def", "__init__", "(", "\n", "self", ",", "\n", "group", "=", "None", ",", "\n", "simplifier", "=", "None", ",", "\n", "left", "=", "None", ",", "\n", "right", "=", "None", ",", "\n", "source", "=", "''", "\n", ")", ":", "\n", "        ", "if", "source", ":", "\n", "            ", "self", ".", "fromFile", "(", "source", ")", "\n", "return", "\n", "", "assert", "left", "\n", "assert", "right", "\n", "assert", "group", "\n", "assert", "simplifier", "\n", "assert", "is_array", "(", "left", ")", "\n", "assert", "is_array", "(", "right", ")", "\n", "assert", "(", "\n", "len", "(", "left", ")", "==", "len", "(", "right", ")", "\n", ")", ",", "(", "\n", "'Ciphertext was not properly generated.'", "\n", ")", "\n", "assert", "len", "(", "left", ")", ">", "1", ",", "'Ciphertext is empty.'", "\n", "assert", "(", "is_array", "(", "x", ")", "for", "x", "in", "left", ")", "\n", "assert", "(", "is_array", "(", "x", ")", "for", "x", "in", "right", ")", "\n", "assert", "(", "len", "(", "x", ")", "==", "2", "for", "x", "in", "left", ")", "\n", "assert", "(", "len", "(", "x", ")", "==", "2", "for", "x", "in", "right", ")", "\n", "self", ".", "n", "=", "len", "(", "left", ")", "\n", "self", ".", "group", "=", "group", "\n", "self", ".", "simplifier", "=", "simplifier", "\n", "self", ".", "left", "=", "left", "\n", "self", ".", "right", "=", "right", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.EncryptedVector.__pow__": [[76, 89], ["range", "models.EncryptedVector.group.pair_prod", "utils.batch_exp", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.batch_exp"], ["", "def", "__pow__", "(", "self", ",", "forms", ")", ":", "\n", "        ", "paired", "=", "[", "\n", "self", ".", "group", ".", "pair_prod", "(", "\n", "self", ".", "left", "[", "i", "]", ",", "\n", "self", ".", "right", "[", "i", "]", "\n", ")", "for", "i", "in", "range", "(", "self", ".", "n", ")", "\n", "]", "\n", "out", "=", "[", "1", "for", "cl", "in", "range", "(", "forms", ".", "classes", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "n", ")", ":", "\n", "            ", "batch", "=", "batch_exp", "(", "paired", "[", "i", "]", ",", "forms", ".", "content", "[", "i", "]", ",", "forms", ".", "nbits", "[", "i", "]", ")", "\n", "for", "cl", "in", "range", "(", "forms", ".", "classes", ")", ":", "\n", "                ", "out", "[", "cl", "]", "*=", "batch", "[", "cl", "]", "\n", "", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.PublicKey.__init__": [[97, 110], ["utils.is_array", "utils.is_array", "len", "models.PublicKey.fromFile", "len", "len"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.fromFile"], ["def", "__init__", "(", "self", ",", "group", "=", "None", ",", "h1", "=", "None", ",", "h2", "=", "None", ",", "source", "=", "''", ")", ":", "\n", "        ", "if", "source", ":", "\n", "            ", "self", ".", "fromFile", "(", "source", ")", "\n", "return", "\n", "", "assert", "group", "\n", "assert", "h1", "\n", "assert", "is_array", "(", "h1", ")", "\n", "assert", "is_array", "(", "h2", ")", "\n", "assert", "len", "(", "h1", ")", "==", "len", "(", "h2", ")", "\n", "self", ".", "group", "=", "group", "\n", "self", ".", "n", "=", "len", "(", "h1", ")", "\n", "self", ".", "h1", "=", "h1", "\n", "self", ".", "h2", "=", "h2", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.MasterKey.__init__": [[116, 129], ["models.PublicKey.__init__", "utils.is_array", "utils.is_array", "models.MasterKey.fromFile", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.discretelogarithm.PreCompBabyStepGiantStep.__init__", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.fromFile"], ["def", "__init__", "(", "self", ",", "pk", "=", "None", ",", "s", "=", "None", ",", "t", "=", "None", ",", "source", "=", "''", ")", ":", "\n", "        ", "if", "source", ":", "\n", "            ", "self", ".", "fromFile", "(", "source", ")", "\n", "return", "\n", "", "super", "(", "MasterKey", ",", "self", ")", ".", "__init__", "(", "pk", ".", "group", ",", "pk", ".", "h1", ",", "pk", ".", "h2", ")", "\n", "assert", "s", "\n", "assert", "is_array", "(", "s", ")", "\n", "assert", "len", "(", "s", ")", "==", "len", "(", "pk", ".", "h1", ")", "\n", "assert", "t", "\n", "assert", "is_array", "(", "t", ")", "\n", "assert", "len", "(", "t", ")", "==", "len", "(", "pk", ".", "h1", ")", "\n", "self", ".", "s", "=", "s", "\n", "self", ".", "t", "=", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.DecryptionKey.__init__": [[135, 148], ["isinstance", "utils.is_array", "len", "models.DecryptionKey.fromFile"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.fromFile"], ["def", "__init__", "(", "self", ",", "model", "=", "None", ",", "skf", "=", "None", ",", "source", "=", "''", ")", ":", "\n", "        ", "if", "source", ":", "\n", "            ", "self", ".", "fromFile", "(", "source", ")", "\n", "return", "\n", "", "assert", "model", "\n", "assert", "skf", "\n", "assert", "isinstance", "(", "model", ",", "MLModel", ")", "\n", "assert", "is_array", "(", "skf", ")", "\n", "classes", "=", "len", "(", "skf", ")", "\n", "assert", "classes", "\n", "self", ".", "classes", "=", "classes", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "skf", "=", "skf", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.DecryptionKey.serialize": [[149, 154], ["model.serialize", "super().serialize"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.serialize", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.serialize"], ["", "def", "serialize", "(", "self", ")", ":", "\n", "        ", "model", "=", "self", ".", "model", "\n", "del", "self", ".", "model", "\n", "self", ".", "model_", "=", "model", ".", "serialize", "(", ")", "\n", "return", "super", "(", "DecryptionKey", ",", "self", ")", ".", "serialize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.DecryptionKey.deserialize": [[155, 160], ["super().deserialize", "models.MLModel.deserialize", "models.MLModel"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.deserialize", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.deserialize"], ["", "def", "deserialize", "(", "self", ",", "o", ")", ":", "\n", "        ", "super", "(", "DecryptionKey", ",", "self", ")", ".", "deserialize", "(", "o", ")", "\n", "self", ".", "model", "=", "MLModel", "(", ")", ".", "deserialize", "(", "self", ".", "model_", ")", "\n", "del", "self", ".", "model_", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.Projection.__init__": [[168, 196], ["utils.is_array", "len", "len", "range", "models.Projection.fromFile", "utils.is_array", "utils.is_scalar", "models.Projection.nbits.append", "range", "len", "range", "range", "range", "int", "range", "range", "abs", "abs", "int", "math.log2"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.fromFile", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_scalar"], ["def", "__init__", "(", "self", ",", "matrix", "=", "None", ",", "source", "=", "''", ")", ":", "\n", "        ", "if", "source", ":", "\n", "            ", "self", ".", "fromFile", "(", "source", ")", "\n", "return", "\n", "", "if", "matrix", "is", "None", ":", "\n", "            ", "return", "\n", "", "assert", "is_array", "(", "matrix", ")", "\n", "n", "=", "len", "(", "matrix", ")", "\n", "assert", "n", ">", "0", "\n", "assert", "(", "is_array", "(", "matrix", "[", "i", "]", ")", "for", "i", "in", "range", "(", "n", ")", ")", "\n", "k", "=", "len", "(", "matrix", "[", "0", "]", ")", "\n", "assert", "k", ">", "0", "\n", "assert", "(", "len", "(", "matrix", "[", "i", "]", ")", "==", "k", "for", "i", "in", "range", "(", "n", ")", ")", "\n", "assert", "(", "is_scalar", "(", "matrix", "[", "i", "]", "[", "j", "]", ")", "for", "i", "in", "range", "(", "n", ")", "for", "j", "in", "range", "(", "k", ")", ")", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "columns", "=", "[", "\n", "[", "\n", "int", "(", "matrix", "[", "i", "]", "[", "j", "]", ")", "for", "j", "in", "range", "(", "k", ")", "\n", "]", "for", "i", "in", "range", "(", "n", ")", "\n", "]", "\n", "self", ".", "nbits", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "n", ")", ":", "\n", "            ", "m", "=", "1", "\n", "for", "x", "in", "self", ".", "columns", "[", "j", "]", ":", "\n", "                ", "if", "abs", "(", "x", ")", ">", "m", ":", "\n", "                    ", "m", "=", "abs", "(", "x", ")", "\n", "", "", "self", ".", "nbits", ".", "append", "(", "int", "(", "log2", "(", "m", ")", ")", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.Projection.__mul__": [[197, 223], ["isinstance", "range", "models.EncryptedVector", "utils.is_array", "utils.batch_exp", "utils.batch_exp", "utils.batch_exp", "utils.batch_exp", "range", "numpy.dot", "models.WrongInputError", "range", "range", "len", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.batch_exp", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.batch_exp", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.batch_exp", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.batch_exp"], ["", "", "def", "__mul__", "(", "self", ",", "X", ")", ":", "\n", "        ", "if", "isinstance", "(", "X", ",", "EncryptedVector", ")", ":", "\n", "            ", "left", "=", "[", "[", "1", ",", "1", "]", "for", "i", "in", "range", "(", "self", ".", "k", ")", "]", "\n", "right", "=", "[", "[", "1", ",", "1", "]", "for", "i", "in", "range", "(", "self", ".", "k", ")", "]", "\n", "for", "j", "in", "range", "(", "self", ".", "n", ")", ":", "\n", "                ", "l1", "=", "batch_exp", "(", "X", ".", "left", "[", "j", "]", "[", "0", "]", ",", "self", ".", "columns", "[", "j", "]", ",", "self", ".", "nbits", "[", "j", "]", ")", "\n", "l2", "=", "batch_exp", "(", "X", ".", "left", "[", "j", "]", "[", "1", "]", ",", "self", ".", "columns", "[", "j", "]", ",", "self", ".", "nbits", "[", "j", "]", ")", "\n", "r1", "=", "batch_exp", "(", "X", ".", "right", "[", "j", "]", "[", "0", "]", ",", "self", ".", "columns", "[", "j", "]", ",", "self", ".", "nbits", "[", "j", "]", ")", "\n", "r2", "=", "batch_exp", "(", "X", ".", "right", "[", "j", "]", "[", "1", "]", ",", "self", ".", "columns", "[", "j", "]", ",", "self", ".", "nbits", "[", "j", "]", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "k", ")", ":", "\n", "                    ", "left", "[", "i", "]", "[", "0", "]", "*=", "l1", "[", "i", "]", "\n", "left", "[", "i", "]", "[", "1", "]", "*=", "l2", "[", "i", "]", "\n", "right", "[", "i", "]", "[", "0", "]", "*=", "r1", "[", "i", "]", "\n", "right", "[", "i", "]", "[", "1", "]", "*=", "r2", "[", "i", "]", "\n", "", "", "return", "EncryptedVector", "(", "\n", "group", "=", "X", ".", "group", ",", "\n", "simplifier", "=", "X", ".", "simplifier", ",", "\n", "left", "=", "left", ",", "\n", "right", "=", "right", ",", "\n", ")", "\n", "", "elif", "is_array", "(", "X", ")", ":", "\n", "            ", "import", "numpy", "as", "np", "\n", "assert", "self", ".", "n", "==", "len", "(", "X", ")", "\n", "return", "np", ".", "dot", "(", "np", ".", "transpose", "(", "self", ".", "columns", ")", ",", "X", ")", "\n", "", "else", ":", "\n", "            ", "raise", "WrongInputError", "(", "X", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.DiagonalQuadraticForms.__init__": [[229, 257], ["utils.is_array", "len", "len", "range", "models.DiagonalQuadraticForms.fromFile", "utils.is_array", "utils.is_scalar", "models.DiagonalQuadraticForms.nbits.append", "range", "len", "range", "range", "range", "int", "range", "range", "abs", "abs", "int", "math.log2"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.fromFile", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_scalar"], ["def", "__init__", "(", "self", ",", "matrix", "=", "None", ",", "source", "=", "''", ")", ":", "\n", "        ", "if", "source", ":", "\n", "            ", "self", ".", "fromFile", "(", "source", ")", "\n", "return", "\n", "", "if", "matrix", "is", "None", ":", "\n", "            ", "return", "\n", "", "assert", "is_array", "(", "matrix", ")", "\n", "k", "=", "len", "(", "matrix", ")", "\n", "assert", "k", "\n", "assert", "(", "is_array", "(", "matrix", "[", "i", "]", ")", "for", "i", "in", "range", "(", "k", ")", ")", "\n", "classes", "=", "len", "(", "matrix", "[", "0", "]", ")", "\n", "assert", "classes", "\n", "assert", "(", "len", "(", "matrix", "[", "i", "]", ")", "==", "classes", "for", "i", "in", "range", "(", "k", ")", ")", "\n", "assert", "(", "\n", "is_scalar", "(", "matrix", "[", "i", "]", "[", "j", "]", ")", "for", "i", "in", "range", "(", "k", ")", "for", "j", "in", "range", "(", "classes", ")", "\n", ")", "\n", "self", ".", "classes", "=", "classes", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "content", "=", "[", "\n", "[", "int", "(", "matrix", "[", "i", "]", "[", "j", "]", ")", "for", "j", "in", "range", "(", "classes", ")", "]", "for", "i", "in", "range", "(", "k", ")", "\n", "]", "\n", "self", ".", "nbits", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "k", ")", ":", "\n", "            ", "m", "=", "1", "\n", "for", "x", "in", "self", ".", "content", "[", "j", "]", ":", "\n", "                ", "if", "abs", "(", "x", ")", ">", "m", ":", "\n", "                    ", "m", "=", "abs", "(", "x", ")", "\n", "", "", "self", ".", "nbits", ".", "append", "(", "int", "(", "log2", "(", "m", ")", ")", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.MLModel.__init__": [[263, 274], ["isinstance", "isinstance", "models.MLModel.fromFile"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.fromFile"], ["def", "__init__", "(", "self", ",", "proj", "=", "None", ",", "forms", "=", "None", ",", "source", "=", "''", ")", ":", "\n", "        ", "if", "source", ":", "\n", "            ", "self", ".", "fromFile", "(", "source", ")", "\n", "return", "\n", "", "assert", "proj", "\n", "assert", "forms", "\n", "assert", "isinstance", "(", "proj", ",", "Projection", ")", "\n", "assert", "isinstance", "(", "forms", ",", "DiagonalQuadraticForms", ")", "\n", "assert", "forms", ".", "k", "==", "proj", ".", "k", "\n", "self", ".", "proj", "=", "proj", "\n", "self", ".", "forms", "=", "forms", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.MLModel.evaluate": [[275, 291], ["isinstance", "isinstance", "numpy.multiply", "numpy.dot().tolist", "utils.is_array", "numpy.square", "numpy.dot", "models.WrongInputError", "numpy.dot", "numpy.transpose", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array"], ["", "def", "evaluate", "(", "self", ",", "X", ")", ":", "\n", "        ", "if", "isinstance", "(", "X", ",", "EncryptedVector", ")", ":", "\n", "            ", "return", "(", "self", ".", "proj", "*", "X", ")", "**", "self", ".", "forms", "\n", "", "elif", "isinstance", "(", "X", ",", "MasterKey", ")", ":", "\n", "            ", "Ps", "=", "self", ".", "proj", "*", "X", ".", "s", "\n", "Pt", "=", "self", ".", "proj", "*", "X", ".", "t", "\n", "element_wise_prod", "=", "np", ".", "multiply", "(", "Ps", ",", "Pt", ")", "\n", "return", "np", ".", "dot", "(", "\n", "np", ".", "transpose", "(", "self", ".", "forms", ".", "content", ")", ",", "\n", "element_wise_prod", "\n", ")", ".", "tolist", "(", ")", "\n", "", "elif", "is_array", "(", "X", ")", ":", "\n", "            ", "PXsquared", "=", "np", ".", "square", "(", "self", ".", "proj", "*", "X", ")", "\n", "return", "np", ".", "dot", "(", "np", ".", "transpose", "(", "self", ".", "forms", ".", "content", ")", ",", "PXsquared", ")", "\n", "", "else", ":", "\n", "            ", "raise", "WrongInputError", "(", "X", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.MLModel.serialize": [[292, 300], ["proj.serialize", "forms.serialize", "super().serialize"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.serialize", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.serialize", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.serialize"], ["", "", "def", "serialize", "(", "self", ")", ":", "\n", "        ", "proj", "=", "self", ".", "proj", "\n", "forms", "=", "self", ".", "forms", "\n", "del", "self", ".", "proj", "\n", "del", "self", ".", "forms", "\n", "self", ".", "proj_", "=", "proj", ".", "serialize", "(", ")", "\n", "self", ".", "forms_", "=", "forms", ".", "serialize", "(", ")", "\n", "return", "super", "(", "MLModel", ",", "self", ")", ".", "serialize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.MLModel.deserialize": [[301, 308], ["super().deserialize", "Projection().deserialize", "DiagonalQuadraticForms().deserialize", "models.Projection", "models.DiagonalQuadraticForms"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.deserialize", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.deserialize", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.deserialize"], ["", "def", "deserialize", "(", "self", ",", "o", ")", ":", "\n", "        ", "super", "(", "MLModel", ",", "self", ")", ".", "deserialize", "(", "o", ")", "\n", "self", ".", "proj", "=", "Projection", "(", ")", ".", "deserialize", "(", "self", ".", "proj_", ")", "\n", "del", "self", ".", "proj_", "\n", "self", ".", "forms", "=", "DiagonalQuadraticForms", "(", ")", ".", "deserialize", "(", "self", ".", "forms_", ")", "\n", "del", "self", ".", "forms_", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.MLModel.naive_bounds": [[309, 339], ["numpy.transpose", "range", "numpy.transpose", "range", "maxes.append", "sum", "sum", "sum", "sum", "max", "range", "range"], "methods", ["None"], ["", "def", "naive_bounds", "(", "self", ")", ":", "\n", "        ", "maxes", "=", "[", "]", "\n", "P", "=", "np", ".", "transpose", "(", "self", ".", "proj", ".", "columns", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "proj", ".", "k", ")", ":", "\n", "            ", "neg", "=", "sum", "(", "[", "255", "*", "p", "if", "p", "<", "0", "else", "0", "for", "p", "in", "P", "[", "j", "]", "[", "1", ":", "]", "]", ")", "+", "P", "[", "j", "]", "[", "0", "]", "\n", "pos", "=", "sum", "(", "[", "255", "*", "p", "if", "p", ">", "0", "else", "0", "for", "p", "in", "P", "[", "j", "]", "[", "1", ":", "]", "]", ")", "+", "P", "[", "j", "]", "[", "0", "]", "\n", "maxes", ".", "append", "(", "max", "(", "-", "neg", ",", "pos", ")", "**", "2", ")", "\n", "", "largest", "=", "0", "\n", "lowest", "=", "0", "\n", "matrix", "=", "np", ".", "transpose", "(", "self", ".", "forms", ".", "content", ")", "\n", "for", "cl", "in", "range", "(", "self", ".", "forms", ".", "classes", ")", ":", "\n", "            ", "neg", "=", "sum", "(", "\n", "[", "\n", "(", "\n", "-", "maxes", "[", "j", "]", "*", "matrix", "[", "cl", "]", "[", "j", "]", "if", "matrix", "[", "cl", "]", "[", "j", "]", "<", "0", "else", "0", "\n", ")", "for", "j", "in", "range", "(", "self", ".", "proj", ".", "k", ")", "\n", "]", "\n", ")", "\n", "pos", "=", "sum", "(", "\n", "[", "\n", "(", "\n", "maxes", "[", "j", "]", "*", "matrix", "[", "cl", "]", "[", "j", "]", "if", "matrix", "[", "cl", "]", "[", "j", "]", ">", "0", "else", "0", "\n", ")", "for", "j", "in", "range", "(", "self", ".", "proj", ".", "k", ")", "\n", "]", "\n", ")", "\n", "if", "neg", ">", "lowest", ":", "\n", "                ", "lowest", "=", "neg", "\n", "", "if", "pos", ">", "largest", ":", "\n", "                ", "largest", "=", "pos", "\n", "", "", "return", "(", "-", "lowest", ",", "largest", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.MLModel.get_accuracy": [[340, 354], ["input_data.read_data_sets", "numpy.round", "input_data.read_data_sets.test.labels.astype", "numpy.ones", "range", "print", "numpy.argmax", "models.MLModel.evaluate"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.MLModel.evaluate"], ["", "def", "get_accuracy", "(", "self", ")", ":", "\n", "        ", "assert", "self", ".", "proj", ".", "n", "==", "785", ",", "'get_accuracy only works for mnist'", "\n", "from", "tensorflow", ".", "examples", ".", "tutorials", ".", "mnist", "import", "input_data", "\n", "mnist", "=", "input_data", ".", "read_data_sets", "(", "\"/tmp/data/\"", ")", "\n", "X_test_", "=", "np", ".", "round", "(", "255", "*", "mnist", ".", "test", ".", "images", ")", "\n", "y_test", "=", "mnist", ".", "test", ".", "labels", ".", "astype", "(", "\"int\"", ")", "\n", "X_test", "=", "np", ".", "ones", "(", "(", "10000", ",", "785", ")", ")", "\n", "X_test", "[", ":", ",", "1", ":", "]", "=", "X_test_", "\n", "good", "=", "0", "\n", "for", "i", "in", "range", "(", "10000", ")", ":", "\n", "            ", "good", "+=", "1", "if", "(", "\n", "np", ".", "argmax", "(", "self", ".", "evaluate", "(", "X_test", "[", "i", "]", ")", ")", "==", "y_test", "[", "i", "]", "\n", ")", "else", "0", "\n", "", "print", "(", "'Accuracy: {}%'", ".", "format", "(", "good", "/", "100", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.scheme.ML_DGP.__init__": [[23, 27], ["scheme.ML_DGP.fromFile"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.fromFile"], ["def", "__init__", "(", "self", ",", "source", "=", "''", ")", ":", "\n", "        ", "if", "source", ":", "\n", "            ", "self", ".", "fromFile", "(", "source", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.scheme.ML_DGP.create_": [[28, 35], ["scheme.ML_DGP", "ML_DGP.group.random", "ML_DGP.group.random", "charm.toolbox.pairinggroup.pair"], "methods", ["None"], ["", "", "def", "create_", "(", "group", ")", ":", "\n", "        ", "instance", "=", "ML_DGP", "(", ")", "\n", "instance", ".", "group", "=", "group", "\n", "instance", ".", "g1", "=", "instance", ".", "group", ".", "random", "(", "G1", ")", "\n", "instance", ".", "g2", "=", "instance", ".", "group", ".", "random", "(", "G2", ")", "\n", "instance", ".", "gt", "=", "pair", "(", "instance", ".", "g1", ",", "instance", ".", "g2", ")", "\n", "return", "instance", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.scheme.ML_DGP.get_dlog_base": [[36, 38], ["None"], "methods", ["None"], ["", "def", "get_dlog_base", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "gt", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.scheme.ML_DGP.set_dlog": [[39, 42], ["None"], "methods", ["None"], ["", "def", "set_dlog", "(", "self", ",", "dlog", ")", ":", "\n", "        ", "assert", "dlog", ".", "base", "==", "self", ".", "gt", "\n", "self", ".", "dlog", "=", "dlog", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.scheme.ML_DGP.setup": [[43, 52], ["models.PublicKey", "models.MasterKey", "scheme.ML_DGP.group.random", "scheme.ML_DGP.group.random", "range", "range"], "methods", ["None"], ["", "def", "setup", "(", "self", ",", "vector_length", "=", "1", ")", ":", "\n", "        ", "assert", "vector_length", ">", "0", ",", "'Vector size must be positive.'", "\n", "s", "=", "[", "self", ".", "group", ".", "random", "(", "ZR", ")", "for", "i", "in", "range", "(", "vector_length", "+", "1", ")", "]", "\n", "t", "=", "[", "self", ".", "group", ".", "random", "(", "ZR", ")", "for", "i", "in", "range", "(", "vector_length", "+", "1", ")", "]", "\n", "h1", "=", "[", "self", ".", "g1", "**", "si", "for", "si", "in", "s", "]", "\n", "h2", "=", "[", "self", ".", "g2", "**", "ti", "for", "ti", "in", "t", "]", "\n", "pk", "=", "PublicKey", "(", "self", ".", "group", ",", "h1", ",", "h2", ")", "\n", "msk", "=", "MasterKey", "(", "pk", "=", "pk", ",", "s", "=", "s", ",", "t", "=", "t", ")", "\n", "return", "(", "pk", ",", "msk", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.scheme.ML_DGP.encrypt": [[53, 112], ["scheme.ML_DGP.group.random", "scheme.ML_DGP.group.random", "scheme.ML_DGP.group.random", "scheme.ML_DGP.group.random", "scheme.ML_DGP.group.random", "utils.fast_exp_const_time", "utils.fast_exp_const_time", "utils.fast_exp_const_time", "utils.fast_exp_const_time", "range", "models.EncryptedVector", "left.append", "right.append"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.fast_exp_const_time", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.fast_exp_const_time", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.fast_exp_const_time", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.fast_exp_const_time"], ["", "def", "encrypt", "(", "self", ",", "pk", ",", "vector", ")", ":", "\n", "        ", "assert", "(", "\n", "pk", ".", "n", "==", "vector", ".", "n", "+", "1", "\n", ")", ",", "(", "\n", "'Vector has length {}, key is for length {}.'", ".", "format", "(", "\n", "vector", ".", "n", ",", "\n", "pk", ".", "n", "-", "1", "\n", ")", "\n", ")", "\n", "gamma", "=", "self", ".", "group", ".", "random", "(", "ZR", ")", "\n", "a", "=", "self", ".", "group", ".", "random", "(", "ZR", ")", "\n", "b", "=", "self", ".", "group", ".", "random", "(", "ZR", ")", "\n", "c", "=", "self", ".", "group", ".", "random", "(", "ZR", ")", "\n", "d", "=", "self", ".", "group", ".", "random", "(", "ZR", ")", "\n", "det", "=", "a", "*", "d", "-", "b", "*", "c", "\n", "assert", "det", "!=", "0", "\n", "inv_a", "=", "d", "/", "det", "\n", "inv_b", "=", "-", "b", "/", "det", "\n", "inv_c", "=", "-", "c", "/", "det", "\n", "inv_d", "=", "a", "/", "det", "\n", "\n", "g1_inva", "=", "self", ".", "g1", "**", "inv_a", "\n", "g1_invb", "=", "self", ".", "g1", "**", "inv_b", "\n", "g2_a", "=", "self", ".", "g2", "**", "a", "\n", "g2_c", "=", "self", ".", "g2", "**", "c", "\n", "exp_g1_inva", "=", "fast_exp_const_time", "(", "g1_inva", ",", "vector", ".", "content", ",", "0", ",", "255", ")", "\n", "exp_g1_invb", "=", "fast_exp_const_time", "(", "g1_invb", ",", "vector", ".", "content", ",", "0", ",", "255", ")", "\n", "exp_g2_a", "=", "fast_exp_const_time", "(", "g2_a", ",", "vector", ".", "content", ",", "0", ",", "255", ")", "\n", "exp_g2_c", "=", "fast_exp_const_time", "(", "g2_c", ",", "vector", ".", "content", ",", "0", ",", "255", ")", "\n", "left", "=", "[", "# bias term", "\n", "[", "\n", "g1_inva", "*", "(", "pk", ".", "h1", "[", "0", "]", "**", "(", "gamma", "*", "inv_c", ")", ")", ",", "\n", "g1_invb", "*", "(", "pk", ".", "h1", "[", "0", "]", "**", "(", "gamma", "*", "inv_d", ")", ")", "\n", "]", "\n", "]", "\n", "right", "=", "[", "# bias term", "\n", "[", "\n", "g2_a", "*", "(", "pk", ".", "h2", "[", "0", "]", "**", "(", "-", "b", ")", ")", ",", "\n", "g2_c", "*", "(", "pk", ".", "h2", "[", "0", "]", "**", "(", "-", "d", ")", ")", "\n", "]", "\n", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "pk", ".", "n", ")", ":", "\n", "            ", "left", ".", "append", "(", "\n", "[", "\n", "exp_g1_inva", "[", "i", "-", "1", "]", "*", "(", "pk", ".", "h1", "[", "i", "]", "**", "(", "gamma", "*", "inv_c", ")", ")", ",", "\n", "exp_g1_invb", "[", "i", "-", "1", "]", "*", "(", "pk", ".", "h1", "[", "i", "]", "**", "(", "gamma", "*", "inv_d", ")", ")", "\n", "]", "\n", ")", "\n", "right", ".", "append", "(", "\n", "[", "\n", "exp_g2_a", "[", "i", "-", "1", "]", "*", "(", "pk", ".", "h2", "[", "i", "]", "**", "(", "-", "b", ")", ")", ",", "\n", "exp_g2_c", "[", "i", "-", "1", "]", "*", "(", "pk", ".", "h2", "[", "i", "]", "**", "(", "-", "d", ")", ")", "\n", "]", "\n", ")", "\n", "", "return", "EncryptedVector", "(", "\n", "group", "=", "self", ".", "group", ",", "\n", "simplifier", "=", "self", ".", "g1", "**", "gamma", ",", "\n", "left", "=", "left", ",", "\n", "right", "=", "right", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.scheme.ML_DGP.keygen": [[114, 118], ["models.DecryptionKey", "model.evaluate"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.MLModel.evaluate"], ["", "def", "keygen", "(", "self", ",", "msk", ",", "model", ")", ":", "\n", "        ", "return", "DecryptionKey", "(", "\n", "model", "=", "model", ",", "\n", "skf", "=", "[", "self", ".", "g2", "**", "x", "for", "x", "in", "model", ".", "evaluate", "(", "msk", ")", "]", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.scheme.ML_DGP.decrypt": [[120, 130], ["sk_model.model.evaluate", "list", "map", "charm.toolbox.pairinggroup.pair", "range"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.models.MLModel.evaluate"], ["", "def", "decrypt", "(", "self", ",", "pk", ",", "sk_model", ",", "c", ")", ":", "\n", "        ", "evaluation", "=", "sk_model", ".", "model", ".", "evaluate", "(", "c", ")", "\n", "decrypted", "=", "[", "\n", "evaluation", "[", "i", "]", "*", "pair", "(", "\n", "c", ".", "simplifier", ",", "\n", "sk_model", ".", "skf", "[", "i", "]", "\n", ")", "for", "i", "in", "range", "(", "sk_model", ".", "classes", ")", "\n", "]", "\n", "out", "=", "list", "(", "map", "(", "self", ".", "dlog", ".", "solve", ",", "decrypted", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.scheme.ML_DGP.serialize": [[131, 141], ["super().serialize"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.serialize"], ["", "def", "serialize", "(", "self", ")", ":", "\n", "        ", "dlog", "=", "None", "\n", "d", "=", "self", ".", "__dict__", "\n", "if", "'dlog'", "in", "d", ":", "\n", "            ", "dlog", "=", "self", ".", "dlog", "\n", "del", "d", "[", "'dlog'", "]", "\n", "", "out", "=", "super", "(", "ML_DGP", ",", "self", ")", ".", "serialize", "(", ")", "\n", "if", "dlog", ":", "\n", "            ", "self", ".", "dlog", "=", "dlog", "\n", "", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.serialize": [[23, 31], ["utils.Serializable.__dict__.copy", "charm.core.engine.util.serializeObject"], "methods", ["None"], ["def", "serialize", "(", "self", ")", ":", "\n", "        ", "d", "=", "self", ".", "__dict__", ".", "copy", "(", ")", "\n", "if", "'group'", "in", "d", ":", "\n", "            ", "del", "d", "[", "'group'", "]", "\n", "return", "{", "'param'", ":", "self", ".", "group", ".", "param", ",", "\n", "'rest'", ":", "serializeObject", "(", "d", ",", "self", ".", "group", ")", "}", "\n", "", "else", ":", "\n", "            ", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.deserialize": [[32, 43], ["charm.core.engine.util.deserializeObject.items", "type", "charm.toolbox.pairinggroup.PairingGroup", "charm.core.engine.util.deserializeObject", "setattr"], "methods", ["None"], ["", "", "def", "deserialize", "(", "self", ",", "o", ")", ":", "\n", "        ", "assert", "type", "(", "o", ")", "==", "dict", ",", "'Wrong file format.'", "\n", "if", "'param'", "in", "o", ":", "\n", "            ", "self", ".", "group", "=", "PairingGroup", "(", "o", "[", "'param'", "]", ")", "\n", "assert", "'rest'", "in", "o", ",", "'Wrong file format.'", "\n", "d", "=", "deserializeObject", "(", "o", "[", "'rest'", "]", ",", "self", ".", "group", ")", "\n", "", "else", ":", "\n", "            ", "d", "=", "o", "\n", "", "for", "key", ",", "value", "in", "d", ".", "items", "(", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "key", ",", "value", ")", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.toFile": [[44, 59], ["utils.Serializable.serialize", "json.dumps", "bytes", "zlib.compress", "base64.b64encode", "base64.b64encode.decode", "open", "f.write", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.serialize"], ["", "def", "toFile", "(", "self", ",", "path", ",", "title", ")", ":", "\n", "        ", "serialized", "=", "self", ".", "serialize", "(", ")", "\n", "js", "=", "json", ".", "dumps", "(", "serialized", ",", "default", "=", "to_json", ")", "\n", "by", "=", "bytes", "(", "js", ",", "'utf-8'", ")", "\n", "compressed", "=", "zlib", ".", "compress", "(", "by", ")", "\n", "encoded", "=", "b64encode", "(", "compressed", ")", "\n", "final", "=", "encoded", ".", "decode", "(", "'utf-8'", ")", "\n", "with", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "path", ",", "\n", "'{}.{}'", ".", "format", "(", "title", ",", "self", ".", "ext_", ")", ",", "\n", ")", ",", "\n", "'w'", ",", "\n", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "final", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.fromFile": [[60, 71], ["isinstance", "os.path.isfile", "open", "f.read", "bytes", "base64.b64decode", "zlib.decompress", "zlib.decompress.decode", "json.loads", "utils.Serializable.deserialize"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.deserialize"], ["", "", "def", "fromFile", "(", "self", ",", "source", ")", ":", "\n", "        ", "assert", "isinstance", "(", "source", ",", "str", ")", "\n", "assert", "os", ".", "path", ".", "isfile", "(", "source", ")", "\n", "with", "open", "(", "source", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "final", "=", "f", ".", "read", "(", ")", "\n", "encoded", "=", "bytes", "(", "final", ",", "'utf-8'", ")", "\n", "compressed", "=", "b64decode", "(", "encoded", ")", "\n", "by", "=", "zlib", ".", "decompress", "(", "compressed", ")", "\n", "js", "=", "by", ".", "decode", "(", "'utf-8'", ")", "\n", "serialized", "=", "json", ".", "loads", "(", "js", ",", "object_hook", "=", "from_json", ")", "\n", "return", "self", ".", "deserialize", "(", "serialized", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_array": [[74, 76], ["isinstance"], "function", ["None"], ["", "", "", "def", "is_array", "(", "a", ")", ":", "\n", "    ", "return", "isinstance", "(", "a", ",", "(", "collections", ".", "Sequence", ",", "np", ".", "ndarray", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_scalar": [[78, 82], ["isinstance", "isinstance", "isinstance", "s.is_integer"], "function", ["None"], ["", "def", "is_scalar", "(", "s", ")", ":", "\n", "    ", "return", "(", "isinstance", "(", "s", ",", "int", ")", "or", "\n", "isinstance", "(", "s", ",", "np", ".", "int64", ")", "or", "\n", "(", "isinstance", "(", "s", ",", "float", ")", "and", "s", ".", "is_integer", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.sign": [[86, 88], ["None"], "function", ["None"], ["", "def", "sign", "(", "x", ")", ":", "\n", "    ", "return", "(", "1", ",", "-", "1", ")", "[", "x", "<", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.exp": [[90, 92], ["utils.sign", "abs"], "function", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.sign"], ["", "def", "exp", "(", "g", ",", "x", ")", ":", "\n", "    ", "return", "(", "g", "**", "abs", "(", "x", ")", ")", "**", "sign", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.fast_exp_const_time": [[99, 106], ["utils.exp", "range", "precomp.append"], "function", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.exp"], ["", "def", "fast_exp_const_time", "(", "g", ",", "X", ",", "xmin", "=", "0", ",", "xmax", "=", "255", ")", ":", "\n", "    ", "curr", "=", "exp", "(", "g", ",", "xmin", ")", "\n", "precomp", "=", "[", "curr", "]", "\n", "for", "i", "in", "range", "(", "xmax", "-", "xmin", ")", ":", "\n", "        ", "curr", "*=", "g", "\n", "precomp", ".", "append", "(", "curr", ")", "\n", "", "return", "[", "precomp", "[", "x", "-", "xmin", "]", "for", "x", "in", "X", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.batch_exp": [[110, 130], ["range", "powers.append", "abs", "range", "out.append"], "function", ["None"], ["", "def", "batch_exp", "(", "g", ",", "X", ",", "nbits", ")", ":", "\n", "    ", "one", "=", "g", "**", "0", "\n", "powers", "=", "[", "g", "]", "\n", "curr", "=", "g", "\n", "for", "b", "in", "range", "(", "nbits", "-", "1", ")", ":", "\n", "        ", "curr", "=", "curr", "*", "curr", "\n", "powers", ".", "append", "(", "curr", ")", "\n", "", "out", "=", "[", "]", "\n", "for", "x", "in", "X", ":", "\n", "        ", "bit", "=", "1", "\n", "curr", "=", "one", "\n", "val", "=", "abs", "(", "x", ")", "\n", "for", "b", "in", "range", "(", "nbits", ")", ":", "\n", "            ", "if", "val", "&", "bit", ":", "\n", "                ", "curr", "*=", "powers", "[", "b", "]", "\n", "", "bit", "*=", "2", "\n", "", "if", "x", "<", "0", ":", "\n", "            ", "curr", "=", "1", "/", "curr", "\n", "", "out", ".", "append", "(", "curr", ")", "\n", "", "return", "out", "\n", "", ""]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.make_keys.make_keys": [[7, 17], ["scheme.ML_DGP", "scheme.ML_DGP.setup", "pk.toFile", "msk.toFile"], "function", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.scheme.ML_DGP.setup", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.toFile", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.Serializable.toFile"], ["def", "make_keys", "(", "\n", "vector_length", ",", "\n", "inst", ",", "\n", "name", "=", "'common'", ",", "\n", "path", "=", "''", ",", "\n", ")", ":", "\n", "    ", "scheme", "=", "ML_DGP", "(", "inst", ")", "\n", "pk", ",", "msk", "=", "scheme", ".", "setup", "(", "vector_length", "=", "vector_length", ")", "\n", "pk", ".", "toFile", "(", "'{}/pk'", ".", "format", "(", "path", ")", ",", "'{}_{}'", ".", "format", "(", "name", ",", "vector_length", ")", ")", "\n", "msk", ".", "toFile", "(", "'{}/msk'", ".", "format", "(", "path", ")", ",", "'{}_{}'", ".", "format", "(", "name", ",", "vector_length", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.discretelogarithm.PreCompBabyStepGiantStep.__init__": [[28, 60], ["utils.is_scalar", "utils.is_scalar", "isinstance", "discretelogarithm.PreCompBabyStepGiantStep.get_conn", "discretelogarithm.PreCompBabyStepGiantStep.cursor", "math.floor", "math.ceil", "hash", "discretelogarithm.PreCompBabyStepGiantStep.cursor.execute", "discretelogarithm.PreCompBabyStepGiantStep.commit", "print", "discretelogarithm.PreCompBabyStepGiantStep.cursor.execute", "discretelogarithm.PreCompBabyStepGiantStep.commit"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_scalar", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.is_scalar", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.discretelogarithm.PreCompBabyStepGiantStep.get_conn"], ["def", "__init__", "(", "\n", "self", ",", "\n", "groupObj", "=", "None", ",", "\n", "base", "=", "None", ",", "\n", "minimum", "=", "0", ",", "\n", "maximum", "=", "0", ",", "\n", "step", "=", "0", ",", "\n", ")", ":", "\n", "        ", "assert", "is_scalar", "(", "minimum", ")", "\n", "assert", "is_scalar", "(", "maximum", ")", "\n", "assert", "isinstance", "(", "step", ",", "int", ")", "\n", "assert", "not", "step", "<", "0", "\n", "self", ".", "group", "=", "groupObj", "\n", "self", ".", "base", "=", "base", "\n", "self", ".", "minimum", "=", "math", ".", "floor", "(", "minimum", "/", "step", ")", "*", "(", "step", ")", "\n", "self", ".", "maximum", "=", "math", ".", "ceil", "(", "maximum", "//", "step", ")", "*", "(", "step", ")", "\n", "self", ".", "step", "=", "step", "\n", "\n", "self", ".", "table", "=", "'dlogs{}'", ".", "format", "(", "hash", "(", "self", ".", "base", ")", ")", "\n", "\n", "conn", "=", "self", ".", "get_conn", "(", ")", "\n", "cursor", "=", "conn", ".", "cursor", "(", ")", "\n", "try", ":", "\n", "            ", "cursor", ".", "execute", "(", "\n", "(", "\"create table {} (hash bigint,\"", "\n", "\" log bigint, UNIQUE(hash, log));\"", ")", ".", "format", "(", "self", ".", "table", ")", "\n", ")", "\n", "conn", ".", "commit", "(", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "print", "(", "e", ")", "\n", "cursor", ".", "execute", "(", "'rollback;'", ")", "\n", "conn", ".", "commit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.discretelogarithm.PreCompBabyStepGiantStep.precomp": [[61, 148], ["discretelogarithm.PreCompBabyStepGiantStep.get_conn", "discretelogarithm.PreCompBabyStepGiantStep.cursor", "discretelogarithm.PreCompBabyStepGiantStep.set_session", "utils.exp", "discretelogarithm.PreCompBabyStepGiantStep.cursor.execute", "discretelogarithm.PreCompBabyStepGiantStep.group.random", "range", "discretelogarithm.PreCompBabyStepGiantStep.commit", "discretelogarithm.PreCompBabyStepGiantStep.commit", "discretelogarithm.PreCompBabyStepGiantStep.cursor.execute", "discretelogarithm.PreCompBabyStepGiantStep.commit", "range", "discretelogarithm.PreCompBabyStepGiantStep.cursor.execute", "hash", "discretelogarithm.PreCompBabyStepGiantStep.cursor.execute", "hash", "L.append", "L.append", "discretelogarithm.PreCompBabyStepGiantStep.commit", "print", "print", "print", "int", "range", "str", "round", "round", "round"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.discretelogarithm.PreCompBabyStepGiantStep.get_conn", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.exp"], ["", "", "def", "precomp", "(", "self", ")", ":", "\n", "        ", "conn", "=", "self", ".", "get_conn", "(", ")", "\n", "cursor", "=", "conn", ".", "cursor", "(", ")", "\n", "cursor", ".", "itersize", "=", "10000", "\n", "batch_size", "=", "500", "\n", "conn", ".", "set_session", "(", "autocommit", "=", "False", ")", "\n", "\n", "# Check if table has elements", "\n", "try", ":", "\n", "            ", "cursor", ".", "execute", "(", "\n", "'insert into {}(hash, log) values (1, 1)'", ".", "format", "(", "\n", "self", ".", "table", ",", "\n", ")", "\n", ")", "\n", "conn", ".", "commit", "(", ")", "\n", "", "except", "psycopg2", ".", "IntegrityError", "as", "e", ":", "\n", "            ", "if", "e", ".", "pgcode", "==", "'23505'", ":", "\n", "                ", "print", "(", "\n", "\"Database seems to have already been filled (at least\"", ",", "\n", "\"partially). We do not currently support filling\"", ",", "\n", "\"databases in multiple sessions. If you believe the\"", ",", "\n", "\"database is incomplete, please drop the table and run\"", ",", "\n", "\"precomputation again.\"", "\n", ")", "\n", "return", "\n", "", "else", ":", "\n", "                ", "raise", "e", "\n", "\n", "", "", "i", "=", "1", "\n", "mult", "=", "exp", "(", "self", ".", "base", ",", "self", ".", "step", ")", "\n", "\n", "total", "=", "(", "self", ".", "maximum", "-", "self", ".", "minimum", ")", "//", "self", ".", "step", "+", "1", "\n", "preparation", "=", "(", "\n", "'prepare ins as insert into'", "\n", "' {}(hash, log) values '", ".", "format", "(", "self", ".", "table", ")", "+", "\n", "','", ".", "join", "(", "\n", "[", "\n", "'(${}, ${})'", ".", "format", "(", "\n", "2", "*", "i", "+", "1", ",", "\n", "2", "*", "(", "i", "+", "1", ")", "\n", ")", "for", "i", "in", "range", "(", "batch_size", ")", "\n", "]", "\n", ")", "+", "';'", "\n", ")", "\n", "cursor", ".", "execute", "(", "preparation", ")", "\n", "z", "=", "self", ".", "group", ".", "random", "(", ")", "\n", "one", "=", "z", "/", "z", "\n", "curr", "=", "self", ".", "base", "**", "(", "self", ".", "minimum", "*", "one", ")", "\n", "for", "i", "in", "range", "(", "total", "//", "batch_size", ")", ":", "\n", "            ", "L", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "batch_size", ")", ":", "\n", "                ", "if", "(", "i", "*", "batch_size", "+", "j", ")", "%", "100000", "==", "0", ":", "\n", "                    ", "print", "(", "\n", "'Precomputation step {} out of {}.'", ".", "format", "(", "\n", "i", "*", "batch_size", "+", "j", ",", "\n", "total", "\n", ")", "\n", ")", "\n", "ratio", "=", "(", "i", "*", "batch_size", "+", "j", ")", "/", "int", "(", "total", ")", "\n", "print", "(", "\n", "'|'", "+", "\n", "'='", "*", "(", "round", "(", "40", "*", "ratio", ")", ")", "+", "\n", "' '", "*", "(", "40", "-", "round", "(", "40", "*", "ratio", ")", ")", "+", "\n", "'| {}%'", ".", "format", "(", "round", "(", "ratio", "*", "100", ")", ")", "\n", ")", "\n", "", "h", "=", "hash", "(", "curr", ")", "\n", "L", ".", "append", "(", "h", ")", "\n", "L", ".", "append", "(", "self", ".", "minimum", "+", "self", ".", "step", "*", "(", "i", "*", "batch_size", "+", "j", ")", ")", "\n", "curr", "*=", "mult", "\n", "", "ins", "=", "'execute ins ('", "+", "','", ".", "join", "(", "[", "str", "(", "x", ")", "for", "x", "in", "L", "]", ")", "+", "');'", "\n", "cursor", ".", "execute", "(", "ins", ")", "\n", "if", "(", "i", "*", "batch_size", ")", "%", "1000000", "==", "0", ":", "\n", "                ", "conn", ".", "commit", "(", ")", "\n", "", "", "conn", ".", "commit", "(", ")", "\n", "k", "=", "(", "total", "//", "batch_size", ")", "*", "batch_size", "\n", "while", "k", "<", "total", "+", "1", ":", "\n", "            ", "curr", "*=", "mult", "\n", "h", "=", "hash", "(", "curr", ")", "\n", "cursor", ".", "execute", "(", "\n", "'insert into {}(hash, log) values ({}, {})'", ".", "format", "(", "\n", "self", ".", "table", ",", "\n", "h", ",", "\n", "self", ".", "minimum", "+", "self", ".", "step", "*", "k", "\n", ")", "\n", ")", "\n", "k", "+=", "1", "\n", "", "conn", ".", "commit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.discretelogarithm.PreCompBabyStepGiantStep.get_conn": [[149, 166], ["psycopg2.connect", "psycopg2.connect", "psycopg2.connect.cursor", "psycopg2.connect.cursor.execute", "discretelogarithm.PreCompBabyStepGiantStep.get_conn"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.discretelogarithm.PreCompBabyStepGiantStep.get_conn"], ["", "def", "get_conn", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "psycopg2", ".", "connect", "(", "\n", "dbname", "=", "DATABASE", ",", "\n", "user", "=", "USER", ",", "\n", "host", "=", "'localhost'", ",", "\n", "password", "=", "PASSWORD", "\n", ")", "\n", "", "except", "psycopg2", ".", "OperationalError", "as", "e", ":", "\n", "            ", "conn", "=", "psycopg2", ".", "connect", "(", "\n", "dbname", "=", "'postgres'", ",", "\n", "user", "=", "USER", ",", "\n", "host", "=", "'localhost'", ",", "\n", "password", "=", "PASSWORD", ")", "\n", "cursor", "=", "conn", ".", "cursor", "(", ")", "\n", "cursor", ".", "execute", "(", "\"create database discretelogarithm;\"", ")", "\n", "return", "self", ".", "get_conn", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.discretelogarithm.PreCompBabyStepGiantStep.solve": [[167, 198], ["discretelogarithm.PreCompBabyStepGiantStep.get_conn", "discretelogarithm.PreCompBabyStepGiantStep.cursor", "discretelogarithm.PreCompBabyStepGiantStep.cursor.execute", "range", "print", "type", "type", "hash", "discretelogarithm.PreCompBabyStepGiantStep.cursor.execute", "discretelogarithm.PreCompBabyStepGiantStep.cursor.fetchone", "discretelogarithm.PreCompBabyStepGiantStep.cursor.fetchall", "utils.exp", "utils.exp"], "methods", ["home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.discretelogarithm.PreCompBabyStepGiantStep.get_conn", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.exp", "home.repos.pwc.inspect_result.edufoursans_reading-in-the-dark.core.utils.exp"], ["", "", "def", "solve", "(", "self", ",", "target", ")", ":", "\n", "        ", "assert", "(", "\n", "type", "(", "self", ".", "base", ")", "==", "type", "(", "target", ")", "\n", ")", ",", "(", "\n", "'Element and base are not the same type.'", "\n", ")", "\n", "curr", "=", "target", "\n", "conn", "=", "self", ".", "get_conn", "(", ")", "\n", "cursor", "=", "conn", ".", "cursor", "(", ")", "\n", "cursor", ".", "execute", "(", "\n", "'prepare sel as select log from '", "\n", "'{} where hash=$1'", ".", "format", "(", "self", ".", "table", ")", "\n", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "step", ")", ":", "\n", "            ", "h", "=", "hash", "(", "curr", ")", "\n", "cursor", ".", "execute", "(", "\"execute sel ({})\"", ".", "format", "(", "h", ")", ")", "\n", "line", "=", "cursor", ".", "fetchone", "(", ")", "\n", "if", "not", "line", ":", "\n", "                ", "curr", "*=", "self", ".", "base", "\n", "continue", "\n", "", "[", "first", "]", "=", "line", "\n", "if", "exp", "(", "self", ".", "base", ",", "first", ")", "==", "curr", ":", "\n", "                ", "return", "first", "-", "i", "\n", "", "rest", "=", "cursor", ".", "fetchall", "(", ")", "\n", "for", "c", "in", "rest", ":", "\n", "                ", "if", "exp", "(", "self", ".", "base", ",", "c", ")", "==", "curr", ":", "\n", "                    ", "return", "c", "-", "i", "\n", "", "", "return", "None", "\n", "curr", "*=", "self", ".", "base", "\n", "", "print", "(", "'Aborting discrete logarithm.'", ")", "\n", "return", "None", "\n", "", "", ""]]}