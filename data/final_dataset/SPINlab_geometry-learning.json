{"home.repos.pwc.inspect_result.SPINlab_geometry-learning.prep.ProgressBar.ProgressBar.__init__": [[14, 21], ["time.time.time"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "bar_length", "=", "40", ")", ":", "\n", "        ", "\"\"\"\n        Constructor\n        :param bar_length: length of the bar in characters\n        \"\"\"", "\n", "self", ".", "start_seconds", "=", "time", "(", ")", "\n", "self", ".", "bar_length", "=", "bar_length", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.prep.ProgressBar.ProgressBar.update_progress": [[22, 63], ["isinstance", "round", "divmod", "divmod", "sys.stdout.write", "sys.stdout.flush", "float", "isinstance", "ValueError", "float", "time.time.time", "int", "int", "int", "min", "max"], "methods", ["None"], ["", "def", "update_progress", "(", "self", ",", "progress", ",", "status", "=", "''", ")", ":", "\n", "        ", "\"\"\"\n        update_progress() : Displays or updates a std out progress bar\n\n        The method simply repeats  on the console each time the method is called\n        :param status: Optional status message\n        :param progress: Accepts a float between 0 and 1. Any int will be converted to a float.\n        A value under 0 represents a 'halt'.\n        A value at 1 or bigger represents 100%\n        :return: None\n        \"\"\"", "\n", "\n", "if", "isinstance", "(", "progress", ",", "int", ")", ":", "\n", "            ", "progress", "=", "float", "(", "progress", ")", "\n", "", "if", "not", "isinstance", "(", "progress", ",", "float", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"error: progress must be numeric\"", ")", "\n", "", "if", "progress", "<", "0", ":", "\n", "            ", "progress", "=", "0", "\n", "status", "=", "\"Halt...\\r\\n\"", "\n", "", "if", "progress", ">=", "1", ":", "\n", "            ", "progress", "=", "1", "\n", "status", "=", "\"Done...\\r\\n\"", "\n", "\n", "", "progress_rounded", "=", "\"{:10.2f}\"", ".", "format", "(", "float", "(", "progress", "*", "100", ")", ")", "\n", "elapsed_time", "=", "time", "(", ")", "-", "self", ".", "start_seconds", "\n", "if", "progress", ">", "0", ":", "\n", "            ", "projected_time", "=", "elapsed_time", "/", "progress", "-", "elapsed_time", "\n", "", "else", ":", "\n", "            ", "projected_time", "=", "0", "\n", "\n", "", "block", "=", "round", "(", "self", ".", "bar_length", "*", "min", "(", "progress", ",", "1", ")", ")", "\n", "progress_line", "=", "\"\\U000025B0\"", "*", "(", "max", "(", "0", ",", "block", "-", "1", ")", ")", "+", "\"\\U000025BA\"", "\n", "progress_line", "+=", "\"\\U000025B1\"", "*", "(", "self", ".", "bar_length", "-", "block", ")", "\n", "\n", "hours", ",", "remainder", "=", "divmod", "(", "projected_time", ",", "3600", ")", "\n", "minutes", ",", "seconds", "=", "divmod", "(", "remainder", ",", "60", ")", "\n", "eta", "=", "'{}h{}m{}s'", ".", "format", "(", "int", "(", "hours", ")", ",", "int", "(", "minutes", ")", ",", "int", "(", "seconds", ")", ")", "\n", "\n", "text", "=", "\"\\r\\U0001F680{}\\U0001F3C1 {}% {} {}\"", ".", "format", "(", "progress_line", ",", "progress_rounded", ",", "eta", ",", "status", ")", "\n", "sys", ".", "stdout", ".", "write", "(", "text", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.util.layerToWGS.gdal_error_handler": [[4, 17], ["err_msg.replace.replace", "err_type.get", "print", "print", "print"], "function", ["None"], ["def", "gdal_error_handler", "(", "err_class", ",", "err_num", ",", "err_msg", ")", ":", "\n", "    ", "err_type", "=", "{", "\n", "gdal", ".", "CE_None", ":", "'None'", ",", "\n", "gdal", ".", "CE_Debug", ":", "'Debug'", ",", "\n", "gdal", ".", "CE_Warning", ":", "'Warning'", ",", "\n", "gdal", ".", "CE_Failure", ":", "'Failure'", ",", "\n", "gdal", ".", "CE_Fatal", ":", "'Fatal'", "\n", "}", "\n", "err_msg", "=", "err_msg", ".", "replace", "(", "'\\n'", ",", "' '", ")", "\n", "err_class", "=", "err_type", ".", "get", "(", "err_class", ",", "'None'", ")", "\n", "print", "(", "'Error Number: %s'", "%", "err_num", ")", "\n", "print", "(", "'Error Type: %s'", "%", "err_class", ")", "\n", "print", "(", "'Error Message: %s'", "%", "err_msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.util.layerToWGS.layerToWGS": [[23, 68], ["osgeo.gdal.ogr.GetDriverByName", "gdal.ogr.GetDriverByName.CreateDataSource", "out_driver.CreateDataSource.CreateLayer", "osgeo.osr.SpatialReference", "osr.SpatialReference.ImportFromEPSG", "osgeo.osr.SpatialReference", "osr.SpatialReference.ImportFromEPSG", "osgeo.osr.CoordinateTransformation", "in_layer.GetLayerDefn", "out_dataset.CreateLayer.GetLayerDefn", "range", "in_layer.GetNextFeature", "in_layer.GetLayerDefn.GetFieldCount", "in_layer.GetLayerDefn.GetFieldDefn", "out_dataset.CreateLayer.CreateField", "in_layer.GetNextFeature.GetGeometryRef", "in_feature.GetGeometryRef.Transform", "in_layer.GetNextFeature.Clone", "in_feature.Clone.SetGeometry", "out_dataset.CreateLayer.CreateFeature", "in_layer.GetNextFeature", "in_layer.GetGeomType"], "function", ["None"], ["def", "layerToWGS", "(", "in_layer", ")", ":", "\n", "    ", "out_driver", "=", "gdal", ".", "ogr", ".", "GetDriverByName", "(", "'MEMORY'", ")", "\n", "out_dataset", "=", "out_driver", ".", "CreateDataSource", "(", "'Output datasource'", ")", "\n", "out_layer", "=", "out_dataset", ".", "CreateLayer", "(", "'Gebouw'", ",", "geom_type", "=", "in_layer", ".", "GetGeomType", "(", ")", ")", "\n", "\n", "# input SpatialReference", "\n", "in_spatial_ref", "=", "osr", ".", "SpatialReference", "(", ")", "\n", "in_spatial_ref", ".", "ImportFromEPSG", "(", "28992", ")", "\n", "\n", "# output SpatialReference", "\n", "out_spatial_ref", "=", "osr", ".", "SpatialReference", "(", ")", "\n", "out_spatial_ref", ".", "ImportFromEPSG", "(", "4326", ")", "\n", "\n", "# create the CoordinateTransformation", "\n", "coord_trans", "=", "osr", ".", "CoordinateTransformation", "(", "in_spatial_ref", ",", "out_spatial_ref", ")", "\n", "\n", "in_layer_defn", "=", "in_layer", ".", "GetLayerDefn", "(", ")", "\n", "# get the output layer's feature definition", "\n", "out_layer_defn", "=", "out_layer", ".", "GetLayerDefn", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "in_layer_defn", ".", "GetFieldCount", "(", ")", ")", ":", "\n", "        ", "field_defn", "=", "in_layer_defn", ".", "GetFieldDefn", "(", "i", ")", "\n", "out_layer", ".", "CreateField", "(", "field_defn", ")", "\n", "\n", "# loop through the input features", "\n", "", "in_feature", "=", "in_layer", ".", "GetNextFeature", "(", ")", "\n", "while", "in_feature", ":", "\n", "# get the input geometry", "\n", "        ", "geometry", "=", "in_feature", ".", "GetGeometryRef", "(", ")", "\n", "# reproject the geometry", "\n", "geometry", ".", "Transform", "(", "coord_trans", ")", "\n", "# create a new feature", "\n", "out_feature", "=", "in_feature", ".", "Clone", "(", ")", "\n", "# set the geometry and attribute", "\n", "out_feature", ".", "SetGeometry", "(", "geometry", ")", "\n", "# out_feature.SetFieldsFrom(in_feature)", "\n", "# for i in range(0, out_layer_defn.GetFieldCount()):", "\n", "# out_feature.SetField(out_layer_defn.GetFieldDefn(i).GetNameRef(), in_feature.GetField(i))", "\n", "# add the feature to the layer", "\n", "out_layer", ".", "CreateFeature", "(", "out_feature", ")", "\n", "# dereference the features and get the next input feature", "\n", "out_feature", "=", "None", "\n", "in_feature", "=", "in_layer", ".", "GetNextFeature", "(", ")", "\n", "\n", "", "return", "out_layer", "\n", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.__init__": [[5, 7], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "num_components", ")", ":", "\n", "        ", "self", ".", "num_components", "=", "num_components", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.softmax": [[8, 12], ["numpy.exp", "numpy.sum", "numpy.exp"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "softmax", "(", "x", ")", ":", "\n", "        ", "\"\"\"Compute softmax values for each sets of scores in x.\"\"\"", "\n", "return", "np", ".", "exp", "(", "x", ")", "/", "np", ".", "sum", "(", "np", ".", "exp", "(", "x", ")", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon": [[13, 16], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "epsilon", "(", ")", ":", "\n", "        ", "return", "1e-16", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.geom_gaussian_mixture_loss": [[17, 38], ["numpy.reshape", "np_gmm_loss.GaussianMixtureLoss.softmax", "numpy.reshape", "numpy.sum", "topoml_util.gaussian_loss.r4_bivariate_gaussian", "numpy.mean", "numpy.log", "np_gmm_loss.GaussianMixtureLoss.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "geom_gaussian_mixture_loss", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "# loss fn based on eq #26 of http://arxiv.org/abs/1308.0850.", "\n", "        ", "(", "data_points", ",", "points", ",", "features", ")", "=", "y_pred", ".", "shape", "\n", "geom_type_index", "=", "6", "*", "self", ".", "num_components", "# Calculate offset from parameters times components", "\n", "render_index", "=", "geom_type_index", "+", "8", "\n", "pi_index", "=", "5", "\n", "\n", "predicted_components", "=", "np", ".", "reshape", "(", "y_pred", "[", ":", "geom_type_index", "]", ",", "(", "-", "1", ",", "points", ".", "value", ",", "self", ".", "num_components", ",", "6", ")", ")", "\n", "pi", "=", "self", ".", "softmax", "(", "predicted_components", "[", ":", ",", ":", ",", ":", ",", "pi_index", "]", ")", "\n", "\n", "true_components", "=", "np", ".", "reshape", "(", "y_true", "[", ":", "geom_type_index", "]", ",", "(", "-", "1", ",", "points", ".", "value", ",", "self", ".", "num_components", ",", "6", ")", ")", "\n", "\n", "gmm", "=", "r4_bivariate_gaussian", "(", "true_components", ",", "predicted_components", ")", "*", "pi", "\n", "gmm_loss", "=", "np", ".", "sum", "(", "-", "np", ".", "log", "(", "gmm", "+", "self", ".", "epsilon", "(", ")", ")", ")", "\n", "\n", "# Zero out loss terms beyond N_s, the last actual stroke", "\n", "render", "=", "1", "-", "np", ".", "mean", "(", "y_pred", "[", ":", ",", ":", ",", "render_index", ":", "render_index", "+", "2", "]", ")", "# RENDER and STOP values", "\n", "\n", "gmm_loss", "=", "gmm_loss", "*", "render", "\n", "\n", "return", "gmm_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GaussianMixtureLoss.GaussianMixtureLoss.__init__": [[8, 11], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "num_components", ",", "num_points", ")", ":", "\n", "        ", "self", ".", "num_points", "=", "num_points", "\n", "self", ".", "num_components", "=", "num_components", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GaussianMixtureLoss.GaussianMixtureLoss.geom_gaussian_mixture_loss": [[12, 51], ["keras.backend.reshape", "keras.backend.reshape", "keras.backend.softmax", "keras.backend.sum", "keras.backend.softmax", "keras.backend.categorical_crossentropy", "keras.backend.categorical_crossentropy", "tuple", "topoml_util.gaussian_loss.bivariate_gaussian", "keras.backend.softmax", "keras.backend.softmax", "keras.backend.softmax", "keras.backend.softmax", "keras.backend.log", "keras.backend.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "geom_gaussian_mixture_loss", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "        ", "\"\"\"\n        Calculates a loss from a rank 3 sequence, representing a self.num_components * 6 slice (the mixture components)\n        plus one-hot encoded sequences of geometry type (8) and render/stop action type (3)\n        :param y_true: rank 3 of shape(records, points, true_point_features >= 17) truth values tensor\n        :param y_pred: rank 3 of shape(records, points, pred_point_features >= 17) predicted values tensor\n        :return: a summed mixture loss and categorical cross entropy losses for the geometry type and stop bits\n        \"\"\"", "\n", "# loss fn based on eq #26 of http://arxiv.org/abs/1308.0850.", "\n", "# Reshape to one target component to be broadcasted over self.num_components", "\n", "true_coordinates", "=", "y_true", "[", "...", ",", ":", "2", "]", "\n", "# It would be nice to be able to do", "\n", "# shape = [*y_true.shape[:-1], 1, 2]", "\n", "shape", "=", "[", "-", "1", ",", "self", ".", "num_points", ",", "1", ",", "2", "]", "\n", "true_coordinates", "=", "K", ".", "reshape", "(", "true_coordinates", ",", "tuple", "(", "shape", ")", ")", "\n", "\n", "y_pred_gmm_components", "=", "y_pred", "[", "...", ",", ":", "-", "ONE_HOT_LEN", "]", "\n", "predicted_components", "=", "K", ".", "reshape", "(", "\n", "y_pred_gmm_components", ",", "\n", "# (*y_pred.shape[:-1], -1, 6))  # This would be nice", "\n", "(", "-", "1", ",", "self", ".", "num_points", ",", "self", ".", "num_components", ",", "6", ")", ")", "\n", "\n", "pi_index", "=", "5", "# mixture component weight", "\n", "pi_weights", "=", "K", ".", "softmax", "(", "predicted_components", "[", "...", ",", "pi_index", "]", ")", "\n", "gmm", "=", "bivariate_gaussian", "(", "true_coordinates", ",", "predicted_components", ")", "*", "pi_weights", "\n", "gmm_loss", "=", "K", ".", "sum", "(", "-", "K", ".", "log", "(", "gmm", "+", "K", ".", "epsilon", "(", ")", ")", ")", "\n", "\n", "render_action", "=", "K", ".", "softmax", "(", "y_true", "[", "...", ",", "-", "RENDER_LEN", ":", "]", ")", "\n", "neg_full_stop_chance", "=", "1", "-", "render_action", "[", "...", ",", "2", "]", "# 1 minus the chance of full stop", "\n", "gmm_loss", "=", "gmm_loss", "*", "neg_full_stop_chance", "\n", "\n", "geom_type_error", "=", "K", ".", "categorical_crossentropy", "(", "\n", "K", ".", "softmax", "(", "y_true", "[", "...", ",", "-", "(", "GEOM_TYPE_LEN", "+", "RENDER_LEN", "-", "1", ")", ":", "-", "RENDER_LEN", "]", ")", ",", "\n", "K", ".", "softmax", "(", "y_pred", "[", "...", ",", "-", "(", "GEOM_TYPE_LEN", "+", "RENDER_LEN", "-", "1", ")", ":", "-", "RENDER_LEN", "]", ")", ")", "\n", "render_error", "=", "K", ".", "categorical_crossentropy", "(", "\n", "K", ".", "softmax", "(", "y_true", "[", "...", ",", "-", "RENDER_LEN", ":", "]", ")", ",", "\n", "K", ".", "softmax", "(", "y_pred", "[", "...", ",", "-", "RENDER_LEN", ":", "]", ")", ")", "\n", "\n", "return", "gmm_loss", "+", "geom_type_error", "+", "render_error", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GaussianMixtureLoss.GaussianMixtureLoss.univariate_gmm_loss": [[52, 74], ["keras.backend.reshape", "keras.backend.softmax", "print", "topoml_util.gaussian_loss.univariate_gaussian", "keras.backend.log", "keras.backend.sum", "keras.backend.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.univariate_gaussian", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "univariate_gmm_loss", "(", "self", ",", "true", ",", "pred", ")", ":", "\n", "        ", "\"\"\"\n        A simple loss function for rank 3 single gaussian mixture models\n        :param true: truth values tensor\n        :param pred: prediction values tensor\n        :return: loss values tensor\n        \"\"\"", "\n", "if", "not", "true", ".", "shape", "==", "pred", ".", "shape", ":", "\n", "            ", "print", "(", "\n", "'Warning: truth'", ",", "true", ".", "shape", ",", "'and prediction tensors'", ",", "pred", ".", "shape", ",", "'do not have the same shape. The '", "\n", "'outcome of the loss function may be unpredictable.'", ")", "\n", "\n", "# true_components = K.reshape(true, (-1, self.num_components, 3))", "\n", "# TODO: make reshape op rank agnostic", "\n", "", "predicted_components", "=", "K", ".", "reshape", "(", "pred", ",", "(", "-", "1", ",", "self", ".", "num_components", ",", "3", ")", ")", "\n", "\n", "pi_index", "=", "2", "\n", "pi_weights", "=", "K", ".", "softmax", "(", "pred", "[", "...", ",", "pi_index", "]", ")", "\n", "gmm", "=", "univariate_gaussian", "(", "true", ",", "predicted_components", ")", "*", "pi_weights", "\n", "gmm_loss", "=", "-", "K", ".", "log", "(", "K", ".", "sum", "(", "gmm", "+", "K", ".", "epsilon", "(", ")", ")", ")", "\n", "\n", "return", "gmm_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_fourier_descriptors.TestFourierDescriptors.test_same_descriptors": [[7, 13], ["pyefd.elliptic_fourier_descriptors", "pyefd.elliptic_fourier_descriptors", "numpy.testing.assert_array_almost_equal"], "methods", ["None"], ["    ", "def", "test_same_descriptors", "(", "self", ")", ":", "\n", "        ", "square1", "=", "[", "[", "0", ",", "0", "]", ",", "[", "1", ",", "0", "]", ",", "[", "1", ",", "0.5", "]", ",", "[", "1", ",", "1", "]", ",", "[", "0", ",", "1", "]", ",", "[", "0", ",", "0", "]", "]", "\n", "square2", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0.5", ",", "0", "]", ",", "[", "1", ",", "0", "]", ",", "[", "1", ",", "1", "]", ",", "[", "0", ",", "1", "]", ",", "[", "0", ",", "0", "]", "]", "\n", "descriptors1", "=", "elliptic_fourier_descriptors", "(", "square1", ")", "\n", "descriptors2", "=", "elliptic_fourier_descriptors", "(", "square2", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "descriptors1", ",", "descriptors2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_fourier_descriptors.TestFourierDescriptors.test_different_descriptors": [[14, 24], ["pyefd.elliptic_fourier_descriptors", "pyefd.elliptic_fourier_descriptors", "numpy.append", "numpy.testing.assert_array_almost_equal", "test_fourier_descriptors.TestFourierDescriptors.assertEqual"], "methods", ["None"], ["", "def", "test_different_descriptors", "(", "self", ")", ":", "\n", "        ", "square1", "=", "[", "[", "0", ",", "0", "]", ",", "[", "1", ",", "0", "]", ",", "[", "1", ",", "0.5", "]", ",", "[", "1", ",", "1", "]", ",", "[", "0", ",", "1", "]", ",", "[", "0", ",", "0", "]", "]", "\n", "square2", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0.5", ",", "0", "]", ",", "[", "1", ",", "0", "]", ",", "[", "200", ",", "300", "]", ",", "[", "0", ",", "1", "]", ",", "[", "0", ",", "0", "]", "]", "\n", "descriptors1", "=", "elliptic_fourier_descriptors", "(", "square1", ")", "\n", "descriptors2", "=", "elliptic_fourier_descriptors", "(", "square2", ")", "\n", "coeffs", "=", "np", ".", "append", "(", "descriptors1", ",", "descriptors2", ",", "axis", "=", "0", ")", "\n", "try", ":", "\n", "            ", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "descriptors1", ",", "descriptors2", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "self", ".", "assertEqual", "(", "'Arrays are not almost equal to 6 decimals'", ",", "e", ".", "args", "[", "0", "]", "[", "1", ":", "42", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_fourier_descriptors.TestFourierDescriptors.test_normalized_descriptors": [[25, 33], ["pyefd.elliptic_fourier_descriptors", "pyefd.elliptic_fourier_descriptors", "numpy.testing.assert_array_almost_equal", "test_fourier_descriptors.TestFourierDescriptors.assertEqual"], "methods", ["None"], ["", "", "def", "test_normalized_descriptors", "(", "self", ")", ":", "\n", "        ", "square1", "=", "[", "[", "0", ",", "0", "]", ",", "[", "1", ",", "0", "]", ",", "[", "1", ",", "0.5", "]", ",", "[", "1", ",", "1", "]", ",", "[", "0", ",", "1", "]", ",", "[", "0", ",", "0", "]", "]", "\n", "descriptors1", "=", "elliptic_fourier_descriptors", "(", "square1", ",", "normalize", "=", "True", ")", "\n", "descriptors2", "=", "elliptic_fourier_descriptors", "(", "square1", ")", "\n", "try", ":", "\n", "            ", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "descriptors1", ",", "descriptors2", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "self", ".", "assertEqual", "(", "'Arrays are not almost equal to 6 decimals'", ",", "e", ".", "args", "[", "0", "]", "[", "1", ":", "42", "]", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGeomLossFunction.test_zero_loss": [[13, 18], ["numpy.array", "numpy.array", "gaussian_loss.geom_gaussian_loss().eval", "test_geom_loss.TestGeomLossFunction.assertEqual", "gaussian_loss.geom_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss"], ["    ", "def", "test_zero_loss", "(", "self", ")", ":", "\n", "        ", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "0", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "0", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "geom_gaussian_loss", "(", "tensor1", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertEqual", "(", "loss", ",", "1.87002731", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGeomLossFunction.test_geom_type_loss": [[19, 25], ["numpy.array", "numpy.array", "keras.backend.print_tensor", "gaussian_loss.geom_gaussian_loss().eval", "test_geom_loss.TestGeomLossFunction.assertEqual", "gaussian_loss.geom_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss"], ["", "def", "test_geom_type_loss", "(", "self", ")", ":", "\n", "        ", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "K", ".", "print_tensor", "(", "tensor1", ")", "\n", "loss", "=", "geom_gaussian_loss", "(", "tensor1", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertEqual", "(", "loss", ",", "3.26972228", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGeomLossFunction.test_geom_type_and_render_op_loss": [[26, 31], ["numpy.array", "numpy.array", "gaussian_loss.geom_gaussian_loss().eval", "test_geom_loss.TestGeomLossFunction.assertEqual", "gaussian_loss.geom_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss"], ["", "def", "test_geom_type_and_render_op_loss", "(", "self", ")", ":", "\n", "        ", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "geom_gaussian_loss", "(", "tensor1", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertEqual", "(", "loss", ",", "3.51061315", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGeomLossFunction.test_geom_one_coordinate_loss": [[32, 37], ["numpy.array", "numpy.array", "gaussian_loss.geom_gaussian_loss().eval", "test_geom_loss.TestGeomLossFunction.assertEqual", "gaussian_loss.geom_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss"], ["", "def", "test_geom_one_coordinate_loss", "(", "self", ")", ":", "\n", "        ", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "3", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "geom_gaussian_loss", "(", "tensor1", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertEqual", "(", "loss", ",", "3.67805383", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGeomLossFunction.test_geom_double_coordinate_loss": [[38, 43], ["numpy.array", "numpy.array", "gaussian_loss.geom_gaussian_loss().eval", "test_geom_loss.TestGeomLossFunction.assertEqual", "gaussian_loss.geom_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss"], ["", "def", "test_geom_double_coordinate_loss", "(", "self", ")", ":", "\n", "        ", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "geom_gaussian_loss", "(", "tensor1", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "1261.17805383", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian2dLoss.test_2d_gaussian_zeros": [[46, 51], ["numpy.array", "numpy.array", "gaussian_loss.bivariate_gaussian_loss().eval", "test_geom_loss.TestGaussian2dLoss.assertAlmostEqual", "gaussian_loss.bivariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss"], ["    ", "def", "test_2d_gaussian_zeros", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "bivariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "1.1048509233685306", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian2dLoss.test_2d_gaussian_small_mu_diff": [[52, 57], ["numpy.array", "numpy.array", "gaussian_loss.bivariate_gaussian_loss().eval", "test_geom_loss.TestGaussian2dLoss.assertAlmostEqual", "gaussian_loss.bivariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss"], ["", "def", "test_2d_gaussian_small_mu_diff", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "5", "+", "1e-6", ",", "52", "+", "1e-6", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "bivariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "1.1048509233706119", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian2dLoss.test_2d_gaussian_small_sigma_diff": [[58, 63], ["numpy.array", "numpy.array", "gaussian_loss.bivariate_gaussian_loss().eval", "test_geom_loss.TestGaussian2dLoss.assertAlmostEqual", "gaussian_loss.bivariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss"], ["", "def", "test_2d_gaussian_small_sigma_diff", "(", "self", ")", ":", "\n", "        ", "tensor_train", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor_predict", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", ",", "1e-6", ",", "1e-6", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "bivariate_gaussian_loss", "(", "tensor_train", ",", "tensor_predict", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "1.1048523660629765", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian2dLoss.test_2d_gaussian_mu_ones": [[64, 69], ["numpy.array", "numpy.array", "gaussian_loss.bivariate_gaussian_loss().eval", "test_geom_loss.TestGaussian2dLoss.assertAlmostEqual", "gaussian_loss.bivariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss"], ["", "def", "test_2d_gaussian_mu_ones", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "1", ",", "1", ",", "1", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "bivariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "2.3829037437816121", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian2dLoss.test_2d_gaussian_mu_minus_ones": [[70, 75], ["numpy.array", "numpy.array", "gaussian_loss.bivariate_gaussian_loss().eval", "test_geom_loss.TestGaussian2dLoss.assertAlmostEqual", "gaussian_loss.bivariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss"], ["", "def", "test_2d_gaussian_mu_minus_ones", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "1", ",", "-", "1", ",", "-", "1", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "bivariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "2.3829037437816121", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian2dLoss.test_2d_gaussian_ones": [[76, 81], ["numpy.array", "numpy.array", "gaussian_loss.bivariate_gaussian_loss().eval", "test_geom_loss.TestGaussian2dLoss.assertAlmostEqual", "gaussian_loss.bivariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss"], ["", "def", "test_2d_gaussian_ones", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "1", ",", "1", ",", "1", ",", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "bivariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "1.9491232946784192", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian2dLoss.test_2d_gaussian_rho_one": [[82, 87], ["numpy.array", "numpy.array", "gaussian_loss.bivariate_gaussian_loss().eval", "test_geom_loss.TestGaussian2dLoss.assertAlmostEqual", "gaussian_loss.bivariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss"], ["", "def", "test_2d_gaussian_rho_one", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "bivariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "1.9491232946784192", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian2dLoss.test_2d_gaussian_rho_minus_one": [[88, 93], ["numpy.array", "numpy.array", "gaussian_loss.bivariate_gaussian_loss().eval", "test_geom_loss.TestGaussian2dLoss.assertAlmostEqual", "gaussian_loss.bivariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss"], ["", "def", "test_2d_gaussian_rho_minus_one", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "-", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "bivariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "1.9491232946784192", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian2dLoss.test_2d_gaussian_rho_two": [[94, 99], ["numpy.array", "numpy.array", "gaussian_loss.bivariate_gaussian_loss().eval", "test_geom_loss.TestGaussian2dLoss.assertAlmostEqual", "gaussian_loss.bivariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss"], ["", "def", "test_2d_gaussian_rho_two", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "2", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "bivariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "1.9491232946784192", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian2dLoss.test_2d_gaussian_rho_minus_two": [[100, 105], ["numpy.array", "numpy.array", "gaussian_loss.bivariate_gaussian_loss().eval", "test_geom_loss.TestGaussian2dLoss.assertAlmostEqual", "gaussian_loss.bivariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss"], ["", "def", "test_2d_gaussian_rho_minus_two", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "-", "2", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "bivariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "1.9491232946784192", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian2dLoss.test_2d_gaussian_big_diff": [[106, 111], ["numpy.array", "numpy.array", "gaussian_loss.bivariate_gaussian_loss().eval", "test_geom_loss.TestGaussian2dLoss.assertAlmostEqual", "gaussian_loss.bivariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss"], ["", "def", "test_2d_gaussian_big_diff", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "bivariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "16.11809565095832", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian2dLoss.test_2d_gaussian_really_big_diff": [[112, 117], ["numpy.array", "numpy.array", "gaussian_loss.bivariate_gaussian_loss().eval", "test_geom_loss.TestGaussian2dLoss.assertAlmostEqual", "gaussian_loss.bivariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss"], ["", "def", "test_2d_gaussian_really_big_diff", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "0", ",", "0", ",", "3", ",", "4", ",", "5", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "bivariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "16.11809565095832", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian2dLoss.test_2d_gaussian_max_neg_rho": [[118, 124], ["numpy.array", "numpy.array", "gaussian_loss.bivariate_gaussian_loss().eval", "test_geom_loss.TestGaussian2dLoss.assertAlmostEqual", "gaussian_loss.bivariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss"], ["", "def", "test_2d_gaussian_max_neg_rho", "(", "self", ")", ":", "\n", "        ", "min_rho", "=", "-", "19.06", "# This is about the limit of rho before geom_gaussian_loss returns NaN", "\n", "target", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", ",", "-", "1", ",", "-", "1", ",", "min_rho", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "bivariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "-", "18.505382378927028", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian2dLoss.test_2d_guassian_relative_loss": [[125, 141], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "gaussian_loss.bivariate_gaussian_loss().eval", "gaussian_loss.bivariate_gaussian_loss().eval", "gaussian_loss.bivariate_gaussian_loss().eval", "gaussian_loss.bivariate_gaussian_loss().eval", "gaussian_loss.bivariate_gaussian_loss().eval", "test_geom_loss.TestGaussian2dLoss.assertLess", "test_geom_loss.TestGaussian2dLoss.assertLess", "test_geom_loss.TestGaussian2dLoss.assertEqual", "test_geom_loss.TestGaussian2dLoss.assertLess", "gaussian_loss.bivariate_gaussian_loss", "gaussian_loss.bivariate_gaussian_loss", "gaussian_loss.bivariate_gaussian_loss", "gaussian_loss.bivariate_gaussian_loss", "gaussian_loss.bivariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss"], ["", "def", "test_2d_guassian_relative_loss", "(", "self", ")", ":", "\n", "        ", "tensor0", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "1", ",", "1", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor3", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "1", ",", "1", ",", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor4", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor5", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "-", "1", ",", "-", "1", ",", "4", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss1", "=", "bivariate_gaussian_loss", "(", "tensor0", ",", "tensor1", ")", ".", "eval", "(", ")", "\n", "loss2", "=", "bivariate_gaussian_loss", "(", "tensor0", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "loss3", "=", "bivariate_gaussian_loss", "(", "tensor2", ",", "tensor3", ")", ".", "eval", "(", ")", "\n", "loss4", "=", "bivariate_gaussian_loss", "(", "tensor0", ",", "tensor4", ")", ".", "eval", "(", ")", "\n", "loss4", "=", "bivariate_gaussian_loss", "(", "tensor0", ",", "tensor4", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertLess", "(", "loss1", ",", "loss2", ")", "\n", "self", ".", "assertLess", "(", "loss2", ",", "loss3", ")", "\n", "self", ".", "assertEqual", "(", "loss2", ",", "loss3", ")", "\n", "self", ".", "assertLess", "(", "loss1", ",", "loss3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGeomGaussianLoss.test_zero_loss": [[144, 150], ["numpy.array", "numpy.array", "gaussian_loss.geom_gaussian_loss().eval", "test_geom_loss.TestGeomGaussianLoss.assertAlmostEqual", "gaussian_loss.geom_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss"], ["    ", "def", "test_zero_loss", "(", "self", ")", ":", "\n", "        ", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", ",", "0", ",", "0", ",", "0", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", ",", "0", ",", "0", ",", "0", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "geom_gaussian_loss", "(", "tensor1", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "3.7079037516725526", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGeomGaussianLoss.test_small_mu_loss": [[151, 157], ["numpy.array", "numpy.array", "gaussian_loss.geom_gaussian_loss().eval", "test_geom_loss.TestGeomGaussianLoss.assertAlmostEqual", "gaussian_loss.geom_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss"], ["", "def", "test_small_mu_loss", "(", "self", ")", ":", "\n", "        ", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", ",", "0", ",", "0", ",", "0", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "5.01", ",", "52.01", ",", "0", ",", "0", ",", "0", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "geom_gaussian_loss", "(", "tensor1", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "3.7080037516097173", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGeomGaussianLoss.test_geom_type_loss": [[158, 163], ["numpy.array", "numpy.array", "gaussian_loss.geom_gaussian_loss().eval", "test_geom_loss.TestGeomGaussianLoss.assertEqual", "gaussian_loss.geom_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss"], ["", "def", "test_geom_type_loss", "(", "self", ")", ":", "\n", "        ", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "geom_gaussian_loss", "(", "tensor1", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "6.6738155045999878", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGeomGaussianLoss.test_geom_type_and_render_op_loss": [[164, 169], ["numpy.array", "numpy.array", "gaussian_loss.geom_gaussian_loss().eval", "test_geom_loss.TestGeomGaussianLoss.assertEqual", "gaussian_loss.geom_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss"], ["", "def", "test_geom_type_and_render_op_loss", "(", "self", ")", ":", "\n", "        ", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "geom_gaussian_loss", "(", "tensor1", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "6.9147063722468438", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGeomGaussianLoss.test_geom_one_coordinate_loss": [[170, 175], ["numpy.array", "numpy.array", "gaussian_loss.geom_gaussian_loss().eval", "test_geom_loss.TestGeomGaussianLoss.assertAlmostEqual", "gaussian_loss.geom_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss"], ["", "def", "test_geom_one_coordinate_loss", "(", "self", ")", ":", "\n", "        ", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "3", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "geom_gaussian_loss", "(", "tensor1", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "6.7432698072295878", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGeomGaussianLoss.test_geom_big_coordinate_loss": [[176, 181], ["numpy.array", "numpy.array", "gaussian_loss.geom_gaussian_loss().eval", "test_geom_loss.TestGeomGaussianLoss.assertAlmostEqual", "gaussian_loss.geom_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss"], ["", "def", "test_geom_big_coordinate_loss", "(", "self", ")", ":", "\n", "        ", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "geom_gaussian_loss", "(", "tensor1", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "19.296149", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGeomGaussianLoss.test_geom_big_inverted_coordinate_loss": [[182, 187], ["numpy.array", "numpy.array", "gaussian_loss.geom_gaussian_loss().eval", "test_geom_loss.TestGeomGaussianLoss.assertAlmostEqual", "gaussian_loss.geom_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss"], ["", "def", "test_geom_big_inverted_coordinate_loss", "(", "self", ")", ":", "\n", "        ", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "-", "0.000369381", ",", "-", "0.000945276", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "geom_gaussian_loss", "(", "tensor1", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "19.296149481306266", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGeomGaussianLoss.test_geom_sigma_and_rho_loss": [[188, 193], ["numpy.array", "numpy.array", "gaussian_loss.geom_gaussian_loss().eval", "test_geom_loss.TestGeomGaussianLoss.assertAlmostEqual", "gaussian_loss.geom_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss"], ["", "def", "test_geom_sigma_and_rho_loss", "(", "self", ")", ":", "\n", "        ", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "geom_gaussian_loss", "(", "tensor1", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "6.582147", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGeomGaussianLoss.test_rho_diff_limit": [[194, 200], ["numpy.array", "numpy.array", "gaussian_loss.geom_gaussian_loss().eval", "test_geom_loss.TestGeomGaussianLoss.assertAlmostEqual", "gaussian_loss.geom_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss"], ["", "def", "test_rho_diff_limit", "(", "self", ")", ":", "\n", "        ", "min_rho", "=", "-", "19.06", "# This is about the limit of rho before geom_gaussian_loss returns NaN", "\n", "tensor1", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor2", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", ",", "0", ",", "0", ",", "min_rho", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "geom_gaussian_loss", "(", "tensor1", ",", "tensor2", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "-", "13.005895797801298", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian1d.test_zero_loss": [[203, 208], ["numpy.array", "numpy.array", "gaussian_loss.univariate_gaussian_loss().eval", "test_geom_loss.TestGaussian1d.assertAlmostEqual", "gaussian_loss.univariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.univariate_gaussian_loss"], ["    ", "def", "test_zero_loss", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1.", ",", "0.", "]", "]", "]", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1.", ",", "0.", "]", "]", "]", ")", "\n", "loss", "=", "univariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", ",", "0", "]", ",", "0.73568186422336956", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian1d.test_one_mu_loss": [[209, 214], ["numpy.array", "numpy.array", "gaussian_loss.univariate_gaussian_loss().eval", "test_geom_loss.TestGaussian1d.assertAlmostEqual", "gaussian_loss.univariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.univariate_gaussian_loss"], ["", "def", "test_one_mu_loss", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1.", ",", "0.", "]", "]", "]", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "0.", ",", "0.", "]", "]", "]", ")", "\n", "loss", "=", "univariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", ",", "0", "]", ",", "0.90219415240769696", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian1d.test_minus_one_sigma_loss": [[215, 220], ["numpy.array", "numpy.array", "gaussian_loss.univariate_gaussian_loss().eval", "test_geom_loss.TestGaussian1d.assertAlmostEqual", "gaussian_loss.univariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.univariate_gaussian_loss"], ["", "def", "test_minus_one_sigma_loss", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1.", ",", "0.", "]", "]", "]", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1.", ",", "-", "1.", "]", "]", "]", ")", "\n", "loss", "=", "univariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", ",", "0", "]", ",", "1.0551951862023454", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian1d.test_minus_two_sigma_loss": [[221, 226], ["numpy.array", "numpy.array", "gaussian_loss.univariate_gaussian_loss().eval", "test_geom_loss.TestGaussian1d.assertAlmostEqual", "gaussian_loss.univariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.univariate_gaussian_loss"], ["", "def", "test_minus_two_sigma_loss", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "1.", ",", "0.", "]", "]", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "1.", ",", "-", "2.", "]", "]", ")", "\n", "loss", "=", "univariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "1.6143488206244256", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_loss.TestGaussian1d.test_big_mu_sigma_diff": [[227, 232], ["numpy.array", "numpy.array", "gaussian_loss.univariate_gaussian_loss().eval", "test_geom_loss.TestGaussian1d.assertAlmostEqual", "gaussian_loss.univariate_gaussian_loss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.univariate_gaussian_loss"], ["", "def", "test_big_mu_sigma_diff", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "52.", ",", "0.", "]", "]", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "0.", ",", "80", "]", "]", ")", "# Increase second value with .001 and the loss will jump to inf!", "\n", "loss", "=", "univariate_gaussian_loss", "(", "target", ",", "prediction", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", "[", "0", ",", "0", "]", ",", "16.11809565095832", ",", "places", "=", "PRECISION", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_Tokenizer.TestUtil.test_truncate": [[12, 18], ["Tokenizer.Tokenize.truncate", "test_Tokenizer.TestUtil.assertLessEqual", "len"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.truncate"], ["    ", "def", "test_truncate", "(", "self", ")", ":", "\n", "        ", "max_len", "=", "500", "\n", "(", "input_set", ",", "_", ")", "=", "Tokenize", ".", "truncate", "(", "max_len", ",", "raw_training_set", ",", "raw_target_set", ")", "\n", "for", "record", "in", "input_set", ":", "\n", "            ", "for", "field", "in", "record", ":", "\n", "                ", "self", ".", "assertLessEqual", "(", "len", "(", "field", ")", ",", "max_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_Tokenizer.TestUtil.test_batch_truncate": [[19, 26], ["Tokenizer.Tokenize.batch_truncate", "test_Tokenizer.TestUtil.assertEqual", "len"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.batch_truncate"], ["", "", "", "def", "test_batch_truncate", "(", "self", ")", ":", "\n", "        ", "batch_size", "=", "3", "\n", "max_len", "=", "1000", "\n", "validation_split", "=", "0.1", "\n", "training_set", ",", "target_set", "=", "Tokenize", ".", "batch_truncate", "(", "batch_size", ",", "max_len", ",", "validation_split", ",", "raw_training_set", ",", "\n", "raw_target_set", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "training_set", ")", ",", "30", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_Tokenizer.TestUtil.test_tokenize": [[27, 34], ["Tokenizer.Tokenize", "Tokenizer.Tokenize.char_level_tokenize", "test_Tokenizer.TestUtil.assertEqual"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.char_level_tokenize"], ["", "def", "test_tokenize", "(", "self", ")", ":", "\n", "        ", "test_strings", "=", "[", "'A test string'", "]", "\n", "tokenizer", "=", "Tokenize", "(", "test_strings", ")", "\n", "tokenized", "=", "tokenizer", ".", "char_level_tokenize", "(", "test_strings", ")", "\n", "self", ".", "assertEqual", "(", "(", "tokenizer", ".", "word_index", ",", "tokenized", ")", ",", "\n", "(", "{", "' '", ":", "2", ",", "'A'", ":", "4", ",", "'e'", ":", "5", ",", "'g'", ":", "9", ",", "'i'", ":", "7", ",", "'n'", ":", "8", ",", "'r'", ":", "6", ",", "'s'", ":", "3", ",", "'t'", ":", "1", "}", ",", "\n", "[", "[", "4", ",", "2", ",", "1", ",", "5", ",", "3", ",", "1", ",", "2", ",", "3", ",", "1", ",", "6", ",", "7", ",", "8", ",", "9", "]", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_Tokenizer.TestUtil.test_tokenize_example": [[35, 46], ["source_data.as_matrix", "Tokenizer.Tokenize", "Tokenizer.Tokenize.char_level_tokenize", "test_Tokenizer.TestUtil.assertEqual"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.char_level_tokenize"], ["", "def", "test_tokenize_example", "(", "self", ")", ":", "\n", "        ", "self", ".", "maxDiff", "=", "None", "\n", "test_strings", "=", "source_data", ".", "as_matrix", "(", ")", "\n", "word_index", "=", "{", "'5'", ":", "1", ",", "'4'", ":", "2", ",", "'.'", ":", "3", ",", "'1'", ":", "4", ",", "'2'", ":", "5", ",", "'8'", ":", "6", ",", "' '", ":", "7", ",", "','", ":", "8", ",", "'3'", ":", "9", ",", "'6'", ":", "10", ",", "'0'", ":", "11", ",", "\n", "'9'", ":", "12", ",", "'7'", ":", "13", ",", "'O'", ":", "14", ",", "'('", ":", "15", ",", "')'", ":", "16", ",", "'L'", ":", "17", ",", "'Y'", ":", "18", ",", "'P'", ":", "19", ",", "'G'", ":", "20", ",", "'N'", ":", "21", ",", "\n", "'T'", ":", "22", ",", "'E'", ":", "23", ",", "'M'", ":", "24", ",", "'I'", ":", "25", ",", "'C'", ":", "26", ",", "'U'", ":", "27", ",", "'R'", ":", "28", "}", "\n", "tokenizer", "=", "Tokenize", "(", "test_strings", "[", "0", "]", "+", "test_strings", "[", "1", "]", "+", "test_strings", "[", "2", "]", ")", "\n", "tokenized", "=", "tokenizer", ".", "char_level_tokenize", "(", "test_strings", "[", "0", "]", ")", "\n", "self", ".", "assertEqual", "(", "(", "tokenizer", ".", "word_index", ",", "tokenized", "[", "0", "]", "[", "0", ":", "15", "]", ")", ",", "\n", "(", "word_index", ",", "\n", "[", "19", ",", "14", ",", "17", ",", "18", ",", "20", ",", "14", ",", "21", ",", "15", ",", "15", ",", "2", ",", "3", ",", "6", ",", "4", ",", "4", ",", "6", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_Tokenizer.TestUtil.test_one_hot": [[47, 59], ["source_data.as_matrix", "Tokenizer.Tokenize", "Tokenizer.Tokenize.one_hot", "test_Tokenizer.TestUtil.assertEqual", "len", "len"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.one_hot"], ["", "def", "test_one_hot", "(", "self", ")", ":", "\n", "        ", "source_matrix", "=", "source_data", ".", "as_matrix", "(", ")", "\n", "test_strings", "=", "source_matrix", "[", "0", "]", "+", "source_matrix", "[", "1", "]", "\n", "\n", "max_len", "=", "0", "\n", "for", "sentence", "in", "test_strings", ":", "\n", "            ", "if", "len", "(", "sentence", ")", ">", "max_len", ":", "\n", "                ", "max_len", "=", "len", "(", "sentence", ")", "\n", "\n", "", "", "tokenizer", "=", "Tokenize", "(", "test_strings", ")", "\n", "matrix", "=", "tokenizer", ".", "one_hot", "(", "test_strings", ",", "max_len", ")", "\n", "self", ".", "assertEqual", "(", "matrix", "[", "0", "]", "[", "0", "]", "[", "19", "]", ",", "True", ")", "# 'P' for POLYGON", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_Tokenizer.TestUtil.test_detokenize": [[60, 66], ["Tokenizer.Tokenize", "Tokenizer.Tokenize.char_level_tokenize", "Tokenizer.Tokenize.decypher", "test_Tokenizer.TestUtil.assertEqual"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.char_level_tokenize", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.decypher"], ["", "def", "test_detokenize", "(", "self", ")", ":", "\n", "        ", "test_strings", "=", "[", "'A test string'", "]", "\n", "tokenizer", "=", "Tokenize", "(", "test_strings", ")", "\n", "tokenized", "=", "tokenizer", ".", "char_level_tokenize", "(", "test_strings", ")", "\n", "detokenized", "=", "tokenizer", ".", "decypher", "(", "tokenized", ")", "\n", "self", ".", "assertEqual", "(", "detokenized", ",", "test_strings", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.geom_gaussian_loss": [[9, 17], ["gaussian_loss.bivariate_gaussian_loss", "keras.losses.categorical_crossentropy", "keras.losses.categorical_crossentropy", "keras.backend.softmax", "keras.backend.softmax", "keras.backend.softmax", "keras.backend.softmax"], "function", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax"], ["def", "geom_gaussian_loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "# loss fn based on eq #26 of http://arxiv.org/abs/1308.0850.", "\n", "    ", "gaussian_loss", "=", "bivariate_gaussian_loss", "(", "y_true", ",", "y_pred", ")", "\n", "geom_type_error", "=", "categorical_crossentropy", "(", "K", ".", "softmax", "(", "y_true", "[", "...", ",", "GEOM_TYPE_INDEX", ":", "RENDER_INDEX", "]", ")", ",", "\n", "K", ".", "softmax", "(", "y_pred", "[", "...", ",", "GEOM_TYPE_INDEX", ":", "RENDER_INDEX", "]", ")", ")", "\n", "render_error", "=", "categorical_crossentropy", "(", "K", ".", "softmax", "(", "y_true", "[", "...", ",", "RENDER_INDEX", ":", "]", ")", ",", "\n", "K", ".", "softmax", "(", "y_pred", "[", "...", ",", "RENDER_INDEX", ":", "]", ")", ")", "\n", "return", "gaussian_loss", "+", "geom_type_error", "+", "render_error", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian": [[22, 54], ["keras.backend.log", "keras.backend.log", "keras.backend.square", "keras.backend.square", "keras.backend.exp", "keras.backend.exp", "keras.backend.epsilon", "keras.backend.exp", "keras.backend.epsilon", "keras.backend.tanh", "keras.backend.square", "keras.backend.sqrt", "keras.backend.abs", "keras.backend.abs", "keras.backend.abs", "keras.backend.abs", "keras.backend.square", "keras.backend.square"], "function", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "bivariate_gaussian", "(", "true", ",", "pred", ")", ":", "\n", "    ", "\"\"\"\n    Stabilized rank-agnostic bivariate gaussian probability function (pdf)\n    Returns results of eq # 24 of http://arxiv.org/abs/1308.0850\n    :param true: truth values with at least [mu1, mu2]\n    :param pred: values predicted with at least [mu1, mu2, sigma1, sigma2, rho]\n    :return: probability density function\n    \"\"\"", "\n", "x_coord", "=", "true", "[", "...", ",", "0", "]", "\n", "y_coord", "=", "true", "[", "...", ",", "1", "]", "\n", "mu_x", "=", "pred", "[", "...", ",", "0", "]", "\n", "mu_y", "=", "pred", "[", "...", ",", "1", "]", "\n", "# exponentiate the sigmas and also make correlative rho between -1 and 1.", "\n", "# eq. # 21 and 22 of http://arxiv.org/abs/1308.0850", "\n", "# analogous to https://github.com/tensorflow/magenta/blob/master/magenta/models/sketch_rnn/model.py#L326", "\n", "sigma_x", "=", "K", ".", "exp", "(", "K", ".", "abs", "(", "pred", "[", "...", ",", "2", "]", ")", ")", "+", "epsilon", "(", ")", "\n", "sigma_y", "=", "K", ".", "exp", "(", "K", ".", "abs", "(", "pred", "[", "...", ",", "3", "]", ")", ")", "+", "epsilon", "(", ")", "\n", "rho", "=", "K", ".", "tanh", "(", "pred", "[", "...", ",", "4", "]", ")", "*", "0", "# avoid drifting to -1 or 1 to prevent NaN", "\n", "norm1", "=", "K", ".", "log", "(", "1", "+", "K", ".", "abs", "(", "x_coord", "-", "mu_x", ")", ")", "\n", "norm2", "=", "K", ".", "log", "(", "1", "+", "K", ".", "abs", "(", "y_coord", "-", "mu_y", ")", ")", "\n", "variance_x", "=", "K", ".", "square", "(", "sigma_x", ")", "\n", "variance_y", "=", "K", ".", "square", "(", "sigma_y", ")", "\n", "s1s2", "=", "sigma_x", "*", "sigma_y", "# very large if sigma_x and/or sigma_y are very large", "\n", "# eq 25 of http://arxiv.org/abs/1308.0850", "\n", "z", "=", "(", "(", "K", ".", "square", "(", "norm1", ")", "/", "variance_x", ")", "+", "\n", "(", "K", ".", "square", "(", "norm2", ")", "/", "variance_y", ")", "-", "\n", "(", "2", "*", "rho", "*", "norm1", "*", "norm2", "/", "s1s2", ")", ")", "# z \u2192 -\u221e if rho * norm1 * norm2 \u2192 \u221e and/or s1s2 \u2192 0", "\n", "neg_rho", "=", "1", "-", "K", ".", "square", "(", "rho", ")", "# \u2192 0 if rho \u2192 {1, -1}", "\n", "numerator", "=", "K", ".", "exp", "(", "-", "z", "/", "(", "2", "*", "neg_rho", ")", ")", "# \u2192 \u221e if z \u2192 -\u221e and/or neg_rho \u2192 0", "\n", "denominator", "=", "(", "2", "*", "np", ".", "pi", "*", "s1s2", "*", "K", ".", "sqrt", "(", "neg_rho", ")", ")", "# \u2192 0 if s1s2 \u2192 0 and/or neg_rho \u2192 0", "\n", "pdf", "=", "numerator", "/", "denominator", "# \u2192 \u221e if denominator \u2192 0 and/or if numerator \u2192 \u221e", "\n", "return", "pdf", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian_loss": [[60, 70], ["gaussian_loss.bivariate_gaussian", "keras.backend.sum", "keras.backend.log", "keras.backend.epsilon"], "function", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.bivariate_gaussian", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "bivariate_gaussian_loss", "(", "true", ",", "pred", ")", ":", "\n", "    ", "\"\"\"\n    Bivariate gaussian loss function\n    Returns results of eq # 24 of http://arxiv.org/abs/1308.0850\n    :param true: truth values with at least [mu1, mu2]\n    :param pred: values predicted with at least [mu1, mu2, sigma1, sigma2, rho]\n    :return: the log of the summed max likelihood\n    \"\"\"", "\n", "pdf", "=", "bivariate_gaussian", "(", "true", ",", "pred", ")", "\n", "return", "K", ".", "sum", "(", "-", "K", ".", "log", "(", "pdf", "+", "epsilon", "(", ")", ")", ")", "# \u2192 -\u221e if pdf \u2192 \u221e", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.univariate_gaussian": [[72, 90], ["keras.backend.log", "keras.backend.softplus", "keras.backend.exp", "keras.backend.square", "keras.backend.sqrt", "keras.backend.abs", "keras.backend.epsilon", "keras.backend.epsilon", "keras.backend.square", "keras.backend.abs"], "function", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softplus", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "univariate_gaussian", "(", "true", ",", "pred", ")", ":", "\n", "    ", "\"\"\"\n    Generic, rank-agnostic bivariate gaussian function\n    Returns results of eq # 24 of http://arxiv.org/abs/1308.0850\n    :param true: truth values with at least [mu]\n    :param pred: values predicted with at least [mu, sigma]\n    :return: probability density function\n    \"\"\"", "\n", "x", "=", "true", "[", "...", ",", "0", "]", "\n", "mu", "=", "pred", "[", "...", ",", "0", "]", "\n", "sigma", "=", "pred", "[", "...", ",", "1", "]", "\n", "\n", "norm", "=", "K", ".", "log", "(", "1", "+", "K", ".", "abs", "(", "x", "-", "mu", ")", ")", "# needs log of norm to counter large mu diffs", "\n", "variance", "=", "K", ".", "softplus", "(", "K", ".", "square", "(", "sigma", ")", ")", "\n", "z", "=", "K", ".", "exp", "(", "-", "K", ".", "square", "(", "K", ".", "abs", "(", "norm", ")", ")", "/", "(", "2", "*", "variance", ")", "+", "epsilon", "(", ")", ")", "# z -> 0 if sigma", "\n", "# pdf -> 0 if sigma is very large or z -> 0; NaN if variance -> 0", "\n", "pdf", "=", "z", "/", "K", ".", "sqrt", "(", "(", "2", "*", "np", ".", "pi", "*", "variance", ")", "+", "epsilon", "(", ")", ")", "\n", "return", "pdf", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.univariate_gaussian_loss": [[92, 95], ["gaussian_loss.univariate_gaussian", "keras.backend.log", "keras.backend.epsilon"], "function", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.gaussian_loss.univariate_gaussian", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "univariate_gaussian_loss", "(", "true", ",", "pred", ")", ":", "\n", "    ", "pdf", "=", "univariate_gaussian", "(", "true", ",", "pred", ")", "# pdf -> 0 if sigma is very large or z -> 0", "\n", "return", "-", "K", ".", "log", "(", "pdf", "+", "epsilon", "(", ")", ")", "# inf if pdf -> 0", "\n", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.wkt2pyplot.wkt2pyplot": [[13, 72], ["matplotlib.pyplot.subplots", "matplotlib.collections.PatchCollection", "matplotlib.collections.PatchCollection.set_color", "ax.add_collection", "matplotlib.pyplot.axis", "shapely.wkt.loads", "input_polys.append", "shapely.wkt.loads", "shapely.wkt.loads", "len", "matplotlib.patches.Polygon", "matplotlib.pyplot.plot", "matplotlib.pyplot.plot", "matplotlib.collections.PatchCollection", "matplotlib.collections.PatchCollection.set_color", "ax.add_collection", "matplotlib.collections.PatchCollection", "matplotlib.collections.PatchCollection.set_color", "ax.add_collection", "matplotlib.patches.Polygon", "matplotlib.patches.Polygon"], "function", ["None"], ["def", "wkt2pyplot", "(", "input_wkts", ",", "target_wkts", "=", "None", ",", "prediction_wkts", "=", "None", ",", "\n", "input_color", "=", "'green'", ",", "target_color", "=", "'red'", ",", "pred_color", "=", "'blue'", ")", ":", "\n", "    ", "\"\"\"\n    Convert arrays of input, target and prediction well-known encoded geometry arrays to pyplot\n    :param input_wkts: an array of input geometries, rendered in (standard) green\n    :param target_wkts: optional array of target geometries, rendered in (standard) red\n    :param prediction_wkts: optional array of prediction geometries, rendered in (standard) blue\n    :param input_color: a pyplot-compatible notation of color, default green\n    :param pred_color: a pyplot-compatible notation of color, default red\n    :param target_color: a pyplot-compatible notation of color, default blue\n    :return: a matplotlib pyplot fig, ax and plt\n    \"\"\"", "\n", "input_geoms", "=", "[", "wkt", ".", "loads", "(", "input_wkt", ")", "for", "input_wkt", "in", "input_wkts", "]", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "\n", "input_polys", "=", "[", "]", "\n", "for", "input_geom", "in", "input_geoms", ":", "\n", "        ", "if", "len", "(", "input_geom", ".", "bounds", ")", ">", "0", "and", "input_geom", ".", "geom_type", "==", "'Polygon'", ":", "\n", "            ", "input_polys", ".", "append", "(", "matplotlib", ".", "patches", ".", "Polygon", "(", "input_geom", ".", "boundary", ".", "coords", ")", ")", "\n", "\n", "", "", "inputs", "=", "matplotlib", ".", "collections", ".", "PatchCollection", "(", "input_polys", ",", "alpha", "=", "0.4", ",", "linewidth", "=", "1", ")", "\n", "inputs", ".", "set_color", "(", "input_color", ")", "\n", "ax", ".", "add_collection", "(", "inputs", ")", "\n", "\n", "# target_polys = [Polygon(target_geom.boundary.coords) for target_geom in target_geoms]", "\n", "# targets = PatchCollection(target_polys, alpha=0.4, linewidth=1)", "\n", "# targets.set_color(target_color)", "\n", "# ax.add_collection(targets)", "\n", "\n", "# TODO: handle other types of geometries", "\n", "# TODO: handle holes in polygons (donuts)", "\n", "if", "target_wkts", ":", "\n", "        ", "target_geoms", "=", "[", "wkt", ".", "loads", "(", "target_wkt", ")", "for", "target_wkt", "in", "target_wkts", "]", "\n", "for", "geom", "in", "target_geoms", ":", "\n", "            ", "if", "geom", ".", "type", "==", "'Point'", ":", "\n", "                ", "plt", ".", "plot", "(", "geom", ".", "coords", ".", "xy", "[", "0", "]", "[", "0", "]", ",", "geom", ".", "coords", ".", "xy", "[", "1", "]", "[", "0", "]", ",", "\n", "marker", "=", "'o'", ",", "color", "=", "target_color", ",", "alpha", "=", "0.4", ",", "linewidth", "=", "0", ")", "\n", "", "elif", "geom", ".", "type", "==", "'Polygon'", ":", "\n", "                ", "collection", "=", "matplotlib", ".", "collections", ".", "PatchCollection", "(", "[", "matplotlib", ".", "patches", ".", "Polygon", "(", "geom", ".", "boundary", ".", "coords", ")", "]", ",", "\n", "alpha", "=", "0.4", ",", "linewidth", "=", "1", ")", "\n", "collection", ".", "set_color", "(", "target_color", ")", "\n", "ax", ".", "add_collection", "(", "collection", ")", "\n", "\n", "", "", "", "if", "prediction_wkts", ":", "\n", "        ", "prediction_geoms", "=", "[", "wkt", ".", "loads", "(", "prediction_wkt", ")", "for", "prediction_wkt", "in", "prediction_wkts", "]", "\n", "for", "geom", "in", "prediction_geoms", ":", "\n", "            ", "if", "geom", ".", "geom_type", "==", "'Point'", ":", "\n", "                ", "plt", ".", "plot", "(", "geom", ".", "coords", ".", "xy", "[", "0", "]", "[", "0", "]", ",", "geom", ".", "coords", ".", "xy", "[", "1", "]", "[", "0", "]", ",", "\n", "marker", "=", "'o'", ",", "color", "=", "pred_color", ",", "alpha", "=", "0.1", ",", "linewidth", "=", "0", ")", "\n", "", "elif", "geom", ".", "type", "==", "'Polygon'", ":", "\n", "                ", "collection", "=", "matplotlib", ".", "collections", ".", "PatchCollection", "(", "[", "matplotlib", ".", "patches", ".", "Polygon", "(", "geom", ".", "boundary", ".", "coords", ")", "]", ",", "\n", "alpha", "=", "0.4", ",", "linewidth", "=", "1", ")", "\n", "collection", ".", "set_color", "(", "pred_color", ")", "\n", "ax", ".", "add_collection", "(", "collection", ")", "\n", "\n", "", "", "", "plt", ".", "axis", "(", "'auto'", ")", "\n", "\n", "return", "plt", ",", "fig", ",", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.wkt2pyplot.save_plot": [[74, 79], ["os.makedirs", "wkt2pyplot.wkt2pyplot", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close", "str"], "function", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.wkt2pyplot.wkt2pyplot"], ["", "def", "save_plot", "(", "geoms", ",", "plot_dir", "=", "'plots'", ",", "timestamp", "=", "None", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "str", "(", "plot_dir", ")", ",", "exist_ok", "=", "True", ")", "\n", "plt", ",", "fig", ",", "ax", "=", "wkt2pyplot", "(", "*", "geoms", ")", "\n", "plt", ".", "savefig", "(", "plot_dir", "+", "'/plt_'", "+", "timestamp", "+", "'.png'", ")", "\n", "plt", ".", "close", "(", "'all'", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.ConsoleLogger.DecypherAll.__init__": [[8, 11], ["keras.callbacks.Callback.__init__"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.LoggerCallback.EpochLogger.__init__"], ["    ", "def", "__init__", "(", "self", ",", "decypher", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "decypher", "=", "decypher", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.ConsoleLogger.DecypherAll.on_epoch_end": [[12, 25], ["random.seed", "random.sample", "ConsoleLogger.DecypherAll.model.predict", "print", "zip", "datetime.datetime.datetime.now", "range", "numpy.array", "print", "print", "print", "len", "ConsoleLogger.DecypherAll.decypher", "ConsoleLogger.DecypherAll.decypher", "ConsoleLogger.DecypherAll.decypher"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.decypher", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.decypher", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.decypher"], ["", "def", "on_epoch_end", "(", "self", ",", "epoch", ",", "logs", "=", "None", ")", ":", "\n", "        ", "random", ".", "seed", "(", "datetime", ".", "now", "(", ")", ")", "\n", "sample_indexes", "=", "random", ".", "sample", "(", "range", "(", "len", "(", "self", ".", "validation_data", "[", "0", "]", ")", ")", ",", "3", ")", "\n", "input_samples", "=", "[", "self", ".", "validation_data", "[", "0", "]", "[", "sample", "]", "for", "sample", "in", "sample_indexes", "]", "\n", "target_samples", "=", "[", "self", ".", "validation_data", "[", "1", "]", "[", "sample", "]", "for", "sample", "in", "sample_indexes", "]", "\n", "predictions", "=", "self", ".", "model", ".", "predict", "(", "np", ".", "array", "(", "input_samples", ")", ")", "\n", "\n", "print", "(", "''", ")", "\n", "\n", "for", "(", "input", ",", "target", ",", "prediction", ")", "in", "zip", "(", "input_samples", ",", "target_samples", ",", "predictions", ")", ":", "\n", "            ", "print", "(", "'Input:      %s'", "%", "self", ".", "decypher", "(", "input", ")", ")", "\n", "print", "(", "'Target:     %s'", "%", "self", ".", "decypher", "(", "target", ")", ")", "\n", "print", "(", "'Prediction: %s\\n'", "%", "self", ".", "decypher", "(", "prediction", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.max_points": [[41, 57], ["zip", "sum", "GeoVectorizer.num_points_from_wkt"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.num_points_from_wkt"], ["    ", "@", "staticmethod", "\n", "def", "max_points", "(", "*", "wkt_sets", ")", ":", "\n", "        ", "\"\"\"\n        Determines the maximum summed size (length) of elements in an arbitrary length 1d array of well-known-text\n        geometries\n        :param wkt_sets: arbitrary length array of 1d arrays containing well-known-text geometry entries\n        :return: scalar integer representing the longest set of points length\n        \"\"\"", "\n", "max_points", "=", "0", "\n", "\n", "for", "wkts", "in", "zip", "(", "*", "wkt_sets", ")", ":", "\n", "            ", "number_of_points", "=", "sum", "(", "[", "GeoVectorizer", ".", "num_points_from_wkt", "(", "wkt", ")", "for", "wkt", "in", "wkts", "]", ")", "\n", "if", "number_of_points", ">", "max_points", ":", "\n", "                ", "max_points", "=", "number_of_points", "\n", "\n", "", "", "return", "max_points", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.num_points_from_wkt": [[58, 70], ["shapely.wkt.loads", "len", "re.findall"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "num_points_from_wkt", "(", "wkt", ")", ":", "\n", "# A 2D point in WKT is a set of two numerical values, separated by a space:", "\n", "# marked by two decimal values on either side", "\n", "        ", "shape", "=", "loads", "(", "wkt", ")", "\n", "pattern", "=", "'\\d \\d'", "\n", "\n", "if", "shape", ".", "has_z", ":", "\n", "            ", "pattern", "+=", "' \\d'", "\n", "\n", "", "number_of_points", "=", "len", "(", "re", ".", "findall", "(", "pattern", ",", "shape", ".", "wkt", ")", ")", "\n", "return", "number_of_points", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.vectorize_wkt": [[71, 120], ["shapely.wkt.loads", "GeoVectorizer.num_points_from_wkt", "GeoVectorizer._vectorize_polygon", "numpy.pad", "ValueError", "GeoVectorizer.recursive_simplify", "GeoVectorizer.num_points_from_wkt", "numpy.concatenate", "numpy.append", "numpy.zeros", "numpy.zeros", "GeoVectorizer._vectorize_polygon", "len", "ValueError", "GeoVectorizer._vectorize_points", "ValueError", "len"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.num_points_from_wkt", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer._vectorize_polygon", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.recursive_simplify", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.num_points_from_wkt", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer._vectorize_polygon", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer._vectorize_points"], ["", "@", "staticmethod", "\n", "def", "vectorize_wkt", "(", "wkt", ",", "max_points", ",", "simplify", "=", "False", ",", "fixed_size", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Convert wkt geometry to a numpy array of real values. The size of the vector is equal to:\n            if fixed_size=False: p where p is the size of the set of points in the geometry;\n            is fixed_size=True: max_points, padded with zeros.\n        :param wkt: the geometry as wkt string\n        :param max_points: the maximum size of the first output dimension: the maximum number of points\n        :param simplify: optional, selecting reduction of points if wkt points exceeds max_points\n        :param fixed_size: If set to True, the function returns a matrix of size max_points\n        :return vectors: a 2d numpy array as vectorized representation of the input geometry\n        \"\"\"", "\n", "shape", "=", "loads", "(", "wkt", ")", "\n", "total_points", "=", "GeoVectorizer", ".", "num_points_from_wkt", "(", "shape", ".", "wkt", ")", "# use the shapely wkt form for consistency", "\n", "\n", "if", "total_points", ">", "max_points", ":", "\n", "            ", "if", "not", "simplify", ":", "\n", "                ", "raise", "ValueError", "(", "'The number of points in the geometry exceeds the max_points but the reduce_points '", "\n", "'parameter was set to False. Please set the reduce_points parameter to True to reduce '", "\n", "'the number of points, or increase max_points parameter.'", ")", "\n", "", "else", ":", "\n", "                ", "shape", "=", "GeoVectorizer", ".", "recursive_simplify", "(", "max_points", ",", "shape", ")", "\n", "total_points", "=", "GeoVectorizer", ".", "num_points_from_wkt", "(", "shape", ".", "wkt", ")", "\n", "\n", "", "", "if", "shape", ".", "geom_type", "==", "'Polygon'", ":", "\n", "            ", "geom_matrix", "=", "GeoVectorizer", ".", "_vectorize_polygon", "(", "shape", ")", "\n", "", "elif", "shape", ".", "geom_type", "==", "'MultiPolygon'", ":", "\n", "# noinspection PyUnresolvedReferences", "\n", "            ", "geom_matrix", "=", "np", ".", "concatenate", "(", "\n", "[", "GeoVectorizer", ".", "_vectorize_polygon", "(", "geom", ")", "for", "geom", "in", "shape", ".", "geoms", "]", ",", "axis", "=", "0", ")", "\n", "geom_matrix", "[", "total_points", "-", "1", ",", "STOP_INDEX", "]", "=", "0", "\n", "# noinspection PyUnresolvedReferences", "\n", "geom_matrix", "=", "np", ".", "append", "(", "geom_matrix", ",", "np", ".", "zeros", "(", "(", "max_points", "-", "total_points", ",", "GEO_VECTOR_LEN", ")", ")", ",", "axis", "=", "0", ")", "\n", "geom_matrix", "[", "total_points", "-", "1", ":", ",", "FULL_STOP_INDEX", "]", "=", "1", "# Manually set full stop bits", "\n", "", "elif", "shape", ".", "geom_type", "==", "'GeometryCollection'", ":", "\n", "            ", "if", "len", "(", "shape", ".", "geoms", ")", ">", "0", ":", "# not GEOMETRYCOLLECTION EMPTY", "\n", "                ", "raise", "ValueError", "(", "\"Don't know how to process non-empty GeometryCollection type\"", ")", "\n", "# noinspection PyUnresolvedReferences", "\n", "", "geom_matrix", "=", "np", ".", "zeros", "(", "(", "1", ",", "GEO_VECTOR_LEN", ")", ")", "\n", "geom_matrix", "[", ":", ",", "FULL_STOP_INDEX", "]", "=", "1", "# Manually set full stop bits", "\n", "", "elif", "shape", ".", "geom_type", "==", "'Point'", ":", "\n", "            ", "geom_matrix", "=", "GeoVectorizer", ".", "_vectorize_points", "(", "shape", ".", "coords", ",", "is_last", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Don't know how to get the number of points from geometry type {}\"", ".", "format", "(", "shape", ".", "geom_type", ")", ")", "\n", "\n", "", "if", "fixed_size", ":", "\n", "            ", "pad_shape", "=", "(", "(", "0", ",", "max_points", "-", "len", "(", "geom_matrix", ")", ")", ",", "(", "0", ",", "0", ")", ")", "\n", "geom_matrix", "=", "np", ".", "pad", "(", "geom_matrix", ",", "pad_shape", ",", "mode", "=", "'constant'", ")", "\n", "", "return", "geom_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer._vectorize_polygon": [[121, 124], ["GeoVectorizer._vectorize_points"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer._vectorize_points"], ["", "@", "staticmethod", "\n", "def", "_vectorize_polygon", "(", "shape", ")", ":", "\n", "        ", "return", "GeoVectorizer", ".", "_vectorize_points", "(", "shape", ".", "exterior", ".", "coords", ",", "is_last", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer._vectorize_points": [[125, 149], ["numpy.zeros", "enumerate", "len", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_vectorize_points", "(", "points", ",", "is_last", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Fill an array of vectors out of an array of points from a geometry\n        :param points: the array of input points\n        :param is_last: extra offset for the last point in a geometry, to indicate a full stop.\n        :return matrix: a matrix representation of the points.\n        \"\"\"", "\n", "# noinspection PyUnresolvedReferences", "\n", "matrix", "=", "np", ".", "zeros", "(", "(", "len", "(", "points", ")", ",", "GEO_VECTOR_LEN", ")", ")", "\n", "\n", "for", "point_index", ",", "point", "in", "enumerate", "(", "points", ")", ":", "\n", "            ", "matrix", "[", "point_index", ",", "X_INDEX", "]", "=", "point", "[", "0", "]", "\n", "matrix", "[", "point_index", ",", "Y_INDEX", "]", "=", "point", "[", "1", "]", "\n", "\n", "if", "point_index", "==", "len", "(", "points", ")", "-", "1", ":", "\n", "                ", "if", "is_last", ":", "\n", "                    ", "matrix", "[", "point_index", ",", "FULL_STOP_INDEX", "]", "=", "True", "\n", "", "else", ":", "\n", "                    ", "matrix", "[", "point_index", ",", "STOP_INDEX", "]", "=", "True", "\n", "", "", "else", ":", "\n", "                ", "matrix", "[", "point_index", ",", "RENDER_INDEX", "]", "=", "True", "\n", "\n", "", "", "return", "matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.recursive_simplify": [[150, 166], ["math.pow", "shape.simplify.simplify.simplify", "len", "math.pow", "shape.simplify.simplify.simplify", "re.findall"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "recursive_simplify", "(", "max_points", ",", "shape", ")", ":", "\n", "        ", "\"\"\"\n        Search algorithm for reducing the number of points of a geometry\n        :param max_points:\n        :param shape: A shapely shape\n        :return:\n        \"\"\"", "\n", "log_tolerance", "=", "-", "10", "# Log scale", "\n", "tolerance", "=", "math", ".", "pow", "(", "10", ",", "log_tolerance", ")", "\n", "shape", "=", "shape", ".", "simplify", "(", "tolerance", ")", "\n", "while", "len", "(", "re", ".", "findall", "(", "'\\d \\d'", ",", "shape", ".", "wkt", ")", ")", ">", "max_points", ":", "\n", "            ", "log_tolerance", "+=", "0.5", "\n", "tolerance", "=", "math", ".", "pow", "(", "10", ",", "log_tolerance", ")", "\n", "shape", "=", "shape", ".", "simplify", "(", "tolerance", ")", "\n", "", "return", "shape", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_sketch-rnn-model.TestSketchRnnLoss.test_2d_gaussian_zeros": [[12, 18], ["numpy.array", "numpy.array", "numpy.append", "test_sketch-rnn-model.TestSketchRnnLoss.assertAlmostEqual", "keras.backend.log().eval", "keras.backend.log", "sketch_rnn_model.tf_2d_normal", "keras.backend.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["    ", "def", "test_2d_gaussian_zeros", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "args", "=", "np", ".", "append", "(", "target", ",", "prediction", ")", "\n", "loss", "=", "-", "K", ".", "log", "(", "tf_2d_normal", "(", "*", "args", ")", "+", "K", ".", "epsilon", "(", ")", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", ",", "1.1048509233685306", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_sketch-rnn-model.TestSketchRnnLoss.test_2d_gaussian_small_mu_diff": [[19, 25], ["numpy.array", "numpy.array", "numpy.append", "test_sketch-rnn-model.TestSketchRnnLoss.assertAlmostEqual", "keras.backend.log().eval", "keras.backend.log", "sketch_rnn_model.tf_2d_normal", "keras.backend.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "test_2d_gaussian_small_mu_diff", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "5", "+", "1e-6", ",", "52", "+", "1e-6", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "args", "=", "np", ".", "append", "(", "target", ",", "prediction", ")", "\n", "loss", "=", "-", "K", ".", "log", "(", "tf_2d_normal", "(", "*", "args", ")", "+", "K", ".", "epsilon", "(", ")", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", ",", "1.1048509233706119", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_sketch-rnn-model.TestSketchRnnLoss.test_2d_gaussian_small_sigma_diff": [[26, 31], ["numpy.array", "numpy.array", "sketch_rnn_model.tf_2d_normal().eval", "test_sketch-rnn-model.TestSketchRnnLoss.assertAlmostEqual", "sketch_rnn_model.tf_2d_normal"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal"], ["", "def", "test_2d_gaussian_small_sigma_diff", "(", "self", ")", ":", "\n", "        ", "tensor_train", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "tensor_predict", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", ",", "1e-6", ",", "1e-6", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "loss", "=", "tf_2d_normal", "(", "tensor_train", ",", "tensor_predict", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", ",", "1.1048523660629765", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_sketch-rnn-model.TestSketchRnnLoss.test_2d_gaussian_mu_ones": [[32, 38], ["numpy.array", "numpy.array", "numpy.append", "test_sketch-rnn-model.TestSketchRnnLoss.assertAlmostEqual", "keras.backend.log().eval", "keras.backend.log", "sketch_rnn_model.tf_2d_normal", "keras.backend.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "test_2d_gaussian_mu_ones", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "1", ",", "1", ",", "1", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "args", "=", "np", ".", "append", "(", "target", ",", "prediction", ")", "\n", "loss", "=", "-", "K", ".", "log", "(", "tf_2d_normal", "(", "*", "args", ")", "+", "K", ".", "epsilon", "(", ")", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", ",", "2.3829037437816121", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_sketch-rnn-model.TestSketchRnnLoss.test_2d_gaussian_mu_minus_ones": [[39, 45], ["numpy.array", "numpy.array", "numpy.append", "test_sketch-rnn-model.TestSketchRnnLoss.assertAlmostEqual", "keras.backend.log().eval", "keras.backend.log", "sketch_rnn_model.tf_2d_normal", "keras.backend.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "test_2d_gaussian_mu_minus_ones", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "1", ",", "-", "1", ",", "-", "1", ",", "0", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "args", "=", "np", ".", "append", "(", "target", ",", "prediction", ")", "\n", "loss", "=", "-", "K", ".", "log", "(", "tf_2d_normal", "(", "*", "args", ")", "+", "K", ".", "epsilon", "(", ")", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", ",", "2.3829037437816121", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_sketch-rnn-model.TestSketchRnnLoss.test_2d_gaussian_ones": [[46, 52], ["numpy.array", "numpy.array", "numpy.append", "test_sketch-rnn-model.TestSketchRnnLoss.assertAlmostEqual", "keras.backend.log().eval", "keras.backend.log", "sketch_rnn_model.tf_2d_normal", "keras.backend.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "test_2d_gaussian_ones", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "1", ",", "1", ",", "1", ",", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "args", "=", "np", ".", "append", "(", "target", ",", "prediction", ")", "\n", "loss", "=", "-", "K", ".", "log", "(", "tf_2d_normal", "(", "*", "args", ")", "+", "K", ".", "epsilon", "(", ")", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", ",", "1.9491232946784192", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_sketch-rnn-model.TestSketchRnnLoss.test_2d_gaussian_rho_one": [[53, 59], ["numpy.array", "numpy.array", "numpy.append", "test_sketch-rnn-model.TestSketchRnnLoss.assertAlmostEqual", "keras.backend.log().eval", "keras.backend.log", "sketch_rnn_model.tf_2d_normal", "keras.backend.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "test_2d_gaussian_rho_one", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "args", "=", "np", ".", "append", "(", "target", ",", "prediction", ")", "\n", "loss", "=", "-", "K", ".", "log", "(", "tf_2d_normal", "(", "*", "args", ")", "+", "K", ".", "epsilon", "(", ")", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", ",", "1.9491232946784192", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_sketch-rnn-model.TestSketchRnnLoss.test_2d_gaussian_rho_minus_one": [[60, 66], ["numpy.array", "numpy.array", "numpy.append", "test_sketch-rnn-model.TestSketchRnnLoss.assertAlmostEqual", "keras.backend.log().eval", "keras.backend.log", "sketch_rnn_model.tf_2d_normal", "keras.backend.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "test_2d_gaussian_rho_minus_one", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "-", "1", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "args", "=", "np", ".", "append", "(", "target", ",", "prediction", ")", "\n", "loss", "=", "-", "K", ".", "log", "(", "tf_2d_normal", "(", "*", "args", ")", "+", "K", ".", "epsilon", "(", ")", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", ",", "1.9491232946784192", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_sketch-rnn-model.TestSketchRnnLoss.test_2d_gaussian_rho_two": [[67, 73], ["numpy.array", "numpy.array", "numpy.append", "test_sketch-rnn-model.TestSketchRnnLoss.assertAlmostEqual", "keras.backend.log().eval", "keras.backend.log", "sketch_rnn_model.tf_2d_normal", "keras.backend.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "test_2d_gaussian_rho_two", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "2", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "args", "=", "np", ".", "append", "(", "target", ",", "prediction", ")", "\n", "loss", "=", "-", "K", ".", "log", "(", "tf_2d_normal", "(", "*", "args", ")", "+", "K", ".", "epsilon", "(", ")", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", ",", "1.9491232946784192", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_sketch-rnn-model.TestSketchRnnLoss.test_2d_gaussian_rho_minus_two": [[74, 80], ["numpy.array", "numpy.array", "numpy.append", "test_sketch-rnn-model.TestSketchRnnLoss.assertAlmostEqual", "keras.backend.log().eval", "keras.backend.log", "sketch_rnn_model.tf_2d_normal", "keras.backend.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "test_2d_gaussian_rho_minus_two", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "0", ",", "0", ",", "-", "2", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "args", "=", "np", ".", "append", "(", "target", ",", "prediction", ")", "\n", "loss", "=", "-", "K", ".", "log", "(", "tf_2d_normal", "(", "*", "args", ")", "+", "K", ".", "epsilon", "(", ")", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", ",", "1.9491232946784192", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_sketch-rnn-model.TestSketchRnnLoss.test_2d_gaussian_big_diff": [[81, 87], ["numpy.array", "numpy.array", "numpy.append", "test_sketch-rnn-model.TestSketchRnnLoss.assertAlmostEqual", "keras.backend.log().eval", "keras.backend.log", "sketch_rnn_model.tf_2d_normal", "keras.backend.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "test_2d_gaussian_big_diff", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "args", "=", "np", ".", "append", "(", "target", ",", "prediction", ")", "\n", "loss", "=", "-", "K", ".", "log", "(", "tf_2d_normal", "(", "*", "args", ")", "+", "K", ".", "epsilon", "(", ")", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", ",", "16.11809565095832", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_sketch-rnn-model.TestSketchRnnLoss.test_2d_gaussian_really_big_diff": [[88, 94], ["numpy.array", "numpy.array", "numpy.append", "test_sketch-rnn-model.TestSketchRnnLoss.assertAlmostEqual", "keras.backend.log().eval", "keras.backend.log", "sketch_rnn_model.tf_2d_normal", "keras.backend.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "test_2d_gaussian_really_big_diff", "(", "self", ")", ":", "\n", "        ", "target", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "0", ",", "0", ",", "3", ",", "4", ",", "5", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "args", "=", "np", ".", "append", "(", "target", ",", "prediction", ")", "\n", "loss", "=", "-", "K", ".", "log", "(", "tf_2d_normal", "(", "*", "args", ")", "+", "K", ".", "epsilon", "(", ")", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", ",", "16.11809565095832", ",", "places", "=", "PRECISION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_sketch-rnn-model.TestSketchRnnLoss.test_2d_gaussian_max_neg_rho": [[95, 102], ["numpy.array", "numpy.array", "numpy.append", "test_sketch-rnn-model.TestSketchRnnLoss.assertAlmostEqual", "keras.backend.log().eval", "keras.backend.log", "sketch_rnn_model.tf_2d_normal", "keras.backend.epsilon"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gmm_loss.GaussianMixtureLoss.epsilon"], ["", "def", "test_2d_gaussian_max_neg_rho", "(", "self", ")", ":", "\n", "        ", "min_rho", "=", "-", "19.06", "# This is about the limit of rho before geom_gaussian_loss returns NaN", "\n", "target", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "prediction", "=", "np", ".", "array", "(", "[", "[", "[", "5", ",", "52", ",", "-", "1", ",", "-", "1", ",", "min_rho", "]", "]", "]", ",", "dtype", "=", "float", ")", "\n", "args", "=", "np", ".", "append", "(", "target", ",", "prediction", ")", "\n", "loss", "=", "-", "K", ".", "log", "(", "tf_2d_normal", "(", "*", "args", ")", "+", "K", ".", "epsilon", "(", ")", ")", ".", "eval", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "loss", ",", "-", "18.505382378927028", ",", "places", "=", "PRECISION", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.slack_send.notify": [[7, 16], ["slackclient.SlackClient", "slackclient.SlackClient.api_call", "print", "str"], "function", ["None"], ["def", "notify", "(", "signature", ",", "message", ")", ":", "\n", "    ", "if", "slack_token", ":", "\n", "        ", "sc", "=", "SlackClient", "(", "slack_token", ")", "\n", "sc", ".", "api_call", "(", "\n", "\"chat.postMessage\"", ",", "\n", "channel", "=", "\"#machinelearning\"", ",", "\n", "text", "=", "\"Session \\n\"", "+", "signature", "+", "\"\\ncompleted with: \"", "+", "str", "(", "message", ")", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'No slack notification: no slack API token environment variable \"SLACK_API_TOKEN\" set.'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_wkt2pyplot.TestWktToPyplotPoly.test_geometrycollection_empty": [[12, 16], ["topoml_util.wkt2pyplot.wkt2pyplot", "plt.show"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.wkt2pyplot.wkt2pyplot"], ["    ", "def", "test_geometrycollection_empty", "(", "self", ")", ":", "\n", "        ", "inputs", "=", "[", "'GEOMETRYCOLLECTION EMPTY'", "]", "# This is valid WKT", "\n", "plt", ",", "fig", ",", "ax", "=", "wkt2pyplot", "(", "inputs", ")", "\n", "plt", ".", "show", "(", ")", "# It should show an empty plot", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_wkt2pyplot.TestWktToPyplotPoly.test_polygon_conversion": [[17, 44], ["str().replace", "inputs.split.split.split", "topoml_util.wkt2pyplot.wkt2pyplot", "plt.text", "plt.text", "plt.show", "str", "datetime.datetime.datetime.now"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.wkt2pyplot.wkt2pyplot"], ["", "def", "test_polygon_conversion", "(", "self", ")", ":", "\n", "        ", "TIMESTAMP", "=", "str", "(", "datetime", ".", "now", "(", ")", ")", ".", "replace", "(", "':'", ",", "'.'", ")", "\n", "\n", "inputs", "=", "'POLYGON((1.09872727273 -0.289454545452,-0.241272727273 0.682545454538,-0.992272727274 '", "'0.292545454528,0.347727272727 -0.680454545474,1.09872727273 -0.289454545452))\\nPOLYGON(('", "'-0.976272727273 0.302545454574,-0.25627272727 0.676545454539,1.05372727273 -0.276454545443,'", "'0.320727272731 -0.654454545455,-0.477272727268 -0.0664545454754,-0.976272727273 '", "'0.302545454574))'", "\n", "inputs", "=", "inputs", ".", "split", "(", "'\\n'", ")", "\n", "\n", "target", "=", "'POLYGON((-0.974272727277 0.301545454562,-0.255272727276 0.675545454527,1.05372727273 '", "'-0.276454545443,0.320727272731 -0.654454545455,-0.477272727268 -0.0664545454754,-0.974272727277 '", "'0.301545454562))'", "\n", "\n", "prediction", "=", "[", "\n", "'POINT(-0.974272727277 0.301545454562)'", ",", "\n", "'POINT(-0.255272727276 0.675545454527)'", ",", "\n", "'POINT(1.05372727273 -0.276454545443)'", ",", "\n", "'POINT(0.320727272731 -0.654454545455)'", ",", "\n", "'POINT(-0.477272727268 -0.0664545454754)'", ",", "\n", "'POINT(-0.974272727277 0.301545454562)'", ",", "\n", "]", "\n", "plt", ",", "fig", ",", "ax", "=", "wkt2pyplot", "(", "inputs", ",", "[", "target", "]", ",", "prediction", ")", "\n", "plt", ".", "text", "(", "0.01", ",", "0.06", ",", "'prediction: some more text'", ",", "transform", "=", "ax", ".", "transAxes", ")", "\n", "plt", ".", "text", "(", "0.01", ",", "0.01", ",", "'target: some text'", ",", "transform", "=", "ax", ".", "transAxes", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_wkt2pyplot.TestWktToPyplotPoly.test_gaussian_sample_plot": [[45, 70], ["inputs.split.split.split", "numpy.array", "topoml_util.wkt2pyplot.wkt2pyplot", "plt.show", "shapely.geometry.Point", "topoml_util.GeoVectorizer.GeoVectorizer().decypher_gmm_geom", "topoml_util.GeoVectorizer.GeoVectorizer"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.wkt2pyplot.wkt2pyplot"], ["", "def", "test_gaussian_sample_plot", "(", "self", ")", ":", "\n", "\n", "        ", "inputs", "=", "'POLYGON((1.09872727273 -0.289454545452,-0.241272727273 0.682545454538,-0.992272727274 '", "'0.292545454528,0.347727272727 -0.680454545474,1.09872727273 -0.289454545452))\\nPOLYGON(('", "'-0.976272727273 0.302545454574,-0.25627272727 0.676545454539,1.05372727273 -0.276454545443,'", "'0.320727272731 -0.654454545455,-0.477272727268 -0.0664545454754,-0.976272727273 '", "'0.302545454574))'", "\n", "inputs", "=", "inputs", ".", "split", "(", "'\\n'", ")", "\n", "\n", "target", "=", "np", ".", "array", "(", "[", "\n", "# mu1 mu2  s1  s2  rho pi  [geo type one-hot            ]  [render 1hot]", "\n", "[", "0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "1.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "1.", ",", "0.", ",", "0.", ",", "]", ",", "\n", "[", "0.1", ",", "-", "0.1", ",", "0.1", ",", "0.1", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "1.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "1.", ",", "0.", ",", "0.", ",", "]", ",", "\n", "[", "-", "0.1", ",", "-", "0.1", ",", "0.1", ",", "0.1", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "1.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "1.", ",", "0.", ",", "0.", ",", "]", ",", "\n", "[", "-", "0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "1.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "1.", ",", "0.", ",", "0.", ",", "]", ",", "\n", "[", "0.1", ",", "0.1", ",", "0.1", ",", "0.1", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "1.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "1.", ",", "]", ",", "\n", "[", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "1.", ",", "]", ",", "\n", "[", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "0.", ",", "1.", ",", "]", "\n", "]", ")", "\n", "\n", "target", "=", "[", "Point", "(", "point", ")", ".", "wkt", "for", "point", "in", "\n", "GeoVectorizer", "(", "gmm_size", "=", "1", ")", ".", "decypher_gmm_geom", "(", "target", ",", "1000", ")", "]", "\n", "\n", "plt", ",", "fig", ",", "ax", "=", "wkt2pyplot", "(", "inputs", ",", "target", ",", "None", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_scaler.scale": [[5, 24], ["geom_scaler.localized_mean", "enumerate", "numpy.std", "data_point[].tolist", "min_maxs.append", "data_point[].tolist.index", "min_maxs.append", "numpy.min", "numpy.max"], "function", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_scaler.localized_mean"], ["def", "scale", "(", "vectors", ")", ":", "\n", "    ", "means", "=", "localized_mean", "(", "vectors", ")", "\n", "min_maxs", "=", "[", "]", "\n", "\n", "for", "index", ",", "data_point", "in", "enumerate", "(", "vectors", ")", ":", "\n", "        ", "full_stop_point", "=", "data_point", "[", ":", ",", "FULL_STOP_INDEX", "]", ".", "tolist", "(", ")", "\n", "\n", "try", ":", "\n", "            ", "full_stop_point_index", "=", "full_stop_point", ".", "index", "(", "1", ")", "\n", "", "except", "Exception", "as", "e", ":", "# if a dummy point is encountered", "\n", "            ", "min_maxs", ".", "append", "(", "[", "0", ",", "0", "]", ")", "\n", "continue", "\n", "\n", "", "min_maxs", ".", "append", "(", "[", "\n", "np", ".", "min", "(", "data_point", "[", "...", ",", ":", "full_stop_point_index", ",", ":", "2", "]", "-", "means", "[", "index", "]", ")", ",", "\n", "np", ".", "max", "(", "data_point", "[", "...", ",", ":", "full_stop_point_index", ",", ":", "2", "]", "-", "means", "[", "index", "]", ")", "\n", "]", ")", "\n", "\n", "", "return", "np", ".", "std", "(", "min_maxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_scaler.transform": [[26, 42], ["numpy.copy", "geom_scaler.localized_mean", "enumerate", "data_point[].tolist", "data_point[].tolist.index"], "function", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_scaler.localized_mean"], ["", "def", "transform", "(", "vectors", ",", "scale", "=", "None", ")", ":", "\n", "    ", "localized", "=", "np", ".", "copy", "(", "vectors", ")", "\n", "means", "=", "localized_mean", "(", "vectors", ")", "\n", "\n", "for", "index", ",", "data_point", "in", "enumerate", "(", "localized", ")", ":", "\n", "        ", "full_stop_point", "=", "data_point", "[", ":", ",", "FULL_STOP_INDEX", "]", ".", "tolist", "(", ")", "\n", "\n", "try", ":", "\n", "            ", "full_stop_point_index", "=", "full_stop_point", ".", "index", "(", "1", ")", "\n", "", "except", "Exception", "as", "e", ":", "# if a dummy point is encountered", "\n", "            ", "continue", "\n", "\n", "", "data_point", "[", "...", ",", ":", "full_stop_point_index", "+", "1", ",", ":", "2", "]", "-=", "means", "[", "index", "]", "\n", "data_point", "[", "...", ",", ":", "full_stop_point_index", "+", "1", ",", ":", "2", "]", "/=", "scale", "\n", "\n", "", "return", "localized", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_scaler.localized_mean": [[44, 60], ["numpy.array", "data_point[].tolist", "numpy.mean", "geom_means.append", "data_point[].tolist.index", "geom_means.append"], "function", ["None"], ["", "def", "localized_mean", "(", "vectors", ")", ":", "\n", "    ", "geom_means", "=", "[", "]", "\n", "for", "data_point", "in", "vectors", ":", "\n", "        ", "full_stop_point", "=", "data_point", "[", ":", ",", "FULL_STOP_INDEX", "]", ".", "tolist", "(", ")", "\n", "\n", "try", ":", "\n", "            ", "full_stop_point_index", "=", "full_stop_point", ".", "index", "(", "1", ")", "\n", "", "except", "Exception", "as", "e", ":", "# if a dummy point is encountered", "\n", "            ", "geom_means", ".", "append", "(", "[", "[", "[", "0", ",", "0", "]", "]", "]", ")", "\n", "continue", "\n", "\n", "# Take the mean of all non-null points for localized origin", "\n", "", "geom_mean", "=", "np", ".", "mean", "(", "data_point", "[", "0", ":", "full_stop_point_index", ",", "0", ":", "2", "]", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "\n", "geom_means", ".", "append", "(", "geom_mean", ")", "\n", "\n", "", "return", "np", ".", "array", "(", "geom_means", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_np_gaussian_2d_loss.TestNumpy2DGaussianLoss.test_r2_2d_loss": [[8, 20], ["numpy.array", "np_gaussian_2d_loss.np_r2_bivariate_gaussian_loss", "numpy.array", "np_gaussian_2d_loss.np_r2_bivariate_gaussian_loss", "test_np_gaussian_2d_loss.TestNumpy2DGaussianLoss.assertLess", "numpy.array", "np_gaussian_2d_loss.np_r2_bivariate_gaussian_loss", "test_np_gaussian_2d_loss.TestNumpy2DGaussianLoss.assertLess", "test_np_gaussian_2d_loss.TestNumpy2DGaussianLoss.assertEqual"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.np_r2_bivariate_gaussian_loss", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.np_r2_bivariate_gaussian_loss", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.np_r2_bivariate_gaussian_loss"], ["    ", "def", "test_r2_2d_loss", "(", "self", ")", ":", "\n", "        ", "vec_in", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "0", ",", "0", ",", "0", "]", "]", ")", "\n", "vec_out", "=", "vec_in", "\n", "loss1", "=", "np_r2_bivariate_gaussian_loss", "(", "vec_in", ",", "vec_out", ")", "\n", "vec_out", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "5", ",", "5", ",", "0", "]", "]", ")", "\n", "loss2", "=", "np_r2_bivariate_gaussian_loss", "(", "vec_in", ",", "vec_out", ")", "\n", "self", ".", "assertLess", "(", "loss1", ",", "loss2", ")", "\n", "\n", "vec_out", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "5", ",", "-", "5", ",", "0", "]", "]", ")", "\n", "loss3", "=", "np_r2_bivariate_gaussian_loss", "(", "vec_in", ",", "vec_out", ")", "\n", "self", ".", "assertLess", "(", "loss1", ",", "loss3", ")", "\n", "self", ".", "assertEqual", "(", "loss2", ",", "loss3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_np_gaussian_2d_loss.TestNumpy2DGaussianLoss.test_r4_bivariate_gaussian_loss": [[21, 33], ["numpy.array", "np_gaussian_2d_loss.np_r4_bivariate_gaussian_loss", "numpy.array", "np_gaussian_2d_loss.np_r4_bivariate_gaussian_loss", "test_np_gaussian_2d_loss.TestNumpy2DGaussianLoss.assertLess", "numpy.array", "np_gaussian_2d_loss.np_r4_bivariate_gaussian_loss", "test_np_gaussian_2d_loss.TestNumpy2DGaussianLoss.assertLess", "test_np_gaussian_2d_loss.TestNumpy2DGaussianLoss.assertEqual"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.np_r4_bivariate_gaussian_loss", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.np_r4_bivariate_gaussian_loss", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.np_r4_bivariate_gaussian_loss"], ["", "def", "test_r4_bivariate_gaussian_loss", "(", "self", ")", ":", "\n", "        ", "vec_in", "=", "np", ".", "array", "(", "[", "[", "[", "[", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", "]", ")", "\n", "vec_out", "=", "vec_in", "\n", "loss1", "=", "np_r4_bivariate_gaussian_loss", "(", "vec_in", ",", "vec_out", ")", "\n", "vec_out", "=", "np", ".", "array", "(", "[", "[", "[", "[", "1", ",", "1", ",", "5", ",", "5", ",", "0", ",", "0", "]", "]", "]", "]", ")", "\n", "loss2", "=", "np_r4_bivariate_gaussian_loss", "(", "vec_in", ",", "vec_out", ")", "\n", "self", ".", "assertLess", "(", "loss1", ",", "loss2", ")", "\n", "\n", "vec_out", "=", "np", ".", "array", "(", "[", "[", "[", "[", "1", ",", "1", ",", "5", ",", "-", "5", ",", "0", ",", "0", "]", "]", "]", "]", ")", "\n", "loss3", "=", "np_r4_bivariate_gaussian_loss", "(", "vec_in", ",", "vec_out", ")", "\n", "self", ".", "assertLess", "(", "loss1", ",", "loss3", ")", "\n", "self", ".", "assertEqual", "(", "loss2", ",", "loss3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_np_gaussian_2d_loss.TestNumpy2DGaussianLoss.test_r4_bivariate_gmm_zeros_loss": [[34, 50], ["numpy.array", "numpy.repeat", "np_gaussian_2d_loss.softmax", "np_gaussian_2d_loss.np_r4_bivariate_gaussian", "numpy.sum", "numpy.array", "numpy.repeat", "np_gaussian_2d_loss.softmax", "numpy.sum", "test_np_gaussian_2d_loss.TestNumpy2DGaussianLoss.assertLess", "np_gaussian_2d_loss.np_r4_bivariate_gaussian", "numpy.log", "numpy.log"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.np_r4_bivariate_gaussian", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.np_r4_bivariate_gaussian"], ["", "def", "test_r4_bivariate_gmm_zeros_loss", "(", "self", ")", ":", "\n", "        ", "vec_in", "=", "np", ".", "array", "(", "[", "[", "[", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", "]", ")", "\n", "vec_in", "=", "np", ".", "repeat", "(", "vec_in", ",", "6", ",", "axis", "=", "2", ")", "# 6 gaussian mixture components", "\n", "pi_index", "=", "5", "\n", "pi_weights", "=", "softmax", "(", "vec_in", "[", ":", ",", ":", ",", ":", ",", "pi_index", "]", ")", "\n", "vec_out", "=", "vec_in", "\n", "loss1", "=", "np_r4_bivariate_gaussian", "(", "vec_in", ",", "vec_out", ")", "\n", "loss1", "=", "loss1", "*", "pi_weights", "\n", "gmm_loss1", "=", "np", ".", "sum", "(", "-", "np", ".", "log", "(", "loss1", "+", "epsilon", ")", ",", "keepdims", "=", "True", ")", "\n", "\n", "vec_out", "=", "np", ".", "array", "(", "[", "[", "[", "[", "1", ",", "1", ",", "5", ",", "5", ",", "0", ",", "0", "]", "]", "]", "]", ")", "\n", "vec_out", "=", "np", ".", "repeat", "(", "vec_out", ",", "6", ",", "axis", "=", "2", ")", "\n", "pi_weights", "=", "softmax", "(", "vec_out", "[", ":", ",", ":", ",", ":", ",", "pi_index", "]", ")", "\n", "loss2", "=", "np_r4_bivariate_gaussian", "(", "vec_in", ",", "vec_out", ")", "*", "pi_weights", "\n", "gmm_loss2", "=", "np", ".", "sum", "(", "-", "np", ".", "log", "(", "loss2", "+", "epsilon", ")", ",", "keepdims", "=", "True", ")", "\n", "self", ".", "assertLess", "(", "gmm_loss1", "[", "0", ",", "0", ",", "0", "]", ",", "gmm_loss2", "[", "0", ",", "0", ",", "0", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_scaler.TestGeomScaler.test_localized_mean": [[48, 52], ["topoml_util.geom_scaler.localized_mean", "test_geom_scaler.TestGeomScaler.assertTrue"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_scaler.localized_mean"], ["    ", "def", "test_localized_mean", "(", "self", ")", ":", "\n", "        ", "means", "=", "gs", ".", "localized_mean", "(", "square", ")", "\n", "for", "mean", "in", "means", "[", "0", "]", ":", "\n", "            ", "self", ".", "assertTrue", "(", "(", "mean", "==", "0.5", ")", ".", "all", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_scaler.TestGeomScaler.test_localized_mean_rectangle": [[53, 57], ["topoml_util.geom_scaler.localized_mean", "test_geom_scaler.TestGeomScaler.assertEqual", "test_geom_scaler.TestGeomScaler.assertEqual"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_scaler.localized_mean"], ["", "", "def", "test_localized_mean_rectangle", "(", "self", ")", ":", "\n", "        ", "means", "=", "gs", ".", "localized_mean", "(", "rectangle", ")", "\n", "self", ".", "assertEqual", "(", "means", "[", "0", ",", "0", ",", "0", "]", ",", "0.5", ")", "\n", "self", ".", "assertEqual", "(", "means", "[", "0", ",", "0", ",", "1", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_scaler.TestGeomScaler.test_localized_mean_dup_nodes": [[58, 61], ["topoml_util.geom_scaler.localized_mean", "test_geom_scaler.TestGeomScaler.assertTrue"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_scaler.localized_mean"], ["", "def", "test_localized_mean_dup_nodes", "(", "self", ")", ":", "\n", "        ", "means", "=", "gs", ".", "localized_mean", "(", "square_duplicate_nodes", ")", "\n", "self", ".", "assertTrue", "(", "(", "means", "==", "0.75", ")", ".", "all", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_scaler.TestGeomScaler.test_scaling_square": [[62, 65], ["topoml_util.geom_scaler.scale", "test_geom_scaler.TestGeomScaler.assertEqual"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_scaler.scale"], ["", "def", "test_scaling_square", "(", "self", ")", ":", "\n", "        ", "scale", "=", "gs", ".", "scale", "(", "square", ")", "\n", "self", ".", "assertEqual", "(", "scale", ",", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_scaler.TestGeomScaler.test_scaling_square_dup_nodes": [[66, 69], ["topoml_util.geom_scaler.scale", "test_geom_scaler.TestGeomScaler.assertEqual"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_scaler.scale"], ["", "def", "test_scaling_square_dup_nodes", "(", "self", ")", ":", "\n", "        ", "scale", "=", "gs", ".", "scale", "(", "square_duplicate_nodes", ")", "\n", "self", ".", "assertEqual", "(", "scale", ",", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_scaler.TestGeomScaler.test_transform": [[70, 80], ["topoml_util.geom_scaler.scale", "topoml_util.geom_scaler.transform", "test_geom_scaler.TestGeomScaler.assertTrue", "numpy.std", "test_geom_scaler.TestGeomScaler.assertAlmostEqual", "geom[].flatten"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_scaler.scale", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_scaler.transform"], ["", "def", "test_transform", "(", "self", ")", ":", "\n", "# scaled_square = square[0] * 2", "\n", "# scaled_square[4, 12] = 1.", "\n", "        ", "scale", "=", "gs", ".", "scale", "(", "square", ")", "\n", "n_square", "=", "gs", ".", "transform", "(", "square", ",", "scale", "=", "scale", ")", "\n", "self", ".", "assertTrue", "(", "(", "n_square", "==", "normalized_square", ")", ".", "all", "(", ")", ")", "\n", "coords", "=", "[", "geom", "[", ":", ",", ":", "2", "]", ".", "flatten", "(", ")", "for", "geom", "in", "n_square", "]", "\n", "coords", "=", "[", "item", "for", "sublist", "in", "coords", "for", "item", "in", "sublist", "]", "\n", "std", "=", "np", ".", "std", "(", "coords", ")", "\n", "self", ".", "assertAlmostEqual", "(", "std", ",", "1.", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_geom_scaler.TestGeomScaler.test_upsized_transform": [[81, 92], ["topoml_util.geom_scaler.scale", "topoml_util.geom_scaler.transform", "test_geom_scaler.TestGeomScaler.assertTrue", "numpy.std", "test_geom_scaler.TestGeomScaler.assertAlmostEqual", "geom[].flatten"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_scaler.scale", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_scaler.transform"], ["", "def", "test_upsized_transform", "(", "self", ")", ":", "\n", "        ", "square_0", "=", "square", "[", "0", "]", "*", "2", "\n", "square_0", "[", ":", "4", ",", "2", "]", "=", "1.", "\n", "square_0", "[", "4", ",", "4", "]", "=", "1.", "\n", "scale", "=", "gs", ".", "scale", "(", "[", "square_0", "]", ")", "\n", "n_square", "=", "gs", ".", "transform", "(", "[", "square_0", "]", ",", "scale", "=", "scale", ")", "\n", "self", ".", "assertTrue", "(", "(", "n_square", "==", "normalized_square", ")", ".", "all", "(", ")", ")", "\n", "coords", "=", "[", "geom", "[", ":", ",", ":", "2", "]", ".", "flatten", "(", ")", "for", "geom", "in", "n_square", "]", "\n", "coords", "=", "[", "item", "for", "sublist", "in", "coords", "for", "item", "in", "sublist", "]", "\n", "std", "=", "np", ".", "std", "(", "coords", ")", "\n", "self", ".", "assertAlmostEqual", "(", "std", ",", "1.", ",", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.__init__": [[9, 16], ["keras.preprocessing.text.Tokenizer.__init__", "keras.preprocessing.text.Tokenizer.Tokenize.fit_on_texts"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.LoggerCallback.EpochLogger.__init__"], ["def", "__init__", "(", "self", ",", "texts", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "num_words", "=", "None", ",", "\n", "filters", "=", "'\\t\\n'", ",", "\n", "lower", "=", "True", ",", "\n", "split", "=", "\"\"", ",", "\n", "char_level", "=", "True", ")", "\n", "self", ".", "fit_on_texts", "(", "texts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.truncate": [[17, 37], ["enumerate", "len", "training_set.append", "target_set.append"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "truncate", "(", "max_len", ",", "untruncated_training_set", ",", "untruncated_target_set", ")", ":", "\n", "        ", "\"\"\"\n        Method for truncating the training and target set to fit the maximum\n            sequence length, batch and validation set size\n        :param max_len: maximum length of characters per sequence/sentence\n        :param untruncated_training_set: untruncated list of input sequences\n        :param untruncated_target_set: untruncated list of target output sequences\n        :return: training_set, target_set: a tuple of truncated training and target sets\n        \"\"\"", "\n", "training_set", "=", "[", "]", "\n", "target_set", "=", "[", "]", "\n", "\n", "# Restrict input to be of less or equal length as the maximum length.", "\n", "for", "index", ",", "record", "in", "enumerate", "(", "untruncated_training_set", ")", ":", "\n", "            ", "if", "len", "(", "record", ")", "<=", "max_len", ":", "\n", "                ", "training_set", ".", "append", "(", "record", ")", "\n", "target_set", ".", "append", "(", "untruncated_target_set", "[", "index", "]", ")", "\n", "\n", "", "", "return", "training_set", ",", "target_set", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.batch_truncate": [[38, 70], ["enumerate", "int", "len", "len", "training_set.append", "target_set.append", "len", "len", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "batch_truncate", "(", "batch_size", ",", "max_len", ",", "validation_split", ",", "untruncated_training_set", ",", "untruncated_target_set", ")", ":", "\n", "        ", "\"\"\"\n        Method for truncating the training and target set to fit the maximum\n            sequence length, batch and validation set size\n        :param batch_size: size of the epoch batch size\n        :param max_len: maximum length of characters per sequence/sentence\n        :param validation_split: ratio of the training/validation split\n        :param untruncated_training_set: untruncated list of input sequences\n        :param untruncated_target_set: untruncated list of target output sequences\n        :return: training_set, target_set: a tuple of truncated training and target sets\n        \"\"\"", "\n", "training_set", "=", "[", "]", "\n", "target_set", "=", "[", "]", "\n", "\n", "# Restrict input to be of less or equal length as the maximum length.", "\n", "for", "index", ",", "record", "in", "enumerate", "(", "untruncated_training_set", ")", ":", "\n", "            ", "if", "len", "(", "record", ")", "<=", "max_len", ":", "\n", "                ", "training_set", ".", "append", "(", "record", ")", "\n", "target_set", ".", "append", "(", "untruncated_target_set", "[", "index", "]", ")", "\n", "\n", "# Truncate the array to the batch size, accounting for the validation set", "\n", "# The validation sample size must be a multiple of the batch size", "\n", "# Say the truncated length is 27,000 and the split ratio is 0.1, the validation sample size is 2700", "\n", "", "", "validation_size", "=", "int", "(", "len", "(", "training_set", ")", "*", "validation_split", ")", "\n", "# We need to get it down to 2000", "\n", "validation_size", "=", "validation_size", "-", "validation_size", "%", "batch_size", "\n", "# The truncated length must be a multiple of the validation sample size", "\n", "truncated_size", "=", "len", "(", "training_set", ")", "-", "len", "(", "training_set", ")", "%", "int", "(", "validation_size", "/", "validation_split", ")", "\n", "training_set", "=", "training_set", "[", "0", ":", "truncated_size", "]", "\n", "target_set", "=", "target_set", "[", "0", ":", "truncated_size", "]", "\n", "return", "training_set", ",", "target_set", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.max_sample": [[71, 75], ["numpy.argmax"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "max_sample", "(", "predictions", ")", ":", "\n", "# helper function to sample an index from a probability array", "\n", "        ", "return", "np", ".", "argmax", "(", "predictions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.char_level_tokenize": [[76, 79], ["keras.preprocessing.text.Tokenizer.Tokenize.texts_to_sequences"], "methods", ["None"], ["", "def", "char_level_tokenize", "(", "self", ",", "texts", ")", ":", "\n", "        ", "sequences", "=", "self", ".", "texts_to_sequences", "(", "texts", ")", "\n", "return", "sequences", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.decypher": [[80, 99], ["decyphered.append", "keras.preprocessing.text.Tokenizer.Tokenize.word_index.items", "decyphered_sequence.append", "decyphered_sequence.append"], "methods", ["None"], ["", "def", "decypher", "(", "self", ",", "sequences", ")", ":", "\n", "        ", "\"\"\"\n        Decyphers a encoded 3D array of one-hot vectors back to a 2D array of sentences\n        :param sequences:\n        :return:\n        \"\"\"", "\n", "# sampled = [Tokenize.max_sample(token) for token in prediction]", "\n", "# sequence.append(sampled)", "\n", "inv_cipher", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "self", ".", "word_index", ".", "items", "(", ")", "}", "\n", "decyphered", "=", "[", "]", "\n", "for", "sequence", "in", "sequences", ":", "\n", "            ", "decyphered_sequence", "=", "[", "]", "\n", "for", "num", "in", "sequence", ":", "\n", "                ", "if", "num", "in", "inv_cipher", ":", "\n", "                    ", "decyphered_sequence", ".", "append", "(", "inv_cipher", "[", "num", "]", ")", "\n", "", "else", ":", "\n", "                    ", "decyphered_sequence", ".", "append", "(", "' '", ")", "\n", "", "", "decyphered", ".", "append", "(", "''", ".", "join", "(", "[", "char", "for", "char", "in", "decyphered_sequence", "]", ")", ")", "\n", "", "return", "decyphered", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.one_hot": [[100, 108], ["numpy.zeros", "enumerate", "enumerate", "len", "len"], "methods", ["None"], ["", "def", "one_hot", "(", "self", ",", "input_sequences", ",", "maxlen", ")", ":", "\n", "# The third dimension of the matrix is equal to the length of the word index plus one:", "\n", "# There is no '0' index in the word index.", "\n", "        ", "x", "=", "np", ".", "zeros", "(", "(", "len", "(", "input_sequences", ")", ",", "maxlen", ",", "len", "(", "self", ".", "word_index", ")", "+", "1", ")", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "for", "i", ",", "sentence", "in", "enumerate", "(", "input_sequences", ")", ":", "\n", "            ", "for", "t", ",", "char", "in", "enumerate", "(", "sentence", ")", ":", "\n", "                ", "x", "[", "i", ",", "t", ",", "self", ".", "word_index", "[", "char", "]", "]", "=", "True", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_rasterization.TestRasterize.test_first": [[8, 14], ["rasterio.features.rasterize", "test_rasterization.TestRasterize.assertEqual", "shapely.wkt.loads"], "methods", ["None"], ["    ", "def", "test_first", "(", "self", ")", ":", "\n", "        ", "size", "=", "20", "\n", "first", "=", "\"POLYGON(({0} {0}, {0} -{0}, -{0} -{0}, -{0} {0}, {0} {0}))\"", ".", "format", "(", "size", ")", "\n", "geo_interfaces", "=", "[", "wkt", ".", "loads", "(", "first", ")", ".", "__geo_interface__", "]", "\n", "raster", "=", "features", ".", "rasterize", "(", "geo_interfaces", ",", "out_shape", "=", "[", "255", ",", "255", "]", ")", "\n", "self", ".", "assertEqual", "(", "raster", "[", "100", ",", "100", "]", ",", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.PyplotLogger.DecypherAll.__init__": [[17, 37], ["keras.callbacks.Callback.__init__", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.LoggerCallback.EpochLogger.__init__"], ["    ", "def", "__init__", "(", "self", ",", "gmm_size", "=", "1", ",", "sample_size", "=", "3", ",", "input_slice", "=", "lambda", "x", ":", "x", "[", "0", ":", "1", "]", ",", "target_slice", "=", "lambda", "x", ":", "x", "[", "1", ":", "2", "]", ",", "\n", "stdout", "=", "False", ",", "save_plots", "=", "True", ",", "plot_dir", "=", "'plots'", ")", ":", "\n", "        ", "\"\"\"\n        Class constructor that instantiates with a few vital settings in order to decypher the output\n        :type target_slice: object\n        :param gmm_size: size as an integer of the gaussian mixture model\n        :param sample_size: size as an integer of the number of samples to log\n        :param stdout: boolean whether or not to log to stdout. Mixture models can have a lot of output.\n        :param plot_dir: string of a directory to save plots to, relative to the path called to execute the script\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gmm_size", "=", "gmm_size", "\n", "self", ".", "sample_size", "=", "sample_size", "\n", "self", ".", "input_slice", "=", "input_slice", "\n", "self", ".", "target_slice", "=", "target_slice", "\n", "self", ".", "stdout", "=", "stdout", "\n", "self", ".", "save_plots", "=", "save_plots", "\n", "\n", "os", ".", "makedirs", "(", "plot_dir", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "plot_dir", "=", "plot_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.PyplotLogger.DecypherAll.on_epoch_end": [[38, 80], ["random.seed", "random.sample", "numpy.array", "numpy.array", "print", "zip", "datetime.datetime.datetime.now", "range", "PyplotLogger.DecypherAll.input_slice", "PyplotLogger.DecypherAll.target_slice", "predictions.append", "str().replace", "len", "PyplotLogger.DecypherAll.model.predict", "len", "print", "pp.pprint", "print", "pp.pprint", "print", "pp.pprint", "wkt2pyplot.save_plot", "str", "GeoVectorizer.GeoVectorizer.GeoVectorizer.decypher", "GeoVectorizer.GeoVectorizer.GeoVectorizer.decypher", "datetime.datetime.datetime.now", "shapely.geometry.Point", "GeoVectorizer.GeoVectorizer.GeoVectorizer().decypher_gmm_geom", "GeoVectorizer.GeoVectorizer.GeoVectorizer"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.wkt2pyplot.save_plot", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.decypher", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.Tokenizer.Tokenize.decypher"], ["", "def", "on_epoch_end", "(", "self", ",", "epoch", ",", "logs", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Epochal logging function that outputs to a pyplot saved to a timestamped .png file\n        :param epoch: automatically instantiated by Keras\n        :param logs: automatically instantiated by Keras\n        \"\"\"", "\n", "random", ".", "seed", "(", "datetime", ".", "now", "(", ")", ")", "\n", "\n", "sample_indexes", "=", "random", ".", "sample", "(", "range", "(", "len", "(", "self", ".", "validation_data", "[", "0", "]", ")", ")", ",", "self", ".", "sample_size", ")", "\n", "inputs", "=", "np", ".", "array", "(", "self", ".", "input_slice", "(", "self", ".", "validation_data", ")", ")", "\n", "targets", "=", "np", ".", "array", "(", "self", ".", "target_slice", "(", "self", ".", "validation_data", ")", ")", "\n", "input_samples", "=", "[", "inputs", "[", ":", ",", "sample_index", "]", "for", "sample_index", "in", "sample_indexes", "]", "\n", "target_samples", "=", "[", "targets", "[", ":", ",", "sample_index", "]", "for", "sample_index", "in", "sample_indexes", "]", "\n", "\n", "predictions", "=", "[", "]", "\n", "for", "sample_index", "in", "sample_indexes", ":", "\n", "            ", "sample", "=", "inputs", "[", ":", ",", "sample_index", ":", "sample_index", "+", "1", "]", "\n", "predictions", ".", "append", "(", "self", ".", "model", ".", "predict", "(", "[", "*", "sample", "]", ")", ")", "\n", "\n", "", "print", "(", "'\\nPlotting output for %i inputs, targets and predictions...'", "%", "len", "(", "predictions", ")", ")", "\n", "\n", "for", "(", "input_vectors", ",", "target_vectors", ",", "prediction_vectors", ")", "in", "zip", "(", "input_samples", ",", "target_samples", ",", "predictions", ")", ":", "\n", "            ", "timestamp", "=", "str", "(", "datetime", ".", "now", "(", ")", ")", ".", "replace", "(", "':'", ",", "'.'", ")", "\n", "\n", "if", "self", ".", "stdout", ":", "\n", "                ", "print", "(", "'Input:'", ")", "\n", "pp", ".", "pprint", "(", "input_vectors", ")", "\n", "print", "(", "'Target:'", ")", "\n", "pp", ".", "pprint", "(", "target_vectors", ")", "\n", "print", "(", "'Prediction:'", ")", "\n", "pp", ".", "pprint", "(", "prediction_vectors", ")", "\n", "\n", "", "if", "self", ".", "save_plots", ":", "\n", "                ", "input_polys", "=", "[", "GeoVectorizer", ".", "decypher", "(", "poly", ")", "for", "poly", "in", "input_vectors", "]", "\n", "target_polys", "=", "[", "GeoVectorizer", ".", "decypher", "(", "target_vectors", "[", "0", "]", ")", "]", "\n", "prediction_points", "=", "[", "\n", "Point", "(", "point", ")", ".", "wkt", "for", "point", "in", "\n", "GeoVectorizer", "(", "gmm_size", "=", "self", ".", "gmm_size", ")", ".", "decypher_gmm_geom", "(", "prediction_vectors", "[", "0", "]", ",", "500", ")", "\n", "]", "\n", "\n", "geoms", "=", "input_polys", ",", "target_polys", ",", "prediction_points", "\n", "save_plot", "(", "geoms", ",", "self", ".", "plot_dir", ",", "timestamp", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softplus": [[6, 8], ["numpy.logaddexp"], "function", ["None"], ["def", "softplus", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "logaddexp", "(", "1.0", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax": [[10, 14], ["numpy.exp", "np.exp.sum", "numpy.max"], "function", ["None"], ["", "def", "softmax", "(", "x", ")", ":", "\n", "    ", "\"\"\"Compute softmax values for each sets of scores in x.\"\"\"", "\n", "e_x", "=", "np", ".", "exp", "(", "x", "-", "np", ".", "max", "(", "x", ")", ")", "\n", "return", "e_x", "/", "e_x", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.np_r2_bivariate_gaussian_loss": [[18, 48], ["numpy.exp", "numpy.exp", "numpy.tanh", "numpy.log", "numpy.log", "np_gaussian_2d_loss.softplus", "np_gaussian_2d_loss.softplus", "np_gaussian_2d_loss.softplus", "numpy.exp", "numpy.abs", "numpy.abs", "numpy.square", "numpy.square", "numpy.square", "numpy.log", "numpy.abs", "numpy.abs", "numpy.sqrt", "numpy.square", "numpy.square"], "function", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softplus", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softplus", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softplus"], ["", "def", "np_r2_bivariate_gaussian_loss", "(", "true", ",", "pred", ")", ":", "\n", "    ", "\"\"\"Returns results of eq # 24 of http://arxiv.org/abs/1308.0850\"\"\"", "\n", "x_coord", "=", "true", "[", ":", ",", "0", "]", "\n", "y_coord", "=", "true", "[", ":", ",", "1", "]", "\n", "mu_x", "=", "pred", "[", ":", ",", "0", "]", "\n", "mu_y", "=", "pred", "[", ":", ",", "1", "]", "\n", "\n", "# exponentiate the sigmas and also make correlative rho between -1 and 1.", "\n", "# eq. # 21 and 22 of http://arxiv.org/abs/1308.0850", "\n", "# analogous to https://github.com/tensorflow/magenta/blob/master/magenta/models/sketch_rnn/model.py#L326", "\n", "sigma_x", "=", "np", ".", "exp", "(", "np", ".", "abs", "(", "pred", "[", ":", ",", "2", "]", ")", ")", "\n", "sigma_y", "=", "np", ".", "exp", "(", "np", ".", "abs", "(", "pred", "[", ":", ",", "3", "]", ")", ")", "\n", "rho", "=", "np", ".", "tanh", "(", "pred", "[", ":", ",", "4", "]", ")", "# hardcode to avoid drifting to -1 or 1", "\n", "\n", "norm1", "=", "np", ".", "log", "(", "1", "+", "np", ".", "abs", "(", "x_coord", "-", "mu_x", ")", ")", "\n", "norm2", "=", "np", ".", "log", "(", "1", "+", "np", ".", "abs", "(", "y_coord", "-", "mu_y", ")", ")", "\n", "\n", "variance_x", "=", "softplus", "(", "np", ".", "square", "(", "sigma_x", ")", ")", "\n", "variance_y", "=", "softplus", "(", "np", ".", "square", "(", "sigma_y", ")", ")", "\n", "s1s2", "=", "softplus", "(", "sigma_x", "*", "sigma_y", ")", "# very large if sigma_x and/or sigma_y are very large", "\n", "\n", "# eq 25 of http://arxiv.org/abs/1308.0850", "\n", "z", "=", "(", "(", "np", ".", "square", "(", "norm1", ")", "/", "variance_x", ")", "+", "\n", "(", "np", ".", "square", "(", "norm2", ")", "/", "variance_y", ")", "-", "\n", "(", "2", "*", "rho", "*", "norm1", "*", "norm2", "/", "s1s2", ")", ")", "# z \u2192 -\u221e if rho * norm1 * norm2 \u2192 \u221e and/or s1s2 \u2192 0", "\n", "neg_rho", "=", "1", "-", "np", ".", "square", "(", "rho", ")", "# \u2192 0 if rho \u2192 {1, -1}", "\n", "numerator", "=", "np", ".", "exp", "(", "-", "z", "/", "(", "2", "*", "neg_rho", ")", ")", "# \u2192 \u221e if z \u2192 -\u221e and/or neg_rho \u2192 0", "\n", "denominator", "=", "(", "2", "*", "np", ".", "pi", "*", "s1s2", "*", "np", ".", "sqrt", "(", "neg_rho", ")", ")", "+", "epsilon", "# \u2192 0 if s1s2 \u2192 0 and/or neg_rho \u2192 0", "\n", "pdf", "=", "numerator", "/", "denominator", "# \u2192 \u221e if denominator \u2192 0 and/or if numerator \u2192 \u221e", "\n", "return", "-", "np", ".", "log", "(", "pdf", "+", "epsilon", ")", "# \u2192 -\u221e if pdf \u2192 \u221e", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.np_r4_bivariate_gaussian_loss": [[53, 56], ["np_gaussian_2d_loss.np_r4_bivariate_gaussian", "numpy.log"], "function", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.np_r4_bivariate_gaussian"], ["", "def", "np_r4_bivariate_gaussian_loss", "(", "true", ",", "pred", ")", ":", "\n", "    ", "pdf", "=", "np_r4_bivariate_gaussian", "(", "true", ",", "pred", ")", "\n", "return", "-", "np", ".", "log", "(", "pdf", "+", "epsilon", ")", "# \u2192 -\u221e if pdf \u2192 \u221e", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.np_r4_bivariate_gaussian": [[58, 86], ["numpy.exp", "numpy.exp", "numpy.log", "numpy.log", "np_gaussian_2d_loss.softplus", "np_gaussian_2d_loss.softplus", "np_gaussian_2d_loss.softplus", "numpy.exp", "numpy.abs", "numpy.abs", "numpy.tanh", "numpy.square", "numpy.square", "numpy.square", "numpy.abs", "numpy.abs", "numpy.sqrt", "numpy.square", "numpy.square"], "function", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softplus", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softplus", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softplus"], ["", "def", "np_r4_bivariate_gaussian", "(", "true", ",", "pred", ")", ":", "\n", "    ", "\"\"\"Returns results of eq # 24 of http://arxiv.org/abs/1308.0850\"\"\"", "\n", "x_coord", "=", "true", "[", ":", ",", ":", ",", ":", ",", "0", "]", "\n", "y_coord", "=", "true", "[", ":", ",", ":", ",", ":", ",", "1", "]", "\n", "mu_x", "=", "pred", "[", ":", ",", ":", ",", ":", ",", "0", "]", "\n", "mu_y", "=", "pred", "[", ":", ",", ":", ",", ":", ",", "1", "]", "\n", "# exponentiate the sigmas and also make correlative rho between -1 and 1.", "\n", "# eq. # 21 and 22 of http://arxiv.org/abs/1308.0850", "\n", "# analogous to https://github.com/tensorflow/magenta/blob/master/magenta/models/sketch_rnn/model.py#L326", "\n", "sigma_x", "=", "np", ".", "exp", "(", "np", ".", "abs", "(", "pred", "[", ":", ",", ":", ",", ":", ",", "2", "]", ")", ")", "\n", "sigma_y", "=", "np", ".", "exp", "(", "np", ".", "abs", "(", "pred", "[", ":", ",", ":", ",", ":", ",", "3", "]", ")", ")", "\n", "rho", "=", "np", ".", "tanh", "(", "pred", "[", ":", ",", ":", ",", ":", ",", "4", "]", ")", "*", "0.1", "# hardcode to avoid drifting to -1 or 1", "\n", "\n", "norm1", "=", "np", ".", "log", "(", "1", "+", "np", ".", "abs", "(", "x_coord", "-", "mu_x", ")", ")", "\n", "norm2", "=", "np", ".", "log", "(", "1", "+", "np", ".", "abs", "(", "y_coord", "-", "mu_y", ")", ")", "\n", "\n", "variance_x", "=", "softplus", "(", "np", ".", "square", "(", "sigma_x", ")", ")", "\n", "variance_y", "=", "softplus", "(", "np", ".", "square", "(", "sigma_y", ")", ")", "\n", "s1s2", "=", "softplus", "(", "sigma_x", "*", "sigma_y", ")", "# very large if sigma_x and/or sigma_y are very large", "\n", "# eq 25 of http://arxiv.org/abs/1308.0850", "\n", "z", "=", "(", "(", "np", ".", "square", "(", "norm1", ")", "/", "variance_x", ")", "+", "\n", "(", "np", ".", "square", "(", "norm2", ")", "/", "variance_y", ")", "-", "\n", "(", "2", "*", "rho", "*", "norm1", "*", "norm2", "/", "s1s2", ")", ")", "# z \u2192 -\u221e if rho * norm1 * norm2 \u2192 \u221e and/or s1s2 \u2192 0", "\n", "neg_rho", "=", "1", "-", "np", ".", "square", "(", "rho", ")", "# \u2192 0 if rho \u2192 {1, -1}", "\n", "numerator", "=", "np", ".", "exp", "(", "-", "z", "/", "(", "2", "*", "neg_rho", ")", ")", "# \u2192 \u221e if z \u2192 -\u221e and/or neg_rho \u2192 0", "\n", "denominator", "=", "(", "2", "*", "np", ".", "pi", "*", "s1s2", "*", "np", ".", "sqrt", "(", "neg_rho", ")", ")", "+", "epsilon", "# \u2192 0 if s1s2 \u2192 0 and/or neg_rho \u2192 0", "\n", "pdf", "=", "numerator", "/", "denominator", "# \u2192 \u221e if denominator \u2192 0 and/or if numerator \u2192 \u221e", "\n", "return", "pdf", "\n", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_fourier_descriptors.geom_fourier_descriptors": [[7, 20], ["enumerate", "geom_fourier_descriptors.create_geom_fourier_descriptor", "fourier_descriptors.append"], "function", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_fourier_descriptors.create_geom_fourier_descriptor"], ["def", "geom_fourier_descriptors", "(", "shapes", ",", "order", ")", ":", "\n", "    ", "\"\"\"\n    Creates a stacked array of different variations of fourier descriptors: normalized, non-normalized\n    :param shapes: a list of shapely shapes\n    :param order: the fourier descriptor order (the size of the returned array along the 0-axis)\n    :return: a 2d array with shape ((order * 2) + 3, 4)\n    \"\"\"", "\n", "fourier_descriptors", "=", "[", "]", "\n", "for", "index", ",", "shape", "in", "enumerate", "(", "shapes", ")", ":", "\n", "        ", "coeffs", "=", "create_geom_fourier_descriptor", "(", "shape", ",", "order", ")", "\n", "fourier_descriptors", ".", "append", "(", "coeffs", ")", "\n", "\n", "", "return", "fourier_descriptors", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.geom_fourier_descriptors.create_geom_fourier_descriptor": [[22, 46], ["pyefd.elliptic_fourier_descriptors", "pyefd.elliptic_fourier_descriptors", "zip", "len", "numpy.append", "numpy.append"], "function", ["None"], ["", "def", "create_geom_fourier_descriptor", "(", "shape", ",", "order", ")", ":", "\n", "    ", "boundary", "=", "shape", ".", "boundary", "\n", "while", "boundary", ".", "geom_type", "==", "\"MultiLineString\"", ":", "\n", "        ", "boundary", "=", "boundary", ".", "geoms", "[", "0", "]", "\n", "# Set normalize to false to retain size information.", "\n", "", "non_normalized_coeffs", "=", "elliptic_fourier_descriptors", "(", "\n", "boundary", ".", "coords", ",", "order", "=", "order", ",", "normalize", "=", "False", ")", "\n", "# normalized Fouriers", "\n", "normalized_coeffs", "=", "elliptic_fourier_descriptors", "(", "\n", "boundary", ".", "coords", ",", "order", "=", "order", ",", "normalize", "=", "True", ")", "\n", "\n", "# TODO: create centroid distance fourier descriptors", "\n", "# See https://doi-org.vu-nl.idm.oclc.org/10.1016/j.image.2009.04.001", "\n", "# coords = np.array(boundary.coords)", "\n", "# centroid_distances = [boundary.centroid.distance(Point(point)) for point in coords]", "\n", "# centroid_fourier_descriptors = elliptic_fourier_descriptors(centroid_distances, normalize=True)", "\n", "\n", "# Stack 'em all", "\n", "coeffs", "=", "[", "shape", ".", "area", ",", "boundary", ".", "length", ",", "len", "(", "boundary", ".", "coords", ")", "]", "\n", "for", "nn", ",", "n", "in", "zip", "(", "non_normalized_coeffs", ",", "normalized_coeffs", ")", ":", "\n", "        ", "coeffs", "=", "np", ".", "append", "(", "coeffs", ",", "nn", ")", "# without axis this will just create an array", "\n", "coeffs", "=", "np", ".", "append", "(", "coeffs", ",", "n", ")", "\n", "\n", "", "return", "coeffs", "\n", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_GeoVectorizer.TestVectorizer.test_max_points": [[57, 60], ["GeoVectorizer.GeoVectorizer.GeoVectorizer.max_points", "test_GeoVectorizer.TestVectorizer.assertEqual"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.max_points"], ["    ", "def", "test_max_points", "(", "self", ")", ":", "\n", "        ", "max_points", "=", "GeoVectorizer", ".", "max_points", "(", "brt_wkt", ",", "osm_wkt", ")", "\n", "self", ".", "assertEqual", "(", "max_points", ",", "159", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_GeoVectorizer.TestVectorizer.test_vectorize_one_wkt": [[68, 77], ["range", "test_GeoVectorizer.TestVectorizer.assertEqual", "test_GeoVectorizer.TestVectorizer.assertEqual", "test_GeoVectorizer.TestVectorizer.assertEqual", "len", "vectorized.append", "len", "len", "GeoVectorizer.GeoVectorizer.GeoVectorizer.vectorize_wkt"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.vectorize_wkt"], ["", "def", "test_vectorize_one_wkt", "(", "self", ")", ":", "\n", "        ", "max_points", "=", "20", "\n", "input_set", "=", "SOURCE_DATA", "[", "'intersection_wkt'", "]", "\n", "vectorized", "=", "[", "]", "\n", "for", "index", "in", "range", "(", "len", "(", "input_set", ")", ")", ":", "\n", "            ", "vectorized", ".", "append", "(", "GeoVectorizer", ".", "vectorize_wkt", "(", "input_set", "[", "index", "]", ",", "max_points", ",", "simplify", "=", "True", ")", ")", "\n", "", "self", ".", "assertEqual", "(", "len", "(", "input_set", ")", ",", "len", "(", "brt_wkt", ")", ")", "\n", "self", ".", "assertEqual", "(", "vectorized", "[", "0", "]", ".", "shape", ",", "(", "19", ",", "GEO_VECTOR_LEN", ")", ")", "\n", "self", ".", "assertEqual", "(", "vectorized", "[", "1", "]", ".", "shape", ",", "(", "1", ",", "GEO_VECTOR_LEN", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_GeoVectorizer.TestVectorizer.test_fixed_size": [[78, 83], ["test_GeoVectorizer.TestVectorizer.assertEqual", "GeoVectorizer.GeoVectorizer.GeoVectorizer.vectorize_wkt", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.vectorize_wkt"], ["", "def", "test_fixed_size", "(", "self", ")", ":", "\n", "        ", "max_points", "=", "20", "\n", "input_set", "=", "SOURCE_DATA", "[", "'intersection_wkt'", "]", "\n", "vectorized", "=", "[", "GeoVectorizer", ".", "vectorize_wkt", "(", "wkt", ",", "max_points", ",", "simplify", "=", "True", ",", "fixed_size", "=", "True", ")", "for", "wkt", "in", "input_set", "]", "\n", "self", ".", "assertEqual", "(", "np", ".", "array", "(", "vectorized", ")", ".", "shape", ",", "(", "input_set", ".", "size", ",", "20", ",", "GEO_VECTOR_LEN", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_GeoVectorizer.TestVectorizer.test_non_empty_geom_coll": [[84, 87], ["test_GeoVectorizer.TestVectorizer.assertRaises", "GeoVectorizer.GeoVectorizer.GeoVectorizer.vectorize_wkt"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.vectorize_wkt"], ["", "def", "test_non_empty_geom_coll", "(", "self", ")", ":", "\n", "        ", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "GeoVectorizer", ".", "vectorize_wkt", "(", "non_empty_geom_collection", ",", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_GeoVectorizer.TestVectorizer.test_point": [[88, 91], ["GeoVectorizer.GeoVectorizer.GeoVectorizer.vectorize_wkt", "test_GeoVectorizer.TestVectorizer.assertEqual"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.vectorize_wkt"], ["", "", "def", "test_point", "(", "self", ")", ":", "\n", "        ", "point_matrix", "=", "GeoVectorizer", ".", "vectorize_wkt", "(", "'POINT(12 14)'", ",", "5", ")", "\n", "self", ".", "assertEqual", "(", "point_matrix", ".", "shape", ",", "(", "1", ",", "GEO_VECTOR_LEN", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_GeoVectorizer.TestVectorizer.test_unsupported_geom": [[92, 97], ["test_GeoVectorizer.TestVectorizer.assertRaises", "GeoVectorizer.GeoVectorizer.GeoVectorizer.vectorize_wkt"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.vectorize_wkt"], ["", "def", "test_unsupported_geom", "(", "self", ")", ":", "\n", "# Since", "\n", "        ", "with", "self", ".", "assertRaises", "(", "Exception", ")", ":", "\n", "            ", "GeoVectorizer", ".", "vectorize_wkt", "(", "\n", "'TEST_FOR_UNKNOWN_GEOM_TYPE ((10 10, 20 20, 10 40),(40 40, 30 30, 40 20, 30 10))'", ",", "16", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_GeoVectorizer.TestVectorizer.test_vectorize_big_multipolygon": [[98, 104], ["open", "file.read", "GeoVectorizer.GeoVectorizer.GeoVectorizer.max_points", "GeoVectorizer.GeoVectorizer.GeoVectorizer.vectorize_wkt", "test_GeoVectorizer.TestVectorizer.assertEqual"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.max_points", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.vectorize_wkt"], ["", "", "def", "test_vectorize_big_multipolygon", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "'test_files/big_multipolygon_wkt.txt'", ",", "'r'", ")", "as", "file", ":", "\n", "            ", "wkt", "=", "file", ".", "read", "(", ")", "\n", "max_points", "=", "GeoVectorizer", ".", "max_points", "(", "[", "wkt", "]", ")", "\n", "vectorized", "=", "GeoVectorizer", ".", "vectorize_wkt", "(", "wkt", ",", "max_points", ")", "\n", "self", ".", "assertEqual", "(", "(", "144", ",", "GEO_VECTOR_LEN", ")", ",", "vectorized", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_GeoVectorizer.TestVectorizer.test_simplify_multipolygon_gt_max_points": [[105, 111], ["open", "file.read", "GeoVectorizer.GeoVectorizer.GeoVectorizer.vectorize_wkt", "test_GeoVectorizer.TestVectorizer.assertEqual"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.vectorize_wkt"], ["", "", "def", "test_simplify_multipolygon_gt_max_points", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "'test_files/multipart_multipolygon_wkt.txt'", ",", "'r'", ")", "as", "file", ":", "\n", "            ", "wkt", "=", "file", ".", "read", "(", ")", "\n", "max_points", "=", "20", "\n", "vectorized", "=", "GeoVectorizer", ".", "vectorize_wkt", "(", "wkt", ",", "max_points", ",", "simplify", "=", "True", ")", "\n", "self", ".", "assertEqual", "(", "(", "20", ",", "GEO_VECTOR_LEN", ")", ",", "vectorized", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_GeoVectorizer.TestVectorizer.test_multipolygon_exceed_max_points": [[112, 118], ["open", "file.read", "test_GeoVectorizer.TestVectorizer.assertRaises", "GeoVectorizer.GeoVectorizer.GeoVectorizer.vectorize_wkt"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.vectorize_wkt"], ["", "", "def", "test_multipolygon_exceed_max_points", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "'test_files/multipart_multipolygon_wkt.txt'", ",", "'r'", ")", "as", "file", ":", "\n", "            ", "wkt", "=", "file", ".", "read", "(", ")", "\n", "max_points", "=", "20", "\n", "with", "self", ".", "assertRaises", "(", "Exception", ")", ":", "\n", "                ", "GeoVectorizer", ".", "vectorize_wkt", "(", "wkt", ",", "max_points", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_GeoVectorizer.TestVectorizer.test_polygon_exceed_max_points": [[119, 127], ["open", "file.read", "shapely.wkt.loads", "test_GeoVectorizer.TestVectorizer.assertRaises", "GeoVectorizer.GeoVectorizer.GeoVectorizer.vectorize_wkt"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GeoVectorizer.GeoVectorizer.vectorize_wkt"], ["", "", "", "def", "test_polygon_exceed_max_points", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "'test_files/multipart_multipolygon_wkt.txt'", ",", "'r'", ")", "as", "file", ":", "\n", "            ", "wkt", "=", "file", ".", "read", "(", ")", "\n", "shape", "=", "wktreader", ".", "loads", "(", "wkt", ")", "\n", "geom", "=", "shape", ".", "geoms", "[", "0", "]", "\n", "max_points", "=", "20", "\n", "with", "self", ".", "assertRaises", "(", "Exception", ")", ":", "\n", "                ", "GeoVectorizer", ".", "vectorize_wkt", "(", "geom", ".", "wkt", ",", "max_points", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_GaussianMixtureLoss.TestGaussianMixtureLoss.test_bivariate_gaussian_loss": [[13, 18], ["numpy.array", "numpy.array", "topoml_util.GaussianMixtureLoss.GaussianMixtureLoss().geom_gaussian_mixture_loss", "print", "topoml_util.GaussianMixtureLoss.GaussianMixtureLoss().geom_gaussian_mixture_loss.eval", "topoml_util.GaussianMixtureLoss.GaussianMixtureLoss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GaussianMixtureLoss.GaussianMixtureLoss.geom_gaussian_mixture_loss"], ["    ", "def", "test_bivariate_gaussian_loss", "(", "self", ")", ":", "\n", "        ", "true", "=", "np", ".", "array", "(", "[", "gmm_output", ".", "target", "]", ")", "\n", "pred", "=", "np", ".", "array", "(", "[", "gmm_output", ".", "prediction", "]", ")", "\n", "loss", "=", "GaussianMixtureLoss", "(", "num_components", "=", "5", ",", "num_points", "=", "14", ")", ".", "geom_gaussian_mixture_loss", "(", "true", ",", "pred", ")", "\n", "print", "(", "loss", ".", "eval", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.test_GaussianMixtureLoss.TestGaussianMixtureLoss.test_single_gaussian_loss": [[19, 41], ["numpy.array", "numpy.array", "numpy.array", "topoml_util.GaussianMixtureLoss.GaussianMixtureLoss().univariate_gmm_loss", "topoml_util.GaussianMixtureLoss.GaussianMixtureLoss().univariate_gmm_loss", "test_GaussianMixtureLoss.TestGaussianMixtureLoss.assertLess", "topoml_util.GaussianMixtureLoss.GaussianMixtureLoss().univariate_gmm_loss.eval", "topoml_util.GaussianMixtureLoss.GaussianMixtureLoss().univariate_gmm_loss.eval", "topoml_util.GaussianMixtureLoss.GaussianMixtureLoss", "topoml_util.GaussianMixtureLoss.GaussianMixtureLoss"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GaussianMixtureLoss.GaussianMixtureLoss.univariate_gmm_loss", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.GaussianMixtureLoss.GaussianMixtureLoss.univariate_gmm_loss"], ["", "def", "test_single_gaussian_loss", "(", "self", ")", ":", "\n", "        ", "true", "=", "np", ".", "array", "(", "[", "\n", "[", "1.", ",", "1.", ",", "0.", "]", ",", "\n", "[", "1.", ",", "1.", ",", "0.", "]", ",", "\n", "[", "1.", ",", "1.", ",", "0.", "]", ",", "\n", "[", "1.", ",", "1.", ",", "0.", "]", ",", "\n", "]", ")", "\n", "pred1", "=", "np", ".", "array", "(", "[", "\n", "[", "1.", ",", "1.", ",", "0.", "]", ",", "\n", "[", "1.", ",", "1.", ",", "0.", "]", ",", "\n", "[", "1.", ",", "1.", ",", "0.", "]", ",", "\n", "[", "1.", ",", "1.", ",", "0.", "]", ",", "\n", "]", ")", "\n", "pred2", "=", "np", ".", "array", "(", "[", "\n", "[", "0.", ",", "0.", ",", "0.", "]", ",", "\n", "[", "0.", ",", "0.", ",", "0.", "]", ",", "\n", "[", "0.", ",", "0.", ",", "0.", "]", ",", "\n", "[", "0.", ",", "0.", ",", "0.", "]", ",", "\n", "]", ")", "\n", "loss1", "=", "GaussianMixtureLoss", "(", "num_components", "=", "1", ",", "num_points", "=", "1", ")", ".", "univariate_gmm_loss", "(", "true", ",", "pred1", ")", "\n", "loss2", "=", "GaussianMixtureLoss", "(", "num_components", "=", "1", ",", "num_points", "=", "1", ")", ".", "univariate_gmm_loss", "(", "true", ",", "pred2", ")", "\n", "self", ".", "assertLess", "(", "loss1", ".", "eval", "(", ")", ",", "loss2", ".", "eval", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.LoggerCallback.EpochLogger.__init__": [[11, 22], ["keras.callbacks.Callback.__init__"], "methods", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.LoggerCallback.EpochLogger.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_func", "=", "None", ",", "target_func", "=", "None", ",", "predict_func", "=", "None", ",", "aggregate_func", "=", "None", ",", "sample_size", "=", "3", ",", "\n", "stdout", "=", "False", ",", "input_slice", "=", "lambda", "x", ":", "x", "[", "0", ":", "1", "]", ",", "target_slice", "=", "lambda", "x", ":", "x", "[", "1", ":", "2", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "input_func", "=", "input_func", "\n", "self", ".", "target_func", "=", "target_func", "\n", "self", ".", "predict_func", "=", "predict_func", "\n", "self", ".", "aggregate_func", "=", "aggregate_func", "\n", "self", ".", "sample_size", "=", "sample_size", "\n", "self", ".", "log_to_stdout", "=", "stdout", "\n", "self", ".", "input_slice", "=", "input_slice", "\n", "self", ".", "target_slice", "=", "target_slice", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.LoggerCallback.EpochLogger.on_epoch_end": [[23, 52], ["random.seed", "random.sample", "numpy.array", "numpy.array", "print", "zip", "datetime.datetime.datetime.now", "range", "LoggerCallback.EpochLogger.input_slice", "LoggerCallback.EpochLogger.target_slice", "predictions.append", "len", "LoggerCallback.EpochLogger.model.predict", "len", "print", "pp.pprint", "print", "pp.pprint", "print", "pp.pprint", "print", "LoggerCallback.EpochLogger.aggregate_func", "LoggerCallback.EpochLogger.input_func", "LoggerCallback.EpochLogger.target_func", "LoggerCallback.EpochLogger.predict_func"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ",", "epoch", ",", "logs", "=", "None", ")", ":", "\n", "        ", "random", ".", "seed", "(", "datetime", ".", "now", "(", ")", ")", "\n", "sample_indexes", "=", "random", ".", "sample", "(", "range", "(", "len", "(", "self", ".", "validation_data", "[", "0", "]", ")", ")", ",", "self", ".", "sample_size", ")", "\n", "inputs", "=", "np", ".", "array", "(", "self", ".", "input_slice", "(", "self", ".", "validation_data", ")", ")", "\n", "targets", "=", "np", ".", "array", "(", "self", ".", "target_slice", "(", "self", ".", "validation_data", ")", ")", "\n", "input_samples", "=", "[", "inputs", "[", ":", ",", "sample_index", "]", "for", "sample_index", "in", "sample_indexes", "]", "\n", "target_samples", "=", "[", "targets", "[", ":", ",", "sample_index", "]", "for", "sample_index", "in", "sample_indexes", "]", "\n", "\n", "predictions", "=", "[", "]", "\n", "for", "sample_index", "in", "sample_indexes", ":", "\n", "            ", "sample", "=", "inputs", "[", ":", ",", "sample_index", ":", "sample_index", "+", "1", "]", "\n", "predictions", ".", "append", "(", "self", ".", "model", ".", "predict", "(", "[", "*", "sample", "]", ")", ")", "\n", "\n", "", "print", "(", "'\\nLogging output for %i inputs, targets and predictions...'", "%", "len", "(", "predictions", ")", ")", "\n", "\n", "for", "(", "inputs", ",", "targets", ",", "predictions", ")", "in", "zip", "(", "input_samples", ",", "target_samples", ",", "predictions", ")", ":", "\n", "\n", "            ", "if", "self", ".", "log_to_stdout", ":", "\n", "                ", "print", "(", "'Input:'", ")", "\n", "pp", ".", "pprint", "(", "inputs", ")", "\n", "print", "(", "'Target:'", ")", "\n", "pp", ".", "pprint", "(", "targets", ")", "\n", "print", "(", "'Prediction:'", ")", "\n", "pp", ".", "pprint", "(", "predictions", ")", "\n", "print", "(", "''", ")", "\n", "\n", "", "if", "self", ".", "aggregate_func", ":", "\n", "                ", "self", ".", "aggregate_func", "(", "\n", "(", "self", ".", "input_func", "(", "inputs", ")", ",", "self", ".", "target_func", "(", "targets", ")", ",", "self", ".", "predict_func", "(", "predictions", ")", ")", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal": [[30, 49], ["tensorflow.Print", "tensorflow.exp", "tensorflow.exp", "tensorflow.tanh", "tensorflow.subtract", "tensorflow.subtract", "tensorflow.multiply", "tensorflow.exp", "tensorflow.div", "tensorflow.square", "tensorflow.div", "tensorflow.multiply", "tensorflow.square", "tensorflow.square", "tensorflow.div", "tensorflow.sqrt", "tensorflow.div", "tensorflow.div", "tensorflow.multiply", "tensorflow.multiply"], "function", ["None"], ["def", "tf_2d_normal", "(", "x1", ",", "x2", ",", "mu1", ",", "mu2", ",", "s1", ",", "s2", ",", "rho", ")", ":", "\n", "    ", "\"\"\"Returns result of eq # 24 of http://arxiv.org/abs/1308.0850.\"\"\"", "\n", "# exponentiate the sigmas and also make corr between -1 and 1.", "\n", "print_op", "=", "tf", ".", "Print", "(", ")", "\n", "s1", "=", "tf", ".", "exp", "(", "s1", ")", "\n", "s2", "=", "tf", ".", "exp", "(", "s2", ")", "\n", "rho", "=", "tf", ".", "tanh", "(", "rho", ")", "\n", "\n", "norm1", "=", "tf", ".", "subtract", "(", "x1", ",", "mu1", ")", "\n", "norm2", "=", "tf", ".", "subtract", "(", "x2", ",", "mu2", ")", "\n", "s1s2", "=", "tf", ".", "multiply", "(", "s1", ",", "s2", ")", "\n", "# eq 25", "\n", "z", "=", "(", "tf", ".", "square", "(", "tf", ".", "div", "(", "norm1", ",", "s1", ")", ")", "+", "tf", ".", "square", "(", "tf", ".", "div", "(", "norm2", ",", "s2", ")", ")", "-", "\n", "2", "*", "tf", ".", "div", "(", "tf", ".", "multiply", "(", "rho", ",", "tf", ".", "multiply", "(", "norm1", ",", "norm2", ")", ")", ",", "s1s2", ")", ")", "\n", "neg_rho", "=", "1", "-", "tf", ".", "square", "(", "rho", ")", "\n", "result", "=", "tf", ".", "exp", "(", "tf", ".", "div", "(", "-", "z", ",", "2", "*", "neg_rho", ")", ")", "\n", "denom", "=", "2", "*", "np", ".", "pi", "*", "tf", ".", "multiply", "(", "s1s2", ",", "tf", ".", "sqrt", "(", "neg_rho", ")", ")", "\n", "result", "=", "tf", ".", "div", "(", "result", ",", "denom", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.get_lossfunc": [[51, 79], ["sketch_rnn_model.tf_2d_normal", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.reshape", "tensorflow.multiply", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.reshape", "tensorflow.log", "tensorflow.multiply"], "function", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.tf_2d_normal"], ["", "def", "get_lossfunc", "(", "z_pi", ",", "z_mu1", ",", "z_mu2", ",", "z_sigma1", ",", "z_sigma2", ",", "z_corr", ",", "\n", "z_pen_logits", ",", "x1_data", ",", "x2_data", ",", "pen_data", ")", ":", "\n", "    ", "\"\"\"Returns a loss fn based on eq #26 of http://arxiv.org/abs/1308.0850.\"\"\"", "\n", "# This represents the L_R only (i.e. does not include the KL loss term).", "\n", "\n", "result0", "=", "tf_2d_normal", "(", "x1_data", ",", "x2_data", ",", "z_mu1", ",", "z_mu2", ",", "z_sigma1", ",", "z_sigma2", ",", "\n", "z_corr", ")", "\n", "epsilon", "=", "1e-6", "\n", "# result1 is the loss wrt pen offset (L_s in equation 9 of", "\n", "# https://arxiv.org/pdf/1704.03477.pdf)", "\n", "result1", "=", "tf", ".", "multiply", "(", "result0", ",", "z_pi", ")", "\n", "result1", "=", "tf", ".", "reduce_sum", "(", "result1", ",", "1", ",", "keep_dims", "=", "True", ")", "\n", "result1", "=", "-", "tf", ".", "log", "(", "result1", "+", "epsilon", ")", "# avoid log(0)", "\n", "\n", "fs", "=", "1.0", "-", "pen_data", "[", ":", ",", "2", "]", "# use training data for this", "\n", "fs", "=", "tf", ".", "reshape", "(", "fs", ",", "[", "-", "1", ",", "1", "]", ")", "\n", "# Zero out loss terms beyond N_s, the last actual stroke", "\n", "result1", "=", "tf", ".", "multiply", "(", "result1", ",", "fs", ")", "\n", "\n", "# result2: loss wrt pen state, (L_p in equation 9)", "\n", "result2", "=", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "\n", "labels", "=", "pen_data", ",", "logits", "=", "z_pen_logits", ")", "\n", "result2", "=", "tf", ".", "reshape", "(", "result2", ",", "[", "-", "1", ",", "1", "]", ")", "\n", "if", "not", "self", ".", "hps", ".", "is_training", ":", "# eval mode, mask eos columns", "\n", "        ", "result2", "=", "tf", ".", "multiply", "(", "result2", ",", "fs", ")", "\n", "\n", "", "result", "=", "result1", "+", "result2", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.sketch_rnn_model.get_mixture_coef": [[83, 103], ["tensorflow.split", "tensorflow.nn.softmax", "tensorflow.nn.softmax", "tensorflow.exp", "tensorflow.exp", "tensorflow.tanh"], "function", ["home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax", "home.repos.pwc.inspect_result.SPINlab_geometry-learning.topoml_util.np_gaussian_2d_loss.softmax"], ["", "def", "get_mixture_coef", "(", "output", ")", ":", "\n", "    ", "\"\"\"Returns the tf slices containing mdn dist params.\"\"\"", "\n", "# This uses eqns 18 -> 23 of http://arxiv.org/abs/1308.0850.", "\n", "z", "=", "output", "\n", "z_pen_logits", "=", "z", "[", ":", ",", "0", ":", "3", "]", "# pen states", "\n", "z_pi", ",", "z_mu1", ",", "z_mu2", ",", "z_sigma1", ",", "z_sigma2", ",", "z_corr", "=", "tf", ".", "split", "(", "z", "[", ":", ",", "3", ":", "]", ",", "6", ",", "1", ")", "\n", "\n", "# process output z's into MDN paramters", "\n", "\n", "# softmax all the pi's and pen states:", "\n", "z_pi", "=", "tf", ".", "nn", ".", "softmax", "(", "z_pi", ")", "\n", "z_pen", "=", "tf", ".", "nn", ".", "softmax", "(", "z_pen_logits", ")", "\n", "\n", "# exponentiate the sigmas and also make corr between -1 and 1.", "\n", "z_sigma1", "=", "tf", ".", "exp", "(", "z_sigma1", ")", "\n", "z_sigma2", "=", "tf", ".", "exp", "(", "z_sigma2", ")", "\n", "z_corr", "=", "tf", ".", "tanh", "(", "z_corr", ")", "\n", "\n", "r", "=", "[", "z_pi", ",", "z_mu1", ",", "z_mu2", ",", "z_sigma1", ",", "z_sigma2", ",", "z_corr", ",", "z_pen", ",", "z_pen_logits", "]", "\n", "return", "r", "\n", "", ""]], "home.repos.pwc.inspect_result.SPINlab_geometry-learning.teamcity_agent.shut_down_on_empty_queue.notify": [[29, 32], ["sc.api_call", "str"], "function", ["None"], ["def", "notify", "(", "signature", ",", "message", ")", ":", "\n", "    ", "sc", ".", "api_call", "(", "\"chat.postMessage\"", ",", "channel", "=", "slack_channel", ",", "\n", "text", "=", "\"Script \"", "+", "signature", "+", "\" notification: \"", "+", "str", "(", "message", ")", ")", "\n", "\n"]]}