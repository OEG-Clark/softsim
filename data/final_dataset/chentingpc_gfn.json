{"home.repos.pwc.inspect_result.chentingpc_gfn.None.image_dataset.ImageDataset.__init__": [[11, 30], ["torch_geometric.data.InMemoryDataset.__init__", "torch.load"], "methods", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "name", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "None", ",", "\n", "pre_transform", "=", "None", ",", "\n", "pre_filter", "=", "None", ",", "\n", "coord", "=", "False", ",", "\n", "processed_file_prefix", "=", "'data'", ")", ":", "\n", "        ", "assert", "name", "in", "[", "'MNIST'", ",", "'CIFAR10'", "]", ",", "\"Unsupported data name %s\"", "%", "name", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "coord", "=", "coord", "\n", "self", ".", "processed_file_prefix", "=", "processed_file_prefix", "\n", "self", ".", "traindata", "=", "None", "\n", "self", ".", "testdata", "=", "None", "\n", "super", "(", "ImageDataset", ",", "self", ")", ".", "__init__", "(", "\n", "root", ",", "transform", ",", "pre_transform", ",", "pre_filter", ")", "\n", "path", "=", "self", ".", "processed_paths", "[", "0", "]", "if", "train", "else", "self", ".", "processed_paths", "[", "1", "]", "\n", "self", ".", "data", ",", "self", ".", "slices", "=", "torch", ".", "load", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.image_dataset.ImageDataset.raw_file_names": [[31, 39], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "raw_file_names", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "name", "==", "'MNIST'", ":", "\n", "            ", "return", "[", "'t10k-images-idx3-ubyte'", ",", "'t10k-labels-idx1-ubyte'", ",", "\n", "'train-images-idx3-ubyte'", ",", "'train-labels-idx1-ubyte'", "]", "\n", "", "elif", "self", ".", "name", "==", "'CIFAR10'", ":", "\n", "            ", "return", "[", "'data_batch_1'", ",", "'data_batch_2'", ",", "'data_batch_3'", ",", "\n", "'data_batch_4'", ",", "'data_batch_5'", ",", "'test_batch'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.image_dataset.ImageDataset.processed_file_names": [[40, 44], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "processed_file_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "'%s_training.pt'", "%", "self", ".", "processed_file_prefix", ",", "\n", "'%s_test.pt'", "%", "self", ".", "processed_file_prefix", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.image_dataset.ImageDataset.download": [[45, 69], ["torchvision.transforms.ToTensor", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "ValueError"], "methods", ["None"], ["", "def", "download", "(", "self", ")", ":", "\n", "        ", "transform", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "if", "self", ".", "name", "==", "'CIFAR10'", ":", "\n", "            ", "data_train", "=", "datasets", ".", "CIFAR10", "(", "root", "=", "self", ".", "raw_dir", ",", "\n", "transform", "=", "transform", ",", "\n", "train", "=", "True", ",", "\n", "download", "=", "True", ")", "\n", "data_test", "=", "datasets", ".", "CIFAR10", "(", "root", "=", "self", ".", "raw_dir", ",", "\n", "transform", "=", "transform", ",", "\n", "train", "=", "False", ",", "\n", "download", "=", "True", ")", "\n", "", "elif", "self", ".", "name", "==", "'MNIST'", ":", "\n", "            ", "data_train", "=", "datasets", ".", "MNIST", "(", "root", "=", "self", ".", "raw_dir", ",", "\n", "transform", "=", "transform", ",", "\n", "train", "=", "True", ",", "\n", "download", "=", "True", ")", "\n", "data_test", "=", "datasets", ".", "MNIST", "(", "root", "=", "self", ".", "raw_dir", ",", "\n", "transform", "=", "transform", ",", "\n", "train", "=", "False", ",", "\n", "download", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Unknown data name {}\"", ".", "format", "(", "self", ".", "name", ")", ")", "\n", "", "self", ".", "traindata", "=", "data_train", "\n", "self", ".", "testdata", "=", "data_test", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.image_dataset.ImageDataset.process": [[70, 123], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "numpy.zeros", "numpy.zeros", "range", "torch.from_numpy().to", "torch.from_numpy().to", "image_dataset.ImageDataset.process.transform_data"], "methods", ["None"], ["", "def", "process", "(", "self", ")", ":", "\n", "        ", "trainLoader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "self", ".", "traindata", ")", "\n", "testLoader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "self", ".", "testdata", ")", "\n", "if", "self", ".", "name", "==", "'MNIST'", ":", "\n", "            ", "num_row", ",", "num_col", "=", "28", ",", "28", "\n", "", "elif", "self", ".", "name", "==", "'CIFAR10'", ":", "\n", "            ", "num_row", ",", "num_col", "=", "32", ",", "32", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'dataset error'", ")", "\n", "", "num_edges", "=", "(", "3", "*", "num_row", "-", "2", ")", "*", "(", "3", "*", "num_col", "-", "2", ")", "\n", "edge_index_array", "=", "np", ".", "zeros", "(", "shape", "=", "[", "2", ",", "num_edges", "]", ")", "\n", "edge_attr_array", "=", "np", ".", "zeros", "(", "shape", "=", "[", "1", ",", "num_edges", "]", ")", "\n", "curt", "=", "0", "\n", "for", "j", "in", "range", "(", "num_row", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "num_col", ")", ":", "\n", "                ", "for", "m", "in", "range", "(", "max", "(", "j", "-", "1", ",", "0", ")", ",", "min", "(", "j", "+", "1", ",", "num_row", "-", "1", ")", "+", "1", ")", ":", "\n", "                    ", "for", "n", "in", "range", "(", "max", "(", "k", "-", "1", ",", "0", ")", ",", "min", "(", "k", "+", "1", ",", "num_col", "-", "1", ")", "+", "1", ")", ":", "\n", "                        ", "edge_index_array", "[", "0", "]", "[", "curt", "]", "=", "j", "*", "num_row", "+", "k", "\n", "edge_index_array", "[", "1", "]", "[", "curt", "]", "=", "m", "*", "num_row", "+", "n", "\n", "edge_attr_array", "[", "0", "]", "[", "curt", "]", "=", "self", ".", "weight", "(", "j", ",", "k", ",", "m", ",", "n", ")", "\n", "curt", "+=", "1", "\n", "", "", "", "", "edge_index", "=", "torch", ".", "from_numpy", "(", "edge_index_array", ")", ".", "to", "(", "torch", ".", "int64", ")", "\n", "edge_attr", "=", "torch", ".", "from_numpy", "(", "edge_attr_array", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "\n", "def", "transform_data", "(", "data_loader", ",", "edge_index", ",", "edge_attr", ")", ":", "\n", "            ", "data_list", "=", "[", "]", "\n", "channel", ",", "num_row", ",", "num_col", "=", "data_loader", ".", "dataset", "[", "0", "]", "[", "0", "]", ".", "size", "(", ")", "\n", "if", "self", ".", "coord", ":", "\n", "                ", "x", "=", "torch", ".", "arange", "(", "num_col", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "x", "=", "x", ".", "view", "(", "(", "1", ",", "-", "1", ")", ")", ".", "repeat", "(", "num_row", ",", "1", ")", ".", "view", "(", "(", "-", "1", ",", "1", ")", ")", "-", "x", ".", "mean", "(", ")", "\n", "y", "=", "torch", ".", "arange", "(", "num_row", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "y", "=", "y", ".", "view", "(", "(", "-", "1", ",", "1", ")", ")", ".", "repeat", "(", "1", ",", "num_col", ")", ".", "view", "(", "(", "-", "1", ",", "1", ")", ")", "-", "y", ".", "mean", "(", ")", "\n", "coord", "=", "torch", ".", "cat", "(", "[", "x", ",", "y", "]", ",", "-", "1", ")", "\n", "\n", "", "for", "image", ",", "label", "in", "iter", "(", "data_loader", ")", ":", "\n", "                ", "x", "=", "image", "[", "0", "]", ".", "permute", "(", "[", "1", ",", "2", ",", "0", "]", ")", ".", "view", "(", "\n", "num_row", "*", "num_col", ",", "image", "[", "0", "]", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "if", "self", ".", "coord", ":", "\n", "                    ", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "coord", "]", ",", "-", "1", ")", "\n", "", "data", "=", "Data", "(", "\n", "edge_index", "=", "edge_index", ",", "edge_attr", "=", "edge_attr", ",", "x", "=", "x", ",", "y", "=", "label", ")", "\n", "if", "self", ".", "pre_filter", "is", "not", "None", ":", "\n", "                    ", "data", "=", "self", ".", "pre_filter", "(", "data", ")", "\n", "", "if", "self", ".", "pre_transform", "is", "not", "None", ":", "\n", "                    ", "data", "=", "self", ".", "pre_transform", "(", "data", ")", "\n", "", "data_list", ".", "append", "(", "data", ")", "\n", "", "return", "data_list", "\n", "\n", "", "train_data_list", "=", "transform_data", "(", "trainLoader", ",", "edge_index", ",", "edge_attr", ")", "\n", "torch", ".", "save", "(", "self", ".", "collate", "(", "train_data_list", ")", ",", "self", ".", "processed_paths", "[", "0", "]", ")", "\n", "\n", "test_data_list", "=", "transform_data", "(", "testLoader", ",", "edge_index", ",", "edge_attr", ")", "\n", "torch", ".", "save", "(", "self", ".", "collate", "(", "test_data_list", ")", ",", "self", ".", "processed_paths", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.image_dataset.ImageDataset.weight": [[124, 128], ["math.exp"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "weight", "(", "pos_x", ",", "pos_y", ",", "pos_x_new", ",", "pos_y_new", ")", ":", "\n", "        ", "dist", "=", "(", "pos_x", "-", "pos_x_new", ")", "**", "2", "+", "(", "pos_y", "-", "pos_y_new", ")", "**", "2", "\n", "return", "math", ".", "exp", "(", "-", "dist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.image_dataset.ImageDataset.__repr__": [[129, 131], ["len"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "'{}({})'", ".", "format", "(", "self", ".", "name", ",", "len", "(", "self", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.res_gcn.ResGCN.__init__": [[12, 96], ["super().__init__", "functools.partial", "res_gcn.ResGCN.modules", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "range", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "gcn_conv.GCNConv", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "range", "torch.nn.Linear", "torch.nn.Linear", "isinstance", "dataset[].xg.size", "dataset[].xg.size", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "res_gcn.ResGCN.bns_fc.append", "res_gcn.ResGCN.lins.append", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "range", "res_gcn.ResGCN.bns_fc.append", "res_gcn.ResGCN.lins.append", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "res_gcn.ResGCN.bns_conv.append", "res_gcn.ResGCN.convs.append", "res_gcn.ResGCN.bns_conv.append", "res_gcn.ResGCN.convs.append", "res_gcn.ResGCN.bns_conv.append", "res_gcn.ResGCN.convs.append", "res_gcn.ResGCN.bns_conv.append", "res_gcn.ResGCN.convs.append", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "gcn_conv.GCNConv", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "functools.partial.", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "gcn_conv.GCNConv", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "functools.partial."], "methods", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.__init__"], ["def", "__init__", "(", "self", ",", "dataset", ",", "hidden", ",", "num_feat_layers", "=", "1", ",", "num_conv_layers", "=", "3", ",", "\n", "num_fc_layers", "=", "2", ",", "gfn", "=", "False", ",", "collapse", "=", "False", ",", "residual", "=", "False", ",", "\n", "res_branch", "=", "\"BNConvReLU\"", ",", "global_pool", "=", "\"sum\"", ",", "dropout", "=", "0", ",", "\n", "edge_norm", "=", "True", ")", ":", "\n", "        ", "super", "(", "ResGCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "num_feat_layers", "==", "1", ",", "\"more feat layers are not now supported\"", "\n", "self", ".", "conv_residual", "=", "residual", "\n", "self", ".", "fc_residual", "=", "False", "# no skip-connections for fc layers.", "\n", "self", ".", "res_branch", "=", "res_branch", "\n", "self", ".", "collapse", "=", "collapse", "\n", "assert", "\"sum\"", "in", "global_pool", "or", "\"mean\"", "in", "global_pool", ",", "global_pool", "\n", "if", "\"sum\"", "in", "global_pool", ":", "\n", "            ", "self", ".", "global_pool", "=", "global_add_pool", "\n", "", "else", ":", "\n", "            ", "self", ".", "global_pool", "=", "global_mean_pool", "\n", "", "self", ".", "dropout", "=", "dropout", "\n", "GConv", "=", "partial", "(", "GCNConv", ",", "edge_norm", "=", "edge_norm", ",", "gfn", "=", "gfn", ")", "\n", "\n", "if", "\"xg\"", "in", "dataset", "[", "0", "]", ":", "# Utilize graph level features.", "\n", "            ", "self", ".", "use_xg", "=", "True", "\n", "self", ".", "bn1_xg", "=", "BatchNorm1d", "(", "dataset", "[", "0", "]", ".", "xg", ".", "size", "(", "1", ")", ")", "\n", "self", ".", "lin1_xg", "=", "Linear", "(", "dataset", "[", "0", "]", ".", "xg", ".", "size", "(", "1", ")", ",", "hidden", ")", "\n", "self", ".", "bn2_xg", "=", "BatchNorm1d", "(", "hidden", ")", "\n", "self", ".", "lin2_xg", "=", "Linear", "(", "hidden", ",", "hidden", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "use_xg", "=", "False", "\n", "\n", "", "hidden_in", "=", "dataset", ".", "num_features", "\n", "if", "collapse", ":", "\n", "            ", "self", ".", "bn_feat", "=", "BatchNorm1d", "(", "hidden_in", ")", "\n", "self", ".", "bns_fc", "=", "torch", ".", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "lins", "=", "torch", ".", "nn", ".", "ModuleList", "(", ")", "\n", "if", "\"gating\"", "in", "global_pool", ":", "\n", "                ", "self", ".", "gating", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "Linear", "(", "hidden_in", ",", "hidden_in", ")", ",", "\n", "torch", ".", "nn", ".", "ReLU", "(", ")", ",", "\n", "Linear", "(", "hidden_in", ",", "1", ")", ",", "\n", "torch", ".", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "gating", "=", "None", "\n", "", "for", "i", "in", "range", "(", "num_fc_layers", "-", "1", ")", ":", "\n", "                ", "self", ".", "bns_fc", ".", "append", "(", "BatchNorm1d", "(", "hidden_in", ")", ")", "\n", "self", ".", "lins", ".", "append", "(", "Linear", "(", "hidden_in", ",", "hidden", ")", ")", "\n", "hidden_in", "=", "hidden", "\n", "", "self", ".", "lin_class", "=", "Linear", "(", "hidden_in", ",", "dataset", ".", "num_classes", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "bn_feat", "=", "BatchNorm1d", "(", "hidden_in", ")", "\n", "feat_gfn", "=", "True", "# set true so GCNConv is feat transform", "\n", "self", ".", "conv_feat", "=", "GCNConv", "(", "hidden_in", ",", "hidden", ",", "gfn", "=", "feat_gfn", ")", "\n", "if", "\"gating\"", "in", "global_pool", ":", "\n", "                ", "self", ".", "gating", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "Linear", "(", "hidden", ",", "hidden", ")", ",", "\n", "torch", ".", "nn", ".", "ReLU", "(", ")", ",", "\n", "Linear", "(", "hidden", ",", "1", ")", ",", "\n", "torch", ".", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "gating", "=", "None", "\n", "", "self", ".", "bns_conv", "=", "torch", ".", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "convs", "=", "torch", ".", "nn", ".", "ModuleList", "(", ")", "\n", "if", "self", ".", "res_branch", "==", "\"resnet\"", ":", "\n", "                ", "for", "i", "in", "range", "(", "num_conv_layers", ")", ":", "\n", "                    ", "self", ".", "bns_conv", ".", "append", "(", "BatchNorm1d", "(", "hidden", ")", ")", "\n", "self", ".", "convs", ".", "append", "(", "GCNConv", "(", "hidden", ",", "hidden", ",", "gfn", "=", "feat_gfn", ")", ")", "\n", "self", ".", "bns_conv", ".", "append", "(", "BatchNorm1d", "(", "hidden", ")", ")", "\n", "self", ".", "convs", ".", "append", "(", "GConv", "(", "hidden", ",", "hidden", ")", ")", "\n", "self", ".", "bns_conv", ".", "append", "(", "BatchNorm1d", "(", "hidden", ")", ")", "\n", "self", ".", "convs", ".", "append", "(", "GCNConv", "(", "hidden", ",", "hidden", ",", "gfn", "=", "feat_gfn", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "for", "i", "in", "range", "(", "num_conv_layers", ")", ":", "\n", "                    ", "self", ".", "bns_conv", ".", "append", "(", "BatchNorm1d", "(", "hidden", ")", ")", "\n", "self", ".", "convs", ".", "append", "(", "GConv", "(", "hidden", ",", "hidden", ")", ")", "\n", "", "", "self", ".", "bn_hidden", "=", "BatchNorm1d", "(", "hidden", ")", "\n", "self", ".", "bns_fc", "=", "torch", ".", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "lins", "=", "torch", ".", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "num_fc_layers", "-", "1", ")", ":", "\n", "                ", "self", ".", "bns_fc", ".", "append", "(", "BatchNorm1d", "(", "hidden", ")", ")", "\n", "self", ".", "lins", ".", "append", "(", "Linear", "(", "hidden", ",", "hidden", ")", ")", "\n", "", "self", ".", "lin_class", "=", "Linear", "(", "hidden", ",", "dataset", ".", "num_classes", ")", "\n", "\n", "# BN initialization.", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "(", "torch", ".", "nn", ".", "BatchNorm1d", ")", ")", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0.0001", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.res_gcn.ResGCN.reset_parameters": [[97, 100], ["NotImplemented"], "methods", ["None"], ["", "", "", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplemented", "(", "\n", "\"This is prune to bugs (e.g. lead to training on test set in \"", "\n", "\"cross validation setting). Create a new model instance instead.\"", ")", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.res_gcn.ResGCN.forward": [[102, 125], ["res_gcn.ResGCN.bn1_xg", "torch.relu", "torch.relu", "res_gcn.ResGCN.bn2_xg", "torch.relu", "torch.relu", "res_gcn.ResGCN.forward_collapse", "res_gcn.ResGCN.lin1_xg", "res_gcn.ResGCN.lin2_xg", "res_gcn.ResGCN.forward_BNConvReLU", "res_gcn.ResGCN.forward_BNReLUConv", "res_gcn.ResGCN.forward_ConvReLUBN", "res_gcn.ResGCN.forward_resnet", "ValueError"], "methods", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.res_gcn.ResGCN.forward_collapse", "home.repos.pwc.inspect_result.chentingpc_gfn.None.res_gcn.ResGCN.forward_BNConvReLU", "home.repos.pwc.inspect_result.chentingpc_gfn.None.res_gcn.ResGCN.forward_BNReLUConv", "home.repos.pwc.inspect_result.chentingpc_gfn.None.res_gcn.ResGCN.forward_ConvReLUBN", "home.repos.pwc.inspect_result.chentingpc_gfn.None.res_gcn.ResGCN.forward_resnet"], ["", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "x", ",", "edge_index", ",", "batch", "=", "data", ".", "x", ",", "data", ".", "edge_index", ",", "data", ".", "batch", "\n", "if", "self", ".", "use_xg", ":", "\n", "# xg is (batch_size x its feat dim)", "\n", "            ", "xg", "=", "self", ".", "bn1_xg", "(", "data", ".", "xg", ")", "\n", "xg", "=", "F", ".", "relu", "(", "self", ".", "lin1_xg", "(", "xg", ")", ")", "\n", "xg", "=", "self", ".", "bn2_xg", "(", "xg", ")", "\n", "xg", "=", "F", ".", "relu", "(", "self", ".", "lin2_xg", "(", "xg", ")", ")", "\n", "", "else", ":", "\n", "            ", "xg", "=", "None", "\n", "\n", "", "if", "self", ".", "collapse", ":", "\n", "            ", "return", "self", ".", "forward_collapse", "(", "x", ",", "edge_index", ",", "batch", ",", "xg", ")", "\n", "", "elif", "self", ".", "res_branch", "==", "\"BNConvReLU\"", ":", "\n", "            ", "return", "self", ".", "forward_BNConvReLU", "(", "x", ",", "edge_index", ",", "batch", ",", "xg", ")", "\n", "", "elif", "self", ".", "res_branch", "==", "\"BNReLUConv\"", ":", "\n", "            ", "return", "self", ".", "forward_BNReLUConv", "(", "x", ",", "edge_index", ",", "batch", ",", "xg", ")", "\n", "", "elif", "self", ".", "res_branch", "==", "\"ConvReLUBN\"", ":", "\n", "            ", "return", "self", ".", "forward_ConvReLUBN", "(", "x", ",", "edge_index", ",", "batch", ",", "xg", ")", "\n", "", "elif", "self", ".", "res_branch", "==", "\"resnet\"", ":", "\n", "            ", "return", "self", ".", "forward_resnet", "(", "x", ",", "edge_index", ",", "batch", ",", "xg", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Unknown res_branch %s\"", "%", "self", ".", "res_branch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.res_gcn.ResGCN.forward_collapse": [[126, 137], ["res_gcn.ResGCN.bn_feat", "res_gcn.ResGCN.global_pool", "enumerate", "res_gcn.ResGCN.lin_class", "torch.log_softmax", "torch.log_softmax", "res_gcn.ResGCN.gating", "torch.relu", "torch.relu", "lin"], "methods", ["None"], ["", "", "def", "forward_collapse", "(", "self", ",", "x", ",", "edge_index", ",", "batch", ",", "xg", "=", "None", ")", ":", "\n", "        ", "x", "=", "self", ".", "bn_feat", "(", "x", ")", "\n", "gate", "=", "1", "if", "self", ".", "gating", "is", "None", "else", "self", ".", "gating", "(", "x", ")", "\n", "x", "=", "self", ".", "global_pool", "(", "x", "*", "gate", ",", "batch", ")", "\n", "x", "=", "x", "if", "xg", "is", "None", "else", "x", "+", "xg", "\n", "for", "i", ",", "lin", "in", "enumerate", "(", "self", ".", "lins", ")", ":", "\n", "            ", "x_", "=", "self", ".", "bns_fc", "[", "i", "]", "(", "x", ")", "\n", "x_", "=", "F", ".", "relu", "(", "lin", "(", "x_", ")", ")", "\n", "x", "=", "x", "+", "x_", "if", "self", ".", "fc_residual", "else", "x_", "\n", "", "x", "=", "self", ".", "lin_class", "(", "x", ")", "\n", "return", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.res_gcn.ResGCN.forward_BNConvReLU": [[138, 157], ["res_gcn.ResGCN.bn_feat", "torch.relu", "torch.relu", "enumerate", "res_gcn.ResGCN.global_pool", "enumerate", "res_gcn.ResGCN.bn_hidden", "res_gcn.ResGCN.lin_class", "torch.log_softmax", "torch.log_softmax", "res_gcn.ResGCN.conv_feat", "torch.relu", "torch.relu", "res_gcn.ResGCN.gating", "torch.relu", "torch.relu", "torch.dropout", "torch.dropout", "conv", "lin"], "methods", ["None"], ["", "def", "forward_BNConvReLU", "(", "self", ",", "x", ",", "edge_index", ",", "batch", ",", "xg", "=", "None", ")", ":", "\n", "        ", "x", "=", "self", ".", "bn_feat", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv_feat", "(", "x", ",", "edge_index", ")", ")", "\n", "for", "i", ",", "conv", "in", "enumerate", "(", "self", ".", "convs", ")", ":", "\n", "            ", "x_", "=", "self", ".", "bns_conv", "[", "i", "]", "(", "x", ")", "\n", "x_", "=", "F", ".", "relu", "(", "conv", "(", "x_", ",", "edge_index", ")", ")", "\n", "x", "=", "x", "+", "x_", "if", "self", ".", "conv_residual", "else", "x_", "\n", "", "gate", "=", "1", "if", "self", ".", "gating", "is", "None", "else", "self", ".", "gating", "(", "x", ")", "\n", "x", "=", "self", ".", "global_pool", "(", "x", "*", "gate", ",", "batch", ")", "\n", "x", "=", "x", "if", "xg", "is", "None", "else", "x", "+", "xg", "\n", "for", "i", ",", "lin", "in", "enumerate", "(", "self", ".", "lins", ")", ":", "\n", "            ", "x_", "=", "self", ".", "bns_fc", "[", "i", "]", "(", "x", ")", "\n", "x_", "=", "F", ".", "relu", "(", "lin", "(", "x_", ")", ")", "\n", "x", "=", "x", "+", "x_", "if", "self", ".", "fc_residual", "else", "x_", "\n", "", "x", "=", "self", ".", "bn_hidden", "(", "x", ")", "\n", "if", "self", ".", "dropout", ">", "0", ":", "\n", "            ", "x", "=", "F", ".", "dropout", "(", "x", ",", "p", "=", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "", "x", "=", "self", ".", "lin_class", "(", "x", ")", "\n", "return", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.res_gcn.ResGCN.forward_BNReLUConv": [[158, 176], ["res_gcn.ResGCN.bn_feat", "res_gcn.ResGCN.conv_feat", "enumerate", "res_gcn.ResGCN.global_pool", "enumerate", "torch.relu", "torch.relu", "res_gcn.ResGCN.lin_class", "torch.log_softmax", "torch.log_softmax", "torch.relu", "torch.relu", "conv", "torch.relu", "torch.relu", "lin", "res_gcn.ResGCN.bn_hidden", "torch.dropout", "torch.dropout"], "methods", ["None"], ["", "def", "forward_BNReLUConv", "(", "self", ",", "x", ",", "edge_index", ",", "batch", ",", "xg", "=", "None", ")", ":", "\n", "        ", "x", "=", "self", ".", "bn_feat", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_feat", "(", "x", ",", "edge_index", ")", "\n", "for", "i", ",", "conv", "in", "enumerate", "(", "self", ".", "convs", ")", ":", "\n", "            ", "x_", "=", "F", ".", "relu", "(", "self", ".", "bns_conv", "[", "i", "]", "(", "x", ")", ")", "\n", "x_", "=", "conv", "(", "x_", ",", "edge_index", ")", "\n", "x", "=", "x", "+", "x_", "if", "self", ".", "conv_residual", "else", "x_", "\n", "", "x", "=", "self", ".", "global_pool", "(", "x", ",", "batch", ")", "\n", "x", "=", "x", "if", "xg", "is", "None", "else", "x", "+", "xg", "\n", "for", "i", ",", "lin", "in", "enumerate", "(", "self", ".", "lins", ")", ":", "\n", "            ", "x_", "=", "F", ".", "relu", "(", "self", ".", "bns_fc", "[", "i", "]", "(", "x", ")", ")", "\n", "x_", "=", "lin", "(", "x_", ")", "\n", "x", "=", "x", "+", "x_", "if", "self", ".", "fc_residual", "else", "x_", "\n", "", "x", "=", "F", ".", "relu", "(", "self", ".", "bn_hidden", "(", "x", ")", ")", "\n", "if", "self", ".", "dropout", ">", "0", ":", "\n", "            ", "x", "=", "F", ".", "dropout", "(", "x", ",", "p", "=", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "", "x", "=", "self", ".", "lin_class", "(", "x", ")", "\n", "return", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.res_gcn.ResGCN.forward_ConvReLUBN": [[177, 195], ["res_gcn.ResGCN.bn_feat", "torch.relu", "torch.relu", "res_gcn.ResGCN.bn_hidden", "enumerate", "res_gcn.ResGCN.global_pool", "enumerate", "res_gcn.ResGCN.lin_class", "torch.log_softmax", "torch.log_softmax", "res_gcn.ResGCN.conv_feat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.dropout", "torch.dropout", "conv", "lin"], "methods", ["None"], ["", "def", "forward_ConvReLUBN", "(", "self", ",", "x", ",", "edge_index", ",", "batch", ",", "xg", "=", "None", ")", ":", "\n", "        ", "x", "=", "self", ".", "bn_feat", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv_feat", "(", "x", ",", "edge_index", ")", ")", "\n", "x", "=", "self", ".", "bn_hidden", "(", "x", ")", "\n", "for", "i", ",", "conv", "in", "enumerate", "(", "self", ".", "convs", ")", ":", "\n", "            ", "x_", "=", "F", ".", "relu", "(", "conv", "(", "x", ",", "edge_index", ")", ")", "\n", "x_", "=", "self", ".", "bns_conv", "[", "i", "]", "(", "x_", ")", "\n", "x", "=", "x", "+", "x_", "if", "self", ".", "conv_residual", "else", "x_", "\n", "", "x", "=", "self", ".", "global_pool", "(", "x", ",", "batch", ")", "\n", "x", "=", "x", "if", "xg", "is", "None", "else", "x", "+", "xg", "\n", "for", "i", ",", "lin", "in", "enumerate", "(", "self", ".", "lins", ")", ":", "\n", "            ", "x_", "=", "F", ".", "relu", "(", "lin", "(", "x", ")", ")", "\n", "x_", "=", "self", ".", "bns_fc", "[", "i", "]", "(", "x_", ")", "\n", "x", "=", "x", "+", "x_", "if", "self", ".", "fc_residual", "else", "x_", "\n", "", "if", "self", ".", "dropout", ">", "0", ":", "\n", "            ", "x", "=", "F", ".", "dropout", "(", "x", ",", "p", "=", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "", "x", "=", "self", ".", "lin_class", "(", "x", ")", "\n", "return", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.res_gcn.ResGCN.forward_resnet": [[196, 220], ["res_gcn.ResGCN.bn_feat", "res_gcn.ResGCN.conv_feat", "range", "res_gcn.ResGCN.global_pool", "enumerate", "torch.relu", "torch.relu", "res_gcn.ResGCN.lin_class", "torch.log_softmax", "torch.log_softmax", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "lin", "res_gcn.ResGCN.bn_hidden", "torch.dropout", "torch.dropout", "len"], "methods", ["None"], ["", "def", "forward_resnet", "(", "self", ",", "x", ",", "edge_index", ",", "batch", ",", "xg", "=", "None", ")", ":", "\n", "# this mimics resnet architecture in cv.", "\n", "        ", "x", "=", "self", ".", "bn_feat", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_feat", "(", "x", ",", "edge_index", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "convs", ")", "//", "3", ")", ":", "\n", "            ", "x_", "=", "x", "\n", "x_", "=", "F", ".", "relu", "(", "self", ".", "bns_conv", "[", "i", "*", "3", "+", "0", "]", "(", "x_", ")", ")", "\n", "x_", "=", "self", ".", "convs", "[", "i", "*", "3", "+", "0", "]", "(", "x_", ",", "edge_index", ")", "\n", "x_", "=", "F", ".", "relu", "(", "self", ".", "bns_conv", "[", "i", "*", "3", "+", "1", "]", "(", "x_", ")", ")", "\n", "x_", "=", "self", ".", "convs", "[", "i", "*", "3", "+", "1", "]", "(", "x_", ",", "edge_index", ")", "\n", "x_", "=", "F", ".", "relu", "(", "self", ".", "bns_conv", "[", "i", "*", "3", "+", "2", "]", "(", "x_", ")", ")", "\n", "x_", "=", "self", ".", "convs", "[", "i", "*", "3", "+", "2", "]", "(", "x_", ",", "edge_index", ")", "\n", "x", "=", "x", "+", "x_", "\n", "", "x", "=", "self", ".", "global_pool", "(", "x", ",", "batch", ")", "\n", "x", "=", "x", "if", "xg", "is", "None", "else", "x", "+", "xg", "\n", "for", "i", ",", "lin", "in", "enumerate", "(", "self", ".", "lins", ")", ":", "\n", "            ", "x_", "=", "F", ".", "relu", "(", "self", ".", "bns_fc", "[", "i", "]", "(", "x", ")", ")", "\n", "x_", "=", "lin", "(", "x_", ")", "\n", "x", "=", "x", "+", "x_", "\n", "", "x", "=", "F", ".", "relu", "(", "self", ".", "bn_hidden", "(", "x", ")", ")", "\n", "if", "self", ".", "dropout", ">", "0", ":", "\n", "            ", "x", "=", "F", ".", "dropout", "(", "x", ",", "p", "=", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "", "x", "=", "self", ".", "lin_class", "(", "x", ")", "\n", "return", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.res_gcn.ResGCN.__repr__": [[221, 223], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "\n", "", "", ""]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.create_n_filter_triples": [[51, 73], ["triples_filtered.append", "itertools.product", "feat_str.replace.replace", "feat_str.replace.replace", "feat_str.replace.replace"], "function", ["None"], ["def", "create_n_filter_triples", "(", "datasets", ",", "feat_strs", ",", "nets", ",", "gfn_add_ak3", "=", "False", ",", "\n", "gfn_reall", "=", "True", ",", "reddit_odeg10", "=", "False", ",", "\n", "dd_odeg10_ak1", "=", "False", ")", ":", "\n", "    ", "triples", "=", "[", "(", "d", ",", "f", ",", "n", ")", "for", "d", ",", "f", ",", "n", "in", "product", "(", "datasets", ",", "feat_strs", ",", "nets", ")", "]", "\n", "triples_filtered", "=", "[", "]", "\n", "for", "dataset", ",", "feat_str", ",", "net", "in", "triples", ":", "\n", "# Add ak3 for GFN.", "\n", "        ", "if", "gfn_add_ak3", "and", "'GFN'", "in", "net", ":", "\n", "            ", "feat_str", "+=", "'+ak3'", "\n", "# Remove edges for GFN.", "\n", "", "if", "gfn_reall", "and", "'GFN'", "in", "net", ":", "\n", "            ", "feat_str", "+=", "'+reall'", "\n", "# Replace degree feats for REDDIT datasets (less redundancy, faster).", "\n", "", "if", "reddit_odeg10", "and", "dataset", "in", "[", "\n", "'REDDIT-BINARY'", ",", "'REDDIT-MULTI-5K'", ",", "'REDDIT-MULTI-12K'", "]", ":", "\n", "            ", "feat_str", "=", "feat_str", ".", "replace", "(", "'odeg100'", ",", "'odeg10'", ")", "\n", "# Replace degree and akx feats for dd (less redundancy, faster).", "\n", "", "if", "dd_odeg10_ak1", "and", "dataset", "in", "[", "'DD'", "]", ":", "\n", "            ", "feat_str", "=", "feat_str", ".", "replace", "(", "'odeg100'", ",", "'odeg10'", ")", "\n", "feat_str", "=", "feat_str", ".", "replace", "(", "'ak3'", ",", "'ak1'", ")", "\n", "", "triples_filtered", ".", "append", "(", "(", "dataset", ",", "feat_str", ",", "net", ")", ")", "\n", "", "return", "triples_filtered", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.get_model_with_default_configs": [[75, 140], ["model_name.startswith", "model_name.find", "re.findall", "re.findall", "re.findall", "re.findall", "re.findall", "re.findall", "model_name.startswith", "len", "int", "print", "len", "int", "print", "len", "bool", "print", "len", "print", "len", "float", "print", "len", "int", "print", "res_gcn.ResGCN", "ValueError", "int", "res_gcn.ResGCN"], "function", ["None"], ["", "def", "get_model_with_default_configs", "(", "model_name", ",", "\n", "num_feat_layers", "=", "args", ".", "n_layers_feat", ",", "\n", "num_conv_layers", "=", "args", ".", "n_layers_conv", ",", "\n", "num_fc_layers", "=", "args", ".", "n_layers_fc", ",", "\n", "residual", "=", "args", ".", "skip_connection", ",", "\n", "hidden", "=", "args", ".", "hidden", ")", ":", "\n", "# More default settings.", "\n", "    ", "res_branch", "=", "args", ".", "res_branch", "\n", "global_pool", "=", "args", ".", "global_pool", "\n", "dropout", "=", "args", ".", "dropout", "\n", "edge_norm", "=", "args", ".", "edge_norm", "\n", "\n", "# modify default architecture when needed", "\n", "if", "model_name", ".", "find", "(", "'_'", ")", ">", "0", ":", "\n", "        ", "num_conv_layers_", "=", "re", ".", "findall", "(", "'_conv(\\d+)'", ",", "model_name", ")", "\n", "if", "len", "(", "num_conv_layers_", ")", "==", "1", ":", "\n", "            ", "num_conv_layers", "=", "int", "(", "num_conv_layers_", "[", "0", "]", ")", "\n", "print", "(", "'[INFO] num_conv_layers set to {} as in {}'", ".", "format", "(", "\n", "num_conv_layers", ",", "model_name", ")", ")", "\n", "", "num_fc_layers_", "=", "re", ".", "findall", "(", "'_fc(\\d+)'", ",", "model_name", ")", "\n", "if", "len", "(", "num_fc_layers_", ")", "==", "1", ":", "\n", "            ", "num_fc_layers", "=", "int", "(", "num_fc_layers_", "[", "0", "]", ")", "\n", "print", "(", "'[INFO] num_fc_layers set to {} as in {}'", ".", "format", "(", "\n", "num_fc_layers", ",", "model_name", ")", ")", "\n", "", "residual_", "=", "re", ".", "findall", "(", "'_res(\\d+)'", ",", "model_name", ")", "\n", "if", "len", "(", "residual_", ")", "==", "1", ":", "\n", "            ", "residual", "=", "bool", "(", "int", "(", "residual_", "[", "0", "]", ")", ")", "\n", "print", "(", "'[INFO] residual set to {} as in {}'", ".", "format", "(", "\n", "residual", ",", "model_name", ")", ")", "\n", "", "gating", "=", "re", ".", "findall", "(", "'_gating'", ",", "model_name", ")", "\n", "if", "len", "(", "gating", ")", "==", "1", ":", "\n", "            ", "global_pool", "+=", "\"_gating\"", "\n", "print", "(", "'[INFO] add gating to global_pool {} as in {}'", ".", "format", "(", "\n", "global_pool", ",", "model_name", ")", ")", "\n", "", "dropout_", "=", "re", ".", "findall", "(", "'_drop([\\.\\d]+)'", ",", "model_name", ")", "\n", "if", "len", "(", "dropout_", ")", "==", "1", ":", "\n", "            ", "dropout", "=", "float", "(", "dropout_", "[", "0", "]", ")", "\n", "print", "(", "'[INFO] dropout set to {} as in {}'", ".", "format", "(", "\n", "dropout", ",", "model_name", ")", ")", "\n", "", "hidden_", "=", "re", ".", "findall", "(", "'_dim(\\d+)'", ",", "model_name", ")", "\n", "if", "len", "(", "hidden_", ")", "==", "1", ":", "\n", "            ", "hidden", "=", "int", "(", "hidden_", "[", "0", "]", ")", "\n", "print", "(", "'[INFO] hidden set to {} as in {}'", ".", "format", "(", "\n", "hidden", ",", "model_name", ")", ")", "\n", "\n", "\n", "\n", "", "", "if", "model_name", ".", "startswith", "(", "'ResGFN'", ")", ":", "\n", "        ", "collapse", "=", "True", "if", "'flat'", "in", "model_name", "else", "False", "\n", "def", "foo", "(", "dataset", ")", ":", "\n", "            ", "return", "ResGCN", "(", "dataset", ",", "hidden", ",", "num_feat_layers", ",", "num_conv_layers", ",", "\n", "num_fc_layers", ",", "gfn", "=", "True", ",", "collapse", "=", "collapse", ",", "\n", "residual", "=", "residual", ",", "res_branch", "=", "res_branch", ",", "\n", "global_pool", "=", "global_pool", ",", "dropout", "=", "dropout", ",", "\n", "edge_norm", "=", "edge_norm", ")", "\n", "", "", "elif", "model_name", ".", "startswith", "(", "'ResGCN'", ")", ":", "\n", "        ", "def", "foo", "(", "dataset", ")", ":", "\n", "            ", "return", "ResGCN", "(", "dataset", ",", "hidden", ",", "num_feat_layers", ",", "num_conv_layers", ",", "\n", "num_fc_layers", ",", "gfn", "=", "False", ",", "collapse", "=", "False", ",", "\n", "residual", "=", "residual", ",", "res_branch", "=", "res_branch", ",", "\n", "global_pool", "=", "global_pool", ",", "dropout", "=", "dropout", ",", "\n", "edge_norm", "=", "edge_norm", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Unknown model {}\"", ".", "format", "(", "model_name", ")", ")", "\n", "", "return", "foo", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_lib": [[142, 200], ["len", "print", "enumerate", "print", "sys.stdout.flush", "enumerate", "print", "sys.stdout.flush", "print", "print", "sys.stdout.flush", "datasets.get_dataset", "get_model", "print", "sys.stdout.flush", "train_eval.single_train_test", "train_eval.cross_validation_with_val_set", "round"], "function", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.datasets.get_dataset", "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.single_train_test", "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.cross_validation_with_val_set"], ["", "def", "run_exp_lib", "(", "dataset_feat_net_triples", ",", "\n", "get_model", "=", "get_model_with_default_configs", ")", ":", "\n", "    ", "results", "=", "[", "]", "\n", "exp_nums", "=", "len", "(", "dataset_feat_net_triples", ")", "\n", "print", "(", "\"-----\\nTotal %d experiments in this run:\"", "%", "exp_nums", ")", "\n", "for", "exp_id", ",", "(", "dataset_name", ",", "feat_str", ",", "net", ")", "in", "enumerate", "(", "\n", "dataset_feat_net_triples", ")", ":", "\n", "        ", "print", "(", "'{}/{} - {} - {} - {}'", ".", "format", "(", "\n", "exp_id", "+", "1", ",", "exp_nums", ",", "dataset_name", ",", "feat_str", ",", "net", ")", ")", "\n", "", "print", "(", "\"Here we go..\"", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "for", "exp_id", ",", "(", "dataset_name", ",", "feat_str", ",", "net", ")", "in", "enumerate", "(", "\n", "dataset_feat_net_triples", ")", ":", "\n", "        ", "print", "(", "'-----\\n{}/{} - {} - {} - {}'", ".", "format", "(", "\n", "exp_id", "+", "1", ",", "exp_nums", ",", "dataset_name", ",", "feat_str", ",", "net", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "dataset", "=", "get_dataset", "(", "\n", "dataset_name", ",", "sparse", "=", "True", ",", "feat_str", "=", "feat_str", ",", "root", "=", "args", ".", "data_root", ")", "\n", "model_func", "=", "get_model", "(", "net", ")", "\n", "if", "'MNIST'", "in", "dataset_name", "or", "'CIFAR'", "in", "dataset_name", ":", "\n", "            ", "train_dataset", ",", "test_dataset", "=", "dataset", "\n", "train_acc", ",", "acc", ",", "duration", "=", "single_train_test", "(", "\n", "train_dataset", ",", "\n", "test_dataset", ",", "\n", "model_func", ",", "\n", "epochs", "=", "args", ".", "epochs", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "lr", "=", "args", ".", "lr", ",", "\n", "lr_decay_factor", "=", "args", ".", "lr_decay_factor", ",", "\n", "lr_decay_step_size", "=", "args", ".", "lr_decay_step_size", ",", "\n", "weight_decay", "=", "0", ",", "\n", "epoch_select", "=", "args", ".", "epoch_select", ",", "\n", "with_eval_mode", "=", "args", ".", "with_eval_mode", ")", "\n", "std", "=", "0", "\n", "", "else", ":", "\n", "            ", "train_acc", ",", "acc", ",", "std", ",", "duration", "=", "cross_validation_with_val_set", "(", "\n", "dataset", ",", "\n", "model_func", ",", "\n", "folds", "=", "10", ",", "\n", "epochs", "=", "args", ".", "epochs", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "lr", "=", "args", ".", "lr", ",", "\n", "lr_decay_factor", "=", "args", ".", "lr_decay_factor", ",", "\n", "lr_decay_step_size", "=", "args", ".", "lr_decay_step_size", ",", "\n", "weight_decay", "=", "0", ",", "\n", "epoch_select", "=", "args", ".", "epoch_select", ",", "\n", "with_eval_mode", "=", "args", ".", "with_eval_mode", ",", "\n", "logger", "=", "logger", ")", "\n", "\n", "", "summary1", "=", "'data={}, model={}, feat={}, eval={}'", ".", "format", "(", "\n", "dataset_name", ",", "net", ",", "feat_str", ",", "args", ".", "epoch_select", ")", "\n", "summary2", "=", "'train_acc={:.2f}, test_acc={:.2f} \u00b1 {:.2f}, sec={}'", ".", "format", "(", "\n", "train_acc", "*", "100", ",", "acc", "*", "100", ",", "std", "*", "100", ",", "round", "(", "duration", ",", "2", ")", ")", "\n", "results", "+=", "[", "'{}: {}, {}'", ".", "format", "(", "'fin-result'", ",", "summary1", ",", "summary2", ")", "]", "\n", "print", "(", "'{}: {}, {}'", ".", "format", "(", "'mid-result'", ",", "summary1", ",", "summary2", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "", "print", "(", "'-----\\n{}'", ".", "format", "(", "'\\n'", ".", "join", "(", "results", ")", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_arch_res_n_layers": [[202, 245], ["print", "functools.partial", "main.run_exp_lib", "main.run_exp_lib", "main.run_exp_lib", "functools.partial.", "functools.partial.", "functools.partial.", "nets_new.append", "nets_new.append", "nets_new.append"], "function", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_lib", "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_lib", "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_lib"], ["", "def", "run_exp_arch_res_n_layers", "(", "gfn", "=", "False", ",", "gcn", "=", "False", ",", "resnet", "=", "False", ")", ":", "\n", "    ", "print", "(", "'[INFO] running architecture ablation on conv depth and resnet..'", ")", "\n", "# datasets = DATA_SUBSET_STUDY", "\n", "# datasets = DATA_SUBSET_STUDY_SUP", "\n", "datasets", "=", "DATA_BIO", "+", "DATA_SOCIAL", "\n", "feat_strs", "=", "[", "'deg+odeg100'", "]", "\n", "cf_triples", "=", "partial", "(", "create_n_filter_triples", ",", "gfn_add_ak3", "=", "True", ",", "\n", "reddit_odeg10", "=", "True", ",", "dd_odeg10_ak1", "=", "True", ")", "\n", "\n", "# Test num layers for GFN", "\n", "if", "gfn", ":", "\n", "        ", "nets", "=", "[", "'ResGFN'", "]", "\n", "nets_new", "=", "[", "'ResGFN-flat_fc1'", "]", "\n", "for", "num_fc_layers", "in", "[", "2", ",", "1", "]", ":", "\n", "            ", "for", "num_conv_layers", "in", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", "]", ":", "\n", "                ", "for", "net", "in", "nets", ":", "\n", "                    ", "net_new", "=", "'{}_conv{}_fc{}'", ".", "format", "(", "\n", "net", ",", "num_conv_layers", ",", "num_fc_layers", ")", "\n", "nets_new", ".", "append", "(", "net_new", ")", "\n", "", "", "", "run_exp_lib", "(", "cf_triples", "(", "datasets", ",", "feat_strs", ",", "nets_new", ")", ")", "\n", "\n", "# Test num layers for GCN", "\n", "", "if", "gcn", ":", "\n", "        ", "nets", "=", "[", "'ResGCN'", "]", "\n", "nets_new", "=", "[", "]", "\n", "for", "num_conv_layers", "in", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", "]", ":", "\n", "            ", "for", "net", "in", "nets", ":", "\n", "                ", "net_new", "=", "'{}_conv{}_fc2'", ".", "format", "(", "\n", "net", ",", "num_conv_layers", ")", "\n", "nets_new", ".", "append", "(", "net_new", ")", "\n", "", "", "run_exp_lib", "(", "cf_triples", "(", "datasets", ",", "feat_strs", ",", "nets_new", ")", ")", "\n", "\n", "# Test residual connection", "\n", "", "if", "resnet", ":", "\n", "        ", "nets", "=", "[", "'ResGFN'", ",", "'ResGCN'", "]", "\n", "nets_new", "=", "[", "]", "\n", "for", "num_conv_layers", "in", "[", "3", "]", ":", "\n", "            ", "for", "residual", "in", "[", "0", ",", "1", "]", ":", "\n", "                ", "for", "net", "in", "nets", ":", "\n", "                    ", "net_new", "=", "'{}_conv{}_fc2_res{}'", ".", "format", "(", "\n", "net", ",", "num_conv_layers", ",", "residual", ")", "\n", "nets_new", ".", "append", "(", "net_new", ")", "\n", "", "", "", "run_exp_lib", "(", "cf_triples", "(", "datasets", ",", "feat_strs", ",", "nets_new", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_feat_study": [[247, 259], ["print", "main.run_exp_lib", "main.create_n_filter_triples"], "function", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_lib", "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.create_n_filter_triples"], ["", "", "def", "run_exp_feat_study", "(", ")", ":", "\n", "    ", "print", "(", "'[INFO] running feature study..'", ")", "\n", "# datasets = DATA_SUBSET_STUDY", "\n", "# datasets = DATA_NOREDDIT", "\n", "datasets", "=", "DATA_BIO", "+", "DATA_SOCIAL", "\n", "feat_strs", "=", "[", "'none'", ",", "'deg+odeg100'", ",", "'ak1'", ",", "'ak2'", ",", "'ak3'", ",", "'cent'", "]", "\n", "feat_strs", "+=", "[", "'deg+odeg100+ak1'", ",", "'deg+odeg100+ak2'", ",", "'deg+odeg100+ak3'", "]", "\n", "feat_strs", "+=", "[", "'deg+odeg100+ak3+cent'", "]", "\n", "nets", "=", "[", "'ResGFN'", ",", "'ResGCN'", "]", "\n", "run_exp_lib", "(", "create_n_filter_triples", "(", "datasets", ",", "feat_strs", ",", "nets", ",", "\n", "reddit_odeg10", "=", "True", ",", "\n", "dd_odeg10_ak1", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_benchmark": [[261, 271], ["print", "main.run_exp_lib", "main.create_n_filter_triples"], "function", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_lib", "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.create_n_filter_triples"], ["", "def", "run_exp_benchmark", "(", ")", ":", "\n", "# Run GFN, GFN (light), GCN", "\n", "    ", "print", "(", "'[INFO] running standard benchmarks..'", ")", "\n", "datasets", "=", "DATA_BIO", "+", "DATA_SOCIAL", "\n", "feat_strs", "=", "[", "'deg+odeg100'", "]", "\n", "nets", "=", "[", "'ResGFN'", ",", "'ResGFN_conv0_fc2'", ",", "'ResGCN'", "]", "\n", "run_exp_lib", "(", "create_n_filter_triples", "(", "datasets", ",", "feat_strs", ",", "nets", ",", "\n", "gfn_add_ak3", "=", "True", ",", "\n", "reddit_odeg10", "=", "True", ",", "\n", "dd_odeg10_ak1", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_noises": [[273, 285], ["print", "main.run_exp_lib", "main.create_n_filter_triples"], "function", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_lib", "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.create_n_filter_triples"], ["", "def", "run_exp_noises", "(", ")", ":", "\n", "# Run GFN, GCN", "\n", "    ", "print", "(", "'[INFO] running noises experiments..'", ")", "\n", "datasets", "=", "DATA_BIO", "+", "DATA_SOCIAL", "\n", "# feat_strs = ['deg+odeg100+randd0.%d'%d for d in range(10)]  # Randomly delete edges", "\n", "# feat_strs = ['deg+odeg100+randa%f'%f for f in [0, 0.5, 1.0, 2.0, 5.0, 10.0]]  # Randomly add edges", "\n", "feat_strs", "=", "[", "'deg+odeg100+randa%f+randd%f'", "%", "(", "f", ",", "f", ")", "for", "f", "in", "[", "0", ",", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", ",", "1.0", "]", "]", "# Randomly add/delete edges", "\n", "nets", "=", "[", "'ResGFN'", ",", "'ResGCN'", "]", "\n", "run_exp_lib", "(", "create_n_filter_triples", "(", "datasets", ",", "feat_strs", ",", "nets", ",", "\n", "gfn_add_ak3", "=", "True", ",", "\n", "reddit_odeg10", "=", "True", ",", "\n", "dd_odeg10_ak1", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_image": [[287, 297], ["main.run_exp_lib", "main.create_n_filter_triples", "nets_new.append"], "function", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_lib", "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.create_n_filter_triples"], ["", "def", "run_exp_image", "(", "nets", "=", "[", "'ResGCN'", "]", ",", "feat_strs", "=", "[", "'none'", "]", ",", "datasets", "=", "[", "'MNIST'", "]", ")", ":", "\n", "# Test num layers for GFN", "\n", "    ", "nets_new", "=", "[", "]", "\n", "for", "num_fc_layers", "in", "[", "2", "]", ":", "\n", "        ", "for", "num_conv_layers", "in", "[", "3", ",", "5", ",", "7", "]", ":", "\n", "            ", "for", "net", "in", "nets", ":", "\n", "                ", "net_new", "=", "'{}_conv{}_fc{}'", ".", "format", "(", "\n", "net", ",", "num_conv_layers", ",", "num_fc_layers", ")", "\n", "nets_new", ".", "append", "(", "net_new", ")", "\n", "", "", "", "run_exp_lib", "(", "create_n_filter_triples", "(", "datasets", ",", "feat_strs", ",", "nets_new", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_single_test": [[299, 302], ["print", "main.run_exp_lib"], "function", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.main.run_exp_lib"], ["", "def", "run_exp_single_test", "(", ")", ":", "\n", "    ", "print", "(", "'[INFO] running single test..'", ")", "\n", "run_exp_lib", "(", "[", "(", "'MUTAG'", ",", "'deg+odeg100+ak3+reall'", ",", "'ResGFN'", ")", "]", ")", "\n", "#run_exp_lib([('IMDB-BINARY', 'none', 'ResGCN')])", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.tu_dataset.TUDatasetExt.__init__": [[33, 44], ["torch_geometric.datasets.TUDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.__init__"], ["def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "name", ",", "\n", "transform", "=", "None", ",", "\n", "pre_transform", "=", "None", ",", "\n", "pre_filter", "=", "None", ",", "\n", "use_node_attr", "=", "False", ",", "\n", "processed_filename", "=", "'data.pt'", ")", ":", "\n", "        ", "self", ".", "processed_filename", "=", "processed_filename", "\n", "super", "(", "TUDatasetExt", ",", "self", ")", ".", "__init__", "(", "root", ",", "name", ",", "transform", ",", "pre_transform", ",", "\n", "pre_filter", ",", "use_node_attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.tu_dataset.TUDatasetExt.processed_file_names": [[45, 48], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "processed_file_names", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "processed_filename", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.single_train_test": [[16, 68], ["model_func().to", "utils.print_weights", "torch.optim.Adam", "torch_geometric.data.DataLoader", "torch_geometric.data.DataLoader", "time.perf_counter", "range", "time.perf_counter", "model_func().to.parameters", "torch.cuda.is_available", "torch.cuda.is_available", "train_eval.train", "train_accs.append", "test_accs.append", "torch.cuda.is_available", "torch.cuda.is_available", "print", "sys.stdout.flush", "max", "max", "model_func", "torch.cuda.synchronize", "torch.cuda.synchronize", "train_eval.eval_acc", "torch.cuda.synchronize", "torch.cuda.synchronize"], "function", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.utils.print_weights", "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.train", "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.eval_acc"], ["def", "single_train_test", "(", "train_dataset", ",", "\n", "test_dataset", ",", "\n", "model_func", ",", "\n", "epochs", ",", "\n", "batch_size", ",", "\n", "lr", ",", "\n", "lr_decay_factor", ",", "\n", "lr_decay_step_size", ",", "\n", "weight_decay", ",", "\n", "epoch_select", ",", "\n", "with_eval_mode", "=", "True", ")", ":", "\n", "    ", "assert", "epoch_select", "in", "[", "'test_last'", ",", "'test_max'", "]", ",", "epoch_select", "\n", "\n", "model", "=", "model_func", "(", "train_dataset", ")", ".", "to", "(", "device", ")", "\n", "print_weights", "(", "model", ")", "\n", "optimizer", "=", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "weight_decay", ")", "\n", "\n", "train_loader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "test_loader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "train_accs", ",", "test_accs", "=", "[", "]", ",", "[", "]", "\n", "t_start", "=", "time", ".", "perf_counter", "(", ")", "\n", "for", "epoch", "in", "range", "(", "1", ",", "epochs", "+", "1", ")", ":", "\n", "        ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "\n", "", "train_loss", ",", "train_acc", "=", "train", "(", "\n", "model", ",", "optimizer", ",", "train_loader", ",", "device", ")", "\n", "train_accs", ".", "append", "(", "train_acc", ")", "\n", "test_accs", ".", "append", "(", "eval_acc", "(", "model", ",", "test_loader", ",", "device", ",", "with_eval_mode", ")", ")", "\n", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "\n", "", "print", "(", "'Epoch: {:03d}, Train Acc: {:.4f}, Test Acc: {:.4f}'", ".", "format", "(", "\n", "epoch", ",", "train_accs", "[", "-", "1", "]", ",", "test_accs", "[", "-", "1", "]", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "if", "epoch", "%", "lr_decay_step_size", "==", "0", ":", "\n", "            ", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "                ", "param_group", "[", "'lr'", "]", "=", "lr_decay_factor", "*", "param_group", "[", "'lr'", "]", "\n", "\n", "", "", "", "t_end", "=", "time", ".", "perf_counter", "(", ")", "\n", "duration", "=", "t_end", "-", "t_start", "\n", "\n", "if", "epoch_select", "==", "'test_max'", ":", "\n", "        ", "train_acc", "=", "max", "(", "train_accs", ")", "\n", "test_acc", "=", "max", "(", "test_accs", ")", "\n", "", "else", ":", "\n", "        ", "train_acc", "=", "train_accs", "[", "-", "1", "]", "\n", "test_acc", "=", "test_accs", "[", "-", "1", "]", "\n", "\n", "", "return", "train_acc", ",", "test_acc", ",", "duration", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.cross_validation_with_val_set": [[70, 158], ["enumerate", "torch.tensor", "torch.tensor", "train_acc.view.view", "test_acc.view.view", "val_loss.view.view", "train_acc[].mean().item", "test_acc.view.mean().item", "test_acc.view.std().item", "torch.tensor.mean().item", "print", "sys.stdout.flush", "zip", "torch_geometric.data.DataLoader", "torch_geometric.data.DataLoader", "torch_geometric.data.DataLoader", "model_func().to", "torch.optim.Adam", "torch.cuda.is_available", "torch.cuda.is_available", "time.perf_counter", "range", "torch.cuda.is_available", "torch.cuda.is_available", "time.perf_counter", "durations.append", "torch.tensor", "torch.tensor", "test_acc.view.mean().max", "selected_epoch.repeat.repeat", "val_loss.view.min", "utils.print_weights", "model_func().to.parameters", "torch.cuda.synchronize", "torch.cuda.synchronize", "train_eval.train", "train_accs.append", "val_losses.append", "test_accs.append", "torch.cuda.synchronize", "torch.cuda.synchronize", "train_acc[].mean", "test_acc.view.mean", "test_acc.view.std", "torch.tensor.mean", "train_eval.k_fold", "model_func", "train_eval.eval_loss", "train_eval.eval_acc", "logger", "test_acc.view.mean", "torch.arange", "torch.arange"], "function", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.utils.print_weights", "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.train", "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.k_fold", "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.eval_loss", "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.eval_acc", "home.repos.pwc.inspect_result.chentingpc_gfn.None.utils.logger"], ["", "def", "cross_validation_with_val_set", "(", "dataset", ",", "\n", "model_func", ",", "\n", "folds", ",", "\n", "epochs", ",", "\n", "batch_size", ",", "\n", "lr", ",", "\n", "lr_decay_factor", ",", "\n", "lr_decay_step_size", ",", "\n", "weight_decay", ",", "\n", "epoch_select", ",", "\n", "with_eval_mode", "=", "True", ",", "\n", "logger", "=", "None", ")", ":", "\n", "    ", "assert", "epoch_select", "in", "[", "'val_max'", ",", "'test_max'", "]", ",", "epoch_select", "\n", "\n", "val_losses", ",", "train_accs", ",", "test_accs", ",", "durations", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "fold", ",", "(", "train_idx", ",", "test_idx", ",", "val_idx", ")", "in", "enumerate", "(", "\n", "zip", "(", "*", "k_fold", "(", "dataset", ",", "folds", ",", "epoch_select", ")", ")", ")", ":", "\n", "\n", "        ", "train_dataset", "=", "dataset", "[", "train_idx", "]", "\n", "test_dataset", "=", "dataset", "[", "test_idx", "]", "\n", "val_dataset", "=", "dataset", "[", "val_idx", "]", "\n", "\n", "train_loader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "val_loader", "=", "DataLoader", "(", "val_dataset", ",", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "test_loader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "\n", "model", "=", "model_func", "(", "dataset", ")", ".", "to", "(", "device", ")", "\n", "if", "fold", "==", "0", ":", "\n", "            ", "print_weights", "(", "model", ")", "\n", "", "optimizer", "=", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "weight_decay", ")", "\n", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "\n", "", "t_start", "=", "time", ".", "perf_counter", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "1", ",", "epochs", "+", "1", ")", ":", "\n", "            ", "train_loss", ",", "train_acc", "=", "train", "(", "\n", "model", ",", "optimizer", ",", "train_loader", ",", "device", ")", "\n", "train_accs", ".", "append", "(", "train_acc", ")", "\n", "val_losses", ".", "append", "(", "eval_loss", "(", "\n", "model", ",", "val_loader", ",", "device", ",", "with_eval_mode", ")", ")", "\n", "test_accs", ".", "append", "(", "eval_acc", "(", "\n", "model", ",", "test_loader", ",", "device", ",", "with_eval_mode", ")", ")", "\n", "eval_info", "=", "{", "\n", "'fold'", ":", "fold", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'train_loss'", ":", "train_loss", ",", "\n", "'train_acc'", ":", "train_accs", "[", "-", "1", "]", ",", "\n", "'val_loss'", ":", "val_losses", "[", "-", "1", "]", ",", "\n", "'test_acc'", ":", "test_accs", "[", "-", "1", "]", ",", "\n", "}", "\n", "\n", "if", "logger", "is", "not", "None", ":", "\n", "                ", "logger", "(", "eval_info", ")", "\n", "\n", "", "if", "epoch", "%", "lr_decay_step_size", "==", "0", ":", "\n", "                ", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "                    ", "param_group", "[", "'lr'", "]", "=", "lr_decay_factor", "*", "param_group", "[", "'lr'", "]", "\n", "\n", "", "", "", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "\n", "", "t_end", "=", "time", ".", "perf_counter", "(", ")", "\n", "durations", ".", "append", "(", "t_end", "-", "t_start", ")", "\n", "\n", "", "duration", "=", "tensor", "(", "durations", ")", "\n", "train_acc", ",", "test_acc", "=", "tensor", "(", "train_accs", ")", ",", "tensor", "(", "test_accs", ")", "\n", "val_loss", "=", "tensor", "(", "val_losses", ")", "\n", "train_acc", "=", "train_acc", ".", "view", "(", "folds", ",", "epochs", ")", "\n", "test_acc", "=", "test_acc", ".", "view", "(", "folds", ",", "epochs", ")", "\n", "val_loss", "=", "val_loss", ".", "view", "(", "folds", ",", "epochs", ")", "\n", "if", "epoch_select", "==", "'test_max'", ":", "# take epoch that yields best test results.", "\n", "        ", "_", ",", "selected_epoch", "=", "test_acc", ".", "mean", "(", "dim", "=", "0", ")", ".", "max", "(", "dim", "=", "0", ")", "\n", "selected_epoch", "=", "selected_epoch", ".", "repeat", "(", "folds", ")", "\n", "", "else", ":", "# take epoch that yields min val loss for each fold individually.", "\n", "        ", "_", ",", "selected_epoch", "=", "val_loss", ".", "min", "(", "dim", "=", "1", ")", "\n", "", "test_acc", "=", "test_acc", "[", "torch", ".", "arange", "(", "folds", ",", "dtype", "=", "torch", ".", "long", ")", ",", "selected_epoch", "]", "\n", "train_acc_mean", "=", "train_acc", "[", ":", ",", "-", "1", "]", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "test_acc_mean", "=", "test_acc", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "test_acc_std", "=", "test_acc", ".", "std", "(", ")", ".", "item", "(", ")", "\n", "duration_mean", "=", "duration", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "\n", "print", "(", "'Train Acc: {:.4f}, Test Acc: {:.3f} \u00b1 {:.3f}, Duration: {:.3f}'", ".", "\n", "format", "(", "train_acc_mean", ",", "test_acc_mean", ",", "test_acc_std", ",", "duration_mean", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "return", "train_acc_mean", ",", "test_acc_mean", ",", "test_acc_std", ",", "duration_mean", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.k_fold": [[160, 179], ["sklearn.model_selection.StratifiedKFold", "sklearn.model_selection.StratifiedKFold.split", "range", "torch.zeros", "torch.zeros", "test_indices.append", "torch.ones", "torch.ones", "train_indices.append", "len", "torch.from_numpy", "torch.from_numpy", "len", "torch.ones.nonzero().view", "range", "range", "test_indices[].long", "val_indices[].long", "torch.ones.nonzero"], "function", ["None"], ["", "def", "k_fold", "(", "dataset", ",", "folds", ",", "epoch_select", ")", ":", "\n", "    ", "skf", "=", "StratifiedKFold", "(", "folds", ",", "shuffle", "=", "True", ",", "random_state", "=", "12345", ")", "\n", "\n", "test_indices", ",", "train_indices", "=", "[", "]", ",", "[", "]", "\n", "for", "_", ",", "idx", "in", "skf", ".", "split", "(", "torch", ".", "zeros", "(", "len", "(", "dataset", ")", ")", ",", "dataset", ".", "data", ".", "y", ")", ":", "\n", "        ", "test_indices", ".", "append", "(", "torch", ".", "from_numpy", "(", "idx", ")", ")", "\n", "\n", "", "if", "epoch_select", "==", "'test_max'", ":", "\n", "        ", "val_indices", "=", "[", "test_indices", "[", "i", "]", "for", "i", "in", "range", "(", "folds", ")", "]", "\n", "", "else", ":", "\n", "        ", "val_indices", "=", "[", "test_indices", "[", "i", "-", "1", "]", "for", "i", "in", "range", "(", "folds", ")", "]", "\n", "\n", "", "for", "i", "in", "range", "(", "folds", ")", ":", "\n", "        ", "train_mask", "=", "torch", ".", "ones", "(", "len", "(", "dataset", ")", ",", "dtype", "=", "torch", ".", "uint8", ")", "\n", "train_mask", "[", "test_indices", "[", "i", "]", ".", "long", "(", ")", "]", "=", "0", "\n", "train_mask", "[", "val_indices", "[", "i", "]", ".", "long", "(", ")", "]", "=", "0", "\n", "train_indices", ".", "append", "(", "train_mask", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "", "return", "train_indices", ",", "test_indices", ",", "val_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.num_graphs": [[181, 186], ["data.x.size"], "function", ["None"], ["", "def", "num_graphs", "(", "data", ")", ":", "\n", "    ", "if", "data", ".", "batch", "is", "not", "None", ":", "\n", "        ", "return", "data", ".", "num_graphs", "\n", "", "else", ":", "\n", "        ", "return", "data", ".", "x", ".", "size", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.train": [[188, 204], ["model.train", "optimizer.zero_grad", "data.to.to", "model", "torch.nll_loss", "pred.eq().sum().item", "F.nll_loss.backward", "optimizer.step", "data.to.y.view", "model.max", "F.nll_loss.item", "train_eval.num_graphs", "len", "len", "pred.eq().sum", "pred.eq", "data.to.y.view"], "function", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.train", "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.num_graphs"], ["", "", "def", "train", "(", "model", ",", "optimizer", ",", "loader", ",", "device", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "\n", "total_loss", "=", "0", "\n", "correct", "=", "0", "\n", "for", "data", "in", "loader", ":", "\n", "        ", "optimizer", ".", "zero_grad", "(", ")", "\n", "data", "=", "data", ".", "to", "(", "device", ")", "\n", "out", "=", "model", "(", "data", ")", "\n", "loss", "=", "F", ".", "nll_loss", "(", "out", ",", "data", ".", "y", ".", "view", "(", "-", "1", ")", ")", "\n", "pred", "=", "out", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "correct", "+=", "pred", ".", "eq", "(", "data", ".", "y", ".", "view", "(", "-", "1", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "*", "num_graphs", "(", "data", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "return", "total_loss", "/", "len", "(", "loader", ".", "dataset", ")", ",", "correct", "/", "len", "(", "loader", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.eval_acc": [[206, 217], ["model.eval", "data.to.to", "pred.eq().sum().item", "len", "torch.no_grad", "torch.no_grad", "model().max", "pred.eq().sum", "model", "pred.eq", "data.to.y.view"], "function", ["None"], ["", "def", "eval_acc", "(", "model", ",", "loader", ",", "device", ",", "with_eval_mode", ")", ":", "\n", "    ", "if", "with_eval_mode", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "\n", "", "correct", "=", "0", "\n", "for", "data", "in", "loader", ":", "\n", "        ", "data", "=", "data", ".", "to", "(", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pred", "=", "model", "(", "data", ")", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "", "correct", "+=", "pred", ".", "eq", "(", "data", ".", "y", ".", "view", "(", "-", "1", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "", "return", "correct", "/", "len", "(", "loader", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.train_eval.eval_loss": [[219, 230], ["model.eval", "data.to.to", "torch.nll_loss().item", "len", "torch.no_grad", "torch.no_grad", "model", "torch.nll_loss", "data.to.y.view"], "function", ["None"], ["", "def", "eval_loss", "(", "model", ",", "loader", ",", "device", ",", "with_eval_mode", ")", ":", "\n", "    ", "if", "with_eval_mode", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "\n", "", "loss", "=", "0", "\n", "for", "data", "in", "loader", ":", "\n", "        ", "data", "=", "data", ".", "to", "(", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "out", "=", "model", "(", "data", ")", "\n", "", "loss", "+=", "F", ".", "nll_loss", "(", "out", ",", "data", ".", "y", ".", "view", "(", "-", "1", ")", ",", "reduction", "=", "'sum'", ")", ".", "item", "(", ")", "\n", "", "return", "loss", "/", "len", "(", "loader", ".", "dataset", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.__init__": [[24, 39], ["torch_geometric.nn.conv.MessagePassing.__init__"], "methods", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.__init__"], ["def", "__init__", "(", "self", ",", "degree", "=", "True", ",", "onehot_maxdeg", "=", "0", ",", "AK", "=", "1", ",", "\n", "centrality", "=", "False", ",", "remove_edges", "=", "\"none\"", ",", "\n", "edge_noises_add", "=", "0", ",", "edge_noises_delete", "=", "0", ",", "group_degree", "=", "0", ")", ":", "\n", "        ", "super", "(", "FeatureExpander", ",", "self", ")", ".", "__init__", "(", "'add'", ",", "'source_to_target'", ")", "\n", "self", ".", "degree", "=", "degree", "\n", "self", ".", "onehot_maxdeg", "=", "onehot_maxdeg", "\n", "self", ".", "AK", "=", "AK", "\n", "self", ".", "centrality", "=", "centrality", "\n", "self", ".", "remove_edges", "=", "remove_edges", "\n", "self", ".", "edge_noises_add", "=", "edge_noises_add", "\n", "self", ".", "edge_noises_delete", "=", "edge_noises_delete", "\n", "self", ".", "group_degree", "=", "group_degree", "\n", "assert", "remove_edges", "in", "[", "\"none\"", ",", "\"nonself\"", ",", "\"all\"", "]", ",", "remove_edges", "\n", "\n", "self", ".", "edge_norm_diag", "=", "1e-8", "# edge norm is used, and set A diag to it", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.transform": [[40, 95], ["feature_expansion.FeatureExpander.compute_degree", "feature_expansion.FeatureExpander.compute_akx", "feature_expansion.FeatureExpander.compute_centrality", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "int", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.LongTensor().random_.reshape", "torch.LongTensor().random_.reshape", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "deg.view", "range", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "int", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x_base.size", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "x_to_group.size", "x_to_group.size", "super_nodes.append", "super_nodes.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "x_to_group.mean"], "methods", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.compute_degree", "home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.compute_akx", "home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.compute_centrality"], ["", "def", "transform", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "data", ".", "x", "is", "None", ":", "\n", "          ", "data", ".", "x", "=", "torch", ".", "ones", "(", "[", "data", ".", "num_nodes", ",", "1", "]", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "\n", "# Adding noises to edges before computing anything else.", "\n", "", "if", "self", ".", "edge_noises_delete", ">", "0", ":", "\n", "            ", "num_edges_new", "=", "data", ".", "num_edges", "-", "int", "(", "\n", "data", ".", "num_edges", "*", "self", ".", "edge_noises_delete", ")", "\n", "idxs", "=", "torch", ".", "randperm", "(", "data", ".", "num_edges", ")", "[", ":", "num_edges_new", "]", "\n", "data", ".", "edge_index", "=", "data", ".", "edge_index", "[", ":", ",", "idxs", "]", "\n", "", "if", "self", ".", "edge_noises_add", ">", "0", ":", "\n", "            ", "num_new_edges", "=", "int", "(", "data", ".", "num_edges", "*", "self", ".", "edge_noises_add", ")", "\n", "idx", "=", "torch", ".", "LongTensor", "(", "num_new_edges", "*", "2", ")", ".", "random_", "(", "0", ",", "data", ".", "num_nodes", ")", "\n", "new_edges", "=", "idx", ".", "reshape", "(", "2", ",", "-", "1", ")", "\n", "data", ".", "edge_index", "=", "torch", ".", "cat", "(", "[", "data", ".", "edge_index", ",", "new_edges", "]", ",", "1", ")", "\n", "\n", "", "deg", ",", "deg_onehot", "=", "self", ".", "compute_degree", "(", "data", ".", "edge_index", ",", "data", ".", "num_nodes", ")", "\n", "akx", "=", "self", ".", "compute_akx", "(", "data", ".", "num_nodes", ",", "data", ".", "x", ",", "data", ".", "edge_index", ")", "\n", "cent", "=", "self", ".", "compute_centrality", "(", "data", ")", "\n", "data", ".", "x", "=", "torch", ".", "cat", "(", "[", "data", ".", "x", ",", "deg", ",", "deg_onehot", ",", "akx", ",", "cent", "]", ",", "-", "1", ")", "\n", "\n", "if", "self", ".", "remove_edges", "!=", "\"none\"", ":", "\n", "            ", "if", "self", ".", "remove_edges", "==", "\"all\"", ":", "\n", "                ", "self_edge", "=", "None", "\n", "", "else", ":", "# only keep self edge", "\n", "                ", "self_edge", "=", "torch", ".", "tensor", "(", "range", "(", "data", ".", "num_nodes", ")", ")", ".", "view", "(", "(", "1", ",", "-", "1", ")", ")", "\n", "self_edge", "=", "torch", ".", "cat", "(", "[", "self_edge", ",", "self_edge", "]", ",", "0", ")", "\n", "", "data", ".", "edge_index", "=", "self_edge", "\n", "\n", "# Reduce nodes by degree-based grouping", "\n", "", "if", "self", ".", "group_degree", ">", "0", ":", "\n", "            ", "assert", "self", ".", "remove_edges", "==", "\"all\"", ",", "\"remove all edges\"", "\n", "x_base", "=", "data", ".", "x", "\n", "deg_base", "=", "deg", ".", "view", "(", "-", "1", ")", "\n", "super_nodes", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "1", ",", "self", ".", "group_degree", "+", "1", ")", ":", "\n", "                ", "eq_idx", "=", "deg_base", "==", "k", "\n", "gt_idx", "=", "deg_base", ">", "k", "\n", "x_to_group", "=", "x_base", "[", "eq_idx", "]", "\n", "x_base", "=", "x_base", "[", "gt_idx", "]", "\n", "deg_base", "=", "deg_base", "[", "gt_idx", "]", "\n", "group_size", "=", "torch", ".", "zeros", "(", "[", "1", ",", "1", "]", ")", "+", "x_to_group", ".", "size", "(", "0", ")", "\n", "if", "x_to_group", ".", "size", "(", "0", ")", "==", "0", ":", "\n", "                  ", "super_nodes", ".", "append", "(", "\n", "torch", ".", "cat", "(", "[", "group_size", ",", "data", ".", "x", "[", ":", "1", "]", "*", "0", "]", ",", "-", "1", ")", ")", "\n", "", "else", ":", "\n", "                  ", "super_nodes", ".", "append", "(", "\n", "torch", ".", "cat", "(", "[", "group_size", ",", "\n", "x_to_group", ".", "mean", "(", "0", ",", "keepdim", "=", "True", ")", "]", ",", "-", "1", ")", ")", "\n", "", "", "if", "x_base", ".", "size", "(", "0", ")", "==", "0", ":", "\n", "                ", "x_base", "=", "data", ".", "x", "[", ":", "1", "]", "*", "0", "\n", "", "data", ".", "x", "=", "x_base", "\n", "data", ".", "xg", "=", "torch", ".", "cat", "(", "super_nodes", ",", "0", ")", ".", "view", "(", "(", "1", ",", "-", "1", ")", ")", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.compute_degree": [[96, 114], ["torch_geometric.utils.degree", "feature_expansion.FeatureExpander.view", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.min().type", "torch.min().type", "torch.min().type", "torch.min().type", "torch.one_hot", "torch.one_hot", "feature_expansion.FeatureExpander.type", "feature_expansion.FeatureExpander.empty_feature", "feature_expansion.FeatureExpander.empty_feature", "torch.min().type.view", "torch.min().type.view", "torch.min", "torch.min", "torch.min", "torch.min"], "methods", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.empty_feature", "home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.empty_feature"], ["", "def", "compute_degree", "(", "self", ",", "edge_index", ",", "num_nodes", ")", ":", "\n", "        ", "row", ",", "col", "=", "edge_index", "\n", "deg", "=", "degree", "(", "row", ",", "num_nodes", ")", "\n", "deg", "=", "deg", ".", "view", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "\n", "if", "self", ".", "onehot_maxdeg", "is", "not", "None", "and", "self", ".", "onehot_maxdeg", ">", "0", ":", "\n", "            ", "max_deg", "=", "torch", ".", "tensor", "(", "self", ".", "onehot_maxdeg", ",", "dtype", "=", "deg", ".", "dtype", ")", "\n", "deg_capped", "=", "torch", ".", "min", "(", "deg", ",", "max_deg", ")", ".", "type", "(", "torch", ".", "int64", ")", "\n", "deg_onehot", "=", "F", ".", "one_hot", "(", "\n", "deg_capped", ".", "view", "(", "-", "1", ")", ",", "num_classes", "=", "self", ".", "onehot_maxdeg", "+", "1", ")", "\n", "deg_onehot", "=", "deg_onehot", ".", "type", "(", "deg", ".", "dtype", ")", "\n", "", "else", ":", "\n", "            ", "deg_onehot", "=", "self", ".", "empty_feature", "(", "num_nodes", ")", "\n", "\n", "", "if", "not", "self", ".", "degree", ":", "\n", "            ", "deg", "=", "self", ".", "empty_feature", "(", "num_nodes", ")", "\n", "\n", "", "return", "deg", ",", "deg_onehot", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.compute_centrality": [[115, 128], ["networkx.Graph", "networkx.Graph.add_nodes_from", "networkx.algorithms.closeness_centrality", "networkx.algorithms.betweenness_centrality", "networkx.pagerank_numpy", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "feature_expansion.FeatureExpander.empty_feature", "data.edge_index.numpy().T.tolist", "range", "range", "data.edge_index.numpy"], "methods", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.empty_feature"], ["", "def", "compute_centrality", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "not", "self", ".", "centrality", ":", "\n", "          ", "return", "self", ".", "empty_feature", "(", "data", ".", "num_nodes", ")", "\n", "\n", "", "G", "=", "nx", ".", "Graph", "(", "data", ".", "edge_index", ".", "numpy", "(", ")", ".", "T", ".", "tolist", "(", ")", ")", "\n", "G", ".", "add_nodes_from", "(", "range", "(", "data", ".", "num_nodes", ")", ")", "# in case missing node ids", "\n", "closeness", "=", "nx", ".", "algorithms", ".", "closeness_centrality", "(", "G", ")", "\n", "betweenness", "=", "nx", ".", "algorithms", ".", "betweenness_centrality", "(", "G", ")", "\n", "pagerank", "=", "nx", ".", "pagerank_numpy", "(", "G", ")", "\n", "centrality_features", "=", "torch", ".", "tensor", "(", "\n", "[", "[", "closeness", "[", "i", "]", ",", "betweenness", "[", "i", "]", ",", "pagerank", "[", "i", "]", "]", "for", "i", "in", "range", "(", "\n", "data", ".", "num_nodes", ")", "]", ")", "\n", "return", "centrality_features", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.compute_akx": [[129, 141], ["feature_expansion.FeatureExpander.norm", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "feature_expansion.FeatureExpander.empty_feature", "feature_expansion.FeatureExpander.propagate", "xs.append"], "methods", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.norm", "home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.empty_feature"], ["", "def", "compute_akx", "(", "self", ",", "num_nodes", ",", "x", ",", "edge_index", ",", "edge_weight", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "AK", "is", "None", "or", "self", ".", "AK", "<=", "0", ":", "\n", "            ", "return", "self", ".", "empty_feature", "(", "num_nodes", ")", "\n", "\n", "", "edge_index", ",", "norm", "=", "self", ".", "norm", "(", "\n", "edge_index", ",", "num_nodes", ",", "edge_weight", ",", "diag_val", "=", "self", ".", "edge_norm_diag", ")", "\n", "\n", "xs", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "1", ",", "self", ".", "AK", "+", "1", ")", ":", "\n", "            ", "x", "=", "self", ".", "propagate", "(", "edge_index", ",", "x", "=", "x", ",", "norm", "=", "norm", ")", "\n", "xs", ".", "append", "(", "x", ")", "\n", "", "return", "torch", ".", "cat", "(", "xs", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.message": [[142, 144], ["norm.view"], "methods", ["None"], ["", "def", "message", "(", "self", ",", "x_j", ",", "norm", ")", ":", "\n", "        ", "return", "norm", ".", "view", "(", "-", "1", ",", "1", ")", "*", "x_j", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.norm": [[145, 169], ["torch.ones.view", "torch.ones.view", "feature_expansion.FeatureExpander.", "feature_expansion.FeatureExpander.", "torch.full", "torch.full", "torch.full", "torch.full", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch_scatter.scatter_add", "torch_scatter.scatter_add.pow", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones.size", "torch.ones.size", "edge_index.size", "edge_index.size", "float"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "norm", "(", "edge_index", ",", "num_nodes", ",", "edge_weight", ",", "diag_val", "=", "1e-8", ",", "dtype", "=", "None", ")", ":", "\n", "        ", "if", "edge_weight", "is", "None", ":", "\n", "            ", "edge_weight", "=", "torch", ".", "ones", "(", "(", "edge_index", ".", "size", "(", "1", ")", ",", ")", ",", "\n", "dtype", "=", "dtype", ",", "\n", "device", "=", "edge_index", ".", "device", ")", "\n", "", "edge_weight", "=", "edge_weight", ".", "view", "(", "-", "1", ")", "\n", "assert", "edge_weight", ".", "size", "(", "0", ")", "==", "edge_index", ".", "size", "(", "1", ")", "\n", "\n", "edge_index", ",", "edge_weight", "=", "remove_self_loops", "(", "edge_index", ",", "edge_weight", ")", "\n", "edge_index", ",", "_", "=", "add_self_loops", "(", "edge_index", ",", "num_nodes", "=", "num_nodes", ")", "\n", "# Add edge_weight for loop edges.", "\n", "loop_weight", "=", "torch", ".", "full", "(", "(", "num_nodes", ",", ")", ",", "\n", "diag_val", ",", "\n", "dtype", "=", "edge_weight", ".", "dtype", ",", "\n", "device", "=", "edge_weight", ".", "device", ")", "\n", "edge_weight", "=", "torch", ".", "cat", "(", "[", "edge_weight", ",", "loop_weight", "]", ",", "dim", "=", "0", ")", "\n", "\n", "row", ",", "col", "=", "edge_index", "\n", "deg", "=", "scatter_add", "(", "edge_weight", ",", "row", ",", "dim", "=", "0", ",", "dim_size", "=", "num_nodes", ")", "\n", "deg_inv_sqrt", "=", "deg", ".", "pow", "(", "-", "0.5", ")", "\n", "deg_inv_sqrt", "[", "deg_inv_sqrt", "==", "float", "(", "'inf'", ")", "]", "=", "0", "\n", "\n", "return", "edge_index", ",", "deg_inv_sqrt", "[", "row", "]", "*", "edge_weight", "*", "deg_inv_sqrt", "[", "col", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.feature_expansion.FeatureExpander.empty_feature": [[170, 172], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "empty_feature", "(", "self", ",", "num_nodes", ")", ":", "\n", "        ", "return", "torch", ".", "zeros", "(", "[", "num_nodes", ",", "0", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.utils.print_weights": [[3, 8], ["model.named_parameters", "sys.stdout.flush", "print"], "function", ["None"], ["def", "print_weights", "(", "model", ")", ":", "\n", "    ", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "param", ".", "requires_grad", ":", "\n", "            ", "print", "(", "name", ",", "param", ".", "shape", ")", "\n", "", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.utils.logger": [[10, 17], ["sys.stdout.flush", "print"], "function", ["None"], ["", "def", "logger", "(", "info", ")", ":", "\n", "    ", "fold", ",", "epoch", "=", "info", "[", "'fold'", "]", ",", "info", "[", "'epoch'", "]", "\n", "if", "epoch", "==", "1", "or", "epoch", "%", "10", "==", "0", ":", "\n", "        ", "train_acc", ",", "test_acc", "=", "info", "[", "'train_acc'", "]", ",", "info", "[", "'test_acc'", "]", "\n", "print", "(", "'{:02d}/{:03d}: Train Acc: {:.3f}, Test Accuracy: {:.3f}'", ".", "format", "(", "\n", "fold", ",", "epoch", ",", "train_acc", ",", "test_acc", ")", ")", "\n", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.datasets.get_dataset": [[13, 63], ["re.findall", "re.findall", "re.findall", "re.findall", "re.findall", "re.findall", "os.join", "os.join", "feat_str.find", "int", "int", "int", "float", "float", "feat_str.find", "feat_str.find", "feature_expansion.FeatureExpander", "tu_dataset.TUDatasetExt", "os.expanduser", "torch_geometric.datasets.MNISTSuperpixels", "torch_geometric.datasets.MNISTSuperpixels", "image_dataset.ImageDataset", "image_dataset.ImageDataset", "torch_geometric.Cartesian", "torch_geometric.Cartesian"], "function", ["None"], ["def", "get_dataset", "(", "name", ",", "sparse", "=", "True", ",", "feat_str", "=", "\"deg+ak3+reall\"", ",", "root", "=", "None", ")", ":", "\n", "    ", "if", "root", "is", "None", "or", "root", "==", "''", ":", "\n", "        ", "path", "=", "osp", ".", "join", "(", "osp", ".", "expanduser", "(", "'~'", ")", ",", "'pyG_data'", ",", "name", ")", "\n", "", "else", ":", "\n", "        ", "path", "=", "osp", ".", "join", "(", "root", ",", "name", ")", "\n", "", "degree", "=", "feat_str", ".", "find", "(", "\"deg\"", ")", ">=", "0", "\n", "onehot_maxdeg", "=", "re", ".", "findall", "(", "\"odeg(\\d+)\"", ",", "feat_str", ")", "\n", "onehot_maxdeg", "=", "int", "(", "onehot_maxdeg", "[", "0", "]", ")", "if", "onehot_maxdeg", "else", "None", "\n", "k", "=", "re", ".", "findall", "(", "\"an{0,1}k(\\d+)\"", ",", "feat_str", ")", "\n", "k", "=", "int", "(", "k", "[", "0", "]", ")", "if", "k", "else", "0", "\n", "groupd", "=", "re", ".", "findall", "(", "\"groupd(\\d+)\"", ",", "feat_str", ")", "\n", "groupd", "=", "int", "(", "groupd", "[", "0", "]", ")", "if", "groupd", "else", "0", "\n", "remove_edges", "=", "re", ".", "findall", "(", "\"re(\\w+)\"", ",", "feat_str", ")", "\n", "remove_edges", "=", "remove_edges", "[", "0", "]", "if", "remove_edges", "else", "'none'", "\n", "edge_noises_add", "=", "re", ".", "findall", "(", "\"randa([\\d\\.]+)\"", ",", "feat_str", ")", "\n", "edge_noises_add", "=", "float", "(", "edge_noises_add", "[", "0", "]", ")", "if", "edge_noises_add", "else", "0", "\n", "edge_noises_delete", "=", "re", ".", "findall", "(", "\"randd([\\d\\.]+)\"", ",", "feat_str", ")", "\n", "edge_noises_delete", "=", "float", "(", "\n", "edge_noises_delete", "[", "0", "]", ")", "if", "edge_noises_delete", "else", "0", "\n", "centrality", "=", "feat_str", ".", "find", "(", "\"cent\"", ")", ">=", "0", "\n", "coord", "=", "feat_str", ".", "find", "(", "\"coord\"", ")", ">=", "0", "\n", "\n", "pre_transform", "=", "FeatureExpander", "(", "\n", "degree", "=", "degree", ",", "onehot_maxdeg", "=", "onehot_maxdeg", ",", "AK", "=", "k", ",", "\n", "centrality", "=", "centrality", ",", "remove_edges", "=", "remove_edges", ",", "\n", "edge_noises_add", "=", "edge_noises_add", ",", "edge_noises_delete", "=", "edge_noises_delete", ",", "\n", "group_degree", "=", "groupd", ")", ".", "transform", "\n", "\n", "if", "'MNIST'", "in", "name", "or", "'CIFAR'", "in", "name", ":", "\n", "        ", "if", "name", "==", "'MNIST_SUPERPIXEL'", ":", "\n", "            ", "train_dataset", "=", "MNISTSuperpixels", "(", "path", ",", "True", ",", "\n", "pre_transform", "=", "pre_transform", ",", "transform", "=", "T", ".", "Cartesian", "(", ")", ")", "\n", "test_dataset", "=", "MNISTSuperpixels", "(", "path", ",", "False", ",", "\n", "pre_transform", "=", "pre_transform", ",", "transform", "=", "T", ".", "Cartesian", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "train_dataset", "=", "ImageDataset", "(", "path", ",", "name", ",", "True", ",", "\n", "pre_transform", "=", "pre_transform", ",", "coord", "=", "coord", ",", "\n", "processed_file_prefix", "=", "\"data_%s\"", "%", "feat_str", ")", "\n", "test_dataset", "=", "ImageDataset", "(", "path", ",", "name", ",", "False", ",", "\n", "pre_transform", "=", "pre_transform", ",", "coord", "=", "coord", ",", "\n", "processed_file_prefix", "=", "\"data_%s\"", "%", "feat_str", ")", "\n", "", "dataset", "=", "(", "train_dataset", ",", "test_dataset", ")", "\n", "", "else", ":", "\n", "        ", "dataset", "=", "TUDatasetExt", "(", "\n", "path", ",", "name", ",", "pre_transform", "=", "pre_transform", ",", "\n", "use_node_attr", "=", "True", ",", "processed_filename", "=", "\"data_%s.pt\"", "%", "feat_str", ")", "\n", "\n", "dataset", ".", "data", ".", "edge_attr", "=", "None", "\n", "\n", "", "return", "dataset", "\n", "", ""]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.__init__": [[40, 66], ["torch_geometric.nn.conv.MessagePassing.__init__", "torch.nn.Parameter", "gcn_conv.GCNConv.reset_parameters", "torch.Tensor", "torch.nn.Parameter", "gcn_conv.GCNConv.register_parameter", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.__init__", "home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.reset_parameters"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "improved", "=", "False", ",", "\n", "cached", "=", "False", ",", "\n", "bias", "=", "True", ",", "\n", "edge_norm", "=", "True", ",", "\n", "gfn", "=", "False", ")", ":", "\n", "        ", "super", "(", "GCNConv", ",", "self", ")", ".", "__init__", "(", "'add'", ")", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "improved", "=", "improved", "\n", "self", ".", "cached", "=", "cached", "\n", "self", ".", "cached_result", "=", "None", "\n", "self", ".", "edge_norm", "=", "edge_norm", "\n", "self", ".", "gfn", "=", "gfn", "\n", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "in_channels", ",", "out_channels", ")", ")", "\n", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "out_channels", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'bias'", ",", "None", ")", "\n", "\n", "", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.reset_parameters": [[67, 71], ["torch_geometric.nn.inits.glorot", "torch_geometric.nn.inits.zeros"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "glorot", "(", "self", ".", "weight", ")", "\n", "zeros", "(", "self", ".", "bias", ")", "\n", "self", ".", "cached_result", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.norm": [[72, 96], ["torch.ones.view", "gcn_conv.GCNConv.", "gcn_conv.GCNConv.", "torch.full", "torch.cat", "torch_scatter.scatter_add", "torch_scatter.scatter_add.pow", "torch.ones", "torch.ones.size", "edge_index.size", "edge_index.size", "float"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "norm", "(", "edge_index", ",", "num_nodes", ",", "edge_weight", ",", "improved", "=", "False", ",", "dtype", "=", "None", ")", ":", "\n", "        ", "if", "edge_weight", "is", "None", ":", "\n", "            ", "edge_weight", "=", "torch", ".", "ones", "(", "(", "edge_index", ".", "size", "(", "1", ")", ",", ")", ",", "\n", "dtype", "=", "dtype", ",", "\n", "device", "=", "edge_index", ".", "device", ")", "\n", "", "edge_weight", "=", "edge_weight", ".", "view", "(", "-", "1", ")", "\n", "assert", "edge_weight", ".", "size", "(", "0", ")", "==", "edge_index", ".", "size", "(", "1", ")", "\n", "\n", "edge_index", ",", "edge_weight", "=", "remove_self_loops", "(", "edge_index", ",", "edge_weight", ")", "\n", "edge_index", ",", "_", "=", "add_self_loops", "(", "edge_index", ",", "num_nodes", "=", "num_nodes", ")", "\n", "# Add edge_weight for loop edges.", "\n", "loop_weight", "=", "torch", ".", "full", "(", "(", "num_nodes", ",", ")", ",", "\n", "1", "if", "not", "improved", "else", "2", ",", "\n", "dtype", "=", "edge_weight", ".", "dtype", ",", "\n", "device", "=", "edge_weight", ".", "device", ")", "\n", "edge_weight", "=", "torch", ".", "cat", "(", "[", "edge_weight", ",", "loop_weight", "]", ",", "dim", "=", "0", ")", "\n", "\n", "row", ",", "col", "=", "edge_index", "\n", "deg", "=", "scatter_add", "(", "edge_weight", ",", "row", ",", "dim", "=", "0", ",", "dim_size", "=", "num_nodes", ")", "\n", "deg_inv_sqrt", "=", "deg", ".", "pow", "(", "-", "0.5", ")", "\n", "deg_inv_sqrt", "[", "deg_inv_sqrt", "==", "float", "(", "'inf'", ")", "]", "=", "0", "\n", "\n", "return", "edge_index", ",", "deg_inv_sqrt", "[", "row", "]", "*", "edge_weight", "*", "deg_inv_sqrt", "[", "col", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.forward": [[97, 113], ["torch.matmul", "gcn_conv.GCNConv.propagate", "gcn_conv.GCNConv.norm", "torch.matmul.size"], "methods", ["home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.norm"], ["", "def", "forward", "(", "self", ",", "x", ",", "edge_index", ",", "edge_weight", "=", "None", ")", ":", "\n", "        ", "\"\"\"\"\"\"", "\n", "x", "=", "torch", ".", "matmul", "(", "x", ",", "self", ".", "weight", ")", "\n", "if", "self", ".", "gfn", ":", "\n", "            ", "return", "x", "\n", "\n", "", "if", "not", "self", ".", "cached", "or", "self", ".", "cached_result", "is", "None", ":", "\n", "            ", "if", "self", ".", "edge_norm", ":", "\n", "                ", "edge_index", ",", "norm", "=", "GCNConv", ".", "norm", "(", "\n", "edge_index", ",", "x", ".", "size", "(", "0", ")", ",", "edge_weight", ",", "self", ".", "improved", ",", "x", ".", "dtype", ")", "\n", "", "else", ":", "\n", "                ", "norm", "=", "None", "\n", "", "self", ".", "cached_result", "=", "edge_index", ",", "norm", "\n", "\n", "", "edge_index", ",", "norm", "=", "self", ".", "cached_result", "\n", "return", "self", ".", "propagate", "(", "edge_index", ",", "x", "=", "x", ",", "norm", "=", "norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.message": [[114, 119], ["norm.view"], "methods", ["None"], ["", "def", "message", "(", "self", ",", "x_j", ",", "norm", ")", ":", "\n", "        ", "if", "self", ".", "edge_norm", ":", "\n", "            ", "return", "norm", ".", "view", "(", "-", "1", ",", "1", ")", "*", "x_j", "\n", "", "else", ":", "\n", "            ", "return", "x_j", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.update": [[120, 124], ["None"], "methods", ["None"], ["", "", "def", "update", "(", "self", ",", "aggr_out", ")", ":", "\n", "        ", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "aggr_out", "=", "aggr_out", "+", "self", ".", "bias", "\n", "", "return", "aggr_out", "\n", "\n"]], "home.repos.pwc.inspect_result.chentingpc_gfn.None.gcn_conv.GCNConv.__repr__": [[125, 128], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "'{}({}, {})'", ".", "format", "(", "self", ".", "__class__", ".", "__name__", ",", "self", ".", "in_channels", ",", "\n", "self", ".", "out_channels", ")", "\n", "", "", ""]]}