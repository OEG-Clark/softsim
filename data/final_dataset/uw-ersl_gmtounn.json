{"home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.RectangularGridMesher.__init__": [[9, 31], ["jax.sum", "jax.sum", "Mesher.RectangularGridMesher.getMeshStructure", "Mesher.RectangularGridMesher.generatePoints", "Mesher.RectangularGridMesher.processBoundaryCondition", "Mesher.RectangularGridMesher.getBMatrix", "matplotlib.subplots", "matplotlib.subplots", "jax.ones", "jax.ones"], "methods", ["home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.RectangularGridMesher.getMeshStructure", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.UnstructuredMesher.generatePoints", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.RectangularGridMesher.processBoundaryCondition", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.RectangularGridMesher.getBMatrix"], ["  ", "def", "__init__", "(", "self", ",", "ndim", ",", "nelx", ",", "nely", ",", "elemSize", ",", "bcSettings", ")", ":", "\n", "    ", "self", ".", "meshType", "=", "'gridMesh'", "\n", "self", ".", "ndim", "=", "ndim", "\n", "self", ".", "nelx", "=", "nelx", "\n", "self", ".", "nely", "=", "nely", "\n", "self", ".", "elemSize", "=", "elemSize", "\n", "self", ".", "bcSettings", "=", "bcSettings", "\n", "self", ".", "numElems", "=", "self", ".", "nelx", "*", "self", ".", "nely", "\n", "self", ".", "elemArea", "=", "self", ".", "elemSize", "[", "0", "]", "*", "self", ".", "elemSize", "[", "1", "]", "*", "jnp", ".", "ones", "(", "(", "self", ".", "numElems", ")", ")", "# all same areas for grid", "\n", "self", ".", "totalMeshArea", "=", "jnp", ".", "sum", "(", "self", ".", "elemArea", ")", "\n", "self", ".", "numNodes", "=", "(", "self", ".", "nelx", "+", "1", ")", "*", "(", "self", ".", "nely", "+", "1", ")", "\n", "self", ".", "nodesPerElem", "=", "4", "# grid quad mesh", "\n", "self", ".", "ndof", "=", "self", ".", "bcSettings", "[", "'dofsPerNode'", "]", "*", "self", ".", "numNodes", "\n", "self", ".", "edofMat", ",", "self", ".", "nodeIdx", ",", "self", ".", "elemNodes", ",", "self", ".", "nodeXY", ",", "self", ".", "bb", "=", "self", ".", "getMeshStructure", "(", ")", "\n", "self", ".", "elemCenters", "=", "self", ".", "generatePoints", "(", ")", "\n", "self", ".", "processBoundaryCondition", "(", ")", "\n", "self", ".", "BMatrix", "=", "self", ".", "getBMatrix", "(", "0.", ",", "0.", ")", "\n", "self", ".", "fig", ",", "self", ".", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "self", ".", "bb", "=", "{", "'xmax'", ":", "self", ".", "nelx", "*", "self", ".", "elemSize", "[", "0", "]", ",", "'xmin'", ":", "0.", ",", "'ymax'", ":", "self", ".", "nely", "*", "self", ".", "elemSize", "[", "1", "]", ",", "'ymin'", ":", "0.", "}", "\n", "#--------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.RectangularGridMesher.getBMatrix": [[32, 46], ["numpy.zeros", "numpy.array().reshape", "numpy.array", "jax.array", "jax.array", "numpy.array"], "methods", ["None"], ["", "def", "getBMatrix", "(", "self", ",", "xi", ",", "eta", ")", ":", "\n", "    ", "dx", ",", "dy", "=", "self", ".", "elemSize", "[", "0", "]", ",", "self", ".", "elemSize", "[", "1", "]", "\n", "B", "=", "np", ".", "zeros", "(", "(", "3", ",", "8", ")", ")", "\n", "r1", "=", "np", ".", "array", "(", "[", "(", "2.", "*", "(", "eta", "/", "4.", "-", "1.", "/", "4.", ")", ")", "/", "dx", ",", "-", "(", "2.", "*", "(", "eta", "/", "4.", "-", "1.", "/", "4", ")", ")", "/", "dx", ",", "(", "2.", "*", "(", "eta", "/", "4.", "+", "1.", "/", "4", ")", ")", "/", "dx", ",", "-", "(", "2.", "*", "(", "eta", "/", "4.", "+", "1.", "/", "4", ")", ")", "/", "dx", "]", ")", ".", "reshape", "(", "-", "1", ")", "\n", "r2", "=", "np", ".", "array", "(", "[", "(", "2.", "*", "(", "xi", "/", "4.", "-", "1.", "/", "4", ")", ")", "/", "dy", ",", "-", "(", "2.", "*", "(", "xi", "/", "4.", "+", "1.", "/", "4", ")", ")", "/", "dy", ",", "(", "2.", "*", "(", "xi", "/", "4.", "+", "1.", "/", "4", ")", ")", "/", "dy", ",", "-", "(", "2.", "*", "(", "xi", "/", "4.", "-", "1.", "/", "4", ")", ")", "/", "dy", "]", ")", "\n", "\n", "B", "=", "[", "[", "r1", "[", "0", "]", ",", "0.", ",", "r1", "[", "1", "]", ",", "0.", ",", "r1", "[", "2", "]", ",", "0.", ",", "r1", "[", "3", "]", ",", "0.", "]", ",", "[", "0.", ",", "r2", "[", "0", "]", ",", "0.", ",", "r2", "[", "1", "]", ",", "0.", ",", "r2", "[", "2", "]", ",", "0.", ",", "r2", "[", "3", "]", "]", ",", "[", "r2", "[", "0", "]", ",", "r1", "[", "0", "]", ",", "r2", "[", "1", "]", ",", "r1", "[", "1", "]", ",", "r2", "[", "2", "]", ",", "r1", "[", "2", "]", ",", "r2", "[", "3", "]", ",", "r1", "[", "3", "]", "]", "]", "\n", "\n", "return", "jnp", ".", "array", "(", "B", ")", "\n", "#--------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.RectangularGridMesher.getMeshStructure": [[47, 97], ["numpy.zeros", "tuple", "tuple", "numpy.zeros", "range", "numpy.zeros", "range", "range", "numpy.kron().flatten().astype", "numpy.kron().flatten().astype", "range", "range", "range", "numpy.reshape", "numpy.array", "numpy.array", "numpy.reshape", "numpy.matlib.repmat", "numpy.kron().flatten", "numpy.kron().flatten", "numpy.arange", "numpy.matlib.repmat", "numpy.array", "numpy.kron", "numpy.kron", "numpy.ones", "numpy.ones"], "methods", ["None"], ["", "def", "getMeshStructure", "(", "self", ")", ":", "\n", "# returns edofMat: array of size (numElemsX8) with", "\n", "# the global dof of each elem", "\n", "# idx: A tuple informing the position for assembly of computed entries", "\n", "    ", "n", "=", "self", ".", "bcSettings", "[", "'dofsPerNode'", "]", "*", "self", ".", "nodesPerElem", ";", "\n", "edofMat", "=", "np", ".", "zeros", "(", "(", "self", ".", "nelx", "*", "self", ".", "nely", ",", "n", ")", ",", "dtype", "=", "int", ")", "\n", "if", "(", "self", ".", "bcSettings", "[", "'dofsPerNode'", "]", "==", "2", ")", ":", "# as in structural", "\n", "      ", "for", "elx", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "        ", "for", "ely", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "          ", "el", "=", "ely", "+", "elx", "*", "self", ".", "nely", "\n", "n1", "=", "(", "self", ".", "nely", "+", "1", ")", "*", "elx", "+", "ely", "\n", "n2", "=", "(", "self", ".", "nely", "+", "1", ")", "*", "(", "elx", "+", "1", ")", "+", "ely", "\n", "edofMat", "[", "el", ",", ":", "]", "=", "np", ".", "array", "(", "[", "2", "*", "n1", "+", "2", ",", "2", "*", "n1", "+", "3", ",", "2", "*", "n2", "+", "2", ",", "2", "*", "n2", "+", "3", ",", "2", "*", "n2", ",", "2", "*", "n2", "+", "1", ",", "2", "*", "n1", ",", "2", "*", "n1", "+", "1", "]", ")", "\n", "\n", "", "", "", "elif", "(", "self", ".", "bcSettings", "[", "'dofsPerNode'", "]", "==", "1", ")", ":", "# as in thermal", "\n", "      ", "nodenrs", "=", "np", ".", "reshape", "(", "np", ".", "arange", "(", "0", ",", "self", ".", "ndof", ")", ",", "(", "1", "+", "self", ".", "nelx", ",", "1", "+", "self", ".", "nely", ")", ")", ".", "T", "\n", "edofVec", "=", "np", ".", "reshape", "(", "nodenrs", "[", "0", ":", "-", "1", ",", "0", ":", "-", "1", "]", "+", "1", ",", "self", ".", "numElems", ",", "'F'", ")", "\n", "edofMat", "=", "np", ".", "matlib", ".", "repmat", "(", "edofVec", ",", "4", ",", "1", ")", ".", "T", "+", "np", ".", "matlib", ".", "repmat", "(", "np", ".", "array", "(", "[", "0", ",", "self", ".", "nely", "+", "1", ",", "self", ".", "nely", ",", "-", "1", "]", ")", ",", "self", ".", "numElems", ",", "1", ")", "\n", "\n", "", "iK", "=", "tuple", "(", "np", ".", "kron", "(", "edofMat", ",", "np", ".", "ones", "(", "(", "n", ",", "1", ")", ")", ")", ".", "flatten", "(", ")", ".", "astype", "(", "int", ")", ")", "\n", "jK", "=", "tuple", "(", "np", ".", "kron", "(", "edofMat", ",", "np", ".", "ones", "(", "(", "1", ",", "n", ")", ")", ")", ".", "flatten", "(", ")", ".", "astype", "(", "int", ")", ")", "\n", "nodeIdx", "=", "jax", ".", "ops", ".", "index", "[", "iK", ",", "jK", "]", "\n", "\n", "\n", "elemNodes", "=", "np", ".", "zeros", "(", "(", "self", ".", "numElems", ",", "self", ".", "nodesPerElem", ")", ")", "\n", "for", "elx", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "for", "ely", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "el", "=", "ely", "+", "elx", "*", "self", ".", "nely", "\n", "n1", "=", "(", "self", ".", "nely", "+", "1", ")", "*", "elx", "+", "ely", "\n", "n2", "=", "(", "self", ".", "nely", "+", "1", ")", "*", "(", "elx", "+", "1", ")", "+", "ely", "\n", "elemNodes", "[", "el", ",", ":", "]", "=", "np", ".", "array", "(", "[", "n1", "+", "1", ",", "n2", "+", "1", ",", "n2", ",", "n1", "]", ")", "\n", "", "", "bb", "=", "{", "}", "\n", "bb", "[", "'xmin'", "]", ",", "bb", "[", "'xmax'", "]", ",", "bb", "[", "'ymin'", "]", ",", "bb", "[", "'ymax'", "]", "=", "0.", ",", "self", ".", "nelx", "*", "self", ".", "elemSize", "[", "0", "]", ",", "0.", ",", "self", ".", "nely", "*", "self", ".", "elemSize", "[", "1", "]", "\n", "\n", "nodeXY", "=", "np", ".", "zeros", "(", "(", "self", ".", "numNodes", ",", "2", ")", ")", "\n", "ctr", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "nelx", "+", "1", ")", ":", "\n", "      ", "for", "j", "in", "range", "(", "self", ".", "nely", "+", "1", ")", ":", "\n", "        ", "nodeXY", "[", "ctr", ",", "0", "]", "=", "self", ".", "elemSize", "[", "0", "]", "*", "i", "\n", "nodeXY", "[", "ctr", ",", "1", "]", "=", "self", ".", "elemSize", "[", "1", "]", "*", "j", "\n", "ctr", "+=", "1", "\n", "\n", "", "", "return", "edofMat", ",", "nodeIdx", ",", "elemNodes", ",", "nodeXY", ",", "bb", "\n", "#--------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.RectangularGridMesher.generatePoints": [[99, 111], ["numpy.zeros", "range", "range"], "methods", ["None"], ["", "def", "generatePoints", "(", "self", ",", "res", "=", "1", ")", ":", "\n", "# args: Mesh is dictionary containing nelx, nely, elemSize...", "\n", "# res is the number of points per elem", "\n", "# returns an array of size (numpts X 2)", "\n", "    ", "xy", "=", "np", ".", "zeros", "(", "(", "res", "**", "2", "*", "self", ".", "numElems", ",", "2", ")", ")", "\n", "ctr", "=", "0", "\n", "for", "i", "in", "range", "(", "res", "*", "self", ".", "nelx", ")", ":", "\n", "      ", "for", "j", "in", "range", "(", "res", "*", "self", ".", "nely", ")", ":", "\n", "        ", "xy", "[", "ctr", ",", "0", "]", "=", "self", ".", "elemSize", "[", "0", "]", "*", "(", "i", "+", "0.5", ")", "/", "res", "\n", "xy", "[", "ctr", ",", "1", "]", "=", "self", ".", "elemSize", "[", "1", "]", "*", "(", "j", "+", "0.5", ")", "/", "res", "\n", "ctr", "+=", "1", "\n", "", "", "return", "xy", "\n", "#--------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.RectangularGridMesher.processBoundaryCondition": [[112, 119], ["numpy.zeros", "numpy.arange", "numpy.setdiff1d", "numpy.arange"], "methods", ["None"], ["", "def", "processBoundaryCondition", "(", "self", ")", ":", "\n", "    ", "force", "=", "np", ".", "zeros", "(", "(", "self", ".", "ndof", ",", "1", ")", ")", "\n", "dofs", "=", "np", ".", "arange", "(", "self", ".", "ndof", ")", "\n", "fixed", "=", "dofs", "[", "self", ".", "bcSettings", "[", "'fixedNodes'", "]", "]", "\n", "free", "=", "np", ".", "setdiff1d", "(", "np", ".", "arange", "(", "self", ".", "ndof", ")", ",", "fixed", ")", "\n", "force", "[", "self", ".", "bcSettings", "[", "'forceNodes'", "]", "]", "=", "self", ".", "bcSettings", "[", "'forceMagnitude'", "]", "\n", "self", ".", "bc", "=", "{", "'force'", ":", "force", ",", "'fixed'", ":", "fixed", ",", "'free'", ":", "free", "}", "\n", "#--------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.RectangularGridMesher.plotFieldOnMesh": [[120, 129], ["matplotlib.ion", "matplotlib.ion", "matplotlib.clf", "matplotlib.clf", "matplotlib.imshow", "matplotlib.imshow", "matplotlib.axis", "matplotlib.axis", "matplotlib.grid", "matplotlib.grid", "matplotlib.title", "matplotlib.title", "matplotlib.pause", "matplotlib.pause", "Mesher.RectangularGridMesher.fig.canvas.draw", "numpy.flipud", "field.reshape"], "methods", ["None"], ["", "def", "plotFieldOnMesh", "(", "self", ",", "field", ",", "titleStr", ")", ":", "\n", "    ", "plt", ".", "ion", "(", ")", ";", "plt", ".", "clf", "(", ")", "\n", "plt", ".", "imshow", "(", "-", "np", ".", "flipud", "(", "field", ".", "reshape", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", ".", "T", ")", ",", "cmap", "=", "'gray'", ",", "interpolation", "=", "'none'", ")", "\n", "plt", ".", "axis", "(", "'Equal'", ")", "\n", "plt", ".", "grid", "(", "False", ")", "\n", "plt", ".", "title", "(", "titleStr", ")", "\n", "plt", ".", "pause", "(", "0.01", ")", "\n", "self", ".", "fig", ".", "canvas", ".", "draw", "(", ")", "\n", "#--------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.UnstructuredMesher.__init__": [[131, 140], ["Mesher.UnstructuredMesher.readMeshData", "matplotlib.subplots", "matplotlib.subplots"], "methods", ["home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.UnstructuredMesher.readMeshData"], ["  ", "def", "__init__", "(", "self", ",", "bcFiles", ")", ":", "\n", "    ", "self", ".", "bcFiles", "=", "bcFiles", "\n", "self", ".", "meshProp", "=", "{", "}", "\n", "self", ".", "meshType", "=", "'unstructuredMesh'", "\n", "self", ".", "ndim", "=", "2", "# 2D structures", "\n", "self", ".", "dofsPerNode", "=", "2", "# structural", "\n", "\n", "self", ".", "readMeshData", "(", ")", "\n", "self", ".", "fig", ",", "self", ".", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "#-----------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.UnstructuredMesher.readMeshData": [[141, 213], ["int", "numpy.setdiff1d", "numpy.zeros", "open", "open", "int", "numpy.zeros", "open.readline().rstrip().split", "jax.sum", "jax.sum", "numpy.zeros", "numpy.zeros", "Mesher.UnstructuredMesher.edofMat.astype", "Mesher.UnstructuredMesher.elemNodes.astype", "numpy.zeros", "range", "numpy.zeros", "range", "numpy.kron().flatten().astype", "numpy.kron().flatten().astype", "open", "numpy.array().reshape", "open", "numpy.array().reshape", "numpy.arange", "line.rstrip().split", "open.readline().rstrip", "jax.ones", "jax.ones", "line.rstrip().split", "numpy.array().reshape", "range", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "open.readline().rstrip", "numpy.kron().flatten", "numpy.kron().flatten", "numpy.array", "numpy.array", "line.rstrip", "open.readline", "line.rstrip", "numpy.array", "open.readline", "numpy.kron", "numpy.kron", "float", "int", "numpy.ones", "numpy.ones", "line.rstrip", "line.rstrip", "range"], "methods", ["None"], ["", "def", "readMeshData", "(", "self", ")", ":", "\n", "# Only structural mesh ", "\n", "    ", "self", ".", "bc", "=", "{", "}", "\n", "self", ".", "nodesPerElem", "=", "4", "# grid quad mesh", "\n", "# Force", "\n", "with", "open", "(", "self", ".", "bcFiles", "[", "'forceFile'", "]", ")", "as", "f", ":", "\n", "      ", "self", ".", "bc", "[", "'force'", "]", "=", "np", ".", "array", "(", "[", "float", "(", "line", ".", "rstrip", "(", ")", ")", "for", "line", "in", "f", "]", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "", "self", ".", "ndof", "=", "self", ".", "bc", "[", "'force'", "]", ".", "shape", "[", "0", "]", "\n", "self", ".", "numNodes", "=", "int", "(", "0.5", "*", "self", ".", "ndof", ")", "# structural", "\n", "# Fixed", "\n", "with", "open", "(", "self", ".", "bcFiles", "[", "'fixedFile'", "]", ")", "as", "f", ":", "\n", "      ", "self", ".", "bc", "[", "'fixed'", "]", "=", "np", ".", "array", "(", "[", "int", "(", "line", ".", "rstrip", "(", ")", ")", "for", "line", "in", "f", "]", ")", ".", "reshape", "(", "-", "1", ")", "\n", "", "self", ".", "bc", "[", "'free'", "]", "=", "np", ".", "setdiff1d", "(", "np", ".", "arange", "(", "self", ".", "ndof", ")", ",", "self", ".", "bc", "[", "'fixed'", "]", ")", "\n", "\n", "# Node XY", "\n", "self", ".", "nodeXY", "=", "np", ".", "zeros", "(", "(", "self", ".", "numNodes", ",", "self", ".", "ndim", ")", ")", "\n", "ctr", "=", "0", "\n", "f", "=", "open", "(", "self", ".", "bcFiles", "[", "'nodeXYFile'", "]", ")", "\n", "for", "line", "in", "f", ":", "\n", "      ", "self", ".", "nodeXY", "[", "ctr", ",", ":", "]", "=", "line", ".", "rstrip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "ctr", "+=", "1", "\n", "\n", "# edofMat", "\n", "", "ctr", "=", "0", "\n", "f", "=", "open", "(", "self", ".", "bcFiles", "[", "'elemNodesFile'", "]", ")", "\n", "self", ".", "numElems", "=", "int", "(", "f", ".", "readline", "(", ")", ".", "rstrip", "(", ")", ")", "\n", "self", ".", "elemSize", "=", "np", ".", "zeros", "(", "(", "2", ")", ")", "\n", "self", ".", "elemSize", "[", "0", "]", ",", "self", ".", "elemSize", "[", "1", "]", "=", "f", ".", "readline", "(", ")", ".", "rstrip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "self", ".", "elemArea", "=", "self", ".", "elemSize", "[", "0", "]", "*", "self", ".", "elemSize", "[", "1", "]", "*", "jnp", ".", "ones", "(", "(", "self", ".", "numElems", ")", ")", "# all same areas for grid", "\n", "self", ".", "totalMeshArea", "=", "jnp", ".", "sum", "(", "self", ".", "elemArea", ")", "\n", "\n", "self", ".", "elemNodes", "=", "np", ".", "zeros", "(", "(", "self", ".", "numElems", ",", "self", ".", "nodesPerElem", ")", ")", "\n", "self", ".", "edofMat", "=", "np", ".", "zeros", "(", "(", "self", ".", "numElems", ",", "self", ".", "nodesPerElem", "*", "self", ".", "dofsPerNode", ")", ")", "\n", "for", "line", "in", "f", ":", "\n", "      ", "self", ".", "elemNodes", "[", "ctr", ",", ":", "]", "=", "line", ".", "rstrip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "# if(self.physics == self.PHYSICS_OPTIONS['Structural']):", "\n", "self", ".", "edofMat", "[", "ctr", ",", ":", "]", "=", "np", ".", "array", "(", "[", "[", "2", "*", "self", ".", "elemNodes", "[", "ctr", ",", "i", "]", ",", "self", ".", "dofsPerNode", "*", "self", ".", "elemNodes", "[", "ctr", ",", "i", "]", "+", "1", "]", "for", "i", "in", "range", "(", "self", ".", "nodesPerElem", ")", "]", ")", ".", "reshape", "(", "-", "1", ")", "\n", "# else:", "\n", "#   self.meshProp['edofMat'][ctr,:] = self.meshProp['elemNodes'][ctr,:];", "\n", "ctr", "+=", "1", "\n", "", "self", ".", "edofMat", "=", "self", ".", "edofMat", ".", "astype", "(", "int", ")", "\n", "self", ".", "elemNodes", "=", "self", ".", "elemNodes", ".", "astype", "(", "int", ")", "\n", "\n", "\n", "# compute elemCenters", "\n", "self", ".", "elemCenters", "=", "np", ".", "zeros", "(", "(", "self", ".", "numElems", ",", "self", ".", "ndim", ")", ")", "\n", "for", "elem", "in", "range", "(", "self", ".", "numElems", ")", ":", "\n", "      ", "nodes", "=", "(", "(", "self", ".", "edofMat", "[", "elem", ",", "0", ":", ":", "2", "]", "+", "2", ")", "/", "2", ")", ".", "astype", "(", "int", ")", "-", "1", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "        ", "self", ".", "elemCenters", "[", "elem", ",", "0", "]", "+=", "0.25", "*", "self", ".", "nodeXY", "[", "nodes", "[", "i", "]", ",", "0", "]", "\n", "self", ".", "elemCenters", "[", "elem", ",", "1", "]", "+=", "0.25", "*", "self", ".", "nodeXY", "[", "nodes", "[", "i", "]", ",", "1", "]", "\n", "\n", "", "", "self", ".", "elemVertices", "=", "np", ".", "zeros", "(", "(", "self", ".", "numElems", ",", "self", ".", "nodesPerElem", ",", "self", ".", "ndim", ")", ")", "\n", "for", "elem", "in", "range", "(", "self", ".", "numElems", ")", ":", "\n", "      ", "nodes", "=", "(", "(", "self", ".", "edofMat", "[", "elem", ",", "0", ":", ":", "2", "]", "+", "2", ")", "/", "2", ")", ".", "astype", "(", "int", ")", "-", "1", "\n", "self", ".", "elemVertices", "[", "elem", ",", ":", ",", "0", "]", "=", "self", ".", "nodeXY", "[", "nodes", ",", "0", "]", "\n", "self", ".", "elemVertices", "[", "elem", ",", ":", ",", "1", "]", "=", "self", ".", "nodeXY", "[", "nodes", ",", "1", "]", "\n", "\n", "", "iK", "=", "np", ".", "kron", "(", "self", ".", "edofMat", ",", "np", ".", "ones", "(", "(", "8", ",", "1", ")", ")", ")", ".", "flatten", "(", ")", ".", "astype", "(", "int", ")", "\n", "jK", "=", "np", ".", "kron", "(", "self", ".", "edofMat", ",", "np", ".", "ones", "(", "(", "1", ",", "8", ")", ")", ")", ".", "flatten", "(", ")", ".", "astype", "(", "int", ")", "\n", "\n", "self", ".", "nodeIdx", "=", "jax", ".", "ops", ".", "index", "[", "iK", ",", "jK", "]", "\n", "self", ".", "bb", "=", "{", "}", "\n", "self", ".", "bb", "[", "'xmin'", "]", ",", "self", ".", "bb", "[", "'xmax'", "]", ",", "self", ".", "bb", "[", "'ymin'", "]", ",", "self", ".", "bb", "[", "'ymax'", "]", "=", "np", ".", "min", "(", "self", ".", "nodeXY", "[", ":", ",", "0", "]", ")", ",", "np", ".", "max", "(", "self", ".", "nodeXY", "[", ":", ",", "0", "]", ")", ",", "np", ".", "min", "(", "self", ".", "nodeXY", "[", ":", ",", "1", "]", ")", ",", "np", ".", "max", "(", "self", ".", "nodeXY", "[", ":", ",", "1", "]", ")", "\n", "#-----------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.UnstructuredMesher.generatePoints": [[214, 236], ["numpy.zeros", "range", "range", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "range"], "methods", ["None"], ["", "def", "generatePoints", "(", "self", ",", "res", "=", "1", ",", "includeEndPts", "=", "False", ")", ":", "\n", "    ", "if", "(", "includeEndPts", ")", ":", "\n", "      ", "endPts", "=", "2", "\n", "resMin", ",", "resMax", "=", "0", ",", "res", "+", "2", "\n", "", "else", ":", "\n", "      ", "endPts", "=", "0", "\n", "resMin", ",", "resMax", "=", "1", ",", "res", "+", "1", "\n", "", "points", "=", "np", ".", "zeros", "(", "(", "self", ".", "numElems", "*", "(", "res", "+", "endPts", ")", "**", "2", ",", "2", ")", ")", "\n", "ctr", "=", "0", "\n", "for", "elm", "in", "range", "(", "self", ".", "numElems", ")", ":", "\n", "      ", "nodes", "=", "self", ".", "elemNodes", "[", "elm", ",", ":", "]", "\n", "xmin", ",", "xmax", "=", "np", ".", "min", "(", "self", ".", "nodeXY", "[", "nodes", ",", "0", "]", ")", ",", "np", ".", "max", "(", "self", ".", "nodeXY", "[", "nodes", ",", "0", "]", ")", "\n", "ymin", ",", "ymax", "=", "np", ".", "min", "(", "self", ".", "nodeXY", "[", "nodes", ",", "1", "]", ")", ",", "np", ".", "max", "(", "self", ".", "nodeXY", "[", "nodes", ",", "1", "]", ")", "\n", "delX", "=", "(", "xmax", "-", "xmin", ")", "/", "(", "res", "+", "1.", ")", "\n", "delY", "=", "(", "ymax", "-", "ymin", ")", "/", "(", "res", "+", "1.", ")", "\n", "for", "rx", "in", "range", "(", "resMin", ",", "resMax", ")", ":", "\n", "        ", "xv", "=", "xmin", "+", "rx", "*", "(", "delX", ")", "\n", "for", "ry", "in", "range", "(", "resMin", ",", "resMax", ")", ":", "\n", "          ", "points", "[", "ctr", ",", "0", "]", "=", "xv", "\n", "points", "[", "ctr", ",", "1", "]", "=", "ymin", "+", "ry", "*", "(", "delY", ")", "\n", "ctr", "+=", "1", "\n", "", "", "", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.UnstructuredMesher.plotFieldOnMesh": [[238, 264], ["matplotlib.ion", "matplotlib.ion", "matplotlib.clf", "matplotlib.clf", "Mesher.UnstructuredMesher.plotFieldOnMesh.quatplot"], "methods", ["None"], ["", "def", "plotFieldOnMesh", "(", "self", ",", "field", ",", "titleStr", ",", "res", "=", "1", ")", ":", "\n", "\n", "    ", "y", "=", "self", ".", "nodeXY", "[", ":", ",", "0", "]", "\n", "z", "=", "self", ".", "nodeXY", "[", ":", ",", "1", "]", "\n", "\n", "def", "quatplot", "(", "y", ",", "z", ",", "quatrangles", ",", "values", ",", "ax", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "\n", "      ", "if", "not", "ax", ":", "ax", "=", "plt", ".", "gca", "(", ")", "\n", "yz", "=", "np", ".", "c_", "[", "y", ",", "z", "]", "\n", "verts", "=", "yz", "[", "quatrangles", "]", "\n", "pc", "=", "matplotlib", ".", "collections", ".", "PolyCollection", "(", "verts", ",", "**", "kwargs", ")", "\n", "pc", ".", "set_array", "(", "values", ")", "\n", "ax", ".", "add_collection", "(", "pc", ")", "\n", "ax", ".", "autoscale", "(", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "return", "pc", "\n", "\n", "", "plt", ".", "ion", "(", ")", ";", "plt", ".", "clf", "(", ")", "\n", "\n", "pc", "=", "quatplot", "(", "y", ",", "z", ",", "np", ".", "asarray", "(", "self", ".", "elemNodes", ")", ",", "-", "field", ",", "ax", "=", "None", ",", "\n", "edgecolor", "=", "\"crimson\"", ",", "cmap", "=", "\"gray\"", ")", "\n", "\n", "plt", ".", "title", "(", "titleStr", ")", "\n", "plt", ".", "pause", "(", "0.001", ")", "\n", "plt", ".", "show", "(", ")", "\n", "self", ".", "fig", ".", "canvas", ".", "draw", "(", ")", "\n", "#--------------------------#", ""]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.plotUtil.plotConvergence": [[4, 15], ["numpy.array", "matplotlib.figure", "numpy.array", "matplotlib.semilogy", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.grid", "str", "str"], "function", ["None"], ["def", "plotConvergence", "(", "convg", ")", ":", "\n", "  ", "x", "=", "np", ".", "array", "(", "convg", "[", "'epoch'", "]", ")", "\n", "for", "key", "in", "convg", ":", "\n", "    ", "if", "(", "key", "==", "'epoch'", ")", ":", "\n", "      ", "continue", "# epoch is x axis for all plots", "\n", "", "plt", ".", "figure", "(", ")", "\n", "y", "=", "np", ".", "array", "(", "convg", "[", "key", "]", ")", "\n", "plt", ".", "semilogy", "(", "x", ",", "y", ",", "label", "=", "str", "(", "key", ")", ")", "\n", "plt", ".", "xlabel", "(", "'Iterations'", ")", "\n", "plt", ".", "ylabel", "(", "str", "(", "key", ")", ")", "\n", "plt", ".", "grid", "(", "'True'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.FE_templates.getKMatrixGridMeshTemplates": [[4, 127], ["jax.reshape", "jax.reshape", "jax.reshape", "jax.reshape", "jax.reshape", "jax.reshape", "jnp.reshape."], "function", ["None"], ["def", "getKMatrixGridMeshTemplates", "(", "elemSize", ",", "physics", ")", ":", "\n", "  ", "dx", ",", "dy", "=", "elemSize", "[", "0", "]", ",", "elemSize", "[", "1", "]", "\n", "#-----------------------#", "\n", "if", "(", "physics", "==", "'structural'", "or", "physics", "==", "'compliantMechanism'", ")", ":", "\n", "#-----------------------#", "\n", "    ", "def", "Knn_00", "(", "dx", ",", "dy", ")", ":", "\n", "      ", "t2", "=", "1.0", "/", "dx", "\n", "t3", "=", "dy", "*", "t2", "*", "(", "1.0", "/", "3.0", ")", "\n", "t4", "=", "dy", "*", "t2", "*", "(", "1.0", "/", "6.0", ")", "\n", "Knn_00", "=", "jnp", ".", "reshape", "(", "jnp", ".", "array", "(", "[", "t3", ",", "0", ",", "-", "t3", ",", "0", ",", "-", "t4", ",", "0", ",", "t4", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "-", "t3", ",", "0", ",", "t3", ",", "0", ",", "t4", ",", "0", ",", "-", "t4", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "dy", "*", "t2", "*", "(", "-", "1.0", "/", "6.0", ")", ",", "0", ",", "t4", ",", "0", ",", "t3", ",", "0", ",", "-", "t3", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "t4", ",", "0", ",", "-", "t4", ",", "0", ",", "-", "t3", ",", "0", ",", "t3", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ")", ",", "(", "8", ",", "8", ")", ")", "\n", "return", "Knn_00", "\n", "#-----------------------#", "\n", "", "def", "Knn_11", "(", "dx", ",", "dy", ")", ":", "\n", "      ", "t2", "=", "1.0", "/", "dy", "\n", "t3", "=", "dx", "*", "t2", "*", "(", "1.0", "/", "6.0", ")", "\n", "t4", "=", "dx", "*", "t2", "*", "(", "1.0", "/", "3.0", ")", "\n", "Knn_11", "=", "jnp", ".", "reshape", "(", "jnp", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "t4", ",", "0.0", ",", "t3", ",", "0.0", ",", "-", "t3", ",", "0.0", ",", "-", "t4", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "t3", ",", "0.0", ",", "t4", ",", "0.0", ",", "-", "t4", ",", "0.0", ",", "-", "t3", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "-", "t3", ",", "0.0", ",", "-", "t4", ",", "0.0", ",", "t4", ",", "0.0", ",", "t3", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "-", "t4", ",", "0.0", ",", "-", "t3", ",", "0.0", ",", "t3", ",", "0.0", ",", "t4", "]", ")", ",", "(", "8", ",", "8", ")", ")", "\n", "return", "Knn_11", "\n", "#-----------------------#", "\n", "", "def", "Knn_22", "(", "dx", ",", "dy", ")", ":", "\n", "      ", "t2", "=", "1.0", "/", "dy", "\n", "t3", "=", "dx", "*", "t2", "*", "(", "1.0", "/", "6.0", ")", "\n", "t4", "=", "dx", "*", "t2", "*", "(", "1.0", "/", "3.0", ")", "\n", "t5", "=", "1.0", "/", "dx", "\n", "t6", "=", "dy", "*", "t5", "*", "(", "1.0", "/", "3.0", ")", "\n", "t7", "=", "dy", "*", "t5", "*", "(", "1.0", "/", "6.0", ")", "\n", "Knn_22", "=", "jnp", ".", "reshape", "(", "jnp", ".", "array", "(", "[", "t4", ",", "1.0", "/", "4.0", ",", "t3", ",", "-", "1.0", "/", "4.0", ",", "-", "t3", ",", "-", "1.0", "/", "4.0", ",", "-", "t4", ",", "1.0", "/", "4.0", ",", "1.0", "/", "4.0", ",", "t6", ",", "1.0", "/", "4.0", ",", "-", "t6", ",", "-", "1.0", "/", "4.0", ",", "-", "t7", ",", "-", "1.0", "/", "4.0", ",", "t7", ",", "t3", ",", "1.0", "/", "4.0", ",", "t4", ",", "-", "1.0", "/", "4.0", ",", "-", "t4", ",", "-", "1.0", "/", "4.0", ",", "-", "t3", ",", "1.0", "/", "4.0", ",", "-", "1.0", "/", "4.0", ",", "-", "t6", ",", "-", "1.0", "/", "4.0", ",", "t6", ",", "1.0", "/", "4.0", ",", "t7", ",", "1.0", "/", "4.0", ",", "-", "t7", ",", "-", "t3", ",", "-", "1.0", "/", "4.0", ",", "-", "t4", ",", "1.0", "/", "4.0", ",", "t4", ",", "1.0", "/", "4.0", ",", "t3", ",", "-", "1.0", "/", "4.0", ",", "-", "1.0", "/", "4.0", ",", "dy", "*", "t5", "*", "(", "-", "1.0", "/", "6.0", ")", ",", "-", "1.0", "/", "4.0", ",", "t7", ",", "1.0", "/", "4.0", ",", "t6", ",", "1.0", "/", "4.0", ",", "-", "t6", ",", "-", "t4", ",", "-", "1.0", "/", "4.0", ",", "-", "t3", ",", "1.0", "/", "4.0", ",", "t3", ",", "1.0", "/", "4.0", ",", "t4", ",", "-", "1.0", "/", "4.0", ",", "1.0", "/", "4.0", ",", "t7", ",", "1.0", "/", "4.0", ",", "-", "t7", ",", "-", "1.0", "/", "4.0", ",", "-", "t6", ",", "-", "1.0", "/", "4.0", ",", "t6", "]", ")", ",", "(", "8", ",", "8", ")", ")", "\n", "return", "Knn_22", "\n", "#-----------------------#", "\n", "", "def", "Knn_01", "(", "dx", ",", "dy", ")", ":", "\n", "      ", "Knn_01", "=", "jnp", ".", "reshape", "(", "jnp", ".", "array", "(", "[", "0.0", ",", "1.0", "/", "4.0", ",", "0.0", ",", "1.0", "/", "4.0", ",", "0.0", ",", "-", "1.0", "/", "4.0", ",", "0.0", ",", "-", "1.0", "/", "4.0", ",", "1.0", "/", "4.0", ",", "0.0", ",", "-", "1.0", "/", "4.0", ",", "0.0", ",", "-", "1.0", "/", "4.0", ",", "0.0", ",", "1.0", "/", "4.0", ",", "0.0", ",", "0.0", ",", "-", "1.0", "/", "4.0", ",", "0.0", ",", "-", "1.0", "/", "4.0", ",", "0.0", ",", "1.0", "/", "4.0", ",", "0.0", ",", "1.0", "/", "4.0", ",", "1.0", "/", "4.0", ",", "0.0", ",", "-", "1.0", "/", "4.0", ",", "0.0", ",", "-", "1.0", "/", "4.0", ",", "0.0", ",", "1.0", "/", "4.0", ",", "0.0", ",", "0.0", ",", "-", "1.0", "/", "4.0", ",", "0.0", ",", "-", "1.0", "/", "4.0", ",", "0.0", ",", "1.0", "/", "4.0", ",", "0.0", ",", "1.0", "/", "4.0", ",", "-", "1.0", "/", "4.0", ",", "0.0", ",", "1.0", "/", "4.0", ",", "0.0", ",", "1.0", "/", "4.0", ",", "0.0", ",", "-", "1.0", "/", "4.0", ",", "0.0", ",", "0.0", ",", "1.0", "/", "4.0", ",", "0.0", ",", "1.0", "/", "4.0", ",", "0.0", ",", "-", "1.0", "/", "4.0", ",", "0.0", ",", "-", "1.0", "/", "4.0", ",", "-", "1.0", "/", "4.0", ",", "0.0", ",", "1.0", "/", "4.0", ",", "0.0", ",", "1.0", "/", "4.0", ",", "0.0", ",", "-", "1.0", "/", "4.0", ",", "0.0", "]", ")", ",", "(", "8", ",", "8", ")", ")", "\n", "return", "Knn_01", "\n", "#-----------------------#", "\n", "", "def", "Knn_02", "(", "dx", ",", "dy", ")", ":", "\n", "      ", "t2", "=", "1.0", "/", "dx", "\n", "t3", "=", "dy", "*", "t2", "*", "(", "1.0", "/", "3.0", ")", "\n", "t4", "=", "dy", "*", "t2", "*", "(", "1.0", "/", "6.0", ")", "\n", "Knn_02", "=", "jnp", ".", "reshape", "(", "jnp", ".", "array", "(", "[", "1.0", "/", "2.0", ",", "t3", ",", "0.0", ",", "-", "t3", ",", "-", "1.0", "/", "2.0", ",", "-", "t4", ",", "0.0", ",", "t4", ",", "t3", ",", "0.0", ",", "-", "t3", ",", "0.0", ",", "-", "t4", ",", "0.0", ",", "t4", ",", "0.0", ",", "0.0", ",", "-", "t3", ",", "-", "1.0", "/", "2.0", ",", "t3", ",", "0.0", ",", "t4", ",", "1.0", "/", "2.0", ",", "-", "t4", ",", "-", "t3", ",", "0.0", ",", "t3", ",", "0.0", ",", "t4", ",", "0.0", ",", "-", "t4", ",", "0.0", ",", "-", "1.0", "/", "2.0", ",", "-", "t4", ",", "0.0", ",", "t4", ",", "1.0", "/", "2.0", ",", "t3", ",", "0.0", ",", "-", "t3", ",", "dy", "*", "t2", "*", "(", "-", "1.0", "/", "6.0", ")", ",", "0.0", ",", "t4", ",", "0.0", ",", "t3", ",", "0.0", ",", "-", "t3", ",", "0.0", ",", "0.0", ",", "t4", ",", "1.0", "/", "2.0", ",", "-", "t4", ",", "0.0", ",", "-", "t3", ",", "-", "1.0", "/", "2.0", ",", "t3", ",", "t4", ",", "0.0", ",", "-", "t4", ",", "0.0", ",", "-", "t3", ",", "0.0", ",", "t3", ",", "0.0", "]", ")", ",", "(", "8", ",", "8", ")", ")", "\n", "return", "Knn_02", "\n", "#-----------------------#", "\n", "", "def", "Knn_12", "(", "dx", ",", "dy", ")", ":", "\n", "      ", "t2", "=", "1.0", "/", "dy", "\n", "t3", "=", "dx", "*", "t2", "*", "(", "1.0", "/", "6.0", ")", "\n", "t4", "=", "dx", "*", "t2", "*", "(", "1.0", "/", "3.0", ")", "\n", "Knn_12", "=", "jnp", ".", "reshape", "(", "jnp", ".", "array", "(", "[", "0.0", ",", "t4", ",", "0.0", ",", "t3", ",", "0.0", ",", "-", "t3", ",", "0.0", ",", "-", "t4", ",", "t4", ",", "1.0", "/", "2.0", ",", "t3", ",", "0.0", ",", "-", "t3", ",", "-", "1.0", "/", "2.0", ",", "-", "t4", ",", "0.0", ",", "0.0", ",", "t3", ",", "0.0", ",", "t4", ",", "0.0", ",", "-", "t4", ",", "0.0", ",", "-", "t3", ",", "t3", ",", "0.0", ",", "t4", ",", "-", "1.0", "/", "2.0", ",", "-", "t4", ",", "0.0", ",", "-", "t3", ",", "1.0", "/", "2.0", ",", "0.0", ",", "-", "t3", ",", "0.0", ",", "-", "t4", ",", "0.0", ",", "t4", ",", "0.0", ",", "t3", ",", "-", "t3", ",", "-", "1.0", "/", "2.0", ",", "-", "t4", ",", "0.0", ",", "t4", ",", "1.0", "/", "2.0", ",", "t3", ",", "0.0", ",", "0.0", ",", "-", "t4", ",", "0.0", ",", "-", "t3", ",", "0.0", ",", "t3", ",", "0.0", ",", "t4", ",", "-", "t4", ",", "0.0", ",", "-", "t3", ",", "1.0", "/", "2.0", ",", "t3", ",", "0.0", ",", "t4", ",", "-", "1.0", "/", "2.0", "]", ")", ",", "(", "8", ",", "8", ")", ")", "\n", "return", "Knn_12", "\n", "#-----------------------#", "\n", "", "K_templates", "=", "{", "'00'", ":", "Knn_00", "(", "dx", ",", "dy", ")", ",", "'11'", ":", "Knn_11", "(", "dx", ",", "dy", ")", ",", "'22'", ":", "Knn_22", "(", "dx", ",", "dy", ")", ",", "'01'", ":", "Knn_01", "(", "dx", ",", "dy", ")", ",", "'02'", ":", "Knn_02", "(", "dx", ",", "dy", ")", ",", "'12'", ":", "Knn_12", "(", "dx", ",", "dy", ")", ",", "}", "\n", "", "elif", "(", "physics", "==", "'thermal'", ")", ":", "\n", "#-----------------------#", "\n", "    ", "def", "Knn_00", "(", "dx", ",", "dy", ")", ":", "\n", "      ", "t2", "=", "1.0", "/", "dx", "\n", "t3", "=", "(", "dy", "*", "t2", ")", "/", "3.0", "\n", "t4", "=", "(", "dy", "*", "t2", ")", "/", "6.0", "\n", "t5", "=", "-", "t3", "\n", "t6", "=", "-", "t4", "\n", "Knn_00", "=", "jnp", ".", "reshape", "(", "jnp", ".", "array", "(", "[", "t3", ",", "t5", ",", "t6", ",", "t4", ",", "t5", ",", "t3", ",", "t4", ",", "t6", ",", "t6", ",", "t4", ",", "t3", ",", "t5", ",", "t4", ",", "t6", ",", "t5", ",", "t3", "]", ")", ",", "(", "4", ",", "4", ")", ")", "\n", "return", "Knn_00", "\n", "#-----------------------#", "\n", "", "def", "Knn_11", "(", "dx", ",", "dy", ")", ":", "\n", "      ", "t2", "=", "1.0", "/", "dy", "\n", "t3", "=", "(", "dx", "*", "t2", ")", "/", "3.0", "\n", "t4", "=", "(", "dx", "*", "t2", ")", "/", "6.0", "\n", "t5", "=", "-", "t3", "\n", "t6", "=", "-", "t4", "\n", "Knn_11", "=", "jnp", ".", "reshape", "(", "jnp", ".", "array", "(", "[", "t3", ",", "t4", ",", "t6", ",", "t5", ",", "t4", ",", "t3", ",", "t5", ",", "t6", ",", "t6", ",", "t5", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", "t4", ",", "t3", "]", ")", ",", "(", "4", ",", "4", ")", ")", "\n", "return", "Knn_11", "\n", "#-----------------------#", "\n", "", "def", "Knn_01", "(", "dx", ",", "dy", ")", ":", "\n", "      ", "Knn_01", "=", "jnp", ".", "reshape", "(", "jnp", ".", "array", "(", "[", "1.0", "/", "2.0", ",", "0.0", ",", "-", "1.0", "/", "2.0", ",", "0.0", ",", "0.0", ",", "-", "1.0", "/", "2.0", ",", "0.0", ",", "1.0", "/", "2.0", ",", "-", "1.0", "/", "2.0", ",", "0.0", ",", "1.0", "/", "2.0", ",", "0.0", ",", "0.0", ",", "1.0", "/", "2.0", ",", "0.0", ",", "-", "1.0", "/", "2.0", "]", ")", ",", "(", "4", ",", "4", ")", ")", "\n", "return", "Knn_01", "\n", "#-----------------------#", "\n", "\n", "", "K_templates", "=", "{", "'00'", ":", "Knn_00", "(", "dx", ",", "dy", ")", ",", "'11'", ":", "Knn_11", "(", "dx", ",", "dy", ")", ",", "'01'", ":", "Knn_01", "(", "dx", ",", "dy", ")", "}", "\n", "\n", "", "return", "K_templates", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.network.TopNet.__init__": [[18, 23], ["network.TopNet.makeNetwork", "jax.jit", "jax.jit", "init_fn", "applyNN"], "methods", ["home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.network.TopNet.makeNetwork"], ["  ", "def", "__init__", "(", "self", ",", "nnSettings", ")", ":", "\n", "    ", "self", ".", "nnSettings", "=", "nnSettings", "\n", "init_fn", ",", "applyNN", "=", "self", ".", "makeNetwork", "(", "nnSettings", ")", "\n", "self", ".", "fwdNN", "=", "jit", "(", "lambda", "nnwts", ",", "x", ":", "applyNN", "(", "nnwts", ",", "x", ")", ")", "\n", "_", ",", "self", ".", "wts", "=", "init_fn", "(", "rand_key", ",", "(", "-", "1", ",", "nnSettings", "[", "'inputDim'", "]", ")", ")", "\n", "#-----------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.network.TopNet.makeNetwork": [[24, 32], ["range", "layers.append", "jax.experimental.stax.serial", "jax.experimental.stax.serial", "layers.append", "layers.append", "jax.experimental.stax.Dense", "jax.experimental.stax.Dense", "jax.experimental.stax.Dense", "jax.experimental.stax.Dense"], "methods", ["None"], ["", "def", "makeNetwork", "(", "self", ",", "nnSettings", ")", ":", "\n", "# JAX network definition", "\n", "    ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nnSettings", "[", "'numLayers'", "]", "-", "1", ")", ":", "\n", "      ", "layers", ".", "append", "(", "stax", ".", "Dense", "(", "nnSettings", "[", "'numNeuronsPerLayer'", "]", ")", ")", "\n", "layers", ".", "append", "(", "Swish", ")", "#(stax.LeakyRelu)", "\n", "", "layers", ".", "append", "(", "stax", ".", "Dense", "(", "nnSettings", "[", "'outputDim'", "]", ")", ")", "\n", "return", "stax", ".", "serial", "(", "*", "layers", ")", "\n", "#-----------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.network.TopNet.forward": [[33, 39], ["network.TopNet.fwdNN", "jax.softmax", "jax.softmax", "jax.sigmoid().reshape", "jax.sigmoid().reshape", "jax.sigmoid", "jax.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "wts", ",", "x", ")", ":", "\n", "    ", "self", ".", "wts", "=", "wts", "\n", "nnOut", "=", "self", ".", "fwdNN", "(", "wts", ",", "x", ")", "\n", "mstrType", "=", "nn", ".", "softmax", "(", "nnOut", "[", ":", ",", "0", ":", "-", "1", "]", ")", "\n", "rho", "=", "nn", ".", "sigmoid", "(", "nnOut", "[", ":", ",", "-", "1", "]", ")", ".", "reshape", "(", "-", "1", ")", "\n", "return", "mstrType", ",", "rho", "\n", "#-----------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.network.elementwise": [[10, 15], ["jax.nn.swish"], "function", ["None"], ["def", "elementwise", "(", "fun", ",", "**", "fun_kwargs", ")", ":", "\n", "    ", "\"\"\"Layer that applies a scalar function elementwise on its inputs.\"\"\"", "\n", "init_fun", "=", "lambda", "rng", ",", "input_shape", ":", "(", "input_shape", ",", "(", ")", ")", "\n", "apply_fun", "=", "lambda", "params", ",", "inputs", ",", "**", "kwargs", ":", "fun", "(", "inputs", ",", "**", "fun_kwargs", ")", "\n", "return", "init_fun", ",", "apply_fun", "\n", "", "Swish", "=", "elementwise", "(", "nn", ".", "swish", ")", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.materialCoeffs.plotInterpolateCoeffs": [[89, 109], ["numpy.linspace", "matplotlib.figure", "enumerate", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.show", "numpy.zeros", "range", "matplotlib.plot", "str"], "function", ["None"], ["def", "plotInterpolateCoeffs", "(", ")", ":", "\n", "  ", "numPts", "=", "100", "\n", "v", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "numPts", ")", "\n", "# Cmatrix", "\n", "components", "=", "[", "'00'", ",", "'22'", ",", "'01'", "]", "\n", "C", "=", "{", "}", "\n", "for", "c", "in", "components", ":", "\n", "    ", "C", "[", "c", "]", "=", "np", ".", "zeros", "(", "(", "numPts", ")", ")", "\n", "for", "pw", "in", "range", "(", "5", ")", ":", "\n", "      ", "C", "[", "c", "]", "+=", "microStrs", "[", "'x'", "]", "[", "c", "]", "[", "str", "(", "pw", ")", "]", "*", "(", "v", "**", "pw", ")", "\n", "", "", "plt", ".", "figure", "(", ")", "\n", "clrs", "=", "[", "'red'", ",", "'black'", ",", "'blue'", ",", "'green'", ",", "'pink'", "]", "\n", "mrkrs", "=", "[", "'o'", ",", "'s'", ",", "'d'", ",", "'h'", ",", "'*'", "]", "\n", "stls", "=", "[", "':'", ",", "'--'", ",", "'-'", ",", "'-.'", ",", "'-'", "]", "\n", "for", "ctr", ",", "c", "in", "enumerate", "(", "components", ")", ":", "\n", "    ", "plt", ".", "plot", "(", "v", ",", "C", "[", "c", "]", ",", "color", "=", "clrs", "[", "ctr", "]", ",", "linestyle", "=", "stls", "[", "ctr", "]", ",", "marker", "=", "mrkrs", "[", "ctr", "]", ",", "markevery", "=", "20", ",", "label", "=", "f'$C{c}$'", ")", "\n", "", "plt", ".", "xlabel", "(", "'v'", ")", "\n", "plt", ".", "ylabel", "(", "'C'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.TOuNN.TOuNN.__init__": [[16, 32], ["FE_Solver.JAXSolver", "network.TopNet"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "exampleName", ",", "mesh", ",", "material", ",", "nnSettings", ",", "symMap", ",", "fourierMap", ",", "rotationalSymmetry", ",", "extrusion", ")", ":", "\n", "    ", "self", ".", "exampleName", "=", "exampleName", "\n", "self", ".", "FE", "=", "JAXSolver", "(", "mesh", ",", "material", ")", "\n", "self", ".", "xy", "=", "self", ".", "FE", ".", "mesh", ".", "elemCenters", "\n", "self", ".", "fourierMap", "=", "fourierMap", "\n", "if", "(", "fourierMap", "[", "'isOn'", "]", ")", ":", "\n", "      ", "nnSettings", "[", "'inputDim'", "]", "=", "2", "*", "fourierMap", "[", "'numTerms'", "]", "\n", "", "else", ":", "\n", "      ", "nnSettings", "[", "'inputDim'", "]", "=", "self", ".", "FE", ".", "mesh", ".", "ndim", "\n", "", "self", ".", "topNet", "=", "TopNet", "(", "nnSettings", ")", "\n", "\n", "self", ".", "symMap", "=", "symMap", "\n", "self", ".", "mstrData", "=", "microStrs", "\n", "self", ".", "rotationalSymmetry", "=", "rotationalSymmetry", "\n", "self", ".", "extrusion", "=", "extrusion", "\n", "#-----------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.TOuNN.TOuNN.optimizeDesign": [[34, 156], ["projections.applySymmetry", "projections.applyExtrusion", "projections.applyRotationalSymmetry", "jax.experimental.optimizers.adam", "jax.experimental.optimizers.adam", "opt_init", "jax.jit", "jax.jit", "TOuNN.TOuNN.topNet.forward", "TOuNN.TOuNN.optimizeDesign.getCMatrix"], "methods", ["home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.projections.applySymmetry", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.projections.applyExtrusion", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.projections.applyRotationalSymmetry", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.network.TopNet.forward"], ["", "def", "optimizeDesign", "(", "self", ",", "optParams", ",", "savedNet", ")", ":", "\n", "    ", "convgHistory", "=", "{", "'epoch'", ":", "[", "]", ",", "'vf'", ":", "[", "]", ",", "'J'", ":", "[", "]", "}", "\n", "xyS", "=", "applySymmetry", "(", "self", ".", "xy", ",", "self", ".", "symMap", ")", "\n", "xyE", "=", "applyExtrusion", "(", "xyS", ",", "self", ".", "extrusion", ")", "\n", "xyR", "=", "applyRotationalSymmetry", "(", "xyE", ",", "self", ".", "rotationalSymmetry", ")", "\n", "if", "(", "self", ".", "fourierMap", "[", "'isOn'", "]", ")", ":", "\n", "      ", "xyF", "=", "applyFourierMap", "(", "xyR", ",", "self", ".", "fourierMap", ")", "\n", "", "else", ":", "\n", "      ", "xyF", "=", "xyR", "\n", "", "penal", "=", "1", "\n", "\n", "# C Matrix", "\n", "components", "=", "[", "'00'", ",", "'11'", ",", "'22'", ",", "'01'", ",", "'02'", ",", "'12'", "]", "\n", "def", "getCfromCPolynomial", "(", "vfracPow", ",", "mstr", ")", ":", "\n", "      ", "C", "=", "{", "}", "\n", "for", "c", "in", "components", ":", "\n", "        ", "C", "[", "c", "]", "=", "jnp", ".", "zeros", "(", "(", "self", ".", "FE", ".", "mesh", ".", "numElems", ")", ")", "\n", "", "for", "c", "in", "components", ":", "\n", "        ", "for", "pw", "in", "range", "(", "mstr", "[", "'order'", "]", "+", "1", ")", ":", "\n", "            ", "C", "[", "c", "]", "=", "C", "[", "c", "]", ".", "at", "[", ":", "]", ".", "add", "(", "mstr", "[", "c", "]", "[", "str", "(", "pw", ")", "]", "*", "vfracPow", "[", "str", "(", "pw", ")", "]", ")", "\n", "", "", "return", "C", "#{dict with 6 keys each of size numElems}", "\n", "\n", "", "def", "getCfromEigenPolynomial", "(", "vfracPow", ",", "mstr", ")", ":", "\n", "\n", "      ", "lmda", "=", "jnp", ".", "zeros", "(", "(", "self", ".", "FE", ".", "mesh", ".", "numElems", ",", "3", ",", "3", ")", ")", "\n", "for", "lmdIdx", "in", "range", "(", "3", ")", ":", "# 3 eigen values", "\n", "        ", "lamStr", "=", "'lambda'", "+", "str", "(", "lmdIdx", "+", "1", ")", "\n", "for", "pw", "in", "range", "(", "mstr", "[", "'order'", "]", "+", "1", ")", ":", "\n", "          ", "lmda", "=", "lmda", ".", "at", "[", ":", ",", "lmdIdx", ",", "lmdIdx", "]", ".", "add", "(", "mstr", "[", "lamStr", "]", "[", "str", "(", "pw", ")", "]", "*", "vfracPow", "[", "str", "(", "pw", ")", "]", ")", "\n", "", "", "VL", "=", "jnp", ".", "einsum", "(", "'ij,ejk->eik'", ",", "mstr", "[", "'eVec'", "]", ",", "lmda", ")", "\n", "VLVt", "=", "jnp", ".", "einsum", "(", "'eij,jk->eik'", ",", "VL", ",", "mstr", "[", "'eVec'", "]", ".", "T", ")", "\n", "\n", "C", "=", "{", "'00'", ":", "VLVt", "[", ":", ",", "0", ",", "0", "]", ",", "'11'", ":", "VLVt", "[", ":", ",", "1", ",", "1", "]", ",", "'22'", ":", "VLVt", "[", ":", ",", "2", ",", "2", "]", ",", "'01'", ":", "VLVt", "[", ":", ",", "0", ",", "1", "]", ",", "'02'", ":", "VLVt", "[", ":", ",", "0", ",", "2", "]", ",", "'12'", ":", "VLVt", "[", ":", ",", "1", ",", "2", "]", "}", "\n", "return", "C", "\n", "", "@", "jit", "\n", "def", "getCMatrix", "(", "mstrType", ",", "nn_rho", ")", ":", "\n", "      ", "vfracPow", "=", "{", "}", "# compute the powers once to avoid repeated calc", "\n", "for", "pw", "in", "range", "(", "self", ".", "mstrData", "[", "'square'", "]", "[", "'order'", "]", "+", "1", ")", ":", "# TODO: use the max order of all mstrs", "\n", "        ", "vfracPow", "[", "str", "(", "pw", ")", "]", "=", "nn_rho", "**", "pw", "\n", "", "C", "=", "{", "}", "\n", "for", "c", "in", "components", ":", "\n", "        ", "C", "[", "c", "]", "=", "jnp", ".", "zeros", "(", "(", "self", ".", "FE", ".", "mesh", ".", "numElems", ")", ")", "\n", "\n", "", "for", "mstrCtr", ",", "mstr", "in", "enumerate", "(", "self", ".", "mstrData", ")", ":", "# mstrsEig # mstrs", "\n", "        ", "if", "(", "self", ".", "mstrData", "[", "mstr", "]", "[", "'type'", "]", "==", "'eig'", ")", ":", "\n", "          ", "Cmstr", "=", "getCfromEigenPolynomial", "(", "vfracPow", ",", "self", ".", "mstrData", "[", "mstr", "]", ")", "\n", "", "else", ":", "\n", "          ", "Cmstr", "=", "getCfromCPolynomial", "(", "vfracPow", ",", "self", ".", "mstrData", "[", "mstr", "]", ")", "\n", "", "mstrPenal", "=", "mstrType", "[", ":", ",", "mstrCtr", "]", "**", "penal", "\n", "for", "c", "in", "components", ":", "\n", "          ", "C", "[", "c", "]", "=", "C", "[", "c", "]", ".", "at", "[", ":", "]", ".", "add", "(", "jnp", ".", "einsum", "(", "'i,i->i'", ",", "mstrPenal", ",", "Cmstr", "[", "c", "]", ")", ")", "\n", "\n", "", "", "return", "C", "\n", "\n", "# optimizer", "\n", "", "opt_init", ",", "opt_update", ",", "get_params", "=", "optimizers", ".", "adam", "(", "optParams", "[", "'learningRate'", "]", ")", "\n", "opt_state", "=", "opt_init", "(", "self", ".", "topNet", ".", "wts", ")", "\n", "opt_update", "=", "jit", "(", "opt_update", ")", "\n", "\n", "if", "(", "savedNet", "[", "'isAvailable'", "]", ")", ":", "\n", "      ", "saved_params", "=", "pickle", ".", "load", "(", "open", "(", "savedNet", "[", "'file'", "]", ",", "\"rb\"", ")", ")", "\n", "opt_state", "=", "optimizers", ".", "pack_optimizer_state", "(", "saved_params", ")", "\n", "\n", "# fwd once to get J0-scaling param", "\n", "", "mstrType", ",", "density0", "=", "self", ".", "topNet", ".", "forward", "(", "get_params", "(", "opt_state", ")", ",", "xyF", ")", "\n", "C", "=", "getCMatrix", "(", "mstrType", ",", "0.01", "+", "density0", ")", "\n", "J0", "=", "self", ".", "FE", ".", "objectiveHandle", "(", "C", ")", "\n", "\n", "# - jitting this causes undefined behavior", "\n", "def", "computeLoss", "(", "objective", ",", "constraints", ")", ":", "\n", "      ", "if", "(", "optParams", "[", "'lossMethod'", "]", "[", "'type'", "]", "==", "'penalty'", ")", ":", "\n", "        ", "alpha", "=", "optParams", "[", "'lossMethod'", "]", "[", "'alpha0'", "]", "+", "self", ".", "epoch", "*", "optParams", "[", "'lossMethod'", "]", "[", "'delAlpha'", "]", "# penalty method", "\n", "loss", "=", "objective", "\n", "for", "c", "in", "constraints", ":", "\n", "          ", "loss", "+=", "alpha", "*", "c", "**", "2", "\n", "", "", "if", "(", "optParams", "[", "'lossMethod'", "]", "[", "'type'", "]", "==", "'logBarrier'", ")", ":", "\n", "        ", "t", "=", "optParams", "[", "'lossMethod'", "]", "[", "'t0'", "]", "*", "optParams", "[", "'lossMethod'", "]", "[", "'mu'", "]", "**", "self", ".", "epoch", "\n", "loss", "=", "objective", "\n", "for", "c", "in", "constraints", ":", "\n", "          ", "if", "(", "c", "<", "(", "-", "1", "/", "t", "**", "2", ")", ")", ":", "\n", "            ", "psi", "=", "-", "jnp", ".", "log", "(", "-", "c", ")", "/", "t", "\n", "", "else", ":", "\n", "            ", "psi", "=", "t", "*", "c", "-", "jnp", ".", "log", "(", "1", "/", "t", "**", "2", ")", "/", "t", "+", "1", "/", "t", "\n", "", "loss", "+=", "psi", "\n", "", "", "return", "loss", "\n", "\n", "# closure function - jitting this causes undefined behavior", "\n", "", "def", "closure", "(", "nnwts", ")", ":", "\n", "      ", "mstrType", ",", "density", "=", "self", ".", "topNet", ".", "forward", "(", "nnwts", ",", "xyF", ")", "\n", "volCons", "=", "(", "jnp", ".", "mean", "(", "density", ")", "/", "optParams", "[", "'desiredVolumeFraction'", "]", ")", "-", "1.", "\n", "C", "=", "getCMatrix", "(", "mstrType", ",", "0.01", "+", "density", ")", "\n", "J", "=", "self", ".", "FE", ".", "objectiveHandle", "(", "C", ")", "\n", "return", "computeLoss", "(", "J", "/", "J0", ",", "[", "volCons", "]", ")", "\n", "\n", "# optimization loop", "\n", "", "for", "self", ".", "epoch", "in", "range", "(", "optParams", "[", "'maxEpochs'", "]", ")", ":", "\n", "      ", "penal", "=", "min", "(", "8.0", ",", "1.", "+", "self", ".", "epoch", "*", "0.02", ")", "\n", "opt_state", "=", "opt_update", "(", "self", ".", "epoch", ",", "optimizers", ".", "clip_grads", "(", "jax", ".", "grad", "(", "closure", ")", "(", "get_params", "(", "opt_state", ")", ")", ",", "1.", ")", ",", "opt_state", ")", "\n", "\n", "if", "(", "self", ".", "epoch", "%", "10", "==", "0", ")", ":", "\n", "        ", "convgHistory", "[", "'epoch'", "]", ".", "append", "(", "self", ".", "epoch", ")", "\n", "mstrType", ",", "density", "=", "self", ".", "topNet", ".", "forward", "(", "get_params", "(", "opt_state", ")", ",", "xyF", ")", "\n", "C", "=", "getCMatrix", "(", "mstrType", ",", "0.01", "+", "density", ")", "# getCfromCPolynomial", "\n", "J", "=", "self", ".", "FE", ".", "objectiveHandle", "(", "C", ")", "\n", "convgHistory", "[", "'J'", "]", ".", "append", "(", "J", ")", "\n", "volf", "=", "jnp", ".", "mean", "(", "density", ")", "\n", "convgHistory", "[", "'vf'", "]", ".", "append", "(", "volf", ")", "\n", "if", "(", "self", ".", "epoch", "==", "10", ")", ":", "\n", "          ", "J0", "=", "J", "\n", "", "status", "=", "'epoch \\t {:d} \\t J \\t {:.2E} \\t vf \\t {:.2F}'", ".", "format", "(", "self", ".", "epoch", ",", "J", ",", "volf", ")", "\n", "print", "(", "status", ")", "\n", "if", "(", "self", ".", "epoch", "%", "30", "==", "0", ")", ":", "\n", "          ", "self", ".", "FE", ".", "mesh", ".", "plotFieldOnMesh", "(", "density", ",", "status", ")", "\n", "", "", "", "if", "(", "savedNet", "[", "'isDump'", "]", ")", ":", "\n", "      ", "trained_params", "=", "optimizers", ".", "unpack_optimizer_state", "(", "opt_state", ")", "\n", "pickle", ".", "dump", "(", "trained_params", ",", "open", "(", "savedNet", "[", "'file'", "]", ",", "\"wb\"", ")", ")", "\n", "", "return", "convgHistory", "\n", "#-----------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.TOuNN.TOuNN.plotCompositeTopology": [[157, 216], ["TOuNN.TOuNN.FE.mesh.generatePoints", "projections.applySymmetry", "projections.applyExtrusion", "projections.applyRotationalSymmetry", "TOuNN.TOuNN.topNet.forward", "numpy.load", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "matplotlib.figure", "matplotlib.imshow", "matplotlib.show", "matplotlib.savefig", "matplotlib.figure", "matplotlib.imshow", "matplotlib.show", "matplotlib.figure", "matplotlib.imshow", "matplotlib.show", "projections.applyFourierMap", "int", "int", "int", "int", "int", "numpy.ceil", "numpy.ceil", "numpy.ones", "min", "numpy.argmax", "matplotlib.colors.ListedColormap", "matplotlib.colors.ListedColormap", "int", "numpy.argmax"], "methods", ["home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.Mesher.UnstructuredMesher.generatePoints", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.projections.applySymmetry", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.projections.applyExtrusion", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.projections.applyRotationalSymmetry", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.network.TopNet.forward", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.projections.applyFourierMap"], ["", "def", "plotCompositeTopology", "(", "self", ",", "res", ")", ":", "\n", "    ", "xy", "=", "self", ".", "FE", ".", "mesh", ".", "generatePoints", "(", "res", ")", "\n", "xyS", "=", "applySymmetry", "(", "xy", ",", "self", ".", "symMap", ")", "\n", "xyE", "=", "applyExtrusion", "(", "xyS", ",", "self", ".", "extrusion", ")", "\n", "xyR", "=", "applyRotationalSymmetry", "(", "xyE", ",", "self", ".", "rotationalSymmetry", ")", "\n", "if", "(", "self", ".", "fourierMap", "[", "'isOn'", "]", ")", ":", "\n", "      ", "xyF", "=", "applyFourierMap", "(", "xyR", ",", "self", ".", "fourierMap", ")", "\n", "", "else", ":", "\n", "      ", "xyF", "=", "xyR", "\n", "", "mstrType", ",", "density", "=", "self", ".", "topNet", ".", "forward", "(", "self", ".", "topNet", ".", "wts", ",", "xyF", ")", "\n", "\n", "fillColors", "=", "[", "'white'", ",", "(", "1", ",", "0", ",", "0", ")", ",", "(", "0", ",", "1", ",", "0", ")", ",", "(", "0", ",", "0", ",", "1", ")", ",", "(", "0", ",", "0", ",", "0", ")", ",", "(", "0", ",", "1", ",", "1", ")", ",", "(", "1", ",", "0", ",", "1", ")", ",", "(", "0.5", ",", "0", ",", "0.5", ")", ",", "(", "1", ",", "0.55", ",", "0", ")", ",", "(", "0", ",", "0.5", ",", "0.5", ")", ",", "(", "0", ",", "0", ",", "0.5", ")", ",", "(", "0", ",", "0.5", ",", "0", ")", ",", "(", "0.5", ",", "0", ",", "0", ")", ",", "(", "0.5", ",", "0.5", ",", "0", ")", "]", "\n", "microstrImages", "=", "np", ".", "load", "(", "'./microStrImages.npy'", ")", "\n", "\n", "NX", "=", "res", "*", "int", "(", "np", ".", "ceil", "(", "(", "self", ".", "FE", ".", "mesh", ".", "bb", "[", "'xmax'", "]", "-", "self", ".", "FE", ".", "mesh", ".", "bb", "[", "'xmin'", "]", ")", "/", "self", ".", "FE", ".", "mesh", ".", "elemSize", "[", "0", "]", ")", ")", "\n", "NY", "=", "res", "*", "int", "(", "np", ".", "ceil", "(", "(", "self", ".", "FE", ".", "mesh", ".", "bb", "[", "'ymax'", "]", "-", "self", ".", "FE", ".", "mesh", ".", "bb", "[", "'ymin'", "]", ")", "/", "self", ".", "FE", ".", "mesh", ".", "elemSize", "[", "1", "]", ")", ")", "\n", "nx", ",", "ny", "=", "microstrImages", ".", "shape", "[", "2", "]", ",", "microstrImages", ".", "shape", "[", "3", "]", "\n", "compositeImg", "=", "np", ".", "zeros", "(", "(", "NX", "*", "nx", ",", "NY", "*", "ny", ")", ")", "\n", "colorImg", "=", "np", ".", "zeros", "(", "(", "NX", ",", "NY", ")", ")", "\n", "densityImg", "=", "np", ".", "zeros", "(", "(", "NX", ",", "NY", ")", ")", "\n", "maxC", "=", "0", "\n", "step", "=", "0.01", "# step used when gen mstr images!", "\n", "cutOff", "=", "0.98", "# val above which its a dark square", "\n", "for", "elem", "in", "range", "(", "xy", ".", "shape", "[", "0", "]", ")", ":", "\n", "      ", "cx", "=", "int", "(", "(", "res", "*", "xy", "[", "elem", ",", "0", "]", ")", "/", "self", ".", "FE", ".", "mesh", ".", "elemSize", "[", "0", "]", ")", "\n", "cy", "=", "int", "(", "(", "res", "*", "xy", "[", "elem", ",", "1", "]", ")", "/", "self", ".", "FE", ".", "mesh", ".", "elemSize", "[", "1", "]", ")", "\n", "densityImg", "[", "cx", ",", "cy", "]", "=", "int", "(", "100.", "*", "density", "[", "elem", "]", ")", "\n", "if", "(", "density", "[", "elem", "]", ">", "cutOff", ")", ":", "\n", "        ", "compositeImg", "[", "nx", "*", "cx", ":", "(", "cx", "+", "1", ")", "*", "nx", ",", "ny", "*", "cy", ":", "(", "cy", "+", "1", ")", "*", "ny", "]", "=", "np", ".", "ones", "(", "(", "nx", ",", "ny", ")", ")", "\n", "colorImg", "[", "cx", ",", "cy", "]", "=", "1", "\n", "", "else", ":", "\n", "        ", "mstrIdx", "=", "min", "(", "microstrImages", ".", "shape", "[", "1", "]", "-", "1", ",", "int", "(", "density", "[", "elem", "]", "//", "step", ")", ")", "\n", "mstrTypeIdx", "=", "np", ".", "argmax", "(", "mstrType", "[", "elem", ",", ":", "]", ")", "\n", "mstrimg", "=", "microstrImages", "[", "mstrTypeIdx", ",", "mstrIdx", ",", ":", ",", ":", "]", ".", "T", "\n", "c", "=", "np", ".", "argmax", "(", "mstrType", "[", "elem", ",", ":", "]", ")", "+", "1", "\n", "if", "(", "c", ">", "maxC", ")", ":", "\n", "          ", "maxC", "=", "c", "\n", "", "compositeImg", "[", "nx", "*", "cx", ":", "(", "cx", "+", "1", ")", "*", "nx", ",", "ny", "*", "cy", ":", "(", "cy", "+", "1", ")", "*", "ny", "]", "=", "mstrimg", "*", "c", "\n", "colorImg", "[", "cx", ",", "cy", "]", "=", "c", "\n", "", "", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "imshow", "(", "compositeImg", ".", "T", ",", "cmap", "=", "colors", ".", "ListedColormap", "(", "fillColors", "[", ":", "maxC", "+", "1", "]", ")", ",", "interpolation", "=", "'none'", ",", "vmin", "=", "0", ",", "vmax", "=", "maxC", ",", "origin", "=", "'lower'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "plt", ".", "savefig", "(", "f'./frames/top_{self.epoch:d}.pdf'", ",", "dpi", "=", "300", ")", "\n", "\n", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "imshow", "(", "colorImg", ".", "T", ",", "cmap", "=", "colors", ".", "ListedColormap", "(", "fillColors", "[", ":", "maxC", "+", "1", "]", ")", ",", "interpolation", "=", "'none'", ",", "vmin", "=", "0", ",", "vmax", "=", "maxC", ",", "origin", "=", "'lower'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "imshow", "(", "-", "densityImg", ".", "T", ",", "cmap", "=", "'gray'", ",", "interpolation", "=", "'none'", ",", "origin", "=", "'lower'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "#-----------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.examples.getExampleBC": [[6, 119], ["numpy.arange", "numpy.arange", "numpy.union1d", "numpy.arange", "numpy.array", "numpy.array", "numpy.arange", "numpy.union1d", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange"], "function", ["None"], ["def", "getExampleBC", "(", "example", ",", "nelx", ",", "nely", ",", "elemSize", ")", ":", "\n", "  ", "if", "(", "example", "==", "1", ")", ":", "# tip cantilever", "\n", "    ", "exampleName", "=", "'TipCantilever'", "\n", "bcSettings", "=", "{", "'fixedNodes'", ":", "np", ".", "arange", "(", "0", ",", "2", "*", "(", "nely", "+", "1", ")", ",", "1", ")", ",", "'forceMagnitude'", ":", "-", "1.", ",", "'forceNodes'", ":", "2", "*", "(", "nelx", "+", "1", ")", "*", "(", "nely", "+", "1", ")", "-", "2", "*", "nely", "+", "1", ",", "'dofsPerNode'", ":", "2", "}", "\n", "symMap", "=", "{", "'XAxis'", ":", "{", "'isOn'", ":", "False", ",", "'midPt'", ":", "0.5", "*", "nely", "*", "elemSize", "[", "1", "]", "}", ",", "'YAxis'", ":", "{", "'isOn'", ":", "False", ",", "'midPt'", ":", "0.5", "*", "nelx", "*", "elemSize", "[", "0", "]", "}", "}", "\n", "\n", "", "elif", "(", "example", "==", "2", ")", ":", "# mid cantilever", "\n", "    ", "exampleName", "=", "'MidCantilever'", "\n", "bcSettings", "=", "{", "'fixedNodes'", ":", "np", ".", "arange", "(", "0", ",", "2", "*", "(", "nely", "+", "1", ")", ",", "1", ")", ",", "'forceMagnitude'", ":", "-", "1.", ",", "'forceNodes'", ":", "2", "*", "(", "nelx", "+", "1", ")", "*", "(", "nely", "+", "1", ")", "-", "(", "nely", "+", "1", ")", ",", "'dofsPerNode'", ":", "2", "}", "\n", "symMap", "=", "{", "'XAxis'", ":", "{", "'isOn'", ":", "True", ",", "'midPt'", ":", "0.5", "*", "nely", "*", "elemSize", "[", "1", "]", "}", ",", "'YAxis'", ":", "{", "'isOn'", ":", "False", ",", "'midPt'", ":", "0.5", "*", "nelx", "*", "elemSize", "[", "0", "]", "}", "}", "\n", "\n", "", "elif", "(", "example", "==", "3", ")", ":", "#  MBBBeam", "\n", "    ", "exampleName", "=", "'MBBBeam'", "\n", "fn", "=", "np", ".", "union1d", "(", "np", ".", "arange", "(", "0", ",", "2", "*", "(", "nely", "+", "1", ")", ",", "2", ")", ",", "2", "*", "(", "nelx", "+", "1", ")", "*", "(", "nely", "+", "1", ")", "-", "2", "*", "(", "nely", "+", "1", ")", "+", "1", ")", ";", "\n", "bcSettings", "=", "{", "'fixedNodes'", ":", "fn", ",", "'forceMagnitude'", ":", "-", "1.", ",", "'forceNodes'", ":", "2", "*", "(", "nely", "+", "1", ")", "+", "1", ",", "'dofsPerNode'", ":", "2", "}", "\n", "symMap", "=", "{", "'XAxis'", ":", "{", "'isOn'", ":", "False", ",", "'midPt'", ":", "0.5", "*", "nely", "*", "elemSize", "[", "1", "]", "}", ",", "'YAxis'", ":", "{", "'isOn'", ":", "False", ",", "'midPt'", ":", "0.5", "*", "nelx", "*", "elemSize", "[", "0", "]", "}", "}", "\n", "\n", "", "elif", "(", "example", "==", "4", ")", ":", "#  Michell", "\n", "    ", "exampleName", "=", "'Michell'", "\n", "fn", "=", "np", ".", "array", "(", "[", "0", ",", "1", ",", "2", "*", "(", "nelx", "+", "1", ")", "*", "(", "nely", "+", "1", ")", "-", "2", "*", "nely", "]", ")", "\n", "bcSettings", "=", "{", "'fixedNodes'", ":", "fn", ",", "'forceMagnitude'", ":", "-", "1.", ",", "'forceNodes'", ":", "nelx", "*", "(", "nely", "+", "1", ")", "+", "1", ",", "'dofsPerNode'", ":", "2", "}", "\n", "symMap", "=", "{", "'XAxis'", ":", "{", "'isOn'", ":", "False", ",", "'midPt'", ":", "0.5", "*", "nely", "*", "elemSize", "[", "1", "]", "}", ",", "'YAxis'", ":", "{", "'isOn'", ":", "True", ",", "'midPt'", ":", "0.5", "*", "nelx", "*", "elemSize", "[", "0", "]", "}", "}", "\n", "\n", "", "elif", "(", "example", "==", "5", ")", ":", "#  DistributedMBB", "\n", "    ", "exampleName", "=", "'Bridge'", "\n", "fixn", "=", "np", ".", "array", "(", "[", "0", ",", "1", ",", "2", "*", "(", "nelx", "+", "1", ")", "*", "(", "nely", "+", "1", ")", "-", "2", "*", "nely", "+", "1", ",", "2", "*", "(", "nelx", "+", "1", ")", "*", "(", "nely", "+", "1", ")", "-", "2", "*", "nely", "]", ")", ";", "\n", "frcn", "=", "np", ".", "arange", "(", "2", "*", "nely", "+", "1", ",", "2", "*", "(", "nelx", "+", "1", ")", "*", "(", "nely", "+", "1", ")", ",", "8", "*", "(", "nely", "+", "1", ")", ")", "\n", "bcSettings", "=", "{", "'fixedNodes'", ":", "fixn", ",", "'forceMagnitude'", ":", "-", "1.", "/", "(", "nelx", "+", "1.", ")", ",", "'forceNodes'", ":", "frcn", ",", "'dofsPerNode'", ":", "2", "}", "\n", "symMap", "=", "{", "'XAxis'", ":", "{", "'isOn'", ":", "False", ",", "'midPt'", ":", "0.5", "*", "nely", "*", "elemSize", "[", "1", "]", "}", ",", "'YAxis'", ":", "{", "'isOn'", ":", "True", ",", "'midPt'", ":", "0.5", "*", "nelx", "*", "elemSize", "[", "0", "]", "}", "}", "\n", "\n", "", "elif", "(", "example", "==", "6", ")", ":", "# Tensile bar", "\n", "    ", "exampleName", "=", "'TensileBar'", "\n", "fn", "=", "np", ".", "union1d", "(", "np", ".", "arange", "(", "0", ",", "2", "*", "(", "nely", "+", "1", ")", ",", "2", ")", ",", "1", ")", ";", "\n", "midDofX", "=", "2", "*", "(", "nelx", "+", "1", ")", "*", "(", "nely", "+", "1", ")", "-", "(", "nely", ")", "\n", "bcSettings", "=", "{", "'fixedNodes'", ":", "fn", ",", "'forceMagnitude'", ":", "1.", ",", "'forceNodes'", ":", "np", ".", "arange", "(", "midDofX", "-", "6", ",", "midDofX", "+", "6", ",", "2", ")", ",", "'dofsPerNode'", ":", "2", "}", ";", "\n", "symMap", "=", "{", "'XAxis'", ":", "{", "'isOn'", ":", "True", ",", "'midPt'", ":", "0.5", "*", "nely", "*", "elemSize", "[", "1", "]", "}", ",", "'YAxis'", ":", "{", "'isOn'", ":", "False", ",", "'midPt'", ":", "0.5", "*", "nelx", "*", "elemSize", "[", "0", "]", "}", "}", "\n", "\n", "", "elif", "(", "example", "==", "7", ")", ":", "# full right cantilever", "\n", "    ", "exampleName", "=", "'fullRightCantilever'", "\n", "forceNodes", "=", "np", ".", "arange", "(", "2", "*", "(", "nelx", "+", "1", ")", "*", "(", "nely", "+", "1", ")", "-", "2", "*", "nely", "+", "1", ",", "2", "*", "(", "nelx", "+", "1", ")", "*", "(", "nely", "+", "1", ")", ",", "2", ")", "\n", "bcSettings", "=", "{", "'fixedNodes'", ":", "np", ".", "arange", "(", "0", ",", "2", "*", "(", "nely", "+", "1", ")", ",", "1", ")", ",", "'forceMagnitude'", ":", "-", "100.", ",", "'forceNodes'", ":", "forceNodes", ",", "'dofsPerNode'", ":", "2", "}", "# multiplyy C by 1000 to replicate", "\n", "symMap", "=", "{", "'XAxis'", ":", "{", "'isOn'", ":", "True", ",", "'midPt'", ":", "0.5", "*", "nely", "*", "elemSize", "[", "1", "]", "}", ",", "'YAxis'", ":", "{", "'isOn'", ":", "False", ",", "'midPt'", ":", "0.5", "*", "nelx", "*", "elemSize", "[", "0", "]", "}", "}", "\n", "\n", "", "elif", "(", "example", "==", "8", ")", ":", "# Torsion", "\n", "    ", "exampleName", "=", "'Torsion'", "\n", "forceFile", "=", "'./Mesh/Torsion/force.txt'", "\n", "fixedFile", "=", "'./Mesh/Torsion/fixed.txt'", "\n", "nodeXYFile", "=", "'./Mesh/Torsion/nodeXY.txt'", "\n", "elemNodesFile", "=", "'./Mesh/Torsion/elemNodes.txt'", "\n", "bcSettings", "=", "{", "'forceFile'", ":", "forceFile", ",", "'fixedFile'", ":", "fixedFile", ",", "'elemNodesFile'", ":", "elemNodesFile", ",", "'nodeXYFile'", ":", "nodeXYFile", ",", "'dofsPerNode'", ":", "2", "}", ";", "\n", "symMap", "=", "{", "'XAxis'", ":", "{", "'isOn'", ":", "True", ",", "'midPt'", ":", "50", "}", ",", "'YAxis'", ":", "{", "'isOn'", ":", "True", ",", "'midPt'", ":", "50", "}", "}", "\n", "\n", "", "elif", "(", "example", "==", "9", ")", ":", "\n", "    ", "exampleName", "=", "'LBracket'", "\n", "forceFile", "=", "'./Mesh/LBracket/force.txt'", "\n", "fixedFile", "=", "'./Mesh/LBracket/fixed.txt'", "\n", "nodeXYFile", "=", "'./Mesh/LBracket/nodeXY.txt'", "\n", "elemNodesFile", "=", "'./Mesh/LBracket/elemNodes.txt'", "\n", "bcSettings", "=", "{", "'forceFile'", ":", "forceFile", ",", "'fixedFile'", ":", "fixedFile", ",", "'elemNodesFile'", ":", "elemNodesFile", ",", "'nodeXYFile'", ":", "nodeXYFile", ",", "'dofsPerNode'", ":", "2", "}", "\n", "symMap", "=", "{", "'XAxis'", ":", "{", "'isOn'", ":", "False", ",", "'midPt'", ":", "5", "}", ",", "'YAxis'", ":", "{", "'isOn'", ":", "False", ",", "'midPt'", ":", "5", "}", "}", "\n", "", "elif", "(", "example", "==", "10", ")", ":", "\n", "    ", "exampleName", "=", "'midLoadMBB'", "\n", "forceFile", "=", "'./Mesh/midLoadMBB/force.txt'", "\n", "fixedFile", "=", "'./Mesh/midLoadMBB/fixed.txt'", "\n", "nodeXYFile", "=", "'./Mesh/midLoadMBB/nodeXY.txt'", "\n", "elemNodesFile", "=", "'./Mesh/midLoadMBB/elemNodes.txt'", "\n", "bcSettings", "=", "{", "'forceFile'", ":", "forceFile", ",", "'fixedFile'", ":", "fixedFile", ",", "'elemNodesFile'", ":", "elemNodesFile", ",", "'nodeXYFile'", ":", "nodeXYFile", ",", "'dofsPerNode'", ":", "2", "}", "\n", "symMap", "=", "{", "'XAxis'", ":", "{", "'isOn'", ":", "False", ",", "'midPt'", ":", "5", "}", ",", "'YAxis'", ":", "{", "'isOn'", ":", "True", ",", "'midPt'", ":", "50", "}", "}", "\n", "", "return", "exampleName", ",", "bcSettings", ",", "symMap", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.projections.computeFourierMap": [[6, 16], ["numpy.random.choice", "numpy.random.uniform", "numpy.einsum"], "function", ["None"], ["def", "computeFourierMap", "(", "mesh", ",", "fourierMap", ")", ":", "\n", "# compute the map", "\n", "  ", "coordnMapSize", "=", "(", "mesh", ".", "ndim", ",", "fourierMap", "[", "'numTerms'", "]", ")", "\n", "freqSign", "=", "np", ".", "random", ".", "choice", "(", "[", "-", "1.", ",", "1.", "]", ",", "coordnMapSize", ")", "\n", "stdUniform", "=", "np", ".", "random", ".", "uniform", "(", "0.", ",", "1.", ",", "coordnMapSize", ")", "\n", "wmin", "=", "1.", "/", "(", "2", "*", "fourierMap", "[", "'maxRadius'", "]", ")", "\n", "wmax", "=", "1.", "/", "(", "2", "*", "fourierMap", "[", "'minRadius'", "]", ")", "# w~1/R", "\n", "wu", "=", "wmin", "+", "(", "wmax", "-", "wmin", ")", "*", "stdUniform", "\n", "coordnMap", "=", "np", ".", "einsum", "(", "'ij,ij->ij'", ",", "freqSign", ",", "wu", ")", "\n", "return", "coordnMap", "\n", "#-----------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.projections.applyFourierMap": [[17, 23], ["jax.cos", "jax.sin", "jax.concatenate", "jax.einsum", "jax.einsum"], "function", ["None"], ["", "def", "applyFourierMap", "(", "xy", ",", "fourierMap", ")", ":", "\n", "  ", "if", "(", "fourierMap", "[", "'isOn'", "]", ")", ":", "\n", "    ", "c", "=", "jnp", ".", "cos", "(", "2", "*", "np", ".", "pi", "*", "jnp", ".", "einsum", "(", "'ij,jk->ik'", ",", "xy", ",", "fourierMap", "[", "'map'", "]", ")", ")", "\n", "s", "=", "jnp", ".", "sin", "(", "2", "*", "np", ".", "pi", "*", "jnp", ".", "einsum", "(", "'ij,jk->ik'", ",", "xy", ",", "fourierMap", "[", "'map'", "]", ")", ")", "\n", "xy", "=", "jnp", ".", "concatenate", "(", "(", "c", ",", "s", ")", ",", "axis", "=", "1", ")", "\n", "", "return", "xy", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.projections.applyDensityProjection": [[26, 32], ["numpy.tanh", "jax.tanh", "numpy.tanh"], "function", ["None"], ["", "def", "applyDensityProjection", "(", "x", ",", "densityProj", ")", ":", "\n", "  ", "if", "(", "densityProj", "[", "'isOn'", "]", ")", ":", "\n", "    ", "b", "=", "densityProj", "[", "'sharpness'", "]", "\n", "nmr", "=", "np", ".", "tanh", "(", "0.5", "*", "b", ")", "+", "jnp", ".", "tanh", "(", "b", "*", "(", "x", "-", "0.5", ")", ")", "\n", "x", "=", "0.5", "*", "nmr", "/", "np", ".", "tanh", "(", "0.5", "*", "b", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.projections.applySymmetry": [[34, 47], ["jax.ops.index_update", "jax.ops.index_update", "jax.stack", "jax.abs", "jax.abs"], "function", ["None"], ["", "def", "applySymmetry", "(", "x", ",", "symMap", ")", ":", "\n", "  ", "if", "(", "symMap", "[", "'YAxis'", "]", "[", "'isOn'", "]", ")", ":", "\n", "    ", "xv", "=", "index_update", "(", "x", "[", ":", ",", "0", "]", ",", "index", "[", ":", "]", ",", "symMap", "[", "'YAxis'", "]", "[", "'midPt'", "]", "+", "jnp", ".", "abs", "(", "x", "[", ":", ",", "0", "]", "-", "symMap", "[", "'YAxis'", "]", "[", "'midPt'", "]", ")", ")", "\n", "", "else", ":", "\n", "    ", "xv", "=", "x", "[", ":", ",", "0", "]", "\n", "", "if", "(", "symMap", "[", "'XAxis'", "]", "[", "'isOn'", "]", ")", ":", "\n", "    ", "yv", "=", "index_update", "(", "x", "[", ":", ",", "1", "]", ",", "index", "[", ":", "]", ",", "symMap", "[", "'XAxis'", "]", "[", "'midPt'", "]", "+", "jnp", ".", "abs", "(", "x", "[", ":", ",", "1", "]", "-", "symMap", "[", "'XAxis'", "]", "[", "'midPt'", "]", ")", ")", "\n", "", "else", ":", "\n", "    ", "yv", "=", "x", "[", ":", ",", "1", "]", "\n", "", "x", "=", "jnp", ".", "stack", "(", "(", "xv", ",", "yv", ")", ")", ".", "T", "\n", "return", "x", "\n", "#--------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.projections.applyRotationalSymmetry": [[48, 58], ["jax.sqrt", "jax.arctan2", "jax.remainder", "jax.stack", "jax.cos", "jax.sin"], "function", ["None"], ["", "def", "applyRotationalSymmetry", "(", "xyCoordn", ",", "rotationalSymmetry", ")", ":", "\n", "  ", "if", "(", "rotationalSymmetry", "[", "'isOn'", "]", ")", ":", "\n", "    ", "dx", "=", "xyCoordn", "[", ":", ",", "0", "]", "-", "rotationalSymmetry", "[", "'centerCoordn'", "]", "[", "0", "]", "\n", "dy", "=", "xyCoordn", "[", ":", ",", "1", "]", "-", "rotationalSymmetry", "[", "'centerCoordn'", "]", "[", "1", "]", "\n", "radius", "=", "jnp", ".", "sqrt", "(", "(", "dx", ")", "**", "2", "+", "(", "dy", ")", "**", "2", ")", "\n", "angle", "=", "jnp", ".", "arctan2", "(", "dy", ",", "dx", ")", "\n", "correctedAngle", "=", "jnp", ".", "remainder", "(", "angle", ",", "np", ".", "pi", "*", "rotationalSymmetry", "[", "'sectorAngleDeg'", "]", "/", "180.", ")", "\n", "x", ",", "y", "=", "radius", "*", "jnp", ".", "cos", "(", "correctedAngle", ")", ",", "radius", "*", "jnp", ".", "sin", "(", "correctedAngle", ")", "\n", "xyCoordn", "=", "jnp", ".", "stack", "(", "(", "x", ",", "y", ")", ")", ".", "T", "\n", "", "return", "xyCoordn", "\n", "#--------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.projections.applyExtrusion": [[59, 70], ["jax.stack"], "function", ["None"], ["", "def", "applyExtrusion", "(", "xy", ",", "extrusion", ")", ":", "\n", "  ", "if", "(", "extrusion", "[", "'X'", "]", "[", "'isOn'", "]", ")", ":", "\n", "    ", "xv", "=", "xy", "[", ":", ",", "0", "]", "%", "extrusion", "[", "'X'", "]", "[", "'delta'", "]", "\n", "", "else", ":", "\n", "    ", "xv", "=", "xy", "[", ":", ",", "0", "]", "\n", "", "if", "(", "extrusion", "[", "'Y'", "]", "[", "'isOn'", "]", ")", ":", "\n", "    ", "yv", "=", "xy", "[", ":", ",", "1", "]", "%", "extrusion", "[", "'Y'", "]", "[", "'delta'", "]", "\n", "", "else", ":", "\n", "    ", "yv", "=", "xy", "[", ":", ",", "1", "]", "\n", "", "x", "=", "jnp", ".", "stack", "(", "(", "xv", ",", "yv", ")", ")", ".", "T", "\n", "return", "x", "\n", "#--------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.FE_Solver.JAXSolver.__init__": [[8, 14], ["FE_templates.getKMatrixGridMeshTemplates", "jax.jit", "jax.jit", "FE_Solver.JAXSolver.material.getD0elemMatrix"], "methods", ["home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.FE_templates.getKMatrixGridMeshTemplates", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.material.Material.getD0elemMatrix"], ["  ", "def", "__init__", "(", "self", ",", "mesh", ",", "material", ")", ":", "\n", "    ", "self", ".", "mesh", "=", "mesh", "\n", "self", ".", "material", "=", "material", "\n", "self", ".", "Ktemplates", "=", "getKMatrixGridMeshTemplates", "(", "mesh", ".", "elemSize", ",", "'structural'", ")", "\n", "self", ".", "objectiveHandle", "=", "jit", "(", "self", ".", "objective", ")", "\n", "self", ".", "D0", "=", "self", ".", "material", ".", "getD0elemMatrix", "(", "self", ".", "mesh", ")", "\n", "#-----------------------# ", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.FE_Solver.JAXSolver.objective": [[15, 43], ["FE_Solver.JAXSolver.objective.assembleK"], "methods", ["None"], ["", "def", "objective", "(", "self", ",", "C", ")", ":", "\n", "    ", "@", "jit", "\n", "def", "assembleK", "(", "C", ")", ":", "\n", "      ", "sK", "=", "jnp", ".", "zeros", "(", "(", "self", ".", "mesh", ".", "numElems", ",", "8", ",", "8", ")", ")", "# 8 is ndof perelem", "\n", "for", "k", "in", "C", ":", "\n", "        ", "sK", "+=", "jnp", ".", "einsum", "(", "'e,jk->ejk'", ",", "C", "[", "k", "]", ",", "self", ".", "Ktemplates", "[", "k", "]", ")", "\n", "", "K", "=", "jnp", ".", "zeros", "(", "(", "self", ".", "mesh", ".", "ndof", ",", "self", ".", "mesh", ".", "ndof", ")", ")", "\n", "K", "=", "jax", ".", "ops", ".", "index_add", "(", "K", ",", "self", ".", "mesh", ".", "nodeIdx", ",", "sK", ".", "flatten", "(", ")", ")", "\n", "return", "K", "\n", "#-----------------------#", "\n", "", "@", "jit", "\n", "def", "solve", "(", "K", ")", ":", "\n", "# eliminate fixed dofs for solving sys of eqns", "\n", "      ", "u_free", "=", "jax", ".", "scipy", ".", "linalg", ".", "solve", "(", "K", "[", "self", ".", "mesh", ".", "bc", "[", "'free'", "]", ",", ":", "]", "[", ":", ",", "self", ".", "mesh", ".", "bc", "[", "'free'", "]", "]", ",", "self", ".", "mesh", ".", "bc", "[", "'force'", "]", "[", "self", ".", "mesh", ".", "bc", "[", "'free'", "]", "]", ",", "sym_pos", "=", "True", ",", "check_finite", "=", "False", ")", "\n", "u", "=", "jnp", ".", "zeros", "(", "(", "self", ".", "mesh", ".", "ndof", ")", ")", "\n", "u", "=", "jax", ".", "ops", ".", "index_add", "(", "u", ",", "self", ".", "mesh", ".", "bc", "[", "'free'", "]", ",", "u_free", ".", "reshape", "(", "-", "1", ")", ")", "# homog bc wherev fixed", "\n", "return", "u", "\n", "#-----------------------#", "\n", "", "@", "jit", "\n", "def", "computeCompliance", "(", "K", ",", "u", ")", ":", "\n", "      ", "J", "=", "jnp", ".", "dot", "(", "self", ".", "mesh", ".", "bc", "[", "'force'", "]", ".", "reshape", "(", "-", "1", ")", ".", "T", ",", "u", ")", "\n", "return", "J", "\n", "#-----------------------#", "\n", "", "K", "=", "assembleK", "(", "C", ")", "\n", "u", "=", "solve", "(", "K", ")", "\n", "J", "=", "computeCompliance", "(", "K", ",", "u", ")", "\n", "return", "J", "\n", "#-----------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.material.Material.__init__": [[4, 11], ["numpy.array"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "matProp", ")", ":", "\n", "    ", "self", ".", "matProp", "=", "matProp", "\n", "E", ",", "nu", "=", "matProp", "[", "'Emax'", "]", ",", "matProp", "[", "'nu'", "]", "\n", "self", ".", "C", "=", "E", "/", "(", "1", "-", "nu", "**", "2", ")", "*", "np", ".", "array", "(", "[", "[", "1", ",", "nu", ",", "0", "]", ",", "[", "nu", ",", "1", ",", "0", "]", ",", "[", "0", ",", "0", ",", "(", "1", "-", "nu", ")", "/", "2", "]", "]", ")", "\n", "#--------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.material.Material.computeSIMP_Interpolation": [[13, 18], ["None"], "methods", ["None"], ["", "def", "computeSIMP_Interpolation", "(", "self", ",", "rho", ",", "penal", ")", ":", "\n", "    ", "E", "=", "0.001", "*", "self", ".", "matProp", "[", "'Emax'", "]", "+", "(", "0.999", "*", "self", ".", "matProp", "[", "'Emax'", "]", ")", "*", "(", "rho", "+", "0.01", ")", "**", "penal", "\n", "return", "E", "\n", "#--------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.material.Material.computeRAMP_Interpolation": [[20, 25], ["None"], "methods", ["None"], ["", "def", "computeRAMP_Interpolation", "(", "self", ",", "rho", ",", "penal", ")", ":", "\n", "    ", "E", "=", "0.001", "*", "self", ".", "matProp", "[", "'Emax'", "]", "+", "(", "0.999", "*", "self", ".", "matProp", "[", "'Emax'", "]", ")", "*", "(", "rho", "/", "(", "1.", "+", "penal", "*", "(", "1.", "-", "rho", ")", ")", ")", "\n", "return", "E", "\n", "#--------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.None.material.Material.getD0elemMatrix": [[26, 43], ["numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "getD0elemMatrix", "(", "self", ",", "mesh", ")", ":", "\n", "    ", "if", "(", "mesh", ".", "meshType", "==", "'gridMesh'", ")", ":", "\n", "       ", "E", "=", "1", "\n", "nu", "=", "self", ".", "matProp", "[", "'nu'", "]", "\n", "k", "=", "np", ".", "array", "(", "[", "1", "/", "2", "-", "nu", "/", "6", ",", "1", "/", "8", "+", "nu", "/", "8", ",", "-", "1", "/", "4", "-", "nu", "/", "12", ",", "-", "1", "/", "8", "+", "3", "*", "nu", "/", "8", ",", "-", "1", "/", "4", "+", "nu", "/", "12", ",", "-", "1", "/", "8", "-", "nu", "/", "8", ",", "nu", "/", "6", ",", "1", "/", "8", "-", "3", "*", "nu", "/", "8", "]", ")", "\n", "D0", "=", "E", "/", "(", "1", "-", "nu", "**", "2", ")", "*", "np", ".", "array", "(", "[", "[", "k", "[", "0", "]", ",", "k", "[", "1", "]", ",", "k", "[", "2", "]", ",", "k", "[", "3", "]", ",", "k", "[", "4", "]", ",", "k", "[", "5", "]", ",", "k", "[", "6", "]", ",", "k", "[", "7", "]", "]", ",", "\n", "[", "k", "[", "1", "]", ",", "k", "[", "0", "]", ",", "k", "[", "7", "]", ",", "k", "[", "6", "]", ",", "k", "[", "5", "]", ",", "k", "[", "4", "]", ",", "k", "[", "3", "]", ",", "k", "[", "2", "]", "]", ",", "\n", "[", "k", "[", "2", "]", ",", "k", "[", "7", "]", ",", "k", "[", "0", "]", ",", "k", "[", "5", "]", ",", "k", "[", "6", "]", ",", "k", "[", "3", "]", ",", "k", "[", "4", "]", ",", "k", "[", "1", "]", "]", ",", "\n", "[", "k", "[", "3", "]", ",", "k", "[", "6", "]", ",", "k", "[", "5", "]", ",", "k", "[", "0", "]", ",", "k", "[", "7", "]", ",", "k", "[", "2", "]", ",", "k", "[", "1", "]", ",", "k", "[", "4", "]", "]", ",", "\n", "[", "k", "[", "4", "]", ",", "k", "[", "5", "]", ",", "k", "[", "6", "]", ",", "k", "[", "7", "]", ",", "k", "[", "0", "]", ",", "k", "[", "1", "]", ",", "k", "[", "2", "]", ",", "k", "[", "3", "]", "]", ",", "\n", "[", "k", "[", "5", "]", ",", "k", "[", "4", "]", ",", "k", "[", "3", "]", ",", "k", "[", "2", "]", ",", "k", "[", "1", "]", ",", "k", "[", "0", "]", ",", "k", "[", "7", "]", ",", "k", "[", "6", "]", "]", ",", "\n", "[", "k", "[", "6", "]", ",", "k", "[", "3", "]", ",", "k", "[", "4", "]", ",", "k", "[", "1", "]", ",", "k", "[", "2", "]", ",", "k", "[", "7", "]", ",", "k", "[", "0", "]", ",", "k", "[", "5", "]", "]", ",", "\n", "[", "k", "[", "7", "]", ",", "k", "[", "2", "]", ",", "k", "[", "1", "]", ",", "k", "[", "4", "]", ",", "k", "[", "3", "]", ",", "k", "[", "6", "]", ",", "k", "[", "5", "]", ",", "k", "[", "0", "]", "]", "]", ")", "\n", "# all the elems have same base stiffness", "\n", "return", "D0", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.homogenize.Homogenization.__init__": [[8, 60], ["numpy.array", "homogenize.Homogenization.elementMatVec", "numpy.reshape", "numpy.reshape", "numpy.repeat", "numpy.reshape", "numpy.vstack", "numpy.hstack", "numpy.zeros", "numpy.kron().T.flatten", "numpy.kron().T.flatten", "numpy.tile().T.flatten", "numpy.tile", "homogenize.Homogenization.computeChi0", "numpy.arange", "numpy.arange", "numpy.hstack.flatten", "numpy.hstack", "numpy.repeat", "numpy.hstack.flatten", "numpy.kron", "numpy.kron", "numpy.tile", "numpy.zeros", "numpy.array", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.homogenize.Homogenization.elementMatVec", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.homogenize.Homogenization.computeChi0"], ["  ", "def", "__init__", "(", "self", ",", "lx", ",", "ly", ",", "nelx", ",", "nely", ",", "phiInDeg", ",", "matProp", ",", "penal", ")", ":", "\n", "    ", "self", ".", "lx", "=", "lx", "\n", "self", ".", "ly", "=", "ly", "\n", "self", ".", "cellVolume", "=", "self", ".", "lx", "*", "self", ".", "ly", "\n", "self", ".", "nelx", "=", "nelx", "\n", "self", ".", "nely", "=", "nely", "\n", "self", ".", "dx", "=", "lx", "/", "nelx", "\n", "self", ".", "dy", "=", "ly", "/", "nely", "\n", "self", ".", "elemSize", "=", "np", ".", "array", "(", "[", "self", ".", "dx", ",", "self", ".", "dy", "]", ")", "\n", "self", ".", "numElems", "=", "nelx", "*", "nely", "\n", "self", ".", "penal", "=", "penal", "\n", "self", ".", "keLambda", ",", "self", ".", "keMu", ",", "self", ".", "feLambda", ",", "self", ".", "feMu", "=", "self", ".", "elementMatVec", "(", "self", ".", "dx", "/", "2", ",", "self", ".", "dy", "/", "2", ",", "phiInDeg", ")", "\n", "nodenrs", "=", "np", ".", "reshape", "(", "np", ".", "arange", "(", "0", ",", "(", "1", "+", "self", ".", "nely", ")", "*", "(", "1", "+", "self", ".", "nelx", ")", ")", ",", "(", "1", "+", "self", ".", "nelx", ",", "1", "+", "self", ".", "nely", ")", ")", "\n", "edofVec", "=", "np", ".", "reshape", "(", "2", "*", "nodenrs", "[", "0", ":", "-", "1", ",", "0", ":", "-", "1", "]", "+", "2", ",", "(", "self", ".", "numElems", ",", "1", ")", ")", "\n", "\n", "edofMat", "=", "np", ".", "repeat", "(", "edofVec", ",", "8", ",", "axis", "=", "1", ")", "\n", "edofMat", "=", "edofMat", "+", "np", ".", "repeat", "(", "np", ".", "array", "(", "[", "0", ",", "1", ",", "2", "*", "self", ".", "nely", "+", "2", ",", "2", "*", "self", ".", "nely", "+", "3", ",", "2", "*", "self", ".", "nely", ",", "2", "*", "self", ".", "nely", "+", "1", ",", "-", "2", ",", "-", "1", "]", ")", "[", ":", ",", "np", ".", "newaxis", "]", ",", "self", ".", "numElems", ",", "axis", "=", "1", ")", ".", "T", "\n", "\n", "nn", "=", "(", "self", ".", "nelx", "+", "1", ")", "*", "(", "self", ".", "nely", "+", "1", ")", "# Total number of nodes", "\n", "nnP", "=", "(", "self", ".", "nelx", ")", "*", "(", "self", ".", "nely", ")", "# Total number of unique nodes", "\n", "nnPArray", "=", "np", ".", "reshape", "(", "np", ".", "arange", "(", "0", ",", "nnP", ")", ",", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "nnPArray", "=", "np", ".", "vstack", "(", "(", "nnPArray", ",", "nnPArray", "[", "0", ",", ":", "]", ")", ")", "\n", "nnPArray", "=", "np", ".", "hstack", "(", "(", "nnPArray", ",", "nnPArray", "[", ":", ",", "0", "]", "[", ":", ",", "np", ".", "newaxis", "]", ")", ")", "\n", "\n", "dofVector", "=", "np", ".", "zeros", "(", "(", "2", "*", "nn", ")", ")", "\n", "\n", "dofVector", "[", "0", ":", ":", "2", "]", "=", "2", "*", "nnPArray", ".", "flatten", "(", ")", "\n", "dofVector", "[", "1", ":", ":", "2", "]", "=", "2", "*", "nnPArray", ".", "flatten", "(", ")", "+", "1", "\n", "\n", "self", ".", "edofMat", "=", "dofVector", "[", "edofMat", "]", "\n", "self", ".", "ndof", "=", "2", "*", "nnP", "\n", "\n", "self", ".", "iK", "=", "np", ".", "kron", "(", "self", ".", "edofMat", ",", "np", ".", "ones", "(", "(", "8", ",", "1", ")", ")", ")", ".", "T", ".", "flatten", "(", "order", "=", "'F'", ")", "\n", "self", ".", "jK", "=", "np", ".", "kron", "(", "self", ".", "edofMat", ",", "np", ".", "ones", "(", "(", "1", ",", "8", ")", ")", ")", ".", "T", ".", "flatten", "(", "order", "=", "'F'", ")", "\n", "\n", "self", ".", "iF", "=", "np", ".", "tile", "(", "self", ".", "edofMat", ",", "3", ")", ".", "T", ".", "flatten", "(", "order", "=", "'F'", ")", "\n", "self", ".", "jF", "=", "np", ".", "tile", "(", "np", ".", "hstack", "(", "(", "np", ".", "zeros", "(", "8", ")", ",", "1", "*", "np", ".", "ones", "(", "8", ")", ",", "2", "*", "np", ".", "ones", "(", "8", ")", ")", ")", ",", "self", ".", "numElems", ")", "\n", "\n", "self", ".", "computeChi0", "(", ")", "\n", "\n", "if", "(", "matProp", "[", "'type'", "]", "==", "'lame'", ")", ":", "\n", "      ", "self", ".", "lam", "=", "matProp", "[", "'lam'", "]", "\n", "self", ".", "mu", "=", "matProp", "[", "'mu'", "]", "\n", "", "else", ":", "\n", "      ", "E", "=", "matProp", "[", "'E'", "]", "\n", "nu", "=", "matProp", "[", "'nu'", "]", "\n", "lam", "=", "E", "*", "nu", "/", "(", "(", "1", "+", "nu", ")", "*", "(", "1", "-", "2", "*", "nu", ")", ")", "\n", "mu", "=", "E", "/", "(", "2", "*", "(", "1", "+", "nu", ")", ")", "\n", "self", ".", "lam", "=", "2", "*", "mu", "*", "lam", "/", "(", "lam", "+", "2", "*", "mu", ")", "\n", "self", ".", "mu", "=", "mu", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.homogenize.Homogenization.homogenize": [[62, 95], ["numpy.zeros", "numpy.zeros", "homogenize.Homogenization.computeDisplacements", "range", "numpy.power", "numpy.power", "range", "numpy.multiply", "numpy.multiply", "numpy.sum", "numpy.dot", "numpy.dot", "numpy.reshape", "numpy.reshape", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.multiply", "numpy.multiply"], "methods", ["home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.homogenize.Homogenization.computeDisplacements"], ["", "", "def", "homogenize", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "1e-3", "+", "x", "# add eps to ensure non singularity", "\n", "\n", "self", ".", "netLam", "=", "self", ".", "lam", "*", "np", ".", "power", "(", "x", ",", "self", ".", "penal", ")", "\n", "self", ".", "netMu", "=", "self", ".", "mu", "*", "np", ".", "power", "(", "x", ",", "self", ".", "penal", ")", "\n", "\n", "CH", "=", "np", ".", "zeros", "(", "(", "3", ",", "3", ")", ")", "\n", "\n", "objElemAll", "=", "np", ".", "zeros", "(", "(", "self", ".", "nely", ",", "self", ".", "nelx", ",", "3", ",", "3", ")", ")", "\n", "\n", "chi", "=", "self", ".", "computeDisplacements", "(", "x", ")", "\n", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "      ", "for", "j", "in", "range", "(", "3", ")", ":", "\n", "\n", "        ", "vi", "=", "self", ".", "chi0", "[", ":", ",", ":", ",", "i", "]", "-", "chi", "[", "(", "self", ".", "edofMat", "+", "(", "i", ")", "*", "self", ".", "ndof", ")", "%", "self", ".", "ndof", ",", "(", "(", "self", ".", "edofMat", "+", "(", "i", ")", "*", "self", ".", "ndof", ")", "//", "self", ".", "ndof", ")", "]", "\n", "vj", "=", "self", ".", "chi0", "[", ":", ",", ":", ",", "j", "]", "-", "chi", "[", "(", "self", ".", "edofMat", "+", "(", "j", ")", "*", "self", ".", "ndof", ")", "%", "self", ".", "ndof", ",", "(", "(", "self", ".", "edofMat", "+", "(", "j", ")", "*", "self", ".", "ndof", ")", "//", "self", ".", "ndof", ")", "]", "\n", "\n", "sumLambda", "=", "np", ".", "multiply", "(", "np", ".", "dot", "(", "vi", ",", "self", ".", "keLambda", ")", ",", "vj", ")", "\n", "sumMu", "=", "np", ".", "multiply", "(", "np", ".", "dot", "(", "vi", ",", "self", ".", "keMu", ")", ",", "vj", ")", "\n", "sumLambda", "=", "np", ".", "reshape", "(", "np", ".", "sum", "(", "sumLambda", ",", "1", ")", ",", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", ".", "T", "\n", "sumMu", "=", "np", ".", "reshape", "(", "np", ".", "sum", "(", "sumMu", ",", "1", ")", ",", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", ".", "T", "\n", "\n", "\n", "\n", "objElemAll", "[", ":", ",", ":", ",", "i", ",", "j", "]", "=", "1", "/", "self", ".", "cellVolume", "*", "(", "np", ".", "multiply", "(", "self", ".", "netLam", ",", "sumLambda", ")", "+", "np", ".", "multiply", "(", "self", ".", "netMu", ",", "sumMu", ")", ")", "\n", "\n", "CH", "[", "i", ",", "j", "]", "=", "np", ".", "sum", "(", "np", ".", "sum", "(", "objElemAll", "[", ":", ",", ":", ",", "i", ",", "j", "]", ")", ")", "\n", "\n", "", "", "return", "CH", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.homogenize.Homogenization.computeDisplacements": [[96, 126], ["homogenize.Homogenization.keLambda.flatten", "homogenize.Homogenization.keMu.flatten", "scipy.sparse.csr_matrix().tocsc", "homogenize.Homogenization.feLambda.flatten", "homogenize.Homogenization.feMu.flatten", "scipy.sparse.csr_matrix().tocsc", "scipy.sparse.lil_matrix", "scipy.sparse.linalg.spsolve", "chi.tocsr.tocsr.tocsr", "lam.flatten", "mu.flatten", "lam.flatten", "mu.flatten", "scipy.sparse.csr_matrix", "scipy.sparse.csr_matrix", "numpy.outer", "numpy.outer", "numpy.outer", "numpy.outer"], "methods", ["None"], ["", "def", "computeDisplacements", "(", "self", ",", "x", ")", ":", "\n", "# TODO : make this computation faster by using cvxopt package and solver ", "\n", "    ", "lam", "=", "self", ".", "netLam", "\n", "mu", "=", "self", ".", "netMu", "\n", "\n", "\n", "tp1", "=", "self", ".", "keLambda", ".", "flatten", "(", "order", "=", "'F'", ")", "\n", "tp2", "=", "lam", ".", "flatten", "(", "order", "=", "'F'", ")", ".", "T", "\n", "tp3", "=", "self", ".", "keMu", ".", "flatten", "(", "order", "=", "'F'", ")", "\n", "tp4", "=", "mu", ".", "flatten", "(", "order", "=", "'F'", ")", ".", "T", "\n", "tp5", "=", "(", "np", ".", "outer", "(", "tp1", ",", "tp2", ")", "+", "np", ".", "outer", "(", "tp3", ",", "tp4", ")", ")", ".", "flatten", "(", "order", "=", "'F'", ")", "\n", "sK", "=", "tp5", "\n", "K", "=", "csr_matrix", "(", "(", "sK", ",", "(", "self", ".", "iK", ",", "self", ".", "jK", ")", ")", ",", "shape", "=", "(", "self", ".", "ndof", ",", "self", ".", "ndof", ")", ")", ".", "tocsc", "(", ")", "\n", "\n", "\n", "tp1", "=", "self", ".", "feLambda", ".", "flatten", "(", "order", "=", "'F'", ")", "\n", "tp2", "=", "lam", ".", "flatten", "(", "order", "=", "'F'", ")", ".", "T", "\n", "tp3", "=", "self", ".", "feMu", ".", "flatten", "(", "order", "=", "'F'", ")", "\n", "tp4", "=", "mu", ".", "flatten", "(", "order", "=", "'F'", ")", ".", "T", "\n", "tp5", "=", "(", "np", ".", "outer", "(", "tp1", ",", "tp2", ")", "+", "np", ".", "outer", "(", "tp3", ",", "tp4", ")", ")", ".", "flatten", "(", "order", "=", "'F'", ")", "\n", "sF", "=", "tp5", "\n", "F", "=", "csr_matrix", "(", "(", "sF", ",", "(", "self", ".", "iF", ",", "self", ".", "jF", ")", ")", ",", "shape", "=", "(", "self", ".", "ndof", ",", "3", ")", ")", ".", "tocsc", "(", ")", "\n", "\n", "chi", "=", "lil_matrix", "(", "(", "2", "*", "self", ".", "numElems", ",", "3", ")", ")", "\n", "a", "=", "spsolve", "(", "K", "[", "2", ":", "self", ".", "ndof", ",", "2", ":", "self", ".", "ndof", "]", ",", "F", "[", "2", ":", "self", ".", "ndof", ",", ":", "]", ")", "\n", "\n", "chi", "[", "2", ":", ",", ":", "]", "=", "a", "\n", "chi", "=", "chi", ".", "tocsr", "(", ")", "\n", "\n", "return", "chi", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.homogenize.Homogenization.computeChi0": [[127, 142], ["numpy.zeros", "numpy.zeros", "numpy.array", "numpy.linalg.solve", "numpy.kron", "numpy.kron", "numpy.kron", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ix_"], "methods", ["None"], ["", "def", "computeChi0", "(", "self", ")", ":", "\n", "    ", "chi0", "=", "np", ".", "zeros", "(", "(", "self", ".", "numElems", ",", "8", ",", "3", ")", ")", "\n", "chi0_e", "=", "np", ".", "zeros", "(", "(", "8", ",", "3", ")", ")", "\n", "\n", "ke", "=", "self", ".", "keMu", "+", "self", ".", "keLambda", "\n", "fe", "=", "self", ".", "feMu", "+", "self", ".", "feLambda", "\n", "\n", "idx", "=", "np", ".", "array", "(", "[", "2", ",", "4", ",", "5", ",", "6", ",", "7", "]", ")", "\n", "chi0_e", "[", "idx", ",", ":", "]", "=", "np", ".", "linalg", ".", "solve", "(", "ke", "[", "np", ".", "ix_", "(", "idx", ",", "idx", ")", "]", ",", "fe", "[", "idx", ",", ":", "]", ")", "\n", "chi0", "[", ":", ",", ":", ",", "0", "]", "=", "np", ".", "kron", "(", "chi0_e", "[", ":", ",", "0", "]", ",", "np", ".", "ones", "(", "(", "self", ".", "numElems", ",", "1", ")", ")", ")", "\n", "chi0", "[", ":", ",", ":", ",", "1", "]", "=", "np", ".", "kron", "(", "chi0_e", "[", ":", ",", "1", "]", ",", "np", ".", "ones", "(", "(", "self", ".", "numElems", ",", "1", ")", ")", ")", "\n", "chi0", "[", ":", ",", ":", ",", "2", "]", "=", "np", ".", "kron", "(", "chi0_e", "[", ":", ",", "2", "]", ",", "np", ".", "ones", "(", "(", "self", ".", "numElems", ",", "1", ")", ")", ")", "\n", "\n", "self", ".", "chi0", "=", "chi0", "\n", "return", "chi0", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.homogenize.Homogenization.elementMatVec": [[143, 189], ["numpy.diag", "numpy.zeros", "numpy.array", "numpy.array", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "range", "numpy.hstack().T.reshape", "numpy.array().reshape", "numpy.dot", "numpy.zeros", "numpy.zeros", "numpy.dot", "numpy.dot", "numpy.sqrt", "numpy.sqrt", "numpy.array", "numpy.array", "numpy.array().reshape", "numpy.array", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.hstack", "numpy.array", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.diag", "numpy.diag", "numpy.tan", "numpy.tan"], "methods", ["None"], ["", "def", "elementMatVec", "(", "self", ",", "a", ",", "b", ",", "phi", ")", ":", "\n", "\n", "    ", "CMu", "=", "np", ".", "diag", "(", "[", "2", ",", "2", ",", "1", "]", ")", "\n", "CLambda", "=", "np", ".", "zeros", "(", "(", "3", ",", "3", ")", ")", "\n", "CLambda", "[", "0", ":", "2", ",", "0", ":", "2", "]", "=", "1", "\n", "xx", "=", "np", ".", "array", "(", "[", "-", "1", "/", "np", ".", "sqrt", "(", "3", ")", ",", "1", "/", "np", ".", "sqrt", "(", "3", ")", "]", ")", "\n", "yy", "=", "xx", "\n", "ww", "=", "np", ".", "array", "(", "[", "1", ",", "1", "]", ")", "\n", "\n", "keLambda", "=", "np", ".", "zeros", "(", "(", "8", ",", "8", ")", ")", "\n", "keMu", "=", "np", ".", "zeros", "(", "(", "8", ",", "8", ")", ")", "\n", "feLambda", "=", "np", ".", "zeros", "(", "(", "8", ",", "3", ")", ")", "\n", "feMu", "=", "np", ".", "zeros", "(", "(", "8", ",", "3", ")", ")", "\n", "L", "=", "np", ".", "zeros", "(", "(", "3", ",", "4", ")", ")", "\n", "L", "[", "0", ",", "0", "]", "=", "1", "\n", "L", "[", "1", ",", "3", "]", "=", "1", "\n", "L", "[", "2", ",", "1", ":", "3", "]", "=", "1", "\n", "for", "ii", "in", "range", "(", "2", ")", ":", "\n", "      ", "for", "jj", "in", "range", "(", "2", ")", ":", "\n", "        ", "x", "=", "xx", "[", "ii", "]", "\n", "y", "=", "yy", "[", "jj", "]", "\n", "dNx", "=", "0.25", "*", "np", ".", "array", "(", "[", "-", "(", "1", "-", "y", ")", ",", "(", "1", "-", "y", ")", ",", "(", "1", "+", "y", ")", ",", "-", "(", "1", "+", "y", ")", "]", ")", "\n", "dNy", "=", "0.25", "*", "np", ".", "array", "(", "[", "-", "(", "1", "-", "x", ")", ",", "-", "(", "1", "+", "x", ")", ",", "(", "1", "+", "x", ")", ",", "(", "1", "-", "x", ")", "]", ")", "\n", "Nvec", "=", "np", ".", "hstack", "(", "(", "dNx", ",", "dNy", ")", ")", ".", "T", ".", "reshape", "(", "(", "2", ",", "4", ")", ")", "\n", "Mtr", "=", "np", ".", "array", "(", "[", "-", "a", ",", "-", "b", ",", "a", ",", "-", "b", ",", "a", "+", "2", "*", "b", "/", "np", ".", "tan", "(", "phi", "*", "np", ".", "pi", "/", "180", ")", ",", "b", ",", "2", "*", "b", "/", "np", ".", "tan", "(", "phi", "*", "np", ".", "pi", "/", "180", ")", "-", "a", ",", "b", "]", ")", ".", "reshape", "(", "(", "4", ",", "2", ")", ")", "\n", "J", "=", "np", ".", "dot", "(", "Nvec", ",", "Mtr", ")", "\n", "detJ", "=", "J", "[", "0", ",", "0", "]", "*", "J", "[", "1", ",", "1", "]", "-", "J", "[", "0", ",", "1", "]", "*", "J", "[", "1", ",", "0", "]", "\n", "invJ", "=", "1", "/", "detJ", "*", "np", ".", "array", "(", "[", "J", "[", "1", ",", "1", "]", ",", "-", "J", "[", "0", ",", "1", "]", ",", "-", "J", "[", "1", ",", "0", "]", ",", "J", "[", "0", ",", "0", "]", "]", ")", ".", "reshape", "(", "(", "2", ",", "2", ")", ")", "\n", "weight", "=", "ww", "[", "ii", "]", "*", "ww", "[", "jj", "]", "*", "detJ", "\n", "G", "=", "np", ".", "zeros", "(", "(", "4", ",", "4", ")", ")", "\n", "G", "[", "0", ":", "2", ",", "0", ":", "2", "]", "=", "invJ", "\n", "G", "[", "2", ":", "4", ",", "2", ":", "4", "]", "=", "invJ", "\n", "dN", "=", "np", ".", "zeros", "(", "(", "4", ",", "8", ")", ")", "\n", "dN", "[", "0", ",", "0", ":", "8", ":", "2", "]", "=", "dNx", "\n", "dN", "[", "1", ",", "0", ":", "8", ":", "2", "]", "=", "dNy", "\n", "dN", "[", "2", ",", "1", ":", "8", ":", "2", "]", "=", "dNx", "\n", "dN", "[", "3", ",", "1", ":", "8", ":", "2", "]", "=", "dNy", "\n", "B", "=", "np", ".", "dot", "(", "G", ",", "dN", ")", "\n", "B", "=", "np", ".", "dot", "(", "L", ",", "B", ")", "\n", "keLambda", "=", "keLambda", "+", "weight", "*", "(", "np", ".", "dot", "(", "B", ".", "T", ",", "np", ".", "dot", "(", "CLambda", ",", "B", ")", ")", ")", "\n", "keMu", "=", "keMu", "+", "weight", "*", "(", "np", ".", "dot", "(", "B", ".", "T", ",", "np", ".", "dot", "(", "CMu", ",", "B", ")", ")", ")", "\n", "feLambda", "=", "feLambda", "+", "weight", "*", "(", "np", ".", "dot", "(", "B", ".", "T", ",", "np", ".", "dot", "(", "CLambda", ",", "np", ".", "diag", "(", "[", "1", ",", "1", ",", "1", "]", ")", ")", ")", ")", "\n", "feMu", "=", "feMu", "+", "weight", "*", "(", "np", ".", "dot", "(", "B", ".", "T", ",", "np", ".", "dot", "(", "CMu", ",", "np", ".", "diag", "(", "[", "1", ",", "1", ",", "1", "]", ")", ")", ")", ")", "\n", "\n", "", "", "return", "keLambda", ",", "keMu", ",", "feLambda", ",", "feMu", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.homogenize.Homogenization.plotMicroStructure": [[190, 196], ["matplotlib.subplots", "ax.imshow", "fig.tight_layout", "fig.show", "numpy.flipud", "matplotlib.colors.Normalize"], "methods", ["None"], ["", "def", "plotMicroStructure", "(", "self", ",", "x", ")", ":", "\n", "    ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "ax", ".", "imshow", "(", "-", "np", ".", "flipud", "(", "x", ".", "T", ")", ",", "cmap", "=", "'gray'", ",", "interpolation", "=", "'none'", ",", "norm", "=", "colors", ".", "Normalize", "(", "vmin", "=", "-", "1", ",", "vmax", "=", "0", ")", ")", "\n", "fig", ".", "tight_layout", "(", ")", "\n", "fig", ".", "show", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.__init__": [[17, 19], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "nelx", ",", "nely", ",", "eps", "=", "0", ")", ":", "\n", "    ", "self", ".", "nelx", ",", "self", ".", "nely", ",", "self", ".", "eps", "=", "nelx", ",", "nely", ",", "eps", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.square": [[20, 34], ["numpy.zeros", "range", "range"], "methods", ["None"], ["", "def", "square", "(", "self", ",", "t", ")", ":", "\n", "    ", "'''\n    t between 0 and 1\n    '''", "\n", "microStr", "=", "np", ".", "zeros", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "t", "=", "0.5", "*", "t", "*", "self", ".", "nelx", "# scale t", "\n", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "if", "(", "(", "rw", "<", "t", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "t", ")", "or", "(", "col", "<", "t", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "t", ")", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "else", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "self", ".", "eps", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.vbox": [[35, 49], ["range", "numpy.ones", "range"], "methods", ["None"], ["", "def", "vbox", "(", "self", ",", "t", ")", ":", "\n", "    ", "'''\n    t between 0 and 1\n    '''", "\n", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "t", "=", "0.25", "*", "t", "*", "self", ".", "nelx", "# scale t", "\n", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "if", "(", "col", ">", "0.5", "*", "self", ".", "nely", "-", "0.5", "*", "t", "and", "col", "<", "0.5", "*", "self", ".", "nely", "+", "0.5", "*", "t", ")", ":", "# bar", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "if", "(", "(", "rw", "<", "t", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "t", ")", "or", "(", "col", "<", "t", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "t", ")", ")", ":", "#box", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.hbox": [[50, 64], ["range", "numpy.ones", "range"], "methods", ["None"], ["", "def", "hbox", "(", "self", ",", "t", ")", ":", "\n", "    ", "'''\n    t between 0 and 1\n    '''", "\n", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "t", "=", "0.31", "*", "t", "*", "self", ".", "nelx", "# scale t", "\n", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "if", "(", "rw", ">", "0.5", "*", "self", ".", "nelx", "-", "0.5", "*", "t", "and", "rw", "<", "0.5", "*", "self", ".", "nelx", "+", "0.5", "*", "t", ")", ":", "#bar", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "if", "(", "(", "rw", "<", "t", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "t", ")", "or", "(", "col", "<", "t", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "t", ")", ")", ":", "#box", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.plusbox": [[65, 81], ["range", "numpy.ones", "range"], "methods", ["None"], ["", "def", "plusbox", "(", "self", ",", "t", ")", ":", "\n", "    ", "'''\n    t between 0 and 1\n    '''", "\n", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "t", "=", "0.23", "*", "t", "*", "self", ".", "nelx", "# scale t", "\n", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "if", "(", "col", ">", "0.5", "*", "self", ".", "nely", "-", "0.5", "*", "t", "and", "col", "<", "0.5", "*", "self", ".", "nely", "+", "0.5", "*", "t", ")", ":", "# vbar", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "if", "(", "rw", ">", "0.5", "*", "self", ".", "nelx", "-", "0.5", "*", "t", "and", "rw", "<", "0.5", "*", "self", ".", "nelx", "+", "0.5", "*", "t", ")", ":", "#hbar", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "if", "(", "(", "rw", "<", "t", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "t", ")", "or", "(", "col", "<", "t", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "t", ")", ")", ":", "#box", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.X": [[82, 96], ["math.tan", "range", "numpy.ones", "abs", "range", "abs", "abs"], "methods", ["None"], ["", "def", "X", "(", "self", ",", "t", ",", "theta", "=", "np", ".", "pi", "/", "4.", ")", ":", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "t", "=", "0.35", "*", "t", "*", "self", ".", "nelx", "\n", "cx", "=", "0.5", "*", "self", ".", "nelx", "\n", "cy", "=", "0.5", "*", "self", ".", "nely", "\n", "tTheta", "=", "math", ".", "tan", "(", "theta", ")", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "x", "=", "abs", "(", "rw", "-", "cx", ")", "\n", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "y", "=", "abs", "(", "col", "-", "cy", ")", "\n", "XIntercept", "=", "x", "-", "(", "1.0", "*", "y", ")", "/", "tTheta", "\n", "if", "(", "abs", "(", "XIntercept", ")", "<", "t", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.Xbox": [[97, 113], ["math.tan", "range", "numpy.ones", "abs", "range", "abs", "abs"], "methods", ["None"], ["", "def", "Xbox", "(", "self", ",", "t", ",", "theta", "=", "np", ".", "pi", "/", "4.", ")", ":", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", ";", "\n", "t", "=", "0.2", "*", "t", "*", "self", ".", "nelx", "\n", "cx", "=", "0.5", "*", "self", ".", "nelx", "\n", "cy", "=", "0.5", "*", "self", ".", "nely", "\n", "tTheta", "=", "math", ".", "tan", "(", "theta", ")", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "x", "=", "abs", "(", "rw", "-", "cx", ")", "\n", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "y", "=", "abs", "(", "col", "-", "cy", ")", "\n", "XIntercept", "=", "x", "-", "(", "1.0", "*", "y", ")", "/", "tTheta", "\n", "if", "(", "abs", "(", "XIntercept", ")", "<", "0.75", "*", "t", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "if", "(", "(", "rw", "<", "t", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "t", ")", "or", "(", "col", "<", "t", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "t", ")", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.xpbox": [[114, 135], ["math.tan", "range", "numpy.ones", "abs", "range", "abs", "abs"], "methods", ["None"], ["", "def", "xpbox", "(", "self", ",", "t", ",", "theta", "=", "np", ".", "pi", "/", "4.", ")", ":", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "t", "=", "0.15", "*", "t", "*", "self", ".", "nelx", "\n", "cx", "=", "0.5", "*", "self", ".", "nelx", "\n", "cy", "=", "0.5", "*", "self", ".", "nely", "\n", "tTheta", "=", "math", ".", "tan", "(", "theta", ")", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "x", "=", "abs", "(", "rw", "-", "cx", ")", "\n", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "y", "=", "abs", "(", "col", "-", "cy", ")", "\n", "XIntercept", "=", "x", "-", "(", "1.0", "*", "y", ")", "/", "tTheta", "\n", "if", "(", "abs", "(", "XIntercept", ")", "<", "0.75", "*", "t", ")", ":", "# X", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "if", "(", "col", ">", "0.5", "*", "self", ".", "nely", "-", "0.5", "*", "t", "and", "col", "<", "0.5", "*", "self", ".", "nely", "+", "0.5", "*", "t", ")", ":", "# vbar", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "if", "(", "rw", ">", "0.5", "*", "self", ".", "nelx", "-", "0.5", "*", "t", "and", "rw", "<", "0.5", "*", "self", ".", "nelx", "+", "0.5", "*", "t", ")", ":", "#hbar", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "if", "(", "(", "rw", "<", "t", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "t", ")", "or", "(", "col", "<", "t", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "t", ")", ")", ":", "# box", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.Zbox": [[136, 146], ["range", "numpy.ones", "range", "abs"], "methods", ["None"], ["", "def", "Zbox", "(", "self", ",", "t", ")", ":", "\n", "# t - thickness between 0 and 1", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "t", "=", "0.25", "*", "t", "*", "self", ".", "nelx", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "if", "(", "(", "rw", "<", "t", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "t", ")", "or", "(", "col", "<", "t", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "t", ")", "or", "(", "abs", "(", "rw", "-", "col", ")", "<", "0.7", "*", "t", ")", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.Nbox": [[147, 157], ["range", "numpy.ones", "range", "abs"], "methods", ["None"], ["", "def", "Nbox", "(", "self", ",", "t", ")", ":", "\n", "# t - thickness between 0 and 1", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "t", "=", "0.25", "*", "t", "*", "self", ".", "nelx", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "if", "(", "(", "rw", "<", "t", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "t", ")", "or", "(", "col", "<", "t", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "t", ")", "or", "(", "abs", "(", "rw", "-", "col", ")", "<", "0.7", "*", "t", ")", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "self", ".", "nely", "-", "col", "-", "1", "]", "=", "1", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.diamBox": [[158, 173], ["range", "numpy.ones", "range", "numpy.abs", "numpy.abs"], "methods", ["None"], ["", "def", "diamBox", "(", "self", ",", "t", ")", ":", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "delt", "=", "0.4", "*", "t", "\n", "boxt", "=", "0.35", "*", "delt", "*", "self", ".", "nelx", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "xc", "=", "-", "1.", "+", "(", "2.", "*", "rw", ")", "/", "(", "self", ".", "nelx", "-", "1", ")", "\n", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "yc", "=", "-", "1.", "+", "(", "2.", "*", "col", ")", "/", "(", "self", ".", "nely", "-", "1", ")", "\n", "val", "=", "np", ".", "abs", "(", "xc", ")", "+", "np", ".", "abs", "(", "yc", ")", "\n", "\n", "if", "(", "val", ">", "1.", "-", "delt", "and", "val", "<", "1.", "+", "delt", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1.", "\n", "", "if", "(", "(", "rw", "<", "boxt", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "boxt", ")", "or", "(", "col", "<", "boxt", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "boxt", ")", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.diamXBox": [[174, 202], ["math.tan", "range", "numpy.ones", "abs", "range", "abs", "abs", "numpy.abs", "numpy.abs"], "methods", ["None"], ["", "def", "diamXBox", "(", "self", ",", "t", ")", ":", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "delt", "=", "0.3", "*", "t", "\n", "boxt", "=", "0.4", "*", "delt", "*", "self", ".", "nelx", "\n", "cx", "=", "0.5", "*", "self", ".", "nelx", "\n", "cy", "=", "0.5", "*", "self", ".", "nely", "\n", "theta", "=", "np", ".", "pi", "/", "4.", "\n", "tTheta", "=", "math", ".", "tan", "(", "theta", ")", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "xc", "=", "-", "1.", "+", "(", "2.", "*", "rw", ")", "/", "(", "self", ".", "nelx", "-", "1", ")", "\n", "xPlus", "=", "abs", "(", "rw", "-", "cx", ")", "\n", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "yPlus", "=", "abs", "(", "col", "-", "cy", ")", "\n", "XIntercept", "=", "xPlus", "-", "(", "1.0", "*", "yPlus", ")", "/", "tTheta", "\n", "if", "(", "abs", "(", "XIntercept", ")", "<", "0.75", "*", "boxt", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "if", "(", "(", "rw", "<", "boxt", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "boxt", ")", "or", "(", "col", "<", "boxt", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "boxt", ")", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "\n", "", "yc", "=", "-", "1.", "+", "(", "2.", "*", "col", ")", "/", "(", "self", ".", "nely", "-", "1", ")", "\n", "val", "=", "np", ".", "abs", "(", "xc", ")", "+", "np", ".", "abs", "(", "yc", ")", "\n", "\n", "if", "(", "val", ">", "1.", "-", "delt", "and", "val", "<", "1.", "+", "delt", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1.", "\n", "", "if", "(", "(", "rw", "<", "boxt", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "boxt", ")", "or", "(", "col", "<", "boxt", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "boxt", ")", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.diamHBox": [[203, 221], ["range", "numpy.ones", "range", "numpy.abs", "numpy.abs"], "methods", ["None"], ["", "def", "diamHBox", "(", "self", ",", "t", ")", ":", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "delt", "=", "0.3", "*", "t", "\n", "boxt", "=", "0.4", "*", "delt", "*", "self", ".", "nelx", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "xc", "=", "-", "1.", "+", "(", "2.", "*", "rw", ")", "/", "(", "self", ".", "nelx", "-", "1", ")", "\n", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "yc", "=", "-", "1.", "+", "(", "2.", "*", "col", ")", "/", "(", "self", ".", "nely", "-", "1", ")", "\n", "val", "=", "np", ".", "abs", "(", "xc", ")", "+", "np", ".", "abs", "(", "yc", ")", "\n", "\n", "if", "(", "val", ">", "1.", "-", "delt", "and", "val", "<", "1.", "+", "delt", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1.", "\n", "", "if", "(", "(", "rw", "<", "boxt", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "boxt", ")", "or", "(", "col", "<", "boxt", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "boxt", ")", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "if", "(", "rw", ">", "0.5", "*", "self", ".", "nelx", "-", "0.5", "*", "boxt", "and", "rw", "<", "0.5", "*", "self", ".", "nelx", "+", "0.5", "*", "boxt", ")", ":", "#bar", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.diamVBox": [[222, 239], ["range", "numpy.ones", "range", "numpy.abs", "numpy.abs"], "methods", ["None"], ["", "def", "diamVBox", "(", "self", ",", "t", ")", ":", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "delt", "=", "0.3", "*", "t", "\n", "boxt", "=", "0.4", "*", "delt", "*", "self", ".", "nelx", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "xc", "=", "-", "1.", "+", "(", "2.", "*", "rw", ")", "/", "(", "self", ".", "nelx", "-", "1", ")", "\n", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "yc", "=", "-", "1.", "+", "(", "2.", "*", "col", ")", "/", "(", "self", ".", "nely", "-", "1", ")", "\n", "val", "=", "np", ".", "abs", "(", "xc", ")", "+", "np", ".", "abs", "(", "yc", ")", "\n", "\n", "if", "(", "val", ">", "1.", "-", "delt", "and", "val", "<", "1.", "+", "delt", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1.", "\n", "", "if", "(", "(", "rw", "<", "boxt", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "boxt", ")", "or", "(", "col", "<", "boxt", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "boxt", ")", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "if", "(", "col", ">", "0.5", "*", "self", ".", "nely", "-", "0.5", "*", "boxt", "and", "col", "<", "0.5", "*", "self", ".", "nely", "+", "0.5", "*", "boxt", ")", ":", "#bar", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.diamPlusBox": [[240, 259], ["range", "numpy.ones", "range", "numpy.abs", "numpy.abs"], "methods", ["None"], ["", "def", "diamPlusBox", "(", "self", ",", "t", ")", ":", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "delt", "=", "0.3", "*", "t", "\n", "boxt", "=", "0.4", "*", "delt", "*", "self", ".", "nelx", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "xc", "=", "-", "1.", "+", "(", "2.", "*", "rw", ")", "/", "(", "self", ".", "nelx", "-", "1", ")", "\n", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "yc", "=", "-", "1.", "+", "(", "2.", "*", "col", ")", "/", "(", "self", ".", "nely", "-", "1", ")", "\n", "val", "=", "np", ".", "abs", "(", "xc", ")", "+", "np", ".", "abs", "(", "yc", ")", "\n", "\n", "if", "(", "val", ">", "1.", "-", "delt", "and", "val", "<", "1.", "+", "delt", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1.", "\n", "", "if", "(", "(", "rw", "<", "boxt", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "boxt", ")", "or", "(", "col", "<", "boxt", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "boxt", ")", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "if", "(", "col", ">", "0.5", "*", "self", ".", "nely", "-", "0.5", "*", "boxt", "and", "col", "<", "0.5", "*", "self", ".", "nely", "+", "0.5", "*", "boxt", ")", ":", "#vbar", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "if", "(", "rw", ">", "0.5", "*", "self", ".", "nelx", "-", "0.5", "*", "boxt", "and", "rw", "<", "0.5", "*", "self", ".", "nelx", "+", "0.5", "*", "boxt", ")", ":", "#hbar", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.void0": [[260, 265], ["numpy.random.uniform", "numpy.ones"], "methods", ["None"], ["", "def", "void0", "(", "self", ",", "t", ")", ":", "\n", "# default microstr for void", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "noise", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "0.01", ",", "microStr", ".", "shape", ")", "\n", "return", "microStr", "+", "noise", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.plotMicrostructure": [[266, 275], ["mc.reshape.reshape.reshape", "matplotlib.subplots", "ax.imshow", "matplotlib.title", "fig.tight_layout", "fig.show", "numpy.flipud", "matplotlib.colors.Normalize", "numpy.mean"], "methods", ["None"], ["", "def", "plotMicrostructure", "(", "self", ",", "mc", ")", ":", "\n", "    ", "mc", "=", "mc", ".", "reshape", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "\n", "ax", ".", "imshow", "(", "-", "np", ".", "flipud", "(", "mc", ")", ",", "cmap", "=", "'gray'", ",", "interpolation", "=", "'none'", ",", "norm", "=", "colors", ".", "Normalize", "(", "vmin", "=", "-", "1", ",", "vmax", "=", "0", ")", ")", "\n", "plt", ".", "title", "(", "f' vf: {np.mean(mc):.2F}'", ")", "\n", "fig", ".", "tight_layout", "(", ")", "\n", "fig", ".", "show", "(", ")", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.ThreeParamMicrostructures.__init__": [[280, 282], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "nelx", ",", "nely", ",", "eps", "=", "0", ")", ":", "\n", "    ", "self", ".", "nelx", ",", "self", ".", "nely", ",", "self", ".", "eps", "=", "nelx", ",", "nely", ",", "eps", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.ThreeParamMicrostructures.ellipticalHole": [[283, 298], ["numpy.ones", "numpy.array", "range", "range", "numpy.cos", "numpy.sin", "numpy.sin", "numpy.cos"], "methods", ["None"], ["", "def", "ellipticalHole", "(", "self", ",", "a", ",", "b", ",", "thDeg", ")", ":", "\n", "    ", "microStr", "=", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "a", "=", "0.5", "*", "a", "*", "self", ".", "nelx", "\n", "b", "=", "0.5", "*", "b", "*", "self", ".", "nely", "\n", "thRad", "=", "np", ".", "pi", "*", "thDeg", "/", "180.", "\n", "center", "=", "np", ".", "array", "(", "[", "0.5", "*", "self", ".", "nelx", ",", "0.5", "*", "self", ".", "nely", "]", ")", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "x", "=", "rw", "-", "center", "[", "1", "]", "\n", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "y", "=", "col", "-", "center", "[", "0", "]", "\n", "xrot", "=", "x", "*", "np", ".", "cos", "(", "thRad", ")", "-", "y", "*", "np", ".", "sin", "(", "thRad", ")", "\n", "yrot", "=", "x", "*", "np", ".", "sin", "(", "thRad", ")", "+", "y", "*", "np", ".", "cos", "(", "thRad", ")", "\n", "if", "(", "(", "(", "xrot", "/", "a", ")", "**", "2", "+", "(", "yrot", "/", "b", ")", "**", "2", ")", "<=", "1.", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "self", ".", "eps", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.ThreeParamMicrostructures.victorGauss": [[299, 314], ["numpy.ones", "numpy.array", "range", "numpy.abs", "range", "numpy.abs"], "methods", ["None"], ["", "def", "victorGauss", "(", "self", ",", "a", ",", "b", ",", "n", ")", ":", "\n", "# generate higher order  hole mus with semi-axis len a and b", "\n", "# a and b are floats between 0 and 1", "\n", "# center - array with 2 elems between 0 and 1 as well", "\n", "    ", "microStr", "=", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "a", "=", "0.5", "*", "a", "*", "self", ".", "nelx", "\n", "b", "=", "0.5", "*", "b", "*", "self", ".", "nely", "\n", "center", "=", "np", ".", "array", "(", "[", "0.5", "*", "self", ".", "nelx", ",", "0.5", "*", "self", ".", "nely", "]", ")", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "x", "=", "np", ".", "abs", "(", "rw", "-", "center", "[", "1", "]", ")", "\n", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "y", "=", "np", ".", "abs", "(", "col", "-", "center", "[", "0", "]", ")", "\n", "if", "(", "(", "(", "x", "/", "a", ")", "**", "n", "+", "(", "y", "/", "b", ")", "**", "n", ")", "<=", "1.", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "self", ".", "eps", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.ThreeParamMicrostructures.plotMicrostructure": [[315, 323], ["mc.reshape.reshape.reshape", "matplotlib.subplots", "ax.imshow", "fig.tight_layout", "fig.show", "numpy.flipud", "matplotlib.colors.Normalize"], "methods", ["None"], ["", "def", "plotMicrostructure", "(", "self", ",", "mc", ")", ":", "\n", "    ", "mc", "=", "mc", ".", "reshape", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "\n", "ax", ".", "imshow", "(", "-", "np", ".", "flipud", "(", "mc", ")", ",", "cmap", "=", "'gray'", ",", "interpolation", "=", "'none'", ",", "norm", "=", "colors", ".", "Normalize", "(", "vmin", "=", "-", "1", ",", "vmax", "=", "0", ")", ")", "\n", "fig", ".", "tight_layout", "(", ")", "\n", "fig", ".", "show", "(", ")", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.__init__": [[325, 329], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "nelx", "=", "10", ",", "nely", "=", "10", ",", "eps", "=", "0", ")", ":", "\n", "    ", "self", ".", "nelx", "=", "nelx", "\n", "self", ".", "nely", "=", "nely", "\n", "self", ".", "eps", "=", "eps", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.setMicroStructureSize": [[330, 333], ["None"], "methods", ["None"], ["", "def", "setMicroStructureSize", "(", "self", ",", "nelx", ",", "nely", ")", ":", "\n", "    ", "self", ".", "nelx", "=", "nelx", "\n", "self", ".", "nely", "=", "nely", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.generateRandomMicrostructure": [[334, 377], ["numpy.random.choice", "numpy.random.random", "regularMicrostructures.Microstructures.EMicroStructure", "numpy.random.random", "numpy.random.random", "regularMicrostructures.Microstructures.rectangleVoidMicrostructure", "numpy.random.random", "regularMicrostructures.Microstructures.circularVoidMicrostructure", "numpy.random.random", "regularMicrostructures.Microstructures.BarMicrostructure", "numpy.random.random", "numpy.random.random", "numpy.random.random", "random.choice", "regularMicrostructures.Microstructures.ZMicroStructure", "numpy.random.random", "int", "numpy.random.random", "random.choice", "regularMicrostructures.Microstructures.NMicroStructure", "int", "numpy.random.random", "regularMicrostructures.Microstructures.XMicrostructure", "numpy.random.random", "numpy.random.random", "regularMicrostructures.Microstructures.tictacMicrostructure", "numpy.random.random"], "methods", ["home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.EMicroStructure", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.rectangleVoidMicrostructure", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.circularVoidMicrostructure", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.BarMicrostructure", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.ZMicroStructure", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.NMicroStructure", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.XMicrostructure", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.tictacMicrostructure"], ["", "def", "generateRandomMicrostructure", "(", "self", ")", ":", "\n", "    ", "mcr", "=", "np", ".", "random", ".", "choice", "(", "[", "2", ",", "3", ",", "5", ",", "6", "]", ")", "#1+ np.random.randint(8)", "\n", "\n", "if", "(", "mcr", "==", "1", ")", ":", "\n", "      ", "t", "=", "np", ".", "random", ".", "random", "(", ")", "\n", "theta", "=", "5.", "+", "85", "*", "np", ".", "random", ".", "random", "(", ")", "\n", "microStr", "=", "self", ".", "EMicroStructure", "(", "t", ",", "theta", ")", "\n", "return", "'E'", ",", "t", ",", "theta", ",", "microStr", "\n", "", "elif", "(", "mcr", "==", "2", ")", ":", "\n", "      ", "a", "=", "np", ".", "random", ".", "random", "(", ")", "\n", "b", "=", "np", ".", "random", ".", "random", "(", ")", "\n", "microStr", "=", "self", ".", "rectangleVoidMicrostructure", "(", "a", ",", "b", ")", "\n", "return", "'rect'", ",", "a", ",", "b", ",", "microStr", "\n", "", "elif", "(", "mcr", "==", "3", ")", ":", "\n", "      ", "a", "=", "0.1", "+", "0.9", "*", "np", ".", "random", ".", "random", "(", ")", "\n", "b", "=", "0.1", "+", "0.9", "*", "np", ".", "random", ".", "random", "(", ")", "\n", "microStr", "=", "self", ".", "circularVoidMicrostructure", "(", "a", ",", "b", ")", "\n", "return", "'circ'", ",", "a", ",", "b", ",", "microStr", "\n", "", "elif", "(", "mcr", "==", "4", ")", ":", "\n", "      ", "t", "=", "np", ".", "random", ".", "random", "(", ")", "\n", "theta", "=", "5.", "+", "85", "*", "np", ".", "random", ".", "random", "(", ")", "\n", "microStr", "=", "self", ".", "BarMicrostructure", "(", "t", ",", "theta", ")", "\n", "return", "'bar'", ",", "t", ",", "theta", ",", "microStr", "\n", "", "elif", "(", "mcr", "==", "5", ")", ":", "\n", "      ", "t", "=", "np", ".", "random", ".", "random", "(", ")", "\n", "flipped", "=", "random", ".", "choice", "(", "[", "True", ",", "False", "]", ")", "\n", "microStr", "=", "self", ".", "ZMicroStructure", "(", "t", ",", "flipped", ")", "\n", "return", "'Z'", ",", "t", ",", "int", "(", "flipped", ")", ",", "microStr", "\n", "", "elif", "(", "mcr", "==", "6", ")", ":", "\n", "      ", "t", "=", "np", ".", "random", ".", "random", "(", ")", "\n", "flipped", "=", "random", ".", "choice", "(", "[", "True", ",", "False", "]", ")", "\n", "microStr", "=", "self", ".", "NMicroStructure", "(", "t", ",", "flipped", ")", "\n", "return", "'N'", ",", "t", ",", "int", "(", "flipped", ")", ",", "microStr", "\n", "", "elif", "(", "mcr", "==", "7", ")", ":", "\n", "      ", "t", "=", "np", ".", "random", ".", "random", "(", ")", "\n", "theta", "=", "0.5", "*", "np", ".", "pi", "*", "np", ".", "random", ".", "random", "(", ")", "\n", "microStr", "=", "self", ".", "XMicrostructure", "(", "t", ",", "theta", ")", "\n", "return", "'X'", ",", "t", ",", "theta", ",", "microStr", "\n", "", "elif", "(", "mcr", "==", "8", ")", ":", "\n", "      ", "t", "=", "np", ".", "random", ".", "random", "(", ")", "\n", "theta", "=", "5", "+", "85", "*", "np", ".", "random", ".", "random", "(", ")", "\n", "microStr", "=", "self", ".", "tictacMicrostructure", "(", "t", ",", "theta", ")", "\n", "return", "'tictac'", ",", "t", ",", "theta", ",", "microStr", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.rectangleVoidMicrostructure": [[380, 393], ["numpy.zeros", "range", "range"], "methods", ["None"], ["", "", "def", "rectangleVoidMicrostructure", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "# generate a rect mus with void of size a along X and b along Y", "\n", "# a and b are float between 1 and 0", "\n", "    ", "microStr", "=", "np", ".", "zeros", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "a", "=", "0.5", "*", "a", "*", "self", ".", "nelx", "\n", "b", "=", "0.5", "*", "b", "*", "self", ".", "nely", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "if", "(", "(", "rw", "<", "a", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "a", ")", "or", "(", "col", "<", "b", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "b", ")", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "else", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "self", ".", "eps", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.circularVoidMicrostructure": [[394, 409], ["numpy.ones", "numpy.array", "range", "range"], "methods", ["None"], ["", "def", "circularVoidMicrostructure", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "# generate circular hole mus with semi-axis len a and b", "\n", "# a and b are floats between 0 and 1", "\n", "# center - array with 2 elems between 0 and 1 as well", "\n", "    ", "microStr", "=", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "a", "=", "0.5", "*", "a", "*", "self", ".", "nelx", "\n", "b", "=", "0.5", "*", "b", "*", "self", ".", "nely", "\n", "center", "=", "np", ".", "array", "(", "[", "0.5", "*", "self", ".", "nelx", ",", "0.5", "*", "self", ".", "nely", "]", ")", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "x", "=", "rw", "-", "center", "[", "1", "]", "\n", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "y", "=", "col", "-", "center", "[", "0", "]", "\n", "if", "(", "(", "(", "x", "/", "a", ")", "**", "2", "+", "(", "y", "/", "b", ")", "**", "2", ")", "<=", "1.", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "self", ".", "eps", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.doubleLobeCircularVoid": [[410, 423], ["numpy.ones", "numpy.array", "numpy.array", "range", "range"], "methods", ["None"], ["", "def", "doubleLobeCircularVoid", "(", "self", ",", "a", ",", "b", ",", "yHeight", "=", "0.5", ")", ":", "\n", "    ", "microStr", "=", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "a", "=", "0.5", "*", "a", "*", "self", ".", "nelx", "\n", "b", "=", "0.5", "*", "b", "*", "self", ".", "nely", "\n", "center", "=", "[", "np", ".", "array", "(", "[", "0.", ",", "yHeight", "*", "self", ".", "nely", "]", ")", ",", "np", ".", "array", "(", "[", "self", ".", "nelx", ",", "yHeight", "*", "self", ".", "nely", "]", ")", "]", "\n", "for", "c", "in", "center", ":", "\n", "      ", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "        ", "x", "=", "rw", "-", "c", "[", "1", "]", "\n", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "          ", "y", "=", "col", "-", "c", "[", "0", "]", "\n", "if", "(", "(", "(", "x", "/", "a", ")", "**", "2", "+", "(", "y", "/", "b", ")", "**", "2", ")", "<=", "1.", ")", ":", "\n", "            ", "microStr", "[", "rw", ",", "col", "]", "=", "self", ".", "eps", "\n", "", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.BarMicrostructure": [[424, 435], ["range", "regularMicrostructures.Microstructures.rotateMicrostructure", "numpy.ones", "abs"], "methods", ["home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.rotateMicrostructure"], ["", "def", "BarMicrostructure", "(", "self", ",", "t", ",", "theta", ")", ":", "\n", "# t varies between 0 and 1", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "t", "=", "0.5", "*", "t", "*", "self", ".", "nely", "\n", "center", "=", "self", ".", "nely", "*", "0.5", "\n", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "      ", "delY", "=", "col", "-", "center", "\n", "if", "(", "abs", "(", "delY", ")", "<=", "t", ")", ":", "\n", "        ", "microStr", "[", ":", ",", "col", "]", "=", "1", "\n", "", "", "microStr", "=", "self", ".", "rotateMicrostructure", "(", "microStr", ",", "theta", ")", "\n", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.ZMicroStructure": [[436, 448], ["range", "numpy.ones", "range", "abs"], "methods", ["None"], ["", "def", "ZMicroStructure", "(", "self", ",", "t", ",", "flipped", ")", ":", "\n", "# t - thickness between 0 and 1", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "t", "=", "0.5", "*", "t", "*", "self", ".", "nelx", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "if", "(", "(", "rw", "<", "t", ")", "or", "(", "self", ".", "nelx", "-", "rw", "<", "t", ")", "or", "(", "abs", "(", "rw", "-", "col", ")", "<", "t", ")", ")", ":", "\n", "          ", "if", "(", "flipped", ")", ":", "\n", "            ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "else", ":", "\n", "            ", "microStr", "[", "self", ".", "nelx", "-", "rw", "-", "1", ",", "col", "]", "=", "1", "\n", "", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.NMicroStructure": [[449, 461], ["range", "numpy.ones", "range", "abs"], "methods", ["None"], ["", "def", "NMicroStructure", "(", "self", ",", "t", ",", "flipped", ")", ":", "\n", "# t - thickness between 0 and 1", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "t", "=", "0.5", "*", "t", "*", "self", ".", "nelx", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "if", "(", "(", "col", "<", "t", ")", "or", "(", "self", ".", "nely", "-", "col", "<", "t", ")", "or", "(", "abs", "(", "rw", "-", "col", ")", "<", "t", ")", ")", ":", "\n", "          ", "if", "(", "not", "flipped", ")", ":", "\n", "            ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "else", ":", "\n", "            ", "microStr", "[", "rw", ",", "self", ".", "nely", "-", "col", "-", "1", "]", "=", "1", "\n", "", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.XMicrostructure": [[463, 477], ["math.tan", "range", "numpy.ones", "abs", "range", "abs", "abs"], "methods", ["None"], ["", "def", "XMicrostructure", "(", "self", ",", "t", ",", "theta", ")", ":", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "t", "=", "0.5", "*", "t", "*", "self", ".", "nelx", "\n", "cx", "=", "0.5", "*", "self", ".", "nelx", "\n", "cy", "=", "0.5", "*", "self", ".", "nely", "\n", "tTheta", "=", "math", ".", "tan", "(", "theta", ")", "\n", "for", "rw", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "x", "=", "abs", "(", "rw", "-", "cx", ")", "\n", "for", "col", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "y", "=", "abs", "(", "col", "-", "cy", ")", "\n", "XIntercept", "=", "x", "-", "(", "1.0", "*", "y", ")", "/", "tTheta", "\n", "if", "(", "abs", "(", "XIntercept", ")", "<", "t", ")", ":", "\n", "          ", "microStr", "[", "rw", ",", "col", "]", "=", "1", "\n", "", "", "", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.tictacMicrostructure": [[478, 487], ["regularMicrostructures.Microstructures.rotateMicrostructure", "numpy.ones", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.rotateMicrostructure"], ["", "def", "tictacMicrostructure", "(", "self", ",", "t", ",", "theta", ")", ":", "\n", "    ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "t", "=", "0.125", "*", "t", "*", "self", ".", "nelx", "\n", "microStr", "[", "0", ":", "self", ".", "nelx", ",", "int", "(", "0.333", "*", "self", ".", "nely", "-", "t", ")", ":", "int", "(", "0.333", "*", "self", ".", "nely", "+", "t", ")", "]", "=", "1.", "\n", "microStr", "[", "0", ":", "self", ".", "nelx", ",", "int", "(", "0.667", "*", "self", ".", "nely", "-", "t", ")", ":", "int", "(", "0.669", "*", "self", ".", "nely", "+", "t", ")", "]", "=", "1.", "\n", "microStr", "[", "int", "(", "0.333", "*", "self", ".", "nelx", "-", "t", ")", ":", "int", "(", "0.333", "*", "self", ".", "nelx", "+", "t", ")", ",", "0", ":", "self", ".", "nely", "]", "=", "1.", "\n", "microStr", "[", "int", "(", "0.667", "*", "self", ".", "nelx", "-", "t", ")", ":", "int", "(", "0.667", "*", "self", ".", "nelx", "+", "t", ")", ",", "0", ":", "self", ".", "nely", "]", "=", "1.", "\n", "microStr", "=", "self", ".", "rotateMicrostructure", "(", "microStr", ",", "theta", ")", "\n", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.EMicroStructure": [[488, 497], ["regularMicrostructures.Microstructures.rotateMicrostructure", "numpy.ones", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.rotateMicrostructure"], ["", "def", "EMicroStructure", "(", "self", ",", "t", ",", "theta", ")", ":", "\n", "      ", "microStr", "=", "self", ".", "eps", "*", "np", ".", "ones", "(", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", ")", "\n", "t", "=", "0.2", "*", "t", "*", "self", ".", "nelx", "\n", "microStr", "[", "0", ":", "self", ".", "nelx", ",", "0", ":", "int", "(", "t", ")", "]", "=", "1.", "\n", "microStr", "[", "0", ":", "self", ".", "nelx", ",", "int", "(", "0.5", "*", "self", ".", "nely", "-", "t", ")", ":", "int", "(", "0.5", "*", "self", ".", "nely", "+", "t", ")", "]", "=", "1.", "\n", "microStr", "[", "0", ":", "self", ".", "nelx", ",", "int", "(", "self", ".", "nely", "-", "t", ")", ":", "self", ".", "nely", "]", "=", "1.", "\n", "microStr", "[", "0", ":", "int", "(", "t", ")", ",", "0", ":", "self", ".", "nely", "]", "=", "1.", "\n", "microStr", "=", "self", ".", "rotateMicrostructure", "(", "microStr", ",", "theta", ")", "\n", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.rotateMicrostructure": [[498, 510], ["scipy.ndimage.rotate", "range", "range", "max", "min"], "methods", ["None"], ["", "def", "rotateMicrostructure", "(", "self", ",", "microStr", ",", "th", ")", ":", "\n", "    ", "microStr", "=", "rotate", "(", "microStr", ",", "th", ",", "reshape", "=", "False", ",", "order", "=", "0", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "nelx", ")", ":", "\n", "      ", "for", "j", "in", "range", "(", "self", ".", "nely", ")", ":", "\n", "        ", "microStr", "[", "i", ",", "j", "]", "=", "max", "(", "self", ".", "eps", ",", "min", "(", "1", ",", "microStr", "[", "i", ",", "j", "]", ")", ")", "\n", "#    # give a border of a few pixel thick to ensure continuity", "\n", "", "", "t", "=", "1", "# t pixel thick border", "\n", "microStr", "[", "0", ":", "self", ".", "nelx", ",", "0", ":", "t", "]", "=", "1", "\n", "microStr", "[", "0", ":", "self", ".", "nelx", ",", "self", ".", "nely", "-", "t", ":", "self", ".", "nely", "]", "=", "1", "\n", "microStr", "[", "0", ":", "t", ",", "0", ":", "self", ".", "nely", "]", "=", "1", "\n", "microStr", "[", "self", ".", "nelx", "-", "t", ":", "self", ".", "nelx", ",", "0", ":", "self", ".", "nely", "]", "=", "1", "\n", "return", "microStr", "\n", "#------------------------------------------------------------------------#", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.plotMicrostructure": [[511, 519], ["mc.reshape.reshape.reshape", "matplotlib.subplots", "ax.imshow", "fig.tight_layout", "fig.show", "numpy.flipud", "matplotlib.colors.Normalize"], "methods", ["None"], ["", "def", "plotMicrostructure", "(", "self", ",", "mc", ")", ":", "\n", "    ", "mc", "=", "mc", ".", "reshape", "(", "self", ".", "nelx", ",", "self", ".", "nely", ")", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "\n", "ax", ".", "imshow", "(", "-", "np", ".", "flipud", "(", "mc", ")", ",", "cmap", "=", "'gray'", ",", "interpolation", "=", "'none'", ",", "norm", "=", "colors", ".", "Normalize", "(", "vmin", "=", "-", "1", ",", "vmax", "=", "0", ")", ")", ";", "# self.topAx", "\n", "fig", ".", "tight_layout", "(", ")", "# self.topFig", "\n", "fig", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.to_np": [[12, 14], ["x.detach().cpu().numpy", "x.detach().cpu", "x.detach"], "function", ["None"], ["def", "to_np", "(", "x", ")", ":", "\n", "  ", "return", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.generateMstrImages": [[520, 543], ["numpy.arange", "regularMicrostructures.SingleParamMicrostructures", "numpy.zeros", "range", "numpy.save", "len", "range", "regularMicrostructures.SingleParamMicrostructures.square", "regularMicrostructures.SingleParamMicrostructures.Xbox", "regularMicrostructures.SingleParamMicrostructures.X", "regularMicrostructures.SingleParamMicrostructures.diamBox", "regularMicrostructures.SingleParamMicrostructures.xpbox", "regularMicrostructures.SingleParamMicrostructures.diamPlusBox", "regularMicrostructures.SingleParamMicrostructures.diamXBox", "regularMicrostructures.SingleParamMicrostructures.Zbox", "regularMicrostructures.SingleParamMicrostructures.Nbox", "regularMicrostructures.SingleParamMicrostructures.diamVBox", "regularMicrostructures.SingleParamMicrostructures.diamHBox", "len", "print", "str", "len"], "function", ["home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.square", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.Xbox", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.X", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.diamBox", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.xpbox", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.diamPlusBox", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.diamXBox", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.Zbox", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.Nbox", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.diamVBox", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.diamHBox"], ["", "", "def", "generateMstrImages", "(", "step", "=", "0.01", ")", ":", "\n", "  ", "t", "=", "np", ".", "arange", "(", "0", ",", "1.", ",", "step", ")", "\n", "nelx", ",", "nely", "=", "50", ",", "50", "\n", "M", "=", "SingleParamMicrostructures", "(", "nelx", ",", "nely", ")", "\n", "mstrFn", "=", "{", "'0'", ":", "lambda", "t", ":", "M", ".", "square", "(", "t", ")", ",", "'1'", ":", "lambda", "t", ":", "M", ".", "Xbox", "(", "t", ")", ",", "'2'", ":", "lambda", "t", ":", "M", ".", "X", "(", "t", ")", ",", "'3'", ":", "lambda", "t", ":", "M", ".", "diamBox", "(", "t", ")", ",", "'4'", ":", "lambda", "t", ":", "M", ".", "xpbox", "(", "t", ")", ",", "'5'", ":", "lambda", "t", ":", "M", ".", "diamPlusBox", "(", "t", ")", ",", "'6'", ":", "lambda", "t", ":", "M", ".", "diamXBox", "(", "t", ")", ",", "'7'", ":", "lambda", "t", ":", "M", ".", "Zbox", "(", "t", ")", ",", "'8'", ":", "lambda", "t", ":", "M", ".", "Nbox", "(", "t", ")", ",", "'9'", ":", "lambda", "t", ":", "M", ".", "diamVBox", "(", "t", ")", ",", "'10'", ":", "lambda", "t", ":", "M", ".", "diamHBox", "(", "t", ")", "}", "\n", "microstructures", "=", "np", ".", "zeros", "(", "(", "len", "(", "mstrFn", ")", ",", "t", ".", "shape", "[", "0", "]", ",", "nelx", ",", "nely", ")", ")", "\n", "for", "m", "in", "range", "(", "len", "(", "mstrFn", ")", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "t", ".", "shape", "[", "0", "]", ")", ":", "\n", "      ", "print", "(", "f'{m*t.shape[0] + i:d}/{(t.shape[0]*len(mstrFn)):d}'", ")", "\n", "mstr", "=", "mstrFn", "[", "str", "(", "m", ")", "]", "(", "t", "[", "i", "]", ")", "\n", "microstructures", "[", "m", ",", "i", ",", ":", ",", ":", "]", "=", "mstr", "\n", "\n", "", "", "np", ".", "save", "(", "'./microStrImages.npy'", ",", "microstructures", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.test": [[551, 570], ["matplotlib.close", "regularMicrostructures.SingleParamMicrostructures", "regularMicrostructures.SingleParamMicrostructures.diamXBox", "regularMicrostructures.SingleParamMicrostructures.plotMicrostructure", "homogenize.Homogenization", "time.perf_counter", "print", "numpy.mean", "print", "matplotlib.show", "time.perf_counter"], "function", ["home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.SingleParamMicrostructures.diamXBox", "home.repos.pwc.inspect_result.uw-ersl_gmtounn.generateMstrImages.regularMicrostructures.Microstructures.plotMicrostructure"], ["def", "test", "(", ")", ":", "\n", "  ", "plt", ".", "close", "(", "'all'", ")", "\n", "nelx", ",", "nely", "=", "200", ",", "200", "\n", "lx", ",", "ly", "=", "1.", ",", "1.", "\n", "M", "=", "SingleParamMicrostructures", "(", "nelx", ",", "nely", ")", "\n", "t", "=", "0.95", "\n", "mstr", "=", "M", ".", "diamXBox", "(", "t", ")", "\n", "\n", "M", ".", "plotMicrostructure", "(", "mstr", ")", "\n", "\n", "matProp", "=", "{", "'type'", ":", "'Hooke'", ",", "'E'", ":", "1.0", ",", "'nu'", ":", "0.3", "}", "\n", "H", "=", "Homogenization", "(", "lx", ",", "ly", ",", "nelx", ",", "nely", ",", "90", ",", "matProp", ",", "1", ")", "\n", "start", "=", "time", ".", "perf_counter", "(", ")", "\n", "# ch =H.homogenize(mstr)", "\n", "print", "(", "'tiomesds '", ",", "time", ".", "perf_counter", "(", ")", "-", "start", ")", "\n", "vf", "=", "np", ".", "mean", "(", "mstr", ")", "\n", "# print('ch :', ch)", "\n", "print", "(", "'vf :'", ",", "vf", ")", "\n", "plt", ".", "show", "(", "block", "=", "True", ")", "\n", "# test()", "\n"]]}