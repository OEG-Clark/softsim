{"home.repos.pwc.inspect_result.rycolab_artificial-languages.None.get_sentence_scores.total_sentence_score": [[4, 9], ["float", "w.split"], "function", ["None"], ["def", "total_sentence_score", "(", "words", ")", ":", "\n", "    ", "score", "=", "0", "\n", "for", "w", "in", "words", ":", "\n", "        ", "score", "+=", "float", "(", "w", ".", "split", "(", "' '", ")", "[", "1", "]", "[", "1", ":", "-", "1", "]", ")", "\n", "", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.None.compile_results.get_perplexity": [[6, 11], ["open", "open.readlines", "lines[].strip", "float", "lines[].strip.split"], "function", ["None"], ["def", "get_perplexity", "(", "filename", ")", ":", "\n", "\t", "file", "=", "open", "(", "filename", ",", "'r'", ")", "\n", "lines", "=", "file", ".", "readlines", "(", ")", "\n", "final_line", "=", "lines", "[", "-", "1", "]", ".", "strip", "(", "'\\n'", ")", "\n", "return", "float", "(", "final_line", ".", "split", "(", "\" \"", ")", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.None.compile_results.calc_sd": [[12, 15], ["compile_results.calc_mean", "math.sqrt", "sum", "len"], "function", ["home.repos.pwc.inspect_result.rycolab_artificial-languages.None.compile_results.calc_mean"], ["", "def", "calc_sd", "(", "vals", ")", ":", "\n", "\t", "mean", "=", "calc_mean", "(", "vals", ")", "\n", "return", "math", ".", "sqrt", "(", "sum", "(", "[", "(", "x", "-", "mean", ")", "**", "2", "for", "x", "in", "vals", "]", ")", "/", "len", "(", "vals", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.None.compile_results.calc_mean": [[16, 18], ["sum", "len"], "function", ["None"], ["", "def", "calc_mean", "(", "vals", ")", ":", "\n", "\t", "return", "sum", "(", "vals", ")", "/", "len", "(", "vals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.permute_sentences.flip_as_needed": [[7, 18], ["sentence.split", "range", "len", "[].isnumeric", "range", "int", "permute_sentences.reversed_children"], "function", ["home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.permute_sentences.reversed_children"], ["def", "flip_as_needed", "(", "i", ",", "sentence", ")", ":", "\n", "    ", "to_flip", "=", "[", "j", "+", "1", "for", "j", "in", "range", "(", "6", ")", "if", "(", "i", ">>", "j", ")", "&", "1", "==", "1", "]", "\n", "s_split", "=", "sentence", ".", "split", "(", "\" \"", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "s_split", ")", ")", ":", "\n", "        ", "if", "s_split", "[", "j", "]", "[", "0", "]", ".", "isnumeric", "(", ")", ":", "\n", "            ", "if", "int", "(", "s_split", "[", "j", "]", "[", "0", "]", ")", "in", "to_flip", ":", "\n", "                ", "reversed_end", "=", "reversed_children", "(", "s_split", "[", "j", "+", "1", ":", "]", ")", "\n", "s_split", "=", "s_split", "[", ":", "j", "+", "1", "]", "+", "reversed_end", "\n", "", "", "else", ":", "\n", "            ", "continue", "\n", "", "", "return", "' '", ".", "join", "(", "s_split", ")", ".", "strip", "(", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.permute_sentences.reversed_children": [[19, 44], ["range", "len", "bracket_stack.append", "len", "bracket_stack.pop", "len", "children.append"], "function", ["None"], ["", "def", "reversed_children", "(", "sentence_part", ")", ":", "\n", "    ", "children", "=", "[", "]", "\n", "bracket_stack", "=", "[", "]", "\n", "L_brack", "=", "'('", "\n", "R_brack", "=", "')'", "\n", "children_end", "=", "-", "1", "\n", "for", "i", "in", "range", "(", "len", "(", "sentence_part", ")", ")", ":", "\n", "        ", "s", "=", "sentence_part", "[", "i", "]", "\n", "if", "s", "==", "L_brack", ":", "\n", "            ", "bracket_stack", ".", "append", "(", "(", "L_brack", ",", "i", ")", ")", "\n", "", "elif", "s", "==", "R_brack", ":", "\n", "            ", "if", "len", "(", "bracket_stack", ")", ">", "0", ":", "\n", "                ", "if", "bracket_stack", "[", "-", "1", "]", "[", "0", "]", "==", "L_brack", ":", "\n", "                    ", "opening", "=", "bracket_stack", ".", "pop", "(", ")", "\n", "if", "len", "(", "bracket_stack", ")", "==", "0", ":", "\n", "                        ", "children", ".", "append", "(", "sentence_part", "[", "opening", "[", "1", "]", ":", "i", "+", "1", "]", ")", "\n", "", "", "", "else", ":", "\n", "                ", "children_end", "=", "i", "-", "1", "\n", "break", "\n", "", "", "else", ":", "\n", "            ", "continue", "\n", "", "", "children_reversed", "=", "[", "]", "\n", "for", "c", "in", "children", "[", ":", ":", "-", "1", "]", ":", "\n", "        ", "children_reversed", "+=", "c", "\n", "", "return", "children_reversed", "+", "sentence_part", "[", "children_end", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.permute_sentences.remove_bracketing": [[45, 59], ["s.split", "new_s.append", "len", "new_s.append"], "function", ["None"], ["", "def", "remove_bracketing", "(", "s", ")", ":", "\n", "    ", "new_s", "=", "[", "]", "\n", "split_s", "=", "s", ".", "split", "(", "\" \"", ")", "\n", "i", "=", "0", "\n", "while", "i", "<", "len", "(", "split_s", ")", ":", "\n", "        ", "if", "split_s", "[", "i", "]", "==", "\")\"", ":", "\n", "            ", "i", "+=", "1", "\n", "", "elif", "split_s", "[", "i", "]", "==", "\"(\"", ":", "\n", "            ", "i", "+=", "2", "\n", "", "else", ":", "\n", "            ", "new_s", ".", "append", "(", "split_s", "[", "i", "]", ")", "\n", "i", "+=", "1", "\n", "", "", "new_s", ".", "append", "(", "\".\"", ")", "\n", "return", "' '", ".", "join", "(", "new_s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.permute_sentences.generate_sentence_file": [[60, 65], ["open", "open.close", "open.write", "permute_sentences.remove_bracketing", "permute_sentences.flip_as_needed"], "function", ["home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.permute_sentences.remove_bracketing", "home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.permute_sentences.flip_as_needed"], ["", "def", "generate_sentence_file", "(", "i", ",", "sentences", ",", "output_file", ")", ":", "\n", "    ", "output_f", "=", "open", "(", "output_file", ",", "'w'", ")", "\n", "for", "s", "in", "sentences", ":", "\n", "        ", "output_f", ".", "write", "(", "remove_bracketing", "(", "flip_as_needed", "(", "i", ",", "s", ")", ")", "+", "\"\\n\"", ")", "\n", "", "output_f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.sample_sentences.PCFG.__init__": [[10, 14], ["sample_sentences.PCFG.load_rules"], "methods", ["home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.sample_sentences.PCFG.load_rules"], ["def", "__init__", "(", "self", ",", "grammar_file", ")", ":", "\n", "        ", "self", ".", "rules", "=", "None", "\n", "self", ".", "change_rules", "=", "None", "\n", "self", ".", "load_rules", "(", "grammar_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.sample_sentences.PCFG.load_rules": [[15, 45], ["open", "open.readlines", "new_rules.items", "l.startswith", "poss_rhs.append", "len", "l.find", "len", "l.rstrip().split", "new_rules.keys", "l.rstrip().split", "len", "l.rstrip().split", "float", "l.find", "l.rstrip", "l.rstrip().split", "l.rstrip", "l.rstrip", "l.rstrip"], "methods", ["None"], ["", "def", "load_rules", "(", "self", ",", "grammar_file", ")", ":", "\n", "        ", "new_rules", "=", "{", "}", "\n", "change", "=", "{", "}", "\n", "g_file", "=", "open", "(", "grammar_file", ",", "'r'", ")", "\n", "lines", "=", "g_file", ".", "readlines", "(", ")", "\n", "for", "l", "in", "lines", ":", "\n", "            ", "if", "l", ".", "startswith", "(", "(", "'#'", ",", "\" \"", ",", "\"\\t\"", ",", "\"\\n\"", ")", ")", "or", "len", "(", "l", ")", "<", "1", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "if", "l", ".", "find", "(", "\"#\"", ")", "!=", "-", "1", ":", "\n", "                    ", "l", "=", "l", "[", ":", "l", ".", "find", "(", "\"#\"", ")", "]", "\n", "", "idx", "=", "-", "1", "\n", "if", "len", "(", "l", ".", "rstrip", "(", ")", ".", "split", "(", "\"\\t\"", ")", ")", "==", "3", ":", "\n", "                    ", "weight", ",", "lhs", ",", "rhs", "=", "l", ".", "rstrip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "", "elif", "len", "(", "l", ".", "rstrip", "(", ")", ".", "split", "(", "\"\\t\"", ")", ")", "==", "4", ":", "\n", "                    ", "weight", ",", "lhs", ",", "rhs", ",", "idx", "=", "l", ".", "rstrip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "", "if", "lhs", "not", "in", "new_rules", ".", "keys", "(", ")", ":", "\n", "                    ", "new_rules", "[", "lhs", "]", "=", "[", "]", "\n", "", "poss_rhs", "=", "new_rules", "[", "lhs", "]", "\n", "poss_rhs", ".", "append", "(", "[", "rhs", ",", "float", "(", "weight", ")", "]", ")", "\n", "if", "idx", "!=", "-", "1", ":", "\n", "                    ", "change", "[", "lhs", "+", "\"\\t\"", "+", "rhs", "]", "=", "idx", "\n", "", "", "", "for", "lhs", ",", "poss", "in", "new_rules", ".", "items", "(", ")", ":", "\n", "            ", "total", "=", "0", "\n", "for", "rhs", "in", "poss", ":", "\n", "                ", "total", "+=", "rhs", "[", "1", "]", "\n", "", "for", "rhs", "in", "poss", ":", "\n", "                ", "rhs", "[", "1", "]", "/=", "total", "\n", "", "", "self", ".", "rules", "=", "new_rules", "\n", "self", ".", "change_rules", "=", "change", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.sample_sentences.PCFG.sample_sentence": [[46, 86], ["range", "sample_sentences.PCFG.rules.keys", "sample_sentences.PCFG.expand", "len", "len", "len", "sample_sentences.PCFG.rules.keys", "sample_sentences.PCFG.rules.keys"], "methods", ["home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.sample_sentences.PCFG.expand"], ["", "def", "sample_sentence", "(", "self", ",", "max_expansions", ",", "bracketing", ")", ":", "\n", "        ", "self", ".", "expansions", "=", "0", "\n", "done", "=", "False", "\n", "sent", "=", "[", "\"ROOT\"", "]", "\n", "idx", "=", "0", "\n", "while", "not", "done", ":", "\n", "            ", "if", "sent", "[", "idx", "]", "not", "in", "self", ".", "rules", ".", "keys", "(", ")", ":", "\n", "                ", "idx", "+=", "1", "\n", "if", "idx", ">=", "len", "(", "sent", ")", ":", "\n", "                    ", "done", "=", "True", "\n", "", "continue", "\n", "", "else", ":", "\n", "                ", "replace", ",", "change_idx", "=", "self", ".", "expand", "(", "sent", "[", "idx", "]", ")", "\n", "if", "bracketing", ":", "\n", "                    ", "if", "change_idx", "==", "-", "1", ":", "\n", "                        ", "sent", "=", "(", "sent", "[", ":", "idx", "]", "\n", "+", "[", "\"(\"", ",", "sent", "[", "idx", "]", "]", "+", "replace", "+", "[", "\")\"", "]", "\n", "+", "sent", "[", "idx", "+", "1", ":", "]", ")", "\n", "", "else", ":", "\n", "                        ", "sent", "=", "(", "sent", "[", ":", "idx", "]", "\n", "+", "[", "\"(\"", ",", "change_idx", "+", "sent", "[", "idx", "]", "]", "+", "replace", "+", "[", "\")\"", "]", "\n", "+", "sent", "[", "idx", "+", "1", ":", "]", ")", "\n", "", "", "else", ":", "\n", "                    ", "sent", "=", "sent", "[", ":", "idx", "]", "+", "replace", "+", "sent", "[", "idx", "+", "1", ":", "]", "\n", "", "self", ".", "expansions", "+=", "1", "\n", "if", "bracketing", ":", "\n", "                    ", "idx", "+=", "2", "\n", "", "if", "self", ".", "expansions", ">", "max_expansions", ":", "\n", "                    ", "done", "=", "True", "\n", "", "if", "idx", ">=", "len", "(", "sent", ")", ":", "\n", "                    ", "done", "=", "True", "\n", "", "", "", "if", "self", ".", "expansions", ">", "max_expansions", ":", "\n", "            ", "for", "idx", "in", "range", "(", "len", "(", "sent", ")", ")", ":", "\n", "                ", "if", "not", "bracketing", ":", "\n", "                    ", "if", "sent", "[", "idx", "]", "in", "self", ".", "rules", ".", "keys", "(", ")", ":", "\n", "                        ", "sent", "[", "idx", "]", "=", "\"...\"", "\n", "", "", "else", ":", "\n", "                    ", "if", "sent", "[", "idx", "]", "in", "self", ".", "rules", ".", "keys", "(", ")", "and", "sent", "[", "idx", "-", "1", "]", "!=", "\"(\"", ":", "\n", "                        ", "sent", "[", "idx", "]", "=", "\"...\"", "\n", "", "", "", "", "return", "' '", ".", "join", "(", "sent", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.sample_sentences.PCFG.expand": [[87, 101], ["random.random", "rhs.split", "sample_sentences.PCFG.change_rules.keys"], "methods", ["None"], ["", "def", "expand", "(", "self", ",", "symbol", ")", ":", "\n", "        ", "poss", "=", "self", ".", "rules", "[", "symbol", "]", "\n", "sample", "=", "random", ".", "random", "(", ")", "\n", "val", "=", "0.0", "\n", "rhs", "=", "\"\"", "\n", "idx", "=", "-", "1", "\n", "for", "p", "in", "poss", ":", "\n", "            ", "val", "+=", "p", "[", "1", "]", "\n", "if", "sample", "<=", "val", ":", "\n", "                ", "if", "symbol", "+", "\"\\t\"", "+", "p", "[", "0", "]", "in", "self", ".", "change_rules", ".", "keys", "(", ")", ":", "\n", "                    ", "idx", "=", "self", ".", "change_rules", "[", "symbol", "+", "\"\\t\"", "+", "p", "[", "0", "]", "]", "\n", "", "rhs", "=", "p", "[", "0", "]", "\n", "break", "\n", "", "", "return", "rhs", ".", "split", "(", "\" \"", ")", ",", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.sample_sentences.sample_sentences": [[102, 111], ["open", "sample_sentences.PCFG", "range", "os.path.exists", "os.mkdir", "grammar_file[].split", "os.path.join", "open.write", "sample_sentences.PCFG.sample_sentence"], "function", ["home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.sample_sentences.PCFG.sample_sentence"], ["", "", "def", "sample_sentences", "(", "grammar_file", ",", "n", ",", "m", ",", "output_folder", ",", "bracketing", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "output_folder", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "output_folder", ")", "\n", "", "grammar_name", "=", "grammar_file", "[", ":", "-", "3", "]", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "output_file", "=", "open", "(", "os", ".", "path", ".", "join", "(", "output_folder", ",", "\n", "\"sample_\"", "+", "grammar_name", "+", "\".txt\"", ")", ",", "'w'", ")", "\n", "grammar", "=", "PCFG", "(", "grammar_file", ")", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "        ", "output_file", ".", "write", "(", "grammar", ".", "sample_sentence", "(", "m", ",", "bracketing", ")", "+", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.data_gen.make_splits.create_splits": [[5, 32], ["open", "open.readlines", "len", "os.path.join", "range", "os.path.exists", "os.mkdir", "sample_file[].split", "os.path.exists", "os.mkdir", "int", "int", "len", "open", "open", "open", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "open.write", "open.write", "open.write", "int", "int", "int", "int", "str", "str", "str"], "function", ["None"], ["def", "create_splits", "(", "sample_file", ",", "num_splits", ",", "train", ",", "test", ",", "dev", ",", "output_folder", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "output_folder", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "output_folder", ")", "\n", "", "sentence_file", "=", "open", "(", "sample_file", ",", "'r'", ")", "\n", "all_sentences", "=", "sentence_file", ".", "readlines", "(", ")", "\n", "num_all_sent", "=", "len", "(", "all_sentences", ")", "\n", "grammar_name", "=", "sample_file", "[", ":", "-", "4", "]", ".", "split", "(", "\"_\"", ")", "[", "-", "1", "]", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "output_folder", ",", "grammar_name", ")", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "os", ".", "path", ".", "join", "(", "output_folder", ",", "grammar_name", ")", ")", "\n", "", "grammar_output", "=", "os", ".", "path", ".", "join", "(", "output_folder", ",", "grammar_name", ")", "\n", "for", "i", "in", "range", "(", "num_splits", ")", ":", "\n", "        ", "start", "=", "int", "(", "i", "*", "(", "1", "/", "num_splits", ")", "*", "num_all_sent", ")", "\n", "end", "=", "int", "(", "(", "i", "+", "1", ")", "*", "(", "1", "/", "num_splits", ")", "*", "num_all_sent", ")", "\n", "sentences", "=", "all_sentences", "[", "start", ":", "end", "]", "\n", "num_sent", "=", "len", "(", "sentences", ")", "\n", "trn_output", "=", "open", "(", "os", ".", "path", ".", "join", "(", "grammar_output", ",", "str", "(", "i", ")", "+", "\".trn\"", ")", ",", "'w'", ")", "\n", "tst_output", "=", "open", "(", "os", ".", "path", ".", "join", "(", "grammar_output", ",", "str", "(", "i", ")", "+", "\".tst\"", ")", ",", "'w'", ")", "\n", "dev_output", "=", "open", "(", "os", ".", "path", ".", "join", "(", "grammar_output", ",", "str", "(", "i", ")", "+", "\".dev\"", ")", ",", "'w'", ")", "\n", "trn_split", "=", "sentences", "[", ":", "int", "(", "train", "*", "num_sent", ")", "]", "\n", "tst_split", "=", "sentences", "[", "int", "(", "train", "*", "num_sent", ")", ":", "int", "(", "(", "train", "+", "test", ")", "*", "num_sent", ")", "]", "\n", "dev_split", "=", "sentences", "[", "int", "(", "(", "train", "+", "test", ")", "*", "num_sent", ")", ":", "]", "\n", "for", "s", "in", "trn_split", ":", "\n", "            ", "trn_output", ".", "write", "(", "s", ")", "\n", "", "for", "s", "in", "tst_split", ":", "\n", "            ", "tst_output", ".", "write", "(", "s", ")", "\n", "", "for", "s", "in", "dev_split", ":", "\n", "            ", "dev_output", ".", "write", "(", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.results_analysis.permutation_test.permutation_test": [[6, 22], ["abs", "range", "len", "len", "range", "abs", "sum", "len", "len", "random.randint", "len", "range", "len"], "function", ["None"], ["def", "permutation_test", "(", "v1", ",", "v2", ",", "s", ")", ":", "\n", "    ", "assert", "(", "len", "(", "v1", ")", "==", "len", "(", "v2", ")", ")", "\n", "diff_av", "=", "abs", "(", "sum", "(", "[", "(", "v1", "[", "i", "]", "-", "v2", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "v1", ")", ")", "]", ")", "/", "len", "(", "v1", ")", ")", "\n", "swapped_av", "=", "0", "\n", "for", "i", "in", "range", "(", "s", ")", ":", "\n", "        ", "diff_tot", "=", "0", "\n", "for", "j", "in", "range", "(", "len", "(", "v1", ")", ")", ":", "\n", "            ", "diff", "=", "v1", "[", "j", "]", "-", "v2", "[", "j", "]", "\n", "flip", "=", "random", ".", "randint", "(", "0", ",", "1", ")", "\n", "if", "flip", ":", "\n", "                ", "diff", "=", "-", "diff", "\n", "", "diff_tot", "+=", "diff", "\n", "", "swapped_diff_av", "=", "abs", "(", "diff_tot", "/", "len", "(", "v1", ")", ")", "\n", "if", "swapped_diff_av", ">=", "diff_av", ":", "\n", "            ", "swapped_av", "+=", "1", "\n", "", "", "return", "swapped_av", "/", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.results_analysis.mixed_model.read_scores_from_file": [[8, 15], ["open", "open.readlines", "range", "len", "indxd_scores.append", "float", "scores[].strip"], "function", ["None"], ["def", "read_scores_from_file", "(", "filename", ")", ":", "\n", "    ", "score_file", "=", "open", "(", "filename", ",", "'r'", ")", "\n", "scores", "=", "score_file", ".", "readlines", "(", ")", "\n", "indxd_scores", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "scores", ")", ")", ":", "\n", "        ", "indxd_scores", ".", "append", "(", "(", "i", ",", "-", "1.0", "*", "float", "(", "scores", "[", "i", "]", ".", "strip", "(", "\"\\n\"", ")", ")", ")", ")", "\n", "", "return", "indxd_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.results_analysis.mixed_model.get_cross_interactions": [[16, 22], ["range", "len", "range", "len", "cross.append"], "function", ["None"], ["", "def", "get_cross_interactions", "(", "attribs", ")", ":", "\n", "    ", "cross", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "attribs", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "len", "(", "attribs", ")", ")", ":", "\n", "            ", "cross", ".", "append", "(", "attribs", "[", "i", "]", "+", "\"_\"", "+", "attribs", "[", "j", "]", ")", "\n", "", "", "return", "cross", "\n", "\n"]], "home.repos.pwc.inspect_result.rycolab_artificial-languages.results_analysis.mixed_model.get_dataframe": [[23, 50], ["pandas.DataFrame", "print", "results_df.append.astype", "results_df.append.head", "os.path.join", "mixed_model.read_scores_from_file", "len", "results_df.append.to_csv", "os.listdir", "f.endswith", "[].split", "range", "results_df.append.append", "os.path.join", "attrib_vals.append", "len", "attrib_vals.append", "f.split"], "function", ["home.repos.pwc.inspect_result.rycolab_artificial-languages.results_analysis.mixed_model.read_scores_from_file"], ["", "def", "get_dataframe", "(", "file_location", ",", "output", ",", "attribs", ")", ":", "\n", "    ", "columns", "=", "[", "'sent_id'", ",", "'score'", "]", "+", "attribs", "\n", "results_df", "=", "pd", ".", "DataFrame", "(", "columns", "=", "columns", ")", "\n", "print", "(", "results_df", ".", "head", "(", ")", ")", "\n", "\n", "score_files", "=", "[", "os", ".", "path", ".", "join", "(", "file_location", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "\n", "os", ".", "path", ".", "join", "(", "file_location", ")", ")", "if", "f", ".", "endswith", "(", "'.txt'", ")", "]", "\n", "\n", "for", "f", "in", "score_files", ":", "\n", "        ", "scores", "=", "read_scores_from_file", "(", "f", ")", "\n", "grammar_name", "=", "f", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ".", "split", "(", "\"_\"", ")", "[", "0", "]", "\n", "attrib_vals", "=", "[", "]", "\n", "for", "c", "in", "grammar_name", ":", "\n", "            ", "if", "c", "==", "'0'", ":", "\n", "                ", "attrib_vals", ".", "append", "(", "-", "1.0", ")", "\n", "", "elif", "c", "==", "'1'", ":", "\n", "                ", "attrib_vals", ".", "append", "(", "1.0", ")", "\n", "", "", "for", "s", "in", "scores", ":", "\n", "            ", "to_append", "=", "{", "'sent_id'", ":", "s", "[", "0", "]", ",", "'score'", ":", "s", "[", "1", "]", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "attribs", ")", ")", ":", "\n", "                ", "to_append", "[", "attribs", "[", "i", "]", "]", "=", "attrib_vals", "[", "i", "]", "\n", "", "results_df", "=", "results_df", ".", "append", "(", "to_append", ",", "ignore_index", "=", "True", ")", "\n", "\n", "", "", "results_df", "=", "results_df", ".", "astype", "(", "{", "'sent_id'", ":", "'int64'", "}", ")", "\n", "if", "len", "(", "output", ")", ">", "0", ":", "\n", "        ", "results_df", ".", "to_csv", "(", "output", ",", "index", "=", "False", ")", "\n", "", "return", "results_df", "\n", "\n"]]}