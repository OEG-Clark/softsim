{"home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.trainer.Trainer.__init__": [[10, 32], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "config", ",", "encoder", ",", "\n", "dictionary_decoder", ",", "corpus_decoder", ",", "\n", "encoder_optim", ",", "dictionary_decoder_optim", ",", "\n", "corpus_decoder_optim", ",", "criterion", ",", "device", ",", "\n", "save_prefix", ")", ":", "\n", "\n", "        ", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "dictionary_decoder", "=", "dictionary_decoder", "\n", "self", ".", "corpus_decoder", "=", "corpus_decoder", "\n", "self", ".", "encoder_optim", "=", "encoder_optim", "\n", "self", ".", "dictionary_decoder_optim", "=", "dictionary_decoder_optim", "\n", "self", ".", "corpus_decoder_optim", "=", "corpus_decoder_optim", "\n", "self", ".", "criterion", "=", "criterion", "\n", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "save_prefix", "=", "save_prefix", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "dictionary_weight", "=", "config", "[", "'dictionary_weight'", "]", "\n", "self", ".", "corpus_weight", "=", "config", "[", "'corpus_weight'", "]", "\n", "self", ".", "adversarial_weight", "=", "config", "[", "'adversarial_weight'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.trainer.Trainer.set_hyperparameter": [[34, 37], ["None"], "methods", ["None"], ["", "def", "set_hyperparameter", "(", "self", ",", "model_type", ")", ":", "\n", "        ", "self", ".", "epoch", "=", "self", ".", "config", "[", "f'{model_type}_epoch'", "]", "\n", "self", ".", "early_stop", "=", "self", ".", "config", "[", "f'{model_type}_early_stop'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.trainer.Trainer.change_model_mode": [[39, 51], ["trainer.Trainer.encoder.train", "trainer.Trainer.dictionary_decoder.train", "trainer.Trainer.corpus_decoder.train", "trainer.Trainer.criterion.train", "trainer.Trainer.encoder.eval", "trainer.Trainer.dictionary_decoder.eval", "trainer.Trainer.corpus_decoder.eval", "trainer.Trainer.criterion.eval"], "methods", ["None"], ["", "def", "change_model_mode", "(", "self", ",", "mode", ")", ":", "\n", "        ", "assert", "mode", "in", "[", "'train'", ",", "'eval'", "]", ",", "'Please select mode [train, eval]'", "\n", "if", "mode", "==", "'train'", ":", "\n", "            ", "self", ".", "encoder", ".", "train", "(", ")", "\n", "self", ".", "dictionary_decoder", ".", "train", "(", ")", "\n", "self", ".", "corpus_decoder", ".", "train", "(", ")", "\n", "self", ".", "criterion", ".", "train", "(", ")", "\n", "", "elif", "mode", "==", "'eval'", ":", "\n", "            ", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "dictionary_decoder", ".", "eval", "(", ")", "\n", "self", ".", "corpus_decoder", ".", "eval", "(", ")", "\n", "self", ".", "criterion", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.trainer.Trainer.dictionary_step": [[53, 57], ["trainer.Trainer.dictionary_decoder", "trainer.Trainer.criterion"], "methods", ["None"], ["", "", "def", "dictionary_step", "(", "self", ",", "hidden", ",", "dict_emb", ")", ":", "\n", "        ", "dictionary_output", "=", "self", ".", "dictionary_decoder", "(", "hidden", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "dictionary_output", ",", "dict_emb", ")", "\n", "return", "dictionary_output", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.trainer.Trainer.corpus_step": [[59, 64], ["trainer.Trainer.encoder", "trainer.Trainer.corpus_decoder", "trainer.Trainer.criterion"], "methods", ["None"], ["", "def", "corpus_step", "(", "self", ",", "word_emb", ")", ":", "\n", "        ", "hidden", "=", "self", ".", "encoder", "(", "word_emb", ")", "\n", "corpus_output", "=", "self", ".", "corpus_decoder", "(", "hidden", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "corpus_output", ",", "word_emb", ")", "\n", "return", "corpus_output", ",", "hidden", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.trainer.Trainer.step": [[66, 122], ["trainer.Trainer.change_model_mode", "trainer.Trainer.corpus_step", "corpus_loss.item", "len", "word_emb.to.to.to", "word_emb.to.to.to", "dict_emb.to.to.to", "corpus_loss.item", "trainer.Trainer.encoder_optim.zero_grad", "trainer.Trainer.corpus_decoder_optim.zero_grad", "corpus_loss.backward", "trainer.Trainer.encoder_optim.step", "trainer.Trainer.corpus_decoder_optim.step", "trainer.Trainer.dictionary_step", "torch.mean", "dictionary_loss.item", "torch.mean.item", "torch.norm", "trainer.Trainer.encoder_optim.zero_grad", "trainer.Trainer.dictionary_decoder_optim.zero_grad", "trainer.Trainer.corpus_decoder_optim.zero_grad", "loss.backward", "trainer.Trainer.encoder_optim.step", "trainer.Trainer.dictionary_decoder_optim.step", "trainer.Trainer.corpus_decoder_optim.step", "trainer.Trainer.encoder"], "methods", ["home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.trainer.Trainer.change_model_mode", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.trainer.Trainer.corpus_step", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.zero_grad", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.zero_grad", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.model.GradReverse.backward", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.step", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.step", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.trainer.Trainer.dictionary_step", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.zero_grad", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.zero_grad", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.zero_grad", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.model.GradReverse.backward", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.step", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.step", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.step"], ["", "def", "step", "(", "self", ",", "dataloader", ",", "model_type", ",", "mode", ")", ":", "\n", "\n", "        ", "self", ".", "change_model_mode", "(", "mode", ")", "\n", "\n", "total_dictionary_loss", "=", "0", "\n", "total_corpus_loss", "=", "0", "\n", "total_adversarial_loss", "=", "0", "\n", "total_num", "=", "0", "\n", "\n", "for", "batch", "in", "dataloader", ":", "\n", "            ", "if", "model_type", "==", "'pre-train'", ":", "\n", "                ", "word_emb", "=", "batch", "\n", "word_emb", "=", "word_emb", ".", "to", "(", "self", ".", "device", ")", "\n", "", "else", ":", "\n", "                ", "word_emb", ",", "dict_emb", "=", "batch", "\n", "word_emb", "=", "word_emb", ".", "to", "(", "self", ".", "device", ")", "\n", "dict_emb", "=", "dict_emb", ".", "to", "(", "self", ".", "device", ")", "\n", "bias_emb", "=", "word_emb", "-", "(", "(", "word_emb", "*", "dict_emb", ")", ".", "sum", "(", "1", ",", "keepdim", "=", "True", ")", "*", "dict_emb", "/", "torch", ".", "norm", "(", "dict_emb", ")", ")", "\n", "\n", "", "_", ",", "hidden", ",", "corpus_loss", "=", "self", ".", "corpus_step", "(", "word_emb", ")", "\n", "\n", "if", "model_type", "==", "'pre-train'", ":", "\n", "                ", "if", "mode", "==", "'train'", ":", "\n", "                    ", "self", ".", "encoder_optim", ".", "zero_grad", "(", ")", "\n", "self", ".", "corpus_decoder_optim", ".", "zero_grad", "(", ")", "\n", "corpus_loss", ".", "backward", "(", ")", "\n", "self", ".", "encoder_optim", ".", "step", "(", ")", "\n", "self", ".", "corpus_decoder_optim", ".", "step", "(", ")", "\n", "", "total_corpus_loss", "+=", "corpus_loss", ".", "item", "(", ")", "\n", "\n", "", "elif", "model_type", "==", "'adversarial'", ":", "\n", "                ", "_", ",", "dictionary_loss", "=", "self", ".", "dictionary_step", "(", "hidden", ",", "bias_emb", ")", "\n", "adversarial_loss", "=", "torch", ".", "mean", "(", "(", "hidden", "*", "self", ".", "encoder", "(", "bias_emb", ")", ")", ".", "sum", "(", "1", ",", "keepdim", "=", "True", ")", "**", "2", ")", "\n", "loss", "=", "self", ".", "dictionary_weight", "*", "dictionary_loss", "+", "self", ".", "corpus_weight", "*", "corpus_loss", "+", "self", ".", "adversarial_weight", "*", "adversarial_loss", "\n", "if", "mode", "==", "'train'", ":", "\n", "                    ", "self", ".", "encoder_optim", ".", "zero_grad", "(", ")", "\n", "self", ".", "dictionary_decoder_optim", ".", "zero_grad", "(", ")", "\n", "self", ".", "corpus_decoder_optim", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "encoder_optim", ".", "step", "(", ")", "\n", "self", ".", "dictionary_decoder_optim", ".", "step", "(", ")", "\n", "self", ".", "corpus_decoder_optim", ".", "step", "(", ")", "\n", "\n", "", "total_dictionary_loss", "+=", "dictionary_loss", ".", "item", "(", ")", "\n", "total_adversarial_loss", "+=", "adversarial_loss", ".", "item", "(", ")", "\n", "", "total_corpus_loss", "+=", "corpus_loss", ".", "item", "(", ")", "\n", "\n", "total_num", "+=", "len", "(", "word_emb", ")", "\n", "\n", "", "return", "total_dictionary_loss", "/", "total_num", ",", "total_corpus_loss", "/", "total_num", ",", "total_adversarial_loss", "/", "total_num", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.trainer.Trainer.run": [[124, 183], ["float", "trainer.Trainer.set_hyperparameter", "range", "logger.info", "torch.load", "torch.save", "os.remove", "logger.info", "trainer.Trainer.step", "trainer.Trainer.step", "logger.info", "logger.info", "trainer.Trainer.encoder.state_dict", "trainer.Trainer.dictionary_decoder.state_dict", "trainer.Trainer.corpus_decoder.state_dict", "torch.save", "trainer.Trainer.encoder_optim.decay_lr", "trainer.Trainer.dictionary_decoder_optim.decay_lr", "trainer.Trainer.corpus_decoder_optim.decay_lr", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info"], "methods", ["home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.trainer.Trainer.set_hyperparameter", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.step", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.step", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.decay_lr", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.decay_lr", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.decay_lr"], ["", "def", "run", "(", "self", ",", "train_dataloader", ",", "valid_dataloader", ",", "model_type", ")", ":", "\n", "        ", "assert", "model_type", "in", "[", "'pre-train'", ",", "'adversarial'", "]", ",", "'Please select model_type [pre-train, adversarial]'", "\n", "\n", "self", ".", "best_epoch", "=", "0", "\n", "self", ".", "best_loss", "=", "float", "(", "'inf'", ")", "\n", "self", ".", "set_hyperparameter", "(", "model_type", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "1", ",", "self", ".", "epoch", "+", "1", ")", ":", "\n", "            ", "logger", ".", "info", "(", "f'Epoch: {epoch}'", ")", "\n", "train_dictionary_loss", ",", "train_corpus_loss", ",", "train_adversarial_loss", "=", "self", ".", "step", "(", "train_dataloader", ",", "model_type", ",", "'train'", ")", "\n", "valid_dictionary_loss", ",", "valid_corpus_loss", ",", "valid_adversarial_loss", "=", "self", ".", "step", "(", "valid_dataloader", ",", "model_type", ",", "'eval'", ")", "\n", "logger", ".", "info", "(", "f'Train corpus loss: {train_corpus_loss}'", ")", "\n", "logger", ".", "info", "(", "f'Valid corpus loss: {valid_corpus_loss}'", ")", "\n", "\n", "if", "model_type", "==", "'pre-train'", ":", "\n", "                ", "valid_loss", "=", "valid_corpus_loss", "\n", "", "elif", "model_type", "==", "'adversarial'", ":", "\n", "                ", "train_loss", "=", "train_dictionary_loss", "*", "self", ".", "dictionary_weight", "+", "train_corpus_loss", "*", "self", ".", "corpus_weight", "+", "train_adversarial_loss", "*", "self", ".", "adversarial_weight", "\n", "valid_loss", "=", "valid_dictionary_loss", "*", "self", ".", "dictionary_weight", "+", "valid_corpus_loss", "*", "self", ".", "corpus_weight", "+", "valid_adversarial_loss", "*", "self", ".", "adversarial_weight", "\n", "logger", ".", "info", "(", "f'Train dictionary loss: {train_dictionary_loss}'", ")", "\n", "logger", ".", "info", "(", "f'Valid dictionary loss: {valid_dictionary_loss}'", ")", "\n", "logger", ".", "info", "(", "f'Train adversarial loss: {train_adversarial_loss}'", ")", "\n", "logger", ".", "info", "(", "f'Valid adversarial loss: {valid_adversarial_loss}'", ")", "\n", "logger", ".", "info", "(", "f'Train loss: {train_loss}'", ")", "\n", "logger", ".", "info", "(", "f'Valid loss: {valid_loss}'", ")", "\n", "\n", "", "if", "valid_loss", "<", "self", ".", "best_loss", ":", "\n", "                ", "self", ".", "best_epoch", "=", "epoch", "\n", "self", ".", "best_loss", "=", "valid_loss", "\n", "encoder_states", "=", "self", ".", "encoder", ".", "state_dict", "(", ")", "\n", "dictionary_decoder_states", "=", "self", ".", "dictionary_decoder", ".", "state_dict", "(", ")", "\n", "corpus_decoder_states", "=", "self", ".", "corpus_decoder", ".", "state_dict", "(", ")", "\n", "checkpoint", "=", "{", "'encoder'", ":", "encoder_states", ",", "\n", "'dictionary_decoder'", ":", "dictionary_decoder_states", ",", "\n", "'corpus_decoder'", ":", "corpus_decoder_states", ",", "\n", "'encoder_optim'", ":", "self", ".", "encoder_optim", ",", "\n", "'dictionary_decoder_optim'", ":", "self", ".", "dictionary_decoder_optim", ",", "\n", "'corpus_decoder_optim'", ":", "self", ".", "corpus_decoder_optim", ",", "\n", "'config'", ":", "self", ".", "config", ",", "\n", "'args'", ":", "self", ".", "args", "}", "\n", "torch", ".", "save", "(", "checkpoint", ",", "self", ".", "save_prefix", "/", "'model_checkpoint'", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "encoder_optim", ".", "decay_lr", "(", ")", "\n", "self", ".", "dictionary_decoder_optim", ".", "decay_lr", "(", ")", "\n", "self", ".", "corpus_decoder_optim", ".", "decay_lr", "(", ")", "\n", "\n", "", "if", "epoch", "-", "self", ".", "best_epoch", ">=", "self", ".", "early_stop", ":", "\n", "                ", "break", "\n", "\n", "", "", "logger", ".", "info", "(", "f'Best epoch: {self.best_epoch}'", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "self", ".", "save_prefix", "/", "'model_checkpoint'", ")", "\n", "torch", ".", "save", "(", "checkpoint", ",", "\n", "self", ".", "save_prefix", "/", "f'{model_type}_best_checkpoint'", ")", "\n", "os", ".", "remove", "(", "self", ".", "save_prefix", "/", "'model_checkpoint'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.parse_args": [[24, 41], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--save-prefix'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--save-binary'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--embedding'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--dictionary'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "\n", "help", "=", "'json format'", ")", "\n", "parser", ".", "add_argument", "(", "'--remove-stop-words'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--retrieve-original-case'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--gpu'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1111", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.remove_stop_words": [[43, 49], ["set", "nltk.corpus.stopwords.words", "dictionary.items"], "function", ["None"], ["", "def", "remove_stop_words", "(", "dictionary", ")", ":", "\n", "    ", "stop_words", "=", "set", "(", "stopwords", ".", "words", "(", "'english'", ")", ")", "\n", "tmp_dictionary", "=", "{", "v", ":", "k", "-", "stop_words", "for", "(", "v", ",", "k", ")", "in", "dictionary", ".", "items", "(", ")", "\n", "if", "v", "not", "in", "stop_words", "}", "\n", "\n", "return", "tmp_dictionary", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.retrieve_original_case": [[51, 66], ["collections.defaultdict", "dictionary.items", "nltk.corpus.wordnet.synsets", "zip", "len", "len", "len", "tmp_dictionary[].append", "synset.lemma_names", "c.lower"], "function", ["None"], ["", "def", "retrieve_original_case", "(", "dictionary", ")", ":", "\n", "    ", "tmp_dictionary", "=", "defaultdict", "(", "list", ")", "\n", "\n", "for", "word", ",", "definitions", "in", "dictionary", ".", "items", "(", ")", ":", "\n", "        ", "synsets", "=", "wordnet", ".", "synsets", "(", "word", ")", "\n", "assert", "(", "len", "(", "definitions", ")", "==", "len", "(", "synsets", ")", ")", "\n", "for", "synset", ",", "definition", "in", "zip", "(", "synsets", ",", "definitions", ")", ":", "\n", "            ", "cased_lemma", "=", "[", "c", "for", "c", "in", "synset", ".", "lemma_names", "(", ")", "\n", "if", "c", ".", "lower", "(", ")", "==", "word", "]", "\n", "if", "len", "(", "cased_lemma", ")", "==", "0", ":", "\n", "                ", "cased_lemma", "=", "[", "word", "]", "\n", "", "for", "c", "in", "cased_lemma", ":", "\n", "                ", "tmp_dictionary", "[", "c", "]", ".", "append", "(", "definition", ")", "\n", "\n", "", "", "", "return", "tmp_dictionary", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.make_optim": [[68, 74], ["optim.Optim", "optim.Optim.set_parameters", "model.parameters"], "function", ["home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.set_parameters"], ["", "def", "make_optim", "(", "model", ",", "optimizer", ",", "learning_rate", ",", "lr_decay", ",", "max_grad_norm", ")", ":", "\n", "    ", "model_optim", "=", "optim", ".", "Optim", "(", "optimizer", ",", "learning_rate", ",", "\n", "lr_decay", ",", "max_grad_norm", ")", "\n", "model_optim", ".", "set_parameters", "(", "model", ".", "parameters", "(", ")", ")", "\n", "\n", "return", "model_optim", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.save_word2vec_format": [[76, 85], ["len", "gensim.utils.smart_open", "fw.write", "emb_dict.items", "gensim.utils.to_utf8", "vector.astype().tostring.astype().tostring", "fw.write", "vector.astype().tostring.astype", "gensim.utils.to_utf8"], "function", ["None"], ["", "def", "save_word2vec_format", "(", "emb_dict", ",", "save_prefix", ",", "output", ")", ":", "\n", "    ", "emb_num", "=", "len", "(", "emb_dict", ")", "\n", "emb_size", "=", "300", "\n", "\n", "with", "gensim", ".", "utils", ".", "smart_open", "(", "save_prefix", "/", "output", ",", "'wb'", ")", "as", "fw", ":", "\n", "        ", "fw", ".", "write", "(", "gensim", ".", "utils", ".", "to_utf8", "(", "f'{emb_num} {emb_size}\\n'", ")", ")", "\n", "for", "word", ",", "vector", "in", "(", "emb_dict", ".", "items", "(", ")", ")", ":", "\n", "            ", "vector", "=", "vector", ".", "astype", "(", "np", ".", "float32", ")", ".", "tostring", "(", ")", "\n", "fw", ".", "write", "(", "gensim", ".", "utils", ".", "to_utf8", "(", "word", ")", "+", "b' '", "+", "vector", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.preprocess_dictionary": [[87, 101], ["set", "train.retrieve_original_case", "list", "train.remove_stop_words", "remove_stop_words.items", "len", "itertools.chain.from_iterable"], "function", ["home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.retrieve_original_case", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.remove_stop_words"], ["", "", "", "def", "preprocess_dictionary", "(", "dictionary", ",", "words", ",", "args", ")", ":", "\n", "    ", "if", "args", ".", "retrieve_original_case", ":", "\n", "        ", "dictionary", "=", "retrieve_original_case", "(", "dictionary", ")", "\n", "", "words_set", "=", "set", "(", "words", ")", "\n", "dictionary_old", "=", "dictionary", "\n", "dictionary", "=", "{", "word", ":", "list", "(", "key", "for", "key", "in", "\n", "itertools", ".", "chain", ".", "from_iterable", "(", "dictionary", "[", "word", "]", ")", "\n", "if", "key", "in", "words_set", ")", "for", "word", "in", "words", "}", "\n", "if", "args", ".", "remove_stop_words", ":", "\n", "        ", "dictionary", "=", "remove_stop_words", "(", "dictionary", ")", "\n", "", "dictionary", "=", "{", "key", ":", "value", "for", "key", ",", "value", "in", "dictionary", ".", "items", "(", ")", "\n", "if", "len", "(", "value", ")", ">", "0", "}", "\n", "\n", "return", "dictionary", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.debiasing_emb": [[103, 121], ["trainer.change_model_mode", "range", "math.ceil", "numpy.stack", "torch.from_numpy().to", "torch.from_numpy().to", "trainer.encoder.zero_grad", "trainer.encoder", "hiddens.cpu().tolist.cpu().tolist", "zip", "numpy.array", "len", "torch.from_numpy", "torch.from_numpy", "hiddens.cpu().tolist.cpu"], "function", ["home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.trainer.Trainer.change_model_mode", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.zero_grad"], ["", "def", "debiasing_emb", "(", "emb", ",", "trainer", ",", "device", ",", "batch_size", ")", ":", "\n", "\n", "    ", "vocab", "=", "[", "word", "for", "word", "in", "emb", ".", "vocab", "]", "\n", "vector", "=", "[", "emb", "[", "word", "]", "for", "word", "in", "vocab", "]", "\n", "emb_dict", "=", "{", "}", "\n", "trainer", ".", "change_model_mode", "(", "'eval'", ")", "\n", "\n", "for", "i", "in", "range", "(", "math", ".", "ceil", "(", "len", "(", "vocab", ")", "/", "batch_size", ")", ")", ":", "\n", "        ", "words", "=", "vocab", "[", "i", "*", "batch_size", ":", "i", "*", "batch_size", "+", "batch_size", "]", "\n", "batch", "=", "np", ".", "stack", "(", "vector", "[", "i", "*", "batch_size", ":", "i", "*", "batch_size", "+", "batch_size", "]", ")", "\n", "batch", "=", "torch", ".", "from_numpy", "(", "batch", ")", ".", "to", "(", "device", ")", "\n", "trainer", ".", "encoder", ".", "zero_grad", "(", ")", "\n", "hiddens", "=", "trainer", ".", "encoder", "(", "batch", ")", "\n", "hiddens", "=", "hiddens", ".", "cpu", "(", ")", ".", "tolist", "(", ")", "\n", "for", "word", ",", "hidden", "in", "zip", "(", "words", ",", "hiddens", ")", ":", "\n", "            ", "emb_dict", "[", "word", "]", "=", "np", ".", "array", "(", "hidden", ")", "\n", "\n", "", "", "return", "emb_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.main": [[123, 218], ["json.load", "logger.info", "torch.manual_seed", "torch.manual_seed", "random.seed", "pathlib.Path", "logger.info", "args.embedding.endswith", "gensim.models.KeyedVectors.load_word2vec_format", "logger.info", "json.load", "train.preprocess_dictionary", "random.shuffle", "random.shuffle", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "logger.info", "model.Encoder", "model.Decoder", "model.Decoder", "encoder.to.to", "dictionary_decoder.to.to", "corpus_decoder.to.to", "train.make_optim", "train.make_optim", "train.make_optim", "torch.MSELoss", "trainer.Trainer", "logger.info", "trainer.Trainer.run", "logger.info", "train.debiasing_emb", "logger.info", "train.save_word2vec_format", "logger.info", "trainer.Trainer.run", "logger.info", "train.debiasing_emb", "logger.info", "train.save_word2vec_format", "open", "torch.cuda.manual_seed_all", "open", "dataset.EmbDataset", "dataset.EmbDataset", "dataset.EmbDictDataset", "dataset.EmbDictDataset", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.preprocess_dictionary", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.make_optim", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.make_optim", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.make_optim", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.trainer.Trainer.run", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.debiasing_emb", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.save_word2vec_format", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.trainer.Trainer.run", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.debiasing_emb", "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.train.save_word2vec_format"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "config", "=", "json", ".", "load", "(", "open", "(", "args", ".", "config", ")", ")", "\n", "\n", "if", "args", ".", "gpu", ">=", "0", ":", "\n", "        ", "device", "=", "'cuda:{}'", ".", "format", "(", "args", ".", "gpu", ")", "\n", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "", "else", ":", "\n", "        ", "device", "=", "'cpu'", "\n", "", "logger", ".", "info", "(", "f'Device: {device}'", ")", "\n", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "valid_size", "=", "config", "[", "'valid_size'", "]", "\n", "pre_valid_size", "=", "config", "[", "'pre_valid_size'", "]", "\n", "batch_size", "=", "config", "[", "'batch_size'", "]", "\n", "pre_batch_size", "=", "config", "[", "'pre_batch_size'", "]", "\n", "emb_size", "=", "config", "[", "'emb_size'", "]", "\n", "hidden_size", "=", "config", "[", "'hidden_size'", "]", "\n", "dropout_rate", "=", "config", "[", "'dropout_rate'", "]", "\n", "optimizer", "=", "config", "[", "'optimizer'", "]", "\n", "lr", "=", "config", "[", "'lr'", "]", "\n", "lr_decay", "=", "config", "[", "'lr_decay'", "]", "\n", "max_grad_norm", "=", "config", "[", "'max_grad_norm'", "]", "\n", "save_prefix", "=", "Path", "(", "args", ".", "save_prefix", ")", "\n", "save_binary", "=", "args", ".", "save_binary", "\n", "\n", "logger", ".", "info", "(", "'Loading word embedding'", ")", "\n", "if", "args", ".", "embedding", ".", "endswith", "(", "'bin'", ")", ":", "\n", "        ", "binary", "=", "True", "\n", "", "else", ":", "\n", "        ", "binary", "=", "False", "\n", "", "emb", "=", "KeyedVectors", ".", "load_word2vec_format", "(", "args", ".", "embedding", ",", "\n", "binary", "=", "binary", ")", "\n", "\n", "logger", ".", "info", "(", "'Loading dictionary'", ")", "\n", "dictionary", "=", "json", ".", "load", "(", "open", "(", "args", ".", "dictionary", ")", ")", "\n", "emb_words", "=", "[", "word", "for", "word", "in", "emb", ".", "vocab", "]", "\n", "words", "=", "[", "word", "for", "word", "in", "emb_words", "if", "word", "in", "dictionary", "]", "\n", "dictionary", "=", "preprocess_dictionary", "(", "dictionary", ",", "words", ",", "args", ")", "\n", "words", "=", "[", "word", "for", "word", "in", "emb_words", "if", "word", "in", "dictionary", "]", "\n", "random", ".", "shuffle", "(", "emb_words", ")", "\n", "random", ".", "shuffle", "(", "words", ")", "\n", "\n", "logger", ".", "info", "(", "'Creating dataloader'", ")", "\n", "pre_train_words", "=", "emb_words", "[", "pre_valid_size", ":", "]", "\n", "pre_valid_words", "=", "emb_words", "[", ":", "pre_valid_size", "]", "\n", "logger", ".", "info", "(", "f'Pre train data size:{len(pre_train_words)}'", ")", "\n", "logger", ".", "info", "(", "f'Pre valid data size:{len(pre_valid_words)}'", ")", "\n", "train_words", ",", "valid_words", "=", "words", "[", "valid_size", ":", "]", ",", "words", "[", ":", "valid_size", "]", "\n", "logger", ".", "info", "(", "f'Train data size:{len(train_words)}'", ")", "\n", "logger", ".", "info", "(", "f'Valid data size:{len(valid_words)}'", ")", "\n", "\n", "pre_train_dataloader", "=", "DataLoader", "(", "EmbDataset", "(", "pre_train_words", ",", "emb", ")", ",", "\n", "batch_size", "=", "pre_batch_size", ",", "shuffle", "=", "True", ")", "\n", "pre_valid_dataloader", "=", "DataLoader", "(", "EmbDataset", "(", "pre_valid_words", ",", "emb", ")", ",", "\n", "batch_size", "=", "pre_batch_size", ",", "shuffle", "=", "False", ")", "\n", "\n", "train_dataloader", "=", "DataLoader", "(", "EmbDictDataset", "(", "train_words", ",", "emb", ",", "dictionary", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "valid_dataloader", "=", "DataLoader", "(", "EmbDictDataset", "(", "valid_words", ",", "emb", ",", "dictionary", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "\n", "logger", ".", "info", "(", "'Creating models'", ")", "\n", "encoder", "=", "model", ".", "Encoder", "(", "emb_size", ",", "hidden_size", ",", "dropout_rate", ")", "\n", "dictionary_decoder", "=", "model", ".", "Decoder", "(", "emb_size", ",", "hidden_size", ",", "dropout_rate", ")", "\n", "corpus_decoder", "=", "model", ".", "Decoder", "(", "emb_size", ",", "hidden_size", ",", "dropout_rate", ")", "\n", "encoder", "=", "encoder", ".", "to", "(", "device", ")", "\n", "dictionary_decoder", "=", "dictionary_decoder", ".", "to", "(", "device", ")", "\n", "corpus_decoder", "=", "corpus_decoder", ".", "to", "(", "device", ")", "\n", "encoder_optim", "=", "make_optim", "(", "encoder", ",", "optimizer", ",", "lr", ",", "lr_decay", ",", "max_grad_norm", ")", "\n", "dictionary_decoder_optim", "=", "make_optim", "(", "dictionary_decoder", ",", "optimizer", ",", "lr", ",", "\n", "lr_decay", ",", "max_grad_norm", ")", "\n", "corpus_decoder_optim", "=", "make_optim", "(", "corpus_decoder", ",", "optimizer", ",", "lr", ",", "\n", "lr_decay", ",", "max_grad_norm", ")", "\n", "criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "trainer", "=", "Trainer", "(", "args", ",", "config", ",", "encoder", ",", "\n", "dictionary_decoder", ",", "corpus_decoder", ",", "\n", "encoder_optim", ",", "dictionary_decoder_optim", ",", "\n", "corpus_decoder_optim", ",", "criterion", ",", "device", ",", "save_prefix", ")", "\n", "\n", "logger", ".", "info", "(", "'Pre-training dictionary & corpus decoder'", ")", "\n", "trainer", ".", "run", "(", "pre_train_dataloader", ",", "\n", "pre_valid_dataloader", ",", "'pre-train'", ")", "\n", "logger", ".", "info", "(", "'Debiasing word embedding'", ")", "\n", "emb_dict", "=", "debiasing_emb", "(", "emb", ",", "trainer", ",", "device", ",", "batch_size", ")", "\n", "logger", ".", "info", "(", "'Saving word embedding'", ")", "\n", "save_word2vec_format", "(", "emb_dict", ",", "save_prefix", ",", "'autoenc_emb.bin'", ")", "\n", "\n", "logger", ".", "info", "(", "'Training adversarial'", ")", "\n", "trainer", ".", "run", "(", "train_dataloader", ",", "valid_dataloader", ",", "'adversarial'", ")", "\n", "logger", ".", "info", "(", "'Debiasing word embedding'", ")", "\n", "emb_dict", "=", "debiasing_emb", "(", "emb", ",", "trainer", ",", "device", ",", "batch_size", ")", "\n", "logger", ".", "info", "(", "'Saving word embedding'", ")", "\n", "save_word2vec_format", "(", "emb_dict", ",", "save_prefix", ",", "'debiasing_emb.bin'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.dataset.EmbDataset.__init__": [[7, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "words", ",", "emb", ")", ":", "\n", "        ", "self", ".", "words", "=", "words", "\n", "self", ".", "emb", "=", "emb", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.dataset.EmbDataset.__len__": [[12, 14], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "words", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.dataset.EmbDataset.__getitem__": [[16, 21], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "word", "=", "self", ".", "words", "[", "idx", "]", "\n", "word_emb", "=", "self", ".", "emb", "[", "word", "]", "\n", "\n", "return", "word_emb", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.dataset.EmbDictDataset.__init__": [[25, 30], ["dataset.EmbDictDataset.calculate_unigram_prob"], "methods", ["home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.dataset.EmbDictDataset.calculate_unigram_prob"], ["    ", "def", "__init__", "(", "self", ",", "words", ",", "emb", ",", "dict_def", ")", ":", "\n", "        ", "self", ".", "words", "=", "words", "\n", "self", ".", "emb", "=", "emb", "\n", "self", ".", "dict_def", "=", "dict_def", "\n", "self", ".", "p", "=", "self", ".", "calculate_unigram_prob", "(", "self", ".", "dict_def", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.dataset.EmbDictDataset.__len__": [[32, 34], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "words", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.dataset.EmbDictDataset.calculate_unigram_prob": [[36, 45], ["collections.defaultdict", "dict_def.values", "collections.defaultdict.items"], "methods", ["None"], ["", "def", "calculate_unigram_prob", "(", "self", ",", "dict_def", ")", ":", "\n", "        ", "total_num", "=", "0", "\n", "count_d", "=", "defaultdict", "(", "int", ")", "\n", "for", "words", "in", "dict_def", ".", "values", "(", ")", ":", "\n", "            ", "for", "word", "in", "words", ":", "\n", "                ", "count_d", "[", "word", "]", "+=", "1", "\n", "total_num", "+=", "1", "\n", "\n", "", "", "return", "{", "key", ":", "value", "/", "total_num", "for", "key", ",", "value", "in", "count_d", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.dataset.EmbDictDataset.create_SIF": [[47, 50], ["sum", "len"], "methods", ["None"], ["", "def", "create_SIF", "(", "self", ",", "words", ",", "a", "=", "0.0001", ")", ":", "\n", "        ", "return", "sum", "(", "[", "(", "a", "/", "(", "a", "+", "self", ".", "p", "[", "word", "]", ")", ")", "*", "self", ".", "emb", "[", "word", "]", "\n", "for", "word", "in", "words", "]", ")", "/", "len", "(", "words", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.dataset.EmbDictDataset.__getitem__": [[52, 58], ["dataset.EmbDictDataset.create_SIF"], "methods", ["home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.dataset.EmbDictDataset.create_SIF"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "word", "=", "self", ".", "words", "[", "idx", "]", "\n", "word_emb", "=", "self", ".", "emb", "[", "word", "]", "\n", "dict_emb", "=", "self", ".", "create_SIF", "(", "self", ".", "dict_def", "[", "word", "]", ")", "\n", "\n", "return", "word_emb", ",", "dict_emb", "\n", "", "", ""]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.model.GradReverse.__init__": [[8, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "lambd", ")", ":", "\n", "        ", "self", ".", "lambd", "=", "lambd", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.model.GradReverse.forward": [[12, 14], ["x.view_as"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "view_as", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.model.GradReverse.backward": [[16, 18], ["None"], "methods", ["None"], ["", "def", "backward", "(", "self", ",", "grad_output", ")", ":", "\n", "        ", "return", "(", "grad_output", "*", "-", "self", ".", "lambd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.model.Encoder.__init__": [[22, 27], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.__init__"], ["    ", "def", "__init__", "(", "self", ",", "emb_size", ",", "hidden_size", ",", "dropout_rate", "=", "0.", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "hidden_layer", "=", "nn", ".", "Linear", "(", "emb_size", ",", "hidden_size", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout_rate", ")", "\n", "self", ".", "tanh", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.model.Encoder.forward": [[29, 33], ["model.Encoder.tanh", "model.Encoder.hidden_layer", "model.Encoder.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "emb", ")", ":", "\n", "        ", "hidden", "=", "self", ".", "tanh", "(", "self", ".", "hidden_layer", "(", "self", ".", "dropout", "(", "emb", ")", ")", ")", "\n", "\n", "return", "hidden", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.model.Decoder.__init__": [[37, 46], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Tanh", "torch.Tanh", "model.GradReverse"], "methods", ["home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_size", ",", "emb_size", ",", "dropout_rate", "=", "0.", ",", "grad_reverse_flag", "=", "False", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "output_layer", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "emb_size", ")", "\n", "self", ".", "grad_reverse_flag", "=", "grad_reverse_flag", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout_rate", ")", "\n", "self", ".", "tanh", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n", "if", "self", ".", "grad_reverse_flag", ":", "\n", "            ", "self", ".", "grad_reverse", "=", "GradReverse", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.model.Decoder.forward": [[48, 54], ["model.Decoder.tanh", "model.Decoder.grad_reverse", "model.Decoder.output_layer", "model.Decoder.dropout"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "hidden", ")", ":", "\n", "        ", "if", "self", ".", "grad_reverse_flag", ":", "\n", "            ", "hidden", "=", "self", ".", "grad_reverse", "(", "hidden", ")", "\n", "", "output", "=", "self", ".", "tanh", "(", "self", ".", "output_layer", "(", "self", ".", "dropout", "(", "hidden", ")", ")", ")", "\n", "\n", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.set_parameters": [[10, 22], ["list", "torch.SGD", "torch.SGD", "torch.SGD", "torch.Adagrad", "torch.Adagrad", "torch.Adagrad", "torch.Adadelta", "torch.Adadelta", "torch.Adadelta", "torch.Adam", "torch.Adam", "torch.Adam", "RuntimeError"], "methods", ["None"], ["    ", "def", "set_parameters", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "params", "=", "list", "(", "params", ")", "\n", "if", "self", ".", "method", "==", "'sgd'", ":", "\n", "            ", "self", ".", "optimizer", "=", "optim", ".", "SGD", "(", "self", ".", "params", ",", "lr", "=", "self", ".", "lr", ")", "\n", "", "elif", "self", ".", "method", "==", "'adagrad'", ":", "\n", "            ", "self", ".", "optimizer", "=", "optim", ".", "Adagrad", "(", "self", ".", "params", ",", "lr", "=", "self", ".", "lr", ")", "\n", "", "elif", "self", ".", "method", "==", "'adadelta'", ":", "\n", "            ", "self", ".", "optimizer", "=", "optim", ".", "Adadelta", "(", "self", ".", "params", ",", "lr", "=", "self", ".", "lr", ")", "\n", "", "elif", "self", ".", "method", "==", "'adam'", ":", "\n", "            ", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "params", ",", "lr", "=", "self", ".", "lr", ")", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Invalid optim method: \"", "+", "self", ".", "method", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.__init__": [[24, 29], ["None"], "methods", ["None"], ["", "", "def", "__init__", "(", "self", ",", "method", ",", "lr", ",", "lr_decay", "=", "1", ",", "max_grad_norm", "=", "None", ")", ":", "\n", "        ", "self", ".", "lr", "=", "lr", "\n", "self", ".", "max_grad_norm", "=", "max_grad_norm", "\n", "self", ".", "method", "=", "method", "\n", "self", ".", "lr_decay", "=", "lr_decay", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.zero_grad": [[31, 33], ["torch.Optim.optimizer.zero_grad"], "methods", ["home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.zero_grad"], ["", "def", "zero_grad", "(", "self", ")", ":", "\n", "        ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.step": [[35, 39], ["torch.Optim.optimizer.step", "torch.nn.utils.clip_grad_norm", "torch.nn.utils.clip_grad_norm", "torch.nn.utils.clip_grad_norm"], "methods", ["home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.step"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "max_grad_norm", ":", "\n", "            ", "clip_grad_norm", "(", "self", ".", "params", ",", "self", ".", "max_grad_norm", ")", "\n", "", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kanekomasahiro_dict-debias.src.optim.Optim.decay_lr": [[41, 46], ["None"], "methods", ["None"], ["", "def", "decay_lr", "(", "self", ")", ":", "\n", "        ", "self", ".", "lr", "=", "self", ".", "lr", "*", "self", ".", "lr_decay", "\n", "\n", "for", "param_group", "in", "self", ".", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr'", "]", "=", "self", ".", "lr", "\n", "", "", "", ""]]}