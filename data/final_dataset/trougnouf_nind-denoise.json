{"home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.denoise_dir.parse_args": [[31, 53], ["configargparse.ArgumentParser", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.add_argument", "configargparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.denoise_dir.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "configargparse", ".", "ArgumentParser", "(", "description", "=", "__doc__", ",", "default_config_files", "=", "[", "\n", "nn_common", ".", "COMMON_CONFIG_FPATH", "]", ",", "\n", "config_file_parser_class", "=", "configargparse", ".", "YAMLConfigFileParser", ")", "\n", "parser", ".", "add_argument", "(", "'--noisy_dir'", ",", "type", "=", "str", ",", "help", "=", "'directory of test dataset (or any directory containing images to be denoised), must end with [CROPSIZE]_[USEFULCROPSIZE]'", ")", "\n", "parser", ".", "add_argument", "(", "'--g_network'", ",", "'--network'", ",", "type", "=", "str", ",", "help", "=", "'Generator network architecture (typically UtNet or UNet)'", ")", "\n", "parser", ".", "add_argument", "(", "'--model_path'", ",", "'--model_fpath'", ",", "help", "=", "'Generator pretrained model path (.pth for model, .pt for dictionary)'", ")", "\n", "parser", ".", "add_argument", "(", "'--model_parameters'", ",", "default", "=", "\"\"", ",", "type", "=", "str", ",", "help", "=", "'Model parameters with format \"parameter1=value1,parameter2=value2\"'", ")", "\n", "parser", ".", "add_argument", "(", "'--result_dir'", ",", "default", "=", "'../../results/NIND/test'", ",", "type", "=", "str", ",", "help", "=", "'directory where results are saved. Can also be set to \"make_subdirs\" to make a denoised/<model_directory_name> subdirectory'", ")", "\n", "parser", ".", "add_argument", "(", "'--cuda_device'", ",", "'--device'", ",", "default", "=", "0", ",", "type", "=", "int", ",", "help", "=", "'Device number (default: 0, typically 0-3)'", ")", "\n", "parser", ".", "add_argument", "(", "'--no_scoring'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Generate SSIM score and MSE loss unless this is set'", ")", "\n", "parser", ".", "add_argument", "(", "'--cs'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--ucs'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--skip_existing'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Skip existing files'", ")", "\n", "parser", ".", "add_argument", "(", "'--whole_image'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Ignore cs and ucs, denoise whole image'", ")", "\n", "parser", ".", "add_argument", "(", "'--pad'", ",", "type", "=", "int", ",", "help", "=", "'Padding amt per side, only used for whole image (otherwise (cs-ucs)/2'", ")", "\n", "parser", ".", "add_argument", "(", "'--max_subpixels'", ",", "type", "=", "int", ",", "help", "=", "'Max number of pixels, otherwise abort.'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_reserve'", ",", "nargs", "=", "'*'", ",", "help", "=", "'Space separated list of image sets reserved for testing, or yaml file path containing a list. Can be used like in training in place of noisy_dir argument.'", ")", "\n", "parser", ".", "add_argument", "(", "'--orig_data'", ",", "help", "=", "'Location of the originally downloaded train data (before cropping); used with test_reserve'", ")", "\n", "parser", ".", "add_argument", "(", "'--models_dpath'", ",", "help", "=", "'Directory where all models are saved'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.loss.find_gt_path": [[14, 23], ["os.listdir", "os.path.join", "denoised_fn.split", "os.path.join", "setfiles[].split", "dataset_torch_3.sortISOs", "fn.split"], "function", ["None"], ["def", "find_gt_path", "(", "denoised_fn", ",", "gt_dir", ")", ":", "\n", "    ", "dsname", ",", "setdir", "=", "denoised_fn", ".", "split", "(", "'_'", ")", "[", "0", ":", "2", "]", "\n", "setfiles", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "gt_dir", ",", "setdir", ")", ")", "\n", "ext", "=", "setfiles", "[", "0", "]", ".", "split", "(", "'.'", ")", "[", "-", "1", "]", "\n", "isos", "=", "[", "fn", ".", "split", "(", "'_'", ")", "[", "2", "]", "[", ":", "-", "4", "]", "for", "fn", "in", "setfiles", "]", "\n", "baseiso", "=", "sortISOs", "(", "isos", ")", "[", "0", "]", "[", "0", "]", "\n", "baseiso_fn", "=", "dsname", "+", "'_'", "+", "setdir", "+", "'_'", "+", "baseiso", "+", "'.'", "+", "ext", "\n", "gt_fpath", "=", "os", ".", "path", ".", "join", "(", "gt_dir", ",", "setdir", ",", "baseiso_fn", ")", "\n", "return", "gt_fpath", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.loss.files": [[24, 28], ["os.listdir", "os.path.isfile", "os.path.join"], "function", ["None"], ["", "def", "files", "(", "path", ")", ":", "\n", "    ", "for", "fn", "in", "os", ".", "listdir", "(", "path", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "path", ",", "fn", ")", ")", "and", "fn", "!=", "'res.txt'", ":", "\n", "            ", "yield", "fn", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.loss.gen_score": [[29, 45], ["torch.device", "torch.nn.MSELoss().to", "libs.pytorch_ssim.SSIM().to", "open", "loss.files", "torch.nn.MSELoss", "libs.pytorch_ssim.SSIM", "os.path.join", "loss.find_gt_path", "os.path.join", "totensor().to", "totensor().to", "gtimg.reshape.reshape", "noisyimg.reshape.reshape", "torch.nn.MSELoss().to.item", "pytorch_ssim.SSIM().to.item", "print", "f.write", "str", "totensor", "totensor", "list", "list", "torch.nn.MSELoss().to.", "pytorch_ssim.SSIM().to.", "PIL.Image.open", "PIL.Image.open", "str"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.loss.files", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.loss.find_gt_path", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.json_saver.JSONSaver.write"], ["", "", "", "def", "gen_score", "(", "noisy_dir", ",", "gt_dir", "=", "'../../datasets/test/NIND/ds_fs'", ",", "device", "=", "torch", ".", "device", "(", "'cuda:0'", ")", ")", ":", "\n", "    ", "MSE", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", ".", "to", "(", "device", ")", "\n", "SSIM", "=", "pytorch_ssim", ".", "SSIM", "(", ")", ".", "to", "(", "device", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "noisy_dir", ",", "'res.txt'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "noisy_img", "in", "files", "(", "noisy_dir", ")", ":", "\n", "            ", "gtpath", "=", "find_gt_path", "(", "noisy_img", ",", "gt_dir", ")", "\n", "noisy_path", "=", "os", ".", "path", ".", "join", "(", "noisy_dir", ",", "noisy_img", ")", "\n", "gtimg", "=", "totensor", "(", "Image", ".", "open", "(", "gtpath", ")", ")", ".", "to", "(", "device", ")", "\n", "noisyimg", "=", "totensor", "(", "Image", ".", "open", "(", "noisy_path", ")", ")", ".", "to", "(", "device", ")", "\n", "gtimg", "=", "gtimg", ".", "reshape", "(", "[", "1", "]", "+", "list", "(", "gtimg", ".", "shape", ")", ")", "\n", "noisyimg", "=", "noisyimg", ".", "reshape", "(", "[", "1", "]", "+", "list", "(", "noisyimg", ".", "shape", ")", ")", "\n", "MSELoss", "=", "MSE", "(", "gtimg", ",", "noisyimg", ")", ".", "item", "(", ")", "\n", "SSIMScore", "=", "SSIM", "(", "gtimg", ",", "noisyimg", ")", ".", "item", "(", ")", "\n", "res", "=", "noisy_img", "+", "','", "+", "str", "(", "SSIMScore", ")", "+", "','", "+", "str", "(", "MSELoss", ")", "\n", "print", "(", "res", ")", "\n", "f", ".", "write", "(", "res", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_train.validate_generator": [[55, 76], ["model.eval", "enumerate", "statistics.mean", "model.train", "model.denoise_batch", "model.denoise_batch.clone().detach().cpu", "model.compute_loss", "losses.append", "clean.unsqueeze", "noisy.unsqueeze", "common.libs.pt_ops.pt_crop_batch", "common.libs.pt_ops.pt_crop_batch", "os.makedirs", "torchvision.utils.save_image", "model.get_loss", "model.denoise_batch.clone().detach", "os.path.join", "model.denoise_batch.clone", "str"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.eval", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.train", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.denoise_batch", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.compute_loss", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.pt_ops.pt_crop_batch", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.pt_ops.pt_crop_batch", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Discriminator.get_loss"], ["def", "validate_generator", "(", "model", ",", "validation_set", ",", "output_to_dir", "=", "None", ")", ":", "\n", "    ", "'''\n    currently doing one image at a time, limited to the same crop size as training.\n    TODO check if too slow. possibly use other sizes. (If used once per epoch then shouldn't matter.)\n    '''", "\n", "model", ".", "eval", "(", ")", "\n", "losses", "=", "[", "]", "\n", "for", "i", ",", "(", "clean", ",", "noisy", ")", "in", "enumerate", "(", "validation_set", ")", ":", "\n", "        ", "clean", ",", "noisy", "=", "clean", ".", "unsqueeze", "(", "0", ")", ",", "noisy", ".", "unsqueeze", "(", "0", ")", "\n", "denoised", "=", "model", ".", "denoise_batch", "(", "noisy", ")", "\n", "denoised_fs", "=", "denoised", ".", "clone", "(", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "model", ".", "compute_loss", "(", "pt_ops", ".", "pt_crop_batch", "(", "denoised", ",", "args", ".", "loss_cs", ")", ",", "\n", "pt_ops", ".", "pt_crop_batch", "(", "clean", ",", "args", ".", "loss_cs", ")", ")", "\n", "if", "output_to_dir", "is", "not", "None", ":", "\n", "            ", "os", ".", "makedirs", "(", "output_to_dir", ",", "exist_ok", "=", "True", ")", "\n", "# This saves as 8-bit tiff (we don't really care for the preview) and includes borders", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "denoised_fs", ",", "os", ".", "path", ".", "join", "(", "output_to_dir", ",", "str", "(", "i", ")", "+", "'.tif'", ")", ")", "\n", "", "losses", ".", "append", "(", "model", ".", "get_loss", "(", "component", "=", "'weighted'", ")", ")", "\n", "", "avgloss", "=", "statistics", ".", "mean", "(", "losses", ")", "\n", "model", ".", "train", "(", ")", "\n", "return", "avgloss", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_train.test_generator": [[77, 98], ["model.eval", "model.tocpu", "enumerate", "statistics.mean", "model.todevice", "model.train", "model.denoise_batch", "model.compute_loss", "losses.append", "clean.unsqueeze", "noisy.unsqueeze", "os.makedirs", "torchvision.utils.save_image", "model.get_loss", "os.path.join", "str"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.eval", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.tocpu", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.todevice", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.train", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.denoise_batch", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.compute_loss", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Discriminator.get_loss"], ["", "def", "test_generator", "(", "model", ",", "test_set", ",", "output_to_dir", "=", "None", ")", ":", "\n", "    ", "'''\n    This test moves the model to CPU and tests on whole images. It is meant to run extremely slowly\n    and should not be used frequently.\n    FIXME: add padding to the lossf\n    '''", "\n", "model", ".", "eval", "(", ")", "\n", "model", ".", "tocpu", "(", ")", "\n", "losses", "=", "[", "]", "\n", "for", "i", ",", "(", "clean", ",", "noisy", ")", "in", "enumerate", "(", "test_set", ")", ":", "\n", "        ", "clean", ",", "noisy", "=", "clean", ".", "unsqueeze", "(", "0", ")", ",", "noisy", ".", "unsqueeze", "(", "0", ")", "\n", "denoised", "=", "model", ".", "denoise_batch", "(", "noisy", ")", "\n", "model", ".", "compute_loss", "(", "denoised", ",", "clean", ")", "\n", "if", "output_to_dir", "is", "not", "None", ":", "\n", "            ", "os", ".", "makedirs", "(", "output_to_dir", ",", "exist_ok", "=", "True", ")", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "denoised", ",", "os", ".", "path", ".", "join", "(", "output_to_dir", ",", "str", "(", "i", ")", "+", "'.tif'", ")", ")", "\n", "", "losses", ".", "append", "(", "model", ".", "get_loss", "(", "component", "=", "'weighted'", ")", ")", "\n", "", "avgloss", "=", "statistics", ".", "mean", "(", "losses", ")", "\n", "model", ".", "todevice", "(", ")", "\n", "model", ".", "train", "(", ")", "\n", "return", "avgloss", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_train.delete_outperformed_models": [[99, 121], ["list", "os.listdir", "os.path.join", "int", "os.listdir", "fn.startswith", "os.remove", "list.append", "[].split", "int", "os.path.join", "shutil.rmtree", "list.append", "fn.split"], "function", ["None"], ["", "def", "delete_outperformed_models", "(", "dpath", ":", "str", ",", "keepers", ":", "set", ",", "model_t", ":", "str", "=", "'generator'", ",", "keep_all_output_images", "=", "False", ")", ":", "\n", "    ", "'''\n    remove models whose epoch is not in the keepers set\n    '''", "\n", "removed", "=", "list", "(", ")", "\n", "for", "fn", "in", "os", ".", "listdir", "(", "dpath", ")", ":", "\n", "        ", "fpath", "=", "os", ".", "path", ".", "join", "(", "dpath", ",", "fn", ")", "\n", "if", "(", "fn", "==", "'val'", "or", "fn", "==", "'testimages'", ")", "and", "not", "keep_all_output_images", ":", "\n", "            ", "for", "subdir", "in", "os", ".", "listdir", "(", "fpath", ")", ":", "\n", "                ", "if", "int", "(", "subdir", ")", "not", "in", "keepers", ":", "\n", "                    ", "val_dpath", "=", "os", ".", "path", ".", "join", "(", "fpath", ",", "subdir", ")", "\n", "shutil", ".", "rmtree", "(", "val_dpath", ")", "\n", "removed", ".", "append", "(", "val_dpath", ")", "\n", "", "", "continue", "\n", "", "if", "not", "fn", ".", "startswith", "(", "f'{model_t}_'", ")", ":", "\n", "            ", "continue", "\n", "", "epoch", "=", "int", "(", "fn", ".", "split", "(", "'_'", ")", "[", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", "\n", "if", "epoch", "not", "in", "keepers", ":", "\n", "\n", "            ", "os", ".", "remove", "(", "fpath", ")", "\n", "removed", ".", "append", "(", "fpath", ")", "\n", "", "", "return", "removed", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.__init__": [[60, 69], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "save_dict", "=", "True", ",", "device", "=", "'cuda:0'", ",", "printer", "=", "None", ",", "debug_options", "=", "[", "]", ")", ":", "\n", "        ", "if", "printer", "is", "None", ":", "\n", "            ", "self", ".", "print", "=", "print", "\n", "", "else", ":", "\n", "            ", "self", ".", "print", "=", "printer", ".", "print", "\n", "", "self", ".", "loss", "=", "1", "\n", "self", ".", "save_dict", "=", "save_dict", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "debug_options", "=", "debug_options", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.save_model": [[70, 76], ["os.path.join", "torch.save", "torch.save", "nn_common.Model.model.state_dict"], "methods", ["None"], ["", "def", "save_model", "(", "self", ",", "model_dir", ",", "epoch", ",", "name", ")", ":", "\n", "        ", "save_path", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "'%s_%u.pt'", "%", "(", "name", ",", "epoch", ")", ")", "\n", "if", "self", ".", "save_dict", ":", "\n", "            ", "torch", ".", "save", "(", "self", ".", "model", ".", "state_dict", "(", ")", ",", "save_path", ")", "\n", "", "else", ":", "\n", "            ", "torch", ".", "save", "(", "self", ".", "model", ",", "save_path", "+", "'h'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.complete_path": [[77, 117], ["os.path.isfile", "os.path.join", "os.path.join", "os.path.isdir", "int", "os.path.isfile", "print", "open", "json.load", "nn_common.Model.complete_path.find_best"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["", "", "@", "staticmethod", "\n", "def", "complete_path", "(", "path", ",", "models_dpath", ",", "keyword", "=", "''", ")", ":", "\n", "        ", "'''\n        Return a filepath for instantiate_model when the provided model_path is a directory (path, \n        or name of a directory located in models_dpath)\n        models_dpath is the root directory where all models would be located\n        '''", "\n", "def", "find_highest", "(", "paths", ",", "model_t", ")", ":", "\n", "            ", "best", "=", "[", "None", ",", "0", "]", "\n", "for", "path", "in", "paths", ":", "\n", "                ", "curval", "=", "int", "(", "path", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", "\n", "if", "curval", ">", "best", "[", "1", "]", "and", "model_t", "in", "path", ":", "\n", "                    ", "best", "=", "[", "path", ",", "curval", "]", "\n", "", "", "return", "best", "[", "0", "]", "\n", "", "def", "find_best", "(", "dpath", ",", "model_t", ")", ":", "\n", "            ", "if", "model_t", "!=", "'generator'", ":", "\n", "                ", "return", "None", "# hardcoded rules and not implemented for discriminators", "\n", "", "resdpath", "=", "os", ".", "path", ".", "join", "(", "dpath", ",", "'trainres.json'", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "resdpath", ")", ":", "\n", "                ", "print", "(", "f'find_best did not find {resdpath}'", ")", "\n", "return", "None", "\n", "", "with", "open", "(", "resdpath", ",", "'r'", ")", "as", "fp", ":", "\n", "                ", "res", "=", "json", ".", "load", "(", "fp", ")", "\n", "best_epoch", "=", "res", "[", "'best_epoch'", "]", "[", "'validation_loss'", "]", "\n", "", "return", "os", ".", "path", ".", "join", "(", "dpath", ",", "f'generator_{best_epoch}.pt'", ")", "\n", "", "if", "os", ".", "path", ".", "isfile", "(", "path", ")", ":", "\n", "# path exists; nothing to do", "\n", "            ", "return", "path", "\n", "", "elif", "os", ".", "path", ".", "isdir", "(", "path", ")", ":", "\n", "# path is a directory; try to find best model from json, or return latest", "\n", "            ", "best_model_path", "=", "find_best", "(", "path", ",", "model_t", "=", "keyword", ")", "\n", "if", "best_model_path", "is", "not", "None", ":", "\n", "                ", "return", "best_model_path", "\n", "", "return", "os", ".", "path", ".", "join", "(", "path", ",", "find_highest", "(", "os", ".", "listdir", "(", "path", ")", ",", "keyword", ")", ")", "\n", "", "elif", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "models_dpath", ",", "path", ")", ")", ":", "\n", "# if models_dpath/path is a directory, recurse", "\n", "            ", "return", "Model", ".", "complete_path", "(", "os", ".", "path", ".", "join", "(", "models_dpath", ",", "path", ")", ",", "keyword", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"Model path not found: %s\"", "%", "path", ")", "\n", "exit", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.instantiate_model": [[118, 140], ["torch.load.to", "parameters.update", "nn_common.Model.complete_path", "nn_common.Model.complete_path", "dict", "torch.load", "nn_common.Model.complete_path", "torch.load.load_state_dict", "pfun", "exit", "globals", "parameter.split", "torch.load", "strparameters.split", "globals"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.complete_path", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.complete_path", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.complete_path"], ["", "", "@", "staticmethod", "\n", "def", "instantiate_model", "(", "models_dpath", ",", "model_path", "=", "None", ",", "network", "=", "None", ",", "device", "=", "'cuda:0'", ",", "strparameters", "=", "None", ",", "pfun", "=", "print", ",", "keyword", "=", "''", ",", "**", "parameters", ")", ":", "\n", "        ", "'''\n        instantiate the internal model used by a Model object\n        '''", "\n", "model", "=", "None", "\n", "if", "strparameters", "is", "not", "None", "and", "strparameters", "!=", "\"\"", ":", "\n", "            ", "parameters", ".", "update", "(", "dict", "(", "[", "parameter", ".", "split", "(", "'='", ")", "for", "parameter", "in", "strparameters", ".", "split", "(", "','", ")", "]", ")", ")", "\n", "", "if", "model_path", "is", "not", "None", ":", "\n", "            ", "path", "=", "Model", ".", "complete_path", "(", "path", "=", "model_path", ",", "keyword", "=", "keyword", ",", "models_dpath", "=", "models_dpath", ")", "\n", "if", "path", ".", "endswith", "(", "'.pth'", ")", ":", "\n", "                ", "model", "=", "torch", ".", "load", "(", "path", ",", "map_location", "=", "device", ")", "\n", "", "elif", "path", ".", "endswith", "(", "'pt'", ")", ":", "\n", "                ", "assert", "network", "is", "not", "None", "\n", "model", "=", "globals", "(", ")", "[", "network", "]", "(", "**", "parameters", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "path", ",", "map_location", "=", "device", ")", ")", "\n", "", "else", ":", "\n", "                ", "pfun", "(", "'Error: unable to load invalid model path: %s'", "%", "path", ")", "\n", "exit", "(", "1", ")", "\n", "", "", "else", ":", "\n", "            ", "model", "=", "globals", "(", ")", "[", "network", "]", "(", "**", "parameters", ")", "\n", "", "return", "model", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.eval": [[142, 145], ["nn_common.Model.model.eval"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.eval"], ["", "def", "eval", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", "=", "self", ".", "model", ".", "eval", "(", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.train": [[146, 149], ["nn_common.Model.model.train"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.train"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", "=", "self", ".", "model", ".", "train", "(", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.__init__": [[165, 190], ["nn_common.Model.__init__", "dict", "nn_common.Generator.instantiate_model", "torch.optim.Adam", "pt_losses.SSIM_loss().to", "torch.nn.L1Loss().to", "torch.nn.MSELoss().to", "pt_losses.MS_SSIM_loss().to", "nn_common.Generator.print", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "nn_common.Generator.model.parameters", "pt_losses.SSIM_loss", "torch.nn.L1Loss", "torch.nn.MSELoss", "pt_losses.MS_SSIM_loss", "torch.nn.MSELoss", "torch.nn.MSELoss"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.instantiate_model", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["    ", "def", "__init__", "(", "self", ",", "network", ",", "device", ",", "weights", ",", "beta1", ",", "lr", ",", "patience", ",", "models_dpath", ",", "model_path", "=", "None", ",", "\n", "activation", "=", "'PReLU'", ",", "funit", "=", "32", ",", "printer", "=", "None", ",", "compute_SSIM_anyway", "=", "False", ",", "\n", "save_dict", "=", "True", ",", "debug_options", "=", "[", "]", ",", "reduce_lr_factor", "=", ".75", ")", ":", "\n", "        ", "Model", ".", "__init__", "(", "self", ",", "save_dict", ",", "device", ",", "printer", ",", "debug_options", "=", "[", "]", ")", "\n", "self", ".", "weights", "=", "weights", "\n", "self", ".", "criterions", "=", "dict", "(", ")", "\n", "if", "weights", "[", "'SSIM'", "]", ">", "0", "or", "compute_SSIM_anyway", ":", "\n", "            ", "self", ".", "criterions", "[", "'SSIM'", "]", "=", "pt_losses", ".", "SSIM_loss", "(", ")", ".", "to", "(", "device", ")", "\n", "", "if", "weights", "[", "'L1'", "]", ">", "0", ":", "\n", "            ", "self", ".", "criterions", "[", "'L1'", "]", "=", "torch", ".", "nn", ".", "L1Loss", "(", "reduction", "=", "None", ")", ".", "to", "(", "device", ")", "\n", "", "if", "weights", "[", "'MSE'", "]", ">", "0", ":", "\n", "            ", "self", ".", "criterions", "[", "'MSE'", "]", "=", "torch", ".", "nn", ".", "MSELoss", "(", "reduction", "=", "None", ")", ".", "to", "(", "device", ")", "\n", "", "if", "weights", "[", "'MSSSIM'", "]", ">", "0", ":", "\n", "            ", "self", ".", "criterions", "[", "'MSSSIM'", "]", "=", "pt_losses", ".", "MS_SSIM_loss", "(", ")", ".", "to", "(", "device", ")", "\n", "", "if", "weights", "[", "'D1'", "]", ">", "0", ":", "\n", "            ", "self", ".", "print", "(", "'DBG/FIXME may need to mess with the losses reduction for discriminator compatibility'", ")", "\n", "self", ".", "criterions", "[", "'D1'", "]", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", ".", "to", "(", "device", ")", "\n", "", "if", "weights", "[", "'D2'", "]", ">", "0", ":", "\n", "            ", "self", ".", "criterions", "[", "'D2'", "]", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", ".", "to", "(", "device", ")", "\n", "", "self", ".", "model", "=", "self", ".", "instantiate_model", "(", "model_path", "=", "model_path", ",", "network", "=", "network", ",", "pfun", "=", "self", ".", "print", ",", "device", "=", "device", ",", "funit", "=", "funit", ",", "keyword", "=", "'generator'", ",", "models_dpath", "=", "models_dpath", ",", "activation", "=", "activation", ")", "\n", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "beta1", ",", "0.999", ")", ",", "amsgrad", "=", "True", ")", "\n", "#self.scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(self.optimizer, factor=reduce_lr_factor, verbose=True, threshold=1e-8, patience=patience)", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "loss", "=", "{", "'SSIM'", ":", "1", ",", "'L1'", ":", "1", ",", "'D1'", ":", "1", ",", "'D2'", ":", "1", ",", "'MSE'", ":", "1", ",", "'MSSSIM'", ":", "1", ",", "'weighted'", ":", "1", "}", "\n", "self", ".", "compute_SSIM_anyway", "=", "compute_SSIM_anyway", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.get_loss": [[191, 198], ["nn_common.Generator.loss.items"], "methods", ["None"], ["", "def", "get_loss", "(", "self", ",", "pretty_printed", "=", "False", ",", "component", "=", "'weighted'", ")", ":", "\n", "        ", "'''\n        Return a component of the last computed loss (print-only; no compute)\n        '''", "\n", "if", "pretty_printed", ":", "\n", "            ", "return", "\", \"", ".", "join", "(", "[", "\"%s: %.3f\"", "%", "(", "key", ",", "val", ")", "if", "val", "!=", "1", "else", "'NA'", "for", "key", ",", "val", "in", "self", ".", "loss", ".", "items", "(", ")", "]", ")", "\n", "", "return", "self", ".", "loss", "[", "component", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.denoise_batch": [[199, 201], ["nn_common.Generator.model().clip", "nn_common.Generator.model"], "methods", ["None"], ["", "def", "denoise_batch", "(", "self", ",", "noisy_batch", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "noisy_batch", ")", ".", "clip", "(", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.learn": [[202, 220], ["nn_common.Generator.compute_loss", "nn_common.Generator.backward", "nn_common.Generator.optimizer.step", "nn_common.Generator.optimizer.zero_grad"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.compute_loss", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.zero_grad"], ["", "def", "learn", "(", "self", ",", "generated_batch_cropped", ",", "clean_batch_cropped", ",", "discriminators_predictions", "=", "[", "None", ",", "None", "]", ")", ":", "\n", "        ", "'''\n        input: self-generated clean batch, noisy batch\n        compute loss and optimize self\n        '''", "\n", "loss", "=", "self", ".", "compute_loss", "(", "generated_batch_cropped", ",", "clean_batch_cropped", ",", "discriminators_predictions", ")", "\n", "#         # too late, must have gotten a bad crop from previous batch", "\n", "#         if loss > 0.4:", "\n", "#             if self.stable:", "\n", "#                 os.makedirs('dbg', exist_ok=True)", "\n", "#                 torchvision.utils.save_image(generated_batch_cropped, os.path.join('dbg', str(self)+'_gen.png'))", "\n", "#                 torchvision.utils.save_image(clean_batch_cropped, os.path.join('dbg', str(self)+'_gt.png'))", "\n", "#                 breakpoint()", "\n", "#         elif loss < 0.2 and not self.stable:", "\n", "#             self.stable = True", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.compute_loss": [[221, 252], ["nn_common.Generator.weights.items", "loss_weighted.mean().item", "nn_common.Generator.loss[].mean().item", "nn_common.Generator.p.print", "loss_weighted.max", "os.makedirs", "torchvision.utils.save_image", "torchvision.utils.save_image", "breakpoint", "loss_weighted.mean", "loss_weighted.min", "os.path.join", "os.path.join", "nn_common.Generator.loss[].mean", "nn_common.gen_target_probabilities", "int", "float", "float", "int", "float", "float", "int"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.gen_target_probabilities"], ["", "def", "compute_loss", "(", "self", ",", "generated_batch_cropped", ",", "clean_batch_cropped", ",", "discriminators_predictions", "=", "[", "None", ",", "None", "]", ")", ":", "\n", "        ", "'''\n        Compute the loss between a denoised and ground-truth batch. Update internal loss dict and\n        return weighted loss tensor.\n        '''", "\n", "loss_weighted", "=", "0", "\n", "for", "loss_name", ",", "weight", "in", "self", ".", "weights", ".", "items", "(", ")", ":", "\n", "            ", "if", "weight", "==", "0", ":", "\n", "                ", "continue", "\n", "", "elif", "loss_name", "[", "0", "]", "==", "'D'", ":", "\n", "                ", "discriminator_predictions", "=", "discriminators_predictions", "[", "int", "(", "loss_name", "[", "1", "]", ")", "]", "\n", "if", "discriminator_predictions", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "self", ".", "loss", "[", "loss_name", "]", "=", "self", ".", "criterions", "[", "loss_name", "]", "(", "\n", "discriminator_predictions", ",", "gen_target_probabilities", "(", "\n", "True", ",", "discriminator_predictions", ".", "shape", ",", "device", "=", "self", ".", "device", ",", "noisy", "=", "False", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "loss", "[", "loss_name", "]", "=", "self", ".", "criterions", "[", "loss_name", "]", "(", "generated_batch_cropped", ",", "\n", "clean_batch_cropped", ")", "\n", "", "loss_weighted", "+=", "self", ".", "loss", "[", "loss_name", "]", "*", "weight", "\n", "self", ".", "loss", "[", "loss_name", "]", "=", "self", ".", "loss", "[", "loss_name", "]", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "", "self", ".", "loss", "[", "'weighted'", "]", "=", "loss_weighted", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "# Debug. can be removed to increase performance slightly", "\n", "if", "self", ".", "loss", "[", "'weighted'", "]", "<", "0.25", "and", "loss_weighted", ".", "min", "(", ")", ">", "0.4", ":", "\n", "            ", "self", ".", "p", ".", "print", "(", "'problematic crop saved to dbg'", ")", "\n", "worstval", ",", "worstindex", "=", "loss_weighted", ".", "max", "(", ")", "\n", "os", ".", "makedirs", "(", "'dbg'", ",", "exist_ok", "=", "True", ")", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "generated_batch_cropped", ",", "os", ".", "path", ".", "join", "(", "'dbg'", ",", "f'{self}_{float(self.loss[\"weighted\"])}_{float(worstval)}_{int(worstindex)}_gen.png'", ")", ")", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "clean_batch_cropped", ",", "os", ".", "path", ".", "join", "(", "'dbg'", ",", "f'{self}_{float(self.loss[\"weighted\"])}_{float(worstval)}_{int(worstindex)}_gt.png'", ")", ")", "\n", "breakpoint", "(", ")", "\n", "", "return", "loss_weighted", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.update_learning_rate": [[253, 257], ["None"], "methods", ["None"], ["", "def", "update_learning_rate", "(", "self", ",", "lr_decay", ")", ":", "\n", "        ", "for", "param_group", "in", "self", ".", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr'", "]", "=", "param_group", "[", "'lr'", "]", "*", "lr_decay", "\n", "", "return", "param_group", "[", "'lr'", "]", "*", "lr_decay", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.zero_grad": [[258, 260], ["nn_common.Generator.optimizer.zero_grad"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.zero_grad"], ["", "def", "zero_grad", "(", "self", ")", ":", "\n", "        ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.tocpu": [[261, 267], ["nn_common.Generator.model.cpu", "nn_common.Generator.criterions.items", "lossf.cpu"], "methods", ["None"], ["", "def", "tocpu", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", "=", "self", ".", "model", ".", "cpu", "(", ")", "\n", "for", "lossname", ",", "lossf", "in", "self", ".", "criterions", ".", "items", "(", ")", ":", "\n", "            ", "if", "lossf", "is", "None", ":", "\n", "                ", "continue", "\n", "", "self", ".", "criterions", "[", "lossname", "]", "=", "lossf", ".", "cpu", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.todevice": [[268, 274], ["nn_common.Generator.model.to", "nn_common.Generator.criterions.items", "lossf.to"], "methods", ["None"], ["", "", "def", "todevice", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", "=", "self", ".", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "for", "lossname", ",", "lossf", "in", "self", ".", "criterions", ".", "items", "(", ")", ":", "\n", "            ", "if", "lossf", "is", "None", ":", "\n", "                ", "continue", "\n", "", "self", ".", "criterions", "[", "lossname", "]", "=", "lossf", ".", "to", "(", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Discriminator.__init__": [[277, 298], ["nn_common.Model.__init__", "nn_common.Discriminator.instantiate_model", "torch.optim.Adam", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.nn.MSELoss().to", "nn_common.Discriminator.model.parameters", "torch.nn.MSELoss"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Model.instantiate_model"], ["    ", "def", "__init__", "(", "self", ",", "models_dpath", ",", "beta1", ",", "lr", ",", "patience", ",", "network", "=", "'Hul112Disc'", ",", "weights_dict_path", "=", "None", ",", "\n", "model_path", "=", "None", ",", "device", "=", "'cuda:0'", ",", "loss_function", "=", "'MSE'", ",", "\n", "activation", "=", "'PReLU'", ",", "funit", "=", "32", ",", "not_conditional", "=", "False", ",", "printer", "=", "None", ",", "save_dict", "=", "True", ",", "\n", "debug_options", "=", "[", "]", ",", "reduce_lr_factor", "=", ".75", ")", ":", "\n", "        ", "Model", ".", "__init__", "(", "self", ",", "save_dict", ",", "device", ",", "printer", ",", "debug_options", ")", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "loss", "=", "1", "\n", "self", ".", "loss_function", "=", "loss_function", "\n", "if", "loss_function", "==", "'MSE'", ":", "\n", "            ", "self", ".", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", ".", "to", "(", "device", ")", "\n", "", "if", "not_conditional", ":", "\n", "            ", "input_channels", "=", "3", "\n", "", "else", ":", "\n", "            ", "input_channels", "=", "6", "\n", "", "self", ".", "model", "=", "self", ".", "instantiate_model", "(", "model_path", "=", "model_path", ",", "models_dpath", "=", "models_dpath", ",", "network", "=", "network", ",", "pfun", "=", "self", ".", "print", ",", "device", "=", "device", ",", "funit", "=", "funit", ",", "input_channels", "=", "input_channels", ")", "\n", "#elif network == 'PatchGAN':", "\n", "#    self.model = net_d = define_D(input_channels, 2*funit, 'basic', gpu_id=device)", "\n", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "beta1", ",", "0.999", ")", ")", "\n", "self", ".", "conditional", "=", "not", "not_conditional", "\n", "self", ".", "predictions_range", "=", "None", "\n", "self", ".", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "self", ".", "optimizer", ",", "factor", "=", "0.75", ",", "verbose", "=", "True", ",", "threshold", "=", "1e-8", ",", "patience", "=", "patience", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Discriminator.update_learning_rate": [[299, 304], ["nn_common.Discriminator.scheduler.step", "nn_common.Discriminator.print"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["", "def", "update_learning_rate", "(", "self", ",", "avg_loss", ")", ":", "\n", "        ", "self", ".", "scheduler", ".", "step", "(", "metrics", "=", "avg_loss", ")", "\n", "lr", "=", "self", ".", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "self", ".", "print", "(", "'Learning rate: %f'", "%", "lr", ")", "\n", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Discriminator.get_loss": [[305, 307], ["None"], "methods", ["None"], ["", "def", "get_loss", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Discriminator.get_predictions_range": [[308, 310], ["str"], "methods", ["None"], ["", "def", "get_predictions_range", "(", "self", ")", ":", "\n", "        ", "return", "'range (r-r+f-f+): '", "+", "str", "(", "self", ".", "predictions_range", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Discriminator.update_loss": [[311, 316], ["nn_common.Discriminator.print", "math.sqrt", "math.sqrt"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["", "def", "update_loss", "(", "self", ",", "loss_fake", ",", "loss_real", ")", ":", "\n", "        ", "if", "self", ".", "loss_function", "==", "'MSE'", ":", "\n", "            ", "self", ".", "loss", "=", "(", "math", ".", "sqrt", "(", "loss_fake", ")", "+", "math", ".", "sqrt", "(", "loss_real", ")", ")", "/", "2", "\n", "", "else", ":", "\n", "            ", "self", ".", "print", "(", "'Error: loss function not implemented: %s'", "%", "(", "self", ".", "loss_function", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Discriminator.discriminate_batch": [[317, 323], ["nn_common.Discriminator.model", "torch.cat"], "methods", ["None"], ["", "", "def", "discriminate_batch", "(", "self", ",", "generated_batch_cropped", ",", "noisy_batch_cropped", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "conditional", ":", "\n", "            ", "fake_batch", "=", "torch", ".", "cat", "(", "[", "noisy_batch_cropped", ",", "generated_batch_cropped", "]", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "fake_batch", "=", "generated_batch_cropped", "\n", "", "return", "self", ".", "model", "(", "fake_batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Discriminator.learn": [[324, 363], ["nn_common.Discriminator.optimizer.zero_grad", "nn_common.Discriminator.model", "nn_common.Discriminator.criterion", "nn_common.Discriminator.item", "nn_common.Discriminator.backward", "nn_common.Discriminator.model", "nn_common.Discriminator.criterion", "nn_common.Discriminator.item", "nn_common.Discriminator.backward", "nn_common.Discriminator.update_loss", "nn_common.Discriminator.optimizer.step", "torch.cat", "torch.cat", "generated_batch_cropped.detach", "os.makedirs", "os.path.join", "torchvision.utils.save_image", "torchvision.utils.save_image", "nn_common.gen_target_probabilities", "nn_common.gen_target_probabilities", "str", "torch.cat().detach().cpu", "torch.cat().detach().cpu", "torch.cat.detach().cpu", "generated_batch_cropped.detach.detach().cpu", "generated_batch_cropped.detach", "time.time", "torch.cat().detach", "torch.cat().detach", "torch.cat.detach", "generated_batch_cropped.detach.detach", "float", "nn_common.Discriminator.min", "nn_common.Discriminator.max", "nn_common.Discriminator.min", "nn_common.Discriminator.max", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Generator.zero_grad", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Discriminator.update_loss", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.gen_target_probabilities", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.gen_target_probabilities"], ["", "def", "learn", "(", "self", ",", "generated_batch_cropped", ",", "clean_batch_cropped", ",", "noisy_batch_cropped", "=", "None", ")", ":", "\n", "        ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "if", "self", ".", "conditional", ":", "\n", "            ", "real_batch", "=", "torch", ".", "cat", "(", "[", "noisy_batch_cropped", ",", "clean_batch_cropped", "]", ",", "1", ")", "\n", "fake_batch", "=", "torch", ".", "cat", "(", "[", "noisy_batch_cropped", ",", "generated_batch_cropped", ".", "detach", "(", ")", "]", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "real_batch", "=", "clean_batch_cropped", "\n", "fake_batch", "=", "generated_batch_cropped", ".", "detach", "(", ")", "\n", "", "if", "'discriminator_input'", "in", "self", ".", "debug_options", ":", "\n", "            ", "os", ".", "makedirs", "(", "'dbg'", ",", "exist_ok", "=", "True", ")", "\n", "batch_savename", "=", "os", ".", "path", ".", "join", "(", "'dbg'", ",", "str", "(", "time", ".", "time", "(", ")", ")", ")", "\n", "if", "self", ".", "conditional", ":", "\n", "                ", "real_batch_detached", "=", "torch", ".", "cat", "(", "[", "real_batch", "[", ":", ",", ":", "3", ",", ":", ",", ":", "]", ",", "real_batch", "[", ":", ",", "3", ":", ",", ":", ",", ":", "]", "]", ",", "0", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "fake_batch_detached", "=", "torch", ".", "cat", "(", "[", "fake_batch", "[", ":", ",", ":", "3", ",", ":", ",", ":", "]", ",", "fake_batch", "[", ":", ",", "3", ":", ",", ":", ",", ":", "]", "]", ",", "0", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "", "else", ":", "\n", "                ", "real_batch_detached", "=", "real_batch", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "fake_batch_detached", "=", "fake_batch", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "", "torchvision", ".", "utils", ".", "save_image", "(", "real_batch_detached", ",", "batch_savename", "+", "'_real.png'", ")", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "fake_batch_detached", ",", "batch_savename", "+", "'_fake.png'", ")", "\n", "\n", "", "pred_real", "=", "self", ".", "model", "(", "real_batch", ")", "\n", "loss_real", "=", "self", ".", "criterion", "(", "pred_real", ",", "\n", "gen_target_probabilities", "(", "True", ",", "pred_real", ".", "shape", ",", "\n", "device", "=", "self", ".", "device", ",", "noisy", "=", "True", ")", ")", "\n", "loss_real_detached", "=", "loss_real", ".", "item", "(", ")", "\n", "loss_real", ".", "backward", "(", ")", "\n", "pred_fake", "=", "self", ".", "model", "(", "fake_batch", ")", "\n", "loss_fake", "=", "self", ".", "criterion", "(", "pred_fake", ",", "\n", "gen_target_probabilities", "(", "False", ",", "pred_fake", ".", "shape", ",", "\n", "device", "=", "self", ".", "device", ",", "\n", "noisy", "=", "self", ".", "loss", "<", "0.25", ")", ")", "\n", "loss_fake_detached", "=", "loss_fake", ".", "item", "(", ")", "\n", "loss_fake", ".", "backward", "(", ")", "\n", "try", ":", "\n", "            ", "self", ".", "predictions_range", "=", "\", \"", ".", "join", "(", "[", "\"{:.2}\"", ".", "format", "(", "float", "(", "i", ")", ")", "for", "i", "in", "(", "pred_real", ".", "min", "(", ")", ",", "pred_real", ".", "max", "(", ")", ",", "pred_fake", ".", "min", "(", ")", ",", "pred_fake", ".", "max", "(", ")", ")", "]", ")", "\n", "", "except", ":", "\n", "            ", "self", ".", "predictions_range", "=", "'(not implemented)'", "\n", "", "self", ".", "update_loss", "(", "loss_fake_detached", ",", "loss_real_detached", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.__init__": [[366, 370], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "tostdout", "=", "True", ",", "tofile", "=", "True", ",", "file_path", "=", "'log'", ")", ":", "\n", "        ", "self", ".", "tostdout", "=", "tostdout", "\n", "self", ".", "tofile", "=", "tofile", "\n", "self", ".", "file_path", "=", "file_path", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print": [[371, 380], ["nn_common.Printer.print"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["", "def", "print", "(", "self", ",", "msg", ")", ":", "\n", "        ", "if", "self", ".", "tostdout", ":", "\n", "            ", "print", "(", "msg", ")", "\n", "", "if", "self", ".", "tofile", ":", "\n", "            ", "try", ":", "\n", "                ", "with", "open", "(", "self", ".", "file_path", ",", "'a'", ")", "as", "f", ":", "\n", "                    ", "f", ".", "write", "(", "str", "(", "msg", ")", "+", "'\\n'", ")", "\n", "", "", "except", "Exception", "as", "e", ":", "\n", "                ", "print", "(", "'Warning: could not write to log: %s'", "%", "e", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.get_test_reserve_list": [[150, 162], ["len", "test_reserve[].endswith", "open", "yaml.safe_load"], "function", ["None"], ["", "", "def", "get_test_reserve_list", "(", "test_reserve", ")", ":", "\n", "    ", "'''\n    input: test_reserve argument (list or yaml path)\n    output: test_reserve list\n    '''", "\n", "if", "len", "(", "test_reserve", ")", "==", "1", ":", "\n", "        ", "if", "test_reserve", "[", "0", "]", ".", "endswith", "(", "'.yaml'", ")", ":", "\n", "            ", "with", "open", "(", "test_reserve", "[", "0", "]", ",", "'r'", ")", "as", "fp", ":", "\n", "                ", "return", "yaml", ".", "safe_load", "(", "fp", ")", "\n", "", "", "elif", "test_reserve", "[", "0", "]", "==", "'0'", ":", "\n", "            ", "return", "[", "]", "\n", "", "", "return", "test_reserve", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.gen_target_probabilities": [[404, 422], ["torch.zeros.to", "torch.ones", "torch.zeros", "torch.rand", "torch.rand"], "function", ["None"], ["", "", "", "", "def", "gen_target_probabilities", "(", "target_real", ",", "target_probabilities_shape", ",", "device", "=", "None", ",", "invert_probabilities", "=", "False", ",", "noisy", "=", "True", ")", ":", "\n", "    ", "'''\n    fuzziness for the discriminator's targets, because blind confidence is not right.\n    '''", "\n", "if", "(", "target_real", "and", "not", "invert_probabilities", ")", "or", "(", "not", "target_real", "and", "invert_probabilities", ")", ":", "\n", "        ", "if", "noisy", ":", "\n", "            ", "res", "=", "19", "/", "20", "+", "torch", ".", "rand", "(", "target_probabilities_shape", ")", "/", "20", "\n", "", "else", ":", "\n", "            ", "res", "=", "torch", ".", "ones", "(", "target_probabilities_shape", ")", "\n", "", "", "else", ":", "\n", "        ", "if", "noisy", ":", "\n", "            ", "res", "=", "torch", ".", "rand", "(", "target_probabilities_shape", ")", "/", "20", "\n", "", "else", ":", "\n", "            ", "res", "=", "torch", ".", "zeros", "(", "target_probabilities_shape", ")", "\n", "", "", "if", "device", "is", "None", ":", "\n", "        ", "return", "res", "\n", "", "else", ":", "\n", "        ", "return", "res", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.get_weights": [[424, 454], ["print", "print", "sum", "weights.keys", "weights.values"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["", "", "def", "get_weights", "(", "args", ")", ":", "\n", "    ", "total", "=", "0", "\n", "weights", "=", "{", "'MSSSIM'", ":", "0", ",", "'L1'", ":", "0", ",", "'MSE'", ":", "0", ",", "'SSIM'", ":", "0", ",", "'D1'", ":", "0", ",", "'D2'", ":", "0", "}", "\n", "if", "args", ".", "weight_SSIM", ":", "\n", "        ", "weights", "[", "'SSIM'", "]", "=", "args", ".", "weight_SSIM", "\n", "total", "+=", "args", ".", "weight_SSIM", "\n", "", "if", "args", ".", "weight_MSSSIM", ":", "\n", "        ", "weights", "[", "'MSSSIM'", "]", "=", "args", ".", "weight_MSSSIM", "\n", "total", "+=", "args", ".", "weight_MSSSIM", "\n", "", "if", "args", ".", "weight_L1", ":", "\n", "        ", "weights", "[", "'L1'", "]", "=", "args", ".", "weight_L1", "\n", "total", "+=", "args", ".", "weight_L1", "\n", "", "if", "args", ".", "weight_D1", ":", "\n", "        ", "weights", "[", "'D1'", "]", "=", "args", ".", "weight_D1", "\n", "total", "+=", "args", ".", "weight_D1", "\n", "", "if", "args", ".", "weight_D2", ":", "\n", "        ", "weights", "[", "'D2'", "]", "=", "args", ".", "weight_D2", "\n", "total", "+=", "args", ".", "weight_D2", "\n", "", "if", "args", ".", "weight_MSE", ":", "\n", "        ", "weights", "[", "'MSE'", "]", "=", "args", ".", "weight_MSE", "\n", "total", "+=", "args", ".", "weight_MSE", "\n", "", "if", "total", "==", "0", ":", "\n", "        ", "weights", "=", "default_values", "[", "'weights'", "]", "\n", "print", "(", "'Using default weights'", ")", "\n", "", "elif", "total", "!=", "1", ":", "\n", "        ", "for", "akey", "in", "weights", ".", "keys", "(", ")", ":", "\n", "            ", "weights", "[", "'akey'", "]", "/=", "total", "\n", "", "", "assert", "sum", "(", "weights", ".", "values", "(", ")", ")", "==", "1", ",", "weights", "\n", "print", "(", "f'Loss weights: {weights}'", ")", "\n", "return", "weights", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.tools.graph_utils.gen_markers": [[1, 8], ["len", "len", "markers.append"], "function", ["None"], ["def", "gen_markers", "(", "components", ")", ":", "\n", "    ", "markers", "=", "[", "]", "\n", "i", "=", "0", "\n", "while", "len", "(", "markers", ")", "<", "len", "(", "components", ")", ":", "\n", "        ", "markers", ".", "append", "(", "\"$%i$\"", "%", "i", ")", "\n", "i", "+=", "1", "\n", "", "return", "markers", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.tools.graph_utils.make_markers_dict": [[9, 19], ["graph_utils.gen_markers", "dict", "len"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.graph_utils.gen_markers"], ["", "def", "make_markers_dict", "(", "components", ")", ":", "\n", "    ", "markers", "=", "gen_markers", "(", "components", ")", "\n", "markersdict", "=", "dict", "(", ")", "\n", "i", "=", "0", "\n", "for", "acomp", "in", "components", ":", "\n", "        ", "markersdict", "[", "acomp", "]", "=", "markers", "[", "i", "]", "\n", "i", "+=", "1", "\n", "if", "i", ">=", "len", "(", "markers", ")", ":", "\n", "            ", "i", "=", "0", "\n", "", "", "return", "markersdict", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.tools.graph_utils.parse_log_file": [[20, 48], ["print", "open", "f.readlines", "len", "float", "float", "data.append", "float", "float", "[].split", "l.split", "l.split", "l.split", "l.split"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["", "def", "parse_log_file", "(", "path", ",", "smoothing_factor", "=", "1", ",", "pre", "=", "None", ",", "post", "=", "None", ")", ":", "\n", "    ", "data", "=", "[", "]", "\n", "i", "=", "0", "\n", "t", "=", "0", "\n", "with", "open", "(", "path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "l", "in", "f", ".", "readlines", "(", ")", ":", "\n", "            ", "added_data", "=", "False", "\n", "if", "pre", "is", "not", "None", ":", "\n", "                ", "if", "pre", "in", "l", "and", "post", "in", "l", ":", "\n", "                    ", "t", "+=", "float", "(", "l", ".", "split", "(", "pre", ")", "[", "1", "]", ".", "split", "(", "post", ")", "[", "0", "]", ")", "\n", "added_data", "=", "True", "\n", "", "elif", "pre", "in", "l", ":", "\n", "                    ", "t", "+=", "float", "(", "l", ".", "split", "(", "pre", ")", "[", "1", "]", ")", "\n", "added_data", "=", "True", "\n", "", "", "elif", "'Epoch'", "in", "l", "and", "'nan'", "not", "in", "l", ":", "\n", "                ", "t", "+=", "float", "(", "l", ".", "split", "(", "':'", ")", "[", "-", "1", "]", ")", "\n", "added_data", "=", "True", "\n", "", "elif", "'loss = '", "in", "l", "and", "'time = '", "not", "in", "l", ":", "\n", "                ", "t", "+=", "float", "(", "l", ".", "split", "(", "'loss = '", ")", "[", "-", "1", "]", ")", "\n", "added_data", "=", "True", "\n", "", "if", "added_data", ":", "\n", "                ", "i", "+=", "1", "\n", "if", "i", ">=", "smoothing_factor", ":", "\n", "                    ", "data", ".", "append", "(", "t", "/", "smoothing_factor", ")", "\n", "i", "=", "0", "\n", "t", "=", "0", "\n", "", "", "", "", "print", "(", "\"Added %u points from %s\"", "%", "(", "len", "(", "data", ")", ",", "path", ")", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.tools.grapher.gen_markers": [[68, 75], ["len", "len", "markers.append"], "function", ["None"], ["", "def", "gen_markers", "(", ")", ":", "\n", "    ", "markers", "=", "[", "]", "\n", "i", "=", "0", "\n", "while", "len", "(", "markers", ")", "<", "len", "(", "components", ")", ":", "\n", "        ", "markers", ".", "append", "(", "\"$%i$\"", "%", "i", ")", "\n", "i", "+=", "1", "\n", "", "return", "markers", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.tools.grapher.make_markers_dict": [[76, 85], ["grapher.gen_markers", "dict", "len"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.graph_utils.gen_markers"], ["", "def", "make_markers_dict", "(", "components", "=", "components", ",", "markers", "=", "gen_markers", "(", ")", ")", ":", "\n", "    ", "markersdict", "=", "dict", "(", ")", "\n", "i", "=", "0", "\n", "for", "acomp", "in", "components", ":", "\n", "        ", "markersdict", "[", "acomp", "]", "=", "markers", "[", "i", "]", "\n", "i", "+=", "1", "\n", "if", "i", ">=", "len", "(", "markers", ")", ":", "\n", "            ", "i", "=", "0", "\n", "", "", "return", "markersdict", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.tools.grapher.find_relevant_experiments": [[89, 136], ["os.listdir", "os.path.join", "os.path.isfile", "grapher.find_relevant_experiments.add_exp_to_data"], "function", ["None"], ["def", "find_relevant_experiments", "(", "component", ")", ":", "\n", "    ", "experiments", "=", "os", ".", "listdir", "(", "args", ".", "res_dir", ")", "\n", "data", "[", "component", "]", "=", "{", "'resfiles'", ":", "[", "]", "}", "# check existing if data is needed earlier", "\n", "def", "add_exp_to_data", "(", "experiment", ")", ":", "\n", "        ", "respath", "=", "os", ".", "path", ".", "join", "(", "args", ".", "res_dir", ",", "experiment", ",", "'res.csv'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "respath", ")", ":", "\n", "            ", "data", "[", "component", "]", "[", "'resfiles'", "]", ".", "append", "(", "respath", ")", "\n", "", "", "if", "component", "==", "'Noisy'", ":", "\n", "        ", "return", "add_exp_to_data", "(", "'GT'", ")", "\n", "", "for", "experiment", "in", "experiments", ":", "\n", "        ", "if", "'bm3d'", "in", "experiment", ":", "\n", "            ", "if", "component", "==", "'BM3D'", ":", "\n", "                ", "add_exp_to_data", "(", "experiment", ")", "\n", "", "", "elif", "args", ".", "mode", "!=", "'std'", ":", "\n", "            ", "if", "experiment", "==", "component", ":", "\n", "                ", "add_exp_to_data", "(", "experiment", ")", "\n", "", "", "elif", "'p2p'", "in", "experiment", ":", "\n", "            ", "if", "'not_conditional'", "in", "experiment", ":", "\n", "                ", "if", "component", "==", "'NIND (GAN)'", ":", "\n", "                    ", "add_exp_to_data", "(", "experiment", ")", "\n", "", "", "else", ":", "\n", "                ", "if", "component", "==", "'NIND (cGAN)'", ":", "\n", "                    ", "add_exp_to_data", "(", "experiment", ")", "\n", "", "", "", "elif", "'RedCNN'", "in", "experiment", ":", "\n", "            ", "if", "'Red-Net'", "in", "component", ":", "\n", "                ", "add_exp_to_data", "(", "experiment", ")", "\n", "", "", "elif", "'ISO6400'", "in", "experiment", ":", "\n", "            ", "if", "'ISO6400'", "in", "component", ":", "\n", "                ", "add_exp_to_data", "(", "experiment", ")", "\n", "", "", "elif", "'find_noise'", "in", "experiment", ":", "\n", "            ", "if", "'Model noise'", "in", "component", ":", "\n", "                ", "add_exp_to_data", "(", "experiment", ")", "\n", "", "", "elif", "'--yisx'", "in", "experiment", "and", "'--sigmamax'", "in", "experiment", ":", "\n", "            ", "if", "'Artificial'", "in", "component", ":", "\n", "                ", "add_exp_to_data", "(", "experiment", ")", "\n", "", "", "elif", "'SIDD'", "in", "experiment", "and", "'NIND'", "in", "experiment", ":", "\n", "            ", "if", "'SIDD'", "in", "component", "and", "'NIND'", "in", "component", ":", "\n", "                ", "add_exp_to_data", "(", "experiment", ")", "\n", "", "", "elif", "'SIDD'", "in", "experiment", "and", "'NIND'", "not", "in", "experiment", ":", "\n", "            ", "if", "'SIDD'", "in", "component", "and", "'NIND'", "not", "in", "experiment", ":", "\n", "                ", "add_exp_to_data", "(", "experiment", ")", "\n", "", "", "elif", "'C500D'", "in", "experiment", "and", "'SIDD'", "not", "in", "experiment", ":", "\n", "            ", "if", "'C500D'", "in", "component", "and", "'SIDD'", "not", "in", "component", ":", "\n", "                ", "add_exp_to_data", "(", "experiment", ")", "\n", "", "", "elif", "'run_nn.py'", "in", "experiment", ":", "\n", "            ", "if", "component", "==", "'NIND:X-T1 (U-Net)'", ":", "\n", "                ", "add_exp_to_data", "(", "experiment", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.tools.grapher.parse_resfiles": [[138, 154], ["open", "csv.reader", "res[].split", "iso.split", "float", "float", "float", "float", "respath.split"], "function", ["None"], ["", "", "", "", "def", "parse_resfiles", "(", "component", ")", ":", "\n", "    ", "data", "[", "component", "]", "[", "'results'", "]", "=", "{", "}", "\n", "for", "respath", "in", "data", "[", "component", "]", "[", "'resfiles'", "]", ":", "\n", "        ", "with", "open", "(", "respath", ")", "as", "f", ":", "\n", "            ", "for", "res", "in", "csv", ".", "reader", "(", "f", ")", ":", "\n", "                ", "image", ",", "iso", "=", "res", "[", "0", "]", ".", "split", "(", "'_'", ")", "[", "1", ":", "3", "]", "\n", "isoval", "=", "iso", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "newssim", ",", "newmse", "=", "float", "(", "res", "[", "1", "]", ")", ",", "float", "(", "res", "[", "2", "]", ")", "\n", "oldssim", ",", "oldmse", "=", "0.0", ",", "1.0", "\n", "if", "image", "not", "in", "data", "[", "component", "]", "[", "'results'", "]", ":", "\n", "                    ", "data", "[", "component", "]", "[", "'results'", "]", "[", "image", "]", "=", "{", "}", "\n", "", "if", "isoval", "in", "data", "[", "component", "]", "[", "'results'", "]", "[", "image", "]", ":", "\n", "                    ", "oldssim", "=", "data", "[", "component", "]", "[", "'results'", "]", "[", "image", "]", "[", "isoval", "]", "[", "'ssim'", "]", "\n", "oldmse", "=", "data", "[", "component", "]", "[", "'results'", "]", "[", "image", "]", "[", "isoval", "]", "[", "'mse'", "]", "\n", "", "if", "newssim", ">", "oldssim", ":", "\n", "                    ", "data", "[", "component", "]", "[", "'results'", "]", "[", "image", "]", "[", "isoval", "]", "=", "{", "'ssim'", ":", "float", "(", "res", "[", "1", "]", ")", ",", "'mse'", ":", "float", "(", "res", "[", "2", "]", ")", ",", "'exp'", ":", "respath", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.tools.dl_ds_1.get_img": [[153, 206], ["dl_ds_1.get_img.get_latest_reqimg_info"], "function", ["None"], ["def", "get_img", "(", "bname", ",", "isoval", ",", "ext", ",", "attempts_left", ",", "datelimit", ",", "use_wget", ",", "custom_program", "=", "None", ")", ":", "\n", "    ", "def", "get_latest_reqimg_info", "(", "imname", ",", "datelimit", ")", ":", "\n", "        ", "rparams", "=", "{", "\n", "'action'", ":", "'query'", ",", "\n", "'format'", ":", "'json'", ",", "\n", "'prop'", ":", "'imageinfo'", ",", "\n", "'titles'", ":", "'File:'", "+", "imname", ".", "replace", "(", "'_'", ",", "' '", ")", ",", "\n", "'iistart'", ":", "datelimit", "+", "'T23:59:59Z'", ",", "\n", "'iiprop'", ":", "'timestamp|url|sha1'", ",", "\n", "}", "\n", "request", "=", "session", ".", "get", "(", "url", "=", "apiurl", ",", "params", "=", "rparams", ")", "\n", "try", ":", "\n", "            ", "imageinfo", "=", "next", "(", "iter", "(", "request", ".", "json", "(", ")", "[", "'query'", "]", "[", "'pages'", "]", ".", "values", "(", ")", ")", ")", "[", "'imageinfo'", "]", "[", "0", "]", "\n", "return", "imageinfo", "\n", "", "except", ":", "\n", "            ", "print", "(", "'File not found: %s'", "%", "imname", ")", "\n", "return", "404", "\n", "", "", "def", "checkfile", "(", "path", ",", "reqsha1", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "isfile", "(", "path", ")", ":", "\n", "            ", "return", "False", "\n", "", "with", "open", "(", "path", ",", "'rb'", ")", "as", "file", ":", "\n", "            ", "h", "=", "hashlib", ".", "sha1", "(", "file", ".", "read", "(", ")", ")", "\n", "", "if", "h", ".", "hexdigest", "(", ")", "!=", "reqsha1", ":", "\n", "            ", "print", "(", "'Invalid file: %s'", "%", "path", ")", "\n", "return", "False", "\n", "", "print", "(", "'Validated %s'", "%", "(", "path", ")", ")", "\n", "return", "True", "\n", "", "def", "download", "(", "path", ",", "url", ",", "use_wget", ",", "custom_program", "=", "None", ")", ":", "\n", "        ", "if", "use_wget", ":", "\n", "            ", "subprocess", ".", "run", "(", "[", "'wget'", ",", "url", ",", "'-O'", ",", "path", "]", ")", "\n", "", "elif", "custom_program", ":", "\n", "            ", "subprocess", ".", "run", "(", "[", "custom_program", ",", "url", ",", "'-O'", ",", "path", "]", ")", "\n", "", "else", ":", "\n", "            ", "with", "open", "(", "path", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "response", "=", "requests", ".", "get", "(", "url", ",", "headers", "=", "{", "'user-agent'", ":", "'NIND-download-script/0.0.1'", "}", ")", "\n", "if", "response", ".", "status_code", "!=", "200", ":", "\n", "                    ", "print", "(", "\"Error: %s (hint: try with --use_wget)\"", "%", "response", ".", "reason", ")", "\n", "return", "\n", "", "f", ".", "write", "(", "response", ".", "content", ")", "\n", "print", "(", "'Downloaded %s'", "%", "(", "path", ")", ")", "\n", "f", ".", "flush", "(", ")", "\n", "", "", "", "imname", "=", "'NIND_%s_ISO%s.%s'", "%", "(", "bname", ",", "isoval", ",", "ext", ")", "\n", "imageinfo", "=", "get_latest_reqimg_info", "(", "imname", ",", "datelimit", ")", "\n", "if", "imageinfo", "==", "404", ":", "\n", "        ", "return", "dlerrors", ".", "append", "(", "'Error: %s not found prior to %s'", "%", "(", "imname", ",", "datelimit", ")", ")", "\n", "", "fpath", "=", "os", ".", "path", ".", "join", "(", "bname", ",", "imname", ")", "\n", "reqsha1", "=", "imageinfo", "[", "'sha1'", "]", "\n", "url", "=", "imageinfo", "[", "'url'", "]", "\n", "while", "not", "checkfile", "(", "fpath", ",", "reqsha1", ")", ":", "\n", "        ", "if", "attempts_left", "==", "0", ":", "# negative max_attempts -> unlimited attempts", "\n", "            ", "return", "dlerrors", ".", "append", "(", "'Error: Unable to download %s (source: %s)'", "%", "(", "fpath", ",", "url", ")", ")", "\n", "", "download", "(", "fpath", ",", "url", ",", "use_wget", ",", "custom_program", ")", "\n", "attempts_left", "-=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.tools.crop_ds.findisoval": [[32, 40], ["fn.split", "split.split", "fn[].split", "fn[].split", "fn.find", "fn.find"], "function", ["None"], ["def", "findisoval", "(", "fn", ")", ":", "\n", "    ", "for", "split", "in", "fn", ".", "split", "(", "'_'", ")", ":", "\n", "        ", "if", "'ISO'", "in", "split", ":", "\n", "            ", "return", "split", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "", "elif", "'GT'", "in", "split", "in", "split", ":", "\n", "            ", "return", "fn", "[", "fn", ".", "find", "(", "'GT'", ")", ":", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "", "elif", "'NOISY'", "in", "split", ":", "\n", "            ", "return", "fn", "[", "fn", ".", "find", "(", "'NOISY'", ")", ":", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.DnCNN.__init__": [[16, 40], ["torch.Module.__init__", "int", "layers.append", "range", "layers.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "nnModules.DnCNN._initialize_weights", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "layers.append", "layers.append", "layers.append", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.RReLU", "torch.RReLU", "torch.RReLU", "torch.RReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "layers.append", "layers.append", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.RReLU", "torch.RReLU", "torch.RReLU", "torch.RReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.DnCNN._initialize_weights"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.DnCNN.forward": [[41, 49], ["nnModules.DnCNN.dncnn", "nnModules.DnCNN.dncnn"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.DnCNN._initialize_weights": [[50, 60], ["nnModules.DnCNN.modules", "isinstance", "torch.orthogonal_", "torch.orthogonal_", "torch.orthogonal_", "torch.orthogonal_", "print", "isinstance", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.RedCNN.__init__": [[62, 73], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.RReLU", "torch.RReLU", "torch.RReLU", "torch.RReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.RedCNN.forward": [[75, 98], ["nnModules.RedCNN.relu", "nnModules.RedCNN.relu", "residuals.append", "range", "nnModules.RedCNN.relu", "nnModules.RedCNN.relu", "nnModules.RedCNN.relu", "range", "nnModules.RedCNN.relu", "nnModules.RedCNN.relu", "nnModules.RedCNN.conv_first", "nnModules.RedCNN.conv", "nnModules.RedCNN.clone", "int", "nnModules.RedCNN.relu", "nnModules.RedCNN.relu", "residuals.append", "nnModules.RedCNN.conv", "nnModules.RedCNN.deconv", "int", "nnModules.RedCNN.relu", "nnModules.RedCNN.relu", "nnModules.RedCNN.relu", "nnModules.RedCNN.deconv", "nnModules.RedCNN.deconv_last", "nnModules.RedCNN.conv", "nnModules.RedCNN.conv", "nnModules.RedCNN.clone", "residuals.pop", "nnModules.RedCNN.deconv", "nnModules.RedCNN.deconv", "math.floor", "math.floor", "residuals.pop"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.double_conv.__init__": [[105, 114], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.double_conv.forward": [[116, 119], ["nnModules.double_conv.conv"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.inconv.__init__": [[122, 125], ["torch.Module.__init__", "nnModules.double_conv"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.inconv.forward": [[126, 129], ["nnModules.inconv.conv"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.down.__init__": [[132, 137], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "nnModules.double_conv"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.down.forward": [[139, 142], ["nnModules.down.mpconv"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.up.__init__": [[145, 150], ["torch.Module.__init__", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "nnModules.double_conv"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.up.forward": [[151, 168], ["nnModules.up.up", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "nnModules.up.conv", "x2.size", "torch.pad.size", "x2.size", "torch.pad.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.outconv.__init__": [[171, 174], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.outconv.forward": [[175, 178], ["nnModules.outconv.conv"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.UNet.__init__": [[180, 193], ["torch.Module.__init__", "nnModules.inconv", "nnModules.down", "nnModules.down", "nnModules.down", "nnModules.down", "nnModules.up", "nnModules.up", "nnModules.up", "nnModules.up", "nnModules.outconv"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.UNet.forward": [[194, 210], ["nnModules.UNet.inc", "nnModules.UNet.down1", "nnModules.UNet.down2", "nnModules.UNet.down3", "nnModules.UNet.down4", "nnModules.UNet.up1", "nnModules.UNet.up2", "nnModules.UNet.up3", "nnModules.UNet.up4", "nnModules.UNet.outc", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "hasattr", "hasattr", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.nnModules.init_weights": [[10, 14], ["type", "torch.init.xavier_uniform", "m.bias.data.fill_"], "function", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.PatchGAN.__init__": [[10, 50], ["torch.Module.__init__", "int", "range", "min", "numpy.ceil", "min", "range", "range", "print", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "len", "setattr", "len", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sequential", "torch.Sequential", "torch.Sequential", "str"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "funit", "=", "32", ",", "n_layers", "=", "3", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "use_sigmoid", "=", "False", ",", "getIntermFeat", "=", "False", ")", ":", "\n", "        ", "super", "(", "PatchGAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "getIntermFeat", "=", "getIntermFeat", "\n", "self", ".", "n_layers", "=", "n_layers", "\n", "\n", "kw", "=", "4", "\n", "padw", "=", "int", "(", "np", ".", "ceil", "(", "(", "kw", "-", "1.0", ")", "/", "2", ")", ")", "\n", "sequence", "=", "[", "[", "nn", ".", "Conv2d", "(", "input_channels", ",", "funit", "*", "2", ",", "kernel_size", "=", "kw", ",", "stride", "=", "2", ",", "padding", "=", "padw", ")", ",", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "]", "]", "\n", "\n", "nf", "=", "funit", "*", "2", "\n", "for", "n", "in", "range", "(", "1", ",", "n_layers", ")", ":", "\n", "            ", "nf_prev", "=", "nf", "\n", "nf", "=", "min", "(", "nf", "*", "2", ",", "512", ")", "\n", "sequence", "+=", "[", "[", "\n", "nn", ".", "Conv2d", "(", "nf_prev", ",", "nf", ",", "kernel_size", "=", "kw", ",", "stride", "=", "2", ",", "padding", "=", "padw", ")", ",", "\n", "norm_layer", "(", "nf", ")", ",", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "]", "]", "\n", "\n", "", "nf_prev", "=", "nf", "\n", "nf", "=", "min", "(", "nf", "*", "2", ",", "512", ")", "\n", "sequence", "+=", "[", "[", "\n", "nn", ".", "Conv2d", "(", "nf_prev", ",", "nf", ",", "kernel_size", "=", "kw", ",", "stride", "=", "1", ",", "padding", "=", "padw", ")", ",", "\n", "norm_layer", "(", "nf", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "]", "]", "\n", "\n", "sequence", "+=", "[", "[", "nn", ".", "Conv2d", "(", "nf", ",", "1", ",", "kernel_size", "=", "kw", ",", "stride", "=", "1", ",", "padding", "=", "padw", ")", "]", "]", "\n", "\n", "if", "use_sigmoid", ":", "\n", "            ", "sequence", "+=", "[", "[", "nn", ".", "Sigmoid", "(", ")", "]", "]", "\n", "\n", "", "if", "getIntermFeat", ":", "\n", "            ", "for", "n", "in", "range", "(", "len", "(", "sequence", ")", ")", ":", "\n", "                ", "setattr", "(", "self", ",", "'model'", "+", "str", "(", "n", ")", ",", "nn", ".", "Sequential", "(", "*", "sequence", "[", "n", "]", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "sequence_stream", "=", "[", "]", "\n", "for", "n", "in", "range", "(", "len", "(", "sequence", ")", ")", ":", "\n", "                ", "sequence_stream", "+=", "sequence", "[", "n", "]", "\n", "", "print", "(", "sequence", ")", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "sequence_stream", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.PatchGAN.forward": [[51, 60], ["range", "ThirdPartyNets.PatchGAN.model", "getattr", "res.append", "getattr.", "str"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "self", ".", "getIntermFeat", ":", "\n", "            ", "res", "=", "[", "input", "]", "\n", "for", "n", "in", "range", "(", "self", ".", "n_layers", "+", "2", ")", ":", "\n", "                ", "model", "=", "getattr", "(", "self", ",", "'model'", "+", "str", "(", "n", ")", ")", "\n", "res", ".", "append", "(", "model", "(", "res", "[", "-", "1", "]", ")", ")", "\n", "", "return", "res", "[", "1", ":", "]", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "model", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.double_conv.__init__": [[64, 73], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ")", ":", "\n", "        ", "super", "(", "double_conv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "out_ch", ",", "out_ch", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.double_conv.forward": [[75, 78], ["ThirdPartyNets.double_conv.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.inconv.__init__": [[81, 84], ["torch.Module.__init__", "ThirdPartyNets.double_conv"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ")", ":", "\n", "        ", "super", "(", "inconv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "double_conv", "(", "in_ch", ",", "out_ch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.inconv.forward": [[85, 88], ["ThirdPartyNets.inconv.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.down.__init__": [[91, 96], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "ThirdPartyNets.double_conv"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ")", ":", "\n", "        ", "super", "(", "down", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mpconv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", ",", "\n", "double_conv", "(", "in_ch", ",", "out_ch", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.down.forward": [[98, 101], ["ThirdPartyNets.down.mpconv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "mpconv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.up.__init__": [[104, 109], ["torch.Module.__init__", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "ThirdPartyNets.double_conv"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ")", ":", "\n", "        ", "super", "(", "up", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "ConvTranspose2d", "(", "in_ch", "//", "2", ",", "in_ch", "//", "2", ",", "2", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "conv", "=", "double_conv", "(", "in_ch", ",", "out_ch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.up.forward": [[110, 127], ["ThirdPartyNets.up.up", "torch.pad", "torch.pad", "torch.pad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ThirdPartyNets.up.conv", "x2.size", "torch.pad.size", "x2.size", "torch.pad.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "x1", "=", "self", ".", "up", "(", "x1", ")", "\n", "\n", "# input is CHW", "\n", "diffY", "=", "x2", ".", "size", "(", ")", "[", "2", "]", "-", "x1", ".", "size", "(", ")", "[", "2", "]", "\n", "diffX", "=", "x2", ".", "size", "(", ")", "[", "3", "]", "-", "x1", ".", "size", "(", ")", "[", "3", "]", "\n", "\n", "x1", "=", "F", ".", "pad", "(", "x1", ",", "(", "diffX", "//", "2", ",", "diffX", "-", "diffX", "//", "2", ",", "\n", "diffY", "//", "2", ",", "diffY", "-", "diffY", "//", "2", ")", ")", "\n", "\n", "# for padding issues, see", "\n", "# https://github.com/HaiyongJiang/U-Net-Pytorch-Unstructured-Buggy/commit/0e854509c2cea854e247a9c615f175f76fbb2e3a", "\n", "# https://github.com/xiaopeng-liao/Pytorch-UNet/commit/8ebac70e633bac59fc22bb5195e513d5832fb3bd", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x2", ",", "x1", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.outconv.__init__": [[130, 133], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ")", ":", "\n", "        ", "super", "(", "outconv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.outconv.forward": [[134, 137], ["ThirdPartyNets.outconv.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.UNet.__init__": [[139, 153], ["torch.Module.__init__", "ThirdPartyNets.inconv", "ThirdPartyNets.down", "ThirdPartyNets.down", "ThirdPartyNets.down", "ThirdPartyNets.down", "ThirdPartyNets.up", "ThirdPartyNets.up", "ThirdPartyNets.up", "ThirdPartyNets.up", "ThirdPartyNets.outconv", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", "=", "3", ",", "n_classes", "=", "3", ",", "funit", "=", "64", ",", "find_noise", "=", "False", ")", ":", "\n", "        ", "super", "(", "UNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inc", "=", "inconv", "(", "n_channels", ",", "64", ")", "\n", "self", ".", "down1", "=", "down", "(", "64", ",", "128", ")", "\n", "self", ".", "down2", "=", "down", "(", "128", ",", "256", ")", "\n", "self", ".", "down3", "=", "down", "(", "256", ",", "512", ")", "\n", "self", ".", "down4", "=", "down", "(", "512", ",", "512", ")", "\n", "self", ".", "up1", "=", "up", "(", "1024", ",", "256", ")", "\n", "self", ".", "up2", "=", "up", "(", "512", ",", "128", ")", "\n", "self", ".", "up3", "=", "up", "(", "256", ",", "64", ")", "\n", "self", ".", "up4", "=", "up", "(", "128", ",", "64", ")", "\n", "self", ".", "outc", "=", "outconv", "(", "64", ",", "n_classes", ")", "\n", "self", ".", "find_noise", "=", "find_noise", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.UNet.forward": [[154, 170], ["ThirdPartyNets.UNet.inc", "ThirdPartyNets.UNet.down1", "ThirdPartyNets.UNet.down2", "ThirdPartyNets.UNet.down3", "ThirdPartyNets.UNet.down4", "ThirdPartyNets.UNet.up1", "ThirdPartyNets.UNet.up2", "ThirdPartyNets.UNet.up3", "ThirdPartyNets.UNet.up4", "ThirdPartyNets.UNet.outc", "ThirdPartyNets.UNet.sigmoid", "ThirdPartyNets.UNet.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "find_noise", ":", "\n", "            ", "y", "=", "x", "\n", "", "x1", "=", "self", ".", "inc", "(", "x", ")", "\n", "x2", "=", "self", ".", "down1", "(", "x1", ")", "\n", "x3", "=", "self", ".", "down2", "(", "x2", ")", "\n", "x4", "=", "self", ".", "down3", "(", "x3", ")", "\n", "x5", "=", "self", ".", "down4", "(", "x4", ")", "\n", "x", "=", "self", ".", "up1", "(", "x5", ",", "x4", ")", "\n", "x", "=", "self", ".", "up2", "(", "x", ",", "x3", ")", "\n", "x", "=", "self", ".", "up3", "(", "x", ",", "x2", ")", "\n", "x", "=", "self", ".", "up4", "(", "x", ",", "x1", ")", "\n", "x", "=", "self", ".", "outc", "(", "x", ")", "\n", "if", "self", ".", "find_noise", ":", "\n", "            ", "return", "y", "-", "self", ".", "sigmoid", "(", "x", ")", "\n", "", "return", "self", ".", "sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.MobileNetV3.__init__": [[172, 178], ["super().__init__", "torchvision.models.segmentation.lraspp_mobilenet_v3_large", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "torchvision", ".", "models", ".", "segmentation", ".", "lraspp_mobilenet_v3_large", "(", "pretrained", "=", "True", ",", "progress", "=", "True", ")", "\n", "\n", "self", ".", "net", ".", "classifier", ".", "low_classifier", "=", "torch", ".", "nn", ".", "Conv2d", "(", "40", ",", "3", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "net", ".", "classifier", ".", "high_classifier", "=", "torch", ".", "nn", ".", "Conv2d", "(", "128", ",", "3", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.MobileNetV3.forward": [[178, 180], ["ThirdPartyNets.MobileNetV3.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "net", "(", "x", ")", "[", "'out'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.deeplabv3_resnet101.__init__": [[182, 186], ["super().__init__", "torchvision.models.segmentation.deeplabv3_resnet101", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "torchvision", ".", "models", ".", "segmentation", ".", "deeplabv3_resnet101", "(", "pretrained", "=", "True", ",", "progress", "=", "True", ")", "\n", "self", ".", "net", ".", "aux_classifier", "[", "4", "]", "=", "torch", ".", "nn", ".", "Conv2d", "(", "256", ",", "3", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.ThirdPartyNets.deeplabv3_resnet101.forward": [[186, 188], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.Hul.Hulb128Net.__init__": [[13, 213], ["torch.Module.__init__", "int", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ReLU", "torch.ReLU", "torch.PReLU", "torch.PReLU", "torch.Sigmoid", "torch.Sigmoid", "print"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["    ", "def", "__init__", "(", "self", ",", "funit", "=", "32", ",", "activation", "=", "'PReLU'", ")", ":", "\n", "        ", "super", "(", "Hulb128Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "funit", "=", "int", "(", "funit", ")", "\n", "self", ".", "enc128to126std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc126to122std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc122to118std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc126to122dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc122to118dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc128to118dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "5", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc118to114std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc118to114dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc114to38str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc38to34std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc34to30std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc38to34dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc34to30dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc30to10str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc10to6std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc6to2std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc10to6dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc6to2dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec2to6std", "=", "nn", ".", "Sequential", "(", "\n", "# in 0+12 out 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec6to10std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec2to6dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 0+8 out 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec6to10dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec10to30str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out:5", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "5", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec30to34std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+5, out:3", "\n", "nn", ".", "ConvTranspose2d", "(", "9", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec30to34dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+5, out:3", "\n", "nn", ".", "ConvTranspose2d", "(", "9", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec34to38std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec34to38dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec38to114str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 4", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec114to118std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec114to118dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec118to122std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec118to122dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec122to126std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec122to126dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec126to128std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2+6", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "3", ",", "1", ")", ",", "\n", ")", "\n", "if", "activation", "is", "None", "or", "activation", "==", "'None'", ":", "\n", "            ", "self", ".", "activation", "=", "None", "\n", "", "elif", "activation", "==", "'ReLU'", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "", "elif", "activation", "==", "'PReLU'", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", "\n", "", "elif", "activation", "==", "'Sigmoid'", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Error: unknown activation (%s)'", "%", "activation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.Hul.Hulb128Net.forward": [[214, 251], ["Hul.Hulb128Net.enc128to126std", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hulb128Net.enc114to38str", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hulb128Net.enc30to10str", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hulb128Net.dec126to128std", "Hul.Hulb128Net.activation", "Hul.Hulb128Net.enc126to122std", "Hul.Hulb128Net.enc126to122dil", "Hul.Hulb128Net.enc122to118std", "Hul.Hulb128Net.enc122to118dil", "Hul.Hulb128Net.enc128to118dil", "Hul.Hulb128Net.enc118to114std", "Hul.Hulb128Net.enc118to114dil", "Hul.Hulb128Net.enc38to34std", "Hul.Hulb128Net.enc38to34dil", "Hul.Hulb128Net.enc34to30std", "Hul.Hulb128Net.enc34to30dil", "Hul.Hulb128Net.enc10to6std", "Hul.Hulb128Net.enc10to6dil", "Hul.Hulb128Net.enc6to2std", "Hul.Hulb128Net.enc6to2dil", "Hul.Hulb128Net.dec2to6std", "Hul.Hulb128Net.dec2to6dil", "Hul.Hulb128Net.dec6to10std", "Hul.Hulb128Net.dec6to10dil", "Hul.Hulb128Net.dec10to30str", "Hul.Hulb128Net.dec30to34std", "Hul.Hulb128Net.dec30to34dil", "Hul.Hulb128Net.dec34to38std", "Hul.Hulb128Net.dec34to38dil", "Hul.Hulb128Net.dec38to114str", "Hul.Hulb128Net.dec114to118std", "Hul.Hulb128Net.dec114to118dil", "Hul.Hulb128Net.dec118to122std", "Hul.Hulb128Net.dec118to122dil", "Hul.Hulb128Net.dec122to126std", "Hul.Hulb128Net.dec122to126dil"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# down", "\n", "# 160 to 150", "\n", "        ", "l126", "=", "self", ".", "enc128to126std", "(", "x", ")", "\n", "l122", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc126to122std", "(", "l126", ")", ",", "self", ".", "enc126to122dil", "(", "l126", ")", "]", ",", "1", ")", "\n", "l118", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc122to118std", "(", "l122", ")", ",", "self", ".", "enc122to118dil", "(", "l122", ")", ",", "self", ".", "enc128to118dil", "(", "x", ")", "]", ",", "1", ")", "\n", "del", "(", "x", ")", "\n", "l114", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc118to114std", "(", "l118", ")", ",", "self", ".", "enc118to114dil", "(", "l118", ")", "]", ",", "1", ")", "\n", "l38", "=", "self", ".", "enc114to38str", "(", "l114", ")", "\n", "l34", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc38to34std", "(", "l38", ")", ",", "self", ".", "enc38to34dil", "(", "l38", ")", "]", ",", "1", ")", "\n", "l30", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc34to30std", "(", "l34", ")", ",", "self", ".", "enc34to30dil", "(", "l34", ")", "]", ",", "1", ")", "\n", "l10", "=", "self", ".", "enc30to10str", "(", "l30", ")", "\n", "l6", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc10to6std", "(", "l10", ")", ",", "self", ".", "enc10to6dil", "(", "l10", ")", "]", ",", "1", ")", "\n", "l2", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc6to2std", "(", "l6", ")", ",", "self", ".", "enc6to2dil", "(", "l6", ")", "]", ",", "1", ")", "\n", "# up", "\n", "l6", "=", "torch", ".", "cat", "(", "[", "l6", ",", "self", ".", "dec2to6std", "(", "l2", ")", ",", "self", ".", "dec2to6dil", "(", "l2", ")", "]", ",", "1", ")", "\n", "del", "(", "l2", ")", "\n", "l10", "=", "torch", ".", "cat", "(", "[", "l10", ",", "self", ".", "dec6to10std", "(", "l6", ")", ",", "self", ".", "dec6to10dil", "(", "l6", ")", "]", ",", "1", ")", "\n", "del", "(", "l6", ")", "\n", "l30", "=", "torch", ".", "cat", "(", "[", "l30", ",", "self", ".", "dec10to30str", "(", "l10", ")", "]", ",", "1", ")", "\n", "del", "(", "l10", ")", "\n", "l34", "=", "torch", ".", "cat", "(", "[", "l34", ",", "self", ".", "dec30to34std", "(", "l30", ")", ",", "self", ".", "dec30to34dil", "(", "l30", ")", "]", ",", "1", ")", "\n", "del", "(", "l30", ")", "\n", "l38", "=", "torch", ".", "cat", "(", "[", "l38", ",", "self", ".", "dec34to38std", "(", "l34", ")", ",", "self", ".", "dec34to38dil", "(", "l34", ")", "]", ",", "1", ")", "\n", "del", "(", "l34", ")", "\n", "l114", "=", "torch", ".", "cat", "(", "[", "l114", ",", "self", ".", "dec38to114str", "(", "l38", ")", "]", ",", "1", ")", "\n", "del", "(", "l38", ")", "\n", "l118", "=", "torch", ".", "cat", "(", "[", "l118", ",", "self", ".", "dec114to118std", "(", "l114", ")", ",", "self", ".", "dec114to118dil", "(", "l114", ")", "]", ",", "1", ")", "\n", "del", "(", "l114", ")", "\n", "l122", "=", "torch", ".", "cat", "(", "[", "l122", ",", "self", ".", "dec118to122std", "(", "l118", ")", ",", "self", ".", "dec118to122dil", "(", "l118", ")", "]", ",", "1", ")", "\n", "del", "(", "l118", ")", "\n", "l126", "=", "torch", ".", "cat", "(", "[", "l126", ",", "self", ".", "dec122to126std", "(", "l122", ")", ",", "self", ".", "dec122to126dil", "(", "l122", ")", "]", ",", "1", ")", "\n", "res", "=", "self", ".", "dec126to128std", "(", "l126", ")", "\n", "if", "self", ".", "activation", "is", "None", ":", "\n", "            ", "return", "res", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "activation", "(", "res", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.Hul.Hul112Disc.__init__": [[256, 403], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "torch.PReLU", "torch.PReLU", "torch.Sigmoid", "torch.Sigmoid", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", "=", "3", ",", "funit", "=", "32", ",", "finalpool", "=", "False", ",", "out_activation", "=", "'PReLU'", ")", ":", "\n", "        ", "super", "(", "Hul112Disc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "funit", "=", "funit", "\n", "self", ".", "enc112to108std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc108to104std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc112to108dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc108to104dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc104to102std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc112to102dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "5", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc102to34str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc34to30std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc30to26std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc26to22std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc22to18std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc34to30dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc30to26dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc26to22dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc22to18dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc18to6str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "\n", "if", "not", "finalpool", ":", "\n", "            ", "self", ".", "enc6to2std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc6to2dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "decide", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "1", "*", "funit", ",", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "1", "*", "funit", ",", "1", ",", "1", ")", ",", "\n", "#nn.Sigmoid()", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "enc6to2std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc6to2dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "decide", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "1", ",", "1", ")", ",", "\n", "#nn.Sigmoid(),", "\n", "nn", ".", "AdaptiveMaxPool2d", "(", "1", ")", ",", "\n", ")", "\n", "", "if", "out_activation", "is", "None", "or", "out_activation", "==", "'None'", ":", "\n", "            ", "self", ".", "out_activation", "=", "None", "\n", "", "elif", "out_activation", "==", "'PReLU'", ":", "\n", "            ", "self", ".", "out_activation", "=", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", "\n", "", "elif", "out_activation", "==", "'Sigmoid'", ":", "\n", "            ", "self", ".", "out_activation", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "elif", "out_activation", "==", "'LeakyReLU'", ":", "\n", "            ", "self", ".", "out_activation", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.Hul.Hul112Disc.forward": [[403, 418], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hul112Disc.enc102to34str", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hul112Disc.enc18to6str", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hul112Disc.decide", "Hul.Hul112Disc.out_activation", "Hul.Hul112Disc.enc112to108std", "Hul.Hul112Disc.enc112to108dil", "Hul.Hul112Disc.enc108to104std", "Hul.Hul112Disc.enc108to104dil", "Hul.Hul112Disc.enc104to102std", "Hul.Hul112Disc.enc112to102dil", "Hul.Hul112Disc.enc34to30std", "Hul.Hul112Disc.enc34to30dil", "Hul.Hul112Disc.enc30to26std", "Hul.Hul112Disc.enc30to26dil", "Hul.Hul112Disc.enc26to22std", "Hul.Hul112Disc.enc26to22dil", "Hul.Hul112Disc.enc22to18std", "Hul.Hul112Disc.enc22to18dil", "Hul.Hul112Disc.enc6to2std", "Hul.Hul112Disc.enc6to2dil"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc112to108std", "(", "x", ")", ",", "self", ".", "enc112to108dil", "(", "x", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc108to104std", "(", "layer", ")", ",", "self", ".", "enc108to104dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc104to102std", "(", "layer", ")", ",", "self", ".", "enc112to102dil", "(", "x", ")", "]", ",", "1", ")", "\n", "layer", "=", "self", ".", "enc102to34str", "(", "layer", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc34to30std", "(", "layer", ")", ",", "self", ".", "enc34to30dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc30to26std", "(", "layer", ")", ",", "self", ".", "enc30to26dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc26to22std", "(", "layer", ")", ",", "self", ".", "enc26to22dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc22to18std", "(", "layer", ")", ",", "self", ".", "enc22to18dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "self", ".", "enc18to6str", "(", "layer", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc6to2std", "(", "layer", ")", ",", "self", ".", "enc6to2dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "self", ".", "decide", "(", "layer", ")", "\n", "if", "self", ".", "out_activation", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "out_activation", "(", "layer", ")", "\n", "", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.Hul.Hulbs128Net.__init__": [[422, 621], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.Conv2d", "torch.Conv2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.SELU", "torch.SELU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ReLU", "torch.ReLU", "PReLU", "SELU", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "funit", "=", "32", ",", "activation", "=", "'PReLU'", ")", ":", "\n", "        ", "super", "(", "Hulbs128Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enc128to126std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc126to122std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc122to118std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc126to122dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc122to118dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc128to118dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "5", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc118to114std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc118to114dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc114to38str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc38to34std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc34to30std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc38to34dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc34to30dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc30to10str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc10to6std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc6to2std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc10to6dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc6to2dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec2to6std", "=", "nn", ".", "Sequential", "(", "\n", "# in 0+12 out 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec6to10std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec2to6dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 0+8 out 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec6to10dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec10to30str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out:5", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "5", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec30to34std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+5, out:3", "\n", "nn", ".", "ConvTranspose2d", "(", "9", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec30to34dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+5, out:3", "\n", "nn", ".", "ConvTranspose2d", "(", "9", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec34to38std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec34to38dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec38to114str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 4", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec114to118std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec114to118dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec118to122std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec118to122dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec122to126std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec122to126dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec126to128std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2+6", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "SELU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "3", ",", "1", ")", ",", "\n", ")", "\n", "if", "activation", "is", "None", "or", "activation", "==", "'None'", ":", "\n", "            ", "self", ".", "activation", "=", "None", "\n", "", "elif", "activation", "==", "'ReLU'", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "", "elif", "activation", "==", "'PReLU'", ":", "\n", "            ", "self", ".", "activation", "=", "PReLU", "(", "init", "=", "0.01", ")", "\n", "", "elif", "activation", "==", "'SELU'", ":", "\n", "            ", "self", ".", "activation", "=", "SELU", "(", ")", "\n", "", "elif", "activation", "==", "'Sigmoid'", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.Hul.Hulbs128Net.forward": [[622, 659], ["Hul.Hulbs128Net.enc128to126std", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hulbs128Net.enc114to38str", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hulbs128Net.enc30to10str", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hulbs128Net.dec126to128std", "Hul.Hulbs128Net.activation", "Hul.Hulbs128Net.enc126to122std", "Hul.Hulbs128Net.enc126to122dil", "Hul.Hulbs128Net.enc122to118std", "Hul.Hulbs128Net.enc122to118dil", "Hul.Hulbs128Net.enc128to118dil", "Hul.Hulbs128Net.enc118to114std", "Hul.Hulbs128Net.enc118to114dil", "Hul.Hulbs128Net.enc38to34std", "Hul.Hulbs128Net.enc38to34dil", "Hul.Hulbs128Net.enc34to30std", "Hul.Hulbs128Net.enc34to30dil", "Hul.Hulbs128Net.enc10to6std", "Hul.Hulbs128Net.enc10to6dil", "Hul.Hulbs128Net.enc6to2std", "Hul.Hulbs128Net.enc6to2dil", "Hul.Hulbs128Net.dec2to6std", "Hul.Hulbs128Net.dec2to6dil", "Hul.Hulbs128Net.dec6to10std", "Hul.Hulbs128Net.dec6to10dil", "Hul.Hulbs128Net.dec10to30str", "Hul.Hulbs128Net.dec30to34std", "Hul.Hulbs128Net.dec30to34dil", "Hul.Hulbs128Net.dec34to38std", "Hul.Hulbs128Net.dec34to38dil", "Hul.Hulbs128Net.dec38to114str", "Hul.Hulbs128Net.dec114to118std", "Hul.Hulbs128Net.dec114to118dil", "Hul.Hulbs128Net.dec118to122std", "Hul.Hulbs128Net.dec118to122dil", "Hul.Hulbs128Net.dec122to126std", "Hul.Hulbs128Net.dec122to126dil"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# down", "\n", "# 160 to 150", "\n", "        ", "l126", "=", "self", ".", "enc128to126std", "(", "x", ")", "\n", "l122", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc126to122std", "(", "l126", ")", ",", "self", ".", "enc126to122dil", "(", "l126", ")", "]", ",", "1", ")", "\n", "l118", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc122to118std", "(", "l122", ")", ",", "self", ".", "enc122to118dil", "(", "l122", ")", ",", "self", ".", "enc128to118dil", "(", "x", ")", "]", ",", "1", ")", "\n", "del", "(", "x", ")", "\n", "l114", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc118to114std", "(", "l118", ")", ",", "self", ".", "enc118to114dil", "(", "l118", ")", "]", ",", "1", ")", "\n", "l38", "=", "self", ".", "enc114to38str", "(", "l114", ")", "\n", "l34", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc38to34std", "(", "l38", ")", ",", "self", ".", "enc38to34dil", "(", "l38", ")", "]", ",", "1", ")", "\n", "l30", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc34to30std", "(", "l34", ")", ",", "self", ".", "enc34to30dil", "(", "l34", ")", "]", ",", "1", ")", "\n", "l10", "=", "self", ".", "enc30to10str", "(", "l30", ")", "\n", "l6", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc10to6std", "(", "l10", ")", ",", "self", ".", "enc10to6dil", "(", "l10", ")", "]", ",", "1", ")", "\n", "l2", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc6to2std", "(", "l6", ")", ",", "self", ".", "enc6to2dil", "(", "l6", ")", "]", ",", "1", ")", "\n", "# up", "\n", "l6", "=", "torch", ".", "cat", "(", "[", "l6", ",", "self", ".", "dec2to6std", "(", "l2", ")", ",", "self", ".", "dec2to6dil", "(", "l2", ")", "]", ",", "1", ")", "\n", "del", "(", "l2", ")", "\n", "l10", "=", "torch", ".", "cat", "(", "[", "l10", ",", "self", ".", "dec6to10std", "(", "l6", ")", ",", "self", ".", "dec6to10dil", "(", "l6", ")", "]", ",", "1", ")", "\n", "del", "(", "l6", ")", "\n", "l30", "=", "torch", ".", "cat", "(", "[", "l30", ",", "self", ".", "dec10to30str", "(", "l10", ")", "]", ",", "1", ")", "\n", "del", "(", "l10", ")", "\n", "l34", "=", "torch", ".", "cat", "(", "[", "l34", ",", "self", ".", "dec30to34std", "(", "l30", ")", ",", "self", ".", "dec30to34dil", "(", "l30", ")", "]", ",", "1", ")", "\n", "del", "(", "l30", ")", "\n", "l38", "=", "torch", ".", "cat", "(", "[", "l38", ",", "self", ".", "dec34to38std", "(", "l34", ")", ",", "self", ".", "dec34to38dil", "(", "l34", ")", "]", ",", "1", ")", "\n", "del", "(", "l34", ")", "\n", "l114", "=", "torch", ".", "cat", "(", "[", "l114", ",", "self", ".", "dec38to114str", "(", "l38", ")", "]", ",", "1", ")", "\n", "del", "(", "l38", ")", "\n", "l118", "=", "torch", ".", "cat", "(", "[", "l118", ",", "self", ".", "dec114to118std", "(", "l114", ")", ",", "self", ".", "dec114to118dil", "(", "l114", ")", "]", ",", "1", ")", "\n", "del", "(", "l114", ")", "\n", "l122", "=", "torch", ".", "cat", "(", "[", "l122", ",", "self", ".", "dec118to122std", "(", "l118", ")", ",", "self", ".", "dec118to122dil", "(", "l118", ")", "]", ",", "1", ")", "\n", "del", "(", "l118", ")", "\n", "l126", "=", "torch", ".", "cat", "(", "[", "l126", ",", "self", ".", "dec122to126std", "(", "l122", ")", ",", "self", ".", "dec122to126dil", "(", "l122", ")", "]", ",", "1", ")", "\n", "res", "=", "self", ".", "dec126to128std", "(", "l126", ")", "\n", "if", "self", ".", "activation", "is", "None", ":", "\n", "            ", "return", "res", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "activation", "(", "res", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.Hul.Hulb112Disc.__init__": [[664, 788], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "torch.PReLU", "torch.PReLU", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", "=", "3", ",", "funit", "=", "32", ",", "finalpool", "=", "False", ",", "out_activation", "=", "'PReLU'", ")", ":", "\n", "        ", "super", "(", "Hulb112Disc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "funit", "=", "funit", "\n", "self", ".", "enc112to108std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc108to104std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc112to108dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc108to104dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc104to102std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc112to102dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "5", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc102to34str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc34to30std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc30to26std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc26to22std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc22to18std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc34to30dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc30to26dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc26to22dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc22to18dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc18to6str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "\n", "\n", "if", "not", "finalpool", ":", "\n", "            ", "self", ".", "enc6to2std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc6to2dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "decide", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "1", "*", "funit", ",", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "1", "*", "funit", ",", "1", ",", "1", ")", ",", "\n", "#nn.Sigmoid()", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "enc6to2std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc6to2dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "decide", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "1", ",", "1", ")", ",", "\n", "#nn.Sigmoid(),", "\n", "nn", ".", "AdaptiveMaxPool2d", "(", "1", ")", ",", "\n", ")", "\n", "", "if", "out_activation", "is", "None", "or", "out_activation", "==", "'None'", ":", "\n", "            ", "self", ".", "out_activation", "=", "None", "\n", "", "elif", "out_activation", "==", "'PReLU'", ":", "\n", "            ", "self", ".", "out_activation", "=", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", "\n", "", "elif", "out_activation", "==", "'Sigmoid'", ":", "\n", "            ", "self", ".", "out_activation", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.Hul.Hulb112Disc.forward": [[788, 803], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hulb112Disc.enc102to34str", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hulb112Disc.enc18to6str", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hulb112Disc.decide", "Hul.Hulb112Disc.out_activation", "Hul.Hulb112Disc.enc112to108std", "Hul.Hulb112Disc.enc112to108dil", "Hul.Hulb112Disc.enc108to104std", "Hul.Hulb112Disc.enc108to104dil", "Hul.Hulb112Disc.enc104to102std", "Hul.Hulb112Disc.enc112to102dil", "Hul.Hulb112Disc.enc34to30std", "Hul.Hulb112Disc.enc34to30dil", "Hul.Hulb112Disc.enc30to26std", "Hul.Hulb112Disc.enc30to26dil", "Hul.Hulb112Disc.enc26to22std", "Hul.Hulb112Disc.enc26to22dil", "Hul.Hulb112Disc.enc22to18std", "Hul.Hulb112Disc.enc22to18dil", "Hul.Hulb112Disc.enc6to2std", "Hul.Hulb112Disc.enc6to2dil"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc112to108std", "(", "x", ")", ",", "self", ".", "enc112to108dil", "(", "x", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc108to104std", "(", "layer", ")", ",", "self", ".", "enc108to104dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc104to102std", "(", "layer", ")", ",", "self", ".", "enc112to102dil", "(", "x", ")", "]", ",", "1", ")", "\n", "layer", "=", "self", ".", "enc102to34str", "(", "layer", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc34to30std", "(", "layer", ")", ",", "self", ".", "enc34to30dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc30to26std", "(", "layer", ")", ",", "self", ".", "enc30to26dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc26to22std", "(", "layer", ")", ",", "self", ".", "enc26to22dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc22to18std", "(", "layer", ")", ",", "self", ".", "enc22to18dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "self", ".", "enc18to6str", "(", "layer", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc6to2std", "(", "layer", ")", ",", "self", ".", "enc6to2dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "self", ".", "decide", "(", "layer", ")", "\n", "if", "self", ".", "out_activation", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "out_activation", "(", "layer", ")", "\n", "", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.Hul.Hull112Disc.__init__": [[807, 954], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "PReLU", "torch.Sigmoid", "torch.Sigmoid", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", "=", "3", ",", "funit", "=", "32", ",", "finalpool", "=", "False", ",", "out_activation", "=", "'PReLU'", ")", ":", "\n", "        ", "super", "(", "Hull112Disc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "funit", "=", "funit", "\n", "self", ".", "enc112to108std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc108to104std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc112to108dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc108to104dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc104to102std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc112to102dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "5", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc102to34str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc34to30std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc30to26std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc26to22std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc22to18std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc34to30dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc30to26dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc26to22dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc22to18dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc18to6str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "\n", "if", "not", "finalpool", ":", "\n", "            ", "self", ".", "enc6to2std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc6to2dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "decide", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "1", "*", "funit", ",", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "1", "*", "funit", ",", "1", ",", "1", ")", ",", "\n", "#nn.Sigmoid()", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "enc6to2std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc6to2dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "decide", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "1", ",", "1", ")", ",", "\n", "#nn.Sigmoid(),", "\n", "nn", ".", "AdaptiveMaxPool2d", "(", "1", ")", ",", "\n", ")", "\n", "", "if", "out_activation", "is", "None", "or", "out_activation", "==", "'None'", ":", "\n", "            ", "self", ".", "out_activation", "=", "None", "\n", "", "elif", "out_activation", "==", "'PReLU'", ":", "\n", "            ", "self", ".", "out_activation", "=", "PReLU", "(", "init", "=", "0.01", ")", "\n", "", "elif", "out_activation", "==", "'Sigmoid'", ":", "\n", "            ", "self", ".", "out_activation", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "elif", "out_activation", "==", "'LeakyReLU'", ":", "\n", "            ", "self", ".", "out_activation", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.Hul.Hull112Disc.forward": [[954, 969], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hull112Disc.enc102to34str", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hull112Disc.enc18to6str", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hull112Disc.decide", "Hul.Hull112Disc.out_activation", "Hul.Hull112Disc.enc112to108std", "Hul.Hull112Disc.enc112to108dil", "Hul.Hull112Disc.enc108to104std", "Hul.Hull112Disc.enc108to104dil", "Hul.Hull112Disc.enc104to102std", "Hul.Hull112Disc.enc112to102dil", "Hul.Hull112Disc.enc34to30std", "Hul.Hull112Disc.enc34to30dil", "Hul.Hull112Disc.enc30to26std", "Hul.Hull112Disc.enc30to26dil", "Hul.Hull112Disc.enc26to22std", "Hul.Hull112Disc.enc26to22dil", "Hul.Hull112Disc.enc22to18std", "Hul.Hull112Disc.enc22to18dil", "Hul.Hull112Disc.enc6to2std", "Hul.Hull112Disc.enc6to2dil"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc112to108std", "(", "x", ")", ",", "self", ".", "enc112to108dil", "(", "x", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc108to104std", "(", "layer", ")", ",", "self", ".", "enc108to104dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc104to102std", "(", "layer", ")", ",", "self", ".", "enc112to102dil", "(", "x", ")", "]", ",", "1", ")", "\n", "layer", "=", "self", ".", "enc102to34str", "(", "layer", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc34to30std", "(", "layer", ")", ",", "self", ".", "enc34to30dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc30to26std", "(", "layer", ")", ",", "self", ".", "enc30to26dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc26to22std", "(", "layer", ")", ",", "self", ".", "enc26to22dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc22to18std", "(", "layer", ")", ",", "self", ".", "enc22to18dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "self", ".", "enc18to6str", "(", "layer", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc6to2std", "(", "layer", ")", ",", "self", ".", "enc6to2dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "self", ".", "decide", "(", "layer", ")", "\n", "if", "self", ".", "out_activation", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "out_activation", "(", "layer", ")", "\n", "", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.Hul.Hulf112Disc.__init__": [[973, 1120], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "torch.PReLU", "torch.PReLU", "torch.Sigmoid", "torch.Sigmoid", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", "=", "6", ",", "funit", "=", "32", ",", "finalpool", "=", "False", ",", "out_activation", "=", "'PReLU'", ")", ":", "\n", "        ", "super", "(", "Hulf112Disc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "funit", "=", "funit", "\n", "self", ".", "enc112to108std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc108to104std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc112to108dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc108to104dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc104to102std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc112to102dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "5", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc102to34str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "10", "*", "funit", ",", "10", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "10", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc34to30std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "10", "*", "funit", ",", "10", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "10", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "10", "*", "funit", ",", "10", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "10", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc30to26std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "20", "*", "funit", ",", "20", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "20", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "20", "*", "funit", ",", "10", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "10", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc26to22std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "20", "*", "funit", ",", "20", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "20", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "20", "*", "funit", ",", "10", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "10", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc22to18std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "20", "*", "funit", ",", "20", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "20", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "20", "*", "funit", ",", "12", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "12", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc34to30dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "10", "*", "funit", ",", "10", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "10", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc30to26dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "20", "*", "funit", ",", "10", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "10", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc26to22dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "20", "*", "funit", ",", "10", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "10", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc22to18dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "20", "*", "funit", ",", "12", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "12", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc18to6str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "24", "*", "funit", ",", "24", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "24", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "\n", "if", "not", "finalpool", ":", "\n", "            ", "self", ".", "enc6to2std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "24", "*", "funit", ",", "24", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "24", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "24", "*", "funit", ",", "12", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc6to2dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "24", "*", "funit", ",", "12", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "decide", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "24", "*", "funit", ",", "6", "*", "funit", ",", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "1", ",", "1", ")", ",", "\n", "#nn.Sigmoid()", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "enc6to2std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "24", "*", "funit", ",", "24", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "24", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "24", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc6to2dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "24", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "decide", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "12", "*", "funit", ",", "6", "*", "funit", ",", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "1", ",", "1", ")", ",", "\n", "#nn.Sigmoid(),", "\n", "nn", ".", "AdaptiveMaxPool2d", "(", "1", ")", ",", "\n", ")", "\n", "", "if", "out_activation", "is", "None", "or", "out_activation", "==", "'None'", ":", "\n", "            ", "self", ".", "out_activation", "=", "None", "\n", "", "elif", "out_activation", "==", "'PReLU'", ":", "\n", "            ", "self", ".", "out_activation", "=", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", "\n", "", "elif", "out_activation", "==", "'Sigmoid'", ":", "\n", "            ", "self", ".", "out_activation", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "elif", "out_activation", "==", "'LeakyReLU'", ":", "\n", "            ", "self", ".", "out_activation", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.Hul.Hulf112Disc.forward": [[1120, 1135], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hulf112Disc.enc102to34str", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hulf112Disc.enc18to6str", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Hul.Hulf112Disc.decide", "Hul.Hulf112Disc.out_activation", "Hul.Hulf112Disc.enc112to108std", "Hul.Hulf112Disc.enc112to108dil", "Hul.Hulf112Disc.enc108to104std", "Hul.Hulf112Disc.enc108to104dil", "Hul.Hulf112Disc.enc104to102std", "Hul.Hulf112Disc.enc112to102dil", "Hul.Hulf112Disc.enc34to30std", "Hul.Hulf112Disc.enc34to30dil", "Hul.Hulf112Disc.enc30to26std", "Hul.Hulf112Disc.enc30to26dil", "Hul.Hulf112Disc.enc26to22std", "Hul.Hulf112Disc.enc26to22dil", "Hul.Hulf112Disc.enc22to18std", "Hul.Hulf112Disc.enc22to18dil", "Hul.Hulf112Disc.enc6to2std", "Hul.Hulf112Disc.enc6to2dil"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc112to108std", "(", "x", ")", ",", "self", ".", "enc112to108dil", "(", "x", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc108to104std", "(", "layer", ")", ",", "self", ".", "enc108to104dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc104to102std", "(", "layer", ")", ",", "self", ".", "enc112to102dil", "(", "x", ")", "]", ",", "1", ")", "\n", "layer", "=", "self", ".", "enc102to34str", "(", "layer", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc34to30std", "(", "layer", ")", ",", "self", ".", "enc34to30dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc30to26std", "(", "layer", ")", ",", "self", ".", "enc30to26dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc26to22std", "(", "layer", ")", ",", "self", ".", "enc26to22dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc22to18std", "(", "layer", ")", ",", "self", ".", "enc22to18dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "self", ".", "enc18to6str", "(", "layer", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc6to2std", "(", "layer", ")", ",", "self", ".", "enc6to2dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "self", ".", "decide", "(", "layer", ")", "\n", "if", "self", ".", "out_activation", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "out_activation", "(", "layer", ")", "\n", "", "return", "layer", "\n", "", "", ""]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.RedishCNN.__init__": [[5, 15], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.RReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", "=", "128", ",", "image_channels", "=", "3", ",", "kernel_size", "=", "5", ",", "depth", "=", "30", ",", "find_noise", "=", "False", ")", ":", "\n", "        ", "super", "(", "RedishCNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "n_channels", ")", "\n", "self", ".", "conv_first", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "image_channels", ",", "out_channels", "=", "n_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "n_channels", ",", "n_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "deconv", "=", "nn", ".", "ConvTranspose2d", "(", "n_channels", ",", "n_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "deconv_last", "=", "nn", ".", "ConvTranspose2d", "(", "in_channels", "=", "n_channels", ",", "out_channels", "=", "image_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "relu", "=", "nn", ".", "RReLU", "(", ")", "\n", "self", ".", "find_noise", "=", "find_noise", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.RedishCNN.forward": [[16, 40], ["relics.RedishCNN.relu", "residuals.append", "range", "relics.RedishCNN.relu", "relics.RedishCNN.relu", "relics.RedishCNN.relu", "range", "relics.RedishCNN.relu", "relics.RedishCNN.conv_first", "relics.RedishCNN.clone", "int", "range", "residuals.append", "relics.RedishCNN.conv", "relics.RedishCNN.deconv", "int", "range", "relics.RedishCNN.relu", "relics.RedishCNN.deconv_last", "relics.RedishCNN.bn", "relics.RedishCNN.relu", "relics.RedishCNN.conv", "relics.RedishCNN.clone", "residuals.pop", "relics.RedishCNN.bn", "relics.RedishCNN.relu", "relics.RedishCNN.deconv", "floor", "floor", "residuals.pop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residuals", "=", "[", "]", "\n", "layer", "=", "self", ".", "relu", "(", "self", ".", "conv_first", "(", "x", ")", ")", "#c1", "\n", "residuals", ".", "append", "(", "layer", ".", "clone", "(", ")", ")", "\n", "for", "_", "in", "range", "(", "int", "(", "floor", "(", "self", ".", "depth", "-", "6", ")", "/", "2", ")", ")", ":", "\n", "            ", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "                ", "layer", "=", "self", ".", "bn", "(", "layer", ")", "\n", "layer", "=", "self", ".", "relu", "(", "layer", ")", "\n", "layer", "=", "self", ".", "conv", "(", "layer", ")", "\n", "", "residuals", ".", "append", "(", "layer", ".", "clone", "(", ")", ")", "\n", "", "layer", "=", "self", ".", "relu", "(", "self", ".", "conv", "(", "layer", ")", ")", "#clast", "\n", "layer", "=", "self", ".", "relu", "(", "self", ".", "deconv", "(", "layer", ")", ")", "#d1", "\n", "layer", "=", "self", ".", "relu", "(", "layer", "+", "residuals", ".", "pop", "(", ")", ")", "\n", "for", "_", "in", "range", "(", "int", "(", "floor", "(", "self", ".", "depth", "-", "6", ")", "/", "2", ")", ")", ":", "\n", "            ", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "                ", "layer", "=", "self", ".", "bn", "(", "layer", ")", "\n", "layer", "=", "self", ".", "relu", "(", "layer", ")", "\n", "layer", "=", "self", ".", "deconv", "(", "layer", ")", "\n", "", "layer", "=", "self", ".", "relu", "(", "layer", "+", "residuals", ".", "pop", "(", ")", ")", "\n", "", "layer", "=", "self", ".", "relu", "(", "self", ".", "deconv_last", "(", "layer", ")", ")", "\n", "if", "self", ".", "find_noise", ":", "\n", "            ", "return", "x", "-", "layer", "\n", "", "else", ":", "\n", "            ", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.HunkyDisc.__init__": [[44, 94], ["torch.Module.__init__", "torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.MaxPool2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.MaxPool2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.MaxPool2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.MaxPool2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.MaxPool2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ")", ":", "\n", "        ", "super", "(", "HunkyDisc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#256", "\n", "self", ".", "enc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "64", ",", "5", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "5", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "# 248", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", ",", "\n", "# 124", "\n", "nn", ".", "Conv2d", "(", "64", ",", "96", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "96", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "96", ",", "96", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "96", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "# 120", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "96", ",", "128", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "# 56", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "# 24", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "# 8", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "1024", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "1024", ",", "1", ",", "2", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.HunkyDisc.forward": [[95, 97], ["relics.HunkyDisc.enc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "enc", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.HunNet.__init__": [[99, 334], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "funit", "=", "32", "\n", "super", "(", "HunNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enc160to158std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "4", "*", "funit", ",", "3", ")", ",", "\n", "#nn.BatchNorm2d(4*funit),", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc158to154std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc154to150std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc158to154dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc154to150dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc160to150dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "5", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc150to50str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "10", "*", "funit", ",", "10", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "10", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc50to46std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "10", "*", "funit", ",", "5", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "5", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "5", "*", "funit", ",", "5", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "5", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc46to42std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "10", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc50to46dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "10", "*", "funit", ",", "5", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "5", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc46to42dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "10", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc42to14str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "16", "*", "funit", ",", "16", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "16", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc14to10std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "16", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc10to6std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "16", "*", "funit", ",", "16", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "16", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "16", "*", "funit", ",", "16", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "16", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc14to10dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "16", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc10to6dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "16", "*", "funit", ",", "16", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "16", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc6to3str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "32", "*", "funit", ",", "32", "*", "funit", ",", "2", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc3to1std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "32", "*", "funit", ",", "32", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "dec1to3std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 32", "\n", "# out: 32", "\n", "nn", ".", "ConvTranspose2d", "(", "32", "*", "funit", ",", "32", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "dec3to6str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 32+32", "\n", "# out: 32", "\n", "nn", ".", "ConvTranspose2d", "(", "64", "*", "funit", ",", "32", "*", "funit", ",", "2", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "dec6to10std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 32+32, out: 8", "\n", "nn", ".", "ConvTranspose2d", "(", "64", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "dec6to10dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 32+32, out: 8", "\n", "nn", ".", "ConvTranspose2d", "(", "64", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "dec10to14std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 16+16, out: 8", "\n", "nn", ".", "ConvTranspose2d", "(", "32", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "\n", ")", "\n", "self", ".", "dec10to14dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 16+16, out:8", "\n", "nn", ".", "ConvTranspose2d", "(", "32", "*", "funit", ",", "8", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "8", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "dec14to42str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 16+16, out:16", "\n", "nn", ".", "ConvTranspose2d", "(", "32", "*", "funit", ",", "16", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "16", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "dec42to46std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 16+16, out: 5", "\n", "nn", ".", "ConvTranspose2d", "(", "32", "*", "funit", ",", "5", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "5", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "5", "*", "funit", ",", "5", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "5", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "dec42to46dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 16+16, out:5", "\n", "nn", ".", "ConvTranspose2d", "(", "32", "*", "funit", ",", "5", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "5", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "dec46to50std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 10+10, out: 5", "\n", "nn", ".", "ConvTranspose2d", "(", "20", "*", "funit", ",", "5", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "5", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "5", "*", "funit", ",", "5", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "5", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "dec46to50dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 10+10, out: 5", "\n", "nn", ".", "ConvTranspose2d", "(", "20", "*", "funit", ",", "5", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "5", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "dec50to150str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 10+10, out: 10", "\n", "nn", ".", "ConvTranspose2d", "(", "20", "*", "funit", ",", "10", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "10", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "dec150to154std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 10+10, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "20", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "dec150to154dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 10+10, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "20", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "dec154to158std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+6, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "dec154to158dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+6, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "dec158to160std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "3", ",", "3", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.HunNet.forward": [[337, 430], ["x.clone", "relics.HunNet.enc160to158std", "relics.HunNet.clone", "relics.HunNet.clone", "relics.HunNet.enc158to154std", "relics.HunNet.enc158to154dil", "torch.cat", "torch.cat.clone", "torch.cat.clone", "relics.HunNet.enc154to150std", "relics.HunNet.enc154to150dil", "relics.HunNet.enc160to150dil", "torch.cat", "torch.cat.clone", "relics.HunNet.enc150to50str", "relics.HunNet.clone", "relics.HunNet.clone", "relics.HunNet.enc50to46std", "relics.HunNet.enc50to46dil", "torch.cat", "torch.cat.clone", "torch.cat.clone", "relics.HunNet.enc46to42std", "relics.HunNet.enc46to42dil", "torch.cat", "torch.cat.clone", "relics.HunNet.enc42to14str", "relics.HunNet.clone", "relics.HunNet.clone", "torch.cat", "torch.cat.clone", "torch.cat.clone", "torch.cat", "torch.cat.clone", "relics.HunNet.enc6to3str", "relics.HunNet.clone", "relics.HunNet.enc3to1std", "torch.cat", "torch.cat", "torch.cat.clone", "torch.cat", "torch.cat.clone", "torch.cat", "torch.cat", "torch.cat.clone", "torch.cat", "torch.cat.clone", "torch.cat", "torch.cat", "torch.cat.clone", "torch.cat", "torch.cat.clone", "torch.cat", "relics.HunNet.dec158to160std", "relics.HunNet.enc14to10std", "relics.HunNet.enc14to10dil", "relics.HunNet.enc10to6std", "relics.HunNet.enc10to6dil", "relics.HunNet.dec1to3std", "relics.HunNet.dec3to6str", "relics.HunNet.dec6to10std", "relics.HunNet.dec6to10dil", "relics.HunNet.dec10to14std", "relics.HunNet.dec10to14dil", "relics.HunNet.dec14to42str", "relics.HunNet.dec42to46std", "relics.HunNet.dec42to46dil", "relics.HunNet.dec46to50std", "relics.HunNet.dec46to50dil", "relics.HunNet.dec50to150str", "relics.HunNet.dec150to154std", "relics.HunNet.dec150to154dil", "relics.HunNet.dec154to158std", "relics.HunNet.dec154to158dil"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# 160 to 150", "\n", "        ", "dil160", "=", "x", ".", "clone", "(", ")", "\n", "std158", "=", "self", ".", "enc160to158std", "(", "x", ")", "\n", "del", "(", "x", ")", "\n", "dil158", "=", "std158", ".", "clone", "(", ")", "\n", "upc158", "=", "std158", ".", "clone", "(", ")", "\n", "std154", "=", "self", ".", "enc158to154std", "(", "std158", ")", "\n", "del", "(", "std158", ")", "\n", "dil154", "=", "self", ".", "enc158to154dil", "(", "dil158", ")", "\n", "del", "(", "dil158", ")", "\n", "cat154", "=", "torch", ".", "cat", "(", "[", "std154", ",", "dil154", "]", ",", "1", ")", "\n", "del", "(", "std154", ")", "\n", "dil154", "=", "cat154", ".", "clone", "(", ")", "\n", "upc154", "=", "cat154", ".", "clone", "(", ")", "\n", "std150", "=", "self", ".", "enc154to150std", "(", "cat154", ")", "\n", "del", "(", "cat154", ")", "\n", "dil150", "=", "self", ".", "enc154to150dil", "(", "dil154", ")", "\n", "del", "(", "dil154", ")", "\n", "dil3_150", "=", "self", ".", "enc160to150dil", "(", "dil160", ")", "\n", "del", "(", "dil160", ")", "\n", "\n", "cat150", "=", "torch", ".", "cat", "(", "[", "std150", ",", "dil150", ",", "dil3_150", "]", ",", "1", ")", "\n", "del", "(", "std150", ",", "dil150", ",", "dil3_150", ")", "\n", "upc150", "=", "cat150", ".", "clone", "(", ")", "\n", "str50", "=", "self", ".", "enc150to50str", "(", "cat150", ")", "\n", "del", "(", "cat150", ")", "\n", "dil50", "=", "str50", ".", "clone", "(", ")", "\n", "upc50", "=", "str50", ".", "clone", "(", ")", "\n", "std46", "=", "self", ".", "enc50to46std", "(", "str50", ")", "\n", "del", "(", "str50", ")", "\n", "dil46", "=", "self", ".", "enc50to46dil", "(", "dil50", ")", "\n", "del", "(", "dil50", ")", "\n", "cat46", "=", "torch", ".", "cat", "(", "[", "std46", ",", "dil46", "]", ",", "1", ")", "\n", "del", "(", "std46", ")", "\n", "dil46", "=", "cat46", ".", "clone", "(", ")", "\n", "\n", "upc46", "=", "cat46", ".", "clone", "(", ")", "\n", "std42", "=", "self", ".", "enc46to42std", "(", "cat46", ")", "\n", "del", "(", "cat46", ")", "\n", "dil42", "=", "self", ".", "enc46to42dil", "(", "dil46", ")", "\n", "del", "(", "dil46", ")", "\n", "\n", "cat42", "=", "torch", ".", "cat", "(", "[", "std42", ",", "dil42", "]", ",", "1", ")", "\n", "del", "(", "std42", ",", "dil42", ")", "\n", "upc42", "=", "cat42", ".", "clone", "(", ")", "\n", "str14", "=", "self", ".", "enc42to14str", "(", "cat42", ")", "\n", "dil14", "=", "str14", ".", "clone", "(", ")", "\n", "upc14", "=", "str14", ".", "clone", "(", ")", "\n", "cat10", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc14to10std", "(", "str14", ")", ",", "self", ".", "enc14to10dil", "(", "dil14", ")", "]", ",", "1", ")", "\n", "del", "(", "str14", ",", "dil14", ")", "\n", "dil10", "=", "cat10", ".", "clone", "(", ")", "\n", "upc10", "=", "cat10", ".", "clone", "(", ")", "\n", "cat6", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc10to6std", "(", "cat10", ")", ",", "self", ".", "enc10to6dil", "(", "dil10", ")", "]", ",", "1", ")", "\n", "del", "(", "cat10", ",", "dil10", ")", "\n", "upc6", "=", "cat6", ".", "clone", "(", ")", "\n", "\n", "str3", "=", "self", ".", "enc6to3str", "(", "cat6", ")", "# k2s2", "\n", "del", "(", "cat6", ")", "\n", "upc3", "=", "str3", ".", "clone", "(", ")", "\n", "std1", "=", "self", ".", "enc3to1std", "(", "str3", ")", "\n", "del", "(", "str3", ")", "\n", "\n", "# up", "\n", "\n", "std3", "=", "torch", ".", "cat", "(", "[", "upc3", ",", "self", ".", "dec1to3std", "(", "std1", ")", "]", ",", "1", ")", "\n", "del", "(", "std1", ")", "\n", "\n", "str6", "=", "torch", ".", "cat", "(", "[", "upc6", ",", "self", ".", "dec3to6str", "(", "std3", ")", "]", ",", "1", ")", "\n", "del", "(", "upc6", ",", "std3", ")", "\n", "dil6", "=", "str6", ".", "clone", "(", ")", "\n", "cat10", "=", "torch", ".", "cat", "(", "[", "upc10", ",", "self", ".", "dec6to10std", "(", "str6", ")", ",", "self", ".", "dec6to10dil", "(", "dil6", ")", "]", ",", "1", ")", "\n", "del", "(", "dil6", ",", "str6", ",", "upc10", ")", "\n", "dil10", "=", "cat10", ".", "clone", "(", ")", "\n", "cat14", "=", "torch", ".", "cat", "(", "[", "upc14", ",", "self", ".", "dec10to14std", "(", "cat10", ")", ",", "self", ".", "dec10to14dil", "(", "dil10", ")", "]", ",", "1", ")", "\n", "del", "(", "cat10", ",", "dil10", ",", "upc14", ")", "\n", "cat42", "=", "torch", ".", "cat", "(", "[", "upc42", ",", "self", ".", "dec14to42str", "(", "cat14", ")", "]", ",", "1", ")", "\n", "del", "(", "cat14", ",", "upc42", ")", "\n", "dil42", "=", "cat42", ".", "clone", "(", ")", "\n", "cat46", "=", "torch", ".", "cat", "(", "[", "upc46", ",", "self", ".", "dec42to46std", "(", "cat42", ")", ",", "self", ".", "dec42to46dil", "(", "dil42", ")", "]", ",", "1", ")", "\n", "del", "(", "dil42", ",", "cat42", ",", "upc46", ")", "\n", "dil46", "=", "cat46", ".", "clone", "(", ")", "\n", "cat50", "=", "torch", ".", "cat", "(", "[", "upc50", ",", "self", ".", "dec46to50std", "(", "cat46", ")", ",", "self", ".", "dec46to50dil", "(", "dil46", ")", "]", ",", "1", ")", "\n", "del", "(", "cat46", ",", "dil46", ",", "upc50", ")", "\n", "cat150", "=", "torch", ".", "cat", "(", "[", "upc150", ",", "self", ".", "dec50to150str", "(", "cat50", ")", "]", ",", "1", ")", "\n", "del", "(", "upc150", ",", "cat50", ")", "\n", "dil150", "=", "cat150", ".", "clone", "(", ")", "\n", "cat154", "=", "torch", ".", "cat", "(", "[", "upc154", ",", "self", ".", "dec150to154std", "(", "cat150", ")", ",", "self", ".", "dec150to154dil", "(", "dil150", ")", "]", ",", "1", ")", "\n", "del", "(", "cat150", ",", "dil150", ",", "upc154", ")", "\n", "dil154", "=", "cat154", ".", "clone", "(", ")", "\n", "cat158", "=", "torch", ".", "cat", "(", "[", "upc158", ",", "self", ".", "dec154to158std", "(", "cat154", ")", ",", "self", ".", "dec154to158dil", "(", "dil154", ")", "]", ",", "1", ")", "\n", "del", "(", "dil154", ",", "upc158", ",", "cat154", ")", "\n", "return", "self", ".", "dec158to160std", "(", "cat158", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.HuNet.__init__": [[433, 668], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "funit", "=", "32", "\n", "super", "(", "HuNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enc160to158std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "#nn.BatchNorm2d(4*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc158to154std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc154to150std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(3*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(3*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc158to154dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc154to150dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(3*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc160to150dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "5", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc150to50str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc50to46std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc46to42std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc50to46dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc46to42dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc42to14str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc14to10std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc10to6std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc14to10dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc10to6dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc6to3str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "2", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "enc3to1std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec1to3std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2", "\n", "# out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec3to6str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2+2", "\n", "# out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "2", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "\n", "self", ".", "dec6to10std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "\n", "self", ".", "dec6to10dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec10to14std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "\n", ")", "\n", "self", ".", "dec10to14dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4, out:2", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec14to42str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+2, out:2", "\n", "nn", ".", "ConvTranspose2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec42to46std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec42to46dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2+4, out:2", "\n", "nn", ".", "ConvTranspose2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec46to50std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec46to50dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec50to150str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+2, out: 4", "\n", "nn", ".", "ConvTranspose2d", "(", "6", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(4*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec150to154std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 8+4, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(3*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(3*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec150to154dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 8+4, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(3*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec154to158std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec154to158dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "#nn.BatchNorm2d(2*funit),", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "dec158to160std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+2", "\n", "nn", ".", "ConvTranspose2d", "(", "6", "*", "funit", ",", "3", ",", "3", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.HuNet.forward": [[671, 764], ["x.clone", "relics.HuNet.enc160to158std", "relics.HuNet.clone", "relics.HuNet.clone", "relics.HuNet.enc158to154std", "relics.HuNet.enc158to154dil", "torch.cat", "torch.cat.clone", "torch.cat.clone", "relics.HuNet.enc154to150std", "relics.HuNet.enc154to150dil", "relics.HuNet.enc160to150dil", "torch.cat", "torch.cat.clone", "relics.HuNet.enc150to50str", "relics.HuNet.clone", "relics.HuNet.clone", "relics.HuNet.enc50to46std", "relics.HuNet.enc50to46dil", "torch.cat", "torch.cat.clone", "torch.cat.clone", "relics.HuNet.enc46to42std", "relics.HuNet.enc46to42dil", "torch.cat", "torch.cat.clone", "relics.HuNet.enc42to14str", "relics.HuNet.clone", "relics.HuNet.clone", "torch.cat", "torch.cat.clone", "torch.cat.clone", "torch.cat", "torch.cat.clone", "relics.HuNet.enc6to3str", "relics.HuNet.clone", "relics.HuNet.enc3to1std", "torch.cat", "torch.cat", "torch.cat.clone", "torch.cat", "torch.cat.clone", "torch.cat", "torch.cat", "torch.cat.clone", "torch.cat", "torch.cat.clone", "torch.cat", "torch.cat", "torch.cat.clone", "torch.cat", "torch.cat.clone", "torch.cat", "relics.HuNet.dec158to160std", "relics.HuNet.enc14to10std", "relics.HuNet.enc14to10dil", "relics.HuNet.enc10to6std", "relics.HuNet.enc10to6dil", "relics.HuNet.dec1to3std", "relics.HuNet.dec3to6str", "relics.HuNet.dec6to10std", "relics.HuNet.dec6to10dil", "relics.HuNet.dec10to14std", "relics.HuNet.dec10to14dil", "relics.HuNet.dec14to42str", "relics.HuNet.dec42to46std", "relics.HuNet.dec42to46dil", "relics.HuNet.dec46to50std", "relics.HuNet.dec46to50dil", "relics.HuNet.dec50to150str", "relics.HuNet.dec150to154std", "relics.HuNet.dec150to154dil", "relics.HuNet.dec154to158std", "relics.HuNet.dec154to158dil"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# 160 to 150", "\n", "        ", "dil160", "=", "x", ".", "clone", "(", ")", "\n", "std158", "=", "self", ".", "enc160to158std", "(", "x", ")", "\n", "del", "(", "x", ")", "\n", "dil158", "=", "std158", ".", "clone", "(", ")", "\n", "upc158", "=", "std158", ".", "clone", "(", ")", "\n", "std154", "=", "self", ".", "enc158to154std", "(", "std158", ")", "\n", "del", "(", "std158", ")", "\n", "dil154", "=", "self", ".", "enc158to154dil", "(", "dil158", ")", "\n", "del", "(", "dil158", ")", "\n", "cat154", "=", "torch", ".", "cat", "(", "[", "std154", ",", "dil154", "]", ",", "1", ")", "\n", "del", "(", "std154", ")", "\n", "dil154", "=", "cat154", ".", "clone", "(", ")", "\n", "upc154", "=", "cat154", ".", "clone", "(", ")", "\n", "std150", "=", "self", ".", "enc154to150std", "(", "cat154", ")", "\n", "del", "(", "cat154", ")", "\n", "dil150", "=", "self", ".", "enc154to150dil", "(", "dil154", ")", "\n", "del", "(", "dil154", ")", "\n", "dil3_150", "=", "self", ".", "enc160to150dil", "(", "dil160", ")", "\n", "del", "(", "dil160", ")", "\n", "\n", "cat150", "=", "torch", ".", "cat", "(", "[", "std150", ",", "dil150", ",", "dil3_150", "]", ",", "1", ")", "\n", "del", "(", "std150", ",", "dil150", ",", "dil3_150", ")", "\n", "upc150", "=", "cat150", ".", "clone", "(", ")", "\n", "str50", "=", "self", ".", "enc150to50str", "(", "cat150", ")", "\n", "del", "(", "cat150", ")", "\n", "dil50", "=", "str50", ".", "clone", "(", ")", "\n", "upc50", "=", "str50", ".", "clone", "(", ")", "\n", "std46", "=", "self", ".", "enc50to46std", "(", "str50", ")", "\n", "del", "(", "str50", ")", "\n", "dil46", "=", "self", ".", "enc50to46dil", "(", "dil50", ")", "\n", "del", "(", "dil50", ")", "\n", "cat46", "=", "torch", ".", "cat", "(", "[", "std46", ",", "dil46", "]", ",", "1", ")", "\n", "del", "(", "std46", ")", "\n", "dil46", "=", "cat46", ".", "clone", "(", ")", "\n", "\n", "upc46", "=", "cat46", ".", "clone", "(", ")", "\n", "std42", "=", "self", ".", "enc46to42std", "(", "cat46", ")", "\n", "del", "(", "cat46", ")", "\n", "dil42", "=", "self", ".", "enc46to42dil", "(", "dil46", ")", "\n", "del", "(", "dil46", ")", "\n", "\n", "cat42", "=", "torch", ".", "cat", "(", "[", "std42", ",", "dil42", "]", ",", "1", ")", "\n", "del", "(", "std42", ",", "dil42", ")", "\n", "upc42", "=", "cat42", ".", "clone", "(", ")", "\n", "str14", "=", "self", ".", "enc42to14str", "(", "cat42", ")", "\n", "dil14", "=", "str14", ".", "clone", "(", ")", "\n", "upc14", "=", "str14", ".", "clone", "(", ")", "\n", "cat10", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc14to10std", "(", "str14", ")", ",", "self", ".", "enc14to10dil", "(", "dil14", ")", "]", ",", "1", ")", "\n", "del", "(", "str14", ",", "dil14", ")", "\n", "dil10", "=", "cat10", ".", "clone", "(", ")", "\n", "upc10", "=", "cat10", ".", "clone", "(", ")", "\n", "cat6", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc10to6std", "(", "cat10", ")", ",", "self", ".", "enc10to6dil", "(", "dil10", ")", "]", ",", "1", ")", "\n", "del", "(", "cat10", ",", "dil10", ")", "\n", "upc6", "=", "cat6", ".", "clone", "(", ")", "\n", "\n", "str3", "=", "self", ".", "enc6to3str", "(", "cat6", ")", "# k2s2", "\n", "del", "(", "cat6", ")", "\n", "upc3", "=", "str3", ".", "clone", "(", ")", "\n", "std1", "=", "self", ".", "enc3to1std", "(", "str3", ")", "\n", "del", "(", "str3", ")", "\n", "\n", "# up", "\n", "\n", "std3", "=", "torch", ".", "cat", "(", "[", "upc3", ",", "self", ".", "dec1to3std", "(", "std1", ")", "]", ",", "1", ")", "\n", "del", "(", "std1", ")", "\n", "\n", "str6", "=", "torch", ".", "cat", "(", "[", "upc6", ",", "self", ".", "dec3to6str", "(", "std3", ")", "]", ",", "1", ")", "\n", "del", "(", "upc6", ",", "std3", ")", "\n", "dil6", "=", "str6", ".", "clone", "(", ")", "\n", "cat10", "=", "torch", ".", "cat", "(", "[", "upc10", ",", "self", ".", "dec6to10std", "(", "str6", ")", ",", "self", ".", "dec6to10dil", "(", "dil6", ")", "]", ",", "1", ")", "\n", "del", "(", "dil6", ",", "str6", ",", "upc10", ")", "\n", "dil10", "=", "cat10", ".", "clone", "(", ")", "\n", "cat14", "=", "torch", ".", "cat", "(", "[", "upc14", ",", "self", ".", "dec10to14std", "(", "cat10", ")", ",", "self", ".", "dec10to14dil", "(", "dil10", ")", "]", ",", "1", ")", "\n", "del", "(", "cat10", ",", "dil10", ",", "upc14", ")", "\n", "cat42", "=", "torch", ".", "cat", "(", "[", "upc42", ",", "self", ".", "dec14to42str", "(", "cat14", ")", "]", ",", "1", ")", "\n", "del", "(", "cat14", ",", "upc42", ")", "\n", "dil42", "=", "cat42", ".", "clone", "(", ")", "\n", "cat46", "=", "torch", ".", "cat", "(", "[", "upc46", ",", "self", ".", "dec42to46std", "(", "cat42", ")", ",", "self", ".", "dec42to46dil", "(", "dil42", ")", "]", ",", "1", ")", "\n", "del", "(", "dil42", ",", "cat42", ",", "upc46", ")", "\n", "dil46", "=", "cat46", ".", "clone", "(", ")", "\n", "cat50", "=", "torch", ".", "cat", "(", "[", "upc50", ",", "self", ".", "dec46to50std", "(", "cat46", ")", ",", "self", ".", "dec46to50dil", "(", "dil46", ")", "]", ",", "1", ")", "\n", "del", "(", "cat46", ",", "dil46", ",", "upc50", ")", "\n", "cat150", "=", "torch", ".", "cat", "(", "[", "upc150", ",", "self", ".", "dec50to150str", "(", "cat50", ")", "]", ",", "1", ")", "\n", "del", "(", "upc150", ",", "cat50", ")", "\n", "dil150", "=", "cat150", ".", "clone", "(", ")", "\n", "cat154", "=", "torch", ".", "cat", "(", "[", "upc154", ",", "self", ".", "dec150to154std", "(", "cat150", ")", ",", "self", ".", "dec150to154dil", "(", "dil150", ")", "]", ",", "1", ")", "\n", "del", "(", "cat150", ",", "dil150", ",", "upc154", ")", "\n", "dil154", "=", "cat154", ".", "clone", "(", ")", "\n", "cat158", "=", "torch", ".", "cat", "(", "[", "upc158", ",", "self", ".", "dec154to158std", "(", "cat154", ")", ",", "self", ".", "dec154to158dil", "(", "dil154", ")", "]", ",", "1", ")", "\n", "del", "(", "dil154", ",", "upc158", ",", "cat154", ")", "\n", "return", "self", ".", "dec158to160std", "(", "cat158", ")", "\n", "#160", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.HuDisc.__init__": [[766, 876], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "funit", "=", "32", "\n", "super", "(", "HuDisc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enc160to158std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "#nn.BatchNorm2d(4*funit),", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc158to154std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc154to150std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc158to154dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc154to150dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc160to150dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "5", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc150to50str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc50to46std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc46to42std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc50to46dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc46to42dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc42to14str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc14to10std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc10to6std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc14to10dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc10to6dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc6to3str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "2", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "enc3to1std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "1", ",", "3", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.HuDisc.forward": [[878, 929], ["x.clone", "relics.HuDisc.enc160to158std", "relics.HuDisc.clone", "relics.HuDisc.enc158to154std", "relics.HuDisc.enc158to154dil", "torch.cat", "torch.cat.clone", "relics.HuDisc.enc154to150std", "relics.HuDisc.enc154to150dil", "relics.HuDisc.enc160to150dil", "torch.cat", "relics.HuDisc.enc150to50str", "relics.HuDisc.clone", "relics.HuDisc.enc50to46std", "relics.HuDisc.enc50to46dil", "torch.cat", "torch.cat.clone", "relics.HuDisc.enc46to42std", "relics.HuDisc.enc46to42dil", "torch.cat", "relics.HuDisc.enc42to14str", "relics.HuDisc.clone", "torch.cat", "torch.cat.clone", "torch.cat", "relics.HuDisc.enc6to3str", "relics.HuDisc.enc3to1std", "relics.HuDisc.enc14to10std", "relics.HuDisc.enc14to10dil", "relics.HuDisc.enc10to6std", "relics.HuDisc.enc10to6dil"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# 160 to 150", "\n", "        ", "dil160", "=", "x", ".", "clone", "(", ")", "\n", "std158", "=", "self", ".", "enc160to158std", "(", "x", ")", "\n", "del", "(", "x", ")", "\n", "dil158", "=", "std158", ".", "clone", "(", ")", "\n", "std154", "=", "self", ".", "enc158to154std", "(", "std158", ")", "\n", "del", "(", "std158", ")", "\n", "dil154", "=", "self", ".", "enc158to154dil", "(", "dil158", ")", "\n", "del", "(", "dil158", ")", "\n", "cat154", "=", "torch", ".", "cat", "(", "[", "std154", ",", "dil154", "]", ",", "1", ")", "\n", "del", "(", "std154", ")", "\n", "dil154", "=", "cat154", ".", "clone", "(", ")", "\n", "std150", "=", "self", ".", "enc154to150std", "(", "cat154", ")", "\n", "del", "(", "cat154", ")", "\n", "dil150", "=", "self", ".", "enc154to150dil", "(", "dil154", ")", "\n", "del", "(", "dil154", ")", "\n", "dil3_150", "=", "self", ".", "enc160to150dil", "(", "dil160", ")", "\n", "del", "(", "dil160", ")", "\n", "\n", "cat150", "=", "torch", ".", "cat", "(", "[", "std150", ",", "dil150", ",", "dil3_150", "]", ",", "1", ")", "\n", "del", "(", "std150", ",", "dil150", ",", "dil3_150", ")", "\n", "str50", "=", "self", ".", "enc150to50str", "(", "cat150", ")", "\n", "del", "(", "cat150", ")", "\n", "dil50", "=", "str50", ".", "clone", "(", ")", "\n", "std46", "=", "self", ".", "enc50to46std", "(", "str50", ")", "\n", "del", "(", "str50", ")", "\n", "dil46", "=", "self", ".", "enc50to46dil", "(", "dil50", ")", "\n", "del", "(", "dil50", ")", "\n", "cat46", "=", "torch", ".", "cat", "(", "[", "std46", ",", "dil46", "]", ",", "1", ")", "\n", "del", "(", "std46", ")", "\n", "dil46", "=", "cat46", ".", "clone", "(", ")", "\n", "\n", "std42", "=", "self", ".", "enc46to42std", "(", "cat46", ")", "\n", "del", "(", "cat46", ")", "\n", "dil42", "=", "self", ".", "enc46to42dil", "(", "dil46", ")", "\n", "del", "(", "dil46", ")", "\n", "\n", "cat42", "=", "torch", ".", "cat", "(", "[", "std42", ",", "dil42", "]", ",", "1", ")", "\n", "del", "(", "std42", ",", "dil42", ")", "\n", "str14", "=", "self", ".", "enc42to14str", "(", "cat42", ")", "\n", "dil14", "=", "str14", ".", "clone", "(", ")", "\n", "cat10", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc14to10std", "(", "str14", ")", ",", "self", ".", "enc14to10dil", "(", "dil14", ")", "]", ",", "1", ")", "\n", "del", "(", "str14", ",", "dil14", ")", "\n", "dil10", "=", "cat10", ".", "clone", "(", ")", "\n", "cat6", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc10to6std", "(", "cat10", ")", ",", "self", ".", "enc10to6dil", "(", "dil10", ")", "]", ",", "1", ")", "\n", "del", "(", "cat10", ",", "dil10", ")", "\n", "\n", "str3", "=", "self", ".", "enc6to3str", "(", "cat6", ")", "# k2s2", "\n", "del", "(", "cat6", ")", "\n", "return", "self", ".", "enc3to1std", "(", "str3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.Hul144Disc.__init__": [[932, 1052], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.Sigmoid", "torch.Conv2d", "torch.Sigmoid", "torch.AdaptiveMaxPool2d"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", "=", "3", ",", "funit", "=", "32", ",", "finalpool", "=", "False", ")", ":", "\n", "        ", "super", "(", "Hul144Disc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "funit", "=", "funit", "\n", "self", ".", "enc144to142std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc142to138std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc138to134std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc142to138dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc138to134dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc144to134dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "5", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc134to132std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc132to44str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc44to40std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc40to36std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc44to40dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc40to36dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc36to12str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc12to8std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc8to4std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "12", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc12to8dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc8to4dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "12", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", ")", "\n", "if", "not", "finalpool", ":", "\n", "            ", "self", ".", "enc4to2std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "12", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "decide", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "1", ",", "2", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "enc4to2std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "12", "*", "funit", ",", "1", ",", "3", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n", "self", ".", "decide", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveMaxPool2d", "(", "1", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.Hul144Disc.forward": [[1053, 1067], ["relics.Hul144Disc.enc144to142std", "torch.cat", "torch.cat", "relics.Hul144Disc.enc134to132std", "relics.Hul144Disc.enc132to44str", "torch.cat", "torch.cat", "relics.Hul144Disc.enc36to12str", "torch.cat", "torch.cat", "relics.Hul144Disc.enc4to2std", "relics.Hul144Disc.decide", "relics.Hul144Disc.enc142to138std", "relics.Hul144Disc.enc142to138dil", "relics.Hul144Disc.enc138to134std", "relics.Hul144Disc.enc138to134dil", "relics.Hul144Disc.enc144to134dil", "relics.Hul144Disc.enc44to40std", "relics.Hul144Disc.enc44to40dil", "relics.Hul144Disc.enc40to36std", "relics.Hul144Disc.enc40to36dil", "relics.Hul144Disc.enc12to8std", "relics.Hul144Disc.enc12to8dil", "relics.Hul144Disc.enc8to4std", "relics.Hul144Disc.enc8to4dil"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "lay_i", "=", "self", ".", "enc144to142std", "(", "x", ")", "\n", "lay_i", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc142to138std", "(", "lay_i", ")", ",", "self", ".", "enc142to138dil", "(", "lay_i", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc138to134std", "(", "lay_i", ")", ",", "self", ".", "enc138to134dil", "(", "lay_i", ")", ",", "self", ".", "enc144to134dil", "(", "x", ")", "]", ",", "1", ")", "\n", "del", "(", "x", ",", "lay_i", ")", "\n", "layer", "=", "self", ".", "enc134to132std", "(", "layer", ")", "\n", "layer", "=", "self", ".", "enc132to44str", "(", "layer", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc44to40std", "(", "layer", ")", ",", "self", ".", "enc44to40dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc40to36std", "(", "layer", ")", ",", "self", ".", "enc40to36dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "self", ".", "enc36to12str", "(", "layer", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc12to8std", "(", "layer", ")", ",", "self", ".", "enc12to8dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc8to4std", "(", "layer", ")", ",", "self", ".", "enc8to4dil", "(", "layer", ")", "]", ",", "1", ")", "\n", "layer", "=", "self", ".", "enc4to2std", "(", "layer", ")", "\n", "return", "self", ".", "decide", "(", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.Hul128Net.__init__": [[1071, 1300], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "funit", "=", "32", "\n", "super", "(", "Hul128Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enc128to126std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc126to122std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc122to118std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc126to122dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc122to118dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc128to118dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "5", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc118to114std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc118to114dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc114to38str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc38to34std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc34to30std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc38to34dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc34to30dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc30to10str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc10to6std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc6to2std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc10to6dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc6to2dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", "*", "funit", ",", "6", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "6", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec2to6std", "=", "nn", ".", "Sequential", "(", "\n", "# in 0+12 out 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec6to10std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec2to6dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 0+8 out 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec6to10dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec10to30str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out:5", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "5", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "5", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec30to34std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+5, out:3", "\n", "nn", ".", "ConvTranspose2d", "(", "9", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec30to34dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+5, out:3", "\n", "nn", ".", "ConvTranspose2d", "(", "9", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec34to38std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec34to38dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec38to114str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 4", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec114to118std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec114to118dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec118to122std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec118to122dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec122to126std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec122to126dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+6, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec126to128std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2+6", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "3", ",", "3", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.Hul128Net.forward": [[1302, 1335], ["relics.Hul128Net.enc128to126std", "torch.cat", "torch.cat", "torch.cat", "relics.Hul128Net.enc114to38str", "torch.cat", "torch.cat", "relics.Hul128Net.enc30to10str", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "relics.Hul128Net.dec126to128std", "relics.Hul128Net.enc126to122std", "relics.Hul128Net.enc126to122dil", "relics.Hul128Net.enc122to118std", "relics.Hul128Net.enc122to118dil", "relics.Hul128Net.enc128to118dil", "relics.Hul128Net.enc118to114std", "relics.Hul128Net.enc118to114dil", "relics.Hul128Net.enc38to34std", "relics.Hul128Net.enc38to34dil", "relics.Hul128Net.enc34to30std", "relics.Hul128Net.enc34to30dil", "relics.Hul128Net.enc10to6std", "relics.Hul128Net.enc10to6dil", "relics.Hul128Net.enc6to2std", "relics.Hul128Net.enc6to2dil", "relics.Hul128Net.dec2to6std", "relics.Hul128Net.dec2to6dil", "relics.Hul128Net.dec6to10std", "relics.Hul128Net.dec6to10dil", "relics.Hul128Net.dec10to30str", "relics.Hul128Net.dec30to34std", "relics.Hul128Net.dec30to34dil", "relics.Hul128Net.dec34to38std", "relics.Hul128Net.dec34to38dil", "relics.Hul128Net.dec38to114str", "relics.Hul128Net.dec114to118std", "relics.Hul128Net.dec114to118dil", "relics.Hul128Net.dec118to122std", "relics.Hul128Net.dec118to122dil", "relics.Hul128Net.dec122to126std", "relics.Hul128Net.dec122to126dil"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# down", "\n", "# 160 to 150", "\n", "        ", "l126", "=", "self", ".", "enc128to126std", "(", "x", ")", "\n", "l122", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc126to122std", "(", "l126", ")", ",", "self", ".", "enc126to122dil", "(", "l126", ")", "]", ",", "1", ")", "\n", "l118", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc122to118std", "(", "l122", ")", ",", "self", ".", "enc122to118dil", "(", "l122", ")", ",", "self", ".", "enc128to118dil", "(", "x", ")", "]", ",", "1", ")", "\n", "del", "(", "x", ")", "\n", "l114", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc118to114std", "(", "l118", ")", ",", "self", ".", "enc118to114dil", "(", "l118", ")", "]", ",", "1", ")", "\n", "l38", "=", "self", ".", "enc114to38str", "(", "l114", ")", "\n", "l34", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc38to34std", "(", "l38", ")", ",", "self", ".", "enc38to34dil", "(", "l38", ")", "]", ",", "1", ")", "\n", "l30", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc34to30std", "(", "l34", ")", ",", "self", ".", "enc34to30dil", "(", "l34", ")", "]", ",", "1", ")", "\n", "l10", "=", "self", ".", "enc30to10str", "(", "l30", ")", "\n", "l6", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc10to6std", "(", "l10", ")", ",", "self", ".", "enc10to6dil", "(", "l10", ")", "]", ",", "1", ")", "\n", "l2", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc6to2std", "(", "l6", ")", ",", "self", ".", "enc6to2dil", "(", "l6", ")", "]", ",", "1", ")", "\n", "# up", "\n", "l6", "=", "torch", ".", "cat", "(", "[", "l6", ",", "self", ".", "dec2to6std", "(", "l2", ")", ",", "self", ".", "dec2to6dil", "(", "l2", ")", "]", ",", "1", ")", "\n", "del", "(", "l2", ")", "\n", "l10", "=", "torch", ".", "cat", "(", "[", "l10", ",", "self", ".", "dec6to10std", "(", "l6", ")", ",", "self", ".", "dec6to10dil", "(", "l6", ")", "]", ",", "1", ")", "\n", "del", "(", "l6", ")", "\n", "l30", "=", "torch", ".", "cat", "(", "[", "l30", ",", "self", ".", "dec10to30str", "(", "l10", ")", "]", ",", "1", ")", "\n", "del", "(", "l10", ")", "\n", "l34", "=", "torch", ".", "cat", "(", "[", "l34", ",", "self", ".", "dec30to34std", "(", "l30", ")", ",", "self", ".", "dec30to34dil", "(", "l30", ")", "]", ",", "1", ")", "\n", "del", "(", "l30", ")", "\n", "l38", "=", "torch", ".", "cat", "(", "[", "l38", ",", "self", ".", "dec34to38std", "(", "l34", ")", ",", "self", ".", "dec34to38dil", "(", "l34", ")", "]", ",", "1", ")", "\n", "del", "(", "l34", ")", "\n", "l114", "=", "torch", ".", "cat", "(", "[", "l114", ",", "self", ".", "dec38to114str", "(", "l38", ")", "]", ",", "1", ")", "\n", "del", "(", "l38", ")", "\n", "l118", "=", "torch", ".", "cat", "(", "[", "l118", ",", "self", ".", "dec114to118std", "(", "l114", ")", ",", "self", ".", "dec114to118dil", "(", "l114", ")", "]", ",", "1", ")", "\n", "del", "(", "l114", ")", "\n", "l122", "=", "torch", ".", "cat", "(", "[", "l122", ",", "self", ".", "dec118to122std", "(", "l118", ")", ",", "self", ".", "dec118to122dil", "(", "l118", ")", "]", ",", "1", ")", "\n", "del", "(", "l118", ")", "\n", "l126", "=", "torch", ".", "cat", "(", "[", "l126", ",", "self", ".", "dec122to126std", "(", "l122", ")", ",", "self", ".", "dec122to126dil", "(", "l122", ")", "]", ",", "1", ")", "\n", "return", "self", ".", "dec126to128std", "(", "l126", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.Hul160Net.__init__": [[1339, 1567], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.PReLU", "torch.ConvTranspose2d", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "funit", "=", "32", "\n", "super", "(", "Hul160Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enc160to158std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc158to154std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc154to150std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc158to154dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc154to150dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc160to150dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "5", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "enc150to50str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc50to46std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc46to42std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc50to46dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc46to42dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc42to14str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "self", ".", "enc14to10std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc10to6std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc14to10dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc10to6dil", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc6to3str", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "2", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "enc3to1std", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec1to3std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2", "\n", "# out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec3to6str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2+2", "\n", "# out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "2", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "self", ".", "dec6to10std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "\n", "self", ".", "dec6to10dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec10to14std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "\n", ")", "\n", "self", ".", "dec10to14dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4, out:2", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec14to42str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+2, out:2", "\n", "nn", ".", "ConvTranspose2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec42to46std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec42to46dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 2+4, out:2", "\n", "nn", ".", "ConvTranspose2d", "(", "6", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec46to50std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec46to50dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "2", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec50to150str", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+2, out: 4", "\n", "nn", ".", "ConvTranspose2d", "(", "6", "*", "funit", ",", "4", "*", "funit", ",", "3", ",", "stride", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec150to154std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 8+4, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec150to154dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 8+4, out: 3", "\n", "nn", ".", "ConvTranspose2d", "(", "12", "*", "funit", ",", "3", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", "*", "funit", ")", ",", "\n", ")", "\n", "self", ".", "dec154to158std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec154to158dil", "=", "nn", ".", "Sequential", "(", "\n", "# in: 6+4, out: 2", "\n", "nn", ".", "ConvTranspose2d", "(", "10", "*", "funit", ",", "2", "*", "funit", ",", "3", ",", "dilation", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "init", "=", "0.01", ")", ",", "\n", ")", "\n", "self", ".", "dec158to160std", "=", "nn", ".", "Sequential", "(", "\n", "# in: 4+2", "\n", "nn", ".", "ConvTranspose2d", "(", "6", "*", "funit", ",", "3", ",", "3", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.Hul160Net.forward": [[1570, 1607], ["relics.Hul160Net.enc160to158std", "torch.cat", "torch.cat", "relics.Hul160Net.enc150to50str", "torch.cat", "torch.cat", "relics.Hul160Net.enc42to14str", "torch.cat", "torch.cat", "relics.Hul160Net.enc6to3str", "relics.Hul160Net.enc3to1std", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "relics.Hul160Net.dec158to160std", "relics.Hul160Net.enc158to154std", "relics.Hul160Net.enc158to154dil", "relics.Hul160Net.enc154to150std", "relics.Hul160Net.enc154to150dil", "relics.Hul160Net.enc160to150dil", "relics.Hul160Net.enc50to46std", "relics.Hul160Net.enc50to46dil", "relics.Hul160Net.enc46to42std", "relics.Hul160Net.enc46to42dil", "relics.Hul160Net.enc14to10std", "relics.Hul160Net.enc14to10dil", "relics.Hul160Net.enc10to6std", "relics.Hul160Net.enc10to6dil", "relics.Hul160Net.dec1to3std", "relics.Hul160Net.dec3to6str", "relics.Hul160Net.dec6to10std", "relics.Hul160Net.dec6to10dil", "relics.Hul160Net.dec10to14std", "relics.Hul160Net.dec10to14dil", "relics.Hul160Net.dec14to42str", "relics.Hul160Net.dec42to46std", "relics.Hul160Net.dec42to46dil", "relics.Hul160Net.dec46to50std", "relics.Hul160Net.dec46to50dil", "relics.Hul160Net.dec50to150str", "relics.Hul160Net.dec150to154std", "relics.Hul160Net.dec150to154dil", "relics.Hul160Net.dec154to158std", "relics.Hul160Net.dec154to158dil"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# down", "\n", "# 160 to 150", "\n", "        ", "l158", "=", "self", ".", "enc160to158std", "(", "x", ")", "\n", "l154", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc158to154std", "(", "l158", ")", ",", "self", ".", "enc158to154dil", "(", "l158", ")", "]", ",", "1", ")", "\n", "l150", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc154to150std", "(", "l154", ")", ",", "self", ".", "enc154to150dil", "(", "l154", ")", ",", "self", ".", "enc160to150dil", "(", "x", ")", "]", ",", "1", ")", "\n", "del", "(", "x", ")", "\n", "l50", "=", "self", ".", "enc150to50str", "(", "l150", ")", "\n", "l46", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc50to46std", "(", "l50", ")", ",", "self", ".", "enc50to46dil", "(", "l50", ")", "]", ",", "1", ")", "\n", "l42", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc46to42std", "(", "l46", ")", ",", "self", ".", "enc46to42dil", "(", "l46", ")", "]", ",", "1", ")", "\n", "l14", "=", "self", ".", "enc42to14str", "(", "l42", ")", "\n", "l10", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc14to10std", "(", "l14", ")", ",", "self", ".", "enc14to10dil", "(", "l14", ")", "]", ",", "1", ")", "\n", "l6", "=", "torch", ".", "cat", "(", "[", "self", ".", "enc10to6std", "(", "l10", ")", ",", "self", ".", "enc10to6dil", "(", "l10", ")", "]", ",", "1", ")", "\n", "l3", "=", "self", ".", "enc6to3str", "(", "l6", ")", "# k2s2", "\n", "l1", "=", "self", ".", "enc3to1std", "(", "l3", ")", "\n", "# up", "\n", "l3", "=", "torch", ".", "cat", "(", "[", "l3", ",", "self", ".", "dec1to3std", "(", "l1", ")", "]", ",", "1", ")", "\n", "del", "(", "l1", ")", "\n", "\n", "l6", "=", "torch", ".", "cat", "(", "[", "l6", ",", "self", ".", "dec3to6str", "(", "l3", ")", "]", ",", "1", ")", "\n", "del", "(", "l3", ")", "\n", "l10", "=", "torch", ".", "cat", "(", "[", "l10", ",", "self", ".", "dec6to10std", "(", "l6", ")", ",", "self", ".", "dec6to10dil", "(", "l6", ")", "]", ",", "1", ")", "\n", "del", "(", "l6", ")", "\n", "l14", "=", "torch", ".", "cat", "(", "[", "l14", ",", "self", ".", "dec10to14std", "(", "l10", ")", ",", "self", ".", "dec10to14dil", "(", "l10", ")", "]", ",", "1", ")", "\n", "del", "(", "l10", ")", "\n", "l42", "=", "torch", ".", "cat", "(", "[", "l42", ",", "self", ".", "dec14to42str", "(", "l14", ")", "]", ",", "1", ")", "\n", "l46", "=", "torch", ".", "cat", "(", "[", "l46", ",", "self", ".", "dec42to46std", "(", "l42", ")", ",", "self", ".", "dec42to46dil", "(", "l42", ")", "]", ",", "1", ")", "\n", "del", "(", "l42", ")", "\n", "l50", "=", "torch", ".", "cat", "(", "[", "l50", ",", "self", ".", "dec46to50std", "(", "l46", ")", ",", "self", ".", "dec46to50dil", "(", "l46", ")", "]", ",", "1", ")", "\n", "del", "(", "l46", ")", "\n", "l150", "=", "torch", ".", "cat", "(", "[", "l150", ",", "self", ".", "dec50to150str", "(", "l50", ")", "]", ",", "1", ")", "\n", "del", "(", "l50", ")", "\n", "l154", "=", "torch", ".", "cat", "(", "[", "l154", ",", "self", ".", "dec150to154std", "(", "l150", ")", ",", "self", ".", "dec150to154dil", "(", "l150", ")", "]", ",", "1", ")", "\n", "del", "(", "l150", ")", "\n", "l158", "=", "torch", ".", "cat", "(", "[", "l158", ",", "self", ".", "dec154to158std", "(", "l154", ")", ",", "self", ".", "dec154to158dil", "(", "l154", ")", "]", ",", "1", ")", "\n", "del", "(", "l154", ")", "\n", "return", "self", ".", "dec158to160std", "(", "l158", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.HunkyNet.__init__": [[1612, 1725], ["torch.Module.__init__", "torch.Sequential", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose2d", "torch.Sequential", "torch.ConvTranspose2d", "torch.Sequential", "torch.ConvTranspose2d", "torch.Sequential", "torch.ConvTranspose2d", "torch.Sequential", "torch.ConvTranspose2d", "torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "HunkyNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enc1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "5", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "5", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "down", "=", "nn", ".", "MaxPool2d", "(", "2", ")", "\n", "self", ".", "enc2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "96", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "96", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "96", ",", "96", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "96", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "# down", "\n", "self", ".", "enc3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "96", ",", "128", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "# down", "\n", "self", ".", "enc4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "# down", "\n", "self", ".", "enc5", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "# down", "\n", "self", ".", "encdec", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "1024", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "1024", ",", "1024", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "up1", "=", "nn", ".", "ConvTranspose2d", "(", "1024", ",", "512", ",", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "dec2", "=", "nn", ".", "Sequential", "(", "\n", "# += clone", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", ",", "512", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", ",", "512", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "up2", "=", "nn", ".", "ConvTranspose2d", "(", "512", ",", "256", ",", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "dec3", "=", "nn", ".", "Sequential", "(", "\n", "# += clone", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "256", ",", "256", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "256", ",", "256", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "up3", "=", "nn", ".", "ConvTranspose2d", "(", "256", ",", "128", ",", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "dec4", "=", "nn", ".", "Sequential", "(", "\n", "# += clone", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "128", ",", "128", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "128", ",", "128", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "up4", "=", "nn", ".", "ConvTranspose2d", "(", "128", ",", "96", ",", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "dec5", "=", "nn", ".", "Sequential", "(", "\n", "# += clone", "\n", "nn", ".", "BatchNorm2d", "(", "96", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "96", ",", "96", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "96", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "96", ",", "96", ",", "3", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "96", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "up5", "=", "nn", ".", "ConvTranspose2d", "(", "96", ",", "64", ",", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "dec6", "=", "nn", ".", "Sequential", "(", "\n", "# += clone", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "64", ",", "64", ",", "5", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "64", ",", "3", ",", "5", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.relics.HunkyNet.forward": [[1726, 1760], ["relics.HunkyNet.enc1", "residuals.append", "relics.HunkyNet.down", "relics.HunkyNet.enc2", "residuals.append", "relics.HunkyNet.down", "relics.HunkyNet.enc3", "residuals.append", "relics.HunkyNet.down", "relics.HunkyNet.enc4", "residuals.append", "relics.HunkyNet.down", "relics.HunkyNet.enc5", "residuals.append", "relics.HunkyNet.down", "relics.HunkyNet.encdec", "relics.HunkyNet.up1", "relics.HunkyNet.dec2", "relics.HunkyNet.up2", "relics.HunkyNet.dec3", "relics.HunkyNet.up3", "relics.HunkyNet.dec4", "relics.HunkyNet.up4", "relics.HunkyNet.dec5", "relics.HunkyNet.up5", "relics.HunkyNet.dec6", "relics.HunkyNet.clone", "relics.HunkyNet.clone", "relics.HunkyNet.clone", "relics.HunkyNet.clone", "relics.HunkyNet.clone", "residuals.pop", "residuals.pop", "residuals.pop", "residuals.pop", "residuals.pop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residuals", "=", "[", "]", "\n", "layer", "=", "self", ".", "enc1", "(", "x", ")", "\n", "residuals", ".", "append", "(", "layer", ".", "clone", "(", ")", ")", "\n", "layer", "=", "self", ".", "down", "(", "layer", ")", "\n", "layer", "=", "self", ".", "enc2", "(", "layer", ")", "\n", "residuals", ".", "append", "(", "layer", ".", "clone", "(", ")", ")", "\n", "layer", "=", "self", ".", "down", "(", "layer", ")", "\n", "layer", "=", "self", ".", "enc3", "(", "layer", ")", "\n", "residuals", ".", "append", "(", "layer", ".", "clone", "(", ")", ")", "\n", "layer", "=", "self", ".", "down", "(", "layer", ")", "\n", "layer", "=", "self", ".", "enc4", "(", "layer", ")", "\n", "residuals", ".", "append", "(", "layer", ".", "clone", "(", ")", ")", "\n", "layer", "=", "self", ".", "down", "(", "layer", ")", "\n", "layer", "=", "self", ".", "enc5", "(", "layer", ")", "\n", "residuals", ".", "append", "(", "layer", ".", "clone", "(", ")", ")", "\n", "layer", "=", "self", ".", "down", "(", "layer", ")", "\n", "layer", "=", "self", ".", "encdec", "(", "layer", ")", "\n", "layer", "=", "self", ".", "up1", "(", "layer", ")", "\n", "layer", "=", "layer", "+", "residuals", ".", "pop", "(", ")", "\n", "layer", "=", "self", ".", "dec2", "(", "layer", ")", "\n", "layer", "=", "self", ".", "up2", "(", "layer", ")", "\n", "layer", "=", "layer", "+", "residuals", ".", "pop", "(", ")", "\n", "layer", "=", "self", ".", "dec3", "(", "layer", ")", "\n", "layer", "=", "self", ".", "up3", "(", "layer", ")", "\n", "layer", "=", "layer", "+", "residuals", ".", "pop", "(", ")", "\n", "layer", "=", "self", ".", "dec4", "(", "layer", ")", "\n", "layer", "=", "self", ".", "up4", "(", "layer", ")", "\n", "layer", "=", "layer", "+", "residuals", ".", "pop", "(", ")", "\n", "layer", "=", "self", ".", "dec5", "(", "layer", ")", "\n", "layer", "=", "self", ".", "up5", "(", "layer", ")", "\n", "layer", "=", "layer", "+", "residuals", ".", "pop", "(", ")", "\n", "layer", "=", "self", ".", "dec6", "(", "layer", ")", "\n", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.ResnetGenerator.__init__": [[109, 133], ["torch.Module.__init__", "p2p_networks.Inconv", "p2p_networks.Down", "p2p_networks.Down", "range", "torch.Sequential", "torch.Sequential", "p2p_networks.Up", "p2p_networks.Up", "p2p_networks.Outconv", "type", "p2p_networks.ResBlock"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_nc", ",", "output_nc", ",", "ngf", "=", "64", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "use_dropout", "=", "False", ",", "n_blocks", "=", "9", ",", "padding_type", "=", "'reflect'", ")", ":", "\n", "        ", "assert", "(", "n_blocks", ">=", "0", ")", "\n", "super", "(", "ResnetGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "input_nc", "=", "input_nc", "\n", "self", ".", "output_nc", "=", "output_nc", "\n", "self", ".", "ngf", "=", "ngf", "\n", "if", "type", "(", "norm_layer", ")", "==", "functools", ".", "partial", ":", "\n", "            ", "use_bias", "=", "norm_layer", ".", "func", "==", "nn", ".", "InstanceNorm2d", "\n", "", "else", ":", "\n", "            ", "use_bias", "=", "norm_layer", "==", "nn", ".", "InstanceNorm2d", "\n", "\n", "", "self", ".", "inc", "=", "Inconv", "(", "input_nc", ",", "ngf", ",", "norm_layer", ",", "use_bias", ")", "\n", "self", ".", "down1", "=", "Down", "(", "ngf", ",", "ngf", "*", "2", ",", "norm_layer", ",", "use_bias", ")", "\n", "self", ".", "down2", "=", "Down", "(", "ngf", "*", "2", ",", "ngf", "*", "4", ",", "norm_layer", ",", "use_bias", ")", "\n", "\n", "model", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "model", "+=", "[", "ResBlock", "(", "ngf", "*", "4", ",", "padding_type", "=", "padding_type", ",", "norm_layer", "=", "norm_layer", ",", "use_dropout", "=", "use_dropout", ",", "use_bias", "=", "use_bias", ")", "]", "\n", "", "self", ".", "resblocks", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n", "self", ".", "up1", "=", "Up", "(", "ngf", "*", "4", ",", "ngf", "*", "2", ",", "norm_layer", ",", "use_bias", ")", "\n", "self", ".", "up2", "=", "Up", "(", "ngf", "*", "2", ",", "ngf", ",", "norm_layer", ",", "use_bias", ")", "\n", "\n", "self", ".", "outc", "=", "Outconv", "(", "ngf", ",", "output_nc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.ResnetGenerator.forward": [[134, 144], ["p2p_networks.ResnetGenerator.inc", "p2p_networks.ResnetGenerator.down1", "p2p_networks.ResnetGenerator.down2", "p2p_networks.ResnetGenerator.resblocks", "p2p_networks.ResnetGenerator.up1", "p2p_networks.ResnetGenerator.up2", "p2p_networks.ResnetGenerator.outc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "{", "}", "\n", "out", "[", "'in'", "]", "=", "self", ".", "inc", "(", "input", ")", "\n", "out", "[", "'d1'", "]", "=", "self", ".", "down1", "(", "out", "[", "'in'", "]", ")", "\n", "out", "[", "'d2'", "]", "=", "self", ".", "down2", "(", "out", "[", "'d1'", "]", ")", "\n", "out", "[", "'bottle'", "]", "=", "self", ".", "resblocks", "(", "out", "[", "'d2'", "]", ")", "\n", "out", "[", "'u1'", "]", "=", "self", ".", "up1", "(", "out", "[", "'bottle'", "]", ")", "\n", "out", "[", "'u2'", "]", "=", "self", ".", "up2", "(", "out", "[", "'u1'", "]", ")", "\n", "\n", "return", "self", ".", "outc", "(", "out", "[", "'u2'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.Inconv.__init__": [[147, 155], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "norm_layer", ",", "use_bias", ")", ":", "\n", "        ", "super", "(", "Inconv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inconv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReflectionPad2d", "(", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "kernel_size", "=", "7", ",", "padding", "=", "0", ",", "\n", "bias", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "out_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.Inconv.forward": [[157, 160], ["p2p_networks.Inconv.inconv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "inconv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.Down.__init__": [[163, 170], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "norm_layer", ",", "use_bias", ")", ":", "\n", "        ", "super", "(", "Down", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "down", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "out_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.Down.forward": [[172, 175], ["p2p_networks.Down.down"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "down", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.ResBlock.__init__": [[179, 182], ["torch.Module.__init__", "p2p_networks.ResBlock.build_conv_block"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.ResBlock.build_conv_block"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "padding_type", ",", "norm_layer", ",", "use_dropout", ",", "use_bias", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_block", "=", "self", ".", "build_conv_block", "(", "dim", ",", "padding_type", ",", "norm_layer", ",", "use_dropout", ",", "use_bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.ResBlock.build_conv_block": [[183, 214], ["torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Dropout", "torch.Dropout", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReplicationPad2d", "torch.ReplicationPad2d", "NotImplementedError", "torch.ReplicationPad2d", "torch.ReplicationPad2d", "NotImplementedError"], "methods", ["None"], ["", "def", "build_conv_block", "(", "self", ",", "dim", ",", "padding_type", ",", "norm_layer", ",", "use_dropout", ",", "use_bias", ")", ":", "\n", "        ", "conv_block", "=", "[", "]", "\n", "p", "=", "0", "\n", "if", "padding_type", "==", "'reflect'", ":", "\n", "            ", "conv_block", "+=", "[", "nn", ".", "ReflectionPad2d", "(", "1", ")", "]", "\n", "", "elif", "padding_type", "==", "'replicate'", ":", "\n", "            ", "conv_block", "+=", "[", "nn", ".", "ReplicationPad2d", "(", "1", ")", "]", "\n", "", "elif", "padding_type", "==", "'zero'", ":", "\n", "            ", "p", "=", "1", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'padding [%s] is not implemented'", "%", "padding_type", ")", "\n", "\n", "", "conv_block", "+=", "[", "nn", ".", "Conv2d", "(", "dim", ",", "dim", ",", "kernel_size", "=", "3", ",", "padding", "=", "p", ",", "bias", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "]", "\n", "if", "use_dropout", ":", "\n", "            ", "conv_block", "+=", "[", "nn", ".", "Dropout", "(", "0.5", ")", "]", "\n", "\n", "", "p", "=", "0", "\n", "if", "padding_type", "==", "'reflect'", ":", "\n", "            ", "conv_block", "+=", "[", "nn", ".", "ReflectionPad2d", "(", "1", ")", "]", "\n", "", "elif", "padding_type", "==", "'replicate'", ":", "\n", "            ", "conv_block", "+=", "[", "nn", ".", "ReplicationPad2d", "(", "1", ")", "]", "\n", "", "elif", "padding_type", "==", "'zero'", ":", "\n", "            ", "p", "=", "1", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'padding [%s] is not implemented'", "%", "padding_type", ")", "\n", "", "conv_block", "+=", "[", "nn", ".", "Conv2d", "(", "dim", ",", "dim", ",", "kernel_size", "=", "3", ",", "padding", "=", "p", ",", "bias", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "dim", ")", "]", "\n", "\n", "return", "nn", ".", "Sequential", "(", "*", "conv_block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.ResBlock.forward": [[215, 218], ["p2p_networks.ResBlock.conv_block", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", "+", "self", ".", "conv_block", "(", "x", ")", "\n", "return", "nn", ".", "ReLU", "(", "True", ")", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.Up.__init__": [[221, 234], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "norm_layer", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "norm_layer", ",", "use_bias", ")", ":", "\n", "        ", "super", "(", "Up", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "Sequential", "(", "\n", "# nn.Upsample(scale_factor=2, mode='nearest'),", "\n", "# nn.Conv2d(in_ch, out_ch,", "\n", "#           kernel_size=3, stride=1,", "\n", "#           padding=1, bias=use_bias),", "\n", "nn", ".", "ConvTranspose2d", "(", "in_ch", ",", "out_ch", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "output_padding", "=", "1", ",", "\n", "bias", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "out_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.Up.forward": [[236, 239], ["p2p_networks.Up.up"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.Outconv.__init__": [[242, 248], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ")", ":", "\n", "        ", "super", "(", "Outconv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "outconv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReflectionPad2d", "(", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "kernel_size", "=", "7", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.Outconv.forward": [[250, 253], ["p2p_networks.Outconv.outconv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "outconv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.PixelDiscriminator.__init__": [[281, 300], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "type", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "p2p_networks.PixelDiscriminator.net.append", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_nc", ",", "ndf", "=", "64", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "use_sigmoid", "=", "False", ")", ":", "\n", "        ", "super", "(", "PixelDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "type", "(", "norm_layer", ")", "==", "functools", ".", "partial", ":", "\n", "            ", "use_bias", "=", "norm_layer", ".", "func", "==", "nn", ".", "InstanceNorm2d", "\n", "", "else", ":", "\n", "            ", "use_bias", "=", "norm_layer", "==", "nn", ".", "InstanceNorm2d", "\n", "\n", "", "self", ".", "net", "=", "[", "\n", "nn", ".", "Conv2d", "(", "input_nc", ",", "ndf", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", ",", "ndf", "*", "2", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "ndf", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "2", ",", "1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "use_bias", ")", "]", "\n", "\n", "if", "use_sigmoid", ":", "\n", "            ", "self", ".", "net", ".", "append", "(", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n", "", "self", ".", "net", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "net", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.PixelDiscriminator.forward": [[301, 303], ["p2p_networks.PixelDiscriminator.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "net", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.NLayerDiscriminator.__init__": [[306, 346], ["torch.Module.__init__", "int", "range", "min", "numpy.ceil", "min", "range", "range", "print", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "len", "setattr", "len", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Sigmoid", "torch.Sigmoid", "torch.Sequential", "torch.Sequential", "str"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["    ", "def", "__init__", "(", "self", ",", "input_nc", ",", "ndf", "=", "64", ",", "n_layers", "=", "3", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "use_sigmoid", "=", "False", ",", "getIntermFeat", "=", "False", ")", ":", "\n", "        ", "super", "(", "NLayerDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "getIntermFeat", "=", "getIntermFeat", "\n", "self", ".", "n_layers", "=", "n_layers", "\n", "\n", "kw", "=", "4", "\n", "padw", "=", "int", "(", "np", ".", "ceil", "(", "(", "kw", "-", "1.0", ")", "/", "2", ")", ")", "\n", "sequence", "=", "[", "[", "nn", ".", "Conv2d", "(", "input_nc", ",", "ndf", ",", "kernel_size", "=", "kw", ",", "stride", "=", "2", ",", "padding", "=", "padw", ")", ",", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "]", "]", "\n", "\n", "nf", "=", "ndf", "\n", "for", "n", "in", "range", "(", "1", ",", "n_layers", ")", ":", "\n", "            ", "nf_prev", "=", "nf", "\n", "nf", "=", "min", "(", "nf", "*", "2", ",", "512", ")", "\n", "sequence", "+=", "[", "[", "\n", "nn", ".", "Conv2d", "(", "nf_prev", ",", "nf", ",", "kernel_size", "=", "kw", ",", "stride", "=", "2", ",", "padding", "=", "padw", ")", ",", "\n", "norm_layer", "(", "nf", ")", ",", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "]", "]", "\n", "\n", "", "nf_prev", "=", "nf", "\n", "nf", "=", "min", "(", "nf", "*", "2", ",", "512", ")", "\n", "sequence", "+=", "[", "[", "\n", "nn", ".", "Conv2d", "(", "nf_prev", ",", "nf", ",", "kernel_size", "=", "kw", ",", "stride", "=", "1", ",", "padding", "=", "padw", ")", ",", "\n", "norm_layer", "(", "nf", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "]", "]", "\n", "\n", "sequence", "+=", "[", "[", "nn", ".", "Conv2d", "(", "nf", ",", "1", ",", "kernel_size", "=", "kw", ",", "stride", "=", "1", ",", "padding", "=", "padw", ")", "]", "]", "\n", "\n", "if", "use_sigmoid", ":", "\n", "            ", "sequence", "+=", "[", "[", "nn", ".", "Sigmoid", "(", ")", "]", "]", "\n", "\n", "", "if", "getIntermFeat", ":", "\n", "            ", "for", "n", "in", "range", "(", "len", "(", "sequence", ")", ")", ":", "\n", "                ", "setattr", "(", "self", ",", "'model'", "+", "str", "(", "n", ")", ",", "nn", ".", "Sequential", "(", "*", "sequence", "[", "n", "]", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "sequence_stream", "=", "[", "]", "\n", "for", "n", "in", "range", "(", "len", "(", "sequence", ")", ")", ":", "\n", "                ", "sequence_stream", "+=", "sequence", "[", "n", "]", "\n", "", "print", "(", "sequence", ")", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "sequence_stream", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.NLayerDiscriminator.forward": [[347, 356], ["range", "p2p_networks.NLayerDiscriminator.model", "getattr", "res.append", "getattr.", "str"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "self", ".", "getIntermFeat", ":", "\n", "            ", "res", "=", "[", "input", "]", "\n", "for", "n", "in", "range", "(", "self", ".", "n_layers", "+", "2", ")", ":", "\n", "                ", "model", "=", "getattr", "(", "self", ",", "'model'", "+", "str", "(", "n", ")", ")", "\n", "res", ".", "append", "(", "model", "(", "res", "[", "-", "1", "]", ")", ")", "\n", "", "return", "res", "[", "1", ":", "]", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "model", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.MultiscaleDiscriminator.__init__": [[358, 374], ["torch.Module.__init__", "range", "torch.AvgPool2d", "torch.AvgPool2d", "p2p_networks.NLayerDiscriminator", "range", "setattr", "setattr", "getattr", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_nc", ",", "ndf", "=", "64", ",", "n_layers", "=", "3", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "\n", "use_sigmoid", "=", "False", ",", "num_D", "=", "3", ",", "getIntermFeat", "=", "False", ")", ":", "\n", "        ", "super", "(", "MultiscaleDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_D", "=", "num_D", "\n", "self", ".", "n_layers", "=", "n_layers", "\n", "self", ".", "getIntermFeat", "=", "getIntermFeat", "\n", "\n", "for", "i", "in", "range", "(", "num_D", ")", ":", "\n", "            ", "netD", "=", "NLayerDiscriminator", "(", "input_nc", ",", "ndf", ",", "n_layers", ",", "norm_layer", ",", "use_sigmoid", ",", "getIntermFeat", ")", "\n", "if", "getIntermFeat", ":", "\n", "                ", "for", "j", "in", "range", "(", "n_layers", "+", "2", ")", ":", "\n", "                    ", "setattr", "(", "self", ",", "'scale'", "+", "str", "(", "i", ")", "+", "'_layer'", "+", "str", "(", "j", ")", ",", "getattr", "(", "netD", ",", "'model'", "+", "str", "(", "j", ")", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "setattr", "(", "self", ",", "'layer'", "+", "str", "(", "i", ")", ",", "netD", ".", "model", ")", "\n", "\n", "", "", "self", ".", "downsample", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "[", "1", ",", "1", "]", ",", "count_include_pad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.MultiscaleDiscriminator.singleD_forward": [[375, 383], ["range", "len", "result.append", "model"], "methods", ["None"], ["", "def", "singleD_forward", "(", "self", ",", "model", ",", "input", ")", ":", "\n", "        ", "if", "self", ".", "getIntermFeat", ":", "\n", "            ", "result", "=", "[", "input", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "model", ")", ")", ":", "\n", "                ", "result", ".", "append", "(", "model", "[", "i", "]", "(", "result", "[", "-", "1", "]", ")", ")", "\n", "", "return", "result", "[", "1", ":", "]", "\n", "", "else", ":", "\n", "            ", "return", "[", "model", "(", "input", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.MultiscaleDiscriminator.forward": [[384, 397], ["range", "result.append", "getattr", "p2p_networks.MultiscaleDiscriminator.singleD_forward", "p2p_networks.MultiscaleDiscriminator.downsample", "getattr", "range", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.MultiscaleDiscriminator.singleD_forward"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "num_D", "=", "self", ".", "num_D", "\n", "result", "=", "[", "]", "\n", "input_downsampled", "=", "input", "\n", "for", "i", "in", "range", "(", "num_D", ")", ":", "\n", "            ", "if", "self", ".", "getIntermFeat", ":", "\n", "                ", "model", "=", "[", "getattr", "(", "self", ",", "'scale'", "+", "str", "(", "num_D", "-", "1", "-", "i", ")", "+", "'_layer'", "+", "str", "(", "j", ")", ")", "for", "j", "in", "range", "(", "self", ".", "n_layers", "+", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "model", "=", "getattr", "(", "self", ",", "'layer'", "+", "str", "(", "num_D", "-", "1", "-", "i", ")", ")", "\n", "", "result", ".", "append", "(", "self", ".", "singleD_forward", "(", "model", ",", "input_downsampled", ")", ")", "\n", "if", "i", "!=", "(", "num_D", "-", "1", ")", ":", "\n", "                ", "input_downsampled", "=", "self", ".", "downsample", "(", "input_downsampled", ")", "\n", "", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.get_norm_layer": [[13, 25], ["functools.partial", "functools.partial", "NotImplementedError"], "function", ["None"], ["def", "get_norm_layer", "(", "norm_type", "=", "'instance'", ")", ":", "\n", "    ", "if", "norm_type", "==", "'batch'", ":", "\n", "        ", "norm_layer", "=", "functools", ".", "partial", "(", "nn", ".", "BatchNorm2d", ",", "affine", "=", "True", ")", "\n", "", "elif", "norm_type", "==", "'instance'", ":", "\n", "        ", "norm_layer", "=", "functools", ".", "partial", "(", "nn", ".", "InstanceNorm2d", ",", "affine", "=", "False", ",", "track_running_stats", "=", "False", ")", "\n", "", "elif", "norm_type", "==", "'switchable'", ":", "\n", "        ", "norm_layer", "=", "SwitchNorm2d", "\n", "", "elif", "norm_type", "==", "'none'", ":", "\n", "        ", "norm_layer", "=", "None", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'normalization layer [%s] is not found'", "%", "norm_type", ")", "\n", "", "return", "norm_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.get_scheduler": [[27, 46], ["torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "NotImplementedError"], "function", ["None"], ["", "def", "get_scheduler", "(", "optimizer", ",", "opt", ",", "generator", ")", ":", "\n", "#if opt.lr_policy == 'lambda':", "\n", "#    def lambda_rule(epoch):", "\n", "#        lr_l = 1.0 - max(0, epoch + opt.epoch_count - opt.niter) / float(opt.niter_decay + 1)", "\n", "#        return lr_l", "\n", "#    scheduler = lr_scheduler.LambdaLR(optimizer, lr_lambda=lambda_rule)", "\n", "#elif opt.lr_policy == 'step':", "\n", "#    scheduler = lr_scheduler.StepLR(optimizer, step_size=opt.lr_decay_iters, gamma=0.1)", "\n", "    ", "if", "opt", ".", "lr_policy", "==", "'plateau'", ":", "\n", "        ", "schedulerSSIM", "=", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "optimizer", ",", "factor", "=", "opt", ".", "lr_gamma", ",", "verbose", "=", "True", ",", "threshold", "=", "1e-8", ",", "patience", "=", "opt", ".", "lr_step_size", ")", "\n", "schedulerD", "=", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "optimizer", ",", "factor", "=", "opt", ".", "lr_gamma", ",", "verbose", "=", "True", ",", "threshold", "=", "1e-8", ",", "patience", "=", "opt", ".", "lr_step_size", ")", "\n", "#elif opt.lr_policy == 'cosine':", "\n", "#    scheduler = lr_scheduler.CosineAnnealingLR(optimizer, T_max=opt.niter, eta_min=0)", "\n", "", "else", ":", "\n", "        ", "return", "NotImplementedError", "(", "'learning rate policy [%s] is not implemented'", ",", "opt", ".", "lr_policy", ")", "\n", "", "if", "generator", ":", "\n", "        ", "return", "{", "'D'", ":", "schedulerD", ",", "'SSIM'", ":", "schedulerSSIM", "}", "\n", "", "else", ":", "\n", "        ", "return", "schedulerD", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.update_learning_rate": [[49, 53], ["scheduler.step", "print"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["", "", "def", "update_learning_rate", "(", "scheduler", ",", "optimizer", ",", "loss_avg", "=", "None", ",", "scheduler_name", "=", "\"untitled scheduler\"", ")", ":", "\n", "    ", "scheduler", ".", "step", "(", "metrics", "=", "loss_avg", ")", "\n", "lr", "=", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "print", "(", "'Learning rate of %s: %.7f'", "%", "(", "scheduler_name", ",", "lr", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.init_weights": [[55, 77], ["print", "net.apply", "hasattr", "torch.nn.init.normal_", "hasattr", "torch.nn.init.constant_", "classname.find", "torch.nn.init.normal_", "torch.nn.init.constant_", "classname.find", "classname.find", "torch.nn.init.xavier_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.orthogonal_", "NotImplementedError"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["", "def", "init_weights", "(", "net", ",", "init_type", "=", "'normal'", ",", "gain", "=", "0.02", ")", ":", "\n", "    ", "def", "init_func", "(", "m", ")", ":", "\n", "        ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "m", ",", "'weight'", ")", "and", "(", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", "or", "classname", ".", "find", "(", "'Linear'", ")", "!=", "-", "1", ")", ":", "\n", "            ", "if", "init_type", "==", "'normal'", ":", "\n", "                ", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "0.0", ",", "gain", ")", "\n", "", "elif", "init_type", "==", "'xavier'", ":", "\n", "                ", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ".", "data", ",", "gain", "=", "gain", ")", "\n", "", "elif", "init_type", "==", "'kaiming'", ":", "\n", "                ", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ".", "data", ",", "a", "=", "0", ",", "mode", "=", "'fan_in'", ")", "\n", "", "elif", "init_type", "==", "'orthogonal'", ":", "\n", "                ", "init", ".", "orthogonal_", "(", "m", ".", "weight", ".", "data", ",", "gain", "=", "gain", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "(", "'initialization method [%s] is not implemented'", "%", "init_type", ")", "\n", "", "if", "hasattr", "(", "m", ",", "'bias'", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "init", ".", "constant_", "(", "m", ".", "bias", ".", "data", ",", "0.0", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'BatchNorm2d'", ")", "!=", "-", "1", ":", "\n", "            ", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "1.0", ",", "gain", ")", "\n", "init", ".", "constant_", "(", "m", ".", "bias", ".", "data", ",", "0.0", ")", "\n", "\n", "", "", "print", "(", "'initialize network with %s'", "%", "init_type", ")", "\n", "net", ".", "apply", "(", "init_func", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.init_net": [[79, 84], ["torch.cuda.is_available", "torch.cuda.is_available", "net.to"], "function", ["None"], ["", "def", "init_net", "(", "net", ",", "init_type", "=", "'normal'", ",", "init_gain", "=", "0.02", ",", "gpu_id", "=", "'cuda:0'", ")", ":", "\n", "    ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "net", ".", "to", "(", "gpu_id", ")", "\n", "#init_weights(net, init_type, gain=init_gain)", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.define_G": [[86, 104], ["p2p_networks.get_norm_layer", "p2p_networks.init_net", "p2p_networks.ResnetGenerator", "networks.nnModules.UNet", "Hul160Net", "Hul128Net", "networks.nnModules.Hulb128Net", "networks.nnModules.Hulbs128Net", "HulNet"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.get_norm_layer", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.init_net"], ["", "def", "define_G", "(", "input_nc", ",", "output_nc", ",", "ngf", ",", "norm", "=", "'batch'", ",", "use_dropout", "=", "False", ",", "init_type", "=", "'normal'", ",", "init_gain", "=", "0.02", ",", "gpu_id", "=", "'cuda:0'", ",", "net_type", "=", "'Resnet'", ")", ":", "\n", "    ", "net", "=", "None", "\n", "norm_layer", "=", "get_norm_layer", "(", "norm_type", "=", "norm", ")", "\n", "if", "net_type", "==", "'Resnet'", ":", "\n", "        ", "net", "=", "ResnetGenerator", "(", "input_nc", ",", "output_nc", ",", "ngf", ",", "norm_layer", "=", "norm_layer", ",", "use_dropout", "=", "use_dropout", ",", "n_blocks", "=", "9", ")", "\n", "", "elif", "net_type", "==", "'UNet'", ":", "\n", "        ", "net", "=", "UNet", "(", "input_nc", ",", "output_nc", ")", "\n", "", "elif", "net_type", "==", "'Hul160Net'", ":", "\n", "        ", "net", "=", "Hul160Net", "(", ")", "\n", "", "elif", "net_type", "==", "'Hul128Net'", ":", "\n", "        ", "net", "=", "Hul128Net", "(", ")", "\n", "", "elif", "net_type", "==", "'Hulb128Net'", ":", "\n", "        ", "net", "=", "Hulb128Net", "(", ")", "\n", "", "elif", "net_type", "==", "'Hulbs128Net'", ":", "\n", "        ", "net", "=", "Hulbs128Net", "(", ")", "\n", "", "elif", "net_type", "==", "'HulNet'", ":", "\n", "        ", "net", "=", "HulNet", "(", ")", "\n", "", "return", "init_net", "(", "net", ",", "init_type", ",", "init_gain", ",", "gpu_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.define_D": [[255, 278], ["p2p_networks.get_norm_layer", "p2p_networks.init_net", "p2p_networks.NLayerDiscriminator", "p2p_networks.NLayerDiscriminator", "p2p_networks.PixelDiscriminator", "Hul144Disc", "networks.nnModules.Hulb112Disc", "networks.nnModules.Hul112Disc", "networks.nnModules.Hul112Disc", "NotImplementedError"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.get_norm_layer", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.p2p_networks.init_net"], ["", "", "def", "define_D", "(", "input_nc", ",", "ndf", ",", "netD", ",", "\n", "n_layers_D", "=", "3", ",", "norm", "=", "'batch'", ",", "use_sigmoid", "=", "False", ",", "init_type", "=", "'normal'", ",", "init_gain", "=", "0.02", ",", "gpu_id", "=", "'cuda:0'", ",", "out_activation", "=", "None", ",", "finalpool", "=", "False", ",", "funit", "=", "32", ")", ":", "\n", "    ", "net", "=", "None", "\n", "norm_layer", "=", "get_norm_layer", "(", "norm_type", "=", "norm", ")", "\n", "\n", "if", "netD", "==", "'basic'", ":", "\n", "        ", "net", "=", "NLayerDiscriminator", "(", "input_nc", ",", "ndf", ",", "n_layers", "=", "3", ",", "norm_layer", "=", "norm_layer", ",", "use_sigmoid", "=", "use_sigmoid", ")", "\n", "", "elif", "netD", "==", "'n_layers'", ":", "\n", "        ", "net", "=", "NLayerDiscriminator", "(", "input_nc", ",", "ndf", ",", "n_layers_D", ",", "norm_layer", "=", "norm_layer", ",", "use_sigmoid", "=", "use_sigmoid", ")", "\n", "", "elif", "netD", "==", "'pixel'", ":", "\n", "        ", "net", "=", "PixelDiscriminator", "(", "input_nc", ",", "ndf", ",", "norm_layer", "=", "norm_layer", ",", "use_sigmoid", "=", "use_sigmoid", ")", "\n", "", "elif", "netD", "==", "'Hul144Disc'", ":", "\n", "        ", "net", "=", "Hul144Disc", "(", "input_nc", ")", "\n", "", "elif", "netD", "==", "'Hulb112Disc'", ":", "\n", "        ", "net", "=", "Hulb112Disc", "(", "input_nc", ",", "out_activation", "=", "out_activation", ",", "finalpool", "=", "finalpool", ",", "funit", "=", "funit", ")", "\n", "", "elif", "netD", "==", "'Hul112Disc'", ":", "\n", "        ", "net", "=", "Hul112Disc", "(", "input_nc", ",", "out_activation", "=", "out_activation", ",", "finalpool", "=", "finalpool", ",", "funit", "=", "funit", ")", "\n", "", "elif", "netD", "==", "'Hull112Disc'", ":", "\n", "        ", "net", "=", "Hul112Disc", "(", "input_nc", ",", "out_activation", "=", "out_activation", ",", "finalpool", "=", "finalpool", ",", "funit", "=", "funit", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Discriminator model name [%s] is not recognized'", "%", "net", ")", "\n", "\n", "", "return", "init_net", "(", "net", ",", "init_type", ",", "init_gain", ",", "gpu_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.UtNet.UtNet.__init__": [[14, 89], ["torch.nn.Module.__init__", "torch.nn.ReflectionPad2d", "torch.nn.Sequential", "torch.nn.MaxPool2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ConvTranspose2d", "torch.nn.Sequential", "torch.nn.ConvTranspose2d", "torch.nn.Sequential", "torch.nn.ConvTranspose2d", "torch.nn.Sequential", "torch.nn.ConvTranspose2d", "torch.nn.Sequential", "torch.nn.ZeroPad2d", "torch.nn.Conv2d", "activation_fun", "torch.nn.Conv2d", "activation_fun", "torch.nn.Conv2d", "activation_fun", "torch.nn.Conv2d", "activation_fun", "torch.nn.Conv2d", "activation_fun", "torch.nn.Conv2d", "activation_fun", "torch.nn.Conv2d", "activation_fun", "torch.nn.Conv2d", "activation_fun", "torch.nn.Conv2d", "activation_fun", "torch.nn.ConvTranspose2d", "activation_fun", "torch.nn.ConvTranspose2d", "activation_fun", "torch.nn.ConvTranspose2d", "activation_fun", "torch.nn.ConvTranspose2d", "activation_fun", "torch.nn.ConvTranspose2d", "activation_fun", "torch.nn.ConvTranspose2d", "activation_fun", "torch.nn.ConvTranspose2d", "activation_fun", "torch.nn.ConvTranspose2d", "activation_fun", "torch.nn.ConvTranspose2d", "activation_fun", "torch.nn.Conv2d", "exit"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "funit", "=", "64", ",", "activation", "=", "'PReLU'", ")", ":", "\n", "        ", "super", "(", "UtNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "activation_params", "=", "{", "}", "\n", "if", "activation", "==", "'PReLU'", ":", "\n", "            ", "activation_fun", "=", "nn", ".", "PReLU", "\n", "", "elif", "activation", "==", "'ELU'", ":", "\n", "            ", "activation_fun", "=", "nn", ".", "ELU", "\n", "activation_params", "[", "'inplace'", "]", "=", "True", "\n", "", "elif", "activation", "==", "'Hardswish'", ":", "\n", "            ", "activation_fun", "=", "nn", ".", "Hardswish", "\n", "activation_params", "[", "'inplace'", "]", "=", "True", "\n", "", "else", ":", "\n", "            ", "exit", "(", "f'UtNet: unknown activation function: {activation}'", ")", "\n", "", "self", ".", "pad", "=", "nn", ".", "ReflectionPad2d", "(", "2", ")", "\n", "self", ".", "convs1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", ",", "\n", "nn", ".", "Conv2d", "(", "funit", ",", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", "\n", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "2", ")", "\n", "self", ".", "convs2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "funit", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", ",", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", "\n", ")", "\n", "self", ".", "convs3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "funit", ",", "4", "*", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", ",", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", "\n", ")", "\n", "self", ".", "convs4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "funit", ",", "8", "*", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", ",", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "8", "*", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", "\n", ")", "\n", "self", ".", "bottom", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "8", "*", "funit", ",", "16", "*", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "16", "*", "funit", ",", "16", "*", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", "\n", ")", "\n", "self", ".", "up1", "=", "nn", ".", "ConvTranspose2d", "(", "16", "*", "funit", ",", "8", "*", "funit", ",", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "tconvs1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "16", "*", "funit", ",", "8", "*", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "8", "*", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", "\n", ")", "\n", "self", ".", "up2", "=", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "tconvs2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "8", "*", "funit", ",", "4", "*", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "4", "*", "funit", ",", "4", "*", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", "\n", ")", "\n", "self", ".", "up3", "=", "nn", ".", "ConvTranspose2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "tconvs3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "4", "*", "funit", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "2", "*", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", "\n", ")", "\n", "self", ".", "up4", "=", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "funit", ",", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "tconvs4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "2", "*", "funit", ",", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "funit", ",", "funit", ",", "3", ")", ",", "\n", "activation_fun", "(", "**", "activation_params", ")", ",", "\n", "nn", ".", "Conv2d", "(", "funit", ",", "3", ",", "1", ")", "\n", ")", "\n", "self", ".", "unpad", "=", "nn", ".", "ZeroPad2d", "(", "-", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.UtNet.UtNet.forward": [[97, 110], ["UtNet.UtNet.pad", "UtNet.UtNet.convs1", "UtNet.UtNet.convs2", "UtNet.UtNet.convs3", "UtNet.UtNet.convs4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "UtNet.UtNet.tconvs4", "UtNet.UtNet.unpad", "UtNet.UtNet.maxpool", "UtNet.UtNet.maxpool", "UtNet.UtNet.maxpool", "UtNet.UtNet.up1", "UtNet.UtNet.up2", "UtNet.UtNet.up3", "UtNet.UtNet.up4", "UtNet.UtNet.bottom", "UtNet.UtNet.tconvs1", "UtNet.UtNet.tconvs2", "UtNet.UtNet.tconvs3", "UtNet.UtNet.maxpool"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "l", ")", ":", "\n", "        ", "l", "=", "self", ".", "pad", "(", "l", ")", "\n", "l1", "=", "self", ".", "convs1", "(", "l", ")", "\n", "l2", "=", "self", ".", "convs2", "(", "self", ".", "maxpool", "(", "l1", ")", ")", "\n", "l3", "=", "self", ".", "convs3", "(", "self", ".", "maxpool", "(", "l2", ")", ")", "\n", "l4", "=", "self", ".", "convs4", "(", "self", ".", "maxpool", "(", "l3", ")", ")", "\n", "l", "=", "torch", ".", "cat", "(", "[", "self", ".", "up1", "(", "self", ".", "bottom", "(", "self", ".", "maxpool", "(", "l4", ")", ")", ")", ",", "l4", "]", ",", "dim", "=", "1", ")", "\n", "l", "=", "torch", ".", "cat", "(", "[", "self", ".", "up2", "(", "self", ".", "tconvs1", "(", "l", ")", ")", ",", "l3", "]", ",", "dim", "=", "1", ")", "\n", "l", "=", "torch", ".", "cat", "(", "[", "self", ".", "up3", "(", "self", ".", "tconvs2", "(", "l", ")", ")", ",", "l2", "]", ",", "dim", "=", "1", ")", "\n", "l", "=", "torch", ".", "cat", "(", "[", "self", ".", "up4", "(", "self", ".", "tconvs3", "(", "l", ")", ")", ",", "l1", "]", ",", "dim", "=", "1", ")", "\n", "l", "=", "self", ".", "tconvs4", "(", "l", ")", "\n", "l", "=", "self", ".", "unpad", "(", "l", ")", "\n", "return", "l", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.UtNet.UpsNet.__init__": [[113, 115], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "funit", "=", "64", ",", "out_activation", "=", "'PReLU'", ")", ":", "\n", "        ", "pass", "# TODO pixelshuffle", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.networks.UtNet.testNets": [[116, 121], ["torch.rand", "UtNet.UtNet", "UtNet."], "function", ["None"], ["", "", "def", "testNets", "(", ")", ":", "\n", "    ", "at", "=", "torch", ".", "rand", "(", "10", ",", "3", ",", "136", ",", "136", ")", "\n", "net", "=", "UtNet", "(", ")", "\n", "res", "=", "net", "(", "at", ")", "\n", "assert", "at", ".", "shape", "==", "res", ".", "shape", "", "", ""]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.graph_utils.gen_markers": [[1, 8], ["len", "len", "markers.append"], "function", ["None"], ["def", "gen_markers", "(", "components", ")", ":", "\n", "    ", "markers", "=", "[", "]", "\n", "i", "=", "0", "\n", "while", "len", "(", "markers", ")", "<", "len", "(", "components", ")", ":", "\n", "        ", "markers", ".", "append", "(", "\"$%i$\"", "%", "i", ")", "\n", "i", "+=", "1", "\n", "", "return", "markers", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.graph_utils.make_markers_dict": [[9, 19], ["graph_utils.gen_markers", "dict", "len"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.graph_utils.gen_markers"], ["", "def", "make_markers_dict", "(", "components", ")", ":", "\n", "    ", "markers", "=", "gen_markers", "(", "components", ")", "\n", "markersdict", "=", "dict", "(", ")", "\n", "i", "=", "0", "\n", "for", "acomp", "in", "components", ":", "\n", "        ", "markersdict", "[", "acomp", "]", "=", "markers", "[", "i", "]", "\n", "i", "+=", "1", "\n", "if", "i", ">=", "len", "(", "markers", ")", ":", "\n", "            ", "i", "=", "0", "\n", "", "", "return", "markersdict", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.graph_utils.parse_log_file": [[20, 48], ["print", "open", "f.readlines", "len", "float", "float", "data.append", "float", "float", "[].split", "l.split", "l.split", "l.split", "l.split"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["", "def", "parse_log_file", "(", "path", ",", "smoothing_factor", "=", "1", ",", "pre", "=", "None", ",", "post", "=", "None", ")", ":", "\n", "    ", "data", "=", "[", "]", "\n", "i", "=", "0", "\n", "t", "=", "0", "\n", "with", "open", "(", "path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "l", "in", "f", ".", "readlines", "(", ")", ":", "\n", "            ", "added_data", "=", "False", "\n", "if", "pre", "is", "not", "None", ":", "\n", "                ", "if", "pre", "in", "l", "and", "post", "in", "l", ":", "\n", "                    ", "t", "+=", "float", "(", "l", ".", "split", "(", "pre", ")", "[", "1", "]", ".", "split", "(", "post", ")", "[", "0", "]", ")", "\n", "added_data", "=", "True", "\n", "", "elif", "pre", "in", "l", ":", "\n", "                    ", "t", "+=", "float", "(", "l", ".", "split", "(", "pre", ")", "[", "1", "]", ")", "\n", "added_data", "=", "True", "\n", "", "", "elif", "'Epoch'", "in", "l", "and", "'nan'", "not", "in", "l", ":", "\n", "                ", "t", "+=", "float", "(", "l", ".", "split", "(", "':'", ")", "[", "-", "1", "]", ")", "\n", "added_data", "=", "True", "\n", "", "elif", "'loss = '", "in", "l", "and", "'time = '", "not", "in", "l", ":", "\n", "                ", "t", "+=", "float", "(", "l", ".", "split", "(", "'loss = '", ")", "[", "-", "1", "]", ")", "\n", "added_data", "=", "True", "\n", "", "if", "added_data", ":", "\n", "                ", "i", "+=", "1", "\n", "if", "i", ">=", "smoothing_factor", ":", "\n", "                    ", "data", ".", "append", "(", "t", "/", "smoothing_factor", ")", "\n", "i", "=", "0", "\n", "t", "=", "0", "\n", "", "", "", "", "print", "(", "\"Added %u points from %s\"", "%", "(", "len", "(", "data", ")", ",", "path", ")", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.utilities.checksum": [[8, 23], ["hashlib.sha256.hexdigest", "hashlib.sha1", "open", "hashlib.sha256", "NotImplementedError", "file.read", "hashlib.sha256.update"], "function", ["None"], ["def", "checksum", "(", "fpath", ",", "htype", "=", "'sha1'", ")", ":", "\n", "    ", "if", "htype", "==", "'sha1'", ":", "\n", "        ", "h", "=", "hashlib", ".", "sha1", "(", ")", "\n", "", "elif", "htype", "==", "'sha256'", ":", "\n", "        ", "h", "=", "hashlib", ".", "sha256", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "type", ")", "\n", "", "with", "open", "(", "fpath", ",", "'rb'", ")", "as", "file", ":", "\n", "        ", "while", "True", ":", "\n", "# Reading is buffered, so we can read smaller chunks.", "\n", "            ", "chunk", "=", "file", ".", "read", "(", "h", ".", "block_size", ")", "\n", "if", "not", "chunk", ":", "\n", "                ", "break", "\n", "", "h", ".", "update", "(", "chunk", ")", "\n", "", "", "return", "h", ".", "hexdigest", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.utilities.cp": [[24, 29], ["subprocess.run", "shutil.copy2"], "function", ["None"], ["", "def", "cp", "(", "inpath", ",", "outpath", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "subprocess", ".", "run", "(", "(", "'cp'", ",", "'--reflink=auto'", ",", "inpath", ",", "outpath", ")", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "        ", "shutil", ".", "copy2", "(", "inpath", ",", "outpath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.utilities.jsonfpath_load": [[30, 43], ["os.path.isfile", "print", "isinstance", "open", "json.load", "default_type", "int", "x.items", "k.isdigit"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["", "", "def", "jsonfpath_load", "(", "fpath", ",", "default_type", "=", "dict", ",", "default", "=", "None", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "isfile", "(", "fpath", ")", ":", "\n", "        ", "print", "(", "'jsonfpath_load: warning: {} does not exist, returning default'", ".", "format", "(", "fpath", ")", ")", "\n", "if", "default", "is", "None", ":", "\n", "            ", "return", "default_type", "(", ")", "\n", "", "else", ":", "\n", "            ", "return", "default", "\n", "", "", "def", "jsonKeys2int", "(", "x", ")", ":", "\n", "        ", "if", "isinstance", "(", "x", ",", "dict", ")", ":", "\n", "            ", "return", "{", "k", "if", "not", "k", ".", "isdigit", "(", ")", "else", "int", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "x", ".", "items", "(", ")", "}", "\n", "", "return", "x", "\n", "", "with", "open", "(", "fpath", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "return", "json", ".", "load", "(", "f", ",", "object_hook", "=", "jsonKeys2int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.utilities.dict_to_json": [[44, 47], ["open", "json.dump"], "function", ["None"], ["", "", "def", "dict_to_json", "(", "adict", ",", "fpath", ")", ":", "\n", "    ", "with", "open", "(", "fpath", ",", "\"w\"", ")", "as", "f", ":", "\n", "        ", "json", ".", "dump", "(", "adict", ",", "f", ",", "indent", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.utilities.get_leaf": [[48, 52], ["os.path.basename", "os.path.relpath"], "function", ["None"], ["", "", "def", "get_leaf", "(", "path", ":", "str", ")", "->", "str", ":", "\n", "    ", "\"\"\"Returns the leaf of a path, whether it's a file or directory followed by\n    / or not.\"\"\"", "\n", "return", "os", ".", "path", ".", "basename", "(", "os", ".", "path", ".", "relpath", "(", "path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.utilities.get_root": [[53, 60], ["fpath.endswith", "os.path.dirname"], "function", ["None"], ["", "def", "get_root", "(", "fpath", ":", "str", ")", "->", "str", ":", "\n", "    ", "'''\n    return root directory a file (fpath) is located in.\n    '''", "\n", "while", "fpath", ".", "endswith", "(", "os", ".", "pathsep", ")", ":", "\n", "        ", "fpath", "=", "fpath", "[", ":", "-", "1", "]", "\n", "", "return", "os", ".", "path", ".", "dirname", "(", "fpath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.utilities.avg_listofdicts": [[61, 70], ["dict", "listofdicts[].keys", "dict.keys", "list", "adict.items", "statistics.mean", "res[].append"], "function", ["None"], ["", "def", "avg_listofdicts", "(", "listofdicts", ")", ":", "\n", "    ", "res", "=", "dict", "(", ")", "\n", "for", "akey", "in", "listofdicts", "[", "0", "]", ".", "keys", "(", ")", ":", "\n", "        ", "res", "[", "akey", "]", "=", "list", "(", ")", "\n", "", "for", "adict", "in", "listofdicts", ":", "\n", "        ", "for", "akey", ",", "aval", "in", "adict", ".", "items", "(", ")", ":", "\n", "            ", "res", "[", "akey", "]", ".", "append", "(", "aval", ")", "\n", "", "", "for", "akey", "in", "res", ".", "keys", "(", ")", ":", "\n", "        ", "res", "[", "akey", "]", "=", "statistics", ".", "mean", "(", "res", "[", "akey", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.utilities.list_of_tuples_to_csv": [[71, 77], ["open", "csv.writer", "csv.writer.writerow", "csv.writer.writerow"], "function", ["None"], ["", "", "def", "list_of_tuples_to_csv", "(", "listoftuples", ",", "heading", ",", "fpath", ")", ":", "\n", "    ", "with", "open", "(", "fpath", ",", "'w'", ")", "as", "fp", ":", "\n", "        ", "csvwriter", "=", "csv", ".", "writer", "(", "fp", ")", "\n", "csvwriter", ".", "writerow", "(", "heading", ")", "\n", "for", "arow", "in", "listoftuples", ":", "\n", "            ", "csvwriter", ".", "writerow", "(", "arow", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.utilities.filesize": [[78, 80], ["os.stat"], "function", ["None"], ["", "", "", "def", "filesize", "(", "fpath", ")", ":", "\n", "    ", "return", "os", ".", "stat", "(", "fpath", ")", ".", "st_size", "", "", ""]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.pt_ops.pt_crop_batch": [[1, 9], ["None"], "function", ["None"], ["def", "pt_crop_batch", "(", "batch", ",", "cs", ":", "int", ")", ":", "\n", "    ", "'''\n    center crop an image batch to cs\n    also compatible with numpy tensors\n    '''", "\n", "x0", "=", "(", "batch", ".", "shape", "[", "3", "]", "-", "cs", ")", "//", "2", "\n", "y0", "=", "(", "batch", ".", "shape", "[", "2", "]", "-", "cs", ")", "//", "2", "\n", "return", "batch", "[", ":", ",", ":", ",", "y0", ":", "y0", "+", "cs", ",", "x0", ":", "x0", "+", "cs", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.pt_ops.crop_to_multiple": [[10, 12], ["tensor.size", "tensor.size", "tensor.size", "tensor.size"], "function", ["None"], ["", "def", "crop_to_multiple", "(", "tensor", ",", "multiple", "=", "64", ")", ":", "\n", "    ", "return", "tensor", "[", "...", ",", ":", "tensor", ".", "size", "(", "-", "2", ")", "-", "tensor", ".", "size", "(", "-", "2", ")", "%", "multiple", ",", ":", "tensor", ".", "size", "(", "-", "1", ")", "-", "tensor", ".", "size", "(", "-", "1", ")", "%", "multiple", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.json_saver.JSONSaver.__init__": [[9, 16], ["common.libs.utilities.jsonfpath_load", "dict", "dict"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.utilities.jsonfpath_load"], ["    ", "def", "__init__", "(", "self", ",", "jsonfpath", ",", "step_type", ":", "str", "=", "[", "'step'", ",", "'epoch'", "]", "[", "0", "]", ",", "\n", "default", "=", "{", "'best_val'", ":", "dict", "(", ")", "}", ")", ":", "\n", "        ", "self", ".", "best_key_str", "=", "'best_{}'", ".", "format", "(", "step_type", ")", "# best step/epoch #", "\n", "self", ".", "jsonfpath", "=", "jsonfpath", "\n", "self", ".", "results", "=", "utilities", ".", "jsonfpath_load", "(", "jsonfpath", ",", "default", "=", "default", ")", "\n", "if", "self", ".", "best_key_str", "not", "in", "self", ".", "results", ":", "\n", "            ", "self", ".", "results", "[", "self", ".", "best_key_str", "]", "=", "dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.json_saver.JSONSaver.add_res": [[17, 50], ["res.items", "dict", "dict", "res.values", "isinstance", "common.libs.utilities.dict_to_json", "ValueError", "val_type"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.utilities.dict_to_json"], ["", "", "def", "add_res", "(", "self", ",", "step", ":", "int", ",", "res", ":", "dict", ",", "minimize", "=", "True", ",", "write", "=", "True", ",", "\n", "val_type", "=", "float", ",", "epoch", "=", "None", ",", "rm_none", "=", "False", ",", "key_prefix", "=", "''", ")", ":", "\n", "        ", "'''epoch is an alias for step\n        Set rm_none to True to ignore zero values'''", "\n", "if", "epoch", "is", "not", "None", "and", "step", "is", "None", ":", "\n", "            ", "step", "=", "epoch", "\n", "", "elif", "(", "epoch", "is", "None", "and", "step", "is", "None", ")", "or", "step", "is", "None", "or", "epoch", "is", "not", "None", ":", "\n", "            ", "raise", "ValueError", "(", "'JSONSaver.add_res: Must specify either step or epoch'", ")", "\n", "", "if", "step", "not", "in", "self", ".", "results", ":", "\n", "            ", "self", ".", "results", "[", "step", "]", "=", "dict", "(", ")", "\n", "", "if", "key_prefix", "!=", "''", ":", "\n", "            ", "res_", "=", "dict", "(", ")", "\n", "for", "akey", ",", "aval", "in", "res", ".", "values", "(", ")", ":", "\n", "                ", "res_", "[", "key_prefix", "+", "akey", "]", "=", "aval", "\n", "", "res", "=", "res_", "\n", "", "for", "akey", ",", "aval", "in", "res", ".", "items", "(", ")", ":", "\n", "            ", "if", "val_type", "is", "not", "None", ":", "\n", "                ", "aval", "=", "val_type", "(", "aval", ")", "\n", "", "self", ".", "results", "[", "step", "]", "[", "akey", "]", "=", "aval", "\n", "if", "isinstance", "(", "aval", ",", "list", ")", ":", "\n", "                ", "continue", "\n", "", "if", "rm_none", "and", "aval", "==", "0", ":", "\n", "                ", "continue", "\n", "", "if", "akey", "not", "in", "self", ".", "results", "[", "'best_val'", "]", "and", "akey", "in", "self", ".", "results", "[", "self", ".", "best_key_str", "]", ":", "# works when best_val has been removed but best_step exists", "\n", "                ", "self", ".", "results", "[", "'best_val'", "]", "[", "akey", "]", "=", "self", ".", "results", "[", "self", ".", "results", "[", "self", ".", "best_key_str", "]", "[", "akey", "]", "]", "[", "akey", "]", "\n", "", "if", "(", "akey", "not", "in", "self", ".", "results", "[", "self", ".", "best_key_str", "]", "\n", "or", "akey", "not", "in", "self", ".", "results", "[", "'best_val'", "]", "\n", "or", "(", "self", ".", "results", "[", "'best_val'", "]", "[", "akey", "]", ">", "aval", "and", "minimize", ")", "\n", "or", "(", "self", ".", "results", "[", "'best_val'", "]", "[", "akey", "]", "<", "aval", "and", "not", "minimize", ")", ")", ":", "\n", "                ", "self", ".", "results", "[", "self", ".", "best_key_str", "]", "[", "akey", "]", "=", "step", "\n", "self", ".", "results", "[", "'best_val'", "]", "[", "akey", "]", "=", "aval", "\n", "", "", "if", "write", ":", "\n", "            ", "utilities", ".", "dict_to_json", "(", "self", ".", "results", ",", "self", ".", "jsonfpath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.json_saver.JSONSaver.write": [[51, 53], ["common.libs.utilities.dict_to_json"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.utilities.dict_to_json"], ["", "", "def", "write", "(", "self", ")", ":", "\n", "        ", "utilities", ".", "dict_to_json", "(", "self", ".", "results", ",", "self", ".", "jsonfpath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.json_saver.JSONSaver.get_best_steps": [[54, 56], ["set", "json_saver.JSONSaver.results[].values"], "methods", ["None"], ["", "def", "get_best_steps", "(", "self", ")", "->", "Set", "[", "int", "]", ":", "\n", "        ", "return", "set", "(", "self", ".", "results", "[", "self", ".", "best_key_str", "]", ".", "values", "(", ")", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.pt_losses.MS_SSIM_loss.__init__": [[7, 10], ["piqa.MS_SSIM.__init__"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "r\"\"\"\"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "reduction", "=", "None", ",", "**", "kwargs", ")", "\n", "", "def", "forward", "(", "self", ",", "input", ",", "target", ")", ":", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.pt_losses.MS_SSIM_loss.forward": [[10, 12], ["super().forward"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.forward"], ["", "def", "forward", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "return", "1", "-", "super", "(", ")", ".", "forward", "(", "input", ",", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.pt_losses.SSIM_loss.__init__": [[14, 17], ["piqa.SSIM.__init__"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "r\"\"\"\"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "reduction", "=", "None", ",", "**", "kwargs", ")", "\n", "", "def", "forward", "(", "self", ",", "input", ",", "target", ")", ":", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.libs.pt_losses.SSIM_loss.forward": [[17, 19], ["super().forward"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.forward"], ["", "def", "forward", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "return", "1", "-", "super", "(", ")", ".", "forward", "(", "input", ",", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.pytorch_ssim.__init__.SSIM.__init__": [[43, 49], ["super().__init__", "__init__.create_window"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.pytorch_ssim.__init__.create_window"], ["    ", "def", "__init__", "(", "self", ",", "window_size", "=", "11", ",", "size_average", "=", "True", ")", ":", "\n", "        ", "super", "(", "SSIM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "size_average", "=", "size_average", "\n", "self", ".", "channel", "=", "1", "\n", "self", ".", "window", "=", "create_window", "(", "window_size", ",", "self", ".", "channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.pytorch_ssim.__init__.SSIM.forward": [[50, 67], ["img1.size", "__init__._ssim", "__init__.create_window", "window.cuda.cuda.type_as", "__init__.SSIM.window.data.type", "img1.data.type", "window.cuda.cuda.cuda", "img1.get_device"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.pytorch_ssim.__init__._ssim", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.pytorch_ssim.__init__.create_window"], ["", "def", "forward", "(", "self", ",", "img1", ",", "img2", ")", ":", "\n", "        ", "(", "_", ",", "channel", ",", "_", ",", "_", ")", "=", "img1", ".", "size", "(", ")", "\n", "\n", "if", "channel", "==", "self", ".", "channel", "and", "self", ".", "window", ".", "data", ".", "type", "(", ")", "==", "img1", ".", "data", ".", "type", "(", ")", ":", "\n", "            ", "window", "=", "self", ".", "window", "\n", "", "else", ":", "\n", "            ", "window", "=", "create_window", "(", "self", ".", "window_size", ",", "channel", ")", "\n", "\n", "if", "img1", ".", "is_cuda", ":", "\n", "                ", "window", "=", "window", ".", "cuda", "(", "img1", ".", "get_device", "(", ")", ")", "\n", "", "window", "=", "window", ".", "type_as", "(", "img1", ")", "\n", "\n", "self", ".", "window", "=", "window", "\n", "self", ".", "channel", "=", "channel", "\n", "\n", "\n", "", "return", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "self", ".", "window_size", ",", "channel", ",", "self", ".", "size_average", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.pytorch_ssim.__init__.gaussian": [[9, 13], ["torch.exp", "torch.exp", "torch.tensor", "torch.tensor", "torch.exp.sum", "float", "range"], "function", ["None"], ["def", "gaussian", "(", "window_size", ",", "sigma", ")", ":", "\n", "    ", "gauss", "=", "torch", ".", "exp", "(", "torch", ".", "tensor", "(", "\n", "[", "-", "(", "x", "-", "window_size", "//", "2", ")", "**", "2", "/", "float", "(", "2", "*", "sigma", "**", "2", ")", "for", "x", "in", "range", "(", "window_size", ")", "]", ")", ")", "\n", "return", "gauss", "/", "gauss", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.pytorch_ssim.__init__.create_window": [[14, 19], ["gaussian().unsqueeze", "gaussian().unsqueeze.mm().float().unsqueeze().unsqueeze", "torch.autograd.Variable", "_1D_window.mm().float().unsqueeze().unsqueeze.expand().contiguous", "__init__.gaussian", "gaussian().unsqueeze.mm().float().unsqueeze", "_1D_window.mm().float().unsqueeze().unsqueeze.expand", "gaussian().unsqueeze.mm().float", "gaussian().unsqueeze.mm", "gaussian().unsqueeze.t"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.pytorch_ssim.__init__.gaussian"], ["", "def", "create_window", "(", "window_size", ",", "channel", ")", ":", "\n", "    ", "_1D_window", "=", "gaussian", "(", "window_size", ",", "1.5", ")", ".", "unsqueeze", "(", "1", ")", "\n", "_2D_window", "=", "_1D_window", ".", "mm", "(", "_1D_window", ".", "t", "(", ")", ")", ".", "float", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "window", "=", "Variable", "(", "_2D_window", ".", "expand", "(", "channel", ",", "1", ",", "window_size", ",", "window_size", ")", ".", "contiguous", "(", ")", ")", "\n", "return", "window", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.pytorch_ssim.__init__._ssim": [[20, 41], ["torch.conv2d", "torch.conv2d", "F.conv2d.pow", "F.conv2d.pow", "torch.conv2d", "torch.conv2d", "torch.conv2d", "ssim_map.mean", "ssim_map.mean().mean().mean", "ssim_map.mean().mean", "ssim_map.mean"], "function", ["None"], ["", "def", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "window_size", ",", "channel", ",", "size_average", "=", "True", ")", ":", "\n", "    ", "mu1", "=", "F", ".", "conv2d", "(", "img1", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "\n", "mu2", "=", "F", ".", "conv2d", "(", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "\n", "\n", "mu1_sq", "=", "mu1", ".", "pow", "(", "2", ")", "\n", "mu2_sq", "=", "mu2", ".", "pow", "(", "2", ")", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "\n", "sigma1_sq", "=", "F", ".", "conv2d", "(", "img1", "*", "img1", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu1_sq", "\n", "sigma2_sq", "=", "F", ".", "conv2d", "(", "img2", "*", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu2_sq", "\n", "sigma12", "=", "F", ".", "conv2d", "(", "img1", "*", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu1_mu2", "\n", "\n", "C1", "=", "0.01", "**", "2", "\n", "C2", "=", "0.03", "**", "2", "\n", "\n", "ssim_map", "=", "(", "(", "2", "*", "mu1_mu2", "+", "C1", ")", "*", "(", "2", "*", "sigma12", "+", "C2", ")", ")", "/", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "C1", ")", "*", "(", "sigma1_sq", "+", "sigma2_sq", "+", "C2", ")", ")", "\n", "\n", "if", "size_average", ":", "\n", "        ", "return", "ssim_map", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "ssim_map", ".", "mean", "(", "1", ")", ".", "mean", "(", "1", ")", ".", "mean", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.pytorch_ssim.__init__.ssim": [[68, 77], ["img1.size", "__init__.create_window", "window.cuda.type_as", "__init__._ssim", "window.cuda.cuda", "img1.get_device"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.pytorch_ssim.__init__.create_window", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.pytorch_ssim.__init__._ssim"], ["", "", "def", "ssim", "(", "img1", ",", "img2", ",", "window_size", "=", "11", ",", "size_average", "=", "True", ")", ":", "\n", "    ", "(", "_", ",", "channel", ",", "_", ",", "_", ")", "=", "img1", ".", "size", "(", ")", "\n", "window", "=", "create_window", "(", "window_size", ",", "channel", ")", "\n", "\n", "if", "img1", ".", "is_cuda", ":", "\n", "        ", "window", "=", "window", ".", "cuda", "(", "img1", ".", "get_device", "(", ")", ")", "\n", "", "window", "=", "window", ".", "type_as", "(", "img1", ")", "\n", "\n", "return", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "window_size", ",", "channel", ",", "size_average", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.DnCNN.__init__": [[17, 41], ["torch.Module.__init__", "int", "layers.append", "range", "layers.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "nnModules.DnCNN._initialize_weights", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "layers.append", "layers.append", "layers.append", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.RReLU", "torch.RReLU", "torch.RReLU", "torch.RReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "layers.append", "layers.append", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.RReLU", "torch.RReLU", "torch.RReLU", "torch.RReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.DnCNN._initialize_weights"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.DnCNN.forward": [[42, 50], ["nnModules.DnCNN.dncnn", "nnModules.DnCNN.dncnn"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.DnCNN._initialize_weights": [[51, 61], ["nnModules.DnCNN.modules", "isinstance", "torch.orthogonal_", "torch.orthogonal_", "torch.orthogonal_", "torch.orthogonal_", "print", "isinstance", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.RedCNN.__init__": [[63, 74], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.RReLU", "torch.RReLU", "torch.RReLU", "torch.RReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.RedCNN.forward": [[76, 99], ["nnModules.RedCNN.relu", "nnModules.RedCNN.relu", "residuals.append", "range", "nnModules.RedCNN.relu", "nnModules.RedCNN.relu", "nnModules.RedCNN.relu", "range", "nnModules.RedCNN.relu", "nnModules.RedCNN.relu", "nnModules.RedCNN.conv_first", "nnModules.RedCNN.conv", "nnModules.RedCNN.clone", "int", "nnModules.RedCNN.relu", "nnModules.RedCNN.relu", "residuals.append", "nnModules.RedCNN.conv", "nnModules.RedCNN.deconv", "int", "nnModules.RedCNN.relu", "nnModules.RedCNN.relu", "nnModules.RedCNN.relu", "nnModules.RedCNN.deconv", "nnModules.RedCNN.deconv_last", "nnModules.RedCNN.conv", "nnModules.RedCNN.conv", "nnModules.RedCNN.clone", "residuals.pop", "nnModules.RedCNN.deconv", "nnModules.RedCNN.deconv", "math.floor", "math.floor", "residuals.pop"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.double_conv.__init__": [[106, 115], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.double_conv.forward": [[117, 120], ["nnModules.double_conv.conv"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.inconv.__init__": [[123, 126], ["torch.Module.__init__", "nnModules.double_conv"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.inconv.forward": [[127, 130], ["nnModules.inconv.conv"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.down.__init__": [[133, 138], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "nnModules.double_conv"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.down.forward": [[140, 143], ["nnModules.down.mpconv"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.up.__init__": [[146, 151], ["torch.Module.__init__", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "nnModules.double_conv"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.up.forward": [[152, 169], ["nnModules.up.up", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "nnModules.up.conv", "x2.size", "torch.pad.size", "x2.size", "torch.pad.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.outconv.__init__": [[172, 175], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.outconv.forward": [[176, 179], ["nnModules.outconv.conv"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__": [[181, 194], ["torch.Module.__init__", "nnModules.inconv", "nnModules.down", "nnModules.down", "nnModules.down", "nnModules.down", "nnModules.up", "nnModules.up", "nnModules.up", "nnModules.up", "nnModules.outconv"], "methods", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.__init__"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.UNet.forward": [[195, 211], ["nnModules.UNet.inc", "nnModules.UNet.down1", "nnModules.UNet.down2", "nnModules.UNet.down3", "nnModules.UNet.down4", "nnModules.UNet.up1", "nnModules.UNet.up2", "nnModules.UNet.up3", "nnModules.UNet.up4", "nnModules.UNet.outc", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "hasattr", "hasattr", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.nnModules.init_weights": [[11, 15], ["type", "torch.init.xavier_uniform", "m.bias.data.fill_"], "function", ["None"], []], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.run_nn.find_experiment": [[86, 93], ["os.listdir"], "function", ["None"], ["", "def", "find_experiment", "(", ")", ":", "\n", "    ", "exp", "=", "None", "\n", "bname", "=", "(", "'_'", ".", "join", "(", "sys", ".", "argv", ")", ".", "replace", "(", "'/'", ",", "'-'", ")", ")", ".", "replace", "(", "'_--resume'", ",", "''", ")", "\n", "for", "adir", "in", "os", ".", "listdir", "(", "args", ".", "models_dir", ")", ":", "\n", "        ", "if", "adir", "[", "17", ":", "]", "==", "bname", ":", "\n", "            ", "exp", "=", "adir", "\n", "", "", "return", "exp", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.run_nn.findLastCheckpoint": [[109, 120], ["glob.glob", "os.path.join", "max", "re.findall", "epochs_exist.append", "int"], "function", ["None"], ["def", "findLastCheckpoint", "(", "save_dir", ")", ":", "\n", "    ", "file_list", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'model_*.pth'", ")", ")", "\n", "if", "file_list", ":", "\n", "        ", "epochs_exist", "=", "[", "]", "\n", "for", "file_", "in", "file_list", ":", "\n", "            ", "result", "=", "re", ".", "findall", "(", "\".*model_(.*).pth.*\"", ",", "file_", ")", "\n", "epochs_exist", ".", "append", "(", "int", "(", "result", "[", "0", "]", ")", ")", "\n", "", "initial_epoch", "=", "max", "(", "epochs_exist", ")", "\n", "", "else", ":", "\n", "        ", "initial_epoch", "=", "0", "\n", "", "return", "initial_epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.run_nn.log": [[122, 124], ["print", "datetime.datetime.now().strftime", "datetime.datetime.now"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["", "def", "log", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "print", "(", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%Y-%m-%d %H:%M:%S:\"", ")", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.tabler.tablemaker": [[8, 51], ["dict", "[].keys", "json.load.keys", "ndata[].keys", "dict.keys", "print", "print", "open", "json.load", "dict", "isovals.append", "len", "[].keys", "images.append", "[].keys", "str", "nisoval.split", "ndata[].keys", "[].append", "len", "str", "list", "statistics.mean", "list", "dict.keys", "json.load.keys", "list", "dict.keys"], "function", ["home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print", "home.repos.pwc.inspect_result.trougnouf_nind-denoise.nind_denoise.nn_common.Printer.print"], ["def", "tablemaker", "(", "datafn", "=", "'res.json'", ",", "blacklistimages", "=", "None", ",", "whitelistimages", "=", "None", ")", ":", "\n", "    ", "with", "open", "(", "datafn", ")", "as", "f", ":", "\n", "        ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "", "ndata", "=", "dict", "(", ")", "\n", "images", "=", "[", "]", "\n", "for", "image", "in", "data", "[", "list", "(", "data", ".", "keys", "(", ")", ")", "[", "0", "]", "]", "[", "'results'", "]", ".", "keys", "(", ")", ":", "\n", "        ", "if", "blacklistimages", "is", "None", "or", "(", "blacklistimages", "is", "not", "None", "and", "blacklistimages", "not", "in", "image", ")", ":", "\n", "            ", "if", "whitelistimages", "is", "None", "or", "whitelistimages", "in", "image", ":", "\n", "                ", "images", ".", "append", "(", "image", ")", "\n", "", "", "", "for", "experiment", "in", "data", ".", "keys", "(", ")", ":", "\n", "        ", "ndata", "[", "experiment", "]", "=", "dict", "(", ")", "\n", "for", "image", "in", "images", ":", "\n", "            ", "if", "image", "not", "in", "data", "[", "experiment", "]", "[", "'results'", "]", ".", "keys", "(", ")", ":", "\n", "#data.remove(experiment)", "\n", "                ", "continue", "\n", "", "for", "isoval", "in", "data", "[", "experiment", "]", "[", "'results'", "]", "[", "image", "]", ".", "keys", "(", ")", ":", "\n", "                ", "nisoval", "=", "'High ISO'", "if", "'H'", "in", "isoval", "else", "isoval", "\n", "nisoval", "=", "nisoval", ".", "split", "(", "'-'", ")", "[", "0", "]", "\n", "if", "nisoval", "not", "in", "ndata", "[", "experiment", "]", ".", "keys", "(", ")", ":", "\n", "                    ", "ndata", "[", "experiment", "]", "[", "nisoval", "]", "=", "{", "'ssim'", ":", "[", "]", ",", "'mse'", ":", "[", "]", "}", "\n", "", "for", "metric", "in", "[", "'ssim'", ",", "'mse'", "]", ":", "\n", "                    ", "ndata", "[", "experiment", "]", "[", "nisoval", "]", "[", "metric", "]", ".", "append", "(", "data", "[", "experiment", "]", "[", "'results'", "]", "[", "image", "]", "[", "isoval", "]", "[", "metric", "]", ")", "\n", "", "", "", "", "isovals", "=", "[", "]", "\n", "tbl", "=", "'ISO value,'", "\n", "for", "isoval", "in", "ndata", "[", "list", "(", "ndata", ".", "keys", "(", ")", ")", "[", "0", "]", "]", ".", "keys", "(", ")", ":", "\n", "            ", "tbl", "+=", "isoval", "+", "','", "\n", "isovals", ".", "append", "(", "isoval", ")", "\n", "", "tbl", "=", "tbl", "[", ":", "-", "1", "]", "+", "'\\n'", "\n", "if", "len", "(", "images", ")", ">", "1", ":", "\n", "        ", "tbl", "+=", "'# images,'", "\n", "for", "isoval", "in", "isovals", ":", "\n", "                ", "tbl", "+=", "str", "(", "len", "(", "ndata", "[", "list", "(", "ndata", ".", "keys", "(", ")", ")", "[", "0", "]", "]", "[", "isoval", "]", "[", "'ssim'", "]", ")", ")", "+", "','", "\n", "", "tbl", "=", "tbl", "[", ":", "-", "1", "]", "+", "'\\n'", "\n", "", "for", "experiment", "in", "ndata", ".", "keys", "(", ")", ":", "\n", "        ", "tbl", "+=", "experiment", "+", "','", "\n", "for", "isoval", "in", "isovals", ":", "\n", "            ", "try", ":", "\n", "                ", "tbl", "+=", "str", "(", "statistics", ".", "mean", "(", "ndata", "[", "experiment", "]", "[", "isoval", "]", "[", "'ssim'", "]", ")", ")", "+", "','", "\n", "", "except", "KeyError", ":", "\n", "                ", "tbl", "+=", "','", "\n", "", "", "tbl", "=", "tbl", "[", ":", "-", "1", "]", "+", "'\\n'", "\n", "", "print", "(", "tbl", ")", "\n", "print", "(", "'\\n'", ")", "\n", "", "tablemaker", "(", "'res.json'", ",", "blacklistimages", "=", "'C500D'", ")", "\n"]], "home.repos.pwc.inspect_result.trougnouf_nind-denoise.deprecated.train_utils.confident_mse_loss": [[3, 9], ["torch.abs", "res.mean"], "function", ["None"], ["def", "confident_mse_loss", "(", "answer", ",", "target", ")", ":", "\n", "    ", "not_confident_i", "=", "(", "(", "answer", ">", "0.45", ")", "&", "(", "answer", "<", "0.55", ")", ")", ".", "to", "(", "torch", ".", "float32", ")", "\n", "confident_i", "=", "1", "-", "not_confident_i", "\n", "dif", "=", "torch", ".", "abs", "(", "answer", "-", "target", ")", "\n", "res", "=", "confident_i", "*", "dif", "**", "2", "+", "not_confident_i", "*", "dif", "\n", "return", "res", ".", "mean", "(", ")", "\n", "", ""]]}