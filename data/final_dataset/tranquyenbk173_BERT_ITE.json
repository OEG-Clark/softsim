{"home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.mf.MF.__init__": [[21, 36], ["os.path.isdir", "os.makedirs", "os.path.isdir", "os.makedirs", "log_path.split"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root_path", ",", "params", ",", "log_path", ",", "file_model", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "        ", "self", ".", "root_path", "=", "root_path", "\n", "self", ".", "params", "=", "params", "\n", "self", ".", "log_path", "=", "log_path", "\n", "log_directory", "=", "'/'", ".", "join", "(", "log_path", ".", "split", "(", "'/'", ")", "[", ":", "-", "1", "]", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "log_directory", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "log_directory", ")", "\n", "", "self", ".", "log_dir", "=", "log_directory", "\n", "self", ".", "result_string", "=", "''", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "file_model", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "file_model", ")", "\n", "", "self", ".", "file_model", "=", "file_model", "\n", "self", ".", "item_repr", "=", "None", "\n", "self", ".", "save_log", "=", "save_log", "\n", "self", ".", "save_model", "=", "save_model", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.mf.MF.run": [[37, 41], ["mf.MF.load_data", "mf.MF.create_model", "mf.MF.train"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.load_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.create_model", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.train"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "data", "=", "self", ".", "load_data", "(", ")", "\n", "model", "=", "self", ".", "create_model", "(", ")", "\n", "self", ".", "train", "(", "model", ",", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.mf.MF.show_result_keyvalue": [[42, 51], ["terminaltables.AsciiTable", "print", "str", "table_data.append"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "show_result_keyvalue", "(", "tuple_data", ")", ":", "\n", "        ", "table_data", "=", "[", "[", "'key'", ",", "'values'", "]", "]", "\n", "for", "i", "in", "tuple_data", ":", "\n", "            ", "table_data", ".", "append", "(", "[", "i", "[", "0", "]", ",", "i", "[", "1", "]", "]", ")", "\n", "", "table", "=", "AsciiTable", "(", "table_data", ")", "\n", "result", "=", "table", ".", "table", "\n", "print", "(", "result", ")", "\n", "return", "str", "(", "result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.mf.MF.load_data": [[52, 73], ["logging.info", "logging.info", "src.data_preparation.data_utils.load_representation_data", "src.data_preparation.data_utils.load_interact_matrix", "src.data_preparation.data_utils.load_test_data", "src.data_preparation.data_utils.load_negative_data", "mf.MF.show_result_keyvalue", "type", "mf.MF.params.items", "type"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_representation_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.load_interact_matrix", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.load_test_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_negative_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue"], ["", "def", "load_data", "(", "self", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'JOB INFO: '", "+", "type", "(", "self", ")", ".", "__name__", ")", "\n", "\n", "logging", ".", "info", "(", "'Loading data ...'", ")", "\n", "num_user", ",", "num_item", "=", "data_utils", ".", "load_representation_data", "(", "\n", "self", ".", "root_path", "+", "'u2index.txt'", ",", "\n", "self", ".", "root_path", "+", "'i2index.txt'", ")", "\n", "self", ".", "params", "[", "'num_user'", "]", "=", "num_user", "\n", "self", ".", "params", "[", "'num_item'", "]", "=", "num_item", "\n", "interact_mat", "=", "data_utils", ".", "load_interact_matrix", "(", "self", ".", "root_path", "+", "'scene_1/_explicit.train.rating'", ",", "num_user", ",", "\n", "num_item", ")", "\n", "# training_dict = data_utils.load_train_data(self.train_path + 'scene_1/_explicit.train.rating')", "\n", "test_data", "=", "data_utils", ".", "load_test_data", "(", "self", ".", "root_path", "+", "\"scene_1/_explicit.test.rating\"", ")", "\n", "negative_data", "=", "data_utils", ".", "load_negative_data", "(", "self", ".", "root_path", "+", "\"scene_1/_explicit.test.negative\"", ")", "\n", "self", ".", "result_string", "+=", "'jobs: '", "+", "type", "(", "self", ")", ".", "__name__", "+", "'\\n\\n'", "+", "MF", ".", "show_result_keyvalue", "(", "\n", "self", ".", "params", ".", "items", "(", ")", ")", "+", "'\\n\\n'", "\n", "return", "{", "\n", "# 'training_dict': training_dict,", "\n", "'interact_mat'", ":", "interact_mat", ",", "\n", "'test_data'", ":", "test_data", ",", "\n", "'negative_data'", ":", "negative_data", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.mf.MF.create_model": [[75, 77], ["None"], "methods", ["None"], ["", "def", "create_model", "(", "self", ")", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.mf.MF.restore_checkpoint": [[78, 87], ["tensorflow.train.get_checkpoint_state", "os.path.dirname", "print", "saver.restore", "print", "print"], "methods", ["None"], ["", "def", "restore_checkpoint", "(", "self", ",", "sess", ",", "saver", ")", ":", "\n", "\n", "        ", "ckpt", "=", "tf", ".", "train", ".", "get_checkpoint_state", "(", "os", ".", "path", ".", "dirname", "(", "self", ".", "file_model", "+", "'/checkpoint'", ")", ")", "\n", "if", "ckpt", "and", "ckpt", ".", "model_checkpoint_path", ":", "\n", "            ", "print", "(", "\"--------------> Loading checkpoint <----------------\"", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "ckpt", ".", "model_checkpoint_path", ")", "\n", "print", "(", "\"--------------> Done! <----------------\"", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"-------------> Initializing weights <---------------\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.mf.MF.train": [[88, 294], ["tensorflow.train.Saver", "tensorflow.ConfigProto", "logging.warning", "mf.MF.show_result_keyvalue", "print", "tensorflow.Session", "sess.run", "print", "result.append", "mf.MF.show_result_keyvalue", "range", "mf.MF.params.items", "terminaltables.AsciiTable", "tensorflow.global_variables_initializer", "mf.MF.evaluate_model", "temp.append", "temp.append", "table_data.items", "logging.warning", "sorted", "sess.run", "open", "log.write", "os.listdir", "print", "src.data_preparation.data_utils.get_train_instances_partition", "print", "result.append", "mf.MF.show_result_keyvalue", "model[].assign", "tensorflow.train.Saver.save", "str", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "sess.run", "mf.MF.evaluate_model", "str", "temp.append", "temp.append", "table_data.items", "mf.MF.show_result_keyvalue", "len", "sess.run", "best.items", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.evaluate_model", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.get_train_instances_partition", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.evaluate_model", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], ["", "", "def", "train", "(", "self", ",", "model", ",", "data", ")", ":", "\n", "# params and data", "\n", "        ", "epochs", "=", "self", ".", "params", "[", "'epochs'", "]", "\n", "num_negatives", "=", "self", ".", "params", "[", "'num_negatives'", "]", "\n", "batch_size", "=", "self", ".", "params", "[", "'batch_size'", "]", "\n", "verbose", "=", "self", ".", "params", "[", "'verbose'", "]", "\n", "eval_top_kS", "=", "self", ".", "params", "[", "'eval_top_k'", "]", "#list of top k to eval", "\n", "num_user", "=", "self", ".", "params", "[", "'num_user'", "]", "\n", "num_item", "=", "self", ".", "params", "[", "'num_item'", "]", "\n", "# training_dict = data['training_dict']", "\n", "interact_mat", "=", "data", "[", "'interact_mat'", "]", "\n", "test_data", "=", "data", "[", "'test_data'", "]", "\n", "negative_data", "=", "data", "[", "'negative_data'", "]", "\n", "\n", "# jobs", "\n", "\n", "optimizer", "=", "model", "[", "'optimizer'", "]", "\n", "user_index", "=", "model", "[", "'user_index'", "]", "\n", "item_index", "=", "model", "[", "'item_index'", "]", "\n", "labels_ph", "=", "model", "[", "'labels'", "]", "\n", "# ex_indicators = model['ex_indicators']", "\n", "y1_indicators", "=", "model", "[", "'y1_indicators'", "]", "\n", "y2_indicators", "=", "model", "[", "'y2_indicators'", "]", "\n", "loss", "=", "model", "[", "'loss'", "]", "\n", "loss_implicit", "=", "model", "[", "'loss_implicit'", "]", "\n", "loss_explicit", "=", "model", "[", "'loss_explicit'", "]", "\n", "train_ex_prediction", "=", "model", "[", "'train_ex_prediction'", "]", "\n", "prediction_implicit", "=", "model", "[", "'prediction_implicit'", "]", "\n", "prediction_explicit", "=", "model", "[", "'prediction_explicit'", "]", "\n", "\n", "# train", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "session_conf", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ",", "log_device_placement", "=", "False", ")", "\n", "# session_conf = tf.ConfigProto(log_device_placement=False)", "\n", "# session_conf.gpu_options.per_process_gpu_memory_fraction = 0.5", "\n", "session_conf", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "session_conf", ".", "gpu_options", ".", "visible_device_list", "=", "'0'", "\n", "\n", "with", "tf", ".", "Session", "(", "config", "=", "session_conf", ")", "as", "sess", ":", "\n", "            ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "model", "[", "'sess'", "]", "=", "sess", "\n", "\n", "# for evaluate model_ite_onehot_log_loss", "\n", "explicit_best_hit", ",", "explicit_best_ndcg", "=", "(", "{", "\n", "5", ":", "[", "0", ",", "0", "]", ",", "\n", "10", ":", "[", "0", ",", "0", "]", ",", "\n", "20", ":", "[", "0", ",", "0", "]", ",", "\n", "30", ":", "[", "0", ",", "0", "]", ",", "\n", "40", ":", "[", "0", ",", "0", "]", ",", "\n", "50", ":", "[", "0", ",", "0", "]", "}", ",", "\n", "\n", "{", "\n", "5", ":", "[", "0", ",", "0", "]", ",", "\n", "10", ":", "[", "0", ",", "0", "]", ",", "\n", "20", ":", "[", "0", ",", "0", "]", ",", "\n", "30", ":", "[", "0", ",", "0", "]", ",", "\n", "40", ":", "[", "0", ",", "0", "]", ",", "\n", "50", ":", "[", "0", ",", "0", "]", "}", ")", "\n", "\n", "\n", "explicit_hit", "=", "{", "5", ":", "0", ",", "10", ":", "0", ",", "20", ":", "0", ",", "30", ":", "0", ",", "40", ":", "0", ",", "50", ":", "0", "}", "\n", "explicit_ndcg", "=", "{", "5", ":", "0", ",", "10", ":", "0", ",", "20", ":", "0", ",", "30", ":", "0", ",", "40", ":", "0", ",", "50", ":", "0", "}", "\n", "# for logging", "\n", "result", "=", "[", "[", "\"epoch\"", ",", "\"total_loss\"", ",", "\"explicit_hit_5\"", ",", "\"explicit_ndcg_5\"", ",", "\"explicit_hit_10\"", ",", "\"explicit_ndcg_10\"", ",", "\"explicit_hit_20\"", ",", "\"explicit_ndcg_20\"", ",", "\"explicit_hit_30\"", ",", "\"explicit_ndcg_30\"", ",", "\"explicit_hit_40\"", ",", "\"explicit_ndcg_40\"", ",", "\"explicit_hit_50\"", ",", "\"explicit_ndcg_50\"", "]", "]", "\n", "print", "(", "\"testing at initialization ........\"", ")", "\n", "for", "k", "in", "eval_top_kS", ":", "\n", "              ", "explicit_hit", "[", "k", "]", ",", "explicit_ndcg", "[", "k", "]", "=", "self", ".", "evaluate_model", "(", "model", ",", "\n", "k", ",", "\n", "test_data", ",", "\n", "negative_data", ",", "\n", "prediction_explicit", ")", "\n", "if", "explicit_hit", "[", "k", "]", ">", "explicit_best_hit", "[", "k", "]", "[", "0", "]", ":", "\n", "                  ", "explicit_best_hit", "[", "k", "]", "=", "[", "explicit_hit", "[", "k", "]", ",", "'init'", "]", "# log result", "\n", "\n", "", "if", "explicit_ndcg", "[", "k", "]", ">", "explicit_best_ndcg", "[", "k", "]", "[", "0", "]", ":", "# log result", "\n", "                  ", "explicit_best_ndcg", "[", "k", "]", "=", "[", "explicit_ndcg", "[", "k", "]", ",", "'init'", "]", "\n", "\n", "# log result", "\n", "", "", "table_data", "=", "{", "\"total_loss\"", ":", "'_'", ",", "\n", "\"eval_explicit_top5\"", ":", "(", "explicit_hit", "[", "5", "]", ",", "explicit_ndcg", "[", "5", "]", ")", ",", "\n", "\"eval_explicit_top10\"", ":", "(", "explicit_hit", "[", "10", "]", ",", "explicit_ndcg", "[", "10", "]", ")", ",", "\n", "\"eval_explicit_top20\"", ":", "(", "explicit_hit", "[", "20", "]", ",", "explicit_ndcg", "[", "20", "]", ")", ",", "\n", "\"eval_explicit_top30\"", ":", "(", "explicit_hit", "[", "30", "]", ",", "explicit_ndcg", "[", "30", "]", ")", ",", "\n", "\"eval_explicit_top40\"", ":", "(", "explicit_hit", "[", "40", "]", ",", "explicit_ndcg", "[", "40", "]", ")", ",", "\n", "\"eval_explicit_top50\"", ":", "(", "explicit_hit", "[", "50", "]", ",", "explicit_ndcg", "[", "50", "]", ")", "}", "\n", "\n", "temp", "=", "[", "'init'", ",", "'_'", "]", "\n", "for", "eval_top_k", "in", "eval_top_kS", ":", "\n", "                ", "temp", ".", "append", "(", "explicit_hit", "[", "eval_top_k", "]", ")", "\n", "temp", ".", "append", "(", "explicit_ndcg", "[", "eval_top_k", "]", ")", "\n", "\n", "", "result", ".", "append", "(", "temp", ")", "\n", "MF", ".", "show_result_keyvalue", "(", "table_data", ".", "items", "(", ")", ")", "\n", "\n", "for", "e", "in", "range", "(", "epochs", ")", ":", "\n", "                ", "logging", ".", "warning", "(", "\"epochs: \"", "+", "str", "(", "e", ")", ")", "\n", "rloss", "=", "0.0", "\n", "num_batch", "=", "0", "\n", "partitioned_train_path", "=", "self", ".", "root_path", "+", "'scene_1/partitioned_train_data/'", "\n", "\n", "for", "partition_name", "in", "sorted", "(", "os", ".", "listdir", "(", "partitioned_train_path", ")", ")", ":", "\n", "                    ", "print", "(", "str", "(", "e", "+", "1", ")", "+", "':'", "+", "partition_name", ")", "\n", "partitioned_path", "=", "partitioned_train_path", "+", "partition_name", "\n", "# ----------------------- get train instances -------------------------------", "\n", "user_ids", ",", "item_ids", ",", "labels", ",", "y1_indicator", ",", "y2_indicator", "=", "data_utils", ".", "get_train_instances_partition", "(", "\n", "partitioned_path", ",", "interact_mat", ",", "num_negatives", ",", "num_user", ",", "num_item", ")", "\n", "\n", "widgets", "=", "[", "\" \"", ",", "\" \"", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "\" \"", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "for", "b", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "0", ",", "len", "(", "user_ids", ")", ",", "batch_size", ")", ")", ":", "\n", "                        ", "uids", "=", "user_ids", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "iids", "=", "item_ids", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "las", "=", "labels", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "y1_indi", "=", "y1_indicator", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "y2_indi", "=", "y2_indicator", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "\n", "sess", ".", "run", "(", "optimizer", ",", "\n", "feed_dict", "=", "{", "\n", "user_index", ":", "uids", ",", "\n", "item_index", ":", "iids", ",", "\n", "labels_ph", ":", "las", ",", "\n", "y1_indicators", ":", "y1_indi", ",", "\n", "y2_indicators", ":", "y2_indi", "\n", "}", ")", "\n", "if", "(", "e", "%", "verbose", "==", "0", ")", ":", "\n", "                            ", "rloss_tmp", "=", "sess", ".", "run", "(", "loss", ",", "\n", "feed_dict", "=", "{", "user_index", ":", "uids", ",", "\n", "item_index", ":", "iids", ",", "\n", "labels_ph", ":", "las", ",", "\n", "y1_indicators", ":", "y1_indi", ",", "\n", "y2_indicators", ":", "y2_indi", "}", ")", "\n", "rloss", "+=", "rloss_tmp", "\n", "", "num_batch", "+=", "1", "\n", "# end for", "\n", "# end for", "\n", "# Tinh loss phai cat ra batch, ko thi bi loi out of memory", "\n", "", "", "rloss", "/=", "num_batch", "\n", "\n", "if", "(", "e", "%", "verbose", "==", "0", ")", ":", "\n", "# log for explicit", "\n", "# raw_explicit_top = self.predict(model_ite_onehot_log_loss, user_ids, item_ids, prediction_explicit)", "\n", "# dict_explicit_top = {i: raw_explicit_top[i] for i in range(len(raw_explicit_top))}", "\n", "# explicit_top = {i: dict_explicit_top[i] for i in", "\n", "#                 heapq.nlargest(6, dict_explicit_top, key=dict_explicit_top.get)}", "\n", "# explicit_top = {}", "\n", "\n", "                    ", "print", "(", "\"testing........\"", ")", "\n", "for", "k", "in", "eval_top_kS", ":", "\n", "                      ", "explicit_hit", "[", "k", "]", ",", "explicit_ndcg", "[", "k", "]", "=", "self", ".", "evaluate_model", "(", "model", ",", "\n", "k", ",", "\n", "test_data", ",", "\n", "negative_data", ",", "\n", "prediction_explicit", ")", "\n", "if", "explicit_hit", "[", "k", "]", ">", "explicit_best_hit", "[", "k", "]", "[", "0", "]", ":", "\n", "                          ", "explicit_best_hit", "[", "k", "]", "=", "[", "explicit_hit", "[", "k", "]", ",", "str", "(", "e", ")", "]", "# log result", "\n", "\n", "", "if", "explicit_ndcg", "[", "k", "]", ">", "explicit_best_ndcg", "[", "k", "]", "[", "0", "]", ":", "# log result", "\n", "                          ", "explicit_best_ndcg", "[", "k", "]", "=", "[", "explicit_ndcg", "[", "k", "]", ",", "str", "(", "e", ")", "]", "\n", "\n", "# log result", "\n", "", "", "table_data", "=", "{", "\"total_loss\"", ":", "rloss", ",", "\n", "\"eval_explicit_top5\"", ":", "(", "explicit_hit", "[", "5", "]", ",", "explicit_ndcg", "[", "5", "]", ")", ",", "\n", "\"eval_explicit_top10\"", ":", "(", "explicit_hit", "[", "10", "]", ",", "explicit_ndcg", "[", "10", "]", ")", ",", "\n", "\"eval_explicit_top20\"", ":", "(", "explicit_hit", "[", "20", "]", ",", "explicit_ndcg", "[", "20", "]", ")", ",", "\n", "\"eval_explicit_top30\"", ":", "(", "explicit_hit", "[", "30", "]", ",", "explicit_ndcg", "[", "30", "]", ")", ",", "\n", "\"eval_explicit_top40\"", ":", "(", "explicit_hit", "[", "40", "]", ",", "explicit_ndcg", "[", "40", "]", ")", ",", "\n", "\"eval_explicit_top50\"", ":", "(", "explicit_hit", "[", "50", "]", ",", "explicit_ndcg", "[", "50", "]", ")", "}", "\n", "\n", "temp", "=", "[", "str", "(", "e", ")", ",", "rloss", "]", "\n", "for", "eval_top_k", "in", "eval_top_kS", ":", "\n", "                        ", "temp", ".", "append", "(", "explicit_hit", "[", "eval_top_k", "]", ")", "\n", "temp", ".", "append", "(", "explicit_ndcg", "[", "eval_top_k", "]", ")", "\n", "\n", "", "result", ".", "append", "(", "temp", ")", "\n", "\n", "MF", ".", "show_result_keyvalue", "(", "table_data", ".", "items", "(", ")", ")", "\n", "\n", "", "sess", ".", "run", "(", "model", "[", "'global_epoch'", "]", ".", "assign", "(", "e", ")", ")", "\n", "if", "self", ".", "save_model", ":", "\n", "                    ", "saver", ".", "save", "(", "sess", ",", "self", ".", "file_model", "+", "'/model'", ")", "\n", "# end of each epoch", "\n", "\n", "", "", "", "logging", ".", "warning", "(", "\"-----------------------Train done ==> RESULT --------------------------------\"", ")", "\n", "best", "=", "{", "\"explicit_best_hit_top5\"", ":", "explicit_best_hit", "[", "5", "]", ",", "#5", "\n", "\"explicit_best_ndcg_top5\"", ":", "explicit_best_ndcg", "[", "5", "]", ",", "\n", "\"explicit_best_hit_top10\"", ":", "explicit_best_hit", "[", "10", "]", ",", "#10", "\n", "\"explicit_best_ndcg_top10\"", ":", "explicit_best_ndcg", "[", "10", "]", ",", "\n", "\"explicit_best_hit_top20\"", ":", "explicit_best_hit", "[", "20", "]", ",", "\n", "\"explicit_best_ndcg_top20\"", ":", "explicit_best_ndcg", "[", "20", "]", ",", "\n", "\"explicit_best_hit_top30\"", ":", "explicit_best_hit", "[", "30", "]", ",", "\n", "\"explicit_best_ndcg_top30\"", ":", "explicit_best_ndcg", "[", "30", "]", ",", "\n", "\"explicit_best_hit_top40\"", ":", "explicit_best_hit", "[", "40", "]", ",", "\n", "\"explicit_best_ndcg_top40\"", ":", "explicit_best_ndcg", "[", "40", "]", ",", "\n", "\"explicit_best_hit_top50\"", ":", "explicit_best_hit", "[", "50", "]", ",", "\n", "\"explicit_best_ndcg_top50\"", ":", "explicit_best_ndcg", "[", "50", "]", "}", "\n", "\n", "MF", ".", "show_result_keyvalue", "(", "self", ".", "params", ".", "items", "(", ")", ")", "\n", "table_result", "=", "AsciiTable", "(", "result", ")", ".", "table", "\n", "print", "(", "table_result", ")", "\n", "if", "self", ".", "save_log", ":", "\n", "            ", "with", "open", "(", "self", ".", "log_path", ",", "\"w\"", ")", "as", "log", ":", "\n", "                ", "log", ".", "write", "(", "self", ".", "result_string", "+", "str", "(", "table_result", ")", "+", "\"\\n\\n\"", "+", "MF", ".", "show_result_keyvalue", "(", "best", ".", "items", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.mf.MF.predict": [[295, 300], ["model[].run", "len"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], ["", "", "", "def", "predict", "(", "self", ",", "model", ",", "user", ",", "items", ",", "prediction", ")", ":", "\n", "        ", "users", "=", "[", "user", "]", "*", "len", "(", "items", ")", "\n", "return", "model", "[", "'sess'", "]", ".", "run", "(", "prediction", ",", "feed_dict", "=", "{", "model", "[", "'user_index'", "]", ":", "users", ",", "model", "[", "'item_index'", "]", ":", "items", ",", "\n", "model", "[", "'user_index'", "]", ":", "users", ",", "\n", "model", "[", "'item_index'", "]", ":", "items", "\n", "}", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.mf.MF.evaluate_model": [[303, 312], ["progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "mf.MF.eval_one_rating", "hits.append", "ndcgs.append", "numpy.array().mean", "numpy.array().mean", "len", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.eval_one_rating"], ["", "def", "evaluate_model", "(", "self", ",", "model", ",", "top_k", ",", "test_data", ",", "negative_data", ",", "prediction", ")", ":", "\n", "        ", "hits", ",", "ndcgs", "=", "[", "]", ",", "[", "]", "\n", "# Single thread", "\n", "widgets", "=", "[", "progressbar", ".", "Percentage", "(", ")", ",", "' '", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "' '", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "for", "idx", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "len", "(", "test_data", ")", ")", ")", ":", "\n", "            ", "hr", ",", "ndcg", "=", "self", ".", "eval_one_rating", "(", "model", ",", "idx", ",", "top_k", ",", "test_data", ",", "negative_data", ",", "prediction", ")", "\n", "hits", ".", "append", "(", "hr", ")", "\n", "ndcgs", ".", "append", "(", "ndcg", ")", "\n", "", "return", "np", ".", "array", "(", "hits", ")", ".", "mean", "(", ")", ",", "np", ".", "array", "(", "ndcgs", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.mf.MF.eval_one_rating": [[313, 333], ["items.append", "mf.MF.predict", "range", "items.pop", "heapq.nlargest", "mf.MF.get_hit_ratio", "mf.MF.get_ndcg", "len"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.predict", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_hit_ratio", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_ndcg"], ["", "def", "eval_one_rating", "(", "self", ",", "model", ",", "idx", ",", "top_k", ",", "test_data", ",", "negative_data", ",", "prediction", ")", ":", "\n", "        ", "rating", "=", "test_data", "[", "idx", "]", "\n", "user", "=", "rating", "[", "0", "]", "\n", "gt_item", "=", "rating", "[", "1", "]", "\n", "items", "=", "negative_data", "[", "user", "]", "\n", "items", ".", "append", "(", "gt_item", ")", "\n", "# Get prediction scores", "\n", "map_item_score", "=", "{", "}", "\n", "# users = np.full(len(items), u, dtype='int64')", "\n", "predictions", "=", "self", ".", "predict", "(", "model", ",", "user", ",", "items", ",", "prediction", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "items", ")", ")", ":", "\n", "            ", "item", "=", "items", "[", "i", "]", "\n", "map_item_score", "[", "item", "]", "=", "predictions", "[", "i", "]", "\n", "", "items", ".", "pop", "(", ")", "\n", "# Evaluate top rank list", "\n", "rank_list", "=", "heapq", ".", "nlargest", "(", "top_k", ",", "map_item_score", ",", "key", "=", "map_item_score", ".", "get", ")", "\n", "\n", "hr", "=", "self", ".", "get_hit_ratio", "(", "rank_list", ",", "gt_item", ")", "\n", "ndcg", "=", "self", ".", "get_ndcg", "(", "rank_list", ",", "gt_item", ")", "\n", "return", "hr", ",", "ndcg", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.mf.MF.get_hit_ratio": [[334, 340], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_hit_ratio", "(", "rank_list", ",", "gt_item", ")", ":", "\n", "        ", "for", "item", "in", "rank_list", ":", "\n", "            ", "if", "item", "==", "gt_item", ":", "\n", "                ", "return", "1.0", "\n", "", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.mf.MF.get_ndcg": [[341, 348], ["range", "len", "math.log", "math.log"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_ndcg", "(", "rank_list", ",", "gt_item", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "rank_list", ")", ")", ":", "\n", "            ", "item", "=", "rank_list", "[", "i", "]", "\n", "if", "item", "==", "gt_item", ":", "\n", "                ", "return", "math", ".", "log", "(", "2", ")", "/", "math", ".", "log", "(", "i", "+", "2", ")", "\n", "", "", "return", "0", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.run_eta.main": [[8, 19], ["logging.info", "src.model_ite_onehot_log_loss.model.training_eta"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.training_eta"], ["def", "main", "(", ")", ":", "\n", "    ", "save_path_name", "=", "'model_ite_onehot_log_loss'", "\n", "num_negatives", "=", "4", "\n", "for", "data_name", "in", "[", "'tmall/'", "]", ":", "\n", "        ", "if", "data_name", "==", "'recobell/'", ":", "\n", "            ", "epochs", "=", "101", "\n", "", "else", ":", "\n", "            ", "epochs", "=", "201", "\n", "", "for", "size", "in", "[", "0.65", ",", "0.70", ",", "0.75", ",", "0.6", "]", ":", "\n", "            ", "logging", ".", "info", "(", "\"dataset: %s, eta: %s, save_path_name: %s\"", ",", "data_name", ",", "size", ",", "save_path_name", ")", "\n", "model", ".", "training_eta", "(", "size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_model", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.model.ImToEx.get_place_holder": [[10, 16], ["tensorflow.placeholder", "tensorflow.placeholder"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "get_place_holder", "(", ")", ":", "\n", "        ", "user_index", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'user_index'", ")", "\n", "item_index", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'item_index'", ")", "\n", "\n", "return", "user_index", ",", "item_index", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.model.ImToEx.get_embedding_weight": [[17, 44], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_embedding_weight", "(", "num_user", ",", "num_item", ",", "num_factors", ")", ":", "\n", "        ", "\"\"\"\n        num_factors: number of factors in the last hidden layer of GMF and MLP part\n        Refer to model_ite_onehot_log_loss architecture for better understand the values of num_factors_gmf and num_factors_mlp\n        \"\"\"", "\n", "\n", "num_factors_gmf", "=", "num_factors", "\n", "num_factors_mlp", "=", "2", "*", "num_factors", "\n", "\n", "gmf_embedding_weight_user_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_user", ",", "num_factors_gmf", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_gmf", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_user_onehot'", ")", "\n", "gmf_embedding_weight_item_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_item", ",", "num_factors_gmf", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_gmf", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_item_onehot'", ")", "\n", "mlp_embedding_weight_user_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_user", ",", "num_factors_mlp", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_mlp", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_user_onehot'", ")", "\n", "mlp_embedding_weight_item_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_item", ",", "num_factors_mlp", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_mlp", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_item_onehot'", ")", "\n", "\n", "return", "{", "'gmf_user_onehot'", ":", "gmf_embedding_weight_user_onehot", ",", "\n", "'gmf_item_onehot'", ":", "gmf_embedding_weight_item_onehot", ",", "\n", "'mlp_user_onehot'", ":", "mlp_embedding_weight_user_onehot", ",", "\n", "'mlp_item_onehot'", ":", "mlp_embedding_weight_item_onehot", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.model.ImToEx.create_model": [[45, 192], ["tensorflow.Variable", "tensorflow.device", "print", "model.ImToEx.get_place_holder", "model.ImToEx.get_embedding_weight", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.identity", "tensorflow.identity", "tensorflow.multiply", "tensorflow.Variable", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.identity", "tensorflow.identity", "tensorflow.concat", "tensorflow.nn.leaky_relu", "tensorflow.nn.leaky_relu", "tensorflow.concat", "tensorflow.concat", "tensorflow.squeeze", "tensorflow.nn.leaky_relu", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.add", "tensorflow.add", "tensorflow.train.AdamOptimizer().minimize", "print", "tensorflow.random_uniform", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.matmul", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.matmul", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.multiply", "tensorflow.random_uniform", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_uniform", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.multiply", "tensorflow.train.AdamOptimizer", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.square", "tensorflow.square", "tensorflow.square", "tensorflow.square"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.get_place_holder", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.get_embedding_weight", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add"], ["", "def", "create_model", "(", "self", ")", ":", "\n", "# custom params", "\n", "        ", "num_user", "=", "self", ".", "params", "[", "'num_user'", "]", "\n", "num_item", "=", "self", ".", "params", "[", "'num_item'", "]", "\n", "# user_pcat_dimension = self.params['user_pcat_dimension']", "\n", "# item_pcat_dimension = self.params['item_pcat_dimension']", "\n", "learning_rate", "=", "self", ".", "params", "[", "'learning_rate'", "]", "\n", "num_factors", "=", "self", ".", "params", "[", "'num_factors'", "]", "\n", "qlambda", "=", "self", ".", "params", "[", "'lambda'", "]", "\n", "eta_1", "=", "self", ".", "params", "[", "'eta_1'", "]", "\n", "eta_2", "=", "self", ".", "params", "[", "'eta_2'", "]", "\n", "batch_size", "=", "self", ".", "params", "[", "'batch_size'", "]", "\n", "# user_dense_shape = [300, 188]", "\n", "# item_dense_shape = [64, 188]", "\n", "global_epoch", "=", "tf", ".", "Variable", "(", "0", ",", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'global_epoch'", ")", "\n", "\n", "with", "tf", ".", "device", "(", "'/gpu:0'", ")", ":", "\n", "            ", "print", "(", "'Chay voi GPU----------------------------------------------------->>>>>>'", ")", "\n", "user_index", ",", "item_index", "=", "ImToEx", ".", "get_place_holder", "(", ")", "\n", "embedding_weight", "=", "ImToEx", ".", "get_embedding_weight", "(", "num_user", ",", "num_item", ",", "num_factors", ")", "\n", "\n", "# -------------------------------- GMF part -------------------------------", "\n", "\n", "gmf_pu_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'gmf_user_onehot'", "]", ",", "user_index", ",", "\n", "name", "=", "\"gmf_pu_onehot\"", ")", "\n", "gmf_qi_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'gmf_item_onehot'", "]", ",", "item_index", ",", "\n", "name", "=", "\"gmf_qi_onehot\"", ")", "\n", "gmf_pu", "=", "tf", ".", "identity", "(", "gmf_pu_onehot", ",", "name", "=", "'gmf_pu'", ")", "\n", "gmf_qi", "=", "tf", ".", "identity", "(", "gmf_qi_onehot", ",", "name", "=", "'gmf_qi'", ")", "\n", "\n", "gmf_phi", "=", "tf", ".", "multiply", "(", "gmf_pu", ",", "gmf_qi", ",", "name", "=", "'gmf_phi'", ")", "\n", "gmf_h", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'gmf_h'", ")", "\n", "\n", "# --------------------------------- MLP part --------------------------------", "\n", "mlp_pu_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'mlp_user_onehot'", "]", ",", "user_index", ",", "\n", "name", "=", "\"mlp_pu_onehot\"", ")", "\n", "mlp_qi_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'mlp_item_onehot'", "]", ",", "item_index", ",", "\n", "name", "=", "\"mlp_qi_onehot\"", ")", "\n", "\n", "mlp_pu", "=", "tf", ".", "identity", "(", "mlp_pu_onehot", ",", "name", "=", "'mlp_pu'", ")", "\n", "mlp_qi", "=", "tf", ".", "identity", "(", "mlp_qi_onehot", ",", "name", "=", "'mlp_qi'", ")", "\n", "\n", "mlp_weights", "=", "{", "\n", "'w1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "4", "*", "num_factors", ",", "2", "*", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "1", "/", "num_factors", ")", ",", "\n", "name", "=", "'mlp_weight1'", ")", ",", "\n", "'w2'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", ",", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors", ")", ",", "\n", "name", "=", "'mlp_weight2'", ")", ",", "\n", "'h'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'mlp_h'", ")", "\n", "}", "\n", "mlp_biases", "=", "{", "\n", "'b1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", "]", ")", ",", "name", "=", "'mlp_bias1'", ")", ",", "\n", "'b2'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "num_factors", "]", ")", ",", "name", "=", "'mlp_bias2'", ")", "\n", "}", "\n", "\n", "mlp_phi_1", "=", "tf", ".", "concat", "(", "[", "mlp_pu", ",", "mlp_qi", "]", ",", "axis", "=", "-", "1", ",", "name", "=", "'mlp_phi1'", ")", "\n", "mlp_phi_2", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "mlp_phi_1", ",", "mlp_weights", "[", "'w1'", "]", ")", ",", "mlp_biases", "[", "'b1'", "]", ")", ",", "\n", "name", "=", "'mlp_phi2'", ")", "\n", "mlp_phi_3", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "mlp_phi_2", ",", "mlp_weights", "[", "'w2'", "]", ")", ",", "mlp_biases", "[", "'b2'", "]", ")", ",", "\n", "name", "=", "'mlp_phi3'", ")", "\n", "\n", "# --------------------------------- implicit part ------------------------------------", "\n", "# 1 x 2*num_factors", "\n", "im_phi", "=", "tf", ".", "concat", "(", "[", "gmf_phi", ",", "mlp_phi_3", "]", ",", "axis", "=", "1", ",", "name", "=", "'im_phi'", ")", "\n", "# 2*num_factors x 1", "\n", "h_implicit", "=", "tf", ".", "concat", "(", "[", "gmf_h", ",", "mlp_weights", "[", "'h'", "]", "]", ",", "axis", "=", "0", ",", "name", "=", "'h_implicit'", ")", "\n", "# tf.squeeze() 1 x 1", "\n", "im_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "matmul", "(", "im_phi", ",", "h_implicit", ")", ",", "name", "=", "'prediction_implicit'", ")", "\n", "\n", "# --------------------------------- explicit part ------------------------------------", "\n", "ex_weights", "=", "{", "\n", "'w1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", ",", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors", ")", ",", "\n", "name", "=", "'ex_weight1'", ")", ",", "\n", "'h'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'h_explicit'", ")", "\n", "}", "\n", "ex_biases", "=", "{", "\n", "'b1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "num_factors", "]", ")", ",", "name", "=", "'ex_bias1'", ")", ",", "\n", "}", "\n", "# 1 x num_factors", "\n", "ex_phi", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "im_phi", ",", "ex_weights", "[", "'w1'", "]", ")", ",", "ex_biases", "[", "'b1'", "]", ")", ",", "name", "=", "'ex_phi'", ")", "\n", "train_ex_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "matmul", "(", "ex_phi", ",", "ex_weights", "[", "'h'", "]", ")", ",", "name", "=", "'train_prediction_explicit'", ")", "\n", "\n", "# ex_prediction = tf.squeeze(tf.multiply(im_prediction, train_ex_prediction), name='prediction_explicit')", "\n", "ex_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "multiply", "(", "tf", ".", "nn", ".", "sigmoid", "(", "im_prediction", ")", ",", "tf", ".", "nn", ".", "sigmoid", "(", "train_ex_prediction", ")", ")", ",", "\n", "name", "=", "'prediction_explicit'", ")", "\n", "# ex_prediction = tf.squeeze(tf.nn.sigmoid(train_ex_prediction), name='prediction_explicit')", "\n", "'''\n            # ---------------------------------- square loss ---------------------------------------------\n            labels = tf.placeholder(tf.float32, shape=[None], name='labels')\n            y1_indicators = tf.placeholder(tf.float32, shape=[None], name='y1_indicators')\n            y2_indicators = tf.placeholder(tf.float32, shape=[None], name='y2_indicators')\n\n            loss_implicit_list = tf.square(tf.subtract(labels, im_prediction), name='y1_loss_list')\n            loss_implicit = tf.reduce_mean(tf.multiply(y1_indicators, loss_implicit_list), name='y1_loss')\n            loss_explicit_list = tf.square(tf.subtract(labels, train_ex_prediction), name='y2_loss_list')\n            loss_explicit = tf.reduce_mean(tf.multiply(y2_indicators, loss_explicit_list), name='y2_loss')\n\n            regularizer = tf.add(tf.add(tf.reduce_mean(tf.square(gmf_pu)), tf.reduce_mean(tf.square(gmf_qi))),\n                                 tf.add(tf.reduce_mean(tf.square(mlp_pu)), tf.reduce_mean(tf.square(mlp_qi))),\n                                 name='regularizer')\n\n            loss = tf.add(tf.add(tf.multiply(eta_1, loss_implicit), loss_explicit), tf.multiply(qlambda, regularizer),\n                          name='loss')\n            '''", "\n", "# ---------------------------------- log loss ---------------------------------------------", "\n", "labels", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'labels'", ")", "\n", "y1_indicators", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'y1_indicators'", ")", "\n", "y2_indicators", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'y2_indicators'", ")", "\n", "\n", "loss_implicit_list", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "labels", ",", "\n", "logits", "=", "im_prediction", ",", "\n", "name", "=", "'y1_loss_list'", ")", "\n", "loss_implicit", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "multiply", "(", "y1_indicators", ",", "loss_implicit_list", ")", ",", "name", "=", "'y1_loss'", ")", "\n", "loss_explicit_list", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "labels", ",", "\n", "logits", "=", "train_ex_prediction", ",", "\n", "name", "=", "'y2_loss_list'", ")", "\n", "loss_explicit", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "multiply", "(", "y2_indicators", ",", "loss_explicit_list", ")", ",", "name", "=", "'y2_loss'", ")", "\n", "\n", "regularizer", "=", "tf", ".", "add", "(", "tf", ".", "add", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "gmf_pu", ")", ")", ",", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "gmf_qi", ")", ")", ")", ",", "\n", "tf", ".", "add", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "mlp_pu", ")", ")", ",", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "mlp_qi", ")", ")", ")", ",", "\n", "name", "=", "'regularizer'", ")", "\n", "\n", "loss", "=", "tf", ".", "add", "(", "tf", ".", "add", "(", "tf", ".", "multiply", "(", "eta_1", ",", "loss_implicit", ")", ",", "loss_explicit", ")", ",", "tf", ".", "multiply", "(", "qlambda", ",", "regularizer", ")", ",", "\n", "name", "=", "'loss'", ")", "\n", "\n", "# optimize", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "learning_rate", ")", ".", "minimize", "(", "loss", ",", "name", "=", "'optimize'", ")", "\n", "\n", "# optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(loss_implicit, name='optimize')", "\n", "# optimizer = tf.train.MomentumOptimizer(0.0001, 0.8).minimize(loss, name='optimize')", "\n", "\n", "print", "(", "'--------------->>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<------------------------'", ")", "\n", "return", "{", "\n", "'user_index'", ":", "user_index", ",", "\n", "'item_index'", ":", "item_index", ",", "\n", "'optimizer'", ":", "optimizer", ",", "\n", "'labels'", ":", "labels", ",", "\n", "# 'ex_indicators': ex_indicators,", "\n", "'y1_indicators'", ":", "y1_indicators", ",", "\n", "'y2_indicators'", ":", "y2_indicators", ",", "\n", "'loss'", ":", "loss", ",", "\n", "'loss_implicit'", ":", "loss_implicit", ",", "\n", "'loss_explicit'", ":", "loss_explicit", ",", "\n", "'train_ex_prediction'", ":", "train_ex_prediction", ",", "\n", "'prediction_explicit'", ":", "ex_prediction", ",", "\n", "'prediction_implicit'", ":", "im_prediction", ",", "\n", "'h_implicit'", ":", "h_implicit", ",", "\n", "'global_epoch'", ":", "global_epoch", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.model.training_batch_size": [[197, 222], ["model.ImToEx", "ImToEx.run"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], ["", "", "", "def", "training_batch_size", "(", "batch_size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "num_factor", "=", "8", "\n", "eta", "=", "0.5", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/batch_size/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/batch_size/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "0.001", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.model.training_num_factors": [[224, 249], ["model.ImToEx", "ImToEx.run"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], ["", "def", "training_num_factors", "(", "num_factor", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "batch_size", "=", "2048", "\n", "eta", "=", "0.1", "\n", "lr", "=", "0.005", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/num_factor/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "lr", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/num_factor/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "lr", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "lr", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.model.training_eta": [[251, 275], ["model.ImToEx", "ImToEx.run"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], ["", "def", "training_eta", "(", "eta", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "num_factor", "=", "8", "\n", "batch_size", "=", "512", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/eta/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "num_negatives", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/eta/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "0.001", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.run_batch_size.main": [[8, 19], ["logging.info", "src.model_ite_onehot_log_loss.model.training_batch_size"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.training_batch_size"], ["def", "main", "(", ")", ":", "\n", "    ", "save_path_name", "=", "'model_ite_onehot_log_loss'", "\n", "num_negatives", "=", "4", "\n", "for", "data_name", "in", "[", "'ml-1m/'", "]", ":", "\n", "        ", "if", "data_name", "==", "'recobell/'", ":", "\n", "            ", "epochs", "=", "101", "\n", "", "else", ":", "\n", "            ", "epochs", "=", "151", "\n", "", "for", "size", "in", "[", "512", ",", "1024", ",", "2048", ",", "4096", "]", ":", "\n", "            ", "logging", ".", "info", "(", "\"dataset: %s, batch_size: %s, save_path_name: %s\"", ",", "data_name", ",", "size", ",", "save_path_name", ")", "\n", "model", ".", "training_batch_size", "(", "size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_model", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.run_num_factor.test": [[8, 18], ["logging.info", "src.model_ite_onehot_log_loss.model.training_num_factors"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.training_num_factors"], ["def", "test", "(", ")", ":", "\n", "    ", "save_path_name", "=", "'one_hot'", "\n", "for", "data_name", "in", "[", "'retail_rocket/'", "]", ":", "\n", "        ", "if", "data_name", "==", "'recobell/'", ":", "\n", "            ", "epochs", "=", "101", "\n", "", "else", ":", "\n", "            ", "epochs", "=", "200", "\n", "", "for", "size", "in", "[", "8", ",", "16", ",", "32", ",", "64", "]", ":", "\n", "            ", "logging", ".", "info", "(", "\"dataset: %s, num_factor: %s, save_path_name: %s\"", ",", "data_name", ",", "size", ",", "save_path_name", ")", "\n", "model", ".", "training_num_factors", "(", "size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "save_model", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_onehot_log_loss.run_num_factor.main": [[20, 31], ["logging.info", "src.model_ite_onehot_log_loss.model.training_num_factors"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.training_num_factors"], ["", "", "", "def", "main", "(", ")", ":", "\n", "    ", "save_path_name", "=", "'model_ite_onehot_log_loss'", "\n", "num_negatives", "=", "4", "\n", "for", "data_name", "in", "[", "'tmall/'", "]", ":", "\n", "        ", "if", "data_name", "==", "'recobell/'", ":", "\n", "            ", "epochs", "=", "101", "\n", "", "else", ":", "\n", "            ", "epochs", "=", "201", "\n", "", "for", "size", "in", "[", "8", ",", "16", ",", "32", ",", "64", "]", ":", "\n", "            ", "logging", ".", "info", "(", "\"dataset: %s, num_factor: %s, save_path_name: %s\"", ",", "data_name", ",", "size", ",", "save_path_name", ")", "\n", "model", ".", "training_num_factors", "(", "size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_model", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.mf.MF.__init__": [[21, 37], ["os.path.isdir", "os.makedirs", "os.path.isdir", "os.makedirs", "log_path.split"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root_path", ",", "params", ",", "log_path", ",", "file_model", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "        ", "self", ".", "root_path", "=", "root_path", "\n", "self", ".", "params", "=", "params", "\n", "self", ".", "log_path", "=", "log_path", "\n", "log_directory", "=", "'/'", ".", "join", "(", "log_path", ".", "split", "(", "'/'", ")", "[", ":", "-", "1", "]", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "log_directory", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "log_directory", ")", "\n", "", "self", ".", "log_dir", "=", "log_directory", "\n", "self", ".", "result_string", "=", "''", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "file_model", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "file_model", ")", "\n", "", "self", ".", "file_model", "=", "file_model", "\n", "self", ".", "item_repr", "=", "None", "\n", "self", ".", "save_log", "=", "save_log", "\n", "self", ".", "save_model", "=", "save_model", "\n", "\n", "", "def", "run", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.mf.MF.run": [[38, 42], ["mf.MF.load_data", "mf.MF.create_model", "mf.MF.train"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.load_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.create_model", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.train"], ["        ", "data", "=", "self", ".", "load_data", "(", ")", "\n", "model", "=", "self", ".", "create_model", "(", ")", "\n", "self", ".", "train", "(", "model", ",", "data", ")", "\n", "\n", "", "@", "staticmethod", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.mf.MF.show_result_keyvalue": [[43, 52], ["terminaltables.AsciiTable", "print", "str", "table_data.append"], "methods", ["None"], ["def", "show_result_keyvalue", "(", "tuple_data", ")", ":", "\n", "        ", "table_data", "=", "[", "[", "'key'", ",", "'values'", "]", "]", "\n", "for", "i", "in", "tuple_data", ":", "\n", "            ", "table_data", ".", "append", "(", "[", "i", "[", "0", "]", ",", "i", "[", "1", "]", "]", ")", "\n", "", "table", "=", "AsciiTable", "(", "table_data", ")", "\n", "result", "=", "table", ".", "table", "\n", "print", "(", "result", ")", "\n", "return", "str", "(", "result", ")", "\n", "\n", "", "def", "load_data", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.mf.MF.load_data": [[53, 79], ["logging.info", "logging.info", "src.data_preparation.data_utils.load_representation_data_with_both_user_item_repr", "src.data_preparation.data_utils.load_interact_matrix", "src.data_preparation.data_utils.load_test_data", "src.data_preparation.data_utils.load_negative_data", "mf.MF.show_result_keyvalue", "type", "mf.MF.params.items", "type"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.load_representation_data_with_both_user_item_repr", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.load_interact_matrix", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.load_test_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_negative_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue"], ["        ", "logging", ".", "info", "(", "'JOB INFO: '", "+", "type", "(", "self", ")", ".", "__name__", ")", "\n", "\n", "logging", ".", "info", "(", "'Loading data ...'", ")", "\n", "num_user", ",", "num_item", "=", "data_utils", ".", "load_representation_data", "(", "\n", "self", ".", "root_path", "+", "'u2index.txt'", ",", "\n", "self", ".", "root_path", "+", "'i2index.txt'", ")", "\n", "self", ".", "params", "[", "'num_user'", "]", "=", "num_user", "\n", "self", ".", "params", "[", "'num_item'", "]", "=", "num_item", "\n", "interact_mat", "=", "data_utils", ".", "load_interact_matrix", "(", "self", ".", "root_path", "+", "'scene_1/_explicit.train.rating'", ",", "num_user", ",", "\n", "num_item", ")", "\n", "# training_dict = data_utils.load_train_data(self.train_path + 'scene_1/_explicit.train.rating')", "\n", "test_data", "=", "data_utils", ".", "load_test_data", "(", "self", ".", "root_path", "+", "\"scene_1/_explicit.test.rating\"", ")", "\n", "negative_data", "=", "data_utils", ".", "load_negative_data", "(", "self", ".", "root_path", "+", "\"scene_1/_explicit.test.negative\"", ")", "\n", "self", ".", "result_string", "+=", "'jobs: '", "+", "type", "(", "self", ")", ".", "__name__", "+", "'\\n\\n'", "+", "MF", ".", "show_result_keyvalue", "(", "\n", "self", ".", "params", ".", "items", "(", ")", ")", "+", "'\\n\\n'", "\n", "return", "{", "\n", "# 'training_dict': training_dict,", "\n", "'interact_mat'", ":", "interact_mat", ",", "\n", "'test_data'", ":", "test_data", ",", "\n", "'negative_data'", ":", "negative_data", "\n", "}", "\n", "\n", "", "def", "create_model", "(", "self", ")", ":", "\n", "        ", "return", "{", "}", "\n", "\n", "", "def", "restore_checkpoint", "(", "self", ",", "sess", ",", "saver", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.mf.MF.create_model": [[81, 83], ["None"], "methods", ["None"], ["if", "ckpt", "and", "ckpt", ".", "model_checkpoint_path", ":", "\n", "            ", "print", "(", "\"--------------> Loading checkpoint <----------------\"", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "ckpt", ".", "model_checkpoint_path", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.mf.MF.get_input": [[84, 103], ["range", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "len", "len", "len"], "methods", ["None"], ["print", "(", "\"--------------> Done! <----------------\"", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"-------------> Initializing weights <---------------\"", ")", "\n", "\n", "", "", "def", "train", "(", "self", ",", "model", ",", "data", ")", ":", "\n", "# params and data", "\n", "        ", "epochs", "=", "self", ".", "params", "[", "'epochs'", "]", "\n", "num_negatives", "=", "self", ".", "params", "[", "'num_negatives'", "]", "\n", "batch_size", "=", "self", ".", "params", "[", "'batch_size'", "]", "\n", "verbose", "=", "self", ".", "params", "[", "'verbose'", "]", "\n", "eval_top_kS", "=", "self", ".", "params", "[", "'eval_top_k'", "]", "#list of top k to eval", "\n", "num_user", "=", "self", ".", "params", "[", "'num_user'", "]", "\n", "num_item", "=", "self", ".", "params", "[", "'num_item'", "]", "\n", "# training_dict = data['training_dict']", "\n", "interact_mat", "=", "data", "[", "'interact_mat'", "]", "\n", "test_data", "=", "data", "[", "'test_data'", "]", "\n", "negative_data", "=", "data", "[", "'negative_data'", "]", "\n", "\n", "# jobs", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.mf.MF.restore_checkpoint": [[105, 114], ["tensorflow.train.get_checkpoint_state", "os.path.dirname", "print", "saver.restore", "print", "print"], "methods", ["None"], ["user_index", "=", "model", "[", "'user_index'", "]", "\n", "item_index", "=", "model", "[", "'item_index'", "]", "\n", "labels_ph", "=", "model", "[", "'labels'", "]", "\n", "# ex_indicators = model['ex_indicators']", "\n", "y1_indicators", "=", "model", "[", "'y1_indicators'", "]", "\n", "y2_indicators", "=", "model", "[", "'y2_indicators'", "]", "\n", "loss", "=", "model", "[", "'loss'", "]", "\n", "loss_implicit", "=", "model", "[", "'loss_implicit'", "]", "\n", "loss_explicit", "=", "model", "[", "'loss_explicit'", "]", "\n", "train_ex_prediction", "=", "model", "[", "'train_ex_prediction'", "]", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.mf.MF.train": [[115, 376], ["tensorflow.train.Saver", "tensorflow.ConfigProto", "logging.warning", "mf.MF.show_result_keyvalue", "print", "tensorflow.Session", "sess.run", "print", "result.append", "mf.MF.show_result_keyvalue", "range", "mf.MF.params.items", "terminaltables.AsciiTable", "tensorflow.global_variables_initializer", "mf.MF.evaluate_model", "temp.append", "temp.append", "table_data.items", "numpy.array", "numpy.array", "logging.warning", "sorted", "sess.run", "open", "log.write", "os.listdir", "print", "src.data_preparation.data_utils.get_train_instances_partition", "print", "result.append", "mf.MF.show_result_keyvalue", "model[].assign", "tensorflow.train.Saver.save", "str", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "mf.MF.get_input", "sess.run", "mf.MF.evaluate_model", "str", "temp.append", "temp.append", "table_data.items", "mf.MF.show_result_keyvalue", "len", "sess.run", "best.items", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.evaluate_model", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.get_train_instances_partition", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.get_input", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.evaluate_model", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], ["prediction_implicit", "=", "model", "[", "'prediction_implicit'", "]", "\n", "prediction_explicit", "=", "model", "[", "'prediction_explicit'", "]", "\n", "\n", "# train", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "session_conf", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ",", "log_device_placement", "=", "False", ")", "\n", "# session_conf = tf.ConfigProto(log_device_placement=False)", "\n", "# session_conf.gpu_options.per_process_gpu_memory_fraction = 0.5", "\n", "session_conf", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "session_conf", ".", "gpu_options", ".", "visible_device_list", "=", "'0'", "\n", "\n", "with", "tf", ".", "Session", "(", "config", "=", "session_conf", ")", "as", "sess", ":", "\n", "            ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "model", "[", "'sess'", "]", "=", "sess", "\n", "\n", "# for evaluate model_ite_onehot_log_loss", "\n", "explicit_best_hit", ",", "explicit_best_ndcg", "=", "(", "{", "\n", "5", ":", "[", "0", ",", "0", "]", ",", "\n", "10", ":", "[", "0", ",", "0", "]", ",", "\n", "20", ":", "[", "0", ",", "0", "]", ",", "\n", "30", ":", "[", "0", ",", "0", "]", ",", "\n", "40", ":", "[", "0", ",", "0", "]", ",", "\n", "50", ":", "[", "0", ",", "0", "]", "}", ",", "\n", "\n", "{", "\n", "5", ":", "[", "0", ",", "0", "]", ",", "\n", "10", ":", "[", "0", ",", "0", "]", ",", "\n", "20", ":", "[", "0", ",", "0", "]", ",", "\n", "30", ":", "[", "0", ",", "0", "]", ",", "\n", "40", ":", "[", "0", ",", "0", "]", ",", "\n", "50", ":", "[", "0", ",", "0", "]", "}", ")", "\n", "\n", "\n", "explicit_hit", "=", "{", "5", ":", "0", ",", "10", ":", "0", ",", "20", ":", "0", ",", "30", ":", "0", ",", "40", ":", "0", ",", "50", ":", "0", "}", "\n", "explicit_ndcg", "=", "{", "5", ":", "0", ",", "10", ":", "0", ",", "20", ":", "0", ",", "30", ":", "0", ",", "40", ":", "0", ",", "50", ":", "0", "}", "\n", "# for logging", "\n", "result", "=", "[", "[", "\"epoch\"", ",", "\"total_loss\"", ",", "\"explicit_hit_5\"", ",", "\"explicit_ndcg_5\"", ",", "\"explicit_hit_10\"", ",", "\"explicit_ndcg_10\"", ",", "\"explicit_hit_20\"", ",", "\"explicit_ndcg_20\"", ",", "\"explicit_hit_30\"", ",", "\"explicit_ndcg_30\"", ",", "\"explicit_hit_40\"", ",", "\"explicit_ndcg_40\"", ",", "\"explicit_hit_50\"", ",", "\"explicit_ndcg_50\"", "]", "]", "\n", "print", "(", "\"testing at initialization ........\"", ")", "\n", "for", "k", "in", "eval_top_kS", ":", "\n", "              ", "explicit_hit", "[", "k", "]", ",", "explicit_ndcg", "[", "k", "]", "=", "self", ".", "evaluate_model", "(", "model", ",", "\n", "k", ",", "\n", "test_data", ",", "\n", "negative_data", ",", "\n", "prediction_explicit", ")", "\n", "if", "explicit_hit", "[", "k", "]", ">", "explicit_best_hit", "[", "k", "]", "[", "0", "]", ":", "\n", "                  ", "explicit_best_hit", "[", "k", "]", "=", "[", "explicit_hit", "[", "k", "]", ",", "'init'", "]", "# log result", "\n", "\n", "", "if", "explicit_ndcg", "[", "k", "]", ">", "explicit_best_ndcg", "[", "k", "]", "[", "0", "]", ":", "# log result", "\n", "                  ", "explicit_best_ndcg", "[", "k", "]", "=", "[", "explicit_ndcg", "[", "k", "]", ",", "'init'", "]", "\n", "\n", "# log result", "\n", "", "", "table_data", "=", "{", "\"total_loss\"", ":", "'_'", ",", "\n", "\"eval_explicit_top5\"", ":", "(", "explicit_hit", "[", "5", "]", ",", "explicit_ndcg", "[", "5", "]", ")", ",", "\n", "\"eval_explicit_top10\"", ":", "(", "explicit_hit", "[", "10", "]", ",", "explicit_ndcg", "[", "10", "]", ")", ",", "\n", "\"eval_explicit_top20\"", ":", "(", "explicit_hit", "[", "20", "]", ",", "explicit_ndcg", "[", "20", "]", ")", ",", "\n", "\"eval_explicit_top30\"", ":", "(", "explicit_hit", "[", "30", "]", ",", "explicit_ndcg", "[", "30", "]", ")", ",", "\n", "\"eval_explicit_top40\"", ":", "(", "explicit_hit", "[", "40", "]", ",", "explicit_ndcg", "[", "40", "]", ")", ",", "\n", "\"eval_explicit_top50\"", ":", "(", "explicit_hit", "[", "50", "]", ",", "explicit_ndcg", "[", "50", "]", ")", "}", "\n", "\n", "temp", "=", "[", "'init'", ",", "'_'", "]", "\n", "for", "eval_top_k", "in", "eval_top_kS", ":", "\n", "                ", "temp", ".", "append", "(", "explicit_hit", "[", "eval_top_k", "]", ")", "\n", "temp", ".", "append", "(", "explicit_ndcg", "[", "eval_top_k", "]", ")", "\n", "\n", "", "result", ".", "append", "(", "temp", ")", "\n", "MF", ".", "show_result_keyvalue", "(", "table_data", ".", "items", "(", ")", ")", "\n", "\n", "for", "e", "in", "range", "(", "epochs", ")", ":", "\n", "                ", "logging", ".", "warning", "(", "\"epochs: \"", "+", "str", "(", "e", ")", ")", "\n", "rloss", "=", "0.0", "\n", "num_batch", "=", "0", "\n", "partitioned_train_path", "=", "self", ".", "root_path", "+", "'scene_1/partitioned_train_data/'", "\n", "\n", "for", "partition_name", "in", "sorted", "(", "os", ".", "listdir", "(", "partitioned_train_path", ")", ")", ":", "\n", "                    ", "print", "(", "str", "(", "e", "+", "1", ")", "+", "':'", "+", "partition_name", ")", "\n", "partitioned_path", "=", "partitioned_train_path", "+", "partition_name", "\n", "# ----------------------- get train instances -------------------------------", "\n", "user_ids", ",", "item_ids", ",", "labels", ",", "y1_indicator", ",", "y2_indicator", "=", "data_utils", ".", "get_train_instances_partition", "(", "\n", "partitioned_path", ",", "interact_mat", ",", "num_negatives", ",", "num_user", ",", "num_item", ")", "\n", "\n", "widgets", "=", "[", "\" \"", ",", "\" \"", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "\" \"", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "for", "b", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "0", ",", "len", "(", "user_ids", ")", ",", "batch_size", ")", ")", ":", "\n", "                        ", "uids", "=", "user_ids", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "iids", "=", "item_ids", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "las", "=", "labels", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "y1_indi", "=", "y1_indicator", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "y2_indi", "=", "y2_indicator", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "\n", "sess", ".", "run", "(", "optimizer", ",", "\n", "feed_dict", "=", "{", "\n", "user_index", ":", "uids", ",", "\n", "item_index", ":", "iids", ",", "\n", "labels_ph", ":", "las", ",", "\n", "y1_indicators", ":", "y1_indi", ",", "\n", "y2_indicators", ":", "y2_indi", "\n", "}", ")", "\n", "if", "(", "e", "%", "verbose", "==", "0", ")", ":", "\n", "                            ", "rloss_tmp", "=", "sess", ".", "run", "(", "loss", ",", "\n", "feed_dict", "=", "{", "user_index", ":", "uids", ",", "\n", "item_index", ":", "iids", ",", "\n", "labels_ph", ":", "las", ",", "\n", "y1_indicators", ":", "y1_indi", ",", "\n", "y2_indicators", ":", "y2_indi", "}", ")", "\n", "rloss", "+=", "rloss_tmp", "\n", "", "num_batch", "+=", "1", "\n", "# end for", "\n", "# end for", "\n", "# Tinh loss phai cat ra batch, ko thi bi loi out of memory", "\n", "", "", "rloss", "/=", "num_batch", "\n", "\n", "if", "(", "e", "%", "verbose", "==", "0", ")", ":", "\n", "# log for explicit", "\n", "# raw_explicit_top = self.predict(model_ite_onehot_log_loss, user_ids, item_ids, prediction_explicit)", "\n", "# dict_explicit_top = {i: raw_explicit_top[i] for i in range(len(raw_explicit_top))}", "\n", "# explicit_top = {i: dict_explicit_top[i] for i in", "\n", "#                 heapq.nlargest(6, dict_explicit_top, key=dict_explicit_top.get)}", "\n", "# explicit_top = {}", "\n", "\n", "                    ", "print", "(", "\"testing........\"", ")", "\n", "for", "k", "in", "eval_top_kS", ":", "\n", "                      ", "explicit_hit", "[", "k", "]", ",", "explicit_ndcg", "[", "k", "]", "=", "self", ".", "evaluate_model", "(", "model", ",", "\n", "k", ",", "\n", "test_data", ",", "\n", "negative_data", ",", "\n", "prediction_explicit", ")", "\n", "if", "explicit_hit", "[", "k", "]", ">", "explicit_best_hit", "[", "k", "]", "[", "0", "]", ":", "\n", "                          ", "explicit_best_hit", "[", "k", "]", "=", "[", "explicit_hit", "[", "k", "]", ",", "str", "(", "e", ")", "]", "# log result", "\n", "\n", "", "if", "explicit_ndcg", "[", "k", "]", ">", "explicit_best_ndcg", "[", "k", "]", "[", "0", "]", ":", "# log result", "\n", "                          ", "explicit_best_ndcg", "[", "k", "]", "=", "[", "explicit_ndcg", "[", "k", "]", ",", "str", "(", "e", ")", "]", "\n", "\n", "# log result", "\n", "", "", "table_data", "=", "{", "\"total_loss\"", ":", "rloss", ",", "\n", "\"eval_explicit_top5\"", ":", "(", "explicit_hit", "[", "5", "]", ",", "explicit_ndcg", "[", "5", "]", ")", ",", "\n", "\"eval_explicit_top10\"", ":", "(", "explicit_hit", "[", "10", "]", ",", "explicit_ndcg", "[", "10", "]", ")", ",", "\n", "\"eval_explicit_top20\"", ":", "(", "explicit_hit", "[", "20", "]", ",", "explicit_ndcg", "[", "20", "]", ")", ",", "\n", "\"eval_explicit_top30\"", ":", "(", "explicit_hit", "[", "30", "]", ",", "explicit_ndcg", "[", "30", "]", ")", ",", "\n", "\"eval_explicit_top40\"", ":", "(", "explicit_hit", "[", "40", "]", ",", "explicit_ndcg", "[", "40", "]", ")", ",", "\n", "\"eval_explicit_top50\"", ":", "(", "explicit_hit", "[", "50", "]", ",", "explicit_ndcg", "[", "50", "]", ")", "}", "\n", "\n", "temp", "=", "[", "str", "(", "e", ")", ",", "rloss", "]", "\n", "for", "eval_top_k", "in", "eval_top_kS", ":", "\n", "                        ", "temp", ".", "append", "(", "explicit_hit", "[", "eval_top_k", "]", ")", "\n", "temp", ".", "append", "(", "explicit_ndcg", "[", "eval_top_k", "]", ")", "\n", "\n", "", "result", ".", "append", "(", "temp", ")", "\n", "\n", "MF", ".", "show_result_keyvalue", "(", "table_data", ".", "items", "(", ")", ")", "\n", "\n", "", "sess", ".", "run", "(", "model", "[", "'global_epoch'", "]", ".", "assign", "(", "e", ")", ")", "\n", "if", "self", ".", "save_model", ":", "\n", "                    ", "saver", ".", "save", "(", "sess", ",", "self", ".", "file_model", "+", "'/model'", ")", "\n", "# end of each epoch", "\n", "\n", "", "", "", "logging", ".", "warning", "(", "\"-----------------------Train done ==> RESULT --------------------------------\"", ")", "\n", "best", "=", "{", "\"explicit_best_hit_top5\"", ":", "explicit_best_hit", "[", "5", "]", ",", "#5", "\n", "\"explicit_best_ndcg_top5\"", ":", "explicit_best_ndcg", "[", "5", "]", ",", "\n", "\"explicit_best_hit_top10\"", ":", "explicit_best_hit", "[", "10", "]", ",", "#10", "\n", "\"explicit_best_ndcg_top10\"", ":", "explicit_best_ndcg", "[", "10", "]", ",", "\n", "\"explicit_best_hit_top20\"", ":", "explicit_best_hit", "[", "20", "]", ",", "\n", "\"explicit_best_ndcg_top20\"", ":", "explicit_best_ndcg", "[", "20", "]", ",", "\n", "\"explicit_best_hit_top30\"", ":", "explicit_best_hit", "[", "30", "]", ",", "\n", "\"explicit_best_ndcg_top30\"", ":", "explicit_best_ndcg", "[", "30", "]", ",", "\n", "\"explicit_best_hit_top40\"", ":", "explicit_best_hit", "[", "40", "]", ",", "\n", "\"explicit_best_ndcg_top40\"", ":", "explicit_best_ndcg", "[", "40", "]", ",", "\n", "\"explicit_best_hit_top50\"", ":", "explicit_best_hit", "[", "50", "]", ",", "\n", "\"explicit_best_ndcg_top50\"", ":", "explicit_best_ndcg", "[", "50", "]", "}", "\n", "\n", "MF", ".", "show_result_keyvalue", "(", "self", ".", "params", ".", "items", "(", ")", ")", "\n", "table_result", "=", "AsciiTable", "(", "result", ")", ".", "table", "\n", "print", "(", "table_result", ")", "\n", "if", "self", ".", "save_log", ":", "\n", "            ", "with", "open", "(", "self", ".", "log_path", ",", "\"w\"", ")", "as", "log", ":", "\n", "                ", "log", ".", "write", "(", "self", ".", "result_string", "+", "str", "(", "table_result", ")", "+", "\"\\n\\n\"", "+", "MF", ".", "show_result_keyvalue", "(", "best", ".", "items", "(", ")", ")", ")", "\n", "\n", "", "", "", "def", "predict", "(", "self", ",", "model", ",", "user", ",", "items", ",", "prediction", ")", ":", "\n", "        ", "users", "=", "[", "user", "]", "*", "len", "(", "items", ")", "\n", "return", "model", "[", "'sess'", "]", ".", "run", "(", "prediction", ",", "feed_dict", "=", "{", "model", "[", "'user_index'", "]", ":", "users", ",", "model", "[", "'item_index'", "]", ":", "items", ",", "\n", "model", "[", "'user_index'", "]", ":", "users", ",", "\n", "model", "[", "'item_index'", "]", ":", "items", "\n", "}", ")", "\n", "\n", "# for evaluate model_ite_onehot_log_loss", "\n", "", "def", "evaluate_model", "(", "self", ",", "model", ",", "top_k", ",", "test_data", ",", "negative_data", ",", "prediction", ")", ":", "\n", "        ", "hits", ",", "ndcgs", "=", "[", "]", ",", "[", "]", "\n", "# Single thread", "\n", "widgets", "=", "[", "progressbar", ".", "Percentage", "(", ")", ",", "' '", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "' '", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "for", "idx", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "len", "(", "test_data", ")", ")", ")", ":", "\n", "            ", "hr", ",", "ndcg", "=", "self", ".", "eval_one_rating", "(", "model", ",", "idx", ",", "top_k", ",", "test_data", ",", "negative_data", ",", "prediction", ")", "\n", "hits", ".", "append", "(", "hr", ")", "\n", "ndcgs", ".", "append", "(", "ndcg", ")", "\n", "", "return", "np", ".", "array", "(", "hits", ")", ".", "mean", "(", ")", ",", "np", ".", "array", "(", "ndcgs", ")", ".", "mean", "(", ")", "\n", "\n", "", "def", "eval_one_rating", "(", "self", ",", "model", ",", "idx", ",", "top_k", ",", "test_data", ",", "negative_data", ",", "prediction", ")", ":", "\n", "        ", "rating", "=", "test_data", "[", "idx", "]", "\n", "user", "=", "rating", "[", "0", "]", "\n", "gt_item", "=", "rating", "[", "1", "]", "\n", "items", "=", "negative_data", "[", "user", "]", "\n", "items", ".", "append", "(", "gt_item", ")", "\n", "# Get prediction scores", "\n", "map_item_score", "=", "{", "}", "\n", "# users = np.full(len(items), u, dtype='int64')", "\n", "predictions", "=", "self", ".", "predict", "(", "model", ",", "user", ",", "items", ",", "prediction", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "items", ")", ")", ":", "\n", "            ", "item", "=", "items", "[", "i", "]", "\n", "map_item_score", "[", "item", "]", "=", "predictions", "[", "i", "]", "\n", "", "items", ".", "pop", "(", ")", "\n", "# Evaluate top rank list", "\n", "rank_list", "=", "heapq", ".", "nlargest", "(", "top_k", ",", "map_item_score", ",", "key", "=", "map_item_score", ".", "get", ")", "\n", "\n", "hr", "=", "self", ".", "get_hit_ratio", "(", "rank_list", ",", "gt_item", ")", "\n", "ndcg", "=", "self", ".", "get_ndcg", "(", "rank_list", ",", "gt_item", ")", "\n", "return", "hr", ",", "ndcg", "\n", "\n", "", "@", "staticmethod", "\n", "def", "get_hit_ratio", "(", "rank_list", ",", "gt_item", ")", ":", "\n", "        ", "for", "item", "in", "rank_list", ":", "\n", "            ", "if", "item", "==", "gt_item", ":", "\n", "                ", "return", "1.0", "\n", "", "", "return", "0", "\n", "\n", "", "@", "staticmethod", "\n", "def", "get_ndcg", "(", "rank_list", ",", "gt_item", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "rank_list", ")", ")", ":", "\n", "            ", "item", "=", "rank_list", "[", "i", "]", "\n", "if", "item", "==", "gt_item", ":", "\n", "                ", "return", "math", ".", "log", "(", "2", ")", "/", "math", ".", "log", "(", "i", "+", "2", ")", "\n", "", "", "return", "0", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.mf.MF.predict": [[377, 391], ["mf.MF.get_input", "model[].run", "len"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.get_input", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], []], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.mf.MF.evaluate_model": [[394, 403], ["progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "mf.MF.eval_one_rating", "hits.append", "ndcgs.append", "numpy.array().mean", "numpy.array().mean", "len", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.eval_one_rating"], []], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.mf.MF.eval_one_rating": [[404, 424], ["items.append", "mf.MF.predict", "range", "items.pop", "heapq.nlargest", "mf.MF.get_hit_ratio", "mf.MF.get_ndcg", "len"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.predict", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_hit_ratio", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_ndcg"], []], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.mf.MF.get_hit_ratio": [[425, 431], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.mf.MF.get_ndcg": [[432, 439], ["range", "len", "math.log", "math.log"], "methods", ["None"], []], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.run_eta.main": [[8, 19], ["logging.info", "src.model_ite_user_item_pcat.model.training_eta"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.training_eta"], ["def", "main", "(", ")", ":", "\n", "    ", "save_path_name", "=", "'model_ite_onehot_log_loss'", "\n", "num_negatives", "=", "4", "\n", "for", "data_name", "in", "[", "'tmall/'", "]", ":", "\n", "        ", "if", "data_name", "==", "'recobell/'", ":", "\n", "            ", "epochs", "=", "101", "\n", "", "else", ":", "\n", "            ", "epochs", "=", "201", "\n", "", "for", "size", "in", "[", "0.65", ",", "0.70", ",", "0.75", ",", "0.6", "]", ":", "\n", "            ", "logging", ".", "info", "(", "\"dataset: %s, eta: %s, save_path_name: %s\"", ",", "data_name", ",", "size", ",", "save_path_name", ")", "\n", "model", ".", "training_eta", "(", "size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_model", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.model.ImToEx_u_i_pcat.get_place_holder": [[14, 43], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder"], "methods", ["None"], ["\n", "return", "user_index", ",", "item_index", "\n", "\n", "", "@", "staticmethod", "\n", "def", "get_embedding_weight", "(", "num_user", ",", "num_item", ",", "num_factors", ")", ":", "\n", "        ", "\"\"\"\n        num_factors: number of factors in the last hidden layer of GMF and MLP part\n        Refer to model_ite_onehot_log_loss architecture for better understand the values of num_factors_gmf and num_factors_mlp\n        \"\"\"", "\n", "\n", "num_factors_gmf", "=", "num_factors", "\n", "num_factors_mlp", "=", "2", "*", "num_factors", "\n", "\n", "gmf_embedding_weight_user_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_user", ",", "num_factors_gmf", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_gmf", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_user_onehot'", ")", "\n", "gmf_embedding_weight_item_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_item", ",", "num_factors_gmf", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_gmf", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_item_onehot'", ")", "\n", "mlp_embedding_weight_user_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_user", ",", "num_factors_mlp", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_mlp", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_user_onehot'", ")", "\n", "mlp_embedding_weight_item_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_item", ",", "num_factors_mlp", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_mlp", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_item_onehot'", ")", "\n", "\n", "return", "{", "'gmf_user_onehot'", ":", "gmf_embedding_weight_user_onehot", ",", "\n", "'gmf_item_onehot'", ":", "gmf_embedding_weight_item_onehot", ",", "\n", "'mlp_user_onehot'", ":", "mlp_embedding_weight_user_onehot", ",", "\n", "'mlp_item_onehot'", ":", "mlp_embedding_weight_item_onehot", "}", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.model.ImToEx_u_i_pcat.get_embedding_weight": [[44, 137], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt"], "methods", ["None"], ["\n", "", "def", "create_model", "(", "self", ")", ":", "\n", "# custom params", "\n", "        ", "num_user", "=", "self", ".", "params", "[", "'num_user'", "]", "\n", "num_item", "=", "self", ".", "params", "[", "'num_item'", "]", "\n", "# user_pcat_dimension = self.params['user_pcat_dimension']", "\n", "# item_pcat_dimension = self.params['item_pcat_dimension']", "\n", "learning_rate", "=", "self", ".", "params", "[", "'learning_rate'", "]", "\n", "num_factors", "=", "self", ".", "params", "[", "'num_factors'", "]", "\n", "qlambda", "=", "self", ".", "params", "[", "'lambda'", "]", "\n", "eta_1", "=", "self", ".", "params", "[", "'eta_1'", "]", "\n", "eta_2", "=", "self", ".", "params", "[", "'eta_2'", "]", "\n", "batch_size", "=", "self", ".", "params", "[", "'batch_size'", "]", "\n", "# user_dense_shape = [300, 188]", "\n", "# item_dense_shape = [64, 188]", "\n", "global_epoch", "=", "tf", ".", "Variable", "(", "0", ",", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'global_epoch'", ")", "\n", "\n", "with", "tf", ".", "device", "(", "'/gpu:0'", ")", ":", "\n", "            ", "print", "(", "'Chay voi GPU----------------------------------------------------->>>>>>'", ")", "\n", "user_index", ",", "item_index", "=", "ImToEx", ".", "get_place_holder", "(", ")", "\n", "embedding_weight", "=", "ImToEx", ".", "get_embedding_weight", "(", "num_user", ",", "num_item", ",", "num_factors", ")", "\n", "\n", "# -------------------------------- GMF part -------------------------------", "\n", "\n", "gmf_pu_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'gmf_user_onehot'", "]", ",", "user_index", ",", "\n", "name", "=", "\"gmf_pu_onehot\"", ")", "\n", "gmf_qi_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'gmf_item_onehot'", "]", ",", "item_index", ",", "\n", "name", "=", "\"gmf_qi_onehot\"", ")", "\n", "gmf_pu", "=", "tf", ".", "identity", "(", "gmf_pu_onehot", ",", "name", "=", "'gmf_pu'", ")", "\n", "gmf_qi", "=", "tf", ".", "identity", "(", "gmf_qi_onehot", ",", "name", "=", "'gmf_qi'", ")", "\n", "\n", "gmf_phi", "=", "tf", ".", "multiply", "(", "gmf_pu", ",", "gmf_qi", ",", "name", "=", "'gmf_phi'", ")", "\n", "gmf_h", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'gmf_h'", ")", "\n", "\n", "# --------------------------------- MLP part --------------------------------", "\n", "mlp_pu_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'mlp_user_onehot'", "]", ",", "user_index", ",", "\n", "name", "=", "\"mlp_pu_onehot\"", ")", "\n", "mlp_qi_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'mlp_item_onehot'", "]", ",", "item_index", ",", "\n", "name", "=", "\"mlp_qi_onehot\"", ")", "\n", "\n", "mlp_pu", "=", "tf", ".", "identity", "(", "mlp_pu_onehot", ",", "name", "=", "'mlp_pu'", ")", "\n", "mlp_qi", "=", "tf", ".", "identity", "(", "mlp_qi_onehot", ",", "name", "=", "'mlp_qi'", ")", "\n", "\n", "mlp_weights", "=", "{", "\n", "'w1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "4", "*", "num_factors", ",", "2", "*", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "1", "/", "num_factors", ")", ",", "\n", "name", "=", "'mlp_weight1'", ")", ",", "\n", "'w2'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", ",", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors", ")", ",", "\n", "name", "=", "'mlp_weight2'", ")", ",", "\n", "'h'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'mlp_h'", ")", "\n", "}", "\n", "mlp_biases", "=", "{", "\n", "'b1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", "]", ")", ",", "name", "=", "'mlp_bias1'", ")", ",", "\n", "'b2'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "num_factors", "]", ")", ",", "name", "=", "'mlp_bias2'", ")", "\n", "}", "\n", "\n", "mlp_phi_1", "=", "tf", ".", "concat", "(", "[", "mlp_pu", ",", "mlp_qi", "]", ",", "axis", "=", "-", "1", ",", "name", "=", "'mlp_phi1'", ")", "\n", "mlp_phi_2", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "mlp_phi_1", ",", "mlp_weights", "[", "'w1'", "]", ")", ",", "mlp_biases", "[", "'b1'", "]", ")", ",", "\n", "name", "=", "'mlp_phi2'", ")", "\n", "mlp_phi_3", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "mlp_phi_2", ",", "mlp_weights", "[", "'w2'", "]", ")", ",", "mlp_biases", "[", "'b2'", "]", ")", ",", "\n", "name", "=", "'mlp_phi3'", ")", "\n", "\n", "# --------------------------------- implicit part ------------------------------------", "\n", "# 1 x 2*num_factors", "\n", "im_phi", "=", "tf", ".", "concat", "(", "[", "gmf_phi", ",", "mlp_phi_3", "]", ",", "axis", "=", "1", ",", "name", "=", "'im_phi'", ")", "\n", "# 2*num_factors x 1", "\n", "h_implicit", "=", "tf", ".", "concat", "(", "[", "gmf_h", ",", "mlp_weights", "[", "'h'", "]", "]", ",", "axis", "=", "0", ",", "name", "=", "'h_implicit'", ")", "\n", "# tf.squeeze() 1 x 1", "\n", "im_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "matmul", "(", "im_phi", ",", "h_implicit", ")", ",", "name", "=", "'prediction_implicit'", ")", "\n", "\n", "# --------------------------------- explicit part ------------------------------------", "\n", "ex_weights", "=", "{", "\n", "'w1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", ",", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors", ")", ",", "\n", "name", "=", "'ex_weight1'", ")", ",", "\n", "'h'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'h_explicit'", ")", "\n", "}", "\n", "ex_biases", "=", "{", "\n", "'b1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "num_factors", "]", ")", ",", "name", "=", "'ex_bias1'", ")", ",", "\n", "}", "\n", "# 1 x num_factors", "\n", "ex_phi", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "im_phi", ",", "ex_weights", "[", "'w1'", "]", ")", ",", "ex_biases", "[", "'b1'", "]", ")", ",", "name", "=", "'ex_phi'", ")", "\n", "train_ex_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "matmul", "(", "ex_phi", ",", "ex_weights", "[", "'h'", "]", ")", ",", "name", "=", "'train_prediction_explicit'", ")", "\n", "\n", "# ex_prediction = tf.squeeze(tf.multiply(im_prediction, train_ex_prediction), name='prediction_explicit')", "\n", "ex_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "multiply", "(", "tf", ".", "nn", ".", "sigmoid", "(", "im_prediction", ")", ",", "tf", ".", "nn", ".", "sigmoid", "(", "train_ex_prediction", ")", ")", ",", "\n", "name", "=", "'prediction_explicit'", ")", "\n", "# ex_prediction = tf.squeeze(tf.nn.sigmoid(train_ex_prediction), name='prediction_explicit')", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.model.ImToEx_u_i_pcat.embedding_lookup_sparse": [[138, 154], ["tensorflow.device", "tensorflow.nn.embedding_lookup_sparse", "tensorflow.SparseTensor", "tensorflow.SparseTensor"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.embedding_lookup_sparse"], ["\n", "# ---------------------------------- log loss ---------------------------------------------", "\n", "labels", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'labels'", ")", "\n", "y1_indicators", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'y1_indicators'", ")", "\n", "y2_indicators", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'y2_indicators'", ")", "\n", "\n", "loss_implicit_list", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "labels", ",", "\n", "logits", "=", "im_prediction", ",", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.model.ImToEx_u_i_pcat.create_model": [[156, 340], ["tensorflow.Variable", "tensorflow.device", "model.ImToEx_u_i_pcat.get_place_holder", "model.ImToEx_u_i_pcat.get_embedding_weight", "tensorflow.nn.embedding_lookup", "model.ImToEx_u_i_pcat.embedding_lookup_sparse", "tensorflow.nn.embedding_lookup", "model.ImToEx_u_i_pcat.embedding_lookup_sparse", "tensorflow.identity", "tensorflow.identity", "tensorflow.multiply", "tensorflow.Variable", "tensorflow.nn.embedding_lookup", "model.ImToEx_u_i_pcat.embedding_lookup_sparse", "tensorflow.nn.embedding_lookup", "model.ImToEx_u_i_pcat.embedding_lookup_sparse", "tensorflow.identity", "tensorflow.identity", "tensorflow.concat", "tensorflow.nn.leaky_relu", "tensorflow.nn.leaky_relu", "tensorflow.concat", "tensorflow.concat", "tensorflow.squeeze", "tensorflow.nn.leaky_relu", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.add", "tensorflow.add", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.random_uniform", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.matmul", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.matmul", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.multiply", "tensorflow.random_uniform", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_uniform", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.multiply", "tensorflow.train.AdamOptimizer", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.square", "tensorflow.square", "tensorflow.square", "tensorflow.square"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.get_place_holder", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.get_embedding_weight", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.embedding_lookup_sparse", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.embedding_lookup_sparse", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.embedding_lookup_sparse", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.embedding_lookup_sparse", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add"], ["loss_implicit", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "multiply", "(", "y1_indicators", ",", "loss_implicit_list", ")", ",", "name", "=", "'y1_loss'", ")", "\n", "loss_explicit_list", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "labels", ",", "\n", "logits", "=", "train_ex_prediction", ",", "\n", "name", "=", "'y2_loss_list'", ")", "\n", "loss_explicit", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "multiply", "(", "y2_indicators", ",", "loss_explicit_list", ")", ",", "name", "=", "'y2_loss'", ")", "\n", "\n", "regularizer", "=", "tf", ".", "add", "(", "tf", ".", "add", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "gmf_pu", ")", ")", ",", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "gmf_qi", ")", ")", ")", ",", "\n", "tf", ".", "add", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "mlp_pu", ")", ")", ",", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "mlp_qi", ")", ")", ")", ",", "\n", "name", "=", "'regularizer'", ")", "\n", "\n", "loss", "=", "tf", ".", "add", "(", "tf", ".", "add", "(", "tf", ".", "multiply", "(", "eta_1", ",", "loss_implicit", ")", ",", "loss_explicit", ")", ",", "tf", ".", "multiply", "(", "qlambda", ",", "regularizer", ")", ",", "\n", "name", "=", "'loss'", ")", "\n", "\n", "# optimize", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "learning_rate", ")", ".", "minimize", "(", "loss", ",", "name", "=", "'optimize'", ")", "\n", "\n", "# optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(loss_implicit, name='optimize')", "\n", "# optimizer = tf.train.MomentumOptimizer(0.0001, 0.8).minimize(loss, name='optimize')", "\n", "\n", "print", "(", "'--------------->>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<------------------------'", ")", "\n", "return", "{", "\n", "'user_index'", ":", "user_index", ",", "\n", "'item_index'", ":", "item_index", ",", "\n", "'optimizer'", ":", "optimizer", ",", "\n", "'labels'", ":", "labels", ",", "\n", "# 'ex_indicators': ex_indicators,", "\n", "'y1_indicators'", ":", "y1_indicators", ",", "\n", "'y2_indicators'", ":", "y2_indicators", ",", "\n", "'loss'", ":", "loss", ",", "\n", "'loss_implicit'", ":", "loss_implicit", ",", "\n", "'loss_explicit'", ":", "loss_explicit", ",", "\n", "'train_ex_prediction'", ":", "train_ex_prediction", ",", "\n", "'prediction_explicit'", ":", "ex_prediction", ",", "\n", "'prediction_implicit'", ":", "im_prediction", ",", "\n", "'h_implicit'", ":", "h_implicit", ",", "\n", "'global_epoch'", ":", "global_epoch", "\n", "}", "\n", "\n", "\n", "\n", "\n", "", "", "", "def", "training_batch_size", "(", "batch_size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "num_factor", "=", "8", "\n", "eta", "=", "0.5", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/batch_size/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/batch_size/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "0.001", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "\n", "\n", "", "def", "training_num_factors", "(", "num_factor", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "batch_size", "=", "2048", "\n", "eta", "=", "0.1", "\n", "lr", "=", "0.005", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/num_factor/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "lr", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/num_factor/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "lr", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "lr", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "\n", "\n", "", "def", "training_eta", "(", "eta", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "num_factor", "=", "8", "\n", "batch_size", "=", "512", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/eta/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "num_negatives", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/eta/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "0.001", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.model.build_tensor_info": [[343, 352], ["tensorflow.saved_model.utils.build_tensor_info", "tensorflow.saved_model.utils.build_tensor_info", "tensorflow.saved_model.utils.build_tensor_info", "tensorflow.saved_model.utils.build_tensor_info", "tensorflow.saved_model.utils.build_tensor_info", "tensorflow.saved_model.utils.build_tensor_info", "tensorflow.saved_model.utils.build_tensor_info", "tensorflow.saved_model.utils.build_tensor_info"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info"], []], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.model.training_batch_size": [[354, 379], ["model.ImToEx_u_i_pcat", "ImToEx_u_i_pcat.run"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], []], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.model.training_num_factors": [[381, 406], ["model.ImToEx_u_i_pcat", "ImToEx_u_i_pcat.run"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], []], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.model.training_eta": [[408, 432], ["model.ImToEx_u_i_pcat", "ImToEx_u_i_pcat.run"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], []], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.run_batch_size.main": [[8, 19], ["logging.info", "src.model_ite_user_item_pcat.model.training_batch_size"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.training_batch_size"], ["def", "main", "(", ")", ":", "\n", "    ", "save_path_name", "=", "'model_ite_onehot_log_loss'", "\n", "num_negatives", "=", "4", "\n", "for", "data_name", "in", "[", "'ml-1m/'", "]", ":", "\n", "        ", "if", "data_name", "==", "'recobell/'", ":", "\n", "            ", "epochs", "=", "101", "\n", "", "else", ":", "\n", "            ", "epochs", "=", "151", "\n", "", "for", "size", "in", "[", "512", ",", "1024", ",", "2048", ",", "4096", "]", ":", "\n", "            ", "logging", ".", "info", "(", "\"dataset: %s, batch_size: %s, save_path_name: %s\"", ",", "data_name", ",", "size", ",", "save_path_name", ")", "\n", "model", ".", "training_batch_size", "(", "size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_model", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.run_num_factor.test": [[8, 18], ["logging.info", "src.model_ite_user_item_pcat.model.training_num_factors"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.training_num_factors"], ["def", "test", "(", ")", ":", "\n", "    ", "save_path_name", "=", "'one_hot'", "\n", "for", "data_name", "in", "[", "'retail_rocket/'", "]", ":", "\n", "        ", "if", "data_name", "==", "'recobell/'", ":", "\n", "            ", "epochs", "=", "101", "\n", "", "else", ":", "\n", "            ", "epochs", "=", "200", "\n", "", "for", "size", "in", "[", "8", ",", "16", ",", "32", ",", "64", "]", ":", "\n", "            ", "logging", ".", "info", "(", "\"dataset: %s, num_factor: %s, save_path_name: %s\"", ",", "data_name", ",", "size", ",", "save_path_name", ")", "\n", "model", ".", "training_num_factors", "(", "size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "save_model", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_user_item_pcat.run_num_factor.main": [[20, 31], ["logging.info", "src.model_ite_user_item_pcat.model.training_num_factors"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.training_num_factors"], ["", "", "", "def", "main", "(", ")", ":", "\n", "    ", "save_path_name", "=", "'model_ite_onehot_log_loss'", "\n", "num_negatives", "=", "4", "\n", "for", "data_name", "in", "[", "'tmall/'", "]", ":", "\n", "        ", "if", "data_name", "==", "'recobell/'", ":", "\n", "            ", "epochs", "=", "101", "\n", "", "else", ":", "\n", "            ", "epochs", "=", "201", "\n", "", "for", "size", "in", "[", "8", ",", "16", ",", "32", ",", "64", "]", ":", "\n", "            ", "logging", ".", "info", "(", "\"dataset: %s, num_factor: %s, save_path_name: %s\"", ",", "data_name", ",", "size", ",", "save_path_name", ")", "\n", "model", ".", "training_num_factors", "(", "size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_model", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.result.show_result.compare_between_models_with_num_factor": [[11, 92], ["matplotlib.show", "range", "matplotlib.figure", "range", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.title", "matplotlib.axis", "matplotlib.legend", "matplotlib.xticks", "matplotlib.figure", "range", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.title", "matplotlib.axis", "matplotlib.legend", "matplotlib.xticks", "len", "hit_results.append", "ndcg_results.append", "print", "len", "matplotlib.plot", "len", "matplotlib.plot", "print", "open", "print", "float", "float", "hit_res.append", "ndcg_res.append", "[].strip", "[].strip", "line.split", "line.split"], "function", ["None"], ["def", "compare_between_models_with_num_factor", "(", ")", ":", "\n", "    ", "num_factors", "=", "[", "8", ",", "16", ",", "32", ",", "64", "]", "\n", "batch_sizes", "=", "[", "512", "]", "*", "5", "\n", "etas", "=", "[", "0.5", ",", "0.5", ",", "0.5", ",", "1.0", ",", "0.5", "]", "\n", "model_names", "=", "[", "'one_hot_log_loss'", ",", "'item_pcat_log_loss'", ",", "'both_concat_onehot'", ",", "'NMTR'", ",", "'model_mtmf'", "]", "\n", "label_names", "=", "[", "'ITE_one_hot'", ",", "'ITE_item_pcat'", ",", "'ITE_user_item_pcat'", ",", "'NMTR'", ",", "'MTMF'", "]", "\n", "data_names", "=", "[", "'recobell'", ",", "'retail_rocket'", "]", "\n", "marker_list", "=", "[", "'o'", ",", "'s'", ",", "'v'", ",", "'*'", ",", "'.'", "]", "\n", "# 'recobell',", "\n", "# data = 'lotte'", "\n", "# # data = 'movielens-1m'", "\n", "# # data = 'movielens-100k'", "\n", "# # data = 'recobell'", "\n", "# # data = 'retailrocket'", "\n", "# # data = 'yes24'", "\n", "\n", "for", "data", "in", "data_names", ":", "\n", "        ", "hit_results", "=", "[", "]", "\n", "ndcg_results", "=", "[", "]", "\n", "for", "z", "in", "range", "(", "len", "(", "model_names", ")", ")", ":", "\n", "            ", "model", "=", "model_names", "[", "z", "]", "\n", "hit_res", "=", "[", "]", "\n", "ndcg_res", "=", "[", "]", "\n", "for", "factor", "in", "num_factors", ":", "\n", "\n", "                ", "path", "=", "root_path", "+", "data", "+", "'/'", "+", "model", "+", "'/num_factor/{}_{}_{}'", ".", "format", "(", "factor", ",", "batch_sizes", "[", "z", "]", ",", "etas", "[", "z", "]", ")", "\n", "print", "(", "path", ")", "\n", "try", ":", "\n", "                    ", "with", "open", "(", "path", ")", "as", "file", ":", "\n", "                        ", "for", "line", "in", "file", ":", "\n", "                            ", "if", "'| 50    |'", "in", "line", ":", "\n", "                                ", "hit", "=", "float", "(", "line", ".", "split", "(", "'|'", ")", "[", "-", "3", "]", ".", "strip", "(", ")", ")", "\n", "ndcg", "=", "float", "(", "line", ".", "split", "(", "'|'", ")", "[", "-", "2", "]", ".", "strip", "(", ")", ")", "\n", "hit_res", ".", "append", "(", "hit", ")", "\n", "ndcg_res", ".", "append", "(", "ndcg", ")", "\n", "", "", "", "", "except", "FileNotFoundError", ":", "\n", "                    ", "print", "(", "'?'", ")", "\n", "", "", "hit_results", ".", "append", "(", "hit_res", ")", "\n", "ndcg_results", ".", "append", "(", "ndcg_res", ")", "\n", "", "for", "re", "in", "ndcg_results", ":", "\n", "            ", "print", "(", "re", ")", "\n", "\n", "# --------------------- HIT ----------------------", "\n", "", "plt", ".", "figure", "(", "num", "=", "None", ",", "figsize", "=", "(", "10", ",", "10", ")", ",", "dpi", "=", "120", ",", "facecolor", "=", "'w'", ",", "edgecolor", "=", "'k'", ")", "\n", "\n", "for", "z", "in", "range", "(", "len", "(", "model_names", ")", ")", ":", "\n", "            ", "plt", ".", "plot", "(", "num_factors", ",", "hit_results", "[", "z", "]", ",", "marker", "=", "marker_list", "[", "z", "]", ",", "label", "=", "label_names", "[", "z", "]", ",", "linewidth", "=", "2.0", ")", "\n", "\n", "", "plt", ".", "ylabel", "(", "'HR@10'", ")", "\n", "plt", ".", "xlabel", "(", "'Number factors \\n(Learning rate: 0.001; Batch size: 2048; Epochs: 51)'", ")", "\n", "plt", ".", "title", "(", "'Dataset: {}'", ".", "format", "(", "data", ")", ")", "\n", "\n", "plt", ".", "axis", "(", "'tight'", ")", "\n", "plt", ".", "legend", "(", "prop", "=", "{", "'size'", ":", "14", "}", ")", "\n", "\n", "# plt.grid()", "\n", "# plt.xticks(np.arange(min(num_factors), max(num_factors) + 8, 8))", "\n", "plt", ".", "xticks", "(", "num_factors", ")", "\n", "# --------------------- NDCG -----------------------", "\n", "plt", ".", "figure", "(", "num", "=", "None", ",", "figsize", "=", "(", "10", ",", "10", ")", ",", "dpi", "=", "120", ",", "facecolor", "=", "'w'", ",", "edgecolor", "=", "'k'", ")", "\n", "for", "z", "in", "range", "(", "len", "(", "model_names", ")", ")", ":", "\n", "            ", "plt", ".", "plot", "(", "num_factors", ",", "ndcg_results", "[", "z", "]", ",", "marker", "=", "marker_list", "[", "z", "]", ",", "label", "=", "label_names", "[", "z", "]", ",", "linewidth", "=", "2.0", ")", "\n", "# plt.grid()", "\n", "\n", "", "plt", ".", "ylabel", "(", "'NDCG@10'", ")", "\n", "plt", ".", "xlabel", "(", "'Number factors \\n(Learning rate: 0.001; Batch size: 2048; Epochs: 51)'", ")", "\n", "plt", ".", "title", "(", "'Dataset: {}'", ".", "format", "(", "data", ")", ")", "\n", "\n", "plt", ".", "axis", "(", "'tight'", ")", "\n", "plt", ".", "legend", "(", "prop", "=", "{", "'size'", ":", "14", "}", ")", "\n", "\n", "# plt.grid()", "\n", "plt", ".", "xticks", "(", "num_factors", ")", "\n", "\n", "# plt.subplots_adjust(top=0.94,", "\n", "#                     bottom=0.1,", "\n", "#                     left=0.285,", "\n", "#                     right=0.695,", "\n", "#                     hspace=0.365,", "\n", "#                     wspace=0.215)", "\n", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.result.show_result.factor_through_epochs": [[94, 207], ["matplotlib.show", "range", "range", "range", "hit_results.append", "ndcg_results.append", "model_epochs.append", "print", "len", "matplotlib.figure", "range", "len", "matplotlib.figure", "range", "len", "factor_model_e.append", "factor_hit.append", "factor_ndcg.append", "len", "matplotlib.plot", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.title", "matplotlib.axis", "matplotlib.legend", "len", "matplotlib.plot", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.title", "matplotlib.axis", "matplotlib.legend", "open", "next", "print", "print", "line.startswith", "int", "print", "float", "float", "model_e.append", "hit_res.append", "ndcg_res.append", "[].strip", "[].strip", "[].strip", "line.split", "line.split", "line.split"], "function", ["None"], ["", "def", "factor_through_epochs", "(", ")", ":", "\n", "    ", "num_factors", "=", "[", "8", ",", "16", ",", "32", ",", "64", "]", "\n", "batch_sizes", "=", "[", "2048", "]", "*", "5", "\n", "etas", "=", "[", "0.5", ",", "0.5", ",", "0.5", ",", "1.0", ",", "0.5", "]", "\n", "model_names", "=", "[", "'one_hot_log_loss'", ",", "'item_pcat_log_loss'", ",", "'both_concat_onehot'", ",", "'NMTR'", ",", "'model_mtmf'", "]", "\n", "label_names", "=", "[", "'ITE_one_hot'", ",", "'ITE_item_pcat'", ",", "'ITE_user_item_pcat'", ",", "'NMTR'", ",", "'MTMF'", "]", "\n", "data_names", "=", "[", "'recobell'", ",", "'retail_rocket'", "]", "\n", "marker_list", "=", "[", "'o'", ",", "'s'", ",", "'v'", ",", "'*'", ",", "'.'", "]", "\n", "# 'recobell',", "\n", "# data = 'lotte'", "\n", "# # data = 'movielens-1m'", "\n", "# # data = 'movielens-100k'", "\n", "# # data = 'recobell'", "\n", "# # data = 'retailrocket'", "\n", "# # data = 'yes24'", "\n", "\n", "for", "data", "in", "data_names", ":", "\n", "        ", "model_epochs", "=", "[", "]", "\n", "hit_results", "=", "[", "]", "\n", "ndcg_results", "=", "[", "]", "\n", "for", "factor", "in", "num_factors", ":", "\n", "            ", "factor_model_e", "=", "[", "]", "\n", "factor_hit", "=", "[", "]", "\n", "factor_ndcg", "=", "[", "]", "\n", "for", "z", "in", "range", "(", "len", "(", "model_names", ")", ")", ":", "\n", "                ", "model_e", "=", "[", "]", "\n", "hit_res", "=", "[", "]", "\n", "ndcg_res", "=", "[", "]", "\n", "model", "=", "model_names", "[", "z", "]", "\n", "path", "=", "root_path", "+", "data", "+", "'/'", "+", "model", "+", "'/num_factor/{}_{}_{}'", ".", "format", "(", "factor", ",", "batch_sizes", "[", "z", "]", ",", "etas", "[", "z", "]", ")", "\n", "# print(path)", "\n", "try", ":", "\n", "                    ", "with", "open", "(", "path", ")", "as", "file", ":", "\n", "                        ", "for", "line", "in", "file", ":", "\n", "                            ", "if", "'init'", "not", "in", "line", ":", "\n", "                                ", "continue", "\n", "", "else", ":", "\n", "                                ", "break", "\n", "", "", "next", "(", "file", ")", "\n", "for", "line", "in", "file", ":", "\n", "                            ", "print", "(", "line", ")", "\n", "if", "not", "line", ".", "startswith", "(", "'+-------'", ")", ":", "\n", "                                ", "e", "=", "int", "(", "line", ".", "split", "(", "'|'", ")", "[", "1", "]", ".", "strip", "(", ")", ")", "\n", "print", "(", "e", ")", "\n", "hit", "=", "float", "(", "line", ".", "split", "(", "'|'", ")", "[", "-", "3", "]", ".", "strip", "(", ")", ")", "\n", "ndcg", "=", "float", "(", "line", ".", "split", "(", "'|'", ")", "[", "-", "2", "]", ".", "strip", "(", ")", ")", "\n", "model_e", ".", "append", "(", "e", ")", "\n", "hit_res", ".", "append", "(", "hit", ")", "\n", "ndcg_res", ".", "append", "(", "ndcg", ")", "\n", "", "else", ":", "\n", "                                ", "break", "\n", "", "", "", "", "except", "FileNotFoundError", ":", "\n", "                    ", "print", "(", "'?'", ")", "\n", "", "factor_model_e", ".", "append", "(", "model_e", ")", "\n", "factor_hit", ".", "append", "(", "hit_res", ")", "\n", "factor_ndcg", ".", "append", "(", "ndcg_res", ")", "\n", "", "hit_results", ".", "append", "(", "factor_hit", ")", "\n", "ndcg_results", ".", "append", "(", "factor_ndcg", ")", "\n", "model_epochs", ".", "append", "(", "factor_model_e", ")", "\n", "", "for", "re", "in", "ndcg_results", ":", "\n", "            ", "print", "(", "re", ")", "\n", "\n", "# --------------------- HIT ----------------------", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "num_factors", ")", ")", ":", "\n", "            ", "plt", ".", "figure", "(", "num", "=", "None", ",", "figsize", "=", "(", "10", ",", "10", ")", ",", "dpi", "=", "120", ",", "facecolor", "=", "'w'", ",", "edgecolor", "=", "'k'", ")", "\n", "for", "z", "in", "range", "(", "len", "(", "model_names", ")", ")", ":", "\n", "                ", "plt", ".", "plot", "(", "model_epochs", "[", "i", "]", "[", "z", "]", ",", "hit_results", "[", "i", "]", "[", "z", "]", ",", "marker", "=", "marker_list", "[", "z", "]", ",", "label", "=", "label_names", "[", "z", "]", ",", "\n", "linewidth", "=", "2.0", ")", "\n", "\n", "plt", ".", "ylabel", "(", "'HR@10'", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs\\n(Learning rate: 0.001; Batch size: 2048; Num factors: {})'", ".", "format", "(", "num_factors", "[", "i", "]", ")", ")", "\n", "plt", ".", "title", "(", "'Dataset: {}'", ".", "format", "(", "data", ")", ")", "\n", "\n", "plt", ".", "axis", "(", "'tight'", ")", "\n", "plt", ".", "legend", "(", "prop", "=", "{", "'size'", ":", "14", "}", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "num_factors", ")", ")", ":", "\n", "            ", "plt", ".", "figure", "(", "num", "=", "None", ",", "figsize", "=", "(", "10", ",", "10", ")", ",", "dpi", "=", "120", ",", "facecolor", "=", "'w'", ",", "edgecolor", "=", "'k'", ")", "\n", "for", "z", "in", "range", "(", "len", "(", "model_names", ")", ")", ":", "\n", "                ", "plt", ".", "plot", "(", "model_epochs", "[", "i", "]", "[", "z", "]", ",", "ndcg_results", "[", "i", "]", "[", "z", "]", ",", "marker", "=", "marker_list", "[", "z", "]", ",", "label", "=", "label_names", "[", "z", "]", ",", "\n", "linewidth", "=", "2.0", ")", "\n", "\n", "plt", ".", "ylabel", "(", "'NDCG@10'", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs\\n(Learning rate: 0.001; Batch size: 2048; Num factors: {})'", ".", "format", "(", "num_factors", "[", "i", "]", ")", ")", "\n", "plt", ".", "title", "(", "'Dataset: {}'", ".", "format", "(", "data", ")", ")", "\n", "\n", "plt", ".", "axis", "(", "'tight'", ")", "\n", "plt", ".", "legend", "(", "prop", "=", "{", "'size'", ":", "14", "}", ")", "\n", "# plt.grid()", "\n", "# plt.xticks(np.arange(min(num_factors), max(num_factors) + 8, 8))", "\n", "# plt.xticks(num_factors)", "\n", "# --------------------- NDCG -----------------------", "\n", "# plt.subplot(2, 1, 2)", "\n", "# for z in range(len(model_names)):", "\n", "#     plt.plot(model_epochs[z], ndcg_results[z], marker=marker_list[z], label=label_names[z])", "\n", "# # plt.grid()", "\n", "#", "\n", "# plt.ylabel('NDCG@10')", "\n", "# plt.xlabel('Number factors \\n(Learning rate: 0.001; Batch size: 2048; Epochs: 51)')", "\n", "# plt.title('Data: {}'.format(data))", "\n", "#", "\n", "# plt.legend()", "\n", "# plt.grid()", "\n", "# plt.xticks(num_factors)", "\n", "\n", "# plt.subplots_adjust(top=0.94,", "\n", "#                     bottom=0.1,", "\n", "#                     left=0.285,", "\n", "#                     right=0.695,", "\n", "#                     hspace=0.365,", "\n", "#                     wspace=0.215)", "\n", "", "", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.result.show_result.compare_ite_vcc": [[209, 310], ["range", "matplotlib.figure", "range", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.title", "matplotlib.axis", "matplotlib.legend", "matplotlib.xticks", "matplotlib.figure", "range", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.title", "matplotlib.axis", "matplotlib.legend", "matplotlib.xticks", "matplotlib.figure", "range", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.title", "matplotlib.axis", "matplotlib.legend", "matplotlib.xticks", "matplotlib.figure", "range", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.title", "matplotlib.axis", "matplotlib.legend", "matplotlib.xticks", "matplotlib.show", "len", "list_epoch_18_total.append", "hit_18_total.append", "recall_18_total.append", "list_epoch_19_total.append", "hit_19_total.append", "recall_19_total.append", "len", "matplotlib.plot", "len", "matplotlib.plot", "len", "matplotlib.plot", "len", "matplotlib.plot", "open", "csv.reader", "int", "float", "float", "list_epoch_18.append", "hit_18.append", "recall_18.append", "int", "float", "float", "list_epoch_19.append", "hit_19.append", "recall_19.append", "result.append"], "function", ["None"], ["", "def", "compare_ite_vcc", "(", ")", ":", "\n", "    ", "model_names", "=", "[", "'both_concat_embed'", ",", "'both_concat_embed_added_zone'", ",", "'both_concat_embed_added_zone_and_doc'", "]", "\n", "label_names", "=", "[", "'ITE-2'", ",", "'ITE-3'", ",", "'ITE-4'", "]", "\n", "num_factor", "=", "32", "\n", "batch_size", "=", "1024", "\n", "eta", "=", "0.5", "\n", "data_names", "=", "'vccorp'", "\n", "marker_list", "=", "[", "'o'", ",", "'s'", ",", "'v'", "]", "\n", "list_epoch_18_total", "=", "[", "]", "\n", "hit_18_total", "=", "[", "]", "\n", "recall_18_total", "=", "[", "]", "\n", "list_epoch_19_total", "=", "[", "]", "\n", "hit_19_total", "=", "[", "]", "\n", "recall_19_total", "=", "[", "]", "\n", "for", "z", "in", "range", "(", "len", "(", "model_names", ")", ")", ":", "\n", "        ", "list_epoch_18", "=", "[", "]", "\n", "hit_18", "=", "[", "]", "\n", "recall_18", "=", "[", "]", "\n", "list_epoch_19", "=", "[", "]", "\n", "hit_19", "=", "[", "]", "\n", "recall_19", "=", "[", "]", "\n", "model", "=", "model_names", "[", "z", "]", "\n", "path", "=", "root_path", "+", "data_names", "+", "'/log/'", "+", "model", "+", "'/batch_size/1024.log'", "\n", "result", "=", "[", "]", "\n", "with", "open", "(", "path", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "'|'", ",", "quoting", "=", "csv", ".", "QUOTE_ALL", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "                ", "result", ".", "append", "(", "row", ")", "\n", "\n", "", "", "for", "row", "in", "result", "[", "10", ":", "25", "]", ":", "\n", "            ", "e", "=", "int", "(", "row", "[", "1", "]", ")", "\n", "hit", "=", "float", "(", "row", "[", "3", "]", ")", "\n", "recall", "=", "float", "(", "row", "[", "4", "]", ")", "\n", "list_epoch_18", ".", "append", "(", "e", ")", "\n", "hit_18", ".", "append", "(", "hit", ")", "\n", "recall_18", ".", "append", "(", "recall", ")", "\n", "", "list_epoch_18_total", ".", "append", "(", "list_epoch_18", ")", "\n", "hit_18_total", ".", "append", "(", "hit_18", ")", "\n", "recall_18_total", ".", "append", "(", "recall_18", ")", "\n", "for", "row", "in", "result", "[", "26", ":", "]", ":", "\n", "            ", "e", "=", "int", "(", "row", "[", "1", "]", ")", "\n", "hit", "=", "float", "(", "row", "[", "3", "]", ")", "\n", "recall", "=", "float", "(", "row", "[", "4", "]", ")", "\n", "list_epoch_19", ".", "append", "(", "e", ")", "\n", "hit_19", ".", "append", "(", "hit", ")", "\n", "recall_19", ".", "append", "(", "recall", ")", "\n", "", "list_epoch_19_total", ".", "append", "(", "list_epoch_19", ")", "\n", "hit_19_total", ".", "append", "(", "hit_19", ")", "\n", "recall_19_total", ".", "append", "(", "recall_19", ")", "\n", "\n", "", "plt", ".", "figure", "(", "num", "=", "None", ",", "figsize", "=", "(", "10", ",", "10", ")", ",", "dpi", "=", "120", ",", "facecolor", "=", "'w'", ",", "edgecolor", "=", "'k'", ")", "\n", "for", "z", "in", "range", "(", "len", "(", "model_names", ")", ")", ":", "\n", "        ", "plt", ".", "plot", "(", "list_epoch_18_total", "[", "z", "]", ",", "hit_18_total", "[", "z", "]", ",", "marker", "=", "marker_list", "[", "z", "]", ",", "label", "=", "label_names", "[", "z", "]", ",", "linewidth", "=", "2.0", ")", "\n", "\n", "", "plt", ".", "ylabel", "(", "'HR@10'", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs \\n(Learning rate: 0.0005; Batch size: 1024; Eta: 0.5; Num factors: 32)'", ")", "\n", "plt", ".", "title", "(", "'Date: 2019/04/18'", ")", "\n", "\n", "plt", ".", "axis", "(", "'tight'", ")", "\n", "plt", ".", "legend", "(", "prop", "=", "{", "'size'", ":", "14", "}", ")", "\n", "\n", "plt", ".", "xticks", "(", "list_epoch_18_total", "[", "0", "]", "[", ":", "-", "1", "]", "+", "[", "70", "]", ")", "\n", "plt", ".", "figure", "(", "num", "=", "None", ",", "figsize", "=", "(", "10", ",", "10", ")", ",", "dpi", "=", "120", ",", "facecolor", "=", "'w'", ",", "edgecolor", "=", "'k'", ")", "\n", "\n", "for", "z", "in", "range", "(", "len", "(", "model_names", ")", ")", ":", "\n", "        ", "plt", ".", "plot", "(", "list_epoch_18_total", "[", "z", "]", ",", "recall_18_total", "[", "z", "]", ",", "marker", "=", "marker_list", "[", "z", "]", ",", "label", "=", "label_names", "[", "z", "]", ",", "linewidth", "=", "2.0", ")", "\n", "\n", "", "plt", ".", "ylabel", "(", "'RECALL@10'", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs \\n(Learning rate: 0.0005; Batch size: 1024; Eta: 0.5; Num factors: 32)'", ")", "\n", "plt", ".", "title", "(", "'Date: 2019/04/18'", ")", "\n", "\n", "plt", ".", "axis", "(", "'tight'", ")", "\n", "plt", ".", "legend", "(", "prop", "=", "{", "'size'", ":", "14", "}", ")", "\n", "\n", "plt", ".", "xticks", "(", "list_epoch_18_total", "[", "0", "]", "[", ":", "-", "1", "]", "+", "[", "70", "]", ")", "\n", "plt", ".", "figure", "(", "num", "=", "None", ",", "figsize", "=", "(", "10", ",", "10", ")", ",", "dpi", "=", "120", ",", "facecolor", "=", "'w'", ",", "edgecolor", "=", "'k'", ")", "\n", "\n", "for", "z", "in", "range", "(", "len", "(", "model_names", ")", ")", ":", "\n", "        ", "plt", ".", "plot", "(", "list_epoch_19_total", "[", "z", "]", ",", "hit_19_total", "[", "z", "]", ",", "marker", "=", "marker_list", "[", "z", "]", ",", "label", "=", "label_names", "[", "z", "]", ",", "linewidth", "=", "2.0", ")", "\n", "\n", "", "plt", ".", "ylabel", "(", "'HR@10'", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs \\n(Learning rate: 0.0005; Batch size: 1024; Eta: 0.5; Num factors: 32)'", ")", "\n", "plt", ".", "title", "(", "'Date: 2019/04/19'", ")", "\n", "\n", "plt", ".", "axis", "(", "'tight'", ")", "\n", "plt", ".", "legend", "(", "prop", "=", "{", "'size'", ":", "14", "}", ")", "\n", "\n", "plt", ".", "xticks", "(", "list_epoch_18_total", "[", "0", "]", "[", ":", "-", "1", "]", "+", "[", "70", "]", ")", "\n", "plt", ".", "figure", "(", "num", "=", "None", ",", "figsize", "=", "(", "10", ",", "10", ")", ",", "dpi", "=", "120", ",", "facecolor", "=", "'w'", ",", "edgecolor", "=", "'k'", ")", "\n", "for", "z", "in", "range", "(", "len", "(", "model_names", ")", ")", ":", "\n", "        ", "plt", ".", "plot", "(", "list_epoch_19_total", "[", "z", "]", ",", "recall_19_total", "[", "z", "]", ",", "marker", "=", "marker_list", "[", "z", "]", ",", "label", "=", "label_names", "[", "z", "]", ",", "linewidth", "=", "2.0", ")", "\n", "\n", "", "plt", ".", "ylabel", "(", "'RECALL@10'", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs \\n(Learning rate: 0.0005; Batch size: 1024; Eta: 0.5; Num factors: 32)'", ")", "\n", "plt", ".", "title", "(", "'Date: 2019/04/19'", ")", "\n", "\n", "plt", ".", "axis", "(", "'tight'", ")", "\n", "plt", ".", "legend", "(", "prop", "=", "{", "'size'", ":", "14", "}", ")", "\n", "\n", "plt", ".", "xticks", "(", "list_epoch_18_total", "[", "0", "]", "[", ":", "-", "1", "]", "+", "[", "70", "]", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.result.show_result.main": [[312, 323], ["matplotlib.rcParams.update", "show_result.compare_ite_vcc"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.result.show_result.compare_ite_vcc"], ["", "def", "main", "(", ")", ":", "\n", "# font = {'weight': 'bold',", "\n", "#         'size': 16}", "\n", "# matplotlib.rc('font', **font)", "\n", "    ", "plt", ".", "rcParams", ".", "update", "(", "{", "'font.size'", ":", "16", "}", ")", "\n", "# factor_through_epochs()", "\n", "# compare_between_models_with_num_factor()", "\n", "# show_chart_batch_size()", "\n", "# show_chart_eta()", "\n", "\n", "compare_ite_vcc", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.config.Config.__init__": [[15, 45], ["config.Config.show_config_info", "config.Config.load_representation_data", "torch.cuda.is_available", "torch.device", "torch.device"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.config.Config.show_config_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_representation_data"], ["    ", "def", "__init__", "(", "self", ",", "root_path", ",", "params", ")", ":", "\n", "\n", "        ", "self", ".", "attn_pdrop", "=", "params", "[", "'attn_pdrop'", "]", "\n", "self", ".", "resid_pdrop", "=", "params", "[", "'resid_pdrop'", "]", "\n", "self", ".", "n_head", "=", "params", "[", "'n_head'", "]", "\n", "self", ".", "n_layer", "=", "params", "[", "'n_layer'", "]", "\n", "self", ".", "interval", "=", "params", "[", "'interval'", "]", "\n", "self", ".", "eta", "=", "params", "[", "'eta'", "]", "\n", "self", ".", "reg_lambda", "=", "params", "[", "'reg_lambda'", "]", "\n", "self", ".", "num_neg", "=", "params", "[", "'num_neg'", "]", "\n", "self", ".", "max_len", "=", "params", "[", "'max_len'", "]", "\n", "self", ".", "eval_top_k", "=", "params", "[", "'eval_top_k'", "]", "\n", "self", ".", "batch_size", "=", "params", "[", "'batch_size'", "]", "\n", "self", ".", "n_embd", "=", "params", "[", "'n_embd'", "]", "\n", "self", ".", "num_factor", "=", "params", "[", "'num_factor'", "]", "\n", "self", ".", "lr", "=", "params", "[", "'lr'", "]", "\n", "\n", "self", ".", "show_config_info", "(", ")", "\n", "\n", "self", ".", "num_user", ",", "self", ".", "num_item", "=", "self", ".", "load_representation_data", "(", "\n", "root_path", "+", "\"u2index.txt\"", ",", "\n", "root_path", "+", "\"i2index.txt\"", ")", "\n", "\n", "self", ".", "path_rep_user", "=", "root_path", "+", "\"user_repr.txt\"", "\n", "self", ".", "path_rep_item", "=", "root_path", "+", "\"item_repr.txt\"", "\n", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.config.Config.load_representation_data": [[48, 66], ["print", "print", "open", "csv.reader", "csv.reader", "csv.reader", "csv.reader", "open", "csv.reader", "csv.reader", "csv.reader", "csv.reader"], "methods", ["None"], ["", "", "def", "load_representation_data", "(", "self", ",", "u2index_path", ",", "i2index_path", ")", ":", "\n", "        ", "count", "=", "0", "\n", "with", "open", "(", "u2index_path", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "                ", "count", "+=", "1", "\n", "", "", "num_user", "=", "count", "\n", "print", "(", "'Num user: '", ",", "num_user", ")", "\n", "\n", "count", "=", "0", "\n", "with", "open", "(", "i2index_path", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "                ", "count", "+=", "1", "\n", "", "", "num_item", "=", "count", "\n", "print", "(", "'Num item: '", ",", "num_item", ")", "\n", "\n", "return", "num_user", ",", "num_item", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.config.Config.show_config_info": [[67, 74], ["print", "print", "print", "print", "print", "print"], "methods", ["None"], ["", "def", "show_config_info", "(", "self", ")", ":", "\n", "        ", "print", "(", "'*'", "*", "100", ")", "\n", "print", "(", "'Num_factor: '", ",", "self", ".", "num_factor", ")", "\n", "print", "(", "'Eta: '", ",", "self", ".", "eta", ")", "\n", "print", "(", "'Bs: '", ",", "self", ".", "batch_size", ")", "\n", "print", "(", "'Lr: '", ",", "self", ".", "lr", ")", "\n", "print", "(", "'*'", "*", "100", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.data_util.Data_Utils.__init__": [[10, 22], ["data_util.Data_Utils.load_representation_data", "data_util.Data_Utils.load_interact_matrix_s_ite", "data_util.Data_Utils.get_item_rep"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_representation_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_interact_matrix_s_ite", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.get_item_rep"], ["    ", "def", "__init__", "(", "self", ",", "train_path", ",", "root_path", ",", "config", ")", ":", "\n", "        ", "self", ".", "train_path", "=", "train_path", "\n", "self", ".", "config", "=", "config", "\n", "\n", "self", ".", "num_user", ",", "self", ".", "num_item", "=", "self", ".", "load_representation_data", "(", "\n", "root_path", "+", "\"u2index.txt\"", ",", "\n", "root_path", "+", "\"i2index.txt\"", ")", "\n", "self", ".", "interact_mat", "=", "self", ".", "load_interact_matrix_s_ite", "(", "root_path", "+", "\"without_implicit_in_train/ratings_train.txt\"", ",", "self", ".", "num_user", ",", "\n", "self", ".", "num_item", ")", "\n", "self", ".", "max_len", "=", "config", ".", "max_len", "\n", "self", ".", "num_neg", "=", "config", ".", "num_neg", "\n", "self", ".", "item_representation", ",", "self", ".", "dimension", "=", "self", ".", "get_item_rep", "(", "config", ".", "path_rep_item", ")", "\n", "# self.user_representation = self.get_user_rep(config.path_rep_user, self.dimension)", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.data_util.Data_Utils.preprocess_test": [[24, 52], ["data_util.Data_Utils.get_dict_array_item_train", "progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "data_util.Data_Utils.raise_data_test_no_concat_test", "data.append", "len"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.get_dict_array_item_train", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.raise_data_test_no_concat_test"], ["", "def", "preprocess_test", "(", "self", ",", "test_data", ",", "negative_data", ")", ":", "\n", "        ", "data", "=", "[", "]", "\n", "dict_arritem_ids", "=", "self", ".", "get_dict_array_item_train", "(", ")", "\n", "widgets", "=", "[", "progressbar", ".", "Percentage", "(", ")", ",", "\" \"", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "\" \"", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "for", "idx", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "len", "(", "test_data", ")", ")", ")", ":", "\n", "            ", "uid", "=", "test_data", "[", "idx", "]", "[", "0", "]", "\n", "test_item", "=", "test_data", "[", "idx", "]", "[", "1", "]", "\n", "neg_items", "=", "negative_data", "[", "uid", "]", "\n", "arr_items", "=", "dict_arritem_ids", "[", "uid", "]", "\n", "items", "=", "neg_items", "+", "[", "test_item", "]", "\n", "# user_ids, items_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, attn_masks, labels = \\", "\n", "#         self.raise_data_test_ver2(uid, arr_items, test_item, neg_items)", "\n", "# user_ids, items_sequences, target_ids, attn_masks, labels = \\", "\n", "#         self.raise_data_test_ver2(uid, arr_items, test_item, neg_items)", "\n", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ",", "labels", "=", "self", ".", "raise_data_test_no_concat_test", "(", "uid", ",", "arr_items", ",", "test_item", ",", "neg_items", ")", "\n", "data", ".", "append", "(", "{", "\n", "\"user_ids\"", ":", "user_ids", ",", "\n", "\"items_sequences\"", ":", "items_sequences", ",", "\n", "\"target_ids\"", ":", "target_ids", ",", "\n", "# \"user_reps\": user_reps,", "\n", "# \"item_seq_reps\": item_seq_reps,", "\n", "# \"item_target_reps\": item_target_reps,", "\n", "\"attn_masks\"", ":", "attn_masks", ",", "\n", "\"labels\"", ":", "labels", ",", "\n", "\"items\"", ":", "items", "\n", "}", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.data_util.Data_Utils.get_dict_array_item_train": [[53, 67], ["open", "progressbar.ProgressBar", "f.readlines", "line.split", "int", "itemids.split.split.split", "elements[].strip", "elements[].strip", "arr_items.append", "int", "item.strip"], "methods", ["None"], ["", "def", "get_dict_array_item_train", "(", "self", ")", ":", "\n", "        ", "dict_arritem_ids", "=", "{", "}", "\n", "with", "open", "(", "self", ".", "train_path", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "f", ".", "readlines", "(", ")", ")", ":", "\n", "                ", "elements", "=", "line", ".", "split", "(", "'|'", ")", "\n", "uid", "=", "int", "(", "elements", "[", "0", "]", ".", "strip", "(", ")", ")", "\n", "\n", "itemids", "=", "elements", "[", "1", "]", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "\n", "itemids", "=", "itemids", ".", "split", "(", "','", ")", "\n", "arr_items", "=", "[", "]", "\n", "for", "item", "in", "itemids", ":", "\n", "                    ", "arr_items", ".", "append", "(", "int", "(", "item", ".", "strip", "(", ")", ")", ")", "\n", "", "dict_arritem_ids", "[", "uid", "]", "=", "arr_items", "\n", "", "", "return", "dict_arritem_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.data_util.Data_Utils.load_representation_data": [[68, 86], ["print", "print", "open", "csv.reader", "open", "csv.reader"], "methods", ["None"], ["", "def", "load_representation_data", "(", "self", ",", "u2index_path", ",", "i2index_path", ")", ":", "\n", "        ", "count", "=", "0", "\n", "with", "open", "(", "u2index_path", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "                ", "count", "+=", "1", "\n", "", "", "num_user", "=", "count", "\n", "print", "(", "'Num user: '", ",", "num_user", ")", "\n", "\n", "count", "=", "0", "\n", "with", "open", "(", "i2index_path", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "                ", "count", "+=", "1", "\n", "", "", "num_item", "=", "count", "\n", "print", "(", "'Num item: '", ",", "num_item", ")", "\n", "\n", "return", "num_user", ",", "num_item", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.data_util.Data_Utils.load_interact_matrix_s_ite": [[87, 104], ["datetime.datetime.now", "scipy.dok_matrix", "print", "open", "csv.reader", "int", "itemids.split.split.split", "datetime.datetime.now", "line[].strip", "int", "item.strip"], "methods", ["None"], ["", "def", "load_interact_matrix_s_ite", "(", "self", ",", "file_path", ",", "num_user", ",", "num_item", ")", ":", "\n", "        ", "start", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "# Construct matrix", "\n", "# ma tran thua voi num_user x num_item , init value la false.", "\n", "mat", "=", "sp", ".", "dok_matrix", "(", "(", "num_user", ",", "num_item", ")", ",", "dtype", "=", "np", ".", "bool_", ")", "\n", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "csv_reader", ":", "\n", "                ", "uid", "=", "int", "(", "line", "[", "0", "]", ")", "\n", "itemids", "=", "line", "[", "1", "]", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "\n", "itemids", "=", "itemids", ".", "split", "(", "\",\"", ")", "\n", "for", "item", "in", "itemids", ":", "\n", "                    ", "itemid", "=", "int", "(", "item", ".", "strip", "(", ")", ")", "\n", "mat", "[", "uid", ",", "itemid", "]", "=", "True", "\n", "", "", "", "print", "(", "\"time load_interact_matrix_s_ite: \"", ",", "datetime", ".", "datetime", ".", "now", "(", ")", "-", "start", ")", "\n", "return", "mat", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.data_util.Data_Utils.load_negative_data": [[105, 123], ["print", "open", "csv.reader", "len", "line[].split", "int", "negative_dict[].append", "int"], "methods", ["None"], ["", "def", "load_negative_data", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "negative_dict", "=", "{", "}", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "# i = 0", "\n", "# raw data: (4,2504)|15383|6979|41741|79116|53192|12932|29099|", "\n", "for", "line", "in", "csv_reader", ":", "\n", "# line: ['(4,2504)', '15383', '6979', '41741', '79116', '53192', '12932',..]", "\n", "                ", "user", "=", "line", "[", "0", "]", ".", "split", "(", "\",\"", ")", "# ['(158', '4966)']", "\n", "user", "=", "int", "(", "user", "[", "0", "]", "[", "1", ":", "]", ")", "# 158", "\n", "# assert user == i", "\n", "# i += 1", "\n", "\n", "negative_dict", "[", "user", "]", "=", "[", "]", "# doi voi moi user co 999 item tuong ung.", "\n", "for", "x", "in", "line", "[", "1", ":", "]", ":", "# danh sach cac item tuong ung voi user do khong co tuong tac explicit.", "\n", "                    ", "negative_dict", "[", "user", "]", ".", "append", "(", "int", "(", "x", ")", ")", "\n", "", "", "", "print", "(", "'len negative data: '", ",", "len", "(", "negative_dict", ")", ")", "\n", "return", "negative_dict", "# user_id: list negative item.", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.data_util.Data_Utils.load_test_data_s_ite": [[124, 133], ["print", "open", "csv.reader", "len", "rating_list.append", "int", "int"], "methods", ["None"], ["", "def", "load_test_data_s_ite", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "rating_list", "=", "[", "]", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "csv_reader", ":", "\n", "                ", "user", ",", "item", "=", "int", "(", "line", "[", "0", "]", ")", ",", "int", "(", "line", "[", "1", "]", ")", "# get uid, itemid", "\n", "rating_list", ".", "append", "(", "[", "user", ",", "item", "]", ")", "\n", "", "", "print", "(", "'Length test data: '", ",", "len", "(", "rating_list", ")", ")", "\n", "return", "rating_list", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.data_util.Data_Utils.raise_data_test_ver2": [[134, 180], ["len", "range", "range", "range", "attn_mask.append", "range", "range", "len", "attn_mask.append", "len", "user_ids.append", "attn_masks.append", "items_sequences.append", "attn_mask.append", "item_seq_truth.append", "attn_mask.append", "len", "user_ids.append", "range", "items_sequences.append", "attn_masks.append", "item_seq_pred.append"], "methods", ["None"], ["", "def", "raise_data_test_ver2", "(", "self", ",", "uid", ",", "arr_items", ",", "test_item", ",", "negative_item", ")", ":", "\n", "        ", "user_ids", "=", "[", "]", "\n", "items_sequences", "=", "[", "]", "\n", "attn_masks", "=", "[", "]", "\n", "# user_reps = []", "\n", "# item_seq_reps = []", "\n", "# item_target_reps = []", "\n", "target_ids", "=", "negative_item", "+", "[", "test_item", "]", "\n", "# item_target_reps = [self.item_representation[x] for x in target_ids]", "\n", "labels", "=", "[", "0", "]", "*", "len", "(", "negative_item", ")", "+", "[", "1", "]", "\n", "k", "=", "len", "(", "arr_items", ")", "\n", "if", "k", ">=", "self", ".", "max_len", ":", "\n", "            ", "item_seq_truth", "=", "arr_items", "[", "1", ":", "self", ".", "max_len", "]", "\n", "attn_mask", "=", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "target_ids", ")", ")", ":", "\n", "                ", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "item_seq_pred", "=", "item_seq_truth", "+", "[", "target_ids", "[", "i", "]", "]", "\n", "# item_seq_reps.append([self.item_representation[x] for x in item_seq_pred])", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "items_sequences", ".", "append", "(", "item_seq_pred", ")", "\n", "", "", "else", ":", "\n", "            ", "item_seq_truth", "=", "[", "]", "\n", "attn_mask", "=", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "1", ")", "\n", "item_seq_truth", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n", "", "attn_mask", ".", "append", "(", "1", ")", "\n", "for", "i", "in", "range", "(", "k", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "target_ids", ")", ")", ":", "\n", "                ", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "item_seq_pred", "=", "item_seq_truth", "+", "[", "target_ids", "[", "i", "]", "]", "\n", "# isr = [self.item_representation[x] for x in item_seq_pred]", "\n", "for", "j", "in", "range", "(", "k", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_seq_pred", ".", "append", "(", "self", ".", "num_item", ")", "\n", "# isr.append(self.item_representation[-1])", "\n", "", "items_sequences", ".", "append", "(", "item_seq_pred", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "# item_seq_reps.append(isr)", "\n", "# return user_ids, items_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, attn_masks, labels", "\n", "\n", "", "", "return", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.data_util.Data_Utils.raise_data_ver2": [[181, 286], ["min", "len", "len", "range", "range", "range", "range", "range", "target_ids.append", "items_sequences.append", "im_labels.append", "user_ids.append", "attn_masks.append", "range", "range", "range", "range", "target_ids.append", "items_sequences.append", "im_labels.append", "user_ids.append", "attn_masks.append", "range", "attn_mask.append", "attn_mask.append", "item_truth.append", "ex_labels.append", "ex_labels.append", "user_ids.append", "im_labels.append", "ex_labels.append", "random.randrange", "item_seq.append", "range", "items_sequences.append", "target_ids.append", "attn_masks.append", "attn_mask.append", "attn_mask.append", "item_truth.append", "ex_labels.append", "ex_labels.append", "user_ids.append", "im_labels.append", "ex_labels.append", "random.randrange", "item_seq.append", "range", "items_sequences.append", "target_ids.append", "attn_masks.append", "range", "random.randrange", "item_seq.append", "range", "random.randrange", "item_seq.append", "range", "range"], "methods", ["None"], ["", "def", "raise_data_ver2", "(", "self", ",", "uid", ",", "arr_items", ",", "arr_interacts", ")", ":", "\n", "        ", "user_ids", "=", "[", "]", "\n", "items_sequences", "=", "[", "]", "\n", "target_ids", "=", "[", "]", "\n", "# user_reps = []", "\n", "# item_seq_reps = []", "\n", "# item_target_reps = []", "\n", "im_labels", "=", "[", "]", "\n", "ex_labels", "=", "[", "]", "\n", "attn_masks", "=", "[", "]", "\n", "k", "=", "min", "(", "len", "(", "arr_interacts", ")", ",", "len", "(", "arr_items", ")", ")", "\n", "if", "k", ">=", "self", ".", "max_len", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "# t\u1ea1o t\u1eebng \u0111i\u1ec3m d\u1eef li\u1ec7u 1", "\n", "                ", "attn_mask", "=", "[", "1", "]", "\n", "# mask nh\u01b0 nhau trong m\u1ed7i chu\u1ed7i d\u1eef li\u1ec7u", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "j", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "item_truth", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", "+", "1", ")", "]", "\n", "# item_truth_rep = [self.item_representation[arr_items[j]] for j in range(i+1)]", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "# item_truth_rep.append(self.item_representation[-1])", "\n", "", "target_ids", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n", "# item_target_reps.append(self.item_representation[arr_items[i]])", "\n", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "# item_seq_reps.append(item_truth_rep)", "\n", "im_labels", ".", "append", "(", "1", ")", "\n", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "if", "arr_interacts", "[", "i", "]", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "0", ")", "\n", "", "for", "j", "in", "range", "(", "self", ".", "num_neg", ")", ":", "\n", "                    ", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "im_labels", ".", "append", "(", "0", ")", "\n", "ex_labels", ".", "append", "(", "0", ")", "\n", "item_seq", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", ")", "]", "\n", "# item_neg_seq_reps = [self.item_representation[arr_items[j]] for j in range(i)]", "\n", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "while", "(", "uid", ",", "x", ")", "in", "self", ".", "interact_mat", ":", "\n", "                        ", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "", "item_seq", ".", "append", "(", "x", ")", "\n", "# item_neg_seq_reps.append(self.item_representation[x])", "\n", "for", "kk", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                        ", "item_seq", ".", "append", "(", "self", ".", "num_item", ")", "\n", "# item_neg_seq_reps.append(self.item_representation[-1])", "\n", "", "items_sequences", ".", "append", "(", "item_seq", ")", "\n", "# item_seq_reps.append(item_neg_seq_reps)", "\n", "target_ids", ".", "append", "(", "x", ")", "\n", "# item_target_reps.append(self.item_representation[x])", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "# t\u1ea1o t\u1eebng \u0111i\u1ec3m d\u1eef li\u1ec7u 1", "\n", "                ", "attn_mask", "=", "[", "1", "]", "\n", "# mask nh\u01b0 nhau trong m\u1ed7i chu\u1ed7i d\u1eef li\u1ec7u", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "j", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "item_truth", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", "+", "1", ")", "]", "\n", "# item_truth_rep = [self.item_representation[arr_items[j]] for j in range(i+1)]", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "# item_truth_rep.append(self.item_representation[-1])", "\n", "", "target_ids", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n", "# item_target_reps.append(self.item_representation[arr_items[i]])", "\n", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "# item_seq_reps.append(item_truth_rep)", "\n", "im_labels", ".", "append", "(", "1", ")", "\n", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "if", "arr_interacts", "[", "i", "]", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "0", ")", "\n", "", "for", "j", "in", "range", "(", "self", ".", "num_neg", ")", ":", "\n", "                    ", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "im_labels", ".", "append", "(", "0", ")", "\n", "ex_labels", ".", "append", "(", "0", ")", "\n", "item_seq", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", ")", "]", "\n", "# item_neg_seq_reps = [self.item_representation[arr_items[j]] for j in range(i)]", "\n", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "while", "(", "uid", ",", "x", ")", "in", "self", ".", "interact_mat", ":", "\n", "                        ", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "", "item_seq", ".", "append", "(", "x", ")", "\n", "# item_neg_seq_reps.append(self.item_representation[x])", "\n", "for", "kk", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                        ", "item_seq", ".", "append", "(", "self", ".", "num_item", ")", "\n", "# item_neg_seq_reps.append(self.item_representation[-1])", "\n", "", "items_sequences", ".", "append", "(", "item_seq", ")", "\n", "# item_seq_reps.append(item_neg_seq_reps)", "\n", "target_ids", ".", "append", "(", "x", ")", "\n", "# item_target_reps.append(self.item_representation[x])", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "\n", "", "", "", "return", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "ex_labels", ",", "im_labels", ",", "attn_masks", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.data_util.Data_Utils.get_item_rep": [[287, 311], ["f.read.split", "int", "range", "open", "f.read", "data[].strip", "line.split", "int", "[].strip", "ast.literal_eval", "numpy.zeros", "range", "X.append", "[].strip", "len"], "methods", ["None"], ["", "def", "get_item_rep", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ")", "as", "f", ":", "\n", "            ", "data", "=", "f", ".", "read", "(", ")", "\n", "\n", "", "data", "=", "data", ".", "split", "(", "\"\\n\"", ")", "\n", "dimension", "=", "int", "(", "data", "[", "0", "]", ".", "strip", "(", ")", ")", "\n", "data", "=", "data", "[", "1", ":", "-", "1", "]", "\n", "item_repr", "=", "{", "}", "\n", "for", "line", "in", "data", ":", "\n", "            ", "parts", "=", "line", ".", "split", "(", "\"|,|\"", ")", "\n", "id", "=", "int", "(", "parts", "[", "0", "]", "[", "1", ":", "]", ".", "strip", "(", ")", ")", "\n", "arr", "=", "parts", "[", "1", "]", "[", ":", "-", "1", "]", ".", "strip", "(", ")", "\n", "arr", "=", "literal_eval", "(", "arr", ")", "\n", "pos", "=", "[", "a", "[", "0", "]", "for", "a", "in", "arr", "]", "\n", "vl", "=", "[", "a", "[", "1", "]", "for", "a", "in", "arr", "]", "\n", "dense_arr", "=", "np", ".", "zeros", "(", "shape", "=", "(", "dimension", ",", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "pos", ")", ")", ":", "\n", "# print(i)", "\n", "                ", "dense_arr", "[", "pos", "[", "i", "]", "]", "=", "vl", "[", "i", "]", "\n", "", "item_repr", "[", "id", "]", "=", "dense_arr", "\n", "", "X", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_item", ")", ":", "\n", "            ", "X", ".", "append", "(", "item_repr", "[", "i", "]", ")", "\n", "", "return", "X", ",", "dimension", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.data_util.Data_Utils.preprocess_data": [[312, 354], ["open", "progressbar.ProgressBar", "f.readlines", "line.split", "int", "itemids.split.split.split", "interacts.split.split.split", "data_util.Data_Utils.raise_data_no_concat_test", "users_ids.extend", "items_seq.extend", "targets_ids.extend", "implicit_labels.extend", "explicit_labels.extend", "attention_masks.extend", "elements[].strip", "elements[].strip", "arr_items.append", "elements[].strip", "arr_interacts.append", "int", "int", "item.strip", "interact.strip"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.raise_data_no_concat_test"], ["", "def", "preprocess_data", "(", "self", ")", ":", "\n", "        ", "users_ids", "=", "[", "]", "\n", "items_seq", "=", "[", "]", "\n", "targets_ids", "=", "[", "]", "\n", "implicit_labels", "=", "[", "]", "\n", "explicit_labels", "=", "[", "]", "\n", "attention_masks", "=", "[", "]", "\n", "with", "open", "(", "self", ".", "train_path", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "f", ".", "readlines", "(", ")", ")", ":", "\n", "                ", "elements", "=", "line", ".", "split", "(", "'|'", ")", "\n", "uid", "=", "int", "(", "elements", "[", "0", "]", ".", "strip", "(", ")", ")", "\n", "\n", "itemids", "=", "elements", "[", "1", "]", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "\n", "itemids", "=", "itemids", ".", "split", "(", "','", ")", "\n", "arr_items", "=", "[", "]", "\n", "for", "item", "in", "itemids", ":", "\n", "                    ", "arr_items", ".", "append", "(", "int", "(", "item", ".", "strip", "(", ")", ")", ")", "\n", "\n", "", "interacts", "=", "elements", "[", "2", "]", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "\n", "interacts", "=", "interacts", ".", "split", "(", "','", ")", "\n", "arr_interacts", "=", "[", "]", "\n", "for", "interact", "in", "interacts", ":", "\n", "                    ", "arr_interacts", ".", "append", "(", "int", "(", "interact", ".", "strip", "(", ")", ")", ")", "\n", "# print(arr_interacts)", "\n", "# user_ids, item_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, ex_labels, im_labels, attn_masks = \\", "\n", "#             self.raise_data_ver2(uid, arr_items, arr_interacts)", "\n", "# user_ids, item_sequences, target_ids, ex_labels, im_labels, attn_masks = \\", "\n", "#             self.raise_data_ver2(uid, arr_items, arr_interacts)", "\n", "", "user_ids", ",", "item_sequences", ",", "target_ids", ",", "ex_labels", ",", "im_labels", ",", "attn_masks", "=", "self", ".", "raise_data_no_concat_test", "(", "uid", ",", "arr_items", ",", "arr_interacts", ")", "\n", "users_ids", ".", "extend", "(", "user_ids", ")", "\n", "items_seq", ".", "extend", "(", "item_sequences", ")", "\n", "targets_ids", ".", "extend", "(", "target_ids", ")", "\n", "# lst_user_reps.extend(user_reps)", "\n", "# lst_item_seq_reps.extend(item_seq_reps)", "\n", "# lst_item_target_reps.extend(item_target_reps)", "\n", "implicit_labels", ".", "extend", "(", "im_labels", ")", "\n", "explicit_labels", ".", "extend", "(", "ex_labels", ")", "\n", "attention_masks", ".", "extend", "(", "attn_masks", ")", "\n", "# return users_ids, items_seq, targets_ids, lst_user_reps, lst_item_seq_reps,\\", "\n", "#          lst_item_target_reps, implicit_labels, explicit_labels, attention_masks", "\n", "", "", "return", "users_ids", ",", "items_seq", ",", "targets_ids", ",", "implicit_labels", ",", "explicit_labels", ",", "attention_masks", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.data_util.Data_Utils.raise_data_no_concat_test": [[355, 424], ["min", "len", "len", "range", "range", "range", "range", "range", "target_ids.append", "items_sequences.append", "im_labels.append", "user_ids.append", "attn_masks.append", "range", "range", "range", "range", "target_ids.append", "items_sequences.append", "im_labels.append", "user_ids.append", "attn_masks.append", "range", "attn_mask.append", "attn_mask.append", "item_truth.append", "ex_labels.append", "ex_labels.append", "user_ids.append", "im_labels.append", "ex_labels.append", "random.randrange", "items_sequences.append", "target_ids.append", "attn_masks.append", "attn_mask.append", "attn_mask.append", "item_truth.append", "ex_labels.append", "ex_labels.append", "user_ids.append", "im_labels.append", "ex_labels.append", "random.randrange", "items_sequences.append", "target_ids.append", "attn_masks.append", "range", "random.randrange", "range", "random.randrange"], "methods", ["None"], ["", "def", "raise_data_no_concat_test", "(", "self", ",", "uid", ",", "arr_items", ",", "arr_interacts", ")", ":", "\n", "        ", "user_ids", "=", "[", "]", "\n", "items_sequences", "=", "[", "]", "\n", "target_ids", "=", "[", "]", "\n", "im_labels", "=", "[", "]", "\n", "ex_labels", "=", "[", "]", "\n", "attn_masks", "=", "[", "]", "\n", "k", "=", "min", "(", "len", "(", "arr_interacts", ")", ",", "len", "(", "arr_items", ")", ")", "\n", "if", "k", ">=", "self", ".", "max_len", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "# t\u1ea1o t\u1eebng \u0111i\u1ec3m d\u1eef li\u1ec7u", "\n", "                ", "attn_mask", "=", "[", "1", "]", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "j", "in", "range", "(", "i", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "item_truth", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", ")", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "", "target_ids", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "im_labels", ".", "append", "(", "1", ")", "\n", "user_ids", ".", "append", "(", "uid", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "if", "arr_interacts", "[", "i", "]", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "0", ")", "\n", "", "for", "j", "in", "range", "(", "self", ".", "num_neg", ")", ":", "\n", "                    ", "user_ids", ".", "append", "(", "uid", ")", "\n", "im_labels", ".", "append", "(", "0", ")", "\n", "ex_labels", ".", "append", "(", "0", ")", "\n", "# item_seq = [arr_items[j] for j in range(i)]", "\n", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "while", "(", "uid", ",", "x", ")", "in", "self", ".", "interact_mat", ":", "\n", "                        ", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "target_ids", ".", "append", "(", "x", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "                ", "attn_mask", "=", "[", "1", "]", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "j", "in", "range", "(", "i", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "item_truth", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", ")", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "", "target_ids", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "im_labels", ".", "append", "(", "1", ")", "\n", "user_ids", ".", "append", "(", "uid", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "if", "arr_interacts", "[", "i", "]", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "0", ")", "\n", "", "for", "j", "in", "range", "(", "self", ".", "num_neg", ")", ":", "\n", "                    ", "user_ids", ".", "append", "(", "uid", ")", "\n", "im_labels", ".", "append", "(", "0", ")", "\n", "ex_labels", ".", "append", "(", "0", ")", "\n", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "while", "(", "uid", ",", "x", ")", "in", "self", ".", "interact_mat", ":", "\n", "                        ", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "target_ids", ".", "append", "(", "x", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "", "", "", "return", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "ex_labels", ",", "im_labels", ",", "attn_masks", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.data_util.Data_Utils.raise_data_test_no_concat_test": [[425, 462], ["len", "range", "range", "range", "range", "range", "range", "len", "attn_mask.append", "len", "uid_ids.append", "items_sequences.append", "attn_masks.append", "item_seq_truth.append", "attn_mask.append", "attn_mask.append", "len", "uid_ids.append", "items_sequences.append", "attn_masks.append"], "methods", ["None"], ["", "def", "raise_data_test_no_concat_test", "(", "self", ",", "uid", ",", "arr_items", ",", "test_item", ",", "negative_item", ")", ":", "\n", "        ", "uid_ids", "=", "[", "]", "\n", "items_sequences", "=", "[", "]", "\n", "attn_masks", "=", "[", "]", "\n", "target_ids", "=", "negative_item", "+", "[", "test_item", "]", "\n", "labels", "=", "[", "0", "]", "*", "len", "(", "negative_item", ")", "+", "[", "1", "]", "\n", "k", "=", "len", "(", "arr_items", ")", "\n", "if", "k", ">=", "self", ".", "max_len", ":", "\n", "            ", "item_seq_truth", "=", "arr_items", "[", ":", "self", ".", "max_len", "]", "\n", "attn_mask", "=", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "target_ids", ")", ")", ":", "\n", "                ", "uid_ids", ".", "append", "(", "uid", ")", "\n", "items_sequences", ".", "append", "(", "item_seq_truth", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "", "", "else", ":", "\n", "            ", "item_seq_truth", "=", "arr_items", "\n", "for", "j", "in", "range", "(", "k", ",", "self", ".", "max_len", ")", ":", "\n", "                ", "item_seq_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "", "attn_mask", "=", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "i", "in", "range", "(", "k", ",", "self", ".", "max_len", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "target_ids", ")", ")", ":", "\n", "                ", "uid_ids", ".", "append", "(", "uid", ")", "\n", "items_sequences", ".", "append", "(", "item_seq_truth", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "\n", "# print(\"uid:\", np.shape(np.array(uid_ids)))", "\n", "# print(\"item sequence: \", np.shape(np.array(items_sequences)))", "\n", "# print(\"target ids:\", np.shape(np.array(target_ids)))", "\n", "# print(\"attn mask: \", np.shape(np.array(attn_masks)))", "\n", "# print(\"labels: \", np.shape(np.array(labels)))", "\n", "\n", "", "", "return", "uid_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ",", "labels", "", "", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model.CausalSelfAttention.__init__": [[26, 43], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Manager.__init__"], ["\n", "gmf_embedding_weight_user_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_user", ",", "num_factors_gmf", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_gmf", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_user_onehot'", ")", "\n", "gmf_embedding_weight_item_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_item", ",", "num_factors_gmf", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_gmf", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_item_onehot'", ")", "\n", "mlp_embedding_weight_user_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_user", ",", "num_factors_mlp", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_mlp", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_user_onehot'", ")", "\n", "mlp_embedding_weight_item_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_item", ",", "num_factors_mlp", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_mlp", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_item_onehot'", ")", "\n", "\n", "return", "{", "'gmf_user_onehot'", ":", "gmf_embedding_weight_user_onehot", ",", "\n", "'gmf_item_onehot'", ":", "gmf_embedding_weight_item_onehot", ",", "\n", "'mlp_user_onehot'", ":", "mlp_embedding_weight_user_onehot", ",", "\n", "'mlp_item_onehot'", ":", "mlp_embedding_weight_item_onehot", "}", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model.CausalSelfAttention.forward": [[44, 70], ["x.size", "attn_mask1.view().detach().cpu().numpy", "numpy.tile", "numpy.expand_dims", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "model.CausalSelfAttention.key().view().transpose", "model.CausalSelfAttention.query().view().transpose", "model.CausalSelfAttention.value().view().transpose", "model.CausalSelfAttention.masked_fill", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "model.CausalSelfAttention.attn_drop", "model.CausalSelfAttention.transpose().contiguous().view", "model.CausalSelfAttention.resid_drop", "float", "model.CausalSelfAttention.proj", "attn_mask1.view().detach().cpu", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "model.CausalSelfAttention.key().view", "model.CausalSelfAttention.query().view", "model.CausalSelfAttention.value().view", "model.CausalSelfAttention.transpose", "math.sqrt", "model.CausalSelfAttention.transpose().contiguous", "model.CausalSelfAttention.size", "attn_mask1.view().detach", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "model.CausalSelfAttention.key", "model.CausalSelfAttention.query", "model.CausalSelfAttention.value", "model.CausalSelfAttention.transpose", "attn_mask1.view"], "methods", ["None"], ["\n", "", "def", "create_model", "(", "self", ")", ":", "\n", "# custom params", "\n", "        ", "num_user", "=", "self", ".", "params", "[", "'num_user'", "]", "\n", "num_item", "=", "self", ".", "params", "[", "'num_item'", "]", "\n", "# user_pcat_dimension = self.params['user_pcat_dimension']", "\n", "# item_pcat_dimension = self.params['item_pcat_dimension']", "\n", "learning_rate", "=", "self", ".", "params", "[", "'learning_rate'", "]", "\n", "num_factors", "=", "self", ".", "params", "[", "'num_factors'", "]", "\n", "qlambda", "=", "self", ".", "params", "[", "'lambda'", "]", "\n", "eta_1", "=", "self", ".", "params", "[", "'eta_1'", "]", "\n", "eta_2", "=", "self", ".", "params", "[", "'eta_2'", "]", "\n", "batch_size", "=", "self", ".", "params", "[", "'batch_size'", "]", "\n", "# user_dense_shape = [300, 188]", "\n", "# item_dense_shape = [64, 188]", "\n", "global_epoch", "=", "tf", ".", "Variable", "(", "0", ",", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'global_epoch'", ")", "\n", "\n", "with", "tf", ".", "device", "(", "'/gpu:0'", ")", ":", "\n", "            ", "print", "(", "'Chay voi GPU----------------------------------------------------->>>>>>'", ")", "\n", "user_index", ",", "item_index", "=", "ImToEx", ".", "get_place_holder", "(", ")", "\n", "embedding_weight", "=", "ImToEx", ".", "get_embedding_weight", "(", "num_user", ",", "num_item", ",", "num_factors", ")", "\n", "\n", "# -------------------------------- GMF part -------------------------------", "\n", "\n", "gmf_pu_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'gmf_user_onehot'", "]", ",", "user_index", ",", "\n", "name", "=", "\"gmf_pu_onehot\"", ")", "\n", "gmf_qi_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'gmf_item_onehot'", "]", ",", "item_index", ",", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model.Block.__init__": [[74, 84], ["torch.Module.__init__", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "model.CausalSelfAttention", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.GELU", "torch.GELU", "torch.GELU", "torch.GELU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Manager.__init__"], ["\n", "gmf_phi", "=", "tf", ".", "multiply", "(", "gmf_pu", ",", "gmf_qi", ",", "name", "=", "'gmf_phi'", ")", "\n", "gmf_h", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'gmf_h'", ")", "\n", "\n", "# --------------------------------- MLP part --------------------------------", "\n", "mlp_pu_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'mlp_user_onehot'", "]", ",", "user_index", ",", "\n", "name", "=", "\"mlp_pu_onehot\"", ")", "\n", "mlp_qi_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'mlp_item_onehot'", "]", ",", "item_index", ",", "\n", "name", "=", "\"mlp_qi_onehot\"", ")", "\n", "\n", "mlp_pu", "=", "tf", ".", "identity", "(", "mlp_pu_onehot", ",", "name", "=", "'mlp_pu'", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model.Block.forward": [[86, 90], ["model.Block.attn", "model.Block.mlp", "model.Block.ln1", "model.Block.ln2"], "methods", ["None"], ["\n", "mlp_weights", "=", "{", "\n", "'w1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "4", "*", "num_factors", ",", "2", "*", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "1", "/", "num_factors", ")", ",", "\n", "name", "=", "'mlp_weight1'", ")", ",", "\n", "'w2'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", ",", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors", ")", ",", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model.BertIte.__init__": [[92, 122], ["torch.Module.__init__", "torch.FloatTensor.append", "torch.FloatTensor.append", "torch.FloatTensor.append", "torch.FloatTensor.append", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BCELoss", "torch.BCELoss", "torch.BCELoss", "torch.BCELoss", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "model.Block", "range"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Manager.__init__"], ["'h'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'mlp_h'", ")", "\n", "}", "\n", "mlp_biases", "=", "{", "\n", "'b1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", "]", ")", ",", "name", "=", "'mlp_bias1'", ")", ",", "\n", "'b2'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "num_factors", "]", ")", ",", "name", "=", "'mlp_bias2'", ")", "\n", "}", "\n", "\n", "mlp_phi_1", "=", "tf", ".", "concat", "(", "[", "mlp_pu", ",", "mlp_qi", "]", ",", "axis", "=", "-", "1", ",", "name", "=", "'mlp_phi1'", ")", "\n", "mlp_phi_2", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "mlp_phi_1", ",", "mlp_weights", "[", "'w1'", "]", ")", ",", "mlp_biases", "[", "'b1'", "]", ")", ",", "\n", "name", "=", "'mlp_phi2'", ")", "\n", "mlp_phi_3", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "mlp_phi_2", ",", "mlp_weights", "[", "'w2'", "]", ")", ",", "mlp_biases", "[", "'b2'", "]", ")", ",", "\n", "name", "=", "'mlp_phi3'", ")", "\n", "\n", "# --------------------------------- implicit part ------------------------------------", "\n", "# 1 x 2*num_factors", "\n", "im_phi", "=", "tf", ".", "concat", "(", "[", "gmf_phi", ",", "mlp_phi_3", "]", ",", "axis", "=", "1", ",", "name", "=", "'im_phi'", ")", "\n", "# 2*num_factors x 1", "\n", "h_implicit", "=", "tf", ".", "concat", "(", "[", "gmf_h", ",", "mlp_weights", "[", "'h'", "]", "]", ",", "axis", "=", "0", ",", "name", "=", "'h_implicit'", ")", "\n", "# tf.squeeze() 1 x 1", "\n", "im_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "matmul", "(", "im_phi", ",", "h_implicit", ")", ",", "name", "=", "'prediction_implicit'", ")", "\n", "\n", "# --------------------------------- explicit part ------------------------------------", "\n", "ex_weights", "=", "{", "\n", "'w1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", ",", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors", ")", ",", "\n", "name", "=", "'ex_weight1'", ")", ",", "\n", "'h'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'h_explicit'", ")", "\n", "}", "\n", "ex_biases", "=", "{", "\n", "'b1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "num_factors", "]", ")", ",", "name", "=", "'ex_bias1'", ")", ",", "\n", "}", "\n", "# 1 x num_factors", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model.BertIte.forward": [[123, 166], ["time.time", "model.BertIte.embedding_user", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "model.BertIte.embedding_item_repr", "model.BertIte.emb_rep_i", "model.BertIte.embedding_item", "model.BertIte.embedding_item_repr", "model.BertIte.emb_rep_i", "model.BertIte.embedding_item", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "model.BertIte.act_fn", "click.squeeze.squeeze.squeeze", "model.BertIte.act_fn", "model.BertIte.act_fn", "action.squeeze.squeeze.squeeze", "block.forward", "time.time", "model.BertIte.implicit", "model.BertIte.explicit1", "model.BertIte.explicit"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.forward"], ["ex_phi", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "im_phi", ",", "ex_weights", "[", "'w1'", "]", ")", ",", "ex_biases", "[", "'b1'", "]", ")", ",", "name", "=", "'ex_phi'", ")", "\n", "train_ex_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "matmul", "(", "ex_phi", ",", "ex_weights", "[", "'h'", "]", ")", ",", "name", "=", "'train_prediction_explicit'", ")", "\n", "\n", "# ex_prediction = tf.squeeze(tf.multiply(im_prediction, train_ex_prediction), name='prediction_explicit')", "\n", "ex_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "multiply", "(", "tf", ".", "nn", ".", "sigmoid", "(", "im_prediction", ")", ",", "tf", ".", "nn", ".", "sigmoid", "(", "train_ex_prediction", ")", ")", ",", "\n", "name", "=", "'prediction_explicit'", ")", "\n", "# ex_prediction = tf.squeeze(tf.nn.sigmoid(train_ex_prediction), name='prediction_explicit')", "\n", "'''\n            # ---------------------------------- square loss ---------------------------------------------\n            labels = tf.placeholder(tf.float32, shape=[None], name='labels')\n            y1_indicators = tf.placeholder(tf.float32, shape=[None], name='y1_indicators')\n            y2_indicators = tf.placeholder(tf.float32, shape=[None], name='y2_indicators')\n\n            loss_implicit_list = tf.square(tf.subtract(labels, im_prediction), name='y1_loss_list')\n            loss_implicit = tf.reduce_mean(tf.multiply(y1_indicators, loss_implicit_list), name='y1_loss')\n            loss_explicit_list = tf.square(tf.subtract(labels, train_ex_prediction), name='y2_loss_list')\n            loss_explicit = tf.reduce_mean(tf.multiply(y2_indicators, loss_explicit_list), name='y2_loss')\n\n            regularizer = tf.add(tf.add(tf.reduce_mean(tf.square(gmf_pu)), tf.reduce_mean(tf.square(gmf_qi))),\n                                 tf.add(tf.reduce_mean(tf.square(mlp_pu)), tf.reduce_mean(tf.square(mlp_qi))),\n                                 name='regularizer')\n\n            loss = tf.add(tf.add(tf.multiply(eta_1, loss_implicit), loss_explicit), tf.multiply(qlambda, regularizer),\n                          name='loss')\n            '''", "\n", "# ---------------------------------- log loss ---------------------------------------------", "\n", "labels", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'labels'", ")", "\n", "y1_indicators", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'y1_indicators'", ")", "\n", "y2_indicators", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'y2_indicators'", ")", "\n", "\n", "loss_implicit_list", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "labels", ",", "\n", "logits", "=", "im_prediction", ",", "\n", "name", "=", "'y1_loss_list'", ")", "\n", "loss_implicit", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "multiply", "(", "y1_indicators", ",", "loss_implicit_list", ")", ",", "name", "=", "'y1_loss'", ")", "\n", "loss_explicit_list", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "labels", ",", "\n", "logits", "=", "train_ex_prediction", ",", "\n", "name", "=", "'y2_loss_list'", ")", "\n", "loss_explicit", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "multiply", "(", "y2_indicators", ",", "loss_explicit_list", ")", ",", "name", "=", "'y2_loss'", ")", "\n", "\n", "regularizer", "=", "tf", ".", "add", "(", "tf", ".", "add", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "gmf_pu", ")", ")", ",", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "gmf_qi", ")", ")", ")", ",", "\n", "tf", ".", "add", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "mlp_pu", ")", ")", ",", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "mlp_qi", ")", ")", ")", ",", "\n", "name", "=", "'regularizer'", ")", "\n", "\n", "loss", "=", "tf", ".", "add", "(", "tf", ".", "add", "(", "tf", ".", "multiply", "(", "eta_1", ",", "loss_implicit", ")", ",", "loss_explicit", ")", ",", "tf", ".", "multiply", "(", "qlambda", ",", "regularizer", ")", ",", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model.BertIte.compute_loss": [[167, 177], ["model.BertIte.loss_fn", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "model.BertIte.loss_fn", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "click.type", "implicit_labels.type", "action.type", "explicit_labels.type", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add"], ["name", "=", "'loss'", ")", "\n", "\n", "# optimize", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "learning_rate", ")", ".", "minimize", "(", "loss", ",", "name", "=", "'optimize'", ")", "\n", "\n", "# optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(loss_implicit, name='optimize')", "\n", "# optimizer = tf.train.MomentumOptimizer(0.0001, 0.8).minimize(loss, name='optimize')", "\n", "\n", "print", "(", "'--------------->>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<------------------------'", ")", "\n", "return", "{", "\n", "'user_index'", ":", "user_index", ",", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model.Manager.__init__": [[180, 190], ["super().__init__", "config.Config"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Manager.__init__"], ["'labels'", ":", "labels", ",", "\n", "# 'ex_indicators': ex_indicators,", "\n", "'y1_indicators'", ":", "y1_indicators", ",", "\n", "'y2_indicators'", ":", "y2_indicators", ",", "\n", "'loss'", ":", "loss", ",", "\n", "'loss_implicit'", ":", "loss_implicit", ",", "\n", "'loss_explicit'", ":", "loss_explicit", ",", "\n", "'train_ex_prediction'", ":", "train_ex_prediction", ",", "\n", "'prediction_explicit'", ":", "ex_prediction", ",", "\n", "'prediction_implicit'", ":", "im_prediction", ",", "\n", "'h_implicit'", ":", "h_implicit", ",", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model.Manager.train_and_evaluate": [[191, 309], ["data_util.Data_Utils", "data_util.Data_Utils.load_test_data_s_ite", "data_util.Data_Utils.load_negative_data", "data_util.Data_Utils.preprocess_test", "model.to.BertIte", "model.to.to.to", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "print", "model_util.evaluate_model_ver3", "zip", "print", "range", "model.to.to.parameters", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "model.to.to.load_state_dict", "torch.Adam.load_state_dict", "print", "print", "print", "eval_result_data.append", "data_util.Data_Utils.preprocess_data", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.SequentialSampler", "torch.utils.data.SequentialSampler", "torch.utils.data.SequentialSampler", "torch.utils.data.SequentialSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "print", "model.to.to.train", "print", "open", "log.write", "terminaltables.AsciiTable", "len", "progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "batch[].to", "batch[].to", "batch[].to", "batch[].to", "batch[].to", "batch[].to", "model.to.to.zero_grad", "model.to.to.forward", "model.to.to.compute_loss", "model.to.compute_loss.backward", "torch.Adam.step", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "model_util.evaluate_model_ver3", "zip", "print", "str", "print", "print", "eval_result_data.append", "str", "terminaltables.AsciiTable", "model.to.to.state_dict", "torch.Adam.state_dict", "open", "log.write", "terminaltables.AsciiTable", "str", "terminaltables.AsciiTable"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_test_data_s_ite", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_negative_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.preprocess_test", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.evaluate_model_ver3", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.preprocess_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.train", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.forward", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.compute_loss", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.evaluate_model_ver3"], ["'global_epoch'", ":", "global_epoch", "\n", "}", "\n", "\n", "\n", "\n", "\n", "", "", "", "def", "training_batch_size", "(", "batch_size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "num_factor", "=", "8", "\n", "eta", "=", "0.5", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/batch_size/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/batch_size/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "0.001", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "\n", "\n", "", "def", "training_num_factors", "(", "num_factor", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "batch_size", "=", "2048", "\n", "eta", "=", "0.1", "\n", "lr", "=", "0.005", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/num_factor/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "lr", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/num_factor/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "lr", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "lr", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "\n", "\n", "", "def", "training_eta", "(", "eta", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "num_factor", "=", "8", "\n", "batch_size", "=", "512", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/eta/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "num_negatives", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/eta/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "0.001", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model_util.get_hit_ratio": [[8, 13], ["None"], "function", ["None"], ["def", "get_hit_ratio", "(", "rank_list", ",", "gt_item", ")", ":", "\n", "    ", "for", "item", "in", "rank_list", ":", "\n", "        ", "if", "item", "==", "gt_item", ":", "\n", "            ", "return", "1.0", "\n", "", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model_util.get_ndcg": [[14, 20], ["range", "len", "math.log", "math.log"], "function", ["None"], ["", "def", "get_ndcg", "(", "rank_list", ",", "gt_item", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "len", "(", "rank_list", ")", ")", ":", "\n", "        ", "item", "=", "rank_list", "[", "i", "]", "\n", "if", "item", "==", "gt_item", ":", "\n", "            ", "return", "math", ".", "log", "(", "2", ")", "/", "math", ".", "log", "(", "i", "+", "2", ")", "\n", "", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model_util.evaluate_model": [[21, 30], ["progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "model_util.eval_one_rating", "hits.append", "ndcgs.append", "numpy.array().mean", "numpy.array().mean", "len", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.eval_one_rating"], ["", "def", "evaluate_model", "(", "model", ",", "top_k", ",", "data", ",", "device", ")", ":", "\n", "    ", "hits", ",", "ndcgs", "=", "[", "]", ",", "[", "]", "\n", "widgets", "=", "[", "progressbar", ".", "Percentage", "(", ")", ",", "\" \"", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "\" \"", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "\n", "for", "idx", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "len", "(", "data", ")", ")", ")", ":", "\n", "        ", "hr", ",", "ndcg", "=", "eval_one_rating", "(", "model", ",", "idx", ",", "top_k", ",", "data", "[", "idx", "]", ",", "device", ")", "\n", "hits", ".", "append", "(", "hr", ")", "\n", "ndcgs", ".", "append", "(", "ndcg", ")", "\n", "", "return", "np", ".", "array", "(", "hits", ")", ".", "mean", "(", ")", ",", "np", ".", "array", "(", "ndcgs", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model_util.eval_one_rating": [[31, 64], ["model.to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "model.eval", "model.forward", "torch.mul().detach().cpu().numpy", "range", "len", "heapq.nlargest", "model_util.get_hit_ratio", "model_util.get_ndcg", "list_hr.append", "list_ndcg.append", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.mul().detach().cpu", "torch.mul().detach", "torch.mul"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.forward", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_hit_ratio", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_ndcg"], ["", "def", "eval_one_rating", "(", "model", ",", "idx", ",", "top_k", ",", "data", ",", "device", ")", ":", "\n", "# model = model.to(\"cpu\")", "\n", "    ", "model", ".", "to", "(", "device", ")", "\n", "# user_ids, items_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, labels, items, attn_masks = \\", "\n", "#         data[\"user_ids\"], data[\"item_sequences\"], data[\"target_ids\"], data[\"user_reps\"], data[\"item_seq_reps\"], data[\"item_target_reps\"],\\", "\n", "#              data[\"labels\"], data[\"items\"], data[\"attn_masks\"]", "\n", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "labels", ",", "items", ",", "attn_masks", "=", "data", "[", "\"user_ids\"", "]", ",", "data", "[", "\"items_sequences\"", "]", ",", "data", "[", "\"target_ids\"", "]", ",", "data", "[", "\"labels\"", "]", ",", "data", "[", "\"items\"", "]", ",", "data", "[", "\"attn_masks\"", "]", "\n", "user_ids", "=", "torch", ".", "tensor", "(", "user_ids", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "items_sequences", "=", "torch", ".", "tensor", "(", "items_sequences", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "target_ids", "=", "torch", ".", "tensor", "(", "target_ids", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "attn_masks", "=", "torch", ".", "tensor", "(", "attn_masks", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "test_item", "=", "target_ids", "[", "-", "1", "]", "\n", "model", ".", "eval", "(", ")", "\n", "# click, action = model.forward(user_ids, items_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, attn_masks)", "\n", "click", ",", "action", "=", "model", ".", "forward", "(", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ")", "\n", "\n", "rating", "=", "torch", ".", "mul", "(", "click", ",", "action", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "# print(rating)", "\n", "map_score_item", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "user_ids", ")", ")", ":", "\n", "        ", "item", "=", "items", "[", "i", "]", "\n", "# print(item)", "\n", "map_score_item", "[", "item", "]", "=", "rating", "[", "i", "]", "\n", "", "list_hr", ",", "list_ndcg", "=", "[", "]", ",", "[", "]", "\n", "for", "tk", "in", "top_k", ":", "\n", "        ", "rank_list", "=", "heapq", ".", "nlargest", "(", "tk", ",", "map_score_item", ",", "key", "=", "map_score_item", ".", "get", ")", "\n", "\n", "hr", "=", "get_hit_ratio", "(", "rank_list", ",", "test_item", ")", "\n", "ndcg", "=", "get_ndcg", "(", "rank_list", ",", "test_item", ")", "\n", "list_hr", ".", "append", "(", "hr", ")", "\n", "list_ndcg", ".", "append", "(", "ndcg", ")", "\n", "", "return", "list_hr", ",", "list_ndcg", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model_util.evaluate_model_ver3": [[66, 83], ["zip", "hits.append", "ndcgs.append", "progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "model_util.eval_one_rating_ver3", "enumerate", "reshit.append", "resndcg.append", "len", "zip", "hits[].append", "ndcgs[].append", "numpy.array().mean", "numpy.array().mean", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.eval_one_rating_ver3"], ["", "def", "evaluate_model_ver3", "(", "model", ",", "top_k", ",", "data", ",", "device", ")", ":", "\n", "    ", "hits", ",", "ndcgs", "=", "[", "]", ",", "[", "]", "\n", "reshit", ",", "resndcg", "=", "[", "]", ",", "[", "]", "\n", "for", "tk", "in", "top_k", ":", "\n", "        ", "hits", ".", "append", "(", "[", "]", ")", "\n", "ndcgs", ".", "append", "(", "[", "]", ")", "\n", "", "widgets", "=", "[", "progressbar", ".", "Percentage", "(", ")", ",", "\" \"", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "\" \"", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "\n", "for", "idx", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "len", "(", "data", ")", ")", ")", ":", "\n", "        ", "lst_hr", ",", "lst_ndcg", "=", "eval_one_rating_ver3", "(", "model", ",", "idx", ",", "top_k", ",", "data", "[", "idx", "]", ",", "device", ")", "\n", "for", "i", ",", "(", "hr", ",", "ndcg", ")", "in", "enumerate", "(", "zip", "(", "lst_hr", ",", "lst_ndcg", ")", ")", ":", "\n", "            ", "hits", "[", "i", "]", ".", "append", "(", "hr", ")", "\n", "ndcgs", "[", "i", "]", ".", "append", "(", "ndcg", ")", "\n", "", "", "for", "lh", ",", "ln", "in", "zip", "(", "hits", ",", "ndcgs", ")", ":", "\n", "        ", "reshit", ".", "append", "(", "np", ".", "array", "(", "lh", ")", ".", "mean", "(", ")", ")", "\n", "resndcg", ".", "append", "(", "np", ".", "array", "(", "ln", ")", ".", "mean", "(", ")", ")", "\n", "", "return", "reshit", ",", "resndcg", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_item_pcat.model_util.eval_one_rating_ver3": [[84, 113], ["model.to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "model.eval", "model.forward", "torch.mul().detach().cpu().numpy", "range", "len", "heapq.nlargest", "model_util.get_hit_ratio", "model_util.get_ndcg", "list_hr.append", "list_ndcg.append", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.mul().detach().cpu", "torch.mul().detach", "torch.mul"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.forward", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_hit_ratio", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_ndcg"], ["", "def", "eval_one_rating_ver3", "(", "model", ",", "idx", ",", "top_k", ",", "data", ",", "device", ")", ":", "\n", "# model = model.to(\"cpu\")", "\n", "    ", "model", ".", "to", "(", "device", ")", "\n", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ",", "labels", ",", "items", "=", "data", "[", "\"user_ids\"", "]", ",", "data", "[", "\"items_sequences\"", "]", ",", "data", "[", "\"target_ids\"", "]", ",", "data", "[", "\"attn_masks\"", "]", ",", "data", "[", "\"labels\"", "]", ",", "data", "[", "\"items\"", "]", "\n", "user_ids", "=", "torch", ".", "tensor", "(", "user_ids", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "items_sequences", "=", "torch", ".", "tensor", "(", "items_sequences", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "target_ids", "=", "torch", ".", "tensor", "(", "target_ids", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "attn_masks", "=", "torch", ".", "tensor", "(", "attn_masks", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "test_item", "=", "target_ids", "[", "-", "1", "]", "\n", "model", ".", "eval", "(", ")", "\n", "click", ",", "action", "=", "model", ".", "forward", "(", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ")", "\n", "rating", "=", "torch", ".", "mul", "(", "click", ",", "action", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "# print(rating)", "\n", "map_score_item", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "user_ids", ")", ")", ":", "\n", "        ", "item", "=", "items", "[", "i", "]", "\n", "# print(item)", "\n", "map_score_item", "[", "item", "]", "=", "rating", "[", "i", "]", "\n", "\n", "", "list_hr", ",", "list_ndcg", "=", "[", "]", ",", "[", "]", "\n", "for", "tk", "in", "top_k", ":", "\n", "        ", "rank_list", "=", "heapq", ".", "nlargest", "(", "tk", ",", "map_score_item", ",", "key", "=", "map_score_item", ".", "get", ")", "\n", "\n", "hr", "=", "get_hit_ratio", "(", "rank_list", ",", "test_item", ")", "\n", "ndcg", "=", "get_ndcg", "(", "rank_list", ",", "test_item", ")", "\n", "list_hr", ".", "append", "(", "hr", ")", "\n", "list_ndcg", ".", "append", "(", "ndcg", ")", "\n", "", "return", "list_hr", ",", "list_ndcg", "", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.json_string_to_tensorflow_sparse_vector": [[6, 32], ["json.loads", "numpy.array", "numpy.array", "len", "numpy.array", "numpy.array", "len", "indices.append", "values.append", "numpy.array", "numpy.array"], "function", ["None"], ["def", "json_string_to_tensorflow_sparse_vector", "(", "string_vector", ")", ":", "\n", "    ", "\"\"\"Convert string to sparse vector\n\n    Parameters\n    ----------\n    string_vector : str\n        string_vector to be converted\n\n    Examples\n    ---------\n    >>> string_vector = '[[1, 0.123232], [2, 5.34234234]]'\n    >>> json_string_to_tensorflow_sparse_vector(string_vector)\n    [1, 2], [0.123232, 5.34234234])\n    \"\"\"", "\n", "indices", "=", "[", "]", "\n", "values", "=", "[", "]", "\n", "if", "string_vector", "is", "None", "or", "len", "(", "string_vector", ")", "<", "1", ":", "\n", "        ", "return", "np", ".", "array", "(", "[", "0", "]", ",", "dtype", "=", "np", ".", "int64", ")", ",", "np", ".", "array", "(", "[", "0", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "list_vector", "=", "json", ".", "loads", "(", "string_vector", ")", "\n", "if", "len", "(", "list_vector", ")", "==", "0", ":", "\n", "            ", "return", "np", ".", "array", "(", "[", "0", "]", ",", "dtype", "=", "np", ".", "int64", ")", ",", "np", ".", "array", "(", "[", "0", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "for", "kv", "in", "list_vector", ":", "\n", "            ", "indices", ".", "append", "(", "kv", "[", "0", "]", ")", "\n", "values", ".", "append", "(", "kv", "[", "1", "]", ")", "\n", "", "", "return", "np", ".", "array", "(", "indices", ",", "dtype", "=", "np", ".", "int64", ")", ",", "np", ".", "array", "(", "values", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.list_sparse_vector_to_json_string": [[34, 60], ["json.dumps", "list_sparse.append", "int", "float"], "function", ["None"], ["", "def", "list_sparse_vector_to_json_string", "(", "sv", ")", ":", "\n", "# type: (list) -> str", "\n", "    ", "\"\"\"Convert vector in the form list of (int, float) to string\n\n    Parameters\n    ----------\n    sv : list of (int, float)\n        sparse_vector to be converted\n\n    Examples\n    ---------\n    >>> sparse_vector = [(1, 0.123232), (2, 5.34234234)]\n    >>> list_sparse_vector_to_json_string(sparse_vector)\n    '[[1, 0.123232], [2, 5.34234234]]'\n    \"\"\"", "\n", "\n", "temp_sum", "=", "0", "\n", "list_sparse", "=", "[", "]", "\n", "\n", "for", "item", "in", "sv", ":", "\n", "        ", "temp_sum", "+=", "item", "[", "1", "]", "\n", "\n", "", "for", "item", "in", "sv", ":", "\n", "        ", "list_sparse", ".", "append", "(", "[", "int", "(", "item", "[", "0", "]", ")", ",", "float", "(", "item", "[", "1", "]", "/", "temp_sum", ")", "]", ")", "\n", "\n", "", "return", "json", ".", "dumps", "(", "list_sparse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.dict_sparse_vector_to_json_string": [[62, 85], ["sum", "sv.keys", "sorted", "json.dumps", "sv.values", "sv.keys", "list_sparse.append", "int", "float", "sv.get"], "function", ["None"], ["", "def", "dict_sparse_vector_to_json_string", "(", "sv", ")", ":", "\n", "# type: (dict) -> str", "\n", "    ", "\"\"\"Convert vector in the form dict of (int, float) to string\n\n    Parameters\n    ----------\n    sv : dict of int, float\n        sparse_vector to be converted\n\n    Examples\n    ---------\n    >>> sparse_vector = {1: 0.123232, 2: 5.34234234}\n    >>> dict_sparse_vector_to_string(sparse_vector)\n    '[[1, 0.123232], [2, 5.34234234]]'\n    \"\"\"", "\n", "\n", "s", "=", "sum", "(", "sv", ".", "values", "(", ")", ")", "\n", "for", "key", "in", "sv", ".", "keys", "(", ")", ":", "\n", "        ", "sv", "[", "key", "]", "/=", "s", "\n", "", "list_sparse", "=", "[", "]", "\n", "for", "key", "in", "sorted", "(", "sv", ".", "keys", "(", ")", ")", ":", "\n", "        ", "list_sparse", ".", "append", "(", "[", "int", "(", "key", ")", ",", "float", "(", "sv", ".", "get", "(", "key", ")", ")", "]", ")", "\n", "", "return", "json", ".", "dumps", "(", "list_sparse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.json_string_to_dense_vector": [[87, 102], ["numpy.zeros", "json.loads", "len"], "function", ["None"], ["", "def", "json_string_to_dense_vector", "(", "string_vector", ",", "dimension", ")", ":", "\n", "    ", "\"\"\"\n    Chuyen vector thua dang string: [[9, 0.010176822], [118, 0.010578092], [264, 0.020403702]]\n    ve vector thuong K chieu cua numpy\n    \"\"\"", "\n", "\n", "vector", "=", "np", ".", "zeros", "(", "dimension", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "if", "string_vector", "is", "None", "or", "len", "(", "string_vector", ")", "<", "1", ":", "\n", "        ", "return", "vector", "\n", "\n", "", "x", "=", "json", ".", "loads", "(", "string_vector", ")", "\n", "\n", "for", "element", "in", "x", ":", "\n", "        ", "vector", "[", "element", "[", "0", "]", "]", "=", "element", "[", "1", "]", "\n", "", "return", "vector", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.dense_vector_to_list_sparse_vector": [[104, 116], ["len", "range", "list_temp.append", "float"], "function", ["None"], ["", "def", "dense_vector_to_list_sparse_vector", "(", "vector", ",", "threshold", ")", ":", "\n", "    ", "\"\"\"\n    Chuyen vector np ve vector thua dang string: [[9, 0.010176822], [118, 0.010578092], [264, 0.020403702]]\n    \"\"\"", "\n", "K", "=", "len", "(", "vector", ")", "\n", "# threshold = 1e-6", "\n", "\n", "list_temp", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "K", ")", ":", "\n", "        ", "if", "vector", "[", "i", "]", ">", "threshold", ":", "\n", "            ", "list_temp", ".", "append", "(", "[", "i", ",", "float", "(", "vector", "[", "i", "]", ")", "]", ")", "\n", "", "", "return", "list_temp", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.dense_vector_to_json_string": [[118, 140], ["len", "range", "json.dumps", "range", "float", "list_temp.append", "len"], "function", ["None"], ["", "def", "dense_vector_to_json_string", "(", "dense_sv", ",", "threshold", "=", "0", ",", "normalizing", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n\n        Parameters\n        ----------\n        threshold: float\n        normalizing: bool\n        \"\"\"", "\n", "K", "=", "len", "(", "dense_sv", ")", "\n", "# threshold = 1e-6", "\n", "\n", "temp_sum", "=", "0", "\n", "list_temp", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "K", ")", ":", "\n", "        ", "if", "dense_sv", "[", "i", "]", ">", "threshold", ":", "\n", "            ", "v", "=", "float", "(", "dense_sv", "[", "i", "]", ")", "\n", "list_temp", ".", "append", "(", "[", "i", ",", "v", "]", ")", "\n", "temp_sum", "+=", "v", "\n", "", "", "if", "normalizing", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "list_temp", ")", ")", ":", "\n", "            ", "list_temp", "[", "i", "]", "[", "1", "]", "/=", "temp_sum", "\n", "", "", "return", "json", ".", "dumps", "(", "list_temp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.weighted_sum": [[142, 159], ["sparse_vector.json_string_to_dense_vector", "sparse_vector.json_string_to_dense_vector", "sparse_vector.dense_vector_to_json_string"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.json_string_to_dense_vector", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.json_string_to_dense_vector", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.dense_vector_to_json_string"], ["", "def", "weighted_sum", "(", "sv1", ",", "sv2", ",", "sv1_weight", ",", "dimension", ",", "threshold", "=", "0", ")", ":", "\n", "    ", "\"\"\"Sum two sparse vectors\n\n    Parameters\n    ----------\n    sv1, sv2: str\n        sparse_vector\n    sv1_weight: float\n        weight for sv1\n    dimension: int\n        dimension for dense vector\n    threshold: float\n    \"\"\"", "\n", "dense_vec_1", "=", "json_string_to_dense_vector", "(", "sv1", ",", "dimension", ")", "\n", "dense_vec_2", "=", "json_string_to_dense_vector", "(", "sv2", ",", "dimension", ")", "\n", "sum_sv", "=", "sv1_weight", "*", "dense_vec_1", "+", "(", "1", "-", "sv1_weight", ")", "*", "dense_vec_2", "\n", "return", "dense_vector_to_json_string", "(", "sum_sv", ",", "threshold", ",", "normalizing", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.sum_with_count": [[161, 167], ["sparse_vector.json_string_to_dense_vector", "sparse_vector.json_string_to_dense_vector", "sparse_vector.dense_vector_to_json_string"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.json_string_to_dense_vector", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.json_string_to_dense_vector", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.dense_vector_to_json_string"], ["", "def", "sum_with_count", "(", "sv1_with_count", ",", "sv2_with_count", ",", "dimension", ",", "threshold", "=", "0", ")", ":", "\n", "    ", "dense_vec_1", "=", "json_string_to_dense_vector", "(", "sv1_with_count", "[", "0", "]", ",", "dimension", ")", "\n", "dense_vec_2", "=", "json_string_to_dense_vector", "(", "sv2_with_count", "[", "0", "]", ",", "dimension", ")", "\n", "sum_sv", "=", "dense_vec_1", "+", "dense_vec_2", "\n", "sum_count", "=", "sv1_with_count", "[", "1", "]", "+", "sv2_with_count", "[", "1", "]", "\n", "return", "dense_vector_to_json_string", "(", "sum_sv", ",", "threshold", ",", "normalizing", "=", "False", ")", ",", "sum_count", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add": [[169, 180], ["None"], "function", ["None"], ["", "def", "add", "(", "sv1", ",", "sv2", ",", "old_vector_weight", "=", "0.25", ")", ":", "\n", "    ", "\"\"\"Sum two sparse vectors\n\n    Parameters\n    ----------\n    sv1, sv2: list of float\n        sparse_vector\n    old_vector_weight: weight for sv1\n    \"\"\"", "\n", "sum_sv", "=", "old_vector_weight", "*", "sv1", "+", "(", "1", "-", "old_vector_weight", ")", "*", "sv2", "\n", "return", "sum_sv", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add_avg": [[182, 186], ["None"], "function", ["None"], ["", "def", "add_avg", "(", "sv1", ",", "sv2", ")", ":", "\n", "    ", "sum_sv", "=", "sv1", "[", "0", "]", "+", "sv2", "[", "0", "]", "\n", "num_banners", "=", "sv1", "[", "1", "]", "+", "sv2", "[", "1", "]", "\n", "return", "sum_sv", ",", "num_banners", "\n", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.retailrocket_data.gen_cleaned_data": [[19, 42], ["logging.info", "open", "open", "csv.writer", "csv.writer", "open.close", "open.close", "open", "csv.reader", "next", "csv.writer.writerow", "csv.writer.writerow"], "function", ["None"], ["def", "gen_cleaned_data", "(", "input_file", ",", "cleaned_implicit_data_path", ",", "cleaned_explicit_data_path", ")", ":", "\n", "    ", "logging", ".", "info", "(", "'Gen raw data'", ")", "\n", "\n", "implicit_output", "=", "open", "(", "cleaned_implicit_data_path", ",", "'w'", ")", "\n", "explicit_output", "=", "open", "(", "cleaned_explicit_data_path", ",", "'w'", ")", "\n", "csv_writer_implicit", "=", "csv", ".", "writer", "(", "implicit_output", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "csv_writer_explicit", "=", "csv", ".", "writer", "(", "explicit_output", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "\n", "with", "open", "(", "input_file", ",", "'r'", ")", "as", "file", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "file", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "line", "=", "next", "(", "csv_reader", ")", "# skip header", "\n", "for", "line", "in", "csv_reader", ":", "\n", "            ", "timestamp", "=", "line", "[", "0", "]", "\n", "raw_uid", "=", "line", "[", "1", "]", "\n", "event", "=", "line", "[", "2", "]", "\n", "raw_item_id", "=", "line", "[", "3", "]", "\n", "csv_writer_implicit", ".", "writerow", "(", "[", "raw_uid", ",", "raw_item_id", ",", "timestamp", "]", ")", "\n", "if", "(", "event", "==", "'transaction'", ")", "or", "(", "event", "==", "'addtocart'", ")", ":", "\n", "                ", "csv_writer_explicit", ".", "writerow", "(", "[", "raw_uid", ",", "raw_item_id", ",", "timestamp", "]", ")", "\n", "# ghi tat ca interact vao file implicit de loai bo black list user cho chinh xac", "\n", "\n", "", "", "", "implicit_output", ".", "close", "(", ")", "\n", "explicit_output", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.retailrocket_data.construct_pcat_repr": [[44, 82], ["print", "print", "print", "open", "len", "open", "len", "open", "next", "print", "open", "f.write", "csv.writer", "line.split", "line.strip().split", "int", "retailrocket_data.banner_cats_to_vector", "src.data_preparation.sparse_vector.dict_sparse_vector_to_json_string", "csv.writer.writerow", "line.split", "item_dict[].append", "int", "str", "int", "int", "line.strip"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.metadata_preparation.banner_cats_to_vector", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.dict_sparse_vector_to_json_string"], ["", "def", "construct_pcat_repr", "(", ")", ":", "\n", "    ", "with", "open", "(", "root_path", "+", "'i2index.txt'", ")", "as", "f", ":", "\n", "        ", "active_item_list", "=", "[", "line", ".", "split", "(", "','", ")", "[", "0", "]", "for", "line", "in", "f", "]", "\n", "", "print", "(", "len", "(", "active_item_list", ")", ")", "\n", "\n", "item_dict", "=", "{", "}", "\n", "with", "open", "(", "root_path", "+", "'i2pcat.txt'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "item_id", ",", "pcat", "=", "line", ".", "split", "(", "','", ")", "\n", "if", "item_id", "not", "in", "item_dict", ":", "\n", "                ", "item_dict", "[", "item_id", "]", "=", "[", "int", "(", "pcat", ")", "]", "\n", "", "else", ":", "\n", "                ", "item_dict", "[", "item_id", "]", ".", "append", "(", "int", "(", "pcat", ")", ")", "\n", "", "", "", "print", "(", "len", "(", "item_dict", ")", ")", "\n", "cat2parent", "=", "{", "}", "\n", "max_cat", "=", "0", "\n", "with", "open", "(", "root_path", "+", "'raw_data/category_tree.csv'", ",", "newline", "=", "''", ")", "as", "f", ":", "\n", "        ", "next", "(", "f", ")", "\n", "for", "line", "in", "f", ":", "\n", "            ", "cat", ",", "parent", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "cat", "=", "int", "(", "cat", ")", "\n", "if", "cat", ">", "max_cat", ":", "\n", "                ", "max_cat", "=", "cat", "\n", "", "if", "parent", "!=", "''", ":", "\n", "                ", "parent", "=", "int", "(", "parent", ")", "\n", "if", "parent", ">", "max_cat", ":", "\n", "                    ", "max_cat", "=", "parent", "\n", "", "cat2parent", "[", "cat", "]", "=", "parent", "\n", "", "", "", "if", "231", "in", "cat2parent", ":", "\n", "        ", "print", "(", "'huhu'", ")", "\n", "", "with", "open", "(", "root_path", "+", "'item_repr.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "str", "(", "max_cat", "+", "1", ")", "+", "'\\n'", ")", "\n", "csv_writer", "=", "csv", ".", "writer", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "'|'", ",", "quoting", "=", "csv", ".", "QUOTE_ALL", ")", "\n", "for", "item_id", "in", "item_dict", ":", "\n", "            ", "sp_vec", "=", "banner_cats_to_vector", "(", "item_dict", "[", "item_id", "]", ",", "cat2parent", ")", "\n", "sp_repr", "=", "sparse_vector", ".", "dict_sparse_vector_to_json_string", "(", "sp_vec", ")", "\n", "csv_writer", ".", "writerow", "(", "(", "item_id", ",", "sp_repr", ")", ")", "\n", "", "", "print", "(", "'Done infer pcat repr of retail_rocket items !'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.retailrocket_data.banner_cats_to_vector": [[84, 93], ["src.data_preparation.sparse_vector.normalize"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.metadata_preparation.normalize"], ["", "def", "banner_cats_to_vector", "(", "cats", ",", "cat_to_parent_cat", ")", ":", "\n", "    ", "sv", "=", "{", "}", "\n", "for", "cat", "in", "cats", ":", "\n", "        ", "sv", "[", "cat", "]", "=", "1.0", "\n", "while", "cat", "in", "cat_to_parent_cat", ":", "\n", "            ", "cat", "=", "cat_to_parent_cat", "[", "cat", "]", "\n", "sv", "[", "cat", "]", "=", "1.0", "\n", "", "", "banner_spare_vector", "=", "sparse_vector", ".", "normalize", "(", "sv", ")", "\n", "return", "banner_spare_vector", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.retailrocket_data.main": [[95, 123], ["subprocess.call", "logging.info"], "function", ["None"], ["", "def", "main", "(", ")", ":", "\n", "# data_path = settings.DATA_ROOT_PATH + \"site_data/\" + data_name + \"/raw_data/events_purchase.csv\"", "\n", "    ", "data_path", "=", "root_path", "+", "'raw_data/new_events.csv'", "\n", "\n", "cleaned_implicit_data_path", "=", "root_path", "+", "'_implicit.clean.txt'", "\n", "cleaned_explicit_data_path", "=", "root_path", "+", "'_explicit.clean.txt'", "\n", "\n", "user_index_dict", "=", "root_path", "+", "'u2index.txt'", "\n", "item_index_dict", "=", "root_path", "+", "'i2index.txt'", "\n", "combined_data", "=", "root_path", "+", "'ratings.txt'", "\n", "output_root_name", "=", "root_path", "+", "'scene_1/'", "\n", "\n", "# # Tao ra implicit va explicit file", "\n", "# gen_cleaned_data(data_path, cleaned_implicit_data_path, cleaned_explicit_data_path)", "\n", "# logging.info('--> Done, gen_cleaned_data')", "\n", "\n", "# # Danh lai so thu tu cho user, item, cac user co tuong tac trong file implicit < 5 bi loai", "\n", "# # Tao du lieu co explicit chac chan se co implicit", "\n", "# data_preparation.gen_ratings_data_with_explicit(cleaned_implicit_data_path, cleaned_explicit_data_path,", "\n", "#                                                 user_index_dict, item_index_dict, combined_data)", "\n", "# logging.info('--> Done, gen_ratings_data_with_explicit')", "\n", "#", "\n", "# # div train test data with explicit", "\n", "# data_preparation.div_train_test_data_with_explicit(combined_data, output_root_name)", "\n", "# logging.info('--> Done, div_train_test_data_with_explicit')", "\n", "\n", "subprocess", ".", "call", "(", "[", "'bash'", ",", "'bin/split.sh'", ",", "output_root_name", "]", ")", "\n", "logging", ".", "info", "(", "\"--> Done, split_train_data_into_partition\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.metadata_preparation.construct_item_vector": [[18, 49], ["pandas.read_csv", "list", "len", "list", "len", "list", "len", "list", "len", "set", "set", "set", "set", "open", "open", "open", "open", "range", "range", "range", "range", "f.write", "f.write", "f.write", "f.write", "len", "len", "len", "len", "str", "str", "str", "str"], "function", ["None"], ["def", "construct_item_vector", "(", ")", ":", "\n", "    ", "data_name", "=", "'recobell/'", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "'site_data/'", "+", "data_name", "\n", "item_recobell_df", "=", "pd", ".", "read_csv", "(", "root_path", "+", "'raw_data/site_product.csv000'", ",", "\n", "header", "=", "None", ",", "\n", "names", "=", "[", "'itemid'", ",", "'price'", ",", "'cat1'", ",", "'cat2'", ",", "'cat3'", ",", "'cat4'", ",", "'brandid'", "]", ")", "\n", "\n", "cat_1_list", "=", "list", "(", "set", "(", "item_recobell_df", ".", "cat1", ")", ")", "\n", "cat_1_dict", "=", "{", "cat_1_list", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "cat_1_list", ")", ")", "}", "\n", "a", "=", "len", "(", "cat_1_list", ")", "\n", "cat_2_list", "=", "list", "(", "set", "(", "item_recobell_df", ".", "cat2", ")", ")", "\n", "cat_2_dict", "=", "{", "cat_2_list", "[", "i", "]", ":", "i", "+", "a", "for", "i", "in", "range", "(", "len", "(", "cat_2_list", ")", ")", "}", "\n", "a", "+=", "len", "(", "cat_2_list", ")", "\n", "cat_3_list", "=", "list", "(", "set", "(", "item_recobell_df", ".", "cat3", ")", ")", "\n", "cat_3_dict", "=", "{", "cat_3_list", "[", "i", "]", ":", "i", "+", "a", "for", "i", "in", "range", "(", "len", "(", "cat_3_list", ")", ")", "}", "\n", "a", "+=", "len", "(", "cat_3_list", ")", "\n", "cat_4_list", "=", "list", "(", "set", "(", "item_recobell_df", ".", "cat4", ")", ")", "\n", "cat_4_dict", "=", "{", "cat_4_list", "[", "i", "]", ":", "i", "+", "a", "for", "i", "in", "range", "(", "len", "(", "cat_4_list", ")", ")", "}", "\n", "a", "+=", "len", "(", "cat_4_list", ")", "\n", "with", "open", "(", "'../../data/recobell_cat1_index.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "k", "in", "cat_1_dict", ":", "\n", "            ", "f", ".", "write", "(", "k", "+", "','", "+", "str", "(", "cat_1_dict", "[", "k", "]", ")", "+", "'\\n'", ")", "\n", "", "", "with", "open", "(", "'../../data/recobell_cat2_index.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "k", "in", "cat_2_dict", ":", "\n", "            ", "f", ".", "write", "(", "k", "+", "','", "+", "str", "(", "cat_2_dict", "[", "k", "]", ")", "+", "'\\n'", ")", "\n", "", "", "with", "open", "(", "'../../data/recobell_cat3_index.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "k", "in", "cat_3_dict", ":", "\n", "            ", "f", ".", "write", "(", "k", "+", "','", "+", "str", "(", "cat_3_dict", "[", "k", "]", ")", "+", "'\\n'", ")", "\n", "", "", "with", "open", "(", "'../../data/recobell_cat4_index.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "k", "in", "cat_4_dict", ":", "\n", "            ", "f", ".", "write", "(", "k", "+", "','", "+", "str", "(", "cat_4_dict", "[", "k", "]", ")", "+", "'\\n'", ")", "\n", "# cat_1_dict = {}", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.metadata_preparation.load_cat_parent_cat_to_dict": [[80, 88], ["open", "line.strip().split", "int", "line.strip", "int"], "function", ["None"], ["", "", "", "def", "load_cat_parent_cat_to_dict", "(", "cat_filepath", ")", ":", "\n", "    ", "cat_to_parent", "=", "{", "}", "\n", "with", "open", "(", "cat_filepath", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "cat", ",", "parent", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "''", ")", "\n", "if", "parent", "!=", "'0'", ":", "\n", "                ", "cat_to_parent", "[", "int", "(", "cat", ")", "]", "=", "int", "(", "parent", ")", "\n", "", "", "", "return", "cat_to_parent", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.metadata_preparation.get_banner_cats": [[90, 105], ["open", "open", "line.split", "banner_cats.strip.strip", "f.write", "banner_no_cats.append", "len", "int", "int", "banner_cats.strip.split"], "function", ["None"], ["", "def", "get_banner_cats", "(", "banner_cat_filepath", ")", ":", "\n", "    ", "banner_to_cats", "=", "{", "}", "\n", "banner_no_cats", "=", "[", "]", "\n", "with", "open", "(", "banner_cat_filepath", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "bannerid", ",", "banner_cats", "=", "line", ".", "split", "(", "'\\t'", ")", "\n", "banner_cats", "=", "banner_cats", ".", "strip", "(", ")", "\n", "if", "banner_cats", "!=", "'None'", "and", "len", "(", "banner_cats", ")", ">", "1", ":", "\n", "                ", "banner_to_cats", "[", "int", "(", "bannerid", ")", "]", "=", "[", "int", "(", "cat", ")", "for", "cat", "in", "banner_cats", ".", "split", "(", "','", ")", "]", "\n", "", "else", ":", "\n", "                ", "banner_no_cats", ".", "append", "(", "bannerid", ")", "\n", "", "", "", "with", "open", "(", "\"../../../data/banner_no_cats.txt\"", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "for", "id", "in", "banner_no_cats", ":", "\n", "            ", "f", ".", "write", "(", "id", "+", "'\\n'", ")", "\n", "", "", "return", "banner_to_cats", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.metadata_preparation.banner_cats_to_vector": [[107, 116], ["metadata_preparation.normalize", "cat_to_parent_cat.keys"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.metadata_preparation.normalize"], ["", "def", "banner_cats_to_vector", "(", "cats", ",", "cat_to_parent_cat", ")", ":", "\n", "    ", "sv", "=", "{", "}", "\n", "for", "cat", "in", "cats", ":", "\n", "        ", "sv", "[", "cat", "-", "1", "]", "=", "1.0", "\n", "while", "cat", "in", "cat_to_parent_cat", ".", "keys", "(", ")", ":", "\n", "            ", "cat", "=", "cat_to_parent_cat", "[", "cat", "]", "\n", "sv", "[", "cat", "-", "1", "]", "=", "1.0", "\n", "", "", "banner_spare_vector", "=", "normalize", "(", "sv", ")", "\n", "return", "banner_spare_vector", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.metadata_preparation.normalize": [[118, 123], ["None"], "function", ["None"], ["", "def", "normalize", "(", "y", ")", ":", "\n", "    ", "vec", "=", "y", "[", "0", "]", "\n", "num", "=", "y", "[", "1", "]", "\n", "res", "=", "[", "val", "/", "num", "for", "val", "in", "vec", "]", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.metadata_preparation.construct_user_vector": [[125, 159], ["pyspark.sql.SparkSession.builder.appName().getOrCreate", "SparkSession.builder.appName().getOrCreate.sparkContext.setLogLevel", "StructType", "SparkSession.builder.appName().getOrCreate.read.csv", "spark.read.csv.show", "spark.read.csv.rdd.repartition().map().reduceByKey().mapValues().mapValues", "StructType", "SparkSession.builder.appName().getOrCreate.createDataFrame", "spark.createDataFrame.show", "spark.createDataFrame.coalesce().write.mode().csv", "open", "next", "csv.reader", "int", "pyspark.sql.SparkSession.builder.appName", "StructField", "StructField", "spark.read.csv.rdd.repartition().map().reduceByKey().mapValues", "src.data_preparation.sparse_vector.list_sparse_vector_to_json_string", "StructField", "StructField", "spark.createDataFrame.coalesce().write.mode", "IntegerType", "IntegerType", "src.data_preparation.sparse_vector.dense_vector_to_list_sparse_vector", "IntegerType", "StringType", "progressbar.ProgressBar", "spark.read.csv.rdd.repartition().map().reduceByKey", "spark.createDataFrame.coalesce", "spark.read.csv.rdd.repartition().map", "spark.read.csv.rdd.repartition", "src.data_preparation.sparse_vector.json_string_to_dense_vector"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.list_sparse_vector_to_json_string", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.dense_vector_to_list_sparse_vector", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.json_string_to_dense_vector"], ["", "def", "construct_user_vector", "(", ")", ":", "\n", "    ", "with", "open", "(", "root_path", "+", "'item_repr.txt'", ")", "as", "f", ":", "\n", "        ", "next", "(", "f", ")", "\n", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "\",\"", ",", "quotechar", "=", "'|'", ",", "quoting", "=", "csv", ".", "QUOTE_ALL", ")", "\n", "item_repr_dict", "=", "{", "int", "(", "line", "[", "0", "]", ")", ":", "line", "[", "1", "]", "for", "line", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "csv_reader", ")", "}", "\n", "# initialise sparkContext", "\n", "", "spark", "=", "SparkSession", ".", "builder", ".", "appName", "(", "\"construct_user_vector\"", ")", ".", "getOrCreate", "(", ")", "\n", "spark", ".", "sparkContext", ".", "setLogLevel", "(", "'ERROR'", ")", "\n", "\n", "ex_schema", "=", "StructType", "(", "[", "\n", "StructField", "(", "'uid'", ",", "IntegerType", "(", ")", ",", "True", ")", ",", "\n", "StructField", "(", "'itemid'", ",", "IntegerType", "(", ")", ",", "True", ")", "\n", "]", ")", "\n", "\n", "ex_df", "=", "spark", ".", "read", ".", "csv", "(", "root_path", "+", "'ui_ex.txt'", ",", "schema", "=", "ex_schema", ")", "\n", "ex_df", ".", "show", "(", ")", "\n", "user_repr_rdd", "=", "ex_df", ".", "rdd", ".", "repartition", "(", "4", ")", ".", "map", "(", "lambda", "x", ":", "(", "\n", "x", "[", "0", "]", ",", "(", "sparse_vector", ".", "json_string_to_dense_vector", "(", "item_repr_dict", "[", "x", "[", "1", "]", "]", ",", "dimension", "=", "PCAT_DIMENSION", ")", ",", "1", ")", ")", ")", ".", "reduceByKey", "(", "sparse_vector", ".", "add_avg", ")", ".", "mapValues", "(", "normalize", ")", ".", "mapValues", "(", "lambda", "x", ":", "sparse_vector", ".", "list_sparse_vector_to_json_string", "(", "\n", "sparse_vector", ".", "dense_vector_to_list_sparse_vector", "(", "x", ",", "threshold", "=", "PCAT_THRESHOLD", ")", ")", ")", "\n", "\n", "ur_schema", "=", "StructType", "(", "[", "\n", "StructField", "(", "'uid'", ",", "IntegerType", "(", ")", ",", "True", ")", ",", "\n", "StructField", "(", "'repr'", ",", "StringType", "(", ")", ",", "True", ")", "\n", "]", ")", "\n", "user_repr_df", "=", "spark", ".", "createDataFrame", "(", "user_repr_rdd", ",", "schema", "=", "ur_schema", ")", "\n", "user_repr_df", ".", "show", "(", "truncate", "=", "False", ")", "\n", "user_repr_df", ".", "coalesce", "(", "1", ")", ".", "write", ".", "mode", "(", "'overwrite'", ")", ".", "csv", "(", "root_path", "+", "'user_repr.txt'", ",", "sep", "=", "','", ",", "quote", "=", "'|'", ",", "quoteAll", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.metadata_preparation.main": [[161, 163], ["metadata_preparation.construct_user_vector"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.metadata_preparation.construct_user_vector"], ["", "def", "main", "(", ")", ":", "\n", "    ", "construct_user_vector", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_preparation.div_train_test_data_with_explicit": [[10, 94], ["logging.info", "logging.info", "logging.info", "open", "csv.writer", "open", "csv.writer", "open", "csv.writer", "open.close", "open.close", "open.close", "os.path.isdir", "os.makedirs", "range", "list", "random.sample", "open", "csv.reader", "open", "csv.reader", "data_preparation.div_train_test_data_with_explicit.process_and_write_record_with_explicit"], "function", ["None"], ["def", "div_train_test_data_with_explicit", "(", "input_file", ",", "output_file", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "isdir", "(", "output_file", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "output_file", ")", "\n", "\n", "# Local function ---------------------------------------------------------------", "\n", "", "def", "process_and_write_record_with_explicit", "(", "rate_list", ",", "num_items", ")", ":", "\n", "        ", "global", "explicit_remove", "\n", "num_negative", "=", "999", "\n", "\n", "# # positive record", "\n", "explicit_positive_records", "=", "[", "int", "(", "i", "[", "1", "]", ")", "for", "i", "in", "rate_list", "if", "int", "(", "i", "[", "4", "]", ")", ">", "0", "]", "\n", "\n", "# # negative record only for test", "\n", "set_total_items", "=", "range", "(", "num_items", ")", "\n", "population", "=", "list", "(", "set", "(", "set_total_items", ")", "-", "set", "(", "explicit_positive_records", ")", ")", "\n", "explicit_negative_records", "=", "random", ".", "sample", "(", "population", ",", "num_negative", ")", "\n", "\n", "# test record", "\n", "explicit_max_time", "=", "0", "\n", "for", "rate_record", "in", "rate_list", ":", "\n", "            ", "explicit_time", "=", "int", "(", "rate_record", "[", "4", "]", ")", "\n", "if", "explicit_time", ">=", "explicit_max_time", ":", "\n", "                ", "explicit_max_time", "=", "explicit_time", "\n", "explicit_remove", "=", "rate_record", "\n", "\n", "# # write", "\n", "", "", "if", "explicit_max_time", "!=", "0", ":", "\n", "            ", "if", "explicit_remove", "in", "rate_list", ":", "\n", "                ", "rate_list", ".", "remove", "(", "explicit_remove", ")", "\n", "", "csv_writer_explicit_test", ".", "writerow", "(", "explicit_remove", "[", "0", ":", "2", "]", "+", "explicit_remove", "[", "4", ":", "]", ")", "\n", "\n", "explicit_negative_record_line", "=", "[", "'('", "+", "str", "(", "explicit_remove", "[", "0", "]", ")", "+", "','", "+", "str", "(", "explicit_remove", "[", "1", "]", ")", "+", "')'", "]", "\n", "explicit_negative_record_line", "+=", "explicit_negative_records", "\n", "csv_writer_explicit_negative", ".", "writerow", "(", "explicit_negative_record_line", ")", "\n", "\n", "", "for", "rate", "in", "rate_list", ":", "\n", "            ", "csv_writer_train", ".", "writerow", "(", "rate", ")", "\n", "\n", "# End function ---------------------------------------------------------------", "\n", "\n", "# get num_users and num_items", "\n", "", "", "logging", ".", "info", "(", "'Get num_users and num_items'", ")", "\n", "num_users", "=", "0", "\n", "num_items", "=", "0", "\n", "with", "open", "(", "input_file", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "csv_reader", ":", "\n", "            ", "num_users", "=", "max", "(", "num_users", ",", "int", "(", "line", "[", "0", "]", ")", ")", "\n", "num_items", "=", "max", "(", "num_items", ",", "int", "(", "line", "[", "1", "]", ")", ")", "\n", "", "", "num_users", "+=", "1", "\n", "num_items", "+=", "1", "\n", "logging", ".", "info", "(", "'num users: '", "+", "str", "(", "num_users", ")", "+", "';    num items: '", "+", "str", "(", "num_items", ")", ")", "\n", "\n", "# gen train, test, negative data", "\n", "logging", ".", "info", "(", "'gen train, test, negative data'", ")", "\n", "\n", "train_file", "=", "open", "(", "output_file", "+", "'_explicit.train.rating'", ",", "'w'", ")", "\n", "csv_writer_train", "=", "csv", ".", "writer", "(", "train_file", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "\n", "explicit_test_file", "=", "open", "(", "output_file", "+", "'_explicit.test.rating'", ",", "'w'", ")", "\n", "csv_writer_explicit_test", "=", "csv", ".", "writer", "(", "explicit_test_file", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "\n", "explicit_negative_file", "=", "open", "(", "output_file", "+", "'_explicit.test.negative'", ",", "'w'", ")", "\n", "csv_writer_explicit_negative", "=", "csv", ".", "writer", "(", "explicit_negative_file", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "\n", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "\n", "tmp_uid", "=", "0", "\n", "item_list_of_tmp_user", "=", "[", "]", "\n", "with", "open", "(", "input_file", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "csv_reader", ")", ":", "\n", "# type line = [uid item_id time_im num_im time_ex num_ex]", "\n", "            ", "uid", "=", "int", "(", "line", "[", "0", "]", ")", "\n", "if", "uid", "!=", "tmp_uid", ":", "\n", "                ", "process_and_write_record_with_explicit", "(", "item_list_of_tmp_user", ",", "num_items", ")", "\n", "tmp_uid", "=", "uid", "\n", "item_list_of_tmp_user", "=", "[", "]", "\n", "", "item_list_of_tmp_user", ".", "append", "(", "line", ")", "\n", "# end for    ", "\n", "", "process_and_write_record_with_explicit", "(", "item_list_of_tmp_user", ",", "num_items", ")", "\n", "\n", "", "train_file", ".", "close", "(", ")", "\n", "explicit_test_file", ".", "close", "(", ")", "\n", "explicit_negative_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_preparation.div_train_test_data_with_explicit_2": [[96, 183], ["logging.info", "logging.info", "logging.info", "open", "csv.writer", "open", "csv.writer", "open", "csv.writer", "open.close", "open.close", "open.close", "os.path.isdir", "os.makedirs", "range", "list", "random.sample", "open", "csv.reader", "open", "csv.reader", "data_preparation.div_train_test_data_with_explicit.process_and_write_record_with_explicit"], "function", ["None"], ["", "def", "div_train_test_data_with_explicit_2", "(", "input_file", ",", "output_file", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "isdir", "(", "output_file", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "output_file", ")", "\n", "\n", "# Local function ---------------------------------------------------------------", "\n", "", "def", "process_and_write_record_with_explicit", "(", "rate_list", ",", "num_items", ")", ":", "\n", "        ", "global", "explicit_remove", "\n", "num_negative", "=", "999", "\n", "\n", "# # positive record", "\n", "explicit_positive_records", "=", "[", "int", "(", "i", "[", "1", "]", ")", "for", "i", "in", "rate_list", "if", "int", "(", "i", "[", "4", "]", ")", ">", "0", "]", "\n", "\n", "# # negative record only for test", "\n", "set_total_items", "=", "range", "(", "num_items", ")", "\n", "population", "=", "list", "(", "set", "(", "set_total_items", ")", "-", "set", "(", "explicit_positive_records", ")", ")", "\n", "explicit_negative_records", "=", "random", ".", "sample", "(", "population", ",", "num_negative", ")", "\n", "\n", "# test record", "\n", "explicit_max_time", "=", "0", "\n", "for", "rate_record", "in", "rate_list", ":", "\n", "            ", "explicit_time", "=", "int", "(", "rate_record", "[", "4", "]", ")", "\n", "if", "explicit_time", ">=", "explicit_max_time", ":", "\n", "                ", "explicit_max_time", "=", "explicit_time", "\n", "explicit_remove", "=", "rate_record", "\n", "\n", "# # write", "\n", "", "", "if", "explicit_max_time", "!=", "0", ":", "\n", "            ", "rate_list", ".", "remove", "(", "explicit_remove", ")", "\n", "explicit_remove", "[", "4", "]", "=", "0", "\n", "explicit_remove", "[", "5", "]", "=", "0", "\n", "rate_list", ".", "append", "(", "explicit_remove", ")", "\n", "\n", "csv_writer_explicit_test", ".", "writerow", "(", "explicit_remove", "[", "0", ":", "2", "]", "+", "explicit_remove", "[", "4", ":", "]", ")", "\n", "\n", "explicit_negative_record_line", "=", "[", "'('", "+", "str", "(", "explicit_remove", "[", "0", "]", ")", "+", "','", "+", "str", "(", "explicit_remove", "[", "1", "]", ")", "+", "')'", "]", "\n", "explicit_negative_record_line", "+=", "explicit_negative_records", "\n", "csv_writer_explicit_negative", ".", "writerow", "(", "explicit_negative_record_line", ")", "\n", "\n", "", "for", "rate", "in", "rate_list", ":", "\n", "            ", "csv_writer_train", ".", "writerow", "(", "rate", ")", "\n", "\n", "# End function ---------------------------------------------------------------", "\n", "\n", "# get num_users and num_items", "\n", "", "", "logging", ".", "info", "(", "'Get num_users and num_items'", ")", "\n", "num_users", "=", "0", "\n", "num_items", "=", "0", "\n", "with", "open", "(", "input_file", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "csv_reader", ":", "\n", "            ", "num_users", "=", "max", "(", "num_users", ",", "int", "(", "line", "[", "0", "]", ")", ")", "\n", "num_items", "=", "max", "(", "num_items", ",", "int", "(", "line", "[", "1", "]", ")", ")", "\n", "", "", "num_users", "+=", "1", "\n", "num_items", "+=", "1", "\n", "logging", ".", "info", "(", "'num users: '", "+", "str", "(", "num_users", ")", "+", "';    num items: '", "+", "str", "(", "num_items", ")", ")", "\n", "\n", "# gen train, test, negative data", "\n", "logging", ".", "info", "(", "'gen train, test, negative data'", ")", "\n", "\n", "train_file", "=", "open", "(", "output_file", "+", "'_explicit.train.rating'", ",", "'w'", ")", "\n", "csv_writer_train", "=", "csv", ".", "writer", "(", "train_file", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "\n", "explicit_test_file", "=", "open", "(", "output_file", "+", "'_explicit.test.rating'", ",", "'w'", ")", "\n", "csv_writer_explicit_test", "=", "csv", ".", "writer", "(", "explicit_test_file", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "\n", "explicit_negative_file", "=", "open", "(", "output_file", "+", "'_explicit.test.negative'", ",", "'w'", ")", "\n", "csv_writer_explicit_negative", "=", "csv", ".", "writer", "(", "explicit_negative_file", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "\n", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "\n", "tmp_uid", "=", "0", "\n", "tmp_item_list_single_user", "=", "[", "]", "\n", "with", "open", "(", "input_file", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "csv_reader", ")", ":", "\n", "# type line = [uid item_id time_im num_im time_ex num_ex]", "\n", "            ", "uid", "=", "int", "(", "line", "[", "0", "]", ")", "\n", "if", "uid", "!=", "tmp_uid", ":", "\n", "                ", "process_and_write_record_with_explicit", "(", "tmp_item_list_single_user", ",", "num_items", ")", "\n", "tmp_uid", "=", "uid", "\n", "tmp_item_list_single_user", "=", "[", "]", "\n", "", "tmp_item_list_single_user", ".", "append", "(", "line", ")", "\n", "# end for    ", "\n", "", "process_and_write_record_with_explicit", "(", "tmp_item_list_single_user", ",", "num_items", ")", "\n", "\n", "", "train_file", ".", "close", "(", ")", "\n", "explicit_test_file", ".", "close", "(", ")", "\n", "explicit_negative_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_preparation.gen_ratings_data_with_explicit": [[185, 317], ["logging.info", "open", "csv.reader", "set", "open.close", "print", "logging.info", "open", "csv.reader", "open.close", "print", "print", "print", "open", "csv.reader", "open.close", "logging.info", "open", "csv.writer", "open.close", "len", "len", "len", "len", "open", "csv.writer", "open", "csv.writer", "interacted_dict[].add", "len", "set.add", "csv.writer.writerow", "csv.writer.writerow", "implicit_rating_dict[].append", "explicit_rating_dict[].append", "csv.writer.writerow", "csv.writer.writerow", "csv.writer.writerow"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add"], ["", "def", "gen_ratings_data_with_explicit", "(", "implicit_input", ",", "explicit_input", ",", "user_index_output", ",", "item_index_output", ",", "output", ")", ":", "\n", "    ", "\"\"\"\n        :param implicit_input: format raw_uid,raw_item_id,timestamp\n        :param explicit_input: format raw_uid,raw_item_id,timestamp\n        :param output: format raw_uid,raw_item_id,implicit_timestamp,num_implicicit,explicit_timestamp,num_explicit\n        :return: none\n        \"\"\"", "\n", "# create uid blacklist", "\n", "logging", ".", "info", "(", "'Create uid blacklist'", ")", "\n", "interacted_dict", "=", "{", "}", "\n", "\n", "file_pointer", "=", "open", "(", "implicit_input", ",", "\"r\"", ")", "\n", "csv_reader", "=", "csv", ".", "reader", "(", "file_pointer", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "csv_reader", ":", "\n", "        ", "raw_uid", "=", "line", "[", "0", "]", "# string", "\n", "raw_item_id", "=", "line", "[", "1", "]", "\n", "if", "raw_uid", "in", "interacted_dict", ":", "\n", "            ", "interacted_dict", "[", "raw_uid", "]", ".", "add", "(", "raw_item_id", ")", "\n", "", "else", ":", "\n", "# interacted_dict[raw_uid] = type set()", "\n", "            ", "interacted_dict", "[", "raw_uid", "]", "=", "{", "raw_item_id", "}", "\n", "\n", "", "", "uid_blacklist", "=", "set", "(", ")", "\n", "for", "uid", "in", "interacted_dict", ":", "\n", "        ", "if", "len", "(", "interacted_dict", "[", "uid", "]", ")", "<", "5", ":", "\n", "            ", "uid_blacklist", ".", "add", "(", "uid", ")", "\n", "", "", "file_pointer", ".", "close", "(", ")", "\n", "print", "(", "\"len uid_blacklist:\"", ",", "len", "(", "uid_blacklist", ")", ")", "\n", "\n", "# convert uid, item_id", "\n", "logging", ".", "info", "(", "\"convert uid, item_id\"", ")", "\n", "\n", "# uid_dict, item_id_dict la anh xa tu raw_id sang id dang so nguyen tu 0 den n", "\n", "user_id_dict", "=", "{", "}", "\n", "item_id_dict", "=", "{", "}", "\n", "\n", "implicit_rating_dict", "=", "{", "}", "\n", "uid_count", "=", "0", "\n", "item_id_count", "=", "0", "\n", "\n", "file_pointer", "=", "open", "(", "implicit_input", ",", "\"r\"", ")", "\n", "csv_reader", "=", "csv", ".", "reader", "(", "file_pointer", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "csv_reader", ":", "\n", "        ", "raw_uid", "=", "line", "[", "0", "]", "# string", "\n", "if", "raw_uid", "not", "in", "uid_blacklist", ":", "\n", "            ", "raw_item_id", "=", "line", "[", "1", "]", "\n", "raw_timestamp", "=", "line", "[", "2", "]", "\n", "if", "raw_uid", "not", "in", "user_id_dict", ":", "\n", "                ", "user_id_dict", "[", "raw_uid", "]", "=", "uid_count", "\n", "uid_count", "+=", "1", "\n", "", "if", "raw_item_id", "not", "in", "item_id_dict", ":", "\n", "                ", "item_id_dict", "[", "raw_item_id", "]", "=", "item_id_count", "\n", "item_id_count", "+=", "1", "\n", "\n", "# add user data to dict", "\n", "", "uid", "=", "user_id_dict", "[", "raw_uid", "]", "# int", "\n", "if", "uid", "in", "implicit_rating_dict", ":", "\n", "                ", "implicit_rating_dict", "[", "uid", "]", ".", "append", "(", "(", "item_id_dict", "[", "raw_item_id", "]", ",", "raw_timestamp", ")", ")", "\n", "", "else", ":", "\n", "                ", "implicit_rating_dict", "[", "uid", "]", "=", "[", "(", "item_id_dict", "[", "raw_item_id", "]", ",", "raw_timestamp", ")", "]", "\n", "", "", "", "file_pointer", ".", "close", "(", ")", "\n", "print", "(", "\"len user list:\"", ",", "len", "(", "user_id_dict", ")", ")", "\n", "print", "(", "\"len item list:\"", ",", "len", "(", "item_id_dict", ")", ")", "\n", "print", "(", "\"len implicit_rating_dict:\"", ",", "len", "(", "implicit_rating_dict", ")", ")", "\n", "\n", "with", "open", "(", "user_index_output", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "csv_writer", "=", "csv", ".", "writer", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "k", "in", "user_id_dict", ":", "\n", "            ", "csv_writer", ".", "writerow", "(", "[", "k", ",", "user_id_dict", "[", "k", "]", "]", ")", "\n", "", "", "with", "open", "(", "item_index_output", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "csv_writer", "=", "csv", ".", "writer", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "k", "in", "item_id_dict", ":", "\n", "            ", "csv_writer", ".", "writerow", "(", "[", "k", ",", "item_id_dict", "[", "k", "]", "]", ")", "\n", "# load explicit data put to explicit_rating_dict", "\n", "", "", "explicit_rating_dict", "=", "{", "}", "\n", "file_pointer", "=", "open", "(", "explicit_input", ",", "\"r\"", ")", "\n", "\n", "csv_reader", "=", "csv", ".", "reader", "(", "file_pointer", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "csv_reader", ":", "\n", "        ", "raw_uid", "=", "line", "[", "0", "]", "\n", "raw_item_id", "=", "line", "[", "1", "]", "\n", "raw_timestamp", "=", "line", "[", "2", "]", "\n", "if", "(", "raw_uid", "in", "user_id_dict", ")", "and", "(", "raw_item_id", "in", "item_id_dict", ")", ":", "\n", "            ", "uid", "=", "user_id_dict", "[", "raw_uid", "]", "\n", "if", "uid", "in", "explicit_rating_dict", ":", "\n", "                ", "explicit_rating_dict", "[", "uid", "]", ".", "append", "(", "(", "item_id_dict", "[", "raw_item_id", "]", ",", "raw_timestamp", ")", ")", "\n", "", "else", ":", "\n", "                ", "explicit_rating_dict", "[", "uid", "]", "=", "[", "(", "item_id_dict", "[", "raw_item_id", "]", ",", "raw_timestamp", ")", "]", "\n", "", "", "", "file_pointer", ".", "close", "(", ")", "\n", "\n", "# gen ratings data", "\n", "logging", ".", "info", "(", "'gen ratings with explicit data'", ")", "\n", "out_file", "=", "open", "(", "output", ",", "'w'", ")", "\n", "csv_writer", "=", "csv", ".", "writer", "(", "out_file", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "\n", "for", "uid", "in", "implicit_rating_dict", ":", "\n", "# check duplicate", "\n", "        ", "implicit_item_time_dict", "=", "{", "}", "\n", "explicit_item_time_dict", "=", "{", "}", "\n", "for", "his", "in", "implicit_rating_dict", "[", "uid", "]", ":", "\n", "            ", "item_id", "=", "his", "[", "0", "]", "\n", "timestamp", "=", "his", "[", "1", "]", "\n", "if", "item_id", "in", "implicit_item_time_dict", ":", "\n", "                ", "if", "timestamp", ">", "implicit_item_time_dict", "[", "item_id", "]", "[", "0", "]", ":", "\n", "                    ", "implicit_item_time_dict", "[", "item_id", "]", "[", "0", "]", "=", "timestamp", "\n", "", "implicit_item_time_dict", "[", "item_id", "]", "[", "1", "]", "+=", "1", "\n", "", "else", ":", "\n", "                ", "implicit_item_time_dict", "[", "item_id", "]", "=", "[", "timestamp", ",", "1", "]", "\n", "\n", "", "", "if", "uid", "in", "explicit_rating_dict", ":", "\n", "            ", "for", "his", "in", "explicit_rating_dict", "[", "uid", "]", ":", "\n", "                ", "item_id", "=", "his", "[", "0", "]", "\n", "timestamp", "=", "his", "[", "1", "]", "\n", "if", "item_id", "in", "explicit_item_time_dict", ":", "\n", "                    ", "if", "timestamp", ">", "explicit_item_time_dict", "[", "item_id", "]", "[", "0", "]", ":", "\n", "                        ", "explicit_item_time_dict", "[", "item_id", "]", "[", "0", "]", "=", "timestamp", "\n", "", "explicit_item_time_dict", "[", "item_id", "]", "[", "1", "]", "+=", "1", "\n", "", "else", ":", "\n", "                    ", "explicit_item_time_dict", "[", "item_id", "]", "=", "[", "timestamp", ",", "1", "]", "\n", "\n", "# write to file", "\n", "", "", "", "for", "i", "in", "implicit_item_time_dict", ":", "\n", "            ", "if", "i", "in", "explicit_item_time_dict", ":", "\n", "                ", "if", "implicit_item_time_dict", "[", "i", "]", "[", "0", "]", ">", "explicit_item_time_dict", "[", "i", "]", "[", "0", "]", ":", "\n", "                    ", "implicit_item_time_dict", "[", "i", "]", "[", "0", "]", "=", "explicit_item_time_dict", "[", "i", "]", "[", "0", "]", "\n", "", "csv_writer", ".", "writerow", "(", "[", "uid", ",", "i", "]", "+", "implicit_item_time_dict", "[", "i", "]", "+", "explicit_item_time_dict", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "                ", "csv_writer", ".", "writerow", "(", "[", "uid", ",", "i", "]", "+", "implicit_item_time_dict", "[", "i", "]", "+", "[", "-", "1", ",", "0", "]", ")", "\n", "", "", "for", "j", "in", "explicit_item_time_dict", ":", "\n", "            ", "if", "j", "not", "in", "implicit_item_time_dict", ":", "\n", "                ", "csv_writer", ".", "writerow", "(", "[", "uid", ",", "j", "]", "+", "explicit_item_time_dict", "[", "j", "]", "+", "explicit_item_time_dict", "[", "j", "]", ")", "\n", "", "", "", "out_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.load_representation_data": [[13, 34], ["print", "print", "open", "csv.reader", "open", "csv.reader"], "function", ["None"], ["def", "load_representation_data", "(", "u2index_path", ",", "i2index_path", ")", ":", "\n", "    ", "u2index", "=", "{", "}", "\n", "i2index", "=", "{", "}", "\n", "\n", "count", "=", "0", "\n", "with", "open", "(", "u2index_path", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "            ", "count", "+=", "1", "\n", "", "", "num_user", "=", "count", "\n", "print", "(", "'Num user: '", ",", "num_user", ")", "\n", "\n", "count", "=", "0", "\n", "with", "open", "(", "i2index_path", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "            ", "count", "+=", "1", "\n", "", "", "num_item", "=", "count", "\n", "print", "(", "'Num item: '", ",", "num_item", ")", "\n", "\n", "return", "num_user", ",", "num_item", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.load_representation_data_with_item_repr": [[36, 69], ["print", "print", "print", "print", "open", "csv.reader", "open", "csv.reader", "open", "int", "csv.reader", "len", "next", "json_string_to_tensorflow_sparse_vector", "int"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.json_string_to_tensorflow_sparse_vector"], ["", "def", "load_representation_data_with_item_repr", "(", "u2index_path", ",", "i2index_path", ",", "item_repr_path", ")", ":", "\n", "    ", "u2index", "=", "{", "}", "\n", "i2index", "=", "{", "}", "\n", "item_repr", "=", "{", "}", "\n", "\n", "count", "=", "0", "\n", "with", "open", "(", "u2index_path", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "            ", "count", "+=", "1", "\n", "", "", "num_user", "=", "count", "\n", "print", "(", "'Num user: '", ",", "num_user", ")", "\n", "\n", "count", "=", "0", "\n", "with", "open", "(", "i2index_path", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "            ", "count", "+=", "1", "\n", "", "", "num_item", "=", "count", "\n", "print", "(", "'Num item: '", ",", "num_item", ")", "\n", "\n", "count", "=", "0", "\n", "\n", "with", "open", "(", "item_repr_path", ")", "as", "f", ":", "\n", "        ", "item_pcat_dimension", "=", "int", "(", "next", "(", "f", ")", ")", "\n", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "'|'", ",", "quoting", "=", "csv", ".", "QUOTE_ALL", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "            ", "count", "+=", "1", "\n", "item_repr", "[", "int", "(", "row", "[", "0", "]", ")", "]", "=", "json_string_to_tensorflow_sparse_vector", "(", "row", "[", "1", "]", ")", "\n", "", "", "print", "(", "'Dimension of item pcat: '", ",", "item_pcat_dimension", ")", "\n", "print", "(", "'Num item (check again): '", ",", "len", "(", "item_repr", ")", ")", "\n", "\n", "return", "num_user", ",", "num_item", ",", "item_repr", ",", "item_pcat_dimension", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.load_representation_data_with_both_user_item_repr": [[71, 114], ["print", "print", "print", "print", "print", "open", "csv.reader", "open", "csv.reader", "open", "csv.reader", "len", "open", "int", "csv.reader", "len", "json_string_to_tensorflow_sparse_vector", "next", "json_string_to_tensorflow_sparse_vector", "int", "int"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.json_string_to_tensorflow_sparse_vector", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.json_string_to_tensorflow_sparse_vector"], ["", "def", "load_representation_data_with_both_user_item_repr", "(", "u2index_path", ",", "i2index_path", ",", "user_repr_path", ",", "item_repr_path", ")", ":", "\n", "    ", "u2index", "=", "{", "}", "\n", "i2index", "=", "{", "}", "\n", "user_repr", "=", "{", "}", "\n", "item_repr", "=", "{", "}", "\n", "\n", "count", "=", "0", "\n", "with", "open", "(", "u2index_path", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "            ", "count", "+=", "1", "\n", "", "", "num_user", "=", "count", "\n", "print", "(", "'Num user: '", ",", "num_user", ")", "\n", "\n", "count", "=", "0", "\n", "with", "open", "(", "i2index_path", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "            ", "count", "+=", "1", "\n", "", "", "num_item", "=", "count", "\n", "print", "(", "'Num item: '", ",", "num_item", ")", "\n", "\n", "count", "=", "0", "\n", "\n", "with", "open", "(", "user_repr_path", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "'|'", ",", "quoting", "=", "csv", ".", "QUOTE_ALL", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "            ", "count", "+=", "1", "\n", "user_repr", "[", "int", "(", "row", "[", "0", "]", ")", "]", "=", "json_string_to_tensorflow_sparse_vector", "(", "row", "[", "1", "]", ")", "\n", "", "", "print", "(", "'Num user have pcat: '", ",", "len", "(", "user_repr", ")", ")", "\n", "count", "=", "0", "\n", "\n", "with", "open", "(", "item_repr_path", ")", "as", "f", ":", "\n", "        ", "item_pcat_dimension", "=", "int", "(", "next", "(", "f", ")", ")", "\n", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "'|'", ",", "quoting", "=", "csv", ".", "QUOTE_ALL", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "            ", "count", "+=", "1", "\n", "item_repr", "[", "int", "(", "row", "[", "0", "]", ")", "]", "=", "json_string_to_tensorflow_sparse_vector", "(", "row", "[", "1", "]", ")", "\n", "\n", "", "", "print", "(", "'Dimension of item pcat: '", ",", "item_pcat_dimension", ")", "\n", "print", "(", "'Num item (check again): '", ",", "len", "(", "item_repr", ")", ")", "\n", "\n", "return", "num_user", ",", "num_item", ",", "user_repr", ",", "item_repr", ",", "item_pcat_dimension", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.load_interact_matrix": [[116, 129], ["datetime.datetime.now", "scipy.dok_matrix", "print", "open", "csv.reader", "progressbar.ProgressBar", "datetime.datetime.now", "int", "int"], "function", ["None"], ["", "def", "load_interact_matrix", "(", "file_path", ",", "num_user", ",", "num_item", ")", ":", "\n", "    ", "start", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "# Construct matrix", "\n", "mat", "=", "sp", ".", "dok_matrix", "(", "(", "num_user", ",", "num_item", ")", ",", "dtype", "=", "np", ".", "bool_", ")", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "csv_reader", ")", ":", "\n", "            ", "if", "line", "==", "[", "]", ":", "\n", "              ", "continue", "\n", "", "uid", ",", "itemid", "=", "int", "(", "line", "[", "0", "]", ")", ",", "int", "(", "line", "[", "1", "]", ")", "\n", "mat", "[", "uid", ",", "itemid", "]", "=", "True", "\n", "", "", "print", "(", "\"time load_interact_matrix: \"", ",", "datetime", ".", "datetime", ".", "now", "(", ")", "-", "start", ")", "\n", "return", "mat", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.load_test_data": [[159, 170], ["print", "open", "csv.reader", "len", "rating_list.append", "int", "int"], "function", ["None"], ["def", "load_test_data", "(", "file_path", ")", ":", "\n", "    ", "rating_list", "=", "[", "]", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "csv_reader", ":", "\n", "            ", "if", "line", "==", "[", "]", ":", "\n", "              ", "continue", "\n", "", "user", ",", "item", "=", "int", "(", "line", "[", "0", "]", ")", ",", "int", "(", "line", "[", "1", "]", ")", "\n", "rating_list", ".", "append", "(", "[", "user", ",", "item", "]", ")", "\n", "", "", "print", "(", "'len test data: '", ",", "len", "(", "rating_list", ")", ")", "\n", "return", "rating_list", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.load_negative_data": [[172, 190], ["print", "open", "csv.reader", "len", "progressbar.ProgressBar", "line[].split", "int", "negative_dict[].append", "int"], "function", ["None"], ["", "def", "load_negative_data", "(", "file_path", ")", ":", "\n", "    ", "negative_dict", "=", "{", "}", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "# i = 0", "\n", "for", "line", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "csv_reader", ")", ":", "\n", "            ", "if", "line", "==", "[", "]", ":", "\n", "              ", "continue", "\n", "", "user", "=", "line", "[", "0", "]", ".", "split", "(", "\",\"", ")", "\n", "user", "=", "int", "(", "user", "[", "0", "]", "[", "1", ":", "]", ")", "\n", "# assert user == i", "\n", "# i += 1", "\n", "\n", "negative_dict", "[", "user", "]", "=", "[", "]", "\n", "for", "x", "in", "line", "[", "1", ":", "]", ":", "\n", "                ", "negative_dict", "[", "user", "]", ".", "append", "(", "int", "(", "x", ")", ")", "\n", "", "", "", "print", "(", "'len negative data: '", ",", "len", "(", "negative_dict", ")", ")", "\n", "return", "negative_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.get_train_instances": [[192, 222], ["datetime.datetime.now", "set", "print", "range", "progressbar.ProgressBar", "user_input.append", "item_input.append", "labels.append", "range", "indicator.append", "indicator.append", "random.randrange", "user_input.append", "item_input.append", "labels.append", "indicator.append", "datetime.datetime.now", "random.randrange"], "function", ["None"], ["", "def", "get_train_instances", "(", "training_dict", ",", "num_negatives", ",", "num_user", ",", "num_item", ")", ":", "\n", "    ", "user_input", ",", "item_input", ",", "labels", ",", "indicator", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "start", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "set_total_items", "=", "set", "(", "range", "(", "num_item", ")", ")", "\n", "for", "(", "uid", ",", "itemid", ")", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "training_dict", ")", ":", "\n", "        ", "is_ex", "=", "training_dict", "[", "(", "uid", ",", "itemid", ")", "]", "\n", "user_input", ".", "append", "(", "uid", ")", "\n", "item_input", ".", "append", "(", "itemid", ")", "\n", "labels", ".", "append", "(", "1", ")", "\n", "# im_indicator.append(1)", "\n", "if", "is_ex", ":", "\n", "            ", "indicator", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "indicator", ".", "append", "(", "0", ")", "\n", "\n", "# negative instances", "\n", "# Lay mau cac item chua tung view hay purchase; train_data_mt = 1__purchase, -1__view", "\n", "", "for", "_", "in", "range", "(", "num_negatives", ")", ":", "\n", "            ", "j", "=", "random", ".", "randrange", "(", "num_item", ")", "\n", "while", "(", "uid", ",", "j", ")", "in", "training_dict", ":", "\n", "                ", "j", "=", "random", ".", "randrange", "(", "num_item", ")", "\n", "# Neu lay the nay co kha nang (u, j_) xuat hien hon 1 lan trong tap negative", "\n", "", "user_input", ".", "append", "(", "uid", ")", "\n", "item_input", ".", "append", "(", "j", ")", "\n", "labels", ".", "append", "(", "0", ")", "\n", "indicator", ".", "append", "(", "0", ")", "\n", "# end for", "\n", "\n", "", "", "print", "(", "\"time get_train_instances: \"", ",", "datetime", ".", "datetime", ".", "now", "(", ")", "-", "start", ")", "\n", "return", "user_input", ",", "item_input", ",", "labels", ",", "indicator", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.get_train_instances_partition": [[224, 277], ["datetime.datetime.now", "print", "open", "csv.reader", "progressbar.ProgressBar", "user_input.append", "item_input.append", "labels.append", "y1_indicator.append", "y2_indicator.append", "range", "datetime.datetime.now", "int", "int", "int", "random.randrange", "user_input.append", "item_input.append", "labels.append", "y1_indicator.append", "y2_indicator.append", "user_input.append", "item_input.append", "labels.append", "y1_indicator.append", "y2_indicator.append", "range", "random.randrange", "random.randrange", "user_input.append", "item_input.append", "labels.append", "y1_indicator.append", "y2_indicator.append", "random.randrange"], "function", ["None"], ["", "def", "get_train_instances_partition", "(", "file_path", ",", "interact_mat", ",", "num_negatives", ",", "num_user", ",", "num_item", ")", ":", "\n", "    ", "user_input", ",", "item_input", ",", "labels", ",", "y1_indicator", ",", "y2_indicator", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "start", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "csv_reader", ")", ":", "\n", "            ", "if", "line", "==", "[", "]", ":", "\n", "              ", "continue", "\n", "", "uid", ",", "itemid", ",", "explicit_timestamp", "=", "int", "(", "line", "[", "0", "]", ")", ",", "int", "(", "line", "[", "1", "]", ")", ",", "int", "(", "line", "[", "4", "]", ")", "\n", "\n", "is_ex", "=", "explicit_timestamp", ">", "0", "\n", "user_input", ".", "append", "(", "uid", ")", "\n", "item_input", ".", "append", "(", "itemid", ")", "\n", "labels", ".", "append", "(", "1", ")", "\n", "# im_indicator.append(1)", "\n", "y1_indicator", ".", "append", "(", "1", ")", "\n", "y2_indicator", ".", "append", "(", "0", ")", "\n", "\n", "# negative instances", "\n", "# Lay mau cac item chua tung view hay purchase; train_data_mt = 1__purchase, -1__view", "\n", "for", "_", "in", "range", "(", "num_negatives", ")", ":", "\n", "                ", "j", "=", "random", ".", "randrange", "(", "num_item", ")", "\n", "while", "(", "uid", ",", "j", ")", "in", "interact_mat", ":", "\n", "                    ", "j", "=", "random", ".", "randrange", "(", "num_item", ")", "\n", "# Neu lay the nay co kha nang (u, j_) xuat hien hon 1 lan trong tap negative", "\n", "", "user_input", ".", "append", "(", "uid", ")", "\n", "item_input", ".", "append", "(", "j", ")", "\n", "labels", ".", "append", "(", "0", ")", "\n", "y1_indicator", ".", "append", "(", "1", ")", "\n", "y2_indicator", ".", "append", "(", "0", ")", "\n", "", "if", "is_ex", ":", "\n", "                ", "user_input", ".", "append", "(", "uid", ")", "\n", "item_input", ".", "append", "(", "itemid", ")", "\n", "labels", ".", "append", "(", "1", ")", "\n", "# im_indicator.append(1)", "\n", "y1_indicator", ".", "append", "(", "0", ")", "\n", "y2_indicator", ".", "append", "(", "1", ")", "\n", "\n", "# negative instances", "\n", "# Lay mau cac item chua tung view hay purchase; train_data_mt = 1__purchase, -1__view", "\n", "for", "_", "in", "range", "(", "num_negatives", ")", ":", "\n", "                    ", "j", "=", "random", ".", "randrange", "(", "num_item", ")", "\n", "while", "(", "uid", ",", "j", ")", "in", "interact_mat", ":", "\n", "                        ", "j", "=", "random", ".", "randrange", "(", "num_item", ")", "\n", "# Neu lay the nay co kha nang (u, j_) xuat hien hon 1 lan trong tap negative", "\n", "", "user_input", ".", "append", "(", "uid", ")", "\n", "item_input", ".", "append", "(", "j", ")", "\n", "labels", ".", "append", "(", "0", ")", "\n", "y1_indicator", ".", "append", "(", "0", ")", "\n", "y2_indicator", ".", "append", "(", "1", ")", "\n", "# end for", "\n", "", "", "", "", "print", "(", "\"time get_train_instances: \"", ",", "datetime", ".", "datetime", ".", "now", "(", ")", "-", "start", ")", "\n", "return", "user_input", ",", "item_input", ",", "labels", ",", "y1_indicator", ",", "y2_indicator", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.recobell_data.convert_time": [[23, 29], ["int", "time.mktime", "int", "datetime.datetime.strptime().timetuple", "time.mktime", "datetime.datetime.strptime().timetuple", "datetime.datetime.strptime", "datetime.datetime.strptime"], "function", ["None"], ["def", "convert_time", "(", "d", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "new_d", "=", "int", "(", "time", ".", "mktime", "(", "datetime", ".", "datetime", ".", "strptime", "(", "d", ",", "\"%Y-%m-%d %H:%M:%S.%f\"", ")", ".", "timetuple", "(", ")", ")", ")", "\n", "", "except", "ValueError", ":", "\n", "        ", "new_d", "=", "int", "(", "time", ".", "mktime", "(", "datetime", ".", "datetime", ".", "strptime", "(", "d", ",", "\"%Y-%m-%d %H:%M:%S\"", ")", ".", "timetuple", "(", ")", ")", ")", "\n", "", "return", "new_d", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.recobell_data.gen_implicit_cleaned_data": [[31, 55], ["logging.info", "recobell_data.convert_time", "recobell_data.convert_time", "open", "csv.writer", "open.close", "open", "csv.reader", "progressbar.ProgressBar", "recobell_data.convert_time", "csv.writer.writerow"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.recobell_data.convert_time", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.recobell_data.convert_time", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.recobell_data.convert_time"], ["", "def", "gen_implicit_cleaned_data", "(", "input_file", ",", "output_file", ")", ":", "\n", "    ", "logging", ".", "info", "(", "\"gen_implicit_cleaned_data\"", ")", "\n", "\n", "start_date", "=", "convert_time", "(", "\"2016-08-08 00:00:00.000\"", ")", "\n", "finish_date", "=", "convert_time", "(", "\"2016-08-15 00:00:00.000\"", ")", "\n", "\n", "file_out", "=", "open", "(", "output_file", ",", "\"w\"", ")", "\n", "# f_2 = open(root_path + 'raw_data/tiny_site_view_log.csv000', \"w\")", "\n", "csv_writer", "=", "csv", ".", "writer", "(", "file_out", ",", "delimiter", "=", "\",\"", ",", "quotechar", "=", "\"\"", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "# csv_writer_2 = csv.writer(f_2, delimiter=\",\", quotechar='\"', quoting=csv.QUOTE_ALL)", "\n", "with", "open", "(", "input_file", ",", "\"r\"", ")", "as", "f", ":", "\n", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "\",\"", ",", "quotechar", "=", "'\"'", ",", "quoting", "=", "csv", ".", "QUOTE_ALL", ")", "\n", "\n", "for", "line", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "csv_reader", ")", ":", "\n", "            ", "raw_timestamp", "=", "line", "[", "0", "]", "\n", "raw_uid", "=", "line", "[", "3", "]", "\n", "raw_item_id", "=", "line", "[", "4", "]", "\n", "timestamp", "=", "convert_time", "(", "raw_timestamp", ")", "\n", "\n", "if", "start_date", "<=", "timestamp", "<", "finish_date", ":", "\n", "# csv_writer_2.writerow(line)", "\n", "                ", "csv_writer", ".", "writerow", "(", "[", "raw_uid", ",", "raw_item_id", ",", "timestamp", "]", ")", "\n", "", "", "", "file_out", ".", "close", "(", ")", "\n", "# f_2.close()", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.recobell_data.gen_explicit_cleaned_data": [[58, 83], ["logging.info", "recobell_data.convert_time", "recobell_data.convert_time", "open", "csv.writer", "open.close", "open", "csv.reader", "progressbar.ProgressBar", "recobell_data.convert_time", "csv.writer.writerow"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.recobell_data.convert_time", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.recobell_data.convert_time", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.recobell_data.convert_time"], ["", "def", "gen_explicit_cleaned_data", "(", "input_file", ",", "output_file", ")", ":", "\n", "    ", "logging", ".", "info", "(", "\"gen_explicit_cleaned_data\"", ")", "\n", "\n", "start_date", "=", "convert_time", "(", "\"2016-08-08 00:00:00.000\"", ")", "\n", "finish_date", "=", "convert_time", "(", "\"2016-08-15 00:00:00.000\"", ")", "\n", "# convert uid, item_id", "\n", "\n", "file_out", "=", "open", "(", "output_file", ",", "\"w\"", ")", "\n", "# f_2 = open(root_path + 'raw_data/tiny_site_order_log.csv000', \"w\")", "\n", "csv_writer", "=", "csv", ".", "writer", "(", "file_out", ",", "delimiter", "=", "\",\"", ",", "quotechar", "=", "\"\"", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "# csv_writer_2 = csv.writer(f_2, delimiter=\",\", quotechar='\"', quoting=csv.QUOTE_ALL)", "\n", "with", "open", "(", "input_file", ",", "\"r\"", ")", "as", "f", ":", "\n", "\n", "        ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "\",\"", ",", "quotechar", "=", "'\"'", ",", "quoting", "=", "csv", ".", "QUOTE_ALL", ")", "\n", "\n", "for", "line", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "csv_reader", ")", ":", "\n", "            ", "raw_timestamp", "=", "line", "[", "0", "]", "\n", "raw_uid", "=", "line", "[", "3", "]", "\n", "raw_item_id", "=", "line", "[", "4", "]", "\n", "timestamp", "=", "convert_time", "(", "raw_timestamp", ")", "\n", "\n", "if", "start_date", "<=", "timestamp", "<", "finish_date", ":", "\n", "# csv_writer_2.writerow(line)", "\n", "                ", "csv_writer", ".", "writerow", "(", "[", "raw_uid", ",", "raw_item_id", ",", "timestamp", "]", ")", "\n", "", "", "", "file_out", ".", "close", "(", ")", "\n", "# f_2.close()", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.recobell_data.construct_item_vector": [[86, 115], ["pandas.read_csv", "list", "len", "list", "len", "list", "len", "list", "len", "set", "set", "set", "set", "open", "open", "open", "open", "range", "range", "range", "range", "f.write", "f.write", "f.write", "f.write", "len", "len", "len", "len", "str", "str", "str", "str"], "function", ["None"], ["", "def", "construct_item_vector", "(", ")", ":", "\n", "    ", "item_recobell_df", "=", "pd", ".", "read_csv", "(", "root_path", "+", "'raw_data/site_product.csv000'", ",", "\n", "header", "=", "None", ",", "\n", "names", "=", "[", "'itemid'", ",", "'price'", ",", "'cat1'", ",", "'cat2'", ",", "'cat3'", ",", "'cat4'", ",", "'brandid'", "]", ")", "\n", "\n", "cat_1_list", "=", "list", "(", "set", "(", "item_recobell_df", ".", "cat1", ")", ")", "\n", "cat_1_dict", "=", "{", "cat_1_list", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "cat_1_list", ")", ")", "}", "\n", "a", "=", "len", "(", "cat_1_list", ")", "\n", "cat_2_list", "=", "list", "(", "set", "(", "item_recobell_df", ".", "cat2", ")", ")", "\n", "cat_2_dict", "=", "{", "cat_2_list", "[", "i", "]", ":", "i", "+", "a", "for", "i", "in", "range", "(", "len", "(", "cat_2_list", ")", ")", "}", "\n", "a", "+=", "len", "(", "cat_2_list", ")", "\n", "cat_3_list", "=", "list", "(", "set", "(", "item_recobell_df", ".", "cat3", ")", ")", "\n", "cat_3_dict", "=", "{", "cat_3_list", "[", "i", "]", ":", "i", "+", "a", "for", "i", "in", "range", "(", "len", "(", "cat_3_list", ")", ")", "}", "\n", "a", "+=", "len", "(", "cat_3_list", ")", "\n", "cat_4_list", "=", "list", "(", "set", "(", "item_recobell_df", ".", "cat4", ")", ")", "\n", "cat_4_dict", "=", "{", "cat_4_list", "[", "i", "]", ":", "i", "+", "a", "for", "i", "in", "range", "(", "len", "(", "cat_4_list", ")", ")", "}", "\n", "a", "+=", "len", "(", "cat_4_list", ")", "\n", "with", "open", "(", "'../../data/recobell_cat1_index.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "k", "in", "cat_1_dict", ":", "\n", "            ", "f", ".", "write", "(", "k", "+", "','", "+", "str", "(", "cat_1_dict", "[", "k", "]", ")", "+", "'\\n'", ")", "\n", "", "", "with", "open", "(", "'../../data/recobell_cat2_index.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "k", "in", "cat_2_dict", ":", "\n", "            ", "f", ".", "write", "(", "k", "+", "','", "+", "str", "(", "cat_2_dict", "[", "k", "]", ")", "+", "'\\n'", ")", "\n", "", "", "with", "open", "(", "'../../data/recobell_cat3_index.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "k", "in", "cat_3_dict", ":", "\n", "            ", "f", ".", "write", "(", "k", "+", "','", "+", "str", "(", "cat_3_dict", "[", "k", "]", ")", "+", "'\\n'", ")", "\n", "", "", "with", "open", "(", "'../../data/recobell_cat4_index.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "k", "in", "cat_4_dict", ":", "\n", "            ", "f", ".", "write", "(", "k", "+", "','", "+", "str", "(", "cat_4_dict", "[", "k", "]", ")", "+", "'\\n'", ")", "\n", "# cat_1_dict = {}", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.recobell_data.main": [[148, 176], ["subprocess.call", "logging.info"], "function", ["None"], ["", "", "", "def", "main", "(", ")", ":", "\n", "    ", "implicit_data_path", "=", "root_path", "+", "\"/raw_data/new_tiny_site_view_log.csv000\"", "\n", "explicit_data_path", "=", "root_path", "+", "\"/raw_data/new_tiny_site_order_log.csv000\"", "\n", "cleaned_implicit_data_path", "=", "root_path", "+", "\"/_implicit.clean.txt\"", "\n", "cleaned_explicit_data_path", "=", "root_path", "+", "\"/_explicit.clean.txt\"", "\n", "\n", "user_index_dict", "=", "root_path", "+", "'/u2index.txt'", "\n", "item_index_dict", "=", "root_path", "+", "'/i2index.txt'", "\n", "combined_data", "=", "root_path", "+", "\"/ratings.txt\"", "\n", "output_root_name", "=", "root_path", "+", "\"/scene_1/\"", "\n", "\n", "# # implicit", "\n", "# gen_implicit_cleaned_data(implicit_data_path, cleaned_implicit_data_path)", "\n", "# # explicit", "\n", "# gen_explicit_cleaned_data(explicit_data_path, cleaned_explicit_data_path)", "\n", "# logging.info(\"--> Done, gen_cleaned_data\")", "\n", "#", "\n", "# # gen ratings with explicit", "\n", "# data_preparation.gen_ratings_data_with_explicit(cleaned_implicit_data_path, cleaned_explicit_data_path,", "\n", "#                                                 user_index_dict, item_index_dict, combined_data)", "\n", "# logging.info(\"--> Done, gen_ratings_data_with_explicit\")", "\n", "\n", "# # div train test data with explicit", "\n", "# data_preparation.div_train_test_data_with_explicit(combined_data, output_root_name)", "\n", "# logging.info(\"--> Done, div_train_test_data_with_explicit\")", "\n", "\n", "subprocess", ".", "call", "(", "[", "'bash'", ",", "'bin/split.sh'", ",", "output_root_name", "]", ")", "\n", "logging", ".", "info", "(", "\"--> Done, split_train_data_into_partition\"", ")", "\n", "# data_for_VALS.preprocessing_for_VALS(data_name)", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.config.Config.__init__": [[15, 45], ["config.Config.show_config_info", "config.Config.load_representation_data", "torch.cuda.is_available", "torch.device", "torch.device"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.config.Config.show_config_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_representation_data"], ["    ", "def", "__init__", "(", "self", ",", "root_path", ",", "params", ")", ":", "\n", "\n", "        ", "self", ".", "attn_pdrop", "=", "params", "[", "'attn_pdrop'", "]", "\n", "self", ".", "resid_pdrop", "=", "params", "[", "'resid_pdrop'", "]", "\n", "self", ".", "n_head", "=", "params", "[", "'n_head'", "]", "\n", "self", ".", "n_layer", "=", "params", "[", "'n_layer'", "]", "\n", "self", ".", "interval", "=", "params", "[", "'interval'", "]", "\n", "self", ".", "eta", "=", "params", "[", "'eta'", "]", "\n", "self", ".", "reg_lambda", "=", "params", "[", "'reg_lambda'", "]", "\n", "self", ".", "num_neg", "=", "params", "[", "'num_neg'", "]", "\n", "self", ".", "max_len", "=", "params", "[", "'max_len'", "]", "\n", "self", ".", "eval_top_k", "=", "params", "[", "'eval_top_k'", "]", "\n", "self", ".", "batch_size", "=", "params", "[", "'batch_size'", "]", "\n", "self", ".", "n_embd", "=", "params", "[", "'n_embd'", "]", "\n", "self", ".", "num_factor", "=", "params", "[", "'num_factor'", "]", "\n", "self", ".", "lr", "=", "params", "[", "'lr'", "]", "\n", "\n", "self", ".", "show_config_info", "(", ")", "\n", "\n", "self", ".", "num_user", ",", "self", ".", "num_item", "=", "self", ".", "load_representation_data", "(", "\n", "root_path", "+", "\"u2index.txt\"", ",", "\n", "root_path", "+", "\"i2index.txt\"", ")", "\n", "\n", "self", ".", "path_rep_user", "=", "root_path", "+", "\"user_repr.txt\"", "\n", "self", ".", "path_rep_item", "=", "root_path", "+", "\"item_repr.txt\"", "\n", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.config.Config.load_representation_data": [[48, 66], ["print", "print", "open", "csv.reader", "csv.reader", "csv.reader", "csv.reader", "open", "csv.reader", "csv.reader", "csv.reader", "csv.reader"], "methods", ["None"], ["", "", "def", "load_representation_data", "(", "self", ",", "u2index_path", ",", "i2index_path", ")", ":", "\n", "        ", "count", "=", "0", "\n", "with", "open", "(", "u2index_path", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "                ", "count", "+=", "1", "\n", "", "", "num_user", "=", "count", "\n", "print", "(", "'Num user: '", ",", "num_user", ")", "\n", "\n", "count", "=", "0", "\n", "with", "open", "(", "i2index_path", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "                ", "count", "+=", "1", "\n", "", "", "num_item", "=", "count", "\n", "print", "(", "'Num item: '", ",", "num_item", ")", "\n", "\n", "return", "num_user", ",", "num_item", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.config.Config.show_config_info": [[67, 74], ["print", "print", "print", "print", "print", "print"], "methods", ["None"], ["", "def", "show_config_info", "(", "self", ")", ":", "\n", "        ", "print", "(", "'*'", "*", "100", ")", "\n", "print", "(", "'Num_factor: '", ",", "self", ".", "num_factor", ")", "\n", "print", "(", "'Eta: '", ",", "self", ".", "eta", ")", "\n", "print", "(", "'Bs: '", ",", "self", ".", "batch_size", ")", "\n", "print", "(", "'Lr: '", ",", "self", ".", "lr", ")", "\n", "print", "(", "'*'", "*", "100", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.__init__": [[11, 24], ["data_util.Data_Utils.load_representation_data", "data_util.Data_Utils.load_interact_matrix_s_ite", "data_util.Data_Utils.get_item_rep", "data_util.Data_Utils.get_user_rep_full", "data_util.Data_Utils.get_dict_array_item_train"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_representation_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_interact_matrix_s_ite", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.get_item_rep", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.get_user_rep_full", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.get_dict_array_item_train"], ["        ", "self", ".", "train_path", "=", "train_path", "\n", "self", ".", "config", "=", "config", "\n", "\n", "self", ".", "num_user", ",", "self", ".", "num_item", "=", "self", ".", "load_representation_data", "(", "\n", "root_path", "+", "\"u2index.txt\"", ",", "\n", "root_path", "+", "\"i2index.txt\"", ")", "\n", "self", ".", "interact_mat", "=", "self", ".", "load_interact_matrix_s_ite", "(", "root_path", "+", "\"without_implicit_in_train/ratings_train.txt\"", ",", "self", ".", "num_user", ",", "\n", "self", ".", "num_item", ")", "\n", "self", ".", "max_len", "=", "config", ".", "max_len", "\n", "self", ".", "num_neg", "=", "config", ".", "num_neg", "\n", "self", ".", "item_representation", ",", "self", ".", "dimension", "=", "self", ".", "get_item_rep", "(", "config", ".", "path_rep_item", ")", "\n", "# self.user_representation = self.get_user_rep(config.path_rep_user, self.dimension)", "\n", "\n", "", "def", "preprocess_test", "(", "self", ",", "test_data", ",", "negative_data", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.preprocess_test": [[25, 53], ["data_util.Data_Utils.get_dict_array_item_train", "progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "data_util.Data_Utils.raise_data_test_no_concat_test", "data.append", "len"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.get_dict_array_item_train", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.raise_data_test_no_concat_test"], ["        ", "data", "=", "[", "]", "\n", "dict_arritem_ids", "=", "self", ".", "get_dict_array_item_train", "(", ")", "\n", "widgets", "=", "[", "progressbar", ".", "Percentage", "(", ")", ",", "\" \"", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "\" \"", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "for", "idx", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "len", "(", "test_data", ")", ")", ")", ":", "\n", "            ", "uid", "=", "test_data", "[", "idx", "]", "[", "0", "]", "\n", "test_item", "=", "test_data", "[", "idx", "]", "[", "1", "]", "\n", "neg_items", "=", "negative_data", "[", "uid", "]", "\n", "arr_items", "=", "dict_arritem_ids", "[", "uid", "]", "\n", "items", "=", "neg_items", "+", "[", "test_item", "]", "\n", "# user_ids, items_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, attn_masks, labels = \\", "\n", "#         self.raise_data_test_ver2(uid, arr_items, test_item, neg_items)", "\n", "# user_ids, items_sequences, target_ids, attn_masks, labels = \\", "\n", "#         self.raise_data_test_ver2(uid, arr_items, test_item, neg_items)", "\n", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ",", "labels", "=", "self", ".", "raise_data_test_no_concat_test", "(", "uid", ",", "arr_items", ",", "test_item", ",", "neg_items", ")", "\n", "data", ".", "append", "(", "{", "\n", "\"user_ids\"", ":", "user_ids", ",", "\n", "\"items_sequences\"", ":", "items_sequences", ",", "\n", "\"target_ids\"", ":", "target_ids", ",", "\n", "# \"user_reps\": user_reps,", "\n", "# \"item_seq_reps\": item_seq_reps,", "\n", "# \"item_target_reps\": item_target_reps,", "\n", "\"attn_masks\"", ":", "attn_masks", ",", "\n", "\"labels\"", ":", "labels", ",", "\n", "\"items\"", ":", "items", "\n", "}", ")", "\n", "", "return", "data", "\n", "\n", "", "def", "get_dict_array_item_train", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.get_dict_array_item_train": [[54, 68], ["open", "progressbar.ProgressBar", "f.readlines", "line.split", "int", "itemids.split.split.split", "elements[].strip", "elements[].strip", "arr_items.append", "int", "item.strip"], "methods", ["None"], ["        ", "dict_arritem_ids", "=", "{", "}", "\n", "with", "open", "(", "self", ".", "train_path", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "f", ".", "readlines", "(", ")", ")", ":", "\n", "                ", "elements", "=", "line", ".", "split", "(", "'|'", ")", "\n", "uid", "=", "int", "(", "elements", "[", "0", "]", ".", "strip", "(", ")", ")", "\n", "\n", "itemids", "=", "elements", "[", "1", "]", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "\n", "itemids", "=", "itemids", ".", "split", "(", "','", ")", "\n", "arr_items", "=", "[", "]", "\n", "for", "item", "in", "itemids", ":", "\n", "                    ", "arr_items", ".", "append", "(", "int", "(", "item", ".", "strip", "(", ")", ")", ")", "\n", "", "dict_arritem_ids", "[", "uid", "]", "=", "arr_items", "\n", "", "", "return", "dict_arritem_ids", "\n", "\n", "", "def", "load_representation_data", "(", "self", ",", "u2index_path", ",", "i2index_path", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.load_representation_data": [[69, 87], ["print", "print", "open", "csv.reader", "open", "csv.reader"], "methods", ["None"], ["        ", "count", "=", "0", "\n", "with", "open", "(", "u2index_path", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "                ", "count", "+=", "1", "\n", "", "", "num_user", "=", "count", "\n", "print", "(", "'Num user: '", ",", "num_user", ")", "\n", "\n", "count", "=", "0", "\n", "with", "open", "(", "i2index_path", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "                ", "count", "+=", "1", "\n", "", "", "num_item", "=", "count", "\n", "print", "(", "'Num item: '", ",", "num_item", ")", "\n", "\n", "return", "num_user", ",", "num_item", "\n", "\n", "", "def", "load_interact_matrix_s_ite", "(", "self", ",", "file_path", ",", "num_user", ",", "num_item", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.load_interact_matrix_s_ite": [[88, 105], ["datetime.datetime.now", "scipy.dok_matrix", "print", "open", "csv.reader", "int", "itemids.split.split.split", "datetime.datetime.now", "line[].strip", "int", "item.strip"], "methods", ["None"], ["        ", "start", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "# Construct matrix", "\n", "# ma tran thua voi num_user x num_item , init value la false.", "\n", "mat", "=", "sp", ".", "dok_matrix", "(", "(", "num_user", ",", "num_item", ")", ",", "dtype", "=", "np", ".", "bool_", ")", "\n", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "csv_reader", ":", "\n", "                ", "uid", "=", "int", "(", "line", "[", "0", "]", ")", "\n", "itemids", "=", "line", "[", "1", "]", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "\n", "itemids", "=", "itemids", ".", "split", "(", "\",\"", ")", "\n", "for", "item", "in", "itemids", ":", "\n", "                    ", "itemid", "=", "int", "(", "item", ".", "strip", "(", ")", ")", "\n", "mat", "[", "uid", ",", "itemid", "]", "=", "True", "\n", "", "", "", "print", "(", "\"time load_interact_matrix_s_ite: \"", ",", "datetime", ".", "datetime", ".", "now", "(", ")", "-", "start", ")", "\n", "return", "mat", "\n", "\n", "", "def", "load_negative_data", "(", "self", ",", "file_path", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.load_negative_data": [[106, 124], ["print", "open", "csv.reader", "len", "line[].split", "int", "negative_dict[].append", "int"], "methods", ["None"], ["        ", "negative_dict", "=", "{", "}", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "# i = 0", "\n", "# raw data: (4,2504)|15383|6979|41741|79116|53192|12932|29099|", "\n", "for", "line", "in", "csv_reader", ":", "\n", "# line: ['(4,2504)', '15383', '6979', '41741', '79116', '53192', '12932',..]", "\n", "                ", "user", "=", "line", "[", "0", "]", ".", "split", "(", "\",\"", ")", "# ['(158', '4966)']", "\n", "user", "=", "int", "(", "user", "[", "0", "]", "[", "1", ":", "]", ")", "# 158", "\n", "# assert user == i", "\n", "# i += 1", "\n", "\n", "negative_dict", "[", "user", "]", "=", "[", "]", "# doi voi moi user co 999 item tuong ung.", "\n", "for", "x", "in", "line", "[", "1", ":", "]", ":", "# danh sach cac item tuong ung voi user do khong co tuong tac explicit.", "\n", "                    ", "negative_dict", "[", "user", "]", ".", "append", "(", "int", "(", "x", ")", ")", "\n", "", "", "", "print", "(", "'len negative data: '", ",", "len", "(", "negative_dict", ")", ")", "\n", "return", "negative_dict", "# user_id: list negative item.", "\n", "\n", "", "def", "load_test_data_s_ite", "(", "self", ",", "file_path", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.load_test_data_s_ite": [[125, 134], ["print", "open", "csv.reader", "len", "rating_list.append", "int", "int"], "methods", ["None"], ["        ", "rating_list", "=", "[", "]", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "csv_reader", ":", "\n", "                ", "user", ",", "item", "=", "int", "(", "line", "[", "0", "]", ")", ",", "int", "(", "line", "[", "1", "]", ")", "# get uid, itemid", "\n", "rating_list", ".", "append", "(", "[", "user", ",", "item", "]", ")", "\n", "", "", "print", "(", "'Length test data: '", ",", "len", "(", "rating_list", ")", ")", "\n", "return", "rating_list", "\n", "\n", "", "def", "raise_data_test_ver2", "(", "self", ",", "uid", ",", "arr_items", ",", "test_item", ",", "negative_item", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.raise_data_test_ver2": [[135, 172], ["len", "range", "range", "range", "attn_mask.append", "range", "range", "len", "attn_mask.append", "len", "user_ids.append", "attn_masks.append", "items_sequences.append", "attn_mask.append", "item_seq_truth.append", "attn_mask.append", "len", "user_ids.append", "range", "items_sequences.append", "attn_masks.append", "item_seq_pred.append"], "methods", ["None"], ["        ", "user_ids", "=", "[", "]", "\n", "items_sequences", "=", "[", "]", "\n", "attn_masks", "=", "[", "]", "\n", "# user_reps = []", "\n", "# item_seq_reps = []", "\n", "# item_target_reps = []", "\n", "target_ids", "=", "negative_item", "+", "[", "test_item", "]", "\n", "# item_target_reps = [self.item_representation[x] for x in target_ids]", "\n", "labels", "=", "[", "0", "]", "*", "len", "(", "negative_item", ")", "+", "[", "1", "]", "\n", "k", "=", "len", "(", "arr_items", ")", "\n", "if", "k", ">=", "self", ".", "max_len", ":", "\n", "            ", "item_seq_truth", "=", "arr_items", "[", "1", ":", "self", ".", "max_len", "]", "\n", "attn_mask", "=", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "target_ids", ")", ")", ":", "\n", "                ", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "item_seq_pred", "=", "item_seq_truth", "+", "[", "target_ids", "[", "i", "]", "]", "\n", "# item_seq_reps.append([self.item_representation[x] for x in item_seq_pred])", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "items_sequences", ".", "append", "(", "item_seq_pred", ")", "\n", "", "", "else", ":", "\n", "            ", "item_seq_truth", "=", "[", "]", "\n", "attn_mask", "=", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "1", ")", "\n", "item_seq_truth", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n", "", "attn_mask", ".", "append", "(", "1", ")", "\n", "for", "i", "in", "range", "(", "k", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "target_ids", ")", ")", ":", "\n", "                ", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "item_seq_pred", "=", "item_seq_truth", "+", "[", "target_ids", "[", "i", "]", "]", "\n", "# isr = [self.item_representation[x] for x in item_seq_pred]", "\n", "for", "j", "in", "range", "(", "k", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_seq_pred", ".", "append", "(", "self", ".", "num_item", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.raise_data_ver2": [[173, 278], ["min", "len", "len", "range", "range", "range", "range", "range", "target_ids.append", "items_sequences.append", "im_labels.append", "user_ids.append", "attn_masks.append", "range", "range", "range", "range", "target_ids.append", "items_sequences.append", "im_labels.append", "user_ids.append", "attn_masks.append", "range", "attn_mask.append", "attn_mask.append", "item_truth.append", "ex_labels.append", "ex_labels.append", "user_ids.append", "im_labels.append", "ex_labels.append", "random.randrange", "item_seq.append", "range", "items_sequences.append", "target_ids.append", "attn_masks.append", "attn_mask.append", "attn_mask.append", "item_truth.append", "ex_labels.append", "ex_labels.append", "user_ids.append", "im_labels.append", "ex_labels.append", "random.randrange", "item_seq.append", "range", "items_sequences.append", "target_ids.append", "attn_masks.append", "range", "random.randrange", "item_seq.append", "range", "random.randrange", "item_seq.append", "range", "range"], "methods", ["None"], ["# isr.append(self.item_representation[-1])", "\n", "", "items_sequences", ".", "append", "(", "item_seq_pred", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "# item_seq_reps.append(isr)", "\n", "# return user_ids, items_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, attn_masks, labels", "\n", "\n", "", "", "return", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ",", "labels", "\n", "\n", "", "def", "raise_data_ver2", "(", "self", ",", "uid", ",", "arr_items", ",", "arr_interacts", ")", ":", "\n", "        ", "user_ids", "=", "[", "]", "\n", "items_sequences", "=", "[", "]", "\n", "target_ids", "=", "[", "]", "\n", "# user_reps = []", "\n", "# item_seq_reps = []", "\n", "# item_target_reps = []", "\n", "im_labels", "=", "[", "]", "\n", "ex_labels", "=", "[", "]", "\n", "attn_masks", "=", "[", "]", "\n", "k", "=", "min", "(", "len", "(", "arr_interacts", ")", ",", "len", "(", "arr_items", ")", ")", "\n", "if", "k", ">=", "self", ".", "max_len", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "# t\u1ea1o t\u1eebng \u0111i\u1ec3m d\u1eef li\u1ec7u 1", "\n", "                ", "attn_mask", "=", "[", "1", "]", "\n", "# mask nh\u01b0 nhau trong m\u1ed7i chu\u1ed7i d\u1eef li\u1ec7u", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "j", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "item_truth", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", "+", "1", ")", "]", "\n", "# item_truth_rep = [self.item_representation[arr_items[j]] for j in range(i+1)]", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "# item_truth_rep.append(self.item_representation[-1])", "\n", "", "target_ids", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n", "# item_target_reps.append(self.item_representation[arr_items[i]])", "\n", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "# item_seq_reps.append(item_truth_rep)", "\n", "im_labels", ".", "append", "(", "1", ")", "\n", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "if", "arr_interacts", "[", "i", "]", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "0", ")", "\n", "", "for", "j", "in", "range", "(", "self", ".", "num_neg", ")", ":", "\n", "                    ", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "im_labels", ".", "append", "(", "0", ")", "\n", "ex_labels", ".", "append", "(", "0", ")", "\n", "item_seq", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", ")", "]", "\n", "# item_neg_seq_reps = [self.item_representation[arr_items[j]] for j in range(i)]", "\n", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "while", "(", "uid", ",", "x", ")", "in", "self", ".", "interact_mat", ":", "\n", "                        ", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "", "item_seq", ".", "append", "(", "x", ")", "\n", "# item_neg_seq_reps.append(self.item_representation[x])", "\n", "for", "kk", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                        ", "item_seq", ".", "append", "(", "self", ".", "num_item", ")", "\n", "# item_neg_seq_reps.append(self.item_representation[-1])", "\n", "", "items_sequences", ".", "append", "(", "item_seq", ")", "\n", "# item_seq_reps.append(item_neg_seq_reps)", "\n", "target_ids", ".", "append", "(", "x", ")", "\n", "# item_target_reps.append(self.item_representation[x])", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "# t\u1ea1o t\u1eebng \u0111i\u1ec3m d\u1eef li\u1ec7u 1", "\n", "                ", "attn_mask", "=", "[", "1", "]", "\n", "# mask nh\u01b0 nhau trong m\u1ed7i chu\u1ed7i d\u1eef li\u1ec7u", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "j", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "item_truth", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", "+", "1", ")", "]", "\n", "# item_truth_rep = [self.item_representation[arr_items[j]] for j in range(i+1)]", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "# item_truth_rep.append(self.item_representation[-1])", "\n", "", "target_ids", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n", "# item_target_reps.append(self.item_representation[arr_items[i]])", "\n", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "# item_seq_reps.append(item_truth_rep)", "\n", "im_labels", ".", "append", "(", "1", ")", "\n", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "if", "arr_interacts", "[", "i", "]", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "0", ")", "\n", "", "for", "j", "in", "range", "(", "self", ".", "num_neg", ")", ":", "\n", "                    ", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "im_labels", ".", "append", "(", "0", ")", "\n", "ex_labels", ".", "append", "(", "0", ")", "\n", "item_seq", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", ")", "]", "\n", "# item_neg_seq_reps = [self.item_representation[arr_items[j]] for j in range(i)]", "\n", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "while", "(", "uid", ",", "x", ")", "in", "self", ".", "interact_mat", ":", "\n", "                        ", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "", "item_seq", ".", "append", "(", "x", ")", "\n", "# item_neg_seq_reps.append(self.item_representation[x])", "\n", "for", "kk", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                        ", "item_seq", ".", "append", "(", "self", ".", "num_item", ")", "\n", "# item_neg_seq_reps.append(self.item_representation[-1])", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.get_item_rep": [[279, 303], ["f.read.split", "int", "range", "open", "f.read", "data[].strip", "line.split", "int", "[].strip", "ast.literal_eval", "numpy.zeros", "range", "X.append", "[].strip", "len"], "methods", ["None"], ["", "items_sequences", ".", "append", "(", "item_seq", ")", "\n", "# item_seq_reps.append(item_neg_seq_reps)", "\n", "target_ids", ".", "append", "(", "x", ")", "\n", "# item_target_reps.append(self.item_representation[x])", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "\n", "", "", "", "return", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "ex_labels", ",", "im_labels", ",", "attn_masks", "\n", "\n", "", "def", "get_item_rep", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ")", "as", "f", ":", "\n", "            ", "data", "=", "f", ".", "read", "(", ")", "\n", "\n", "", "data", "=", "data", ".", "split", "(", "\"\\n\"", ")", "\n", "dimension", "=", "int", "(", "data", "[", "0", "]", ".", "strip", "(", ")", ")", "\n", "data", "=", "data", "[", "1", ":", "-", "1", "]", "\n", "item_repr", "=", "{", "}", "\n", "for", "line", "in", "data", ":", "\n", "            ", "parts", "=", "line", ".", "split", "(", "\"|,|\"", ")", "\n", "id", "=", "int", "(", "parts", "[", "0", "]", "[", "1", ":", "]", ".", "strip", "(", ")", ")", "\n", "arr", "=", "parts", "[", "1", "]", "[", ":", "-", "1", "]", ".", "strip", "(", ")", "\n", "arr", "=", "literal_eval", "(", "arr", ")", "\n", "pos", "=", "[", "a", "[", "0", "]", "for", "a", "in", "arr", "]", "\n", "vl", "=", "[", "a", "[", "1", "]", "for", "a", "in", "arr", "]", "\n", "dense_arr", "=", "np", ".", "zeros", "(", "shape", "=", "(", "dimension", ",", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "pos", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.get_user_rep_full": [[304, 315], ["numpy.array", "progressbar.ProgressBar", "range", "numpy.zeros", "numpy.array", "user_repr.append", "len", "numpy.sum"], "methods", ["None"], ["# print(i)", "\n", "                ", "dense_arr", "[", "pos", "[", "i", "]", "]", "=", "vl", "[", "i", "]", "\n", "", "item_repr", "[", "id", "]", "=", "dense_arr", "\n", "", "X", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_item", ")", ":", "\n", "            ", "X", ".", "append", "(", "item_repr", "[", "i", "]", ")", "\n", "", "return", "X", ",", "dimension", "\n", "\n", "", "def", "preprocess_data", "(", "self", ")", ":", "\n", "        ", "users_ids", "=", "[", "]", "\n", "items_seq", "=", "[", "]", "\n", "targets_ids", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.get_user_rep": [[316, 337], ["f.read.split", "open", "f.read", "line.split", "int", "[].strip", "ast.literal_eval", "numpy.zeros", "range", "[].strip", "len"], "methods", ["None"], ["implicit_labels", "=", "[", "]", "\n", "explicit_labels", "=", "[", "]", "\n", "attention_masks", "=", "[", "]", "\n", "with", "open", "(", "self", ".", "train_path", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "f", ".", "readlines", "(", ")", ")", ":", "\n", "                ", "elements", "=", "line", ".", "split", "(", "'|'", ")", "\n", "uid", "=", "int", "(", "elements", "[", "0", "]", ".", "strip", "(", ")", ")", "\n", "\n", "itemids", "=", "elements", "[", "1", "]", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "\n", "itemids", "=", "itemids", ".", "split", "(", "','", ")", "\n", "arr_items", "=", "[", "]", "\n", "for", "item", "in", "itemids", ":", "\n", "                    ", "arr_items", ".", "append", "(", "int", "(", "item", ".", "strip", "(", ")", ")", ")", "\n", "\n", "", "interacts", "=", "elements", "[", "2", "]", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "\n", "interacts", "=", "interacts", ".", "split", "(", "','", ")", "\n", "arr_interacts", "=", "[", "]", "\n", "for", "interact", "in", "interacts", ":", "\n", "                    ", "arr_interacts", ".", "append", "(", "int", "(", "interact", ".", "strip", "(", ")", ")", ")", "\n", "# print(arr_interacts)", "\n", "# user_ids, item_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, ex_labels, im_labels, attn_masks = \\", "\n", "#             self.raise_data_ver2(uid, arr_items, arr_interacts)", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.preprocess_data": [[338, 383], ["open", "progressbar.ProgressBar", "f.readlines", "line.split", "int", "itemids.split.split.split", "interacts.split.split.split", "data_util.Data_Utils.raise_data_no_concat_test", "users_ids.extend", "items_seq.extend", "targets_ids.extend", "implicit_labels.extend", "explicit_labels.extend", "attention_masks.extend", "elements[].strip", "elements[].strip", "arr_items.append", "elements[].strip", "arr_interacts.append", "int", "int", "item.strip", "interact.strip"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.raise_data_no_concat_test"], ["# user_ids, item_sequences, target_ids, ex_labels, im_labels, attn_masks = \\", "\n", "#             self.raise_data_ver2(uid, arr_items, arr_interacts)", "\n", "", "user_ids", ",", "item_sequences", ",", "target_ids", ",", "ex_labels", ",", "im_labels", ",", "attn_masks", "=", "self", ".", "raise_data_no_concat_test", "(", "uid", ",", "arr_items", ",", "arr_interacts", ")", "\n", "users_ids", ".", "extend", "(", "user_ids", ")", "\n", "items_seq", ".", "extend", "(", "item_sequences", ")", "\n", "targets_ids", ".", "extend", "(", "target_ids", ")", "\n", "# lst_user_reps.extend(user_reps)", "\n", "# lst_item_seq_reps.extend(item_seq_reps)", "\n", "# lst_item_target_reps.extend(item_target_reps)", "\n", "implicit_labels", ".", "extend", "(", "im_labels", ")", "\n", "explicit_labels", ".", "extend", "(", "ex_labels", ")", "\n", "attention_masks", ".", "extend", "(", "attn_masks", ")", "\n", "# return users_ids, items_seq, targets_ids, lst_user_reps, lst_item_seq_reps,\\", "\n", "#          lst_item_target_reps, implicit_labels, explicit_labels, attention_masks", "\n", "", "", "return", "users_ids", ",", "items_seq", ",", "targets_ids", ",", "implicit_labels", ",", "explicit_labels", ",", "attention_masks", "\n", "\n", "", "def", "raise_data_no_concat_test", "(", "self", ",", "uid", ",", "arr_items", ",", "arr_interacts", ")", ":", "\n", "        ", "user_ids", "=", "[", "]", "\n", "items_sequences", "=", "[", "]", "\n", "target_ids", "=", "[", "]", "\n", "im_labels", "=", "[", "]", "\n", "ex_labels", "=", "[", "]", "\n", "attn_masks", "=", "[", "]", "\n", "k", "=", "min", "(", "len", "(", "arr_interacts", ")", ",", "len", "(", "arr_items", ")", ")", "\n", "if", "k", ">=", "self", ".", "max_len", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "# t\u1ea1o t\u1eebng \u0111i\u1ec3m d\u1eef li\u1ec7u", "\n", "                ", "attn_mask", "=", "[", "1", "]", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "j", "in", "range", "(", "i", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "item_truth", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", ")", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "", "target_ids", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "im_labels", ".", "append", "(", "1", ")", "\n", "user_ids", ".", "append", "(", "uid", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "if", "arr_interacts", "[", "i", "]", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "0", ")", "\n", "", "for", "j", "in", "range", "(", "self", ".", "num_neg", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.raise_data_no_concat_test": [[384, 453], ["min", "len", "len", "range", "range", "range", "range", "range", "target_ids.append", "items_sequences.append", "im_labels.append", "user_ids.append", "attn_masks.append", "range", "range", "range", "range", "target_ids.append", "items_sequences.append", "im_labels.append", "user_ids.append", "attn_masks.append", "range", "attn_mask.append", "attn_mask.append", "item_truth.append", "ex_labels.append", "ex_labels.append", "user_ids.append", "im_labels.append", "ex_labels.append", "random.randrange", "items_sequences.append", "target_ids.append", "attn_masks.append", "attn_mask.append", "attn_mask.append", "item_truth.append", "ex_labels.append", "ex_labels.append", "user_ids.append", "im_labels.append", "ex_labels.append", "random.randrange", "items_sequences.append", "target_ids.append", "attn_masks.append", "range", "random.randrange", "range", "random.randrange"], "methods", ["None"], ["                    ", "user_ids", ".", "append", "(", "uid", ")", "\n", "im_labels", ".", "append", "(", "0", ")", "\n", "ex_labels", ".", "append", "(", "0", ")", "\n", "# item_seq = [arr_items[j] for j in range(i)]", "\n", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "while", "(", "uid", ",", "x", ")", "in", "self", ".", "interact_mat", ":", "\n", "                        ", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "target_ids", ".", "append", "(", "x", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "                ", "attn_mask", "=", "[", "1", "]", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "j", "in", "range", "(", "i", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "item_truth", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", ")", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "", "target_ids", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "im_labels", ".", "append", "(", "1", ")", "\n", "user_ids", ".", "append", "(", "uid", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "if", "arr_interacts", "[", "i", "]", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "0", ")", "\n", "", "for", "j", "in", "range", "(", "self", ".", "num_neg", ")", ":", "\n", "                    ", "user_ids", ".", "append", "(", "uid", ")", "\n", "im_labels", ".", "append", "(", "0", ")", "\n", "ex_labels", ".", "append", "(", "0", ")", "\n", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "while", "(", "uid", ",", "x", ")", "in", "self", ".", "interact_mat", ":", "\n", "                        ", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "target_ids", ".", "append", "(", "x", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "", "", "", "return", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "ex_labels", ",", "im_labels", ",", "attn_masks", "\n", "\n", "", "def", "raise_data_test_no_concat_test", "(", "self", ",", "uid", ",", "arr_items", ",", "test_item", ",", "negative_item", ")", ":", "\n", "        ", "uid_ids", "=", "[", "]", "\n", "items_sequences", "=", "[", "]", "\n", "attn_masks", "=", "[", "]", "\n", "target_ids", "=", "negative_item", "+", "[", "test_item", "]", "\n", "labels", "=", "[", "0", "]", "*", "len", "(", "negative_item", ")", "+", "[", "1", "]", "\n", "k", "=", "len", "(", "arr_items", ")", "\n", "if", "k", ">=", "self", ".", "max_len", ":", "\n", "            ", "item_seq_truth", "=", "arr_items", "[", ":", "self", ".", "max_len", "]", "\n", "attn_mask", "=", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "target_ids", ")", ")", ":", "\n", "                ", "uid_ids", ".", "append", "(", "uid", ")", "\n", "items_sequences", ".", "append", "(", "item_seq_truth", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "", "", "else", ":", "\n", "            ", "item_seq_truth", "=", "arr_items", "\n", "for", "j", "in", "range", "(", "k", ",", "self", ".", "max_len", ")", ":", "\n", "                ", "item_seq_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "", "attn_mask", "=", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "i", "in", "range", "(", "k", ",", "self", ".", "max_len", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "target_ids", ")", ")", ":", "\n", "                ", "uid_ids", ".", "append", "(", "uid", ")", "\n", "items_sequences", ".", "append", "(", "item_seq_truth", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.data_util.Data_Utils.raise_data_test_no_concat_test": [[454, 491], ["len", "range", "range", "range", "range", "range", "range", "len", "attn_mask.append", "len", "uid_ids.append", "items_sequences.append", "attn_masks.append", "item_seq_truth.append", "attn_mask.append", "attn_mask.append", "len", "uid_ids.append", "items_sequences.append", "attn_masks.append"], "methods", ["None"], ["\n", "# print(\"uid:\", np.shape(np.array(uid_ids)))", "\n", "# print(\"item sequence: \", np.shape(np.array(items_sequences)))", "\n", "# print(\"target ids:\", np.shape(np.array(target_ids)))", "\n", "# print(\"attn mask: \", np.shape(np.array(attn_masks)))", "\n", "# print(\"labels: \", np.shape(np.array(labels)))", "\n", "\n", "", "", "return", "uid_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ",", "labels", "", "", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model.CausalSelfAttention.__init__": [[26, 43], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Manager.__init__"], ["\n", "gmf_embedding_weight_user_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_user", ",", "num_factors_gmf", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_gmf", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_user_onehot'", ")", "\n", "gmf_embedding_weight_item_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_item", ",", "num_factors_gmf", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_gmf", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_item_onehot'", ")", "\n", "mlp_embedding_weight_user_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_user", ",", "num_factors_mlp", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_mlp", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_user_onehot'", ")", "\n", "mlp_embedding_weight_item_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_item", ",", "num_factors_mlp", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_mlp", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_item_onehot'", ")", "\n", "\n", "return", "{", "'gmf_user_onehot'", ":", "gmf_embedding_weight_user_onehot", ",", "\n", "'gmf_item_onehot'", ":", "gmf_embedding_weight_item_onehot", ",", "\n", "'mlp_user_onehot'", ":", "mlp_embedding_weight_user_onehot", ",", "\n", "'mlp_item_onehot'", ":", "mlp_embedding_weight_item_onehot", "}", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model.CausalSelfAttention.forward": [[44, 70], ["x.size", "attn_mask1.view().detach().cpu().numpy", "numpy.tile", "numpy.expand_dims", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "model.CausalSelfAttention.key().view().transpose", "model.CausalSelfAttention.query().view().transpose", "model.CausalSelfAttention.value().view().transpose", "model.CausalSelfAttention.masked_fill", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "model.CausalSelfAttention.attn_drop", "model.CausalSelfAttention.transpose().contiguous().view", "model.CausalSelfAttention.resid_drop", "float", "model.CausalSelfAttention.proj", "attn_mask1.view().detach().cpu", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "model.CausalSelfAttention.key().view", "model.CausalSelfAttention.query().view", "model.CausalSelfAttention.value().view", "model.CausalSelfAttention.transpose", "math.sqrt", "model.CausalSelfAttention.transpose().contiguous", "model.CausalSelfAttention.size", "attn_mask1.view().detach", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "model.CausalSelfAttention.key", "model.CausalSelfAttention.query", "model.CausalSelfAttention.value", "model.CausalSelfAttention.transpose", "attn_mask1.view"], "methods", ["None"], ["\n", "", "def", "create_model", "(", "self", ")", ":", "\n", "# custom params", "\n", "        ", "num_user", "=", "self", ".", "params", "[", "'num_user'", "]", "\n", "num_item", "=", "self", ".", "params", "[", "'num_item'", "]", "\n", "# user_pcat_dimension = self.params['user_pcat_dimension']", "\n", "# item_pcat_dimension = self.params['item_pcat_dimension']", "\n", "learning_rate", "=", "self", ".", "params", "[", "'learning_rate'", "]", "\n", "num_factors", "=", "self", ".", "params", "[", "'num_factors'", "]", "\n", "qlambda", "=", "self", ".", "params", "[", "'lambda'", "]", "\n", "eta_1", "=", "self", ".", "params", "[", "'eta_1'", "]", "\n", "eta_2", "=", "self", ".", "params", "[", "'eta_2'", "]", "\n", "batch_size", "=", "self", ".", "params", "[", "'batch_size'", "]", "\n", "# user_dense_shape = [300, 188]", "\n", "# item_dense_shape = [64, 188]", "\n", "global_epoch", "=", "tf", ".", "Variable", "(", "0", ",", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'global_epoch'", ")", "\n", "\n", "with", "tf", ".", "device", "(", "'/gpu:0'", ")", ":", "\n", "            ", "print", "(", "'Chay voi GPU----------------------------------------------------->>>>>>'", ")", "\n", "user_index", ",", "item_index", "=", "ImToEx", ".", "get_place_holder", "(", ")", "\n", "embedding_weight", "=", "ImToEx", ".", "get_embedding_weight", "(", "num_user", ",", "num_item", ",", "num_factors", ")", "\n", "\n", "# -------------------------------- GMF part -------------------------------", "\n", "\n", "gmf_pu_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'gmf_user_onehot'", "]", ",", "user_index", ",", "\n", "name", "=", "\"gmf_pu_onehot\"", ")", "\n", "gmf_qi_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'gmf_item_onehot'", "]", ",", "item_index", ",", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model.Block.__init__": [[74, 84], ["torch.Module.__init__", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "model.CausalSelfAttention", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.GELU", "torch.GELU", "torch.GELU", "torch.GELU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Manager.__init__"], ["\n", "gmf_phi", "=", "tf", ".", "multiply", "(", "gmf_pu", ",", "gmf_qi", ",", "name", "=", "'gmf_phi'", ")", "\n", "gmf_h", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'gmf_h'", ")", "\n", "\n", "# --------------------------------- MLP part --------------------------------", "\n", "mlp_pu_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'mlp_user_onehot'", "]", ",", "user_index", ",", "\n", "name", "=", "\"mlp_pu_onehot\"", ")", "\n", "mlp_qi_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'mlp_item_onehot'", "]", ",", "item_index", ",", "\n", "name", "=", "\"mlp_qi_onehot\"", ")", "\n", "\n", "mlp_pu", "=", "tf", ".", "identity", "(", "mlp_pu_onehot", ",", "name", "=", "'mlp_pu'", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model.Block.forward": [[86, 90], ["model.Block.attn", "model.Block.mlp", "model.Block.ln1", "model.Block.ln2"], "methods", ["None"], ["\n", "mlp_weights", "=", "{", "\n", "'w1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "4", "*", "num_factors", ",", "2", "*", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "1", "/", "num_factors", ")", ",", "\n", "name", "=", "'mlp_weight1'", ")", ",", "\n", "'w2'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", ",", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors", ")", ",", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model.BertIte.__init__": [[92, 125], ["torch.Module.__init__", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor.append", "torch.FloatTensor.append", "torch.FloatTensor.append", "torch.FloatTensor.append", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Embedding.from_pretrained", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BCELoss", "torch.BCELoss", "torch.BCELoss", "torch.BCELoss", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "model.Block", "range"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Manager.__init__"], ["'h'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'mlp_h'", ")", "\n", "}", "\n", "mlp_biases", "=", "{", "\n", "'b1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", "]", ")", ",", "name", "=", "'mlp_bias1'", ")", ",", "\n", "'b2'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "num_factors", "]", ")", ",", "name", "=", "'mlp_bias2'", ")", "\n", "}", "\n", "\n", "mlp_phi_1", "=", "tf", ".", "concat", "(", "[", "mlp_pu", ",", "mlp_qi", "]", ",", "axis", "=", "-", "1", ",", "name", "=", "'mlp_phi1'", ")", "\n", "mlp_phi_2", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "mlp_phi_1", ",", "mlp_weights", "[", "'w1'", "]", ")", ",", "mlp_biases", "[", "'b1'", "]", ")", ",", "\n", "name", "=", "'mlp_phi2'", ")", "\n", "mlp_phi_3", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "mlp_phi_2", ",", "mlp_weights", "[", "'w2'", "]", ")", ",", "mlp_biases", "[", "'b2'", "]", ")", ",", "\n", "name", "=", "'mlp_phi3'", ")", "\n", "\n", "# --------------------------------- implicit part ------------------------------------", "\n", "# 1 x 2*num_factors", "\n", "im_phi", "=", "tf", ".", "concat", "(", "[", "gmf_phi", ",", "mlp_phi_3", "]", ",", "axis", "=", "1", ",", "name", "=", "'im_phi'", ")", "\n", "# 2*num_factors x 1", "\n", "h_implicit", "=", "tf", ".", "concat", "(", "[", "gmf_h", ",", "mlp_weights", "[", "'h'", "]", "]", ",", "axis", "=", "0", ",", "name", "=", "'h_implicit'", ")", "\n", "# tf.squeeze() 1 x 1", "\n", "im_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "matmul", "(", "im_phi", ",", "h_implicit", ")", ",", "name", "=", "'prediction_implicit'", ")", "\n", "\n", "# --------------------------------- explicit part ------------------------------------", "\n", "ex_weights", "=", "{", "\n", "'w1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", ",", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors", ")", ",", "\n", "name", "=", "'ex_weight1'", ")", ",", "\n", "'h'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'h_explicit'", ")", "\n", "}", "\n", "ex_biases", "=", "{", "\n", "'b1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "num_factors", "]", ")", ",", "name", "=", "'ex_bias1'", ")", ",", "\n", "}", "\n", "# 1 x num_factors", "\n", "ex_phi", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "im_phi", ",", "ex_weights", "[", "'w1'", "]", ")", ",", "ex_biases", "[", "'b1'", "]", ")", ",", "name", "=", "'ex_phi'", ")", "\n", "train_ex_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "matmul", "(", "ex_phi", ",", "ex_weights", "[", "'h'", "]", ")", ",", "name", "=", "'train_prediction_explicit'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model.BertIte.forward": [[126, 171], ["time.time", "model.BertIte.embedding_user_repr", "model.BertIte.emb_rep_u", "model.BertIte.embedding_user", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "model.BertIte.embedding_item_repr", "model.BertIte.emb_rep_i", "model.BertIte.embedding_item", "model.BertIte.embedding_item_repr", "model.BertIte.emb_rep_i", "model.BertIte.embedding_item", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "model.BertIte.act_fn", "click.squeeze.squeeze.squeeze", "model.BertIte.act_fn", "model.BertIte.act_fn", "action.squeeze.squeeze.squeeze", "block.forward", "time.time", "model.BertIte.implicit", "model.BertIte.explicit1", "model.BertIte.explicit"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.forward"], ["# ex_prediction = tf.squeeze(tf.multiply(im_prediction, train_ex_prediction), name='prediction_explicit')", "\n", "ex_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "multiply", "(", "tf", ".", "nn", ".", "sigmoid", "(", "im_prediction", ")", ",", "tf", ".", "nn", ".", "sigmoid", "(", "train_ex_prediction", ")", ")", ",", "\n", "name", "=", "'prediction_explicit'", ")", "\n", "# ex_prediction = tf.squeeze(tf.nn.sigmoid(train_ex_prediction), name='prediction_explicit')", "\n", "'''\n            # ---------------------------------- square loss ---------------------------------------------\n            labels = tf.placeholder(tf.float32, shape=[None], name='labels')\n            y1_indicators = tf.placeholder(tf.float32, shape=[None], name='y1_indicators')\n            y2_indicators = tf.placeholder(tf.float32, shape=[None], name='y2_indicators')\n\n            loss_implicit_list = tf.square(tf.subtract(labels, im_prediction), name='y1_loss_list')\n            loss_implicit = tf.reduce_mean(tf.multiply(y1_indicators, loss_implicit_list), name='y1_loss')\n            loss_explicit_list = tf.square(tf.subtract(labels, train_ex_prediction), name='y2_loss_list')\n            loss_explicit = tf.reduce_mean(tf.multiply(y2_indicators, loss_explicit_list), name='y2_loss')\n\n            regularizer = tf.add(tf.add(tf.reduce_mean(tf.square(gmf_pu)), tf.reduce_mean(tf.square(gmf_qi))),\n                                 tf.add(tf.reduce_mean(tf.square(mlp_pu)), tf.reduce_mean(tf.square(mlp_qi))),\n                                 name='regularizer')\n\n            loss = tf.add(tf.add(tf.multiply(eta_1, loss_implicit), loss_explicit), tf.multiply(qlambda, regularizer),\n                          name='loss')\n            '''", "\n", "# ---------------------------------- log loss ---------------------------------------------", "\n", "labels", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'labels'", ")", "\n", "y1_indicators", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'y1_indicators'", ")", "\n", "y2_indicators", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'y2_indicators'", ")", "\n", "\n", "loss_implicit_list", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "labels", ",", "\n", "logits", "=", "im_prediction", ",", "\n", "name", "=", "'y1_loss_list'", ")", "\n", "loss_implicit", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "multiply", "(", "y1_indicators", ",", "loss_implicit_list", ")", ",", "name", "=", "'y1_loss'", ")", "\n", "loss_explicit_list", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "labels", ",", "\n", "logits", "=", "train_ex_prediction", ",", "\n", "name", "=", "'y2_loss_list'", ")", "\n", "loss_explicit", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "multiply", "(", "y2_indicators", ",", "loss_explicit_list", ")", ",", "name", "=", "'y2_loss'", ")", "\n", "\n", "regularizer", "=", "tf", ".", "add", "(", "tf", ".", "add", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "gmf_pu", ")", ")", ",", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "gmf_qi", ")", ")", ")", ",", "\n", "tf", ".", "add", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "mlp_pu", ")", ")", ",", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "mlp_qi", ")", ")", ")", ",", "\n", "name", "=", "'regularizer'", ")", "\n", "\n", "loss", "=", "tf", ".", "add", "(", "tf", ".", "add", "(", "tf", ".", "multiply", "(", "eta_1", ",", "loss_implicit", ")", ",", "loss_explicit", ")", ",", "tf", ".", "multiply", "(", "qlambda", ",", "regularizer", ")", ",", "\n", "name", "=", "'loss'", ")", "\n", "\n", "# optimize", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "learning_rate", ")", ".", "minimize", "(", "loss", ",", "name", "=", "'optimize'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model.BertIte.compute_loss": [[172, 182], ["model.BertIte.loss_fn", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "model.BertIte.loss_fn", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "click.type", "implicit_labels.type", "action.type", "explicit_labels.type", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add"], ["# optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(loss_implicit, name='optimize')", "\n", "# optimizer = tf.train.MomentumOptimizer(0.0001, 0.8).minimize(loss, name='optimize')", "\n", "\n", "print", "(", "'--------------->>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<------------------------'", ")", "\n", "return", "{", "\n", "'user_index'", ":", "user_index", ",", "\n", "'item_index'", ":", "item_index", ",", "\n", "'optimizer'", ":", "optimizer", ",", "\n", "'labels'", ":", "labels", ",", "\n", "# 'ex_indicators': ex_indicators,", "\n", "'y1_indicators'", ":", "y1_indicators", ",", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model.Manager.__init__": [[185, 195], ["super().__init__", "config.Config"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Manager.__init__"], ["'loss_implicit'", ":", "loss_implicit", ",", "\n", "'loss_explicit'", ":", "loss_explicit", ",", "\n", "'train_ex_prediction'", ":", "train_ex_prediction", ",", "\n", "'prediction_explicit'", ":", "ex_prediction", ",", "\n", "'prediction_implicit'", ":", "im_prediction", ",", "\n", "'h_implicit'", ":", "h_implicit", ",", "\n", "'global_epoch'", ":", "global_epoch", "\n", "}", "\n", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model.Manager.train_and_evaluate": [[196, 313], ["data_util.Data_Utils", "data_util.Data_Utils.load_test_data_s_ite", "data_util.Data_Utils.load_negative_data", "data_util.Data_Utils.preprocess_test", "model.to.BertIte", "model.to.to.to", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "print", "model_util.evaluate_model_ver3", "zip", "print", "range", "model.to.to.parameters", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "model.to.to.load_state_dict", "torch.Adam.load_state_dict", "print", "print", "print", "eval_result_data.append", "data_util.Data_Utils.preprocess_data", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.SequentialSampler", "torch.utils.data.SequentialSampler", "torch.utils.data.SequentialSampler", "torch.utils.data.SequentialSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "print", "model.to.to.train", "print", "open", "log.write", "terminaltables.AsciiTable", "len", "progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "batch[].to", "batch[].to", "batch[].to", "batch[].to", "batch[].to", "batch[].to", "model.to.to.zero_grad", "model.to.to.forward", "model.to.to.compute_loss", "model.to.compute_loss.backward", "torch.Adam.step", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "model_util.evaluate_model_ver3", "zip", "print", "print", "print", "eval_result_data.append", "str", "terminaltables.AsciiTable", "model.to.to.state_dict", "torch.Adam.state_dict", "open", "log.write", "terminaltables.AsciiTable", "str", "terminaltables.AsciiTable"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_test_data_s_ite", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_negative_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.preprocess_test", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.evaluate_model_ver3", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.preprocess_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.train", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.forward", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.compute_loss", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.evaluate_model_ver3"], ["\n", "", "", "", "def", "training_batch_size", "(", "batch_size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "num_factor", "=", "8", "\n", "eta", "=", "0.5", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/batch_size/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/batch_size/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "0.001", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "\n", "\n", "", "def", "training_num_factors", "(", "num_factor", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "batch_size", "=", "2048", "\n", "eta", "=", "0.1", "\n", "lr", "=", "0.005", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/num_factor/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "lr", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/num_factor/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "lr", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "lr", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "\n", "\n", "", "def", "training_eta", "(", "eta", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "num_factor", "=", "8", "\n", "batch_size", "=", "512", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/eta/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "num_negatives", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/eta/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "0.001", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model_util.get_hit_ratio": [[8, 13], ["None"], "function", ["None"], ["def", "get_hit_ratio", "(", "rank_list", ",", "gt_item", ")", ":", "\n", "    ", "for", "item", "in", "rank_list", ":", "\n", "        ", "if", "item", "==", "gt_item", ":", "\n", "            ", "return", "1.0", "\n", "", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model_util.get_ndcg": [[14, 20], ["range", "len", "math.log", "math.log"], "function", ["None"], ["", "def", "get_ndcg", "(", "rank_list", ",", "gt_item", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "len", "(", "rank_list", ")", ")", ":", "\n", "        ", "item", "=", "rank_list", "[", "i", "]", "\n", "if", "item", "==", "gt_item", ":", "\n", "            ", "return", "math", ".", "log", "(", "2", ")", "/", "math", ".", "log", "(", "i", "+", "2", ")", "\n", "", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model_util.evaluate_model": [[21, 30], ["progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "model_util.eval_one_rating", "hits.append", "ndcgs.append", "numpy.array().mean", "numpy.array().mean", "len", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.eval_one_rating"], ["", "def", "evaluate_model", "(", "model", ",", "top_k", ",", "data", ",", "device", ")", ":", "\n", "    ", "hits", ",", "ndcgs", "=", "[", "]", ",", "[", "]", "\n", "widgets", "=", "[", "progressbar", ".", "Percentage", "(", ")", ",", "\" \"", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "\" \"", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "\n", "for", "idx", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "len", "(", "data", ")", ")", ")", ":", "\n", "        ", "hr", ",", "ndcg", "=", "eval_one_rating", "(", "model", ",", "idx", ",", "top_k", ",", "data", "[", "idx", "]", ",", "device", ")", "\n", "hits", ".", "append", "(", "hr", ")", "\n", "ndcgs", ".", "append", "(", "ndcg", ")", "\n", "", "return", "np", ".", "array", "(", "hits", ")", ".", "mean", "(", ")", ",", "np", ".", "array", "(", "ndcgs", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model_util.eval_one_rating": [[31, 60], ["model.to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "model.eval", "model.forward", "torch.mul().detach().cpu().numpy", "range", "heapq.nlargest", "model_util.get_hit_ratio", "model_util.get_ndcg", "len", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.mul().detach().cpu", "torch.mul().detach", "torch.mul"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.forward", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_hit_ratio", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_ndcg"], ["", "def", "eval_one_rating", "(", "model", ",", "idx", ",", "top_k", ",", "data", ",", "device", ")", ":", "\n", "# model = model.to(\"cpu\")", "\n", "    ", "model", ".", "to", "(", "device", ")", "\n", "# user_ids, items_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, labels, items, attn_masks = \\", "\n", "#         data[\"user_ids\"], data[\"item_sequences\"], data[\"target_ids\"], data[\"user_reps\"], data[\"item_seq_reps\"], data[\"item_target_reps\"],\\", "\n", "#              data[\"labels\"], data[\"items\"], data[\"attn_masks\"]", "\n", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "labels", ",", "items", ",", "attn_masks", "=", "data", "[", "\"user_ids\"", "]", ",", "data", "[", "\"items_sequences\"", "]", ",", "data", "[", "\"target_ids\"", "]", ",", "data", "[", "\"labels\"", "]", ",", "data", "[", "\"items\"", "]", ",", "data", "[", "\"attn_masks\"", "]", "\n", "user_ids", "=", "torch", ".", "tensor", "(", "user_ids", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "items_sequences", "=", "torch", ".", "tensor", "(", "items_sequences", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "target_ids", "=", "torch", ".", "tensor", "(", "target_ids", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "attn_masks", "=", "torch", ".", "tensor", "(", "attn_masks", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "test_item", "=", "target_ids", "[", "-", "1", "]", "\n", "model", ".", "eval", "(", ")", "\n", "# click, action = model.forward(user_ids, items_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, attn_masks)", "\n", "click", ",", "action", "=", "model", ".", "forward", "(", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ")", "\n", "\n", "rating", "=", "torch", ".", "mul", "(", "click", ",", "action", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "# print(rating)", "\n", "map_score_item", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "user_ids", ")", ")", ":", "\n", "        ", "item", "=", "items", "[", "i", "]", "\n", "# print(item)", "\n", "map_score_item", "[", "item", "]", "=", "rating", "[", "i", "]", "\n", "", "list_hr", ",", "list_ndcg", "=", "[", "]", ",", "[", "]", "\n", "for", "tk", "in", "top_k", ":", "\n", "        ", "rank_list", "=", "heapq", ".", "nlargest", "(", "tk", ",", "map_score_item", ",", "key", "=", "map_score_item", ".", "get", ")", "\n", "\n", "hr", "=", "get_hit_ratio", "(", "rank_list", ",", "test_item", ")", "\n", "ndcg", "=", "get_ndcg", "(", "rank_list", ",", "test_item", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model_util.evaluate_model_ver3": [[61, 78], ["zip", "hits.append", "ndcgs.append", "progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "model_util.eval_one_rating_ver3", "enumerate", "reshit.append", "resndcg.append", "len", "zip", "hits[].append", "ndcgs[].append", "numpy.array().mean", "numpy.array().mean", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.eval_one_rating_ver3"], ["list_hr", ".", "append", "(", "hr", ")", "\n", "list_ndcg", ".", "append", "(", "ndcg", ")", "\n", "", "return", "list_hr", ",", "list_ndcg", "\n", "\n", "\n", "", "def", "evaluate_model_ver3", "(", "model", ",", "top_k", ",", "data", ",", "device", ")", ":", "\n", "    ", "hits", ",", "ndcgs", "=", "[", "]", ",", "[", "]", "\n", "reshit", ",", "resndcg", "=", "[", "]", ",", "[", "]", "\n", "for", "tk", "in", "top_k", ":", "\n", "        ", "hits", ".", "append", "(", "[", "]", ")", "\n", "ndcgs", ".", "append", "(", "[", "]", ")", "\n", "", "widgets", "=", "[", "progressbar", ".", "Percentage", "(", ")", ",", "\" \"", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "\" \"", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "\n", "for", "idx", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "len", "(", "data", ")", ")", ")", ":", "\n", "        ", "lst_hr", ",", "lst_ndcg", "=", "eval_one_rating_ver3", "(", "model", ",", "idx", ",", "top_k", ",", "data", "[", "idx", "]", ",", "device", ")", "\n", "for", "i", ",", "(", "hr", ",", "ndcg", ")", "in", "enumerate", "(", "zip", "(", "lst_hr", ",", "lst_ndcg", ")", ")", ":", "\n", "            ", "hits", "[", "i", "]", ".", "append", "(", "hr", ")", "\n", "ndcgs", "[", "i", "]", ".", "append", "(", "ndcg", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_user_item_pcat.model_util.eval_one_rating_ver3": [[79, 108], ["model.to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "model.eval", "model.forward", "torch.mul().detach().cpu().numpy", "range", "len", "heapq.nlargest", "model_util.get_hit_ratio", "model_util.get_ndcg", "list_hr.append", "list_ndcg.append", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.mul().detach().cpu", "torch.mul().detach", "torch.mul"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.forward", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_hit_ratio", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_ndcg"], ["", "", "for", "lh", ",", "ln", "in", "zip", "(", "hits", ",", "ndcgs", ")", ":", "\n", "        ", "reshit", ".", "append", "(", "np", ".", "array", "(", "lh", ")", ".", "mean", "(", ")", ")", "\n", "resndcg", ".", "append", "(", "np", ".", "array", "(", "ln", ")", ".", "mean", "(", ")", ")", "\n", "", "return", "reshit", ",", "resndcg", "\n", "\n", "", "def", "eval_one_rating_ver3", "(", "model", ",", "idx", ",", "top_k", ",", "data", ",", "device", ")", ":", "\n", "# model = model.to(\"cpu\")", "\n", "    ", "model", ".", "to", "(", "device", ")", "\n", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ",", "labels", ",", "items", "=", "data", "[", "\"user_ids\"", "]", ",", "data", "[", "\"items_sequences\"", "]", ",", "data", "[", "\"target_ids\"", "]", ",", "data", "[", "\"attn_masks\"", "]", ",", "data", "[", "\"labels\"", "]", ",", "data", "[", "\"items\"", "]", "\n", "user_ids", "=", "torch", ".", "tensor", "(", "user_ids", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "items_sequences", "=", "torch", ".", "tensor", "(", "items_sequences", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "target_ids", "=", "torch", ".", "tensor", "(", "target_ids", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "attn_masks", "=", "torch", ".", "tensor", "(", "attn_masks", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "test_item", "=", "target_ids", "[", "-", "1", "]", "\n", "model", ".", "eval", "(", ")", "\n", "click", ",", "action", "=", "model", ".", "forward", "(", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ")", "\n", "rating", "=", "torch", ".", "mul", "(", "click", ",", "action", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "# print(rating)", "\n", "map_score_item", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "user_ids", ")", ")", ":", "\n", "        ", "item", "=", "items", "[", "i", "]", "\n", "# print(item)", "\n", "map_score_item", "[", "item", "]", "=", "rating", "[", "i", "]", "\n", "\n", "", "list_hr", ",", "list_ndcg", "=", "[", "]", ",", "[", "]", "\n", "for", "tk", "in", "top_k", ":", "\n", "        ", "rank_list", "=", "heapq", ".", "nlargest", "(", "tk", ",", "map_score_item", ",", "key", "=", "map_score_item", ".", "get", ")", "\n", "\n", "hr", "=", "get_hit_ratio", "(", "rank_list", ",", "test_item", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.__init__": [[21, 36], ["os.path.isdir", "os.makedirs", "os.path.isdir", "os.makedirs", "log_path.split"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root_path", ",", "params", ",", "log_path", ",", "file_model", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "        ", "self", ".", "root_path", "=", "root_path", "\n", "self", ".", "params", "=", "params", "\n", "self", ".", "log_path", "=", "log_path", "\n", "log_directory", "=", "'/'", ".", "join", "(", "log_path", ".", "split", "(", "'/'", ")", "[", ":", "-", "1", "]", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "log_directory", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "log_directory", ")", "\n", "", "self", ".", "log_dir", "=", "log_directory", "\n", "self", ".", "result_string", "=", "''", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "file_model", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "file_model", ")", "\n", "", "self", ".", "file_model", "=", "file_model", "\n", "self", ".", "item_repr", "=", "None", "\n", "self", ".", "save_log", "=", "save_log", "\n", "self", ".", "save_model", "=", "save_model", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run": [[37, 41], ["mf.MF.load_data", "mf.MF.create_model", "mf.MF.train"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.load_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.create_model", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.train"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "data", "=", "self", ".", "load_data", "(", ")", "\n", "model", "=", "self", ".", "create_model", "(", ")", "\n", "self", ".", "train", "(", "model", ",", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue": [[42, 51], ["terminaltables.AsciiTable", "print", "str", "table_data.append"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "show_result_keyvalue", "(", "tuple_data", ")", ":", "\n", "        ", "table_data", "=", "[", "[", "'key'", ",", "'values'", "]", "]", "\n", "for", "i", "in", "tuple_data", ":", "\n", "            ", "table_data", ".", "append", "(", "[", "i", "[", "0", "]", ",", "i", "[", "1", "]", "]", ")", "\n", "", "table", "=", "AsciiTable", "(", "table_data", ")", "\n", "result", "=", "table", ".", "table", "\n", "print", "(", "result", ")", "\n", "return", "str", "(", "result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.load_data": [[52, 76], ["logging.info", "logging.info", "src.data_preparation.data_utils.load_representation_data_with_item_repr", "src.data_preparation.data_utils.load_interact_matrix", "src.data_preparation.data_utils.load_test_data", "src.data_preparation.data_utils.load_negative_data", "mf.MF.show_result_keyvalue", "type", "mf.MF.params.items", "type"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.load_representation_data_with_item_repr", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.load_interact_matrix", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.load_test_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_negative_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue"], ["", "def", "load_data", "(", "self", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'JOB INFO: '", "+", "type", "(", "self", ")", ".", "__name__", ")", "\n", "\n", "logging", ".", "info", "(", "'Loading data ...'", ")", "\n", "num_user", ",", "num_item", "=", "data_utils", ".", "load_representation_data", "(", "\n", "self", ".", "root_path", "+", "'u2index.txt'", ",", "\n", "self", ".", "root_path", "+", "'i2index.txt'", ")", "\n", "self", ".", "params", "[", "'num_user'", "]", "=", "num_user", "\n", "self", ".", "params", "[", "'num_item'", "]", "=", "num_item", "\n", "interact_mat", "=", "data_utils", ".", "load_interact_matrix", "(", "self", ".", "root_path", "+", "'scene_1/_explicit.train.rating'", ",", "num_user", ",", "\n", "num_item", ")", "\n", "# training_dict = data_utils.load_train_data(self.train_path + 'scene_1/_explicit.train.rating')", "\n", "test_data", "=", "data_utils", ".", "load_test_data", "(", "self", ".", "root_path", "+", "\"scene_1/_explicit.test.rating\"", ")", "\n", "negative_data", "=", "data_utils", ".", "load_negative_data", "(", "self", ".", "root_path", "+", "\"scene_1/_explicit.test.negative\"", ")", "\n", "self", ".", "result_string", "+=", "'jobs: '", "+", "type", "(", "self", ")", ".", "__name__", "+", "'\\n\\n'", "+", "MF", ".", "show_result_keyvalue", "(", "\n", "self", ".", "params", ".", "items", "(", ")", ")", "+", "'\\n\\n'", "\n", "return", "{", "\n", "# 'training_dict': training_dict,", "\n", "'interact_mat'", ":", "interact_mat", ",", "\n", "'test_data'", ":", "test_data", ",", "\n", "'negative_data'", ":", "negative_data", "\n", "}", "\n", "\n", "", "def", "create_model", "(", "self", ")", ":", "\n", "        ", "return", "{", "}", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.create_model": [[78, 80], ["None"], "methods", ["None"], ["", "def", "restore_checkpoint", "(", "self", ",", "sess", ",", "saver", ")", ":", "\n", "\n", "        ", "ckpt", "=", "tf", ".", "train", ".", "get_checkpoint_state", "(", "os", ".", "path", ".", "dirname", "(", "self", ".", "file_model", "+", "'/checkpoint'", ")", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.get_input": [[81, 94], ["range", "numpy.concatenate", "numpy.concatenate", "len", "len"], "methods", ["None"], ["if", "ckpt", "and", "ckpt", ".", "model_checkpoint_path", ":", "\n", "            ", "print", "(", "\"--------------> Loading checkpoint <----------------\"", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "ckpt", ".", "model_checkpoint_path", ")", "\n", "print", "(", "\"--------------> Done! <----------------\"", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"-------------> Initializing weights <---------------\"", ")", "\n", "\n", "", "", "def", "train", "(", "self", ",", "model", ",", "data", ")", ":", "\n", "# params and data", "\n", "        ", "epochs", "=", "self", ".", "params", "[", "'epochs'", "]", "\n", "num_negatives", "=", "self", ".", "params", "[", "'num_negatives'", "]", "\n", "batch_size", "=", "self", ".", "params", "[", "'batch_size'", "]", "\n", "verbose", "=", "self", ".", "params", "[", "'verbose'", "]", "\n", "eval_top_kS", "=", "self", ".", "params", "[", "'eval_top_k'", "]", "#list of top k to eval", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.restore_checkpoint": [[95, 104], ["tensorflow.train.get_checkpoint_state", "os.path.dirname", "print", "saver.restore", "print", "print"], "methods", ["None"], ["num_user", "=", "self", ".", "params", "[", "'num_user'", "]", "\n", "num_item", "=", "self", ".", "params", "[", "'num_item'", "]", "\n", "# training_dict = data['training_dict']", "\n", "interact_mat", "=", "data", "[", "'interact_mat'", "]", "\n", "test_data", "=", "data", "[", "'test_data'", "]", "\n", "negative_data", "=", "data", "[", "'negative_data'", "]", "\n", "\n", "# jobs", "\n", "\n", "optimizer", "=", "model", "[", "'optimizer'", "]", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.train": [[105, 300], ["tensorflow.train.Saver", "tensorflow.ConfigProto", "logging.warning", "mf.MF.show_result_keyvalue", "print", "tensorflow.Session", "sess.run", "print", "mf.MF.evaluate_model", "result.append", "mf.MF.show_result_keyvalue", "range", "mf.MF.params.items", "terminaltables.AsciiTable", "tensorflow.global_variables_initializer", "table_data.items", "logging.warning", "sorted", "sess.run", "open", "log.write", "os.listdir", "print", "src.data_preparation.data_utils.get_train_instances_partition", "print", "mf.MF.evaluate_model", "result.append", "mf.MF.show_result_keyvalue", "model[].assign", "tensorflow.train.Saver.save", "str", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "mf.MF.get_input", "sess.run", "table_data.items", "mf.MF.show_result_keyvalue", "len", "sess.run", "str", "best.items", "str", "str"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.evaluate_model", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.data_utils.get_train_instances_partition", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.evaluate_model", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.get_input", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.show_result_keyvalue", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], ["user_index", "=", "model", "[", "'user_index'", "]", "\n", "item_index", "=", "model", "[", "'item_index'", "]", "\n", "labels_ph", "=", "model", "[", "'labels'", "]", "\n", "# ex_indicators = model['ex_indicators']", "\n", "y1_indicators", "=", "model", "[", "'y1_indicators'", "]", "\n", "y2_indicators", "=", "model", "[", "'y2_indicators'", "]", "\n", "loss", "=", "model", "[", "'loss'", "]", "\n", "loss_implicit", "=", "model", "[", "'loss_implicit'", "]", "\n", "loss_explicit", "=", "model", "[", "'loss_explicit'", "]", "\n", "train_ex_prediction", "=", "model", "[", "'train_ex_prediction'", "]", "\n", "prediction_implicit", "=", "model", "[", "'prediction_implicit'", "]", "\n", "prediction_explicit", "=", "model", "[", "'prediction_explicit'", "]", "\n", "\n", "# train", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "session_conf", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ",", "log_device_placement", "=", "False", ")", "\n", "# session_conf = tf.ConfigProto(log_device_placement=False)", "\n", "# session_conf.gpu_options.per_process_gpu_memory_fraction = 0.5", "\n", "session_conf", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "session_conf", ".", "gpu_options", ".", "visible_device_list", "=", "'0'", "\n", "\n", "with", "tf", ".", "Session", "(", "config", "=", "session_conf", ")", "as", "sess", ":", "\n", "            ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "model", "[", "'sess'", "]", "=", "sess", "\n", "\n", "# for evaluate model_ite_onehot_log_loss", "\n", "explicit_best_hit", ",", "explicit_best_ndcg", "=", "(", "{", "\n", "5", ":", "[", "0", ",", "0", "]", ",", "\n", "10", ":", "[", "0", ",", "0", "]", ",", "\n", "20", ":", "[", "0", ",", "0", "]", ",", "\n", "30", ":", "[", "0", ",", "0", "]", ",", "\n", "40", ":", "[", "0", ",", "0", "]", ",", "\n", "50", ":", "[", "0", ",", "0", "]", "}", ",", "\n", "\n", "{", "\n", "5", ":", "[", "0", ",", "0", "]", ",", "\n", "10", ":", "[", "0", ",", "0", "]", ",", "\n", "20", ":", "[", "0", ",", "0", "]", ",", "\n", "30", ":", "[", "0", ",", "0", "]", ",", "\n", "40", ":", "[", "0", ",", "0", "]", ",", "\n", "50", ":", "[", "0", ",", "0", "]", "}", ")", "\n", "\n", "\n", "explicit_hit", "=", "{", "5", ":", "0", ",", "10", ":", "0", ",", "20", ":", "0", ",", "30", ":", "0", ",", "40", ":", "0", ",", "50", ":", "0", "}", "\n", "explicit_ndcg", "=", "{", "5", ":", "0", ",", "10", ":", "0", ",", "20", ":", "0", ",", "30", ":", "0", ",", "40", ":", "0", ",", "50", ":", "0", "}", "\n", "# for logging", "\n", "result", "=", "[", "[", "\"epoch\"", ",", "\"total_loss\"", ",", "\"explicit_hit_5\"", ",", "\"explicit_ndcg_5\"", ",", "\"explicit_hit_10\"", ",", "\"explicit_ndcg_10\"", ",", "\"explicit_hit_20\"", ",", "\"explicit_ndcg_20\"", ",", "\"explicit_hit_30\"", ",", "\"explicit_ndcg_30\"", ",", "\"explicit_hit_40\"", ",", "\"explicit_ndcg_40\"", ",", "\"explicit_hit_50\"", ",", "\"explicit_ndcg_50\"", "]", "]", "\n", "print", "(", "\"testing at initialization ........\"", ")", "\n", "for", "k", "in", "eval_top_kS", ":", "\n", "              ", "explicit_hit", "[", "k", "]", ",", "explicit_ndcg", "[", "k", "]", "=", "self", ".", "evaluate_model", "(", "model", ",", "\n", "k", ",", "\n", "test_data", ",", "\n", "negative_data", ",", "\n", "prediction_explicit", ")", "\n", "if", "explicit_hit", "[", "k", "]", ">", "explicit_best_hit", "[", "k", "]", "[", "0", "]", ":", "\n", "                  ", "explicit_best_hit", "[", "k", "]", "=", "[", "explicit_hit", "[", "k", "]", ",", "'init'", "]", "# log result", "\n", "\n", "", "if", "explicit_ndcg", "[", "k", "]", ">", "explicit_best_ndcg", "[", "k", "]", "[", "0", "]", ":", "# log result", "\n", "                  ", "explicit_best_ndcg", "[", "k", "]", "=", "[", "explicit_ndcg", "[", "k", "]", ",", "'init'", "]", "\n", "\n", "# log result", "\n", "", "", "table_data", "=", "{", "\"total_loss\"", ":", "'_'", ",", "\n", "\"eval_explicit_top5\"", ":", "(", "explicit_hit", "[", "5", "]", ",", "explicit_ndcg", "[", "5", "]", ")", ",", "\n", "\"eval_explicit_top10\"", ":", "(", "explicit_hit", "[", "10", "]", ",", "explicit_ndcg", "[", "10", "]", ")", ",", "\n", "\"eval_explicit_top20\"", ":", "(", "explicit_hit", "[", "20", "]", ",", "explicit_ndcg", "[", "20", "]", ")", ",", "\n", "\"eval_explicit_top30\"", ":", "(", "explicit_hit", "[", "30", "]", ",", "explicit_ndcg", "[", "30", "]", ")", ",", "\n", "\"eval_explicit_top40\"", ":", "(", "explicit_hit", "[", "40", "]", ",", "explicit_ndcg", "[", "40", "]", ")", ",", "\n", "\"eval_explicit_top50\"", ":", "(", "explicit_hit", "[", "50", "]", ",", "explicit_ndcg", "[", "50", "]", ")", "}", "\n", "\n", "temp", "=", "[", "'init'", ",", "'_'", "]", "\n", "for", "eval_top_k", "in", "eval_top_kS", ":", "\n", "                ", "temp", ".", "append", "(", "explicit_hit", "[", "eval_top_k", "]", ")", "\n", "temp", ".", "append", "(", "explicit_ndcg", "[", "eval_top_k", "]", ")", "\n", "\n", "", "result", ".", "append", "(", "temp", ")", "\n", "MF", ".", "show_result_keyvalue", "(", "table_data", ".", "items", "(", ")", ")", "\n", "\n", "for", "e", "in", "range", "(", "epochs", ")", ":", "\n", "                ", "logging", ".", "warning", "(", "\"epochs: \"", "+", "str", "(", "e", ")", ")", "\n", "rloss", "=", "0.0", "\n", "num_batch", "=", "0", "\n", "partitioned_train_path", "=", "self", ".", "root_path", "+", "'scene_1/partitioned_train_data/'", "\n", "\n", "for", "partition_name", "in", "sorted", "(", "os", ".", "listdir", "(", "partitioned_train_path", ")", ")", ":", "\n", "                    ", "print", "(", "str", "(", "e", "+", "1", ")", "+", "':'", "+", "partition_name", ")", "\n", "partitioned_path", "=", "partitioned_train_path", "+", "partition_name", "\n", "# ----------------------- get train instances -------------------------------", "\n", "user_ids", ",", "item_ids", ",", "labels", ",", "y1_indicator", ",", "y2_indicator", "=", "data_utils", ".", "get_train_instances_partition", "(", "\n", "partitioned_path", ",", "interact_mat", ",", "num_negatives", ",", "num_user", ",", "num_item", ")", "\n", "\n", "widgets", "=", "[", "\" \"", ",", "\" \"", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "\" \"", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "for", "b", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "0", ",", "len", "(", "user_ids", ")", ",", "batch_size", ")", ")", ":", "\n", "                        ", "uids", "=", "user_ids", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "iids", "=", "item_ids", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "las", "=", "labels", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "y1_indi", "=", "y1_indicator", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "y2_indi", "=", "y2_indicator", "[", "b", ":", "b", "+", "batch_size", "]", "\n", "\n", "sess", ".", "run", "(", "optimizer", ",", "\n", "feed_dict", "=", "{", "\n", "user_index", ":", "uids", ",", "\n", "item_index", ":", "iids", ",", "\n", "labels_ph", ":", "las", ",", "\n", "y1_indicators", ":", "y1_indi", ",", "\n", "y2_indicators", ":", "y2_indi", "\n", "}", ")", "\n", "if", "(", "e", "%", "verbose", "==", "0", ")", ":", "\n", "                            ", "rloss_tmp", "=", "sess", ".", "run", "(", "loss", ",", "\n", "feed_dict", "=", "{", "user_index", ":", "uids", ",", "\n", "item_index", ":", "iids", ",", "\n", "labels_ph", ":", "las", ",", "\n", "y1_indicators", ":", "y1_indi", ",", "\n", "y2_indicators", ":", "y2_indi", "}", ")", "\n", "rloss", "+=", "rloss_tmp", "\n", "", "num_batch", "+=", "1", "\n", "# end for", "\n", "# end for", "\n", "# Tinh loss phai cat ra batch, ko thi bi loi out of memory", "\n", "", "", "rloss", "/=", "num_batch", "\n", "\n", "if", "(", "e", "%", "verbose", "==", "0", ")", ":", "\n", "# log for explicit", "\n", "# raw_explicit_top = self.predict(model_ite_onehot_log_loss, user_ids, item_ids, prediction_explicit)", "\n", "# dict_explicit_top = {i: raw_explicit_top[i] for i in range(len(raw_explicit_top))}", "\n", "# explicit_top = {i: dict_explicit_top[i] for i in", "\n", "#                 heapq.nlargest(6, dict_explicit_top, key=dict_explicit_top.get)}", "\n", "# explicit_top = {}", "\n", "\n", "                    ", "print", "(", "\"testing........\"", ")", "\n", "for", "k", "in", "eval_top_kS", ":", "\n", "                      ", "explicit_hit", "[", "k", "]", ",", "explicit_ndcg", "[", "k", "]", "=", "self", ".", "evaluate_model", "(", "model", ",", "\n", "k", ",", "\n", "test_data", ",", "\n", "negative_data", ",", "\n", "prediction_explicit", ")", "\n", "if", "explicit_hit", "[", "k", "]", ">", "explicit_best_hit", "[", "k", "]", "[", "0", "]", ":", "\n", "                          ", "explicit_best_hit", "[", "k", "]", "=", "[", "explicit_hit", "[", "k", "]", ",", "str", "(", "e", ")", "]", "# log result", "\n", "\n", "", "if", "explicit_ndcg", "[", "k", "]", ">", "explicit_best_ndcg", "[", "k", "]", "[", "0", "]", ":", "# log result", "\n", "                          ", "explicit_best_ndcg", "[", "k", "]", "=", "[", "explicit_ndcg", "[", "k", "]", ",", "str", "(", "e", ")", "]", "\n", "\n", "# log result", "\n", "", "", "table_data", "=", "{", "\"total_loss\"", ":", "rloss", ",", "\n", "\"eval_explicit_top5\"", ":", "(", "explicit_hit", "[", "5", "]", ",", "explicit_ndcg", "[", "5", "]", ")", ",", "\n", "\"eval_explicit_top10\"", ":", "(", "explicit_hit", "[", "10", "]", ",", "explicit_ndcg", "[", "10", "]", ")", ",", "\n", "\"eval_explicit_top20\"", ":", "(", "explicit_hit", "[", "20", "]", ",", "explicit_ndcg", "[", "20", "]", ")", ",", "\n", "\"eval_explicit_top30\"", ":", "(", "explicit_hit", "[", "30", "]", ",", "explicit_ndcg", "[", "30", "]", ")", ",", "\n", "\"eval_explicit_top40\"", ":", "(", "explicit_hit", "[", "40", "]", ",", "explicit_ndcg", "[", "40", "]", ")", ",", "\n", "\"eval_explicit_top50\"", ":", "(", "explicit_hit", "[", "50", "]", ",", "explicit_ndcg", "[", "50", "]", ")", "}", "\n", "\n", "temp", "=", "[", "str", "(", "e", ")", ",", "rloss", "]", "\n", "for", "eval_top_k", "in", "eval_top_kS", ":", "\n", "                        ", "temp", ".", "append", "(", "explicit_hit", "[", "eval_top_k", "]", ")", "\n", "temp", ".", "append", "(", "explicit_ndcg", "[", "eval_top_k", "]", ")", "\n", "\n", "", "result", ".", "append", "(", "temp", ")", "\n", "\n", "MF", ".", "show_result_keyvalue", "(", "table_data", ".", "items", "(", ")", ")", "\n", "\n", "", "sess", ".", "run", "(", "model", "[", "'global_epoch'", "]", ".", "assign", "(", "e", ")", ")", "\n", "if", "self", ".", "save_model", ":", "\n", "                    ", "saver", ".", "save", "(", "sess", ",", "self", ".", "file_model", "+", "'/model'", ")", "\n", "# end of each epoch", "\n", "\n", "", "", "", "logging", ".", "warning", "(", "\"-----------------------Train done ==> RESULT --------------------------------\"", ")", "\n", "best", "=", "{", "\"explicit_best_hit_top5\"", ":", "explicit_best_hit", "[", "5", "]", ",", "#5", "\n", "\"explicit_best_ndcg_top5\"", ":", "explicit_best_ndcg", "[", "5", "]", ",", "\n", "\"explicit_best_hit_top10\"", ":", "explicit_best_hit", "[", "10", "]", ",", "#10", "\n", "\"explicit_best_ndcg_top10\"", ":", "explicit_best_ndcg", "[", "10", "]", ",", "\n", "\"explicit_best_hit_top20\"", ":", "explicit_best_hit", "[", "20", "]", ",", "\n", "\"explicit_best_ndcg_top20\"", ":", "explicit_best_ndcg", "[", "20", "]", ",", "\n", "\"explicit_best_hit_top30\"", ":", "explicit_best_hit", "[", "30", "]", ",", "\n", "\"explicit_best_ndcg_top30\"", ":", "explicit_best_ndcg", "[", "30", "]", ",", "\n", "\"explicit_best_hit_top40\"", ":", "explicit_best_hit", "[", "40", "]", ",", "\n", "\"explicit_best_ndcg_top40\"", ":", "explicit_best_ndcg", "[", "40", "]", ",", "\n", "\"explicit_best_hit_top50\"", ":", "explicit_best_hit", "[", "50", "]", ",", "\n", "\"explicit_best_ndcg_top50\"", ":", "explicit_best_ndcg", "[", "50", "]", "}", "\n", "\n", "MF", ".", "show_result_keyvalue", "(", "self", ".", "params", ".", "items", "(", ")", ")", "\n", "table_result", "=", "AsciiTable", "(", "result", ")", ".", "table", "\n", "print", "(", "table_result", ")", "\n", "if", "self", ".", "save_log", ":", "\n", "            ", "with", "open", "(", "self", ".", "log_path", ",", "\"w\"", ")", "as", "log", ":", "\n", "                ", "log", ".", "write", "(", "self", ".", "result_string", "+", "str", "(", "table_result", ")", "+", "\"\\n\\n\"", "+", "MF", ".", "show_result_keyvalue", "(", "best", ".", "items", "(", ")", ")", ")", "\n", "\n", "", "", "", "def", "predict", "(", "self", ",", "model", ",", "user", ",", "items", ",", "prediction", ")", ":", "\n", "        ", "users", "=", "[", "user", "]", "*", "len", "(", "items", ")", "\n", "return", "model", "[", "'sess'", "]", ".", "run", "(", "prediction", ",", "feed_dict", "=", "{", "model", "[", "'user_index'", "]", ":", "users", ",", "model", "[", "'item_index'", "]", ":", "items", ",", "\n", "model", "[", "'user_index'", "]", ":", "users", ",", "\n", "model", "[", "'item_index'", "]", ":", "items", "\n", "}", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.predict": [[301, 311], ["mf.MF.get_input", "model[].run", "len"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.get_input", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], ["\n", "# for evaluate model_ite_onehot_log_loss", "\n", "", "def", "evaluate_model", "(", "self", ",", "model", ",", "top_k", ",", "test_data", ",", "negative_data", ",", "prediction", ")", ":", "\n", "        ", "hits", ",", "ndcgs", "=", "[", "]", ",", "[", "]", "\n", "# Single thread", "\n", "widgets", "=", "[", "progressbar", ".", "Percentage", "(", ")", ",", "' '", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "' '", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "for", "idx", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "len", "(", "test_data", ")", ")", ")", ":", "\n", "            ", "hr", ",", "ndcg", "=", "self", ".", "eval_one_rating", "(", "model", ",", "idx", ",", "top_k", ",", "test_data", ",", "negative_data", ",", "prediction", ")", "\n", "hits", ".", "append", "(", "hr", ")", "\n", "ndcgs", ".", "append", "(", "ndcg", ")", "\n", "", "return", "np", ".", "array", "(", "hits", ")", ".", "mean", "(", ")", ",", "np", ".", "array", "(", "ndcgs", ")", ".", "mean", "(", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.evaluate_model": [[314, 323], ["progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "mf.MF.eval_one_rating", "hits.append", "ndcgs.append", "numpy.array().mean", "numpy.array().mean", "len", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.eval_one_rating"], ["        ", "rating", "=", "test_data", "[", "idx", "]", "\n", "user", "=", "rating", "[", "0", "]", "\n", "gt_item", "=", "rating", "[", "1", "]", "\n", "items", "=", "negative_data", "[", "user", "]", "\n", "items", ".", "append", "(", "gt_item", ")", "\n", "# Get prediction scores", "\n", "map_item_score", "=", "{", "}", "\n", "# users = np.full(len(items), u, dtype='int64')", "\n", "predictions", "=", "self", ".", "predict", "(", "model", ",", "user", ",", "items", ",", "prediction", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "items", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.eval_one_rating": [[324, 344], ["items.append", "mf.MF.predict", "range", "items.pop", "heapq.nlargest", "mf.MF.get_hit_ratio", "mf.MF.get_ndcg", "len"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.predict", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_hit_ratio", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_ndcg"], ["            ", "item", "=", "items", "[", "i", "]", "\n", "map_item_score", "[", "item", "]", "=", "predictions", "[", "i", "]", "\n", "", "items", ".", "pop", "(", ")", "\n", "# Evaluate top rank list", "\n", "rank_list", "=", "heapq", ".", "nlargest", "(", "top_k", ",", "map_item_score", ",", "key", "=", "map_item_score", ".", "get", ")", "\n", "\n", "hr", "=", "self", ".", "get_hit_ratio", "(", "rank_list", ",", "gt_item", ")", "\n", "ndcg", "=", "self", ".", "get_ndcg", "(", "rank_list", ",", "gt_item", ")", "\n", "return", "hr", ",", "ndcg", "\n", "\n", "", "@", "staticmethod", "\n", "def", "get_hit_ratio", "(", "rank_list", ",", "gt_item", ")", ":", "\n", "        ", "for", "item", "in", "rank_list", ":", "\n", "            ", "if", "item", "==", "gt_item", ":", "\n", "                ", "return", "1.0", "\n", "", "", "return", "0", "\n", "\n", "", "@", "staticmethod", "\n", "def", "get_ndcg", "(", "rank_list", ",", "gt_item", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "rank_list", ")", ")", ":", "\n", "            ", "item", "=", "rank_list", "[", "i", "]", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.get_hit_ratio": [[345, 351], ["None"], "methods", ["None"], ["if", "item", "==", "gt_item", ":", "\n", "                ", "return", "math", ".", "log", "(", "2", ")", "/", "math", ".", "log", "(", "i", "+", "2", ")", "\n", "", "", "return", "0", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.get_ndcg": [[352, 359], ["range", "len", "math.log", "math.log"], "methods", ["None"], []], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.run_eta.main": [[8, 19], ["logging.info", "src.model_ite_item_pcat.model.training_eta"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.training_eta"], ["def", "main", "(", ")", ":", "\n", "    ", "save_path_name", "=", "'model_ite_onehot_log_loss'", "\n", "num_negatives", "=", "4", "\n", "for", "data_name", "in", "[", "'tmall/'", "]", ":", "\n", "        ", "if", "data_name", "==", "'recobell/'", ":", "\n", "            ", "epochs", "=", "101", "\n", "", "else", ":", "\n", "            ", "epochs", "=", "201", "\n", "", "for", "size", "in", "[", "0.65", ",", "0.70", ",", "0.75", ",", "0.6", "]", ":", "\n", "            ", "logging", ".", "info", "(", "\"dataset: %s, eta: %s, save_path_name: %s\"", ",", "data_name", ",", "size", ",", "save_path_name", ")", "\n", "model", ".", "training_eta", "(", "size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_model", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.get_place_holder": [[9, 35], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder"], "methods", ["None"], ["class", "ImToEx", "(", "mf", ".", "MF", ")", ":", "\n", "    ", "@", "staticmethod", "\n", "def", "get_place_holder", "(", ")", ":", "\n", "        ", "user_index", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'user_index'", ")", "\n", "item_index", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'item_index'", ")", "\n", "\n", "return", "user_index", ",", "item_index", "\n", "\n", "", "@", "staticmethod", "\n", "def", "get_embedding_weight", "(", "num_user", ",", "num_item", ",", "num_factors", ")", ":", "\n", "        ", "\"\"\"\n        num_factors: number of factors in the last hidden layer of GMF and MLP part\n        Refer to model_ite_onehot_log_loss architecture for better understand the values of num_factors_gmf and num_factors_mlp\n        \"\"\"", "\n", "\n", "num_factors_gmf", "=", "num_factors", "\n", "num_factors_mlp", "=", "2", "*", "num_factors", "\n", "\n", "gmf_embedding_weight_user_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_user", ",", "num_factors_gmf", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_gmf", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_user_onehot'", ")", "\n", "gmf_embedding_weight_item_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_item", ",", "num_factors_gmf", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_gmf", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_item_onehot'", ")", "\n", "mlp_embedding_weight_user_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_user", ",", "num_factors_mlp", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_mlp", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_user_onehot'", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.get_embedding_weight": [[36, 119], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt"], "methods", ["None"], ["mlp_embedding_weight_item_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_item", ",", "num_factors_mlp", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_mlp", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_item_onehot'", ")", "\n", "\n", "return", "{", "'gmf_user_onehot'", ":", "gmf_embedding_weight_user_onehot", ",", "\n", "'gmf_item_onehot'", ":", "gmf_embedding_weight_item_onehot", ",", "\n", "'mlp_user_onehot'", ":", "mlp_embedding_weight_user_onehot", ",", "\n", "'mlp_item_onehot'", ":", "mlp_embedding_weight_item_onehot", "}", "\n", "\n", "", "def", "create_model", "(", "self", ")", ":", "\n", "# custom params", "\n", "        ", "num_user", "=", "self", ".", "params", "[", "'num_user'", "]", "\n", "num_item", "=", "self", ".", "params", "[", "'num_item'", "]", "\n", "# user_pcat_dimension = self.params['user_pcat_dimension']", "\n", "# item_pcat_dimension = self.params['item_pcat_dimension']", "\n", "learning_rate", "=", "self", ".", "params", "[", "'learning_rate'", "]", "\n", "num_factors", "=", "self", ".", "params", "[", "'num_factors'", "]", "\n", "qlambda", "=", "self", ".", "params", "[", "'lambda'", "]", "\n", "eta_1", "=", "self", ".", "params", "[", "'eta_1'", "]", "\n", "eta_2", "=", "self", ".", "params", "[", "'eta_2'", "]", "\n", "batch_size", "=", "self", ".", "params", "[", "'batch_size'", "]", "\n", "# user_dense_shape = [300, 188]", "\n", "# item_dense_shape = [64, 188]", "\n", "global_epoch", "=", "tf", ".", "Variable", "(", "0", ",", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'global_epoch'", ")", "\n", "\n", "with", "tf", ".", "device", "(", "'/gpu:0'", ")", ":", "\n", "            ", "print", "(", "'Chay voi GPU----------------------------------------------------->>>>>>'", ")", "\n", "user_index", ",", "item_index", "=", "ImToEx", ".", "get_place_holder", "(", ")", "\n", "embedding_weight", "=", "ImToEx", ".", "get_embedding_weight", "(", "num_user", ",", "num_item", ",", "num_factors", ")", "\n", "\n", "# -------------------------------- GMF part -------------------------------", "\n", "\n", "gmf_pu_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'gmf_user_onehot'", "]", ",", "user_index", ",", "\n", "name", "=", "\"gmf_pu_onehot\"", ")", "\n", "gmf_qi_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'gmf_item_onehot'", "]", ",", "item_index", ",", "\n", "name", "=", "\"gmf_qi_onehot\"", ")", "\n", "gmf_pu", "=", "tf", ".", "identity", "(", "gmf_pu_onehot", ",", "name", "=", "'gmf_pu'", ")", "\n", "gmf_qi", "=", "tf", ".", "identity", "(", "gmf_qi_onehot", ",", "name", "=", "'gmf_qi'", ")", "\n", "\n", "gmf_phi", "=", "tf", ".", "multiply", "(", "gmf_pu", ",", "gmf_qi", ",", "name", "=", "'gmf_phi'", ")", "\n", "gmf_h", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'gmf_h'", ")", "\n", "\n", "# --------------------------------- MLP part --------------------------------", "\n", "mlp_pu_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'mlp_user_onehot'", "]", ",", "user_index", ",", "\n", "name", "=", "\"mlp_pu_onehot\"", ")", "\n", "mlp_qi_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'mlp_item_onehot'", "]", ",", "item_index", ",", "\n", "name", "=", "\"mlp_qi_onehot\"", ")", "\n", "\n", "mlp_pu", "=", "tf", ".", "identity", "(", "mlp_pu_onehot", ",", "name", "=", "'mlp_pu'", ")", "\n", "mlp_qi", "=", "tf", ".", "identity", "(", "mlp_qi_onehot", ",", "name", "=", "'mlp_qi'", ")", "\n", "\n", "mlp_weights", "=", "{", "\n", "'w1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "4", "*", "num_factors", ",", "2", "*", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "1", "/", "num_factors", ")", ",", "\n", "name", "=", "'mlp_weight1'", ")", ",", "\n", "'w2'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", ",", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors", ")", ",", "\n", "name", "=", "'mlp_weight2'", ")", ",", "\n", "'h'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'mlp_h'", ")", "\n", "}", "\n", "mlp_biases", "=", "{", "\n", "'b1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", "]", ")", ",", "name", "=", "'mlp_bias1'", ")", ",", "\n", "'b2'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "num_factors", "]", ")", ",", "name", "=", "'mlp_bias2'", ")", "\n", "}", "\n", "\n", "mlp_phi_1", "=", "tf", ".", "concat", "(", "[", "mlp_pu", ",", "mlp_qi", "]", ",", "axis", "=", "-", "1", ",", "name", "=", "'mlp_phi1'", ")", "\n", "mlp_phi_2", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "mlp_phi_1", ",", "mlp_weights", "[", "'w1'", "]", ")", ",", "mlp_biases", "[", "'b1'", "]", ")", ",", "\n", "name", "=", "'mlp_phi2'", ")", "\n", "mlp_phi_3", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "mlp_phi_2", ",", "mlp_weights", "[", "'w2'", "]", ")", ",", "mlp_biases", "[", "'b2'", "]", ")", ",", "\n", "name", "=", "'mlp_phi3'", ")", "\n", "\n", "# --------------------------------- implicit part ------------------------------------", "\n", "# 1 x 2*num_factors", "\n", "im_phi", "=", "tf", ".", "concat", "(", "[", "gmf_phi", ",", "mlp_phi_3", "]", ",", "axis", "=", "1", ",", "name", "=", "'im_phi'", ")", "\n", "# 2*num_factors x 1", "\n", "h_implicit", "=", "tf", ".", "concat", "(", "[", "gmf_h", ",", "mlp_weights", "[", "'h'", "]", "]", ",", "axis", "=", "0", ",", "name", "=", "'h_implicit'", ")", "\n", "# tf.squeeze() 1 x 1", "\n", "im_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "matmul", "(", "im_phi", ",", "h_implicit", ")", ",", "name", "=", "'prediction_implicit'", ")", "\n", "\n", "# --------------------------------- explicit part ------------------------------------", "\n", "ex_weights", "=", "{", "\n", "'w1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", ",", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors", ")", ",", "\n", "name", "=", "'ex_weight1'", ")", ",", "\n", "'h'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'h_explicit'", ")", "\n", "}", "\n", "ex_biases", "=", "{", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.embedding_lookup_sparse": [[120, 136], ["tensorflow.device", "tensorflow.nn.embedding_lookup_sparse", "tensorflow.SparseTensor", "tensorflow.SparseTensor"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.embedding_lookup_sparse"], ["'b1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "num_factors", "]", ")", ",", "name", "=", "'ex_bias1'", ")", ",", "\n", "}", "\n", "# 1 x num_factors", "\n", "ex_phi", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "im_phi", ",", "ex_weights", "[", "'w1'", "]", ")", ",", "ex_biases", "[", "'b1'", "]", ")", ",", "name", "=", "'ex_phi'", ")", "\n", "train_ex_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "matmul", "(", "ex_phi", ",", "ex_weights", "[", "'h'", "]", ")", ",", "name", "=", "'train_prediction_explicit'", ")", "\n", "\n", "# ex_prediction = tf.squeeze(tf.multiply(im_prediction, train_ex_prediction), name='prediction_explicit')", "\n", "ex_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "multiply", "(", "tf", ".", "nn", ".", "sigmoid", "(", "im_prediction", ")", ",", "tf", ".", "nn", ".", "sigmoid", "(", "train_ex_prediction", ")", ")", ",", "\n", "name", "=", "'prediction_explicit'", ")", "\n", "# ex_prediction = tf.squeeze(tf.nn.sigmoid(train_ex_prediction), name='prediction_explicit')", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.create_model": [[138, 331], ["tensorflow.Variable", "tensorflow.device", "model.ImToEx_item_pcat.get_place_holder", "model.ImToEx_item_pcat.get_embedding_weight", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "model.ImToEx_item_pcat.embedding_lookup_sparse", "tensorflow.identity", "tensorflow.identity", "tensorflow.multiply", "tensorflow.Variable", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "model.ImToEx_item_pcat.embedding_lookup_sparse", "tensorflow.identity", "tensorflow.identity", "tensorflow.concat", "tensorflow.nn.leaky_relu", "tensorflow.nn.leaky_relu", "tensorflow.concat", "tensorflow.concat", "tensorflow.squeeze", "tensorflow.nn.leaky_relu", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.add", "tensorflow.add", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.random_uniform", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.add", "tensorflow.matmul", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.add", "tensorflow.matmul", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.multiply", "tensorflow.random_uniform", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.random_uniform", "tensorflow.random_normal", "tensorflow.matmul", "tensorflow.nn.sigmoid", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.multiply", "tensorflow.train.AdamOptimizer", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.random_normal", "tensorflow.sqrt", "tensorflow.square", "tensorflow.square", "tensorflow.square", "tensorflow.square"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.get_place_holder", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.get_embedding_weight", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.embedding_lookup_sparse", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.ImToEx_item_pcat.embedding_lookup_sparse", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add"], ["\n", "# ---------------------------------- log loss ---------------------------------------------", "\n", "labels", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'labels'", ")", "\n", "y1_indicators", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'y1_indicators'", ")", "\n", "y2_indicators", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'y2_indicators'", ")", "\n", "\n", "loss_implicit_list", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "labels", ",", "\n", "logits", "=", "im_prediction", ",", "\n", "name", "=", "'y1_loss_list'", ")", "\n", "loss_implicit", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "multiply", "(", "y1_indicators", ",", "loss_implicit_list", ")", ",", "name", "=", "'y1_loss'", ")", "\n", "loss_explicit_list", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "labels", ",", "\n", "logits", "=", "train_ex_prediction", ",", "\n", "name", "=", "'y2_loss_list'", ")", "\n", "loss_explicit", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "multiply", "(", "y2_indicators", ",", "loss_explicit_list", ")", ",", "name", "=", "'y2_loss'", ")", "\n", "\n", "regularizer", "=", "tf", ".", "add", "(", "tf", ".", "add", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "gmf_pu", ")", ")", ",", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "gmf_qi", ")", ")", ")", ",", "\n", "tf", ".", "add", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "mlp_pu", ")", ")", ",", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "mlp_qi", ")", ")", ")", ",", "\n", "name", "=", "'regularizer'", ")", "\n", "\n", "loss", "=", "tf", ".", "add", "(", "tf", ".", "add", "(", "tf", ".", "multiply", "(", "eta_1", ",", "loss_implicit", ")", ",", "loss_explicit", ")", ",", "tf", ".", "multiply", "(", "qlambda", ",", "regularizer", ")", ",", "\n", "name", "=", "'loss'", ")", "\n", "\n", "# optimize", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "learning_rate", ")", ".", "minimize", "(", "loss", ",", "name", "=", "'optimize'", ")", "\n", "\n", "# optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(loss_implicit, name='optimize')", "\n", "# optimizer = tf.train.MomentumOptimizer(0.0001, 0.8).minimize(loss, name='optimize')", "\n", "\n", "print", "(", "'--------------->>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<------------------------'", ")", "\n", "return", "{", "\n", "'user_index'", ":", "user_index", ",", "\n", "'item_index'", ":", "item_index", ",", "\n", "'optimizer'", ":", "optimizer", ",", "\n", "'labels'", ":", "labels", ",", "\n", "# 'ex_indicators': ex_indicators,", "\n", "'y1_indicators'", ":", "y1_indicators", ",", "\n", "'y2_indicators'", ":", "y2_indicators", ",", "\n", "'loss'", ":", "loss", ",", "\n", "'loss_implicit'", ":", "loss_implicit", ",", "\n", "'loss_explicit'", ":", "loss_explicit", ",", "\n", "'train_ex_prediction'", ":", "train_ex_prediction", ",", "\n", "'prediction_explicit'", ":", "ex_prediction", ",", "\n", "'prediction_implicit'", ":", "im_prediction", ",", "\n", "'h_implicit'", ":", "h_implicit", ",", "\n", "'global_epoch'", ":", "global_epoch", "\n", "}", "\n", "\n", "\n", "\n", "\n", "", "", "", "def", "training_batch_size", "(", "batch_size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "num_factor", "=", "8", "\n", "eta", "=", "0.5", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/batch_size/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/batch_size/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "0.001", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "\n", "\n", "", "def", "training_num_factors", "(", "num_factor", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "batch_size", "=", "2048", "\n", "eta", "=", "0.1", "\n", "lr", "=", "0.005", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/num_factor/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "lr", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/num_factor/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "lr", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "lr", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "\n", "\n", "", "def", "training_eta", "(", "eta", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "num_factor", "=", "8", "\n", "batch_size", "=", "512", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/eta/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "num_negatives", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/eta/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "0.001", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info": [[334, 343], ["tensorflow.saved_model.utils.build_tensor_info", "tensorflow.saved_model.utils.build_tensor_info", "tensorflow.saved_model.utils.build_tensor_info", "tensorflow.saved_model.utils.build_tensor_info", "tensorflow.saved_model.utils.build_tensor_info", "tensorflow.saved_model.utils.build_tensor_info", "tensorflow.saved_model.utils.build_tensor_info", "tensorflow.saved_model.utils.build_tensor_info"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.build_tensor_info"], []], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.training_batch_size": [[345, 370], ["model.ImToEx_item_pcat", "ImToEx_item_pcat.run"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], []], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.training_num_factors": [[372, 396], ["model.ImToEx_item_pcat", "ImToEx_item_pcat.run"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], []], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.training_eta": [[398, 422], ["model.ImToEx_item_pcat", "ImToEx_item_pcat.run"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.run"], []], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.run_batch_size.main": [[8, 19], ["logging.info", "src.model_ite_item_pcat.model.training_batch_size"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.training_batch_size"], ["def", "main", "(", ")", ":", "\n", "    ", "save_path_name", "=", "'model_ite_onehot_log_loss'", "\n", "num_negatives", "=", "4", "\n", "for", "data_name", "in", "[", "'ml-1m/'", "]", ":", "\n", "        ", "if", "data_name", "==", "'recobell/'", ":", "\n", "            ", "epochs", "=", "101", "\n", "", "else", ":", "\n", "            ", "epochs", "=", "151", "\n", "", "for", "size", "in", "[", "512", ",", "1024", ",", "2048", ",", "4096", "]", ":", "\n", "            ", "logging", ".", "info", "(", "\"dataset: %s, batch_size: %s, save_path_name: %s\"", ",", "data_name", ",", "size", ",", "save_path_name", ")", "\n", "model", ".", "training_batch_size", "(", "size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_model", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.run_num_factor.main": [[8, 19], ["logging.info", "src.model_ite_item_pcat.model.training_num_factors"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.model.training_num_factors"], ["def", "test", "(", ")", ":", "\n", "    ", "save_path_name", "=", "'one_hot'", "\n", "for", "data_name", "in", "[", "'retail_rocket/'", "]", ":", "\n", "        ", "if", "data_name", "==", "'recobell/'", ":", "\n", "            ", "epochs", "=", "101", "\n", "", "else", ":", "\n", "            ", "epochs", "=", "200", "\n", "", "for", "size", "in", "[", "8", ",", "16", ",", "32", ",", "64", "]", ":", "\n", "            ", "logging", ".", "info", "(", "\"dataset: %s, num_factor: %s, save_path_name: %s\"", ",", "data_name", ",", "size", ",", "save_path_name", ")", "\n", "model", ".", "training_num_factors", "(", "size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "save_model", "=", "False", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.config.Config.__init__": [[11, 38], ["config.Config.show_config_info", "config.Config.load_representation_data", "torch.cuda.is_available", "torch.device", "torch.device"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.config.Config.show_config_info", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_representation_data"], ["import", "torch", "\n", "\n", "class", "Config", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "root_path", ",", "params", ")", ":", "\n", "\n", "        ", "self", ".", "attn_pdrop", "=", "params", "[", "'attn_pdrop'", "]", "\n", "self", ".", "resid_pdrop", "=", "params", "[", "'resid_pdrop'", "]", "\n", "self", ".", "n_head", "=", "params", "[", "'n_head'", "]", "\n", "self", ".", "n_layer", "=", "params", "[", "'n_layer'", "]", "\n", "self", ".", "interval", "=", "params", "[", "'interval'", "]", "\n", "self", ".", "eta", "=", "params", "[", "'eta'", "]", "\n", "self", ".", "reg_lambda", "=", "params", "[", "'reg_lambda'", "]", "\n", "self", ".", "num_neg", "=", "params", "[", "'num_neg'", "]", "\n", "self", ".", "max_len", "=", "params", "[", "'max_len'", "]", "\n", "self", ".", "eval_top_k", "=", "params", "[", "'eval_top_k'", "]", "\n", "self", ".", "batch_size", "=", "params", "[", "'batch_size'", "]", "\n", "self", ".", "n_embd", "=", "params", "[", "'n_embd'", "]", "\n", "self", ".", "num_factor", "=", "params", "[", "'num_factor'", "]", "\n", "self", ".", "lr", "=", "params", "[", "'lr'", "]", "\n", "\n", "self", ".", "show_config_info", "(", ")", "\n", "\n", "self", ".", "num_user", ",", "self", ".", "num_item", "=", "self", ".", "load_representation_data", "(", "\n", "root_path", "+", "\"u2index.txt\"", ",", "\n", "root_path", "+", "\"i2index.txt\"", ")", "\n", "\n", "self", ".", "path_rep_user", "=", "root_path", "+", "\"user_repr.txt\"", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.config.Config.load_representation_data": [[41, 59], ["print", "print", "open", "csv.reader", "open", "csv.reader"], "methods", ["None"], ["if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "\n", "\n", "\n", "", "", "def", "load_representation_data", "(", "self", ",", "u2index_path", ",", "i2index_path", ")", ":", "\n", "        ", "count", "=", "0", "\n", "with", "open", "(", "u2index_path", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "                ", "count", "+=", "1", "\n", "", "", "num_user", "=", "count", "\n", "print", "(", "'Num user: '", ",", "num_user", ")", "\n", "\n", "count", "=", "0", "\n", "with", "open", "(", "i2index_path", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.config.Config.show_config_info": [[60, 67], ["print", "print", "print", "print", "print", "print"], "methods", ["None"], ["for", "row", "in", "csv_reader", ":", "\n", "                ", "count", "+=", "1", "\n", "", "", "num_item", "=", "count", "\n", "print", "(", "'Num item: '", ",", "num_item", ")", "\n", "\n", "return", "num_user", ",", "num_item", "\n", "\n", "", "def", "show_config_info", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.__init__": [[9, 19], ["data_util.Data_Utils.load_representation_data", "data_util.Data_Utils.load_interact_matrix_s_ite"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_representation_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_interact_matrix_s_ite"], ["class", "Data_Utils", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "train_path", ",", "root_path", ",", "config", ")", ":", "\n", "        ", "self", ".", "train_path", "=", "train_path", "\n", "self", ".", "config", "=", "config", "\n", "\n", "self", ".", "num_user", ",", "self", ".", "num_item", "=", "self", ".", "load_representation_data", "(", "\n", "root_path", "+", "\"u2index.txt\"", ",", "\n", "root_path", "+", "\"i2index.txt\"", ")", "\n", "self", ".", "interact_mat", "=", "self", ".", "load_interact_matrix_s_ite", "(", "root_path", "+", "\"without_implicit_in_train/ratings_train.txt\"", ",", "self", ".", "num_user", ",", "\n", "self", ".", "num_item", ")", "\n", "self", ".", "max_len", "=", "config", ".", "max_len", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.preprocess_data": [[20, 54], ["open", "progressbar.ProgressBar", "f.readlines", "line.split", "int", "itemids.split.split.split", "interacts.split.split.split", "data_util.Data_Utils.raise_data_no_concat_test", "users_ids.extend", "items_seq.extend", "targets_ids.extend", "implicit_labels.extend", "explicit_labels.extend", "attention_masks.extend", "elements[].strip", "elements[].strip", "arr_items.append", "elements[].strip", "arr_interacts.append", "int", "int", "item.strip", "interact.strip"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.raise_data_no_concat_test"], ["self", ".", "num_neg", "=", "config", ".", "num_neg", "\n", "self", ".", "item_representation", ",", "self", ".", "dimension", "=", "self", ".", "get_item_rep", "(", "config", ".", "path_rep_item", ")", "\n", "# self.user_representation = self.get_user_rep(config.path_rep_user, self.dimension)", "\n", "\n", "", "def", "preprocess_test", "(", "self", ",", "test_data", ",", "negative_data", ")", ":", "\n", "        ", "data", "=", "[", "]", "\n", "dict_arritem_ids", "=", "self", ".", "get_dict_array_item_train", "(", ")", "\n", "widgets", "=", "[", "progressbar", ".", "Percentage", "(", ")", ",", "\" \"", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "\" \"", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "for", "idx", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "len", "(", "test_data", ")", ")", ")", ":", "\n", "            ", "uid", "=", "test_data", "[", "idx", "]", "[", "0", "]", "\n", "test_item", "=", "test_data", "[", "idx", "]", "[", "1", "]", "\n", "neg_items", "=", "negative_data", "[", "uid", "]", "\n", "arr_items", "=", "dict_arritem_ids", "[", "uid", "]", "\n", "items", "=", "neg_items", "+", "[", "test_item", "]", "\n", "# user_ids, items_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, attn_masks, labels = \\", "\n", "#         self.raise_data_test_ver2(uid, arr_items, test_item, neg_items)", "\n", "# user_ids, items_sequences, target_ids, attn_masks, labels = \\", "\n", "#         self.raise_data_test_ver2(uid, arr_items, test_item, neg_items)", "\n", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ",", "labels", "=", "self", ".", "raise_data_test_no_concat_test", "(", "uid", ",", "arr_items", ",", "test_item", ",", "neg_items", ")", "\n", "data", ".", "append", "(", "{", "\n", "\"user_ids\"", ":", "user_ids", ",", "\n", "\"items_sequences\"", ":", "items_sequences", ",", "\n", "\"target_ids\"", ":", "target_ids", ",", "\n", "# \"user_reps\": user_reps,", "\n", "# \"item_seq_reps\": item_seq_reps,", "\n", "# \"item_target_reps\": item_target_reps,", "\n", "\"attn_masks\"", ":", "attn_masks", ",", "\n", "\"labels\"", ":", "labels", ",", "\n", "\"items\"", ":", "items", "\n", "}", ")", "\n", "", "return", "data", "\n", "\n", "", "def", "get_dict_array_item_train", "(", "self", ")", ":", "\n", "        ", "dict_arritem_ids", "=", "{", "}", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.preprocess_test": [[55, 83], ["data_util.Data_Utils.get_dict_array_item_train", "print", "progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "len", "data_util.Data_Utils.raise_data_test_no_concat_test", "data.append", "print"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.get_dict_array_item_train", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.raise_data_test_no_concat_test"], ["with", "open", "(", "self", ".", "train_path", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "f", ".", "readlines", "(", ")", ")", ":", "\n", "                ", "elements", "=", "line", ".", "split", "(", "'|'", ")", "\n", "uid", "=", "int", "(", "elements", "[", "0", "]", ".", "strip", "(", ")", ")", "\n", "\n", "itemids", "=", "elements", "[", "1", "]", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "\n", "itemids", "=", "itemids", ".", "split", "(", "','", ")", "\n", "arr_items", "=", "[", "]", "\n", "for", "item", "in", "itemids", ":", "\n", "                    ", "arr_items", ".", "append", "(", "int", "(", "item", ".", "strip", "(", ")", ")", ")", "\n", "", "dict_arritem_ids", "[", "uid", "]", "=", "arr_items", "\n", "", "", "return", "dict_arritem_ids", "\n", "\n", "", "def", "load_representation_data", "(", "self", ",", "u2index_path", ",", "i2index_path", ")", ":", "\n", "        ", "count", "=", "0", "\n", "with", "open", "(", "u2index_path", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "                ", "count", "+=", "1", "\n", "", "", "num_user", "=", "count", "\n", "print", "(", "'Num user: '", ",", "num_user", ")", "\n", "\n", "count", "=", "0", "\n", "with", "open", "(", "i2index_path", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "                ", "count", "+=", "1", "\n", "", "", "num_item", "=", "count", "\n", "print", "(", "'Num item: '", ",", "num_item", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.get_dict_array_item_train": [[84, 98], ["open", "progressbar.ProgressBar", "f.readlines", "line.split", "int", "itemids.split.split.split", "elements[].strip", "elements[].strip", "arr_items.append", "int", "item.strip"], "methods", ["None"], ["\n", "return", "num_user", ",", "num_item", "\n", "\n", "", "def", "load_interact_matrix_s_ite", "(", "self", ",", "file_path", ",", "num_user", ",", "num_item", ")", ":", "\n", "        ", "start", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "# Construct matrix", "\n", "# ma tran thua voi num_user x num_item , init value la false.", "\n", "mat", "=", "sp", ".", "dok_matrix", "(", "(", "num_user", ",", "num_item", ")", ",", "dtype", "=", "np", ".", "bool_", ")", "\n", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "csv_reader", ":", "\n", "                ", "uid", "=", "int", "(", "line", "[", "0", "]", ")", "\n", "itemids", "=", "line", "[", "1", "]", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "\n", "itemids", "=", "itemids", ".", "split", "(", "\",\"", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_representation_data": [[99, 117], ["print", "print", "open", "csv.reader", "open", "csv.reader"], "methods", ["None"], ["for", "item", "in", "itemids", ":", "\n", "                    ", "itemid", "=", "int", "(", "item", ".", "strip", "(", ")", ")", "\n", "mat", "[", "uid", ",", "itemid", "]", "=", "True", "\n", "", "", "", "print", "(", "\"time load_interact_matrix_s_ite: \"", ",", "datetime", ".", "datetime", ".", "now", "(", ")", "-", "start", ")", "\n", "return", "mat", "\n", "\n", "", "def", "load_negative_data", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "negative_dict", "=", "{", "}", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "'|'", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "# i = 0", "\n", "# raw data: (4,2504)|15383|6979|41741|79116|53192|12932|29099|", "\n", "for", "line", "in", "csv_reader", ":", "\n", "# line: ['(4,2504)', '15383', '6979', '41741', '79116', '53192', '12932',..]", "\n", "                ", "user", "=", "line", "[", "0", "]", ".", "split", "(", "\",\"", ")", "# ['(158', '4966)']", "\n", "user", "=", "int", "(", "user", "[", "0", "]", "[", "1", ":", "]", ")", "# 158", "\n", "# assert user == i", "\n", "# i += 1", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_interact_matrix_s_ite": [[118, 135], ["datetime.datetime.now", "scipy.dok_matrix", "print", "open", "csv.reader", "int", "itemids.split.split.split", "datetime.datetime.now", "line[].strip", "int", "item.strip"], "methods", ["None"], ["negative_dict", "[", "user", "]", "=", "[", "]", "# doi voi moi user co 999 item tuong ung.", "\n", "for", "x", "in", "line", "[", "1", ":", "]", ":", "# danh sach cac item tuong ung voi user do khong co tuong tac explicit.", "\n", "                    ", "negative_dict", "[", "user", "]", ".", "append", "(", "int", "(", "x", ")", ")", "\n", "", "", "", "print", "(", "'len negative data: '", ",", "len", "(", "negative_dict", ")", ")", "\n", "return", "negative_dict", "# user_id: list negative item.", "\n", "\n", "", "def", "load_test_data_s_ite", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "rating_list", "=", "[", "]", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "','", ",", "quotechar", "=", "''", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", "\n", "for", "line", "in", "csv_reader", ":", "\n", "                ", "user", ",", "item", "=", "int", "(", "line", "[", "0", "]", ")", ",", "int", "(", "line", "[", "1", "]", ")", "# get uid, itemid", "\n", "rating_list", ".", "append", "(", "[", "user", ",", "item", "]", ")", "\n", "", "", "print", "(", "'Length test data: '", ",", "len", "(", "rating_list", ")", ")", "\n", "return", "rating_list", "\n", "\n", "", "def", "raise_data_test_ver2", "(", "self", ",", "uid", ",", "arr_items", ",", "test_item", ",", "negative_item", ")", ":", "\n", "        ", "user_ids", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_negative_data": [[136, 154], ["print", "open", "csv.reader", "len", "line[].split", "int", "negative_dict[].append", "int"], "methods", ["None"], ["items_sequences", "=", "[", "]", "\n", "attn_masks", "=", "[", "]", "\n", "# user_reps = []", "\n", "# item_seq_reps = []", "\n", "# item_target_reps = []", "\n", "target_ids", "=", "negative_item", "+", "[", "test_item", "]", "\n", "# item_target_reps = [self.item_representation[x] for x in target_ids]", "\n", "labels", "=", "[", "0", "]", "*", "len", "(", "negative_item", ")", "+", "[", "1", "]", "\n", "k", "=", "len", "(", "arr_items", ")", "\n", "if", "k", ">=", "self", ".", "max_len", ":", "\n", "            ", "item_seq_truth", "=", "arr_items", "[", "1", ":", "self", ".", "max_len", "]", "\n", "attn_mask", "=", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "target_ids", ")", ")", ":", "\n", "                ", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "item_seq_pred", "=", "item_seq_truth", "+", "[", "target_ids", "[", "i", "]", "]", "\n", "# item_seq_reps.append([self.item_representation[x] for x in item_seq_pred])", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_test_data_s_ite": [[155, 164], ["print", "open", "csv.reader", "len", "rating_list.append", "int", "int"], "methods", ["None"], ["attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "items_sequences", ".", "append", "(", "item_seq_pred", ")", "\n", "", "", "else", ":", "\n", "            ", "item_seq_truth", "=", "[", "]", "\n", "attn_mask", "=", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "1", ")", "\n", "item_seq_truth", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n", "", "attn_mask", ".", "append", "(", "1", ")", "\n", "for", "i", "in", "range", "(", "k", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.raise_data_test_ver2": [[166, 206], ["len", "range", "range", "range", "attn_mask.append", "range", "range", "len", "attn_mask.append", "len", "user_ids.append", "attn_masks.append", "items_sequences.append", "attn_mask.append", "item_seq_truth.append", "attn_mask.append", "len", "user_ids.append", "range", "items_sequences.append", "attn_masks.append", "item_seq_pred.append"], "methods", ["None"], ["", "for", "i", "in", "range", "(", "len", "(", "target_ids", ")", ")", ":", "\n", "                ", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "item_seq_pred", "=", "item_seq_truth", "+", "[", "target_ids", "[", "i", "]", "]", "\n", "# isr = [self.item_representation[x] for x in item_seq_pred]", "\n", "for", "j", "in", "range", "(", "k", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_seq_pred", ".", "append", "(", "self", ".", "num_item", ")", "\n", "# isr.append(self.item_representation[-1])", "\n", "", "items_sequences", ".", "append", "(", "item_seq_pred", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "# item_seq_reps.append(isr)", "\n", "# return user_ids, items_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, attn_masks, labels", "\n", "\n", "", "", "return", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ",", "labels", "\n", "\n", "", "def", "raise_data_ver2", "(", "self", ",", "uid", ",", "arr_items", ",", "arr_interacts", ")", ":", "\n", "        ", "user_ids", "=", "[", "]", "\n", "items_sequences", "=", "[", "]", "\n", "target_ids", "=", "[", "]", "\n", "# user_reps = []", "\n", "# item_seq_reps = []", "\n", "# item_target_reps = []", "\n", "im_labels", "=", "[", "]", "\n", "ex_labels", "=", "[", "]", "\n", "attn_masks", "=", "[", "]", "\n", "k", "=", "min", "(", "len", "(", "arr_interacts", ")", ",", "len", "(", "arr_items", ")", ")", "\n", "if", "k", ">=", "self", ".", "max_len", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "# t\u1ea1o t\u1eebng \u0111i\u1ec3m d\u1eef li\u1ec7u 1", "\n", "                ", "attn_mask", "=", "[", "1", "]", "\n", "# mask nh\u01b0 nhau trong m\u1ed7i chu\u1ed7i d\u1eef li\u1ec7u", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "j", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "item_truth", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", "+", "1", ")", "]", "\n", "# item_truth_rep = [self.item_representation[arr_items[j]] for j in range(i+1)]", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "# item_truth_rep.append(self.item_representation[-1])", "\n", "", "target_ids", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.raise_data_ver2": [[207, 289], ["min", "len", "len", "range", "range", "range", "range", "range", "target_ids.append", "items_sequences.append", "im_labels.append", "user_ids.append", "attn_masks.append", "range", "range", "range", "range", "target_ids.append", "items_sequences.append", "im_labels.append", "user_ids.append", "attn_masks.append", "range", "attn_mask.append", "attn_mask.append", "item_truth.append", "ex_labels.append", "ex_labels.append", "user_ids.append", "im_labels.append", "ex_labels.append", "random.randrange", "item_seq.append", "range", "items_sequences.append", "target_ids.append", "attn_masks.append", "attn_mask.append", "attn_mask.append", "item_truth.append", "ex_labels.append", "ex_labels.append", "user_ids.append", "im_labels.append", "ex_labels.append", "random.randrange", "item_seq.append", "range", "items_sequences.append", "target_ids.append", "attn_masks.append", "range", "random.randrange", "item_seq.append", "range", "random.randrange", "item_seq.append", "range", "range"], "methods", ["None"], ["# item_target_reps.append(self.item_representation[arr_items[i]])", "\n", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "# item_seq_reps.append(item_truth_rep)", "\n", "im_labels", ".", "append", "(", "1", ")", "\n", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "if", "arr_interacts", "[", "i", "]", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "0", ")", "\n", "", "for", "j", "in", "range", "(", "self", ".", "num_neg", ")", ":", "\n", "                    ", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "im_labels", ".", "append", "(", "0", ")", "\n", "ex_labels", ".", "append", "(", "0", ")", "\n", "item_seq", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", ")", "]", "\n", "# item_neg_seq_reps = [self.item_representation[arr_items[j]] for j in range(i)]", "\n", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "while", "(", "uid", ",", "x", ")", "in", "self", ".", "interact_mat", ":", "\n", "                        ", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "", "item_seq", ".", "append", "(", "x", ")", "\n", "# item_neg_seq_reps.append(self.item_representation[x])", "\n", "for", "kk", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                        ", "item_seq", ".", "append", "(", "self", ".", "num_item", ")", "\n", "# item_neg_seq_reps.append(self.item_representation[-1])", "\n", "", "items_sequences", ".", "append", "(", "item_seq", ")", "\n", "# item_seq_reps.append(item_neg_seq_reps)", "\n", "target_ids", ".", "append", "(", "x", ")", "\n", "# item_target_reps.append(self.item_representation[x])", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "# t\u1ea1o t\u1eebng \u0111i\u1ec3m d\u1eef li\u1ec7u 1", "\n", "                ", "attn_mask", "=", "[", "1", "]", "\n", "# mask nh\u01b0 nhau trong m\u1ed7i chu\u1ed7i d\u1eef li\u1ec7u", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "j", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "item_truth", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", "+", "1", ")", "]", "\n", "# item_truth_rep = [self.item_representation[arr_items[j]] for j in range(i+1)]", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "# item_truth_rep.append(self.item_representation[-1])", "\n", "", "target_ids", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n", "# item_target_reps.append(self.item_representation[arr_items[i]])", "\n", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "# item_seq_reps.append(item_truth_rep)", "\n", "im_labels", ".", "append", "(", "1", ")", "\n", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "if", "arr_interacts", "[", "i", "]", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "0", ")", "\n", "", "for", "j", "in", "range", "(", "self", ".", "num_neg", ")", ":", "\n", "                    ", "user_ids", ".", "append", "(", "uid", ")", "\n", "# user_reps.append(self.user_representation[uid])", "\n", "im_labels", ".", "append", "(", "0", ")", "\n", "ex_labels", ".", "append", "(", "0", ")", "\n", "item_seq", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", ")", "]", "\n", "# item_neg_seq_reps = [self.item_representation[arr_items[j]] for j in range(i)]", "\n", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "while", "(", "uid", ",", "x", ")", "in", "self", ".", "interact_mat", ":", "\n", "                        ", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "", "item_seq", ".", "append", "(", "x", ")", "\n", "# item_neg_seq_reps.append(self.item_representation[x])", "\n", "for", "kk", "in", "range", "(", "i", "+", "1", ",", "self", ".", "max_len", ")", ":", "\n", "                        ", "item_seq", ".", "append", "(", "self", ".", "num_item", ")", "\n", "# item_neg_seq_reps.append(self.item_representation[-1])", "\n", "", "items_sequences", ".", "append", "(", "item_seq", ")", "\n", "# item_seq_reps.append(item_neg_seq_reps)", "\n", "target_ids", ".", "append", "(", "x", ")", "\n", "# item_target_reps.append(self.item_representation[x])", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "\n", "", "", "", "return", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "ex_labels", ",", "im_labels", ",", "attn_masks", "\n", "\n", "", "def", "get_item_rep", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ")", "as", "f", ":", "\n", "            ", "data", "=", "f", ".", "read", "(", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.create_per_user_data_no_concat": [[290, 365], ["min", "len", "len", "range", "range", "range", "range", "range", "target_id.append", "items_sequences.append", "im_label.append", "user_ids.append", "attn_masks.append", "range", "target_ids.append", "im_labels.append", "ex_labels.append", "range", "range", "range", "target_id.append", "items_sequences.append", "im_label.append", "user_ids.append", "attn_masks.append", "range", "target_ids.append", "im_labels.append", "ex_labels.append", "attn_mask.append", "attn_mask.append", "item_truth.append", "ex_labels.append", "ex_labels.append", "im_label.append", "ex_labels.append", "random.randrange", "target_id.append", "attn_mask.append", "attn_mask.append", "item_truth.append", "ex_label.append", "ex_label.append", "im_labels.append", "ex_labels.append", "random.randrange", "target_id.append", "range", "random.randrange", "range", "random.randrange"], "methods", ["None"], ["\n", "", "data", "=", "data", ".", "split", "(", "\"\\n\"", ")", "\n", "dimension", "=", "int", "(", "data", "[", "0", "]", ".", "strip", "(", ")", ")", "\n", "data", "=", "data", "[", "1", ":", "-", "1", "]", "\n", "item_repr", "=", "{", "}", "\n", "for", "line", "in", "data", ":", "\n", "            ", "parts", "=", "line", ".", "split", "(", "\"|,|\"", ")", "\n", "id", "=", "int", "(", "parts", "[", "0", "]", "[", "1", ":", "]", ".", "strip", "(", ")", ")", "\n", "arr", "=", "parts", "[", "1", "]", "[", ":", "-", "1", "]", ".", "strip", "(", ")", "\n", "arr", "=", "literal_eval", "(", "arr", ")", "\n", "pos", "=", "[", "a", "[", "0", "]", "for", "a", "in", "arr", "]", "\n", "vl", "=", "[", "a", "[", "1", "]", "for", "a", "in", "arr", "]", "\n", "dense_arr", "=", "np", ".", "zeros", "(", "shape", "=", "(", "dimension", ",", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "pos", ")", ")", ":", "\n", "# print(i)", "\n", "                ", "dense_arr", "[", "pos", "[", "i", "]", "]", "=", "vl", "[", "i", "]", "\n", "", "item_repr", "[", "id", "]", "=", "dense_arr", "\n", "", "X", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_item", ")", ":", "\n", "            ", "X", ".", "append", "(", "item_repr", "[", "i", "]", ")", "\n", "", "return", "X", ",", "dimension", "\n", "\n", "", "def", "preprocess_data", "(", "self", ")", ":", "\n", "        ", "users_ids", "=", "[", "]", "\n", "items_seq", "=", "[", "]", "\n", "targets_ids", "=", "[", "]", "\n", "implicit_labels", "=", "[", "]", "\n", "explicit_labels", "=", "[", "]", "\n", "attention_masks", "=", "[", "]", "\n", "with", "open", "(", "self", ".", "train_path", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "progressbar", ".", "ProgressBar", "(", ")", "(", "f", ".", "readlines", "(", ")", ")", ":", "\n", "                ", "elements", "=", "line", ".", "split", "(", "'|'", ")", "\n", "uid", "=", "int", "(", "elements", "[", "0", "]", ".", "strip", "(", ")", ")", "\n", "\n", "itemids", "=", "elements", "[", "1", "]", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "\n", "itemids", "=", "itemids", ".", "split", "(", "','", ")", "\n", "arr_items", "=", "[", "]", "\n", "for", "item", "in", "itemids", ":", "\n", "                    ", "arr_items", ".", "append", "(", "int", "(", "item", ".", "strip", "(", ")", ")", ")", "\n", "\n", "", "interacts", "=", "elements", "[", "2", "]", ".", "strip", "(", ")", "[", "1", ":", "-", "1", "]", "\n", "interacts", "=", "interacts", ".", "split", "(", "','", ")", "\n", "arr_interacts", "=", "[", "]", "\n", "for", "interact", "in", "interacts", ":", "\n", "                    ", "arr_interacts", ".", "append", "(", "int", "(", "interact", ".", "strip", "(", ")", ")", ")", "\n", "# print(arr_interacts)", "\n", "# user_ids, item_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, ex_labels, im_labels, attn_masks = \\", "\n", "#             self.raise_data_ver2(uid, arr_items, arr_interacts)", "\n", "# user_ids, item_sequences, target_ids, ex_labels, im_labels, attn_masks = \\", "\n", "#             self.raise_data_ver2(uid, arr_items, arr_interacts)", "\n", "", "user_ids", ",", "item_sequences", ",", "target_ids", ",", "ex_labels", ",", "im_labels", ",", "attn_masks", "=", "self", ".", "raise_data_no_concat_test", "(", "uid", ",", "arr_items", ",", "arr_interacts", ")", "\n", "users_ids", ".", "extend", "(", "user_ids", ")", "\n", "items_seq", ".", "extend", "(", "item_sequences", ")", "\n", "targets_ids", ".", "extend", "(", "target_ids", ")", "\n", "# lst_user_reps.extend(user_reps)", "\n", "# lst_item_seq_reps.extend(item_seq_reps)", "\n", "# lst_item_target_reps.extend(item_target_reps)", "\n", "implicit_labels", ".", "extend", "(", "im_labels", ")", "\n", "explicit_labels", ".", "extend", "(", "ex_labels", ")", "\n", "attention_masks", ".", "extend", "(", "attn_masks", ")", "\n", "# return users_ids, items_seq, targets_ids, lst_user_reps, lst_item_seq_reps,\\", "\n", "#          lst_item_target_reps, implicit_labels, explicit_labels, attention_masks", "\n", "", "", "return", "users_ids", ",", "items_seq", ",", "targets_ids", ",", "implicit_labels", ",", "explicit_labels", ",", "attention_masks", "\n", "\n", "", "def", "raise_data_no_concat_test", "(", "self", ",", "uid", ",", "arr_items", ",", "arr_interacts", ")", ":", "\n", "        ", "user_ids", "=", "[", "]", "\n", "items_sequences", "=", "[", "]", "\n", "target_ids", "=", "[", "]", "\n", "im_labels", "=", "[", "]", "\n", "ex_labels", "=", "[", "]", "\n", "attn_masks", "=", "[", "]", "\n", "k", "=", "min", "(", "len", "(", "arr_interacts", ")", ",", "len", "(", "arr_items", ")", ")", "\n", "if", "k", ">=", "self", ".", "max_len", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "# t\u1ea1o t\u1eebng \u0111i\u1ec3m d\u1eef li\u1ec7u", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.raise_data_no_concat_test": [[366, 435], ["min", "len", "len", "range", "range", "range", "range", "range", "target_ids.append", "items_sequences.append", "im_labels.append", "user_ids.append", "attn_masks.append", "range", "range", "range", "range", "target_ids.append", "items_sequences.append", "im_labels.append", "user_ids.append", "attn_masks.append", "range", "attn_mask.append", "attn_mask.append", "item_truth.append", "ex_labels.append", "ex_labels.append", "user_ids.append", "im_labels.append", "ex_labels.append", "random.randrange", "items_sequences.append", "target_ids.append", "attn_masks.append", "attn_mask.append", "attn_mask.append", "item_truth.append", "ex_labels.append", "ex_labels.append", "user_ids.append", "im_labels.append", "ex_labels.append", "random.randrange", "items_sequences.append", "target_ids.append", "attn_masks.append", "range", "random.randrange", "range", "random.randrange"], "methods", ["None"], ["                ", "attn_mask", "=", "[", "1", "]", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "j", "in", "range", "(", "i", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "item_truth", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", ")", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "", "target_ids", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "im_labels", ".", "append", "(", "1", ")", "\n", "user_ids", ".", "append", "(", "uid", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "if", "arr_interacts", "[", "i", "]", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "0", ")", "\n", "", "for", "j", "in", "range", "(", "self", ".", "num_neg", ")", ":", "\n", "                    ", "user_ids", ".", "append", "(", "uid", ")", "\n", "im_labels", ".", "append", "(", "0", ")", "\n", "ex_labels", ".", "append", "(", "0", ")", "\n", "# item_seq = [arr_items[j] for j in range(i)]", "\n", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "while", "(", "uid", ",", "x", ")", "in", "self", ".", "interact_mat", ":", "\n", "                        ", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "target_ids", ".", "append", "(", "x", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "                ", "attn_mask", "=", "[", "1", "]", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "j", "in", "range", "(", "i", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "item_truth", "=", "[", "arr_items", "[", "j", "]", "for", "j", "in", "range", "(", "i", ")", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "self", ".", "max_len", ")", ":", "\n", "                    ", "item_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "", "target_ids", ".", "append", "(", "arr_items", "[", "i", "]", ")", "\n", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "im_labels", ".", "append", "(", "1", ")", "\n", "user_ids", ".", "append", "(", "uid", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "if", "arr_interacts", "[", "i", "]", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "ex_labels", ".", "append", "(", "0", ")", "\n", "", "for", "j", "in", "range", "(", "self", ".", "num_neg", ")", ":", "\n", "                    ", "user_ids", ".", "append", "(", "uid", ")", "\n", "im_labels", ".", "append", "(", "0", ")", "\n", "ex_labels", ".", "append", "(", "0", ")", "\n", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "while", "(", "uid", ",", "x", ")", "in", "self", ".", "interact_mat", ":", "\n", "                        ", "x", "=", "random", ".", "randrange", "(", "self", ".", "num_item", ")", "\n", "", "items_sequences", ".", "append", "(", "item_truth", ")", "\n", "target_ids", ".", "append", "(", "x", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "", "", "", "return", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "ex_labels", ",", "im_labels", ",", "attn_masks", "\n", "\n", "", "def", "raise_data_test_no_concat_test", "(", "self", ",", "uid", ",", "arr_items", ",", "test_item", ",", "negative_item", ")", ":", "\n", "        ", "uid_ids", "=", "[", "]", "\n", "items_sequences", "=", "[", "]", "\n", "attn_masks", "=", "[", "]", "\n", "target_ids", "=", "negative_item", "+", "[", "test_item", "]", "\n", "labels", "=", "[", "0", "]", "*", "len", "(", "negative_item", ")", "+", "[", "1", "]", "\n", "k", "=", "len", "(", "arr_items", ")", "\n", "if", "k", ">=", "self", ".", "max_len", ":", "\n", "            ", "item_seq_truth", "=", "arr_items", "[", ":", "self", ".", "max_len", "]", "\n", "attn_mask", "=", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.create_test_per_user_data_no_concat": [[436, 455], ["len", "range", "range", "range", "range", "len", "attn_mask.append", "items_sequences.append", "attn_mask.append", "attn_mask.append"], "methods", ["None"], ["                ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "target_ids", ")", ")", ":", "\n", "                ", "uid_ids", ".", "append", "(", "uid", ")", "\n", "items_sequences", ".", "append", "(", "item_seq_truth", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "", "", "else", ":", "\n", "            ", "item_seq_truth", "=", "arr_items", "\n", "for", "j", "in", "range", "(", "k", ",", "self", ".", "max_len", ")", ":", "\n", "                ", "item_seq_truth", ".", "append", "(", "self", ".", "num_item", ")", "\n", "", "attn_mask", "=", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "1", ")", "\n", "", "for", "i", "in", "range", "(", "k", ",", "self", ".", "max_len", ")", ":", "\n", "                ", "attn_mask", ".", "append", "(", "0", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "target_ids", ")", ")", ":", "\n", "                ", "uid_ids", ".", "append", "(", "uid", ")", "\n", "items_sequences", ".", "append", "(", "item_seq_truth", ")", "\n", "attn_masks", ".", "append", "(", "attn_mask", ")", "\n", "\n", "# print(\"uid:\", np.shape(np.array(uid_ids)))", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.raise_data_test_no_concat_test": [[456, 493], ["len", "range", "range", "range", "range", "range", "range", "len", "attn_mask.append", "len", "uid_ids.append", "items_sequences.append", "attn_masks.append", "item_seq_truth.append", "attn_mask.append", "attn_mask.append", "len", "uid_ids.append", "items_sequences.append", "attn_masks.append"], "methods", ["None"], ["# print(\"item sequence: \", np.shape(np.array(items_sequences)))", "\n", "# print(\"target ids:\", np.shape(np.array(target_ids)))", "\n", "# print(\"attn mask: \", np.shape(np.array(attn_masks)))", "\n", "# print(\"labels: \", np.shape(np.array(labels)))", "\n", "\n", "", "", "return", "uid_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ",", "labels", "", "", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.CausalSelfAttention.__init__": [[26, 41], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Manager.__init__"], ["\n", "gmf_embedding_weight_user_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_user", ",", "num_factors_gmf", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_gmf", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_user_onehot'", ")", "\n", "gmf_embedding_weight_item_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_item", ",", "num_factors_gmf", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_gmf", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_item_onehot'", ")", "\n", "mlp_embedding_weight_user_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_user", ",", "num_factors_mlp", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_mlp", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_user_onehot'", ")", "\n", "mlp_embedding_weight_item_onehot", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "random_normal", "(", "[", "num_item", ",", "num_factors_mlp", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors_mlp", ")", ",", "\n", "name", "=", "'gmf_embedding_weight_item_onehot'", ")", "\n", "\n", "return", "{", "'gmf_user_onehot'", ":", "gmf_embedding_weight_user_onehot", ",", "\n", "'gmf_item_onehot'", ":", "gmf_embedding_weight_item_onehot", ",", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.CausalSelfAttention.forward": [[42, 68], ["x.size", "attn_mask1.view().detach().cpu().numpy", "numpy.tile", "numpy.expand_dims", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "torch.tensor().long().to", "model.CausalSelfAttention.key().view().transpose", "model.CausalSelfAttention.query().view().transpose", "model.CausalSelfAttention.value().view().transpose", "model.CausalSelfAttention.masked_fill", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "model.CausalSelfAttention.attn_drop", "model.CausalSelfAttention.transpose().contiguous().view", "model.CausalSelfAttention.resid_drop", "float", "model.CausalSelfAttention.proj", "attn_mask1.view().detach().cpu", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "torch.tensor().long", "model.CausalSelfAttention.key().view", "model.CausalSelfAttention.query().view", "model.CausalSelfAttention.value().view", "model.CausalSelfAttention.transpose", "math.sqrt", "model.CausalSelfAttention.transpose().contiguous", "model.CausalSelfAttention.size", "attn_mask1.view().detach", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "model.CausalSelfAttention.key", "model.CausalSelfAttention.query", "model.CausalSelfAttention.value", "model.CausalSelfAttention.transpose", "attn_mask1.view"], "methods", ["None"], ["'mlp_user_onehot'", ":", "mlp_embedding_weight_user_onehot", ",", "\n", "'mlp_item_onehot'", ":", "mlp_embedding_weight_item_onehot", "}", "\n", "\n", "", "def", "create_model", "(", "self", ")", ":", "\n", "# custom params", "\n", "        ", "num_user", "=", "self", ".", "params", "[", "'num_user'", "]", "\n", "num_item", "=", "self", ".", "params", "[", "'num_item'", "]", "\n", "# user_pcat_dimension = self.params['user_pcat_dimension']", "\n", "# item_pcat_dimension = self.params['item_pcat_dimension']", "\n", "learning_rate", "=", "self", ".", "params", "[", "'learning_rate'", "]", "\n", "num_factors", "=", "self", ".", "params", "[", "'num_factors'", "]", "\n", "qlambda", "=", "self", ".", "params", "[", "'lambda'", "]", "\n", "eta_1", "=", "self", ".", "params", "[", "'eta_1'", "]", "\n", "eta_2", "=", "self", ".", "params", "[", "'eta_2'", "]", "\n", "batch_size", "=", "self", ".", "params", "[", "'batch_size'", "]", "\n", "# user_dense_shape = [300, 188]", "\n", "# item_dense_shape = [64, 188]", "\n", "global_epoch", "=", "tf", ".", "Variable", "(", "0", ",", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'global_epoch'", ")", "\n", "\n", "with", "tf", ".", "device", "(", "'/gpu:0'", ")", ":", "\n", "            ", "print", "(", "'Chay voi GPU----------------------------------------------------->>>>>>'", ")", "\n", "user_index", ",", "item_index", "=", "ImToEx", ".", "get_place_holder", "(", ")", "\n", "embedding_weight", "=", "ImToEx", ".", "get_embedding_weight", "(", "num_user", ",", "num_item", ",", "num_factors", ")", "\n", "\n", "# -------------------------------- GMF part -------------------------------", "\n", "\n", "gmf_pu_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'gmf_user_onehot'", "]", ",", "user_index", ",", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Block.__init__": [[72, 82], ["torch.Module.__init__", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "model.CausalSelfAttention", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.GELU", "torch.GELU", "torch.GELU", "torch.GELU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Manager.__init__"], ["gmf_pu", "=", "tf", ".", "identity", "(", "gmf_pu_onehot", ",", "name", "=", "'gmf_pu'", ")", "\n", "gmf_qi", "=", "tf", ".", "identity", "(", "gmf_qi_onehot", ",", "name", "=", "'gmf_qi'", ")", "\n", "\n", "gmf_phi", "=", "tf", ".", "multiply", "(", "gmf_pu", ",", "gmf_qi", ",", "name", "=", "'gmf_phi'", ")", "\n", "gmf_h", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'gmf_h'", ")", "\n", "\n", "# --------------------------------- MLP part --------------------------------", "\n", "mlp_pu_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'mlp_user_onehot'", "]", ",", "user_index", ",", "\n", "name", "=", "\"mlp_pu_onehot\"", ")", "\n", "mlp_qi_onehot", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_weight", "[", "'mlp_item_onehot'", "]", ",", "item_index", ",", "\n", "name", "=", "\"mlp_qi_onehot\"", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Block.forward": [[84, 88], ["model.Block.attn", "model.Block.mlp", "model.Block.ln1", "model.Block.ln2"], "methods", ["None"], ["mlp_pu", "=", "tf", ".", "identity", "(", "mlp_pu_onehot", ",", "name", "=", "'mlp_pu'", ")", "\n", "mlp_qi", "=", "tf", ".", "identity", "(", "mlp_qi_onehot", ",", "name", "=", "'mlp_qi'", ")", "\n", "\n", "mlp_weights", "=", "{", "\n", "'w1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "4", "*", "num_factors", ",", "2", "*", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "1", "/", "num_factors", ")", ",", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.__init__": [[90, 114], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BCELoss", "torch.BCELoss", "torch.BCELoss", "torch.BCELoss", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "model.Block", "range"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Manager.__init__"], ["'w2'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", ",", "num_factors", "]", ")", "*", "tf", ".", "sqrt", "(", "2", "/", "num_factors", ")", ",", "\n", "name", "=", "'mlp_weight2'", ")", ",", "\n", "'h'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'mlp_h'", ")", "\n", "}", "\n", "mlp_biases", "=", "{", "\n", "'b1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "2", "*", "num_factors", "]", ")", ",", "name", "=", "'mlp_bias1'", ")", ",", "\n", "'b2'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "num_factors", "]", ")", ",", "name", "=", "'mlp_bias2'", ")", "\n", "}", "\n", "\n", "mlp_phi_1", "=", "tf", ".", "concat", "(", "[", "mlp_pu", ",", "mlp_qi", "]", ",", "axis", "=", "-", "1", ",", "name", "=", "'mlp_phi1'", ")", "\n", "mlp_phi_2", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "mlp_phi_1", ",", "mlp_weights", "[", "'w1'", "]", ")", ",", "mlp_biases", "[", "'b1'", "]", ")", ",", "\n", "name", "=", "'mlp_phi2'", ")", "\n", "mlp_phi_3", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "mlp_phi_2", ",", "mlp_weights", "[", "'w2'", "]", ")", ",", "mlp_biases", "[", "'b2'", "]", ")", ",", "\n", "name", "=", "'mlp_phi3'", ")", "\n", "\n", "# --------------------------------- implicit part ------------------------------------", "\n", "# 1 x 2*num_factors", "\n", "im_phi", "=", "tf", ".", "concat", "(", "[", "gmf_phi", ",", "mlp_phi_3", "]", ",", "axis", "=", "1", ",", "name", "=", "'im_phi'", ")", "\n", "# 2*num_factors x 1", "\n", "h_implicit", "=", "tf", ".", "concat", "(", "[", "gmf_h", ",", "mlp_weights", "[", "'h'", "]", "]", ",", "axis", "=", "0", ",", "name", "=", "'h_implicit'", ")", "\n", "# tf.squeeze() 1 x 1", "\n", "im_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "matmul", "(", "im_phi", ",", "h_implicit", ")", ",", "name", "=", "'prediction_implicit'", ")", "\n", "\n", "# --------------------------------- explicit part ------------------------------------", "\n", "ex_weights", "=", "{", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.forward": [[116, 138], ["model.BertIte.embedding_user", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "model.BertIte.embedding_item", "model.BertIte.embedding_item", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "model.BertIte.act_fn", "click.squeeze.squeeze.squeeze", "model.BertIte.act_fn", "model.BertIte.act_fn", "action.squeeze.squeeze.squeeze", "block.forward", "model.BertIte.implicit", "model.BertIte.explicit1", "model.BertIte.explicit"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.forward"], ["name", "=", "'ex_weight1'", ")", ",", "\n", "'h'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "num_factors", ",", "1", "]", ",", "minval", "=", "-", "1", ",", "maxval", "=", "1", ")", ",", "name", "=", "'h_explicit'", ")", "\n", "}", "\n", "ex_biases", "=", "{", "\n", "'b1'", ":", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "num_factors", "]", ")", ",", "name", "=", "'ex_bias1'", ")", ",", "\n", "}", "\n", "# 1 x num_factors", "\n", "ex_phi", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "im_phi", ",", "ex_weights", "[", "'w1'", "]", ")", ",", "ex_biases", "[", "'b1'", "]", ")", ",", "name", "=", "'ex_phi'", ")", "\n", "train_ex_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "matmul", "(", "ex_phi", ",", "ex_weights", "[", "'h'", "]", ")", ",", "name", "=", "'train_prediction_explicit'", ")", "\n", "\n", "# ex_prediction = tf.squeeze(tf.multiply(im_prediction, train_ex_prediction), name='prediction_explicit')", "\n", "ex_prediction", "=", "tf", ".", "squeeze", "(", "tf", ".", "multiply", "(", "tf", ".", "nn", ".", "sigmoid", "(", "im_prediction", ")", ",", "tf", ".", "nn", ".", "sigmoid", "(", "train_ex_prediction", ")", ")", ",", "\n", "name", "=", "'prediction_explicit'", ")", "\n", "# ex_prediction = tf.squeeze(tf.nn.sigmoid(train_ex_prediction), name='prediction_explicit')", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.compute_loss": [[139, 148], ["model.BertIte.loss_fn", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "model.BertIte.loss_fn", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "click.type", "implicit_labels.type", "action.type", "explicit_labels.type", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square", "torch.square"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.data_preparation.sparse_vector.add"], ["\n", "# ---------------------------------- log loss ---------------------------------------------", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Manager.__init__": [[152, 161], ["super().__init__", "config.Config"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Manager.__init__"], ["\n", "loss_implicit_list", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "labels", ",", "\n", "logits", "=", "im_prediction", ",", "\n", "name", "=", "'y1_loss_list'", ")", "\n", "loss_implicit", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "multiply", "(", "y1_indicators", ",", "loss_implicit_list", ")", ",", "name", "=", "'y1_loss'", ")", "\n", "loss_explicit_list", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "labels", ",", "\n", "logits", "=", "train_ex_prediction", ",", "\n", "name", "=", "'y2_loss_list'", ")", "\n", "loss_explicit", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "multiply", "(", "y2_indicators", ",", "loss_explicit_list", ")", ",", "name", "=", "'y2_loss'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.Manager.train_and_evaluate": [[163, 282], ["data_util.Data_Utils", "data_util.Data_Utils.load_test_data_s_ite", "data_util.Data_Utils.load_negative_data", "data_util.Data_Utils.preprocess_test", "model.to.BertIte", "model.to.to.to", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "print", "model_util.evaluate_model_ver3", "zip", "print", "range", "model.to.to.parameters", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "model.to.to.load_state_dict", "torch.Adam.load_state_dict", "print", "print", "print", "eval_result_data.append", "data_util.Data_Utils.preprocess_data", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.SequentialSampler", "torch.utils.data.SequentialSampler", "torch.utils.data.SequentialSampler", "torch.utils.data.SequentialSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "print", "model.to.to.train", "print", "open", "log.write", "terminaltables.AsciiTable", "len", "progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "batch[].to", "batch[].to", "batch[].to", "batch[].to", "batch[].to", "batch[].to", "model.to.to.zero_grad", "time.time", "model.to.to.forward", "model.to.to.compute_loss", "model.to.compute_loss.backward", "torch.Adam.step", "model.to.compute_loss.item", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "model_util.evaluate_model_ver3", "zip", "print", "print", "print", "eval_result_data.append", "str", "terminaltables.AsciiTable", "model.to.to.state_dict", "torch.Adam.state_dict", "open", "log.write", "terminaltables.AsciiTable", "str", "terminaltables.AsciiTable"], "methods", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_test_data_s_ite", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.load_negative_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.preprocess_test", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.evaluate_model_ver3", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.data_util.Data_Utils.preprocess_data", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_ite_item_pcat.mf.MF.train", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.forward", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.compute_loss", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.evaluate_model_ver3"], ["tf", ".", "add", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "mlp_pu", ")", ")", ",", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "mlp_qi", ")", ")", ")", ",", "\n", "name", "=", "'regularizer'", ")", "\n", "\n", "loss", "=", "tf", ".", "add", "(", "tf", ".", "add", "(", "tf", ".", "multiply", "(", "eta_1", ",", "loss_implicit", ")", ",", "loss_explicit", ")", ",", "tf", ".", "multiply", "(", "qlambda", ",", "regularizer", ")", ",", "\n", "name", "=", "'loss'", ")", "\n", "\n", "# optimize", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "learning_rate", ")", ".", "minimize", "(", "loss", ",", "name", "=", "'optimize'", ")", "\n", "\n", "# optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(loss_implicit, name='optimize')", "\n", "# optimizer = tf.train.MomentumOptimizer(0.0001, 0.8).minimize(loss, name='optimize')", "\n", "\n", "print", "(", "'--------------->>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<------------------------'", ")", "\n", "return", "{", "\n", "'user_index'", ":", "user_index", ",", "\n", "'item_index'", ":", "item_index", ",", "\n", "'optimizer'", ":", "optimizer", ",", "\n", "'labels'", ":", "labels", ",", "\n", "# 'ex_indicators': ex_indicators,", "\n", "'y1_indicators'", ":", "y1_indicators", ",", "\n", "'y2_indicators'", ":", "y2_indicators", ",", "\n", "'loss'", ":", "loss", ",", "\n", "'loss_implicit'", ":", "loss_implicit", ",", "\n", "'loss_explicit'", ":", "loss_explicit", ",", "\n", "'train_ex_prediction'", ":", "train_ex_prediction", ",", "\n", "'prediction_explicit'", ":", "ex_prediction", ",", "\n", "'prediction_implicit'", ":", "im_prediction", ",", "\n", "'h_implicit'", ":", "h_implicit", ",", "\n", "'global_epoch'", ":", "global_epoch", "\n", "}", "\n", "\n", "\n", "\n", "\n", "", "", "", "def", "training_batch_size", "(", "batch_size", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "num_factor", "=", "8", "\n", "eta", "=", "0.5", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/batch_size/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/batch_size/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "0.001", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "\n", "\n", "", "def", "training_num_factors", "(", "num_factor", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "batch_size", "=", "2048", "\n", "eta", "=", "0.1", "\n", "lr", "=", "0.005", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/num_factor/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "lr", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/num_factor/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "lr", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "lr", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "\n", "\n", "", "def", "training_eta", "(", "eta", ",", "data_name", ",", "save_path_name", ",", "epochs", ",", "num_negatives", ",", "save_log", "=", "True", ",", "save_model", "=", "True", ")", ":", "\n", "    ", "num_factor", "=", "8", "\n", "batch_size", "=", "512", "\n", "root_path", "=", "settings", ".", "DATA_ROOT_PATH", "+", "\"site_data/\"", "+", "data_name", "\n", "log_path", "=", "root_path", "+", "'log/{}/eta/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "num_negatives", ")", "\n", "file_model", "=", "root_path", "+", "'saved_model/{}/eta/{}_{}_{}_{}'", ".", "format", "(", "save_path_name", ",", "num_factor", ",", "batch_size", ",", "eta", ",", "\n", "num_negatives", ")", "\n", "\n", "params", "=", "{", "'num_factors'", ":", "num_factor", ",", "\n", "'learning_rate'", ":", "0.001", ",", "\n", "'epochs'", ":", "epochs", ",", "\n", "'num_negatives'", ":", "num_negatives", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'verbose'", ":", "10", ",", "\n", "'eval_top_k'", ":", "[", "5", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", ",", "\n", "'lambda'", ":", "0.005", ",", "\n", "'eta_1'", ":", "eta", ",", "\n", "'eta_2'", ":", "1.0", "\n", "}", "\n", "\n", "co_neumf", "=", "ImToEx", "(", "root_path", "=", "root_path", ",", "params", "=", "params", ",", "log_path", "=", "log_path", ",", "file_model", "=", "file_model", ",", "\n", "save_log", "=", "save_log", ",", "\n", "save_model", "=", "save_model", ")", "\n", "co_neumf", ".", "run", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_hit_ratio": [[8, 13], ["None"], "function", ["None"], ["def", "get_hit_ratio", "(", "rank_list", ",", "gt_item", ")", ":", "\n", "    ", "for", "item", "in", "rank_list", ":", "\n", "        ", "if", "item", "==", "gt_item", ":", "\n", "            ", "return", "1.0", "\n", "", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_ndcg": [[14, 20], ["range", "len", "math.log", "math.log"], "function", ["None"], ["", "def", "get_ndcg", "(", "rank_list", ",", "gt_item", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "len", "(", "rank_list", ")", ")", ":", "\n", "        ", "item", "=", "rank_list", "[", "i", "]", "\n", "if", "item", "==", "gt_item", ":", "\n", "            ", "return", "math", ".", "log", "(", "2", ")", "/", "math", ".", "log", "(", "i", "+", "2", ")", "\n", "", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.evaluate_model_ver1": [[21, 29], ["progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "model_util.eval_one_rating_ver1", "hits.append", "ndcgs.append", "numpy.array().mean", "numpy.array().mean", "len", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.eval_one_rating_ver1"], ["", "def", "evaluate_model", "(", "model", ",", "top_k", ",", "data", ",", "device", ")", ":", "\n", "    ", "hits", ",", "ndcgs", "=", "[", "]", ",", "[", "]", "\n", "widgets", "=", "[", "progressbar", ".", "Percentage", "(", ")", ",", "\" \"", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "\" \"", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "\n", "for", "idx", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "len", "(", "data", ")", ")", ")", ":", "\n", "        ", "hr", ",", "ndcg", "=", "eval_one_rating", "(", "model", ",", "idx", ",", "top_k", ",", "data", "[", "idx", "]", ",", "device", ")", "\n", "hits", ".", "append", "(", "hr", ")", "\n", "ndcgs", ".", "append", "(", "ndcg", ")", "\n", "", "return", "np", ".", "array", "(", "hits", ")", ".", "mean", "(", ")", ",", "np", ".", "array", "(", "ndcgs", ")", ".", "mean", "(", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.eval_one_rating_ver1": [[30, 53], ["torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "model.eval", "model.forward", "torch.mul().detach().cpu().numpy", "range", "heapq.nlargest", "model_util.get_hit_ratio", "model_util.get_ndcg", "click.squeeze", "action.squeeze", "len", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.mul().detach().cpu", "torch.mul().detach", "torch.mul"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.forward", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_hit_ratio", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_ndcg"], ["\n", "", "def", "eval_one_rating", "(", "model", ",", "idx", ",", "top_k", ",", "data", ",", "device", ")", ":", "\n", "# model = model.to(\"cpu\")", "\n", "    ", "model", ".", "to", "(", "device", ")", "\n", "# user_ids, items_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, labels, items, attn_masks = \\", "\n", "#         data[\"user_ids\"], data[\"item_sequences\"], data[\"target_ids\"], data[\"user_reps\"], data[\"item_seq_reps\"], data[\"item_target_reps\"],\\", "\n", "#              data[\"labels\"], data[\"items\"], data[\"attn_masks\"]", "\n", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "labels", ",", "items", ",", "attn_masks", "=", "data", "[", "\"user_ids\"", "]", ",", "data", "[", "\"items_sequences\"", "]", ",", "data", "[", "\"target_ids\"", "]", ",", "data", "[", "\"labels\"", "]", ",", "data", "[", "\"items\"", "]", ",", "data", "[", "\"attn_masks\"", "]", "\n", "user_ids", "=", "torch", ".", "tensor", "(", "user_ids", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "items_sequences", "=", "torch", ".", "tensor", "(", "items_sequences", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "target_ids", "=", "torch", ".", "tensor", "(", "target_ids", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "attn_masks", "=", "torch", ".", "tensor", "(", "attn_masks", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "test_item", "=", "target_ids", "[", "-", "1", "]", "\n", "model", ".", "eval", "(", ")", "\n", "# click, action = model.forward(user_ids, items_sequences, target_ids, user_reps, item_seq_reps, item_target_reps, attn_masks)", "\n", "click", ",", "action", "=", "model", ".", "forward", "(", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ")", "\n", "\n", "rating", "=", "torch", ".", "mul", "(", "click", ",", "action", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "# print(rating)", "\n", "map_score_item", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "user_ids", ")", ")", ":", "\n", "        ", "item", "=", "items", "[", "i", "]", "\n", "# print(item)", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.evaluate_model_ver2": [[54, 63], ["progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "model_util.eval_one_rating_ver2", "hits.append", "ndcgs.append", "numpy.array().mean", "numpy.array().mean", "len", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.eval_one_rating_ver2"], ["map_score_item", "[", "item", "]", "=", "rating", "[", "i", "]", "\n", "", "list_hr", ",", "list_ndcg", "=", "[", "]", ",", "[", "]", "\n", "for", "tk", "in", "top_k", ":", "\n", "        ", "rank_list", "=", "heapq", ".", "nlargest", "(", "tk", ",", "map_score_item", ",", "key", "=", "map_score_item", ".", "get", ")", "\n", "\n", "hr", "=", "get_hit_ratio", "(", "rank_list", ",", "test_item", ")", "\n", "ndcg", "=", "get_ndcg", "(", "rank_list", ",", "test_item", ")", "\n", "list_hr", ".", "append", "(", "hr", ")", "\n", "list_ndcg", ".", "append", "(", "ndcg", ")", "\n", "", "return", "list_hr", ",", "list_ndcg", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.eval_one_rating_ver2": [[64, 88], ["model.to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "model.eval", "model.forward", "torch.mul().detach().cpu().numpy", "range", "heapq.nlargest", "model_util.get_hit_ratio", "model_util.get_ndcg", "len", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.mul().detach().cpu", "torch.mul().detach", "torch.mul"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.forward", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_hit_ratio", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_ndcg"], ["\n", "\n", "", "def", "evaluate_model_ver3", "(", "model", ",", "top_k", ",", "data", ",", "device", ")", ":", "\n", "    ", "hits", ",", "ndcgs", "=", "[", "]", ",", "[", "]", "\n", "reshit", ",", "resndcg", "=", "[", "]", ",", "[", "]", "\n", "for", "tk", "in", "top_k", ":", "\n", "        ", "hits", ".", "append", "(", "[", "]", ")", "\n", "ndcgs", ".", "append", "(", "[", "]", ")", "\n", "", "widgets", "=", "[", "progressbar", ".", "Percentage", "(", ")", ",", "\" \"", ",", "progressbar", ".", "SimpleProgress", "(", ")", ",", "\" \"", ",", "progressbar", ".", "Timer", "(", ")", "]", "\n", "\n", "for", "idx", "in", "progressbar", ".", "ProgressBar", "(", "widgets", "=", "widgets", ")", "(", "range", "(", "len", "(", "data", ")", ")", ")", ":", "\n", "        ", "lst_hr", ",", "lst_ndcg", "=", "eval_one_rating_ver3", "(", "model", ",", "idx", ",", "top_k", ",", "data", "[", "idx", "]", ",", "device", ")", "\n", "for", "i", ",", "(", "hr", ",", "ndcg", ")", "in", "enumerate", "(", "zip", "(", "lst_hr", ",", "lst_ndcg", ")", ")", ":", "\n", "            ", "hits", "[", "i", "]", ".", "append", "(", "hr", ")", "\n", "ndcgs", "[", "i", "]", ".", "append", "(", "ndcg", ")", "\n", "", "", "for", "lh", ",", "ln", "in", "zip", "(", "hits", ",", "ndcgs", ")", ":", "\n", "        ", "reshit", ".", "append", "(", "np", ".", "array", "(", "lh", ")", ".", "mean", "(", ")", ")", "\n", "resndcg", ".", "append", "(", "np", ".", "array", "(", "ln", ")", ".", "mean", "(", ")", ")", "\n", "", "return", "reshit", ",", "resndcg", "\n", "\n", "", "def", "eval_one_rating_ver3", "(", "model", ",", "idx", ",", "top_k", ",", "data", ",", "device", ")", ":", "\n", "# model = model.to(\"cpu\")", "\n", "    ", "model", ".", "to", "(", "device", ")", "\n", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ",", "labels", ",", "items", "=", "data", "[", "\"user_ids\"", "]", ",", "data", "[", "\"items_sequences\"", "]", ",", "data", "[", "\"target_ids\"", "]", ",", "data", "[", "\"attn_masks\"", "]", ",", "data", "[", "\"labels\"", "]", ",", "data", "[", "\"items\"", "]", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.evaluate_model_ver3": [[89, 106], ["zip", "hits.append", "ndcgs.append", "progressbar.Percentage", "progressbar.SimpleProgress", "progressbar.Timer", "progressbar.ProgressBar", "range", "model_util.eval_one_rating_ver3", "enumerate", "reshit.append", "resndcg.append", "len", "zip", "hits[].append", "ndcgs[].append", "numpy.array().mean", "numpy.array().mean", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.eval_one_rating_ver3"], ["user_ids", "=", "torch", ".", "tensor", "(", "user_ids", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "items_sequences", "=", "torch", ".", "tensor", "(", "items_sequences", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "target_ids", "=", "torch", ".", "tensor", "(", "target_ids", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "attn_masks", "=", "torch", ".", "tensor", "(", "attn_masks", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "test_item", "=", "target_ids", "[", "-", "1", "]", "\n", "model", ".", "eval", "(", ")", "\n", "click", ",", "action", "=", "model", ".", "forward", "(", "user_ids", ",", "items_sequences", ",", "target_ids", ",", "attn_masks", ")", "\n", "rating", "=", "torch", ".", "mul", "(", "click", ",", "action", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "# print(rating)", "\n", "map_score_item", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "user_ids", ")", ")", ":", "\n", "        ", "item", "=", "items", "[", "i", "]", "\n", "# print(item)", "\n", "map_score_item", "[", "item", "]", "=", "rating", "[", "i", "]", "\n", "\n", "", "list_hr", ",", "list_ndcg", "=", "[", "]", ",", "[", "]", "\n", "for", "tk", "in", "top_k", ":", "\n", "        ", "rank_list", "=", "heapq", ".", "nlargest", "(", "tk", ",", "map_score_item", ",", "key", "=", "map_score_item", ".", "get", ")", "\n"]], "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.eval_one_rating_ver3": [[107, 136], ["model.to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "model.eval", "model.forward", "torch.mul().detach().cpu().numpy", "range", "len", "heapq.nlargest", "model_util.get_hit_ratio", "model_util.get_ndcg", "list_hr.append", "list_ndcg.append", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.mul().detach().cpu", "torch.mul().detach", "torch.mul"], "function", ["home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model.BertIte.forward", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_hit_ratio", "home.repos.pwc.inspect_result.tranquyenbk173_BERT_ITE.model_bertIte_onehot_log_loss.model_util.get_ndcg"], ["\n", "hr", "=", "get_hit_ratio", "(", "rank_list", ",", "test_item", ")", "\n", "ndcg", "=", "get_ndcg", "(", "rank_list", ",", "test_item", ")", "\n", "list_hr", ".", "append", "(", "hr", ")", "\n", "list_ndcg", ".", "append", "(", "ndcg", ")", "\n", "", "return", "list_hr", ",", "list_ndcg", "", "", ""]]}