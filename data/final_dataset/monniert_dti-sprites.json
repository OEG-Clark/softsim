{"home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.__init__": [[55, 234], ["utils.use_seed", "utils.coerce_to_path_and_check_exist", "utils.coerce_to_path_and_create_dir", "utils.logger.get_logger", "trainer.Trainer.print_and_log_info", "shutil.copy", "trainer.Trainer.print_and_log_info", "torch.cuda.is_available", "torch.device", "trainer.Trainer.print_and_log_info", "trainer.Trainer.dataset_kwargs.pop", "trainer.Trainer.print_and_log_info", "trainer.Trainer.print_and_log_info", "cfg[].get", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "trainer.Trainer.print_and_log_info", "getattr", "getattr", "len", "trainer.Trainer.model_kwargs.pop", "trainer.Trainer.print_and_log_info", "trainer.Trainer.print_and_log_info", "getattr", "max", "getattr", "getattr", "opt_params.pop", "opt_params.pop", "opt_params.pop", "trainer.Trainer.model.set_optimizer", "trainer.Trainer.print_and_log_info", "trainer.Trainer.print_and_log_info", "trainer.Trainer.print_and_log_info", "scheduler_params.pop", "scheduler_params.pop", "trainer.Trainer.print_and_log_info", "cfg[].get", "cfg[].get", "utils.metrics.Metrics", "utils.metrics.Metrics", "cfg[].get", "cfg[].get", "cfg[].get", "utils.coerce_to_path_and_create_dir", "utils.coerce_to_path_and_create_dir", "[].to", "range", "cfg[].get", "open", "yaml.load", "torch.cuda.device_count", "dataset.get_dataset", "dataset.get_dataset", "len", "cfg[].get", "cfg[].get", "max", "getattr", "getattr", "optimizer.get_optimizer", "cfg[].get", "isinstance", "scheduler.get_scheduler", "trainer.Trainer.scheduler.get_last_lr", "trainer.Trainer.load_from_tag", "trainer.Trainer.train_metrics_path.exists", "trainer.Trainer.val_metrics_path.exists", "utils.metrics.SegmentationScores", "trainer.Trainer.val_scores_path.exists", "utils.coerce_to_path_and_create_dir", "utils.coerce_to_path_and_create_dir", "utils.coerce_to_path_and_create_dir", "utils.coerce_to_path_and_create_dir", "trainer.Trainer.images_to_tsf.size", "utils.coerce_to_path_and_create_dir", "utils.image.convert_to_img().save", "visdom.Visdom", "trainer.Trainer.visualizer.delete_env", "trainer.Trainer.print_and_log_info", "trainer.Trainer.print_and_log_info", "len", "len", "len", "max", "dict", "dict", "round", "trainer.Trainer.load_from_tag", "range", "open", "f.write", "open", "f.write", "utils.metrics.InstanceSegScores", "utils.metrics.Scores", "open", "f.write", "range", "utils.coerce_to_path_and_create_dir", "utils.coerce_to_path_and_create_dir", "utils.coerce_to_path_and_create_dir", "utils.coerce_to_path_and_create_dir", "model.get_model", "range", "range", "range", "utils.image.convert_to_img", "range", "utils.coerce_to_path_and_create_dir", "utils.coerce_to_path_and_create_dir", "utils.coerce_to_path_and_create_dir", "model.tools.count_parameters", "trainer.Trainer.model.cluster_parameters", "trainer.Trainer.model.transformer_parameters", "next", "range", "range", "range", "iter"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_check_exist", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.get_logger", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.set_optimizer", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.__init__.get_dataset", "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.__init__.get_dataset", "home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.get_optimizer", "home.repos.pwc.inspect_result.monniert_dti-sprites.scheduler.__init__.get_scheduler", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.load_from_tag", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.load_from_tag", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.__init__.get_model", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.count_parameters", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.cluster_parameters", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.transformer_parameters"], ["@", "use_seed", "(", ")", "\n", "def", "__init__", "(", "self", ",", "config_path", ",", "run_dir", ")", ":", "\n", "        ", "self", ".", "config_path", "=", "coerce_to_path_and_check_exist", "(", "config_path", ")", "\n", "self", ".", "run_dir", "=", "coerce_to_path_and_create_dir", "(", "run_dir", ")", "\n", "self", ".", "logger", "=", "get_logger", "(", "self", ".", "run_dir", ",", "name", "=", "\"trainer\"", ")", "\n", "self", ".", "print_and_log_info", "(", "\"Trainer initialisation: run directory is {}\"", ".", "format", "(", "run_dir", ")", ")", "\n", "\n", "shutil", ".", "copy", "(", "self", ".", "config_path", ",", "self", ".", "run_dir", ")", "\n", "self", ".", "print_and_log_info", "(", "\"Config {} copied to run directory\"", ".", "format", "(", "self", ".", "config_path", ")", ")", "\n", "\n", "with", "open", "(", "self", ".", "config_path", ")", "as", "fp", ":", "\n", "            ", "cfg", "=", "yaml", ".", "load", "(", "fp", ",", "Loader", "=", "yaml", ".", "FullLoader", ")", "\n", "\n", "", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "type_device", "=", "\"cuda\"", "\n", "nb_device", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "", "else", ":", "\n", "            ", "type_device", "=", "\"cpu\"", "\n", "nb_device", "=", "None", "\n", "", "self", ".", "device", "=", "torch", ".", "device", "(", "type_device", ")", "\n", "self", ".", "print_and_log_info", "(", "\"Using {} device, nb_device is {}\"", ".", "format", "(", "type_device", ",", "nb_device", ")", ")", "\n", "\n", "# Datasets and dataloaders", "\n", "self", ".", "dataset_kwargs", "=", "cfg", "[", "\"dataset\"", "]", "\n", "self", ".", "dataset_name", "=", "self", ".", "dataset_kwargs", ".", "pop", "(", "\"name\"", ")", "\n", "train_dataset", "=", "get_dataset", "(", "self", ".", "dataset_name", ")", "(", "\"train\"", ",", "**", "self", ".", "dataset_kwargs", ")", "\n", "val_dataset", "=", "get_dataset", "(", "self", ".", "dataset_name", ")", "(", "\"val\"", ",", "**", "self", ".", "dataset_kwargs", ")", "\n", "self", ".", "n_classes", "=", "train_dataset", ".", "n_classes", "\n", "self", ".", "is_val_empty", "=", "len", "(", "val_dataset", ")", "==", "0", "\n", "self", ".", "print_and_log_info", "(", "\"Dataset {} instantiated with {}\"", ".", "format", "(", "self", ".", "dataset_name", ",", "self", ".", "dataset_kwargs", ")", ")", "\n", "self", ".", "print_and_log_info", "(", "\"Found {} classes, {} train samples, {} val samples\"", "\n", ".", "format", "(", "self", ".", "n_classes", ",", "len", "(", "train_dataset", ")", ",", "len", "(", "val_dataset", ")", ")", ")", "\n", "\n", "self", ".", "img_size", "=", "train_dataset", ".", "img_size", "\n", "self", ".", "batch_size", "=", "cfg", "[", "\"training\"", "]", "[", "\"batch_size\"", "]", "\n", "self", ".", "n_workers", "=", "cfg", "[", "\"training\"", "]", ".", "get", "(", "\"n_workers\"", ",", "4", ")", "\n", "self", ".", "train_loader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "num_workers", "=", "self", ".", "n_workers", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "val_loader", "=", "DataLoader", "(", "val_dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "num_workers", "=", "self", ".", "n_workers", ")", "\n", "self", ".", "print_and_log_info", "(", "\"Dataloaders instantiated with batch_size={} and n_workers={}\"", "\n", ".", "format", "(", "self", ".", "batch_size", ",", "self", ".", "n_workers", ")", ")", "\n", "self", ".", "seg_eval", "=", "getattr", "(", "train_dataset", ",", "'seg_eval'", ",", "False", ")", "\n", "self", ".", "instance_eval", "=", "getattr", "(", "train_dataset", ",", "'instance_eval'", ",", "False", ")", "\n", "\n", "self", ".", "n_batches", "=", "len", "(", "self", ".", "train_loader", ")", "\n", "self", ".", "n_iterations", ",", "self", ".", "n_epoches", "=", "cfg", "[", "\"training\"", "]", ".", "get", "(", "\"n_iterations\"", ")", ",", "cfg", "[", "\"training\"", "]", ".", "get", "(", "\"n_epoches\"", ")", "\n", "assert", "not", "(", "self", ".", "n_iterations", "is", "not", "None", "and", "self", ".", "n_epoches", "is", "not", "None", ")", "\n", "if", "self", ".", "n_iterations", "is", "not", "None", ":", "\n", "            ", "self", ".", "n_epoches", "=", "max", "(", "self", ".", "n_iterations", "//", "self", ".", "n_batches", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "n_iterations", "=", "self", ".", "n_epoches", "*", "len", "(", "self", ".", "train_loader", ")", "\n", "\n", "# Model", "\n", "", "self", ".", "model_kwargs", "=", "cfg", "[", "\"model\"", "]", "\n", "self", ".", "model_name", "=", "self", ".", "model_kwargs", ".", "pop", "(", "\"name\"", ")", "\n", "self", ".", "is_gmm", "=", "'gmm'", "in", "self", ".", "model_name", "\n", "self", ".", "model", "=", "get_model", "(", "self", ".", "model_name", ")", "(", "self", ".", "train_loader", ".", "dataset", ",", "**", "self", ".", "model_kwargs", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "print_and_log_info", "(", "\"Using model {} with kwargs {}\"", ".", "format", "(", "self", ".", "model_name", ",", "self", ".", "model_kwargs", ")", ")", "\n", "self", ".", "print_and_log_info", "(", "'Number of trainable parameters: {}'", ".", "format", "(", "f'{count_parameters(self.model):,}'", ")", ")", "\n", "self", ".", "n_prototypes", "=", "self", ".", "model", ".", "n_prototypes", "\n", "self", ".", "n_backgrounds", "=", "getattr", "(", "self", ".", "model", ",", "'n_backgrounds'", ",", "0", ")", "\n", "self", ".", "n_objects", "=", "max", "(", "self", ".", "model", ".", "n_objects", ",", "1", ")", "\n", "self", ".", "pred_class", "=", "getattr", "(", "self", ".", "model", ",", "'pred_class'", ",", "False", ")", "or", "getattr", "(", "self", ".", "model", ",", "'estimate_minimum'", ",", "False", ")", "\n", "if", "self", ".", "pred_class", ":", "\n", "            ", "self", ".", "n_clusters", "=", "self", ".", "n_prototypes", "*", "self", ".", "n_objects", "\n", "", "else", ":", "\n", "            ", "self", ".", "n_clusters", "=", "self", ".", "n_prototypes", "**", "self", ".", "n_objects", "*", "max", "(", "self", ".", "n_backgrounds", ",", "1", ")", "\n", "", "self", ".", "learn_masks", "=", "getattr", "(", "self", ".", "model", ",", "'learn_masks'", ",", "False", ")", "\n", "self", ".", "learn_backgrounds", "=", "getattr", "(", "self", ".", "model", ",", "'learn_backgrounds'", ",", "False", ")", "\n", "\n", "# Optimizer", "\n", "opt_params", "=", "cfg", "[", "\"training\"", "]", "[", "\"optimizer\"", "]", "or", "{", "}", "\n", "optimizer_name", "=", "opt_params", ".", "pop", "(", "\"name\"", ")", "\n", "cluster_kwargs", "=", "opt_params", ".", "pop", "(", "'cluster'", ",", "{", "}", ")", "\n", "tsf_kwargs", "=", "opt_params", ".", "pop", "(", "'transformer'", ",", "{", "}", ")", "\n", "self", ".", "optimizer", "=", "get_optimizer", "(", "optimizer_name", ")", "(", "[", "\n", "dict", "(", "params", "=", "self", ".", "model", ".", "cluster_parameters", "(", ")", ",", "**", "cluster_kwargs", ")", ",", "\n", "dict", "(", "params", "=", "self", ".", "model", ".", "transformer_parameters", "(", ")", ",", "**", "tsf_kwargs", ")", "]", ",", "\n", "**", "opt_params", ")", "\n", "self", ".", "model", ".", "set_optimizer", "(", "self", ".", "optimizer", ")", "\n", "self", ".", "print_and_log_info", "(", "\"Using optimizer {} with kwargs {}\"", ".", "format", "(", "optimizer_name", ",", "opt_params", ")", ")", "\n", "self", ".", "print_and_log_info", "(", "\"cluster kwargs {}\"", ".", "format", "(", "cluster_kwargs", ")", ")", "\n", "self", ".", "print_and_log_info", "(", "\"transformer kwargs {}\"", ".", "format", "(", "tsf_kwargs", ")", ")", "\n", "\n", "# Scheduler", "\n", "scheduler_params", "=", "cfg", "[", "\"training\"", "]", ".", "get", "(", "\"scheduler\"", ",", "{", "}", ")", "or", "{", "}", "\n", "scheduler_name", "=", "scheduler_params", ".", "pop", "(", "\"name\"", ",", "None", ")", "\n", "self", ".", "scheduler_update_range", "=", "scheduler_params", ".", "pop", "(", "\"update_range\"", ",", "\"epoch\"", ")", "\n", "assert", "self", ".", "scheduler_update_range", "in", "[", "\"epoch\"", ",", "\"batch\"", "]", "\n", "if", "scheduler_name", "==", "\"multi_step\"", "and", "isinstance", "(", "scheduler_params", "[", "\"milestones\"", "]", "[", "0", "]", ",", "float", ")", ":", "\n", "            ", "n_tot", "=", "self", ".", "n_epoches", "if", "self", ".", "scheduler_update_range", "==", "\"epoch\"", "else", "self", ".", "n_iterations", "\n", "scheduler_params", "[", "\"milestones\"", "]", "=", "[", "round", "(", "m", "*", "n_tot", ")", "for", "m", "in", "scheduler_params", "[", "\"milestones\"", "]", "]", "\n", "", "self", ".", "scheduler", "=", "get_scheduler", "(", "scheduler_name", ")", "(", "self", ".", "optimizer", ",", "**", "scheduler_params", ")", "\n", "self", ".", "cur_lr", "=", "self", ".", "scheduler", ".", "get_last_lr", "(", ")", "[", "0", "]", "\n", "self", ".", "print_and_log_info", "(", "\"Using scheduler {} with parameters {}\"", ".", "format", "(", "scheduler_name", ",", "scheduler_params", ")", ")", "\n", "\n", "# Pretrained / Resume", "\n", "checkpoint_path", "=", "cfg", "[", "\"training\"", "]", ".", "get", "(", "\"pretrained\"", ")", "\n", "checkpoint_path_resume", "=", "cfg", "[", "\"training\"", "]", ".", "get", "(", "\"resume\"", ")", "\n", "assert", "not", "(", "checkpoint_path", "is", "not", "None", "and", "checkpoint_path_resume", "is", "not", "None", ")", "\n", "if", "checkpoint_path", "is", "not", "None", ":", "\n", "            ", "self", ".", "load_from_tag", "(", "checkpoint_path", ")", "\n", "", "elif", "checkpoint_path_resume", "is", "not", "None", ":", "\n", "            ", "self", ".", "load_from_tag", "(", "checkpoint_path_resume", ",", "resume", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "start_epoch", ",", "self", ".", "start_batch", "=", "1", ",", "1", "\n", "\n", "# Train metrics", "\n", "", "metric_names", "=", "[", "'time/img'", ",", "'loss'", "]", "\n", "metric_names", "+=", "[", "f'prop_clus{i}'", "for", "i", "in", "range", "(", "self", ".", "n_clusters", ")", "]", "\n", "train_iter_interval", "=", "cfg", "[", "\"training\"", "]", "[", "\"train_stat_interval\"", "]", "\n", "self", ".", "train_stat_interval", "=", "train_iter_interval", "\n", "self", ".", "train_metrics", "=", "Metrics", "(", "*", "metric_names", ")", "\n", "self", ".", "train_metrics_path", "=", "self", ".", "run_dir", "/", "TRAIN_METRICS_FILE", "\n", "if", "not", "self", ".", "train_metrics_path", ".", "exists", "(", ")", ":", "\n", "            ", "with", "open", "(", "self", ".", "train_metrics_path", ",", "mode", "=", "\"w\"", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "\"iteration\\tepoch\\tbatch\\t\"", "+", "\"\\t\"", ".", "join", "(", "self", ".", "train_metrics", ".", "names", ")", "+", "\"\\n\"", ")", "\n", "\n", "# Val metrics & scores", "\n", "", "", "val_iter_interval", "=", "cfg", "[", "\"training\"", "]", "[", "\"val_stat_interval\"", "]", "\n", "self", ".", "val_stat_interval", "=", "val_iter_interval", "\n", "self", ".", "val_metrics", "=", "Metrics", "(", "'loss_val'", ")", "\n", "self", ".", "val_metrics_path", "=", "self", ".", "run_dir", "/", "VAL_METRICS_FILE", "\n", "if", "not", "self", ".", "val_metrics_path", ".", "exists", "(", ")", ":", "\n", "            ", "with", "open", "(", "self", ".", "val_metrics_path", ",", "mode", "=", "\"w\"", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "\"iteration\\tepoch\\tbatch\\t\"", "+", "\"\\t\"", ".", "join", "(", "self", ".", "val_metrics", ".", "names", ")", "+", "\"\\n\"", ")", "\n", "\n", "", "", "self", ".", "eval_semantic", "=", "cfg", "[", "\"training\"", "]", ".", "get", "(", "\"eval_semantic\"", ",", "False", ")", "\n", "self", ".", "eval_qualitative", "=", "cfg", "[", "\"training\"", "]", ".", "get", "(", "\"eval_qualitative\"", ",", "False", ")", "\n", "self", ".", "eval_with_bkg", "=", "cfg", "[", "\"training\"", "]", ".", "get", "(", "\"eval_with_bkg\"", ",", "False", ")", "\n", "if", "self", ".", "seg_eval", ":", "\n", "            ", "self", ".", "val_scores", "=", "SegmentationScores", "(", "self", ".", "n_classes", ")", "\n", "", "elif", "self", ".", "instance_eval", ":", "\n", "            ", "self", ".", "val_scores", "=", "InstanceSegScores", "(", "self", ".", "n_objects", "+", "1", ",", "with_bkg", "=", "self", ".", "eval_with_bkg", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "val_scores", "=", "Scores", "(", "self", ".", "n_classes", ",", "self", ".", "n_prototypes", ")", "\n", "", "self", ".", "val_scores_path", "=", "self", ".", "run_dir", "/", "VAL_SCORES_FILE", "\n", "if", "not", "self", ".", "val_scores_path", ".", "exists", "(", ")", ":", "\n", "            ", "with", "open", "(", "self", ".", "val_scores_path", ",", "mode", "=", "\"w\"", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "\"iteration\\tepoch\\tbatch\\t\"", "+", "\"\\t\"", ".", "join", "(", "self", ".", "val_scores", ".", "names", ")", "+", "\"\\n\"", ")", "\n", "\n", "# Prototypes", "\n", "", "", "self", ".", "check_cluster_interval", "=", "cfg", "[", "\"training\"", "]", "[", "\"check_cluster_interval\"", "]", "\n", "self", ".", "prototypes_path", "=", "coerce_to_path_and_create_dir", "(", "self", ".", "run_dir", "/", "'prototypes'", ")", "\n", "[", "coerce_to_path_and_create_dir", "(", "self", ".", "prototypes_path", "/", "f'proto{k}'", ")", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", "]", "\n", "\n", "if", "self", ".", "learn_masks", ":", "\n", "            ", "self", ".", "masked_prototypes_path", "=", "coerce_to_path_and_create_dir", "(", "self", ".", "run_dir", "/", "'masked_prototypes'", ")", "\n", "[", "coerce_to_path_and_create_dir", "(", "self", ".", "masked_prototypes_path", "/", "f'proto{k}'", ")", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", "]", "\n", "self", ".", "masks_path", "=", "coerce_to_path_and_create_dir", "(", "self", ".", "run_dir", "/", "'masks'", ")", "\n", "[", "coerce_to_path_and_create_dir", "(", "self", ".", "masks_path", "/", "f'mask{k}'", ")", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", "]", "\n", "", "if", "self", ".", "learn_backgrounds", ":", "\n", "            ", "self", ".", "backgrounds_path", "=", "coerce_to_path_and_create_dir", "(", "self", ".", "run_dir", "/", "'backgrounds'", ")", "\n", "[", "coerce_to_path_and_create_dir", "(", "self", ".", "backgrounds_path", "/", "f'bkg{k}'", ")", "for", "k", "in", "range", "(", "self", ".", "n_backgrounds", ")", "]", "\n", "\n", "# Transformation predictions", "\n", "", "self", ".", "transformation_path", "=", "coerce_to_path_and_create_dir", "(", "self", ".", "run_dir", "/", "'transformations'", ")", "\n", "self", ".", "images_to_tsf", "=", "next", "(", "iter", "(", "self", ".", "train_loader", ")", ")", "[", "0", "]", "[", ":", "N_TRANSFORMATION_PREDICTIONS", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "for", "k", "in", "range", "(", "self", ".", "images_to_tsf", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "out", "=", "coerce_to_path_and_create_dir", "(", "self", ".", "transformation_path", "/", "f'img{k}'", ")", "\n", "convert_to_img", "(", "self", ".", "images_to_tsf", "[", "k", "]", ")", ".", "save", "(", "out", "/", "'input.png'", ")", "\n", "N", "=", "self", ".", "n_clusters", "if", "self", ".", "n_clusters", "<=", "40", "else", "2", "*", "self", ".", "n_prototypes", "\n", "[", "coerce_to_path_and_create_dir", "(", "out", "/", "f'tsf{k}'", ")", "for", "k", "in", "range", "(", "N", ")", "]", "\n", "if", "self", ".", "learn_masks", ":", "\n", "                ", "[", "coerce_to_path_and_create_dir", "(", "out", "/", "f'frg_tsf{k}'", ")", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", "]", "\n", "[", "coerce_to_path_and_create_dir", "(", "out", "/", "f'mask_tsf{k}'", ")", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", "]", "\n", "", "if", "self", ".", "learn_backgrounds", ":", "\n", "                ", "[", "coerce_to_path_and_create_dir", "(", "out", "/", "f'bkg_tsf{k}'", ")", "for", "k", "in", "range", "(", "self", ".", "n_backgrounds", ")", "]", "\n", "\n", "# Visdom", "\n", "", "", "viz_port", "=", "cfg", "[", "\"training\"", "]", ".", "get", "(", "\"visualizer_port\"", ")", "\n", "if", "viz_port", "is", "not", "None", ":", "\n", "            ", "os", ".", "environ", "[", "\"http_proxy\"", "]", "=", "\"\"", "\n", "self", ".", "visualizer", "=", "visdom", ".", "Visdom", "(", "port", "=", "viz_port", ",", "env", "=", "f'{self.run_dir.parent.name}_{self.run_dir.name}'", ")", "\n", "self", ".", "visualizer", ".", "delete_env", "(", "self", ".", "visualizer", ".", "env", ")", "# Clean env before plotting", "\n", "self", ".", "print_and_log_info", "(", "f\"Visualizer initialised at {viz_port}\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "visualizer", "=", "None", "\n", "self", ".", "print_and_log_info", "(", "\"No visualizer initialized\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info": [[235, 238], ["utils.logger.print_info", "trainer.Trainer.logger.info"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.print_info"], ["", "", "def", "print_and_log_info", "(", "self", ",", "string", ")", ":", "\n", "        ", "print_info", "(", "string", ")", "\n", "self", ".", "logger", ".", "info", "(", "string", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.load_from_tag": [[239, 259], ["trainer.Trainer.print_and_log_info", "utils.coerce_to_path_and_check_exist", "torch.load", "trainer.Trainer.model.load_state_dict", "hasattr", "trainer.Trainer.print_and_log_info", "trainer.Trainer.print_and_log_info", "trainer.Trainer.model.load_state_dict", "trainer.Trainer.optimizer.load_state_dict", "trainer.Trainer.scheduler.load_state_dict", "model.tools.safe_model_state_dict", "trainer.Trainer.model.module.load_state_dict", "trainer.Trainer.scheduler.get_last_lr", "torch.load.get"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_check_exist", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.load_state_dict", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.load_state_dict", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.load_state_dict", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.load_state_dict", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.safe_model_state_dict", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.load_state_dict"], ["", "def", "load_from_tag", "(", "self", ",", "tag", ",", "resume", "=", "False", ")", ":", "\n", "        ", "self", ".", "print_and_log_info", "(", "\"Loading model from run {}\"", ".", "format", "(", "tag", ")", ")", "\n", "path", "=", "coerce_to_path_and_check_exist", "(", "RUNS_PATH", "/", "self", ".", "dataset_name", "/", "tag", "/", "MODEL_FILE", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "path", ",", "map_location", "=", "self", ".", "device", ")", "\n", "self", ".", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"model_state\"", "]", ")", "\n", "try", ":", "\n", "            ", "self", ".", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"model_state\"", "]", ")", "\n", "", "except", "RuntimeError", ":", "\n", "            ", "state", "=", "safe_model_state_dict", "(", "checkpoint", "[", "\"model_state\"", "]", ")", "\n", "self", ".", "model", ".", "module", ".", "load_state_dict", "(", "state", ",", "dataset", "=", "self", ".", "train_loader", ".", "dataset", ")", "\n", "", "self", ".", "start_epoch", ",", "self", ".", "start_batch", "=", "1", ",", "1", "\n", "if", "resume", ":", "\n", "            ", "self", ".", "start_epoch", ",", "self", ".", "start_batch", "=", "checkpoint", "[", "\"epoch\"", "]", ",", "checkpoint", ".", "get", "(", "\"batch\"", ",", "0", ")", "+", "1", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "\"optimizer_state\"", "]", ")", "\n", "self", ".", "scheduler", ".", "load_state_dict", "(", "checkpoint", "[", "\"scheduler_state\"", "]", ")", "\n", "self", ".", "cur_lr", "=", "self", ".", "scheduler", ".", "get_last_lr", "(", ")", "[", "0", "]", "\n", "", "if", "hasattr", "(", "self", ".", "model", ",", "'cur_epoch'", ")", ":", "\n", "            ", "self", ".", "model", ".", "cur_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "", "self", ".", "print_and_log_info", "(", "\"Checkpoint loaded at epoch {}, batch {}\"", ".", "format", "(", "self", ".", "start_epoch", ",", "self", ".", "start_batch", "-", "1", ")", ")", "\n", "self", ".", "print_and_log_info", "(", "\"LR = {}\"", ".", "format", "(", "self", ".", "cur_lr", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.score_name": [[260, 263], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "score_name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "val_scores", ".", "score_name", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_memory_usage": [[264, 270], ["trainer.Trainer.print_and_log_info", "getattr", "usage.items"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info"], ["", "def", "print_memory_usage", "(", "self", ",", "prefix", ")", ":", "\n", "        ", "usage", "=", "{", "}", "\n", "for", "attr", "in", "[", "\"memory_allocated\"", ",", "\"max_memory_allocated\"", ",", "\"memory_cached\"", ",", "\"max_memory_cached\"", "]", ":", "\n", "            ", "usage", "[", "attr", "]", "=", "getattr", "(", "torch", ".", "cuda", ",", "attr", ")", "(", ")", "*", "0.000001", "\n", "", "self", ".", "print_and_log_info", "(", "\"{}:\\t{}\"", ".", "format", "(", "\n", "prefix", ",", "\" / \"", ".", "join", "(", "[", "\"{}: {:.0f}MiB\"", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "usage", ".", "items", "(", ")", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.run": [[271, 320], ["utils.use_seed", "range", "trainer.Trainer.save", "trainer.Trainer.save_metric_plots", "trainer.Trainer.evaluate", "trainer.Trainer.print_and_log_info", "trainer.Trainer.print_and_log_info", "trainer.Trainer.save_metric_plots", "trainer.Trainer.evaluate", "trainer.Trainer.print_and_log_info", "enumerate", "trainer.Trainer.model.step", "trainer.Trainer.single_train_batch_run", "trainer.Trainer.update_scheduler", "trainer.Trainer.update_scheduler", "trainer.Trainer.log_train_metrics", "trainer.Trainer.check_cluster", "trainer.Trainer.save", "trainer.Trainer.log_images", "trainer.Trainer.run_val", "trainer.Trainer.log_val_metrics"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_metric_plots", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.evaluate", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_metric_plots", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.evaluate", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.step", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.single_train_batch_run", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_scheduler", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_scheduler", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.log_train_metrics", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.check_cluster", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.log_images", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.run_val", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.log_val_metrics"], ["", "@", "use_seed", "(", ")", "\n", "def", "run", "(", "self", ")", ":", "\n", "        ", "cur_iter", "=", "(", "self", ".", "start_epoch", "-", "1", ")", "*", "self", ".", "n_batches", "+", "self", ".", "start_batch", "-", "1", "\n", "prev_train_stat_iter", ",", "prev_val_stat_iter", "=", "cur_iter", ",", "cur_iter", "\n", "prev_check_cluster_iter", "=", "cur_iter", "\n", "if", "self", ".", "start_epoch", "==", "self", ".", "n_epoches", ":", "\n", "            ", "self", ".", "print_and_log_info", "(", "\"No training, only evaluating\"", ")", "\n", "self", ".", "save_metric_plots", "(", ")", "\n", "self", ".", "evaluate", "(", ")", "\n", "self", ".", "print_and_log_info", "(", "\"Training run is over\"", ")", "\n", "return", "None", "\n", "\n", "", "for", "epoch", "in", "range", "(", "self", ".", "start_epoch", ",", "self", ".", "n_epoches", "+", "1", ")", ":", "\n", "            ", "batch_start", "=", "self", ".", "start_batch", "if", "epoch", "==", "self", ".", "start_epoch", "else", "1", "\n", "for", "batch", ",", "(", "images", ",", "labels", ")", "in", "enumerate", "(", "self", ".", "train_loader", ",", "start", "=", "1", ")", ":", "\n", "                ", "if", "batch", "<", "batch_start", ":", "\n", "                    ", "continue", "\n", "", "cur_iter", "+=", "1", "\n", "if", "cur_iter", ">", "self", ".", "n_iterations", ":", "\n", "                    ", "break", "\n", "\n", "", "self", ".", "single_train_batch_run", "(", "images", ")", "\n", "if", "self", ".", "scheduler_update_range", "==", "\"batch\"", ":", "\n", "                    ", "self", ".", "update_scheduler", "(", "epoch", ",", "batch", "=", "batch", ")", "\n", "\n", "", "if", "(", "cur_iter", "-", "prev_train_stat_iter", ")", ">=", "self", ".", "train_stat_interval", ":", "\n", "                    ", "prev_train_stat_iter", "=", "cur_iter", "\n", "self", ".", "log_train_metrics", "(", "cur_iter", ",", "epoch", ",", "batch", ")", "\n", "\n", "", "if", "(", "cur_iter", "-", "prev_check_cluster_iter", ")", ">=", "self", ".", "check_cluster_interval", ":", "\n", "                    ", "prev_check_cluster_iter", "=", "cur_iter", "\n", "self", ".", "check_cluster", "(", "cur_iter", ",", "epoch", ",", "batch", ")", "\n", "\n", "", "if", "(", "cur_iter", "-", "prev_val_stat_iter", ")", ">=", "self", ".", "val_stat_interval", ":", "\n", "                    ", "prev_val_stat_iter", "=", "cur_iter", "\n", "if", "not", "self", ".", "is_val_empty", ":", "\n", "                        ", "self", ".", "run_val", "(", ")", "\n", "self", ".", "log_val_metrics", "(", "cur_iter", ",", "epoch", ",", "batch", ")", "\n", "", "self", ".", "save", "(", "epoch", "=", "epoch", ",", "batch", "=", "batch", ")", "\n", "self", ".", "log_images", "(", "cur_iter", ")", "\n", "\n", "", "", "self", ".", "model", ".", "step", "(", ")", "\n", "if", "self", ".", "scheduler_update_range", "==", "\"epoch\"", "and", "batch_start", "==", "1", ":", "\n", "                ", "self", ".", "update_scheduler", "(", "epoch", "+", "1", ",", "batch", "=", "1", ")", "\n", "\n", "", "", "self", ".", "save", "(", "epoch", "=", "epoch", ",", "batch", "=", "batch", ")", "\n", "self", ".", "save_metric_plots", "(", ")", "\n", "self", ".", "evaluate", "(", ")", "\n", "self", ".", "print_and_log_info", "(", "\"Training run is over\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_scheduler": [[321, 327], ["trainer.Trainer.scheduler.step", "trainer.Trainer.scheduler.get_last_lr", "trainer.Trainer.print_and_log_info", "PRINT_LR_UPD_FMT"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.step", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info"], ["", "def", "update_scheduler", "(", "self", ",", "epoch", ",", "batch", ")", ":", "\n", "        ", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "lr", "=", "self", ".", "scheduler", ".", "get_last_lr", "(", ")", "[", "0", "]", "\n", "if", "lr", "!=", "self", ".", "cur_lr", ":", "\n", "            ", "self", ".", "cur_lr", "=", "lr", "\n", "self", ".", "print_and_log_info", "(", "PRINT_LR_UPD_FMT", "(", "epoch", ",", "self", ".", "n_epoches", ",", "batch", ",", "self", ".", "n_batches", ",", "lr", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.single_train_batch_run": [[328, 352], ["time.time", "images.to.to.size", "trainer.Trainer.model.train", "images.to.to.to", "trainer.Trainer.optimizer.zero_grad", "trainer.Trainer.model", "loss.backward", "trainer.Trainer.optimizer.step", "trainer.Trainer.train_metrics.update", "trainer.Trainer.train_metrics.update", "torch.no_grad", "torch.zeros().scatter", "loss.item", "p.item", "distances.min", "torch.zeros().scatter.sum", "enumerate", "torch.zeros", "time.time", "distances.size"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.zero_grad", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.DifferentiableClampFunc.backward", "home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.step", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update"], ["", "", "def", "single_train_batch_run", "(", "self", ",", "images", ")", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "B", "=", "images", ".", "size", "(", "0", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "images", "=", "images", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ",", "distances", "=", "self", ".", "model", "(", "images", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "self", ".", "pred_class", ":", "\n", "                ", "proportions", "=", "(", "1", "-", "distances", ")", ".", "mean", "(", "0", ")", "\n", "", "else", ":", "\n", "                ", "argmin_idx", "=", "distances", ".", "min", "(", "1", ")", "[", "1", "]", "\n", "one_hot", "=", "torch", ".", "zeros", "(", "B", ",", "distances", ".", "size", "(", "1", ")", ",", "device", "=", "self", ".", "device", ")", ".", "scatter", "(", "1", ",", "argmin_idx", "[", ":", ",", "None", "]", ",", "1", ")", "\n", "proportions", "=", "one_hot", ".", "sum", "(", "0", ")", "/", "B", "\n", "\n", "", "", "self", ".", "train_metrics", ".", "update", "(", "{", "\n", "'time/img'", ":", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "/", "B", ",", "\n", "'loss'", ":", "loss", ".", "item", "(", ")", ",", "\n", "}", ")", "\n", "self", ".", "train_metrics", ".", "update", "(", "{", "f'prop_clus{i}'", ":", "p", ".", "item", "(", ")", "for", "i", ",", "p", "in", "enumerate", "(", "proportions", ")", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.log_images": [[353, 388], ["torch.no_grad", "trainer.Trainer.model.eval", "trainer.Trainer.save_prototypes", "trainer.Trainer.update_visualizer_images", "trainer.Trainer.save_transformed_images", "trainer.Trainer.update_visualizer_images", "trainer.Trainer.save_masked_prototypes", "trainer.Trainer.update_visualizer_images", "trainer.Trainer.save_masks", "trainer.Trainer.update_visualizer_images", "trainer.Trainer.save_backgrounds", "trainer.Trainer.update_visualizer_images", "tsf_imgs.reshape", "len", "zip", "tsf_imgs.size", "trainer.Trainer.update_visualizer_images", "trainer.Trainer.update_visualizer_images", "imgs.view", "imgs.view", "trainer.Trainer.update_visualizer_images", "imgs.size", "imgs.size", "imgs.view", "imgs.size"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_prototypes", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_visualizer_images", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_transformed_images", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_visualizer_images", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_masked_prototypes", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_visualizer_images", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_masks", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_visualizer_images", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_backgrounds", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_visualizer_images", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_visualizer_images", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_visualizer_images", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_visualizer_images"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "log_images", "(", "self", ",", "cur_iter", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "self", ".", "save_prototypes", "(", "cur_iter", ")", "\n", "self", ".", "update_visualizer_images", "(", "self", ".", "model", ".", "prototypes", ",", "'prototypes'", ",", "nrow", "=", "5", ")", "\n", "if", "self", ".", "learn_masks", ":", "\n", "            ", "self", ".", "save_masked_prototypes", "(", "cur_iter", ")", "\n", "self", ".", "update_visualizer_images", "(", "self", ".", "model", ".", "prototypes", "*", "self", ".", "model", ".", "masks", ",", "'masked_prototypes'", ",", "nrow", "=", "5", ")", "\n", "self", ".", "save_masks", "(", "cur_iter", ")", "\n", "self", ".", "update_visualizer_images", "(", "self", ".", "model", ".", "masks", ",", "'masks'", ",", "nrow", "=", "5", ")", "\n", "", "if", "self", ".", "learn_backgrounds", ":", "\n", "            ", "self", ".", "save_backgrounds", "(", "cur_iter", ")", "\n", "self", ".", "update_visualizer_images", "(", "self", ".", "model", ".", "backgrounds", ",", "'backgrounds'", ",", "nrow", "=", "5", ")", "\n", "\n", "# Transformations", "\n", "", "tsf_imgs", ",", "compositions", "=", "self", ".", "save_transformed_images", "(", "cur_iter", ")", "\n", "C", ",", "H", ",", "W", "=", "tsf_imgs", ".", "shape", "[", "2", ":", "]", "\n", "self", ".", "update_visualizer_images", "(", "tsf_imgs", ".", "reshape", "(", "-", "1", ",", "C", ",", "H", ",", "W", ")", ",", "'transformations'", ",", "nrow", "=", "tsf_imgs", ".", "size", "(", "1", ")", ")", "\n", "\n", "# Compositions", "\n", "if", "len", "(", "compositions", ")", ">", "0", ":", "\n", "            ", "k", "=", "0", "\n", "for", "imgs", ",", "name", "in", "zip", "(", "compositions", "[", ":", "2", "]", ",", "[", "'frg_tsf'", ",", "'mask_tsf'", "]", ")", ":", "\n", "                ", "self", ".", "update_visualizer_images", "(", "imgs", ".", "view", "(", "-", "1", ",", "imgs", ".", "size", "(", "2", ")", ",", "H", ",", "W", ")", ",", "name", ",", "nrow", "=", "self", ".", "n_prototypes", "+", "1", ")", "\n", "k", "+=", "1", "\n", "", "if", "self", ".", "learn_backgrounds", ":", "\n", "                ", "imgs", "=", "compositions", "[", "k", "]", "\n", "self", ".", "update_visualizer_images", "(", "imgs", ".", "view", "(", "-", "1", ",", "imgs", ".", "size", "(", "2", ")", ",", "H", ",", "W", ")", ",", "'bkg_tsf'", ",", "\n", "nrow", "=", "self", ".", "n_backgrounds", "+", "1", ")", "\n", "k", "+=", "1", "\n", "", "if", "self", ".", "n_objects", ">", "1", ":", "\n", "                ", "for", "name", "in", "[", "'frg_tsf_aux'", ",", "'mask_tsf_aux'", "]", ":", "\n", "                    ", "imgs", "=", "compositions", "[", "k", "]", "\n", "self", ".", "update_visualizer_images", "(", "imgs", ".", "view", "(", "-", "1", ",", "imgs", ".", "size", "(", "2", ")", ",", "H", ",", "W", ")", ",", "name", ",", "nrow", "=", "self", ".", "n_prototypes", "+", "1", ")", "\n", "k", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_prototypes": [[389, 398], ["torch.no_grad", "range", "utils.image.convert_to_img", "utils.image.convert_to_img.save", "utils.image.convert_to_img.save"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save"], ["", "", "", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "save_prototypes", "(", "self", ",", "cur_iter", "=", "None", ")", ":", "\n", "        ", "prototypes", "=", "self", ".", "model", ".", "prototypes", "\n", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", ":", "\n", "            ", "img", "=", "convert_to_img", "(", "prototypes", "[", "k", "]", ")", "\n", "if", "cur_iter", "is", "not", "None", ":", "\n", "                ", "img", ".", "save", "(", "self", ".", "prototypes_path", "/", "f'proto{k}'", "/", "f'{cur_iter}.jpg'", ")", "\n", "", "else", ":", "\n", "                ", "img", ".", "save", "(", "self", ".", "prototypes_path", "/", "f'prototype{k}.png'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_masked_prototypes": [[399, 409], ["torch.no_grad", "range", "utils.image.convert_to_img", "utils.image.convert_to_img.save", "utils.image.convert_to_img.save"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save"], ["", "", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "save_masked_prototypes", "(", "self", ",", "cur_iter", "=", "None", ")", ":", "\n", "        ", "prototypes", "=", "self", ".", "model", ".", "prototypes", "\n", "masks", "=", "self", ".", "model", ".", "masks", "\n", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", ":", "\n", "            ", "img", "=", "convert_to_img", "(", "prototypes", "[", "k", "]", "*", "masks", "[", "k", "]", ")", "\n", "if", "cur_iter", "is", "not", "None", ":", "\n", "                ", "img", ".", "save", "(", "self", ".", "masked_prototypes_path", "/", "f'proto{k}'", "/", "f'{cur_iter}.jpg'", ")", "\n", "", "else", ":", "\n", "                ", "img", ".", "save", "(", "self", ".", "masked_prototypes_path", "/", "f'prototype{k}.png'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_masks": [[410, 419], ["torch.no_grad", "range", "utils.image.convert_to_img", "utils.image.convert_to_img.save", "utils.image.convert_to_img.save"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save"], ["", "", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "save_masks", "(", "self", ",", "cur_iter", "=", "None", ")", ":", "\n", "        ", "masks", "=", "self", ".", "model", ".", "masks", "\n", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", ":", "\n", "            ", "img", "=", "convert_to_img", "(", "masks", "[", "k", "]", ")", "\n", "if", "cur_iter", "is", "not", "None", ":", "\n", "                ", "img", ".", "save", "(", "self", ".", "masks_path", "/", "f'mask{k}'", "/", "f'{cur_iter}.jpg'", ")", "\n", "", "else", ":", "\n", "                ", "img", ".", "save", "(", "self", ".", "masks_path", "/", "f'mask{k}.png'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_backgrounds": [[420, 429], ["torch.no_grad", "range", "utils.image.convert_to_img", "utils.image.convert_to_img.save", "utils.image.convert_to_img.save"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save"], ["", "", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "save_backgrounds", "(", "self", ",", "cur_iter", "=", "None", ")", ":", "\n", "        ", "backgrounds", "=", "self", ".", "model", ".", "backgrounds", "\n", "for", "k", "in", "range", "(", "self", ".", "n_backgrounds", ")", ":", "\n", "            ", "img", "=", "convert_to_img", "(", "backgrounds", "[", "k", "]", ")", "\n", "if", "cur_iter", "is", "not", "None", ":", "\n", "                ", "img", ".", "save", "(", "self", ".", "backgrounds_path", "/", "f'bkg{k}'", "/", "f'{cur_iter}.jpg'", ")", "\n", "", "else", ":", "\n", "                ", "img", ".", "save", "(", "self", ".", "backgrounds_path", "/", "f'background{k}.png'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_transformed_images": [[430, 468], ["torch.no_grad", "trainer.Trainer.model.eval", "torch.cat", "range", "trainer.Trainer.model.transform", "torch.cat.size", "enumerate", "compositions[].expand", "torch.cat", "trainer.Trainer.model.transform", "trainer.Trainer.images_to_tsf.unsqueeze", "len", "trainer.Trainer.images_to_tsf.size", "range", "utils.image.convert_to_img().save", "utils.image.convert_to_img().save", "trainer.Trainer.images_to_tsf.unsqueeze", "torch.cat.size", "enumerate", "utils.image.convert_to_img", "utils.image.convert_to_img", "utils.image.convert_to_img().save", "utils.image.convert_to_img().save", "utils.image.convert_to_img", "utils.image.convert_to_img"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img"], ["", "", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "save_transformed_images", "(", "self", ",", "cur_iter", "=", "None", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "if", "self", ".", "learn_masks", ":", "\n", "            ", "output", ",", "compositions", "=", "self", ".", "model", ".", "transform", "(", "self", ".", "images_to_tsf", ",", "with_composition", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "output", ",", "compositions", "=", "self", ".", "model", ".", "transform", "(", "self", ".", "images_to_tsf", ")", ",", "[", "]", "\n", "\n", "", "transformed_imgs", "=", "torch", ".", "cat", "(", "[", "self", ".", "images_to_tsf", ".", "unsqueeze", "(", "1", ")", ",", "output", "]", ",", "1", ")", "\n", "N", "=", "self", ".", "n_clusters", "if", "self", ".", "n_clusters", "<=", "40", "else", "2", "*", "self", ".", "n_prototypes", "\n", "transformed_imgs", "=", "transformed_imgs", "[", ":", ",", ":", "N", "+", "1", "]", "\n", "for", "k", "in", "range", "(", "transformed_imgs", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "for", "j", ",", "img", "in", "enumerate", "(", "transformed_imgs", "[", "k", "]", "[", "1", ":", "]", ")", ":", "\n", "                ", "if", "cur_iter", "is", "not", "None", ":", "\n", "                    ", "convert_to_img", "(", "img", ")", ".", "save", "(", "self", ".", "transformation_path", "/", "f'img{k}'", "/", "f'tsf{j}'", "/", "f'{cur_iter}.jpg'", ")", "\n", "", "else", ":", "\n", "                    ", "convert_to_img", "(", "img", ")", ".", "save", "(", "self", ".", "transformation_path", "/", "f'img{k}'", "/", "f'tsf{j}.png'", ")", "\n", "\n", "", "", "", "i", "=", "0", "\n", "for", "name", "in", "[", "'frg'", ",", "'mask'", ",", "'bkg'", ",", "'frg_aux'", ",", "'mask_aux'", "]", ":", "\n", "            ", "if", "name", "==", "'bkg'", "and", "not", "self", ".", "learn_backgrounds", ":", "\n", "                ", "continue", "\n", "", "if", "i", "==", "len", "(", "compositions", ")", ":", "\n", "                ", "break", "\n", "\n", "", "layer", "=", "compositions", "[", "i", "]", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "self", ".", "images_to_tsf", ".", "size", "(", "1", ")", ",", "-", "1", ",", "-", "1", ")", "\n", "compositions", "[", "i", "]", "=", "torch", ".", "cat", "(", "[", "self", ".", "images_to_tsf", ".", "unsqueeze", "(", "1", ")", ",", "layer", "]", ",", "1", ")", "\n", "if", "name", "in", "[", "'frg'", ",", "'mask'", ",", "'bkg'", "]", ":", "\n", "                ", "for", "k", "in", "range", "(", "transformed_imgs", ".", "size", "(", "0", ")", ")", ":", "\n", "                    ", "tmp_path", "=", "self", ".", "transformation_path", "/", "f'img{k}'", "\n", "for", "j", ",", "img", "in", "enumerate", "(", "compositions", "[", "i", "]", "[", "k", "]", "[", "1", ":", "]", ")", ":", "\n", "                        ", "if", "cur_iter", "is", "not", "None", ":", "\n", "                            ", "convert_to_img", "(", "img", ")", ".", "save", "(", "tmp_path", "/", "f'{name}_tsf{j}'", "/", "f'{cur_iter}.jpg'", ")", "\n", "", "else", ":", "\n", "                            ", "convert_to_img", "(", "img", ")", ".", "save", "(", "tmp_path", "/", "f'{name}_tsf{j}.png'", ")", "\n", "", "", "", "", "i", "+=", "1", "\n", "\n", "", "return", "transformed_imgs", ",", "compositions", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_visualizer_images": [[469, 478], ["torch.no_grad", "trainer.Trainer.visualizer.images", "max", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate.clamp", "dict"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "update_visualizer_images", "(", "self", ",", "images", ",", "title", ",", "nrow", ")", ":", "\n", "        ", "if", "self", ".", "visualizer", "is", "None", ":", "\n", "            ", "return", "None", "\n", "\n", "", "if", "max", "(", "images", ".", "shape", "[", "1", ":", "]", ")", ">", "VIZ_MAX_IMG_SIZE", ":", "\n", "            ", "images", "=", "F", ".", "interpolate", "(", "images", ",", "size", "=", "VIZ_MAX_IMG_SIZE", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "", "self", ".", "visualizer", ".", "images", "(", "images", ".", "clamp", "(", "0", ",", "1", ")", ",", "win", "=", "title", ",", "nrow", "=", "nrow", ",", "\n", "opts", "=", "dict", "(", "title", "=", "title", ",", "store_history", "=", "True", ",", "width", "=", "VIZ_WIDTH", ",", "height", "=", "VIZ_HEIGHT", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.check_cluster": [[479, 513], ["torch.Tensor", "trainer.Trainer.train_metrics.reset", "hasattr", "trainer.Trainer.visualizer.line", "proportions.view.view.view", "zip", "proportions.view.view.sum", "trainer.Trainer.model.reassign_empty_clusters", "PRINT_CHECK_CLUSTERS_FMT", "trainer.Trainer.print_and_log_info", "trainer.Trainer.print_and_log_info", "numpy.random.randint", "trainer.Trainer.model.reassign_empty_clusters", "PRINT_CHECK_CLUSTERS_FMT", "trainer.Trainer.print_and_log_info", "trainer.Trainer.print_and_log_info", "trainer.Trainer.model.reassign_empty_clusters", "PRINT_CHECK_CLUSTERS_FMT", "trainer.Trainer.print_and_log_info", "dict", "range", "proportions.view.view.view().transpose().flatten().sum", "len", "proportions.view.view.view", "range", "proportions.view.view.view().transpose().flatten", "range", "range", "len", "proportions.view.view.view().transpose", "len", "proportions.view.view.view"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.reset", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.reassign_empty_clusters", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.reassign_empty_clusters", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.reassign_empty_clusters", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info"], ["", "def", "check_cluster", "(", "self", ",", "cur_iter", ",", "epoch", ",", "batch", ")", ":", "\n", "        ", "if", "hasattr", "(", "self", ".", "model", ",", "'_diff_selections'", ")", "and", "self", ".", "visualizer", "is", "not", "None", ":", "\n", "            ", "diff", "=", "self", ".", "model", ".", "_diff_selections", "\n", "x", ",", "y", "=", "[", "[", "cur_iter", "]", "*", "len", "(", "diff", "[", "0", "]", ")", "]", ",", "[", "diff", "[", "1", "]", "]", "\n", "self", ".", "visualizer", ".", "line", "(", "y", ",", "x", ",", "win", "=", "'diff selection'", ",", "update", "=", "'append'", ",", "opts", "=", "dict", "(", "title", "=", "'diff selection'", ",", "\n", "legend", "=", "diff", "[", "0", "]", ",", "width", "=", "VIZ_WIDTH", ",", "height", "=", "VIZ_HEIGHT", ")", ")", "\n", "\n", "", "proportions", "=", "torch", ".", "Tensor", "(", "[", "self", ".", "train_metrics", "[", "f'prop_clus{i}'", "]", ".", "avg", "for", "i", "in", "range", "(", "self", ".", "n_clusters", ")", "]", ")", "\n", "if", "self", ".", "n_backgrounds", ">", "1", ":", "\n", "            ", "proportions", "=", "proportions", ".", "view", "(", "self", ".", "n_prototypes", ",", "self", ".", "n_backgrounds", ")", "\n", "for", "axis", ",", "is_bkg", "in", "zip", "(", "[", "1", ",", "0", "]", ",", "[", "False", ",", "True", "]", ")", ":", "\n", "                ", "prop", "=", "proportions", ".", "sum", "(", "axis", ")", "\n", "reassigned", ",", "idx", "=", "self", ".", "model", ".", "reassign_empty_clusters", "(", "prop", ",", "is_background", "=", "is_bkg", ")", "\n", "msg", "=", "PRINT_CHECK_CLUSTERS_FMT", "(", "epoch", ",", "self", ".", "n_epoches", ",", "batch", ",", "self", ".", "n_batches", ",", "reassigned", ",", "idx", ")", "\n", "if", "is_bkg", ":", "\n", "                    ", "msg", "+=", "' for backgrounds'", "\n", "", "self", ".", "print_and_log_info", "(", "msg", ")", "\n", "self", ".", "print_and_log_info", "(", "', '", ".", "join", "(", "[", "'prop_{}={:.4f}'", ".", "format", "(", "k", ",", "prop", "[", "k", "]", ")", "for", "k", "in", "range", "(", "len", "(", "prop", ")", ")", "]", ")", ")", "\n", "", "", "elif", "self", ".", "n_objects", ">", "1", ":", "\n", "            ", "k", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "n_objects", ")", "\n", "if", "self", ".", "n_clusters", "==", "self", ".", "n_prototypes", "**", "self", ".", "n_objects", ":", "\n", "                ", "prop", "=", "proportions", ".", "view", "(", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ")", ".", "transpose", "(", "0", ",", "k", ")", ".", "flatten", "(", "1", ")", ".", "sum", "(", "1", ")", "\n", "", "else", ":", "\n", "                ", "prop", "=", "proportions", ".", "view", "(", "self", ".", "n_objects", ",", "self", ".", "n_prototypes", ")", "[", "k", "]", "\n", "", "reassigned", ",", "idx", "=", "self", ".", "model", ".", "reassign_empty_clusters", "(", "prop", ")", "\n", "msg", "=", "PRINT_CHECK_CLUSTERS_FMT", "(", "epoch", ",", "self", ".", "n_epoches", ",", "batch", ",", "self", ".", "n_batches", ",", "reassigned", ",", "idx", ")", "\n", "msg", "+=", "f' for object layer {k}'", "\n", "self", ".", "print_and_log_info", "(", "msg", ")", "\n", "self", ".", "print_and_log_info", "(", "', '", ".", "join", "(", "[", "'prop_{}={:.4f}'", ".", "format", "(", "k", ",", "prop", "[", "k", "]", ")", "for", "k", "in", "range", "(", "len", "(", "prop", ")", ")", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "reassigned", ",", "idx", "=", "self", ".", "model", ".", "reassign_empty_clusters", "(", "proportions", ")", "\n", "msg", "=", "PRINT_CHECK_CLUSTERS_FMT", "(", "epoch", ",", "self", ".", "n_epoches", ",", "batch", ",", "self", ".", "n_batches", ",", "reassigned", ",", "idx", ")", "\n", "self", ".", "print_and_log_info", "(", "msg", ")", "\n", "", "self", ".", "train_metrics", ".", "reset", "(", "*", "[", "f'prop_clus{i}'", "for", "i", "in", "range", "(", "self", ".", "n_clusters", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.log_train_metrics": [[514, 524], ["PRINT_TRAIN_STAT_FMT", "trainer.Trainer.print_and_log_info", "trainer.Trainer.update_visualizer_metrics", "trainer.Trainer.train_metrics.reset", "open", "f.write", "map"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_visualizer_metrics", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.reset"], ["", "def", "log_train_metrics", "(", "self", ",", "cur_iter", ",", "epoch", ",", "batch", ")", ":", "\n", "# Print & write metrics to file", "\n", "        ", "stat", "=", "PRINT_TRAIN_STAT_FMT", "(", "epoch", ",", "self", ".", "n_epoches", ",", "batch", ",", "self", ".", "n_batches", ",", "self", ".", "train_metrics", ")", "\n", "self", ".", "print_and_log_info", "(", "stat", "[", ":", "1000", "]", ")", "\n", "with", "open", "(", "self", ".", "train_metrics_path", ",", "mode", "=", "\"a\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "\"{}\\t{}\\t{}\\t\"", ".", "format", "(", "cur_iter", ",", "epoch", ",", "batch", ")", "+", "\n", "\"\\t\"", ".", "join", "(", "map", "(", "\"{:.6f}\"", ".", "format", ",", "self", ".", "train_metrics", ".", "avg_values", ")", ")", "+", "\"\\n\"", ")", "\n", "\n", "", "self", ".", "update_visualizer_metrics", "(", "cur_iter", ",", "train", "=", "True", ")", "\n", "self", ".", "train_metrics", ".", "reset", "(", "'time/img'", ",", "'loss'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_visualizer_metrics": [[525, 556], ["list", "trainer.Trainer.visualizer.line", "filter", "list", "trainer.Trainer.visualizer.line", "dict", "trainer.Trainer.visualizer.bar", "filter", "trainer.Trainer.visualizer.line", "s.startswith", "len", "dict", "range", "dict", "len", "dict", "range", "range"], "methods", ["None"], ["", "def", "update_visualizer_metrics", "(", "self", ",", "cur_iter", ",", "train", ")", ":", "\n", "        ", "if", "self", ".", "visualizer", "is", "None", ":", "\n", "            ", "return", "None", "\n", "\n", "", "split", ",", "metrics", "=", "(", "'train'", ",", "self", ".", "train_metrics", ")", "if", "train", "else", "(", "'val'", ",", "self", ".", "val_metrics", ")", "\n", "losses", "=", "list", "(", "filter", "(", "lambda", "s", ":", "s", ".", "startswith", "(", "'loss'", ")", ",", "metrics", ".", "names", ")", ")", "\n", "y", ",", "x", "=", "[", "[", "metrics", "[", "n", "]", ".", "avg", "for", "n", "in", "losses", "]", "]", ",", "[", "[", "cur_iter", "]", "*", "len", "(", "losses", ")", "]", "\n", "self", ".", "visualizer", ".", "line", "(", "y", ",", "x", ",", "win", "=", "f'{split}_losses'", ",", "update", "=", "'append'", ",", "\n", "opts", "=", "dict", "(", "title", "=", "f'{split}_losses'", ",", "legend", "=", "losses", ",", "width", "=", "VIZ_WIDTH", ",", "height", "=", "VIZ_HEIGHT", ")", ")", "\n", "\n", "if", "train", ":", "\n", "            ", "if", "self", ".", "n_prototypes", ">", "1", ":", "\n", "# Cluster proportions", "\n", "                ", "N", "=", "self", ".", "n_clusters", "if", "self", ".", "n_clusters", "<=", "40", "else", "2", "*", "self", ".", "n_prototypes", "\n", "proportions", "=", "[", "metrics", "[", "f'prop_clus{i}'", "]", ".", "avg", "for", "i", "in", "range", "(", "N", ")", "]", "\n", "self", ".", "visualizer", ".", "bar", "(", "proportions", ",", "win", "=", "'train_cluster_prop'", ",", "\n", "opts", "=", "dict", "(", "title", "=", "'train_cluster_proportions'", ",", "width", "=", "VIZ_HEIGHT", ",", "height", "=", "VIZ_HEIGHT", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "names", "=", "list", "(", "filter", "(", "lambda", "name", ":", "'cls'", "not", "in", "name", ",", "self", ".", "val_scores", ".", "names", ")", ")", "\n", "y", ",", "x", "=", "[", "[", "self", ".", "val_scores", "[", "n", "]", "for", "n", "in", "names", "]", "]", ",", "[", "[", "cur_iter", "]", "*", "len", "(", "names", ")", "]", "\n", "self", ".", "visualizer", ".", "line", "(", "y", ",", "x", ",", "win", "=", "'global_scores'", ",", "update", "=", "'append'", ",", "\n", "opts", "=", "dict", "(", "title", "=", "'global_scores'", ",", "legend", "=", "names", ",", "width", "=", "VIZ_WIDTH", ",", "height", "=", "VIZ_HEIGHT", ")", ")", "\n", "\n", "if", "not", "self", ".", "instance_eval", ":", "\n", "                ", "name", "=", "'acc'", "if", "not", "self", ".", "seg_eval", "else", "'iou'", "\n", "N", "=", "self", ".", "n_classes", "\n", "y", "=", "[", "[", "self", ".", "val_scores", "[", "f'{name}_cls{i}'", "]", "for", "i", "in", "range", "(", "N", ")", "]", "]", "\n", "x", "=", "[", "[", "cur_iter", "]", "*", "N", "]", "\n", "self", ".", "visualizer", ".", "line", "(", "y", ",", "x", ",", "win", "=", "f'{name}_by_cls'", ",", "update", "=", "'append'", ",", "opts", "=", "dict", "(", "title", "=", "f'{name}_by_cls'", ",", "\n", "legend", "=", "[", "f'cls{i}'", "for", "i", "in", "range", "(", "N", ")", "]", ",", "width", "=", "VIZ_WIDTH", ",", "\n", "heigh", "=", "VIZ_HEIGHT", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.run_val": [[557, 619], ["torch.no_grad", "trainer.Trainer.model.eval", "images.to.to.to", "trainer.Trainer.model", "trainer.Trainer.val_metrics.update", "distances.view.view.min", "distances.view.view.view().min", "distances.view.view.view", "range", "loss_val.item", "trainer.Trainer.val_scores.update", "trainer.Trainer.model.transform().cpu", "trainer.Trainer.val_scores.update", "trainer.Trainer.val_scores.update", "distances.view.view.min", "other_idxs.insert", "labels.long().numpy", "target.view.view.view", "labels.long().numpy", "target.view.view.long().cpu().numpy", "trainer.Trainer.val_scores.update", "trainer.Trainer.model.transform().cpu", "trainer.Trainer.val_scores.update", "labels.long().numpy", "argmin_idx.cpu().numpy", "distances.view.view.view", "trainer.Trainer.model.transform", "trainer.Trainer.model.transform", "real_idxs.insert", "labels.long().numpy", "target.view.view.view", "labels.long().numpy", "target.view.view.long().numpy", "torch.arange", "labels.long", "labels.long", "target.view.view.long().cpu", "trainer.Trainer.model.transform", "trainer.Trainer.model.transform", "images.to.to.size", "images.to.to.size", "real_idxs.insert", "labels.long", "argmin_idx.cpu", "labels.long", "trainer.Trainer.model.predict", "[].argmin().long", "labels.long", "target.view.view.long", "torch.arange", "target.view.view.long", "torch.arange", "torch.arange", "[].argmin", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.predict"], ["", "", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "run_val", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "for", "images", ",", "labels", "in", "self", ".", "val_loader", ":", "\n", "            ", "B", ",", "C", ",", "H", ",", "W", "=", "images", ".", "shape", "\n", "images", "=", "images", ".", "to", "(", "self", ".", "device", ")", "\n", "loss_val", ",", "distances", "=", "self", ".", "model", "(", "images", ")", "\n", "\n", "if", "not", "self", ".", "pred_class", ":", "\n", "                ", "if", "self", ".", "n_backgrounds", ">", "1", ":", "\n", "                    ", "distances", ",", "bkg_idx", "=", "distances", ".", "view", "(", "B", ",", "self", ".", "n_prototypes", ",", "self", ".", "n_backgrounds", ")", ".", "min", "(", "2", ")", "\n", "", "if", "self", ".", "n_objects", ">", "1", ":", "\n", "                    ", "distances", "=", "distances", ".", "view", "(", "B", ",", "*", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ")", "\n", "other_idxs", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "self", ".", "n_objects", ",", "1", ",", "-", "1", ")", ":", "\n", "                        ", "distances", ",", "idx", "=", "distances", ".", "min", "(", "k", ")", "\n", "other_idxs", ".", "insert", "(", "0", ",", "idx", ")", "\n", "", "", "dist_min_by_sample", ",", "argmin_idx", "=", "distances", ".", "min", "(", "1", ")", "\n", "\n", "", "self", ".", "val_metrics", ".", "update", "(", "{", "'loss_val'", ":", "loss_val", ".", "item", "(", ")", "}", ")", "\n", "if", "self", ".", "seg_eval", ":", "\n", "                ", "if", "self", ".", "n_objects", "==", "1", ":", "\n", "                    ", "masks", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "with_composition", "=", "True", ")", "[", "1", "]", "[", "1", "]", "\n", "masks", "=", "masks", "[", "torch", ".", "arange", "(", "B", ")", ",", "argmin_idx", "]", "\n", "self", ".", "val_scores", ".", "update", "(", "labels", ".", "long", "(", ")", ".", "numpy", "(", ")", ",", "(", "masks", ">", "0.5", ")", ".", "long", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "else", ":", "\n", "                    ", "target", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "pred_semantic_labels", "=", "True", ")", ".", "cpu", "(", ")", "\n", "if", "not", "self", ".", "pred_class", ":", "\n", "                        ", "target", "=", "target", ".", "view", "(", "B", ",", "*", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ",", "H", ",", "W", ")", "\n", "real_idxs", "=", "[", "]", "\n", "for", "idx", "in", "[", "argmin_idx", "]", "+", "other_idxs", ":", "\n", "                            ", "for", "i", "in", "real_idxs", ":", "\n", "                                ", "idx", "=", "idx", "[", "torch", ".", "arange", "(", "B", ")", ",", "i", "]", "\n", "", "real_idxs", ".", "insert", "(", "0", ",", "idx", ")", "\n", "target", "=", "target", "[", "torch", ".", "arange", "(", "B", ")", ",", "idx", "]", "\n", "", "", "self", ".", "val_scores", ".", "update", "(", "labels", ".", "long", "(", ")", ".", "numpy", "(", ")", ",", "target", ".", "long", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "", "elif", "self", ".", "instance_eval", ":", "\n", "                ", "if", "self", ".", "n_objects", "==", "1", ":", "\n", "                    ", "masks", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "with_composition", "=", "True", ")", "[", "1", "]", "[", "1", "]", "\n", "self", ".", "val_scores", ".", "update", "(", "labels", ".", "long", "(", ")", ".", "numpy", "(", ")", ",", "(", "masks", ">", "0.5", ")", ".", "long", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "else", ":", "\n", "                    ", "target", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "pred_instance_labels", "=", "True", ",", "with_bkg", "=", "self", ".", "eval_with_bkg", ")", ".", "cpu", "(", ")", "\n", "if", "not", "self", ".", "pred_class", ":", "\n", "                        ", "target", "=", "target", ".", "view", "(", "B", ",", "*", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ",", "images", ".", "size", "(", "2", ")", ",", "images", ".", "size", "(", "3", ")", ")", "\n", "real_idxs", "=", "[", "]", "\n", "for", "idx", "in", "[", "argmin_idx", "]", "+", "other_idxs", ":", "\n", "                            ", "for", "i", "in", "real_idxs", ":", "\n", "                                ", "idx", "=", "idx", "[", "torch", ".", "arange", "(", "B", ")", ",", "i", "]", "\n", "", "real_idxs", ".", "insert", "(", "0", ",", "idx", ")", "\n", "target", "=", "target", "[", "torch", ".", "arange", "(", "B", ")", ",", "idx", "]", "\n", "", "if", "not", "self", ".", "eval_with_bkg", ":", "\n", "                            ", "bkg_idx", "=", "target", "==", "0", "\n", "tsf_layers", "=", "self", ".", "model", ".", "predict", "(", "images", ")", "[", "0", "]", "\n", "new_target", "=", "(", "(", "tsf_layers", "-", "images", ")", "**", "2", ")", ".", "sum", "(", "3", ")", ".", "min", "(", "1", ")", "[", "0", "]", ".", "argmin", "(", "0", ")", ".", "long", "(", ")", "+", "1", "\n", "target", "[", "bkg_idx", "]", "=", "new_target", "[", "bkg_idx", "]", "\n", "\n", "", "", "self", ".", "val_scores", ".", "update", "(", "labels", ".", "long", "(", ")", ".", "numpy", "(", ")", ",", "target", ".", "long", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "", "else", ":", "\n", "                ", "assert", "self", ".", "n_objects", "==", "1", "\n", "self", ".", "val_scores", ".", "update", "(", "labels", ".", "long", "(", ")", ".", "numpy", "(", ")", ",", "argmin_idx", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.log_val_metrics": [[620, 636], ["PRINT_VAL_STAT_FMT", "trainer.Trainer.print_and_log_info", "trainer.Trainer.val_scores.compute", "trainer.Trainer.print_and_log_info", "trainer.Trainer.update_visualizer_metrics", "trainer.Trainer.val_scores.reset", "trainer.Trainer.val_metrics.reset", "open", "f.write", "open", "f.write", "map", "trainer.Trainer.items", "map", "trainer.Trainer.values"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.InstanceSegScores.compute", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.update_visualizer_metrics", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.reset", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.reset"], ["", "", "", "def", "log_val_metrics", "(", "self", ",", "cur_iter", ",", "epoch", ",", "batch", ")", ":", "\n", "        ", "stat", "=", "PRINT_VAL_STAT_FMT", "(", "epoch", ",", "self", ".", "n_epoches", ",", "batch", ",", "self", ".", "n_batches", ",", "self", ".", "val_metrics", ")", "\n", "self", ".", "print_and_log_info", "(", "stat", ")", "\n", "with", "open", "(", "self", ".", "val_metrics_path", ",", "mode", "=", "\"a\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "\"{}\\t{}\\t{}\\t\"", ".", "format", "(", "cur_iter", ",", "epoch", ",", "batch", ")", "+", "\n", "\"\\t\"", ".", "join", "(", "map", "(", "\"{:.6f}\"", ".", "format", ",", "self", ".", "val_metrics", ".", "avg_values", ")", ")", "+", "\"\\n\"", ")", "\n", "\n", "", "scores", "=", "self", ".", "val_scores", ".", "compute", "(", ")", "\n", "self", ".", "print_and_log_info", "(", "\"val_scores: \"", "+", "\", \"", ".", "join", "(", "[", "\"{}={:.4f}\"", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "scores", ".", "items", "(", ")", "]", ")", ")", "\n", "with", "open", "(", "self", ".", "val_scores_path", ",", "mode", "=", "\"a\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "\"{}\\t{}\\t{}\\t\"", ".", "format", "(", "cur_iter", ",", "epoch", ",", "batch", ")", "+", "\n", "\"\\t\"", ".", "join", "(", "map", "(", "\"{:.6f}\"", ".", "format", ",", "scores", ".", "values", "(", ")", ")", ")", "+", "\"\\n\"", ")", "\n", "\n", "", "self", ".", "update_visualizer_metrics", "(", "cur_iter", ",", "train", "=", "False", ")", "\n", "self", ".", "val_scores", ".", "reset", "(", ")", "\n", "self", ".", "val_metrics", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save": [[637, 651], ["torch.save", "trainer.Trainer.print_and_log_info", "trainer.Trainer.model.state_dict", "trainer.Trainer.optimizer.state_dict", "trainer.Trainer.scheduler.state_dict"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info"], ["", "def", "save", "(", "self", ",", "epoch", ",", "batch", ")", ":", "\n", "        ", "state", "=", "{", "\n", "\"epoch\"", ":", "epoch", ",", "\n", "\"batch\"", ":", "batch", ",", "\n", "\"model_name\"", ":", "self", ".", "model_name", ",", "\n", "\"model_kwargs\"", ":", "self", ".", "model_kwargs", ",", "\n", "\"model_state\"", ":", "self", ".", "model", ".", "state_dict", "(", ")", ",", "\n", "\"n_prototypes\"", ":", "self", ".", "n_prototypes", ",", "\n", "\"optimizer_state\"", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "\"scheduler_state\"", ":", "self", ".", "scheduler", ".", "state_dict", "(", ")", ",", "\n", "}", "\n", "save_path", "=", "self", ".", "run_dir", "/", "MODEL_FILE", "\n", "torch", ".", "save", "(", "state", ",", "save_path", ")", "\n", "self", ".", "print_and_log_info", "(", "\"Model saved at {}\"", ".", "format", "(", "save_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_metric_plots": [[652, 734], ["trainer.Trainer.model.eval", "trainer.Trainer.save_prototypes", "trainer.Trainer.save_transformed_images", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "list", "pandas.read_csv.join", "utils.plot.plot_lines", "utils.plot.plot_lines.savefig", "utils.plot.plot_lines", "utils.plot.plot_lines.savefig", "list", "utils.plot.plot_bar", "utils.plot.plot_lines.savefig", "range", "range", "range", "trainer.Trainer.print_and_log_info", "trainer.Trainer.save_masked_prototypes", "trainer.Trainer.save_masks", "trainer.Trainer.save_backgrounds", "len", "trainer.Trainer.print_and_log_info", "filter", "list", "map", "list", "utils.plot.plot_lines", "utils.plot.plot_lines.savefig", "utils.image.save_gif", "shutil.rmtree", "utils.image.save_gif", "shutil.rmtree", "trainer.Trainer.images_to_tsf.size", "range", "max", "filter", "filter", "utils.plot.plot_lines", "utils.plot.plot_lines.savefig", "str", "utils.image.save_gif", "shutil.rmtree", "utils.image.save_gif", "shutil.rmtree", "str", "utils.image.save_gif", "shutil.rmtree", "range", "range", "s.startswith", "n.replace", "str", "str", "str", "utils.image.save_gif", "utils.image.save_gif", "shutil.rmtree", "shutil.rmtree", "utils.image.save_gif", "shutil.rmtree", "s.startswith", "str", "str", "str", "range"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_prototypes", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_transformed_images", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.plot.plot_lines", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.plot.plot_lines", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.plot.plot_bar", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_masked_prototypes", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_masks", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save_backgrounds", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.plot.plot_lines", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.save_gif", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.save_gif", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.plot.plot_lines", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.save_gif", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.save_gif", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.save_gif", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.save_gif", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.save_gif", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.save_gif"], ["", "def", "save_metric_plots", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "# Prototypes & transformation predictions", "\n", "size", "=", "MAX_GIF_SIZE", "if", "MAX_GIF_SIZE", "<", "max", "(", "self", ".", "img_size", ")", "else", "self", ".", "img_size", "\n", "self", ".", "save_prototypes", "(", ")", "\n", "if", "self", ".", "learn_masks", ":", "\n", "            ", "self", ".", "save_masked_prototypes", "(", ")", "\n", "self", ".", "save_masks", "(", ")", "\n", "", "if", "self", ".", "learn_backgrounds", ":", "\n", "            ", "self", ".", "save_backgrounds", "(", ")", "\n", "", "self", ".", "save_transformed_images", "(", ")", "\n", "\n", "# Train metrics", "\n", "df_train", "=", "pd", ".", "read_csv", "(", "self", ".", "train_metrics_path", ",", "sep", "=", "\"\\t\"", ",", "index_col", "=", "0", ")", "\n", "df_val", "=", "pd", ".", "read_csv", "(", "self", ".", "val_metrics_path", ",", "sep", "=", "\"\\t\"", ",", "index_col", "=", "0", ")", "\n", "df_scores", "=", "pd", ".", "read_csv", "(", "self", ".", "val_scores_path", ",", "sep", "=", "\"\\t\"", ",", "index_col", "=", "0", ")", "\n", "if", "len", "(", "df_train", ")", "==", "0", ":", "\n", "            ", "self", ".", "print_and_log_info", "(", "\"No metrics or plots to save\"", ")", "\n", "return", "\n", "\n", "# Losses", "\n", "", "losses", "=", "list", "(", "filter", "(", "lambda", "s", ":", "s", ".", "startswith", "(", "'loss'", ")", ",", "self", ".", "train_metrics", ".", "names", ")", ")", "\n", "df", "=", "df_train", ".", "join", "(", "df_val", "[", "[", "'loss_val'", "]", "]", ",", "how", "=", "\"outer\"", ")", "\n", "fig", "=", "plot_lines", "(", "df", ",", "losses", "+", "[", "'loss_val'", "]", ",", "title", "=", "\"Loss\"", ")", "\n", "fig", ".", "savefig", "(", "self", ".", "run_dir", "/", "\"loss.pdf\"", ")", "\n", "\n", "# Cluster proportions", "\n", "N", "=", "self", ".", "n_clusters", "if", "self", ".", "n_clusters", "<=", "40", "else", "2", "*", "self", ".", "n_prototypes", "\n", "names", "=", "list", "(", "filter", "(", "lambda", "s", ":", "s", ".", "startswith", "(", "'prop_'", ")", ",", "self", ".", "train_metrics", ".", "names", ")", ")", "[", ":", "N", "]", "\n", "fig", "=", "plot_lines", "(", "df", ",", "names", ",", "title", "=", "\"Cluster proportions\"", ")", "\n", "fig", ".", "savefig", "(", "self", ".", "run_dir", "/", "\"cluster_proportions.pdf\"", ")", "\n", "s", "=", "df", "[", "names", "]", ".", "iloc", "[", "-", "1", "]", "\n", "s", ".", "index", "=", "list", "(", "map", "(", "lambda", "n", ":", "n", ".", "replace", "(", "'prop_clus'", ",", "''", ")", ",", "names", ")", ")", "\n", "fig", "=", "plot_bar", "(", "s", ",", "title", "=", "\"Final cluster proportions\"", ")", "\n", "fig", ".", "savefig", "(", "self", ".", "run_dir", "/", "\"cluster_proportions_final.pdf\"", ")", "\n", "\n", "# Validation", "\n", "if", "not", "self", ".", "is_val_empty", ":", "\n", "            ", "names", "=", "list", "(", "filter", "(", "lambda", "name", ":", "'cls'", "not", "in", "name", ",", "self", ".", "val_scores", ".", "names", ")", ")", "\n", "fig", "=", "plot_lines", "(", "df_scores", ",", "names", ",", "title", "=", "\"Global scores\"", ",", "unit_yaxis", "=", "True", ")", "\n", "fig", ".", "savefig", "(", "self", ".", "run_dir", "/", "'global_scores.pdf'", ")", "\n", "\n", "if", "not", "self", ".", "instance_eval", ":", "\n", "                ", "name", "=", "'acc'", "if", "not", "self", ".", "seg_eval", "else", "'iou'", "\n", "N", "=", "self", ".", "n_classes", "\n", "fig", "=", "plot_lines", "(", "df_scores", ",", "[", "f'{name}_cls{i}'", "for", "i", "in", "range", "(", "N", ")", "]", ",", "\n", "title", "=", "\"Scores by cls\"", ",", "unit_yaxis", "=", "True", ")", "\n", "fig", ".", "savefig", "(", "self", ".", "run_dir", "/", "\"scores_by_cls.pdf\"", ")", "\n", "\n", "# Save gifs for prototypes", "\n", "", "", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", ":", "\n", "            ", "save_gif", "(", "self", ".", "prototypes_path", "/", "f'proto{k}'", ",", "f'prototype{k}.gif'", ",", "size", "=", "size", ")", "\n", "shutil", ".", "rmtree", "(", "str", "(", "self", ".", "prototypes_path", "/", "f'proto{k}'", ")", ")", "\n", "if", "self", ".", "learn_masks", ":", "\n", "                ", "save_gif", "(", "self", ".", "masked_prototypes_path", "/", "f'proto{k}'", ",", "f'prototype{k}.gif'", ",", "size", "=", "size", ")", "\n", "shutil", ".", "rmtree", "(", "str", "(", "self", ".", "masked_prototypes_path", "/", "f'proto{k}'", ")", ")", "\n", "save_gif", "(", "self", ".", "masks_path", "/", "f'mask{k}'", ",", "f'mask{k}.gif'", ",", "size", "=", "size", ")", "\n", "shutil", ".", "rmtree", "(", "str", "(", "self", ".", "masks_path", "/", "f'mask{k}'", ")", ")", "\n", "\n", "", "", "for", "k", "in", "range", "(", "self", ".", "n_backgrounds", ")", ":", "\n", "            ", "save_gif", "(", "self", ".", "backgrounds_path", "/", "f'bkg{k}'", ",", "f'background{k}.gif'", ",", "size", "=", "size", ")", "\n", "shutil", ".", "rmtree", "(", "str", "(", "self", ".", "backgrounds_path", "/", "f'bkg{k}'", ")", ")", "\n", "\n", "# Save gifs for transformation predictions", "\n", "", "for", "i", "in", "range", "(", "self", ".", "images_to_tsf", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "N", "=", "self", ".", "n_clusters", "if", "self", ".", "n_clusters", "<=", "40", "else", "2", "*", "self", ".", "n_prototypes", "\n", "for", "k", "in", "range", "(", "N", ")", ":", "\n", "                ", "save_gif", "(", "self", ".", "transformation_path", "/", "f'img{i}'", "/", "f'tsf{k}'", ",", "f'tsf{k}.gif'", ",", "size", "=", "size", ")", "\n", "shutil", ".", "rmtree", "(", "str", "(", "self", ".", "transformation_path", "/", "f'img{i}'", "/", "f'tsf{k}'", ")", ")", "\n", "\n", "", "if", "self", ".", "learn_masks", ":", "\n", "                ", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", ":", "\n", "                    ", "save_gif", "(", "self", ".", "transformation_path", "/", "f'img{i}'", "/", "f'frg_tsf{k}'", ",", "f'frg_tsf{k}.gif'", ",", "size", "=", "size", ")", "\n", "save_gif", "(", "self", ".", "transformation_path", "/", "f'img{i}'", "/", "f'mask_tsf{k}'", ",", "f'mask_tsf{k}.gif'", ",", "size", "=", "size", ")", "\n", "shutil", ".", "rmtree", "(", "str", "(", "self", ".", "transformation_path", "/", "f'img{i}'", "/", "f'frg_tsf{k}'", ")", ")", "\n", "shutil", ".", "rmtree", "(", "str", "(", "self", ".", "transformation_path", "/", "f'img{i}'", "/", "f'mask_tsf{k}'", ")", ")", "\n", "", "", "if", "self", ".", "learn_backgrounds", ":", "\n", "                ", "for", "k", "in", "range", "(", "self", ".", "n_backgrounds", ")", ":", "\n", "                    ", "save_gif", "(", "self", ".", "transformation_path", "/", "f'img{i}'", "/", "f'bkg_tsf{k}'", ",", "f'bkg_tsf{k}.gif'", ",", "size", "=", "size", ")", "\n", "shutil", ".", "rmtree", "(", "str", "(", "self", ".", "transformation_path", "/", "f'img{i}'", "/", "f'bkg_tsf{k}'", ")", ")", "\n", "\n", "", "", "", "self", ".", "print_and_log_info", "(", "\"Metrics and plots saved\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.evaluate": [[735, 754], ["trainer.Trainer.model.eval", "trainer.Trainer.print_and_log_info", "isinstance", "trainer.Trainer.qualitative_eval", "trainer.Trainer.quantitative_eval", "trainer.Trainer.segmentation_quantitative_eval", "trainer.Trainer.segmentation_qualitative_eval", "trainer.Trainer.instance_seg_quantitative_eval", "trainer.Trainer.instance_seg_qualitative_eval", "trainer.Trainer.segmentation_qualitative_eval"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.qualitative_eval", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.quantitative_eval", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.segmentation_quantitative_eval", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.segmentation_qualitative_eval", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.instance_seg_quantitative_eval", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.instance_seg_qualitative_eval", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.segmentation_qualitative_eval"], ["", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "label", "=", "self", ".", "train_loader", ".", "dataset", "[", "0", "]", "[", "1", "]", "\n", "empty_label", "=", "isinstance", "(", "label", ",", "(", "int", ",", "np", ".", "integer", ")", ")", "and", "label", "==", "-", "1", "\n", "if", "empty_label", ":", "\n", "            ", "self", ".", "qualitative_eval", "(", ")", "\n", "", "elif", "self", ".", "seg_eval", "or", "self", ".", "instance_eval", ":", "\n", "            ", "if", "(", "self", ".", "seg_eval", "and", "self", ".", "learn_masks", ")", "or", "self", ".", "eval_semantic", ":", "\n", "                ", "self", ".", "segmentation_quantitative_eval", "(", ")", "\n", "self", ".", "segmentation_qualitative_eval", "(", ")", "\n", "", "if", "self", ".", "instance_eval", "and", "self", ".", "learn_masks", ":", "\n", "                ", "self", ".", "instance_seg_quantitative_eval", "(", ")", "\n", "self", ".", "instance_seg_qualitative_eval", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "quantitative_eval", "(", ")", "\n", "if", "self", ".", "eval_qualitative", ":", "\n", "                ", "self", ".", "segmentation_qualitative_eval", "(", ")", "\n", "\n", "", "", "self", ".", "print_and_log_info", "(", "\"Evaluation is over\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.qualitative_eval": [[755, 810], ["torch.no_grad", "utils.coerce_to_path_and_create_dir", "torch.utils.data.DataLoader", "range", "trainer.Trainer.segmentation_qualitative_eval", "numpy.array", "numpy.array", "utils.metrics.AverageTensorMeter", "images.to.to.to", "map", "argmin_idx.astype.astype.astype", "numpy.hstack", "numpy.hstack", "trainer.Trainer.model.transform().cpu", "range", "open", "f.write", "f.write", "utils.coerce_to_path_and_create_dir", "enumerate", "enumerate", "range", "trainer.Trainer.model", "dist.min", "averages[].update", "numpy.where", "numpy.argsort", "[].unsqueeze().to", "utils.image.convert_to_img().save", "utils.image.convert_to_img().save", "len", "numpy.random.choice", "[].unsqueeze().to", "utils.image.convert_to_img().save", "utils.image.convert_to_img().save", "utils.image.convert_to_img().save", "dist.view().min", "t.cpu().numpy", "trainer.Trainer.model.transform", "utils.logger.print_warning", "[].unsqueeze", "utils.image.convert_to_img", "utils.image.convert_to_img", "[].unsqueeze", "utils.image.convert_to_img", "utils.image.convert_to_img", "utils.image.convert_to_img", "dist.view", "t.cpu", "str", "str", "images.to.to.size", "range", "range", "trainer.Trainer.model.transform", "trainer.Trainer.model.transform"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.segmentation_qualitative_eval", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.print_warning", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "qualitative_eval", "(", "self", ")", ":", "\n", "        ", "\"\"\"Routine to save qualitative results\"\"\"", "\n", "if", "self", ".", "n_objects", ">", "1", ":", "\n", "            ", "self", ".", "segmentation_qualitative_eval", "(", ")", "\n", "return", "None", "\n", "\n", "", "cluster_path", "=", "coerce_to_path_and_create_dir", "(", "self", ".", "run_dir", "/", "'clusters'", ")", "\n", "dataset", "=", "self", ".", "train_loader", ".", "dataset", "\n", "train_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "num_workers", "=", "self", ".", "n_workers", ",", "shuffle", "=", "False", ")", "\n", "\n", "# Compute results", "\n", "distances", ",", "cluster_idx", "=", "np", ".", "array", "(", "[", "]", ")", ",", "np", ".", "array", "(", "[", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "averages", "=", "{", "k", ":", "AverageTensorMeter", "(", ")", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", "}", "\n", "for", "images", ",", "labels", "in", "train_loader", ":", "\n", "            ", "images", "=", "images", ".", "to", "(", "self", ".", "device", ")", "\n", "dist", "=", "self", ".", "model", "(", "images", ")", "[", "1", "]", "\n", "if", "self", ".", "n_backgrounds", ">", "1", ":", "\n", "                ", "dist", "=", "dist", ".", "view", "(", "images", ".", "size", "(", "0", ")", ",", "self", ".", "n_prototypes", ",", "self", ".", "n_backgrounds", ")", ".", "min", "(", "2", ")", "[", "0", "]", "\n", "", "dist_min_by_sample", ",", "argmin_idx", "=", "map", "(", "lambda", "t", ":", "t", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "dist", ".", "min", "(", "1", ")", ")", "\n", "argmin_idx", "=", "argmin_idx", ".", "astype", "(", "np", ".", "int32", ")", "\n", "distances", "=", "np", ".", "hstack", "(", "[", "distances", ",", "dist_min_by_sample", "]", ")", "\n", "cluster_idx", "=", "np", ".", "hstack", "(", "[", "cluster_idx", ",", "argmin_idx", "]", ")", "\n", "\n", "transformed_imgs", "=", "self", ".", "model", ".", "transform", "(", "images", ")", ".", "cpu", "(", ")", "\n", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", ":", "\n", "                ", "imgs", "=", "transformed_imgs", "[", "argmin_idx", "==", "k", ",", "k", "]", "\n", "averages", "[", "k", "]", ".", "update", "(", "imgs", ")", "\n", "\n", "# Save results", "\n", "", "", "with", "open", "(", "cluster_path", "/", "'cluster_counts.tsv'", ",", "mode", "=", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "'\\t'", ".", "join", "(", "[", "str", "(", "k", ")", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", "]", ")", "+", "'\\n'", ")", "\n", "f", ".", "write", "(", "'\\t'", ".", "join", "(", "[", "str", "(", "averages", "[", "k", "]", ".", "count", ")", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", "]", ")", "+", "'\\n'", ")", "\n", "", "for", "k", "in", "range", "(", "self", ".", "n_prototypes", ")", ":", "\n", "            ", "path", "=", "coerce_to_path_and_create_dir", "(", "cluster_path", "/", "f'cluster{k}'", ")", "\n", "indices", "=", "np", ".", "where", "(", "cluster_idx", "==", "k", ")", "[", "0", "]", "\n", "top_idx", "=", "np", ".", "argsort", "(", "distances", "[", "indices", "]", ")", "[", ":", "N_CLUSTER_SAMPLES", "]", "\n", "for", "j", ",", "idx", "in", "enumerate", "(", "top_idx", ")", ":", "\n", "                ", "inp", "=", "dataset", "[", "indices", "[", "idx", "]", "]", "[", "0", "]", ".", "unsqueeze", "(", "0", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "convert_to_img", "(", "inp", ")", ".", "save", "(", "path", "/", "f'top{j}_raw.png'", ")", "\n", "convert_to_img", "(", "self", ".", "model", ".", "transform", "(", "inp", ")", "[", "0", ",", "k", "]", ")", ".", "save", "(", "path", "/", "f'top{j}_tsf.png'", ")", "\n", "# convert_to_img(self.model.transform(inp, inverse=True)[0, k]).save(path / f'top{j}_tsf_inp.png')", "\n", "", "if", "len", "(", "indices", ")", "<=", "N_CLUSTER_SAMPLES", ":", "\n", "                ", "random_idx", "=", "indices", "\n", "", "else", ":", "\n", "                ", "random_idx", "=", "np", ".", "random", ".", "choice", "(", "indices", ",", "N_CLUSTER_SAMPLES", ",", "replace", "=", "False", ")", "\n", "", "for", "j", ",", "idx", "in", "enumerate", "(", "random_idx", ")", ":", "\n", "                ", "inp", "=", "dataset", "[", "idx", "]", "[", "0", "]", ".", "unsqueeze", "(", "0", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "convert_to_img", "(", "inp", ")", ".", "save", "(", "path", "/", "f'random{j}_raw.png'", ")", "\n", "convert_to_img", "(", "self", ".", "model", ".", "transform", "(", "inp", ")", "[", "0", ",", "k", "]", ")", ".", "save", "(", "path", "/", "f'random{j}_tsf.png'", ")", "\n", "# convert_to_img(self.model.transform(inp, inverse=True)[0, k]).save(path / f'random{j}_tsf_inp.png'", "\n", "", "try", ":", "\n", "                ", "convert_to_img", "(", "averages", "[", "k", "]", ".", "avg", ")", ".", "save", "(", "path", "/", "'avg.png'", ")", "\n", "", "except", "AssertionError", ":", "\n", "                ", "print_warning", "(", "f'no image found in cluster {k}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.segmentation_quantitative_eval": [[811, 861], ["torch.no_grad", "torch.utils.data.DataLoader", "utils.metrics.AverageMeter", "utils.metrics.SegmentationScores", "scores.compute.compute.compute", "trainer.Trainer.print_and_log_info", "trainer.Trainer.print_and_log_info", "dataset.get_dataset", "open", "f.write", "images.to.to.to", "trainer.Trainer.model", "utils.metrics.AverageMeter.update", "open", "f.write", "scores.compute.compute.update", "loss_val.item", "masks.size", "labels.long().numpy", "trainer.Trainer.model.transform().cpu", "scores.compute.compute.update", "[].view", "range", "[].view.min", "trainer.Trainer.model.transform().cpu", "target.view.view.view", "scores.compute.compute.update", "images.to.to.size", "trainer.Trainer.model.transform", "[].min", "labels.long().numpy", "target.view.view.long().numpy", "[].view.min", "other_idxs.insert", "real_idxs.insert", "labels.long().numpy", "target.view.view.long().cpu().numpy", "labels.long", "trainer.Trainer.model.transform", "trainer.Trainer.model.transform", "scores.compute.compute.items", "map", "torch.arange", "labels.long", "target.view.view.long", "trainer.Trainer.model", "labels.long", "target.view.view.long().cpu", "scores.compute.compute.values", "trainer.Trainer.model", "torch.arange", "torch.arange", "target.view.view.long"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.InstanceSegScores.compute", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.__init__.get_dataset", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform"], ["", "", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "segmentation_quantitative_eval", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run and save evaluation for semantic segmentation\"\"\"", "\n", "dataset", "=", "get_dataset", "(", "self", ".", "dataset_name", ")", "(", "\"train\"", ",", "eval_mode", "=", "True", ",", "eval_semantic", "=", "True", ",", "**", "self", ".", "dataset_kwargs", ")", "\n", "train_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "num_workers", "=", "self", ".", "n_workers", ",", "shuffle", "=", "False", ")", "\n", "loss", "=", "AverageMeter", "(", ")", "\n", "scores_path", "=", "self", ".", "run_dir", "/", "FINAL_SEMANTIC_SCORES_FILE", "\n", "scores", "=", "SegmentationScores", "(", "self", ".", "n_classes", ")", "\n", "with", "open", "(", "scores_path", ",", "mode", "=", "\"w\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "\"loss\\t\"", "+", "\"\\t\"", ".", "join", "(", "scores", ".", "names", ")", "+", "\"\\n\"", ")", "\n", "\n", "", "for", "images", ",", "labels", "in", "train_loader", ":", "\n", "            ", "images", "=", "images", ".", "to", "(", "self", ".", "device", ")", "\n", "loss_val", ",", "distances", "=", "self", ".", "model", "(", "images", ")", "\n", "B", ",", "C", ",", "H", ",", "W", "=", "images", ".", "shape", "\n", "if", "self", ".", "n_objects", "==", "1", ":", "\n", "                ", "masks", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "with_composition", "=", "True", ")", "[", "1", "]", "[", "1", "]", "\n", "if", "masks", ".", "size", "(", "1", ")", ">", "1", ":", "\n", "                    ", "argmin_idx", "=", "self", ".", "model", "(", "images", ")", "[", "1", "]", ".", "min", "(", "1", ")", "[", "1", "]", "\n", "masks", "=", "masks", "[", "torch", ".", "arange", "(", "B", ")", ",", "argmin_idx", "]", "\n", "", "scores", ".", "update", "(", "labels", ".", "long", "(", ")", ".", "numpy", "(", ")", ",", "(", "masks", ">", "0.5", ")", ".", "long", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "if", "self", ".", "pred_class", ":", "\n", "                    ", "target", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "pred_semantic_labels", "=", "True", ")", ".", "cpu", "(", ")", "\n", "scores", ".", "update", "(", "labels", ".", "long", "(", ")", ".", "numpy", "(", ")", ",", "target", ".", "long", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "else", ":", "\n", "                    ", "distances", "=", "self", ".", "model", "(", "images", ")", "[", "1", "]", ".", "view", "(", "B", ",", "*", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ")", "\n", "other_idxs", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "self", ".", "n_objects", ",", "1", ",", "-", "1", ")", ":", "\n", "                        ", "distances", ",", "idx", "=", "distances", ".", "min", "(", "k", ")", "\n", "other_idxs", ".", "insert", "(", "0", ",", "idx", ")", "\n", "", "dist_min_by_sample", ",", "argmin_idx", "=", "distances", ".", "min", "(", "1", ")", "\n", "\n", "target", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "pred_semantic_labels", "=", "True", ")", ".", "cpu", "(", ")", "\n", "target", "=", "target", ".", "view", "(", "B", ",", "*", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ",", "H", ",", "W", ")", "\n", "real_idxs", "=", "[", "]", "\n", "for", "idx", "in", "[", "argmin_idx", "]", "+", "other_idxs", ":", "\n", "                        ", "for", "i", "in", "real_idxs", ":", "\n", "                            ", "idx", "=", "idx", "[", "torch", ".", "arange", "(", "B", ")", ",", "i", "]", "\n", "", "real_idxs", ".", "insert", "(", "0", ",", "idx", ")", "\n", "target", "=", "target", "[", "torch", ".", "arange", "(", "B", ")", ",", "idx", "]", "\n", "", "scores", ".", "update", "(", "labels", ".", "long", "(", ")", ".", "numpy", "(", ")", ",", "target", ".", "long", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "", "loss", ".", "update", "(", "loss_val", ".", "item", "(", ")", ",", "n", "=", "images", ".", "size", "(", "0", ")", ")", "\n", "\n", "", "scores", "=", "scores", ".", "compute", "(", ")", "\n", "self", ".", "print_and_log_info", "(", "\"final_loss: {:.4f}\"", ".", "format", "(", "loss", ".", "avg", ")", ")", "\n", "self", ".", "print_and_log_info", "(", "\"final_scores: \"", "+", "\", \"", ".", "join", "(", "[", "\"{}={:.4f}\"", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "scores", ".", "items", "(", ")", "]", ")", ")", "\n", "with", "open", "(", "scores_path", ",", "mode", "=", "\"a\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "\"{:.6}\\t\"", ".", "format", "(", "loss", ".", "avg", ")", "+", "\"\\t\"", ".", "join", "(", "map", "(", "\"{:.6f}\"", ".", "format", ",", "scores", ".", "values", "(", ")", ")", ")", "+", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.segmentation_qualitative_eval": [[862, 917], ["torch.no_grad", "utils.coerce_to_path_and_create_dir", "seaborn.color_palette", "tuple", "torch.utils.data.DataLoader", "iter", "range", "iter.next", "images.cpu.cpu.to", "infer_seg.view.view.unsqueeze().expand", "torch.zeros().float", "enumerate", "images.cpu.cpu.cpu", "range", "trainer.Trainer.model.transform().cpu", "trainer.Trainer.model.transform().cpu", "[].view", "range", "[].view.min", "trainer.Trainer.model.transform().cpu", "recons.view.view.view", "trainer.Trainer.model.transform().cpu", "infer_seg.view.view.view", "masks.append", "utils.image.convert_to_img().save", "utils.image.convert_to_img().save", "utils.image.convert_to_img().save", "numpy.asarray", "[].view.min", "other_idxs.insert", "real_idxs.insert", "infer_seg.view.view.unsqueeze", "torch.zeros", "[].to().expand", "trainer.Trainer.model.transform", "trainer.Trainer.model.transform", "trainer.Trainer.model.transform", "trainer.Trainer.model.transform", "utils.image.convert_to_img", "utils.image.convert_to_img", "utils.image.convert_to_img", "trainer.Trainer.model", "[].to", "torch.arange", "torch.arange", "torch.arange", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img"], ["", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "segmentation_qualitative_eval", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run and save qualitative evaluation for semantic segmentation\"\"\"", "\n", "out", "=", "coerce_to_path_and_create_dir", "(", "self", ".", "run_dir", "/", "'semantic_seg'", ")", "\n", "K", "=", "self", ".", "n_prototypes", "if", "self", ".", "model", ".", "add_empty_sprite", "else", "self", ".", "n_prototypes", "+", "1", "\n", "colors", "=", "sns", ".", "color_palette", "(", "'hls'", ",", "K", ")", "\n", "colors", "[", "0", "]", "=", "tuple", "(", "(", "np", ".", "asarray", "(", "colors", "[", "0", "]", ")", "/", "colors", "[", "0", "]", "[", "0", "]", ")", "*", "0.5", ")", "\n", "dataset", "=", "self", ".", "train_loader", ".", "dataset", "\n", "if", "32", "%", "self", ".", "batch_size", "==", "0", ":", "\n", "            ", "N", ",", "B", "=", "32", "//", "self", ".", "batch_size", ",", "self", ".", "batch_size", "\n", "", "else", ":", "\n", "            ", "N", ",", "B", "=", "8", ",", "4", "\n", "", "C", ",", "H", ",", "W", "=", "dataset", "[", "0", "]", "[", "0", "]", ".", "shape", "\n", "train_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "B", ",", "num_workers", "=", "self", ".", "n_workers", ",", "shuffle", "=", "False", ")", "\n", "\n", "iterator", "=", "iter", "(", "train_loader", ")", "\n", "for", "j", "in", "range", "(", "N", ")", ":", "\n", "            ", "images", ",", "labels", "=", "iterator", ".", "next", "(", ")", "\n", "images", "=", "images", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "self", ".", "pred_class", ":", "\n", "                ", "recons", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "hard_occ_grid", "=", "True", ")", ".", "cpu", "(", ")", "\n", "infer_seg", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "pred_semantic_labels", "=", "True", ")", ".", "cpu", "(", ")", "\n", "", "else", ":", "\n", "                ", "distances", "=", "self", ".", "model", "(", "images", ")", "[", "1", "]", ".", "view", "(", "B", ",", "*", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ")", "\n", "other_idxs", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "self", ".", "n_objects", ",", "1", ",", "-", "1", ")", ":", "\n", "                    ", "distances", ",", "idx", "=", "distances", ".", "min", "(", "k", ")", "\n", "other_idxs", ".", "insert", "(", "0", ",", "idx", ")", "\n", "", "dist_min_by_sample", ",", "argmin_idx", "=", "distances", ".", "min", "(", "1", ")", "\n", "\n", "recons", "=", "self", ".", "model", ".", "transform", "(", "images", ")", ".", "cpu", "(", ")", "\n", "recons", "=", "recons", ".", "view", "(", "B", ",", "*", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ",", "C", ",", "H", ",", "W", ")", "\n", "infer_seg", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "pred_semantic_labels", "=", "True", ")", ".", "cpu", "(", ")", "\n", "infer_seg", "=", "infer_seg", ".", "view", "(", "B", ",", "*", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ",", "H", ",", "W", ")", "\n", "real_idxs", "=", "[", "]", "\n", "for", "idx", "in", "[", "argmin_idx", "]", "+", "other_idxs", ":", "\n", "                    ", "for", "i", "in", "real_idxs", ":", "\n", "                        ", "idx", "=", "idx", "[", "torch", ".", "arange", "(", "B", ")", ",", "i", "]", "\n", "", "real_idxs", ".", "insert", "(", "0", ",", "idx", ")", "\n", "infer_seg", "=", "infer_seg", "[", "torch", ".", "arange", "(", "B", ")", ",", "idx", "]", "\n", "recons", "=", "recons", "[", "torch", ".", "arange", "(", "B", ")", ",", "idx", "]", "\n", "\n", "", "", "infer_seg", "=", "infer_seg", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "C", ",", "H", ",", "W", ")", "\n", "color_seg", "=", "torch", ".", "zeros", "(", "infer_seg", ".", "shape", ")", ".", "float", "(", ")", "\n", "masks", "=", "[", "]", "\n", "for", "k", ",", "col", "in", "enumerate", "(", "colors", ")", ":", "\n", "                ", "masks", ".", "append", "(", "infer_seg", "==", "k", ")", "\n", "color_seg", "[", "masks", "[", "-", "1", "]", "]", "=", "torch", ".", "Tensor", "(", "col", ")", "[", "None", ",", ":", ",", "None", ",", "None", "]", ".", "to", "(", "'cpu'", ")", ".", "expand", "(", "B", ",", "C", ",", "H", ",", "W", ")", "[", "masks", "[", "-", "1", "]", "]", "\n", "\n", "", "images", "=", "images", ".", "cpu", "(", ")", "\n", "for", "k", "in", "range", "(", "B", ")", ":", "\n", "                ", "name", "=", "f'{k+j*B}'", ".", "zfill", "(", "2", ")", "\n", "convert_to_img", "(", "images", "[", "k", "]", ")", ".", "save", "(", "out", "/", "f'{name}.png'", ")", "\n", "convert_to_img", "(", "recons", "[", "k", "]", ")", ".", "save", "(", "out", "/", "f'{name}_recons.png'", ")", "\n", "convert_to_img", "(", "color_seg", "[", "k", "]", ")", ".", "save", "(", "out", "/", "f'{name}_seg_full.png'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.instance_seg_quantitative_eval": [[918, 976], ["torch.no_grad", "torch.utils.data.DataLoader", "utils.metrics.AverageMeter", "utils.metrics.InstanceSegScores", "iter", "range", "scores.compute.compute.compute", "trainer.Trainer.print_and_log_info", "trainer.Trainer.print_and_log_info", "dataset.get_dataset", "open", "f.write", "iter.next", "images.to.to.to", "trainer.Trainer.model", "utils.metrics.AverageMeter.update", "open", "f.write", "scores.compute.compute.update", "loss_val.item", "labels.long().numpy", "trainer.Trainer.model.transform().cpu", "scores.compute.compute.update", "distances.view.view.view", "range", "distances.view.view.min", "trainer.Trainer.model.transform().cpu", "target.view.view.view", "scores.compute.compute.update", "images.to.to.size", "trainer.Trainer.model.transform", "labels.long().numpy", "target.view.view.long().numpy", "distances.view.view.min", "other_idxs.insert", "images.to.to.size", "images.to.to.size", "real_idxs.insert", "labels.long().numpy", "target.view.view.long().numpy", "labels.long", "trainer.Trainer.model.transform", "trainer.Trainer.model.transform", "trainer.Trainer.model.predict", "scores.compute.compute.items", "map", "labels.long", "target.view.view.long", "labels.long", "target.view.view.long", "scores.compute.compute.values", "torch.arange", "[].argmin().long", "torch.arange", "[].argmin"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.InstanceSegScores.compute", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.__init__.get_dataset", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.predict"], ["", "", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "instance_seg_quantitative_eval", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run and save quantitative evaluation for instance segmentation\"\"\"", "\n", "dataset", "=", "get_dataset", "(", "self", ".", "dataset_name", ")", "(", "\"train\"", ",", "eval_mode", "=", "True", ",", "**", "self", ".", "dataset_kwargs", ")", "\n", "if", "320", "%", "self", ".", "batch_size", "==", "0", ":", "\n", "            ", "N", ",", "B", "=", "320", "//", "self", ".", "batch_size", ",", "self", ".", "batch_size", "\n", "", "else", ":", "\n", "            ", "N", ",", "B", "=", "80", ",", "4", "\n", "", "train_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "B", ",", "num_workers", "=", "self", ".", "n_workers", ",", "shuffle", "=", "False", ")", "\n", "loss", "=", "AverageMeter", "(", ")", "\n", "scores_path", "=", "self", ".", "run_dir", "/", "FINAL_SEG_SCORES_FILE", "\n", "scores", "=", "InstanceSegScores", "(", "self", ".", "n_objects", "+", "1", ",", "with_bkg", "=", "self", ".", "eval_with_bkg", ")", "\n", "with", "open", "(", "scores_path", ",", "mode", "=", "\"w\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "\"loss\\t\"", "+", "\"\\t\"", ".", "join", "(", "scores", ".", "names", ")", "+", "\"\\n\"", ")", "\n", "\n", "", "iterator", "=", "iter", "(", "train_loader", ")", "\n", "for", "k", "in", "range", "(", "N", ")", ":", "\n", "            ", "images", ",", "labels", "=", "iterator", ".", "next", "(", ")", "\n", "images", "=", "images", ".", "to", "(", "self", ".", "device", ")", "\n", "loss_val", ",", "distances", "=", "self", ".", "model", "(", "images", ")", "\n", "if", "self", ".", "n_objects", "==", "1", ":", "\n", "                ", "masks", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "with_composition", "=", "True", ")", "[", "1", "]", "[", "1", "]", "\n", "scores", ".", "update", "(", "labels", ".", "long", "(", ")", ".", "numpy", "(", ")", ",", "(", "masks", ">", "0.5", ")", ".", "long", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "if", "self", ".", "pred_class", ":", "\n", "                    ", "target", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "pred_instance_labels", "=", "True", ",", "with_bkg", "=", "self", ".", "eval_with_bkg", ")", ".", "cpu", "(", ")", "\n", "scores", ".", "update", "(", "labels", ".", "long", "(", ")", ".", "numpy", "(", ")", ",", "target", ".", "long", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "else", ":", "\n", "                    ", "distances", "=", "distances", ".", "view", "(", "B", ",", "*", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ")", "\n", "other_idxs", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "self", ".", "n_objects", ",", "1", ",", "-", "1", ")", ":", "\n", "                        ", "distances", ",", "idx", "=", "distances", ".", "min", "(", "k", ")", "\n", "other_idxs", ".", "insert", "(", "0", ",", "idx", ")", "\n", "", "dist_min_by_sample", ",", "argmin_idx", "=", "distances", ".", "min", "(", "1", ")", "\n", "\n", "target", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "pred_instance_labels", "=", "True", ",", "with_bkg", "=", "self", ".", "eval_with_bkg", ")", ".", "cpu", "(", ")", "\n", "target", "=", "target", ".", "view", "(", "B", ",", "*", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ",", "images", ".", "size", "(", "2", ")", ",", "images", ".", "size", "(", "3", ")", ")", "\n", "real_idxs", "=", "[", "]", "\n", "for", "idx", "in", "[", "argmin_idx", "]", "+", "other_idxs", ":", "\n", "                        ", "for", "i", "in", "real_idxs", ":", "\n", "                            ", "idx", "=", "idx", "[", "torch", ".", "arange", "(", "B", ")", ",", "i", "]", "\n", "", "real_idxs", ".", "insert", "(", "0", ",", "idx", ")", "\n", "target", "=", "target", "[", "torch", ".", "arange", "(", "B", ")", ",", "idx", "]", "\n", "", "if", "not", "self", ".", "eval_with_bkg", ":", "\n", "                        ", "bkg_idx", "=", "target", "==", "0", "\n", "tsf_layers", "=", "self", ".", "model", ".", "predict", "(", "images", ")", "[", "0", "]", "\n", "new_target", "=", "(", "(", "(", "tsf_layers", "-", "images", ")", "**", "2", ")", ".", "sum", "(", "3", ")", ".", "min", "(", "1", ")", "[", "0", "]", ".", "argmin", "(", "0", ")", ".", "long", "(", ")", "+", "1", ")", ".", "cpu", "(", ")", "\n", "target", "[", "bkg_idx", "]", "=", "new_target", "[", "bkg_idx", "]", "\n", "", "scores", ".", "update", "(", "labels", ".", "long", "(", ")", ".", "numpy", "(", ")", ",", "target", ".", "long", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "", "loss", ".", "update", "(", "loss_val", ".", "item", "(", ")", ",", "n", "=", "images", ".", "size", "(", "0", ")", ")", "\n", "\n", "", "scores", "=", "scores", ".", "compute", "(", ")", "\n", "self", ".", "print_and_log_info", "(", "\"final_loss: {:.4f}\"", ".", "format", "(", "loss", ".", "avg", ")", ")", "\n", "self", ".", "print_and_log_info", "(", "\"final_scores: \"", "+", "\", \"", ".", "join", "(", "[", "\"{}={:.4f}\"", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "scores", ".", "items", "(", ")", "]", ")", ")", "\n", "with", "open", "(", "scores_path", ",", "mode", "=", "\"a\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "\"{:.6}\\t\"", ".", "format", "(", "loss", ".", "avg", ")", "+", "\"\\t\"", ".", "join", "(", "map", "(", "\"{:.6f}\"", ".", "format", ",", "scores", ".", "values", "(", ")", ")", ")", "+", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.instance_seg_qualitative_eval": [[977, 1038], ["torch.no_grad", "utils.coerce_to_path_and_create_dir", "seaborn.color_palette", "torch.utils.data.DataLoader", "iter", "range", "iter.next", "images.cpu.cpu.to", "infer_seg.view.view.unsqueeze().expand", "torch.zeros().float", "enumerate", "images.cpu.cpu.cpu", "range", "trainer.Trainer.model.transform().cpu", "trainer.Trainer.model.transform().cpu", "[].view", "range", "[].view.min", "trainer.Trainer.model.transform().cpu", "recons.view.view.view", "trainer.Trainer.model.transform().cpu", "infer_seg.view.view.view", "masks.append", "utils.image.convert_to_img().save", "utils.image.convert_to_img().save", "utils.image.convert_to_img().save", "range", "[].view.min", "other_idxs.insert", "real_idxs.insert", "infer_seg.view.view.unsqueeze", "torch.zeros", "[].to().expand", "utils.image.convert_to_img().save", "trainer.Trainer.model.transform", "trainer.Trainer.model.transform", "trainer.Trainer.model.transform", "trainer.Trainer.model.transform", "trainer.Trainer.model.predict", "utils.image.convert_to_img", "utils.image.convert_to_img", "utils.image.convert_to_img", "trainer.Trainer.model", "[].to", "utils.image.convert_to_img", "torch.arange", "torch.arange", "[].argmin().long", "torch.arange", "[].argmin", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.predict", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img"], ["", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "instance_seg_qualitative_eval", "(", "self", ")", ":", "\n", "        ", "\"\"\"Run and save qualitative evaluation for instance segmentation\"\"\"", "\n", "out", "=", "coerce_to_path_and_create_dir", "(", "self", ".", "run_dir", "/", "'instance_seg'", ")", "\n", "colors", "=", "sns", ".", "color_palette", "(", "'tab10'", ",", "self", ".", "n_objects", "+", "1", ")", "\n", "dataset", "=", "self", ".", "train_loader", ".", "dataset", "\n", "if", "32", "%", "self", ".", "batch_size", "==", "0", ":", "\n", "            ", "N", ",", "B", "=", "32", "//", "self", ".", "batch_size", ",", "self", ".", "batch_size", "\n", "", "else", ":", "\n", "            ", "N", ",", "B", "=", "8", ",", "4", "\n", "", "C", ",", "H", ",", "W", "=", "dataset", "[", "0", "]", "[", "0", "]", ".", "shape", "\n", "train_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "B", ",", "num_workers", "=", "self", ".", "n_workers", ",", "shuffle", "=", "False", ")", "\n", "\n", "iterator", "=", "iter", "(", "train_loader", ")", "\n", "for", "j", "in", "range", "(", "N", ")", ":", "\n", "            ", "images", ",", "labels", "=", "iterator", ".", "next", "(", ")", "\n", "images", "=", "images", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "self", ".", "pred_class", ":", "\n", "                ", "recons", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "hard_occ_grid", "=", "True", ")", ".", "cpu", "(", ")", "\n", "infer_seg", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "pred_instance_labels", "=", "True", ",", "with_bkg", "=", "self", ".", "eval_with_bkg", ")", ".", "cpu", "(", ")", "\n", "", "else", ":", "\n", "                ", "distances", "=", "self", ".", "model", "(", "images", ")", "[", "1", "]", ".", "view", "(", "B", ",", "*", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ")", "\n", "other_idxs", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "self", ".", "n_objects", ",", "1", ",", "-", "1", ")", ":", "\n", "                    ", "distances", ",", "idx", "=", "distances", ".", "min", "(", "k", ")", "\n", "other_idxs", ".", "insert", "(", "0", ",", "idx", ")", "\n", "", "dist_min_by_sample", ",", "argmin_idx", "=", "distances", ".", "min", "(", "1", ")", "\n", "\n", "recons", "=", "self", ".", "model", ".", "transform", "(", "images", ")", ".", "cpu", "(", ")", "\n", "recons", "=", "recons", ".", "view", "(", "B", ",", "*", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ",", "C", ",", "H", ",", "W", ")", "\n", "infer_seg", "=", "self", ".", "model", ".", "transform", "(", "images", ",", "pred_instance_labels", "=", "True", ",", "with_bkg", "=", "self", ".", "eval_with_bkg", ")", ".", "cpu", "(", ")", "\n", "infer_seg", "=", "infer_seg", ".", "view", "(", "B", ",", "*", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ",", "H", ",", "W", ")", "\n", "real_idxs", "=", "[", "]", "\n", "for", "idx", "in", "[", "argmin_idx", "]", "+", "other_idxs", ":", "\n", "                    ", "for", "i", "in", "real_idxs", ":", "\n", "                        ", "idx", "=", "idx", "[", "torch", ".", "arange", "(", "B", ")", ",", "i", "]", "\n", "", "real_idxs", ".", "insert", "(", "0", ",", "idx", ")", "\n", "infer_seg", "=", "infer_seg", "[", "torch", ".", "arange", "(", "B", ")", ",", "idx", "]", "\n", "recons", "=", "recons", "[", "torch", ".", "arange", "(", "B", ")", ",", "idx", "]", "\n", "\n", "", "if", "not", "self", ".", "eval_with_bkg", ":", "\n", "                    ", "bkg_idx", "=", "infer_seg", "==", "0", "\n", "tsf_layers", "=", "self", ".", "model", ".", "predict", "(", "images", ")", "[", "0", "]", "\n", "new_target", "=", "(", "(", "(", "tsf_layers", "-", "images", ")", "**", "2", ")", ".", "sum", "(", "3", ")", ".", "min", "(", "1", ")", "[", "0", "]", ".", "argmin", "(", "0", ")", ".", "long", "(", ")", "+", "1", ")", ".", "cpu", "(", ")", "\n", "infer_seg", "[", "bkg_idx", "]", "=", "new_target", "[", "bkg_idx", "]", "\n", "\n", "", "", "infer_seg", "=", "infer_seg", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "C", ",", "H", ",", "W", ")", "\n", "color_seg", "=", "torch", ".", "zeros", "(", "infer_seg", ".", "shape", ")", ".", "float", "(", ")", "\n", "masks", "=", "[", "]", "\n", "for", "k", ",", "col", "in", "enumerate", "(", "colors", ")", ":", "\n", "                ", "masks", ".", "append", "(", "infer_seg", "==", "k", ")", "\n", "color_seg", "[", "masks", "[", "-", "1", "]", "]", "=", "torch", ".", "Tensor", "(", "col", ")", "[", "None", ",", ":", ",", "None", ",", "None", "]", ".", "to", "(", "'cpu'", ")", ".", "expand", "(", "B", ",", "C", ",", "H", ",", "W", ")", "[", "masks", "[", "-", "1", "]", "]", "\n", "\n", "", "images", "=", "images", ".", "cpu", "(", ")", "\n", "for", "k", "in", "range", "(", "B", ")", ":", "\n", "                ", "name", "=", "f'{k+j*B}'", ".", "zfill", "(", "2", ")", "\n", "convert_to_img", "(", "images", "[", "k", "]", ")", ".", "save", "(", "out", "/", "f'{name}.png'", ")", "\n", "convert_to_img", "(", "recons", "[", "k", "]", ")", ".", "save", "(", "out", "/", "f'{name}_recons.png'", ")", "\n", "convert_to_img", "(", "color_seg", "[", "k", "]", ")", ".", "save", "(", "out", "/", "f'{name}_seg_full.png'", ")", "\n", "for", "l", "in", "range", "(", "self", ".", "n_objects", "+", "1", ")", ":", "\n", "                    ", "convert_to_img", "(", "(", "images", "[", "k", "]", "*", "masks", "[", "l", "]", "[", "k", "]", ")", ")", ".", "save", "(", "out", "/", "f'{name}_seg_obj{l}.png'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.quantitative_eval": [[1039, 1073], ["torch.no_grad", "utils.metrics.AverageMeter", "utils.metrics.Scores", "torch.utils.data.DataLoader", "scores.compute.compute.compute", "trainer.Trainer.print_and_log_info", "trainer.Trainer.print_and_log_info", "open", "f.write", "dataset.get_dataset", "images.to.to.size", "images.to.to.to", "distances.view.view.min", "utils.metrics.AverageMeter.update", "scores.compute.compute.update", "open", "f.write", "trainer.Trainer.model", "distances.view.view.view().min", "distances.view.view.view", "range", "dist_min_by_sample.mean", "labels.long().numpy", "argmin_idx.cpu().numpy", "distances.view.view.min", "other_idxs.insert", "len", "distances.view.view.view", "labels.long", "argmin_idx.cpu", "scores.compute.compute.items", "map", "scores.compute.compute.values"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.InstanceSegScores.compute", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.print_and_log_info", "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.__init__.get_dataset", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update"], ["", "", "", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "quantitative_eval", "(", "self", ")", ":", "\n", "        ", "\"\"\"Routine to save quantitative results: loss + scores\"\"\"", "\n", "loss", "=", "AverageMeter", "(", ")", "\n", "scores_path", "=", "self", ".", "run_dir", "/", "FINAL_SCORES_FILE", "\n", "scores", "=", "Scores", "(", "self", ".", "n_classes", ",", "self", ".", "n_prototypes", ")", "\n", "with", "open", "(", "scores_path", ",", "mode", "=", "\"w\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "\"loss\\t\"", "+", "\"\\t\"", ".", "join", "(", "scores", ".", "names", ")", "+", "\"\\n\"", ")", "\n", "\n", "", "dataset", "=", "get_dataset", "(", "self", ".", "dataset_name", ")", "(", "\"train\"", ",", "eval_mode", "=", "True", ",", "**", "self", ".", "dataset_kwargs", ")", "\n", "loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "num_workers", "=", "self", ".", "n_workers", ")", "\n", "for", "images", ",", "labels", "in", "loader", ":", "\n", "            ", "B", "=", "images", ".", "size", "(", "0", ")", "\n", "images", "=", "images", ".", "to", "(", "self", ".", "device", ")", "\n", "distances", "=", "self", ".", "model", "(", "images", ")", "[", "1", "]", "\n", "if", "self", ".", "n_backgrounds", ">", "1", ":", "\n", "                ", "distances", ",", "bkg_idx", "=", "distances", ".", "view", "(", "B", ",", "self", ".", "n_prototypes", ",", "self", ".", "n_backgrounds", ")", ".", "min", "(", "2", ")", "\n", "", "if", "self", ".", "n_objects", ">", "1", ":", "\n", "                ", "distances", "=", "distances", ".", "view", "(", "B", ",", "*", "(", "self", ".", "n_prototypes", ",", ")", "*", "self", ".", "n_objects", ")", "\n", "other_idxs", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "self", ".", "n_objects", ",", "1", ",", "-", "1", ")", ":", "\n", "                    ", "distances", ",", "idx", "=", "distances", ".", "min", "(", "k", ")", "\n", "other_idxs", ".", "insert", "(", "0", ",", "idx", ")", "\n", "", "", "dist_min_by_sample", ",", "argmin_idx", "=", "distances", ".", "min", "(", "1", ")", "\n", "\n", "loss", ".", "update", "(", "dist_min_by_sample", ".", "mean", "(", ")", ",", "n", "=", "len", "(", "dist_min_by_sample", ")", ")", "\n", "assert", "self", ".", "n_objects", "==", "1", "\n", "scores", ".", "update", "(", "labels", ".", "long", "(", ")", ".", "numpy", "(", ")", ",", "argmin_idx", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "scores", "=", "scores", ".", "compute", "(", ")", "\n", "self", ".", "print_and_log_info", "(", "\"final_loss: {:.4f}\"", ".", "format", "(", "loss", ".", "avg", ")", ")", "\n", "self", ".", "print_and_log_info", "(", "\"final_scores: \"", "+", "\", \"", ".", "join", "(", "[", "\"{}={:.4f}\"", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "scores", ".", "items", "(", ")", "]", ")", ")", "\n", "with", "open", "(", "scores_path", ",", "mode", "=", "\"a\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "\"{:.6}\\t\"", ".", "format", "(", "loss", ".", "avg", ")", "+", "\"\\t\"", ".", "join", "(", "map", "(", "\"{:.6f}\"", ".", "format", ",", "scores", ".", "values", "(", ")", ")", ")", "+", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.Metrics.__init__": [[17, 21], ["list", "collections.defaultdict", "collections.defaultdict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "*", "names", ")", ":", "\n", "        ", "self", ".", "names", "=", "list", "(", "names", ")", "\n", "self", ".", "curves", "=", "defaultdict", "(", "list", ")", "\n", "self", ".", "meters", "=", "defaultdict", "(", "AverageMeter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.Metrics.reset": [[22, 27], ["len", "metrics.Metrics.meters[].reset"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.reset"], ["", "def", "reset", "(", "self", ",", "*", "names", ")", ":", "\n", "        ", "if", "len", "(", "names", ")", "==", "0", ":", "\n", "            ", "names", "=", "self", ".", "names", "\n", "", "for", "name", "in", "names", ":", "\n", "            ", "self", ".", "meters", "[", "name", "]", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.Metrics.__getitem__": [[28, 30], ["None"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "name", ")", ":", "\n", "        ", "return", "self", ".", "meters", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.Metrics.__repr__": [[31, 33], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "', '", ".", "join", "(", "[", "'{}={:.4f}'", ".", "format", "(", "name", ",", "self", ".", "meters", "[", "name", "]", ".", "avg", ")", "for", "name", "in", "self", ".", "names", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.Metrics.avg_values": [[34, 37], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "avg_values", "(", "self", ")", ":", "\n", "        ", "return", "[", "self", ".", "meters", "[", "name", "]", ".", "avg", "for", "name", "in", "self", ".", "names", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.Metrics.update": [[38, 53], ["len", "isinstance", "d.items", "isinstance", "metrics.Metrics.update", "metrics.Metrics.names.append", "metrics.Metrics.meters[].update", "metrics.Metrics.meters[].update", "len"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update"], ["", "def", "update", "(", "self", ",", "*", "name_val", ")", ":", "\n", "        ", "if", "len", "(", "name_val", ")", "==", "1", ":", "\n", "            ", "d", "=", "name_val", "[", "0", "]", "\n", "assert", "isinstance", "(", "d", ",", "dict", ")", "\n", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "update", "(", "k", ",", "v", ")", "\n", "", "", "else", ":", "\n", "            ", "name", ",", "val", "=", "name_val", "\n", "if", "name", "not", "in", "self", ".", "names", ":", "\n", "                ", "self", ".", "names", ".", "append", "(", "name", ")", "\n", "", "if", "isinstance", "(", "val", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "                ", "assert", "len", "(", "val", ")", "==", "2", "\n", "self", ".", "meters", "[", "name", "]", ".", "update", "(", "val", "[", "0", "]", ",", "n", "=", "val", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "meters", "[", "name", "]", ".", "update", "(", "val", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.Scores.__init__": [[64, 74], ["max", "collections.OrderedDict", "metrics.Scores.reset", "zip", "range", "len"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.reset"], ["def", "__init__", "(", "self", ",", "n_classes", ",", "n_clusters", ",", "linear_mapping", "=", "True", ")", ":", "\n", "        ", "self", ".", "n_classes", "=", "n_classes", "\n", "self", ".", "n_clusters", "=", "n_clusters", "\n", "self", ".", "n_max_labels", "=", "max", "(", "n_classes", ",", "n_clusters", ")", "\n", "self", ".", "names", "=", "[", "'nmi'", ",", "'nmi_diff'", ",", "'global_acc'", ",", "'avg_acc'", "]", "+", "[", "f'acc_cls{i}'", "for", "i", "in", "range", "(", "n_classes", ")", "]", "\n", "self", ".", "values", "=", "OrderedDict", "(", "zip", "(", "self", ".", "names", ",", "[", "0", "]", "*", "len", "(", "self", ".", "names", ")", ")", ")", "\n", "self", ".", "score_name", "=", "'nmi'", "\n", "self", ".", "prev_labels_pred", "=", "None", "\n", "self", ".", "linear_mapping", "=", "linear_mapping", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.Scores.compute": [[75, 89], ["sklearn.metrics.cluster.normalized_mutual_info_score", "metrics.Scores.compute_confusion_matrix", "numpy.mean", "collections.OrderedDict", "sklearn.metrics.cluster.normalized_mutual_info_score", "numpy.diag().sum", "metrics.Scores.sum", "numpy.errstate", "numpy.nan_to_num", "zip", "numpy.diag", "metrics.Scores.sum", "numpy.diag", "acc_by_class.tolist"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.Scores.compute_confusion_matrix"], ["", "def", "compute", "(", "self", ")", ":", "\n", "        ", "nmi", "=", "nmi_score", "(", "self", ".", "labels_true", ",", "self", ".", "labels_pred", ",", "average_method", "=", "'arithmetic'", ")", "\n", "if", "self", ".", "prev_labels_pred", "is", "not", "None", ":", "\n", "            ", "nmi_diff", "=", "nmi_score", "(", "self", ".", "prev_labels_pred", ",", "self", ".", "labels_pred", ",", "average_method", "=", "'arithmetic'", ")", "\n", "", "else", ":", "\n", "            ", "nmi_diff", "=", "0", "\n", "\n", "", "matrix", "=", "self", ".", "compute_confusion_matrix", "(", ")", "\n", "acc", "=", "np", ".", "diag", "(", "matrix", ")", ".", "sum", "(", ")", "/", "matrix", ".", "sum", "(", ")", "\n", "with", "np", ".", "errstate", "(", "divide", "=", "'ignore'", ",", "invalid", "=", "'ignore'", ")", ":", "\n", "            ", "acc_by_class", "=", "np", ".", "diag", "(", "matrix", ")", "/", "matrix", ".", "sum", "(", "axis", "=", "1", ")", "\n", "", "avg_acc", "=", "np", ".", "mean", "(", "np", ".", "nan_to_num", "(", "acc_by_class", ")", ")", "\n", "self", ".", "values", "=", "OrderedDict", "(", "zip", "(", "self", ".", "names", ",", "[", "nmi", ",", "nmi_diff", ",", "acc", ",", "avg_acc", "]", "+", "acc_by_class", ".", "tolist", "(", ")", ")", ")", "\n", "return", "self", ".", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.Scores.__getitem__": [[90, 92], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "k", ")", ":", "\n", "        ", "return", "self", ".", "values", "[", "k", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.Scores.reset": [[93, 98], ["hasattr", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "if", "hasattr", "(", "self", ",", "'labels_pred'", ")", ":", "\n", "            ", "self", ".", "prev_labels_pred", "=", "self", ".", "labels_pred", "\n", "", "self", ".", "labels_true", "=", "np", ".", "array", "(", "[", "]", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "self", ".", "labels_pred", "=", "np", ".", "array", "(", "[", "]", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.Scores.update": [[99, 102], ["numpy.hstack", "numpy.hstack", "labels_true.flatten", "labels_pred.flatten"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "labels_true", ",", "labels_pred", ")", ":", "\n", "        ", "self", ".", "labels_true", "=", "np", ".", "hstack", "(", "[", "self", ".", "labels_true", ",", "labels_true", ".", "flatten", "(", ")", "]", ")", "\n", "self", ".", "labels_pred", "=", "np", ".", "hstack", "(", "[", "self", ".", "labels_pred", ",", "labels_pred", ".", "flatten", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.Scores.compute_confusion_matrix": [[103, 119], ["numpy.bincount().reshape", "numpy.argmax", "numpy.vstack().transpose", "numpy.bincount", "scipy.optimize.linear_sum_assignment", "numpy.vstack", "matrix[].sum", "range"], "methods", ["None"], ["", "def", "compute_confusion_matrix", "(", "self", ")", ":", "\n", "# XXX 100x faster than sklearn.metrics.confusion matrix, returns matrix with GT as rows, pred as columns", "\n", "        ", "matrix", "=", "np", ".", "bincount", "(", "self", ".", "n_max_labels", "*", "self", ".", "labels_true", "+", "self", ".", "labels_pred", ",", "\n", "minlength", "=", "self", ".", "n_max_labels", "**", "2", ")", ".", "reshape", "(", "self", ".", "n_max_labels", ",", "self", ".", "n_max_labels", ")", "\n", "matrix", "=", "matrix", "[", ":", "self", ".", "n_classes", ",", ":", "self", ".", "n_clusters", "]", "\n", "if", "self", ".", "n_clusters", "==", "self", ".", "n_classes", ":", "\n", "            ", "if", "self", ".", "linear_mapping", ":", "\n", "# we find the best 1-to-1 assignent with the Hungarian algo", "\n", "                ", "best_assign_idx", "=", "linear_sum_assignment", "(", "-", "matrix", ")", "[", "1", "]", "\n", "matrix", "=", "matrix", "[", ":", ",", "best_assign_idx", "]", "\n", "", "", "else", ":", "\n", "# we assign each cluster to its argmax class and aggregate clusters corresponding to the same class", "\n", "# TODO improve when argmax reached for several indices", "\n", "            ", "indices", "=", "np", ".", "argmax", "(", "matrix", ",", "axis", "=", "0", ")", "\n", "matrix", "=", "np", ".", "vstack", "(", "[", "matrix", "[", ":", ",", "indices", "==", "k", "]", ".", "sum", "(", "axis", "=", "1", ")", "for", "k", "in", "range", "(", "self", ".", "n_classes", ")", "]", ")", ".", "transpose", "(", ")", "\n", "", "return", "matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.SegmentationScores.__init__": [[129, 136], ["metrics.SegmentationScores.reset", "collections.OrderedDict", "zip", "range", "len"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.reset"], ["def", "__init__", "(", "self", ",", "n_classes", ")", ":", "\n", "        ", "self", ".", "n_classes", "=", "n_classes", "# XXX should take a background class into account", "\n", "self", ".", "names", "=", "[", "\"global_acc_nobkg\"", ",", "\"avg_acc_nobkg\"", ",", "\"avg_iou_nobkg\"", ",", "\"global_acc\"", ",", "\"avg_acc\"", ",", "\"avg_iou\"", "]", "+", "[", "f'iou_cls{k}'", "for", "k", "in", "range", "(", "n_classes", ")", "]", "\n", "self", ".", "score_name", "=", "\"avg_iou\"", "\n", "self", ".", "reset", "(", ")", "\n", "self", ".", "values", "=", "OrderedDict", "(", "zip", "(", "self", ".", "names", ",", "[", "0", "]", "*", "len", "(", "self", ".", "names", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.SegmentationScores.__getitem__": [[137, 139], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "k", ")", ":", "\n", "        ", "return", "self", ".", "values", "[", "k", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.SegmentationScores.compute": [[140, 156], ["list", "collections.OrderedDict", "numpy.mean", "numpy.mean", "zip", "scipy.optimize.linear_sum_assignment", "numpy.diag().sum", "hist.sum", "numpy.diag", "hist.sum", "numpy.nan_to_num", "numpy.diag", "numpy.nan_to_num", "numpy.diag", "numpy.diag", "hist.sum", "hist.sum"], "methods", ["None"], ["", "def", "compute", "(", "self", ")", ":", "\n", "        ", "metrics", "=", "[", "]", "\n", "for", "withbkg", "in", "[", "False", ",", "True", "]", ":", "\n", "            ", "hist", "=", "self", ".", "confusion_matrix", "[", "1", ":", ",", "1", ":", "]", "if", "not", "withbkg", "else", "self", ".", "confusion_matrix", "\n", "best_assign_idx", "=", "linear_sum_assignment", "(", "-", "hist", ")", "[", "1", "]", "\n", "hist", "=", "hist", "[", ":", ",", "best_assign_idx", "]", "\n", "global_acc", "=", "np", ".", "diag", "(", "hist", ")", ".", "sum", "(", ")", "/", "hist", ".", "sum", "(", ")", "\n", "acc", "=", "np", ".", "diag", "(", "hist", ")", "/", "hist", ".", "sum", "(", "axis", "=", "1", ")", "\n", "avg_acc", "=", "np", ".", "mean", "(", "np", ".", "nan_to_num", "(", "acc", ")", ")", "\n", "iu", "=", "np", ".", "diag", "(", "hist", ")", "/", "(", "hist", ".", "sum", "(", "axis", "=", "1", ")", "+", "hist", ".", "sum", "(", "axis", "=", "0", ")", "-", "np", ".", "diag", "(", "hist", ")", ")", "\n", "avg_iu", "=", "np", ".", "mean", "(", "np", ".", "nan_to_num", "(", "iu", ")", ")", "\n", "metrics", "+=", "[", "global_acc", ",", "avg_acc", ",", "avg_iu", "]", "\n", "\n", "", "metrics", "+=", "list", "(", "iu", ")", "\n", "self", ".", "values", "=", "OrderedDict", "(", "zip", "(", "self", ".", "names", ",", "metrics", ")", ")", "\n", "return", "self", ".", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.SegmentationScores.reset": [[157, 159], ["numpy.zeros"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "confusion_matrix", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_classes", ",", "self", ".", "n_classes", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.SegmentationScores.update": [[160, 163], ["metrics.SegmentationScores._fast_hist", "label_true.flatten", "label_pred.flatten"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.InstanceSegScores._fast_hist"], ["", "def", "update", "(", "self", ",", "label_true", ",", "label_pred", ")", ":", "\n", "        ", "lt_flat", ",", "lp_flat", "=", "label_true", ".", "flatten", "(", ")", ",", "label_pred", ".", "flatten", "(", ")", "\n", "self", ".", "confusion_matrix", "+=", "self", ".", "_fast_hist", "(", "lt_flat", ",", "lp_flat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.SegmentationScores._fast_hist": [[164, 168], ["numpy.bincount().reshape", "numpy.bincount"], "methods", ["None"], ["", "def", "_fast_hist", "(", "self", ",", "label_true", ",", "label_pred", ")", ":", "\n", "        ", "hist", "=", "np", ".", "bincount", "(", "self", ".", "n_classes", "*", "label_true", "+", "label_pred", ",", "\n", "minlength", "=", "self", ".", "n_classes", "**", "2", ")", ".", "reshape", "(", "self", ".", "n_classes", ",", "self", ".", "n_classes", ")", "\n", "return", "hist", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.InstanceSegScores.__init__": [[172, 179], ["metrics.InstanceSegScores.reset", "collections.OrderedDict", "zip", "len"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.reset"], ["def", "__init__", "(", "self", ",", "n_instances", ",", "with_bkg", "=", "False", ")", ":", "\n", "        ", "self", ".", "n_instances", "=", "n_instances", "# XXX should take a background instance into account", "\n", "self", ".", "names", "=", "[", "\"mean_ari\"", "]", "\n", "self", ".", "score_name", "=", "\"mean_ari\"", "\n", "self", ".", "with_bkg", "=", "with_bkg", "\n", "self", ".", "reset", "(", ")", "\n", "self", ".", "values", "=", "OrderedDict", "(", "zip", "(", "self", ".", "names", ",", "[", "0", "]", "*", "len", "(", "self", ".", "names", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.InstanceSegScores.reset": [[180, 182], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "aris", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.InstanceSegScores.__getitem__": [[183, 185], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "k", ")", ":", "\n", "        ", "return", "self", ".", "values", "[", "k", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.InstanceSegScores.compute": [[186, 189], ["collections.OrderedDict", "zip", "numpy.mean"], "methods", ["None"], ["", "def", "compute", "(", "self", ")", ":", "\n", "        ", "self", ".", "values", "=", "OrderedDict", "(", "zip", "(", "self", ".", "names", ",", "[", "np", ".", "mean", "(", "self", ".", "aris", ")", "]", ")", ")", "\n", "return", "self", ".", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.InstanceSegScores.update": [[190, 195], ["len", "range", "metrics.InstanceSegScores.cpu_ari", "metrics.InstanceSegScores.aris.append"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.InstanceSegScores.cpu_ari"], ["", "def", "update", "(", "self", ",", "label_true", ",", "label_pred", ")", ":", "\n", "        ", "B", "=", "len", "(", "label_true", ")", "\n", "for", "k", "in", "range", "(", "B", ")", ":", "\n", "            ", "ari", "=", "self", ".", "cpu_ari", "(", "label_true", "[", "k", "]", ",", "label_pred", "[", "k", "]", ")", "\n", "self", ".", "aris", ".", "append", "(", "ari", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.InstanceSegScores.cpu_ari": [[196, 213], ["metrics.InstanceSegScores._fast_hist", "sum", "sum", "sum", "metrics._comb2", "label_true.flatten", "label_pred.flatten", "metrics.InstanceSegScores.sum", "metrics._comb2", "metrics._comb2", "metrics._comb2", "numpy.ravel", "numpy.ravel", "metrics.InstanceSegScores.flatten", "metrics.InstanceSegScores.sum", "metrics.InstanceSegScores.sum"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.InstanceSegScores._fast_hist", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics._comb2", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics._comb2", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics._comb2", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics._comb2"], ["", "", "def", "cpu_ari", "(", "self", ",", "label_true", ",", "label_pred", ")", ":", "\n", "        ", "label_true", ",", "label_pred", "=", "label_true", ".", "flatten", "(", ")", ",", "label_pred", ".", "flatten", "(", ")", "\n", "if", "not", "self", ".", "with_bkg", ":", "\n", "# we remove background gt pixels from the computation", "\n", "            ", "good_idx", "=", "label_true", "!=", "0", "\n", "label_true", ",", "label_pred", "=", "label_true", "[", "good_idx", "]", ",", "label_pred", "[", "good_idx", "]", "\n", "", "confusion_matrix", "=", "self", ".", "_fast_hist", "(", "label_true", ",", "label_pred", ")", "\n", "sum_comb_c", "=", "sum", "(", "_comb2", "(", "n_c", ")", "for", "n_c", "in", "np", ".", "ravel", "(", "confusion_matrix", ".", "sum", "(", "axis", "=", "1", ")", ")", ")", "\n", "sum_comb_k", "=", "sum", "(", "_comb2", "(", "n_k", ")", "for", "n_k", "in", "np", ".", "ravel", "(", "confusion_matrix", ".", "sum", "(", "axis", "=", "0", ")", ")", ")", "\n", "sum_comb_table", "=", "sum", "(", "_comb2", "(", "n_ij", ")", "for", "n_ij", "in", "confusion_matrix", ".", "flatten", "(", ")", ")", "\n", "sum_comb_n", "=", "_comb2", "(", "confusion_matrix", ".", "sum", "(", ")", ")", "\n", "if", "(", "sum_comb_c", "==", "sum_comb_k", "==", "sum_comb_n", "==", "sum_comb_table", ")", ":", "\n", "            ", "return", "1.0", "\n", "", "else", ":", "\n", "            ", "prod_comb", "=", "(", "sum_comb_c", "*", "sum_comb_k", ")", "/", "sum_comb_n", "\n", "mean_comb", "=", "(", "sum_comb_k", "+", "sum_comb_c", ")", "/", "2.", "\n", "return", "(", "sum_comb_table", "-", "prod_comb", ")", "/", "(", "mean_comb", "-", "prod_comb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.InstanceSegScores._fast_hist": [[214, 227], ["numpy.bincount().reshape", "utils.logger.print_warning", "numpy.zeros", "enumerate", "numpy.bincount().reshape", "numpy.bincount", "numpy.unique", "numpy.bincount"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.print_warning"], ["", "", "def", "_fast_hist", "(", "self", ",", "label_true", ",", "label_pred", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "hist", "=", "np", ".", "bincount", "(", "self", ".", "n_instances", "*", "label_true", "+", "label_pred", ",", "\n", "minlength", "=", "self", ".", "n_instances", "**", "2", ")", ".", "reshape", "(", "self", ".", "n_instances", ",", "self", ".", "n_instances", ")", "\n", "", "except", "ValueError", ":", "\n", "            ", "print_warning", "(", "'InstanceSegScores._fast_hist error: labels in GT are greater than nb instances'", ")", "\n", "val", "=", "np", ".", "unique", "(", "label_true", ")", "[", "1", ":", "]", "\n", "new_label", "=", "np", ".", "zeros", "(", "label_true", ".", "shape", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "for", "k", ",", "v", "in", "enumerate", "(", "val", ")", ":", "\n", "                ", "new_label", "[", "label_true", "==", "v", "]", "=", "k", "+", "1", "\n", "", "hist", "=", "np", ".", "bincount", "(", "self", ".", "n_instances", "*", "new_label", "+", "label_pred", ",", "\n", "minlength", "=", "self", ".", "n_instances", "**", "2", ")", ".", "reshape", "(", "self", ".", "n_instances", ",", "self", ".", "n_instances", ")", "\n", "", "return", "hist", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageMeter.__init__": [[231, 233], ["metrics.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageMeter.reset": [[234, 239], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageMeter.update": [[240, 245], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "if", "self", ".", "count", "!=", "0", "else", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.__init__": [[249, 251], ["metrics.AverageTensorMeter.reset"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.reset": [[252, 255], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "avg", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics.AverageTensorMeter.update": [[256, 262], ["t.size", "t.mean"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "t", ")", ":", "\n", "        ", "n", "=", "t", ".", "size", "(", "0", ")", "\n", "if", "n", ">", "0", ":", "\n", "            ", "avg", "=", "t", ".", "mean", "(", "dim", "=", "0", ")", "\n", "self", ".", "avg", "=", "(", "self", ".", "count", "*", "self", ".", "avg", "+", "n", "*", "avg", ")", "/", "(", "self", ".", "count", "+", "n", ")", "\n", "self", ".", "count", "+=", "n", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.metrics._comb2": [[10, 14], ["scipy.special.comb"], "function", ["None"], ["def", "_comb2", "(", "n", ")", ":", "\n", "# the exact version is faster for k == 2: use it by default globally in", "\n", "# this module instead of the float approximate variant", "\n", "    ", "return", "comb", "(", "n", ",", "2", ",", "exact", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.get_time": [[18, 20], ["time.strftime"], "function", ["None"], ["", "def", "get_time", "(", ")", ":", "\n", "    ", "return", "time", ".", "strftime", "(", "\"%Y-%m-%d %H:%M:%S\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.print_info": [[22, 24], ["print", "str", "logger.get_time"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.get_time"], ["", "def", "print_info", "(", "s", ")", ":", "\n", "    ", "print", "(", "TerminalColors", ".", "OKBLUE", "+", "\"[\"", "+", "get_time", "(", ")", "+", "\"] \"", "+", "str", "(", "s", ")", "+", "TerminalColors", ".", "ENDC", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.print_warning": [[26, 28], ["print", "str", "logger.get_time"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.get_time"], ["", "def", "print_warning", "(", "s", ")", ":", "\n", "    ", "print", "(", "TerminalColors", ".", "WARNING", "+", "\"[\"", "+", "get_time", "(", ")", "+", "\"] WARN \"", "+", "str", "(", "s", ")", "+", "TerminalColors", ".", "ENDC", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.print_error": [[30, 32], ["print", "str", "logger.get_time"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.get_time"], ["", "def", "print_error", "(", "s", ")", ":", "\n", "    ", "print", "(", "TerminalColors", ".", "FAIL", "+", "\"[\"", "+", "get_time", "(", ")", "+", "\"] ERROR \"", "+", "str", "(", "s", ")", "+", "TerminalColors", ".", "ENDC", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.get_logger": [[34, 44], ["utils.coerce_to_path_and_check_exist", "logging.getLogger", "logging.FileHandler", "logging.Formatter", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "logging.getLogger.setLevel"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_check_exist"], ["", "def", "get_logger", "(", "log_dir", ",", "name", ")", ":", "\n", "    ", "log_dir", "=", "coerce_to_path_and_check_exist", "(", "log_dir", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "name", ")", "\n", "file_path", "=", "log_dir", "/", "\"{}.log\"", ".", "format", "(", "name", ")", "\n", "hdlr", "=", "logging", ".", "FileHandler", "(", "file_path", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "\"[%(asctime)s] %(levelname)s: %(message)s\"", ")", "\n", "hdlr", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "hdlr", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "return", "logger", "\n", "", ""]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.plot.seaborn_context": [[7, 12], ["seaborn.color_palette", "seaborn.axes_style"], "function", ["None"], ["@", "contextmanager", "\n", "def", "seaborn_context", "(", "n_colors", "=", "10", ")", ":", "\n", "    ", "with", "sns", ".", "color_palette", "(", "'colorblind'", ",", "n_colors", ")", ",", "sns", ".", "axes_style", "(", "'white'", ",", "{", "'axes.grid'", ":", "True", ",", "'legend.frameon'", ":", "True", "}", ")", ":", "\n", "        ", "yield", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.plot.plot_lines": [[14, 37], ["isinstance", "plot.seaborn_context", "matplotlib.pyplot.subplots", "ax.grid", "ax.grid", "ax.legend", "ax.set_title", "fig.tight_layout", "len", "ax.set_ylim", "ax.set_yticks", "df[].dropna", "df[].plot", "len", "df[].dropna.plot", "range"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.plot.seaborn_context"], ["", "", "def", "plot_lines", "(", "df", ",", "columns", ",", "title", ",", "figsize", "=", "(", "10", ",", "5.625", ")", ",", "drop_na", "=", "True", ",", "style", "=", "None", ",", "unit_yaxis", "=", "False", ",", "lw", "=", "2", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "columns", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "columns", "=", "[", "columns", "]", "\n", "\n", "", "with", "seaborn_context", "(", "len", "(", "columns", ")", ")", ":", "\n", "        ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "figsize", "=", "figsize", ")", "\n", "for", "y", "in", "columns", ":", "\n", "            ", "if", "drop_na", ":", "\n", "                ", "s", "=", "df", "[", "y", "]", ".", "dropna", "(", ")", "\n", "if", "len", "(", "s", ")", ">", "0", ":", "\n", "                    ", "s", ".", "plot", "(", "ax", "=", "ax", ",", "linewidth", "=", "lw", ",", "style", "=", "style", ")", "\n", "", "", "else", ":", "\n", "                ", "df", "[", "y", "]", ".", "plot", "(", "ax", "=", "ax", ",", "linewidth", "=", "lw", ",", "style", "=", "style", ")", "\n", "", "", "if", "unit_yaxis", ":", "\n", "            ", "ax", ".", "set_ylim", "(", "(", "0", ",", "1", ")", ")", "\n", "ax", ".", "set_yticks", "(", "[", "k", "/", "10", "for", "k", "in", "range", "(", "11", ")", "]", ")", "\n", "", "ax", ".", "grid", "(", "axis", "=", "\"x\"", ",", "which", "=", "'both'", ",", "color", "=", "'0.5'", ",", "linestyle", "=", "'--'", ",", "linewidth", "=", "0.5", ")", "\n", "ax", ".", "grid", "(", "axis", "=", "'y'", ",", "which", "=", "'major'", ",", "color", "=", "'0.5'", ",", "linestyle", "=", "'-'", ",", "linewidth", "=", "0.5", ")", "\n", "ax", ".", "legend", "(", "framealpha", "=", "1", ",", "edgecolor", "=", "'0.3'", ",", "fancybox", "=", "False", ")", "\n", "ax", ".", "set_title", "(", "title", ",", "fontweight", "=", "\"bold\"", ")", "\n", "fig", ".", "tight_layout", "(", ")", "\n", "\n", "", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.plot.plot_bar": [[39, 53], ["isinstance", "plot.seaborn_context", "matplotlib.pyplot.subplots", "df.plot", "ax.grid", "ax.grid", "ax.set_title", "fig.tight_layout", "ax.set_ylim", "ax.set_yticks", "range"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.plot.seaborn_context"], ["", "def", "plot_bar", "(", "df", ",", "title", ",", "figsize", "=", "(", "10", ",", "5.625", ")", ",", "unit_yaxis", "=", "False", ")", ":", "\n", "    ", "assert", "isinstance", "(", "df", ",", "pd", ".", "Series", ")", "\n", "with", "seaborn_context", "(", "1", ")", ":", "\n", "        ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "figsize", "=", "figsize", ")", "\n", "df", ".", "plot", "(", "kind", "=", "'bar'", ",", "ax", "=", "ax", ",", "edgecolor", "=", "'k'", ",", "width", "=", "0.8", ",", "rot", "=", "0", ",", "linewidth", "=", "1", ")", "\n", "if", "unit_yaxis", ":", "\n", "            ", "ax", ".", "set_ylim", "(", "(", "0", ",", "1", ")", ")", "\n", "ax", ".", "set_yticks", "(", "[", "k", "/", "10", "for", "k", "in", "range", "(", "11", ")", "]", ")", "\n", "", "ax", ".", "grid", "(", "axis", "=", "\"x\"", ",", "which", "=", "'both'", ",", "color", "=", "'0.5'", ",", "linestyle", "=", "'--'", ",", "linewidth", "=", "0.5", ")", "\n", "ax", ".", "grid", "(", "axis", "=", "'y'", ",", "which", "=", "'major'", ",", "color", "=", "'0.5'", ",", "linestyle", "=", "'-'", ",", "linewidth", "=", "0.5", ")", "\n", "ax", ".", "set_title", "(", "title", ",", "fontweight", "=", "\"bold\"", ")", "\n", "fig", ".", "tight_layout", "(", ")", "\n", "\n", "", "return", "fig", "\n", "", ""]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.use_seed.__init__": [[73, 77], ["isinstance"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "seed", "=", "None", ")", ":", "\n", "        ", "if", "seed", "is", "not", "None", ":", "\n", "            ", "assert", "isinstance", "(", "seed", ",", "int", ")", "and", "seed", ">=", "0", "\n", "", "self", ".", "seed", "=", "seed", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.use_seed.__enter__": [[78, 89], ["random.getstate", "numpy.random.get_state", "torch.get_rng_state", "random.seed", "numpy.random.seed", "torch.manual_seed"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "seed", "is", "not", "None", ":", "\n", "            ", "self", ".", "rand_state", "=", "rand_get_state", "(", ")", "\n", "self", ".", "np_state", "=", "np_get_state", "(", ")", "\n", "self", ".", "torch_state", "=", "torch_get_state", "(", ")", "\n", "self", ".", "torch_cudnn_deterministic", "=", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "\n", "rand_seed", "(", "self", ".", "seed", ")", "\n", "np_seed", "(", "self", ".", "seed", ")", "\n", "torch_seed", "(", "self", ".", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.use_seed.__exit__": [[90, 96], ["random.setstate", "numpy.random.set_state", "torch.set_rng_state"], "methods", ["None"], ["", "def", "__exit__", "(", "self", ",", "typ", ",", "val", ",", "_traceback", ")", ":", "\n", "        ", "if", "self", ".", "seed", "is", "not", "None", ":", "\n", "            ", "rand_set_state", "(", "self", ".", "rand_state", ")", "\n", "np_set_state", "(", "self", ".", "np_state", ")", "\n", "torch_set_state", "(", "self", ".", "torch_state", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "self", ".", "torch_cudnn_deterministic", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.use_seed.__call__": [[97, 105], ["functools.wraps", "kw.pop", "__init__.use_seed", "f"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "f", ")", ":", "\n", "        ", "@", "wraps", "(", "f", ")", "\n", "def", "wrapper", "(", "*", "args", ",", "**", "kw", ")", ":", "\n", "            ", "seed", "=", "self", ".", "seed", "if", "self", ".", "seed", "is", "not", "None", "else", "kw", ".", "pop", "(", "'seed'", ",", "None", ")", "\n", "with", "use_seed", "(", "seed", ")", ":", "\n", "                ", "return", "f", "(", "*", "args", ",", "**", "kw", ")", "\n", "\n", "", "", "return", "wrapper", "\n", "", "", ""]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_check_exist": [[20, 25], ["pathlib.Path", "pathlib.Path.exists", "FileNotFoundError", "pathlib.Path.absolute"], "function", ["None"], ["def", "coerce_to_path_and_check_exist", "(", "path", ")", ":", "\n", "    ", "path", "=", "Path", "(", "path", ")", "\n", "if", "not", "path", ".", "exists", "(", ")", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "'{} does not exist'", ".", "format", "(", "path", ".", "absolute", "(", ")", ")", ")", "\n", "", "return", "path", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir": [[27, 31], ["pathlib.Path", "pathlib.Path.mkdir"], "function", ["None"], ["", "def", "coerce_to_path_and_create_dir", "(", "path", ")", ":", "\n", "    ", "path", "=", "Path", "(", "path", ")", "\n", "path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "return", "path", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.get_files_from_dir": [[33, 46], ["__init__.coerce_to_path_and_check_exist", "list", "sorted", "f.absolute", "f.absolute", "isinstance", "filter", "coerce_to_path_and_check_exist.glob", "f.is_file", "coerce_to_path_and_check_exist.glob", "f.is_file", "ext.startswith"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_check_exist"], ["", "def", "get_files_from_dir", "(", "dir_path", ",", "valid_extensions", "=", "None", ",", "recursive", "=", "False", ",", "sort", "=", "False", ")", ":", "\n", "    ", "path", "=", "coerce_to_path_and_check_exist", "(", "dir_path", ")", "\n", "if", "recursive", ":", "\n", "        ", "files", "=", "[", "f", ".", "absolute", "(", ")", "for", "f", "in", "path", ".", "glob", "(", "'**/*'", ")", "if", "f", ".", "is_file", "(", ")", "]", "\n", "", "else", ":", "\n", "        ", "files", "=", "[", "f", ".", "absolute", "(", ")", "for", "f", "in", "path", ".", "glob", "(", "'*'", ")", "if", "f", ".", "is_file", "(", ")", "]", "\n", "\n", "", "if", "valid_extensions", "is", "not", "None", ":", "\n", "        ", "valid_extensions", "=", "[", "valid_extensions", "]", "if", "isinstance", "(", "valid_extensions", ",", "str", ")", "else", "valid_extensions", "\n", "valid_extensions", "=", "[", "'.{}'", ".", "format", "(", "ext", ")", "if", "not", "ext", ".", "startswith", "(", "'.'", ")", "else", "ext", "for", "ext", "in", "valid_extensions", "]", "\n", "files", "=", "list", "(", "filter", "(", "lambda", "f", ":", "f", ".", "suffix", "in", "valid_extensions", ",", "files", ")", ")", "\n", "\n", "", "return", "sorted", "(", "files", ")", "if", "sort", "else", "files", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.load_array_from_file": [[48, 56], ["pathlib.Path", "numpy.load", "numpy.array", "NotImplementedError", "PIL.Image.open"], "function", ["None"], ["", "def", "load_array_from_file", "(", "file_path", ")", ":", "\n", "    ", "path", "=", "Path", "(", "file_path", ")", "\n", "if", "path", ".", "suffix", "==", "'.npy'", ":", "\n", "        ", "return", "np", ".", "load", "(", "path", ")", "\n", "", "elif", "path", ".", "suffix", "in", "[", "'.jpg'", ",", "'.jpeg'", "]", ":", "\n", "        ", "return", "np", ".", "array", "(", "Image", ".", "open", "(", "path", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'{} extension is not supported'", ".", "format", "(", "path", ".", "suffix", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.timer": [[58, 70], ["time.time", "print", "time.time"], "function", ["None"], ["", "", "@", "contextmanager", "\n", "def", "timer", "(", "name", ",", "unit", "=", "'s'", ")", ":", "\n", "    ", "start", "=", "time", ".", "time", "(", ")", "\n", "yield", "\n", "delta", "=", "time", ".", "time", "(", ")", "-", "start", "\n", "if", "unit", "==", "'s'", ":", "\n", "        ", "pass", "\n", "", "elif", "unit", "==", "'min'", ":", "\n", "        ", "delta", "/=", "60", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "print", "(", "'{}: {:.2f}{}'", ".", "format", "(", "name", ",", "delta", ",", "unit", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.ImageResizer.__init__": [[75, 86], ["utils.coerce_to_path_and_check_exist", "utils.get_files_from_dir", "utils.coerce_to_path_and_create_dir", "functools.partial", "int", "numpy.ceil", "numpy.log10", "len"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_check_exist", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.get_files_from_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_create_dir"], ["def", "__init__", "(", "self", ",", "input_dir", ",", "output_dir", ",", "size", ",", "in_ext", "=", "IMG_EXTENSIONS", ",", "out_ext", "=", "'jpg'", ",", "keep_aspect_ratio", "=", "True", ",", "\n", "resample", "=", "Image", ".", "ANTIALIAS", ",", "fit_inside", "=", "True", ",", "rename", "=", "False", ",", "verbose", "=", "True", ")", ":", "\n", "        ", "self", ".", "input_dir", "=", "coerce_to_path_and_check_exist", "(", "input_dir", ")", "\n", "self", ".", "files", "=", "get_files_from_dir", "(", "input_dir", ",", "valid_extensions", "=", "in_ext", ",", "recursive", "=", "True", ",", "sort", "=", "True", ")", "\n", "self", ".", "output_dir", "=", "coerce_to_path_and_create_dir", "(", "output_dir", ")", "\n", "self", ".", "out_extension", "=", "out_ext", "\n", "self", ".", "resize_func", "=", "partial", "(", "resize", ",", "size", "=", "size", ",", "keep_aspect_ratio", "=", "keep_aspect_ratio", ",", "resample", "=", "resample", ",", "\n", "fit_inside", "=", "fit_inside", ")", "\n", "self", ".", "rename", "=", "rename", "\n", "self", ".", "name_size", "=", "int", "(", "np", ".", "ceil", "(", "np", ".", "log10", "(", "len", "(", "self", ".", "files", ")", ")", ")", ")", "\n", "self", ".", "verbose", "=", "verbose", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.ImageResizer.run": [[87, 95], ["enumerate", "PIL.Image.open().convert", "image.ImageResizer.resize_func", "image.ImageResizer.save", "utils.logger.print_info", "str().zfill", "PIL.Image.open", "str"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.print_info"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "for", "k", ",", "filename", "in", "enumerate", "(", "self", ".", "files", ")", ":", "\n", "            ", "if", "self", ".", "verbose", ":", "\n", "                ", "print_info", "(", "'Resizing and saving {}'", ".", "format", "(", "filename", ")", ")", "\n", "", "img", "=", "Image", ".", "open", "(", "filename", ")", ".", "convert", "(", "'RGB'", ")", "\n", "img", "=", "self", ".", "resize_func", "(", "img", ")", "\n", "name", "=", "str", "(", "k", ")", ".", "zfill", "(", "self", ".", "name_size", ")", "if", "self", ".", "rename", "else", "filename", ".", "stem", "\n", "img", ".", "save", "(", "self", ".", "output_dir", "/", "'{}.{}'", ".", "format", "(", "name", ",", "self", ".", "out_extension", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.resize": [[14, 24], ["isinstance", "img.resize", "image.resize", "float", "float", "round", "round", "min", "max", "zip", "zip"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.resize", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.resize"], ["def", "resize", "(", "img", ",", "size", ",", "keep_aspect_ratio", "=", "True", ",", "resample", "=", "Image", ".", "ANTIALIAS", ",", "fit_inside", "=", "True", ")", ":", "\n", "    ", "if", "isinstance", "(", "size", ",", "int", ")", ":", "\n", "        ", "return", "resize", "(", "img", ",", "(", "size", ",", "size", ")", ",", "keep_aspect_ratio", "=", "keep_aspect_ratio", ",", "resample", "=", "resample", ",", "fit_inside", "=", "fit_inside", ")", "\n", "", "elif", "keep_aspect_ratio", ":", "\n", "        ", "if", "fit_inside", ":", "\n", "            ", "ratio", "=", "float", "(", "min", "(", "[", "s1", "/", "s2", "for", "s1", ",", "s2", "in", "zip", "(", "size", ",", "img", ".", "size", ")", "]", ")", ")", "# XXX bug with np.float64 and round", "\n", "", "else", ":", "\n", "            ", "ratio", "=", "float", "(", "max", "(", "[", "s1", "/", "s2", "for", "s1", ",", "s2", "in", "zip", "(", "size", ",", "img", ".", "size", ")", "]", ")", ")", "# XXX bug with np.float64 and round", "\n", "", "size", "=", "round", "(", "ratio", "*", "img", ".", "size", "[", "0", "]", ")", ",", "round", "(", "ratio", "*", "img", ".", "size", "[", "1", "]", ")", "\n", "", "return", "img", ".", "resize", "(", "size", ",", "resample", "=", "resample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_img": [[26, 40], ["isinstance", "isinstance", "numpy.issubdtype", "PIL.Image.fromarray().convert", "arr.unsqueeze.permute().detach().cpu().numpy", "len", "arr.unsqueeze.squeeze", "len", "arr.unsqueeze.clip", "PIL.Image.fromarray", "len", "arr.unsqueeze.unsqueeze", "arr.unsqueeze.permute().detach().cpu", "arr.unsqueeze.astype", "arr.unsqueeze.permute().detach", "arr.unsqueeze.permute"], "function", ["None"], ["", "def", "convert_to_img", "(", "arr", ")", ":", "\n", "    ", "if", "isinstance", "(", "arr", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "if", "len", "(", "arr", ".", "shape", ")", "==", "4", ":", "\n", "            ", "arr", "=", "arr", ".", "squeeze", "(", "0", ")", "\n", "", "elif", "len", "(", "arr", ".", "shape", ")", "==", "2", ":", "\n", "            ", "arr", "=", "arr", ".", "unsqueeze", "(", "0", ")", "\n", "", "arr", "=", "arr", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "assert", "isinstance", "(", "arr", ",", "np", ".", "ndarray", ")", "\n", "if", "len", "(", "arr", ".", "shape", ")", "==", "3", "and", "arr", ".", "shape", "[", "2", "]", "==", "1", ":", "\n", "        ", "arr", "=", "arr", "[", ":", ",", ":", ",", "0", "]", "\n", "", "if", "np", ".", "issubdtype", "(", "arr", ".", "dtype", ",", "np", ".", "floating", ")", ":", "\n", "        ", "arr", "=", "(", "arr", ".", "clip", "(", "0", ",", "1", ")", "*", "255", ")", "\n", "", "return", "Image", ".", "fromarray", "(", "arr", ".", "astype", "(", "np", ".", "uint8", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.convert_to_rgba": [[42, 45], ["PIL.Image.fromarray", "isinstance", "len", "t.size", "t.permute().detach().cpu().numpy().clip", "t.permute().detach().cpu().numpy", "t.permute().detach().cpu", "t.permute().detach", "t.permute"], "function", ["None"], ["", "def", "convert_to_rgba", "(", "t", ")", ":", "\n", "    ", "assert", "isinstance", "(", "t", ",", "(", "torch", ".", "Tensor", ",", ")", ")", "and", "len", "(", "t", ".", "size", "(", ")", ")", "==", "3", "\n", "return", "Image", ".", "fromarray", "(", "(", "t", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "clip", "(", "0", ",", "1", ")", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", ",", "'RGBA'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.save_gif": [[47, 61], ["sorted", "utils.get_files_from_dir", "len", "int", "imgs[].save", "PIL.Image.open().convert", "utils.logger.print_warning", "list", "int", "map", "len", "PIL.Image.open", "image.resize"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.get_files_from_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.src.trainer.Trainer.save", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.print_warning", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.resize"], ["", "def", "save_gif", "(", "path", ",", "name", ",", "in_ext", "=", "'jpg'", ",", "size", "=", "None", ",", "total_sec", "=", "10", ")", ":", "\n", "    ", "files", "=", "sorted", "(", "get_files_from_dir", "(", "path", ",", "in_ext", ")", ",", "key", "=", "lambda", "p", ":", "int", "(", "p", ".", "stem", ")", ")", "\n", "try", ":", "\n", "# XXX images MUST be converted to adaptive color palette otherwise resulting gif has very bad quality", "\n", "        ", "imgs", "=", "[", "Image", ".", "open", "(", "f", ")", ".", "convert", "(", "'P'", ",", "palette", "=", "Image", ".", "ADAPTIVE", ")", "for", "f", "in", "files", "]", "\n", "", "except", "OSError", "as", "e", ":", "\n", "        ", "print_warning", "(", "e", ")", "\n", "return", "None", "\n", "\n", "", "if", "len", "(", "imgs", ")", ">", "0", ":", "\n", "        ", "if", "size", "is", "not", "None", "and", "size", "!=", "imgs", "[", "0", "]", ".", "size", ":", "\n", "            ", "imgs", "=", "list", "(", "map", "(", "lambda", "i", ":", "resize", "(", "i", ",", "size", "=", "size", ")", ",", "imgs", ")", ")", "\n", "", "tpf", "=", "int", "(", "total_sec", "*", "1000", "/", "len", "(", "files", ")", ")", "\n", "imgs", "[", "0", "]", ".", "save", "(", "path", ".", "parent", "/", "name", ",", "optimize", "=", "False", ",", "save_all", "=", "True", ",", "append_images", "=", "imgs", "[", "1", ":", "]", ",", "duration", "=", "tpf", ",", "loop", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.image.draw_border": [[63, 71], ["numpy.asarray", "range", "PIL.Image.fromarray"], "function", ["None"], ["", "", "def", "draw_border", "(", "img", ",", "color", ",", "width", ")", ":", "\n", "    ", "a", "=", "np", ".", "asarray", "(", "img", ")", "\n", "for", "k", "in", "range", "(", "width", ")", ":", "\n", "        ", "a", "[", "k", ",", ":", "]", "=", "color", "\n", "a", "[", "-", "k", "-", "1", ",", ":", "]", "=", "color", "\n", "a", "[", ":", ",", "k", "]", "=", "color", "\n", "a", "[", ":", ",", "-", "k", "-", "1", "]", "=", "color", "\n", "", "return", "Image", ".", "fromarray", "(", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.scheduler.__init__.ConstantLR.__init__": [[21, 23], ["torch.optim.lr_scheduler._LRScheduler.__init__"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__"], ["    ", "path", "=", "Path", "(", "path", ")", "\n", "if", "not", "path", ".", "exists", "(", ")", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "'{} does not exist'", ".", "format", "(", "path", ".", "absolute", "(", ")", ")", ")", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.scheduler.__init__.ConstantLR.get_lr": [[24, 26], ["None"], "methods", ["None"], ["", "return", "path", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.scheduler.__init__.ConstantLR.__str__": [[27, 29], ["None"], "methods", ["None"], ["", "def", "coerce_to_path_and_create_dir", "(", "path", ")", ":", "\n", "    ", "path", "=", "Path", "(", "path", ")", "\n", "path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.scheduler.__init__.PolynomialLR.__init__": [[32, 37], ["torch.optim.lr_scheduler._LRScheduler.__init__"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__"], ["\n", "", "def", "get_files_from_dir", "(", "dir_path", ",", "valid_extensions", "=", "None", ",", "recursive", "=", "False", ",", "sort", "=", "False", ")", ":", "\n", "    ", "path", "=", "coerce_to_path_and_check_exist", "(", "dir_path", ")", "\n", "if", "recursive", ":", "\n", "        ", "files", "=", "[", "f", ".", "absolute", "(", ")", "for", "f", "in", "path", ".", "glob", "(", "'**/*'", ")", "if", "f", ".", "is_file", "(", ")", "]", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.scheduler.__init__.PolynomialLR.get_lr": [[38, 44], ["float"], "methods", ["None"], ["        ", "files", "=", "[", "f", ".", "absolute", "(", ")", "for", "f", "in", "path", ".", "glob", "(", "'*'", ")", "if", "f", ".", "is_file", "(", ")", "]", "\n", "\n", "", "if", "valid_extensions", "is", "not", "None", ":", "\n", "        ", "valid_extensions", "=", "[", "valid_extensions", "]", "if", "isinstance", "(", "valid_extensions", ",", "str", ")", "else", "valid_extensions", "\n", "valid_extensions", "=", "[", "'.{}'", ".", "format", "(", "ext", ")", "if", "not", "ext", ".", "startswith", "(", "'.'", ")", "else", "ext", "for", "ext", "in", "valid_extensions", "]", "\n", "files", "=", "list", "(", "filter", "(", "lambda", "f", ":", "f", ".", "suffix", "in", "valid_extensions", ",", "files", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.scheduler.__init__.PolynomialLR.__str__": [[45, 53], ["None"], "methods", ["None"], ["", "return", "sorted", "(", "files", ")", "if", "sort", "else", "files", "\n", "\n", "\n", "", "def", "load_array_from_file", "(", "file_path", ")", ":", "\n", "    ", "path", "=", "Path", "(", "file_path", ")", "\n", "if", "path", ".", "suffix", "==", "'.npy'", ":", "\n", "        ", "return", "np", ".", "load", "(", "path", ")", "\n", "", "elif", "path", ".", "suffix", "in", "[", "'.jpg'", ",", "'.jpeg'", "]", ":", "\n", "        ", "return", "np", ".", "array", "(", "Image", ".", "open", "(", "path", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.scheduler.__init__.MultiStepLR.__init__": [[70, 78], ["collections.Counter", "torch.optim.lr_scheduler._LRScheduler.__init__", "isinstance", "len"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__"], ["\n", "\n", "", "class", "use_seed", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "seed", "=", "None", ")", ":", "\n", "        ", "if", "seed", "is", "not", "None", ":", "\n", "            ", "assert", "isinstance", "(", "seed", ",", "int", ")", "and", "seed", ">=", "0", "\n", "", "self", ".", "seed", "=", "seed", "\n", "\n", "", "def", "__enter__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.scheduler.__init__.MultiStepLR.get_lr": [[79, 91], ["warnings.warn", "zip"], "methods", ["None"], ["        ", "if", "self", ".", "seed", "is", "not", "None", ":", "\n", "            ", "self", ".", "rand_state", "=", "rand_get_state", "(", ")", "\n", "self", ".", "np_state", "=", "np_get_state", "(", ")", "\n", "self", ".", "torch_state", "=", "torch_get_state", "(", ")", "\n", "self", ".", "torch_cudnn_deterministic", "=", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "\n", "rand_seed", "(", "self", ".", "seed", ")", "\n", "np_seed", "(", "self", ".", "seed", ")", "\n", "torch_seed", "(", "self", ".", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "", "return", "self", "\n", "\n", "", "def", "__exit__", "(", "self", ",", "typ", ",", "val", ",", "_traceback", ")", ":", "\n", "        ", "if", "self", ".", "seed", "is", "not", "None", ":", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.scheduler.__init__.MultiStepLR._get_closed_form_lr": [[92, 99], ["list", "sorted", "__init__.MultiStepLR.milestones.elements", "zip", "bisect.bisect_right"], "methods", ["None"], ["            ", "rand_set_state", "(", "self", ".", "rand_state", ")", "\n", "np_set_state", "(", "self", ".", "np_state", ")", "\n", "torch_set_state", "(", "self", ".", "torch_state", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "self", ".", "torch_cudnn_deterministic", "\n", "\n", "", "", "def", "__call__", "(", "self", ",", "f", ")", ":", "\n", "        ", "@", "wraps", "(", "f", ")", "\n", "def", "wrapper", "(", "*", "args", ",", "**", "kw", ")", ":", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.scheduler.__init__.get_scheduler": [[8, 18], ["None"], "function", ["None"], ["from", "numpy", ".", "random", "import", "seed", "as", "np_seed", "\n", "from", "numpy", ".", "random", "import", "get_state", "as", "np_get_state", "\n", "from", "numpy", ".", "random", "import", "set_state", "as", "np_set_state", "\n", "from", "random", "import", "seed", "as", "rand_seed", "\n", "from", "random", "import", "getstate", "as", "rand_get_state", "\n", "from", "random", "import", "setstate", "as", "rand_set_state", "\n", "import", "torch", "\n", "from", "torch", "import", "manual_seed", "as", "torch_seed", "\n", "from", "torch", "import", "get_rng_state", "as", "torch_get_state", "\n", "from", "torch", "import", "set_rng_state", "as", "torch_set_state", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.torch_transforms.TensorResize.__init__": [[5, 7], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "img_size", ")", ":", "\n", "        ", "self", ".", "img_size", "=", "img_size", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.torch_transforms.TensorResize.__call__": [[8, 11], ["torch.nn.functional.interpolate", "img.unsqueeze"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "# XXX interpolate first dim is a batch dim", "\n", "        ", "return", "F", ".", "interpolate", "(", "img", ".", "unsqueeze", "(", "0", ")", ",", "self", ".", "img_size", ",", "mode", "=", "'bilinear'", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.torch_transforms.TensorResize.__repr__": [[12, 14], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'()'", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.torch_transforms.TensorCenterCrop.__init__": [[17, 19], ["isinstance"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "img_size", ")", ":", "\n", "        ", "self", ".", "img_size", "=", "(", "img_size", ",", "img_size", ")", "if", "isinstance", "(", "img_size", ",", "int", ")", "else", "img_size", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.torch_transforms.TensorCenterCrop.__call__": [[20, 27], ["int", "int"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "image_width", ",", "image_height", "=", "img", ".", "shape", "[", "-", "2", ":", "]", "\n", "height", ",", "width", "=", "self", ".", "img_size", "\n", "\n", "top", "=", "int", "(", "(", "image_height", "-", "height", "+", "1", ")", "*", "0.5", ")", "\n", "left", "=", "int", "(", "(", "image_width", "-", "width", "+", "1", ")", "*", "0.5", ")", "\n", "return", "img", "[", "...", ",", "top", ":", "top", "+", "height", ",", "left", ":", "left", "+", "width", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.torch_transforms.TensorCenterCrop.__repr__": [[28, 30], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'()'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.cosegmentation.WeizmannHorseDataset.__init__": [[19, 26], ["utils.coerce_to_path_and_check_exist", "utils.get_files_from_dir", "utils.get_files_from_dir", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_check_exist", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.get_files_from_dir", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.get_files_from_dir"], ["def", "__init__", "(", "self", ",", "split", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "split", "=", "split", "\n", "self", ".", "data_path", "=", "coerce_to_path_and_check_exist", "(", "self", ".", "root", "/", "self", ".", "name", ")", "\n", "self", ".", "input_files", "=", "get_files_from_dir", "(", "self", ".", "data_path", "/", "'images'", ",", "'jpg'", ",", "sort", "=", "True", ")", "\n", "self", ".", "label_files", "=", "get_files_from_dir", "(", "self", ".", "data_path", "/", "'masks'", ",", "'png'", ",", "sort", "=", "True", ")", "\n", "assert", "len", "(", "self", ".", "input_files", ")", "==", "len", "(", "self", ".", "label_files", ")", "\n", "self", ".", "size", "=", "30", "if", "self", ".", "split", "==", "'val'", "else", "len", "(", "self", ".", "input_files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.cosegmentation.WeizmannHorseDataset.__len__": [[27, 29], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.cosegmentation.WeizmannHorseDataset.__getitem__": [[30, 34], ["cosegmentation.WeizmannHorseDataset.transform", "cosegmentation.WeizmannHorseDataset.transform_gt", "PIL.Image.open().convert", "PIL.Image.open", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.multi_object._AbstractMultiObjectDataset.transform_gt"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "inp", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "input_files", "[", "idx", "]", ")", ".", "convert", "(", "'RGB'", ")", ")", "\n", "label", "=", "self", ".", "transform_gt", "(", "Image", ".", "open", "(", "self", ".", "label_files", "[", "idx", "]", ")", ")", "\n", "return", "inp", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.cosegmentation.WeizmannHorseDataset.transform": [[35, 39], ["functools.lru_cache", "torchvision.transforms.Compose", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor"], "methods", ["None"], ["", "@", "property", "\n", "@", "lru_cache", "(", ")", "\n", "def", "transform", "(", "self", ")", ":", "\n", "        ", "return", "Compose", "(", "[", "Resize", "(", "self", ".", "img_size", ")", ",", "ToTensor", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.cosegmentation.WeizmannHorseDataset.transform_gt": [[40, 44], ["functools.lru_cache", "torchvision.transforms.Compose", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor"], "methods", ["None"], ["", "@", "property", "\n", "@", "lru_cache", "(", ")", "\n", "def", "transform_gt", "(", "self", ")", ":", "\n", "        ", "return", "Compose", "(", "[", "Resize", "(", "self", ".", "img_size", ",", "interpolation", "=", "Image", ".", "NEAREST", ")", ",", "ToTensor", "(", ")", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.multi_object._AbstractMultiObjectDataset.__init__": [[23, 37], ["utils.coerce_to_path_and_check_exist", "kwargs.get", "kwargs.get", "utils.use_seed", "numpy.random.choice", "range"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_check_exist"], ["def", "__init__", "(", "self", ",", "split", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "data_path", "=", "coerce_to_path_and_check_exist", "(", "self", ".", "root", "/", "self", ".", "name", ")", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "eval_mode", "=", "kwargs", ".", "get", "(", "'eval_mode'", ",", "False", ")", "or", "split", "==", "'test'", "\n", "self", ".", "eval_semantic", "=", "kwargs", ".", "get", "(", "'eval_semantic'", ",", "False", ")", "\n", "\n", "if", "self", ".", "eval_mode", ":", "\n", "            ", "self", ".", "size", "=", "320", "\n", "", "elif", "split", "==", "'val'", ":", "\n", "            ", "with", "use_seed", "(", "42", ")", ":", "\n", "                ", "self", ".", "val_indices", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "self", ".", "N", ")", ",", "100", ",", "replace", "=", "False", ")", "\n", "", "self", ".", "size", "=", "100", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "self", ".", "N", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.multi_object._AbstractMultiObjectDataset.__len__": [[38, 40], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.multi_object._AbstractMultiObjectDataset.__getitem__": [[41, 51], ["multi_object._AbstractMultiObjectDataset.transform", "PIL.Image.open().convert", "PIL.Image.open", "multi_object._AbstractMultiObjectDataset.transform_gt", "multi_object._AbstractMultiObjectDataset.transform_gt", "PIL.Image.open().convert", "PIL.Image.open().convert", "PIL.Image.open", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform", "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.multi_object._AbstractMultiObjectDataset.transform_gt", "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.multi_object._AbstractMultiObjectDataset.transform_gt"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "path", "=", "self", ".", "data_path", "\n", "if", "self", ".", "split", "==", "'val'", ":", "\n", "            ", "idx", "=", "self", ".", "val_indices", "[", "idx", "]", "\n", "", "inp", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "path", "/", "'images'", "/", "f'{idx}.png'", ")", ".", "convert", "(", "'RGB'", ")", ")", "\n", "if", "self", ".", "eval_semantic", ":", "\n", "            ", "label", "=", "(", "self", ".", "transform_gt", "(", "Image", ".", "open", "(", "path", "/", "'sem_masks'", "/", "f'{idx}.png'", ")", ".", "convert", "(", "'L'", ")", ")", "*", "255", ")", ".", "long", "(", ")", "\n", "", "else", ":", "\n", "            ", "label", "=", "(", "self", ".", "transform_gt", "(", "Image", ".", "open", "(", "path", "/", "'masks'", "/", "f'{idx}.png'", ")", ".", "convert", "(", "'L'", ")", ")", "*", "255", ")", ".", "long", "(", ")", "\n", "", "return", "inp", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.multi_object._AbstractMultiObjectDataset.transform": [[52, 56], ["functools.lru_cache", "torchvision.transforms.Compose", "torchvision.transforms.ToTensor"], "methods", ["None"], ["", "@", "property", "\n", "@", "lru_cache", "(", ")", "\n", "def", "transform", "(", "self", ")", ":", "\n", "        ", "return", "Compose", "(", "[", "ToTensor", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.multi_object._AbstractMultiObjectDataset.transform_gt": [[57, 61], ["functools.lru_cache", "torchvision.transforms.Compose", "torchvision.transforms.ToTensor"], "methods", ["None"], ["", "@", "property", "\n", "@", "lru_cache", "(", ")", "\n", "def", "transform_gt", "(", "self", ")", ":", "\n", "        ", "return", "Compose", "(", "[", "ToTensor", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.gtsrb.GTSRB8Dataset.__init__": [[20, 40], ["utils.coerce_to_path_and_check_exist", "utils.get_files_from_dir", "numpy.asarray", "numpy.asarray", "numpy.isin", "numpy.asarray", "len", "int", "list", "enumerate", "good_labels.keys", "utils.use_seed", "numpy.random.choice", "range"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_check_exist", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.get_files_from_dir"], ["def", "__init__", "(", "self", ",", "split", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "data_path", "=", "coerce_to_path_and_check_exist", "(", "self", ".", "root", "/", "'GTSRB'", ")", "\n", "self", ".", "split", "=", "split", "\n", "input_files", "=", "get_files_from_dir", "(", "self", ".", "data_path", "/", "'train'", ",", "IMG_EXTENSIONS", ",", "sort", "=", "True", ",", "recursive", "=", "True", ")", "\n", "labels", "=", "[", "int", "(", "f", ".", "parent", ".", "name", ")", "for", "f", "in", "input_files", "]", "\n", "self", ".", "input_files", "=", "np", ".", "asarray", "(", "input_files", ")", "\n", "self", ".", "labels", "=", "np", ".", "asarray", "(", "labels", ")", "\n", "\n", "# We filter the dataset to keep 8 classes", "\n", "good_labels", "=", "{", "k", ":", "i", "for", "i", ",", "k", "in", "enumerate", "(", "[", "3", ",", "7", ",", "9", ",", "11", ",", "17", ",", "18", ",", "25", ",", "35", "]", ")", "}", "\n", "mask", "=", "np", ".", "isin", "(", "self", ".", "labels", ",", "list", "(", "good_labels", ".", "keys", "(", ")", ")", ")", "\n", "self", ".", "input_files", "=", "self", ".", "input_files", "[", "mask", "]", "\n", "self", ".", "labels", "=", "np", ".", "asarray", "(", "[", "good_labels", "[", "l", "]", "for", "l", "in", "self", ".", "labels", "[", "mask", "]", "]", ")", "\n", "\n", "N", "=", "len", "(", "self", ".", "input_files", ")", "\n", "if", "split", "==", "'val'", ":", "\n", "            ", "with", "use_seed", "(", "46", ")", ":", "\n", "                ", "indices", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "N", ")", ",", "100", ",", "replace", "=", "False", ")", "\n", "", "self", ".", "input_files", "=", "self", ".", "input_files", "[", "indices", "]", "\n", "self", ".", "labels", "=", "self", ".", "labels", "[", "indices", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.gtsrb.GTSRB8Dataset.__len__": [[41, 43], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "input_files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.gtsrb.GTSRB8Dataset.__getitem__": [[44, 47], ["gtsrb.GTSRB8Dataset.transform", "PIL.Image.open().convert", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "inp", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "input_files", "[", "idx", "]", ")", ".", "convert", "(", "'RGB'", ")", ")", "\n", "return", "inp", ",", "self", ".", "labels", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.gtsrb.GTSRB8Dataset.transform": [[48, 52], ["functools.lru_cache", "torchvision.transforms.Compose", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor"], "methods", ["None"], ["", "@", "property", "\n", "@", "lru_cache", "(", ")", "\n", "def", "transform", "(", "self", ")", ":", "\n", "        ", "return", "Compose", "(", "[", "Resize", "(", "self", ".", "img_size", ")", ",", "ToTensor", "(", ")", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.instagram.InstagramDataset.__init__": [[19, 31], ["len", "utils.coerce_to_path_and_check_exist", "utils.get_files_from_dir", "len"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_check_exist", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.get_files_from_dir"], ["def", "__init__", "(", "self", ",", "split", ",", "tag", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "data_path", "=", "coerce_to_path_and_check_exist", "(", "self", ".", "root", "/", "self", ".", "name", "/", "tag", ")", "/", "split", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "tag", "=", "tag", "\n", "try", ":", "\n", "            ", "input_files", "=", "get_files_from_dir", "(", "self", ".", "data_path", ",", "IMG_EXTENSIONS", ",", "sort", "=", "True", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "            ", "input_files", "=", "[", "]", "\n", "", "self", ".", "input_files", "=", "input_files", "\n", "self", ".", "labels", "=", "[", "-", "1", "]", "*", "len", "(", "input_files", ")", "\n", "self", ".", "n_classes", "=", "0", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "input_files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.instagram.InstagramDataset.__len__": [[32, 34], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.instagram.InstagramDataset.__getitem__": [[35, 38], ["instagram.InstagramDataset.transform", "PIL.Image.open().convert", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "inp", "=", "self", ".", "transform", "(", "Image", ".", "open", "(", "self", ".", "input_files", "[", "idx", "]", ")", ".", "convert", "(", "'RGB'", ")", ")", "\n", "return", "inp", ",", "self", ".", "labels", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.instagram.InstagramDataset.transform": [[39, 43], ["functools.lru_cache", "torchvision.transforms.Compose", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor"], "methods", ["None"], ["", "@", "property", "\n", "@", "lru_cache", "(", ")", "\n", "def", "transform", "(", "self", ")", ":", "\n", "        ", "return", "Compose", "(", "[", "CenterCrop", "(", "self", ".", "img_size", ")", ",", "ToTensor", "(", ")", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.__init__.get_dataset": [[8, 25], ["None"], "function", ["None"], ["from", "numpy", ".", "random", "import", "seed", "as", "np_seed", "\n", "from", "numpy", ".", "random", "import", "get_state", "as", "np_get_state", "\n", "from", "numpy", ".", "random", "import", "set_state", "as", "np_set_state", "\n", "from", "random", "import", "seed", "as", "rand_seed", "\n", "from", "random", "import", "getstate", "as", "rand_get_state", "\n", "from", "random", "import", "setstate", "as", "rand_set_state", "\n", "import", "torch", "\n", "from", "torch", "import", "manual_seed", "as", "torch_seed", "\n", "from", "torch", "import", "get_rng_state", "as", "torch_get_state", "\n", "from", "torch", "import", "set_rng_state", "as", "torch_set_state", "\n", "\n", "\n", "def", "coerce_to_path_and_check_exist", "(", "path", ")", ":", "\n", "    ", "path", "=", "Path", "(", "path", ")", "\n", "if", "not", "path", ".", "exists", "(", ")", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "'{} does not exist'", ".", "format", "(", "path", ".", "absolute", "(", ")", ")", ")", "\n", "", "return", "path", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.torchvision._AbstractTorchvisionDataset.__init__": [[28, 75], ["torch.utils.data.dataset.Dataset.__init__", "kwargs.get", "kwargs.get", "torchvision._AbstractTorchvisionDataset.dataset_class", "max", "isinstance", "len", "len", "utils.use_seed", "numpy.random.choice", "hasattr", "round", "len", "hasattr", "torchvision._AbstractTorchvisionDataset.dataset_class", "torch.utils.data.dataset.ConcatDataset", "range", "utils.use_seed", "numpy.random.choice", "sets.append", "len", "len", "range", "numpy.asarray", "numpy.asarray", "torchvision._AbstractTorchvisionDataset.dataset_class", "len"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__"], ["def", "__init__", "(", "self", ",", "split", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "eval_mode", "=", "kwargs", ".", "get", "(", "'eval_mode'", ",", "False", ")", "\n", "\n", "img_size", "=", "kwargs", ".", "get", "(", "'img_size'", ")", "\n", "if", "img_size", "is", "not", "None", ":", "\n", "            ", "self", ".", "img_size", "=", "(", "img_size", ",", "img_size", ")", "if", "isinstance", "(", "img_size", ",", "int", ")", "else", "img_size", "\n", "assert", "len", "(", "img_size", ")", "==", "2", "\n", "\n", "", "kwargs", "=", "{", "}", "\n", "if", "self", ".", "name", "in", "[", "'svhn'", "]", ":", "\n", "            ", "kwargs", "[", "'split'", "]", "=", "'test'", "\n", "", "else", ":", "\n", "            ", "kwargs", "[", "'train'", "]", "=", "False", "\n", "", "dataset", "=", "self", ".", "dataset_class", "(", "root", "=", "self", ".", "root", ",", "transform", "=", "self", ".", "transform", ",", "download", "=", "True", ",", "**", "kwargs", ")", "\n", "if", "self", ".", "n_samples", "is", "not", "None", ":", "\n", "            ", "assert", "self", ".", "n_samples", "<", "len", "(", "dataset", ")", "\n", "with", "use_seed", "(", "46", ")", ":", "\n", "                ", "indices", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "len", "(", "dataset", ")", ")", ",", "self", ".", "n_samples", ",", "replace", "=", "False", ")", "\n", "", "dataset", ".", "data", "=", "dataset", ".", "data", "[", "indices", "]", "\n", "dataset", ".", "targets", "=", "dataset", ".", "targets", "[", "indices", "]", "if", "hasattr", "(", "dataset", ",", "'targets'", ")", "else", "dataset", ".", "labels", "[", "indices", "]", "\n", "\n", "", "if", "split", "==", "'val'", ":", "\n", "            ", "n_val", "=", "max", "(", "round", "(", "VAL_SPLIT_RATIO", "*", "len", "(", "dataset", ")", ")", ",", "100", ")", "\n", "if", "n_val", "<", "len", "(", "dataset", ")", ":", "\n", "                ", "with", "use_seed", "(", "46", ")", ":", "\n", "                    ", "indices", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "len", "(", "dataset", ")", ")", ",", "n_val", ",", "replace", "=", "False", ")", "\n", "\n", "", "dataset", ".", "data", "=", "dataset", ".", "data", "[", "indices", "]", "\n", "if", "hasattr", "(", "dataset", ",", "'targets'", ")", ":", "\n", "                    ", "dataset", ".", "targets", "=", "np", ".", "asarray", "(", "dataset", ".", "targets", ")", "[", "indices", "]", "\n", "", "else", ":", "\n", "                    ", "dataset", ".", "labels", "=", "np", ".", "asarray", "(", "dataset", ".", "labels", ")", "[", "indices", "]", "\n", "", "", "", "elif", "not", "self", ".", "test_split_only", "and", "self", ".", "n_samples", "is", "None", ":", "\n", "            ", "kwargs", "=", "{", "}", "\n", "if", "self", ".", "name", "in", "[", "'svhn'", "]", ":", "\n", "                ", "kwargs", "[", "'split'", "]", "=", "'train'", "\n", "", "else", ":", "\n", "                ", "kwargs", "[", "'train'", "]", "=", "True", "\n", "", "train_dataset", "=", "self", ".", "dataset_class", "(", "root", "=", "self", ".", "root", ",", "transform", "=", "self", ".", "transform", ",", "download", "=", "True", ",", "**", "kwargs", ")", "\n", "sets", "=", "[", "dataset", ",", "train_dataset", "]", "\n", "if", "self", ".", "name", "==", "'svhn'", "and", "not", "self", ".", "eval_mode", ":", "\n", "                ", "sets", ".", "append", "(", "self", ".", "dataset_class", "(", "root", "=", "self", ".", "root", ",", "transform", "=", "self", ".", "transform", ",", "download", "=", "True", ",", "split", "=", "'extra'", ")", ")", "\n", "", "dataset", "=", "ConcatDataset", "(", "sets", ")", "\n", "\n", "", "self", ".", "dataset", "=", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.torchvision._AbstractTorchvisionDataset.transform": [[76, 83], ["transform.append", "torchvision.transforms.Compose", "transform.append", "torchvision.transforms.ToTensor", "torchvision.transforms.Resize"], "methods", ["None"], ["", "@", "property", "\n", "def", "transform", "(", "self", ")", ":", "\n", "        ", "transform", "=", "[", "]", "\n", "if", "self", ".", "img_size", "!=", "self", ".", "__class__", ".", "img_size", ":", "\n", "            ", "transform", ".", "append", "(", "Resize", "(", "self", ".", "img_size", ")", ")", "\n", "", "transform", ".", "append", "(", "ToTensor", "(", ")", ")", "\n", "return", "Compose", "(", "transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.torchvision._AbstractTorchvisionDataset.__len__": [[84, 86], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.dataset.torchvision._AbstractTorchvisionDataset.__getitem__": [[87, 90], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "img", ",", "label", "=", "self", ".", "dataset", "[", "idx", "]", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.Identity.__init__": [[130, 132], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.Identity.forward": [[133, 135], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.Clamp.__init__": [[138, 140], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.Clamp.forward": [[141, 143], ["torch.clamp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "torch", ".", "clamp", "(", "x", ",", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.SoftClamp.__init__": [[146, 150], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "alpha", "=", "0.01", ",", "inplace", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "inplace", "=", "inplace", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.SoftClamp.forward": [[151, 158], ["torch.min", "torch.max", "torch.zeros", "torch.zeros", "x.clamp_().add_().add_", "x.clamp_().add_", "torch.clamp", "x.clamp_"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x0", "=", "torch", ".", "min", "(", "x", ",", "torch", ".", "zeros", "(", "x", ".", "shape", ",", "device", "=", "x", ".", "device", ")", ")", "\n", "x1", "=", "torch", ".", "max", "(", "x", "-", "1", ",", "torch", ".", "zeros", "(", "x", ".", "shape", ",", "device", "=", "x", ".", "device", ")", ")", "\n", "if", "self", ".", "inplace", ":", "\n", "            ", "return", "x", ".", "clamp_", "(", "0", ",", "1", ")", ".", "add_", "(", "x0", ",", "alpha", "=", "self", ".", "alpha", ")", ".", "add_", "(", "x1", ",", "alpha", "=", "self", ".", "alpha", ")", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "clamp", "(", "x", ",", "0", ",", "1", ")", "+", "self", ".", "alpha", "*", "x0", "+", "self", ".", "alpha", "*", "x1", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.DifferentiableClampFunc.forward": [[161, 164], ["inp.clamp"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "inp", ")", ":", "\n", "        ", "return", "inp", ".", "clamp", "(", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.DifferentiableClampFunc.backward": [[165, 168], ["grad_output.clone"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "return", "grad_output", ".", "clone", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.DiffClamp.__init__": [[171, 173], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.DiffClamp.forward": [[174, 176], ["DifferentiableClampFunc.apply"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "DifferentiableClampFunc", ".", "apply", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.TPSGrid.__init__": [[197, 225], ["torch.nn.Module.__init__", "target_control_points.float.float.size", "target_control_points.float.float.float", "torch.zeros", "tools.TPSGrid.compute_partial_repr", "forward_kernel[].copy_", "forward_kernel[].fill_", "forward_kernel[].fill_", "forward_kernel[].copy_", "forward_kernel[].copy_", "torch.inverse", "torch.meshgrid", "torch.stack", "tools.TPSGrid.compute_partial_repr", "torch.cat", "tools.TPSGrid.register_buffer", "tools.TPSGrid.register_buffer", "tools.TPSGrid.register_buffer", "target_control_points.float.float.transpose", "torch.linspace", "torch.linspace", "torch.zeros", "x.flatten", "y.flatten", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.TPSGrid.compute_partial_repr", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.TPSGrid.compute_partial_repr"], ["def", "__init__", "(", "self", ",", "img_size", ",", "target_control_points", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "img_height", ",", "img_width", "=", "img_size", "\n", "N", "=", "target_control_points", ".", "size", "(", "0", ")", "\n", "self", ".", "num_points", "=", "N", "\n", "target_control_points", "=", "target_control_points", ".", "float", "(", ")", "\n", "\n", "# create padded kernel matrix", "\n", "forward_kernel", "=", "torch", ".", "zeros", "(", "N", "+", "3", ",", "N", "+", "3", ")", "\n", "target_control_partial_repr", "=", "self", ".", "compute_partial_repr", "(", "target_control_points", ",", "target_control_points", ")", "\n", "forward_kernel", "[", ":", "N", ",", ":", "N", "]", ".", "copy_", "(", "target_control_partial_repr", ")", "\n", "forward_kernel", "[", ":", "N", ",", "-", "3", "]", ".", "fill_", "(", "1", ")", "\n", "forward_kernel", "[", "-", "3", ",", ":", "N", "]", ".", "fill_", "(", "1", ")", "\n", "forward_kernel", "[", ":", "N", ",", "-", "2", ":", "]", ".", "copy_", "(", "target_control_points", ")", "\n", "forward_kernel", "[", "-", "2", ":", ",", ":", "N", "]", ".", "copy_", "(", "target_control_points", ".", "transpose", "(", "0", ",", "1", ")", ")", "\n", "inverse_kernel", "=", "torch", ".", "inverse", "(", "forward_kernel", ")", "\n", "\n", "# create target cordinate matrix", "\n", "HW", "=", "img_height", "*", "img_width", "\n", "y", ",", "x", "=", "torch", ".", "meshgrid", "(", "torch", ".", "linspace", "(", "-", "1", ",", "1", ",", "img_height", ")", ",", "torch", ".", "linspace", "(", "-", "1", ",", "1", ",", "img_width", ")", ")", "\n", "target_coordinate", "=", "torch", ".", "stack", "(", "[", "x", ".", "flatten", "(", ")", ",", "y", ".", "flatten", "(", ")", "]", ",", "1", ")", "\n", "target_coordinate_partial_repr", "=", "self", ".", "compute_partial_repr", "(", "target_coordinate", ",", "target_control_points", ")", "\n", "target_coordinate_repr", "=", "torch", ".", "cat", "(", "[", "target_coordinate_partial_repr", ",", "torch", ".", "ones", "(", "HW", ",", "1", ")", ",", "target_coordinate", "]", ",", "1", ")", "\n", "\n", "# register precomputed matrices", "\n", "self", ".", "register_buffer", "(", "'inverse_kernel'", ",", "inverse_kernel", ")", "\n", "self", ".", "register_buffer", "(", "'padding_matrix'", ",", "torch", ".", "zeros", "(", "3", ",", "2", ")", ")", "\n", "self", ".", "register_buffer", "(", "'target_coordinate_repr'", ",", "target_coordinate_repr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.TPSGrid.compute_partial_repr": [[226, 237], ["input_points.size", "control_points.size", "repr_matrix.masked_fill_", "input_points.view", "control_points.view", "torch.log"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "compute_partial_repr", "(", "input_points", ",", "control_points", ")", ":", "\n", "        ", "\"\"\"Compute radial basis kernel phi(x1, x2) = r^2 * log(r), where r = ||x1 - x2||_2\"\"\"", "\n", "N", "=", "input_points", ".", "size", "(", "0", ")", "\n", "M", "=", "control_points", ".", "size", "(", "0", ")", "\n", "pairwise_diff", "=", "input_points", ".", "view", "(", "N", ",", "1", ",", "2", ")", "-", "control_points", ".", "view", "(", "1", ",", "M", ",", "2", ")", "\n", "pairwise_diff_square", "=", "pairwise_diff", "*", "pairwise_diff", "\n", "pairwise_dist", "=", "pairwise_diff_square", "[", ":", ",", ":", ",", "0", "]", "+", "pairwise_diff_square", "[", ":", ",", ":", ",", "1", "]", "\n", "repr_matrix", "=", "0.5", "*", "pairwise_dist", "*", "torch", ".", "log", "(", "pairwise_dist", ")", "\n", "repr_matrix", ".", "masked_fill_", "(", "repr_matrix", "!=", "repr_matrix", ",", "0", ")", "\n", "return", "repr_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.TPSGrid.forward": [[238, 243], ["torch.cat", "torch.matmul", "torch.matmul", "tools.TPSGrid.padding_matrix.expand", "source_control_points.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "source_control_points", ")", ":", "\n", "        ", "Y", "=", "torch", ".", "cat", "(", "[", "source_control_points", ",", "self", ".", "padding_matrix", ".", "expand", "(", "source_control_points", ".", "size", "(", "0", ")", ",", "3", ",", "2", ")", "]", ",", "1", ")", "\n", "mapping_matrix", "=", "torch", ".", "matmul", "(", "self", ".", "inverse_kernel", ",", "Y", ")", "\n", "source_coordinate", "=", "torch", ".", "matmul", "(", "self", ".", "target_coordinate_repr", ",", "mapping_matrix", ")", "\n", "return", "source_coordinate", "\n", "", "", ""]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.copy_with_noise": [[12, 14], ["t.detach().clone", "torch.randn", "t.detach"], "function", ["None"], ["def", "copy_with_noise", "(", "t", ",", "noise_scale", "=", "0.0001", ")", ":", "\n", "    ", "return", "t", ".", "detach", "(", ")", ".", "clone", "(", ")", "+", "torch", ".", "randn", "(", "t", ".", "shape", ",", "device", "=", "t", ".", "device", ")", "*", "noise_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.count_parameters": [[16, 18], ["sum", "p.numel", "model.parameters"], "function", ["None"], ["", "def", "count_parameters", "(", "model", ")", ":", "\n", "    ", "return", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.initialize_weights": [[20, 30], ["model.modules", "isinstance", "isinstance", "torch.nn.init.kaiming_normal_", "isinstance", "module.bias.data.zero_", "module.weight.data.fill_", "module.bias.data.zero_"], "function", ["None"], ["", "def", "initialize_weights", "(", "*", "models", ")", ":", "\n", "    ", "for", "model", "in", "models", ":", "\n", "        ", "for", "module", "in", "model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "module", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "module", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "module", ".", "weight", ")", "\n", "if", "module", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "module", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "isinstance", "(", "module", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "module", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "module", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.create_gaussian_weights": [[32, 37], ["scipy.signal.gaussian", "scipy.signal.gaussian", "numpy.outer", "torch.from_numpy().unsqueeze().expand().float", "torch.from_numpy().unsqueeze().expand", "torch.from_numpy().unsqueeze", "torch.from_numpy"], "function", ["None"], ["", "", "", "", "def", "create_gaussian_weights", "(", "img_size", ",", "n_channels", ",", "std", ")", ":", "\n", "    ", "g1d_h", "=", "signal", ".", "gaussian", "(", "img_size", "[", "0", "]", ",", "std", ")", "\n", "g1d_w", "=", "signal", ".", "gaussian", "(", "img_size", "[", "1", "]", ",", "std", ")", "\n", "g2d", "=", "np", ".", "outer", "(", "g1d_h", ",", "g1d_w", ")", "\n", "return", "torch", ".", "from_numpy", "(", "g2d", ")", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "n_channels", ",", "-", "1", ",", "-", "1", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.generate_data": [[39, 77], ["min", "images.flatten().numpy", "sklearn.cluster.KMeans", "sklearn.cluster.KMeans.fit", "list", "range", "len", "next", "map", "list.append", "iter", "images.flatten", "torch.utils.data.dataloader.DataLoader", "torch.Tensor().reshape", "torch.nn.functional.interpolate", "torch.rand", "s.unsqueeze", "torch.full", "torch.Tensor", "torch.nn.functional.interpolate", "numpy.random.randint", "images.mean.unsqueeze", "torch.ones", "torch.rand", "tools.create_gaussian_weights", "len", "images.mean", "next", "iter", "torch.utils.data.dataloader.DataLoader"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.create_gaussian_weights"], ["", "def", "generate_data", "(", "dataset", ",", "K", ",", "init_type", "=", "'sample'", ",", "value", "=", "None", ",", "noise_scale", "=", "None", ",", "std", "=", "None", ",", "size", "=", "None", ")", ":", "\n", "    ", "samples", "=", "[", "]", "\n", "if", "init_type", "==", "'kmeans'", ":", "\n", "        ", "N", "=", "min", "(", "100", "*", "K", ",", "len", "(", "dataset", ")", ")", "\n", "images", "=", "next", "(", "iter", "(", "DataLoader", "(", "dataset", ",", "batch_size", "=", "N", ",", "shuffle", "=", "True", ",", "num_workers", "=", "4", ")", ")", ")", "[", "0", "]", "\n", "img_size", "=", "images", ".", "shape", "[", "1", ":", "]", "\n", "X", "=", "images", ".", "flatten", "(", "1", ")", ".", "numpy", "(", ")", "\n", "cluster", "=", "KMeans", "(", "K", ")", "\n", "cluster", ".", "fit", "(", "X", ")", "\n", "samples", "=", "list", "(", "map", "(", "lambda", "c", ":", "torch", ".", "Tensor", "(", "c", ")", ".", "reshape", "(", "img_size", ")", ",", "cluster", ".", "cluster_centers_", ")", ")", "\n", "if", "size", "is", "not", "None", ":", "\n", "            ", "samples", "=", "[", "F", ".", "interpolate", "(", "s", ".", "unsqueeze", "(", "0", ")", ",", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "[", "0", "]", "for", "s", "in", "samples", "]", "\n", "", "", "else", ":", "\n", "        ", "for", "_", "in", "range", "(", "K", ")", ":", "\n", "            ", "if", "init_type", "==", "'soup'", ":", "\n", "                ", "noise_scale", "=", "noise_scale", "or", "1", "\n", "sample", "=", "torch", ".", "rand", "(", "dataset", ".", "n_channels", ",", "*", "(", "size", "or", "dataset", ".", "img_size", ")", ")", "*", "noise_scale", "\n", "if", "value", "is", "not", "None", ":", "\n", "                    ", "sample", "+=", "value", "\n", "", "", "elif", "init_type", "==", "'sample'", ":", "\n", "                ", "sample", "=", "dataset", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "dataset", ")", ")", "]", "[", "0", "]", "\n", "if", "size", "is", "not", "None", ":", "\n", "                    ", "sample", "=", "F", ".", "interpolate", "(", "sample", ".", "unsqueeze", "(", "0", ")", ",", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "[", "0", "]", "\n", "", "", "elif", "init_type", "==", "'constant'", ":", "\n", "                ", "value", "=", "value", "or", "0.5", "\n", "sample", "=", "torch", ".", "full", "(", "(", "dataset", ".", "n_channels", ",", "*", "(", "size", "or", "dataset", ".", "img_size", ")", ")", ",", "value", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "", "elif", "init_type", "==", "'random_color'", ":", "\n", "                ", "sample", "=", "torch", ".", "ones", "(", "3", ",", "*", "(", "size", "or", "dataset", ".", "img_size", ")", ")", "*", "torch", ".", "rand", "(", "3", ",", "1", ",", "1", ")", "\n", "", "elif", "init_type", "==", "'gaussian'", ":", "\n", "                ", "sample", "=", "create_gaussian_weights", "(", "size", "or", "dataset", ".", "img_size", ",", "dataset", ".", "n_channels", ",", "std", ")", "\n", "", "elif", "init_type", "==", "'mean'", ":", "\n", "                ", "images", "=", "next", "(", "iter", "(", "DataLoader", "(", "dataset", ",", "batch_size", "=", "100", ",", "shuffle", "=", "True", ",", "num_workers", "=", "4", ")", ")", ")", "[", "0", "]", "\n", "sample", "=", "images", ".", "mean", "(", "0", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "", "samples", ".", "append", "(", "sample", ")", "\n", "\n", "", "", "return", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.safe_model_state_dict": [[79, 89], ["collections.OrderedDict", "state_dict.items", "next().startswith", "next", "iter"], "function", ["None"], ["", "def", "safe_model_state_dict", "(", "state_dict", ")", ":", "\n", "    ", "\"\"\"\n    Converts a state dict saved from a DataParallel module to normal module state_dict\n    \"\"\"", "\n", "if", "not", "next", "(", "iter", "(", "state_dict", ")", ")", ".", "startswith", "(", "\"module.\"", ")", ":", "\n", "        ", "return", "state_dict", "# abort if dict is not a DataParallel model_state", "\n", "", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "new_state_dict", "[", "k", "[", "7", ":", "]", "]", "=", "v", "# remove 'module.' prefix", "\n", "", "return", "new_state_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.conv3x3": [[91, 95], ["torch.nn.Conv2d"], "function", ["None"], ["", "def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.conv1x1": [[97, 100], ["torch.nn.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.create_mlp": [[102, 118], ["torch.nn.Sequential", "range", "torch.nn.Linear", "norm_layer", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU"], "function", ["None"], ["", "def", "create_mlp", "(", "in_ch", ",", "out_ch", ",", "n_hidden_units", ",", "n_layers", ",", "norm_layer", "=", "None", ")", ":", "\n", "    ", "if", "norm_layer", "is", "None", "or", "norm_layer", "in", "[", "'id'", ",", "'identity'", "]", ":", "\n", "        ", "norm_layer", "=", "Identity", "\n", "", "elif", "norm_layer", "in", "[", "'batch_norm'", ",", "'bn'", "]", ":", "\n", "        ", "norm_layer", "=", "nn", ".", "BatchNorm1d", "\n", "", "elif", "not", "norm_layer", "==", "nn", ".", "BatchNorm1d", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "if", "n_layers", ">", "0", ":", "\n", "        ", "seq", "=", "[", "nn", ".", "Linear", "(", "in_ch", ",", "n_hidden_units", ")", ",", "norm_layer", "(", "n_hidden_units", ")", ",", "nn", ".", "ReLU", "(", "True", ")", "]", "\n", "for", "_", "in", "range", "(", "n_layers", "-", "1", ")", ":", "\n", "            ", "seq", "+=", "[", "nn", ".", "Linear", "(", "n_hidden_units", ",", "n_hidden_units", ")", ",", "nn", ".", "ReLU", "(", "True", ")", "]", "\n", "", "seq", "+=", "[", "nn", ".", "Linear", "(", "n_hidden_units", ",", "out_ch", ")", "]", "\n", "", "else", ":", "\n", "        ", "seq", "=", "[", "nn", ".", "Linear", "(", "in_ch", ",", "out_ch", ")", "]", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "seq", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.get_nb_out_channels": [[120, 122], ["list", "filter", "layer.modules", "isinstance"], "function", ["None"], ["", "def", "get_nb_out_channels", "(", "layer", ")", ":", "\n", "    ", "return", "list", "(", "filter", "(", "lambda", "e", ":", "isinstance", "(", "e", ",", "nn", ".", "Conv2d", ")", ",", "layer", ".", "modules", "(", ")", ")", ")", "[", "-", "1", "]", ".", "out_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.get_output_size": [[124, 127], ["torch.zeros", "numpy.prod", "model"], "function", ["None"], ["", "def", "get_output_size", "(", "in_channels", ",", "img_size", ",", "model", ")", ":", "\n", "    ", "x", "=", "torch", ".", "zeros", "(", "1", ",", "in_channels", ",", "*", "img_size", ")", "\n", "return", "np", ".", "prod", "(", "model", "(", "x", ")", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.get_clamp_func": [[178, 192], ["tools.Clamp", "tools.Identity", "name.startswith", "name.startswith", "name.replace().replace", "tools.SoftClamp", "name.startswith", "tools.DiffClamp", "NotImplementedError", "name.replace", "len", "float"], "function", ["None"], ["", "", "def", "get_clamp_func", "(", "name", ")", ":", "\n", "    ", "if", "name", "in", "[", "True", ",", "'clamp'", ",", "'normal'", "]", ":", "\n", "        ", "func", "=", "Clamp", "(", ")", "\n", "", "elif", "not", "name", ":", "\n", "        ", "func", "=", "Identity", "(", ")", "\n", "", "elif", "name", ".", "startswith", "(", "'soft'", ")", "or", "name", ".", "startswith", "(", "'leaky'", ")", ":", "\n", "        ", "alpha", "=", "name", ".", "replace", "(", "'soft'", ",", "''", ")", ".", "replace", "(", "'leaky_relu'", ",", "''", ")", "\n", "kwargs", "=", "{", "'alpha'", ":", "float", "(", "alpha", ")", "}", "if", "len", "(", "alpha", ")", ">", "0", "else", "{", "}", "\n", "func", "=", "SoftClamp", "(", "**", "kwargs", ")", "\n", "", "elif", "name", ".", "startswith", "(", "'diff'", ")", ":", "\n", "        ", "func", "=", "DiffClamp", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "f'{name} is not a valid clamp function'", ")", "\n", "", "return", "func", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.BasicBlock.__init__": [[39, 56], ["torch.Module.__init__", "tools.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "tools.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.conv3x3", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.BasicBlock.forward": [[57, 74], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.Bottleneck.__init__": [[79, 95], ["torch.Module.__init__", "tools.conv1x1", "norm_layer", "tools.conv3x3", "norm_layer", "tools.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.conv1x1", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.conv3x3", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.Bottleneck.forward": [[96, 117], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.ResNet.__init__": [[121, 168], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "resnet.ResNet.modules", "isinstance", "len", "len", "isinstance", "resnet.ResNet.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "n_classes", "=", "1000", ",", "zero_init_residual", "=", "False", ",", "norm_layer", "=", "None", ",", "\n", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "strides", "=", "2", ",", "replace_with_dilation", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "elif", "isinstance", "(", "replace_with_dilation", ",", "bool", ")", ":", "\n", "            ", "replace_with_dilation", "=", "[", "replace_with_dilation", "]", "*", "3", "\n", "", "assert", "len", "(", "replace_with_dilation", ")", "==", "3", "\n", "self", ".", "strides", "=", "strides", "if", "not", "isinstance", "(", "strides", ",", "int", ")", "else", "[", "strides", "]", "*", "5", "\n", "assert", "len", "(", "self", ".", "strides", ")", "==", "5", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "7", ",", "stride", "=", "self", ".", "strides", "[", "0", "]", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "self", ".", "strides", "[", "1", "]", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "self", ".", "strides", "[", "2", "]", ",", "dilate", "=", "replace_with_dilation", "[", "0", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "self", ".", "strides", "[", "3", "]", ",", "dilate", "=", "replace_with_dilation", "[", "1", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "self", ".", "strides", "[", "4", "]", ",", "dilate", "=", "replace_with_dilation", "[", "2", "]", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "n_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.ResNet._make_layer": [[169, 192], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "tools.conv1x1", "norm_layer", "block"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.conv1x1"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "self", ".", "groups", ",", "\n", "self", ".", "base_width", ",", "previous_dilation", ",", "norm_layer", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm_layer", "=", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.ResNet.forward": [[193, 209], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "resnet.ResNet.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "resnet.ResNet.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.get_resnet_model": [[20, 34], ["None"], "function", ["None"], ["def", "get_resnet_model", "(", "name", ")", ":", "\n", "    ", "if", "name", "is", "None", ":", "\n", "        ", "name", "=", "'resnet18'", "\n", "", "return", "{", "\n", "'resnet18'", ":", "resnet18", ",", "\n", "'resnet34'", ":", "resnet34", ",", "\n", "'resnet50'", ":", "resnet50", ",", "\n", "'resnet101'", ":", "resnet101", ",", "\n", "'resnet152'", ":", "resnet152", ",", "\n", "'resnext50_32x4d'", ":", "resnext50_32x4d", ",", "\n", "'resnext101_32x8d'", ":", "resnext101_32x8d", ",", "\n", "'wide_resnet50_2'", ":", "wide_resnet50_2", ",", "\n", "'wide_resnet101_2'", ":", "wide_resnet101_2", ",", "\n", "}", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet._resnet": [[211, 217], ["resnet.ResNet", "torch.utils.model_zoo.load_url", "ResNet.load_state_dict"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.load_state_dict"], ["", "", "def", "_resnet", "(", "arch", ",", "block", ",", "layers", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "block", ",", "layers", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "state_dict", "=", "load_state_dict_from_url", "(", "model_urls", "[", "arch", "]", ",", "progress", "=", "progress", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.resnet18": [[219, 228], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet._resnet"], ["", "def", "resnet18", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-18 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>'_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet18'", ",", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.resnet34": [[230, 239], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet._resnet"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-34 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>'_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet34'", ",", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.resnet50": [[241, 250], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet._resnet"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-50 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>'_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet50'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.resnet101": [[252, 261], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet._resnet"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-101 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>'_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet101'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.resnet152": [[263, 272], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet._resnet"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-152 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>'_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet152'", ",", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.resnext50_32x4d": [[274, 285], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet._resnet"], ["", "def", "resnext50_32x4d", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNeXt-50 32x4d model from\n    `\"Aggregated Residual Transformation for Deep Neural Networks\" <https://arxiv.org/pdf/1611.05431.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "kwargs", "[", "'groups'", "]", "=", "32", "\n", "kwargs", "[", "'width_per_group'", "]", "=", "4", "\n", "return", "_resnet", "(", "'resnext50_32x4d'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.resnext101_32x8d": [[287, 298], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet._resnet"], ["", "def", "resnext101_32x8d", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNeXt-101 32x8d model from\n    `\"Aggregated Residual Transformation for Deep Neural Networks\" <https://arxiv.org/pdf/1611.05431.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "kwargs", "[", "'groups'", "]", "=", "32", "\n", "kwargs", "[", "'width_per_group'", "]", "=", "8", "\n", "return", "_resnet", "(", "'resnext101_32x8d'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.wide_resnet50_2": [[300, 315], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet._resnet"], ["", "def", "wide_resnet50_2", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"Wide ResNet-50-2 model from\n    `\"Wide Residual Networks\" <https://arxiv.org/pdf/1605.07146.pdf>`_\n\n    The model is the same as ResNet except for the bottleneck number of channels\n    which is twice larger in every block. The number of channels in outer 1x1\n    convolutions is the same, e.g. last block in ResNet-50 has 2048-512-2048\n    channels, and in Wide ResNet-50-2 has 2048-1024-2048.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "kwargs", "[", "'width_per_group'", "]", "=", "64", "*", "2", "\n", "return", "_resnet", "(", "'wide_resnet50_2'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet.wide_resnet101_2": [[317, 332], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.resnet._resnet"], ["", "def", "wide_resnet101_2", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"Wide ResNet-101-2 model from\n    `\"Wide Residual Networks\" <https://arxiv.org/pdf/1605.07146.pdf>`_\n\n    The model is the same as ResNet except for the bottleneck number of channels\n    which is twice larger in every block. The number of channels in outer 1x1\n    convolutions is the same, e.g. last block in ResNet-50 has 2048-512-2048\n    channels, and in Wide ResNet-50-2 has 2048-1024-2048.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "kwargs", "[", "'width_per_group'", "]", "=", "64", "*", "2", "\n", "return", "_resnet", "(", "'wide_resnet101_2'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.LambdaLayer.__init__": [[55, 58], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "lambd", ")", ":", "\n", "        ", "super", "(", "LambdaLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lambd", "=", "lambd", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.LambdaLayer.forward": [[59, 61], ["mini_resnet.LambdaLayer.lambd"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "lambd", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.BasicBlock.__init__": [[66, 85], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mini_resnet.LambdaLayer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.pad", "torch.pad", "torch.pad", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ",", "option", "=", "'A'", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "planes", ":", "\n", "            ", "if", "option", "==", "'A'", ":", "\n", "                ", "\"\"\"\n                For CIFAR10 ResNet paper uses option A.\n                \"\"\"", "\n", "self", ".", "shortcut", "=", "LambdaLayer", "(", "lambda", "x", ":", "\n", "F", ".", "pad", "(", "x", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", ",", "(", "0", ",", "0", ",", "0", ",", "0", ",", "planes", "//", "4", ",", "planes", "//", "4", ")", ",", "\"constant\"", ",", "0", ")", ")", "\n", "", "elif", "option", "==", "'B'", ":", "\n", "                ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.BasicBlock.forward": [[87, 93], ["torch.relu", "torch.relu", "torch.relu", "mini_resnet.BasicBlock.bn2", "mini_resnet.BasicBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "mini_resnet.BasicBlock.bn1", "mini_resnet.BasicBlock.conv2", "mini_resnet.BasicBlock.conv1"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.ResNet.__init__": [[96, 110], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "mini_resnet.ResNet._make_layer", "mini_resnet.ResNet._make_layer", "mini_resnet.ResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "mini_resnet.ResNet.apply"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "in_channels", "=", "3", ",", "n_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "16", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "16", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "32", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "64", ",", "n_classes", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "apply", "(", "_weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.ResNet._make_layer": [[111, 119], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.ResNet.forward": [[120, 129], ["mini_resnet.ResNet.relu", "mini_resnet.ResNet.layer1", "mini_resnet.ResNet.layer2", "mini_resnet.ResNet.layer3", "mini_resnet.ResNet.avgpool", "mini_resnet.ResNet.view", "mini_resnet.ResNet.linear", "mini_resnet.ResNet.bn1", "mini_resnet.ResNet.size", "mini_resnet.ResNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "avgpool", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.get_resnet_model": [[38, 47], ["None"], "function", ["None"], ["def", "get_resnet_model", "(", "name", ")", ":", "\n", "    ", "return", "{", "\n", "'resnet20'", ":", "resnet20", ",", "\n", "'resnet32'", ":", "resnet32", ",", "\n", "'resnet44'", ":", "resnet44", ",", "\n", "'resnet56'", ":", "resnet56", ",", "\n", "'resnet110'", ":", "resnet110", ",", "\n", "'resnet1202'", ":", "resnet1202", ",", "\n", "}", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet._weights_init": [[49, 52], ["isinstance", "isinstance", "torch.kaiming_normal_"], "function", ["None"], ["", "def", "_weights_init", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.resnet20": [[131, 133], ["mini_resnet.ResNet"], "function", ["None"], ["", "", "def", "resnet20", "(", "in_channels", "=", "3", ",", "n_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "3", ",", "3", "]", ",", "in_channels", ",", "n_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.resnet32": [[135, 137], ["mini_resnet.ResNet"], "function", ["None"], ["", "def", "resnet32", "(", "in_channels", "=", "3", ",", "n_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "5", ",", "5", ",", "5", "]", ",", "in_channels", ",", "n_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.resnet44": [[139, 141], ["mini_resnet.ResNet"], "function", ["None"], ["", "def", "resnet44", "(", "in_channels", "=", "3", ",", "n_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "7", ",", "7", ",", "7", "]", ",", "in_channels", ",", "n_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.resnet56": [[143, 145], ["mini_resnet.ResNet"], "function", ["None"], ["", "def", "resnet56", "(", "in_channels", "=", "3", ",", "n_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "9", ",", "9", ",", "9", "]", ",", "in_channels", ",", "n_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.resnet110": [[147, 149], ["mini_resnet.ResNet"], "function", ["None"], ["", "def", "resnet110", "(", "in_channels", "=", "3", ",", "n_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "18", ",", "18", ",", "18", "]", ",", "in_channels", ",", "n_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.resnet1202": [[151, 153], ["mini_resnet.ResNet"], "function", ["None"], ["", "def", "resnet1202", "(", "in_channels", "=", "3", ",", "n_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "200", ",", "200", ",", "200", "]", ",", "in_channels", ",", "n_classes", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.__init__": [[28, 104], ["torch.Module.__init__", "kwargs.get", "kwargs.get", "kwargs.get", "kwargs.get", "kwargs.get", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.Parameter", "torch.Parameter", "kwargs.get", "tools.get_clamp_func", "torch.Parameter", "torch.Parameter", "kwargs.get", "kwargs.get", "kwargs.get", "kwargs.get", "isinstance", "kwargs.get", "kwargs.get", "torch.MSELoss", "torch.MSELoss", "kwargs.get", "kwargs.get", "kwargs.get", "tools.generate_data", "dti_sprites.DTISprites.init_masks", "kwargs.get", "copy.deepcopy", "transformer.PrototypeTransformationNetwork", "torch.ModuleList", "torch.ModuleList", "transformer.PrototypeTransformationNetwork", "torch.ModuleList", "torch.ModuleList", "kwargs.get", "torch.Parameter", "torch.Parameter", "copy.deepcopy", "transformer.PrototypeTransformationNetwork", "int", "kwargs.get", "tools.create_mlp", "dti_sprites.DTISprites.occ_predictor[].weight.data.zero_", "dti_sprites.DTISprites.occ_predictor[].bias.data.zero_", "dti_sprites.DTISprites.register_buffer", "kwargs.get", "transformer.PrototypeTransformationNetwork", "transformer.PrototypeTransformationNetwork", "transformer.PrototypeTransformationNetwork", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.tril", "torch.tril", "torch.tril", "torch.tril", "range", "range", "tools.generate_data", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.get_clamp_func", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.generate_data", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.init_masks", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.create_mlp", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.generate_data"], ["def", "__init__", "(", "self", ",", "dataset", ",", "n_sprites", ",", "n_objects", "=", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "dataset", "is", "None", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "else", ":", "\n", "            ", "img_size", "=", "dataset", ".", "img_size", "\n", "n_ch", "=", "dataset", ".", "n_channels", "\n", "\n", "# Prototypes & masks", "\n", "", "proto_init", "=", "kwargs", ".", "get", "(", "'proto_init'", ",", "'sample'", ")", "\n", "size", "=", "kwargs", ".", "get", "(", "'sprite_size'", ",", "img_size", ")", "\n", "std", "=", "kwargs", ".", "get", "(", "'gaussian_weights_std'", ")", "\n", "self", ".", "add_empty_sprite", "=", "kwargs", ".", "get", "(", "'add_empty_sprite'", ",", "False", ")", "\n", "self", ".", "lambda_empty_sprite", "=", "kwargs", ".", "get", "(", "'lambda_empty_sprite'", ",", "0", ")", "\n", "self", ".", "n_sprites", "=", "n_sprites", "+", "1", "if", "self", ".", "add_empty_sprite", "else", "n_sprites", "\n", "samples", "=", "torch", ".", "stack", "(", "generate_data", "(", "dataset", ",", "n_sprites", ",", "proto_init", ",", "std", "=", "std", ",", "size", "=", "size", ",", "value", "=", "0.9", ")", ")", "\n", "self", ".", "prototype_params", "=", "nn", ".", "Parameter", "(", "samples", ")", "\n", "clamp_name", "=", "kwargs", ".", "get", "(", "'use_clamp'", ",", "'soft'", ")", "\n", "self", ".", "clamp_func", "=", "get_clamp_func", "(", "clamp_name", ")", "\n", "self", ".", "mask_params", "=", "nn", ".", "Parameter", "(", "self", ".", "init_masks", "(", "n_sprites", ",", "kwargs", ".", "get", "(", "'mask_init'", ",", "'constant'", ")", ",", "size", ",", "std", ")", ")", "\n", "self", ".", "cur_epoch", "=", "0", "\n", "self", ".", "n_linear_layers", "=", "kwargs", ".", "get", "(", "'n_linear_layers'", ",", "N_LAYERS", ")", "\n", "self", ".", "estimate_minimum", "=", "kwargs", ".", "get", "(", "'estimate_minimum'", ",", "False", ")", "\n", "self", ".", "greedy_algo_iter", "=", "kwargs", ".", "get", "(", "'greedy_algo_iter'", ",", "1", ")", "\n", "freeze_sprite", "=", "kwargs", ".", "get", "(", "'freeze_sprite'", ",", "False", ")", "\n", "self", ".", "freeze_milestone", "=", "freeze_sprite", "if", "freeze_sprite", "else", "-", "1", "\n", "assert", "isinstance", "(", "self", ".", "freeze_milestone", ",", "(", "int", ",", ")", ")", "\n", "\n", "# Sprite transformers", "\n", "L", "=", "n_objects", "\n", "self", ".", "n_objects", "=", "n_objects", "\n", "self", ".", "has_layer_tsf", "=", "kwargs", ".", "get", "(", "'transformation_sequence_layer'", ",", "'identity'", ")", "not", "in", "[", "'id'", ",", "'identity'", "]", "\n", "if", "self", ".", "has_layer_tsf", ":", "\n", "            ", "layer_kwargs", "=", "deepcopy", "(", "kwargs", ")", "\n", "layer_kwargs", "[", "'transformation_sequence'", "]", "=", "kwargs", "[", "'transformation_sequence_layer'", "]", "\n", "layer_kwargs", "[", "'curriculum_learning'", "]", "=", "kwargs", "[", "'curriculum_learning_layer'", "]", "\n", "self", ".", "layer_transformer", "=", "Transformer", "(", "n_ch", ",", "img_size", ",", "L", ",", "**", "layer_kwargs", ")", "\n", "self", ".", "encoder", "=", "self", ".", "layer_transformer", ".", "encoder", "\n", "tsfs", "=", "[", "Transformer", "(", "n_ch", ",", "size", ",", "self", ".", "n_sprites", ",", "encoder", "=", "self", ".", "encoder", ",", "**", "kwargs", ")", "for", "k", "in", "range", "(", "L", ")", "]", "\n", "self", ".", "sprite_transformers", "=", "nn", ".", "ModuleList", "(", "tsfs", ")", "\n", "", "else", ":", "\n", "            ", "if", "L", ">", "1", ":", "\n", "                ", "self", ".", "layer_transformer", "=", "Transformer", "(", "n_ch", ",", "img_size", ",", "L", ",", "transformation_sequence", "=", "'identity'", ")", "\n", "", "first_tsf", "=", "Transformer", "(", "n_ch", ",", "img_size", ",", "self", ".", "n_sprites", ",", "**", "kwargs", ")", "\n", "self", ".", "encoder", "=", "first_tsf", ".", "encoder", "\n", "tsfs", "=", "[", "Transformer", "(", "n_ch", ",", "img_size", ",", "self", ".", "n_sprites", ",", "encoder", "=", "self", ".", "encoder", ",", "**", "kwargs", ")", "for", "k", "in", "range", "(", "L", "-", "1", ")", "]", "\n", "self", ".", "sprite_transformers", "=", "nn", ".", "ModuleList", "(", "[", "first_tsf", "]", "+", "tsfs", ")", "\n", "\n", "# Background Transformer", "\n", "", "M", "=", "kwargs", ".", "get", "(", "'n_backgrounds'", ",", "0", ")", "\n", "self", ".", "n_backgrounds", "=", "M", "\n", "self", ".", "learn_backgrounds", "=", "M", ">", "0", "\n", "if", "self", ".", "learn_backgrounds", ":", "\n", "            ", "bkg_init", "=", "kwargs", ".", "get", "(", "'bkg_init'", ",", "'constant'", ")", "\n", "self", ".", "bkg_params", "=", "nn", ".", "Parameter", "(", "torch", ".", "stack", "(", "generate_data", "(", "dataset", ",", "M", ",", "init_type", "=", "bkg_init", ",", "value", "=", "0.5", ")", ")", ")", "\n", "bkg_kwargs", "=", "deepcopy", "(", "kwargs", ")", "\n", "bkg_kwargs", "[", "'transformation_sequence'", "]", "=", "kwargs", "[", "'transformation_sequence_bkg'", "]", "\n", "bkg_kwargs", "[", "'curriculum_learning'", "]", "=", "kwargs", "[", "'curriculum_learning_bkg'", "]", "\n", "bkg_kwargs", "[", "'padding_mode'", "]", "=", "'border'", "\n", "self", ".", "bkg_transformer", "=", "Transformer", "(", "n_ch", ",", "img_size", ",", "M", ",", "encoder", "=", "self", ".", "encoder", ",", "**", "bkg_kwargs", ")", "\n", "\n", "# Image composition and aux", "\n", "", "self", ".", "pred_occlusion", "=", "kwargs", ".", "get", "(", "'pred_occlusion'", ",", "False", ")", "\n", "if", "self", ".", "pred_occlusion", ":", "\n", "            ", "nb_out", "=", "int", "(", "L", "*", "(", "L", "-", "1", ")", "/", "2", ")", "\n", "norm", "=", "kwargs", ".", "get", "(", "'norm_layer'", ")", "\n", "self", ".", "occ_predictor", "=", "create_mlp", "(", "self", ".", "encoder", ".", "out_ch", ",", "nb_out", ",", "N_HIDDEN_UNITS", ",", "self", ".", "n_linear_layers", ",", "norm", ")", "\n", "self", ".", "occ_predictor", "[", "-", "1", "]", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "occ_predictor", "[", "-", "1", "]", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_buffer", "(", "'occ_grid'", ",", "torch", ".", "tril", "(", "torch", ".", "ones", "(", "L", ",", "L", ")", ",", "diagonal", "=", "-", "1", ")", ")", "\n", "\n", "", "self", ".", "_criterion", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'none'", ")", "\n", "self", ".", "empty_cluster_threshold", "=", "kwargs", ".", "get", "(", "'empty_cluster_threshold'", ",", "EMPTY_CLUSTER_THRESHOLD", "/", "n_sprites", ")", "\n", "self", ".", "_reassign_cluster", "=", "kwargs", ".", "get", "(", "'reassign_cluster'", ",", "True", ")", "\n", "self", ".", "inject_noise", "=", "kwargs", ".", "get", "(", "'inject_noise'", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.init_masks": [[105, 118], ["torch.ones", "torch.ones", "torch.ones", "torch.ones", "tools.create_gaussian_weights", "tools.create_gaussian_weights.unsqueeze().expand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "NotImplementedError", "tools.create_gaussian_weights.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.create_gaussian_weights"], ["", "@", "staticmethod", "\n", "def", "init_masks", "(", "K", ",", "mask_init", ",", "size", ",", "std", "=", "None", ")", ":", "\n", "        ", "if", "mask_init", "==", "'constant'", ":", "\n", "            ", "masks", "=", "torch", ".", "ones", "(", "K", ",", "1", ",", "*", "size", ")", "\n", "", "elif", "mask_init", "==", "'gaussian'", ":", "\n", "            ", "assert", "std", "is", "not", "None", "\n", "mask", "=", "create_gaussian_weights", "(", "size", ",", "1", ",", "std", ")", "\n", "masks", "=", "mask", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "K", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "", "elif", "mask_init", "==", "'random'", ":", "\n", "            ", "masks", "=", "torch", ".", "rand", "(", "K", ",", "*", "size", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "f'unkwon mask_init: {mask_init}'", ")", "\n", "", "return", "masks", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.n_prototypes": [[119, 122], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "n_prototypes", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_sprites", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.masks": [[123, 133], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "dti_sprites.DTISprites.clamp_func", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "@", "property", "\n", "def", "masks", "(", "self", ")", ":", "\n", "        ", "masks", "=", "self", ".", "mask_params", "\n", "if", "self", ".", "add_empty_sprite", ":", "\n", "            ", "masks", "=", "torch", ".", "cat", "(", "[", "masks", ",", "torch", ".", "zeros", "(", "1", ",", "*", "masks", "[", "0", "]", ".", "shape", ",", "device", "=", "masks", ".", "device", ")", "]", ")", "\n", "\n", "", "if", "self", ".", "inject_noise", "and", "self", ".", "training", ":", "\n", "            ", "return", "masks", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "clamp_func", "(", "masks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.prototypes": [[134, 141], ["dti_sprites.DTISprites.clamp_func", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "prototypes", "(", "self", ")", ":", "\n", "        ", "params", "=", "self", ".", "prototype_params", "\n", "if", "self", ".", "add_empty_sprite", ":", "\n", "            ", "params", "=", "torch", ".", "cat", "(", "[", "params", ",", "torch", ".", "zeros", "(", "1", ",", "*", "params", "[", "0", "]", ".", "shape", ",", "device", "=", "params", ".", "device", ")", "]", ")", "\n", "\n", "", "return", "self", ".", "clamp_func", "(", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.backgrounds": [[142, 145], ["dti_sprites.DTISprites.clamp_func"], "methods", ["None"], ["", "@", "property", "\n", "def", "backgrounds", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "clamp_func", "(", "self", ".", "bkg_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.is_layer_tsf_id": [[146, 152], ["hasattr"], "methods", ["None"], ["", "@", "property", "\n", "def", "is_layer_tsf_id", "(", "self", ")", ":", "\n", "        ", "if", "hasattr", "(", "self", ",", "'layer_transformer'", ")", ":", "\n", "            ", "return", "self", ".", "layer_transformer", ".", "only_id_activated", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.are_sprite_frozen": [[153, 156], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "are_sprite_frozen", "(", "self", ")", ":", "\n", "        ", "return", "True", "if", "self", ".", "freeze_milestone", ">", "0", "and", "self", ".", "cur_epoch", "<", "self", ".", "freeze_milestone", "else", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.cluster_parameters": [[157, 162], ["iter", "params.append"], "methods", ["None"], ["", "def", "cluster_parameters", "(", "self", ")", ":", "\n", "        ", "params", "=", "[", "self", ".", "prototype_params", ",", "self", ".", "mask_params", "]", "\n", "if", "self", ".", "learn_backgrounds", ":", "\n", "            ", "params", ".", "append", "(", "self", ".", "bkg_params", ")", "\n", "", "return", "iter", "(", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.transformer_parameters": [[163, 172], ["hasattr", "itertools.chain", "t.parameters", "params.append", "params.append", "params.append", "dti_sprites.DTISprites.layer_transformer.parameters", "dti_sprites.DTISprites.bkg_transformer.parameters", "dti_sprites.DTISprites.occ_predictor.parameters"], "methods", ["None"], ["", "def", "transformer_parameters", "(", "self", ")", ":", "\n", "        ", "params", "=", "[", "t", ".", "parameters", "(", ")", "for", "t", "in", "self", ".", "sprite_transformers", "]", "\n", "if", "hasattr", "(", "self", ",", "'layer_transformer'", ")", ":", "\n", "            ", "params", ".", "append", "(", "self", ".", "layer_transformer", ".", "parameters", "(", ")", ")", "\n", "", "if", "self", ".", "learn_backgrounds", ":", "\n", "            ", "params", ".", "append", "(", "self", ".", "bkg_transformer", ".", "parameters", "(", ")", ")", "\n", "", "if", "self", ".", "pred_occlusion", ":", "\n", "            ", "params", ".", "append", "(", "self", ".", "occ_predictor", ".", "parameters", "(", ")", ")", "\n", "", "return", "chain", "(", "*", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.forward": [[173, 190], ["x.unsqueeze().expand.unsqueeze().expand.size", "dti_sprites.DTISprites.predict", "dti_sprites.DTISprites.compose", "x.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "dti_sprites.DTISprites.criterion", "[].mean", "dti_sprites.DTISprites.compose", "dti_sprites.DTISprites.criterion().mean", "class_prob.permute().flatten", "x.unsqueeze().expand.unsqueeze().expand.unsqueeze", "dti_sprites.DTISprites.criterion", "dti_sprites.DTISprites.min", "x.unsqueeze().expand.unsqueeze().expand.unsqueeze", "dti_sprites.DTISprites.unsqueeze", "class_prob.permute"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.predict", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.compose", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.criterion", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.compose", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.criterion"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "L", ",", "K", ",", "M", "=", "self", ".", "n_objects", ",", "self", ".", "n_sprites", ",", "self", ".", "n_backgrounds", "or", "1", "\n", "tsf_layers", ",", "tsf_masks", ",", "tsf_bkgs", ",", "occ_grid", ",", "class_prob", "=", "self", ".", "predict", "(", "x", ")", "\n", "\n", "if", "class_prob", "is", "None", ":", "\n", "            ", "target", "=", "self", ".", "compose", "(", "tsf_layers", ",", "tsf_masks", ",", "occ_grid", ",", "tsf_bkgs", ",", "class_prob", ")", "# B(K**L*M)CHW", "\n", "x", "=", "x", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "K", "**", "L", "*", "M", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "distances", "=", "self", ".", "criterion", "(", "x", ",", "target", ")", "\n", "loss", "=", "distances", ".", "min", "(", "1", ")", "[", "0", "]", ".", "mean", "(", ")", "\n", "\n", "", "else", ":", "\n", "            ", "target", "=", "self", ".", "compose", "(", "tsf_layers", ",", "tsf_masks", ",", "occ_grid", ",", "tsf_bkgs", ",", "class_prob", ")", "# BCHW", "\n", "loss", "=", "self", ".", "criterion", "(", "x", ".", "unsqueeze", "(", "1", ")", ",", "target", ".", "unsqueeze", "(", "1", ")", ")", ".", "mean", "(", ")", "\n", "distances", "=", "1", "-", "class_prob", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "flatten", "(", "1", ")", "# B(L*K)", "\n", "\n", "", "return", "loss", ",", "distances", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.predict": [[191, 241], ["x.size", "dti_sprites.DTISprites.prototypes.unsqueeze().expand", "dti_sprites.DTISprites.masks.unsqueeze().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dti_sprites.DTISprites.encoder", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "dti_sprites.DTISprites.predict_occlusion_grid", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "sprites.detach.detach.detach", "dti_sprites.DTISprites.unsqueeze().expand().reshape", "torch.stack.transpose.view().transpose", "torch.stack.transpose", "torch.stack.transpose", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "dti_sprites.DTISprites.backgrounds.unsqueeze().expand", "[].transpose", "[].expand().transpose", "dti_sprites.DTISprites.clamp_func", "dti_sprites.DTISprites.greedy_algo_selection", "dti_sprites.DTISprites.prototypes.unsqueeze", "dti_sprites.DTISprites.masks.unsqueeze", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "dti_sprites.DTISprites.layer_transformer", "range", "dti_sprites.DTISprites.unsqueeze().expand", "torch.stack.view", "torch.stack.view", "torch.stack.transpose.view", "dti_sprites.DTISprites.backgrounds.unsqueeze", "[].expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dti_sprites.DTISprites.bkg_transformer", "dti_sprites.DTISprites.unsqueeze", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.rand", "torch.rand", "torch.rand", "torch.rand"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.predict_occlusion_grid", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.greedy_algo_selection"], ["", "def", "predict", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "h", ",", "w", "=", "self", ".", "prototypes", ".", "shape", "[", "2", ":", "]", "\n", "L", ",", "K", ",", "M", "=", "self", ".", "n_objects", ",", "self", ".", "n_sprites", ",", "self", ".", "n_backgrounds", "or", "1", "\n", "prototypes", "=", "self", ".", "prototypes", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "K", ",", "B", ",", "C", ",", "-", "1", ",", "-", "1", ")", "\n", "masks", "=", "self", ".", "masks", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "K", ",", "B", ",", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "sprites", "=", "torch", ".", "cat", "(", "[", "prototypes", ",", "masks", "]", ",", "dim", "=", "2", ")", "\n", "if", "self", ".", "inject_noise", "and", "self", ".", "training", ":", "\n", "# XXX we use a canva to inject noise after transformations to avoid gridding artefacts", "\n", "            ", "if", "self", ".", "add_empty_sprite", ":", "\n", "                ", "canvas", "=", "torch", ".", "cat", "(", "[", "torch", ".", "ones", "(", "K", "-", "1", ",", "B", ",", "1", ",", "h", ",", "w", ")", ",", "torch", ".", "zeros", "(", "1", ",", "B", ",", "1", ",", "h", ",", "w", ")", "]", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "", "else", ":", "\n", "                ", "canvas", "=", "torch", ".", "ones", "(", "K", ",", "B", ",", "1", ",", "h", ",", "w", ",", "device", "=", "x", ".", "device", ")", "\n", "", "sprites", "=", "torch", ".", "cat", "(", "[", "sprites", ",", "canvas", "]", ",", "dim", "=", "2", ")", "\n", "", "if", "self", ".", "are_sprite_frozen", ":", "\n", "            ", "sprites", "=", "sprites", ".", "detach", "(", ")", "\n", "\n", "", "features", "=", "self", ".", "encoder", "(", "x", ")", "\n", "tsf_sprites", "=", "torch", ".", "stack", "(", "[", "self", ".", "sprite_transformers", "[", "k", "]", "(", "x", ",", "sprites", ",", "features", ")", "[", "1", "]", "for", "k", "in", "range", "(", "L", ")", "]", ",", "dim", "=", "0", ")", "\n", "if", "self", ".", "has_layer_tsf", ":", "\n", "            ", "layer_features", "=", "features", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "K", ",", "-", "1", ")", ".", "reshape", "(", "B", "*", "K", ",", "-", "1", ")", "\n", "tsf_layers", "=", "self", ".", "layer_transformer", "(", "x", ",", "tsf_sprites", ".", "view", "(", "L", ",", "B", "*", "K", ",", "-", "1", ",", "h", ",", "w", ")", ",", "layer_features", ")", "[", "1", "]", "\n", "tsf_layers", "=", "tsf_layers", ".", "view", "(", "B", ",", "K", ",", "L", ",", "-", "1", ",", "H", ",", "W", ")", ".", "transpose", "(", "0", ",", "2", ")", "# LKBCHW", "\n", "", "else", ":", "\n", "            ", "tsf_layers", "=", "tsf_sprites", ".", "transpose", "(", "1", ",", "2", ")", "# LKBCHW", "\n", "\n", "", "if", "self", ".", "inject_noise", "and", "self", ".", "training", ":", "\n", "            ", "tsf_layers", ",", "tsf_masks", ",", "tsf_noise", "=", "torch", ".", "split", "(", "tsf_layers", ",", "[", "C", ",", "1", ",", "1", "]", ",", "dim", "=", "3", ")", "\n", "", "else", ":", "\n", "            ", "tsf_layers", ",", "tsf_masks", "=", "torch", ".", "split", "(", "tsf_layers", ",", "[", "C", ",", "1", "]", ",", "dim", "=", "3", ")", "\n", "\n", "", "if", "self", ".", "learn_backgrounds", ":", "\n", "            ", "backgrounds", "=", "self", ".", "backgrounds", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "M", ",", "B", ",", "C", ",", "-", "1", ",", "-", "1", ")", "\n", "tsf_bkgs", "=", "self", ".", "bkg_transformer", "(", "x", ",", "backgrounds", ",", "features", ")", "[", "1", "]", ".", "transpose", "(", "0", ",", "1", ")", "# MBCHW", "\n", "", "else", ":", "\n", "            ", "tsf_bkgs", "=", "None", "\n", "\n", "", "if", "self", ".", "inject_noise", "and", "self", ".", "training", ":", "\n", "            ", "noise", "=", "torch", ".", "rand", "(", "K", ",", "1", ",", "H", ",", "W", ",", "device", "=", "x", ".", "device", ")", "[", "None", ",", "None", ",", "...", "]", ".", "expand", "(", "L", ",", "B", ",", "K", ",", "1", ",", "H", ",", "W", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "tsf_masks", "+=", "tsf_noise", "*", "(", "2", "*", "self", ".", "inject_noise", "*", "noise", "-", "self", ".", "inject_noise", ")", "\n", "tsf_masks", "=", "self", ".", "clamp_func", "(", "tsf_masks", ")", "\n", "\n", "", "occ_grid", "=", "self", ".", "predict_occlusion_grid", "(", "x", ",", "features", ")", "# LLB", "\n", "if", "self", ".", "estimate_minimum", ":", "\n", "            ", "class_prob", "=", "self", ".", "greedy_algo_selection", "(", "x", ",", "tsf_layers", ",", "tsf_masks", ",", "tsf_bkgs", ",", "occ_grid", ")", "# LKB", "\n", "self", ".", "_class_prob", "=", "class_prob", "# for monitoring and debug only", "\n", "", "else", ":", "\n", "            ", "class_prob", "=", "None", "\n", "\n", "", "return", "tsf_layers", ",", "tsf_masks", ",", "tsf_bkgs", ",", "occ_grid", ",", "class_prob", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.predict_occlusion_grid": [[242, 256], ["dti_sprites.DTISprites.permute", "x.size", "dti_sprites.DTISprites.occ_predictor", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.tril_indices", "torch.tril_indices", "torch.tril_indices", "torch.tril_indices", "dti_sprites.DTISprites.occ_grid.unsqueeze().expand", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "dti_sprites.DTISprites.occ_grid.unsqueeze", "torch.zeros.transpose", "torch.zeros.transpose"], "methods", ["None"], ["", "def", "predict_occlusion_grid", "(", "self", ",", "x", ",", "features", ")", ":", "\n", "        ", "B", ",", "L", "=", "x", ".", "size", "(", "0", ")", ",", "self", ".", "n_objects", "\n", "if", "self", ".", "pred_occlusion", ":", "\n", "            ", "inp", "=", "features", "if", "features", "is", "not", "None", "else", "x", "\n", "occ_grid", "=", "self", ".", "occ_predictor", "(", "inp", ")", "# view(-1, L, L)", "\n", "occ_grid", "=", "torch", ".", "sigmoid", "(", "occ_grid", ")", "\n", "grid", "=", "torch", ".", "zeros", "(", "B", ",", "L", ",", "L", ",", "device", "=", "x", ".", "device", ")", "\n", "indices", "=", "torch", ".", "tril_indices", "(", "row", "=", "L", ",", "col", "=", "L", ",", "offset", "=", "-", "1", ")", "\n", "grid", "[", ":", ",", "indices", "[", "0", "]", ",", "indices", "[", "1", "]", "]", "=", "occ_grid", "\n", "occ_grid", "=", "grid", "+", "torch", ".", "triu", "(", "1", "-", "grid", ".", "transpose", "(", "1", ",", "2", ")", ",", "diagonal", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "occ_grid", "=", "self", ".", "occ_grid", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "B", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "", "return", "occ_grid", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "# LLB", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.greedy_algo_selection": [[257, 302], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat().permute", "torch.cat().permute", "torch.cat().permute", "torch.cat().permute", "range", "x.unsqueeze().expand", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "zip", "range", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.zeros().scatter_", "x.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "recons.append", "distance.argmin", "torch.cat.argmax().flatten", "torch.cat.argmax().flatten", "torch.cat.argmax().flatten", "torch.cat.argmax().flatten", "diff_select[].append", "diff_select[].append", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dti_sprites.layered_composition", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "str", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.cat.argmax", "torch.cat.argmax", "torch.cat.argmax", "torch.cat.argmax", "torch.cat().permute.permute", "torch.cat().permute.permute", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.stack", "torch.stack", "torch.stack", "torch.stack"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.layered_composition"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "greedy_algo_selection", "(", "self", ",", "x", ",", "layers", ",", "masks", ",", "bkgs", ",", "occ_grid", ")", ":", "\n", "        ", "L", ",", "K", ",", "B", ",", "C", ",", "H", ",", "W", "=", "layers", ".", "shape", "\n", "if", "self", ".", "add_empty_sprite", "and", "self", ".", "are_sprite_frozen", ":", "\n", "            ", "layers", ",", "masks", "=", "layers", "[", ":", ",", ":", "-", "1", "]", ",", "masks", "[", ":", ",", ":", "-", "1", "]", "\n", "K", "=", "K", "-", "1", "\n", "", "x", ",", "device", "=", "x", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "K", ",", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ",", "x", ".", "device", "\n", "bkgs", "=", "torch", ".", "zeros", "(", "1", ",", "B", ",", "C", ",", "H", ",", "W", ",", "device", "=", "device", ")", "if", "bkgs", "is", "None", "else", "bkgs", "\n", "cur_layers", "=", "torch", ".", "cat", "(", "[", "bkgs", ",", "torch", ".", "zeros", "(", "L", ",", "B", ",", "C", ",", "H", ",", "W", ",", "device", "=", "device", ")", "]", ")", "\n", "cur_masks", "=", "torch", ".", "cat", "(", "[", "torch", ".", "ones", "(", "1", ",", "B", ",", "1", ",", "H", ",", "W", ",", "device", "=", "device", ")", ",", "torch", ".", "zeros", "(", "L", ",", "B", ",", "1", ",", "H", ",", "W", ",", "device", "=", "device", ")", "]", ")", "\n", "one", ",", "zero", "=", "torch", ".", "ones", "(", "B", ",", "L", ",", "1", ",", "device", "=", "device", ")", ",", "torch", ".", "zeros", "(", "B", ",", "1", ",", "L", "+", "1", ",", "device", "=", "device", ")", "\n", "occ_grid", "=", "torch", ".", "cat", "(", "[", "zero", ",", "torch", ".", "cat", "(", "[", "one", ",", "occ_grid", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "]", ",", "dim", "=", "2", ")", "]", ",", "dim", "=", "1", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "resps", ",", "diff_select", "=", "torch", ".", "zeros", "(", "L", ",", "K", ",", "B", ",", "device", "=", "device", ")", ",", "[", "[", "]", ",", "[", "]", "]", "\n", "for", "step", "in", "range", "(", "self", ".", "greedy_algo_iter", ")", ":", "\n", "            ", "for", "l", ",", "(", "layer", ",", "mask", ")", "in", "enumerate", "(", "zip", "(", "layers", ",", "masks", ")", ",", "start", "=", "1", ")", ":", "\n", "                ", "recons", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "K", ")", ":", "\n", "                    ", "tmp_layers", "=", "torch", ".", "cat", "(", "[", "cur_layers", "[", ":", "l", "]", ",", "layer", "[", "[", "k", "]", "]", ",", "cur_layers", "[", "l", "+", "1", ":", "]", "]", ")", "\n", "tmp_masks", "=", "torch", ".", "cat", "(", "[", "cur_masks", "[", ":", "l", "]", ",", "mask", "[", "[", "k", "]", "]", ",", "cur_masks", "[", "l", "+", "1", ":", "]", "]", ")", "\n", "recons", ".", "append", "(", "layered_composition", "(", "tmp_layers", ",", "tmp_masks", ",", "occ_grid", ")", ")", "\n", "", "distance", "=", "(", "(", "x", "-", "torch", ".", "stack", "(", "recons", ")", ")", "**", "2", ")", ".", "flatten", "(", "2", ")", ".", "mean", "(", "2", ")", "\n", "if", "self", ".", "add_empty_sprite", "and", "not", "self", ".", "are_sprite_frozen", ":", "\n", "                    ", "distance", "+=", "self", ".", "lambda_empty_sprite", "*", "torch", ".", "Tensor", "(", "[", "1", "]", "*", "(", "K", "-", "1", ")", "+", "[", "0", "]", ")", ".", "to", "(", "device", ")", "[", ":", ",", "None", "]", "\n", "", "resp", "=", "torch", ".", "zeros", "(", "K", ",", "B", ",", "device", "=", "device", ")", ".", "scatter_", "(", "0", ",", "distance", ".", "argmin", "(", "0", ",", "keepdim", "=", "True", ")", ",", "1", ")", "\n", "resps", "[", "l", "-", "1", "]", "=", "resp", "\n", "cur_layers", "[", "l", "]", "=", "(", "layer", "*", "resp", "[", "...", ",", "None", ",", "None", ",", "None", "]", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "cur_masks", "[", "l", "]", "=", "(", "mask", "*", "resp", "[", "...", ",", "None", ",", "None", ",", "None", "]", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "", "if", "True", ":", "\n", "# For debug purposes only", "\n", "                ", "if", "step", "==", "0", ":", "\n", "                    ", "indices", "=", "resps", ".", "argmax", "(", "1", ")", ".", "flatten", "(", ")", "\n", "", "else", ":", "\n", "                    ", "new_indices", "=", "resps", ".", "argmax", "(", "1", ")", ".", "flatten", "(", ")", "\n", "diff_select", "[", "0", "]", ".", "append", "(", "str", "(", "step", ")", ")", "\n", "diff_select", "[", "1", "]", ".", "append", "(", "(", "new_indices", "!=", "indices", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ".", "item", "(", ")", ")", "\n", "indices", "=", "new_indices", "\n", "# For debug purposes only", "\n", "", "", "", "if", "step", ">", "0", ":", "\n", "            ", "self", ".", "_diff_selections", "=", "diff_select", "\n", "\n", "", "if", "self", ".", "add_empty_sprite", "and", "self", ".", "are_sprite_frozen", ":", "\n", "            ", "resps", "=", "torch", ".", "cat", "(", "[", "resps", ",", "torch", ".", "zeros", "(", "L", ",", "1", ",", "B", ",", "device", "=", "device", ")", "]", ",", "dim", "=", "1", ")", "\n", "", "return", "resps", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.compose": [[303, 346], ["dti_sprites.layered_composition", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "torch.zeros.view().transpose", "torch.zeros.view().transpose", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat().permute", "torch.cat().permute", "torch.cat().permute", "torch.cat().permute", "[].transpose", "[].transpose", "backgrounds[].transpose.size", "backgrounds[].transpose", "torch.cat().permute", "torch.cat().permute", "torch.cat().permute", "torch.cat().permute", "len", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "range", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "range", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len", "torch.zeros.view", "torch.zeros.view", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat().permute.permute", "torch.cat().permute.permute", "torch.cat().permute.permute", "torch.cat().permute.permute"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.layered_composition"], ["", "def", "compose", "(", "self", ",", "layers", ",", "masks", ",", "occ_grid", ",", "backgrounds", "=", "None", ",", "class_prob", "=", "None", ")", ":", "\n", "        ", "L", ",", "K", ",", "B", ",", "C", ",", "H", ",", "W", "=", "layers", ".", "shape", "\n", "device", "=", "occ_grid", ".", "device", "\n", "\n", "if", "class_prob", "is", "not", "None", ":", "\n", "            ", "masks", "=", "(", "masks", "*", "class_prob", "[", "...", ",", "None", ",", "None", ",", "None", "]", ")", ".", "sum", "(", "axis", "=", "1", ")", "\n", "layers", "=", "(", "layers", "*", "class_prob", "[", "...", ",", "None", ",", "None", ",", "None", "]", ")", ".", "sum", "(", "axis", "=", "1", ")", "\n", "size", "=", "(", "B", ",", "C", ",", "H", ",", "W", ")", "\n", "if", "backgrounds", "is", "not", "None", ":", "\n", "                ", "masks", "=", "torch", ".", "cat", "(", "[", "torch", ".", "ones", "(", "1", ",", "B", ",", "1", ",", "H", ",", "W", ",", "device", "=", "device", ")", ",", "masks", "]", ")", "\n", "layers", "=", "torch", ".", "cat", "(", "[", "backgrounds", ",", "layers", "]", ")", "\n", "one", ",", "zero", "=", "torch", ".", "ones", "(", "B", ",", "L", ",", "1", ",", "device", "=", "device", ")", ",", "torch", ".", "zeros", "(", "B", ",", "1", ",", "L", "+", "1", ",", "device", "=", "device", ")", "\n", "occ_grid", "=", "torch", ".", "cat", "(", "[", "zero", ",", "torch", ".", "cat", "(", "[", "one", ",", "occ_grid", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "]", ",", "dim", "=", "2", ")", "]", ",", "dim", "=", "1", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "", "return", "layered_composition", "(", "layers", ",", "masks", ",", "occ_grid", ")", "\n", "\n", "", "else", ":", "\n", "            ", "layers", "=", "[", "layers", "[", "k", "]", "[", "(", "None", ",", ")", "*", "(", "L", "-", "1", ")", "]", ".", "transpose", "(", "k", ",", "L", "-", "1", ")", "for", "k", "in", "range", "(", "L", ")", "]", "# L elements of size K1.. 1BCHW", "\n", "masks", "=", "[", "masks", "[", "k", "]", "[", "(", "None", ",", ")", "*", "(", "L", "-", "1", ")", "]", ".", "transpose", "(", "k", ",", "L", "-", "1", ")", "for", "k", "in", "range", "(", "L", ")", "]", "# L elements of size K1...1BCHW", "\n", "size", "=", "(", "K", ",", ")", "*", "L", "+", "(", "B", ",", "C", ",", "H", ",", "W", ")", "\n", "if", "backgrounds", "is", "not", "None", ":", "\n", "                ", "M", "=", "backgrounds", ".", "size", "(", "0", ")", "\n", "backgrounds", "=", "backgrounds", "[", "(", "None", ",", ")", "*", "L", "]", ".", "transpose", "(", "0", ",", "L", ")", "# M1..1BCHW", "\n", "layers", "=", "[", "backgrounds", "]", "+", "[", "layers", "[", "k", "]", "[", "None", "]", "for", "k", "in", "range", "(", "L", ")", "]", "\n", "masks", "=", "[", "torch", ".", "ones", "(", "(", "1", ",", ")", "*", "(", "L", "+", "1", ")", "+", "(", "B", ",", "C", ",", "H", ",", "W", ")", ")", ".", "to", "(", "device", ")", "]", "+", "[", "masks", "[", "k", "]", "[", "None", "]", "for", "k", "in", "range", "(", "L", ")", "]", "\n", "one", ",", "zero", "=", "torch", ".", "ones", "(", "B", ",", "L", ",", "1", ",", "device", "=", "device", ")", ",", "torch", ".", "zeros", "(", "B", ",", "1", ",", "L", "+", "1", ",", "device", "=", "device", ")", "\n", "occ_grid", "=", "torch", ".", "cat", "(", "[", "zero", ",", "torch", ".", "cat", "(", "[", "one", ",", "occ_grid", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "]", ",", "dim", "=", "2", ")", "]", ",", "dim", "=", "1", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "size", "=", "(", "M", ",", ")", "+", "size", "\n", "", "else", ":", "\n", "                ", "M", "=", "1", "\n", "\n", "", "occ_grid", "=", "occ_grid", "[", "...", ",", "None", ",", "None", ",", "None", "]", "\n", "res", "=", "torch", ".", "zeros", "(", "size", ",", "device", "=", "device", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "layers", ")", ")", ":", "\n", "                ", "if", "backgrounds", "is", "not", "None", ":", "\n", "                    ", "j_start", "=", "1", "if", "self", ".", "pred_occlusion", "else", "k", "+", "1", "\n", "", "else", ":", "\n", "                    ", "j_start", "=", "0", "if", "self", ".", "pred_occlusion", "else", "k", "+", "1", "\n", "", "occ_masks", "=", "torch", ".", "ones", "(", "size", ",", "device", "=", "device", ")", "\n", "for", "j", "in", "range", "(", "j_start", ",", "len", "(", "layers", ")", ")", ":", "\n", "                    ", "if", "j", "!=", "k", ":", "\n", "                        ", "occ_masks", "*=", "1", "-", "occ_grid", "[", "j", ",", "k", "]", "*", "masks", "[", "j", "]", "\n", "", "", "res", "+=", "occ_masks", "*", "masks", "[", "k", "]", "*", "layers", "[", "k", "]", "\n", "", "return", "res", ".", "view", "(", "K", "**", "L", "*", "M", ",", "B", ",", "C", ",", "H", ",", "W", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.criterion": [[347, 359], ["dti_sprites.DTISprites._criterion", "dti_sprites.DTISprites.flatten().mean", "dti_sprites.DTISprites.flatten().sum", "dti_sprites.DTISprites.flatten", "dti_sprites.DTISprites.flatten"], "methods", ["None"], ["", "", "def", "criterion", "(", "self", ",", "inp", ",", "target", ",", "weights", "=", "None", ",", "reduction", "=", "'mean'", ")", ":", "\n", "        ", "dist", "=", "self", ".", "_criterion", "(", "inp", ",", "target", ")", "\n", "if", "weights", "is", "not", "None", ":", "\n", "            ", "dist", "=", "dist", "*", "weights", "\n", "", "if", "reduction", "==", "'mean'", ":", "\n", "            ", "return", "dist", ".", "flatten", "(", "2", ")", ".", "mean", "(", "2", ")", "\n", "", "elif", "reduction", "==", "'sum'", ":", "\n", "            ", "return", "dist", ".", "flatten", "(", "2", ")", ".", "sum", "(", "2", ")", "\n", "", "elif", "reduction", "==", "'none'", ":", "\n", "            ", "return", "dist", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.transform": [[360, 407], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "x.size", "dti_sprites.DTISprites.predict", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.zeros().scatter_", "[].transpose().expand", "dti_sprites.DTISprites.compose().squeeze", "target.unsqueeze.unsqueeze.clamp().long", "class_prob.argmax", "[].transpose().expand", "dti_sprites.DTISprites.compose().squeeze", "target.unsqueeze.unsqueeze.clamp().long", "dti_sprites.DTISprites.compose", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "[].transpose", "dti_sprites.DTISprites.compose", "target.unsqueeze.unsqueeze.clamp", "tsf_layers.clamp", "tsf_masks.clamp", "tsf_bkgs.clamp.clamp.clamp", "target.unsqueeze.unsqueeze.unsqueeze", "range", "[].transpose", "dti_sprites.DTISprites.compose", "target.unsqueeze.unsqueeze.clamp", "compo.insert", "tsf_layers[].transpose", "tsf_masks[].transpose", "tsf_bkgs.clamp.clamp.transpose", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.predict", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.compose", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.compose", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.compose"], ["", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "transform", "(", "self", ",", "x", ",", "with_composition", "=", "False", ",", "pred_semantic_labels", "=", "False", ",", "pred_instance_labels", "=", "False", ",", "\n", "with_bkg", "=", "True", ",", "hard_occ_grid", "=", "False", ")", ":", "\n", "        ", "B", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "L", ",", "K", "=", "self", ".", "n_objects", ",", "self", ".", "n_sprites", "\n", "tsf_layers", ",", "tsf_masks", ",", "tsf_bkgs", ",", "occ_grid", ",", "class_prob", "=", "self", ".", "predict", "(", "x", ")", "\n", "if", "class_prob", "is", "not", "None", ":", "\n", "            ", "class_oh", "=", "torch", ".", "zeros", "(", "class_prob", ".", "shape", ",", "device", "=", "x", ".", "device", ")", ".", "scatter_", "(", "1", ",", "class_prob", ".", "argmax", "(", "1", ",", "keepdim", "=", "True", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "class_oh", "=", "None", "\n", "\n", "", "if", "pred_semantic_labels", ":", "\n", "            ", "label_layers", "=", "torch", ".", "arange", "(", "1", ",", "K", "+", "1", ",", "device", "=", "x", ".", "device", ")", "[", "(", "None", ",", ")", "*", "4", "]", ".", "transpose", "(", "0", ",", "4", ")", ".", "expand", "(", "L", ",", "-", "1", ",", "B", ",", "1", ",", "H", ",", "W", ")", "\n", "true_occ_grid", "=", "(", "occ_grid", ">", "0.5", ")", ".", "float", "(", ")", "\n", "target", "=", "self", ".", "compose", "(", "label_layers", ",", "(", "tsf_masks", ">", "0.5", ")", ".", "long", "(", ")", ",", "true_occ_grid", ",", "class_prob", "=", "class_oh", ")", ".", "squeeze", "(", "1", ")", "\n", "return", "target", ".", "clamp", "(", "0", ",", "self", ".", "n_sprites", ")", ".", "long", "(", ")", "\n", "\n", "", "elif", "pred_instance_labels", ":", "\n", "            ", "label_layers", "=", "torch", ".", "arange", "(", "1", ",", "L", "+", "1", ",", "device", "=", "x", ".", "device", ")", "[", "(", "None", ",", ")", "*", "5", "]", ".", "transpose", "(", "0", ",", "5", ")", ".", "expand", "(", "-", "1", ",", "K", ",", "B", ",", "1", ",", "H", ",", "W", ")", "\n", "true_occ_grid", "=", "(", "occ_grid", ">", "0.5", ")", ".", "float", "(", ")", "\n", "target", "=", "self", ".", "compose", "(", "label_layers", ",", "(", "tsf_masks", ">", "0.5", ")", ".", "long", "(", ")", ",", "true_occ_grid", ",", "class_prob", "=", "class_oh", ")", ".", "squeeze", "(", "1", ")", "\n", "target", "=", "target", ".", "clamp", "(", "0", ",", "L", ")", ".", "long", "(", ")", "\n", "if", "not", "with_bkg", "and", "class_oh", "is", "not", "None", ":", "\n", "                ", "bkg_idx", "=", "target", "==", "0", "\n", "tsf_layers", "=", "(", "tsf_layers", "*", "class_oh", "[", "...", ",", "None", ",", "None", ",", "None", "]", ")", ".", "sum", "(", "axis", "=", "1", ")", "\n", "new_target", "=", "(", "(", "tsf_layers", "-", "x", ")", "**", "2", ")", ".", "sum", "(", "2", ")", ".", "argmin", "(", "0", ")", ".", "long", "(", ")", "+", "1", "\n", "target", "[", "bkg_idx", "]", "=", "new_target", "[", "bkg_idx", "]", "\n", "", "return", "target", "\n", "\n", "", "else", ":", "\n", "            ", "occ_grid", "=", "(", "occ_grid", ">", "0.5", ")", ".", "float", "(", ")", "if", "hard_occ_grid", "else", "occ_grid", "\n", "tsf_layers", ",", "tsf_masks", "=", "tsf_layers", ".", "clamp", "(", "0", ",", "1", ")", ",", "tsf_masks", ".", "clamp", "(", "0", ",", "1", ")", "\n", "if", "tsf_bkgs", "is", "not", "None", ":", "\n", "                ", "tsf_bkgs", "=", "tsf_bkgs", ".", "clamp", "(", "0", ",", "1", ")", "\n", "", "target", "=", "self", ".", "compose", "(", "tsf_layers", ",", "tsf_masks", ",", "occ_grid", ",", "tsf_bkgs", ",", "class_prob", ")", "\n", "if", "class_prob", "is", "not", "None", ":", "\n", "                ", "target", "=", "target", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "", "if", "with_composition", ":", "\n", "                ", "compo", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "L", ")", ":", "\n", "                    ", "compo", "+=", "[", "tsf_layers", "[", "k", "]", ".", "transpose", "(", "0", ",", "1", ")", ",", "tsf_masks", "[", "k", "]", ".", "transpose", "(", "0", ",", "1", ")", "]", "\n", "", "if", "self", ".", "learn_backgrounds", ":", "\n", "                    ", "compo", ".", "insert", "(", "2", ",", "tsf_bkgs", ".", "transpose", "(", "0", ",", "1", ")", ")", "\n", "", "return", "target", ",", "compo", "\n", "", "else", ":", "\n", "                ", "return", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.step": [[408, 415], ["hasattr", "tsf.step", "dti_sprites.DTISprites.layer_transformer.step", "dti_sprites.DTISprites.bkg_transformer.step"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.step", "home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.step", "home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.step"], ["", "", "", "def", "step", "(", "self", ")", ":", "\n", "        ", "self", ".", "cur_epoch", "+=", "1", "\n", "[", "tsf", ".", "step", "(", ")", "for", "tsf", "in", "self", ".", "sprite_transformers", "]", "\n", "if", "hasattr", "(", "self", ",", "'layer_transformer'", ")", ":", "\n", "            ", "self", ".", "layer_transformer", ".", "step", "(", ")", "\n", "", "if", "self", ".", "learn_backgrounds", ":", "\n", "            ", "self", ".", "bkg_transformer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.set_optimizer": [[416, 423], ["hasattr", "tsf.set_optimizer", "dti_sprites.DTISprites.layer_transformer.set_optimizer", "dti_sprites.DTISprites.bkg_transformer.set_optimizer"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.set_optimizer", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.set_optimizer", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.set_optimizer"], ["", "", "def", "set_optimizer", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "optimizer", "=", "opt", "\n", "[", "tsf", ".", "set_optimizer", "(", "opt", ")", "for", "tsf", "in", "self", ".", "sprite_transformers", "]", "\n", "if", "hasattr", "(", "self", ",", "'layer_transformer'", ")", ":", "\n", "            ", "self", ".", "layer_transformer", ".", "set_optimizer", "(", "opt", ")", "\n", "", "if", "self", ".", "learn_backgrounds", ":", "\n", "            ", "self", ".", "bkg_transformer", ".", "set_optimizer", "(", "opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.load_state_dict": [[424, 443], ["dti_sprites.DTISprites.state_dict", "state_dict.items", "len", "utils.logger.print_warning", "isinstance", "state[].copy_", "state[].copy_", "state[].copy_", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "state[].copy_", "unloaded_params.append", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "state[].size"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.utils.logger.print_warning"], ["", "", "def", "load_state_dict", "(", "self", ",", "state_dict", ")", ":", "\n", "        ", "unloaded_params", "=", "[", "]", "\n", "state", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "name", ",", "param", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "name", "in", "state", ":", "\n", "                ", "if", "isinstance", "(", "param", ",", "nn", ".", "Parameter", ")", ":", "\n", "                    ", "param", "=", "param", ".", "data", "\n", "", "if", "'activations'", "in", "name", "and", "state", "[", "name", "]", ".", "shape", "!=", "param", ".", "shape", ":", "\n", "                    ", "state", "[", "name", "]", ".", "copy_", "(", "torch", ".", "Tensor", "(", "[", "True", "]", "*", "state", "[", "name", "]", ".", "size", "(", "0", ")", ")", ".", "to", "(", "param", ".", "device", ")", ")", "\n", "", "else", ":", "\n", "                    ", "state", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "", "", "elif", "name", "==", "'prototypes'", ":", "\n", "                ", "state", "[", "'prototype_params'", "]", ".", "copy_", "(", "param", ")", "\n", "", "elif", "name", "==", "'backgrounds'", ":", "\n", "                ", "state", "[", "'bkg_params'", "]", ".", "copy_", "(", "param", ")", "\n", "", "else", ":", "\n", "                ", "unloaded_params", ".", "append", "(", "name", ")", "\n", "", "", "if", "len", "(", "unloaded_params", ")", ">", "0", ":", "\n", "            ", "print_warning", "(", "f'load_state_dict: {unloaded_params} not found'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.reassign_empty_clusters": [[444, 461], ["torch.argmax().item", "torch.argmax().item", "torch.argmax().item", "torch.argmax().item", "range", "len", "len", "dti_sprites.DTISprites.restart_branch_from", "max", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "dti_sprites.DTISprites.restart_branch_from", "reassigned.append"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.restart_branch_from", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.restart_branch_from"], ["", "", "def", "reassign_empty_clusters", "(", "self", ",", "proportions", ")", ":", "\n", "        ", "if", "not", "self", ".", "_reassign_cluster", "or", "self", ".", "are_sprite_frozen", ":", "\n", "            ", "return", "[", "]", ",", "0", "\n", "", "if", "self", ".", "add_empty_sprite", ":", "\n", "            ", "proportions", "=", "proportions", "[", ":", "-", "1", "]", "/", "max", "(", "proportions", "[", ":", "-", "1", "]", ")", "\n", "\n", "", "N", ",", "threshold", "=", "len", "(", "proportions", ")", ",", "self", ".", "empty_cluster_threshold", "\n", "reassigned", "=", "[", "]", "\n", "idx", "=", "torch", ".", "argmax", "(", "proportions", ")", ".", "item", "(", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "if", "proportions", "[", "i", "]", "<", "threshold", ":", "\n", "                ", "self", ".", "restart_branch_from", "(", "i", ",", "idx", ")", "\n", "reassigned", ".", "append", "(", "i", ")", "\n", "", "", "if", "len", "(", "reassigned", ")", ">", "0", ":", "\n", "            ", "self", ".", "restart_branch_from", "(", "idx", ",", "idx", ")", "\n", "\n", "", "return", "reassigned", ",", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.restart_branch_from": [[462, 479], ["dti_sprites.DTISprites.prototype_params[].data.copy_", "dti_sprites.DTISprites.mask_params[].data.copy_", "hasattr", "tools.copy_with_noise", "dti_sprites.DTISprites.mask_params[].detach().clone", "tsf.restart_branch_from", "isinstance", "isinstance", "dti_sprites.DTISprites.mask_params[].detach", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.copy_with_noise", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.restart_branch_from"], ["", "def", "restart_branch_from", "(", "self", ",", "i", ",", "j", ")", ":", "\n", "        ", "self", ".", "prototype_params", "[", "i", "]", ".", "data", ".", "copy_", "(", "copy_with_noise", "(", "self", ".", "prototype_params", "[", "j", "]", ",", "NOISE_SCALE", ")", ")", "\n", "self", ".", "mask_params", "[", "i", "]", ".", "data", ".", "copy_", "(", "self", ".", "mask_params", "[", "j", "]", ".", "detach", "(", ")", ".", "clone", "(", ")", ")", "\n", "[", "tsf", ".", "restart_branch_from", "(", "i", ",", "j", ",", "noise_scale", "=", "0", ")", "for", "tsf", "in", "self", ".", "sprite_transformers", "]", "\n", "\n", "if", "hasattr", "(", "self", ",", "'optimizer'", ")", ":", "\n", "            ", "opt", "=", "self", ".", "optimizer", "\n", "params", "=", "[", "self", ".", "mask_params", "]", "\n", "if", "isinstance", "(", "opt", ",", "(", "Adam", ",", ")", ")", ":", "\n", "                ", "for", "param", "in", "params", ":", "\n", "                    ", "opt", ".", "state", "[", "param", "]", "[", "'exp_avg'", "]", "[", "i", "]", "=", "opt", ".", "state", "[", "param", "]", "[", "'exp_avg'", "]", "[", "j", "]", "\n", "opt", ".", "state", "[", "param", "]", "[", "'exp_avg_sq'", "]", "[", "i", "]", "=", "opt", ".", "state", "[", "param", "]", "[", "'exp_avg_sq'", "]", "[", "j", "]", "\n", "", "", "elif", "isinstance", "(", "opt", ",", "(", "RMSprop", ",", ")", ")", ":", "\n", "                ", "for", "param", "in", "params", ":", "\n", "                    ", "opt", ".", "state", "[", "param", "]", "[", "'square_avg'", "]", "[", "i", "]", "=", "opt", ".", "state", "[", "param", "]", "[", "'square_avg'", "]", "[", "j", "]", "\n", "", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "(", "'unknown optimizer: you should define how to reinstanciate statistics if any'", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.layered_composition": [[18, 22], ["occ_grid[].transpose"], "function", ["None"], ["def", "layered_composition", "(", "layers", ",", "masks", ",", "occ_grid", ")", ":", "\n", "# LBCHW size of layers and masks and LLB size for occ_grid", "\n", "    ", "occ_masks", "=", "(", "1", "-", "occ_grid", "[", "...", ",", "None", ",", "None", ",", "None", "]", ".", "transpose", "(", "0", ",", "1", ")", "*", "masks", ")", ".", "prod", "(", "1", ")", "# LBCHW", "\n", "return", "(", "occ_masks", "*", "masks", "*", "layers", ")", ".", "sum", "(", "0", ")", "# BCHW", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.__init__.get_model": [[8, 12], ["None"], "function", ["None"], ["from", "numpy", ".", "random", "import", "seed", "as", "np_seed", "\n", "from", "numpy", ".", "random", "import", "get_state", "as", "np_get_state", "\n", "from", "numpy", ".", "random", "import", "set_state", "as", "np_set_state", "\n", "from", "random", "import", "seed", "as", "rand_seed", "\n", "from", "random", "import", "getstate", "as", "rand_get_state", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.__init__.load_model_from_path": [[14, 30], ["torch.load", "model.to.to", "model.to.load_state_dict", "hasattr", "torch.device", "utils.coerce_to_path_and_check_exist", "__init__.get_model", "tools.safe_model_state_dict", "isinstance", "torch.cuda.is_available", "torch.load.get"], "function", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.load_state_dict", "home.repos.pwc.inspect_result.monniert_dti-sprites.utils.__init__.coerce_to_path_and_check_exist", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.__init__.get_model", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.safe_model_state_dict"], ["import", "torch", "\n", "from", "torch", "import", "manual_seed", "as", "torch_seed", "\n", "from", "torch", "import", "get_rng_state", "as", "torch_get_state", "\n", "from", "torch", "import", "set_rng_state", "as", "torch_set_state", "\n", "\n", "\n", "def", "coerce_to_path_and_check_exist", "(", "path", ")", ":", "\n", "    ", "path", "=", "Path", "(", "path", ")", "\n", "if", "not", "path", ".", "exists", "(", ")", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "'{} does not exist'", ".", "format", "(", "path", ".", "absolute", "(", ")", ")", ")", "\n", "", "return", "path", "\n", "\n", "\n", "", "def", "coerce_to_path_and_create_dir", "(", "path", ")", ":", "\n", "    ", "path", "=", "Path", "(", "path", ")", "\n", "path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "return", "path", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.__init__": [[22, 53], ["torch.nn.Module.__init__", "kwargs.get", "torch.nn.ModuleList", "transformer.Encoder", "tools.get_output_size", "kwargs.get", "kwargs.get", "kwargs.get", "kwargs.get", "kwargs.get", "kwargs.get", "kwargs.get", "kwargs.get", "transformer.TransformationSequence", "range", "copy.deepcopy"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.get_output_size"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "img_size", ",", "n_prototypes", ",", "transformation_sequence", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_prototypes", "=", "n_prototypes", "\n", "self", ".", "sequence_name", "=", "transformation_sequence", "\n", "if", "self", ".", "sequence_name", "in", "[", "'id'", ",", "'identity'", "]", ":", "\n", "            ", "return", "None", "\n", "\n", "", "encoder", "=", "kwargs", ".", "get", "(", "'encoder'", ",", "None", ")", "\n", "if", "encoder", "is", "not", "None", ":", "\n", "            ", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "enc_out_channels", "=", "self", ".", "encoder", ".", "out_ch", "\n", "", "else", ":", "\n", "            ", "encoder_kwargs", "=", "{", "'in_channels'", ":", "in_channels", ",", "'encoder_name'", ":", "kwargs", ".", "get", "(", "'encoder_name'", ",", "'resnet20'", ")", ",", "\n", "'img_size'", ":", "img_size", ",", "'with_pool'", ":", "kwargs", ".", "get", "(", "'with_pool'", ",", "True", ")", "}", "\n", "self", ".", "encoder", "=", "Encoder", "(", "**", "encoder_kwargs", ")", "\n", "self", ".", "enc_out_channels", "=", "get_output_size", "(", "in_channels", ",", "img_size", ",", "self", ".", "encoder", ")", "\n", "\n", "", "tsf_kwargs", "=", "{", "\n", "'in_channels'", ":", "self", ".", "enc_out_channels", ",", "\n", "'img_size'", ":", "img_size", ",", "\n", "'sequence_name'", ":", "self", ".", "sequence_name", ",", "\n", "'color_channels'", ":", "in_channels", ",", "\n", "'grid_size'", ":", "kwargs", ".", "get", "(", "'grid_size'", ",", "4", ")", ",", "\n", "'kernel_size'", ":", "kwargs", ".", "get", "(", "'kernel_size'", ",", "3", ")", ",", "\n", "'padding_mode'", ":", "kwargs", ".", "get", "(", "'padding_mode'", ",", "'zeros'", ")", ",", "\n", "'curriculum_learning'", ":", "kwargs", ".", "get", "(", "'curriculum_learning'", ",", "False", ")", ",", "\n", "'use_clamp'", ":", "kwargs", ".", "get", "(", "'use_clamp'", ",", "'soft'", ")", ",", "\n", "'n_hidden_layers'", ":", "kwargs", ".", "get", "(", "'n_hidden_layers'", ",", "N_LAYERS", ")", ",", "\n", "}", "\n", "self", ".", "tsf_sequences", "=", "nn", ".", "ModuleList", "(", "[", "TransformationSequence", "(", "**", "deepcopy", "(", "tsf_kwargs", ")", ")", "\n", "for", "i", "in", "range", "(", "n_prototypes", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.is_identity": [[54, 57], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "is_identity", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sequence_name", "in", "[", "'id'", ",", "'identity'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.forward": [[58, 69], ["x.unsqueeze().expand", "prototypes.permute", "x.unsqueeze().expand", "torch.stack", "transformer.PrototypeTransformationNetwork.encoder", "tsf_seq", "x.unsqueeze", "x.unsqueeze", "zip"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "prototypes", ",", "features", "=", "None", ")", ":", "\n", "# x shape is BCHW, prototypes list of K elements of size BCHW", "\n", "        ", "if", "self", ".", "is_identity", ":", "\n", "            ", "inp", "=", "x", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "self", ".", "n_prototypes", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "target", "=", "prototypes", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ",", "4", ")", "\n", "", "else", ":", "\n", "            ", "features", "=", "self", ".", "encoder", "(", "x", ")", "if", "features", "is", "None", "else", "features", "\n", "inp", "=", "x", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "self", ".", "n_prototypes", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "target", "=", "[", "tsf_seq", "(", "proto", ",", "features", ")", "for", "tsf_seq", ",", "proto", "in", "zip", "(", "self", ".", "tsf_sequences", ",", "prototypes", ")", "]", "\n", "target", "=", "torch", ".", "stack", "(", "target", ",", "dim", "=", "1", ")", "\n", "", "return", "inp", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.predict_parameters": [[70, 73], ["torch.stack", "transformer.PrototypeTransformationNetwork.encoder", "tsf_seq.predict_parameters"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TransformationSequence.predict_parameters"], ["", "def", "predict_parameters", "(", "self", ",", "x", "=", "None", ",", "features", "=", "None", ")", ":", "\n", "        ", "features", "=", "self", ".", "encoder", "(", "x", ")", "if", "features", "is", "None", "else", "features", "\n", "return", "torch", ".", "stack", "(", "[", "tsf_seq", ".", "predict_parameters", "(", "features", ")", "for", "tsf_seq", "in", "self", ".", "tsf_sequences", "]", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.apply_parameters": [[74, 81], ["torch.stack", "tsf_seq.apply_parameters", "zip"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TransformationSequence.apply_parameters"], ["", "def", "apply_parameters", "(", "self", ",", "prototypes", ",", "betas", ",", "is_var", "=", "False", ")", ":", "\n", "        ", "if", "self", ".", "is_identity", ":", "\n", "            ", "return", "prototypes", "\n", "", "else", ":", "\n", "            ", "target", "=", "[", "tsf_seq", ".", "apply_parameters", "(", "proto", ",", "beta", ",", "is_var", "=", "is_var", ")", "for", "tsf_seq", ",", "proto", ",", "beta", "\n", "in", "zip", "(", "self", ".", "tsf_sequences", ",", "prototypes", ",", "betas", ")", "]", "\n", "return", "torch", ".", "stack", "(", "target", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.restart_branch_from": [[82, 100], ["transformer.PrototypeTransformationNetwork.tsf_sequences[].load_with_noise", "hasattr", "isinstance", "zip", "isinstance", "transformer.PrototypeTransformationNetwork.tsf_sequences[].parameters", "transformer.PrototypeTransformationNetwork.tsf_sequences[].parameters", "zip", "NotImplementedError", "transformer.PrototypeTransformationNetwork.tsf_sequences[].parameters", "transformer.PrototypeTransformationNetwork.tsf_sequences[].parameters"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.IdentityModule.load_with_noise"], ["", "", "def", "restart_branch_from", "(", "self", ",", "i", ",", "j", ",", "noise_scale", "=", "0.001", ")", ":", "\n", "        ", "if", "self", ".", "is_identity", ":", "\n", "            ", "return", "None", "\n", "\n", "", "self", ".", "tsf_sequences", "[", "i", "]", ".", "load_with_noise", "(", "self", ".", "tsf_sequences", "[", "j", "]", ",", "noise_scale", "=", "noise_scale", ")", "\n", "if", "hasattr", "(", "self", ",", "'optimizer'", ")", ":", "\n", "            ", "opt", "=", "self", ".", "optimizer", "\n", "if", "isinstance", "(", "opt", ",", "(", "Adam", ",", ")", ")", ":", "\n", "                ", "for", "param_i", ",", "param_j", "in", "zip", "(", "self", ".", "tsf_sequences", "[", "i", "]", ".", "parameters", "(", ")", ",", "self", ".", "tsf_sequences", "[", "j", "]", ".", "parameters", "(", ")", ")", ":", "\n", "                    ", "if", "param_i", "in", "opt", ".", "state", ":", "\n", "                        ", "opt", ".", "state", "[", "param_i", "]", "[", "'exp_avg'", "]", "=", "opt", ".", "state", "[", "param_j", "]", "[", "'exp_avg'", "]", "\n", "opt", ".", "state", "[", "param_i", "]", "[", "'exp_avg_sq'", "]", "=", "opt", ".", "state", "[", "param_j", "]", "[", "'exp_avg_sq'", "]", "\n", "", "", "", "elif", "isinstance", "(", "opt", ",", "(", "RMSprop", ",", ")", ")", ":", "\n", "                ", "for", "param_i", ",", "param_j", "in", "zip", "(", "self", ".", "tsf_sequences", "[", "i", "]", ".", "parameters", "(", ")", ",", "self", ".", "tsf_sequences", "[", "j", "]", ".", "parameters", "(", ")", ")", ":", "\n", "                    ", "if", "param_i", "in", "opt", ".", "state", ":", "\n", "                        ", "opt", ".", "state", "[", "param_i", "]", "[", "'square_avg'", "]", "=", "opt", ".", "state", "[", "param_j", "]", "[", "'square_avg'", "]", "\n", "", "", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "(", "'unknown optimizer: you should define how to reinstanciate statistics if any'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.add_noise": [[101, 104], ["range", "len", "transformer.PrototypeTransformationNetwork.tsf_sequences[].load_with_noise"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.IdentityModule.load_with_noise"], ["", "", "", "def", "add_noise", "(", "self", ",", "noise_scale", "=", "0.001", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "tsf_sequences", ")", ")", ":", "\n", "            ", "self", ".", "tsf_sequences", "[", "i", "]", ".", "load_with_noise", "(", "self", ".", "tsf_sequences", "[", "i", "]", ",", "noise_scale", "=", "noise_scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.step": [[105, 108], ["tsf_seq.step"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.step"], ["", "", "def", "step", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "is_identity", ":", "\n", "            ", "[", "tsf_seq", ".", "step", "(", ")", "for", "tsf_seq", "in", "self", ".", "tsf_sequences", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.activate_all": [[109, 112], ["tsf_seq.activate_all"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TransformationSequence.activate_all"], ["", "", "def", "activate_all", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "is_identity", ":", "\n", "            ", "[", "tsf_seq", ".", "activate_all", "(", ")", "for", "tsf_seq", "in", "self", ".", "tsf_sequences", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.only_id_activated": [[113, 116], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "only_id_activated", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "tsf_sequences", "[", "0", "]", ".", "only_id_activated", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PrototypeTransformationNetwork.set_optimizer": [[117, 119], ["None"], "methods", ["None"], ["", "def", "set_optimizer", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "optimizer", "=", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.Encoder.__init__": [[122, 150], ["torch.nn.Module.__init__", "kwargs.get", "torch.nn.Sequential", "kwargs.get", "seq.append", "tools.get_output_size", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.MaxPool2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.MaxPool2d", "isinstance", "torch.nn.AdaptiveAvgPool2d", "torchvision.models.vgg16_bn", "mini_resnet.get_resnet_model", "mini_resnet.get_resnet_model"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.get_output_size", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.get_resnet_model", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.mini_resnet.get_resnet_model"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "encoder_name", "=", "'default'", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "with_pool", "=", "kwargs", ".", "get", "(", "'with_pool'", ",", "True", ")", "\n", "if", "encoder_name", "==", "'default'", ":", "\n", "            ", "seq", "=", "[", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "8", ",", "kernel_size", "=", "7", ")", ",", "nn", ".", "BatchNorm2d", "(", "8", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "8", ",", "10", ",", "kernel_size", "=", "5", ")", ",", "nn", ".", "BatchNorm2d", "(", "10", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ",", "\n", "]", "\n", "", "elif", "encoder_name", "==", "'vgg16'", ":", "\n", "            ", "seq", "=", "[", "vgg16_bn", "(", "pretrained", "=", "False", ")", ".", "features", "]", "\n", "", "else", ":", "\n", "            ", "try", ":", "\n", "                ", "resnet", "=", "get_resnet_model", "(", "encoder_name", ")", "(", "pretrained", "=", "False", ",", "progress", "=", "False", ")", "\n", "seq", "=", "[", "resnet", ".", "conv1", ",", "resnet", ".", "bn1", ",", "resnet", ".", "relu", ",", "resnet", ".", "maxpool", ",", "\n", "resnet", ".", "layer1", ",", "resnet", ".", "layer2", ",", "resnet", ".", "layer3", ",", "resnet", ".", "layer4", "]", "\n", "", "except", "KeyError", ":", "\n", "                ", "resnet", "=", "get_mini_resnet_model", "(", "encoder_name", ")", "(", "in_channels", "=", "in_channels", ")", "\n", "seq", "=", "[", "resnet", ".", "conv1", ",", "resnet", ".", "bn1", ",", "resnet", ".", "relu", ",", "resnet", ".", "layer1", ",", "resnet", ".", "layer2", ",", "resnet", ".", "layer3", "]", "\n", "", "", "if", "self", ".", "with_pool", ":", "\n", "            ", "size", "=", "self", ".", "with_pool", "if", "isinstance", "(", "self", ".", "with_pool", ",", "(", "tuple", ",", "list", ")", ")", "else", "(", "1", ",", "1", ")", "\n", "seq", ".", "append", "(", "torch", ".", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "size", ")", ")", "\n", "", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "*", "seq", ")", "\n", "img_size", "=", "kwargs", ".", "get", "(", "'img_size'", ",", "None", ")", "\n", "if", "img_size", "is", "not", "None", ":", "\n", "            ", "self", ".", "out_ch", "=", "get_output_size", "(", "in_channels", ",", "img_size", ",", "self", ".", "encoder", ")", "\n", "", "else", ":", "\n", "            ", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.Encoder.forward": [[151, 153], ["transformer.Encoder.encoder().flatten", "transformer.Encoder.encoder"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "encoder", "(", "x", ")", ".", "flatten", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TransformationSequence.__init__": [[156, 178], ["torch.nn.Module.__init__", "sequence_name.split", "len", "torch.nn.ModuleList", "kwargs.get", "tsf_modules.append", "transformer.TransformationSequence.register_buffer", "transformer.TransformationSequence.register_buffer", "isinstance", "torch.Tensor().bool", "torch.Tensor().bool", "transformer.TransformationSequence.get_module", "len", "torch.Tensor", "torch.Tensor", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TransformationSequence.get_module"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "sequence_name", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "tsf_names", "=", "sequence_name", ".", "split", "(", "'_'", ")", "\n", "self", ".", "n_tsf", "=", "len", "(", "self", ".", "tsf_names", ")", "\n", "\n", "tsf_modules", "=", "[", "]", "\n", "for", "name", "in", "self", ".", "tsf_names", ":", "\n", "            ", "tsf_modules", ".", "append", "(", "self", ".", "get_module", "(", "name", ")", "(", "in_channels", ",", "**", "kwargs", ")", ")", "\n", "", "self", ".", "tsf_modules", "=", "nn", ".", "ModuleList", "(", "tsf_modules", ")", "\n", "\n", "curriculum_learning", "=", "kwargs", ".", "get", "(", "'curriculum_learning'", ",", "False", ")", "\n", "if", "curriculum_learning", ":", "\n", "            ", "assert", "isinstance", "(", "curriculum_learning", ",", "(", "list", ",", "tuple", ")", ")", "and", "len", "(", "curriculum_learning", ")", "==", "self", ".", "n_tsf", "-", "1", "\n", "self", ".", "act_milestones", "=", "curriculum_learning", "\n", "n_act", "=", "1", "+", "(", "np", ".", "asarray", "(", "curriculum_learning", ")", "==", "0", ")", ".", "sum", "(", ")", "\n", "self", ".", "next_act_idx", "=", "n_act", "\n", "self", ".", "register_buffer", "(", "'activations'", ",", "torch", ".", "Tensor", "(", "[", "True", "]", "*", "n_act", "+", "[", "False", "]", "*", "(", "self", ".", "n_tsf", "-", "n_act", ")", ")", ".", "bool", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "act_milestones", "=", "[", "-", "1", "]", "*", "self", ".", "n_tsf", "\n", "self", ".", "next_act_idx", "=", "self", ".", "n_tsf", "\n", "self", ".", "register_buffer", "(", "'activations'", ",", "torch", ".", "Tensor", "(", "[", "True", "]", "*", "(", "self", ".", "n_tsf", ")", ")", ".", "bool", "(", ")", ")", "\n", "", "self", ".", "cur_milestone", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TransformationSequence.get_module": [[179, 196], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_module", "(", "name", ")", ":", "\n", "        ", "return", "{", "\n", "# standard", "\n", "'id'", ":", "IdentityModule", ",", "'identity'", ":", "IdentityModule", ",", "\n", "'col'", ":", "ColorModule", ",", "'color'", ":", "ColorModule", ",", "\n", "\n", "# spatial", "\n", "'aff'", ":", "AffineModule", ",", "'affine'", ":", "AffineModule", ",", "\n", "'pos'", ":", "PositionModule", ",", "'position'", ":", "PositionModule", ",", "\n", "'proj'", ":", "ProjectiveModule", ",", "'projective'", ":", "ProjectiveModule", ",", "'homography'", ":", "ProjectiveModule", ",", "\n", "'sim'", ":", "SimilarityModule", ",", "'similarity'", ":", "SimilarityModule", ",", "\n", "'tps'", ":", "TPSModule", ",", "'thinplatespline'", ":", "TPSModule", ",", "\n", "\n", "# morphological", "\n", "'morpho'", ":", "MorphologicalModule", ",", "'morphological'", ":", "MorphologicalModule", ",", "\n", "}", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TransformationSequence.forward": [[197, 202], ["zip", "module"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "features", ")", ":", "\n", "        ", "for", "module", ",", "activated", "in", "zip", "(", "self", ".", "tsf_modules", ",", "self", ".", "activations", ")", ":", "\n", "            ", "if", "activated", ":", "\n", "                ", "x", "=", "module", "(", "x", ",", "features", ")", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TransformationSequence.predict_parameters": [[203, 209], ["zip", "torch.cat", "betas.append", "module.regressor"], "methods", ["None"], ["", "def", "predict_parameters", "(", "self", ",", "features", ")", ":", "\n", "        ", "betas", "=", "[", "]", "\n", "for", "module", ",", "activated", "in", "zip", "(", "self", ".", "tsf_modules", ",", "self", ".", "activations", ")", ":", "\n", "            ", "if", "activated", ":", "\n", "                ", "betas", ".", "append", "(", "module", ".", "regressor", "(", "features", ")", ")", "\n", "", "", "return", "torch", ".", "cat", "(", "betas", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TransformationSequence.apply_parameters": [[210, 217], ["torch.split", "zip", "module.transform", "zip", "isinstance"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform"], ["", "def", "apply_parameters", "(", "self", ",", "x", ",", "beta", ",", "is_var", "=", "False", ")", ":", "\n", "        ", "betas", "=", "torch", ".", "split", "(", "beta", ",", "[", "d", ".", "dim_parameters", "for", "d", ",", "act", "in", "zip", "(", "self", ".", "tsf_modules", ",", "self", ".", "activations", ")", "if", "act", "]", ",", "\n", "dim", "=", "1", ")", "\n", "for", "module", ",", "activated", ",", "beta", "in", "zip", "(", "self", ".", "tsf_modules", ",", "self", ".", "activations", ",", "betas", ")", ":", "\n", "            ", "if", "activated", "and", "(", "not", "is_var", "or", "isinstance", "(", "module", ",", "(", "AffineModule", ",", "ProjectiveModule", ",", "TPSModule", ")", ")", ")", ":", "\n", "                ", "x", "=", "module", ".", "transform", "(", "x", ",", "beta", ")", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TransformationSequence.load_with_noise": [[218, 221], ["range", "transformer.TransformationSequence.tsf_modules[].load_with_noise"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.IdentityModule.load_with_noise"], ["", "def", "load_with_noise", "(", "self", ",", "tsf_seq", ",", "noise_scale", ")", ":", "\n", "        ", "for", "k", "in", "range", "(", "self", ".", "n_tsf", ")", ":", "\n", "            ", "self", ".", "tsf_modules", "[", "k", "]", ".", "load_with_noise", "(", "tsf_seq", ".", "tsf_modules", "[", "k", "]", ",", "noise_scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TransformationSequence.step": [[222, 227], ["None"], "methods", ["None"], ["", "", "def", "step", "(", "self", ")", ":", "\n", "        ", "self", ".", "cur_milestone", "+=", "1", "\n", "while", "self", ".", "next_act_idx", "<", "self", ".", "n_tsf", "and", "self", ".", "act_milestones", "[", "self", ".", "next_act_idx", "-", "1", "]", "==", "self", ".", "cur_milestone", ":", "\n", "            ", "self", ".", "activations", "[", "self", ".", "next_act_idx", "]", "=", "True", "\n", "self", ".", "next_act_idx", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TransformationSequence.activate_all": [[228, 232], ["range"], "methods", ["None"], ["", "", "def", "activate_all", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "range", "(", "self", ".", "n_tsf", ")", ":", "\n", "            ", "self", ".", "activations", "[", "k", "]", "=", "True", "\n", "", "self", ".", "next_act_idx", "=", "self", ".", "n_tsf", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TransformationSequence.only_id_activated": [[233, 239], ["zip", "isinstance"], "methods", ["None"], ["", "@", "property", "\n", "def", "only_id_activated", "(", "self", ")", ":", "\n", "        ", "for", "m", ",", "act", "in", "zip", "(", "self", ".", "tsf_modules", ",", "self", ".", "activations", ")", ":", "\n", "            ", "if", "not", "isinstance", "(", "m", ",", "(", "IdentityModule", ",", ")", ")", "and", "act", ":", "\n", "                ", "return", "False", "\n", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.forward": [[244, 247], ["transformer._AbstractTransformationModule.regressor", "transformer._AbstractTransformationModule.transform"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform"], ["def", "forward", "(", "self", ",", "x", ",", "features", ")", ":", "\n", "        ", "beta", "=", "self", ".", "regressor", "(", "features", ")", "\n", "return", "self", ".", "transform", "(", "x", ",", "beta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.transform": [[248, 250], ["transformer._AbstractTransformationModule._transform"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.MorphologicalModule._transform"], ["", "def", "transform", "(", "self", ",", "x", ",", "beta", ")", ":", "\n", "        ", "return", "self", ".", "_transform", "(", "x", ",", "beta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule._transform": [[251, 254], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_transform", "(", "self", ",", "x", ",", "beta", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.load_with_noise": [[255, 258], ["transformer._AbstractTransformationModule.load_state_dict", "transformer._AbstractTransformationModule.regressor[].bias.data.copy_", "module.state_dict", "tools.copy_with_noise"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.dti_sprites.DTISprites.load_state_dict", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.copy_with_noise"], ["", "def", "load_with_noise", "(", "self", ",", "module", ",", "noise_scale", ")", ":", "\n", "        ", "self", ".", "load_state_dict", "(", "module", ".", "state_dict", "(", ")", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "bias", ".", "data", ".", "copy_", "(", "copy_with_noise", "(", "module", ".", "regressor", "[", "-", "1", "]", ".", "bias", ",", "noise_scale", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer._AbstractTransformationModule.dim_parameters": [[259, 262], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "dim_parameters", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "regressor", "[", "-", "1", "]", ".", "out_features", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.IdentityModule.__init__": [[269, 273], ["torch.nn.Module.__init__", "torch.nn.Sequential", "transformer.IdentityModule.register_buffer", "torch.nn.Linear", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "regressor", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "in_channels", ",", "0", ")", ")", "\n", "self", ".", "register_buffer", "(", "'identity'", ",", "torch", ".", "zeros", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.IdentityModule.forward": [[274, 276], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.IdentityModule._transform": [[277, 279], ["None"], "methods", ["None"], ["", "def", "_transform", "(", "self", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.IdentityModule.load_with_noise": [[280, 282], ["None"], "methods", ["None"], ["", "def", "load_with_noise", "(", "self", ",", "module", ",", "noise_scale", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.ColorModule.__init__": [[285, 297], ["torch.nn.Module.__init__", "kwargs.get", "kwargs.get", "tools.get_clamp_func", "kwargs.get", "tools.create_mlp", "transformer.ColorModule.register_buffer", "transformer.ColorModule.regressor[].weight.data.zero_", "transformer.ColorModule.regressor[].bias.data.zero_", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.get_clamp_func", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.create_mlp"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "color_ch", "=", "kwargs", ".", "get", "(", "'color_channels'", ",", "3", ")", "\n", "clamp_name", "=", "kwargs", ".", "get", "(", "'use_clamp'", ",", "False", ")", "\n", "self", ".", "clamp_func", "=", "get_clamp_func", "(", "clamp_name", ")", "\n", "n_layers", "=", "kwargs", ".", "get", "(", "'n_hidden_layers'", ",", "N_LAYERS", ")", "\n", "self", ".", "regressor", "=", "create_mlp", "(", "in_channels", ",", "self", ".", "color_ch", "*", "2", ",", "N_HIDDEN_UNITS", ",", "n_layers", ")", "\n", "\n", "# Identity transformation parameters and regressor initialization", "\n", "self", ".", "register_buffer", "(", "'identity'", ",", "torch", ".", "eye", "(", "self", ".", "color_ch", ",", "self", ".", "color_ch", ")", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.ColorModule._transform": [[298, 315], ["torch.split", "bias.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "transformer.ColorModule.clamp_func", "torch.split", "x.expand.expand.size", "x.expand.expand.expand", "beta.view", "x.expand.expand.size", "x.expand.expand.size", "torch.einsum", "torch.cat", "x.expand.expand.size", "x.expand.expand.size", "weight.expand", "bias.unsqueeze().expand.unsqueeze().expand.unsqueeze", "x.expand.expand.size"], "methods", ["None"], ["", "def", "_transform", "(", "self", ",", "x", ",", "beta", ")", ":", "\n", "        ", "if", "x", ".", "size", "(", "1", ")", "==", "2", "or", "x", ".", "size", "(", "1", ")", ">", "3", ":", "\n", "            ", "x", ",", "mask", "=", "torch", ".", "split", "(", "x", ",", "[", "self", ".", "color_ch", ",", "x", ".", "size", "(", "1", ")", "-", "self", ".", "color_ch", "]", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "mask", "=", "None", "\n", "", "if", "x", ".", "size", "(", "1", ")", "==", "1", ":", "\n", "            ", "x", "=", "x", ".", "expand", "(", "-", "1", ",", "3", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "", "weight", ",", "bias", "=", "torch", ".", "split", "(", "beta", ".", "view", "(", "-", "1", ",", "self", ".", "color_ch", ",", "2", ")", ",", "[", "1", ",", "1", "]", ",", "dim", "=", "2", ")", "\n", "weight", "=", "weight", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "self", ".", "color_ch", ")", "*", "self", ".", "identity", "+", "self", ".", "identity", "\n", "bias", "=", "bias", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "\n", "output", "=", "torch", ".", "einsum", "(", "'bij, bjkl -> bikl'", ",", "weight", ",", "x", ")", "+", "bias", "\n", "output", "=", "self", ".", "clamp_func", "(", "output", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "output", "=", "torch", ".", "cat", "(", "[", "output", ",", "mask", "]", ",", "dim", "=", "1", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.AffineModule.__init__": [[322, 333], ["torch.nn.Module.__init__", "kwargs.get", "kwargs.get", "tools.create_mlp", "transformer.AffineModule.register_buffer", "transformer.AffineModule.regressor[].weight.data.zero_", "transformer.AffineModule.regressor[].bias.data.zero_", "torch.cat", "torch.eye", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.create_mlp"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "img_size", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "padding_mode", "=", "kwargs", ".", "get", "(", "'padding_mode'", ",", "'border'", ")", "\n", "n_layers", "=", "kwargs", ".", "get", "(", "'n_hidden_layers'", ",", "N_LAYERS", ")", "\n", "self", ".", "regressor", "=", "create_mlp", "(", "in_channels", ",", "6", ",", "N_HIDDEN_UNITS", ",", "n_layers", ")", "\n", "\n", "# Identity transformation parameters and regressor initialization", "\n", "self", ".", "register_buffer", "(", "'identity'", ",", "torch", ".", "cat", "(", "[", "torch", ".", "eye", "(", "2", ",", "2", ")", ",", "torch", ".", "zeros", "(", "2", ",", "1", ")", "]", ",", "dim", "=", "1", ")", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.AffineModule._transform": [[334, 338], ["torch.nn.functional.affine_grid", "torch.nn.functional.grid_sample", "beta.view", "x.size", "x.size"], "methods", ["None"], ["", "def", "_transform", "(", "self", ",", "x", ",", "beta", ")", ":", "\n", "        ", "beta", "=", "beta", ".", "view", "(", "-", "1", ",", "2", ",", "3", ")", "+", "self", ".", "identity", "\n", "grid", "=", "F", ".", "affine_grid", "(", "beta", ",", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", ",", "self", ".", "img_size", "[", "0", "]", ",", "self", ".", "img_size", "[", "1", "]", ")", ",", "align_corners", "=", "False", ")", "\n", "return", "F", ".", "grid_sample", "(", "x", ",", "grid", ",", "mode", "=", "'bilinear'", ",", "padding_mode", "=", "self", ".", "padding_mode", ",", "align_corners", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PositionModule.__init__": [[341, 352], ["torch.nn.Module.__init__", "kwargs.get", "kwargs.get", "tools.create_mlp", "transformer.PositionModule.register_buffer", "transformer.PositionModule.regressor[].weight.data.zero_", "transformer.PositionModule.regressor[].bias.data.zero_", "torch.cat", "torch.eye", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.create_mlp"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "img_size", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "padding_mode", "=", "kwargs", ".", "get", "(", "'padding_mode'", ",", "'border'", ")", "\n", "n_layers", "=", "kwargs", ".", "get", "(", "'n_hidden_layers'", ",", "N_LAYERS", ")", "\n", "self", ".", "regressor", "=", "create_mlp", "(", "in_channels", ",", "3", ",", "N_HIDDEN_UNITS", ",", "n_layers", ")", "\n", "\n", "# Identity transformation parameters and regressor initialization", "\n", "self", ".", "register_buffer", "(", "'identity'", ",", "torch", ".", "cat", "(", "[", "torch", ".", "eye", "(", "2", ",", "2", ")", ",", "torch", ".", "zeros", "(", "2", ",", "1", ")", "]", ",", "dim", "=", "1", ")", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.PositionModule._transform": [[353, 360], ["beta.split", "torch.exp", "torch.nn.functional.affine_grid", "torch.nn.functional.grid_sample", "s[].expand", "torch.eye().to", "torch.cat", "x.size", "x.size", "torch.eye", "t.unsqueeze"], "methods", ["None"], ["", "def", "_transform", "(", "self", ",", "x", ",", "beta", ")", ":", "\n", "        ", "s", ",", "t", "=", "beta", ".", "split", "(", "[", "1", ",", "2", "]", ",", "dim", "=", "1", ")", "\n", "s", "=", "torch", ".", "exp", "(", "s", ")", "\n", "scale", "=", "s", "[", "...", ",", "None", "]", ".", "expand", "(", "-", "1", ",", "2", ",", "2", ")", "*", "torch", ".", "eye", "(", "2", ",", "2", ")", ".", "to", "(", "s", ".", "device", ")", "\n", "beta", "=", "torch", ".", "cat", "(", "[", "scale", ",", "t", ".", "unsqueeze", "(", "2", ")", "]", ",", "dim", "=", "2", ")", "+", "self", ".", "identity", "\n", "grid", "=", "F", ".", "affine_grid", "(", "beta", ",", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", ",", "self", ".", "img_size", "[", "0", "]", ",", "self", ".", "img_size", "[", "1", "]", ")", ",", "align_corners", "=", "False", ")", "\n", "return", "F", ".", "grid_sample", "(", "x", ",", "grid", ",", "mode", "=", "'bilinear'", ",", "padding_mode", "=", "self", ".", "padding_mode", ",", "align_corners", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.SimilarityModule.__init__": [[363, 374], ["torch.nn.Module.__init__", "kwargs.get", "kwargs.get", "tools.create_mlp", "transformer.SimilarityModule.register_buffer", "transformer.SimilarityModule.regressor[].weight.data.zero_", "transformer.SimilarityModule.regressor[].bias.data.zero_", "torch.cat", "torch.eye", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.create_mlp"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "img_size", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "padding_mode", "=", "kwargs", ".", "get", "(", "'padding_mode'", ",", "'border'", ")", "\n", "n_layers", "=", "kwargs", ".", "get", "(", "'n_hidden_layers'", ",", "N_LAYERS", ")", "\n", "self", ".", "regressor", "=", "create_mlp", "(", "in_channels", ",", "4", ",", "N_HIDDEN_UNITS", ",", "n_layers", ")", "\n", "\n", "# Identity transformation parameters and regressor initialization", "\n", "self", ".", "register_buffer", "(", "'identity'", ",", "torch", ".", "cat", "(", "[", "torch", ".", "eye", "(", "2", ",", "2", ")", ",", "torch", ".", "zeros", "(", "2", ",", "1", ")", "]", ",", "dim", "=", "1", ")", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.SimilarityModule._transform": [[375, 383], ["beta.split", "torch.eye().to", "torch.Tensor().to", "torch.nn.functional.affine_grid", "torch.nn.functional.grid_sample", "torch.cat", "torch.eye", "torch.Tensor", "a[].expand", "b[].expand", "x.size", "x.size", "t.unsqueeze"], "methods", ["None"], ["", "def", "_transform", "(", "self", ",", "x", ",", "beta", ")", ":", "\n", "        ", "a", ",", "b", ",", "t", "=", "beta", ".", "split", "(", "[", "1", ",", "1", ",", "2", "]", ",", "dim", "=", "1", ")", "\n", "a_eye", "=", "torch", ".", "eye", "(", "2", ",", "2", ")", ".", "to", "(", "a", ".", "device", ")", "\n", "b_eye", "=", "torch", ".", "Tensor", "(", "[", "[", "0", ",", "-", "1", "]", ",", "[", "1", ",", "0", "]", "]", ")", ".", "to", "(", "b", ".", "device", ")", "\n", "scaled_rot", "=", "a", "[", "...", ",", "None", "]", ".", "expand", "(", "-", "1", ",", "2", ",", "2", ")", "*", "a_eye", "+", "b", "[", "...", ",", "None", "]", ".", "expand", "(", "-", "1", ",", "2", ",", "2", ")", "*", "b_eye", "\n", "beta", "=", "torch", ".", "cat", "(", "[", "scaled_rot", ",", "t", ".", "unsqueeze", "(", "2", ")", "]", ",", "dim", "=", "2", ")", "+", "self", ".", "identity", "\n", "grid", "=", "F", ".", "affine_grid", "(", "beta", ",", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", ",", "self", ".", "img_size", "[", "0", "]", ",", "self", ".", "img_size", "[", "1", "]", ")", ",", "align_corners", "=", "False", ")", "\n", "return", "F", ".", "grid_sample", "(", "x", ",", "grid", ",", "mode", "=", "'bilinear'", ",", "padding_mode", "=", "self", ".", "padding_mode", ",", "align_corners", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.ProjectiveModule.__init__": [[386, 396], ["torch.nn.Module.__init__", "kwargs.get", "kwargs.get", "tools.create_mlp", "transformer.ProjectiveModule.register_buffer", "transformer.ProjectiveModule.regressor[].weight.data.zero_", "transformer.ProjectiveModule.regressor[].bias.data.zero_", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.create_mlp"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "padding_mode", "=", "kwargs", ".", "get", "(", "'padding_mode'", ",", "'border'", ")", "\n", "n_layers", "=", "kwargs", ".", "get", "(", "'n_hidden_layers'", ",", "N_LAYERS", ")", "\n", "self", ".", "regressor", "=", "create_mlp", "(", "in_channels", ",", "9", ",", "N_HIDDEN_UNITS", ",", "n_layers", ")", "\n", "\n", "# Identity transformation parameters and regressor initialization", "\n", "self", ".", "register_buffer", "(", "'identity'", ",", "torch", ".", "eye", "(", "3", ",", "3", ")", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.ProjectiveModule._transform": [[397, 400], ["kornia.homography_warp", "beta.view", "x.size", "x.size"], "methods", ["None"], ["", "def", "_transform", "(", "self", ",", "x", ",", "beta", ")", ":", "\n", "        ", "beta", "=", "beta", ".", "view", "(", "-", "1", ",", "3", ",", "3", ")", "+", "self", ".", "identity", "\n", "return", "homography_warp", "(", "x", ",", "beta", ",", "dsize", "=", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ",", "mode", "=", "'bilinear'", ",", "padding_mode", "=", "self", ".", "padding_mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TPSModule.__init__": [[403, 418], ["torch.nn.Module.__init__", "kwargs.get", "kwargs.get", "kwargs.get", "tools.create_mlp", "torch.meshgrid", "torch.stack", "tools.TPSGrid", "transformer.TPSModule.register_buffer", "transformer.TPSModule.regressor[].weight.data.zero_", "transformer.TPSModule.regressor[].bias.data.zero_", "torch.linspace", "torch.linspace", "x.flatten", "y.flatten"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.create_mlp"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "img_size", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "padding_mode", "=", "kwargs", ".", "get", "(", "'padding_mode'", ",", "'border'", ")", "\n", "self", ".", "grid_size", "=", "kwargs", ".", "get", "(", "'grid_size'", ",", "4", ")", "\n", "n_layers", "=", "kwargs", ".", "get", "(", "'n_hidden_layers'", ",", "N_LAYERS", ")", "\n", "self", ".", "regressor", "=", "create_mlp", "(", "in_channels", ",", "self", ".", "grid_size", "**", "2", "*", "2", ",", "N_HIDDEN_UNITS", ",", "n_layers", ")", "\n", "y", ",", "x", "=", "torch", ".", "meshgrid", "(", "torch", ".", "linspace", "(", "-", "1", ",", "1", ",", "self", ".", "grid_size", ")", ",", "torch", ".", "linspace", "(", "-", "1", ",", "1", ",", "self", ".", "grid_size", ")", ")", "\n", "target_control_points", "=", "torch", ".", "stack", "(", "[", "x", ".", "flatten", "(", ")", ",", "y", ".", "flatten", "(", ")", "]", ",", "dim", "=", "1", ")", "\n", "self", ".", "tps_grid", "=", "TPSGrid", "(", "img_size", ",", "target_control_points", ")", "\n", "\n", "# Identity transformation parameters and regressor initialization", "\n", "self", ".", "register_buffer", "(", "'identity'", ",", "target_control_points", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.TPSModule._transform": [[419, 423], ["transformer.TPSModule.tps_grid().view", "torch.nn.functional.grid_sample", "beta.view", "x.size", "x.size", "transformer.TPSModule.tps_grid"], "methods", ["None"], ["", "def", "_transform", "(", "self", ",", "x", ",", "beta", ")", ":", "\n", "        ", "source_control_points", "=", "self", ".", "identity", "+", "beta", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ",", "2", ")", "\n", "grid", "=", "self", ".", "tps_grid", "(", "source_control_points", ")", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "*", "self", ".", "img_size", ",", "2", ")", "\n", "return", "F", ".", "grid_sample", "(", "x", ",", "grid", ",", "mode", "=", "'bilinear'", ",", "padding_mode", "=", "self", ".", "padding_mode", ",", "align_corners", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.MorphologicalModule.__init__": [[430, 445], ["torch.nn.Module.__init__", "kwargs.get", "isinstance", "kwargs.get", "tools.create_mlp", "torch.full", "transformer.MorphologicalModule.register_buffer", "transformer.MorphologicalModule.regressor[].weight.data.zero_", "transformer.MorphologicalModule.regressor[].bias.data.zero_", "torch.cat", "torch.zeros", "torch.full.flatten"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__", "home.repos.pwc.inspect_result.monniert_dti-sprites.model.tools.create_mlp"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "kernel_size", "=", "kwargs", ".", "get", "(", "'kernel_size'", ",", "3", ")", "\n", "assert", "isinstance", "(", "self", ".", "kernel_size", ",", "(", "int", ",", "float", ")", ")", "\n", "self", ".", "padding", "=", "self", ".", "kernel_size", "//", "2", "\n", "n_layers", "=", "kwargs", ".", "get", "(", "'n_hidden_layers'", ",", "N_LAYERS", ")", "\n", "self", ".", "regressor", "=", "create_mlp", "(", "in_channels", ",", "self", ".", "kernel_size", "**", "2", "+", "1", ",", "N_HIDDEN_UNITS", ",", "n_layers", ")", "\n", "\n", "# Identity transformation parameters and regressor initialization", "\n", "weights", "=", "torch", ".", "full", "(", "(", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", ",", "fill_value", "=", "-", "5", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "center", "=", "self", ".", "kernel_size", "//", "2", "\n", "weights", "[", "center", ",", "center", "]", "=", "5", "\n", "self", ".", "register_buffer", "(", "'identity'", ",", "torch", ".", "cat", "(", "[", "torch", ".", "zeros", "(", "1", ")", ",", "weights", ".", "flatten", "(", ")", "]", ")", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "regressor", "[", "-", "1", "]", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.MorphologicalModule._transform": [[446, 450], ["torch.split", "transformer.MorphologicalModule.smoothmax_kernel", "torch.sigmoid"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.MorphologicalModule.smoothmax_kernel"], ["", "def", "_transform", "(", "self", ",", "x", ",", "beta", ")", ":", "\n", "        ", "beta", "=", "beta", "+", "self", ".", "identity", "\n", "alpha", ",", "weights", "=", "torch", ".", "split", "(", "beta", ",", "[", "1", ",", "self", ".", "kernel_size", "**", "2", "]", ",", "dim", "=", "1", ")", "\n", "return", "self", ".", "smoothmax_kernel", "(", "x", ",", "alpha", ",", "torch", ".", "sigmoid", "(", "weights", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.model.transformer.MorphologicalModule.smoothmax_kernel": [[451, 460], ["isinstance", "x.view.view.view", "torch.nn.functional.unfold().transpose", "torch.exp", "kernel.unsqueeze().expand", "alpha.flatten", "torch.nn.functional.unfold", "torch.nn.functional.unfold().transpose.size", "kernel.unsqueeze", "w.sum"], "methods", ["None"], ["", "def", "smoothmax_kernel", "(", "self", ",", "x", ",", "alpha", ",", "kernel", ")", ":", "\n", "        ", "if", "isinstance", "(", "alpha", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "alpha", "=", "alpha", ".", "flatten", "(", ")", "[", ":", ",", "None", ",", "None", "]", "\n", "\n", "", "B", ",", "C", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "x", "=", "x", ".", "view", "(", "B", "*", "C", ",", "1", ",", "H", ",", "W", ")", "\n", "x_unf", "=", "F", ".", "unfold", "(", "x", ",", "self", ".", "kernel_size", ",", "padding", "=", "self", ".", "padding", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "w", "=", "torch", ".", "exp", "(", "alpha", "*", "x_unf", ")", "*", "kernel", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "x_unf", ".", "size", "(", "1", ")", ",", "-", "1", ")", "\n", "return", "(", "(", "x_unf", "*", "w", ")", ".", "sum", "(", "2", ")", "/", "w", ".", "sum", "(", "2", ")", ")", ".", "view", "(", "B", ",", "C", ",", "H", ",", "W", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.__init__": [[20, 22], ["None"], "methods", ["None"], ["def", "coerce_to_path_and_check_exist", "(", "path", ")", ":", "\n", "    ", "path", "=", "Path", "(", "path", ")", "\n", "if", "not", "path", ".", "exists", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.zero_grad": [[23, 26], ["op.zero_grad"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.zero_grad"], ["        ", "raise", "FileNotFoundError", "(", "'{} does not exist'", ".", "format", "(", "path", ".", "absolute", "(", ")", ")", ")", "\n", "", "return", "path", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.step": [[27, 30], ["op.step"], "methods", ["home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.MultipleOptimizer.step"], ["", "def", "coerce_to_path_and_create_dir", "(", "path", ")", ":", "\n", "    ", "path", "=", "Path", "(", "path", ")", "\n", "path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "return", "path", "\n"]], "home.repos.pwc.inspect_result.monniert_dti-sprites.optimizer.__init__.get_optimizer": [[4, 17], ["None"], "function", ["None"], ["from", "PIL", "import", "Image", "\n", "import", "time", "\n", "\n", "import", "numpy", "as", "np", "\n", "from", "numpy", ".", "random", "import", "seed", "as", "np_seed", "\n", "from", "numpy", ".", "random", "import", "get_state", "as", "np_get_state", "\n", "from", "numpy", ".", "random", "import", "set_state", "as", "np_set_state", "\n", "from", "random", "import", "seed", "as", "rand_seed", "\n", "from", "random", "import", "getstate", "as", "rand_get_state", "\n", "from", "random", "import", "setstate", "as", "rand_set_state", "\n", "import", "torch", "\n", "from", "torch", "import", "manual_seed", "as", "torch_seed", "\n", "from", "torch", "import", "get_rng_state", "as", "torch_get_state", "\n", "from", "torch", "import", "set_rng_state", "as", "torch_set_state", "\n"]]}