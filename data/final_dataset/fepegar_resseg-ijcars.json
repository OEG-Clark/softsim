{"home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.get_unet": [[4, 23], ["unet.UNet"], "function", ["None"], ["def", "get_unet", "(", ")", ":", "\n", "    ", "model", "=", "UNet", "(", "\n", "in_channels", "=", "1", ",", "\n", "out_classes", "=", "2", ",", "\n", "dimensions", "=", "3", ",", "\n", "num_encoding_blocks", "=", "3", ",", "\n", "out_channels_first_layer", "=", "8", ",", "\n", "normalization", "=", "'batch'", ",", "\n", "pooling_type", "=", "'max'", ",", "\n", "padding", "=", "True", ",", "\n", "padding_mode", "=", "'replicate'", ",", "\n", "residual", "=", "False", ",", "\n", "initial_dilation", "=", "1", ",", "\n", "activation", "=", "'PReLU'", ",", "\n", "upsampling_type", "=", "'linear'", ",", "\n", "dropout", "=", "0", ",", "\n", "monte_carlo_dropout", "=", "0.5", ",", "\n", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.freeze": [[25, 28], ["module.parameters"], "function", ["None"], ["", "def", "freeze", "(", "module", ")", ":", "\n", "    ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.unfreeze": [[30, 33], ["module.parameters"], "function", ["None"], ["", "", "def", "unfreeze", "(", "module", ")", ":", "\n", "    ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.freeze_layers": [[35, 48], ["hasattr", "models.freeze", "models.freeze"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.freeze", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.freeze"], ["", "", "def", "freeze_layers", "(", "model", ",", "num_layers", ")", ":", "\n", "# num_layers should be None, 1, 2 or 3", "\n", "    ", "if", "num_layers", "is", "None", ":", "\n", "        ", "return", "\n", "", "if", "hasattr", "(", "model", ",", "'module'", ")", ":", "# DataParallel", "\n", "        ", "model", "=", "model", ".", "module", "\n", "", "if", "num_layers", ">=", "1", ":", "\n", "        ", "layer", "=", "model", ".", "classifier", ".", "conv_layer", "\n", "freeze", "(", "layer", ")", "\n", "", "if", "num_layers", ">=", "2", ":", "\n", "        ", "first", "=", "-", "(", "num_layers", "-", "1", ")", "\n", "for", "module", "in", "model", ".", "decoder", ".", "decoding_blocks", "[", "first", ":", "]", ":", "\n", "            ", "freeze", "(", "module", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.freeze_except": [[50, 66], ["hasattr", "models.freeze", "models.unfreeze", "models.unfreeze", "models.unfreeze"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.freeze", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.unfreeze", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.unfreeze", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.unfreeze"], ["", "", "", "def", "freeze_except", "(", "model", ",", "num_layers", ")", ":", "\n", "# num_layers should be None, 1, 2 or 3", "\n", "# If None, nothing happens", "\n", "# If 1, all layers are frozen but the classifier", "\n", "# If 2 or 3, conv layers from last decoder block will also not be frozen", "\n", "    ", "if", "num_layers", "is", "None", ":", "\n", "        ", "return", "\n", "", "if", "hasattr", "(", "model", ",", "'module'", ")", ":", "# DataParallel", "\n", "        ", "model", "=", "model", ".", "module", "\n", "", "freeze", "(", "model", ")", "\n", "if", "num_layers", ">", "0", ":", "\n", "        ", "unfreeze", "(", "model", ".", "classifier", ")", "\n", "", "if", "num_layers", ">", "1", ":", "\n", "        ", "unfreeze", "(", "model", ".", "decoder", ".", "decoding_blocks", "[", "-", "1", "]", ")", "\n", "", "if", "num_layers", "==", "3", ":", "\n", "        ", "unfreeze", "(", "model", ".", "decoder", ".", "decoding_blocks", "[", "-", "2", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.estimate_epistemic_uncertainty.main": [[9, 122], ["click.command", "click.argument", "click.argument", "click.argument", "click.argument", "click.argument", "click.argument", "click.option", "click.option", "click.option", "click.option", "torch.device", "torch.load", "models.get_unet().to", "models.get_unet().to.load_state_dict", "pathlib.Path", "models.get_unet().to.eval", "utils.enable_dropout", "torch.set_grad_enabled", "estimate_epistemic_uncertainty.get_paths", "mean_dir.mkdir", "std_dir.mkdir", "entropy_dir.mkdir", "tqdm", "tqdm.set_description", "tio.ScalarImage", "tio.Subject", "datasets.get_test_transform", "datasets.get_test_transform.", "[].to", "trange", "torch.stack", "torch.stack.sum().numpy", "result.sum().numpy.mean", "result.sum().numpy.std", "np.percentile", "records.append", "crop.inverse", "torch.stack.mean", "torch.stack.std", "tio.ScalarImage", "tio.ScalarImage", "crop.inverse.save", "crop.inverse.save", "pd.DataFrame.from_records", "pd.DataFrame.from_records.to_csv", "click.Path", "click.Path", "click.Path", "click.Path", "click.Path", "click.Choice", "models.get_unet", "all_results.append", "dict", "np.count_nonzero", "np.count_nonzero", "fp.name.replace", "fp.name.replace", "torch.cuda.is_available", "torch.cuda.amp.autocast", "segs.cpu", "torch.stack.sum", "crop.inverse.", "crop.inverse.", "preprocess.image.data.float", "models.get_unet().to.softmax", "torch.stack.numpy", "result.mean.numpy", "models.get_unet().to."], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.enable_dropout", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.estimate_aleatoric_uncertainty.get_paths", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_test_transform", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.get_unet"], ["@", "click", ".", "command", "(", ")", "\n", "@", "click", ".", "argument", "(", "'input-path'", ",", "type", "=", "click", ".", "Path", "(", "exists", "=", "True", ")", ")", "\n", "@", "click", ".", "argument", "(", "'checkpoint-path'", ",", "type", "=", "click", ".", "Path", "(", "exists", "=", "True", ",", "dir_okay", "=", "False", ")", ")", "\n", "@", "click", ".", "argument", "(", "'output-dir'", ",", "type", "=", "click", ".", "Path", "(", ")", ")", "\n", "@", "click", ".", "argument", "(", "'landmarks-path'", ",", "type", "=", "click", ".", "Path", "(", ")", ")", "\n", "@", "click", ".", "argument", "(", "'num-iterations'", ",", "type", "=", "int", ")", "\n", "@", "click", ".", "argument", "(", "'csv-path'", ",", "type", "=", "click", ".", "Path", "(", ")", ")", "\n", "@", "click", ".", "option", "(", "'--num-workers'", ",", "'-j'", ",", "type", "=", "int", ",", "default", "=", "12", ",", "show_default", "=", "True", ")", "\n", "@", "click", ".", "option", "(", "'--gpu/--cpu'", ",", "default", "=", "True", ",", "show_default", "=", "True", ")", "\n", "@", "click", ".", "option", "(", "'--threshold/--no-threshold'", ",", "default", "=", "False", ",", "show_default", "=", "True", ")", "\n", "@", "click", ".", "option", "(", "'--interpolation'", ",", "default", "=", "'bspline'", ",", "type", "=", "click", ".", "Choice", "(", "[", "'linear'", ",", "'bspline'", "]", ")", ",", "show_default", "=", "True", ")", "\n", "def", "main", "(", "\n", "input_path", ",", "\n", "checkpoint_path", ",", "\n", "output_dir", ",", "\n", "landmarks_path", ",", "\n", "num_iterations", ",", "\n", "csv_path", ",", "\n", "num_workers", ",", "\n", "gpu", ",", "\n", "threshold", ",", "\n", "interpolation", ",", "\n", ")", ":", "\n", "    ", "import", "torch", "\n", "import", "pandas", "as", "pd", "\n", "import", "numpy", "as", "np", "\n", "import", "torchio", "as", "tio", "\n", "from", "tqdm", "import", "tqdm", ",", "trange", "\n", "\n", "import", "utils", "\n", "import", "models", "\n", "import", "datasets", "\n", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "and", "gpu", "else", "'cpu'", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ",", "map_location", "=", "device", ")", "\n", "model", "=", "models", ".", "get_unet", "(", ")", ".", "to", "(", "device", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "output_dir", "=", "Path", "(", "output_dir", ")", "\n", "model", ".", "eval", "(", ")", "\n", "utils", ".", "enable_dropout", "(", "model", ")", "\n", "\n", "torch", ".", "set_grad_enabled", "(", "False", ")", "\n", "\n", "fps", "=", "get_paths", "(", "input_path", ")", "\n", "mean_dir", "=", "output_dir", "/", "'mean'", "\n", "std_dir", "=", "output_dir", "/", "'std'", "\n", "entropy_dir", "=", "output_dir", "/", "'entropy'", "\n", "mean_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "std_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "entropy_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "records", "=", "[", "]", "\n", "progress", "=", "tqdm", "(", "fps", ",", "unit", "=", "'subject'", ")", "\n", "for", "fp", "in", "progress", ":", "\n", "        ", "subject_id", "=", "fp", ".", "name", "[", ":", "4", "]", "\n", "progress", ".", "set_description", "(", "subject_id", ")", "\n", "image", "=", "tio", ".", "ScalarImage", "(", "fp", ")", "\n", "subject", "=", "tio", ".", "Subject", "(", "image", "=", "image", ")", "# key must be 'image' as in get_test_transform", "\n", "preprocess", "=", "datasets", ".", "get_test_transform", "(", "landmarks_path", ")", "\n", "preprocessed", "=", "preprocess", "(", "subject", ")", "\n", "inputs", "=", "preprocessed", ".", "image", ".", "data", ".", "float", "(", ")", "[", "np", ".", "newaxis", "]", ".", "to", "(", "device", ")", "\n", "all_results", "=", "[", "]", "\n", "for", "_", "in", "trange", "(", "num_iterations", ",", "leave", "=", "False", ")", ":", "\n", "            ", "with", "torch", ".", "cuda", ".", "amp", ".", "autocast", "(", ")", ":", "\n", "                ", "segs", "=", "model", "(", "inputs", ")", ".", "softmax", "(", "dim", "=", "1", ")", "[", "0", ",", "1", ":", "]", "\n", "", "all_results", ".", "append", "(", "segs", ".", "cpu", "(", ")", ")", "\n", "", "result", "=", "torch", ".", "stack", "(", "all_results", ")", "\n", "\n", "volumes", "=", "result", ".", "sum", "(", "dim", "=", "(", "-", "3", ",", "-", "2", ",", "-", "1", ")", ")", ".", "numpy", "(", ")", "\n", "mean_volumes", "=", "volumes", ".", "mean", "(", ")", "\n", "std_volumes", "=", "volumes", ".", "std", "(", ")", "\n", "volume_variation_coefficient", "=", "std_volumes", "/", "mean_volumes", "\n", "q1", ",", "q3", "=", "np", ".", "percentile", "(", "volumes", ",", "(", "25", ",", "75", ")", ")", "\n", "quartile_coefficient_of_dispersion", "=", "(", "q3", "-", "q1", ")", "/", "(", "q3", "+", "q1", ")", "\n", "\n", "records", ".", "append", "(", "\n", "dict", "(", "\n", "Subject", "=", "subject_id", ",", "\n", "VolumeMean", "=", "mean_volumes", ",", "\n", "VolumeSTD", "=", "std_volumes", ",", "\n", "VVC", "=", "volume_variation_coefficient", ",", "\n", "Q1", "=", "q1", ",", "\n", "Q3", "=", "q3", ",", "\n", "QCD", "=", "quartile_coefficient_of_dispersion", ",", "\n", ")", "\n", ")", "\n", "\n", "crop", ":", "tio", ".", "Crop", "=", "preprocessed", ".", "history", "[", "-", "1", "]", "\n", "pad", "=", "crop", ".", "inverse", "(", ")", "\n", "\n", "assert", "np", ".", "count_nonzero", "(", "result", ".", "numpy", "(", ")", "<", "0", ")", "==", "0", ",", "'neg values found in result'", "\n", "mean", "=", "result", ".", "mean", "(", "dim", "=", "0", ")", "\n", "assert", "np", ".", "count_nonzero", "(", "mean", ".", "numpy", "(", ")", "<", "0", ")", "==", "0", ",", "'neg values found in mean'", "\n", "std", "=", "result", ".", "std", "(", "dim", "=", "0", ")", "\n", "# entropy = utils.get_entropy(result)", "\n", "\n", "mean_image", "=", "tio", ".", "ScalarImage", "(", "tensor", "=", "mean", ",", "affine", "=", "preprocessed", ".", "image", ".", "affine", ")", "\n", "std_image", "=", "tio", ".", "ScalarImage", "(", "tensor", "=", "std", ",", "affine", "=", "preprocessed", ".", "image", ".", "affine", ")", "\n", "# entropy_image = tio.ScalarImage(tensor=entropy, affine=preprocessed.image.affine)", "\n", "\n", "mean_path", "=", "mean_dir", "/", "fp", ".", "name", ".", "replace", "(", "'.nii'", ",", "'_mean.nii'", ")", "\n", "std_path", "=", "std_dir", "/", "fp", ".", "name", ".", "replace", "(", "'.nii'", ",", "'_std.nii'", ")", "\n", "# entropy_path = entropy_dir / fp.name.replace('.nii', '_entropy.nii')", "\n", "\n", "pad", "(", "mean_image", ")", ".", "save", "(", "mean_path", ")", "\n", "pad", "(", "std_image", ")", ".", "save", "(", "std_path", ")", "\n", "# pad(entropy_image).save(entropy_path)", "\n", "\n", "# So it's updated while it runs", "\n", "df", "=", "pd", ".", "DataFrame", ".", "from_records", "(", "records", ")", "\n", "df", ".", "to_csv", "(", "csv_path", ")", "\n", "\n", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.estimate_epistemic_uncertainty.get_paths": [[124, 132], ["pathlib.Path", "pathlib.Path.is_file", "pathlib.Path.is_dir", "utils.sglob"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.sglob"], ["", "def", "get_paths", "(", "folder", ")", ":", "\n", "    ", "import", "utils", "\n", "folder", "=", "Path", "(", "folder", ")", "\n", "if", "folder", ".", "is_file", "(", ")", ":", "\n", "        ", "fps", "=", "[", "folder", "]", "\n", "", "elif", "folder", ".", "is_dir", "(", ")", ":", "\n", "        ", "fps", "=", "utils", ".", "sglob", "(", "folder", ")", "\n", "", "return", "fps", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.Evaluator.__init__": [[142, 144], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.Evaluator.infer": [[145, 177], ["pathlib.Path", "pathlib.Path.mkdir", "model.eval", "utils.get_device", "pandas.DataFrame.from_records", "torch.no_grad", "tqdm.tqdm.tqdm", "[].float().to", "zip", "[].cpu", "torchio.LabelMap", "pathlib.Path", "torchio.LabelMap.save", "loss.get_confusion", "loss.get_precision", "loss.get_recall", "loss.get_dice_from_precision_and_recall", "dict", "records.append", "[].float", "pathlib.Path.name.replace", "seg[].float", "target[].float", "affine.numpy", "pathlib.Path.name.split", "pathlib.Path.name.split", "loss.get_precision.item", "loss.get_recall.item", "loss.get_dice_from_precision_and_recall.item", "model().softmax", "model"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_device", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_confusion", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_precision", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_recall", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_dice_from_precision_and_recall"], ["", "def", "infer", "(", "self", ",", "model", ",", "loader", ",", "out_dir", ")", ":", "\n", "        ", "out_dir", "=", "Path", "(", "out_dir", ")", "\n", "out_dir", ".", "mkdir", "(", "exist_ok", "=", "True", ",", "parents", "=", "True", ")", "\n", "records", "=", "[", "]", "\n", "model", ".", "eval", "(", ")", "\n", "device", "=", "utils", ".", "get_device", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "batch", "in", "tqdm", "(", "loader", ")", ":", "\n", "                ", "inputs", "=", "batch", "[", "'image'", "]", "[", "tio", ".", "DATA", "]", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "segs", "=", "model", "(", "inputs", ")", ".", "softmax", "(", "dim", "=", "1", ")", "[", ":", ",", "1", ":", "]", ".", "cpu", "(", ")", ">", "0.5", "\n", "affines", "=", "batch", "[", "'image'", "]", "[", "tio", ".", "AFFINE", "]", "\n", "paths", "=", "batch", "[", "'image'", "]", "[", "tio", ".", "PATH", "]", "\n", "targets", "=", "batch", "[", "'label'", "]", "[", "tio", ".", "DATA", "]", "\n", "for", "seg", ",", "target", ",", "affine", ",", "path", "in", "zip", "(", "segs", ",", "targets", ",", "affines", ",", "paths", ")", ":", "\n", "                    ", "image", "=", "tio", ".", "LabelMap", "(", "tensor", "=", "seg", ",", "affine", "=", "affine", ".", "numpy", "(", ")", ")", "\n", "path", "=", "Path", "(", "path", ")", "\n", "out_path", "=", "out_dir", "/", "path", ".", "name", ".", "replace", "(", "'.nii'", ",", "'_seg_cnn.nii'", ")", "\n", "image", ".", "save", "(", "out_path", ")", "\n", "confusion", "=", "loss", ".", "get_confusion", "(", "seg", "[", "0", "]", ".", "float", "(", ")", ",", "target", "[", "0", "]", ".", "float", "(", ")", ")", "\n", "precision", "=", "loss", ".", "get_precision", "(", "confusion", ")", "\n", "recall", "=", "loss", ".", "get_recall", "(", "confusion", ")", "\n", "dice", "=", "loss", ".", "get_dice_from_precision_and_recall", "(", "precision", ",", "recall", ")", "\n", "sid", "=", "path", ".", "name", ".", "split", "(", "'_t1_post'", ")", "[", "0", "]", "if", "'_t1_post'", "in", "path", ".", "name", "else", "path", ".", "name", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "record", "=", "dict", "(", "\n", "Subject", "=", "sid", ",", "\n", "Precision", "=", "precision", ".", "item", "(", ")", ",", "\n", "Recall", "=", "recall", ".", "item", "(", ")", ",", "\n", "Dice", "=", "dice", ".", "item", "(", ")", ",", "\n", ")", "\n", "records", ".", "append", "(", "record", ")", "\n", "", "", "", "df", "=", "pd", ".", "DataFrame", ".", "from_records", "(", "records", ")", "\n", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.run_epoch": [[22, 81], ["model.train", "models.freeze_except", "tqdm.tqdm", "enumerate", "numpy.array", "tb_log.add_scalars", "iter", "engine.get_batch_pseudo", "engine.add_pseudolabeled", "engine.get_losses", "batch_losses_array.mean", "numpy.isnan", "tqdm.tqdm.set_postfix", "batch_losses_array.mean", "epoch_losses.extend", "hasattr", "dict", "warnings.warn", "torch.save", "batch_losses_array.mean.tolist", "len", "visualization.get_batch_grid", "tb_log.add_image", "np.array.mean", "model.module.state_dict", "model.state_dict", "len", "scaler.state_dict", "optimizer.state_dict"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.train", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.freeze_except", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.get_batch_pseudo", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.add_pseudolabeled", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.get_losses", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_batch_grid"], ["def", "run_epoch", "(", "\n", "loader", ",", "\n", "model", ",", "\n", "*", ",", "\n", "train", ",", "\n", "criterion", ",", "\n", "scaler", ",", "\n", "num_batches", ",", "\n", "num_instances", ",", "\n", "num_layers_finetune", "=", "None", ",", "\n", "pseudo_loader", "=", "None", ",", "\n", "tb_log", "=", "None", ",", "\n", "num_iterations", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "optimizer", ":", "Optional", "[", "torch", ".", "optim", ".", "Optimizer", "]", "=", "None", ",", "\n", "plot_every", ":", "int", "=", "50", ",", "\n", "**", "kwargs", ",", "\n", ")", ":", "\n", "    ", "model", ".", "train", "(", "train", ")", "\n", "models", ".", "freeze_except", "(", "model", ",", "num_layers_finetune", ")", "# noop if num_layers_finetune is None", "\n", "epoch_losses", "=", "[", "]", "\n", "progress", "=", "tqdm", "(", "loader", ",", "unit", "=", "'batch'", ",", "**", "kwargs", ")", "\n", "pseudo_iterator", "=", "None", "if", "pseudo_loader", "is", "None", "else", "iter", "(", "pseudo_loader", ")", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "progress", ")", ":", "\n", "        ", "batch", "[", "'name'", "]", "=", "batch", "[", "'image'", "]", "[", "'stem'", "]", "# for TensorBoard?", "\n", "batch_pseudo", "=", "get_batch_pseudo", "(", "pseudo_loader", ",", "pseudo_iterator", ")", "\n", "batch", "=", "add_pseudolabeled", "(", "batch", ",", "batch_pseudo", ")", "\n", "batch_losses_array", ",", "outputs", "=", "get_losses", "(", "\n", "batch", ",", "train", ",", "model", ",", "criterion", ",", "scaler", ",", "optimizer", ",", "num_batches", ",", "num_instances", ",", "tb_log", ")", "\n", "batch_loss_mean", "=", "batch_losses_array", ".", "mean", "(", ")", "\n", "if", "np", ".", "isnan", "(", "batch_loss_mean", ")", ":", "\n", "            ", "import", "warnings", "\n", "path", "=", "'/tmp/batch_nan.pth'", "\n", "if", "hasattr", "(", "model", ",", "'module'", ")", ":", "\n", "                ", "model_state", "=", "model", ".", "module", ".", "state_dict", "(", ")", "\n", "", "else", ":", "\n", "                ", "model_state", "=", "model", ".", "state_dict", "(", ")", "\n", "", "d", "=", "dict", "(", "\n", "batch", "=", "batch", ",", "\n", "train", "=", "train", ",", "\n", "model", "=", "model_state", ",", "\n", "criterion", "=", "criterion", ",", "\n", "scaler", "=", "scaler", ".", "state_dict", "(", ")", ",", "\n", "optimizer", "=", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "num_batches", "=", "num_batches", ",", "\n", "num_instances", "=", "num_instances", ",", "\n", ")", "\n", "warnings", ".", "warn", "(", "f'NaN loss detected. Saving to {path}'", ")", "\n", "torch", ".", "save", "(", "d", ",", "path", ")", "\n", "", "progress", ".", "set_postfix", "(", "batch_loss", "=", "batch_loss_mean", ")", "\n", "batch_losses_flat", "=", "batch_losses_array", ".", "mean", "(", "axis", "=", "1", ")", "# mean of bg and fg", "\n", "epoch_losses", ".", "extend", "(", "batch_losses_flat", ".", "tolist", "(", ")", ")", "\n", "last_full_batch", "=", "i", "==", "len", "(", "loader", ")", "-", "2", "# in case last batch is incomplete", "\n", "single_batch", "=", "len", "(", "loader", ")", "==", "1", "\n", "if", "last_full_batch", "or", "single_batch", ":", "\n", "            ", "image", "=", "visualization", ".", "get_batch_grid", "(", "batch", ",", "outputs", ")", "\n", "tb_log", ".", "add_image", "(", "f'epoch/{kwargs[\"desc\"]}'", ",", "image", ",", "num_instances", ")", "\n", "", "", "epoch_losses_array", "=", "np", ".", "array", "(", "epoch_losses", ")", "\n", "tb_log", ".", "add_scalars", "(", "'loss'", ",", "{", "f'epoch/{kwargs[\"desc\"]}'", ":", "epoch_losses_array", ".", "mean", "(", ")", "}", ",", "num_instances", ")", "\n", "return", "epoch_losses_array", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.get_batch_pseudo": [[83, 92], ["next", "iter", "next"], "function", ["None"], ["", "def", "get_batch_pseudo", "(", "pseudo_loader", ",", "pseudo_iterator", ")", ":", "\n", "    ", "if", "pseudo_loader", "is", "None", ":", "\n", "        ", "return", "None", "\n", "", "try", ":", "\n", "        ", "batch", "=", "next", "(", "pseudo_iterator", ")", "\n", "", "except", "StopIteration", ":", "\n", "        ", "pseudo_iterator", "=", "iter", "(", "pseudo_loader", ")", "\n", "batch", "=", "next", "(", "pseudo_iterator", ")", "\n", "", "return", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.add_pseudolabeled": [[94, 102], ["engine.collate_batches"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.collate_batches"], ["", "def", "add_pseudolabeled", "(", "batch", ",", "batch_pseudo", ")", ":", "\n", "    ", "if", "batch_pseudo", "is", "None", ":", "\n", "        ", "result", "=", "batch", "\n", "", "else", ":", "\n", "        ", "del", "batch", "[", "'random_resection'", "]", "# lazy but effective", "\n", "batch_pseudo", "[", "'name'", "]", "=", "batch_pseudo", "[", "'image'", "]", "[", "'stem'", "]", "# for TensorBoard?", "\n", "result", "=", "collate_batches", "(", "[", "batch", ",", "batch_pseudo", "]", ")", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.get_losses": [[104, 126], ["engine.prepare_batch", "torch.set_grad_enabled", "criterion.cpu().detach().numpy", "scaler.scale().backward", "scaler.step", "scaler.update", "optimizer.zero_grad", "tb_log.add_scalars", "len", "torch.cuda.amp.autocast", "model().softmax", "criterion", "criterion.mean", "visualization.get_batch_grid", "tb_log.add_image", "criterion.cpu().detach", "scaler.scale", "batch_losses.cpu().detach().numpy.mean", "scaler.is_enabled", "model", "criterion.cpu"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.prepare_batch", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_batch_grid"], ["", "def", "get_losses", "(", "batch", ",", "train", ",", "model", ",", "criterion", ",", "scaler", ",", "optimizer", ",", "num_batches", ",", "num_instances", ",", "tb_log", ")", ":", "\n", "    ", "inputs", ",", "targets", "=", "prepare_batch", "(", "batch", ",", "one_hot", "=", "True", ")", "\n", "with", "torch", ".", "set_grad_enabled", "(", "train", ")", ":", "\n", "        ", "with", "torch", ".", "cuda", ".", "amp", ".", "autocast", "(", "enabled", "=", "scaler", ".", "is_enabled", "(", ")", ")", ":", "\n", "            ", "outputs", "=", "model", "(", "inputs", ")", ".", "softmax", "(", "dim", "=", "1", ")", "\n", "batch_losses", "=", "criterion", "(", "outputs", ",", "targets", ")", "\n", "batch_loss", "=", "batch_losses", ".", "mean", "(", ")", "\n", "", "batch_losses_array", "=", "batch_losses", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "if", "not", "train", ":", "\n", "            ", "return", "batch_losses_array", ",", "outputs", "\n", "", "scaler", ".", "scale", "(", "batch_loss", ")", ".", "backward", "(", ")", "\n", "scaler", ".", "step", "(", "optimizer", ")", "\n", "scaler", ".", "update", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", "set_to_none", "=", "True", ")", "\n", "iter_plot", "=", "num_batches", "==", "0", "or", "num_batches", "%", "10", "==", "1", "\n", "if", "iter_plot", ":", "\n", "            ", "image", "=", "visualization", ".", "get_batch_grid", "(", "batch", ",", "outputs", ")", "\n", "tb_log", ".", "add_image", "(", "'batch/Training'", ",", "image", ",", "num_instances", ")", "\n", "", "tb_log", ".", "add_scalars", "(", "'loss'", ",", "{", "'batch/training'", ":", "batch_losses_array", ".", "mean", "(", ")", "}", ",", "num_instances", ")", "\n", "num_batches", "+=", "1", "\n", "num_instances", "+=", "len", "(", "batch", ")", "\n", "", "return", "batch_losses_array", ",", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.prepare_batch": [[128, 139], ["[].float", "[].float", "utils.get_device", "x.to.to", "torch.cat.to", "torch.cat"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_device"], ["", "def", "prepare_batch", "(", "batch", ",", "*", ",", "one_hot", ")", ":", "\n", "    ", "x", "=", "batch", "[", "'image'", "]", "[", "'data'", "]", ".", "float", "(", ")", "\n", "y", "=", "batch", "[", "'label'", "]", "[", "'data'", "]", ".", "float", "(", ")", "\n", "if", "one_hot", ":", "\n", "        ", "fg", "=", "y", "\n", "bg", "=", "1", "-", "fg", "\n", "y", "=", "torch", ".", "cat", "(", "(", "bg", ",", "fg", ")", ",", "dim", "=", "1", ")", "\n", "", "device", "=", "utils", ".", "get_device", "(", ")", "\n", "x", "=", "x", ".", "to", "(", "device", ")", "\n", "y", "=", "y", ".", "to", "(", "device", ")", "\n", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.collate_batches": [[181, 229], ["type", "isinstance", "TypeError", "torch.cat", "default_collate_err_msg_format.format", "torch.utils.data.get_worker_info", "sum", "elem.storage()._new_shared", "elem.new", "isinstance", "engine.collate_batches", "torch.tensor", "isinstance", "x.numel", "elem.storage", "torch.as_tensor", "torch.tensor", "isinstance", "torch.as_tensor", "isinstance", "engine.collate_batches", "isinstance", "hasattr", "type.", "isinstance", "zip", "engine.collate_batches", "engine.collate_batches", "zip"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.collate_batches", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.collate_batches", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.collate_batches", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.collate_batches"], ["", "", "def", "collate_batches", "(", "batch", ")", ":", "\n", "    ", "r\"\"\"Puts each data field into a tensor with outer dimension batch size\"\"\"", "\n", "\n", "from", "torch", ".", "_six", "import", "container_abcs", ",", "string_classes", ",", "int_classes", "\n", "\n", "elem", "=", "batch", "[", "0", "]", "\n", "elem_type", "=", "type", "(", "elem", ")", "\n", "if", "isinstance", "(", "elem", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "out", "=", "None", "\n", "if", "torch", ".", "utils", ".", "data", ".", "get_worker_info", "(", ")", "is", "not", "None", ":", "\n", "# If we're in a background process, concatenate directly into a", "\n", "# shared memory tensor to avoid an extra copy", "\n", "            ", "numel", "=", "sum", "(", "[", "x", ".", "numel", "(", ")", "for", "x", "in", "batch", "]", ")", "\n", "storage", "=", "elem", ".", "storage", "(", ")", ".", "_new_shared", "(", "numel", ")", "\n", "out", "=", "elem", ".", "new", "(", "storage", ")", "\n", "", "return", "torch", ".", "cat", "(", "batch", ",", "0", ",", "out", "=", "out", ")", "\n", "", "elif", "elem_type", ".", "__module__", "==", "'numpy'", "and", "elem_type", ".", "__name__", "!=", "'str_'", "and", "elem_type", ".", "__name__", "!=", "'string_'", ":", "\n", "        ", "if", "elem_type", ".", "__name__", "==", "'ndarray'", "or", "elem_type", ".", "__name__", "==", "'memmap'", ":", "\n", "            ", "return", "collate_batches", "(", "[", "torch", ".", "as_tensor", "(", "b", ")", "for", "b", "in", "batch", "]", ")", "\n", "", "elif", "elem", ".", "shape", "==", "(", ")", ":", "# scalars", "\n", "            ", "return", "torch", ".", "as_tensor", "(", "batch", ")", "\n", "", "", "elif", "isinstance", "(", "elem", ",", "float", ")", ":", "\n", "        ", "return", "torch", ".", "tensor", "(", "batch", ",", "dtype", "=", "torch", ".", "float64", ")", "\n", "", "elif", "isinstance", "(", "elem", ",", "int_classes", ")", ":", "\n", "        ", "return", "torch", ".", "tensor", "(", "batch", ")", "\n", "", "elif", "isinstance", "(", "elem", ",", "string_classes", ")", ":", "\n", "        ", "return", "batch", "\n", "", "elif", "isinstance", "(", "elem", ",", "container_abcs", ".", "Mapping", ")", ":", "\n", "        ", "return", "{", "key", ":", "collate_batches", "(", "[", "d", "[", "key", "]", "for", "d", "in", "batch", "]", ")", "for", "key", "in", "elem", "}", "\n", "", "elif", "isinstance", "(", "elem", ",", "tuple", ")", "and", "hasattr", "(", "elem", ",", "'_fields'", ")", ":", "# namedtuple", "\n", "        ", "return", "elem_type", "(", "*", "(", "collate_batches", "(", "samples", ")", "for", "samples", "in", "zip", "(", "*", "batch", ")", ")", ")", "\n", "", "elif", "isinstance", "(", "elem", ",", "container_abcs", ".", "Sequence", ")", ":", "\n", "# We shouldn't need this here because we replaced stack with cat", "\n", "# # check to make sure that the elements in batch have consistent size", "\n", "# it = iter(batch)", "\n", "# elem_size = len(next(it))", "\n", "# if not all(len(elem) == elem_size for elem in it):", "\n", "#     raise RuntimeError('each element in list of batch should be of equal size')", "\n", "        ", "transposed", "=", "zip", "(", "*", "batch", ")", "\n", "return", "[", "collate_batches", "(", "samples", ")", "for", "samples", "in", "transposed", "]", "\n", "\n", "", "default_collate_err_msg_format", "=", "(", "\n", "\"default_collate: batch must contain tensors, numpy arrays, numbers, \"", "\n", "\"dicts or lists; found {}\"", "\n", ")", "\n", "\n", "raise", "TypeError", "(", "default_collate_err_msg_format", ".", "format", "(", "elem_type", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.__init__": [[187, 214], ["numpy.array", "numpy.array", "main.Trainer.get_pseudo_loader", "main.Trainer.get_model", "main.Trainer.get_optimizer", "main.Trainer.get_scheduler", "main.Trainer.load_pretrained", "main.Trainer.get_scaler", "loss.DiceLoss", "main.get_experiment_dir", "main.Trainer.get_tb_writer", "main.setup_benchmark", "main.get_data_module_public", "main.get_data_module_real"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_pseudo_loader", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.get_model", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.get_optimizer", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.get_scheduler", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.load_pretrained", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.get_scaler", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.get_experiment_dir", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.get_tb_writer", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.setup_benchmark", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.get_data_module_public", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.get_data_module_real"], ["    ", "def", "__init__", "(", "self", ",", "fold", "=", "None", ")", ":", "\n", "        ", "self", ".", "num_epochs", "=", "None", "\n", "self", ".", "num_processed_instances", "=", "np", ".", "array", "(", "0", ")", "# array so it can be \"passed by reference\"", "\n", "self", ".", "num_processed_batches", "=", "np", ".", "array", "(", "0", ")", "# array so it can be \"passed by reference\"", "\n", "self", ".", "fold", "=", "fold", "\n", "if", "fold", "is", "None", ":", "\n", "            ", "fold_string", "=", "''", "\n", "self", ".", "data", "=", "get_data_module_public", "(", ")", "# pylint: disable=E1120", "\n", "", "else", ":", "\n", "            ", "fold_string", "=", "f'_fold_{fold}'", "\n", "self", ".", "data", "=", "get_data_module_real", "(", "fold", ")", "# pylint: disable=E1120", "\n", "", "self", ".", "pseudo_loader", "=", "self", ".", "get_pseudo_loader", "(", ")", "\n", "self", ".", "model", "=", "self", ".", "get_model", "(", ")", "\n", "self", ".", "optimizer", "=", "self", ".", "get_optimizer", "(", ")", "# pylint: disable=E1120", "\n", "self", ".", "scheduler", "=", "self", ".", "get_scheduler", "(", ")", "# pylint: disable=E1120", "\n", "self", ".", "load_pretrained", "(", ")", "\n", "self", ".", "scaler", "=", "self", ".", "get_scaler", "(", ")", "# pylint: disable=E1120", "\n", "self", ".", "criterion", "=", "loss", ".", "DiceLoss", "(", ")", "\n", "self", ".", "experiment_dir", "=", "get_experiment_dir", "(", ")", "# pylint: disable=E1120", "\n", "self", ".", "best_checkpoint_path", "=", "self", ".", "experiment_dir", "/", "f'checkpoint{fold_string}.pth'", "\n", "self", ".", "last_checkpoint_path", "=", "self", ".", "experiment_dir", "/", "f'checkpoint_last{fold_string}.pth'", "\n", "self", ".", "evaluation_path", "=", "self", ".", "experiment_dir", "/", "f'evaluation{fold_string}.csv'", "\n", "self", ".", "best_val_loss", "=", "1", "\n", "self", ".", "inference_dir", "=", "self", ".", "experiment_dir", "/", "'inference'", "\n", "self", ".", "tensorboard_dir", "=", "self", ".", "experiment_dir", "/", "f'tensorboard{fold_string}'", "\n", "self", ".", "tb_log", "=", "self", ".", "get_tb_writer", "(", ")", "\n", "setup_benchmark", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.load_pretrained": [[215, 245], ["torch.load", "hasattr", "_log.info", "_log.info", "main.Trainer.model.module.load_state_dict", "main.Trainer.model.load_state_dict", "main.Trainer.optimizer.load_state_dict", "main.Trainer.scheduler.load_state_dict", "_log.warning"], "methods", ["None"], ["", "@", "ex", ".", "capture", "\n", "def", "load_pretrained", "(", "\n", "self", ",", "\n", "pre_trained_checkpoint_path", ",", "\n", "load_optimizer", ",", "\n", "load_scheduler", ",", "\n", "continue_iterations", ",", "\n", "num_layers_finetune", ",", "\n", "_log", ",", "\n", ")", ":", "\n", "        ", "if", "pre_trained_checkpoint_path", "is", "None", ":", "\n", "            ", "return", "\n", "", "checkpoint", "=", "torch", ".", "load", "(", "pre_trained_checkpoint_path", ")", "\n", "if", "hasattr", "(", "self", ".", "model", ",", "'module'", ")", ":", "# DataParallel", "\n", "            ", "self", ".", "model", ".", "module", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "", "if", "load_optimizer", ":", "\n", "            ", "self", ".", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "", "if", "load_scheduler", ":", "\n", "            ", "if", "'scheduler'", "in", "checkpoint", ":", "\n", "                ", "self", ".", "scheduler", ".", "load_state_dict", "(", "checkpoint", "[", "'scheduler'", "]", ")", "\n", "", "else", ":", "\n", "                ", "_log", ".", "warning", "(", "'Scheduler not found in checkpoint'", ")", "\n", "", "", "if", "continue_iterations", "and", "'num_processed_batches'", "in", "checkpoint", ":", "\n", "            ", "self", ".", "num_processed_batches", "=", "checkpoint", "[", "'num_processed_batches'", "]", "\n", "self", ".", "num_processed_instances", "=", "checkpoint", "[", "'num_processed_instances'", "]", "\n", "self", ".", "num_epochs", "=", "checkpoint", "[", "'epoch'", "]", "\n", "", "_log", ".", "info", "(", "f'Number of processed batches: {self.num_processed_batches}'", ")", "\n", "_log", ".", "info", "(", "f'Number of processed instances: {self.num_processed_instances}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.get_tb_writer": [[246, 249], ["SummaryWriter"], "methods", ["None"], ["", "def", "get_tb_writer", "(", "self", ")", ":", "\n", "        ", "from", "torch", ".", "utils", ".", "tensorboard", "import", "SummaryWriter", "\n", "return", "SummaryWriter", "(", "log_dir", "=", "self", ".", "tensorboard_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.get_model": [[250, 252], ["main.setup_model", "models.get_unet"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.setup_model", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.get_unet"], ["", "def", "get_model", "(", "self", ")", ":", "\n", "        ", "return", "setup_model", "(", "models", ".", "get_unet", "(", ")", ")", "# pylint: disable=E1120", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.get_optimizer": [[253, 257], ["torch.optim.AdamW", "main.Trainer.model.parameters"], "methods", ["None"], ["", "@", "ex", ".", "capture", "\n", "def", "get_optimizer", "(", "self", ",", "learning_rate", ")", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "AdamW", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "learning_rate", ")", "\n", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.get_scheduler": [[258, 262], ["torch.optim.lr_scheduler.StepLR"], "methods", ["None"], ["", "@", "ex", ".", "capture", "\n", "def", "get_scheduler", "(", "self", ",", "scheduler_step_size", ")", ":", "\n", "        ", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "self", ".", "optimizer", ",", "step_size", "=", "scheduler_step_size", ")", "\n", "return", "scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.get_scaler": [[263, 269], ["torch.cuda.amp.GradScaler", "torch.cuda.is_available", "next", "main.Trainer.model.parameters"], "methods", ["None"], ["", "@", "ex", ".", "capture", "\n", "def", "get_scaler", "(", "self", ",", "use_amp", ")", ":", "\n", "        ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", "or", "not", "next", "(", "self", ".", "model", ".", "parameters", "(", ")", ")", ".", "is_cuda", ":", "\n", "            ", "use_amp", "=", "False", "\n", "", "scaler", "=", "torch", ".", "cuda", ".", "amp", ".", "GradScaler", "(", "enabled", "=", "use_amp", ")", "\n", "return", "scaler", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.get_pseudo_loader": [[270, 300], ["datasets.get_pseudo_loader", "_log.info", "_log.warning", "RuntimeError", "len"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_pseudo_loader"], ["", "@", "ex", ".", "capture", "\n", "def", "get_pseudo_loader", "(", "\n", "self", ",", "\n", "threshold_pseudo", ",", "\n", "percentile_pseudo", ",", "\n", "metric", ",", "\n", "summary_path", ",", "\n", "dataset_name", ",", "\n", "use_pseudolabeled", ",", "\n", "num_workers", ",", "\n", "_log", ",", "\n", ")", ":", "\n", "        ", "if", "not", "use_pseudolabeled", ":", "\n", "            ", "loader", "=", "None", "\n", "", "else", ":", "\n", "            ", "if", "threshold_pseudo", "is", "None", "and", "percentile_pseudo", "is", "None", ":", "\n", "                ", "_log", ".", "warning", "(", "'No threshold or percentile for pseudo. Using percentile 100'", ")", "\n", "percentile_pseudo", "=", "100", "\n", "", "if", "threshold_pseudo", "is", "not", "None", "and", "percentile_pseudo", "is", "not", "None", ":", "\n", "                ", "raise", "RuntimeError", "(", "'Only threshold or percentile for pseudo should be passed'", ")", "\n", "", "loader", "=", "datasets", ".", "get_pseudo_loader", "(", "\n", "threshold_pseudo", ",", "\n", "percentile_pseudo", ",", "\n", "metric", ",", "\n", "summary_path", ",", "\n", "dataset_name", ",", "\n", "num_workers", ",", "\n", ")", "\n", "_log", ".", "info", "(", "f'{len(loader.dataset):4} pseudolabeled instances'", ")", "\n", "", "return", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.save_state": [[301, 317], ["hasattr", "torch.save", "main.Trainer.model.module.state_dict", "main.Trainer.model.state_dict", "main.Trainer.optimizer.state_dict", "main.Trainer.scaler.state_dict", "main.Trainer.scheduler.state_dict"], "methods", ["None"], ["", "def", "save_state", "(", "self", ",", "loss", ",", "epoch", ",", "path", ")", ":", "\n", "        ", "if", "hasattr", "(", "self", ".", "model", ",", "'module'", ")", ":", "# DataParallel", "\n", "            ", "model_state_dict", "=", "self", ".", "model", ".", "module", ".", "state_dict", "(", ")", "\n", "", "else", ":", "\n", "            ", "model_state_dict", "=", "self", ".", "model", ".", "state_dict", "(", ")", "\n", "", "checkpoint", "=", "{", "\n", "'model'", ":", "model_state_dict", ",", "\n", "'optimizer'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'scaler'", ":", "self", ".", "scaler", ".", "state_dict", "(", ")", ",", "\n", "'scheduler'", ":", "None", "if", "self", ".", "scheduler", "is", "None", "else", "self", ".", "scheduler", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'loss'", ":", "loss", ",", "\n", "'num_processed_batches'", ":", "self", ".", "num_processed_batches", ",", "\n", "'num_processed_instances'", ":", "self", ".", "num_processed_instances", ",", "\n", "}", "\n", "torch", ".", "save", "(", "checkpoint", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.check_best_loss": [[318, 323], ["main.Trainer.best_checkpoint_path.parent.mkdir", "main.Trainer.save_state"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.save_state"], ["", "def", "check_best_loss", "(", "self", ",", "loss", ",", "epoch", ")", ":", "\n", "        ", "if", "loss", "<", "self", ".", "best_val_loss", ":", "\n", "            ", "self", ".", "best_val_loss", "=", "loss", "\n", "self", ".", "best_checkpoint_path", ".", "parent", ".", "mkdir", "(", "exist_ok", "=", "True", ",", "parents", "=", "True", ")", "\n", "self", ".", "save_state", "(", "loss", ",", "epoch", ",", "self", ".", "best_checkpoint_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.run_validation": [[324, 349], ["main.Trainer.last_checkpoint_path.parent.mkdir", "main.Trainer.save_state", "torch.random.fork_rng", "engine.run_epoch", "main.Trainer.check_best_loss", "engine.run_epoch.mean", "torch.manual_seed", "engine.run_epoch.mean"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.save_state", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.run_epoch", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.check_best_loss"], ["", "", "@", "ex", ".", "capture", "\n", "def", "run_validation", "(", "self", ",", "epoch", ",", "seed", ",", "cache_val_set", ",", "_log", ")", ":", "\n", "# We always want validation to be the same", "\n", "        ", "with", "torch", ".", "random", ".", "fork_rng", "(", "[", "]", ")", ":", "\n", "# Using a cached validation set will make things much faster, hopefully", "\n", "            ", "if", "not", "cache_val_set", ":", "\n", "                ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "", "losses", "=", "engine", ".", "run_epoch", "(", "\n", "self", ".", "data", ".", "val_loader", ",", "\n", "self", ".", "model", ",", "\n", "train", "=", "False", ",", "\n", "criterion", "=", "self", ".", "criterion", ",", "\n", "scaler", "=", "self", ".", "scaler", ",", "\n", "num_batches", "=", "self", ".", "num_processed_batches", ",", "\n", "num_instances", "=", "self", ".", "num_processed_instances", ",", "\n", "tb_log", "=", "self", ".", "tb_log", ",", "\n", "colour", "=", "engine", ".", "GREEN", ",", "\n", "desc", "=", "'Validation'", ",", "\n", ")", "\n", "# _log.info(f'{\"Mean val loss:\":20}{losses.mean():.3f}')", "\n", "", "if", "epoch", ">", "0", ":", "\n", "            ", "self", ".", "check_best_loss", "(", "losses", ".", "mean", "(", ")", ",", "epoch", ")", "\n", "", "self", ".", "last_checkpoint_path", ".", "parent", ".", "mkdir", "(", "exist_ok", "=", "True", ",", "parents", "=", "True", ")", "\n", "self", ".", "save_state", "(", "losses", ".", "mean", "(", ")", ",", "epoch", ",", "self", ".", "last_checkpoint_path", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.run_train": [[350, 369], ["engine.run_epoch", "main.Trainer.scheduler.step"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.run_epoch"], ["", "@", "ex", ".", "capture", "\n", "def", "run_train", "(", "self", ",", "_log", ",", "num_layers_finetune", ")", ":", "\n", "        ", "losses", "=", "engine", ".", "run_epoch", "(", "\n", "self", ".", "data", ".", "train_loader", ",", "\n", "self", ".", "model", ",", "\n", "train", "=", "True", ",", "\n", "criterion", "=", "self", ".", "criterion", ",", "\n", "scaler", "=", "self", ".", "scaler", ",", "\n", "num_batches", "=", "self", ".", "num_processed_batches", ",", "\n", "num_instances", "=", "self", ".", "num_processed_instances", ",", "\n", "optimizer", "=", "self", ".", "optimizer", ",", "\n", "tb_log", "=", "self", ".", "tb_log", ",", "\n", "num_layers_finetune", "=", "num_layers_finetune", ",", "\n", "pseudo_loader", "=", "self", ".", "pseudo_loader", ",", "\n", "colour", "=", "engine", ".", "BLUE", ",", "\n", "desc", "=", "'Training  '", ",", "\n", ")", "\n", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.train": [[370, 385], ["tqdm.trange", "main.Trainer.run_validation", "tqdm.trange.set_postfix", "main.Trainer.run_train", "tqdm.trange.set_postfix", "main.Trainer.mean", "main.Trainer.run_validation", "main.Trainer.mean", "main.Trainer.mean"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.run_validation", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.run_train", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.run_validation"], ["", "@", "ex", ".", "capture", "\n", "def", "train", "(", "self", ",", "num_epochs", ",", "validate", ")", ":", "\n", "        ", "progress", "=", "trange", "(", "num_epochs", ",", "desc", "=", "'Fit       '", ",", "unit", "=", "'epoch'", ")", "\n", "if", "validate", ":", "\n", "            ", "val_losses", "=", "self", ".", "run_validation", "(", "epoch", "=", "-", "1", ")", "# pylint: disable=E1120", "\n", "progress", ".", "set_postfix", "(", "\n", "val", "=", "val_losses", ".", "mean", "(", ")", ",", "\n", ")", "\n", "", "for", "epoch", "in", "progress", ":", "\n", "            ", "train_losses", "=", "self", ".", "run_train", "(", ")", "\n", "postfix", "=", "{", "'train'", ":", "train_losses", ".", "mean", "(", ")", "}", "\n", "if", "validate", ":", "\n", "                ", "val_losses", "=", "self", ".", "run_validation", "(", "epoch", "=", "epoch", ")", "\n", "postfix", "[", "'val'", "]", "=", "val_losses", ".", "mean", "(", ")", "\n", "", "progress", ".", "set_postfix", "(", "**", "postfix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.evaluate": [[386, 406], ["engine.Evaluator", "engine.Evaluator.infer", "engine.Evaluator.infer.to_csv", "engine.Evaluator.infer.Dice.values.tolist", "main.Trainer.best_checkpoint_path.is_file", "torch.load", "hasattr", "_log.warning", "main.Trainer.model.module.load_state_dict", "main.Trainer.model.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.Evaluator.infer"], ["", "", "@", "ex", ".", "capture", "\n", "def", "evaluate", "(", "self", ",", "_log", ",", "load_best", "=", "True", ")", ":", "\n", "        ", "evaluator", "=", "engine", ".", "Evaluator", "(", ")", "\n", "if", "load_best", ":", "\n", "            ", "if", "self", ".", "best_checkpoint_path", ".", "is_file", "(", ")", ":", "\n", "                ", "checkpoint", "=", "torch", ".", "load", "(", "self", ".", "best_checkpoint_path", ")", "\n", "if", "hasattr", "(", "self", ".", "model", ",", "'module'", ")", ":", "# DataParallel", "\n", "                    ", "self", ".", "model", ".", "module", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "_log", ".", "warning", "(", "f'Checkpoint not found: {self.best_checkpoint_path}'", ")", "\n", "", "", "df", "=", "evaluator", ".", "infer", "(", "\n", "self", ".", "model", ",", "\n", "self", ".", "data", ".", "test_loader", ",", "\n", "self", ".", "inference_dir", ",", "\n", ")", "\n", "df", ".", "to_csv", "(", "self", ".", "evaluation_path", ")", "\n", "dices", "=", "df", ".", "Dice", ".", "values", ".", "tolist", "(", ")", "\n", "return", "dices", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.run": [[407, 414], ["main.Trainer.train", "main.Trainer.evaluate", "_log.info"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.train", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.evaluate"], ["", "@", "ex", ".", "capture", "\n", "def", "run", "(", "self", ",", "num_epochs", ",", "_log", ")", ":", "\n", "        ", "if", "self", ".", "num_epochs", "is", "not", "None", ":", "\n", "            ", "num_epochs", "=", "num_epochs", "-", "self", ".", "num_epochs", "\n", "_log", ".", "info", "(", "f'Continuing for {num_epochs} more epochs'", ")", "\n", "", "self", ".", "train", "(", "num_epochs", ")", "\n", "return", "self", ".", "evaluate", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.config": [[28, 34], ["str", "str", "pathlib.Path().expanduser", "pathlib.Path().expanduser", "pathlib.Path", "pathlib.Path"], "function", ["None"], ["@", "ex", ".", "config", "\n", "def", "config", "(", ")", ":", "\n", "    ", "seed", "=", "42", "\n", "datasets_dir", "=", "str", "(", "Path", "(", "'~/datasets'", ")", ".", "expanduser", "(", ")", ")", "\n", "real_dataset_dir", "=", "str", "(", "Path", "(", "'~/datasets/real/london'", ")", ".", "expanduser", "(", ")", ")", "\n", "debug", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.config_resources": [[36, 46], ["None"], "function", ["None"], ["", "@", "ex", ".", "config", "\n", "def", "config_resources", "(", ")", ":", "\n", "    ", "train_batch_size_per_gpu", "=", "5", "# 5 with DataParallel take up to 32131 and 29217 MB", "\n", "num_workers", "=", "12", "# seems to be the fastest number", "\n", "multi_gpu", "=", "True", "\n", "cpu", "=", "False", "\n", "cache_val_set", "=", "True", "\n", "use_amp", "=", "True", "\n", "debug_ratio", "=", "0.02", "\n", "validate", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.config_training": [[48, 61], ["None"], "function", ["None"], ["", "@", "ex", ".", "config", "\n", "def", "config_training", "(", ")", ":", "\n", "    ", "num_epochs", "=", "60", "\n", "learning_rate", "=", "1e-3", "\n", "scheduler_step_size", "=", "20", "# epochs", "\n", "pre_trained_checkpoint_path", "=", "None", "\n", "num_layers_finetune", "=", "None", "# None means all", "\n", "load_optimizer", "=", "True", "\n", "load_scheduler", "=", "True", "\n", "continue_iterations", "=", "True", "\n", "pseudo_dirname", "=", "None", "\n", "augment", "=", "True", "\n", "histogram_standardization", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.config_semisupervised": [[63, 72], ["None"], "function", ["None"], ["", "@", "ex", ".", "config", "\n", "def", "config_semisupervised", "(", ")", ":", "\n", "    ", "threshold_pseudo", "=", "0.2", "\n", "percentile_pseudo", "=", "None", "# 50", "\n", "metric", "=", "'QCD'", "\n", "summary_path", "=", "None", "\n", "dataset_name", "=", "'pseudo'", "\n", "use_pseudolabeled", "=", "False", "\n", "pseudolabels_batch_size_per_gpu", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.config_cross_validation": [[74, 77], ["None"], "function", ["None"], ["", "@", "ex", ".", "config", "\n", "def", "config_cross_validation", "(", ")", ":", "\n", "    ", "num_folds", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.get_resection_params": [[79, 86], ["None"], "function", ["None"], ["", "@", "ex", ".", "capture", "\n", "def", "get_resection_params", "(", "white_matter_p", ",", "blood_clot_p", ",", "shape", ",", "texture", ")", ":", "\n", "    ", "return", "{", "\n", "'wm_lesion_p'", ":", "white_matter_p", ",", "\n", "'clot_p'", ":", "blood_clot_p", ",", "\n", "'shape'", ":", "shape", ",", "\n", "'texture'", ":", "texture", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.get_data_module_public": [[89, 121], ["datasets.DataModulePublic", "torch.cuda.device_count", "main.get_resection_params"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.get_resection_params"], ["", "@", "ex", ".", "capture", "\n", "def", "get_data_module_public", "(", "\n", "datasets_dir", ",", "\n", "real_dataset_dir", ",", "\n", "train_batch_size_per_gpu", ",", "\n", "num_workers", ",", "\n", "debug", ",", "\n", "debug_ratio", ",", "\n", "augment", ",", "\n", "multi_gpu", ",", "\n", "use_pseudolabeled", ",", "\n", "pseudolabels_batch_size_per_gpu", ",", "\n", "histogram_standardization", ",", "\n", "_log", ",", "\n", ")", ":", "\n", "    ", "num_devices", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "if", "multi_gpu", "else", "1", "\n", "train_batch_size", "=", "num_devices", "*", "train_batch_size_per_gpu", "\n", "if", "use_pseudolabeled", ":", "\n", "        ", "pseudolabels_batch_size", "=", "num_devices", "*", "pseudolabels_batch_size_per_gpu", "\n", "train_batch_size", "-=", "pseudolabels_batch_size", "# leave room in batch for pseudolabeled images", "\n", "", "return", "datasets", ".", "DataModulePublic", "(", "\n", "datasets_dir", ",", "\n", "real_dataset_dir", ",", "\n", "get_resection_params", "(", ")", ",", "# pylint: disable=E1120", "\n", "train_batch_size", ",", "\n", "num_workers", ",", "\n", "debug", "=", "debug", ",", "\n", "debug_ratio", "=", "debug_ratio", ",", "\n", "log", "=", "_log", ",", "\n", "verbose", "=", "True", ",", "\n", "augment", "=", "augment", ",", "\n", "histogram_standardization", "=", "histogram_standardization", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.get_data_module_real": [[124, 151], ["datasets.DataModuleCV", "torch.cuda.device_count"], "function", ["None"], ["", "@", "ex", ".", "capture", "\n", "def", "get_data_module_real", "(", "\n", "fold", ",", "\n", "num_folds", ",", "\n", "datasets_dir", ",", "\n", "dataset_name", ",", "\n", "train_batch_size_per_gpu", ",", "\n", "num_workers", ",", "\n", "multi_gpu", ",", "\n", "pseudo_dirname", ",", "\n", "_log", ",", "\n", "use_public_landmarks", ",", "\n", ")", ":", "\n", "    ", "assert", "dataset_name", "is", "not", "None", "\n", "num_devices", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "if", "multi_gpu", "else", "1", "\n", "train_batch_size", "=", "num_devices", "*", "train_batch_size_per_gpu", "\n", "return", "datasets", ".", "DataModuleCV", "(", "\n", "fold", ",", "\n", "num_folds", ",", "\n", "datasets_dir", ",", "\n", "dataset_name", ",", "\n", "train_batch_size", ",", "\n", "num_workers", ",", "\n", "log", "=", "_log", ",", "\n", "verbose", "=", "True", ",", "\n", "pseudo_dirname", "=", "pseudo_dirname", ",", "\n", "use_public_landmarks", "=", "use_public_landmarks", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.setup_model": [[154, 164], ["torch.nn.DataParallel.to", "utils.get_device", "torch.nn.DataParallel"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_device"], ["", "@", "ex", ".", "capture", "\n", "def", "setup_model", "(", "model", ",", "multi_gpu", ",", "cpu", ")", ":", "# gpus ignored for now", "\n", "    ", "if", "cpu", ":", "\n", "        ", "utils", ".", "get_device", "=", "lambda", ":", "'cpu'", "\n", "", "else", ":", "\n", "        ", "model", ".", "to", "(", "utils", ".", "get_device", "(", ")", ")", "\n", "if", "multi_gpu", ":", "\n", "# model = DDP(model)", "\n", "            ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.get_experiment_id": [[166, 173], ["None"], "function", ["None"], ["", "@", "ex", ".", "capture", "\n", "def", "get_experiment_id", "(", "_run", ")", ":", "\n", "# pylint: disable=protected-access", "\n", "    ", "experiment_id", "=", "_run", ".", "_id", "\n", "if", "experiment_id", "is", "None", ":", "\n", "        ", "experiment_id", "=", "'unobserved'", "\n", "", "return", "experiment_id", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.get_experiment_dir": [[175, 179], ["main.get_experiment_id"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.get_experiment_id"], ["", "def", "get_experiment_dir", "(", ")", ":", "\n", "    ", "experiment_id", "=", "get_experiment_id", "(", ")", "# pylint: disable=E1120", "\n", "experiment_dir", "=", "runs_dir", "/", "experiment_id", "\n", "return", "experiment_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.setup_benchmark": [[181, 184], ["None"], "function", ["None"], ["", "@", "ex", ".", "capture", "\n", "def", "setup_benchmark", "(", "debug", ")", ":", "\n", "    ", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "not", "debug", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.run": [[416, 439], ["torch.manual_seed", "main.Trainer.run", "tqdm.trange", "utils.get_median_iqr", "open", "f.write", "print", "main.Trainer.run", "Trainer().run.extend", "main.Trainer", "main.get_experiment_id", "main.Trainer"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.run", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_median_iqr", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.run", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.get_experiment_id"], ["", "", "@", "ex", ".", "automain", "\n", "def", "run", "(", "num_epochs", ",", "debug", ",", "num_folds", ",", "seed", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "if", "num_folds", "==", "0", ":", "\n", "        ", "dices", "=", "Trainer", "(", ")", ".", "run", "(", "num_epochs", ")", "# pylint: disable=E1120", "\n", "", "else", ":", "\n", "        ", "progress", "=", "trange", "(", "\n", "1", "if", "debug", "else", "num_folds", ",", "\n", "unit", "=", "'fold'", ",", "\n", "desc", "=", "'Cross-val.'", ",", "\n", "colour", "=", "engine", ".", "PURPLE", ",", "\n", ")", "\n", "dices", "=", "[", "]", "\n", "for", "fold", "in", "progress", ":", "\n", "            ", "results", "=", "Trainer", "(", "fold", "=", "fold", ")", ".", "run", "(", "num_epochs", ")", "# pylint: disable=E1120", "\n", "dices", ".", "extend", "(", "results", ")", "\n", "", "", "median", ",", "iqr", "=", "100", "*", "utils", ".", "get_median_iqr", "(", "dices", ")", "\n", "results_summary_path", "=", "runs_dir", "/", "'results.txt'", "\n", "with", "open", "(", "results_summary_path", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "line", "=", "f'{get_experiment_id():3}: {median:.3f} ({iqr:.3f})\\n'", "\n", "f", ".", "write", "(", "line", ")", "\n", "print", "(", "results_summary_path", ",", "'updated:'", ",", "line", ")", "\n", "", "return", "median", ",", "iqr", "\n", "", ""]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.evaluate.main": [[6, 50], ["click.command", "click.argument", "click.argument", "click.argument", "click.argument", "click.argument", "click.argument", "click.option", "click.option", "click.option", "evaluate.get_paths", "evaluate.get_paths", "datasets.get_test_transform", "tio.SubjectsDataset", "torch.load", "torch.device", "models.get_unet().to", "pathlib.Path", "torch.nn.DataParallel.eval", "torch.set_grad_enabled", "torch.utils.data.DataLoader", "pathlib.Path.mkdir", "engine.Evaluator", "engine.Evaluator.infer", "evaluator.infer.to_csv", "print", "len", "len", "tio.Subject", "torch.nn.DataParallel", "torch.nn.DataParallel.module.load_state_dict", "torch.nn.DataParallel.load_state_dict", "utils.get_median_iqr", "click.Path", "click.Path", "click.Path", "click.Path", "click.Path", "click.Path", "zip", "torch.cuda.is_available", "models.get_unet", "tio.ScalarImage", "tio.LabelMap"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.estimate_aleatoric_uncertainty.get_paths", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.estimate_aleatoric_uncertainty.get_paths", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_test_transform", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.engine.Evaluator.infer", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_median_iqr", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.get_unet"], ["@", "click", ".", "command", "(", ")", "\n", "@", "click", ".", "argument", "(", "'image-dir'", ",", "type", "=", "click", ".", "Path", "(", "exists", "=", "True", ")", ")", "\n", "@", "click", ".", "argument", "(", "'label-dir'", ",", "type", "=", "click", ".", "Path", "(", "exists", "=", "True", ")", ")", "\n", "@", "click", ".", "argument", "(", "'checkpoint-path'", ",", "type", "=", "click", ".", "Path", "(", "exists", "=", "True", ",", "dir_okay", "=", "False", ")", ")", "\n", "@", "click", ".", "argument", "(", "'output-dir'", ",", "type", "=", "click", ".", "Path", "(", ")", ")", "\n", "@", "click", ".", "argument", "(", "'landmarks-path'", ",", "type", "=", "click", ".", "Path", "(", "dir_okay", "=", "False", ")", ")", "\n", "@", "click", ".", "argument", "(", "'df-path'", ",", "type", "=", "click", ".", "Path", "(", "dir_okay", "=", "False", ")", ")", "\n", "@", "click", ".", "option", "(", "'--batch-size'", ",", "'-b'", ",", "type", "=", "int", ",", "default", "=", "6", ",", "show_default", "=", "True", ")", "\n", "@", "click", ".", "option", "(", "'--num-workers'", ",", "'-j'", ",", "type", "=", "int", ",", "default", "=", "12", ",", "show_default", "=", "True", ")", "\n", "@", "click", ".", "option", "(", "'--multi-gpu/--single-gpu'", ",", "'-m'", ",", "default", "=", "True", ")", "\n", "def", "main", "(", "image_dir", ",", "label_dir", ",", "checkpoint_path", ",", "output_dir", ",", "landmarks_path", ",", "df_path", ",", "batch_size", ",", "num_workers", ",", "multi_gpu", ")", ":", "\n", "    ", "import", "torch", "\n", "import", "torchio", "as", "tio", "\n", "import", "models", "\n", "import", "datasets", "\n", "import", "engine", "\n", "import", "utils", "\n", "\n", "fps", "=", "get_paths", "(", "image_dir", ")", "\n", "lfps", "=", "get_paths", "(", "label_dir", ")", "\n", "assert", "len", "(", "fps", ")", "==", "len", "(", "lfps", ")", "\n", "# key must be 'image' as in get_test_transform", "\n", "subjects", "=", "[", "tio", ".", "Subject", "(", "image", "=", "tio", ".", "ScalarImage", "(", "fp", ")", ",", "label", "=", "tio", ".", "LabelMap", "(", "lfp", ")", ")", "for", "(", "fp", ",", "lfp", ")", "in", "zip", "(", "fps", ",", "lfps", ")", "]", "\n", "transform", "=", "datasets", ".", "get_test_transform", "(", "landmarks_path", ")", "\n", "dataset", "=", "tio", ".", "SubjectsDataset", "(", "subjects", ",", "transform", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ")", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "model", "=", "models", ".", "get_unet", "(", ")", ".", "to", "(", "device", ")", "\n", "if", "multi_gpu", ":", "\n", "        ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "model", ".", "module", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "", "else", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "", "output_dir", "=", "Path", "(", "output_dir", ")", "\n", "model", ".", "eval", "(", ")", "\n", "torch", ".", "set_grad_enabled", "(", "False", ")", "\n", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "num_workers", "=", "num_workers", ")", "\n", "output_dir", ".", "mkdir", "(", "parents", "=", "True", ")", "\n", "evaluator", "=", "engine", ".", "Evaluator", "(", ")", "\n", "df", "=", "evaluator", ".", "infer", "(", "model", ",", "loader", ",", "output_dir", ")", "\n", "df", ".", "to_csv", "(", "df_path", ")", "\n", "med", ",", "iqr", "=", "100", "*", "utils", ".", "get_median_iqr", "(", "df", ".", "Dice", ")", "\n", "print", "(", "f'{med:.1f} ({iqr:.1f})'", ")", "\n", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.evaluate.get_paths": [[52, 60], ["pathlib.Path", "pathlib.Path.is_file", "pathlib.Path.is_dir", "utils.sglob"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.sglob"], ["", "def", "get_paths", "(", "folder", ")", ":", "\n", "    ", "import", "utils", "\n", "folder", "=", "Path", "(", "folder", ")", "\n", "if", "folder", ".", "is_file", "(", ")", ":", "\n", "        ", "fps", "=", "[", "folder", "]", "\n", "", "elif", "folder", ".", "is_dir", "(", ")", ":", "\n", "        ", "fps", "=", "utils", ".", "sglob", "(", "folder", ")", "\n", "", "return", "fps", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.observers.add_file_storage_observer": [[6, 12], ["file_observer_dir.mkdir", "sacred.observers.FileStorageObserver", "experiment.observers.append", "pathlib.Path"], "function", ["None"], ["def", "add_file_storage_observer", "(", "experiment", ")", ":", "\n", "    ", "file_observer_dir", "=", "Path", "(", "__file__", ")", ".", "parent", "/", "'runs'", "\n", "file_observer_dir", ".", "mkdir", "(", "exist_ok", "=", "True", ")", "\n", "file_observer", "=", "FileStorageObserver", "(", "file_observer_dir", ")", "\n", "experiment", ".", "observers", ".", "append", "(", "file_observer", ")", "\n", "return", "file_observer", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.observers.add_slack_observer": [[14, 23], ["pathlib.Path().expanduser", "Path().expanduser.is_file", "print", "sacred.observers.SlackObserver.from_config", "experiment.observers.append", "pathlib.Path", "str"], "function", ["None"], ["", "def", "add_slack_observer", "(", "experiment", ")", ":", "\n", "    ", "slack_config_path", "=", "Path", "(", "'~/slack.json'", ")", ".", "expanduser", "(", ")", "\n", "if", "not", "slack_config_path", ".", "is_file", "(", ")", ":", "\n", "        ", "print", "(", "'Slack config path not found:'", ",", "slack_config_path", ")", "\n", "slack_observer", "=", "None", "\n", "", "else", ":", "\n", "        ", "slack_observer", "=", "SlackObserver", ".", "from_config", "(", "str", "(", "slack_config_path", ")", ")", "\n", "experiment", ".", "observers", ".", "append", "(", "slack_observer", ")", "\n", "", "return", "slack_observer", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.observers.add_observers": [[25, 28], ["observers.add_file_storage_observer", "observers.add_slack_observer"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.observers.add_file_storage_observer", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.observers.add_slack_observer"], ["", "def", "add_observers", "(", "experiment", ")", ":", "\n", "    ", "add_file_storage_observer", "(", "experiment", ")", "\n", "add_slack_observer", "(", "experiment", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.plot_segmentation_batch_old": [[18, 58], ["matplotlib.subplots", "axis.imshow", "matplotlib.tight_layout", "torch.no_grad", "int", "torchvision.utils.make_grid", "images_grid.numpy().transpose.numpy().transpose", "torchvision.utils.make_grid().numpy().transpose", "axis.set_title", "torchvision.utils.make_grid().detach().cpu().numpy().transpose", "images_grid.numpy().transpose.numpy", "torchvision.utils.make_grid().numpy", "name.split", "torchvision.utils.make_grid().detach().cpu().numpy", "torchvision.utils.make_grid", "torchvision.utils.make_grid().detach().cpu", "torchvision.utils.make_grid().detach", "torchvision.utils.make_grid"], "function", ["None"], ["def", "plot_segmentation_batch_old", "(", "batch", ",", "predictions", "=", "None", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "images", "=", "batch", "[", "'image'", "]", "[", "'data'", "]", "\n", "labels", "=", "batch", "[", "'label'", "]", "[", "'data'", "]", "\n", "mid_slice", "=", "int", "(", "labels", ".", "shape", "[", "-", "1", "]", "//", "2", ")", "\n", "images", "=", "images", "[", "...", ",", "mid_slice", "]", "\n", "labels", "=", "labels", "[", "...", ",", "mid_slice", "]", "\n", "images_grid", "=", "make_grid", "(", "\n", "images", ",", "\n", "normalize", "=", "True", ",", "\n", "scale_each", "=", "True", ",", "\n", "padding", "=", "0", ",", "\n", ")", "\n", "images_grid", "=", "images_grid", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "# If the volume has been resampled (e.g. scaling or rotation), a", "\n", "# non-linear interpolation (e.g. spline) might have been performed", "\n", "# so values will be [0, 1]. We just want the ones after 0.5 for", "\n", "# visualization.", "\n", "labels", "=", "labels", ">", "0.5", "\n", "labels_grid", "=", "make_grid", "(", "labels", ",", "padding", "=", "0", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "# Keep only one channel since grayscale", "\n", "labels_grid", "=", "labels_grid", "[", "...", ",", "0", "]", "\n", "images_grid", "[", "...", ",", "1", "]", "[", "labels_grid", ">", "0.5", "]", "=", "1", "# green", "\n", "if", "predictions", "is", "not", "None", ":", "\n", "            ", "predictions", "=", "predictions", "[", "...", ",", "mid_slice", "]", "\n", "foreground", "=", "predictions", "[", ":", ",", "1", ":", "2", ",", "...", "]", "\n", "foreground", "=", "foreground", ">", "0.5", "# foreground", "\n", "predictions_grid", "=", "make_grid", "(", "\n", "foreground", ",", "padding", "=", "0", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "# Keep only one channel since grayscale", "\n", "predictions_grid", "=", "predictions_grid", "[", "...", ",", "0", "]", "\n", "images_grid", "[", "...", ",", "0", "]", "[", "predictions_grid", ">", "0", "]", "=", "1", "# red", "\n", "images_grid", "[", "...", ",", "2", "]", "[", "predictions_grid", ">", "0", "]", "=", "1", "# blue", "\n", "", "", "fig", ",", "axis", "=", "plt", ".", "subplots", "(", ")", "\n", "axis", ".", "imshow", "(", "images_grid", ")", "\n", "if", "'name'", "in", "batch", ":", "\n", "        ", "names", "=", "[", "name", ".", "split", "(", "'_t1'", ")", "[", "0", "]", "for", "name", "in", "batch", "[", "'name'", "]", "]", "\n", "axis", ".", "set_title", "(", "' '", ".", "join", "(", "names", ")", ")", "\n", "", "plt", ".", "tight_layout", "(", ")", "\n", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_regression_grid": [[60, 72], ["function", "grid.transpose.transpose", "torch.no_grad", "visualization.get_batch_resection_montage", "visualization.get_batch_resection_montage", "len"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_batch_resection_montage", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_batch_resection_montage"], ["", "def", "get_regression_grid", "(", "batch", ",", "predictions", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "resected_grid", "=", "get_batch_resection_montage", "(", "batch", ",", "predictions", ",", "'image'", ")", "\n", "predictions_grid", "=", "get_batch_resection_montage", "(", "batch", ",", "predictions", ")", "\n", "\n", "", "if", "len", "(", "batch", "[", "'image'", "]", ")", ">", "1", ":", "\n", "        ", "function", "=", "np", ".", "vstack", "\n", "", "else", ":", "\n", "        ", "function", "=", "np", ".", "hstack", "\n", "", "grid", "=", "function", "(", "(", "resected_grid", ",", "predictions_grid", ")", ")", "\n", "grid", "=", "grid", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_batch_grid": [[74, 89], ["function", "torch.no_grad", "visualization.get_batch_overlay_montage", "visualization.get_batch_prediction_montage", "len", "grid.transpose.transpose"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_batch_overlay_montage", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_batch_prediction_montage"], ["", "def", "get_batch_grid", "(", "batch", ",", "predictions", ",", "regression", "=", "False", ",", "border", "=", "True", ",", "transpose", "=", "True", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "batch_grid", "=", "get_batch_overlay_montage", "(", "\n", "batch", ",", "predictions", ",", "border", "=", "border", ")", "\n", "# TODO: get indices beforehand?", "\n", "probabilities_grid", "=", "get_batch_prediction_montage", "(", "predictions", ",", "batch", ")", "\n", "\n", "", "if", "len", "(", "batch", "[", "'image'", "]", ")", ">", "1", ":", "\n", "        ", "function", "=", "np", ".", "vstack", "\n", "", "else", ":", "\n", "        ", "function", "=", "np", ".", "hstack", "\n", "", "grid", "=", "function", "(", "(", "batch_grid", ",", "probabilities_grid", ")", ")", "\n", "if", "transpose", ":", "\n", "        ", "grid", "=", "grid", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.plot_segmentation_batch": [[91, 100], ["visualization.get_batch_grid", "matplotlib.subplots", "axis.imshow", "matplotlib.tight_layout", "axis.set_title", "name.split"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_batch_grid"], ["", "def", "plot_segmentation_batch", "(", "batch", ",", "predictions", ",", "border", "=", "True", ")", ":", "\n", "    ", "grid", "=", "get_batch_grid", "(", "batch", ",", "predictions", ",", "border", "=", "border", ")", "\n", "fig", ",", "axis", "=", "plt", ".", "subplots", "(", ")", "\n", "axis", ".", "imshow", "(", "grid", ")", "\n", "if", "'name'", "in", "batch", ":", "\n", "        ", "names", "=", "[", "name", ".", "split", "(", "'_t1'", ")", "[", "0", "]", "for", "name", "in", "batch", "[", "'name'", "]", "]", "\n", "axis", ".", "set_title", "(", "' '", ".", "join", "(", "names", ")", ")", "\n", "", "plt", ".", "tight_layout", "(", ")", "\n", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.tensor_to_array": [[102, 104], ["tensor.squeeze().detach().cpu().numpy", "tensor.squeeze().detach().cpu", "tensor.squeeze().detach", "tensor.squeeze"], "function", ["None"], ["", "def", "tensor_to_array", "(", "tensor", ")", ":", "\n", "    ", "return", "tensor", ".", "squeeze", "(", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.normalize_array": [[106, 112], ["array.astype.astype", "array.astype.min", "array.astype.max", "array.astype.max"], "function", ["None"], ["", "def", "normalize_array", "(", "array", ")", ":", "\n", "    ", "array", "=", "array", ".", "astype", "(", "np", ".", "float32", ")", "\n", "array", "-=", "array", ".", "min", "(", ")", "\n", "if", "array", ".", "max", "(", ")", "!=", "0", ":", "\n", "        ", "array", "/=", "array", ".", "max", "(", ")", "\n", "", "return", "array", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.reorient_slice": [[114, 122], ["numpy.fliplr", "numpy.rot90"], "function", ["None"], ["", "def", "reorient_slice", "(", "array", ",", "a", ",", "b", ")", ":", "\n", "    ", "\"\"\"\n    a and b are intersection with other planes\n    They'll be gray for MRI and white for predictions\n    \"\"\"", "\n", "array", "[", "a", ",", ":", "]", "=", "0.5", "\n", "array", "[", ":", ",", "b", "]", "=", "0.5", "\n", "return", "np", ".", "fliplr", "(", "np", ".", "rot90", "(", "array", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.rescale_array": [[124, 128], ["numpy.percentile", "skimage.exposure.rescale_intensity"], "function", ["None"], ["", "def", "rescale_array", "(", "array", ")", ":", "\n", "    ", "p2", ",", "p98", "=", "np", ".", "percentile", "(", "array", ",", "(", "2", ",", "98", ")", ")", "\n", "rescaled", "=", "exposure", ".", "rescale_intensity", "(", "array", ",", "in_range", "=", "(", "p2", ",", "p98", ")", ")", "\n", "return", "rescaled", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_mid_indices": [[130, 135], ["numpy.array"], "function", ["None"], ["", "def", "get_mid_indices", "(", "array", ")", ":", "\n", "    ", "dimensions", "=", "3", "\n", "shape", "=", "size_r", ",", "size_a", ",", "size_s", "=", "array", ".", "shape", "[", "-", "dimensions", ":", "]", "\n", "shape", "=", "np", ".", "array", "(", "shape", ")", "\n", "return", "shape", "//", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_slices": [[137, 143], ["visualization.reorient_slice", "visualization.reorient_slice", "visualization.reorient_slice"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.reorient_slice", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.reorient_slice", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.reorient_slice"], ["", "def", "get_slices", "(", "array", ",", "i", ",", "j", ",", "k", ")", ":", "\n", "    ", "assert", "array", ".", "ndim", "==", "3", "\n", "sagittal", "=", "reorient_slice", "(", "array", "[", "i", ",", ":", ",", ":", "]", ",", "j", ",", "k", ")", "\n", "coronal", "=", "reorient_slice", "(", "array", "[", ":", ",", "j", ",", ":", "]", ",", "i", ",", "k", ")", "\n", "axial", "=", "reorient_slice", "(", "array", "[", ":", ",", ":", ",", "k", "]", ",", "i", ",", "j", ")", "\n", "return", "sagittal", ",", "coronal", ",", "axial", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_centroid_slices": [[145, 150], ["coords.mean().round().astype", "numpy.array", "len", "numpy.where", "coords.mean().round", "coords.mean"], "function", ["None"], ["", "def", "get_centroid_slices", "(", "label_array", ")", ":", "\n", "    ", "foreground", "=", "label_array", "[", "1", "]", "if", "len", "(", "label_array", ")", "==", "2", "else", "label_array", "[", "0", "]", "\n", "coords", "=", "np", ".", "array", "(", "np", ".", "where", "(", "foreground", ")", ")", ".", "T", "# N x 4", "\n", "centroid", "=", "coords", ".", "mean", "(", "axis", "=", "0", ")", ".", "round", "(", ")", ".", "astype", "(", "np", ".", "uint16", ")", "\n", "return", "centroid", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_montage": [[152, 196], ["visualization.get_slices", "PIL.Image.new", "numpy.array", "numpy.hstack", "numpy.hstack", "numpy.vstack", "visualization.rescale_array", "scipy.morphology.binary_erosion", "visualization.normalize_array", "visualization.get_mid_indices", "visualization.add_text"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_slices", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.rescale_array", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.normalize_array", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_mid_indices", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.add_text"], ["", "def", "get_montage", "(", "\n", "array", ",", "\n", "rescale", "=", "False", ",", "\n", "normalize", "=", "False", ",", "\n", "border", "=", "False", ",", "\n", "text", "=", "None", ",", "\n", "indices", "=", "None", ",", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Array should have 3 dimensions?\n    \"\"\"", "\n", "assert", "array", ".", "ndim", "==", "3", "\n", "if", "rescale", ":", "\n", "        ", "array", "=", "rescale_array", "(", "array", ")", "\n", "", "if", "border", ":", "\n", "# If the volume has been resampled (e.g. scaling or rotation), a", "\n", "# non-linear interpolation (e.g. spline) might have been performed", "\n", "# so values will be [0, 1]. We just want the ones after 0.5 for", "\n", "# visualization.", "\n", "        ", "array", "=", "(", "array", ">", "0.5", ")", ".", "astype", "(", "bool", ")", "\n", "eroded", "=", "ndi", ".", "morphology", ".", "binary_erosion", "(", "array", ")", "\n", "array", "=", "array", "^", "eroded", "\n", "", "if", "normalize", ":", "\n", "        ", "array", "=", "normalize_array", "(", "array", ")", "\n", "\n", "", "dimensions", "=", "3", "\n", "if", "indices", "is", "None", ":", "\n", "        ", "indices", "=", "get_mid_indices", "(", "array", ")", "\n", "", "sagittal", ",", "coronal", ",", "axial", "=", "get_slices", "(", "array", ",", "*", "indices", ")", "\n", "_", ",", "size_a", ",", "_", "=", "array", ".", "shape", "[", "-", "dimensions", ":", "]", "\n", "\n", "# |  metrics |  axial  |", "\n", "# | sagittal | coronal |", "\n", "metrics_size", "=", "size_a", ",", "size_a", "\n", "metrics_image", "=", "Image", ".", "new", "(", "'F'", ",", "metrics_size", ",", "0", ")", "\n", "\n", "if", "text", "is", "not", "None", ":", "\n", "        ", "add_text", "(", "metrics_image", ",", "text", ")", "\n", "\n", "", "metrics_array", "=", "np", ".", "array", "(", "metrics_image", ")", "\n", "first_row", "=", "np", ".", "hstack", "(", "(", "metrics_array", ",", "axial", ")", ")", "\n", "second_row", "=", "np", ".", "hstack", "(", "(", "sagittal", ",", "coronal", ")", ")", "\n", "montage", "=", "np", ".", "vstack", "(", "(", "first_row", ",", "second_row", ")", ")", "\n", "return", "montage", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.add_text": [[198, 218], ["pathlib.Path", "PIL.ImageDraw.Draw", "PIL.ImageFont.truetype", "ImageDraw.Draw.multiline_textsize", "ImageDraw.Draw.multiline_text", "pathlib.Path.is_file", "pathlib.Path", "str", "PIL.ImageFont.truetype", "ImageDraw.Draw.multiline_textsize", "str"], "function", ["None"], ["", "def", "add_text", "(", "image", ",", "text", ")", ":", "\n", "    ", "font_path", "=", "Path", "(", "'/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf'", ")", "\n", "if", "not", "font_path", ".", "is_file", "(", ")", ":", "# UCL cluster?", "\n", "        ", "font_path", "=", "Path", "(", "'/usr/share/fonts/dejavu/DejaVuSans.ttf'", ")", "\n", "", "fontsize", "=", "48", "\n", "draw", "=", "ImageDraw", ".", "Draw", "(", "image", ")", "\n", "image_size_x", ",", "image_size_y", "=", "image", ".", "size", "\n", "\n", "font", "=", "ImageFont", ".", "truetype", "(", "str", "(", "font_path", ")", ",", "fontsize", ")", "\n", "text_size_x", ",", "text_size_y", "=", "draw", ".", "multiline_textsize", "(", "text", ",", "font", "=", "font", ")", "\n", "while", "text_size_x", ">=", "image_size_x", ":", "\n", "        ", "fontsize", "-=", "2", "\n", "font", "=", "ImageFont", ".", "truetype", "(", "str", "(", "font_path", ")", ",", "fontsize", ")", "\n", "text_size_x", ",", "text_size_y", "=", "draw", ".", "multiline_textsize", "(", "text", ",", "font", "=", "font", ")", "\n", "", "start_x", "=", "image_size_x", "//", "2", "-", "text_size_x", "//", "2", "\n", "start_y", "=", "image_size_y", "//", "2", "-", "text_size_y", "//", "2", "\n", "xy", "=", "start_x", ",", "start_y", "\n", "gray_value", "=", "200", "/", "255", "\n", "draw", ".", "multiline_text", "(", "\n", "xy", ",", "text", ",", "fill", "=", "gray_value", ",", "font", "=", "font", ",", "align", "=", "'center'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_sample_overlay_montage": [[220, 255], ["visualization.tensor_to_array", "visualization.tensor_to_array", "visualization.get_montage", "visualization.get_montage", "visualization.get_montage", "skimage.color.gray2rgb", "visualization.tensor_to_array"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.tensor_to_array", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.tensor_to_array", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_montage", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_montage", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_montage", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.tensor_to_array"], ["", "def", "get_sample_overlay_montage", "(", "\n", "image_tensor", ",", "\n", "label_tensor", ",", "\n", "prediction", ",", "\n", "border", "=", "True", ",", "\n", "text", "=", "None", ",", "\n", "indices", "=", "None", ",", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Prediction is [0, 1]\n    \"\"\"", "\n", "image", "=", "tensor_to_array", "(", "image_tensor", ")", "\n", "label", "=", "tensor_to_array", "(", "label_tensor", ")", "\n", "\n", "if", "label", ".", "ndim", "==", "4", ":", "\n", "        ", "num_channels", "=", "label", ".", "shape", "[", "CHANNELS_DIMENSION_SAMPLE", "]", "\n", "if", "num_channels", ">", "1", ":", "\n", "            ", "label", "=", "label", "[", "FOREGROUND_INDEX", "]", "\n", "", "", "prediction", "=", "prediction", "[", "FOREGROUND_INDEX", ",", "...", "]", "# extract foreground", "\n", "prediction", "=", "tensor_to_array", "(", "prediction", ")", ">=", "0.5", "\n", "montage_image", "=", "get_montage", "(", "\n", "image", ",", "rescale", "=", "True", ",", "normalize", "=", "True", ",", "text", "=", "text", ",", "indices", "=", "indices", ")", "\n", "montage_label", "=", "get_montage", "(", "\n", "label", ",", "border", "=", "border", ",", "normalize", "=", "True", ",", "indices", "=", "indices", ")", "\n", "montage_prediction", "=", "get_montage", "(", "\n", "prediction", ",", "border", "=", "border", ",", "normalize", "=", "True", ",", "indices", "=", "indices", ")", "\n", "montage", "=", "gray2rgb", "(", "montage_image", ")", "\n", "# If the volume has been resampled (e.g. scaling or rotation), a", "\n", "# non-linear interpolation (e.g. spline) might have been performed", "\n", "# so values will be [0, 1]. We just want the ones after 0.5 for", "\n", "# visualization.", "\n", "montage", "[", "...", ",", "1", "]", "[", "montage_label", ">", "0.5", "]", "=", "1", "# green", "\n", "montage", "[", "...", ",", "0", "]", "[", "montage_prediction", ">", "0", "]", "=", "1", "# red", "\n", "montage", "[", "...", ",", "2", "]", "[", "montage_prediction", ">", "0", "]", "=", "1", "# blue", "\n", "return", "montage", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_sample_resection_montage": [[257, 269], ["visualization.tensor_to_array", "visualization.get_montage", "skimage.color.gray2rgb"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.tensor_to_array", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_montage"], ["", "def", "get_sample_resection_montage", "(", "\n", "image", ",", "\n", "text", "=", "None", ",", "\n", "indices", "=", "None", ",", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Prediction is [0, 1]\n    \"\"\"", "\n", "image", "=", "tensor_to_array", "(", "image", ")", "\n", "montage_image", "=", "get_montage", "(", "image", ",", "rescale", "=", "True", ",", "normalize", "=", "True", ",", "text", "=", "text", ",", "indices", "=", "indices", ")", "\n", "montage", "=", "gray2rgb", "(", "montage_image", ")", "\n", "return", "montage", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_resection_indices": [[271, 286], ["numpy.linalg.inv", "nibabel.affines.apply_affine", "indices.astype.astype"], "function", ["None"], ["", "def", "get_resection_indices", "(", "batch", ",", "i", ")", ":", "\n", "    ", "\"\"\"\n    Return voxel index from resection center\n    This would not be accurate if spatial transforms are applied\n    ESPECIALLY FLIPPING!\n    \"\"\"", "\n", "if", "'random_resection'", "not", "in", "batch", ":", "\n", "        ", "return", "None", "\n", "", "resection_params", "=", "batch", "[", "'random_resection'", "]", "\n", "center_ras", "=", "resection_params", "[", "'resection_center'", "]", "[", "i", "]", "\n", "ijk_to_ras", "=", "batch", "[", "'affine'", "]", "[", "i", "]", "\n", "ras_to_ijk", "=", "np", ".", "linalg", ".", "inv", "(", "ijk_to_ras", ")", "\n", "indices", "=", "nib", ".", "affines", ".", "apply_affine", "(", "ras_to_ijk", ",", "center_ras", ")", "\n", "indices", "=", "indices", ".", "astype", "(", "np", ".", "uint16", ")", "\n", "return", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_batch_resection_montage": [[288, 311], ["numpy.hstack", "enumerate", "enumerate", "visualization.get_centroid_slices", "visualization.get_sample_resection_montage", "montages.append", "visualization.get_centroid_slices", "visualization.get_sample_resection_montage", "montages.append", "filename.split"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_centroid_slices", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_sample_resection_montage", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_centroid_slices", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_sample_resection_montage"], ["", "def", "get_batch_resection_montage", "(", "batch", ",", "predictions", ",", "image_key", "=", "None", ",", "border", "=", "True", ")", ":", "\n", "    ", "montages", "=", "[", "]", "\n", "add_names", "=", "'name'", "in", "batch", "\n", "\n", "if", "add_names", ":", "\n", "        ", "for", "i", ",", "prediction", "in", "enumerate", "(", "predictions", ")", ":", "\n", "            ", "image", "=", "batch", "[", "image_key", "]", "[", "'data'", "]", "[", "i", "]", "if", "image_key", "is", "not", "None", "else", "prediction", "\n", "label", "=", "batch", "[", "'label'", "]", "[", "'data'", "]", "[", "i", "]", "\n", "filename", "=", "batch", "[", "'name'", "]", "[", "i", "]", "\n", "name", "=", "filename", ".", "split", "(", "'_t1'", ")", "[", "0", "]", "\n", "indices", "=", "get_centroid_slices", "(", "label", ")", "\n", "montage", "=", "get_sample_resection_montage", "(", "image", ",", "text", "=", "name", ",", "indices", "=", "indices", ")", "\n", "montages", ".", "append", "(", "montage", ")", "\n", "", "", "else", ":", "\n", "        ", "for", "i", ",", "prediction", "in", "enumerate", "(", "predictions", ")", ":", "\n", "            ", "image", "=", "batch", "[", "image_key", "]", "[", "'data'", "]", "[", "i", "]", "if", "image_key", "is", "not", "None", "else", "prediction", "\n", "label", "=", "batch", "[", "'label'", "]", "[", "'data'", "]", "[", "i", "]", "\n", "indices", "=", "get_centroid_slices", "(", "label", ")", "\n", "montage", "=", "get_sample_resection_montage", "(", "image", ",", "indices", "=", "indices", ")", "\n", "montages", ".", "append", "(", "montage", ")", "\n", "\n", "", "", "grid", "=", "np", ".", "hstack", "(", "montages", ")", "\n", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_batch_overlay_montage": [[313, 341], ["numpy.hstack", "enumerate", "enumerate", "visualization.get_centroid_slices", "visualization.get_sample_overlay_montage", "montages.append", "visualization.get_centroid_slices", "visualization.get_sample_overlay_montage", "montages.append", "filename.split"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_centroid_slices", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_sample_overlay_montage", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_centroid_slices", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_sample_overlay_montage"], ["", "def", "get_batch_overlay_montage", "(", "batch", ",", "predictions", ",", "border", "=", "True", ")", ":", "\n", "    ", "montages", "=", "[", "]", "\n", "add_names", "=", "'name'", "in", "batch", "\n", "\n", "if", "add_names", ":", "\n", "        ", "for", "i", ",", "prediction", "in", "enumerate", "(", "predictions", ")", ":", "\n", "            ", "image", "=", "batch", "[", "'image'", "]", "[", "'data'", "]", "[", "i", "]", "\n", "label", "=", "batch", "[", "'label'", "]", "[", "'data'", "]", "[", "i", "]", "\n", "try", ":", "\n", "                ", "filename", "=", "batch", "[", "'name'", "]", "[", "i", "]", "\n", "name", "=", "filename", ".", "split", "(", "'_t1'", ")", "[", "0", "]", "\n", "", "except", "Exception", ":", "# getting error when mixing with pseudolabeled", "\n", "                ", "name", "=", "'[Unknown]'", "\n", "", "indices", "=", "get_centroid_slices", "(", "label", ")", "\n", "montage", "=", "get_sample_overlay_montage", "(", "\n", "image", ",", "label", ",", "prediction", ",", "border", "=", "border", ",", "text", "=", "name", ",", "indices", "=", "indices", ")", "\n", "montages", ".", "append", "(", "montage", ")", "\n", "", "", "else", ":", "\n", "        ", "for", "i", ",", "prediction", "in", "enumerate", "(", "predictions", ")", ":", "\n", "            ", "image", "=", "batch", "[", "'image'", "]", "[", "'data'", "]", "[", "i", "]", "\n", "label", "=", "batch", "[", "'label'", "]", "[", "'data'", "]", "[", "i", "]", "\n", "indices", "=", "get_centroid_slices", "(", "label", ")", "\n", "montage", "=", "get_sample_overlay_montage", "(", "\n", "image", ",", "label", ",", "prediction", ",", "border", "=", "border", ",", "indices", "=", "indices", ")", "\n", "montages", ".", "append", "(", "montage", ")", "\n", "\n", "", "", "grid", "=", "np", ".", "hstack", "(", "montages", ")", "\n", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.colorize": [[343, 348], ["matplotlib.cm.RdBu_r"], "function", ["None"], ["", "def", "colorize", "(", "prediction", ")", ":", "\n", "# pylint: disable=E1101", "\n", "    ", "rgba", "=", "plt", ".", "cm", ".", "RdBu_r", "(", "prediction", ")", "\n", "rgb", "=", "rgba", "[", "...", ",", ":", "-", "1", "]", "\n", "return", "rgb", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_batch_prediction_montage": [[350, 363], ["enumerate", "numpy.hstack", "visualization.get_centroid_slices", "visualization.tensor_to_array", "visualization.get_montage", "visualization.colorize", "montages.append"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_centroid_slices", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.tensor_to_array", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.get_montage", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.visualization.colorize"], ["", "def", "get_batch_prediction_montage", "(", "predictions", ",", "batch", ")", ":", "\n", "# Predictions are [0, 1]", "\n", "    ", "montages", "=", "[", "]", "\n", "for", "i", ",", "prediction", "in", "enumerate", "(", "predictions", ")", ":", "\n", "        ", "label", "=", "batch", "[", "'label'", "]", "[", "'data'", "]", "[", "i", "]", "\n", "indices", "=", "get_centroid_slices", "(", "label", ")", "\n", "prediction", "=", "prediction", "[", "FOREGROUND_INDEX", ",", "...", "]", "# extract foreground", "\n", "prediction_array", "=", "tensor_to_array", "(", "prediction", ")", "\n", "montage", "=", "get_montage", "(", "prediction_array", ",", "indices", "=", "indices", ")", "\n", "colorized", "=", "colorize", "(", "montage", ")", "\n", "montages", ".", "append", "(", "colorized", ")", "\n", "", "grid", "=", "np", ".", "hstack", "(", "montages", ")", "\n", "return", "grid", "\n", "", ""]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.TverskyLoss.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "*", ",", "alpha", ",", "beta", ",", "epsilon", "=", "None", ")", ":", "\n", "        ", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "beta", "=", "beta", "\n", "self", ".", "epsilon", "=", "EPSILON", "if", "epsilon", "is", "None", "else", "epsilon", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.TverskyLoss.__call__": [[14, 23], ["loss.get_tversky_loss"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_tversky_loss"], ["", "def", "__call__", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "loss", "=", "get_tversky_loss", "(", "\n", "output", ",", "\n", "target", ",", "\n", "self", ".", "alpha", ",", "\n", "self", ".", "beta", ",", "\n", "epsilon", "=", "self", ".", "epsilon", ",", "\n", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.DiceLoss.__init__": [[26, 28], ["loss.TverskyLoss.__init__"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModuleCV.__init__"], ["    ", "def", "__init__", "(", "self", ",", "epsilon", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "alpha", "=", "0.5", ",", "beta", "=", "0.5", ",", "epsilon", "=", "epsilon", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_confusion": [[30, 53], ["ValueError", "isinstance"], "function", ["None"], ["", "", "def", "get_confusion", "(", "output", ",", "target", ")", ":", "\n", "    ", "if", "output", ".", "shape", "!=", "target", ".", "shape", ":", "\n", "        ", "message", "=", "(", "\n", "f'Shape of output {output.shape} and target {target.shape} differ'", ")", "\n", "raise", "ValueError", "(", "message", ")", "\n", "\n", "", "num_dimensions", "=", "output", ".", "ndim", "\n", "if", "num_dimensions", "==", "3", ":", "# 3D image, typically during testing", "\n", "        ", "kwargs", "=", "{", "}", "\n", "", "else", ":", "# 5D tensor, typically during training", "\n", "        ", "is_torch_tensor", "=", "not", "isinstance", "(", "output", ",", "np", ".", "ndarray", ")", "\n", "key", "=", "'dim'", "if", "is_torch_tensor", "else", "'axis'", "\n", "kwargs", "=", "{", "key", ":", "SPATIAL_DIMENSIONS", "}", "\n", "\n", "", "p0", "=", "output", "\n", "g0", "=", "target", "\n", "p1", "=", "1", "-", "p0", "\n", "g1", "=", "1", "-", "g0", "\n", "\n", "tp", "=", "(", "p0", "*", "g0", ")", ".", "sum", "(", "**", "kwargs", ")", "\n", "fp", "=", "(", "p0", "*", "g1", ")", ".", "sum", "(", "**", "kwargs", ")", "\n", "fn", "=", "(", "p1", "*", "g0", ")", ".", "sum", "(", "**", "kwargs", ")", "\n", "return", "tp", ",", "fp", ",", "fn", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_tversky_score": [[55, 66], ["loss.get_confusion"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_confusion"], ["", "def", "get_tversky_score", "(", "output", ",", "target", ",", "alpha", ",", "beta", ",", "epsilon", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    https://arxiv.org/pdf/1706.05721.pdf\n    \"\"\"", "\n", "epsilon", "=", "EPSILON", "if", "epsilon", "is", "None", "else", "epsilon", "\n", "tp", ",", "fp", ",", "fn", "=", "get_confusion", "(", "output", ",", "target", ")", "\n", "\n", "numerator", "=", "tp", "+", "epsilon", "\n", "denominator", "=", "tp", "+", "alpha", "*", "fp", "+", "beta", "*", "fn", "+", "epsilon", "\n", "score", "=", "numerator", "/", "denominator", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_tversky_loss": [[68, 71], ["loss.get_tversky_score"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_tversky_score"], ["", "def", "get_tversky_loss", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "losses", "=", "1", "-", "get_tversky_score", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_f_score": [[73, 85], ["loss.get_confusion", "loss.get_precision", "loss.get_recall"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_confusion", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_precision", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_recall"], ["", "def", "get_f_score", "(", "output", ",", "target", ",", "beta", ",", "epsilon", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    https://en.wikipedia.org/wiki/F1_score#Definition\n    \"\"\"", "\n", "epsilon", "=", "EPSILON", "if", "epsilon", "is", "None", "else", "epsilon", "\n", "confusion", "=", "get_confusion", "(", "output", ",", "target", ")", "\n", "\n", "precision", "=", "get_precision", "(", "confusion", ")", "\n", "recall", "=", "get_recall", "(", "confusion", ")", "\n", "\n", "score", "=", "(", "1", "+", "beta", "**", "2", ")", "*", "(", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", "+", "epsilon", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_f_loss": [[87, 90], ["loss.get_f_score"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_f_score"], ["", "def", "get_f_loss", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "losses", "=", "1", "-", "get_f_score", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_f_score_alternative": [[92, 102], ["loss.get_tversky_score"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_tversky_score"], ["", "def", "get_f_score_alternative", "(", "output", ",", "target", ",", "beta", ",", "epsilon", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    See https://brenocon.com/blog/2012/04/f-scores-dice-and-jaccard-set-similarity/\n    \"\"\"", "\n", "beta_tversky", "=", "1", "/", "(", "1", "+", "beta", "**", "2", ")", "\n", "alpha_tversky", "=", "1", "-", "beta_tversky", "\n", "\n", "score", "=", "get_tversky_score", "(", "\n", "output", ",", "target", ",", "alpha_tversky", ",", "beta_tversky", ",", "epsilon", "=", "epsilon", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_dice_score": [[104, 107], ["loss.get_tversky_score"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_tversky_score"], ["", "def", "get_dice_score", "(", "output", ",", "target", ")", ":", "\n", "    ", "alpha", "=", "beta", "=", "0.5", "\n", "return", "get_tversky_score", "(", "output", ",", "target", ",", "alpha", ",", "beta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_dice_loss": [[109, 112], ["loss.get_dice_score"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_dice_score"], ["", "def", "get_dice_loss", "(", "output", ",", "target", ")", ":", "\n", "    ", "losses", "=", "1", "-", "get_dice_score", "(", "output", ",", "target", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_iou_score": [[114, 117], ["loss.get_tversky_score"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_tversky_score"], ["", "def", "get_iou_score", "(", "output", ",", "target", ")", ":", "\n", "    ", "alpha", "=", "beta", "=", "1", "\n", "return", "get_tversky_score", "(", "output", ",", "target", ",", "alpha", ",", "beta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_iou_loss": [[119, 122], ["loss.get_iou_score"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_iou_score"], ["", "def", "get_iou_loss", "(", "output", ",", "target", ")", ":", "\n", "    ", "losses", "=", "1", "-", "get_iou_score", "(", "output", ",", "target", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_precision_": [[124, 127], ["loss.get_confusion", "loss.get_precision"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_confusion", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_precision"], ["", "def", "get_precision_", "(", "output", ",", "target", ")", ":", "\n", "    ", "confusion", "=", "get_confusion", "(", "output", ",", "target", ")", "\n", "return", "get_precision", "(", "confusion", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_recall_": [[129, 132], ["loss.get_confusion", "loss.get_recall"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_confusion", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_recall"], ["", "def", "get_recall_", "(", "output", ",", "target", ")", ":", "\n", "    ", "confusion", "=", "get_confusion", "(", "output", ",", "target", ")", "\n", "return", "get_recall", "(", "confusion", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_precision": [[134, 139], ["None"], "function", ["None"], ["", "def", "get_precision", "(", "confusion", ",", "epsilon", "=", "None", ")", ":", "\n", "    ", "epsilon", "=", "EPSILON", "if", "epsilon", "is", "None", "else", "epsilon", "\n", "tp", ",", "fp", ",", "_", "=", "confusion", "\n", "precision", "=", "(", "tp", "+", "epsilon", ")", "/", "(", "tp", "+", "fp", "+", "epsilon", ")", "\n", "return", "precision", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_recall": [[141, 146], ["None"], "function", ["None"], ["", "def", "get_recall", "(", "confusion", ",", "epsilon", "=", "None", ")", ":", "\n", "    ", "epsilon", "=", "EPSILON", "if", "epsilon", "is", "None", "else", "epsilon", "\n", "tp", ",", "_", ",", "fn", "=", "confusion", "\n", "recall", "=", "(", "tp", "+", "epsilon", ")", "/", "(", "tp", "+", "fn", "+", "epsilon", ")", "\n", "return", "recall", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.loss.get_dice_from_precision_and_recall": [[148, 150], ["None"], "function", ["None"], ["", "def", "get_dice_from_precision_and_recall", "(", "precision", ",", "recall", ")", ":", "\n", "    ", "return", "2", "/", "(", "1", "/", "precision", "+", "1", "/", "recall", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.infer.main": [[6, 52], ["click.command", "click.argument", "click.argument", "click.argument", "click.argument", "click.option", "click.option", "click.option", "infer.get_paths", "tio.Compose", "tio.SubjectsDataset", "torch.load", "torch.device", "models.get_unet().to", "models.get_unet().to.load_state_dict", "pathlib.Path", "models.get_unet().to.eval", "torch.set_grad_enabled", "torch.utils.data.DataLoader", "pathlib.Path.mkdir", "tqdm", "tio.Subject", "tio.Compose", "[].float().to", "zip", "click.Path", "click.Path", "click.Path", "click.Path", "tio.ToCanonical", "datasets.get_test_transform", "torch.cuda.is_available", "models.get_unet", "[].cpu", "tio.LabelMap", "pathlib.Path", "tio.LabelMap.save", "tio.ScalarImage", "tio.Resample", "[].float", "pathlib.Path.name.replace", "affine.numpy", "models.get_unet().to.softmax", "models.get_unet().to."], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.estimate_aleatoric_uncertainty.get_paths", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_test_transform", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.get_unet"], ["@", "click", ".", "command", "(", ")", "\n", "@", "click", ".", "argument", "(", "'input-path'", ",", "type", "=", "click", ".", "Path", "(", "exists", "=", "True", ")", ")", "\n", "@", "click", ".", "argument", "(", "'checkpoint-path'", ",", "type", "=", "click", ".", "Path", "(", "exists", "=", "True", ",", "dir_okay", "=", "False", ")", ")", "\n", "@", "click", ".", "argument", "(", "'output-dir'", ",", "type", "=", "click", ".", "Path", "(", ")", ")", "\n", "@", "click", ".", "argument", "(", "'landmarks-path'", ",", "type", "=", "click", ".", "Path", "(", ")", ")", "\n", "@", "click", ".", "option", "(", "'--batch-size'", ",", "'-b'", ",", "type", "=", "int", ",", "default", "=", "6", ",", "show_default", "=", "True", ")", "\n", "@", "click", ".", "option", "(", "'--num-workers'", ",", "'-j'", ",", "type", "=", "int", ",", "default", "=", "12", ",", "show_default", "=", "True", ")", "\n", "@", "click", ".", "option", "(", "'--resample/--no-resample'", ",", "'-r'", ",", "default", "=", "False", ",", "show_default", "=", "True", ")", "\n", "def", "main", "(", "input_path", ",", "checkpoint_path", ",", "output_dir", ",", "landmarks_path", ",", "batch_size", ",", "num_workers", ",", "resample", ")", ":", "\n", "    ", "import", "torch", "\n", "from", "tqdm", "import", "tqdm", "\n", "import", "torchio", "as", "tio", "\n", "import", "models", "\n", "import", "datasets", "\n", "\n", "fps", "=", "get_paths", "(", "input_path", ")", "\n", "subjects", "=", "[", "tio", ".", "Subject", "(", "image", "=", "tio", ".", "ScalarImage", "(", "fp", ")", ")", "for", "fp", "in", "fps", "]", "# key must be 'image' as in get_test_transform", "\n", "transform", "=", "tio", ".", "Compose", "(", "(", "\n", "tio", ".", "ToCanonical", "(", ")", ",", "\n", "datasets", ".", "get_test_transform", "(", "landmarks_path", ")", ",", "\n", ")", ")", "\n", "if", "resample", ":", "\n", "        ", "transform", "=", "tio", ".", "Compose", "(", "(", "\n", "tio", ".", "Resample", "(", ")", ",", "\n", "transform", ",", "\n", "# tio.CropOrPad((264, 268, 144)),  # ################################# for BITE?", "\n", ")", ")", "\n", "", "dataset", "=", "tio", ".", "SubjectsDataset", "(", "subjects", ",", "transform", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ")", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "model", "=", "models", ".", "get_unet", "(", ")", ".", "to", "(", "device", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "output_dir", "=", "Path", "(", "output_dir", ")", "\n", "model", ".", "eval", "(", ")", "\n", "torch", ".", "set_grad_enabled", "(", "False", ")", "\n", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "num_workers", "=", "num_workers", ")", "\n", "output_dir", ".", "mkdir", "(", "exist_ok", "=", "True", ",", "parents", "=", "True", ")", "\n", "for", "batch", "in", "tqdm", "(", "loader", ")", ":", "\n", "        ", "inputs", "=", "batch", "[", "'image'", "]", "[", "tio", ".", "DATA", "]", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "seg", "=", "model", "(", "inputs", ")", ".", "softmax", "(", "dim", "=", "1", ")", "[", ":", ",", "1", ":", "]", ".", "cpu", "(", ")", ">", "0.5", "\n", "for", "tensor", ",", "affine", ",", "path", "in", "zip", "(", "seg", ",", "batch", "[", "'image'", "]", "[", "tio", ".", "AFFINE", "]", ",", "batch", "[", "'image'", "]", "[", "tio", ".", "PATH", "]", ")", ":", "\n", "            ", "image", "=", "tio", ".", "LabelMap", "(", "tensor", "=", "tensor", ",", "affine", "=", "affine", ".", "numpy", "(", ")", ")", "\n", "path", "=", "Path", "(", "path", ")", "\n", "out_path", "=", "output_dir", "/", "path", ".", "name", ".", "replace", "(", "'.nii'", ",", "'_seg_cnn.nii'", ")", "\n", "image", ".", "save", "(", "out_path", ")", "\n", "", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.infer.get_paths": [[54, 62], ["pathlib.Path", "pathlib.Path.is_file", "pathlib.Path.is_dir", "utils.sglob"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.sglob"], ["", "def", "get_paths", "(", "path", ")", ":", "\n", "    ", "import", "utils", "\n", "path", "=", "Path", "(", "path", ")", "\n", "if", "path", ".", "is_file", "(", ")", ":", "\n", "        ", "fps", "=", "[", "path", "]", "\n", "", "elif", "path", ".", "is_dir", "(", ")", ":", "\n", "        ", "fps", "=", "utils", ".", "sglob", "(", "path", ",", "'*.nii.gz'", ")", "\n", "", "return", "fps", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.estimate_aleatoric_uncertainty.main": [[9, 144], ["click.command", "click.argument", "click.argument", "click.argument", "click.argument", "click.argument", "click.argument", "click.option", "click.option", "click.option", "click.option", "click.option", "click.option", "click.option", "click.option", "torch.device", "torch.load", "models.get_unet().to", "models.get_unet().to.load_state_dict", "pathlib.Path", "models.get_unet().to.eval", "torch.set_grad_enabled", "estimate_aleatoric_uncertainty.get_paths", "mean_dir.mkdir", "std_dir.mkdir", "tqdm", "tqdm.set_description", "tio.ScalarImage", "tio.Subject", "estimate_aleatoric_uncertainty.get_transform", "tio.SubjectsDataset", "torch.utils.data.DataLoader", "tqdm", "torch.stack", "torch.stack.sum().numpy", "result.sum().numpy.mean", "result.sum().numpy.std", "np.percentile", "dict", "records.append", "torch.stack.mean", "torch.stack.std", "tio.ScalarImage", "tio.ScalarImage", "tio.ScalarImage.save", "tio.ScalarImage.save", "pd.DataFrame.from_records", "pd.DataFrame.from_records.to_csv", "click.Path", "click.Path", "click.Path", "click.Path", "click.Path", "click.Choice", "models.get_unet", "torch.stack().float().to", "list", "tqdm", "enumerate", "fp.name.replace", "fp.name.replace", "torch.cuda.is_available", "torch.cuda.amp.autocast", "[].cpu", "zip", "tio.Subject.image.set_data", "tio.Subject.get_inverse_transform", "subject.get_inverse_transform.", "all_results.append", "torch.stack.sum", "torch.stack().float", "hasattr", "np.count_nonzero", "torch.stack", "models.get_unet().to.softmax", "torch.stack.numpy", "models.get_unet().to."], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.estimate_aleatoric_uncertainty.get_paths", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.estimate_aleatoric_uncertainty.get_transform", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.models.get_unet"], ["@", "click", ".", "command", "(", ")", "\n", "@", "click", ".", "argument", "(", "'input-path'", ",", "type", "=", "click", ".", "Path", "(", "exists", "=", "True", ")", ")", "\n", "@", "click", ".", "argument", "(", "'checkpoint-path'", ",", "type", "=", "click", ".", "Path", "(", "exists", "=", "True", ",", "dir_okay", "=", "False", ")", ")", "\n", "@", "click", ".", "argument", "(", "'output-dir'", ",", "type", "=", "click", ".", "Path", "(", ")", ")", "\n", "@", "click", ".", "argument", "(", "'landmarks-path'", ",", "type", "=", "click", ".", "Path", "(", ")", ")", "\n", "@", "click", ".", "argument", "(", "'num-iterations'", ",", "type", "=", "int", ")", "\n", "@", "click", ".", "argument", "(", "'csv-path'", ",", "type", "=", "click", ".", "Path", "(", ")", ")", "\n", "@", "click", ".", "option", "(", "'--batch-size'", ",", "'-b'", ",", "type", "=", "int", ",", "default", "=", "6", ",", "show_default", "=", "True", ")", "\n", "@", "click", ".", "option", "(", "'--num-workers'", ",", "'-j'", ",", "type", "=", "int", ",", "default", "=", "12", ",", "show_default", "=", "True", ")", "\n", "@", "click", ".", "option", "(", "'--gpu/--cpu'", ",", "default", "=", "True", ",", "show_default", "=", "True", ")", "\n", "@", "click", ".", "option", "(", "'--threshold/--no-threshold'", ",", "default", "=", "False", ",", "show_default", "=", "True", ")", "\n", "@", "click", ".", "option", "(", "'--augmentation/--no-augmentation'", ",", "default", "=", "True", ",", "show_default", "=", "True", ")", "# whether to use same augmentation as the one during training", "\n", "@", "click", ".", "option", "(", "'--save-volumes/--no-save-volumes'", ",", "'-v'", ",", "default", "=", "True", ",", "show_default", "=", "True", ")", "\n", "@", "click", ".", "option", "(", "'--interpolation'", ",", "default", "=", "'bspline'", ",", "type", "=", "click", ".", "Choice", "(", "[", "'linear'", ",", "'bspline'", "]", ")", ",", "show_default", "=", "True", ")", "\n", "@", "click", ".", "option", "(", "'--std-noise'", ",", "default", "=", "0", ",", "type", "=", "float", ")", "\n", "def", "main", "(", "\n", "input_path", ",", "\n", "checkpoint_path", ",", "\n", "output_dir", ",", "\n", "landmarks_path", ",", "\n", "num_iterations", ",", "\n", "csv_path", ",", "\n", "batch_size", ",", "\n", "num_workers", ",", "\n", "gpu", ",", "\n", "threshold", ",", "\n", "augmentation", ",", "\n", "save_volumes", ",", "\n", "interpolation", ",", "\n", "std_noise", ",", "\n", ")", ":", "\n", "    ", "import", "torch", "\n", "import", "pandas", "as", "pd", "\n", "import", "numpy", "as", "np", "\n", "import", "torchio", "as", "tio", "\n", "from", "tqdm", "import", "tqdm", "\n", "\n", "import", "models", "\n", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "and", "gpu", "else", "'cpu'", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ",", "map_location", "=", "device", ")", "\n", "model", "=", "models", ".", "get_unet", "(", ")", ".", "to", "(", "device", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "output_dir", "=", "Path", "(", "output_dir", ")", "\n", "model", ".", "eval", "(", ")", "\n", "torch", ".", "set_grad_enabled", "(", "False", ")", "\n", "\n", "fps", "=", "get_paths", "(", "input_path", ")", "\n", "mean_dir", "=", "output_dir", "/", "'mean'", "\n", "std_dir", "=", "output_dir", "/", "'std'", "\n", "# entropy_dir = output_dir / 'entropy'", "\n", "mean_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "std_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "# entropy_dir.mkdir(parents=True, exist_ok=True)", "\n", "\n", "records", "=", "[", "]", "\n", "progress", "=", "tqdm", "(", "fps", ",", "unit", "=", "'subject'", ")", "\n", "for", "fp", "in", "progress", ":", "\n", "        ", "subject_id", "=", "fp", ".", "name", "[", ":", "4", "]", "\n", "progress", ".", "set_description", "(", "subject_id", ")", "\n", "image", "=", "tio", ".", "ScalarImage", "(", "fp", ")", "\n", "subject", "=", "tio", ".", "Subject", "(", "image", "=", "image", ")", "# key must be 'image' as in get_test_transform", "\n", "transform", "=", "get_transform", "(", "augmentation", ",", "landmarks_path", ")", "\n", "dataset", "=", "tio", ".", "SubjectsDataset", "(", "num_iterations", "*", "[", "subject", "]", ",", "transform", "=", "transform", ")", "\n", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "collate_fn", "=", "lambda", "x", ":", "x", ",", "\n", ")", "\n", "all_results", "=", "[", "]", "\n", "for", "subjects_list_batch", "in", "tqdm", "(", "loader", ",", "leave", "=", "False", ",", "unit", "=", "'batch'", ")", ":", "\n", "            ", "inputs", "=", "torch", ".", "stack", "(", "[", "subject", ".", "image", ".", "data", "for", "subject", "in", "subjects_list_batch", "]", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "with", "torch", ".", "cuda", ".", "amp", ".", "autocast", "(", ")", ":", "\n", "                ", "segs", "=", "model", "(", "inputs", ")", ".", "softmax", "(", "dim", "=", "1", ")", "[", ":", ",", "1", ":", "]", ".", "cpu", "(", ")", "\n", "", "iterable", "=", "list", "(", "zip", "(", "subjects_list_batch", ",", "segs", ")", ")", "\n", "for", "subject", ",", "seg", "in", "tqdm", "(", "iterable", ",", "leave", "=", "False", ",", "unit", "=", "'subject'", ")", ":", "\n", "                ", "subject", ".", "image", ".", "set_data", "(", "seg", ")", "\n", "inverse_transform", "=", "subject", ".", "get_inverse_transform", "(", "warn", "=", "False", ")", "\n", "inverse_transforms", "=", "inverse_transform", ".", "transforms", "\n", "first", "=", "inverse_transforms", "[", "0", "]", "\n", "if", "hasattr", "(", "first", ",", "'image_interpolation'", ")", "and", "first", ".", "image_interpolation", "!=", "'linear'", ":", "\n", "                    ", "first", ".", "image_interpolation", "=", "'linear'", "# force interp to be lin so probs stay in [0,1]", "\n", "", "subject_back", "=", "inverse_transform", "(", "subject", ")", "\n", "result", "=", "subject_back", ".", "image", ".", "data", "\n", "assert", "np", ".", "count_nonzero", "(", "result", ".", "numpy", "(", ")", "<", "0", ")", "==", "0", ",", "'neg values found in result'", "\n", "if", "threshold", ":", "\n", "                    ", "result", "=", "(", "result", ">=", "0.5", ")", ".", "float", "(", ")", "\n", "", "all_results", ".", "append", "(", "result", ")", "\n", "", "", "result", "=", "torch", ".", "stack", "(", "all_results", ")", "\n", "\n", "volumes", "=", "result", ".", "sum", "(", "dim", "=", "(", "-", "3", ",", "-", "2", ",", "-", "1", ")", ")", ".", "numpy", "(", ")", "\n", "mean_volumes", "=", "volumes", ".", "mean", "(", ")", "\n", "std_volumes", "=", "volumes", ".", "std", "(", ")", "\n", "volume_variation_coefficient", "=", "std_volumes", "/", "mean_volumes", "\n", "q1", ",", "q3", "=", "np", ".", "percentile", "(", "volumes", ",", "(", "25", ",", "75", ")", ")", "\n", "quartile_coefficient_of_dispersion", "=", "(", "q3", "-", "q1", ")", "/", "(", "q3", "+", "q1", ")", "\n", "\n", "record", "=", "dict", "(", "\n", "Subject", "=", "subject_id", ",", "\n", "VolumeMean", "=", "mean_volumes", ",", "\n", "VolumeSTD", "=", "std_volumes", ",", "\n", "VVC", "=", "volume_variation_coefficient", ",", "\n", "Q1", "=", "q1", ",", "\n", "Q3", "=", "q3", ",", "\n", "QCD", "=", "quartile_coefficient_of_dispersion", ",", "\n", ")", "\n", "\n", "if", "save_volumes", ":", "\n", "            ", "for", "i", ",", "volume", "in", "enumerate", "(", "volumes", ")", ":", "\n", "                ", "record", "[", "f'Volume_{i}'", "]", "=", "volume", "\n", "\n", "", "", "records", ".", "append", "(", "record", ")", "\n", "\n", "mean", "=", "result", ".", "mean", "(", "dim", "=", "0", ")", "\n", "std", "=", "result", ".", "std", "(", "dim", "=", "0", ")", "\n", "# entropy = utils.get_entropy(result)", "\n", "\n", "mean_image", "=", "tio", ".", "ScalarImage", "(", "tensor", "=", "mean", ",", "affine", "=", "image", ".", "affine", ")", "\n", "std_image", "=", "tio", ".", "ScalarImage", "(", "tensor", "=", "std", ",", "affine", "=", "image", ".", "affine", ")", "\n", "# entropy_image = tio.ScalarImage(tensor=entropy, affine=image.affine)", "\n", "\n", "mean_path", "=", "mean_dir", "/", "fp", ".", "name", ".", "replace", "(", "'.nii'", ",", "'_mean.nii'", ")", "\n", "std_path", "=", "std_dir", "/", "fp", ".", "name", ".", "replace", "(", "'.nii'", ",", "'_std.nii'", ")", "\n", "# entropy_path = entropy_dir / fp.name.replace('.nii', '_entropy.nii')", "\n", "\n", "mean_image", ".", "save", "(", "mean_path", ")", "\n", "std_image", ".", "save", "(", "std_path", ")", "\n", "# entropy_image.save(entropy_path)", "\n", "\n", "# So it's updated during execution", "\n", "df", "=", "pd", ".", "DataFrame", ".", "from_records", "(", "records", ")", "\n", "df", ".", "to_csv", "(", "csv_path", ")", "\n", "\n", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.estimate_aleatoric_uncertainty.get_paths": [[146, 154], ["pathlib.Path", "pathlib.Path.is_file", "pathlib.Path.is_dir", "utils.sglob"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.sglob"], ["", "def", "get_paths", "(", "folder", ")", ":", "\n", "    ", "import", "utils", "\n", "folder", "=", "Path", "(", "folder", ")", "\n", "if", "folder", ".", "is_file", "(", ")", ":", "\n", "        ", "fps", "=", "[", "folder", "]", "\n", "", "elif", "folder", ".", "is_dir", "(", ")", ":", "\n", "        ", "fps", "=", "utils", ".", "sglob", "(", "folder", ")", "\n", "", "return", "fps", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.estimate_aleatoric_uncertainty.get_transform": [[156, 171], ["datasets.get_train_transform", "datasets.get_test_transform", "tio.Compose", "tio.Compose", "tio.RandomFlip", "tio.OneOf", "tio.RandomAffine", "tio.RandomElasticDeformation"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_train_transform", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_test_transform"], ["", "def", "get_transform", "(", "augmentation", ",", "landmarks_path", ")", ":", "\n", "    ", "import", "datasets", "\n", "import", "torchio", "as", "tio", "\n", "if", "augmentation", ":", "\n", "        ", "return", "datasets", ".", "get_train_transform", "(", "landmarks_path", ")", "\n", "", "else", ":", "\n", "        ", "preprocess", "=", "datasets", ".", "get_test_transform", "(", "landmarks_path", ")", "\n", "augment", "=", "tio", ".", "Compose", "(", "(", "\n", "tio", ".", "RandomFlip", "(", ")", ",", "\n", "tio", ".", "OneOf", "(", "{", "\n", "tio", ".", "RandomAffine", "(", ")", ":", "0.8", ",", "\n", "tio", ".", "RandomElasticDeformation", "(", ")", ":", "0.2", ",", "\n", "}", ")", "\n", ")", ")", "\n", "return", "tio", ".", "Compose", "(", "(", "preprocess", ",", "augment", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.print_color": [[20, 28], ["print", "print"], "function", ["None"], ["def", "print_color", "(", "string", ",", "color", ",", "bold", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Formats the string with colors for terminal prints\n    \"\"\"", "\n", "if", "bold", "is", "True", ":", "\n", "        ", "print", "(", "BOLD", "+", "color", "+", "string", "+", "ENDC", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "color", "+", "string", "+", "ENDC", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.sglob": [[30, 32], ["list", "sorted", "path.glob"], "function", ["None"], ["", "", "def", "sglob", "(", "path", ",", "pattern", "=", "'*'", ")", ":", "\n", "    ", "return", "list", "(", "sorted", "(", "path", ".", "glob", "(", "pattern", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_stem": [[34, 39], ["pathlib.Path().name.split", "pathlib.Path"], "function", ["None"], ["", "def", "get_stem", "(", "path", ")", ":", "\n", "    ", "\"\"\"\n    '/home/user/image.nii.gz' -> 'image'\n    \"\"\"", "\n", "return", "Path", "(", "path", ")", ".", "name", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_device": [[41, 43], ["torch.device", "torch.cuda.is_available"], "function", ["None"], ["", "def", "get_device", "(", ")", ":", "\n", "    ", "return", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.to_tuple": [[45, 52], ["iter", "tuple"], "function", ["None"], ["", "def", "to_tuple", "(", "value", ",", "length", ":", "int", "=", "1", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "iter", "(", "value", ")", "\n", "value", "=", "tuple", "(", "value", ")", "\n", "", "except", "TypeError", ":", "\n", "        ", "value", "=", "length", "*", "(", "value", ",", ")", "\n", "", "return", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_entropy": [[54, 60], ["torch.stack", "torch.stack.mean", "numpy.count_nonzero", "numpy.isnan", "mean.log"], "function", ["None"], ["", "def", "get_entropy", "(", "tensor", ",", "epsilon", "=", "1e-6", ")", ":", "\n", "    ", "tensor", "=", "torch", ".", "stack", "(", "(", "1", "-", "tensor", ",", "tensor", ")", ",", "dim", "=", "1", ")", "\n", "mean", "=", "tensor", ".", "mean", "(", "dim", "=", "0", ")", "+", "epsilon", "# avoid NaNs in log", "\n", "h", "=", "-", "(", "mean", "*", "mean", ".", "log", "(", ")", ")", ".", "sum", "(", "dim", "=", "0", ")", "\n", "assert", "np", ".", "count_nonzero", "(", "np", ".", "isnan", "(", "h", ")", ")", "==", "0", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.enable_dropout": [[62, 66], ["model.modules", "m.__class__.__name__.startswith", "m.train"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.main.Trainer.train"], ["", "def", "enable_dropout", "(", "model", ")", ":", "\n", "    ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "m", ".", "__class__", ".", "__name__", ".", "startswith", "(", "'Dropout'", ")", ":", "\n", "            ", "m", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_median_iqr": [[68, 71], ["numpy.percentile", "numpy.array"], "function", ["None"], ["", "", "", "def", "get_median_iqr", "(", "x", ")", ":", "\n", "    ", "p25", ",", "p50", ",", "p75", "=", "np", ".", "percentile", "(", "x", ",", "(", "25", ",", "50", ",", "75", ")", ")", "\n", "return", "np", ".", "array", "(", "(", "p50", ",", "p75", "-", "p25", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.print_significance": [[73, 108], ["scipy.stats.mannwhitneyu", "utils.get_median_iqr", "print", "utils.get_median_iqr", "print", "print", "print", "print", "print", "utils.print_color", "utils.print_color", "utils.print_color", "utils.print_color", "utils.print_color"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_median_iqr", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_median_iqr", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.print_color", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.print_color", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.print_color", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.print_color", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.print_color"], ["", "def", "print_significance", "(", "\n", "name_1", ",", "\n", "name_2", ",", "\n", "dice_1", ",", "\n", "dice_2", ",", "\n", "num_experiments", "=", "None", ",", "\n", "alpha", "=", "0.05", ",", "\n", ")", ":", "\n", "    ", "U", ",", "p", "=", "mannwhitneyu", "(", "dice_1", ",", "dice_2", ",", "alternative", "=", "'less'", ")", "\n", "if", "num_experiments", "is", "None", ":", "\n", "        ", "bonferroni_factor", "=", "1", "\n", "", "else", ":", "\n", "        ", "bonferroni_factor", "=", "(", "num_experiments", "*", "(", "num_experiments", "-", "1", ")", ")", "/", "2", "\n", "", "m", ",", "i", "=", "get_median_iqr", "(", "dice_1", ")", "\n", "print", "(", "f'Median (IQR) of {name_1}: {m:.1f} ({i:.1f})'", ")", "\n", "m", ",", "i", "=", "get_median_iqr", "(", "dice_2", ")", "\n", "print", "(", "f'Median (IQR) of {name_2}: {m:.1f} ({i:.1f})'", ")", "\n", "print", "(", "f'{name_2} better than {name_1}: '", ",", "end", "=", "''", ")", "\n", "if", "p", "<=", "0.0001", "/", "bonferroni_factor", ":", "\n", "        ", "print_color", "(", "'****'", ",", "BLUE", ")", "\n", "", "elif", "p", "<=", "0.001", "/", "bonferroni_factor", ":", "\n", "        ", "print_color", "(", "'***'", ",", "CYAN", ")", "\n", "", "elif", "p", "<=", "0.01", "/", "bonferroni_factor", ":", "\n", "        ", "print_color", "(", "'**'", ",", "GREEN", ")", "\n", "", "elif", "p", "<=", "0.05", "/", "bonferroni_factor", ":", "\n", "        ", "print_color", "(", "'*'", ",", "YELLOW", ")", "\n", "", "else", ":", "\n", "        ", "print_color", "(", "'ns'", ",", "RED", ")", "\n", "# if p < alpha:", "\n", "#     print('Significant difference')", "\n", "# else:", "\n", "#     print('No significant difference')", "\n", "", "print", "(", "'U:'", ",", "U", ")", "\n", "print", "(", "'p:'", ",", "p", ")", "\n", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.read_df": [[110, 112], ["pandas.read_csv"], "function", ["None"], ["", "def", "read_df", "(", "path", ")", ":", "\n", "    ", "return", "pd", ".", "read_csv", "(", "path", ",", "index_col", "=", "0", ",", "dtype", "=", "{", "'Subject'", ":", "str", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_df": [[114, 117], ["utils.read_df", "str", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.read_df"], ["", "def", "get_df", "(", "experiment", ")", ":", "\n", "    ", "path", "=", "Path", "(", "__file__", ")", ".", "parent", "/", "'runs'", "/", "str", "(", "experiment", ")", "/", "'evaluation.csv'", "\n", "return", "read_df", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_dices": [[119, 121], ["utils.get_df"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_df"], ["", "def", "get_dices", "(", "experiment", ")", ":", "\n", "    ", "return", "get_df", "(", "experiment", ")", ".", "Dice", ".", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.merge_dfs_in_dir": [[123, 128], ["pathlib.Path", "pandas.concat().sort_values", "utils.read_df", "pathlib.Path.glob", "pandas.concat"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.read_df"], ["", "def", "merge_dfs_in_dir", "(", "directory", ")", ":", "\n", "    ", "directory", "=", "Path", "(", "directory", ")", "\n", "dfs", "=", "[", "read_df", "(", "path", ")", "for", "path", "in", "directory", ".", "glob", "(", "'*.csv'", ")", "]", "\n", "# https://stackoverflow.com/a/46100235/3956024", "\n", "return", "pd", ".", "concat", "(", "dfs", ",", "ignore_index", "=", "True", ")", ".", "sort_values", "(", "by", "=", "'Subject'", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModule.__init__": [[15, 24], ["pathlib.Path().expanduser", "pathlib.Path"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "datasets_dir", ",", "\n", "train_batch_size", ",", "\n", "num_workers", ",", "\n", ")", ":", "\n", "        ", "self", ".", "train_batch_size", "=", "train_batch_size", "\n", "self", ".", "num_workers", "=", "num_workers", "\n", "self", ".", "datasets_dir", "=", "Path", "(", "datasets_dir", ")", ".", "expanduser", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModule.get_train_loader": [[25, 32], ["torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "get_train_loader", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "\n", "batch_size", "=", "self", ".", "train_batch_size", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ",", "\n", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModule.get_val_loader": [[34, 41], ["torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "get_val_loader", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "\n", "batch_size", "=", "self", ".", "train_batch_size", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ",", "\n", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "False", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModule.get_train_transform": [[43, 45], ["datasets.DataModule.get_train_transform"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_train_transform"], ["", "def", "get_train_transform", "(", "self", ",", "resect", "=", "True", ")", ":", "\n", "        ", "return", "get_train_transform", "(", "self", ".", "landmarks_path", ",", "resection_params", "=", "self", ".", "resection_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModule.print_lengths": [[46, 56], ["f", "f", "f", "f", "f", "f", "len", "len", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "print_lengths", "(", "self", ",", "test", "=", "True", ")", ":", "\n", "        ", "f", "=", "print", "if", "self", ".", "log", "is", "None", "else", "self", ".", "log", ".", "info", "\n", "f", "(", "f'{len(self.train_dataset):4} training instances'", ")", "\n", "f", "(", "f'{len(self.train_loader):4} training batches'", ")", "\n", "f", "(", "f'{len(self.val_dataset):4} validation instances'", ")", "\n", "f", "(", "f'{len(self.val_loader):4} validation batches'", ")", "\n", "if", "not", "test", ":", "\n", "            ", "return", "\n", "", "f", "(", "f'{len(self.test_dataset):4} test instances'", ")", "\n", "f", "(", "f'{len(self.test_loader):4} test batches'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModule.get_public_subjects": [[57, 70], ["datasets.get_subjects_list_from_dir", "all_subjects.extend"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_subjects_list_from_dir"], ["", "def", "get_public_subjects", "(", "self", ")", ":", "\n", "        ", "public_dataset_names", "=", "(", "\n", "'IXI'", ",", "\n", "'ADNI1_15T'", ",", "\n", "'ADNI1_3T'", ",", "\n", "'ADNI2'", ",", "\n", "'OASIS_download'", ",", "\n", ")", "\n", "all_subjects", "=", "[", "]", "\n", "for", "name", "in", "public_dataset_names", ":", "\n", "            ", "subjects", "=", "get_subjects_list_from_dir", "(", "self", ".", "datasets_dir", "/", "name", ")", "\n", "all_subjects", ".", "extend", "(", "subjects", ")", "\n", "", "return", "all_subjects", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModulePublic.__init__": [[73, 123], ["datasets.DataModule.__init__", "datasets.DataModulePublic.get_public_subjects", "datasets.DataModulePublic.split_subjects", "torchio.SubjectsDataset", "torchio.SubjectsDataset", "datasets.get_test_transform", "datasets.get_real_resection_dataset", "datasets.DataModulePublic.get_train_loader", "datasets.DataModulePublic.get_val_loader", "datasets.DataModulePublic.get_val_loader", "datasets.DataModulePublic.get_train_transform", "datasets.DataModulePublic.get_val_transform", "datasets.cache", "datasets.reduce_dataset", "datasets.reduce_dataset", "datasets.reduce_dataset", "datasets.DataModulePublic.print_lengths", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModuleCV.__init__", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModule.get_public_subjects", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModuleCV.split_subjects", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_test_transform", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_real_resection_dataset", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModule.get_train_loader", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModule.get_val_loader", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModule.get_val_loader", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_train_transform", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModulePublic.get_val_transform", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.cache", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.reduce_dataset", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.reduce_dataset", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.reduce_dataset", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModule.print_lengths"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "datasets_dir", ",", "\n", "real_dataset_dir", ",", "\n", "resection_params", ",", "\n", "train_batch_size", ",", "\n", "num_workers", ",", "\n", "pseudo_dir", "=", "None", ",", "\n", "split_ratio", "=", "0.9", ",", "\n", "split_seed", "=", "42", ",", "\n", "debug_ratio", "=", "0.02", ",", "\n", "log", "=", "None", ",", "\n", "debug", "=", "False", ",", "\n", "augment", "=", "True", ",", "\n", "verbose", "=", "False", ",", "\n", "cache_validation_set", "=", "True", ",", "\n", "histogram_standardization", "=", "True", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "datasets_dir", ",", "train_batch_size", ",", "num_workers", ")", "\n", "self", ".", "resection_params", "=", "resection_params", "\n", "\n", "# Precomputed from 90% of the public training data", "\n", "if", "histogram_standardization", ":", "\n", "            ", "self", ".", "landmarks_path", "=", "Path", "(", "__file__", ")", ".", "parent", "/", "'landmarks'", "/", "'histogram_landmarks_default.npy'", "\n", "", "else", ":", "\n", "            ", "self", ".", "landmarks_path", "=", "None", "\n", "\n", "", "public_subjects", "=", "self", ".", "get_public_subjects", "(", ")", "\n", "train_public", ",", "val_public", "=", "self", ".", "split_subjects", "(", "public_subjects", ",", "split_ratio", ",", "split_seed", ")", "\n", "\n", "train_transform", "=", "self", ".", "get_train_transform", "(", ")", "if", "augment", "else", "self", ".", "get_val_transform", "(", ")", "\n", "self", ".", "train_dataset", "=", "tio", ".", "SubjectsDataset", "(", "train_public", ",", "transform", "=", "train_transform", ")", "\n", "self", ".", "val_dataset", "=", "tio", ".", "SubjectsDataset", "(", "val_public", ",", "transform", "=", "train_transform", ")", "\n", "if", "cache_validation_set", ":", "\n", "            ", "self", ".", "val_dataset", "=", "cache", "(", "self", ".", "val_dataset", ",", "resection_params", ",", "augment", "=", "augment", ")", "\n", "", "test_transform", "=", "get_test_transform", "(", "self", ".", "landmarks_path", ")", "\n", "self", ".", "test_dataset", "=", "get_real_resection_dataset", "(", "real_dataset_dir", ",", "transform", "=", "test_transform", ")", "\n", "if", "debug", ":", "\n", "            ", "self", ".", "train_dataset", "=", "reduce_dataset", "(", "self", ".", "train_dataset", ",", "debug_ratio", ")", "\n", "self", ".", "val_dataset", "=", "reduce_dataset", "(", "self", ".", "val_dataset", ",", "debug_ratio", ")", "\n", "self", ".", "test_dataset", "=", "reduce_dataset", "(", "self", ".", "test_dataset", ",", "debug_ratio", ")", "\n", "\n", "", "self", ".", "train_loader", "=", "self", ".", "get_train_loader", "(", "self", ".", "train_dataset", ")", "\n", "self", ".", "val_loader", "=", "self", ".", "get_val_loader", "(", "self", ".", "val_dataset", ")", "\n", "self", ".", "test_loader", "=", "self", ".", "get_val_loader", "(", "self", ".", "test_dataset", ")", "\n", "\n", "self", ".", "log", "=", "log", "\n", "\n", "if", "verbose", ":", "\n", "            ", "self", ".", "print_lengths", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModulePublic.split_subjects": [[124, 134], ["len", "int", "torch.random.fork_rng", "torch.manual_seed", "torch.utils.data.random_split"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "split_subjects", "(", "subjects", ",", "ratio", ",", "seed", ")", ":", "\n", "        ", "len_subjects", "=", "len", "(", "subjects", ")", "\n", "len_training", "=", "int", "(", "len_subjects", "*", "ratio", ")", "\n", "len_validation", "=", "len_subjects", "-", "len_training", "\n", "lengths", "=", "len_training", ",", "len_validation", "\n", "with", "torch", ".", "random", ".", "fork_rng", "(", "[", "]", ")", ":", "\n", "            ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "train", ",", "val", "=", "torch", ".", "utils", ".", "data", ".", "random_split", "(", "subjects", ",", "lengths", ")", "\n", "", "return", "train", ",", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModulePublic.get_val_transform": [[135, 137], ["torchio.Compose", "datasets.get_simulation_transform", "datasets.get_test_transform"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_simulation_transform", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_test_transform"], ["", "def", "get_val_transform", "(", "self", ")", ":", "\n", "        ", "return", "tio", ".", "Compose", "(", "(", "get_simulation_transform", "(", "self", ".", "resection_params", ")", ",", "get_test_transform", "(", "self", ".", "landmarks_path", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModuleCV.__init__": [[140, 180], ["datasets.DataModule.__init__", "datasets.get_real_resection_subjects", "datasets.DataModuleCV.split_subjects", "torchio.SubjectsDataset", "datasets.DataModuleCV.get_train_transform", "datasets.DataModuleCV.train_dataset.set_transform", "datasets.get_test_transform", "torchio.SubjectsDataset", "datasets.DataModuleCV.get_train_loader", "datasets.DataModuleCV.get_val_loader", "datasets.get_landmarks_path", "datasets.get_landmarks_path", "datasets.get_real_resection_dataset", "torch.utils.data.ConcatDataset", "datasets.DataModuleCV.print_lengths"], "methods", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModuleCV.__init__", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_real_resection_subjects", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModuleCV.split_subjects", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_train_transform", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_test_transform", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModule.get_train_loader", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModule.get_val_loader", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_landmarks_path", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_landmarks_path", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_real_resection_dataset", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModule.print_lengths"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "fold", ",", "\n", "num_folds", ",", "\n", "datasets_dir", ",", "\n", "dataset_name", ",", "\n", "train_batch_size", ",", "\n", "num_workers", ",", "\n", "use_public_landmarks", "=", "False", ",", "\n", "pseudo_dirname", "=", "None", ",", "\n", "split_seed", "=", "42", ",", "\n", "log", "=", "None", ",", "\n", "verbose", "=", "True", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "datasets_dir", ",", "train_batch_size", ",", "num_workers", ")", "\n", "self", ".", "resection_params", "=", "None", "\n", "real_dataset_dir", "=", "self", ".", "datasets_dir", "/", "'real'", "/", "dataset_name", "\n", "real_subjects", "=", "get_real_resection_subjects", "(", "real_dataset_dir", ")", "\n", "train_subjects", ",", "val_subjects", "=", "self", ".", "split_subjects", "(", "real_subjects", ",", "fold", ",", "num_folds", ",", "split_seed", ")", "\n", "self", ".", "train_dataset", "=", "tio", ".", "SubjectsDataset", "(", "train_subjects", ")", "\n", "if", "use_public_landmarks", ":", "\n", "            ", "self", ".", "landmarks_path", "=", "get_landmarks_path", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "landmarks_path", "=", "get_landmarks_path", "(", "dataset", "=", "self", ".", "train_dataset", ")", "\n", "", "train_transform", "=", "self", ".", "get_train_transform", "(", "resect", "=", "False", ")", "\n", "self", ".", "train_dataset", ".", "set_transform", "(", "train_transform", ")", "\n", "test_transform", "=", "get_test_transform", "(", "self", ".", "landmarks_path", ")", "\n", "self", ".", "val_dataset", "=", "tio", ".", "SubjectsDataset", "(", "val_subjects", ",", "transform", "=", "test_transform", ")", "\n", "\n", "if", "pseudo_dirname", "is", "not", "None", ":", "\n", "            ", "pseudo_dir", "=", "self", ".", "datasets_dir", "/", "'real'", "/", "pseudo_dirname", "\n", "pseudo_dataset", "=", "get_real_resection_dataset", "(", "pseudo_dir", ",", "transform", "=", "train_transform", ")", "\n", "self", ".", "train_dataset", "=", "torch", ".", "utils", ".", "data", ".", "ConcatDataset", "(", "(", "self", ".", "train_dataset", ",", "pseudo_dataset", ")", ")", "\n", "\n", "", "self", ".", "train_loader", "=", "self", ".", "get_train_loader", "(", "self", ".", "train_dataset", ")", "\n", "self", ".", "val_loader", "=", "self", ".", "test_loader", "=", "self", ".", "get_val_loader", "(", "self", ".", "val_dataset", ")", "\n", "\n", "self", ".", "log", "=", "log", "\n", "if", "verbose", ":", "\n", "            ", "self", ".", "print_lengths", "(", "test", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.DataModuleCV.split_subjects": [[181, 189], ["sklearn.model_selection.KFold", "list", "sklearn.model_selection.KFold.split"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "split_subjects", "(", "real_subjects", ",", "fold", ",", "num_folds", ",", "split_seed", ")", ":", "\n", "        ", "kf", "=", "KFold", "(", "n_splits", "=", "num_folds", ",", "shuffle", "=", "True", ",", "random_state", "=", "split_seed", ")", "\n", "folds", "=", "list", "(", "kf", ".", "split", "(", "real_subjects", ")", ")", "\n", "train_indices", ",", "val_indices", "=", "folds", "[", "fold", "]", "\n", "train_subjects", "=", "[", "real_subjects", "[", "i", "]", "for", "i", "in", "train_indices", "]", "\n", "val_subjects", "=", "[", "real_subjects", "[", "i", "]", "for", "i", "in", "val_indices", "]", "\n", "return", "train_subjects", ",", "val_subjects", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_train_transform": [[191, 223], ["torchio.Compose", "torchio.OneOf", "transforms.extend", "torchio.Compose", "transforms.append", "transforms.append", "torchio.OneOf", "torchio.RandomFlip", "torchio.RandomAnisotropy", "torchio.RandomBlur", "datasets.get_simulation_transform", "torchio.HistogramStandardization", "torchio.RandomGhosting", "torchio.RandomSpike", "torchio.RandomMotion", "torchio.RandomBiasField", "torchio.ZNormalization", "torchio.RandomNoise", "datasets.get_tight_crop", "torchio.RandomAffine", "torchio.RandomElasticDeformation"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_simulation_transform", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_tight_crop"], ["", "", "def", "get_train_transform", "(", "landmarks_path", ",", "resection_params", "=", "None", ")", ":", "\n", "    ", "spatial_transform", "=", "tio", ".", "Compose", "(", "(", "\n", "tio", ".", "OneOf", "(", "{", "\n", "tio", ".", "RandomAffine", "(", ")", ":", "0.9", ",", "\n", "tio", ".", "RandomElasticDeformation", "(", ")", ":", "0.1", ",", "\n", "}", ")", ",", "\n", "tio", ".", "RandomFlip", "(", ")", ",", "\n", ")", ")", "\n", "resolution_transform", "=", "tio", ".", "OneOf", "(", "(", "\n", "tio", ".", "RandomAnisotropy", "(", ")", ",", "\n", "tio", ".", "RandomBlur", "(", ")", ",", "\n", ")", ",", "\n", "p", "=", "0.75", ",", "\n", ")", "\n", "transforms", "=", "[", "]", "\n", "if", "resection_params", "is", "not", "None", ":", "\n", "        ", "transforms", ".", "append", "(", "get_simulation_transform", "(", "resection_params", ")", ")", "\n", "", "if", "landmarks_path", "is", "not", "None", ":", "\n", "        ", "transforms", ".", "append", "(", "tio", ".", "HistogramStandardization", "(", "{", "'image'", ":", "landmarks_path", "}", ")", ")", "\n", "", "transforms", ".", "extend", "(", "[", "\n", "# tio.RandomGamma(p=0.2),", "\n", "resolution_transform", ",", "\n", "tio", ".", "RandomGhosting", "(", "p", "=", "0.2", ")", ",", "\n", "tio", ".", "RandomSpike", "(", "p", "=", "0.2", ")", ",", "\n", "tio", ".", "RandomMotion", "(", "p", "=", "0.2", ")", ",", "\n", "tio", ".", "RandomBiasField", "(", "p", "=", "0.5", ")", ",", "\n", "tio", ".", "ZNormalization", "(", "masking_method", "=", "tio", ".", "ZNormalization", ".", "mean", ")", ",", "\n", "tio", ".", "RandomNoise", "(", "p", "=", "0.75", ")", ",", "# always after ZNorm and after blur!", "\n", "spatial_transform", ",", "\n", "get_tight_crop", "(", ")", ",", "\n", "]", ")", "\n", "return", "tio", ".", "Compose", "(", "transforms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_subjects_list_from_dir": [[225, 248], ["pathlib.Path", "utils.sglob", "torchio.Subject", "subjects_list.append", "noise_path.stem.split", "torchio.ScalarImage", "torchio.ScalarImage", "torchio.LabelMap", "torchio.LabelMap", "torchio.LabelMap", "torchio.LabelMap"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.sglob"], ["", "def", "get_subjects_list_from_dir", "(", "dataset_dir", ")", ":", "\n", "    ", "dataset_dir", "=", "Path", "(", "dataset_dir", ")", "\n", "mni_dir", "=", "dataset_dir", "/", "'mni'", "\n", "resection_dir", "=", "dataset_dir", "/", "'resection'", "\n", "noise_paths", "=", "sglob", "(", "resection_dir", ",", "'*noise*'", ")", "\n", "subjects_list", "=", "[", "]", "\n", "for", "noise_path", "in", "noise_paths", ":", "\n", "        ", "stem", "=", "noise_path", ".", "stem", ".", "split", "(", "'_noise'", ")", "[", "0", "]", "\n", "image_path", "=", "mni_dir", "/", "f'{stem}_on_mni.nii.gz'", "\n", "gml_path", "=", "resection_dir", "/", "f'{stem}_gray_matter_left_seg.nii.gz'", "\n", "gmr_path", "=", "resection_dir", "/", "f'{stem}_gray_matter_right_seg.nii.gz'", "\n", "rl_path", "=", "resection_dir", "/", "f'{stem}_resectable_left_seg.nii.gz'", "\n", "rr_path", "=", "resection_dir", "/", "f'{stem}_resectable_right_seg.nii.gz'", "\n", "subject", "=", "tio", ".", "Subject", "(", "\n", "image", "=", "tio", ".", "ScalarImage", "(", "image_path", ")", ",", "\n", "resection_noise", "=", "tio", ".", "ScalarImage", "(", "noise_path", ")", ",", "\n", "resection_gray_matter_left", "=", "tio", ".", "LabelMap", "(", "gml_path", ")", ",", "\n", "resection_gray_matter_right", "=", "tio", ".", "LabelMap", "(", "gmr_path", ")", ",", "\n", "resection_resectable_left", "=", "tio", ".", "LabelMap", "(", "rl_path", ")", ",", "\n", "resection_resectable_right", "=", "tio", ".", "LabelMap", "(", "rr_path", ")", ",", "\n", ")", "\n", "subjects_list", ".", "append", "(", "subject", ")", "\n", "", "return", "subjects_list", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_landmarks_path": [[250, 264], ["landmarks_dir.mkdir", "pathlib.Path", "landmarks_path.is_file", "print", "train_histogram", "datasets.get_stems_hash"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_stems_hash"], ["", "def", "get_landmarks_path", "(", "dataset", "=", "None", ")", ":", "\n", "    ", "landmarks_dir", "=", "Path", "(", "__file__", ")", ".", "parent", "/", "'landmarks'", "\n", "landmarks_dir", ".", "mkdir", "(", "exist_ok", "=", "True", ")", "\n", "if", "dataset", "is", "None", ":", "# get precomputed landmarks from public data", "\n", "        ", "landmarks_path", "=", "landmarks_dir", "/", "'histogram_landmarks_default.npy'", "\n", "", "else", ":", "\n", "        ", "filename", "=", "f'histogram_landmarks_{get_stems_hash(dataset)}.npy'", "\n", "landmarks_path", "=", "landmarks_dir", "/", "filename", "\n", "if", "not", "landmarks_path", ".", "is_file", "(", ")", ":", "\n", "            ", "from", "torchio", ".", "transforms", "import", "train_histogram", "\n", "images_paths", "=", "[", "subject", ".", "image", ".", "path", "for", "subject", "in", "dataset", ".", "subjects", "]", "\n", "print", "(", "'Training histogram landmarks:'", ",", "landmarks_path", ")", "\n", "train_histogram", "(", "images_paths", ",", "output_path", "=", "landmarks_path", ")", "\n", "", "", "return", "landmarks_path", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_stems_hash": [[266, 270], ["hashlib.md5().hexdigest", "utils.get_stem", "hashlib.md5", "stems_string.encode"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.get_stem"], ["", "def", "get_stems_hash", "(", "dataset", ")", ":", "\n", "# https://stackoverflow.com/a/27522708/3956024", "\n", "    ", "stems_string", "=", "','", ".", "join", "(", "get_stem", "(", "subject", ".", "image", ".", "path", ")", "for", "subject", "in", "dataset", ".", "subjects", ")", "\n", "return", "hashlib", ".", "md5", "(", "stems_string", ".", "encode", "(", ")", ")", ".", "hexdigest", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_tight_crop": [[272, 276], ["torchio.Crop"], "function", ["None"], ["", "def", "get_tight_crop", "(", ")", ":", "\n", "# Crop from (193, 229, 193) to (176, 216, 160)", "\n", "    ", "crop", "=", "tio", ".", "Crop", "(", "(", "9", ",", "8", ",", "7", ",", "6", ",", "17", ",", "16", ")", ")", "\n", "return", "crop", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_real_resection_subjects": [[278, 293], ["pathlib.Path", "utils.sglob", "utils.sglob", "zip", "len", "len", "torchio.Subject", "subjects.append", "torchio.ScalarImage", "torchio.LabelMap"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.sglob", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.sglob"], ["", "def", "get_real_resection_subjects", "(", "dataset_dir", ")", ":", "\n", "    ", "dataset_dir", "=", "Path", "(", "dataset_dir", ")", "\n", "image_dir", "=", "dataset_dir", "/", "'image'", "\n", "label_dir", "=", "dataset_dir", "/", "'label'", "\n", "image_paths", "=", "sglob", "(", "image_dir", ")", "\n", "label_paths", "=", "sglob", "(", "label_dir", ")", "\n", "assert", "len", "(", "image_paths", ")", "==", "len", "(", "label_paths", ")", "\n", "subjects", "=", "[", "]", "\n", "for", "image_path", ",", "label_path", "in", "zip", "(", "image_paths", ",", "label_paths", ")", ":", "\n", "        ", "subject", "=", "tio", ".", "Subject", "(", "\n", "image", "=", "tio", ".", "ScalarImage", "(", "image_path", ")", ",", "\n", "label", "=", "tio", ".", "LabelMap", "(", "label_path", ")", ",", "\n", ")", "\n", "subjects", ".", "append", "(", "subject", ")", "\n", "", "return", "subjects", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_real_resection_dataset": [[295, 298], ["datasets.get_real_resection_subjects", "torchio.SubjectsDataset"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_real_resection_subjects"], ["", "def", "get_real_resection_dataset", "(", "dataset_dir", ",", "transform", "=", "None", ")", ":", "\n", "    ", "subjects", "=", "get_real_resection_subjects", "(", "dataset_dir", ")", "\n", "return", "tio", ".", "SubjectsDataset", "(", "subjects", ",", "transform", "=", "transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.reduce_dataset": [[300, 303], ["int", "torch.utils.data.Subset", "list", "len", "range"], "function", ["None"], ["", "def", "reduce_dataset", "(", "dataset", ",", "ratio", ")", ":", "\n", "    ", "n", "=", "int", "(", "len", "(", "dataset", ")", "*", "ratio", ")", "\n", "return", "torch", ".", "utils", ".", "data", ".", "Subset", "(", "dataset", ",", "list", "(", "range", "(", "n", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.cache": [[305, 339], ["pathlib.Path", "zip", "torchio.SubjectsDataset", "cache_dir.is_dir", "print", "image_dir.mkdir", "label_dir.mkdir", "torch.utils.data.DataLoader", "tqdm.tqdm", "utils.sglob", "utils.sglob", "torchio.Subject", "subjects.append", "tio.Subject.image.save", "tio.Subject.label.save", "torchio.ScalarImage", "torchio.LabelMap"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.sglob", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.utils.sglob"], ["", "def", "cache", "(", "dataset", ",", "resection_params", ",", "augment", "=", "True", ",", "caches_dir", "=", "'/tmp/val_set_cache'", ",", "num_workers", "=", "12", ")", ":", "\n", "    ", "caches_dir", "=", "Path", "(", "caches_dir", ")", "\n", "wm_lesion_p", "=", "resection_params", "[", "'wm_lesion_p'", "]", "\n", "clot_p", "=", "resection_params", "[", "'clot_p'", "]", "\n", "shape", "=", "resection_params", "[", "'shape'", "]", "\n", "texture", "=", "resection_params", "[", "'texture'", "]", "\n", "augment_string", "=", "'_no_augmentation'", "if", "not", "augment", "else", "''", "\n", "dir_name", "=", "f'wm_{wm_lesion_p}_clot_{clot_p}_{shape}_{texture}{augment_string}'", "\n", "cache_dir", "=", "caches_dir", "/", "dir_name", "\n", "image_dir", "=", "cache_dir", "/", "'image'", "\n", "label_dir", "=", "cache_dir", "/", "'label'", "\n", "if", "not", "cache_dir", ".", "is_dir", "(", ")", ":", "\n", "        ", "print", "(", "'Caching validation set'", ")", "\n", "image_dir", ".", "mkdir", "(", "parents", "=", "True", ")", "\n", "label_dir", ".", "mkdir", "(", "parents", "=", "True", ")", "\n", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "collate_fn", "=", "lambda", "x", ":", "x", "[", "0", "]", ",", "\n", ")", "\n", "for", "subject", "in", "tqdm", "(", "loader", ")", ":", "\n", "            ", "image_path", "=", "image_dir", "/", "subject", ".", "image", ".", "path", ".", "name", "\n", "label_path", "=", "label_dir", "/", "subject", ".", "image", ".", "path", ".", "name", "# label has no path because it was created not loaded", "\n", "subject", ".", "image", ".", "save", "(", "image_path", ")", "\n", "subject", ".", "label", ".", "save", "(", "label_path", ")", "\n", "\n", "", "", "subjects", "=", "[", "]", "\n", "for", "im_path", ",", "label_path", "in", "zip", "(", "sglob", "(", "image_dir", ")", ",", "sglob", "(", "label_dir", ")", ")", ":", "\n", "        ", "subject", "=", "tio", ".", "Subject", "(", "\n", "image", "=", "tio", ".", "ScalarImage", "(", "im_path", ")", ",", "\n", "label", "=", "tio", ".", "LabelMap", "(", "label_path", ")", ",", "\n", ")", "\n", "subjects", ".", "append", "(", "subject", ")", "\n", "", "return", "tio", ".", "SubjectsDataset", "(", "subjects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_test_transform": [[341, 350], ["transforms.extend", "torchio.Compose", "transforms.append", "torchio.HistogramStandardization", "torchio.ZNormalization", "datasets.get_tight_crop"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_tight_crop"], ["", "def", "get_test_transform", "(", "landmarks_path", ")", ":", "\n", "    ", "transforms", "=", "[", "]", "\n", "if", "landmarks_path", "is", "not", "None", ":", "\n", "        ", "transforms", ".", "append", "(", "tio", ".", "HistogramStandardization", "(", "{", "'image'", ":", "landmarks_path", "}", ")", ")", "\n", "", "transforms", ".", "extend", "(", "[", "\n", "tio", ".", "ZNormalization", "(", "masking_method", "=", "tio", ".", "ZNormalization", ".", "mean", ")", ",", "\n", "get_tight_crop", "(", ")", ",", "\n", "]", ")", "\n", "return", "tio", ".", "Compose", "(", "transforms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_simulation_transform": [[352, 361], ["resector.RandomResection"], "function", ["None"], ["", "def", "get_simulation_transform", "(", "resection_params", ")", ":", "\n", "    ", "transform", "=", "RandomResection", "(", "\n", "volumes_range", "=", "(", "844", ",", "83757", ")", ",", "# percentiles 1 and 99 of volumes in labeled EPISURG", "\n", "wm_lesion_p", "=", "resection_params", "[", "'wm_lesion_p'", "]", ",", "\n", "clot_p", "=", "resection_params", "[", "'clot_p'", "]", ",", "\n", "shape", "=", "resection_params", "[", "'shape'", "]", ",", "\n", "texture", "=", "resection_params", "[", "'texture'", "]", ",", "\n", ")", "\n", "return", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_pseudo_loader": [[363, 403], ["datasets.get_certain_subjects", "dataset_dir.is_dir", "datasets.get_train_transform", "torchio.SubjectsDataset", "torch.utils.data.DataLoader", "pathlib.Path", "torchio.Subject", "subjects.append", "datasets.get_landmarks_path", "list", "list", "image_dir.glob", "label_dir.glob", "torchio.ScalarImage", "torchio.LabelMap"], "function", ["home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_certain_subjects", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_train_transform", "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_landmarks_path"], ["", "def", "get_pseudo_loader", "(", "\n", "threshold", ",", "\n", "percentile", ",", "\n", "metric", ",", "\n", "summary_path", ",", "\n", "dataset_name", ",", "\n", "num_workers", ",", "\n", "batch_size", "=", "2", ",", "\n", "remove_zero_volume", "=", "False", ",", "\n", ")", ":", "\n", "    ", "subjects", "=", "[", "]", "\n", "subject_ids", "=", "get_certain_subjects", "(", "\n", "threshold", ",", "\n", "percentile", ",", "\n", "metric", ",", "\n", "summary_path", ",", "\n", "remove_zero_volume", "=", "remove_zero_volume", ",", "\n", ")", "\n", "dataset_dir", "=", "Path", "(", "'/home/fernando/datasets/real/'", ")", "/", "dataset_name", "\n", "assert", "dataset_dir", ".", "is_dir", "(", ")", "\n", "image_dir", "=", "dataset_dir", "/", "'image'", "\n", "label_dir", "=", "dataset_dir", "/", "'label'", "\n", "for", "subject_id", "in", "subject_ids", ":", "\n", "        ", "image_path", "=", "list", "(", "image_dir", ".", "glob", "(", "f'{subject_id}_*'", ")", ")", "[", "0", "]", "\n", "label_path", "=", "list", "(", "label_dir", ".", "glob", "(", "f'{subject_id}_*'", ")", ")", "[", "0", "]", "\n", "subject", "=", "tio", ".", "Subject", "(", "\n", "image", "=", "tio", ".", "ScalarImage", "(", "image_path", ")", ",", "\n", "label", "=", "tio", ".", "LabelMap", "(", "label_path", ")", ",", "\n", ")", "\n", "subjects", ".", "append", "(", "subject", ")", "\n", "", "transform", "=", "get_train_transform", "(", "get_landmarks_path", "(", ")", ")", "\n", "dataset", "=", "tio", ".", "SubjectsDataset", "(", "subjects", ",", "transform", "=", "transform", ")", "\n", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", ")", "\n", "return", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.fepegar_resseg-ijcars.None.datasets.get_certain_subjects": [[405, 423], ["pandas.read_csv", "column.quantile"], "function", ["None"], ["", "def", "get_certain_subjects", "(", "\n", "threshold", ",", "\n", "percentile", ",", "\n", "metric", ",", "\n", "summary_path", ",", "\n", "remove_zero_volume", "=", "False", ",", "\n", ")", ":", "\n", "    ", "df", "=", "pd", ".", "read_csv", "(", "summary_path", ",", "index_col", "=", "0", ",", "dtype", "=", "{", "'Subject'", ":", "str", "}", ")", "\n", "if", "remove_zero_volume", ":", "\n", "        ", "df", "=", "df", "[", "df", ".", "Volume", ">", "0", "]", "\n", "", "column", "=", "df", "[", "metric", "]", "\n", "assert", "not", "(", "threshold", "is", "None", "and", "percentile", "is", "None", ")", "\n", "assert", "not", "(", "threshold", "is", "not", "None", "and", "percentile", "is", "not", "None", ")", "\n", "if", "percentile", "is", "not", "None", ":", "\n", "        ", "df", "=", "df", "[", "column", "<", "column", ".", "quantile", "(", "percentile", "/", "100", ")", "]", "\n", "", "elif", "threshold", "is", "not", "None", ":", "\n", "        ", "df", "=", "df", "[", "column", "<", "threshold", "]", "\n", "", "return", "df", ".", "Subject", ".", "values", "\n", "", ""]]}