{"home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base.__init__": [[6, 40], ["tensorflow.nn.embedding_lookup", "tensorflow.reshape", "tensorflow.nn.embedding_lookup", "tensorflow.reshape", "tensorflow.nn.embedding_lookup", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.constant", "tensorflow.concat", "tensorflow.get_variable", "tensorflow.constant"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "feature_size", ",", "eb_dim", ",", "s_num", ",", "c_num", ",", "label_num", ",", "pred_mode", ")", ":", "\n", "# input placeholders", "\n", "        ", "with", "tf", ".", "name_scope", "(", "'inputs'", ")", ":", "\n", "            ", "self", ".", "search_res_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "s_num", ",", "c_num", "]", ",", "name", "=", "'search_res_ph'", ")", "\n", "self", ".", "search_res_label_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "s_num", "]", ",", "name", "=", "'search_res_label_ph'", ")", "\n", "self", ".", "search_res_len_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "]", ",", "name", "=", "'search_res_len_ph'", ")", "\n", "self", ".", "target_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "c_num", "]", ",", "name", "=", "'target_ph'", ")", "\n", "self", ".", "label_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "]", ",", "name", "=", "'label_ph'", ")", "\n", "\n", "# lr", "\n", "self", ".", "lr", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "]", ")", "\n", "# reg lambda", "\n", "self", ".", "l2_norm", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "]", ")", "\n", "# keep prob", "\n", "self", ".", "keep_prob", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "]", ")", "\n", "self", ".", "pred_mode", "=", "pred_mode", "\n", "self", ".", "label_num", "=", "label_num", "\n", "\n", "# embedding", "\n", "", "with", "tf", ".", "variable_scope", "(", "'embedding'", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "            ", "self", ".", "emb_mtx", "=", "tf", ".", "get_variable", "(", "'emb_mtx'", ",", "[", "feature_size", ",", "eb_dim", "]", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", ")", "\n", "self", ".", "emb_mtx_mask", "=", "tf", ".", "constant", "(", "value", "=", "1.", ",", "shape", "=", "[", "feature_size", "-", "1", ",", "eb_dim", "]", ")", "\n", "self", ".", "emb_mtx_mask", "=", "tf", ".", "concat", "(", "[", "tf", ".", "constant", "(", "value", "=", "0.", ",", "shape", "=", "[", "1", ",", "eb_dim", "]", ")", ",", "self", ".", "emb_mtx_mask", "]", ",", "axis", "=", "0", ")", "\n", "self", ".", "emb_mtx", "=", "self", ".", "emb_mtx", "*", "self", ".", "emb_mtx_mask", "\n", "\n", "self", ".", "label_emb_mtx", "=", "tf", ".", "get_variable", "(", "'label_emb_mtx'", ",", "[", "label_num", ",", "eb_dim", "]", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", ")", "\n", "\n", "", "self", ".", "search_res", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "emb_mtx", ",", "self", ".", "search_res_ph", ")", "#[batch_size, s_num, c_num, eb_dim]", "\n", "self", ".", "search_res", "=", "tf", ".", "reshape", "(", "self", ".", "search_res", ",", "[", "-", "1", ",", "s_num", ",", "c_num", "*", "eb_dim", "]", ")", "\n", "\n", "self", ".", "target", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "emb_mtx", ",", "self", ".", "target_ph", ")", "\n", "self", ".", "target", "=", "tf", ".", "reshape", "(", "self", ".", "target", ",", "[", "-", "1", ",", "c_num", "*", "eb_dim", "]", ")", "\n", "\n", "self", ".", "search_res_label", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "label_emb_mtx", ",", "self", ".", "search_res_label_ph", ")", "#[batch_size, s_num, eb_dim]", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base._build_fc_net": [[41, 58], ["tensorflow.layers.batch_normalization", "tensorflow.layers.dense", "tensorflow.nn.dropout", "tensorflow.layers.dense", "tensorflow.nn.dropout", "tensorflow.layers.dense", "tensorflow.nn.softmax", "tensorflow.reshape", "tensorflow.layers.dense", "tensorflow.reshape"], "methods", ["None"], ["", "def", "_build_fc_net", "(", "self", ",", "inp", ")", ":", "\n", "        ", "bn1", "=", "tf", ".", "layers", ".", "batch_normalization", "(", "inputs", "=", "inp", ",", "name", "=", "'bn1'", ")", "\n", "fc1", "=", "tf", ".", "layers", ".", "dense", "(", "bn1", ",", "200", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'fc1'", ")", "\n", "dp1", "=", "tf", ".", "nn", ".", "dropout", "(", "fc1", ",", "self", ".", "keep_prob", ",", "name", "=", "'dp1'", ")", "\n", "fc2", "=", "tf", ".", "layers", ".", "dense", "(", "dp1", ",", "80", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'fc2'", ")", "\n", "dp2", "=", "tf", ".", "nn", ".", "dropout", "(", "fc2", ",", "self", ".", "keep_prob", ",", "name", "=", "'dp2'", ")", "\n", "\n", "if", "self", ".", "pred_mode", "==", "'class'", ":", "\n", "            ", "fc3", "=", "tf", ".", "layers", ".", "dense", "(", "dp2", ",", "2", ",", "activation", "=", "None", ",", "name", "=", "'fc3'", ")", "\n", "score", "=", "tf", ".", "nn", ".", "softmax", "(", "fc3", ")", "\n", "# output", "\n", "self", ".", "y_pred", "=", "tf", ".", "reshape", "(", "score", "[", ":", ",", "0", "]", ",", "[", "-", "1", ",", "]", ")", "\n", "", "elif", "self", ".", "pred_mode", "==", "'reg'", ":", "\n", "# fc3 = tf.layers.dense(dp2, 1, activation=tf.nn.sigmoid, name='fc3')", "\n", "# fc3 = self.label_num * fc3", "\n", "            ", "fc3", "=", "tf", ".", "layers", ".", "dense", "(", "dp2", ",", "1", ",", "activation", "=", "None", ",", "name", "=", "'fc3'", ")", "\n", "self", ".", "y_pred", "=", "tf", ".", "reshape", "(", "fc3", ",", "[", "-", "1", ",", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base._build_fc_net_res": [[59, 77], ["tensorflow.layers.batch_normalization", "tensorflow.layers.dense", "tensorflow.nn.dropout", "tensorflow.layers.dense", "tensorflow.nn.dropout", "tensorflow.concat", "tensorflow.layers.dense", "tensorflow.nn.softmax", "tensorflow.reshape", "tensorflow.layers.dense", "tensorflow.reshape"], "methods", ["None"], ["", "", "def", "_build_fc_net_res", "(", "self", ",", "inp", ",", "res_inp", ")", ":", "\n", "        ", "bn1", "=", "tf", ".", "layers", ".", "batch_normalization", "(", "inputs", "=", "inp", ",", "name", "=", "'bn1'", ")", "\n", "fc1", "=", "tf", ".", "layers", ".", "dense", "(", "bn1", ",", "200", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'fc1'", ")", "\n", "dp1", "=", "tf", ".", "nn", ".", "dropout", "(", "fc1", ",", "self", ".", "keep_prob", ",", "name", "=", "'dp1'", ")", "\n", "fc2", "=", "tf", ".", "layers", ".", "dense", "(", "dp1", ",", "80", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'fc2'", ")", "\n", "dp2", "=", "tf", ".", "nn", ".", "dropout", "(", "fc2", ",", "self", ".", "keep_prob", ",", "name", "=", "'dp2'", ")", "\n", "concat_inp", "=", "tf", ".", "concat", "(", "[", "dp2", ",", "res_inp", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "if", "self", ".", "pred_mode", "==", "'class'", ":", "\n", "            ", "fc3", "=", "tf", ".", "layers", ".", "dense", "(", "concat_inp", ",", "2", ",", "activation", "=", "None", ",", "name", "=", "'fc3'", ")", "\n", "score", "=", "tf", ".", "nn", ".", "softmax", "(", "fc3", ")", "\n", "# output", "\n", "self", ".", "y_pred", "=", "tf", ".", "reshape", "(", "score", "[", ":", ",", "0", "]", ",", "[", "-", "1", ",", "]", ")", "\n", "", "elif", "self", ".", "pred_mode", "==", "'reg'", ":", "\n", "# fc3 = tf.layers.dense(dp2, 1, activation=tf.nn.sigmoid, name='fc3')", "\n", "# fc3 = self.label_num * fc3", "\n", "            ", "fc3", "=", "tf", ".", "layers", ".", "dense", "(", "dp2", ",", "1", ",", "activation", "=", "None", ",", "name", "=", "'fc3'", ")", "\n", "self", ".", "y_pred", "=", "tf", ".", "reshape", "(", "fc3", ",", "[", "-", "1", ",", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base._build_logloss": [[78, 86], ["tensorflow.losses.log_loss", "tensorflow.trainable_variables", "tensorflow.nn.l2_loss"], "methods", ["None"], ["", "", "def", "_build_logloss", "(", "self", ")", ":", "\n", "# loss", "\n", "        ", "self", ".", "log_loss", "=", "tf", ".", "losses", ".", "log_loss", "(", "self", ".", "label_ph", ",", "self", ".", "y_pred", ")", "\n", "self", ".", "loss", "=", "self", ".", "log_loss", "\n", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "            ", "if", "'bias'", "not", "in", "v", ".", "name", "and", "'emb'", "not", "in", "v", ".", "name", ":", "\n", "                ", "self", ".", "loss", "+=", "self", ".", "l2_norm", "*", "tf", ".", "nn", ".", "l2_loss", "(", "v", ")", "\n", "", "", "self", ".", "l2_loss", "=", "self", ".", "loss", "-", "self", ".", "log_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base._build_mseloss": [[87, 95], ["tensorflow.losses.mean_squared_error", "tensorflow.trainable_variables", "tensorflow.nn.l2_loss"], "methods", ["None"], ["", "def", "_build_mseloss", "(", "self", ")", ":", "\n", "# loss", "\n", "        ", "self", ".", "mse_loss", "=", "tf", ".", "losses", ".", "mean_squared_error", "(", "self", ".", "label_ph", ",", "self", ".", "y_pred", ")", "\n", "self", ".", "loss", "=", "self", ".", "mse_loss", "\n", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "            ", "if", "'bias'", "not", "in", "v", ".", "name", "and", "'emb'", "not", "in", "v", ".", "name", ":", "\n", "                ", "self", ".", "loss", "+=", "self", ".", "l2_norm", "*", "tf", ".", "nn", ".", "l2_loss", "(", "v", ")", "\n", "", "", "self", ".", "l2_loss", "=", "self", ".", "loss", "-", "self", ".", "mse_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base._build_optimizer": [[97, 101], ["tensorflow.train.AdamOptimizer", "rim.Base.optimizer.minimize"], "methods", ["None"], ["", "def", "_build_optimizer", "(", "self", ")", ":", "\n", "# optimizer and training step", "\n", "        ", "self", ".", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "self", ".", "lr", ",", "name", "=", "'optimizer'", ")", "\n", "self", ".", "train_step", "=", "self", ".", "optimizer", ".", "minimize", "(", "self", ".", "loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base.train": [[102, 127], ["sess.run", "sess.run"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "sess", ",", "batch_data", ",", "lr", ",", "l2_norm", ")", ":", "\n", "        ", "if", "self", ".", "pred_mode", "==", "'class'", ":", "\n", "            ", "loss", ",", "log_loss", ",", "l2_loss", ",", "_", "=", "sess", ".", "run", "(", "[", "self", ".", "loss", ",", "self", ".", "log_loss", ",", "self", ".", "l2_loss", ",", "self", ".", "train_step", "]", ",", "feed_dict", "=", "{", "\n", "self", ".", "search_res_ph", ":", "batch_data", "[", "0", "]", ",", "\n", "self", ".", "search_res_label_ph", ":", "batch_data", "[", "1", "]", ",", "\n", "self", ".", "search_res_len_ph", ":", "batch_data", "[", "2", "]", ",", "\n", "self", ".", "target_ph", ":", "batch_data", "[", "3", "]", ",", "\n", "self", ".", "label_ph", ":", "batch_data", "[", "4", "]", ",", "\n", "self", ".", "lr", ":", "lr", ",", "\n", "self", ".", "l2_norm", ":", "l2_norm", ",", "\n", "self", ".", "keep_prob", ":", "0.8", "\n", "}", ")", "\n", "return", "loss", ",", "log_loss", ",", "l2_loss", "\n", "", "elif", "self", ".", "pred_mode", "==", "'reg'", ":", "\n", "            ", "loss", ",", "mse_loss", ",", "l2_loss", ",", "_", "=", "sess", ".", "run", "(", "[", "self", ".", "loss", ",", "self", ".", "mse_loss", ",", "self", ".", "l2_loss", ",", "self", ".", "train_step", "]", ",", "feed_dict", "=", "{", "\n", "self", ".", "search_res_ph", ":", "batch_data", "[", "0", "]", ",", "\n", "self", ".", "search_res_label_ph", ":", "batch_data", "[", "1", "]", ",", "\n", "self", ".", "search_res_len_ph", ":", "batch_data", "[", "2", "]", ",", "\n", "self", ".", "target_ph", ":", "batch_data", "[", "3", "]", ",", "\n", "self", ".", "label_ph", ":", "batch_data", "[", "4", "]", ",", "\n", "self", ".", "lr", ":", "lr", ",", "\n", "self", ".", "l2_norm", ":", "l2_norm", ",", "\n", "self", ".", "keep_prob", ":", "0.8", "\n", "}", ")", "\n", "return", "loss", ",", "mse_loss", ",", "l2_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base.eval": [[128, 140], ["sess.run", "pred.reshape().tolist", "label.reshape().tolist", "pred.reshape", "label.reshape"], "methods", ["None"], ["", "", "def", "eval", "(", "self", ",", "sess", ",", "batch_data", ",", "l2_norm", ")", ":", "\n", "        ", "pred", ",", "label", ",", "loss", "=", "sess", ".", "run", "(", "[", "self", ".", "y_pred", ",", "self", ".", "label_ph", ",", "self", ".", "loss", "]", ",", "feed_dict", "=", "{", "\n", "self", ".", "search_res_ph", ":", "batch_data", "[", "0", "]", ",", "\n", "self", ".", "search_res_label_ph", ":", "batch_data", "[", "1", "]", ",", "\n", "self", ".", "search_res_len_ph", ":", "batch_data", "[", "2", "]", ",", "\n", "self", ".", "target_ph", ":", "batch_data", "[", "3", "]", ",", "\n", "self", ".", "label_ph", ":", "batch_data", "[", "4", "]", ",", "\n", "self", ".", "l2_norm", ":", "l2_norm", ",", "\n", "self", ".", "keep_prob", ":", "1.", "\n", "}", ")", "\n", "\n", "return", "pred", ".", "reshape", "(", "[", "-", "1", ",", "]", ")", ".", "tolist", "(", ")", ",", "label", ".", "reshape", "(", "[", "-", "1", ",", "]", ")", ".", "tolist", "(", ")", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base.save": [[141, 144], ["tensorflow.train.Saver", "tensorflow.train.Saver.save"], "methods", ["home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base.save"], ["", "def", "save", "(", "self", ",", "sess", ",", "path", ")", ":", "\n", "        ", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "saver", ".", "save", "(", "sess", ",", "save_path", "=", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base.restore": [[145, 149], ["tensorflow.train.Saver", "tensorflow.train.Saver.restore", "print"], "methods", ["home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base.restore"], ["", "def", "restore", "(", "self", ",", "sess", ",", "path", ")", ":", "\n", "        ", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "save_path", "=", "path", ")", "\n", "print", "(", "'model restored from {}'", ".", "format", "(", "path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base._attention": [[150, 165], ["key.get_shape().as_list", "tensorflow.layers.dense", "tensorflow.tile", "tensorflow.reduce_sum", "tensorflow.equal", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.expand_dims", "tensorflow.ones_like", "tensorflow.ones_like", "tensorflow.where", "key.get_shape"], "methods", ["None"], ["", "def", "_attention", "(", "self", ",", "key", ",", "value", ",", "query", ",", "mask", ")", ":", "\n", "# key/value: [b, s_num, c_num * eb_dim], query: [b, c_num * eb_dim]", "\n", "        ", "_", ",", "s_num", ",", "k_dim", "=", "key", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "query", "=", "tf", ".", "layers", ".", "dense", "(", "query", ",", "k_dim", ",", "activation", "=", "None", ")", "\n", "queries", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "query", ",", "1", ")", ",", "[", "1", ",", "s_num", ",", "1", "]", ")", "\n", "kq_inter", "=", "queries", "*", "key", "\n", "atten", "=", "tf", ".", "reduce_sum", "(", "kq_inter", ",", "axis", "=", "2", ")", "\n", "\n", "mask", "=", "tf", ".", "equal", "(", "mask", ",", "tf", ".", "ones_like", "(", "mask", ")", ")", "\n", "paddings", "=", "tf", ".", "ones_like", "(", "atten", ")", "*", "(", "-", "2", "**", "32", "+", "1", ")", "\n", "atten", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "where", "(", "mask", ",", "atten", ",", "paddings", ")", ")", "\n", "atten", "=", "tf", ".", "expand_dims", "(", "atten", ",", "2", ")", "\n", "\n", "res", "=", "tf", ".", "reduce_sum", "(", "atten", "*", "value", ",", "axis", "=", "1", ")", "#[b, c_num * eb_dim]", "\n", "return", "atten", ",", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base._unroll_pairwise": [[166, 191], ["range", "range", "tensorflow.variable_scope", "tensorflow.transpose", "tensorflow.transpose", "rows.append", "cols.append", "tensorflow.gather", "tensorflow.gather", "tensorflow.transpose", "tensorflow.transpose"], "methods", ["None"], ["", "def", "_unroll_pairwise", "(", "self", ",", "xv", ",", "c_num", ")", ":", "\n", "        ", "rows", "=", "[", "]", "\n", "cols", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "c_num", "-", "1", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "c_num", ")", ":", "\n", "                ", "rows", ".", "append", "(", "i", ")", "\n", "cols", ".", "append", "(", "j", ")", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "'unroll_pairwise'", ")", ":", "\n", "# [b, pair, dim]", "\n", "            ", "xv_p", "=", "tf", ".", "transpose", "(", "\n", "# [pair, b, dim]", "\n", "tf", ".", "gather", "(", "\n", "# [c_num, b, dim]", "\n", "tf", ".", "transpose", "(", "\n", "xv", ",", "[", "1", ",", "0", ",", "2", "]", ")", ",", "\n", "rows", ")", ",", "\n", "[", "1", ",", "0", ",", "2", "]", ")", "\n", "# [b, pair, dim]", "\n", "xv_q", "=", "tf", ".", "transpose", "(", "\n", "tf", ".", "gather", "(", "\n", "tf", ".", "transpose", "(", "\n", "xv", ",", "[", "1", ",", "0", ",", "2", "]", ")", ",", "\n", "cols", ")", ",", "\n", "[", "1", ",", "0", ",", "2", "]", ")", "\n", "", "return", "xv_p", ",", "xv_q", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base._unroll_pairwise_new": [[192, 219], ["int", "range", "range", "tensorflow.variable_scope", "tensorflow.transpose", "tensorflow.transpose", "rows.append", "cols.append", "tensorflow.gather", "tensorflow.gather", "tensorflow.transpose", "tensorflow.transpose"], "methods", ["None"], ["", "def", "_unroll_pairwise_new", "(", "self", ",", "xv", ",", "c_num", ")", ":", "\n", "        ", "c_num_half", "=", "int", "(", "c_num", "/", "2", ")", "\n", "\n", "rows", "=", "[", "]", "\n", "cols", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "c_num_half", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "c_num", ")", ":", "\n", "                ", "rows", ".", "append", "(", "i", ")", "\n", "cols", ".", "append", "(", "j", ")", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "'unroll_pairwise'", ")", ":", "\n", "# [b, pair, dim]", "\n", "            ", "xv_p", "=", "tf", ".", "transpose", "(", "\n", "# [pair, b, dim]", "\n", "tf", ".", "gather", "(", "\n", "# [c_num, b, dim]", "\n", "tf", ".", "transpose", "(", "\n", "xv", ",", "[", "1", ",", "0", ",", "2", "]", ")", ",", "\n", "rows", ")", ",", "\n", "[", "1", ",", "0", ",", "2", "]", ")", "\n", "# [b, pair, dim]", "\n", "xv_q", "=", "tf", ".", "transpose", "(", "\n", "tf", ".", "gather", "(", "\n", "tf", ".", "transpose", "(", "\n", "xv", ",", "[", "1", ",", "0", ",", "2", "]", ")", ",", "\n", "cols", ")", ",", "\n", "[", "1", ",", "0", ",", "2", "]", ")", "\n", "", "return", "xv_p", ",", "xv_q", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.rim.RIM.__init__": [[223, 247], ["rim.Base.__init__", "tensorflow.sequence_mask", "rim.RIM._attention", "tensorflow.reduce_sum", "tensorflow.concat", "tensorflow.reshape", "rim.RIM._unroll_pairwise", "tensorflow.reduce_sum", "tensorflow.concat", "rim.RIM._build_fc_net_res", "rim.RIM._build_optimizer", "tensorflow.multiply", "rim.RIM._build_logloss", "rim.RIM._build_mseloss"], "methods", ["home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_reader.queryGen.__init__", "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base._attention", "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base._unroll_pairwise", "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base._build_fc_net_res", "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base._build_optimizer", "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base._build_logloss", "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base._build_mseloss"], ["    ", "def", "__init__", "(", "self", ",", "feature_size", ",", "eb_dim", ",", "s_num", ",", "c_num", ",", "label_num", ",", "pred_mode", "=", "'class'", ")", ":", "\n", "        ", "super", "(", "RIM", ",", "self", ")", ".", "__init__", "(", "feature_size", ",", "eb_dim", ",", "s_num", ",", "c_num", ",", "label_num", ",", "pred_mode", ")", "\n", "\n", "mask", "=", "tf", ".", "sequence_mask", "(", "self", ".", "search_res_len_ph", ",", "s_num", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "# use attention to represent the searched results and labels", "\n", "self", ".", "atten_score", ",", "self", ".", "search_res_rep", "=", "self", ".", "_attention", "(", "self", ".", "search_res", ",", "self", ".", "search_res", ",", "self", ".", "target", ",", "mask", ")", "\n", "self", ".", "label_rep", "=", "tf", ".", "reduce_sum", "(", "self", ".", "atten_score", "*", "self", ".", "search_res_label", ",", "axis", "=", "1", ")", "\n", "\n", "# featuren interaction", "\n", "feat_inter_inp", "=", "tf", ".", "concat", "(", "[", "self", ".", "target", ",", "self", ".", "search_res_rep", ",", "self", ".", "label_rep", "]", ",", "axis", "=", "1", ")", "\n", "feat_inter_inp", "=", "tf", ".", "reshape", "(", "feat_inter_inp", ",", "[", "-", "1", ",", "2", "*", "c_num", "+", "1", ",", "eb_dim", "]", ")", "\n", "inter_p", ",", "inter_q", "=", "self", ".", "_unroll_pairwise", "(", "feat_inter_inp", ",", "2", "*", "c_num", "+", "1", ")", "\n", "feat_inter", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "inter_p", ",", "inter_q", ")", ",", "axis", "=", "2", ")", "\n", "\n", "inp", "=", "tf", ".", "concat", "(", "[", "self", ".", "target", ",", "self", ".", "search_res_rep", ",", "feat_inter", ",", "self", ".", "label_rep", "]", ",", "axis", "=", "1", ")", "\n", "\n", "# fc layer", "\n", "self", ".", "_build_fc_net_res", "(", "inp", ",", "self", ".", "label_rep", ")", "\n", "if", "self", ".", "pred_mode", "==", "'class'", ":", "\n", "            ", "self", ".", "_build_logloss", "(", ")", "\n", "", "elif", "self", ".", "pred_mode", "==", "'reg'", ":", "\n", "            ", "self", ".", "_build_mseloss", "(", ")", "\n", "", "self", ".", "_build_optimizer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.train_reg.get_elapsed": [[22, 24], ["time.time"], "function", ["None"], ["def", "get_elapsed", "(", "start_time", ")", ":", "\n", "    ", "return", "time", ".", "time", "(", ")", "-", "start_time", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.train_reg.eval": [[25, 42], ["time.time", "mean_squared_error", "math.sqrt", "logging.info", "model.eval", "losses.append", "sum", "len", "time.time"], "function", ["home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.eval"], ["", "def", "eval", "(", "model", ",", "sess", ",", "dataloader", ",", "l2_norm", ")", ":", "\n", "    ", "preds", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "losses", "=", "[", "]", "\n", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "for", "batch_data", "in", "dataloader", ":", "\n", "        ", "pred", ",", "label", ",", "loss", "=", "model", ".", "eval", "(", "sess", ",", "batch_data", ",", "l2_norm", ")", "\n", "preds", "+=", "pred", "\n", "labels", "+=", "label", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "", "mse_loss", "=", "mean_squared_error", "(", "labels", ",", "preds", ")", "\n", "rmse", "=", "math", ".", "sqrt", "(", "mse_loss", ")", "\n", "loss", "=", "sum", "(", "losses", ")", "/", "len", "(", "losses", ")", "\n", "\n", "logging", ".", "info", "(", "\"Time of evaluating on the test dataset: %.4fs\"", "%", "(", "time", ".", "time", "(", ")", "-", "t", ")", ")", "\n", "return", "loss", ",", "mse_loss", ",", "rmse", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.train_reg.train": [[44, 169], ["tf.reset_default_graph", "tf.GPUOptions", "rim.RIM", "logging.info", "exit", "tf.Session", "time.time", "sess.run", "sess.run", "train_reg.eval", "test_losses.append", "test_mse_losses.append", "test_rmses.append", "tf.Summary", "writer.add_summary", "logging.info", "range", "os.path.join", "os.path.join", "tf.global_variables_initializer", "tf.local_variables_initializer", "str", "open", "logging.info", "f.write", "tf.ConfigProto", "logging.info", "rim.RIM.train", "train_dataloader.refresh", "str", "str", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "train_reg.get_elapsed", "tf.Summary", "writer.add_summary", "logging.info", "test_dataloader.refresh", "train_reg.eval", "test_losses.append", "test_mse_losses.append", "test_rmses.append", "logging.info", "tf.Summary", "writer.add_summary", "min", "min", "os.path.join", "os.path.join", "rim.RIM.save", "str", "os.path.exists", "os.makedirs", "len", "numpy.argmin", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "train_reg.get_elapsed", "train_reg.get_elapsed", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value"], "function", ["home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.eval", "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_writer.ESWriter.write", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.train", "home.repos.pwc.inspect_result.qinjr_rim.code.dataloader.DataloaderRIM.refresh", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.get_elapsed", "home.repos.pwc.inspect_result.qinjr_rim.code.dataloader.DataloaderRIM.refresh", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.eval", "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base.save", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.get_elapsed", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.get_elapsed"], ["", "def", "train", "(", "dataset", ",", "\n", "model_type", ",", "\n", "model_name", ",", "\n", "train_dataloader", ",", "\n", "test_dataloader", ",", "\n", "writer", ",", "\n", "max_epoch", ",", "\n", "eval_freq", ",", "\n", "log_freq", ",", "\n", "feature_size", ",", "\n", "eb_dim", ",", "\n", "s_num", ",", "\n", "c_num", ",", "\n", "label_num", ",", "\n", "lr", ",", "\n", "l2_norm", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "if", "model_type", "==", "'RIM'", ":", "\n", "        ", "model", "=", "RIM", "(", "feature_size", ",", "eb_dim", ",", "s_num", ",", "c_num", ",", "label_num", ",", "pred_mode", "=", "'reg'", ")", "\n", "", "else", ":", "\n", "        ", "logging", ".", "info", "(", "'WRONG MODEL TYPE'", ")", "\n", "exit", "(", "1", ")", "\n", "\n", "# gpu settings", "\n", "", "gpu_options", "=", "tf", ".", "GPUOptions", "(", "allow_growth", "=", "True", ")", "\n", "\n", "# training process", "\n", "with", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "gpu_options", "=", "gpu_options", ")", ")", "as", "sess", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "sess", ".", "run", "(", "tf", ".", "local_variables_initializer", "(", ")", ")", "\n", "\n", "# before training process, get initial test evaluation", "\n", "step", "=", "0", "# training step", "\n", "log_step", "=", "0", "# training log step", "\n", "eval_step", "=", "0", "# eval step", "\n", "\n", "test_losses", "=", "[", "]", "\n", "test_mse_losses", "=", "[", "]", "\n", "test_rmses", "=", "[", "]", "\n", "\n", "test_loss", ",", "test_mse_loss", ",", "test_rmse", "=", "eval", "(", "model", ",", "sess", ",", "test_dataloader", ",", "l2_norm", ")", "\n", "\n", "test_losses", ".", "append", "(", "test_loss", ")", "\n", "test_mse_losses", ".", "append", "(", "test_mse_loss", ")", "\n", "test_rmses", ".", "append", "(", "test_rmse", ")", "\n", "\n", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_loss'", ",", "simple_value", "=", "test_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_mse_loss'", ",", "simple_value", "=", "test_mse_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_rmse'", ",", "simple_value", "=", "test_rmse", ")", "]", ")", "\n", "writer", ".", "add_summary", "(", "summary", ",", "global_step", "=", "eval_step", ")", "\n", "eval_step", "+=", "1", "\n", "\n", "logging", ".", "info", "(", "\"STEP %d  LOSS TEST: %.4f  MSE_LOSS TEST: %.4f RMSE TEST: %.4f  ELASPED: %.2fs\"", "%", "(", "step", ",", "test_loss", ",", "test_mse_loss", ",", "test_rmse", ",", "get_elapsed", "(", "start_time", ")", ")", ")", "\n", "\n", "early_stop", "=", "False", "\n", "\n", "# begin training process", "\n", "for", "epoch", "in", "range", "(", "max_epoch", ")", ":", "\n", "# lr decay", "\n", "            ", "if", "epoch", "!=", "0", ":", "\n", "                ", "lr", "=", "lr", "*", "DECAY_FACTOR", "\n", "logging", ".", "info", "(", "'DECAYED LR IS {}'", ".", "format", "(", "lr", ")", ")", "\n", "\n", "", "if", "early_stop", ":", "\n", "                ", "break", "\n", "\n", "", "for", "batch_data", "in", "train_dataloader", ":", "\n", "                ", "if", "early_stop", ":", "\n", "                    ", "break", "\n", "", "train_loss", ",", "train_mse_loss", ",", "train_l2_loss", "=", "model", ".", "train", "(", "sess", ",", "batch_data", ",", "lr", ",", "l2_norm", ")", "\n", "step", "+=", "1", "\n", "\n", "if", "step", "%", "log_freq", "==", "0", ":", "\n", "                    ", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'train_loss'", ",", "simple_value", "=", "train_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'train_mse_loss'", ",", "simple_value", "=", "train_mse_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'train_l2_loss'", ",", "simple_value", "=", "train_l2_loss", ")", "]", ")", "\n", "writer", ".", "add_summary", "(", "summary", ",", "global_step", "=", "log_step", ")", "\n", "log_step", "+=", "1", "\n", "logging", ".", "info", "(", "\"STEP %d  LOSS TRAIN: %.4f  MSE_LOSS TRAIN: %.4f  L2_LOSS TRAIN: %.4f  Elasped: %.2fs\"", "%", "(", "step", ",", "train_loss", ",", "train_mse_loss", ",", "train_l2_loss", ",", "get_elapsed", "(", "start_time", ")", ")", ")", "\n", "\n", "", "if", "step", "%", "eval_freq", "==", "0", ":", "\n", "                    ", "test_dataloader", ".", "refresh", "(", ")", "\n", "\n", "test_loss", ",", "test_mse_loss", ",", "test_rmse", "=", "eval", "(", "model", ",", "sess", ",", "test_dataloader", ",", "l2_norm", ")", "\n", "test_losses", ".", "append", "(", "test_loss", ")", "\n", "test_mse_losses", ".", "append", "(", "test_mse_loss", ")", "\n", "test_rmses", ".", "append", "(", "test_rmse", ")", "\n", "\n", "logging", ".", "info", "(", "\"STEP %d  LOSS TEST: %.4f  MSE_LOSS TEST: %.4f RMSE TEST: %.4f  ELASPED: %.2fs\"", "%", "(", "step", ",", "test_loss", ",", "test_mse_loss", ",", "test_rmse", ",", "get_elapsed", "(", "start_time", ")", ")", ")", "\n", "\n", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_loss'", ",", "simple_value", "=", "test_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_mse_loss'", ",", "simple_value", "=", "test_mse_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_rmse'", ",", "simple_value", "=", "test_rmse", ")", "]", ")", "\n", "writer", ".", "add_summary", "(", "summary", ",", "global_step", "=", "eval_step", ")", "\n", "eval_step", "+=", "1", "\n", "\n", "if", "test_rmses", "[", "-", "1", "]", "<", "min", "(", "test_rmses", "[", ":", "-", "1", "]", ")", ":", "\n", "                        ", "model_dir", "=", "os", ".", "path", ".", "join", "(", "SAVE_PATH_PREFIX", ",", "dataset", ",", "str", "(", "s_num", ")", ",", "model_name", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_dir", ")", ":", "\n", "                            ", "os", ".", "makedirs", "(", "model_dir", ")", "\n", "", "model_path", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "'ckpt'", ")", "\n", "model", ".", "save", "(", "sess", ",", "model_path", ")", "\n", "\n", "", "if", "len", "(", "test_losses", ")", ">", "2", "and", "epoch", ">", "0", ":", "\n", "                        ", "if", "(", "test_losses", "[", "-", "1", "]", ">", "test_losses", "[", "-", "2", "]", "and", "test_losses", "[", "-", "2", "]", ">", "test_losses", "[", "-", "3", "]", ")", ":", "\n", "                            ", "early_stop", "=", "True", "\n", "", "if", "(", "test_losses", "[", "-", "2", "]", "-", "test_losses", "[", "-", "1", "]", ")", "<=", "0.0001", "and", "(", "test_losses", "[", "-", "3", "]", "-", "test_losses", "[", "-", "2", "]", ")", "<=", "0.0001", ":", "\n", "                            ", "early_stop", "=", "True", "\n", "\n", "# refresh dataloader if not early stop", "\n", "", "", "", "", "if", "not", "early_stop", ":", "\n", "                ", "train_dataloader", ".", "refresh", "(", ")", "\n", "\n", "# write results", "\n", "", "", "log_dir", "=", "os", ".", "path", ".", "join", "(", "LOG_PATH_PREFIX", ",", "dataset", ",", "str", "(", "s_num", ")", ")", "\n", "log_path", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "'{}.txt'", ".", "format", "(", "model_type", ")", ")", "\n", "with", "open", "(", "log_path", ",", "'a'", ")", "as", "f", ":", "\n", "            ", "results", "=", "[", "model_name", ",", "str", "(", "test_mse_losses", "[", "np", ".", "argmin", "(", "test_rmses", ")", "]", ")", ",", "str", "(", "min", "(", "test_rmses", ")", ")", "]", "\n", "result_line", "=", "'\\t'", ".", "join", "(", "results", ")", "+", "'\\n'", "\n", "logging", ".", "info", "(", "'Result: %s'", "%", "(", "result_line", ")", ")", "\n", "f", ".", "write", "(", "result_line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.ranking_utils.getNDCG_at_K": [[4, 9], ["range", "math.log", "math.log"], "function", ["None"], ["def", "getNDCG_at_K", "(", "ranklist", ",", "target_item", ",", "k", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "        ", "if", "ranklist", "[", "i", "]", "==", "target_item", ":", "\n", "            ", "return", "math", ".", "log", "(", "2", ")", "/", "math", ".", "log", "(", "i", "+", "2", ")", "\n", "", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.ranking_utils.getHR_at_K": [[10, 15], ["None"], "function", ["None"], ["", "def", "getHR_at_K", "(", "ranklist", ",", "target_item", ",", "k", ")", ":", "\n", "    ", "if", "target_item", "in", "ranklist", "[", ":", "k", "]", ":", "\n", "        ", "return", "1", "\n", "", "else", ":", "\n", "        ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.ranking_utils.getMRR": [[16, 21], ["range", "len"], "function", ["None"], ["", "", "def", "getMRR", "(", "ranklist", ",", "target_item", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "len", "(", "ranklist", ")", ")", ":", "\n", "        ", "if", "ranklist", "[", "i", "]", "==", "target_item", ":", "\n", "            ", "return", "1.", "/", "(", "i", "+", "1", ")", "\n", "", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.ranking_utils.get_ranking_quality": [[22, 43], ["numpy.array().reshape().tolist", "numpy.array().reshape().tolist", "[].flatten().tolist", "range", "len", "list", "ndcg_5_val.append", "ndcg_10_val.append", "hr_1_val.append", "hr_5_val.append", "hr_10_val.append", "mrr_val.append", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.array().reshape", "numpy.array().reshape", "[].flatten", "reversed", "ranking_utils.getNDCG_at_K", "ranking_utils.getNDCG_at_K", "ranking_utils.getHR_at_K", "ranking_utils.getHR_at_K", "ranking_utils.getHR_at_K", "ranking_utils.getMRR", "numpy.take", "numpy.array", "numpy.array", "numpy.argsort", "numpy.array().reshape", "numpy.array"], "function", ["home.repos.pwc.inspect_result.qinjr_rim.code.ranking_utils.getNDCG_at_K", "home.repos.pwc.inspect_result.qinjr_rim.code.ranking_utils.getNDCG_at_K", "home.repos.pwc.inspect_result.qinjr_rim.code.ranking_utils.getHR_at_K", "home.repos.pwc.inspect_result.qinjr_rim.code.ranking_utils.getHR_at_K", "home.repos.pwc.inspect_result.qinjr_rim.code.ranking_utils.getHR_at_K", "home.repos.pwc.inspect_result.qinjr_rim.code.ranking_utils.getMRR"], ["", "def", "get_ranking_quality", "(", "preds", ",", "target_iids", ",", "neg_sample", "=", "100", ")", ":", "\n", "    ", "preds", "=", "np", ".", "array", "(", "preds", ")", ".", "reshape", "(", "[", "-", "1", ",", "neg_sample", "+", "1", "]", ")", ".", "tolist", "(", ")", "\n", "target_iids", "=", "np", ".", "array", "(", "target_iids", ")", ".", "reshape", "(", "[", "-", "1", ",", "neg_sample", "+", "1", "]", ")", ".", "tolist", "(", ")", "\n", "pos_iids", "=", "np", ".", "array", "(", "target_iids", ")", ".", "reshape", "(", "[", "-", "1", ",", "neg_sample", "+", "1", "]", ")", "[", ":", ",", "0", "]", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "ndcg_5_val", "=", "[", "]", "\n", "ndcg_10_val", "=", "[", "]", "\n", "hr_1_val", "=", "[", "]", "\n", "hr_5_val", "=", "[", "]", "\n", "hr_10_val", "=", "[", "]", "\n", "mrr_val", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "preds", ")", ")", ":", "\n", "        ", "ranklist", "=", "list", "(", "reversed", "(", "np", ".", "take", "(", "target_iids", "[", "i", "]", ",", "np", ".", "argsort", "(", "preds", "[", "i", "]", ")", ")", ")", ")", "\n", "target_item", "=", "pos_iids", "[", "i", "]", "\n", "ndcg_5_val", ".", "append", "(", "getNDCG_at_K", "(", "ranklist", ",", "target_item", ",", "5", ")", ")", "\n", "ndcg_10_val", ".", "append", "(", "getNDCG_at_K", "(", "ranklist", ",", "target_item", ",", "10", ")", ")", "\n", "hr_1_val", ".", "append", "(", "getHR_at_K", "(", "ranklist", ",", "target_item", ",", "1", ")", ")", "\n", "hr_5_val", ".", "append", "(", "getHR_at_K", "(", "ranklist", ",", "target_item", ",", "5", ")", ")", "\n", "hr_10_val", ".", "append", "(", "getHR_at_K", "(", "ranklist", ",", "target_item", ",", "10", ")", ")", "\n", "mrr_val", ".", "append", "(", "getMRR", "(", "ranklist", ",", "target_item", ")", ")", "\n", "", "return", "np", ".", "mean", "(", "ndcg_5_val", ")", ",", "np", ".", "mean", "(", "ndcg_10_val", ")", ",", "np", ".", "mean", "(", "hr_1_val", ")", ",", "np", ".", "mean", "(", "hr_5_val", ")", ",", "np", ".", "mean", "(", "hr_10_val", ")", ",", "np", ".", "mean", "(", "mrr_val", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.qinjr_rim.code.train_ctr.get_elapsed": [[22, 24], ["time.time"], "function", ["None"], ["def", "get_elapsed", "(", "start_time", ")", ":", "\n", "    ", "return", "time", ".", "time", "(", ")", "-", "start_time", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.train_ctr.eval": [[25, 43], ["time.time", "log_loss", "roc_auc_score", "logging.info", "model.eval", "losses.append", "sum", "len", "time.time"], "function", ["home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.eval"], ["", "def", "eval", "(", "model", ",", "sess", ",", "dataloader", ",", "l2_norm", ")", ":", "\n", "    ", "preds", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "losses", "=", "[", "]", "\n", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "for", "batch_data", "in", "dataloader", ":", "\n", "        ", "pred", ",", "label", ",", "loss", "=", "model", ".", "eval", "(", "sess", ",", "batch_data", ",", "l2_norm", ")", "\n", "preds", "+=", "pred", "\n", "labels", "+=", "label", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "\n", "", "logloss", "=", "log_loss", "(", "labels", ",", "preds", ")", "\n", "auc", "=", "roc_auc_score", "(", "labels", ",", "preds", ")", "\n", "loss", "=", "sum", "(", "losses", ")", "/", "len", "(", "losses", ")", "\n", "\n", "logging", ".", "info", "(", "\"Time of evaluating on the test dataset: %.4fs\"", "%", "(", "time", ".", "time", "(", ")", "-", "t", ")", ")", "\n", "return", "loss", ",", "logloss", ",", "auc", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.train_ctr.train": [[44, 168], ["tf.reset_default_graph", "tf.GPUOptions", "rim.RIM", "logging.info", "exit", "tf.Session", "time.time", "sess.run", "sess.run", "train_ctr.eval", "test_losses.append", "test_log_losses.append", "test_aucs.append", "tf.Summary", "writer.add_summary", "logging.info", "range", "os.path.join", "os.path.join", "tf.global_variables_initializer", "tf.local_variables_initializer", "str", "open", "logging.info", "f.write", "tf.ConfigProto", "logging.info", "rim.RIM.train", "train_dataloader.refresh", "str", "str", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "train_ctr.get_elapsed", "tf.Summary", "writer.add_summary", "logging.info", "test_dataloader.refresh", "train_ctr.eval", "test_losses.append", "test_log_losses.append", "test_aucs.append", "logging.info", "tf.Summary", "writer.add_summary", "max", "max", "os.path.join", "os.path.join", "rim.RIM.save", "str", "os.path.exists", "os.makedirs", "len", "numpy.argmax", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "train_ctr.get_elapsed", "train_ctr.get_elapsed", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value"], "function", ["home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.eval", "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_writer.ESWriter.write", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.train", "home.repos.pwc.inspect_result.qinjr_rim.code.dataloader.DataloaderRIM.refresh", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.get_elapsed", "home.repos.pwc.inspect_result.qinjr_rim.code.dataloader.DataloaderRIM.refresh", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.eval", "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base.save", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.get_elapsed", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.get_elapsed"], ["", "def", "train", "(", "dataset", ",", "\n", "model_type", ",", "\n", "model_name", ",", "\n", "train_dataloader", ",", "\n", "test_dataloader", ",", "\n", "writer", ",", "\n", "max_epoch", ",", "\n", "eval_freq", ",", "\n", "log_freq", ",", "\n", "feature_size", ",", "\n", "eb_dim", ",", "\n", "s_num", ",", "\n", "c_num", ",", "\n", "label_num", ",", "\n", "lr", ",", "\n", "l2_norm", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "if", "model_type", "==", "'RIM'", ":", "\n", "        ", "model", "=", "RIM", "(", "feature_size", ",", "eb_dim", ",", "s_num", ",", "c_num", ",", "label_num", ")", "\n", "", "else", ":", "\n", "        ", "logging", ".", "info", "(", "'WRONG MODEL TYPE'", ")", "\n", "exit", "(", "1", ")", "\n", "\n", "# gpu settings", "\n", "", "gpu_options", "=", "tf", ".", "GPUOptions", "(", "allow_growth", "=", "True", ")", "\n", "\n", "# training process", "\n", "with", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "gpu_options", "=", "gpu_options", ")", ")", "as", "sess", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "sess", ".", "run", "(", "tf", ".", "local_variables_initializer", "(", ")", ")", "\n", "\n", "# before training process, get initial test evaluation", "\n", "step", "=", "0", "# training step", "\n", "log_step", "=", "0", "# training log step", "\n", "eval_step", "=", "0", "# eval step", "\n", "\n", "test_losses", "=", "[", "]", "\n", "test_log_losses", "=", "[", "]", "\n", "test_aucs", "=", "[", "]", "\n", "\n", "test_loss", ",", "test_log_loss", ",", "test_auc", "=", "eval", "(", "model", ",", "sess", ",", "test_dataloader", ",", "l2_norm", ")", "\n", "\n", "test_losses", ".", "append", "(", "test_loss", ")", "\n", "test_log_losses", ".", "append", "(", "test_log_loss", ")", "\n", "test_aucs", ".", "append", "(", "test_auc", ")", "\n", "\n", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_loss'", ",", "simple_value", "=", "test_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_log_loss'", ",", "simple_value", "=", "test_log_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_auc'", ",", "simple_value", "=", "test_auc", ")", "]", ")", "\n", "writer", ".", "add_summary", "(", "summary", ",", "global_step", "=", "eval_step", ")", "\n", "eval_step", "+=", "1", "\n", "\n", "logging", ".", "info", "(", "\"STEP %d  LOSS TEST: %.4f  LOG_LOSS TEST: %.4f AUC TEST: %.4f  ELASPED: %.2fs\"", "%", "(", "step", ",", "test_loss", ",", "test_log_loss", ",", "test_auc", ",", "get_elapsed", "(", "start_time", ")", ")", ")", "\n", "\n", "early_stop", "=", "False", "\n", "\n", "# begin training process", "\n", "for", "epoch", "in", "range", "(", "max_epoch", ")", ":", "\n", "# lr decay", "\n", "            ", "if", "epoch", "!=", "0", ":", "\n", "                ", "lr", "=", "lr", "*", "DECAY_FACTOR", "\n", "logging", ".", "info", "(", "'DECAYED LR IS {}'", ".", "format", "(", "lr", ")", ")", "\n", "", "if", "early_stop", ":", "\n", "                ", "break", "\n", "\n", "", "for", "batch_data", "in", "train_dataloader", ":", "\n", "                ", "if", "early_stop", ":", "\n", "                    ", "break", "\n", "", "train_loss", ",", "train_log_loss", ",", "train_l2_loss", "=", "model", ".", "train", "(", "sess", ",", "batch_data", ",", "lr", ",", "l2_norm", ")", "\n", "step", "+=", "1", "\n", "\n", "if", "step", "%", "log_freq", "==", "0", ":", "\n", "                    ", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'train_loss'", ",", "simple_value", "=", "train_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'train_log_loss'", ",", "simple_value", "=", "train_log_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'train_l2_loss'", ",", "simple_value", "=", "train_l2_loss", ")", "]", ")", "\n", "writer", ".", "add_summary", "(", "summary", ",", "global_step", "=", "log_step", ")", "\n", "log_step", "+=", "1", "\n", "logging", ".", "info", "(", "\"STEP %d  LOSS TRAIN: %.4f  LOG_LOSS TRAIN: %.4f  L2_LOSS TRAIN: %.4f  Elasped: %.2fs\"", "%", "(", "step", ",", "train_loss", ",", "train_log_loss", ",", "train_l2_loss", ",", "get_elapsed", "(", "start_time", ")", ")", ")", "\n", "\n", "", "if", "step", "%", "eval_freq", "==", "0", ":", "\n", "                    ", "test_dataloader", ".", "refresh", "(", ")", "\n", "\n", "test_loss", ",", "test_log_loss", ",", "test_auc", "=", "eval", "(", "model", ",", "sess", ",", "test_dataloader", ",", "l2_norm", ")", "\n", "test_losses", ".", "append", "(", "test_loss", ")", "\n", "test_log_losses", ".", "append", "(", "test_log_loss", ")", "\n", "test_aucs", ".", "append", "(", "test_auc", ")", "\n", "\n", "logging", ".", "info", "(", "\"STEP %d  LOSS TEST: %.4f  LOG_LOSS TEST: %.4f AUC TEST: %.4f  ELASPED: %.2fs\"", "%", "(", "step", ",", "test_loss", ",", "test_log_loss", ",", "test_auc", ",", "get_elapsed", "(", "start_time", ")", ")", ")", "\n", "\n", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_loss'", ",", "simple_value", "=", "test_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_log_loss'", ",", "simple_value", "=", "test_log_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_auc'", ",", "simple_value", "=", "test_auc", ")", "]", ")", "\n", "writer", ".", "add_summary", "(", "summary", ",", "global_step", "=", "eval_step", ")", "\n", "eval_step", "+=", "1", "\n", "\n", "if", "test_aucs", "[", "-", "1", "]", ">", "max", "(", "test_aucs", "[", ":", "-", "1", "]", ")", ":", "\n", "                        ", "model_dir", "=", "os", ".", "path", ".", "join", "(", "SAVE_PATH_PREFIX", ",", "dataset", ",", "str", "(", "s_num", ")", ",", "model_name", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_dir", ")", ":", "\n", "                            ", "os", ".", "makedirs", "(", "model_dir", ")", "\n", "", "model_path", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "'ckpt'", ")", "\n", "model", ".", "save", "(", "sess", ",", "model_path", ")", "\n", "\n", "", "if", "len", "(", "test_losses", ")", ">", "2", "and", "epoch", ">", "0", ":", "\n", "                        ", "if", "(", "test_losses", "[", "-", "1", "]", ">", "test_losses", "[", "-", "2", "]", "and", "test_losses", "[", "-", "2", "]", ">", "test_losses", "[", "-", "3", "]", ")", ":", "\n", "                            ", "early_stop", "=", "True", "\n", "", "if", "(", "test_losses", "[", "-", "2", "]", "-", "test_losses", "[", "-", "1", "]", ")", "<=", "0.0001", "and", "(", "test_losses", "[", "-", "3", "]", "-", "test_losses", "[", "-", "2", "]", ")", "<=", "0.0001", ":", "\n", "                            ", "early_stop", "=", "True", "\n", "\n", "# refresh dataloader if not early stop", "\n", "", "", "", "", "if", "not", "early_stop", ":", "\n", "                ", "train_dataloader", ".", "refresh", "(", ")", "\n", "\n", "# write results", "\n", "", "", "log_dir", "=", "os", ".", "path", ".", "join", "(", "LOG_PATH_PREFIX", ",", "dataset", ",", "str", "(", "s_num", ")", ")", "\n", "log_path", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "'{}.txt'", ".", "format", "(", "model_type", ")", ")", "\n", "with", "open", "(", "log_path", ",", "'a'", ")", "as", "f", ":", "\n", "            ", "results", "=", "[", "model_name", ",", "str", "(", "test_log_losses", "[", "np", ".", "argmax", "(", "test_aucs", ")", "]", ")", ",", "str", "(", "max", "(", "test_aucs", ")", ")", "]", "\n", "result_line", "=", "'\\t'", ".", "join", "(", "results", ")", "+", "'\\n'", "\n", "logging", ".", "info", "(", "'Result: %s'", "%", "(", "result_line", ")", ")", "\n", "f", ".", "write", "(", "result_line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.get_elapsed": [[24, 26], ["time.time"], "function", ["None"], ["def", "get_elapsed", "(", "start_time", ")", ":", "\n", "    ", "return", "time", ".", "time", "(", ")", "-", "start_time", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.eval": [[27, 48], ["time.time", "log_loss", "roc_auc_score", "ranking_utils.get_ranking_quality", "logging.info", "model.eval", "losses.append", "[].tolist", "sum", "len", "time.time", "numpy.array().astype", "numpy.array"], "function", ["home.repos.pwc.inspect_result.qinjr_rim.code.ranking_utils.get_ranking_quality", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.eval"], ["", "def", "eval", "(", "model", ",", "sess", ",", "dataloader", ",", "l2_norm", ",", "ranking_id_c_pos", ")", ":", "\n", "    ", "preds", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "losses", "=", "[", "]", "\n", "ranking_ids", "=", "[", "]", "\n", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "for", "batch_data", "in", "dataloader", ":", "\n", "        ", "pred", ",", "label", ",", "loss", "=", "model", ".", "eval", "(", "sess", ",", "batch_data", ",", "l2_norm", ")", "\n", "preds", "+=", "pred", "\n", "labels", "+=", "label", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "ranking_ids", "+=", "np", ".", "array", "(", "batch_data", "[", "TARGET_POS_IN_BATCH", "]", ")", ".", "astype", "(", "np", ".", "int32", ")", "[", ":", ",", "ranking_id_c_pos", "]", ".", "tolist", "(", ")", "\n", "\n", "", "logloss", "=", "log_loss", "(", "labels", ",", "preds", ")", "\n", "auc", "=", "roc_auc_score", "(", "labels", ",", "preds", ")", "\n", "loss", "=", "sum", "(", "losses", ")", "/", "len", "(", "losses", ")", "\n", "ndcg_5", ",", "ndcg_10", ",", "hr_1", ",", "hr_5", ",", "hr_10", ",", "mrr", "=", "get_ranking_quality", "(", "preds", ",", "ranking_ids", ")", "\n", "\n", "logging", ".", "info", "(", "\"Time of evaluating on the test dataset: %.4fs\"", "%", "(", "time", ".", "time", "(", ")", "-", "t", ")", ")", "\n", "return", "loss", ",", "logloss", ",", "auc", ",", "ndcg_5", ",", "ndcg_10", ",", "hr_1", ",", "hr_5", ",", "hr_10", ",", "mrr", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.train": [[50, 199], ["tf.reset_default_graph", "tf.GPUOptions", "rim.RIM", "logging.info", "exit", "tf.Session", "time.time", "sess.run", "sess.run", "train_rec.eval", "test_losses.append", "test_ndcg_5s.append", "test_ndcg_10s.append", "test_hr_1s.append", "test_hr_5s.append", "test_hr_10s.append", "test_mrrs.append", "tf.Summary", "writer.add_summary", "logging.info", "range", "os.path.join", "os.path.join", "tf.global_variables_initializer", "tf.local_variables_initializer", "str", "open", "logging.info", "f.write", "tf.ConfigProto", "rim.RIM.train", "train_dataloader.refresh", "str", "str", "str", "str", "str", "str", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "train_rec.get_elapsed", "tf.Summary", "writer.add_summary", "logging.info", "test_dataloader.refresh", "train_rec.eval", "test_losses.append", "test_ndcg_5s.append", "test_ndcg_10s.append", "test_hr_1s.append", "test_hr_5s.append", "test_hr_10s.append", "test_mrrs.append", "logging.info", "tf.Summary", "writer.add_summary", "max", "max", "os.path.join", "os.path.join", "rim.RIM.save", "str", "os.path.exists", "os.makedirs", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "train_rec.get_elapsed", "train_rec.get_elapsed", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value", "tf.Summary.Value"], "function", ["home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.eval", "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_writer.ESWriter.write", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.train", "home.repos.pwc.inspect_result.qinjr_rim.code.dataloader.DataloaderRIM.refresh", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.get_elapsed", "home.repos.pwc.inspect_result.qinjr_rim.code.dataloader.DataloaderRIM.refresh", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.eval", "home.repos.pwc.inspect_result.qinjr_rim.code.rim.Base.save", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.get_elapsed", "home.repos.pwc.inspect_result.qinjr_rim.code.train_rec.get_elapsed"], ["", "def", "train", "(", "dataset", ",", "\n", "model_type", ",", "\n", "model_name", ",", "\n", "train_dataloader", ",", "\n", "test_dataloader", ",", "\n", "writer", ",", "\n", "max_epoch", ",", "\n", "eval_freq", ",", "\n", "log_freq", ",", "\n", "feature_size", ",", "\n", "eb_dim", ",", "\n", "s_num", ",", "\n", "c_num", ",", "\n", "label_num", ",", "\n", "lr", ",", "\n", "l2_norm", ",", "\n", "ranking_id_c_pos", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "if", "model_type", "==", "'RIM'", ":", "\n", "        ", "model", "=", "RIM", "(", "feature_size", ",", "eb_dim", ",", "s_num", ",", "c_num", ",", "label_num", ")", "\n", "", "else", ":", "\n", "        ", "logging", ".", "info", "(", "'WRONG MODEL TYPE'", ")", "\n", "exit", "(", "1", ")", "\n", "\n", "# gpu settings", "\n", "", "gpu_options", "=", "tf", ".", "GPUOptions", "(", "allow_growth", "=", "True", ")", "\n", "\n", "# training process", "\n", "with", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "gpu_options", "=", "gpu_options", ")", ")", "as", "sess", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "sess", ".", "run", "(", "tf", ".", "local_variables_initializer", "(", ")", ")", "\n", "\n", "# before training process, get initial test evaluation", "\n", "step", "=", "0", "# training step", "\n", "log_step", "=", "0", "# training log step", "\n", "eval_step", "=", "0", "# eval step", "\n", "\n", "test_losses", "=", "[", "]", "\n", "test_log_losses", "=", "[", "]", "\n", "test_ndcg_5s", "=", "[", "]", "\n", "test_ndcg_10s", "=", "[", "]", "\n", "test_hr_1s", "=", "[", "]", "\n", "test_hr_5s", "=", "[", "]", "\n", "test_hr_10s", "=", "[", "]", "\n", "test_mrrs", "=", "[", "]", "\n", "\n", "test_loss", ",", "test_log_loss", ",", "test_auc", ",", "ndcg_5", ",", "ndcg_10", ",", "hr_1", ",", "hr_5", ",", "hr_10", ",", "mrr", "=", "eval", "(", "model", ",", "sess", ",", "test_dataloader", ",", "l2_norm", ",", "ranking_id_c_pos", ")", "\n", "\n", "test_losses", ".", "append", "(", "test_loss", ")", "\n", "\n", "test_ndcg_5s", ".", "append", "(", "ndcg_5", ")", "\n", "test_ndcg_10s", ".", "append", "(", "ndcg_10", ")", "\n", "test_hr_1s", ".", "append", "(", "hr_1", ")", "\n", "test_hr_5s", ".", "append", "(", "hr_5", ")", "\n", "test_hr_10s", ".", "append", "(", "hr_10", ")", "\n", "test_mrrs", ".", "append", "(", "mrr", ")", "\n", "\n", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_loss'", ",", "simple_value", "=", "test_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_log_loss'", ",", "simple_value", "=", "test_log_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_auc'", ",", "simple_value", "=", "test_auc", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_ndcg@5'", ",", "simple_value", "=", "ndcg_5", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_ndcg@10'", ",", "simple_value", "=", "ndcg_10", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_hr@1'", ",", "simple_value", "=", "hr_1", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_hr@5'", ",", "simple_value", "=", "hr_5", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_hr@10'", ",", "simple_value", "=", "hr_10", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_mrr'", ",", "simple_value", "=", "mrr", ")", "]", ")", "\n", "writer", ".", "add_summary", "(", "summary", ",", "global_step", "=", "eval_step", ")", "\n", "eval_step", "+=", "1", "\n", "\n", "logging", ".", "info", "(", "\"STEP %d  LOSS TEST: %.4f  LOG_LOSS TEST: %.4f AUC TEST: %.4f  NDCG@5: %.4f  NDCG@10: %.4f  HR@1: %.4f  HR@5: %.4f  HR@10: %.4f  MRR: %.4f  ELASPED: %.2fs\"", "%", "(", "step", ",", "test_loss", ",", "test_log_loss", ",", "test_auc", ",", "ndcg_5", ",", "ndcg_10", ",", "hr_1", ",", "hr_5", ",", "hr_10", ",", "mrr", ",", "get_elapsed", "(", "start_time", ")", ")", ")", "\n", "\n", "early_stop", "=", "False", "\n", "\n", "# begin training process", "\n", "for", "epoch", "in", "range", "(", "max_epoch", ")", ":", "\n", "            ", "if", "early_stop", ":", "\n", "                ", "break", "\n", "\n", "", "for", "batch_data", "in", "train_dataloader", ":", "\n", "                ", "if", "early_stop", ":", "\n", "                    ", "break", "\n", "", "train_loss", ",", "train_log_loss", ",", "train_l2_loss", "=", "model", ".", "train", "(", "sess", ",", "batch_data", ",", "lr", ",", "l2_norm", ")", "\n", "step", "+=", "1", "\n", "\n", "if", "step", "%", "log_freq", "==", "0", ":", "\n", "                    ", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'train_loss'", ",", "simple_value", "=", "train_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'train_log_loss'", ",", "simple_value", "=", "train_log_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'train_l2_loss'", ",", "simple_value", "=", "train_l2_loss", ")", "]", ")", "\n", "writer", ".", "add_summary", "(", "summary", ",", "global_step", "=", "log_step", ")", "\n", "log_step", "+=", "1", "\n", "logging", ".", "info", "(", "\"STEP %d  LOSS TRAIN: %.4f  LOG_LOSS TRAIN: %.4f  L2_LOSS TRAIN: %.4f  Elasped: %.2fs\"", "%", "(", "step", ",", "train_loss", ",", "train_log_loss", ",", "train_l2_loss", ",", "get_elapsed", "(", "start_time", ")", ")", ")", "\n", "\n", "", "if", "step", "%", "eval_freq", "==", "0", ":", "\n", "                    ", "test_dataloader", ".", "refresh", "(", ")", "\n", "\n", "test_loss", ",", "test_log_loss", ",", "test_auc", ",", "ndcg_5", ",", "ndcg_10", ",", "hr_1", ",", "hr_5", ",", "hr_10", ",", "mrr", "=", "eval", "(", "model", ",", "sess", ",", "test_dataloader", ",", "l2_norm", ",", "ranking_id_c_pos", ")", "\n", "test_losses", ".", "append", "(", "test_loss", ")", "\n", "\n", "test_ndcg_5s", ".", "append", "(", "ndcg_5", ")", "\n", "test_ndcg_10s", ".", "append", "(", "ndcg_10", ")", "\n", "test_hr_1s", ".", "append", "(", "hr_1", ")", "\n", "test_hr_5s", ".", "append", "(", "hr_5", ")", "\n", "test_hr_10s", ".", "append", "(", "hr_10", ")", "\n", "test_mrrs", ".", "append", "(", "mrr", ")", "\n", "\n", "logging", ".", "info", "(", "\"STEP %d  LOSS TEST: %.4f  LOG_LOSS TEST: %.4f AUC TEST: %.4f  NDCG@5: %.4f  NDCG@10: %.4f  HR@1: %.4f  HR@5: %.4f  HR@10: %.4f  MRR: %.4f  ELASPED: %.2fs\"", "%", "(", "step", ",", "test_loss", ",", "test_log_loss", ",", "test_auc", ",", "ndcg_5", ",", "ndcg_10", ",", "hr_1", ",", "hr_5", ",", "hr_10", ",", "mrr", ",", "get_elapsed", "(", "start_time", ")", ")", ")", "\n", "\n", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_loss'", ",", "simple_value", "=", "test_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_log_loss'", ",", "simple_value", "=", "test_log_loss", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_auc'", ",", "simple_value", "=", "test_auc", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_ndcg@5'", ",", "simple_value", "=", "ndcg_5", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_ndcg@10'", ",", "simple_value", "=", "ndcg_10", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_hr@1'", ",", "simple_value", "=", "hr_1", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_hr@5'", ",", "simple_value", "=", "hr_5", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_hr@10'", ",", "simple_value", "=", "hr_10", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'test_mrr'", ",", "simple_value", "=", "mrr", ")", "]", ")", "\n", "\n", "writer", ".", "add_summary", "(", "summary", ",", "global_step", "=", "eval_step", ")", "\n", "eval_step", "+=", "1", "\n", "\n", "if", "test_mrrs", "[", "-", "1", "]", ">", "max", "(", "test_mrrs", "[", ":", "-", "1", "]", ")", ":", "\n", "                        ", "model_dir", "=", "os", ".", "path", ".", "join", "(", "SAVE_PATH_PREFIX", ",", "dataset", ",", "str", "(", "s_num", ")", ",", "model_name", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_dir", ")", ":", "\n", "                            ", "os", ".", "makedirs", "(", "model_dir", ")", "\n", "", "model_path", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "'ckpt'", ")", "\n", "model", ".", "save", "(", "sess", ",", "model_path", ")", "\n", "\n", "# if len(test_losses) > 2 and epoch > 0:", "\n", "#     if (test_losses[-1] > test_losses[-2] and test_losses[-2] > test_losses[-3]):", "\n", "#         early_stop = True", "\n", "#     if (test_losses[-2] - test_losses[-1]) <= 0.0001 and (test_losses[-3] - test_losses[-2]) <= 0.0001:", "\n", "#         early_stop = True", "\n", "\n", "# refresh dataloader if not early stop", "\n", "", "", "", "if", "not", "early_stop", ":", "\n", "                ", "train_dataloader", ".", "refresh", "(", ")", "\n", "\n", "# write results", "\n", "", "", "log_dir", "=", "os", ".", "path", ".", "join", "(", "LOG_PATH_PREFIX", ",", "dataset", ",", "str", "(", "s_num", ")", ")", "\n", "log_path", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "'{}.txt'", ".", "format", "(", "model_type", ")", ")", "\n", "with", "open", "(", "log_path", ",", "'a'", ")", "as", "f", ":", "\n", "            ", "results", "=", "[", "model_name", ",", "str", "(", "test_ndcg_5s", "[", "np", ".", "argmax", "(", "test_mrrs", ")", "]", ")", ",", "str", "(", "test_ndcg_10s", "[", "np", ".", "argmax", "(", "test_mrrs", ")", "]", ")", ",", "str", "(", "test_hr_1s", "[", "np", ".", "argmax", "(", "test_mrrs", ")", "]", ")", ",", "str", "(", "test_hr_5s", "[", "np", ".", "argmax", "(", "test_mrrs", ")", "]", ")", ",", "str", "(", "test_hr_10s", "[", "np", ".", "argmax", "(", "test_mrrs", ")", "]", ")", ",", "str", "(", "max", "(", "test_mrrs", ")", ")", "]", "\n", "result_line", "=", "'\\t'", ".", "join", "(", "results", ")", "+", "'\\n'", "\n", "logging", ".", "info", "(", "'Result: %s'", "%", "(", "result_line", ")", ")", "\n", "f", ".", "write", "(", "result_line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.dataloader.DataloaderRIM.__init__": [[12, 54], ["logging.info", "list", "logging.info", "len", "map", "open", "f.readlines", "open", "f.readlines", "open", "f.readlines", "open", "f.readlines", "dataloader.DataloaderRIM.search_pool.append", "logging.info", "dataloader.DataloaderRIM._shuffle_data", "logging.info", "int", "remap_c_pos_list.split", "int", "int", "l[].split", "len", "dataloader.DataloaderRIM.search_pool[].split"], "methods", ["home.repos.pwc.inspect_result.qinjr_rim.code.dataloader.DataloaderRIM._shuffle_data"], ["    ", "def", "__init__", "(", "self", ",", "\n", "batch_size", ",", "\n", "remap_c_pos_list", ",", "\n", "s_num", ",", "\n", "target_file", ",", "\n", "search_res_col_file", ",", "\n", "search_res_label_file", ",", "\n", "search_pool_file", ",", "\n", "shuffle", ")", ":", "\n", "\n", "        ", "logging", ".", "info", "(", "'dataloader_rim initializing...'", ")", "\n", "self", ".", "remap_c_pos_list", "=", "list", "(", "map", "(", "int", ",", "remap_c_pos_list", ".", "split", "(", "','", ")", ")", ")", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "s_num", "=", "s_num", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "\n", "with", "open", "(", "target_file", ")", "as", "f", ":", "\n", "            ", "self", ".", "target", "=", "f", ".", "readlines", "(", ")", "\n", "self", ".", "labels", "=", "[", "int", "(", "l", "[", ":", "-", "1", "]", ".", "split", "(", "','", ")", "[", "-", "1", "]", ")", "for", "l", "in", "self", ".", "target", "]", "\n", "", "with", "open", "(", "search_res_col_file", ")", "as", "f", ":", "\n", "            ", "self", ".", "search_res_col", "=", "f", ".", "readlines", "(", ")", "\n", "", "with", "open", "(", "search_res_label_file", ")", "as", "f", ":", "\n", "            ", "self", ".", "search_res_label", "=", "f", ".", "readlines", "(", ")", "\n", "", "with", "open", "(", "search_pool_file", ")", "as", "f", ":", "\n", "            ", "self", ".", "search_pool", "=", "f", ".", "readlines", "(", ")", "\n", "self", ".", "search_pool", ".", "append", "(", "','", ".", "join", "(", "[", "'0'", "]", "*", "len", "(", "self", ".", "search_pool", "[", "0", "]", ".", "split", "(", "','", ")", ")", ")", ")", "\n", "\n", "", "logging", ".", "info", "(", "'data loaded'", ")", "\n", "\n", "# shuffle", "\n", "if", "self", ".", "shuffle", ":", "\n", "            ", "logging", ".", "info", "(", "'random shuffle...'", ")", "\n", "self", ".", "_shuffle_data", "(", ")", "\n", "logging", ".", "info", "(", "'random shuffle finished'", ")", "\n", "\n", "", "self", ".", "dataset_size", "=", "len", "(", "self", ".", "target", ")", "\n", "\n", "if", "self", ".", "dataset_size", "%", "self", ".", "batch_size", "==", "0", ":", "\n", "            ", "self", ".", "total_step", "=", "int", "(", "self", ".", "dataset_size", "/", "self", ".", "batch_size", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "total_step", "=", "int", "(", "self", ".", "dataset_size", "/", "self", ".", "batch_size", ")", "+", "1", "\n", "", "self", ".", "step", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.dataloader.DataloaderRIM.__iter__": [[55, 57], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.dataloader.DataloaderRIM.__next__": [[58, 98], ["utils.select_pos_list", "list", "list", "len", "search_res_len_batch.append", "search_res_batch.append", "l.split", "map", "map", "search_res_s.append", "l.split", "l.split", "utils.select_pos_list", "len", "dataloader.DataloaderRIM.search_pool[].split"], "methods", ["home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.select_pos_list", "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.select_pos_list"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "step", "==", "self", ".", "total_step", ":", "\n", "            ", "raise", "StopIteration", "\n", "\n", "", "range_left", "=", "self", ".", "batch_size", "*", "self", ".", "step", "\n", "if", "self", ".", "step", "==", "self", ".", "total_step", "-", "1", ":", "\n", "            ", "range_right", "=", "self", ".", "dataset_size", "\n", "", "else", ":", "\n", "            ", "range_right", "=", "self", ".", "batch_size", "*", "(", "self", ".", "step", "+", "1", ")", "\n", "\n", "", "label_batch", "=", "self", ".", "labels", "[", "range_left", ":", "range_right", "]", "\n", "target_batch", "=", "self", ".", "target", "[", "range_left", ":", "range_right", "]", "\n", "target_batch", "=", "[", "select_pos_list", "(", "l", ".", "split", "(", "','", ")", ",", "self", ".", "remap_c_pos_list", ")", "for", "l", "in", "target_batch", "]", "\n", "\n", "search_res_label_batch", "=", "self", ".", "search_res_label", "[", "range_left", ":", "range_right", "]", "\n", "search_res_label_batch", "=", "[", "list", "(", "map", "(", "int", ",", "l", ".", "split", "(", "','", ")", ")", ")", "for", "l", "in", "search_res_label_batch", "]", "\n", "search_res_label_batch", "=", "[", "l", "+", "[", "'0'", "]", "*", "(", "self", ".", "s_num", "-", "len", "(", "l", ")", ")", "for", "l", "in", "search_res_label_batch", "]", "\n", "\n", "search_res_col_batch", "=", "self", ".", "search_res_col", "[", "range_left", ":", "range_right", "]", "\n", "search_res_col_batch", "=", "[", "list", "(", "map", "(", "int", ",", "l", ".", "split", "(", "','", ")", ")", ")", "for", "l", "in", "search_res_col_batch", "]", "\n", "\n", "search_res_batch", "=", "[", "]", "\n", "search_res_len_batch", "=", "[", "]", "\n", "\n", "for", "search_res_linenos", "in", "search_res_col_batch", ":", "\n", "            ", "search_res_s", "=", "[", "]", "\n", "for", "lineno", "in", "search_res_linenos", ":", "\n", "                ", "search_res_s", ".", "append", "(", "select_pos_list", "(", "self", ".", "search_pool", "[", "lineno", "]", ".", "split", "(", "','", ")", ",", "self", ".", "remap_c_pos_list", ")", ")", "\n", "\n", "\n", "", "length", "=", "len", "(", "search_res_s", ")", "\n", "search_res_len_batch", ".", "append", "(", "length", ")", "\n", "\n", "if", "length", "<", "self", ".", "s_num", ":", "\n", "                ", "search_res_s", "+=", "[", "search_res_s", "[", "0", "]", "]", "*", "(", "self", ".", "s_num", "-", "length", ")", "\n", "\n", "", "search_res_batch", ".", "append", "(", "search_res_s", ")", "\n", "", "self", ".", "step", "+=", "1", "\n", "\n", "return", "search_res_batch", ",", "search_res_label_batch", ",", "search_res_len_batch", ",", "target_batch", ",", "label_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.dataloader.DataloaderRIM.refresh": [[99, 105], ["logging.info", "logging.info", "dataloader.DataloaderRIM._shuffle_data"], "methods", ["home.repos.pwc.inspect_result.qinjr_rim.code.dataloader.DataloaderRIM._shuffle_data"], ["", "def", "refresh", "(", "self", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'refreshing...'", ")", "\n", "self", ".", "step", "=", "0", "\n", "if", "self", ".", "shuffle", ":", "\n", "            ", "self", ".", "_shuffle_data", "(", ")", "\n", "", "logging", ".", "info", "(", "'refreshed'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.dataloader.DataloaderRIM._shuffle_data": [[106, 110], ["list", "random.shuffle", "zip", "zip"], "methods", ["None"], ["", "def", "_shuffle_data", "(", "self", ")", ":", "\n", "        ", "zipped", "=", "list", "(", "zip", "(", "self", ".", "target", ",", "self", ".", "search_res_col", ",", "self", ".", "search_res_label", ",", "self", ".", "labels", ")", ")", "\n", "random", ".", "shuffle", "(", "zipped", ")", "\n", "self", ".", "target", ",", "self", ".", "search_res_col", ",", "self", ".", "search_res_label", ",", "self", ".", "labels", "=", "zip", "(", "*", "zipped", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.utils.dump_pkl": [[6, 10], ["print", "open", "pickle.dump"], "function", ["None"], ["def", "dump_pkl", "(", "filename", ",", "obj", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pkl", ".", "dump", "(", "obj", ",", "f", ")", "\n", "", "print", "(", "'{} dumped'", ".", "format", "(", "filename", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.utils.dump_lines": [[11, 15], ["print", "open", "f.writelines"], "function", ["None"], ["", "def", "dump_lines", "(", "filename", ",", "lines", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "writelines", "(", "lines", ")", "\n", "", "print", "(", "'{} writelines completed'", ".", "format", "(", "filename", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.utils.sampling": [[16, 24], ["utils.dump_lines", "open", "tqdm.tqdm", "random.randint", "int", "sampled_lines.append"], "function", ["home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_lines"], ["", "def", "sampling", "(", "ori_file", ",", "sampled_file", ",", "rate", ")", ":", "\n", "    ", "sampled_lines", "=", "[", "]", "\n", "with", "open", "(", "ori_file", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "tqdm", "(", "f", ")", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "1", ",", "int", "(", "1", "/", "rate", ")", ")", "\n", "if", "r", "==", "1", ":", "\n", "                ", "sampled_lines", ".", "append", "(", "line", ")", "\n", "", "", "", "dump_lines", "(", "sampled_file", ",", "sampled_lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.utils.select_pos_list": [[25, 27], ["[].tolist", "numpy.array"], "function", ["None"], ["", "def", "select_pos_list", "(", "input_list", ",", "pos_list", ")", ":", "\n", "    ", "return", "np", ".", "array", "(", "input_list", ")", "[", "pos_list", "]", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.code.utils.select_pos_str": [[28, 30], ["[].tolist", "numpy.array", "input_str.split"], "function", ["None"], ["", "def", "select_pos_str", "(", "input_str", ",", "pos_list", ")", ":", "\n", "    ", "return", "','", ".", "join", "(", "np", ".", "array", "(", "input_str", ".", "split", "(", "','", ")", ")", "[", "pos_list", "]", ".", "tolist", "(", ")", ")", "", "", ""]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.pre_search.pre_search_rim": [[7, 24], ["tqdm.tqdm", "data_ppl_utils.dump_lines", "data_ppl_utils.dump_lines", "es_reader.query_rim1"], "function", ["home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_lines", "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_lines", "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_reader.ESReader.query_rim1"], ["def", "pre_search_rim", "(", "query_generator", ",", "\n", "es_reader", ",", "\n", "search_res_col_file", ",", "\n", "search_res_label_file", ")", ":", "\n", "    ", "search_res_col_lines", "=", "[", "]", "\n", "search_res_label_lines", "=", "[", "]", "\n", "\n", "for", "batch", "in", "tqdm", "(", "query_generator", ")", ":", "\n", "        ", "q_batch", ",", "_", "=", "batch", "\n", "res_lineno_batch", ",", "label_batch", "=", "es_reader", ".", "query_rim1", "(", "q_batch", ")", "\n", "\n", "\n", "search_res_col_lines", "+=", "[", "(", "','", ".", "join", "(", "res", ")", "+", "'\\n'", ")", "for", "res", "in", "res_lineno_batch", "]", "\n", "search_res_label_lines", "+=", "[", "(", "','", ".", "join", "(", "label", ")", "+", "'\\n'", ")", "for", "label", "in", "label_batch", "]", "\n", "\n", "", "dump_lines", "(", "search_res_col_file", ",", "search_res_col_lines", ")", "\n", "dump_lines", "(", "search_res_label_file", ",", "search_res_label_lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_writer.ESWriter.__init__": [[11, 26], ["elasticsearch.Elasticsearch", "es_writer.ESWriter.es.indices.delete", "es_writer.ESWriter._create_index"], "methods", ["home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_writer.ESWriter._create_index"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_file", ",", "\n", "index_name", ",", "\n", "sync_c_pos", ",", "\n", "host_url", "=", "'localhost:9200'", ")", ":", "\n", "\n", "        ", "self", ".", "input_file", "=", "input_file", "\n", "self", ".", "es", "=", "Elasticsearch", "(", "host_url", ")", "\n", "self", ".", "index_name", "=", "index_name", "\n", "self", ".", "sync_c_pos", "=", "sync_c_pos", "\n", "\n", "# delete if there is existing index", "\n", "self", ".", "es", ".", "indices", ".", "delete", "(", "index", "=", "self", ".", "index_name", ",", "ignore", "=", "[", "400", ",", "404", "]", ")", "\n", "# create index", "\n", "self", ".", "_create_index", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_writer.ESWriter._create_index": [[27, 56], ["es_writer.ESWriter.es.indices.create", "print"], "methods", ["None"], ["", "def", "_create_index", "(", "self", ")", ":", "\n", "        ", "self", ".", "create_index_body", "=", "{", "\n", "\"settings\"", ":", "{", "\n", "\"analysis\"", ":", "{", "\n", "\"analyzer\"", ":", "{", "\n", "\"my_analyzer\"", ":", "{", "\n", "\"tokenizer\"", ":", "\"my_tokenizer\"", "\n", "}", "\n", "}", ",", "\n", "\"tokenizer\"", ":", "{", "\n", "\"my_tokenizer\"", ":", "{", "\n", "\"type\"", ":", "\"pattern\"", ",", "\n", "\"pattern\"", ":", "\",\"", "\n", "}", "\n", "}", "\n", "}", ",", "\n", "}", ",", "\n", "\"mappings\"", ":", "{", "\n", "\"properties\"", ":", "{", "\n", "\"line\"", ":", "{", "\n", "\"type\"", ":", "\"text\"", ",", "\n", "'analyzer'", ":", "'my_analyzer'", ",", "\n", "'search_analyzer'", ":", "'my_analyzer'", "\n", "}", "\n", "}", "\n", "}", ",", "\n", "}", "\n", "self", ".", "es", ".", "indices", ".", "create", "(", "index", "=", "self", ".", "index_name", ",", "body", "=", "self", ".", "create_index_body", ",", "ignore", "=", "400", ")", "\n", "print", "(", "'index created'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_writer.ESWriter.write": [[57, 103], ["time.time", "print", "print", "open", "line[].split", "docs.append", "elasticsearch.helpers.bulk", "len", "elasticsearch.helpers.bulk", "time.time", "print"], "methods", ["None"], ["", "def", "write", "(", "self", ")", ":", "\n", "        ", "t", "=", "time", ".", "time", "(", ")", "\n", "with", "open", "(", "self", ".", "input_file", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "docs", "=", "[", "]", "\n", "batch_num", "=", "0", "\n", "line_no", "=", "0", "\n", "for", "line", "in", "f", ":", "\n", "                ", "line_str", "=", "line", "[", ":", "-", "1", "]", "\n", "line_item", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "','", ")", "\n", "sync_id", "=", "line_item", "[", "self", ".", "sync_c_pos", "]", "\n", "label", "=", "line_item", "[", "-", "1", "]", "\n", "\n", "doc", "=", "{", "\n", "'sync_id'", ":", "sync_id", ",", "\n", "'label'", ":", "label", ",", "\n", "'line'", ":", "line_str", ",", "\n", "'line_no'", ":", "line_no", "\n", "}", "\n", "docs", ".", "append", "(", "doc", ")", "\n", "line_no", "+=", "1", "\n", "\n", "if", "len", "(", "docs", ")", "==", "1000", ":", "\n", "                    ", "actions", "=", "[", "{", "\n", "'_op_type'", ":", "'index'", ",", "\n", "'_index'", ":", "self", ".", "index_name", ",", "\n", "'_source'", ":", "d", "\n", "}", "\n", "for", "d", "in", "docs", "]", "\n", "elasticsearch", ".", "helpers", ".", "bulk", "(", "self", ".", "es", ",", "actions", ")", "\n", "batch_num", "+=", "1", "\n", "docs", "=", "[", "]", "\n", "if", "batch_num", "%", "1000", "==", "0", ":", "\n", "                        ", "print", "(", "'{} data samples have been inserted'", ".", "format", "(", "batch_num", "*", "1000", ")", ")", "\n", "\n", "# the last bulk", "\n", "", "", "", "if", "docs", "!=", "[", "]", ":", "\n", "                ", "actions", "=", "[", "{", "\n", "'_op_type'", ":", "'index'", ",", "\n", "'_index'", ":", "self", ".", "index_name", ",", "\n", "'_source'", ":", "d", "\n", "}", "\n", "for", "d", "in", "docs", "]", "\n", "elasticsearch", ".", "helpers", ".", "bulk", "(", "self", ".", "es", ",", "actions", ")", "\n", "\n", "", "", "print", "(", "'data insert time: %.2f seconds'", "%", "(", "time", ".", "time", "(", ")", "-", "t", ")", ")", "\n", "print", "(", "'last line_no is {}'", ".", "format", "(", "line_no", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.hori_split.timestr2timestamp": [[15, 17], ["int", "time.mktime", "datetime.datetime.strptime().timetuple", "datetime.datetime.strptime"], "function", ["None"], ["def", "timestr2timestamp", "(", "tstr", ",", "time_format", ")", ":", "\n", "    ", "return", "int", "(", "time", ".", "mktime", "(", "datetime", ".", "datetime", ".", "strptime", "(", "tstr", ",", "time_format", ")", ".", "timetuple", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.hori_split.split_tabular": [[18, 208], ["list", "logging.info", "split_time_points.split", "logging.info", "set", "list", "logging.info", "logging.info", "logging.info", "logging.info", "len", "len", "len", "logging.info", "logging.info", "logging.info", "tqdm.tqdm", "logging.info", "tqdm.tqdm", "logging.info", "tqdm.tqdm", "data_ppl_utils.dump_pkl", "len", "len", "len", "logging.info", "logging.info", "logging.info", "logging.info", "random.shuffle", "data_ppl_utils.dump_lines", "data_ppl_utils.dump_lines", "data_ppl_utils.dump_lines", "logging.info", "data_ppl_utils.dump_pkl", "map", "open", "pickle.load", "list", "list", "open", "tqdm.tqdm", "enumerate", "line[].split", "sync_seq_dict[].sort", "logging.info", "logging.info", "tqdm.tqdm", "logging.info", "tqdm.tqdm", "logging.info", "logging.info", "tqdm.tqdm", "logging.info", "random.shuffle", "random.shuffle", "list.split", "map", "map", "line[].split", "len", "len", "len", "len", "sync_seq_dict[].append", "open", "pickle.load", "line[].split", "random.choice().split", "enumerate", "search_pool_lines_neg.append", "line[].split", "range", "line[].split", "range", "len", "len", "len", "int", "hori_split.timestr2timestamp", "search_pool_lines.append", "ts_search_pool.append", "[].tolist", "random.randint", "enumerate", "target_train_lines_dump.append", "random.randint", "enumerate", "target_test_lines_dump.append", "hori_split.timestr2timestamp", "set.add", "target_test_lines.append", "set.add", "target_train_lines.append", "random.choice", "int", "random.choice().split", "int", "random.choice().split", "[].split", "random.choice().split", "[].split", "random.choice().split", "numpy.array", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice"], "function", ["home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_pkl", "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_lines", "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_lines", "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_lines", "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_pkl", "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.hori_split.timestr2timestamp", "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.hori_split.timestr2timestamp"], ["", "def", "split_tabular", "(", "tabular_file", ",", "\n", "sampling_collection_file", ",", "\n", "is_timestamp_flag", ",", "\n", "neg_sample_flag", ",", "\n", "label_flag", ",", "\n", "timestamp_pos", ",", "\n", "sync_c_pos", ",", "\n", "split_time_points", ",", "\n", "sampling_c_pos_list", ",", "\n", "time_format", ",", "\n", "search_pool_file", ",", "\n", "target_train_file", ",", "\n", "target_test_file", ",", "\n", "sync_seq_dict_file", ",", "\n", "dataset_summary_file", ",", "\n", "sfh_rate", ",", "\n", "neg_sample_num", ",", "\n", "shuffle_target", ")", ":", "\n", "\n", "    ", "sampling_c_pos_list", "=", "list", "(", "map", "(", "int", ",", "sampling_c_pos_list", ".", "split", "(", "','", ")", ")", ")", "\n", "with", "open", "(", "dataset_summary_file", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "summary", "=", "pkl", ".", "load", "(", "f", ")", "\n", "\n", "# phase 1: split the tabular file horizontally using the given time points", "\n", "", "logging", ".", "info", "(", "'phase 1: split the tabular file horizontally using split time points...'", ")", "\n", "\n", "# get split time points", "\n", "split_tps", "=", "split_time_points", ".", "split", "(", "','", ")", "\n", "if", "is_timestamp_flag", ":", "\n", "        ", "split_tps", "=", "list", "(", "map", "(", "int", ",", "split_tps", ")", ")", "\n", "", "else", ":", "\n", "        ", "split_tps", "=", "list", "(", "map", "(", "lambda", "x", ":", "timestr2timestamp", "(", "x", ",", "time_format", ")", ",", "split_tps", ")", ")", "\n", "\n", "", "logging", ".", "info", "(", "'time points for cutting search pool, target train and target test is {} and {}'", ".", "format", "(", "split_tps", "[", "0", "]", ",", "split_tps", "[", "1", "]", ")", ")", "\n", "\n", "target_train_lines", "=", "[", "]", "\n", "target_test_lines", "=", "[", "]", "\n", "search_pool_lines", "=", "[", "]", "\n", "\n", "ts_search_pool", "=", "[", "]", "\n", "target_sync_ids_set", "=", "set", "(", ")", "\n", "\n", "with", "open", "(", "tabular_file", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "tqdm", "(", "f", ")", ":", "\n", "            ", "line_split", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "','", ")", "\n", "ts", "=", "line_split", "[", "timestamp_pos", "]", "\n", "if", "is_timestamp_flag", ":", "\n", "                ", "ts", "=", "int", "(", "ts", ")", "\n", "", "else", ":", "\n", "                ", "ts", "=", "timestr2timestamp", "(", "ts", ",", "time_format", ")", "\n", "\n", "", "if", "not", "label_flag", ":", "\n", "                ", "newline", "=", "','", ".", "join", "(", "line_split", "+", "[", "'1'", "]", ")", "+", "'\\n'", "\n", "", "else", ":", "\n", "                ", "newline", "=", "line", "\n", "\n", "", "if", "ts", "<", "split_tps", "[", "0", "]", ":", "\n", "                ", "search_pool_lines", ".", "append", "(", "newline", ")", "\n", "ts_search_pool", ".", "append", "(", "ts", ")", "\n", "", "elif", "ts", ">=", "split_tps", "[", "1", "]", ":", "\n", "                ", "target_sync_ids_set", ".", "add", "(", "line_split", "[", "sync_c_pos", "]", ")", "\n", "target_test_lines", ".", "append", "(", "newline", ")", "\n", "", "else", ":", "\n", "                ", "target_sync_ids_set", ".", "add", "(", "line_split", "[", "sync_c_pos", "]", ")", "\n", "target_train_lines", ".", "append", "(", "newline", ")", "\n", "\n", "", "", "", "target_sync_ids", "=", "list", "(", "target_sync_ids_set", ")", "\n", "logging", ".", "info", "(", "'number of target sync ids is {}'", ".", "format", "(", "len", "(", "target_sync_ids", ")", ")", ")", "\n", "logging", ".", "info", "(", "'original search pool size: {}'", ".", "format", "(", "len", "(", "search_pool_lines", ")", ")", ")", "\n", "logging", ".", "info", "(", "'original target train size: {}'", ".", "format", "(", "len", "(", "target_train_lines", ")", ")", ")", "\n", "logging", ".", "info", "(", "'original target test size: {}'", ".", "format", "(", "len", "(", "target_test_lines", ")", ")", ")", "\n", "\n", "summary", "[", "'ori_search_pool_size'", "]", "=", "len", "(", "search_pool_lines", ")", "\n", "summary", "[", "'ori_target_train_size'", "]", "=", "len", "(", "target_train_lines", ")", "\n", "summary", "[", "'ori_target_test_size'", "]", "=", "len", "(", "target_test_lines", ")", "\n", "\n", "logging", ".", "info", "(", "'phase 1 completed...'", ")", "\n", "\n", "# phase 2: generate sync seq file for target files and sort them using timestamp", "\n", "logging", ".", "info", "(", "'phase 2: generate sync seq dict...'", ")", "\n", "sync_seq_dict", "=", "{", "}", "\n", "\n", "logging", ".", "info", "(", "'sync_seq_dict initializing...'", ")", "\n", "for", "sync_id", "in", "tqdm", "(", "target_sync_ids", ")", ":", "\n", "        ", "sync_seq_dict", "[", "sync_id", "]", "=", "[", "]", "\n", "\n", "", "logging", ".", "info", "(", "'sync_seq_dict inserting...'", ")", "\n", "for", "i", ",", "line", "in", "tqdm", "(", "enumerate", "(", "search_pool_lines", ")", ")", ":", "\n", "        ", "line_split", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "','", ")", "\n", "sync_id", "=", "line_split", "[", "sync_c_pos", "]", "\n", "if", "sync_id", "in", "sync_seq_dict", ":", "\n", "            ", "seq_part", "=", "','", ".", "join", "(", "np", ".", "array", "(", "line_split", ")", "[", "sampling_c_pos_list", "]", ".", "tolist", "(", ")", ")", "\n", "sync_seq_dict", "[", "sync_id", "]", ".", "append", "(", "(", "seq_part", ",", "ts_search_pool", "[", "i", "]", ")", ")", "\n", "\n", "# sorting the sync_seq_dict for each sync id term", "\n", "", "", "logging", ".", "info", "(", "'sync_seq_dict sorting...'", ")", "\n", "for", "sync_id", "in", "tqdm", "(", "sync_seq_dict", ")", ":", "\n", "        ", "sync_seq_dict", "[", "sync_id", "]", ".", "sort", "(", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ")", "\n", "\n", "", "dump_pkl", "(", "sync_seq_dict_file", ",", "sync_seq_dict", ")", "\n", "\n", "# (optinal) phase 3: negative sampling for target files and search pool file", "\n", "search_pool_lines_neg", "=", "[", "]", "\n", "target_train_lines_dump", "=", "target_train_lines", "\n", "target_test_lines_dump", "=", "target_test_lines", "\n", "\n", "if", "neg_sample_flag", ":", "\n", "        ", "logging", ".", "info", "(", "'phase 3: negative sampling for target and search pool files...'", ")", "\n", "with", "open", "(", "sampling_collection_file", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "sampling_list", "=", "pkl", ".", "load", "(", "f", ")", "\n", "\n", "", "logging", ".", "info", "(", "'generate neg samples for search pool...'", ")", "\n", "for", "line", "in", "tqdm", "(", "search_pool_lines", ")", ":", "\n", "            ", "line_split", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "','", ")", "\n", "sampling", "=", "random", ".", "choice", "(", "sampling_list", ")", ".", "split", "(", "','", ")", "\n", "\n", "for", "i", ",", "pos", "in", "enumerate", "(", "sampling_c_pos_list", ")", ":", "\n", "                ", "line_split", "[", "pos", "]", "=", "sampling", "[", "i", "]", "\n", "", "line_split", "[", "-", "1", "]", "=", "'0'", "\n", "search_pool_lines_neg", ".", "append", "(", "','", ".", "join", "(", "line_split", ")", "+", "'\\n'", ")", "\n", "\n", "", "logging", ".", "info", "(", "'generate neg samples for target train...'", ")", "\n", "cnt", "=", "0", "\n", "for", "line", "in", "tqdm", "(", "target_train_lines", ")", ":", "\n", "            ", "line_split", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "','", ")", "\n", "# sample from history or random sample", "\n", "for", "_", "in", "range", "(", "neg_sample_num", ")", ":", "\n", "                ", "r", "=", "random", ".", "randint", "(", "1", ",", "int", "(", "1", "/", "sfh_rate", ")", ")", "\n", "if", "r", "==", "1", ":", "\n", "                    ", "sync_seq", "=", "sync_seq_dict", "[", "line_split", "[", "sync_c_pos", "]", "]", "\n", "if", "sync_seq", "!=", "[", "]", ":", "\n", "                        ", "sampling", "=", "random", ".", "choice", "(", "sync_seq", ")", "[", "0", "]", ".", "split", "(", "','", ")", "\n", "", "else", ":", "\n", "                        ", "cnt", "+=", "1", "\n", "sampling", "=", "random", ".", "choice", "(", "sampling_list", ")", ".", "split", "(", "','", ")", "\n", "", "", "else", ":", "\n", "                    ", "sampling", "=", "random", ".", "choice", "(", "sampling_list", ")", ".", "split", "(", "','", ")", "\n", "\n", "", "for", "i", ",", "pos", "in", "enumerate", "(", "sampling_c_pos_list", ")", ":", "\n", "                    ", "line_split", "[", "pos", "]", "=", "sampling", "[", "i", "]", "\n", "", "line_split", "[", "-", "1", "]", "=", "'0'", "\n", "target_train_lines_dump", ".", "append", "(", "','", ".", "join", "(", "line_split", ")", "+", "'\\n'", ")", "\n", "", "", "logging", ".", "info", "(", "'num of empty sync seq for target train {}'", ".", "format", "(", "cnt", ")", ")", "\n", "\n", "logging", ".", "info", "(", "'generate neg samples for target test...'", ")", "\n", "cnt", "=", "0", "\n", "for", "line", "in", "tqdm", "(", "target_test_lines", ")", ":", "\n", "            ", "line_split", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "','", ")", "\n", "# sample from history or random sample", "\n", "for", "_", "in", "range", "(", "neg_sample_num", ")", ":", "\n", "                ", "r", "=", "random", ".", "randint", "(", "1", ",", "int", "(", "1", "/", "sfh_rate", ")", ")", "\n", "if", "r", "==", "1", ":", "\n", "                    ", "sync_seq", "=", "sync_seq_dict", "[", "line_split", "[", "sync_c_pos", "]", "]", "\n", "if", "sync_seq", "!=", "[", "]", ":", "\n", "                        ", "sampling", "=", "random", ".", "choice", "(", "sync_seq", ")", "[", "0", "]", ".", "split", "(", "','", ")", "\n", "", "else", ":", "\n", "                        ", "cnt", "+=", "1", "\n", "sampling", "=", "random", ".", "choice", "(", "sampling_list", ")", ".", "split", "(", "','", ")", "\n", "", "", "else", ":", "\n", "                    ", "sampling", "=", "random", ".", "choice", "(", "sampling_list", ")", ".", "split", "(", "','", ")", "\n", "\n", "", "for", "i", ",", "pos", "in", "enumerate", "(", "sampling_c_pos_list", ")", ":", "\n", "                    ", "line_split", "[", "pos", "]", "=", "sampling", "[", "i", "]", "\n", "", "line_split", "[", "-", "1", "]", "=", "'0'", "\n", "target_test_lines_dump", ".", "append", "(", "','", ".", "join", "(", "line_split", ")", "+", "'\\n'", ")", "\n", "", "", "logging", ".", "info", "(", "'num of empty sync seq for target test {}'", ".", "format", "(", "cnt", ")", ")", "\n", "\n", "# phase 4: random shuffle the lines", "\n", "", "search_pool_lines", "+=", "search_pool_lines_neg", "\n", "\n", "summary", "[", "'search_pool_size'", "]", "=", "len", "(", "search_pool_lines", ")", "\n", "summary", "[", "'target_train_size'", "]", "=", "len", "(", "target_train_lines_dump", ")", "\n", "summary", "[", "'target_test_size'", "]", "=", "len", "(", "target_test_lines_dump", ")", "\n", "logging", ".", "info", "(", "'search pool size: {}'", ".", "format", "(", "len", "(", "search_pool_lines", ")", ")", ")", "\n", "logging", ".", "info", "(", "'target train size: {}'", ".", "format", "(", "len", "(", "target_train_lines_dump", ")", ")", ")", "\n", "logging", ".", "info", "(", "'target test size: {}'", ".", "format", "(", "len", "(", "target_test_lines_dump", ")", ")", ")", "\n", "\n", "logging", ".", "info", "(", "'phase 4: shuffle search pool (and possibly target files)...'", ")", "\n", "random", ".", "shuffle", "(", "search_pool_lines", ")", "\n", "if", "shuffle_target", ":", "\n", "        ", "random", ".", "shuffle", "(", "target_train_lines_dump", ")", "\n", "random", ".", "shuffle", "(", "target_test_lines_dump", ")", "\n", "\n", "", "dump_lines", "(", "search_pool_file", ",", "search_pool_lines", ")", "\n", "dump_lines", "(", "target_train_file", ",", "target_train_lines_dump", ")", "\n", "dump_lines", "(", "target_test_file", ",", "target_test_lines_dump", ")", "\n", "\n", "logging", ".", "info", "(", "'target and search pool generated'", ")", "\n", "\n", "dump_pkl", "(", "dataset_summary_file", ",", "summary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_pkl": [[6, 10], ["print", "open", "pickle.dump"], "function", ["None"], ["def", "dump_pkl", "(", "filename", ",", "obj", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pkl", ".", "dump", "(", "obj", ",", "f", ")", "\n", "", "print", "(", "'{} dumped'", ".", "format", "(", "filename", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_lines": [[11, 15], ["print", "open", "f.writelines"], "function", ["None"], ["", "def", "dump_lines", "(", "filename", ",", "lines", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "writelines", "(", "lines", ")", "\n", "", "print", "(", "'{} writelines completed'", ".", "format", "(", "filename", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.sampling": [[16, 24], ["data_ppl_utils.dump_lines", "open", "tqdm.tqdm", "random.randint", "int", "sampled_lines.append"], "function", ["home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_lines"], ["", "def", "sampling", "(", "ori_file", ",", "sampled_file", ",", "rate", ")", ":", "\n", "    ", "sampled_lines", "=", "[", "]", "\n", "with", "open", "(", "ori_file", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "tqdm", "(", "f", ")", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "1", ",", "int", "(", "1", "/", "rate", ")", ")", "\n", "if", "r", "==", "1", ":", "\n", "                ", "sampled_lines", ".", "append", "(", "line", ")", "\n", "", "", "", "dump_lines", "(", "sampled_file", ",", "sampled_lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.select_pos_list": [[25, 27], ["[].tolist", "numpy.array"], "function", ["None"], ["", "def", "select_pos_list", "(", "input_list", ",", "pos_list", ")", ":", "\n", "    ", "return", "np", ".", "array", "(", "input_list", ")", "[", "pos_list", "]", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.select_pos_str": [[28, 30], ["[].tolist", "numpy.array", "input_str.split"], "function", ["None"], ["", "def", "select_pos_str", "(", "input_str", ",", "pos_list", ")", ":", "\n", "    ", "return", "','", ".", "join", "(", "np", ".", "array", "(", "input_str", ".", "split", "(", "','", ")", ")", "[", "pos_list", "]", ".", "tolist", "(", ")", ")", "", "", ""]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.get_dataset_sum.get_dataset_summary": [[9, 18], ["os.path.exists", "logging.error", "open", "pickle.load", "logging.info", "str", "str"], "function", ["None"], ["def", "get_dataset_summary", "(", "dataset_summary_file", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "dataset_summary_file", ")", ":", "\n", "        ", "logging", ".", "error", "(", "'data summary file {} does not exists'", ".", "format", "(", "dataset_summary_file", ")", ")", "\n", "", "with", "open", "(", "dataset_summary_file", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "summary_dict", "=", "pkl", ".", "load", "(", "f", ")", "\n", "\n", "", "for", "key", "in", "summary_dict", ":", "\n", "        ", "content", "=", "str", "(", "key", ")", "+", "':'", "+", "str", "(", "summary_dict", "[", "key", "]", ")", "\n", "logging", ".", "info", "(", "content", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.feateng.gen_remap_dicts": [[15, 48], ["logging.info", "list", "enumerate", "logging.info", "data_ppl_utils.dump_pkl", "map", "len", "set", "open", "tqdm.tqdm", "list.split", "range", "range", "f.readline", "line[].split", "enumerate", "str", "c_sets[].add"], "function", ["home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_pkl"], ["def", "gen_remap_dicts", "(", "joined_tabular_file", ",", "\n", "used_cnum", ",", "\n", "remap_c_pos_list", ",", "\n", "remap_dicts_file", ",", "\n", "sep", ",", "\n", "header", ")", ":", "\n", "    ", "logging", ".", "info", "(", "'remapping dicts begin...'", ")", "\n", "# comes from the config file", "\n", "remap_c_pos_list", "=", "list", "(", "map", "(", "int", ",", "remap_c_pos_list", ".", "split", "(", "','", ")", ")", ")", "\n", "assert", "used_cnum", "==", "len", "(", "remap_c_pos_list", ")", "\n", "\n", "# sets and remap dicts for each column that needs to be remapped", "\n", "c_sets", "=", "[", "set", "(", ")", "for", "_", "in", "range", "(", "used_cnum", ")", "]", "\n", "remap_dicts", "=", "[", "{", "}", "for", "_", "in", "range", "(", "used_cnum", ")", "]", "\n", "\n", "# get all the unique feature values", "\n", "with", "open", "(", "joined_tabular_file", ")", "as", "f", ":", "\n", "        ", "if", "header", "==", "True", ":", "\n", "            ", "f", ".", "readline", "(", ")", "\n", "", "for", "line", "in", "tqdm", "(", "f", ")", ":", "\n", "            ", "line_split", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "sep", "=", "sep", ")", "\n", "for", "i", ",", "c_pos", "in", "enumerate", "(", "remap_c_pos_list", ")", ":", "\n", "                ", "c_sets", "[", "i", "]", ".", "add", "(", "line_split", "[", "c_pos", "]", ")", "\n", "\n", "# generate remap dicts", "\n", "", "", "", "remap_id", "=", "1", "\n", "for", "i", ",", "c_set", "in", "enumerate", "(", "c_sets", ")", ":", "\n", "        ", "for", "c", "in", "c_set", ":", "\n", "            ", "remap_dicts", "[", "i", "]", "[", "c", "]", "=", "str", "(", "remap_id", ")", "\n", "remap_id", "+=", "1", "\n", "", "", "logging", ".", "info", "(", "'total feature number is: {}'", ".", "format", "(", "remap_id", ")", ")", "\n", "\n", "dump_pkl", "(", "remap_dicts_file", ",", "remap_dicts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.feateng.remap": [[49, 99], ["list", "list", "set", "list", "data_ppl_utils.dump_lines", "data_ppl_utils.dump_pkl", "logging.info", "logging.info", "enumerate", "logging.info", "data_ppl_utils.dump_pkl", "map", "map", "open", "pickle.load", "logging.info", "open", "tqdm.tqdm", "len", "len", "logging.info", "list.split", "list.split", "f.readline", "line[].split", "enumerate", "remapped_tabular_lines.append", "list", "set.add", "len", "numpy.array"], "function", ["home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_lines", "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_pkl", "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.dump_pkl"], ["", "def", "remap", "(", "joined_tabular_file", ",", "\n", "remap_dicts_file", ",", "\n", "remap_c_pos_list", ",", "\n", "sampling_c_pos_list", ",", "\n", "remapped_tabular_file", ",", "\n", "sampling_collection_file", ",", "\n", "dataset_summary_file", ",", "\n", "sep", ",", "\n", "header", ")", ":", "\n", "    ", "remap_c_pos_list", "=", "list", "(", "map", "(", "int", ",", "remap_c_pos_list", ".", "split", "(", "','", ")", ")", ")", "\n", "sampling_c_pos_list", "=", "list", "(", "map", "(", "int", ",", "sampling_c_pos_list", ".", "split", "(", "','", ")", ")", ")", "\n", "\n", "with", "open", "(", "remap_dicts_file", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "remap_dicts", "=", "pkl", ".", "load", "(", "f", ")", "\n", "logging", ".", "info", "(", "'remap_dicts have been loaded'", ")", "\n", "\n", "", "remapped_tabular_lines", "=", "[", "]", "\n", "sampling_collection_set", "=", "set", "(", ")", "\n", "\n", "with", "open", "(", "joined_tabular_file", ")", "as", "f", ":", "\n", "        ", "if", "header", "==", "True", ":", "\n", "            ", "f", ".", "readline", "(", ")", "\n", "", "for", "line", "in", "tqdm", "(", "f", ")", ":", "\n", "            ", "line_split", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "sep", "=", "sep", ")", "\n", "for", "i", ",", "c_pos", "in", "enumerate", "(", "remap_c_pos_list", ")", ":", "\n", "                ", "line_split", "[", "c_pos", "]", "=", "remap_dicts", "[", "i", "]", "[", "line_split", "[", "c_pos", "]", "]", "\n", "", "remapped_tabular_lines", ".", "append", "(", "','", ".", "join", "(", "line_split", ")", "+", "'\\n'", ")", "\n", "\n", "sampling_c_list", "=", "list", "(", "np", ".", "array", "(", "line_split", ")", "[", "sampling_c_pos_list", "]", ")", "\n", "sampling_collection_set", ".", "add", "(", "','", ".", "join", "(", "sampling_c_list", ")", ")", "\n", "\n", "", "", "sampling_collection_list", "=", "list", "(", "sampling_collection_set", ")", "\n", "\n", "dump_lines", "(", "remapped_tabular_file", ",", "remapped_tabular_lines", ")", "\n", "dump_pkl", "(", "sampling_collection_file", ",", "sampling_collection_list", ")", "\n", "\n", "logging", ".", "info", "(", "'remapped and sampling collection files dumped'", ")", "\n", "logging", ".", "info", "(", "'generating dataset summary file...'", ")", "\n", "\n", "# generate summary file: columns info", "\n", "summary_dict", "=", "{", "}", "\n", "total_feat_num", "=", "0", "\n", "for", "i", ",", "c_pos", "in", "enumerate", "(", "remap_c_pos_list", ")", ":", "\n", "        ", "summary_dict", "[", "'C{}'", ".", "format", "(", "c_pos", ")", "]", "=", "len", "(", "remap_dicts", "[", "i", "]", ")", "\n", "total_feat_num", "+=", "len", "(", "remap_dicts", "[", "i", "]", ")", "\n", "logging", ".", "info", "(", "'the number of column C{}\\'s unique values(features) is {}'", ".", "format", "(", "c_pos", ",", "len", "(", "remap_dicts", "[", "i", "]", ")", ")", ")", "\n", "", "summary_dict", "[", "'feat_num'", "]", "=", "total_feat_num", "+", "1", "\n", "logging", ".", "info", "(", "'total feature number is {}'", ".", "format", "(", "total_feat_num", "+", "1", ")", ")", "\n", "\n", "dump_pkl", "(", "dataset_summary_file", ",", "summary_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_reader.ESReader.__init__": [[12, 20], ["elasticsearch.Elasticsearch"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "index_name", ",", "\n", "size", ",", "\n", "host_url", "=", "'localhost:9200'", ")", ":", "\n", "\n", "        ", "self", ".", "es", "=", "Elasticsearch", "(", "host_url", ")", "\n", "self", ".", "index_name", "=", "index_name", "\n", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_reader.ESReader.query_ubr": [[22, 42], ["elasticsearch_dsl.MultiSearch", "enumerate", "ms.add.add.execute", "ms.add.add.add", "res_lineno_batch.append", "elasticsearch_dsl.Search().filter().filter().query", "res_lineno.append", "res_lineno.append", "str", "elasticsearch_dsl.Search().filter().filter", "elasticsearch_dsl.Search().filter", "elasticsearch_dsl.Search"], "methods", ["None"], ["", "def", "query_ubr", "(", "self", ",", "queries", ",", "sync_ids", ")", ":", "\n", "        ", "ms", "=", "MultiSearch", "(", "using", "=", "self", ".", "es", ",", "index", "=", "self", ".", "index_name", ")", "\n", "for", "i", ",", "q", "in", "enumerate", "(", "queries", ")", ":", "\n", "            ", "s", "=", "Search", "(", ")", ".", "filter", "(", "\"terms\"", ",", "sync_id", "=", "[", "sync_ids", "[", "i", "]", "]", ")", ".", "filter", "(", "\"terms\"", ",", "label", "=", "[", "'1'", "]", ")", ".", "query", "(", "\"match\"", ",", "line", "=", "q", ")", "[", ":", "self", ".", "size", "]", "\n", "ms", "=", "ms", ".", "add", "(", "s", ")", "\n", "", "responses", "=", "ms", ".", "execute", "(", ")", "\n", "\n", "res_lineno_batch", "=", "[", "]", "\n", "# res_line_batch = []", "\n", "for", "response", "in", "responses", ":", "\n", "            ", "res_lineno", "=", "[", "]", "\n", "res_line", "=", "[", "]", "\n", "for", "hit", "in", "response", ":", "\n", "                ", "res_lineno", ".", "append", "(", "str", "(", "hit", ".", "line_no", ")", ")", "\n", "# res_line.append(list(map(int, hit.line.split(','))))", "\n", "", "if", "res_lineno", "==", "[", "]", ":", "\n", "                ", "res_lineno", ".", "append", "(", "'-1'", ")", "\n", "", "res_lineno_batch", ".", "append", "(", "res_lineno", ")", "\n", "# res_line_batch.append(res_line)", "\n", "", "return", "res_lineno_batch", "#, res_line_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_reader.ESReader.query_rim1": [[44, 70], ["elasticsearch_dsl.MultiSearch", "ms.add.add.execute", "ms.add.add.add", "print", "res_lineno_batch.append", "label_batch.append", "elasticsearch_dsl.Search().query", "res_lineno.append", "labels.append", "res_lineno.append", "labels.append", "len", "str", "elasticsearch_dsl.Search"], "methods", ["None"], ["", "def", "query_rim1", "(", "self", ",", "queries", ")", ":", "\n", "        ", "ms", "=", "MultiSearch", "(", "using", "=", "self", ".", "es", ",", "index", "=", "self", ".", "index_name", ")", "\n", "for", "q", "in", "queries", ":", "\n", "            ", "s", "=", "Search", "(", ")", ".", "query", "(", "\"match\"", ",", "line", "=", "q", ")", "[", ":", "self", ".", "size", "]", "\n", "ms", "=", "ms", ".", "add", "(", "s", ")", "\n", "", "responses", "=", "ms", ".", "execute", "(", ")", "\n", "\n", "res_lineno_batch", "=", "[", "]", "\n", "# res_line_batch = []", "\n", "label_batch", "=", "[", "]", "\n", "for", "response", "in", "responses", ":", "\n", "            ", "print", "(", "\"len of res:{}\"", ".", "format", "(", "len", "(", "response", ")", ")", ")", "\n", "res_lineno", "=", "[", "]", "\n", "# res_line = []", "\n", "labels", "=", "[", "]", "\n", "for", "hit", "in", "response", ":", "\n", "                ", "res_lineno", ".", "append", "(", "str", "(", "hit", ".", "line_no", ")", ")", "\n", "# res_line.append(list(map(int, hit.line.split(','))))", "\n", "labels", ".", "append", "(", "hit", ".", "label", ")", "\n", "", "if", "res_lineno", "==", "[", "]", ":", "\n", "                ", "res_lineno", ".", "append", "(", "'-1'", ")", "\n", "labels", ".", "append", "(", "'0'", ")", "\n", "", "res_lineno_batch", ".", "append", "(", "res_lineno", ")", "\n", "# res_line_batch.append(res_line)", "\n", "label_batch", ".", "append", "(", "labels", ")", "\n", "", "return", "res_lineno_batch", ",", "label_batch", "#, res_line_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_reader.ESReader.query_rim_ac": [[72, 97], ["elasticsearch_dsl.MultiSearch", "enumerate", "ms.add.add.execute", "ms.add.add.add", "res_lineno_batch.append", "label_batch.append", "elasticsearch_dsl.Search().query", "res_lineno.append", "labels.append", "res_lineno.append", "labels.append", "str", "elasticsearch_dsl.Search"], "methods", ["None"], ["", "def", "query_rim_ac", "(", "self", ",", "queries", ",", "sync_ids", ")", ":", "\n", "        ", "ms", "=", "MultiSearch", "(", "using", "=", "self", ".", "es", ",", "index", "=", "self", ".", "index_name", ")", "\n", "for", "i", ",", "q", "in", "enumerate", "(", "queries", ")", ":", "\n", "            ", "s", "=", "Search", "(", ")", ".", "query", "(", "\"match\"", ",", "sync_id", "=", "sync_ids", "[", "i", "]", ")", "[", ":", "self", ".", "size", "]", "\n", "ms", "=", "ms", ".", "add", "(", "s", ")", "\n", "", "responses", "=", "ms", ".", "execute", "(", ")", "\n", "\n", "res_lineno_batch", "=", "[", "]", "\n", "# res_line_batch = []", "\n", "label_batch", "=", "[", "]", "\n", "for", "response", "in", "responses", ":", "\n", "            ", "res_lineno", "=", "[", "]", "\n", "# res_line = []", "\n", "labels", "=", "[", "]", "\n", "for", "hit", "in", "response", ":", "\n", "                ", "res_lineno", ".", "append", "(", "str", "(", "hit", ".", "line_no", ")", ")", "\n", "# res_line.append(list(map(int, hit.line.split(','))))", "\n", "labels", ".", "append", "(", "hit", ".", "label", ")", "\n", "", "if", "res_lineno", "==", "[", "]", ":", "\n", "                ", "res_lineno", ".", "append", "(", "'-1'", ")", "\n", "labels", ".", "append", "(", "'0'", ")", "\n", "", "res_lineno_batch", ".", "append", "(", "res_lineno", ")", "\n", "# res_line_batch.append(res_line)", "\n", "label_batch", ".", "append", "(", "labels", ")", "\n", "", "return", "res_lineno_batch", ",", "label_batch", "#, res_line_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_reader.queryGen.__init__": [[99, 119], ["list", "len", "print", "map", "open", "f.readlines", "int", "query_c_pos.split", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "target_file", ",", "\n", "batch_size", ",", "\n", "sync_c_pos", ",", "\n", "query_c_pos", ")", ":", "\n", "\n", "        ", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "sync_c_pos", "=", "sync_c_pos", "\n", "self", ".", "query_c_pos", "=", "list", "(", "map", "(", "int", ",", "query_c_pos", ".", "split", "(", "','", ")", ")", ")", "\n", "\n", "with", "open", "(", "target_file", ")", "as", "f", ":", "\n", "            ", "self", ".", "target_lines", "=", "f", ".", "readlines", "(", ")", "\n", "", "self", ".", "dataset_size", "=", "len", "(", "self", ".", "target_lines", ")", "\n", "\n", "if", "self", ".", "dataset_size", "%", "self", ".", "batch_size", "==", "0", ":", "\n", "            ", "self", ".", "total_step", "=", "int", "(", "self", ".", "dataset_size", "/", "self", ".", "batch_size", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "total_step", "=", "int", "(", "self", ".", "dataset_size", "/", "self", ".", "batch_size", ")", "+", "1", "\n", "", "self", ".", "step", "=", "0", "\n", "print", "(", "'data loaded'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_reader.queryGen.__iter__": [[120, 122], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.qinjr_rim.data_ppl.es_reader.queryGen.__next__": [[123, 140], ["data_ppl_utils.select_pos_str", "l.split"], "methods", ["home.repos.pwc.inspect_result.qinjr_rim.data_ppl.data_ppl_utils.select_pos_str"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "step", "==", "self", ".", "total_step", ":", "\n", "            ", "raise", "StopIteration", "\n", "\n", "", "q_batch", "=", "[", "]", "\n", "sync_id_batch", "=", "[", "]", "\n", "if", "self", ".", "step", "!=", "self", ".", "total_step", "-", "1", ":", "\n", "            ", "lines_batch", "=", "self", ".", "target_lines", "[", "self", ".", "step", "*", "self", ".", "batch_size", ":", "(", "self", ".", "step", "+", "1", ")", "*", "self", ".", "batch_size", "]", "\n", "", "else", ":", "\n", "            ", "lines_batch", "=", "self", ".", "target_lines", "[", "self", ".", "step", "*", "self", ".", "batch_size", ":", "]", "\n", "\n", "", "q_batch", "=", "[", "select_pos_str", "(", "l", ",", "self", ".", "query_c_pos", ")", "for", "l", "in", "lines_batch", "]", "\n", "sync_id_batch", "=", "[", "l", ".", "split", "(", "','", ")", "[", "self", ".", "sync_c_pos", "]", "for", "l", "in", "lines_batch", "]", "\n", "\n", "self", ".", "step", "+=", "1", "\n", "\n", "return", "q_batch", ",", "sync_id_batch", "\n", "\n"]]}