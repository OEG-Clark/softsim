{"home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.wrapper_algs.fixed_pi": [[6, 41], ["isinstance", "np.zeros", "np.zeros", "np.zeros", "range", "utils.get_stats", "len", "bandit.re_init", "bernoulli.rvs", "bandit.pull", "utils.stats_terms", "Rs.append", "As.append", "Pis.append", "np.ones", "np.ones", "np.expand_dims", "np.repeat", "np.repeat", "np.dot"], "function", ["home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.utils.get_stats", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.environments.HeartStep.re_init", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.environments.HeartStep.pull", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.utils.stats_terms"], ["def", "fixed_pi", "(", "bandit", ",", "delta", ",", "f", ",", "Z", ",", "alpha", ",", "beta", ",", "N", ",", "T", ",", "pi_fix", "=", "0.5", ",", "S", "=", "1000", ",", "approx", "=", "False", ")", ":", "\n", "# Initialize bandit", "\n", "    ", "if", "isinstance", "(", "delta", ",", "float", ")", ":", "df", "=", "1", "\n", "else", ":", "df", "=", "len", "(", "delta", ")", "\n", "pi_fix", "=", "pi_fix", "\n", "\n", "############ fixed pi #######", "\n", "deltas", "=", "np", ".", "zeros", "(", "[", "S", ",", "df", "]", ")", "\n", "term1", "=", "np", ".", "zeros", "(", "[", "df", "+", "1", ",", "df", "+", "1", "]", ")", "\n", "term2", "=", "np", ".", "zeros", "(", "[", "df", "+", "1", ",", "df", "+", "1", "]", ")", "\n", "# stats2 = np.zeros(1000)", "\n", "\n", "As", "=", "[", "]", "\n", "Rs", "=", "[", "]", "\n", "Pis", "=", "[", "]", "\n", "# Ys = []", "\n", "for", "s", "in", "range", "(", "S", ")", ":", "\n", "        ", "bandit", ".", "re_init", "(", ")", "\n", "Pi", "=", "np", ".", "ones", "(", "[", "N", ",", "T", "]", ")", "*", "pi_fix", "\n", "A", "=", "bernoulli", ".", "rvs", "(", "pi_fix", ",", "size", "=", "(", "N", ",", "T", ")", ")", "\n", "R", "=", "bandit", ".", "pull", "(", "0", ",", "A", ")", "\n", "# primary analysis", "\n", "if", "df", "==", "1", ":", "B", "=", "np", ".", "ones", "(", "[", "N", ",", "T", ",", "1", "]", ")", "\n", "else", ":", "B", "=", "np", ".", "expand_dims", "(", "np", ".", "repeat", "(", "f", "[", "np", ".", "newaxis", ",", ":", "]", ",", "N", ",", "0", ")", "+", "np", ".", "repeat", "(", "np", ".", "dot", "(", "Z", ",", "delta", ")", "[", "np", ".", "newaxis", ",", ":", "]", ",", "N", ",", "0", ")", "*", "Pi", ",", "axis", "=", "2", ")", "\n", "#B = np.repeat(Z[np.newaxis,:],N,0)", "\n", "d", ",", "s1", ",", "s2", "=", "stats_terms", "(", "A", ",", "R", ",", "Pi", ",", "B", ",", "Z", "=", "Z", ")", "\n", "term1", "+=", "(", "s1", "/", "S", ")", "\n", "term2", "+=", "(", "s2", "/", "S", ")", "\n", "deltas", "[", "s", "]", "=", "d", "\n", "Rs", ".", "append", "(", "R", ")", "\n", "As", ".", "append", "(", "A", ")", "\n", "Pis", ".", "append", "(", "Pi", ")", "\n", "# calculate test statistics", "\n", "", "stats", "=", "get_stats", "(", "deltas", ",", "term1", ",", "term2", ",", "N", ")", "\n", "return", "stats", ",", "Rs", ",", "Pis", ",", "As", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.wrapper_algs.adaptive": [[42, 165], ["isinstance", "np.copy", "np.zeros", "range", "len", "np.zeros", "np.zeros", "np.zeros", "np.zeros", "np.zeros", "np.zeros", "range", "Rs.append", "Pis.append", "As.append", "utils.get_stats", "np.zeros", "np.zeros", "np.zeros", "np.zeros", "bandit.re_init", "range", "np.repeat", "utils.stats_terms", "algorithms.BOSE", "np.dstack", "np.dstack", "algorithms.ActionCenteredThompsonSampling", "algorithms.LinearUCB.get_action", "algorithms.LinearUCB.get_action", "bandit.pull", "algorithms.LinearUCB", "Exception", "np.zeros", "np.zeros", "bernoulli.rvs", "bernoulli.rvs", "algorithms.LinearUCB.update", "algorithms.LinearUCB.update", "bandit.pull", "np.repeat", "np.ones", "len", "len", "bernoulli.rvs", "np.copy", "int", "int", "int", "bernoulli.rvs", "bandit.pull", "raiseError", "np.repeat", "np.repeat", "bernoulli.rvs", "np.copy", "np.copy", "np.copy", "algorithms.LinearUCB.update", "algorithms.LinearUCB.update", "np.copy", "algorithms.LinearUCB.update", "algorithms.LinearUCB.update", "np.copy"], "function", ["home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.utils.get_stats", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.environments.HeartStep.re_init", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.utils.stats_terms", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.get_action", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.get_action", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.environments.HeartStep.pull", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.update", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.update", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.environments.HeartStep.pull", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.environments.HeartStep.pull", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.update", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.update", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.update", "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.update"], ["", "def", "adaptive", "(", "bandit", ",", "delta", ",", "f", ",", "Z", ",", "Zalg", ",", "sig", ",", "alpha", ",", "beta", ",", "N", ",", "T", ",", "alg_type", ",", "pi", ",", "gamma", "=", "None", ",", "S", "=", "1000", ",", "wrapper", "=", "'flip'", ",", "approx", "=", "False", ",", "special", "=", "False", ",", "prior_v", "=", "1.0", ")", ":", "\n", "\n", "    ", "if", "isinstance", "(", "delta", ",", "float", ")", ":", "df", "=", "1", "\n", "else", ":", "df", "=", "len", "(", "delta", ")", "\n", "\n", "# solve for pi", "\n", "pi_max", "=", "np", ".", "copy", "(", "pi", ")", "\n", "pi_min", "=", "1", "-", "pi_max", "\n", "# init", "\n", "Rs", "=", "[", "]", "\n", "Pis", "=", "[", "]", "\n", "As", "=", "[", "]", "\n", "\n", "if", "alg_type", "==", "'linucb'", "and", "wrapper", "==", "'none'", ":", "cal_stats", "=", "False", "\n", "else", ":", "cal_stats", "=", "True", "\n", "\n", "deltas", "=", "np", ".", "zeros", "(", "[", "S", ",", "df", "]", ")", "\n", "if", "special", ":", "\n", "        ", "term1", "=", "np", ".", "zeros", "(", "[", "df", "*", "2", ",", "df", "*", "2", "]", ")", "\n", "term2", "=", "np", ".", "zeros", "(", "[", "df", "*", "2", ",", "df", "*", "2", "]", ")", "\n", "", "elif", "not", "approx", "and", "df", "!=", "1", ":", "\n", "        ", "term1", "=", "np", ".", "zeros", "(", "[", "df", "*", "2", "+", "1", ",", "df", "*", "2", "+", "1", "]", ")", "\n", "term2", "=", "np", ".", "zeros", "(", "[", "df", "*", "2", "+", "1", ",", "df", "*", "2", "+", "1", "]", ")", "\n", "", "else", ":", "\n", "        ", "term1", "=", "np", ".", "zeros", "(", "[", "df", "*", "2", "+", "1", ",", "df", "*", "2", "+", "1", "]", ")", "\n", "term2", "=", "np", ".", "zeros", "(", "[", "df", "*", "2", "+", "1", ",", "df", "*", "2", "+", "1", "]", ")", "\n", "\n", "# running siimulations", "\n", "", "for", "s", "in", "range", "(", "S", ")", ":", "\n", "        ", "A", "=", "np", ".", "zeros", "(", "[", "N", ",", "T", "]", ")", "\n", "R", "=", "np", ".", "zeros", "(", "[", "N", ",", "T", "]", ")", "\n", "Pi", "=", "np", ".", "zeros", "(", "[", "N", ",", "T", "]", ")", "\n", "Y", "=", "np", ".", "zeros", "(", "[", "N", ",", "T", "]", ")", "\n", "V", "=", "[", "]", "\n", "vec", "=", "[", "]", "\n", "tmp", "=", "[", "]", "\n", "for", "n", "in", "range", "(", "N", ")", ":", "\n", "            ", "if", "alg_type", "==", "'bose'", ":", "alg", "=", "BOSE", "(", "Zalg", ".", "shape", "[", "1", "]", ",", "T", ",", "gamma", "=", "gamma", ")", "\n", "elif", "alg_type", "==", "'acts'", ":", "alg", "=", "ActionCenteredThompsonSampling", "(", "Zalg", ".", "shape", "[", "1", "]", ",", "sig", ",", "prior_v", "=", "prior_v", ")", "\n", "elif", "alg_type", "==", "'linucb'", ":", "alg", "=", "LinearUCB", "(", "Zalg", ".", "shape", "[", "1", "]", "+", "1", ",", "gamma", "=", "gamma", ")", "\n", "else", ":", "\n", "                ", "raise", "Exception", "(", "'Invalid algorithm'", ")", "\n", "# re-initialize bandit", "\n", "", "bandit", ".", "re_init", "(", ")", "\n", "for", "t", "in", "range", "(", "T", ")", ":", "\n", "                ", "z", "=", "Zalg", "[", "t", "]", "\n", "b", "=", "f", "[", "t", "]", "\n", "# get action A and policy fromt the input algorithm", "\n", "if", "alg_type", "==", "'linucb'", ":", "\n", "                    ", "a", ",", "pi", "=", "alg", ".", "get_action", "(", "b", ",", "np", ".", "zeros", "(", "len", "(", "z", ")", ")", ",", "z", ")", "\n", "", "else", ":", "\n", "                    ", "a", ",", "pi", "=", "alg", ".", "get_action", "(", "np", ".", "zeros", "(", "len", "(", "z", ")", ")", ",", "z", ")", "\n", "\n", "#================== Action Flipping ================", "\n", "", "if", "wrapper", "==", "'flip'", ":", "\n", "# flip action A with some probability and get action A_2", "\n", "                    ", "if", "a", "==", "1", ":", "a_2", "=", "bernoulli", ".", "rvs", "(", "pi_max", ")", "\n", "else", ":", "a_2", "=", "bernoulli", ".", "rvs", "(", "pi_min", ")", "\n", "# perform A'", "\n", "r", "=", "bandit", ".", "pull", "(", "t", ",", "a_2", ")", "\n", "# algorithm stores A, R'", "\n", "if", "alg_type", "==", "'linucb'", ":", "alg", ".", "update", "(", "a", ",", "b", ",", "r", ",", "z", ")", "\n", "else", ":", "alg", ".", "update", "(", "a", ",", "pi", ",", "r", ",", "z", ")", "\n", "# scientist stores A', R', pi'", "\n", "A", "[", "n", ",", "t", "]", "=", "a_2", "\n", "Pi", "[", "n", ",", "t", "]", "=", "pi", "*", "pi_max", "+", "(", "1", "-", "pi", ")", "*", "pi_min", "\n", "R", "[", "n", ",", "t", "]", "=", "r", "\n", "#================== Data Dropping ================", "\n", "", "elif", "wrapper", "==", "'drop'", ":", "\n", "                    ", "if", "pi", "<=", "pi_min", ":", "\n", "                        ", "a_2", "=", "bernoulli", ".", "rvs", "(", "pi_min", ")", "\n", "alg_pi", "=", "pi", "*", "pi_min", "/", "(", "pi", "*", "pi_min", "+", "(", "1", "-", "pi", ")", "*", "(", "1", "-", "pi_min", ")", ")", "\n", "pi", "=", "np", ".", "copy", "(", "pi_min", ")", "\n", "", "elif", "pi", ">=", "pi_max", ":", "\n", "                        ", "a_2", "=", "bernoulli", ".", "rvs", "(", "pi_max", ")", "\n", "alg_pi", "=", "pi", "*", "pi_max", "/", "(", "pi", "*", "pi_max", "+", "(", "1", "-", "pi", ")", "*", "(", "1", "-", "pi_max", ")", ")", "\n", "pi", "=", "np", ".", "copy", "(", "pi_max", ")", "\n", "", "else", ":", "\n", "                        ", "a_2", "=", "np", ".", "copy", "(", "a", ")", "\n", "alg_pi", "=", "np", ".", "copy", "(", "pi", ")", "\n", "", "r", "=", "bandit", ".", "pull", "(", "t", ",", "int", "(", "a_2", ")", ")", "\n", "# update algorithm when actions agree", "\n", "if", "int", "(", "a", ")", "==", "int", "(", "a_2", ")", ":", "\n", "                        ", "if", "alg_type", "==", "'linucb'", ":", "alg", ".", "update", "(", "a", ",", "b", ",", "r", ",", "z", ")", "\n", "else", ":", "alg", ".", "update", "(", "a", ",", "alg_pi", ",", "r", ",", "z", ")", "\n", "", "A", "[", "n", ",", "t", "]", "=", "a_2", "\n", "Pi", "[", "n", ",", "t", "]", "=", "pi", "\n", "R", "[", "n", ",", "t", "]", "=", "r", "\n", "#================== Probability Clipping ================", "\n", "", "elif", "wrapper", "==", "'clip'", "or", "wrapper", "==", "'none'", ":", "\n", "                    ", "if", "pi", "<=", "pi_min", ":", "pi", "=", "np", ".", "copy", "(", "pi_min", ")", "\n", "elif", "pi", ">=", "pi_max", ":", "pi", "=", "np", ".", "copy", "(", "pi_max", ")", "\n", "a", "=", "bernoulli", ".", "rvs", "(", "pi", ")", "\n", "r", "=", "bandit", ".", "pull", "(", "t", ",", "a", ")", "\n", "if", "alg_type", "==", "'linucb'", ":", "alg", ".", "update", "(", "a", ",", "b", ",", "r", ",", "z", ")", "\n", "else", ":", "alg", ".", "update", "(", "a", ",", "pi", ",", "r", ",", "z", ")", "\n", "# calculation related to statistics", "\n", "A", "[", "n", ",", "t", "]", "=", "a", "\n", "Pi", "[", "n", ",", "t", "]", "=", "pi", "\n", "R", "[", "n", ",", "t", "]", "=", "r", "\n", "\n", "", "else", ":", "raiseError", "(", "'Invalid wrapper algorithm'", ")", "\n", "# calculate test statistics", "\n", "", "", "if", "special", ":", "\n", "             ", "B", "=", "np", ".", "repeat", "(", "Z", "[", "np", ".", "newaxis", ",", ":", "]", ",", "N", ",", "0", ")", "\n", "", "elif", "not", "approx", "and", "df", "!=", "1", ":", "\n", "            ", "B", "=", "np", ".", "dstack", "(", "[", "np", ".", "repeat", "(", "f", "[", "np", ".", "newaxis", ",", ":", ",", "np", ".", "newaxis", "]", ",", "N", ",", "0", ")", ",", "np", ".", "repeat", "(", "Z", "[", "np", ".", "newaxis", ",", ":", "]", ",", "N", ",", "0", ")", "*", "Pi", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "]", ")", "\n", "", "else", ":", "B", "=", "np", ".", "dstack", "(", "[", "np", ".", "ones", "(", "[", "N", ",", "T", ",", "1", "]", ")", ",", "np", ".", "repeat", "(", "Z", "[", "np", ".", "newaxis", ",", ":", "]", ",", "N", ",", "0", ")", "*", "Pi", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "]", ")", "\n", "Rs", ".", "append", "(", "R", ")", "\n", "Pis", ".", "append", "(", "Pi", ")", "\n", "As", ".", "append", "(", "A", ")", "\n", "if", "cal_stats", ":", "\n", "            ", "d", ",", "s1", ",", "s2", "=", "stats_terms", "(", "A", ",", "R", ",", "Pi", ",", "B", ",", "Z", "=", "Z", ")", "\n", "term1", "+=", "(", "s1", "/", "S", ")", "\n", "term2", "+=", "(", "s2", "/", "S", ")", "\n", "deltas", "[", "s", "]", "=", "d", "\n", "\n", "", "", "if", "cal_stats", ":", "\n", "        ", "stats1", "=", "get_stats", "(", "deltas", ",", "term1", ",", "term2", ",", "N", ")", "\n", "return", "stats1", ",", "Rs", ",", "Pis", ",", "As", "\n", "\n", "", "else", ":", "return", "As", ",", "Rs", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.ActionCenteredThompsonSampling.__init__": [[8, 17], ["numpy.zeros", "numpy.linalg.inv", "numpy.matmul", "numpy.identity"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "d", ",", "sig", ",", "prior_v", "=", "1.", ")", ":", "\n", "# dimension of Z_t", "\n", "        ", "self", ".", "d", "=", "d", "\n", "# prior", "\n", "self", ".", "sig", "=", "sig", "\n", "self", ".", "vec", "=", "np", ".", "zeros", "(", "self", ".", "d", ")", "\n", "self", ".", "V", "=", "np", ".", "identity", "(", "self", ".", "d", ")", "*", "prior_v", "\n", "self", ".", "V_inv", "=", "np", ".", "linalg", ".", "inv", "(", "self", ".", "V", ")", "\n", "self", ".", "delta", "=", "np", ".", "matmul", "(", "self", ".", "V_inv", ",", "self", ".", "vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.ActionCenteredThompsonSampling.update": [[19, 24], ["numpy.linalg.inv", "numpy.matmul", "numpy.matmul"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "a", ",", "pi", ",", "r", ",", "z", ")", ":", "\n", "        ", "self", ".", "V", "+=", "(", "np", ".", "matmul", "(", "(", "a", "*", "z", "[", "np", ".", "newaxis", ",", ":", "]", ")", ".", "T", ",", "a", "*", "z", "[", "np", ".", "newaxis", ",", ":", "]", ")", "*", "pi", "*", "(", "1", "-", "pi", ")", ")", "\n", "self", ".", "vec", "+=", "(", "a", "*", "z", "*", "r", "*", "(", "a", "-", "pi", ")", ")", "\n", "self", ".", "V_inv", "=", "np", ".", "linalg", ".", "inv", "(", "self", ".", "V", ")", "\n", "self", ".", "delta", "=", "np", ".", "matmul", "(", "self", ".", "V_inv", ",", "self", ".", "vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.ActionCenteredThompsonSampling.get_pi": [[25, 36], ["isinstance", "numpy.squeeze", "numpy.squeeze", "numpy.dot", "numpy.matmul", "scipy.stats.norm.cdf", "numpy.matmul", "numpy.sqrt"], "methods", ["None"], ["", "def", "get_pi", "(", "self", ",", "z0", ",", "z1", ")", ":", "\n", "        ", "diff", "=", "z1", "-", "z0", "\n", "if", "isinstance", "(", "diff", ",", "float", ")", ":", "\n", "            ", "mu", "=", "np", ".", "squeeze", "(", "self", ".", "delta", "*", "diff", ")", "\n", "var", "=", "np", ".", "squeeze", "(", "self", ".", "V_inv", "*", "self", ".", "sig", "**", "2", ")", "\n", "", "else", ":", "\n", "            ", "diff", "=", "z1", "-", "z0", "\n", "mu", "=", "np", ".", "dot", "(", "diff", ",", "self", ".", "delta", ")", "\n", "var", "=", "np", ".", "matmul", "(", "diff", ",", "np", ".", "matmul", "(", "self", ".", "V_inv", "*", "self", ".", "sig", "**", "2", ",", "diff", ")", ")", "\n", "", "pi", "=", "1", "-", "norm", ".", "cdf", "(", "0", ",", "loc", "=", "mu", ",", "scale", "=", "np", ".", "sqrt", "(", "var", ")", ")", "\n", "return", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.ActionCenteredThompsonSampling.get_action": [[38, 45], ["algorithms.ActionCenteredThompsonSampling.get_pi", "numpy.random.multivariate_normal", "numpy.argmax", "int", "numpy.squeeze", "numpy.squeeze", "numpy.dot", "numpy.dot"], "methods", ["home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.get_pi"], ["", "def", "get_action", "(", "self", ",", "z0", ",", "z1", ",", "misc", "=", "True", ")", ":", "\n", "        ", "pi", "=", "self", ".", "get_pi", "(", "z0", ",", "z1", ")", "\n", "delta_s", "=", "np", ".", "random", ".", "multivariate_normal", "(", "self", ".", "delta", ",", "self", ".", "V_inv", "*", "self", ".", "sig", "**", "2", ")", "\n", "a", "=", "np", ".", "argmax", "(", "[", "np", ".", "squeeze", "(", "np", ".", "dot", "(", "z0", ",", "delta_s", ")", ")", ",", "np", ".", "squeeze", "(", "np", ".", "dot", "(", "z1", ",", "delta_s", ")", ")", "]", ")", "\n", "#a = bernoulli.rvs(pi)", "\n", "\n", "return", "int", "(", "a", ")", ",", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.LinearUCB.__init__": [[50, 60], ["numpy.zeros", "numpy.linalg.inv", "numpy.matmul", "numpy.identity"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "d", ",", "gamma", "=", "1.0", ",", "prior_v", "=", "1", ")", ":", "\n", "# dimension of Z_t", "\n", "        ", "self", ".", "d", "=", "d", "\n", "# hyperparameter", "\n", "self", ".", "gamma", "=", "gamma", "\n", "# prior", "\n", "self", ".", "vec", "=", "np", ".", "zeros", "(", "self", ".", "d", ")", "\n", "self", ".", "V", "=", "np", ".", "identity", "(", "self", ".", "d", ")", "*", "prior_v", "\n", "self", ".", "V_inv", "=", "np", ".", "linalg", ".", "inv", "(", "self", ".", "V", ")", "\n", "self", ".", "theta", "=", "np", ".", "matmul", "(", "self", ".", "V_inv", ",", "self", ".", "vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.LinearUCB.update": [[65, 71], ["numpy.hstack", "numpy.matmul", "numpy.linalg.inv", "numpy.matmul"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "a", ",", "b", ",", "r", ",", "z", ")", ":", "\n", "        ", "x", "=", "np", ".", "hstack", "(", "[", "b", ",", "a", "*", "z", "]", ")", "\n", "self", ".", "V", "+=", "np", ".", "matmul", "(", "(", "x", "[", "np", ".", "newaxis", ",", ":", "]", ")", ".", "T", ",", "x", "[", "np", ".", "newaxis", ",", ":", "]", ")", "\n", "self", ".", "vec", "+=", "(", "x", "*", "r", ")", "\n", "self", ".", "V_inv", "=", "np", ".", "linalg", ".", "inv", "(", "self", ".", "V", ")", "\n", "self", ".", "theta", "=", "np", ".", "matmul", "(", "self", ".", "V_inv", ",", "self", ".", "vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.LinearUCB.get_pi": [[73, 87], ["numpy.hstack", "numpy.hstack", "numpy.dot", "numpy.sqrt", "numpy.sqrt", "numpy.matmul", "numpy.sqrt", "numpy.matmul", "numpy.matmul", "numpy.matmul"], "methods", ["None"], ["", "def", "get_pi", "(", "self", ",", "b", ",", "z0", ",", "z1", ")", ":", "\n", "        ", "x0", "=", "np", ".", "hstack", "(", "[", "b", ",", "z0", "]", ")", "\n", "x1", "=", "np", ".", "hstack", "(", "[", "b", ",", "z1", "]", ")", "\n", "diff", "=", "np", ".", "dot", "(", "x0", "-", "x1", ",", "self", ".", "theta", ")", "+", "self", ".", "gamma", "*", "(", "np", ".", "sqrt", "(", "np", ".", "matmul", "(", "x0", ",", "np", ".", "matmul", "(", "self", ".", "V_inv", ",", "x0", ")", ")", ")", "-", "np", ".", "sqrt", "(", "np", ".", "sqrt", "(", "np", ".", "matmul", "(", "x1", ",", "np", ".", "matmul", "(", "self", ".", "V_inv", ",", "x1", ")", ")", ")", ")", ")", "\n", "\n", "if", "diff", "<", "0", ":", "\n", "            ", "return", "1.0", "\n", "#return self.pi_max", "\n", "", "elif", "diff", ">", "0", ":", "\n", "            ", "return", "0.0", "\n", "#return self.pi_min", "\n", "", "else", ":", "\n", "            ", "return", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.LinearUCB.get_action": [[88, 93], ["algorithms.LinearUCB.get_pi", "scipy.stats.bernoulli.rvs", "int"], "methods", ["home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.get_pi"], ["", "", "def", "get_action", "(", "self", ",", "b", ",", "z0", ",", "z1", ",", "misc", "=", "False", ")", ":", "\n", "        ", "pi", "=", "self", ".", "get_pi", "(", "b", ",", "z0", ",", "z1", ")", "\n", "a", "=", "bernoulli", ".", "rvs", "(", "pi", ")", "\n", "\n", "return", "int", "(", "a", ")", ",", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.__init__": [[102, 117], ["numpy.zeros", "numpy.linalg.inv", "numpy.matmul", "numpy.identity", "numpy.sqrt", "numpy.sqrt", "numpy.log", "numpy.log", "numpy.log", "numpy.log"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "d", ",", "T", ",", "gamma", "=", "None", ")", ":", "\n", "        ", "self", ".", "d", "=", "d", "\n", "self", ".", "T", "=", "T", "\n", "if", "gamma", "is", "not", "None", ":", "\n", "            ", "self", ".", "reg", "=", "1", "\n", "self", ".", "gamma", "=", "gamma", "\n", "", "else", ":", "\n", "            ", "self", ".", "p", "=", "0.1", "\n", "self", ".", "reg", "=", "4", "*", "self", ".", "d", "*", "np", ".", "log", "(", "9", "*", "self", ".", "T", ")", "+", "8", "*", "np", ".", "log", "(", "4", "*", "T", "/", "self", ".", "p", ")", "\n", "self", ".", "gamma", "=", "np", ".", "sqrt", "(", "self", ".", "reg", ")", "+", "np", ".", "sqrt", "(", "27", "*", "self", ".", "d", "*", "np", ".", "log", "(", "1", "+", "2", "*", "T", "/", "d", ")", "+", "54", "*", "np", ".", "log", "(", "4", "*", "T", "/", "self", ".", "p", ")", ")", "\n", "# init hat_delta,cov", "\n", "", "self", ".", "vec", "=", "np", ".", "zeros", "(", "self", ".", "d", ")", "\n", "self", ".", "V", "=", "np", ".", "identity", "(", "d", ")", "*", "self", ".", "reg", "\n", "self", ".", "V_inv", "=", "np", ".", "linalg", ".", "inv", "(", "self", ".", "V", ")", "\n", "self", ".", "delta", "=", "np", ".", "matmul", "(", "self", ".", "V_inv", ",", "self", ".", "vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.update": [[120, 128], ["numpy.matmul", "numpy.linalg.inv", "numpy.matmul"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "a", ",", "pi", ",", "r", ",", "z", ")", ":", "\n", "\n", "        ", "mu", "=", "pi", "*", "z", "\n", "self", ".", "V", "+=", "np", ".", "matmul", "(", "(", "z", "*", "a", "-", "mu", ")", "[", ":", ",", "np", ".", "newaxis", "]", ",", "(", "z", "*", "a", "-", "mu", ")", "[", "np", ".", "newaxis", ",", ":", "]", ")", "\n", "self", ".", "vec", "+=", "(", "r", "*", "(", "z", "*", "a", "-", "mu", ")", ")", "\n", "\n", "self", ".", "V_inv", "=", "np", ".", "linalg", ".", "inv", "(", "self", ".", "V", ")", "\n", "self", ".", "delta", "=", "np", ".", "matmul", "(", "self", ".", "V_inv", ",", "self", ".", "vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.get_pi": [[130, 142], ["numpy.sum", "numpy.sqrt", "numpy.matmul", "numpy.matmul"], "methods", ["None"], ["", "def", "get_pi", "(", "self", ",", "z0", ",", "z1", ")", ":", "\n", "        ", "diff", "=", "z1", "-", "z0", "\n", "ls", "=", "np", ".", "sqrt", "(", "np", ".", "matmul", "(", "diff", ",", "np", ".", "matmul", "(", "self", ".", "V_inv", ",", "diff", ")", ")", ")", "*", "self", ".", "gamma", "\n", "rs", "=", "np", ".", "sum", "(", "self", ".", "delta", "*", "diff", ")", "\n", "if", "rs", ">=", "ls", ":", "\n", "            ", "pi", "=", "1.0", "\n", "#pi = self.pi_max            ", "\n", "", "elif", "-", "rs", ">=", "ls", ":", "\n", "#pi = self.pi_min ", "\n", "            ", "pi", "=", "0.0", "\n", "", "else", ":", "pi", "=", "0.5", "\n", "return", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.get_action": [[143, 148], ["algorithms.BOSE.get_pi", "scipy.stats.bernoulli.rvs"], "methods", ["home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.algorithms.BOSE.get_pi"], ["", "def", "get_action", "(", "self", ",", "z0", ",", "z1", ",", "misc", "=", "False", ")", ":", "\n", "        ", "pi", "=", "self", ".", "get_pi", "(", "z0", ",", "z1", ")", "\n", "a", "=", "bernoulli", ".", "rvs", "(", "pi", ")", "\n", "if", "misc", ":", "return", "a", ",", "pi", ",", "rs", ",", "ls", "\n", "else", ":", "return", "a", ",", "pi", "\n", "", "", ""]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.environments.ContextualBandit.__init__": [[12, 20], ["len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "g", ",", "Z", ",", "delta", ",", "sig", "=", "0.5", ")", ":", "\n", "\n", "        ", "self", ".", "g", "=", "g", "\n", "self", ".", "Z", "=", "Z", "\n", "self", ".", "delta", "=", "delta", "\n", "self", ".", "df", "=", "len", "(", "delta", ")", "\n", "\n", "self", ".", "sig", "=", "sig", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.environments.ContextualBandit.re_init": [[21, 23], ["None"], "methods", ["None"], ["", "def", "re_init", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.environments.ContextualBandit.pull": [[24, 36], ["isinstance", "numpy.random.randn", "numpy.repeat", "numpy.random.randn", "numpy.sum", "numpy.repeat", "numpy.dot"], "methods", ["None"], ["", "def", "pull", "(", "self", ",", "curr_t", ",", "a", ",", "size", "=", "1", ")", ":", "\n", "        ", "if", "isinstance", "(", "a", ",", "int", ")", ":", "\n", "# select action", "\n", "# get reward", "\n", "            ", "r", "=", "a", "*", "np", ".", "sum", "(", "self", ".", "Z", "[", "curr_t", "]", "*", "self", ".", "delta", ")", "+", "self", ".", "g", "[", "curr_t", "]", "+", "np", ".", "random", ".", "randn", "(", ")", "*", "self", ".", "sig", "\n", "return", "r", "\n", "", "else", ":", "\n", "# select action", "\n", "            ", "r", "=", "a", "*", "np", ".", "repeat", "(", "np", ".", "dot", "(", "self", ".", "Z", ",", "self", ".", "delta", ")", "[", "np", ".", "newaxis", ",", ":", "]", ",", "a", ".", "shape", "[", "0", "]", ",", "0", ")", "+", "np", ".", "repeat", "(", "self", ".", "g", "[", "np", ".", "newaxis", ",", ":", "]", ",", "a", ".", "shape", "[", "0", "]", ",", "0", ")", "+", "np", ".", "random", ".", "randn", "(", "a", ".", "shape", "[", "0", "]", ",", "a", ".", "shape", "[", "1", "]", ")", "*", "self", ".", "sig", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.environments.HeartStep.__init__": [[39, 48], ["len", "numpy.random.randn", "numpy.sqrt"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "gamma", ",", "Z", ",", "delta", ",", "sig", "=", "30", ")", ":", "\n", "\n", "        ", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "Z", "=", "Z", "\n", "self", ".", "delta", "=", "delta", "\n", "self", ".", "df", "=", "len", "(", "delta", ")", "\n", "\n", "self", ".", "sig", "=", "sig", "\n", "self", ".", "pre_eps", "=", "np", ".", "random", ".", "randn", "(", ")", "*", "np", ".", "sqrt", "(", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.environments.HeartStep.re_init": [[50, 52], ["numpy.random.randn", "numpy.sqrt"], "methods", ["None"], ["", "def", "re_init", "(", "self", ")", ":", "\n", "        ", "self", ".", "pre_eps", "=", "np", ".", "random", ".", "randn", "(", ")", "*", "np", ".", "sqrt", "(", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.environments.HeartStep.pull": [[55, 76], ["isinstance", "numpy.random.randn", "numpy.zeros", "range", "numpy.random.randn", "numpy.random.randn", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.repeat", "numpy.sqrt", "numpy.sum", "numpy.sqrt", "numpy.repeat", "numpy.dot"], "methods", ["None"], ["", "def", "pull", "(", "self", ",", "t_", ",", "a", ",", "size", "=", "1", ")", ":", "\n", "        ", "if", "isinstance", "(", "a", ",", "int", ")", ":", "\n", "# get eps", "\n", "            ", "eps", "=", "self", ".", "pre_eps", "/", "np", ".", "sqrt", "(", "2", ")", "+", "np", ".", "random", ".", "randn", "(", ")", "\n", "# get reward", "\n", "r", "=", "a", "*", "np", ".", "sum", "(", "self", ".", "Z", "[", "t_", "]", "*", "self", ".", "delta", ")", "+", "self", ".", "gamma", "[", "t_", "]", "+", "eps", "*", "self", ".", "sig", "[", "t_", "]", "/", "np", ".", "sqrt", "(", "2", ")", "\n", "self", ".", "pre_eps", "=", "eps", "\n", "return", "r", "\n", "", "else", ":", "\n", "            ", "T", "=", "a", ".", "shape", "[", "1", "]", "\n", "N", "=", "a", ".", "shape", "[", "0", "]", "\n", "e", "=", "np", ".", "random", ".", "randn", "(", "N", ",", "T", ")", "\n", "# noise follows AR(1) process", "\n", "eps", "=", "np", ".", "zeros", "(", "[", "N", ",", "T", "+", "1", "]", ")", "\n", "eps", "[", ":", ",", "0", "]", "=", "np", ".", "random", ".", "randn", "(", "N", ")", "*", "np", ".", "sqrt", "(", "2", ")", "\n", "for", "i", "in", "range", "(", "T", ")", ":", "\n", "                ", "eps", "[", ":", ",", "i", "+", "1", "]", "+=", "(", "eps", "[", ":", ",", "i", "]", "/", "np", ".", "sqrt", "(", "2", ")", "+", "e", "[", ":", ",", "i", "]", ")", "\n", "", "eps", "=", "eps", "[", ":", ",", "1", ":", "]", "\n", "r", "=", "a", "*", "np", ".", "repeat", "(", "np", ".", "dot", "(", "self", ".", "Z", ",", "self", ".", "delta", ")", "[", "np", ".", "newaxis", ",", ":", "]", ",", "N", ",", "0", ")", "+", "np", ".", "repeat", "(", "self", ".", "gamma", "[", "np", ".", "newaxis", ",", ":", "]", ",", "N", ",", "0", ")", "+", "eps", "*", "self", ".", "sig", "/", "np", ".", "sqrt", "(", "2", ")", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.utils.solve_pi": [[5, 17], ["numpy.linspace", "scipy.stats.ncx2.cdf", "scipy.stats.chi2.ppf", "numpy.array", "numpy.matmul", "numpy.argmin", "numpy.square", "numpy.matmul", "numpy.abs", "numpy.matmul", "numpy.sum", "numpy.square", "numpy.sqrt", "numpy.sqrt", "z.reshape"], "function", ["None"], ["def", "solve_pi", "(", "sig", ",", "delta", ",", "alpha", ",", "beta", ",", "N", ",", "T", ",", "Z", ",", "df", "=", "1", ")", ":", "\n", "# grid search for non-central parameter", "\n", "    ", "c_N", "=", "np", ".", "linspace", "(", "5", ",", "10", ",", "501", ")", "\n", "pdfs", "=", "ncx2", ".", "cdf", "(", "chi2", ".", "ppf", "(", "1", "-", "alpha", ",", "df", ")", ",", "df", ",", "c_N", ")", "\n", "c_N", "=", "c_N", "[", "np", ".", "argmin", "(", "np", ".", "abs", "(", "pdfs", "-", "beta", ")", ")", "]", "\n", "if", "df", "==", "1", ":", "\n", "        ", "s", "=", "T", "*", "np", ".", "square", "(", "delta", ")", "\n", "", "else", ":", "\n", "        ", "ZZ", "=", "np", ".", "array", "(", "[", "np", ".", "matmul", "(", "z", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "z", "[", "np", ".", "newaxis", ",", ":", "]", ")", "for", "z", "in", "Z", "]", ")", "\n", "s", "=", "np", ".", "matmul", "(", "delta", ",", "np", ".", "matmul", "(", "np", ".", "sum", "(", "ZZ", ",", "axis", "=", "0", ")", ",", "delta", ")", ")", "\n", "", "d", "=", "np", ".", "square", "(", "sig", ")", "*", "c_N", "/", "N", "/", "s", "\n", "return", "1", "/", "2", "-", "np", ".", "sqrt", "(", "1", "-", "4", "*", "d", ")", "/", "2", ",", "1", "/", "2", "+", "np", ".", "sqrt", "(", "1", "-", "4", "*", "d", ")", "/", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.utils.type_i_error": [[20, 25], ["len", "len", "numpy.sqrt", "numpy.where", "len", "scipy.stats.chi2.ppf"], "function", ["None"], ["", "def", "type_i_error", "(", "stats", ",", "alpha", "=", "0.05", ",", "df", "=", "1", ")", ":", "\n", "#print (df)", "\n", "    ", "err", "=", "1.", "*", "len", "(", "np", ".", "where", "(", "stats", ">=", "chi2", ".", "ppf", "(", "1", "-", "alpha", ",", "df", ")", ")", "[", "0", "]", ")", "/", "len", "(", "stats", ")", "\n", "#err = 1.*len(np.where(stats>=f.ppf(1-alpha,df,len(stats)-4))[0])/len(stats)", "\n", "return", "err", ",", "np", ".", "sqrt", "(", "err", "*", "(", "1", "-", "err", ")", "/", "len", "(", "stats", ")", ")", "*", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.utils.power": [[27, 30], ["len", "len", "numpy.sqrt", "numpy.where", "len", "scipy.stats.chi2.ppf"], "function", ["None"], ["", "def", "power", "(", "stats", ",", "alpha", "=", "0.05", ",", "df", "=", "1", ")", ":", "\n", "    ", "power", "=", "1.", "*", "len", "(", "np", ".", "where", "(", "stats", ">=", "chi2", ".", "ppf", "(", "1", "-", "alpha", ",", "df", ")", ")", "[", "0", "]", ")", "/", "len", "(", "stats", ")", "\n", "return", "power", ",", "np", ".", "sqrt", "(", "power", "*", "(", "1", "-", "power", ")", "/", "len", "(", "stats", ")", ")", "*", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.utils.regret_cal": [[31, 35], ["len", "numpy.sum", "numpy.vstack", "numpy.mean", "numpy.mean", "numpy.sqrt", "numpy.sqrt", "numpy.std", "len", "numpy.std", "len"], "function", ["None"], ["", "def", "regret_cal", "(", "opt", ",", "R", ")", ":", "\n", "    ", "N", "=", "len", "(", "R", ")", "\n", "R", "=", "np", ".", "sum", "(", "np", ".", "vstack", "(", "R", ")", ",", "axis", "=", "1", ")", "\n", "return", "np", ".", "mean", "(", "R", ")", ",", "np", ".", "std", "(", "R", ")", "*", "2", "/", "np", ".", "sqrt", "(", "len", "(", "R", ")", ")", ",", "np", ".", "mean", "(", "opt", "-", "R", ")", ",", "np", ".", "std", "(", "opt", "-", "R", ")", "*", "2", "/", "np", ".", "sqrt", "(", "len", "(", "R", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.utils.stats_terms": [[36, 72], ["numpy.dstack", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.linalg.inv", "numpy.matmul", "numpy.matmul", "range", "numpy.ones", "numpy.nonzero", "numpy.linalg.cholesky", "numpy.nonzero", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.dot", "numpy.matmul", "numpy.array", "numpy.matmul"], "function", ["None"], ["", "def", "stats_terms", "(", "A", ",", "R", ",", "Pi", ",", "B", ",", "Z", "=", "None", ")", ":", "\n", "    ", "N", "=", "A", ".", "shape", "[", "0", "]", "\n", "T", "=", "A", ".", "shape", "[", "1", "]", "\n", "if", "Z", "is", "None", ":", "Z", "=", "np", ".", "ones", "(", "[", "N", ",", "T", ",", "1", "]", ")", "\n", "X", "=", "np", ".", "dstack", "(", "[", "B", ",", "(", "A", "-", "Pi", ")", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "*", "Z", "]", ")", "\n", "dn", "=", "X", ".", "shape", "[", "-", "1", "]", "\n", "d2", "=", "Z", ".", "shape", "[", "-", "1", "]", "\n", "term1", "=", "np", ".", "zeros", "(", "[", "dn", ",", "dn", "]", ")", "\n", "term2", "=", "np", ".", "zeros", "(", "dn", ")", "\n", "term3", "=", "np", ".", "zeros", "(", "[", "dn", ",", "dn", "]", ")", "\n", "\n", "# hat_theta", "\n", "for", "n", "in", "range", "(", "N", ")", ":", "\n", "        ", "idx", "=", "np", ".", "nonzero", "(", "Pi", "[", "n", "]", "*", "(", "1", "-", "Pi", "[", "n", "]", ")", ")", "\n", "denom", "=", "(", "Pi", "[", "n", "]", "*", "(", "1", "-", "Pi", "[", "n", "]", ")", ")", "[", "idx", "]", "\n", "Xtmp", "=", "X", "[", "n", "]", "[", "idx", "]", "\n", "\n", "term1", "+=", "(", "np", ".", "sum", "(", "np", ".", "array", "(", "[", "np", ".", "matmul", "(", "x", "[", ":", ",", "np", ".", "newaxis", "]", ",", "x", "[", ":", ",", "np", ".", "newaxis", "]", ".", "T", ")", "for", "x", "in", "Xtmp", "]", ")", "/", "denom", "[", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", ",", "axis", "=", "0", ")", ")", "/", "N", "\n", "term2", "+=", "(", "np", ".", "sum", "(", "Xtmp", "*", "R", "[", "n", "]", "[", "idx", "]", "[", ":", ",", "np", ".", "newaxis", "]", "/", "denom", "[", ":", ",", "np", ".", "newaxis", "]", ",", "axis", "=", "0", ")", ")", "/", "N", "\n", "\n", "", "L", "=", "np", ".", "linalg", ".", "inv", "(", "np", ".", "linalg", ".", "cholesky", "(", "term1", ")", ")", "\n", "term1_inv", "=", "np", ".", "matmul", "(", "L", ".", "T", ",", "L", ")", "\n", "theta", "=", "np", ".", "matmul", "(", "term1_inv", ",", "term2", ")", "\n", "# cov_hat", "\n", "for", "n", "in", "range", "(", "N", ")", ":", "\n", "        ", "idx", "=", "np", ".", "nonzero", "(", "Pi", "[", "n", "]", "*", "(", "1", "-", "Pi", "[", "n", "]", ")", ")", "\n", "denom", "=", "(", "Pi", "[", "n", "]", "*", "(", "1", "-", "Pi", "[", "n", "]", ")", ")", "[", "idx", "]", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "Xtmp", "=", "X", "[", "n", "]", "[", "idx", "]", "\n", "res", "=", "R", "[", "n", "]", "[", "idx", "]", "-", "np", ".", "dot", "(", "Xtmp", ",", "theta", ")", "\n", "res", "=", "np", ".", "sum", "(", "res", "[", ":", ",", "np", ".", "newaxis", "]", "*", "Xtmp", "/", "denom", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "\n", "term3", "+=", "np", ".", "matmul", "(", "res", ".", "T", ",", "res", ")", "/", "N", "\n", "\n", "\n", "# statistics = N*delta*cov_{-1}*delta", "\n", "", "delta", "=", "theta", "[", "-", "d2", ":", "]", "\n", "return", "delta", ",", "term1", ",", "term3", "\n", "\n"]], "home.repos.pwc.inspect_result.dtak_power-constrained-bandits-public.None.utils.get_stats": [[73, 80], ["numpy.linalg.inv", "numpy.matmul", "numpy.linalg.cholesky", "numpy.matmul", "numpy.squeeze", "numpy.matmul", "numpy.matmul", "numpy.expand_dims", "numpy.matmul", "numpy.expand_dims"], "function", ["None"], ["", "def", "get_stats", "(", "deltas", ",", "term1", ",", "term2", ",", "N", ")", ":", "\n", "    ", "d", "=", "deltas", ".", "shape", "[", "1", "]", "\n", "L", "=", "np", ".", "linalg", ".", "inv", "(", "np", ".", "linalg", ".", "cholesky", "(", "term2", ")", ")", "\n", "term2_inv", "=", "np", ".", "matmul", "(", "L", ".", "T", ",", "L", ")", "\n", "cov_inv", "=", "np", ".", "matmul", "(", "term1", ",", "np", ".", "matmul", "(", "term2_inv", ",", "term1", ")", ")", "[", "-", "d", ":", ",", "-", "d", ":", "]", "\n", "stats", "=", "N", "*", "np", ".", "squeeze", "(", "np", ".", "matmul", "(", "np", ".", "expand_dims", "(", "deltas", ",", "axis", "=", "1", ")", ",", "np", ".", "matmul", "(", "cov_inv", ",", "np", ".", "expand_dims", "(", "deltas", ",", "axis", "=", "2", ")", ")", ")", ")", "\n", "return", "stats", "\n", "\n"]]}