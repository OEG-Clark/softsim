{"home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.code.optALL.ContinueEX": [[6, 23], ["os.path.exists", "print", "Utils.helper.RunExperiment", "os.path.exists", "print", "Utils.helper.RunExperiment", "len", "mode.upper", "open().readlines", "print", "Utils.helper.RunExperiment", "print", "open", "int"], "function", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.RunExperiment", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.RunExperiment", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.RunExperiment"], ["def", "ContinueEX", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ")", ":", "\n", "    ", "resDir", "=", "'res'", "+", "mode", ".", "upper", "(", ")", "+", "'/'", "+", "target", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "resDir", ")", ":", "\n", "        ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'Start!'", ")", "\n", "RunExperiment", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ")", "\n", "", "else", ":", "\n", "        ", "resFile", "=", "resDir", "+", "'/'", "+", "adpt", "+", "'-'", "+", "clf", "+", "'.txt'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "resFile", ")", ":", "\n", "            ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'Start!'", ")", "\n", "RunExperiment", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ")", "\n", "", "else", ":", "\n", "            ", "count", "=", "len", "(", "open", "(", "resFile", ",", "'rU'", ")", ".", "readlines", "(", ")", ")", "\n", "if", "count", "<", "10", ":", "\n", "                ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'Start!'", ")", "\n", "RunExperiment", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ",", "repeat", "=", "int", "(", "10", "-", "count", ")", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'done'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.code.optADPT.ContinueEX": [[6, 23], ["os.path.exists", "print", "Utils.helper.RunExperiment", "os.path.exists", "print", "Utils.helper.RunExperiment", "len", "mode.upper", "open().readlines", "print", "Utils.helper.RunExperiment", "print", "open", "int"], "function", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.RunExperiment", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.RunExperiment", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.RunExperiment"], ["def", "ContinueEX", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ")", ":", "\n", "    ", "resDir", "=", "'res'", "+", "mode", ".", "upper", "(", ")", "+", "'/'", "+", "target", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "resDir", ")", ":", "\n", "        ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'Start!'", ")", "\n", "RunExperiment", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ")", "\n", "", "else", ":", "\n", "        ", "resFile", "=", "resDir", "+", "'/'", "+", "adpt", "+", "'-'", "+", "clf", "+", "'.txt'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "resFile", ")", ":", "\n", "            ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'Start!'", ")", "\n", "RunExperiment", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ")", "\n", "", "else", ":", "\n", "            ", "count", "=", "len", "(", "open", "(", "resFile", ",", "'rU'", ")", ".", "readlines", "(", ")", ")", "\n", "if", "count", "<", "10", ":", "\n", "                ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'Start!'", ")", "\n", "RunExperiment", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ",", "repeat", "=", "int", "(", "10", "-", "count", ")", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'done'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.code.optCLF.ContinueEX": [[6, 23], ["os.path.exists", "print", "Utils.helper.RunExperiment", "os.path.exists", "print", "Utils.helper.RunExperiment", "len", "mode.upper", "open().readlines", "print", "Utils.helper.RunExperiment", "print", "open", "int"], "function", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.RunExperiment", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.RunExperiment", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.RunExperiment"], ["def", "ContinueEX", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ")", ":", "\n", "    ", "resDir", "=", "'res'", "+", "mode", ".", "upper", "(", ")", "+", "'/'", "+", "target", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "resDir", ")", ":", "\n", "        ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'Start!'", ")", "\n", "RunExperiment", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ")", "\n", "", "else", ":", "\n", "        ", "resFile", "=", "resDir", "+", "'/'", "+", "adpt", "+", "'-'", "+", "clf", "+", "'.txt'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "resFile", ")", ":", "\n", "            ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'Start!'", ")", "\n", "RunExperiment", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ")", "\n", "", "else", ":", "\n", "            ", "count", "=", "len", "(", "open", "(", "resFile", ",", "'rU'", ")", ".", "readlines", "(", ")", ")", "\n", "if", "count", "<", "10", ":", "\n", "                ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'Start!'", ")", "\n", "RunExperiment", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ",", "repeat", "=", "int", "(", "10", "-", "count", ")", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'done'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.code.optSEQ.ContinueEX": [[6, 23], ["os.path.exists", "print", "Utils.helper.RunExperiment", "os.path.exists", "print", "Utils.helper.RunExperiment", "len", "mode.upper", "open().readlines", "print", "Utils.helper.RunExperiment", "print", "open", "int"], "function", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.RunExperiment", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.RunExperiment", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.RunExperiment"], ["def", "ContinueEX", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ")", ":", "\n", "    ", "resDir", "=", "'res'", "+", "mode", ".", "upper", "(", ")", "+", "'/'", "+", "target", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "resDir", ")", ":", "\n", "        ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'Start!'", ")", "\n", "RunExperiment", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ")", "\n", "", "else", ":", "\n", "        ", "resFile", "=", "resDir", "+", "'/'", "+", "adpt", "+", "'-'", "+", "clf", "+", "'.txt'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "resFile", ")", ":", "\n", "            ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'Start!'", ")", "\n", "RunExperiment", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ")", "\n", "", "else", ":", "\n", "            ", "count", "=", "len", "(", "open", "(", "resFile", ",", "'rU'", ")", ".", "readlines", "(", ")", ")", "\n", "if", "count", "<", "10", ":", "\n", "                ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'Start!'", ")", "\n", "RunExperiment", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adpt", ",", "clf", ",", "mode", ",", "repeat", "=", "int", "(", "10", "-", "count", ")", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "target", "+", "':'", "+", "adpt", "+", "'-'", "+", "clf", "+", "' '", "+", "'done'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.classlib.trAdaBoost.__init__": [[23, 33], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "trans_S", ",", "trans_A", ",", "label_S", ",", "label_A", ",", "testX", ",", "N", ",", "initWeight", ",", "clf", ")", ":", "\n", "        ", "self", ".", "trans_S", "=", "trans_S", "\n", "self", ".", "trans_A", "=", "trans_A", "\n", "self", ".", "label_S", "=", "label_S", "\n", "self", ".", "label_A", "=", "label_A", "\n", "self", ".", "N", "=", "N", "\n", "self", ".", "test", "=", "testX", "\n", "self", ".", "weight", "=", "initWeight", "\n", "self", ".", "m", "=", "clf", "\n", "self", ".", "error", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.classlib.trAdaBoost.fit": [[34, 108], ["numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "classlib.trAdaBoost.weight.reshape", "numpy.concatenate", "numpy.zeros", "numpy.ones", "numpy.zeros", "numpy.asarray", "numpy.asarray", "numpy.asarray", "range", "range", "numpy.ones", "classlib.trAdaBoost.calculate_P", "classlib.trAdaBoost.train_classify", "classlib.trAdaBoost.calculate_error_rate", "range", "range", "numpy.sum", "numpy.sqrt", "numpy.sum", "numpy.sqrt", "numpy.power", "numpy.power", "numpy.log", "numpy.log", "numpy.log", "numpy.abs", "numpy.log", "numpy.abs", "int", "numpy.ceil", "int", "int", "numpy.ceil", "numpy.ceil"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.calculate_P", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.train_classify", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.calculate_error_rate"], ["", "def", "fit", "(", "self", ")", ":", "\n", "        ", "trans_data", "=", "np", ".", "concatenate", "(", "(", "self", ".", "trans_A", ",", "self", ".", "trans_S", ")", ",", "axis", "=", "0", ")", "\n", "trans_label", "=", "np", ".", "concatenate", "(", "(", "self", ".", "label_A", ",", "self", ".", "label_S", ")", ",", "axis", "=", "0", ")", "\n", "\n", "row_A", "=", "self", ".", "trans_A", ".", "shape", "[", "0", "]", "\n", "row_S", "=", "self", ".", "trans_S", ".", "shape", "[", "0", "]", "\n", "row_T", "=", "self", ".", "test", ".", "shape", "[", "0", "]", "\n", "N", "=", "self", ".", "N", "\n", "\n", "test_data", "=", "np", ".", "concatenate", "(", "(", "trans_data", ",", "self", ".", "test", ")", ",", "axis", "=", "0", ")", "\n", "\n", "# \u521d\u59cb\u5316\u6743\u91cd", "\n", "weights_A", "=", "np", ".", "ones", "(", "[", "row_A", ",", "1", "]", ")", "/", "row_A", "\n", "weights_S", "=", "self", ".", "weight", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "weights", "=", "np", ".", "concatenate", "(", "(", "weights_A", ",", "weights_S", ")", ",", "axis", "=", "0", ")", "\n", "\n", "# \u9632\u6b62\u9664\u6570\u4e3a\u96f6", "\n", "if", "N", "==", "0", "or", "(", "1", "+", "np", ".", "sqrt", "(", "2", "*", "np", ".", "log", "(", "row_A", "/", "N", ")", ")", ")", "==", "0", ":", "\n", "            ", "self", ".", "error", "=", "1", "\n", "return", "\n", "", "bata", "=", "1", "/", "(", "1", "+", "np", ".", "sqrt", "(", "2", "*", "np", ".", "log", "(", "row_A", "/", "N", ")", ")", ")", "\n", "\n", "# \u5b58\u50a8\u6bcf\u6b21\u8fed\u4ee3\u7684\u6807\u7b7e\u548cbata\u503c\uff1f", "\n", "bata_T", "=", "np", ".", "zeros", "(", "[", "1", ",", "N", "]", ")", "\n", "result_label", "=", "np", ".", "ones", "(", "[", "row_A", "+", "row_S", "+", "row_T", ",", "N", "]", ")", "\n", "\n", "predict", "=", "np", ".", "zeros", "(", "[", "row_T", "]", ")", "\n", "\n", "# print('params initial finished.')", "\n", "trans_data", "=", "np", ".", "asarray", "(", "trans_data", ",", "order", "=", "'C'", ")", "\n", "trans_label", "=", "np", ".", "asarray", "(", "trans_label", ",", "order", "=", "'C'", ")", "\n", "test_data", "=", "np", ".", "asarray", "(", "test_data", ",", "order", "=", "'C'", ")", "\n", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "P", "=", "self", ".", "calculate_P", "(", "weights", ",", "trans_label", ")", "\n", "\n", "result_label", "[", ":", ",", "i", "]", "=", "self", ".", "train_classify", "(", "trans_data", ",", "trans_label", ",", "\n", "test_data", ",", "P", ")", "\n", "# print('result,', result_label[:, i], row_A, row_S, i, result_label.shape)", "\n", "\n", "error_rate", "=", "self", ".", "calculate_error_rate", "(", "self", ".", "label_S", ",", "result_label", "[", "row_A", ":", "row_A", "+", "row_S", ",", "i", "]", ",", "\n", "weights", "[", "row_A", ":", "row_A", "+", "row_S", ",", ":", "]", ")", "\n", "# print('Error rate:', error_rate)", "\n", "if", "error_rate", ">", "0.5", ":", "\n", "                ", "error_rate", "=", "0.5", "\n", "", "if", "error_rate", "==", "0", ":", "\n", "                ", "N", "=", "i", "\n", "break", "# \u9632\u6b62\u8fc7\u62df\u5408", "\n", "# error_rate = 0.001", "\n", "\n", "", "bata_T", "[", "0", ",", "i", "]", "=", "error_rate", "/", "(", "1", "-", "error_rate", ")", "\n", "\n", "# \u8c03\u6574\u6e90\u57df\u6837\u672c\u6743\u91cd", "\n", "for", "j", "in", "range", "(", "row_S", ")", ":", "\n", "                ", "weights", "[", "row_A", "+", "j", "]", "=", "weights", "[", "row_A", "+", "j", "]", "*", "np", ".", "power", "(", "bata_T", "[", "0", ",", "i", "]", ",", "\n", "(", "-", "np", ".", "abs", "(", "result_label", "[", "row_A", "+", "j", ",", "i", "]", "-", "self", ".", "label_S", "[", "j", "]", ")", ")", ")", "\n", "\n", "# \u8c03\u6574\u8f85\u57df\u6837\u672c\u6743\u91cd", "\n", "", "for", "j", "in", "range", "(", "row_A", ")", ":", "\n", "                ", "weights", "[", "j", "]", "=", "weights", "[", "j", "]", "*", "np", ".", "power", "(", "bata", ",", "np", ".", "abs", "(", "result_label", "[", "j", ",", "i", "]", "-", "self", ".", "label_A", "[", "j", "]", ")", ")", "\n", "# print bata_T", "\n", "", "", "for", "i", "in", "range", "(", "row_T", ")", ":", "\n", "# \u8df3\u8fc7\u8bad\u7ec3\u6570\u636e\u7684\u6807\u7b7e", "\n", "            ", "left", "=", "np", ".", "sum", "(", "\n", "result_label", "[", "row_A", "+", "row_S", "+", "i", ",", "int", "(", "np", ".", "ceil", "(", "N", "/", "2", ")", ")", ":", "N", "]", "*", "np", ".", "log", "(", "1", "/", "bata_T", "[", "0", ",", "int", "(", "np", ".", "ceil", "(", "N", "/", "2", ")", ")", ":", "N", "]", ")", ")", "\n", "right", "=", "0.5", "*", "np", ".", "sum", "(", "np", ".", "log", "(", "1", "/", "bata_T", "[", "0", ",", "int", "(", "np", ".", "ceil", "(", "N", "/", "2", ")", ")", ":", "N", "]", ")", ")", "\n", "\n", "if", "left", ">=", "right", ":", "\n", "                ", "predict", "[", "i", "]", "=", "1", "\n", "", "else", ":", "\n", "                ", "predict", "[", "i", "]", "=", "0", "\n", "# print left, right, predict[i]", "\n", "\n", "", "", "self", ".", "label_p", "=", "predict", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.classlib.trAdaBoost.predict": [[109, 111], ["None"], "methods", ["None"], ["", "def", "predict", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "label_p", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.classlib.trAdaBoost.calculate_P": [[113, 116], ["numpy.sum", "numpy.asarray"], "methods", ["None"], ["", "def", "calculate_P", "(", "self", ",", "weights", ",", "label", ")", ":", "\n", "        ", "total", "=", "np", ".", "sum", "(", "weights", ")", "\n", "return", "np", ".", "asarray", "(", "weights", "/", "total", ",", "order", "=", "'C'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.classlib.trAdaBoost.train_classify": [[118, 126], ["classlib.trAdaBoost.m.fit", "classlib.trAdaBoost.m.predict"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.predict"], ["", "def", "train_classify", "(", "self", ",", "trans_data", ",", "trans_label", ",", "test_data", ",", "P", ")", ":", "\n", "        ", "trans_data", "[", "trans_data", "!=", "trans_data", "]", "=", "0", "\n", "trans_label", "[", "trans_label", "!=", "trans_label", "]", "=", "0", "\n", "test_data", "[", "test_data", "!=", "test_data", "]", "=", "0", "\n", "P", "[", "P", "!=", "P", "]", "=", "0", "\n", "\n", "self", ".", "m", ".", "fit", "(", "trans_data", ",", "trans_label", ",", "sample_weight", "=", "P", "[", ":", ",", "0", "]", ")", "\n", "return", "self", ".", "m", ".", "predict", "(", "test_data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.classlib.trAdaBoost.calculate_error_rate": [[128, 134], ["numpy.sum", "numpy.sum", "numpy.abs"], "methods", ["None"], ["", "def", "calculate_error_rate", "(", "self", ",", "label_R", ",", "label_H", ",", "weight", ")", ":", "\n", "        ", "total", "=", "np", ".", "sum", "(", "weight", ")", "\n", "\n", "# print(weight[:, 0] / total)", "\n", "# print(np.abs(label_R - label_H))", "\n", "return", "np", ".", "sum", "(", "weight", "[", ":", ",", "0", "]", "/", "total", "*", "np", ".", "abs", "(", "label_R", "-", "label_H", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamAll.__init__": [[6, 16], ["hyperopt.Trials"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sx", ",", "sy", ",", "tx", ",", "ty", ",", "loc", ",", "classifier", ",", "adaptation", ",", "fe", "=", "1000", ")", ":", "\n", "        ", "self", ".", "sx", "=", "sx", "\n", "self", ".", "sy", "=", "sy", "\n", "self", ".", "tx", "=", "tx", "\n", "self", ".", "ty", "=", "ty", "\n", "self", ".", "loc", "=", "loc", "\n", "self", ".", "adaptation", "=", "adaptation", "\n", "self", ".", "clf", "=", "classifier", "\n", "self", ".", "fe", "=", "fe", "\n", "self", ".", "trails", "=", "Trials", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamAll.objFunc": [[17, 28], ["Algorithms.Framework.cpdp", "Hyperopt_doer.optParamAll.p.set_params", "Hyperopt_doer.optParamAll.p.run", "np.mean", "np.mean"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.set_params", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.run"], ["", "def", "objFunc", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "p", "=", "cpdp", "(", "clf", "=", "self", ".", "clf", ",", "adpt", "=", "self", ".", "adaptation", ")", "\n", "self", ".", "p", ".", "set_params", "(", "**", "params", ")", "\n", "sx", "=", "self", ".", "sx", "\n", "sy", "=", "self", ".", "sy", "\n", "tx", "=", "self", ".", "tx", "\n", "ty", "=", "self", ".", "ty", "\n", "loc", "=", "self", ".", "loc", "\n", "res", "=", "self", ".", "p", ".", "run", "(", "sx", ",", "sy", ",", "tx", ",", "ty", ",", "loc", ")", "\n", "\n", "return", "{", "'loss'", ":", "-", "np", ".", "mean", "(", "res", ")", ",", "'status'", ":", "STATUS_OK", ",", "'result'", ":", "np", ".", "mean", "(", "res", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamAll.run": [[29, 224], ["hyperopt.Trials", "dict", "dict", "hyperopt.fmin", "dict", "list", "Hyperopt_doer.optParamAll.objFunc", "[].keys", "list", "list.append", "np.asarray", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.uniform", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "deepflatten", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "[].values", "max", "int", "int", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "len", "range", "len"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamSEQ.objFunc"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "trails", "=", "Trials", "(", ")", "\n", "\n", "if", "self", ".", "adaptation", "==", "'TCA'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'kernel_type'", ":", "'linear'", ",", "\n", "'dim'", ":", "5", ",", "\n", "'lamb'", ":", "1", ",", "\n", "'gamma'", ":", "1", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'kernel_type'", ":", "hp", ".", "choice", "(", "'kernel_type'", ",", "[", "'primal'", ",", "'linear'", ",", "'rbf'", ",", "'sam'", "]", ")", ",", "\n", "'dim'", ":", "hp", ".", "choice", "(", "'dim'", ",", "range", "(", "5", ",", "max", "(", "self", ".", "sx", ".", "shape", "[", "1", "]", ",", "self", ".", "tx", ".", "shape", "[", "1", "]", ")", ")", ")", ",", "\n", "'lamb'", ":", "hp", ".", "uniform", "(", "'lamb'", ",", "1e-6", ",", "1e2", ")", ",", "\n", "'gamma'", ":", "hp", ".", "uniform", "(", "'gamma'", ",", "1e-5", ",", "1e2", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'DBSCANfilter'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'eps'", ":", "1", ",", "\n", "'min_samples'", ":", "10", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'eps'", ":", "hp", ".", "uniform", "(", "'eps'", ",", "0.1", ",", "1e2", ")", ",", "\n", "'min_samples'", ":", "hp", ".", "choice", "(", "'min_samples'", ",", "range", "(", "1", ",", "100", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'Bruakfilter'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'n_neighbors'", ":", "10", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'n_neighbors'", ":", "hp", ".", "choice", "(", "'n_neighbors'", ",", "range", "(", "1", ",", "100", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'Peterfilter'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'eachCluster'", ":", "10", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'eachCluster'", ":", "hp", ".", "choice", "(", "'eachCluster'", ",", "range", "(", "1", ",", "100", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'Universal'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'pvalue'", ":", "0.05", ",", "\n", "'QuantifyType'", ":", "'cliff'", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'pvalue'", ":", "hp", ".", "uniform", "(", "'pvalue'", ",", "0.01", ",", "0.1", ")", ",", "\n", "'QuantifyType'", ":", "hp", ".", "choice", "(", "'QuantifyType'", ",", "[", "'cliff'", ",", "'cohen'", "]", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'DTB'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'DTBneighbors'", ":", "10", ",", "\n", "'DTBT'", ":", "20", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'DTBneighbors'", ":", "hp", ".", "choice", "(", "'DTBneighbors'", ",", "range", "(", "1", ",", "50", ")", ")", ",", "\n", "'DTBT'", ":", "hp", ".", "choice", "(", "'DTBT'", ",", "range", "(", "5", ",", "30", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'DS'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'DStopn'", ":", "5", ",", "\n", "'DSfss'", ":", "0.2", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'DStopn'", ":", "hp", ".", "choice", "(", "'DStopn'", ",", "range", "(", "1", ",", "15", ")", ")", ",", "\n", "'DSfss'", ":", "hp", ".", "uniform", "(", "'DSfss'", ",", "0.1", ",", "0.5", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'DSBF'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'DSBFtopk'", ":", "1", ",", "\n", "'DSBFneighbors'", ":", "10", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'DSBFtopk'", ":", "hp", ".", "choice", "(", "'DSBFtopk'", ",", "range", "(", "1", ",", "10", ")", ")", ",", "\n", "'DSBFneighbors'", ":", "hp", ".", "choice", "(", "'DSBFneighbors'", ",", "range", "(", "1", ",", "100", ")", ")", "\n", "}", "\n", "\n", "\n", "", "if", "self", ".", "clf", "==", "'Boost'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'Boostnestimator'", ":", "50", ",", "\n", "'BoostLearnrate'", ":", "1", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'Boostnestimator'", ":", "hp", ".", "choice", "(", "'Boostnestimator'", ",", "range", "(", "10", ",", "1000", ")", ")", ",", "\n", "'BoostLearnrate'", ":", "hp", ".", "uniform", "(", "'BoostLearnrate'", ",", "0.01", ",", "10", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'RF'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'n_estimators'", ":", "10", ",", "\n", "'criterion'", ":", "'gini'", ",", "\n", "'max_features'", ":", "'auto'", ",", "\n", "'RFmin_samples_split'", ":", "2", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'n_estimators'", ":", "hp", ".", "choice", "(", "'n_estimators'", ",", "range", "(", "10", ",", "100", ")", ")", ",", "\n", "'criterion'", ":", "hp", ".", "choice", "(", "'criterion'", ",", "[", "'gini'", ",", "'entropy'", "]", ")", ",", "\n", "'max_features'", ":", "hp", ".", "choice", "(", "'max_features'", ",", "[", "'auto'", ",", "'sqrt'", ",", "'log2'", "]", ")", ",", "\n", "'RFmin_samples_split'", ":", "hp", ".", "choice", "(", "'RFmin_samples_split'", ",", "range", "(", "2", ",", "int", "(", "len", "(", "self", ".", "sy", ")", "/", "10", ")", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'SVM'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'SVCkernel'", ":", "{", "'kernel'", ":", "'poly'", ",", "'degree'", ":", "3", ",", "'polycoef0'", ":", "0.0", ",", "'polygamma'", ":", "1", "}", ",", "\n", "'C'", ":", "1.0", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'SVCkernel'", ":", "hp", ".", "choice", "(", "'SVCkernel'", ",", "[", "\n", "{", "'kernel'", ":", "'linear'", "}", ",", "\n", "{", "'kernel'", ":", "'poly'", ",", "'degree'", ":", "hp", ".", "choice", "(", "'degree'", ",", "range", "(", "1", ",", "5", ")", ")", ",", "\n", "'polycoef0'", ":", "hp", ".", "uniform", "(", "'polycoef0'", ",", "0", ",", "10", ")", ",", "\n", "'polygamma'", ":", "hp", ".", "choice", "(", "'polygamma'", ",", "[", "\"auto\"", ",", "\"scale\"", "]", ")", "}", ",", "\n", "{", "'kernel'", ":", "'sigmoid'", ",", "'sigcoef0'", ":", "hp", ".", "uniform", "(", "'sigcoef0'", ",", "0", ",", "10", ")", ",", "\n", "'siggamma'", ":", "hp", ".", "choice", "(", "'siggamma'", ",", "[", "\"auto\"", ",", "\"scale\"", "]", ")", "}", ",", "\n", "{", "'kernel'", ":", "'rbf'", ",", "'rbfgamma'", ":", "hp", ".", "choice", "(", "'rbfgamma'", ",", "[", "\"auto\"", ",", "\"scale\"", "]", ")", "}", "\n", "]", ")", ",", "\n", "'C'", ":", "hp", ".", "uniform", "(", "'C'", ",", "0.001", ",", "1000", ")", ",", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'NN'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'NNactive'", ":", "'relu'", ",", "\n", "'NNalpha'", ":", "0.0001", ",", "\n", "'NNmaxiter'", ":", "200", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'NNactive'", ":", "hp", ".", "choice", "(", "'NNactive'", ",", "[", "'identity'", ",", "'logistic'", ",", "'tanh'", ",", "'relu'", "]", ")", ",", "\n", "'NNalpha'", ":", "hp", ".", "uniform", "(", "'NNalpha'", ",", "1e-6", ",", "1", ")", ",", "\n", "'NNmaxiter'", ":", "hp", ".", "choice", "(", "'NNmaxiter'", ",", "range", "(", "100", ",", "1000", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'KNN'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'KNNneighbors'", ":", "1", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'KNNneighbors'", ":", "hp", ".", "choice", "(", "'KNNneighbors'", ",", "range", "(", "1", ",", "50", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'NB'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'NBType'", ":", "'gaussian'", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'NBType'", ":", "hp", ".", "choice", "(", "'NBType'", ",", "[", "'gaussian'", ",", "'multinomial'", ",", "'bernoulli'", "]", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'Ridge'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'Ridgealpha'", ":", "1", ",", "\n", "'Ridgenormalize'", ":", "False", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'Ridgealpha'", ":", "hp", ".", "uniform", "(", "'Ridgealpha'", ",", "0.001", ",", "1000", ")", ",", "\n", "'Ridgenormalize'", ":", "hp", ".", "choice", "(", "'Ridgenormlize'", ",", "[", "True", ",", "False", "]", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'CART'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'criterion'", ":", "'gini'", ",", "\n", "'max_features'", ":", "'auto'", ",", "\n", "'CARTsplitter'", ":", "'best'", ",", "\n", "'RFmin_samples_split'", ":", "2", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'criterion'", ":", "hp", ".", "choice", "(", "'criterion'", ",", "[", "'gini'", ",", "'entropy'", "]", ")", ",", "\n", "'max_features'", ":", "hp", ".", "choice", "(", "'max_features'", ",", "[", "'auto'", ",", "'sqrt'", ",", "'log2'", "]", ")", ",", "\n", "'CARTsplitter'", ":", "hp", ".", "choice", "(", "'CARTsplitter'", ",", "[", "'best'", ",", "'random'", "]", ")", ",", "\n", "'RFmin_samples_split'", ":", "hp", ".", "choice", "(", "'RFmin_samples_split'", ",", "range", "(", "2", ",", "int", "(", "len", "(", "self", ".", "sy", ")", "/", "10", ")", ")", ")", "\n", "}", "\n", "\n", "", "paramSpace", "=", "dict", "(", "adptparamSpace", ",", "**", "clfparamSpace", ")", "\n", "default_value", "=", "dict", "(", "adptdefault_value", ",", "**", "clfdefault_value", ")", "\n", "self", ".", "def_value", "=", "self", ".", "objFunc", "(", "default_value", ")", "[", "'result'", "]", "\n", "best", "=", "fmin", "(", "self", ".", "objFunc", ",", "space", "=", "paramSpace", ",", "algo", "=", "tpe", ".", "suggest", ",", "max_evals", "=", "self", ".", "fe", ",", "trials", "=", "self", ".", "trails", ")", "\n", "\n", "his", "=", "dict", "(", ")", "\n", "his", "[", "'name'", "]", "=", "list", "(", "self", ".", "trails", ".", "trials", "[", "0", "]", "[", "'misc'", "]", "[", "'vals'", "]", ".", "keys", "(", ")", ")", "\n", "i", "=", "0", "\n", "for", "item", "in", "self", ".", "trails", ".", "trials", ":", "\n", "            ", "results", "=", "list", "(", "deepflatten", "(", "item", "[", "'misc'", "]", "[", "'vals'", "]", ".", "values", "(", ")", ")", ")", "\n", "results", ".", "append", "(", "item", "[", "'result'", "]", "[", "'result'", "]", ")", "\n", "his", "[", "i", "]", "=", "results", "\n", "i", "+=", "1", "\n", "\n", "", "inc_value", "=", "self", ".", "trails", ".", "best_trial", "[", "'result'", "]", "[", "'result'", "]", "\n", "\n", "return", "np", ".", "asarray", "(", "[", "self", ".", "def_value", ",", "inc_value", "]", ")", ",", "his", ",", "best", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamAdpt.__init__": [[227, 237], ["hyperopt.Trials"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sx", ",", "sy", ",", "tx", ",", "ty", ",", "loc", ",", "classifier", ",", "adaptation", ",", "fe", "=", "1000", ")", ":", "\n", "        ", "self", ".", "sx", "=", "sx", "\n", "self", ".", "sy", "=", "sy", "\n", "self", ".", "tx", "=", "tx", "\n", "self", ".", "ty", "=", "ty", "\n", "self", ".", "loc", "=", "loc", "\n", "self", ".", "adaptation", "=", "adaptation", "\n", "self", ".", "clf", "=", "classifier", "\n", "self", ".", "fe", "=", "fe", "\n", "self", ".", "trails", "=", "Trials", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamAdpt.objFunc": [[238, 249], ["Algorithms.Framework.cpdp", "Hyperopt_doer.optParamAdpt.p.set_params", "Hyperopt_doer.optParamAdpt.p.run", "np.mean", "np.mean"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.set_params", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.run"], ["", "def", "objFunc", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "p", "=", "cpdp", "(", "clf", "=", "self", ".", "clf", ",", "adpt", "=", "self", ".", "adaptation", ")", "\n", "self", ".", "p", ".", "set_params", "(", "**", "params", ")", "\n", "sx", "=", "self", ".", "sx", "\n", "sy", "=", "self", ".", "sy", "\n", "tx", "=", "self", ".", "tx", "\n", "ty", "=", "self", ".", "ty", "\n", "loc", "=", "self", ".", "loc", "\n", "res", "=", "self", ".", "p", ".", "run", "(", "sx", ",", "sy", ",", "tx", ",", "ty", ",", "loc", ")", "\n", "\n", "return", "{", "'loss'", ":", "-", "np", ".", "mean", "(", "res", ")", ",", "'status'", ":", "STATUS_OK", ",", "'result'", ":", "np", ".", "mean", "(", "res", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamAdpt.run": [[250, 357], ["hyperopt.Trials", "hyperopt.fmin", "dict", "list", "Hyperopt_doer.optParamAdpt.objFunc", "[].keys", "list", "list.append", "np.asarray", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.uniform", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "deepflatten", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "[].values", "max"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamSEQ.objFunc"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "trails", "=", "Trials", "(", ")", "\n", "\n", "if", "self", ".", "adaptation", "==", "'TCA'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'kernel_type'", ":", "'linear'", ",", "\n", "'dim'", ":", "5", ",", "\n", "'lamb'", ":", "1", ",", "\n", "'gamma'", ":", "1", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'kernel_type'", ":", "hp", ".", "choice", "(", "'kernel_type'", ",", "[", "'primal'", ",", "'linear'", ",", "'rbf'", ",", "'sam'", "]", ")", ",", "\n", "'dim'", ":", "hp", ".", "choice", "(", "'dim'", ",", "range", "(", "5", ",", "max", "(", "self", ".", "sx", ".", "shape", "[", "1", "]", ",", "self", ".", "tx", ".", "shape", "[", "1", "]", ")", ")", ")", ",", "\n", "'lamb'", ":", "hp", ".", "uniform", "(", "'lamb'", ",", "1e-6", ",", "1e2", ")", ",", "\n", "'gamma'", ":", "hp", ".", "uniform", "(", "'gamma'", ",", "1e-5", ",", "1e2", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'DBSCANfilter'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'eps'", ":", "1", ",", "\n", "'min_samples'", ":", "10", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'eps'", ":", "hp", ".", "uniform", "(", "'eps'", ",", "0.1", ",", "1e2", ")", ",", "\n", "'min_samples'", ":", "hp", ".", "choice", "(", "'min_samples'", ",", "range", "(", "1", ",", "100", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'Bruakfilter'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'n_neighbors'", ":", "10", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'n_neighbors'", ":", "hp", ".", "choice", "(", "'n_neighbors'", ",", "range", "(", "1", ",", "100", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'Peterfilter'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'eachCluster'", ":", "10", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'eachCluster'", ":", "hp", ".", "choice", "(", "'eachCluster'", ",", "range", "(", "1", ",", "100", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'Universal'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'pvalue'", ":", "0.05", ",", "\n", "'QuantifyType'", ":", "'cliff'", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'pvalue'", ":", "hp", ".", "uniform", "(", "'pvalue'", ",", "0.01", ",", "0.1", ")", ",", "\n", "'QuantifyType'", ":", "hp", ".", "choice", "(", "'QuantifyType'", ",", "[", "'cliff'", ",", "'cohen'", "]", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'HISNN'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'MinHam'", ":", "1.0", ",", "\n", "'HISNNneighbors'", ":", "5", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'MinHam'", ":", "hp", ".", "uniform", "(", "'MinHam'", ",", "0.5", ",", "100", ")", ",", "\n", "'HISNNneighbors'", ":", "hp", ".", "choice", "(", "'HISNNneighbors'", ",", "range", "(", "1", ",", "100", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'DTB'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'DTBneighbors'", ":", "10", ",", "\n", "'DTBT'", ":", "20", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'DTBneighbors'", ":", "hp", ".", "choice", "(", "'DTBneighbors'", ",", "range", "(", "1", ",", "50", ")", ")", ",", "\n", "'DTBT'", ":", "hp", ".", "choice", "(", "'DTBT'", ",", "range", "(", "5", ",", "30", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'DS'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'DStopn'", ":", "5", ",", "\n", "'DSfss'", ":", "0.2", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'DStopn'", ":", "hp", ".", "choice", "(", "'DStopn'", ",", "range", "(", "1", ",", "15", ")", ")", ",", "\n", "'DSfss'", ":", "hp", ".", "uniform", "(", "'DSfss'", ",", "0.1", ",", "0.5", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'DSBF'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'DSBFtopk'", ":", "1", ",", "\n", "'DSBFneighbors'", ":", "10", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'DSBFtopk'", ":", "hp", ".", "choice", "(", "'DSBFtopk'", ",", "range", "(", "1", ",", "10", ")", ")", ",", "\n", "'DSBFneighbors'", ":", "hp", ".", "choice", "(", "'DSBFneighbors'", ",", "range", "(", "1", ",", "100", ")", ")", "\n", "}", "\n", "\n", "", "self", ".", "def_value", "=", "self", ".", "objFunc", "(", "adptdefault_value", ")", "[", "'result'", "]", "\n", "best", "=", "fmin", "(", "self", ".", "objFunc", ",", "space", "=", "adptparamSpace", ",", "algo", "=", "tpe", ".", "suggest", ",", "max_evals", "=", "self", ".", "fe", ",", "trials", "=", "self", ".", "trails", ")", "\n", "his", "=", "dict", "(", ")", "\n", "his", "[", "'name'", "]", "=", "list", "(", "self", ".", "trails", ".", "trials", "[", "0", "]", "[", "'misc'", "]", "[", "'vals'", "]", ".", "keys", "(", ")", ")", "\n", "i", "=", "0", "\n", "for", "item", "in", "self", ".", "trails", ".", "trials", ":", "\n", "            ", "results", "=", "list", "(", "deepflatten", "(", "item", "[", "'misc'", "]", "[", "'vals'", "]", ".", "values", "(", ")", ")", ")", "\n", "results", ".", "append", "(", "item", "[", "'result'", "]", "[", "'result'", "]", ")", "\n", "his", "[", "i", "]", "=", "results", "\n", "i", "+=", "1", "\n", "\n", "", "inc_value", "=", "self", ".", "trails", ".", "best_trial", "[", "'result'", "]", "[", "'result'", "]", "\n", "\n", "return", "np", ".", "asarray", "(", "[", "self", ".", "def_value", ",", "inc_value", "]", ")", ",", "his", ",", "best", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamCLF.__init__": [[360, 370], ["hyperopt.Trials"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sx", ",", "sy", ",", "tx", ",", "ty", ",", "loc", ",", "classifier", ",", "adaptation", ",", "fe", "=", "1000", ")", ":", "\n", "        ", "self", ".", "sx", "=", "sx", "\n", "self", ".", "sy", "=", "sy", "\n", "self", ".", "tx", "=", "tx", "\n", "self", ".", "ty", "=", "ty", "\n", "self", ".", "loc", "=", "loc", "\n", "self", ".", "adaptation", "=", "adaptation", "\n", "self", ".", "clf", "=", "classifier", "\n", "self", ".", "fe", "=", "fe", "\n", "self", ".", "trails", "=", "Trials", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamCLF.objFunc": [[371, 382], ["Algorithms.Framework.cpdp", "Hyperopt_doer.optParamCLF.p.set_params", "Hyperopt_doer.optParamCLF.p.run", "np.mean", "np.mean"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.set_params", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.run"], ["", "def", "objFunc", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "p", "=", "cpdp", "(", "clf", "=", "self", ".", "clf", ",", "adpt", "=", "self", ".", "adaptation", ")", "\n", "self", ".", "p", ".", "set_params", "(", "**", "params", ")", "\n", "sx", "=", "self", ".", "sx", "\n", "sy", "=", "self", ".", "sy", "\n", "tx", "=", "self", ".", "tx", "\n", "ty", "=", "self", ".", "ty", "\n", "loc", "=", "self", ".", "loc", "\n", "res", "=", "self", ".", "p", ".", "run", "(", "sx", ",", "sy", ",", "tx", ",", "ty", ",", "loc", ")", "\n", "\n", "return", "{", "'loss'", ":", "-", "np", ".", "mean", "(", "res", ")", ",", "'status'", ":", "STATUS_OK", ",", "'result'", ":", "np", ".", "mean", "(", "res", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamCLF.run": [[383, 496], ["hyperopt.Trials", "hyperopt.fmin", "dict", "list", "Hyperopt_doer.optParamCLF.objFunc", "[].keys", "list", "list.append", "np.asarray", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "deepflatten", "range", "range", "range", "range", "range", "range", "[].values", "int", "int", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "len", "range", "len"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamSEQ.objFunc"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "trails", "=", "Trials", "(", ")", "\n", "\n", "if", "self", ".", "clf", "==", "'Boost'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'Boostnestimator'", ":", "50", ",", "\n", "'BoostLearnrate'", ":", "1", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'Boostnestimator'", ":", "hp", ".", "choice", "(", "'Boostnestimator'", ",", "range", "(", "10", ",", "1000", ")", ")", ",", "\n", "'BoostLearnrate'", ":", "hp", ".", "uniform", "(", "'BoostLearnrate'", ",", "0.01", ",", "10", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'RF'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'n_estimators'", ":", "10", ",", "\n", "'criterion'", ":", "'gini'", ",", "\n", "'max_features'", ":", "'auto'", ",", "\n", "'RFmin_samples_split'", ":", "2", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'n_estimators'", ":", "hp", ".", "choice", "(", "'n_estimators'", ",", "range", "(", "10", ",", "100", ")", ")", ",", "\n", "'criterion'", ":", "hp", ".", "choice", "(", "'criterion'", ",", "[", "'gini'", ",", "'entropy'", "]", ")", ",", "\n", "'max_features'", ":", "hp", ".", "choice", "(", "'max_features'", ",", "[", "'auto'", ",", "'sqrt'", ",", "'log2'", "]", ")", ",", "\n", "'RFmin_samples_split'", ":", "hp", ".", "choice", "(", "'RFmin_samples_split'", ",", "range", "(", "2", ",", "int", "(", "len", "(", "self", ".", "sy", ")", "/", "10", ")", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'SVM'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'SVCkernel'", ":", "{", "'kernel'", ":", "'poly'", ",", "'degree'", ":", "3", ",", "'polycoef0'", ":", "0.0", ",", "'polygamma'", ":", "1", "}", ",", "\n", "'C'", ":", "1.0", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'SVCkernel'", ":", "hp", ".", "choice", "(", "'SVCkernel'", ",", "[", "\n", "{", "'kernel'", ":", "'linear'", "}", ",", "\n", "{", "'kernel'", ":", "'poly'", ",", "'degree'", ":", "hp", ".", "choice", "(", "'degree'", ",", "range", "(", "1", ",", "5", ")", ")", ",", "\n", "'polycoef0'", ":", "hp", ".", "uniform", "(", "'polycoef0'", ",", "0", ",", "10", ")", ",", "\n", "'polygamma'", ":", "hp", ".", "choice", "(", "'polygamma'", ",", "[", "\"auto\"", ",", "\"scale\"", "]", ")", "}", ",", "\n", "{", "'kernel'", ":", "'sigmoid'", ",", "'sigcoef0'", ":", "hp", ".", "uniform", "(", "'sigcoef0'", ",", "0", ",", "10", ")", ",", "\n", "'siggamma'", ":", "hp", ".", "choice", "(", "'siggamma'", ",", "[", "\"auto\"", ",", "\"scale\"", "]", ")", "}", ",", "\n", "{", "'kernel'", ":", "'rbf'", ",", "'rbfgamma'", ":", "hp", ".", "choice", "(", "'rbfgamma'", ",", "[", "\"auto\"", ",", "\"scale\"", "]", ")", "}", "\n", "]", ")", ",", "\n", "'C'", ":", "hp", ".", "uniform", "(", "'C'", ",", "0.001", ",", "1000", ")", ",", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'NN'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'NNactive'", ":", "'relu'", ",", "\n", "'NNalpha'", ":", "0.0001", ",", "\n", "'NNmaxiter'", ":", "200", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'NNactive'", ":", "hp", ".", "choice", "(", "'NNactive'", ",", "[", "'identity'", ",", "'logistic'", ",", "'tanh'", ",", "'relu'", "]", ")", ",", "\n", "'NNalpha'", ":", "hp", ".", "uniform", "(", "'NNalpha'", ",", "1e-6", ",", "1", ")", ",", "\n", "'NNmaxiter'", ":", "hp", ".", "choice", "(", "'NNmaxiter'", ",", "range", "(", "100", ",", "1000", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'KNN'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'KNNneighbors'", ":", "1", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'KNNneighbors'", ":", "hp", ".", "choice", "(", "'KNNneighbors'", ",", "range", "(", "1", ",", "50", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'NB'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'NBType'", ":", "'gaussian'", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'NBType'", ":", "hp", ".", "choice", "(", "'NBType'", ",", "[", "'gaussian'", ",", "'multinomial'", ",", "'bernoulli'", "]", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'Ridge'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'Ridgealpha'", ":", "1", ",", "\n", "'Ridgenormalize'", ":", "False", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'Ridgealpha'", ":", "hp", ".", "uniform", "(", "'Ridgealpha'", ",", "0.001", ",", "1000", ")", ",", "\n", "'Ridgenormalize'", ":", "hp", ".", "choice", "(", "'Ridgenormlize'", ",", "[", "True", ",", "False", "]", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'CART'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'criterion'", ":", "'gini'", ",", "\n", "'max_features'", ":", "'auto'", ",", "\n", "'CARTsplitter'", ":", "'best'", ",", "\n", "'RFmin_samples_split'", ":", "2", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'criterion'", ":", "hp", ".", "choice", "(", "'criterion'", ",", "[", "'gini'", ",", "'entropy'", "]", ")", ",", "\n", "'max_features'", ":", "hp", ".", "choice", "(", "'max_features'", ",", "[", "'auto'", ",", "'sqrt'", ",", "'log2'", "]", ")", ",", "\n", "'CARTsplitter'", ":", "hp", ".", "choice", "(", "'CARTsplitter'", ",", "[", "'best'", ",", "'random'", "]", ")", ",", "\n", "'RFmin_samples_split'", ":", "hp", ".", "choice", "(", "'RFmin_samples_split'", ",", "range", "(", "2", ",", "int", "(", "len", "(", "self", ".", "sy", ")", "/", "10", ")", ")", ")", "\n", "}", "\n", "\n", "", "self", ".", "def_value", "=", "self", ".", "objFunc", "(", "clfdefault_value", ")", "[", "'result'", "]", "\n", "best", "=", "fmin", "(", "self", ".", "objFunc", ",", "space", "=", "clfparamSpace", ",", "algo", "=", "tpe", ".", "suggest", ",", "max_evals", "=", "self", ".", "fe", ",", "trials", "=", "self", ".", "trails", ")", "\n", "\n", "his", "=", "dict", "(", ")", "\n", "his", "[", "'name'", "]", "=", "list", "(", "self", ".", "trails", ".", "trials", "[", "0", "]", "[", "'misc'", "]", "[", "'vals'", "]", ".", "keys", "(", ")", ")", "\n", "i", "=", "0", "\n", "for", "item", "in", "self", ".", "trails", ".", "trials", ":", "\n", "            ", "results", "=", "list", "(", "deepflatten", "(", "item", "[", "'misc'", "]", "[", "'vals'", "]", ".", "values", "(", ")", ")", ")", "\n", "results", ".", "append", "(", "item", "[", "'result'", "]", "[", "'result'", "]", ")", "\n", "his", "[", "i", "]", "=", "results", "\n", "i", "+=", "1", "\n", "\n", "", "inc_value", "=", "self", ".", "trails", ".", "best_trial", "[", "'result'", "]", "[", "'result'", "]", "\n", "\n", "# print(def_value)", "\n", "return", "np", ".", "asarray", "(", "[", "self", ".", "def_value", ",", "inc_value", "]", ")", ",", "his", ",", "best", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamSEQ.__init__": [[499, 512], ["hyperopt.Trials", "hyperopt.Trials"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sx", ",", "sy", ",", "tx", ",", "ty", ",", "loc", ",", "classifier", ",", "adaptation", ",", "fe", "=", "1000", ")", ":", "\n", "        ", "self", ".", "sx", "=", "sx", "\n", "self", ".", "sy", "=", "sy", "\n", "self", ".", "tx", "=", "tx", "\n", "self", ".", "ty", "=", "ty", "\n", "self", ".", "loc", "=", "loc", "\n", "self", ".", "adaptation", "=", "adaptation", "\n", "self", ".", "clf", "=", "classifier", "\n", "self", ".", "fe", "=", "fe", "\n", "self", ".", "trails", "=", "Trials", "(", ")", "\n", "self", ".", "Atrails", "=", "Trials", "(", ")", "\n", "\n", "self", ".", "SEQ", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamSEQ.objFunc": [[513, 526], ["Algorithms.Framework.cpdp", "Hyperopt_doer.optParamSEQ.p.set_params", "Hyperopt_doer.optParamSEQ.p.run", "dict", "np.mean", "np.mean"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.set_params", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.run"], ["", "def", "objFunc", "(", "self", ",", "params", ")", ":", "\n", "        ", "if", "self", ".", "SEQ", "==", "1", ":", "\n", "            ", "params", "=", "dict", "(", "params", ",", "**", "self", ".", "Adptbest", ")", "\n", "", "self", ".", "p", "=", "cpdp", "(", "clf", "=", "self", ".", "clf", ",", "adpt", "=", "self", ".", "adaptation", ")", "\n", "self", ".", "p", ".", "set_params", "(", "**", "params", ")", "\n", "sx", "=", "self", ".", "sx", "\n", "sy", "=", "self", ".", "sy", "\n", "tx", "=", "self", ".", "tx", "\n", "ty", "=", "self", ".", "ty", "\n", "loc", "=", "self", ".", "loc", "\n", "res", "=", "self", ".", "p", ".", "run", "(", "sx", ",", "sy", ",", "tx", ",", "ty", ",", "loc", ")", "\n", "\n", "return", "{", "'loss'", ":", "-", "np", ".", "mean", "(", "res", ")", ",", "'status'", ":", "STATUS_OK", ",", "'result'", ":", "np", ".", "mean", "(", "res", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamSEQ.run": [[527, 743], ["hyperopt.Trials", "hyperopt.Trials", "dict", "hyperopt.fmin", "hyperopt.space_eval", "dict", "hyperopt.fmin", "Hyperopt_doer.optParamSEQ.objFunc", "np.asarray", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.uniform", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "int", "list", "list", "results.append", "int", "list", "list", "results.append", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "[].keys", "clfdefault_value.keys", "list", "list", "Hyperopt_doer.optParamSEQ.Adptbest.keys", "[].keys", "list", "list", "max", "int", "int", "deepflatten", "clfdefault_value.values", "Hyperopt_doer.optParamSEQ.Adptbest.values", "deepflatten", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "[].values", "[].values", "len", "range", "len"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.Hyperopt_doer.optParamSEQ.objFunc"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "Atrails", "=", "Trials", "(", ")", "\n", "trails", "=", "Trials", "(", ")", "\n", "\n", "if", "self", ".", "adaptation", "==", "'TCA'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'kernel_type'", ":", "'linear'", ",", "\n", "'dim'", ":", "5", ",", "\n", "'lamb'", ":", "1", ",", "\n", "'gamma'", ":", "1", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'kernel_type'", ":", "hp", ".", "choice", "(", "'kernel_type'", ",", "[", "'primal'", ",", "'linear'", ",", "'rbf'", ",", "'sam'", "]", ")", ",", "\n", "'dim'", ":", "hp", ".", "choice", "(", "'dim'", ",", "range", "(", "5", ",", "max", "(", "self", ".", "sx", ".", "shape", "[", "1", "]", ",", "self", ".", "tx", ".", "shape", "[", "1", "]", ")", ")", ")", ",", "\n", "'lamb'", ":", "hp", ".", "uniform", "(", "'lamb'", ",", "1e-6", ",", "1e2", ")", ",", "\n", "'gamma'", ":", "hp", ".", "uniform", "(", "'gamma'", ",", "1e-5", ",", "1e2", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'DBSCANfilter'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'eps'", ":", "1", ",", "\n", "'min_samples'", ":", "10", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'eps'", ":", "hp", ".", "uniform", "(", "'eps'", ",", "0.1", ",", "1e2", ")", ",", "\n", "'min_samples'", ":", "hp", ".", "choice", "(", "'min_samples'", ",", "range", "(", "1", ",", "100", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'Bruakfilter'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'n_neighbors'", ":", "10", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'n_neighbors'", ":", "hp", ".", "choice", "(", "'n_neighbors'", ",", "range", "(", "1", ",", "100", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'Peterfilter'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'eachCluster'", ":", "10", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'eachCluster'", ":", "hp", ".", "choice", "(", "'eachCluster'", ",", "range", "(", "1", ",", "100", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'Universal'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'pvalue'", ":", "0.05", ",", "\n", "'QuantifyType'", ":", "'cliff'", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'pvalue'", ":", "hp", ".", "uniform", "(", "'pvalue'", ",", "0.01", ",", "0.1", ")", ",", "\n", "'QuantifyType'", ":", "hp", ".", "choice", "(", "'QuantifyType'", ",", "[", "'cliff'", ",", "'cohen'", "]", ")", "\n", "}", "\n", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'DTB'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'DTBneighbors'", ":", "10", ",", "\n", "'DTBT'", ":", "20", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'DTBneighbors'", ":", "hp", ".", "choice", "(", "'DTBneighbors'", ",", "range", "(", "1", ",", "50", ")", ")", ",", "\n", "'DTBT'", ":", "hp", ".", "choice", "(", "'DTBT'", ",", "range", "(", "5", ",", "30", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'DS'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'DStopn'", ":", "5", ",", "\n", "'DSfss'", ":", "0.2", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'DStopn'", ":", "hp", ".", "choice", "(", "'DStopn'", ",", "range", "(", "1", ",", "15", ")", ")", ",", "\n", "'DSfss'", ":", "hp", ".", "uniform", "(", "'DSfss'", ",", "0.1", ",", "0.5", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "adaptation", "==", "'DSBF'", ":", "\n", "            ", "adptdefault_value", "=", "{", "\n", "'DSBFtopk'", ":", "1", ",", "\n", "'DSBFneighbors'", ":", "10", "\n", "}", "\n", "adptparamSpace", "=", "{", "\n", "'DSBFtopk'", ":", "hp", ".", "choice", "(", "'DSBFtopk'", ",", "range", "(", "1", ",", "10", ")", ")", ",", "\n", "'DSBFneighbors'", ":", "hp", ".", "choice", "(", "'DSBFneighbors'", ",", "range", "(", "1", ",", "100", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'Boost'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'Boostnestimator'", ":", "50", ",", "\n", "'BoostLearnrate'", ":", "1", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'Boostnestimator'", ":", "hp", ".", "choice", "(", "'Boostnestimator'", ",", "range", "(", "10", ",", "1000", ")", ")", ",", "\n", "'BoostLearnrate'", ":", "hp", ".", "uniform", "(", "'BoostLearnrate'", ",", "0.01", ",", "10", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'RF'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'n_estimators'", ":", "10", ",", "\n", "'criterion'", ":", "'gini'", ",", "\n", "'max_features'", ":", "'auto'", ",", "\n", "'RFmin_samples_split'", ":", "2", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'n_estimators'", ":", "hp", ".", "choice", "(", "'n_estimators'", ",", "range", "(", "10", ",", "100", ")", ")", ",", "\n", "'criterion'", ":", "hp", ".", "choice", "(", "'criterion'", ",", "[", "'gini'", ",", "'entropy'", "]", ")", ",", "\n", "'max_features'", ":", "hp", ".", "choice", "(", "'max_features'", ",", "[", "'auto'", ",", "'sqrt'", ",", "'log2'", "]", ")", ",", "\n", "'RFmin_samples_split'", ":", "hp", ".", "choice", "(", "'RFmin_samples_split'", ",", "range", "(", "2", ",", "int", "(", "len", "(", "self", ".", "sy", ")", "/", "10", ")", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'SVM'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'SVCkernel'", ":", "{", "'kernel'", ":", "'poly'", ",", "'degree'", ":", "3", ",", "'polycoef0'", ":", "0.0", ",", "'polygamma'", ":", "1", "}", ",", "\n", "'C'", ":", "1.0", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'SVCkernel'", ":", "hp", ".", "choice", "(", "'SVCkernel'", ",", "[", "\n", "{", "'kernel'", ":", "'linear'", "}", ",", "\n", "{", "'kernel'", ":", "'poly'", ",", "'degree'", ":", "hp", ".", "choice", "(", "'degree'", ",", "range", "(", "1", ",", "5", ")", ")", ",", "\n", "'polycoef0'", ":", "hp", ".", "uniform", "(", "'polycoef0'", ",", "0", ",", "10", ")", ",", "\n", "'polygamma'", ":", "hp", ".", "choice", "(", "'polygamma'", ",", "[", "\"auto\"", ",", "\"scale\"", "]", ")", "}", ",", "\n", "{", "'kernel'", ":", "'sigmoid'", ",", "'sigcoef0'", ":", "hp", ".", "uniform", "(", "'sigcoef0'", ",", "0", ",", "10", ")", ",", "\n", "'siggamma'", ":", "hp", ".", "choice", "(", "'siggamma'", ",", "[", "\"auto\"", ",", "\"scale\"", "]", ")", "}", ",", "\n", "{", "'kernel'", ":", "'rbf'", ",", "'rbfgamma'", ":", "hp", ".", "choice", "(", "'rbfgamma'", ",", "[", "\"auto\"", ",", "\"scale\"", "]", ")", "}", "\n", "]", ")", ",", "\n", "'C'", ":", "hp", ".", "uniform", "(", "'C'", ",", "0.001", ",", "1000", ")", ",", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'NN'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'NNactive'", ":", "'relu'", ",", "\n", "'NNalpha'", ":", "0.0001", ",", "\n", "'NNmaxiter'", ":", "200", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'NNactive'", ":", "hp", ".", "choice", "(", "'NNactive'", ",", "[", "'identity'", ",", "'logistic'", ",", "'tanh'", ",", "'relu'", "]", ")", ",", "\n", "'NNalpha'", ":", "hp", ".", "uniform", "(", "'NNalpha'", ",", "1e-6", ",", "1", ")", ",", "\n", "'NNmaxiter'", ":", "hp", ".", "choice", "(", "'NNmaxiter'", ",", "range", "(", "100", ",", "1000", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'KNN'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'KNNneighbors'", ":", "1", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'KNNneighbors'", ":", "hp", ".", "choice", "(", "'KNNneighbors'", ",", "range", "(", "1", ",", "50", ")", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'NB'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'NBType'", ":", "'gaussian'", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'NBType'", ":", "hp", ".", "choice", "(", "'NBType'", ",", "[", "'gaussian'", ",", "'multinomial'", ",", "'bernoulli'", "]", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'Ridge'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'Ridgealpha'", ":", "1", ",", "\n", "'Ridgenormalize'", ":", "False", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'Ridgealpha'", ":", "hp", ".", "uniform", "(", "'Ridgealpha'", ",", "0.001", ",", "1000", ")", ",", "\n", "'Ridgenormalize'", ":", "hp", ".", "choice", "(", "'Ridgenormlize'", ",", "[", "True", ",", "False", "]", ")", "\n", "}", "\n", "\n", "", "if", "self", ".", "clf", "==", "'CART'", ":", "\n", "            ", "clfdefault_value", "=", "{", "\n", "'criterion'", ":", "'gini'", ",", "\n", "'max_features'", ":", "'auto'", ",", "\n", "'CARTsplitter'", ":", "'best'", ",", "\n", "'RFmin_samples_split'", ":", "2", "\n", "}", "\n", "clfparamSpace", "=", "{", "\n", "'criterion'", ":", "hp", ".", "choice", "(", "'criterion'", ",", "[", "'gini'", ",", "'entropy'", "]", ")", ",", "\n", "'max_features'", ":", "hp", ".", "choice", "(", "'max_features'", ",", "[", "'auto'", ",", "'sqrt'", ",", "'log2'", "]", ")", ",", "\n", "'CARTsplitter'", ":", "hp", ".", "choice", "(", "'CARTsplitter'", ",", "[", "'best'", ",", "'random'", "]", ")", ",", "\n", "'RFmin_samples_split'", ":", "hp", ".", "choice", "(", "'RFmin_samples_split'", ",", "range", "(", "2", ",", "int", "(", "len", "(", "self", ".", "sy", ")", "/", "10", ")", ")", ")", "\n", "}", "\n", "\n", "", "default_value", "=", "dict", "(", "adptdefault_value", ",", "**", "clfdefault_value", ")", "\n", "self", ".", "def_value", "=", "self", ".", "objFunc", "(", "default_value", ")", "[", "'result'", "]", "\n", "self", ".", "Adptbest", "=", "fmin", "(", "self", ".", "objFunc", ",", "space", "=", "adptparamSpace", ",", "algo", "=", "tpe", ".", "suggest", ",", "max_evals", "=", "int", "(", "self", ".", "fe", "*", "0.5", ")", ",", "\n", "trials", "=", "self", ".", "Atrails", ")", "\n", "self", ".", "Adptbest", "=", "space_eval", "(", "adptparamSpace", ",", "self", ".", "Adptbest", ")", "\n", "\n", "his", "=", "dict", "(", ")", "\n", "try", ":", "\n", "            ", "his", "[", "'name'", "]", "=", "list", "(", "self", ".", "Atrails", ".", "trials", "[", "0", "]", "[", "'misc'", "]", "[", "'vals'", "]", ".", "keys", "(", ")", ")", "+", "list", "(", "clfdefault_value", ".", "keys", "(", ")", ")", "\n", "", "except", ":", "\n", "            ", "his", "[", "'name'", "]", "=", "[", "None", "]", "\n", "", "i", "=", "0", "\n", "for", "item", "in", "self", ".", "Atrails", ".", "trials", ":", "\n", "            ", "if", "item", "[", "'state'", "]", "==", "2", ":", "\n", "                ", "results", "=", "list", "(", "deepflatten", "(", "item", "[", "'misc'", "]", "[", "'vals'", "]", ".", "values", "(", ")", ")", ")", "+", "list", "(", "clfdefault_value", ".", "values", "(", ")", ")", "\n", "results", ".", "append", "(", "item", "[", "'result'", "]", "[", "'result'", "]", ")", "\n", "his", "[", "i", "]", "=", "results", "\n", "i", "+=", "1", "\n", "\n", "", "", "self", ".", "SEQ", "=", "1", "\n", "Clfbest", "=", "fmin", "(", "self", ".", "objFunc", ",", "space", "=", "clfparamSpace", ",", "algo", "=", "tpe", ".", "suggest", ",", "max_evals", "=", "int", "(", "self", ".", "fe", "*", "0.5", ")", ",", "\n", "trials", "=", "self", ".", "trails", ")", "\n", "\n", "try", ":", "\n", "            ", "his", "[", "'name1'", "]", "=", "list", "(", "self", ".", "Adptbest", ".", "keys", "(", ")", ")", "+", "list", "(", "self", ".", "trails", ".", "trials", "[", "0", "]", "[", "'misc'", "]", "[", "'vals'", "]", ".", "keys", "(", ")", ")", "\n", "", "except", ":", "\n", "            ", "his", "[", "'name1'", "]", "=", "[", "None", "]", "\n", "", "for", "item", "in", "self", ".", "trails", ".", "trials", ":", "\n", "            ", "if", "item", "[", "'state'", "]", "==", "2", ":", "\n", "                ", "results", "=", "list", "(", "self", ".", "Adptbest", ".", "values", "(", ")", ")", "+", "list", "(", "deepflatten", "(", "item", "[", "'misc'", "]", "[", "'vals'", "]", ".", "values", "(", ")", ")", ")", "\n", "results", ".", "append", "(", "item", "[", "'result'", "]", "[", "'result'", "]", ")", "\n", "his", "[", "i", "]", "=", "results", "\n", "i", "+=", "1", "\n", "\n", "", "", "inc_value", "=", "self", ".", "trails", ".", "best_trial", "[", "'result'", "]", "[", "'result'", "]", "\n", "\n", "return", "np", ".", "asarray", "(", "[", "self", ".", "def_value", ",", "inc_value", "]", ")", ",", "his", ",", "Clfbest", "\n", "", "", ""]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.cliffsDelta.cliffsDelta": [[5, 23], ["sorted", "cliffsDelta.runs", "cliffsDelta.lookup_size", "len", "len", "sorted"], "function", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.cliffsDelta.runs", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.cliffsDelta.lookup_size"], ["def", "cliffsDelta", "(", "lst1", ",", "lst2", ",", "**", "dull", ")", ":", "\n", "\n", "    ", "\"\"\"Returns delta and true if there are more than 'dull' differences\"\"\"", "\n", "if", "not", "dull", ":", "\n", "        ", "dull", "=", "{", "'small'", ":", "0.147", ",", "'medium'", ":", "0.33", ",", "'large'", ":", "0.474", "}", "# effect sizes from (Hess and Kromrey, 2004)", "\n", "", "m", ",", "n", "=", "len", "(", "lst1", ")", ",", "len", "(", "lst2", ")", "\n", "lst2", "=", "sorted", "(", "lst2", ")", "\n", "j", "=", "more", "=", "less", "=", "0", "\n", "for", "repeats", ",", "x", "in", "runs", "(", "sorted", "(", "lst1", ")", ")", ":", "\n", "        ", "while", "j", "<=", "(", "n", "-", "1", ")", "and", "lst2", "[", "j", "]", "<", "x", ":", "\n", "            ", "j", "+=", "1", "\n", "", "more", "+=", "j", "*", "repeats", "\n", "while", "j", "<=", "(", "n", "-", "1", ")", "and", "lst2", "[", "j", "]", "==", "x", ":", "\n", "            ", "j", "+=", "1", "\n", "", "less", "+=", "(", "n", "-", "j", ")", "*", "repeats", "\n", "", "d", "=", "(", "more", "-", "less", ")", "/", "(", "m", "*", "n", ")", "\n", "size", "=", "lookup_size", "(", "d", ",", "dull", ")", "\n", "return", "d", ",", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.cliffsDelta.lookup_size": [[25, 39], ["abs"], "function", ["None"], ["", "def", "lookup_size", "(", "delta", ":", "float", ",", "dull", ":", "dict", ")", "->", "str", ":", "\n", "    ", "\"\"\"\n    :type delta: float\n    :type dull: dict, a dictionary of small, medium, large thresholds.\n    \"\"\"", "\n", "delta", "=", "abs", "(", "delta", ")", "\n", "if", "delta", "<", "dull", "[", "'small'", "]", ":", "\n", "        ", "return", "'negligible'", "\n", "", "if", "dull", "[", "'small'", "]", "<=", "delta", "<", "dull", "[", "'medium'", "]", ":", "\n", "        ", "return", "'small'", "\n", "", "if", "dull", "[", "'medium'", "]", "<=", "delta", "<", "dull", "[", "'large'", "]", ":", "\n", "        ", "return", "'medium'", "\n", "", "if", "delta", ">=", "dull", "[", "'large'", "]", ":", "\n", "        ", "return", "'large'", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.cliffsDelta.runs": [[41, 51], ["enumerate"], "function", ["None"], ["", "", "def", "runs", "(", "lst", ")", ":", "\n", "    ", "\"\"\"Iterator, chunks repeated values\"\"\"", "\n", "for", "j", ",", "two", "in", "enumerate", "(", "lst", ")", ":", "\n", "        ", "if", "j", "==", "0", ":", "\n", "            ", "one", ",", "i", "=", "two", ",", "0", "\n", "", "if", "one", "!=", "two", ":", "\n", "            ", "yield", "j", "-", "i", ",", "one", "\n", "i", "=", "j", "\n", "", "one", "=", "two", "\n", "", "yield", "j", "-", "i", "+", "1", ",", "two", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.cliffsDelta.cohen": [[53, 66], ["abs", "math.sqrt", "statistics.mean", "statistics.mean", "statistics.stdev", "statistics.stdev"], "function", ["None"], ["", "def", "cohen", "(", "c0", ",", "c1", ")", ":", "\n", "    ", "cohens_d", "=", "(", "mean", "(", "c0", ")", "-", "mean", "(", "c1", ")", ")", "/", "(", "sqrt", "(", "(", "stdev", "(", "c0", ")", "**", "2", "+", "stdev", "(", "c1", ")", "**", "2", ")", "/", "2", ")", ")", "\n", "t", "=", "abs", "(", "cohens_d", ")", "\n", "if", "t", "<=", "0.2", ":", "\n", "        ", "res", "=", "'negligible'", "\n", "", "elif", "t", "<=", "0.5", ":", "\n", "        ", "res", "=", "'small'", "\n", "", "elif", "t", "<=", "0.8", ":", "\n", "        ", "res", "=", "'medium'", "\n", "", "else", ":", "\n", "        ", "res", "=", "'large'", "\n", "\n", "", "return", "res", "", "", ""]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.is_number": [[10, 17], ["re.compile", "re.compile.match"], "function", ["None"], ["def", "is_number", "(", "num", ")", ":", "\n", "    ", "pattern", "=", "re", ".", "compile", "(", "r'^[-+]?[-0-9]\\d*\\.\\d*|[-+]?\\.?[0-9]\\d*$'", ")", "\n", "result", "=", "pattern", ".", "match", "(", "num", ")", "\n", "if", "result", ":", "\n", "        ", "return", "True", "\n", "", "else", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.GetData": [[19, 95], ["data[].strip().split", "data[].strip().split.pop", "data[].strip().split.pop", "numpy.delete", "sorted", "range", "open", "f.readlines", "line.strip().split", "range", "range", "np.delete.append", "numpy.asarray", "len", "data[].strip().split.pop", "open", "f.readlines", "data[].strip", "line.strip().split.pop", "len", "helper.is_number", "tmp.pop", "y.append", "y.append", "numpy.asarray", "numpy.asarray", "numpy.asanyarray", "numpy.asarray", "numpy.asanyarray", "numpy.asarray", "line.strip", "tmp.append", "tmp.append", "line.strip().split", "line.strip().split.remove", "line.strip().split", "np.delete.append", "float", "sorted.append", "helper.is_number", "helper.is_number", "line.strip", "line.strip", "tmp.append", "len", "float", "y.append", "y.append"], "function", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.is_number", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.is_number", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.is_number"], ["", "", "def", "GetData", "(", "filename", ",", "showType", "=", "False", ")", ":", "\n", "    ", "if", "'JURECZKO'", "in", "filename", ":", "\n", "        ", "with", "open", "(", "filename", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "data", "=", "f", ".", "readlines", "(", ")", "\n", "", "x", "=", "[", "]", "\n", "y", "=", "[", "]", "\n", "empty", "=", "[", "]", "\n", "\n", "# get the types of metrics from first line", "\n", "type", "=", "data", "[", "0", "]", ".", "strip", "(", ")", ".", "split", "(", "';'", ")", "\n", "type", ".", "pop", "(", ")", "\n", "type", ".", "pop", "(", "0", ")", "\n", "\n", "# get the detail data of metrics", "\n", "for", "line", "in", "data", "[", "1", ":", "]", ":", "\n", "            ", "tmp", "=", "[", "]", "\n", "\n", "odom", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "';'", ")", "\n", "# delete the project information", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "odom", ".", "pop", "(", "0", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "odom", ")", ")", ":", "\n", "                ", "if", "is_number", "(", "odom", "[", "i", "]", ")", ":", "\n", "                    ", "tmp", ".", "append", "(", "float", "(", "odom", "[", "i", "]", ")", ")", "\n", "", "else", ":", "\n", "                    ", "if", "i", "not", "in", "empty", ":", "\n", "                        ", "empty", ".", "append", "(", "i", ")", "\n", "", "tmp", ".", "append", "(", "0", ")", "\n", "\n", "", "", "if", "tmp", ".", "pop", "(", ")", ">", "0", ":", "\n", "                ", "y", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                ", "y", ".", "append", "(", "-", "1", ")", "\n", "", "x", ".", "append", "(", "tmp", ")", "\n", "\n", "", "x", "=", "np", ".", "delete", "(", "np", ".", "asarray", "(", "x", ")", ",", "empty", ",", "axis", "=", "1", ")", "\n", "empty", "=", "sorted", "(", "empty", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "empty", ")", ")", ":", "\n", "            ", "type", ".", "pop", "(", "empty", "[", "len", "(", "empty", ")", "-", "i", "-", "1", "]", ")", "\n", "\n", "", "if", "showType", ":", "\n", "            ", "return", "x", ",", "np", ".", "asarray", "(", "y", ")", ",", "type", "\n", "", "else", ":", "\n", "            ", "return", "x", ",", "np", ".", "asarray", "(", "y", ")", "\n", "\n", "", "", "else", ":", "\n", "        ", "with", "open", "(", "filename", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "data", "=", "f", ".", "readlines", "(", ")", "# txt\u4e2d\u6240\u6709\u5b57\u7b26\u4e32\u8bfb\u5165data", "\n", "x", "=", "[", "]", "\n", "y", "=", "[", "]", "\n", "type", "=", "[", "]", "\n", "\n", "for", "line", "in", "data", ":", "\n", "                ", "if", "'###'", "in", "line", ":", "\n", "                    ", "odom", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "\n", "odom", ".", "remove", "(", "'###'", ")", "\n", "type", "=", "odom", "\n", "", "else", ":", "\n", "                    ", "tmp", "=", "[", "]", "\n", "odom", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "# \u5c06\u5355\u4e2a\u6570\u636e\u5206\u9694\u5f00\u5b58\u597d", "\n", "if", "not", "is_number", "(", "odom", "[", "0", "]", ")", ":", "\n", "                        ", "continue", "\n", "", "for", "item", "in", "odom", ":", "\n", "                        ", "if", "is_number", "(", "item", ")", ":", "\n", "                            ", "tmp", ".", "append", "(", "float", "(", "item", ")", ")", "\n", "", "elif", "(", "item", "==", "'true'", ")", "or", "(", "item", "==", "'TRUE'", ")", "or", "(", "item", "==", "'Y'", ")", "or", "(", "item", "==", "'buggy'", ")", ":", "\n", "                            ", "y", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                            ", "y", ".", "append", "(", "0", ")", "\n", "", "", "x", ".", "append", "(", "tmp", ")", "\n", "\n", "", "", "", "if", "showType", ":", "\n", "            ", "return", "np", ".", "asanyarray", "(", "x", ")", ",", "np", ".", "asarray", "(", "y", ")", ",", "type", "\n", "", "else", ":", "\n", "            ", "return", "np", ".", "asanyarray", "(", "x", ")", ",", "np", ".", "asarray", "(", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.SfindCommonMetric": [[97, 142], ["helper.GetData", "helper.GetData", "range", "len", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "range", "range", "common.append", "len", "Stype.index", "Ttype.index", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.GetData", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.GetData"], ["", "", "", "def", "SfindCommonMetric", "(", "fsource", ",", "ftarget", ",", "showDiff", "=", "False", ",", "showType", "=", "False", ")", ":", "\n", "    ", "sx", ",", "sy", ",", "Stype", "=", "GetData", "(", "fsource", ",", "showType", "=", "True", ")", "\n", "tx", ",", "ty", ",", "Ttype", "=", "GetData", "(", "ftarget", ",", "showType", "=", "True", ")", "\n", "\n", "common", "=", "[", "]", "\n", "\n", "ss", "=", "sx", ".", "shape", "\n", "tt", "=", "tx", ".", "shape", "\n", "for", "i", "in", "range", "(", "ss", "[", "1", "]", ")", ":", "\n", "        ", "if", "Stype", "[", "i", "]", "in", "Ttype", ":", "\n", "            ", "common", ".", "append", "(", "Stype", "[", "i", "]", ")", "\n", "\n", "", "", "if", "len", "(", "common", ")", ">", "0", ":", "\n", "        ", "fsx", "=", "np", ".", "zeros", "(", "(", "ss", "[", "0", "]", ",", "len", "(", "common", ")", ")", ")", "\n", "ftx", "=", "np", ".", "zeros", "(", "(", "tt", "[", "0", "]", ",", "len", "(", "common", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "common", ")", ")", ":", "\n", "            ", "index", "=", "Stype", ".", "index", "(", "common", "[", "i", "]", ")", "\n", "fsx", "[", ":", ",", "i", "]", "=", "sx", "[", ":", ",", "index", "]", "\n", "\n", "index", "=", "Ttype", ".", "index", "(", "common", "[", "i", "]", ")", "\n", "ftx", "[", ":", ",", "i", "]", "=", "tx", "[", ":", ",", "index", "]", "\n", "\n", "", "DiffSx", "=", "np", ".", "zeros", "(", "(", "ss", "[", "0", "]", ",", "ss", "[", "1", "]", "-", "len", "(", "common", ")", ")", ")", "\n", "DiffTx", "=", "np", ".", "zeros", "(", "(", "tt", "[", "0", "]", ",", "tt", "[", "1", "]", "-", "len", "(", "common", ")", ")", ")", "\n", "\n", "i", "=", "0", "\n", "for", "j", "in", "range", "(", "ss", "[", "1", "]", ")", ":", "\n", "            ", "if", "Stype", "[", "j", "]", "not", "in", "common", ":", "\n", "                ", "DiffSx", "[", ":", ",", "i", "]", "=", "sx", "[", ":", ",", "j", "]", "\n", "i", "=", "i", "+", "1", "\n", "", "", "i", "=", "0", "\n", "for", "j", "in", "range", "(", "tt", "[", "1", "]", ")", ":", "\n", "            ", "if", "Ttype", "[", "j", "]", "not", "in", "common", ":", "\n", "                ", "DiffTx", "[", ":", ",", "i", "]", "=", "tx", "[", ":", ",", "j", "]", "\n", "i", "=", "i", "+", "1", "\n", "", "", "if", "showDiff", "and", "showType", ":", "\n", "            ", "return", "fsx", ",", "sy", ",", "ftx", ",", "ty", ",", "DiffSx", ",", "DiffTx", ",", "common", "\n", "", "elif", "showDiff", "and", "(", "not", "showType", ")", ":", "\n", "            ", "return", "fsx", ",", "sy", ",", "ftx", ",", "ty", ",", "DiffSx", ",", "DiffTx", "\n", "", "elif", "(", "not", "showDiff", ")", "and", "showType", ":", "\n", "            ", "return", "fsx", ",", "sy", ",", "ftx", ",", "ty", ",", "common", "\n", "", "else", ":", "\n", "            ", "return", "fsx", ",", "sy", ",", "ftx", ",", "ty", "\n", "", "", "else", ":", "\n", "        ", "return", "0", ",", "0", ",", "0", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.MfindCommonMetric": [[144, 206], ["helper.GetData", "list.copy", "sorted", "range", "helper.GetData", "len", "common.pop", "len", "numpy.zeros", "range", "helper.GetData", "numpy.zeros", "range", "range", "range", "len", "Ttype.index", "list.copy.pop", "len", "Stype.index", "helper.GetData", "loc.append", "len", "numpy.zeros", "range", "numpy.concatenate", "numpy.concatenate", "len", "len", "len", "len", "len", "Type.index", "common.append", "sorted.append", "len", "len"], "function", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.GetData", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.GetData", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.GetData", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.GetData"], ["", "", "def", "MfindCommonMetric", "(", "list", ",", "ftarget", ",", "split", "=", "False", ")", ":", "\n", "    ", "tx", ",", "ty", ",", "Ttype", "=", "GetData", "(", "ftarget", ",", "showType", "=", "True", ")", "\n", "tt", "=", "tx", ".", "shape", "\n", "common", "=", "[", "]", "\n", "\n", "flist", "=", "list", ".", "copy", "(", ")", "\n", "### find the common metric", "\n", "first", "=", "1", "\n", "dump", "=", "[", "]", "\n", "\n", "for", "item", "in", "flist", ":", "\n", "        ", "x", ",", "y", ",", "Stype", "=", "GetData", "(", "item", ",", "showType", "=", "True", ")", "\n", "ss", "=", "x", ".", "shape", "\n", "\n", "if", "first", "==", "1", ":", "\n", "            ", "for", "i", "in", "range", "(", "ss", "[", "1", "]", ")", ":", "\n", "                ", "if", "Stype", "[", "i", "]", "in", "Ttype", ":", "\n", "                    ", "common", ".", "append", "(", "Stype", "[", "i", "]", ")", "\n", "", "", "first", "=", "0", "\n", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "common", ")", ")", ":", "\n", "                ", "if", "common", "[", "i", "]", "not", "in", "Stype", "and", "i", "not", "in", "dump", ":", "\n", "                    ", "dump", ".", "append", "(", "i", ")", "\n", "", "", "", "", "dump", "=", "sorted", "(", "dump", ",", "reverse", "=", "True", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "dump", ")", ")", ":", "\n", "        ", "common", ".", "pop", "(", "dump", "[", "i", "]", ")", "\n", "\n", "### read the data and concatendate", "\n", "\n", "", "if", "len", "(", "common", ")", "==", "0", ":", "\n", "        ", "return", "0", ",", "0", ",", "0", ",", "0", ",", "[", "]", "\n", "", "else", ":", "\n", "        ", "ftx", "=", "np", ".", "zeros", "(", "(", "tt", "[", "0", "]", ",", "len", "(", "common", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "common", ")", ")", ":", "\n", "            ", "index", "=", "Ttype", ".", "index", "(", "common", "[", "i", "]", ")", "\n", "ftx", "[", ":", ",", "i", "]", "=", "tx", "[", ":", ",", "index", "]", "\n", "\n", "", "sx", ",", "sy", ",", "Stype", "=", "GetData", "(", "flist", ".", "pop", "(", ")", ",", "showType", "=", "True", ")", "\n", "\n", "fsx", "=", "np", ".", "zeros", "(", "(", "len", "(", "sy", ")", ",", "len", "(", "common", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "common", ")", ")", ":", "\n", "            ", "index", "=", "Stype", ".", "index", "(", "common", "[", "i", "]", ")", "\n", "fsx", "[", ":", ",", "i", "]", "=", "sx", "[", ":", ",", "index", "]", "\n", "\n", "", "loc", "=", "[", "]", "\n", "base", "=", "0", "\n", "\n", "for", "item", "in", "list", ":", "\n", "            ", "x", ",", "y", ",", "Type", "=", "GetData", "(", "item", ",", "showType", "=", "True", ")", "\n", "loc", ".", "append", "(", "base", ")", "\n", "base", "+=", "len", "(", "y", ")", "\n", "fx", "=", "np", ".", "zeros", "(", "(", "len", "(", "y", ")", ",", "len", "(", "common", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "common", ")", ")", ":", "\n", "                ", "index", "=", "Type", ".", "index", "(", "common", "[", "i", "]", ")", "\n", "fx", "[", ":", ",", "i", "]", "=", "x", "[", ":", ",", "index", "]", "\n", "", "fsx", "=", "np", ".", "concatenate", "(", "(", "fsx", ",", "fx", ")", ",", "axis", "=", "0", ")", "\n", "sy", "=", "np", ".", "concatenate", "(", "(", "sy", ",", "y", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "if", "split", ":", "\n", "            ", "return", "fsx", ",", "sy", ",", "ftx", ",", "ty", ",", "loc", "\n", "", "else", ":", "\n", "            ", "return", "fsx", ",", "sy", ",", "ftx", ",", "ty", ",", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.GetDataList": [[208, 214], ["flist.pop", "helper.MfindCommonMetric", "numpy.concatenate", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.MfindCommonMetric"], ["", "", "", "def", "GetDataList", "(", "flist", ")", ":", "\n", "    ", "a", "=", "flist", ".", "pop", "(", ")", "\n", "xs", ",", "ys", ",", "xt", ",", "yt", ",", "loc", "=", "MfindCommonMetric", "(", "flist", ",", "a", ")", "\n", "x", "=", "np", ".", "concatenate", "(", "(", "xs", ",", "xt", ")", ",", "axis", "=", "0", ")", "\n", "y", "=", "np", ".", "concatenate", "(", "(", "ys", ",", "yt", ")", ",", "axis", "=", "0", ")", "\n", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.collectData": [[216, 229], ["len", "numpy.concatenate", "open().readlines", "open", "list", "numpy.zeros", "print", "map", "len", "print", "open", "[].split", "len", "numpy.asarray", "numpy.asarray", "line.split", "len", "line.split", "f.readline"], "function", ["None"], ["", "def", "collectData", "(", "fname", ")", ":", "\n", "    ", "count", "=", "len", "(", "open", "(", "fname", ",", "'r'", ")", ".", "readlines", "(", ")", ")", "\n", "with", "open", "(", "fname", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "tmp", "=", "list", "(", "map", "(", "eval", ",", "f", ".", "readline", "(", ")", "[", "1", ":", "-", "2", "]", ".", "split", "(", ")", ")", ")", "\n", "res", "=", "np", ".", "zeros", "(", "(", "count", "-", "1", ",", "len", "(", "tmp", ")", ")", ")", "\n", "i", "=", "0", "\n", "print", "(", "fname", ",", "len", "(", "tmp", ")", ")", "\n", "for", "line", "in", "f", ":", "\n", "            ", "line", "=", "line", "[", "1", ":", "-", "2", "]", "\n", "res", "[", "i", "]", "=", "np", ".", "asarray", "(", "line", ".", "split", "(", ")", ")", "[", ":", "len", "(", "tmp", ")", "]", "\n", "i", "+=", "1", "\n", "print", "(", "np", ".", "asarray", "(", "line", ".", "split", "(", ")", ")", ")", "\n", "", "", "return", "np", ".", "concatenate", "(", "(", "[", "tmp", "]", ",", "res", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.resCollect": [[231, 239], ["os.walk", "mode.upper", "os.path.join", "helper.collectData", "numpy.savetxt"], "function", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.collectData"], ["", "def", "resCollect", "(", ")", ":", "\n", "    ", "for", "mode", "in", "{", "'all'", ",", "'clf'", ",", "'seq'", ",", "'adpt'", "}", ":", "\n", "        ", "resDir", "=", "'res'", "+", "mode", ".", "upper", "(", ")", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "resDir", ")", ":", "\n", "            ", "for", "name", "in", "files", ":", "\n", "                ", "fname", "=", "os", ".", "path", ".", "join", "(", "root", ",", "name", ")", "\n", "result", "=", "collectData", "(", "fname", ")", "\n", "np", ".", "savetxt", "(", "fname", ",", "result", ",", "fmt", "=", "'%.7f'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.normal": [[241, 264], ["numpy.zeros", "range", "numpy.zeros", "range", "numpy.min", "numpy.max", "numpy.min", "numpy.max"], "function", ["None"], ["", "", "", "", "def", "normal", "(", "xs", ",", "xt", ")", ":", "\n", "    ", "ss", "=", "xs", ".", "shape", "\n", "tt", "=", "xt", ".", "shape", "\n", "\n", "# normalization for source data", "\n", "res", "=", "np", ".", "zeros", "(", "(", "ss", "[", "0", "]", ",", "ss", "[", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "ss", "[", "1", "]", ")", ":", "\n", "        ", "tmp", "=", "xs", "[", ":", ",", "i", "]", "\n", "minm", "=", "np", ".", "min", "(", "tmp", ")", "\n", "maxm", "=", "np", ".", "max", "(", "tmp", ")", "\n", "res", "[", ":", ",", "i", "]", "=", "(", "tmp", "-", "minm", ")", "/", "(", "maxm", "-", "minm", ")", "\n", "", "xs", "=", "res", "\n", "\n", "# normalization for target data", "\n", "res", "=", "np", ".", "zeros", "(", "(", "tt", "[", "0", "]", ",", "tt", "[", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "tt", "[", "1", "]", ")", ":", "\n", "        ", "tmp", "=", "xt", "[", ":", ",", "i", "]", "\n", "minm", "=", "np", ".", "min", "(", "tmp", ")", "\n", "maxm", "=", "np", ".", "max", "(", "tmp", ")", "\n", "res", "[", ":", ",", "i", "]", "=", "(", "tmp", "-", "minm", ")", "/", "(", "maxm", "-", "minm", ")", "\n", "", "xt", "=", "res", "\n", "\n", "return", "xs", ",", "xt", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.helper.RunExperiment": [[267, 393], ["create_dir", "create_dir", "range", "numpy.zeros", "range", "sklearn.model_selection.train_test_split", "numpy.zeros", "range", "Utils.Hyperopt_doer.optParamAdpt", "Utils.Hyperopt_doer.optParamCLF.run", "open", "print", "open", "dict.values", "mode.upper", "mode.upper", "Utils.Hyperopt_doer.optParamAdpt", "Utils.Hyperopt_doer.optParamCLF.run", "open", "print", "open", "dict.values", "Utils.Hyperopt_doer.optParamAll", "dict", "print", "Utils.Hyperopt_doer.optParamAll", "dict", "print", "print", "Utils.Hyperopt_doer.optParamSEQ", "list", "numpy.asarray", "Utils.Hyperopt_doer.optParamSEQ", "list", "numpy.asarray", "print", "Utils.Hyperopt_doer.optParamCLF", "len", "[].keys", "list", "list.append", "numpy.asarray", "Utils.Hyperopt_doer.optParamCLF", "len", "[].keys", "list", "list.append", "numpy.asarray", "iteration_utilities.deepflatten", "numpy.asarray", "iteration_utilities.deepflatten", "numpy.asarray", "[].values", "[].values"], "function", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.File.create_dir", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.File.create_dir", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.run", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.run"], ["", "def", "RunExperiment", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "target", ",", "adaptation", ",", "classifier", ",", "mode", "=", "'adpt'", ",", "repeat", "=", "10", ",", "\n", "fe", "=", "1000", ")", ":", "\n", "    ", "fres", "=", "create_dir", "(", "'res'", "+", "mode", ".", "upper", "(", ")", "+", "'/'", "+", "target", ")", "\n", "fp", "=", "create_dir", "(", "'para'", "+", "mode", ".", "upper", "(", ")", "+", "'/'", "+", "target", ")", "\n", "\n", "if", "adaptation", "in", "[", "'NNfilter'", ",", "'MCWs'", "]", ":", "\n", "# supervised (repeat 10 times)", "\n", "        ", "for", "it", "in", "range", "(", "10", ")", ":", "\n", "            ", "train", ",", "test", ",", "ytrain", ",", "ytest", "=", "train_test_split", "(", "Xtarget", ",", "Ltarget", ",", "test_size", "=", "0.9", ",", "random_state", "=", "42", ")", "\n", "\n", "num", "=", "repeat", "\n", "res", "=", "np", ".", "zeros", "(", "(", "num", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "                ", "if", "mode", "==", "'adpt'", ":", "\n", "                    ", "optimizer", "=", "optParamAdpt", "(", "Xsource", ",", "Lsource", ",", "test", ",", "ytest", ",", "loc", ",", "classifier", ",", "adaptation", ",", "fe", ",", "\n", "train", "=", "train", ",", "Ltrain", "=", "ytrain", ")", "\n", "", "elif", "mode", "==", "'all'", ":", "\n", "                    ", "optimizer", "=", "optParamAll", "(", "Xsource", ",", "Lsource", ",", "test", ",", "ytest", ",", "loc", ",", "classifier", ",", "adaptation", ",", "fe", ",", "train", "=", "train", ",", "\n", "Ltrain", "=", "ytrain", ")", "\n", "", "elif", "mode", "==", "'seq'", ":", "\n", "                    ", "optimizer", "=", "optParamSEQ", "(", "Xsource", ",", "Lsource", ",", "test", ",", "ytest", ",", "loc", ",", "classifier", ",", "adaptation", ",", "fe", ",", "train", "=", "train", ",", "\n", "Ltrain", "=", "ytrain", ")", "\n", "", "elif", "mode", "==", "'clf'", ":", "\n", "                    ", "optimizer", "=", "optParamCLF", "(", "Xsource", ",", "Lsource", ",", "test", ",", "ytest", ",", "loc", ",", "classifier", ",", "adaptation", ",", "fe", ",", "train", "=", "train", ",", "\n", "Ltrain", "=", "ytrain", ")", "\n", "\n", "", "try", ":", "\n", "                    ", "res", "[", "i", "]", ",", "his", ",", "best", "=", "optimizer", ".", "run", "(", ")", "\n", "", "except", "FunctionTimedOut", ":", "\n", "                    ", "trails", "=", "optimizer", ".", "trails", "\n", "if", "mode", "==", "'seq'", ":", "\n", "                        ", "if", "len", "(", "optimizer", ".", "trails", ".", "results", ")", "==", "0", ":", "\n", "                            ", "trails", "=", "optimizer", ".", "Atrails", "\n", "", "", "his", "=", "dict", "(", ")", "\n", "try", ":", "\n", "                        ", "his", "[", "'name'", "]", "=", "list", "(", "trails", ".", "trials", "[", "0", "]", "[", "'misc'", "]", "[", "'vals'", "]", ".", "keys", "(", ")", ")", "\n", "", "except", ":", "\n", "                        ", "his", "[", "'name'", "]", "=", "[", "None", "]", "\n", "", "j", "=", "0", "\n", "for", "item", "in", "trails", ".", "trials", ":", "\n", "# only record the results of successful runs", "\n", "                        ", "if", "item", "[", "'state'", "]", "==", "2", ":", "\n", "                            ", "results", "=", "list", "(", "deepflatten", "(", "item", "[", "'misc'", "]", "[", "'vals'", "]", ".", "values", "(", ")", ")", ")", "\n", "results", ".", "append", "(", "item", "[", "'result'", "]", "[", "'result'", "]", ")", "\n", "his", "[", "j", "]", "=", "results", "\n", "j", "+=", "1", "\n", "", "", "if", "j", ">", "0", ":", "\n", "                        ", "inc_value", "=", "trails", ".", "best_trial", "[", "'result'", "]", "[", "'result'", "]", "\n", "res", "[", "i", "]", "=", "np", ".", "asarray", "(", "[", "optimizer", ".", "def_value", ",", "inc_value", "]", ")", "\n", "best", "=", "trails", ".", "best_trial", "[", "'misc'", "]", "[", "'vals'", "]", "\n", "", "else", ":", "\n", "                        ", "try", ":", "\n", "                            ", "inc_value", "=", "trails", ".", "best_trial", "[", "'result'", "]", "[", "'result'", "]", "\n", "res", "[", "i", "]", "=", "np", ".", "asarray", "(", "[", "optimizer", ".", "def_value", ",", "inc_value", "]", ")", "\n", "best", "=", "trails", ".", "best_trial", "[", "'misc'", "]", "[", "'vals'", "]", "\n", "", "except", ":", "\n", "                            ", "res", "[", "i", "]", "=", "np", ".", "asarray", "(", "[", "0", ",", "0", "]", ")", "\n", "best", "=", "[", "]", "\n", "\n", "# print the result into file", "\n", "", "", "", "with", "open", "(", "fres", "+", "adaptation", "+", "'-'", "+", "classifier", "+", "'.txt'", ",", "'a+'", ")", "as", "f", ":", "\n", "                    ", "print", "(", "res", "[", "i", "]", ",", "best", ",", "file", "=", "f", ")", "\n", "if", "i", "==", "num", "-", "1", ":", "\n", "                        ", "print", "(", "'-----------------------------------------'", ",", "file", "=", "f", ")", "\n", "\n", "", "", "with", "open", "(", "fp", "+", "adaptation", "+", "'-'", "+", "classifier", "+", "'-'", "+", "'.txt'", ",", "'a+'", ")", "as", "f", ":", "\n", "                    ", "for", "item", "in", "his", ".", "values", "(", ")", ":", "\n", "                        ", "print", "(", "item", ",", "file", "=", "f", ")", "\n", "if", "i", "==", "num", "-", "1", ":", "\n", "                            ", "print", "(", "'-----------------------------------------'", ",", "file", "=", "f", ")", "\n", "\n", "", "", "", "", "", "", "else", ":", "\n", "# un-supervised (just 1 times)", "\n", "        ", "num", "=", "repeat", "\n", "res", "=", "np", ".", "zeros", "(", "(", "num", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "            ", "if", "mode", "==", "'adpt'", ":", "\n", "                ", "optimizer", "=", "optParamAdpt", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "classifier", ",", "adaptation", ",", "fe", ")", "\n", "", "elif", "mode", "==", "'all'", ":", "\n", "                ", "optimizer", "=", "optParamAll", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "classifier", ",", "adaptation", ",", "fe", ")", "\n", "", "elif", "mode", "==", "'seq'", ":", "\n", "                ", "optimizer", "=", "optParamSEQ", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "classifier", ",", "adaptation", ",", "fe", ")", "\n", "", "elif", "mode", "==", "'clf'", ":", "\n", "                ", "optimizer", "=", "optParamCLF", "(", "Xsource", ",", "Lsource", ",", "Xtarget", ",", "Ltarget", ",", "loc", ",", "classifier", ",", "adaptation", ",", "fe", ")", "\n", "\n", "", "try", ":", "\n", "                ", "res", "[", "i", "]", ",", "his", ",", "best", "=", "optimizer", ".", "run", "(", ")", "\n", "", "except", "FunctionTimedOut", ":", "\n", "                ", "trails", "=", "optimizer", ".", "trails", "\n", "if", "mode", "==", "'seq'", ":", "\n", "                    ", "if", "len", "(", "optimizer", ".", "trails", ".", "results", ")", "==", "0", ":", "\n", "                        ", "trails", "=", "optimizer", ".", "Atrails", "\n", "", "", "his", "=", "dict", "(", ")", "\n", "try", ":", "\n", "                    ", "his", "[", "'name'", "]", "=", "list", "(", "trails", ".", "trials", "[", "0", "]", "[", "'misc'", "]", "[", "'vals'", "]", ".", "keys", "(", ")", ")", "\n", "", "except", ":", "\n", "                    ", "his", "[", "'name'", "]", "=", "[", "None", "]", "\n", "", "j", "=", "0", "\n", "for", "item", "in", "trails", ".", "trials", ":", "\n", "# only record the results of successful runs", "\n", "                    ", "if", "item", "[", "'state'", "]", "==", "2", ":", "\n", "                        ", "results", "=", "list", "(", "deepflatten", "(", "item", "[", "'misc'", "]", "[", "'vals'", "]", ".", "values", "(", ")", ")", ")", "\n", "results", ".", "append", "(", "item", "[", "'result'", "]", "[", "'result'", "]", ")", "\n", "his", "[", "j", "]", "=", "results", "\n", "j", "+=", "1", "\n", "", "", "if", "j", ">", "0", ":", "\n", "                    ", "inc_value", "=", "trails", ".", "best_trial", "[", "'result'", "]", "[", "'result'", "]", "\n", "res", "[", "i", "]", "=", "np", ".", "asarray", "(", "[", "optimizer", ".", "def_value", ",", "inc_value", "]", ")", "\n", "best", "=", "trails", ".", "best_trial", "[", "'misc'", "]", "[", "'vals'", "]", "\n", "", "else", ":", "\n", "                    ", "try", ":", "\n", "                        ", "inc_value", "=", "trails", ".", "best_trial", "[", "'result'", "]", "[", "'result'", "]", "\n", "res", "[", "i", "]", "=", "np", ".", "asarray", "(", "[", "optimizer", ".", "def_value", ",", "inc_value", "]", ")", "\n", "best", "=", "trails", ".", "best_trial", "[", "'misc'", "]", "[", "'vals'", "]", "\n", "", "except", ":", "\n", "                        ", "res", "[", "i", "]", "=", "np", ".", "asarray", "(", "[", "0", ",", "0", "]", ")", "\n", "best", "=", "[", "]", "\n", "\n", "\n", "# print the result into file", "\n", "", "", "", "with", "open", "(", "fres", "+", "adaptation", "+", "'-'", "+", "classifier", "+", "'.txt'", ",", "'a+'", ")", "as", "f", ":", "\n", "                ", "print", "(", "res", "[", "i", "]", ",", "best", ",", "file", "=", "f", ")", "\n", "\n", "", "with", "open", "(", "fp", "+", "adaptation", "+", "'-'", "+", "classifier", "+", "'.txt'", ",", "'a+'", ")", "as", "f", ":", "\n", "                ", "for", "item", "in", "his", ".", "values", "(", ")", ":", "\n", "                    ", "print", "(", "item", ",", "file", "=", "f", ")", "\n", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.File.fdelete.__init__": [[21, 23], ["os.getcwd"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "dir", "=", "os", ".", "getcwd", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.File.fdelete.deleteDir": [[24, 31], ["os.listdir", "shutil.rmtree"], "methods", ["None"], ["", "def", "deleteDir", "(", "self", ",", "ext", ",", "dir", "=", "'default'", ")", ":", "\n", "        ", "if", "dir", "==", "'default'", ":", "\n", "            ", "dir", "=", "self", ".", "dir", "\n", "", "for", "name", "in", "os", ".", "listdir", "(", "dir", ")", ":", "\n", "            ", "if", "ext", "in", "name", ":", "\n", "#print(dir + name)", "\n", "                ", "shutil", ".", "rmtree", "(", "dir", "+", "'/'", "+", "name", ")", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.File.fnameList": [[5, 12], ["os.listdir", "os.path.join", "os.path.isdir", "File.fnameList", "list_name.append"], "function", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.File.fnameList"], ["def", "fnameList", "(", "path", ",", "list_name", ")", ":", "\n", "    ", "for", "file", "in", "os", ".", "listdir", "(", "path", ")", ":", "\n", "        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "file", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "file_path", ")", ":", "\n", "            ", "fnameList", "(", "file_path", ",", "list_name", ")", "\n", "", "else", ":", "\n", "            ", "list_name", ".", "append", "(", "file_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.File.create_dir": [[13, 19], ["os.path.exists", "os.makedirs", "os.getcwd"], "function", ["None"], ["", "", "", "def", "create_dir", "(", "dirname", ")", ":", "\n", "    ", "path", "=", "os", ".", "getcwd", "(", ")", "+", "'/'", "+", "dirname", "\n", "folder", "=", "os", ".", "path", ".", "exists", "(", "path", ")", "\n", "if", "not", "folder", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "", "return", "path", "+", "\"/\"", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.DTB.DTB.__init__": [[13, 44], ["numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "Xs", ",", "Ys", ",", "Xt", ",", "Yt", ",", "n_neighbors", "=", "10", ",", "iter", "=", "20", ",", "clf", "=", "'RF'", ",", "\n", "n_estimators", "=", "10", ",", "criterion", "=", "'gini'", ",", "max_features", "=", "'auto'", ",", "RFmin_samples_split", "=", "2", ",", "# RF", "\n", "Boostnestimator", "=", "50", ",", "BoostLearnrate", "=", "1", ",", "# Boost", "\n", "CARTsplitter", "=", "'best'", ",", "# CART", "\n", "Ridgealpha", "=", "1", ",", "Ridgenormalize", "=", "False", ",", "# Ridge", "\n", "NBtype", "=", "'gaussian'", ",", "\n", "SVCkernel", "=", "'poly'", ",", "C", "=", "1", ",", "degree", "=", "3", ",", "coef0", "=", "0.0", ",", "SVCgamma", "=", "1", "\n", ")", ":", "\n", "        ", "self", ".", "Xsource", "=", "np", ".", "asarray", "(", "Xs", ")", "\n", "self", ".", "Ysource", "=", "np", ".", "asarray", "(", "Ys", ")", "\n", "self", ".", "Xtarget", "=", "np", ".", "asarray", "(", "Xt", ")", "\n", "self", ".", "Ytarget", "=", "np", ".", "asarray", "(", "Yt", ")", "\n", "self", ".", "n_neighbors", "=", "int", "(", "n_neighbors", ")", "\n", "self", ".", "iter", "=", "iter", "\n", "self", ".", "clfType", "=", "clf", "\n", "\n", "self", ".", "n_estimators", "=", "n_estimators", "\n", "self", ".", "criterion", "=", "criterion", "\n", "self", ".", "max_features", "=", "max_features", "\n", "self", ".", "RFmin_samples", "=", "RFmin_samples_split", "\n", "self", ".", "Boostne", "=", "Boostnestimator", "\n", "self", ".", "BoostLearnrate", "=", "BoostLearnrate", "\n", "self", ".", "NBType", "=", "NBtype", "\n", "self", ".", "CARTsplitter", "=", "CARTsplitter", "\n", "self", ".", "Ridgealpha", "=", "Ridgealpha", "\n", "self", ".", "Ridgenormalize", "=", "Ridgenormalize", "\n", "self", ".", "SVCkernel", "=", "SVCkernel", "\n", "self", ".", "coef0", "=", "coef0", "\n", "self", ".", "gamma", "=", "SVCgamma", "\n", "self", ".", "degree", "=", "degree", "\n", "self", ".", "C", "=", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.DTB.DTB._NNfilter": [[47, 62], ["sklearn.neighbors.NearestNeighbors", "sklearn.neighbors.NearestNeighbors.fit", "numpy.asanyarray", "numpy.asanyarray", "sklearn.neighbors.NearestNeighbors.kneighbors", "item.reshape", "list", "data.append", "ysel.append", "list"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit"], ["", "def", "_NNfilter", "(", "self", ")", ":", "\n", "        ", "knn", "=", "NearestNeighbors", "(", ")", "\n", "knn", ".", "fit", "(", "self", ".", "Xsource", ")", "\n", "data", "=", "[", "]", "\n", "ysel", "=", "[", "]", "\n", "\n", "for", "item", "in", "self", ".", "Xtarget", ":", "\n", "            ", "tmp", "=", "knn", ".", "kneighbors", "(", "item", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "self", ".", "n_neighbors", ",", "return_distance", "=", "False", ")", "\n", "tmp", "=", "tmp", "[", "0", "]", "\n", "for", "i", "in", "tmp", ":", "\n", "                ", "if", "list", "(", "self", ".", "Xsource", "[", "i", "]", ")", "not", "in", "data", ":", "\n", "                    ", "data", ".", "append", "(", "list", "(", "self", ".", "Xsource", "[", "i", "]", ")", ")", "\n", "ysel", ".", "append", "(", "self", ".", "Ysource", "[", "i", "]", ")", "\n", "", "", "", "self", ".", "Xsource", "=", "np", ".", "asanyarray", "(", "data", ")", "\n", "self", ".", "Ysource", "=", "np", ".", "asanyarray", "(", "ysel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.DTB.DTB._SMOTE": [[64, 67], ["imblearn.over_sampling.SMOTE", "imblearn.over_sampling.SMOTE.fit_resample"], "methods", ["None"], ["", "def", "_SMOTE", "(", "self", ")", ":", "\n", "        ", "smote", "=", "SMOTE", "(", ")", "\n", "self", ".", "Xsource", ",", "self", ".", "Ysource", "=", "smote", ".", "fit_resample", "(", "self", ".", "Xsource", ",", "self", ".", "Ysource", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.DTB.DTB._max_min": [[68, 78], ["numpy.zeros", "numpy.zeros", "range", "numpy.asarray", "numpy.max", "numpy.min"], "methods", ["None"], ["", "def", "_max_min", "(", "self", ",", "x", ")", ":", "\n", "        ", "shape", "=", "np", ".", "asarray", "(", "x", ")", ".", "shape", "\n", "Max", "=", "np", ".", "zeros", "(", "shape", "[", "1", "]", ")", "\n", "Min", "=", "np", ".", "zeros", "(", "shape", "[", "1", "]", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "shape", "[", "1", "]", ")", ":", "\n", "            ", "a", "=", "x", "[", ":", ",", "i", "]", "\n", "Max", "[", "i", "]", "=", "np", ".", "max", "(", "a", ")", "\n", "Min", "[", "i", "]", "=", "np", ".", "min", "(", "a", ")", "\n", "\n", "", "return", "Max", ",", "Min", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.DTB.DTB._weight": [[79, 93], ["DTB.DTB._max_min", "numpy.zeros", "numpy.zeros", "range", "range", "numpy.power"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.DTB.DTB._max_min"], ["", "def", "_weight", "(", "self", ")", ":", "\n", "        ", "max", ",", "min", "=", "self", ".", "_max_min", "(", "self", ".", "Xtarget", ")", "\n", "shape", "=", "self", ".", "Xsource", ".", "shape", "\n", "s", "=", "np", ".", "zeros", "(", "shape", "[", "0", "]", ")", "\n", "w", "=", "np", ".", "zeros", "(", "shape", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "shape", "[", "0", "]", ")", ":", "\n", "            ", "tmp", "=", "0", "\n", "for", "j", "in", "range", "(", "0", ",", "shape", "[", "1", "]", ")", ":", "\n", "                ", "if", "self", ".", "Xsource", "[", "i", "]", "[", "j", "]", "<=", "max", "[", "j", "]", "and", "self", ".", "Xsource", "[", "i", "]", "[", "j", "]", ">=", "min", "[", "j", "]", ":", "\n", "                    ", "tmp", "=", "tmp", "+", "1", "\n", "", "", "s", "[", "i", "]", "=", "tmp", "\n", "w", "[", "i", "]", "=", "s", "[", "i", "]", "/", "(", "1.0", "*", "np", ".", "power", "(", "shape", "[", "1", "]", "-", "s", "[", "i", "]", "+", "1", ",", "2", ")", ")", "\n", "\n", "", "return", "w", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.DTB.DTB.fit": [[94, 124], ["DTB.DTB._NNfilter", "DTB.DTB._SMOTE", "DTB.DTB._weight", "sklearn.model_selection.train_test_split", "sklearn.ensemble.AdaBoostClassifier", "DTB.DTB.model.fit", "len", "sklearn.model_selection.train_test_split", "RandomForestClassifier", "SVC", "sklearn.ensemble.AdaBoostClassifier", "DecisionTreeClassifier", "RidgeClassifier", "numpy.unique", "GaussianNB", "MultinomialNB", "BernoulliNB"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.DTB.DTB._NNfilter", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.DTB.DTB._SMOTE", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.DTB.DTB._weight", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit"], ["", "def", "fit", "(", "self", ")", ":", "\n", "        ", "self", ".", "_NNfilter", "(", ")", "\n", "self", ".", "_SMOTE", "(", ")", "\n", "weight", "=", "self", ".", "_weight", "(", ")", "\n", "\n", "trainX", ",", "self", ".", "testX", ",", "trainY", ",", "self", ".", "testY", "=", "train_test_split", "(", "self", ".", "Xtarget", ",", "self", ".", "Ytarget", ",", "test_size", "=", "0.3", ")", "\n", "while", "len", "(", "np", ".", "unique", "(", "self", ".", "testY", ")", ")", "<=", "1", ":", "\n", "            ", "trainX", ",", "testX", ",", "trainY", ",", "self", ".", "testY", "=", "train_test_split", "(", "self", ".", "Xtarget", ",", "self", ".", "Ytarget", ",", "test_size", "=", "0.3", ")", "\n", "", "if", "self", ".", "clfType", "==", "'RF'", ":", "\n", "            ", "m", "=", "RandomForestClassifier", "(", "n_estimators", "=", "self", ".", "n_estimators", ",", "criterion", "=", "self", ".", "criterion", ",", "\n", "max_features", "=", "self", ".", "max_features", ",", "min_samples_split", "=", "self", ".", "RFmin_samples", ")", "\n", "", "if", "self", ".", "clfType", "==", "'SVM'", ":", "\n", "            ", "m", "=", "SVC", "(", "kernel", "=", "self", ".", "SVCkernel", ",", "C", "=", "self", ".", "C", ",", "degree", "=", "self", ".", "degree", ",", "coef0", "=", "self", ".", "coef0", ",", "gamma", "=", "self", ".", "gamma", ")", "\n", "", "if", "self", ".", "clfType", "==", "'Boost'", ":", "\n", "            ", "m", "=", "AdaBoostClassifier", "(", "n_estimators", "=", "self", ".", "Boostne", ",", "learning_rate", "=", "self", ".", "BoostLearnrate", ")", "\n", "", "if", "self", ".", "clfType", "==", "'NB'", ":", "\n", "            ", "if", "self", ".", "NBType", "==", "'gaussian'", ":", "\n", "                ", "m", "=", "GaussianNB", "(", ")", "\n", "", "elif", "self", ".", "NBType", "==", "'multinomial'", ":", "\n", "                ", "m", "=", "MultinomialNB", "(", ")", "\n", "", "elif", "self", ".", "NBType", "==", "'bernoulli'", ":", "\n", "                ", "m", "=", "BernoulliNB", "(", ")", "\n", "", "", "if", "self", ".", "clfType", "==", "'CART'", ":", "\n", "            ", "m", "=", "DecisionTreeClassifier", "(", "criterion", "=", "self", ".", "criterion", ",", "splitter", "=", "self", ".", "CARTsplitter", ",", "max_features", "=", "self", ".", "max_features", ",", "min_samples_split", "=", "self", ".", "RFmin_samples", ")", "\n", "", "if", "self", ".", "clfType", "==", "'Ridge'", ":", "\n", "            ", "m", "=", "RidgeClassifier", "(", "alpha", "=", "self", ".", "Ridgealpha", ",", "normalize", "=", "self", ".", "Ridgenormalize", ")", "\n", "\n", "# self.model = trAdaBoost(self.Xsource, trainX, self.Ysource, trainY, testX, self.iter, initWeight=weight, clf=m)", "\n", "", "self", ".", "model", "=", "AdaBoostClassifier", "(", "base_estimator", "=", "m", ",", "n_estimators", "=", "self", ".", "iter", ",", "algorithm", "=", "'SAMME'", ")", "\n", "self", ".", "model", ".", "fit", "(", "self", ".", "Xsource", ",", "self", ".", "Ysource", ",", "sample_weight", "=", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.DTB.DTB.predict": [[126, 134], ["DTB.DTB.model.predict", "sklearn.metrics.roc_auc_score", "sklearn.metrics.accuracy_score"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.predict"], ["", "def", "predict", "(", "self", ")", ":", "\n", "# if self.model.error == 1 or len(np.unique(self.testY)) <= 1:", "\n", "#     self.AUC = 0", "\n", "#     return", "\n", "        ", "Ypredict", "=", "self", ".", "model", ".", "predict", "(", "self", ".", "testX", ")", "\n", "\n", "self", ".", "AUC", "=", "roc_auc_score", "(", "self", ".", "testY", ",", "Ypredict", ")", "\n", "self", ".", "acc", "=", "accuracy_score", "(", "self", ".", "testY", ",", "Ypredict", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.HISNN.HISNN.__init__": [[15, 54], ["numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "sklearn.ensemble.RandomForestClassifier", "sklearn.svm.SVC", "sklearn.ensemble.AdaBoostClassifier", "sklearn.neural_network.MLPClassifier", "sklearn.neighbors.KNeighborsClassifier", "sklearn.tree.DecisionTreeClassifier", "sklearn.linear_model.RidgeClassifier", "GaussianNB", "MultinomialNB", "BernoulliNB"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "Xs", ",", "Ys", ",", "Xt", ",", "Yt", ",", "MinHam", "=", "1.0", ",", "n_neighbors", "=", "5", ",", "clf", "=", "'RF'", ",", "\n", "n_estimators", "=", "10", ",", "criterion", "=", "'gini'", ",", "max_features", "=", "'auto'", ",", "RFmin_samples_split", "=", "2", ",", "# RF", "\n", "Boostnestimator", "=", "50", ",", "BoostLearnrate", "=", "1", ",", "# Boost", "\n", "NNactive", "=", "'relu'", ",", "NNalpha", "=", "0.0001", ",", "NNmaxiter", "=", "200", ",", "# NN", "\n", "CARTsplitter", "=", "'best'", ",", "# CART", "\n", "Ridgealpha", "=", "1", ",", "Ridgenormalize", "=", "False", ",", "# Ridge", "\n", "KNNneighbors", "=", "5", ",", "# KNN", "\n", "NBtype", "=", "'gaussian'", ",", "\n", "SVCkernel", "=", "'poly'", ",", "C", "=", "1", ",", "degree", "=", "3", ",", "coef0", "=", "0.0", ",", "SVCgamma", "=", "1", ")", ":", "\n", "        ", "self", ".", "MinHam", "=", "MinHam", "\n", "self", ".", "neighbors", "=", "n_neighbors", "\n", "self", ".", "Xsource", "=", "np", ".", "asarray", "(", "Xs", ")", "\n", "self", ".", "Ysource", "=", "np", ".", "asarray", "(", "Ys", ")", "\n", "self", ".", "Xtarget", "=", "np", ".", "asarray", "(", "Xt", ")", "\n", "self", ".", "Ytarget", "=", "np", ".", "asarray", "(", "Yt", ")", "\n", "self", ".", "clfType", "=", "clf", "\n", "\n", "if", "self", ".", "clfType", "==", "'RF'", ":", "\n", "            ", "self", ".", "m", "=", "RandomForestClassifier", "(", "n_estimators", "=", "n_estimators", ",", "criterion", "=", "criterion", ",", "\n", "max_features", "=", "max_features", ",", "min_samples_split", "=", "RFmin_samples_split", ")", "\n", "", "if", "self", ".", "clfType", "==", "'SVM'", ":", "\n", "            ", "self", ".", "m", "=", "SVC", "(", "kernel", "=", "SVCkernel", ",", "C", "=", "C", ",", "degree", "=", "degree", ",", "coef0", "=", "coef0", ",", "gamma", "=", "SVCgamma", ")", "\n", "", "if", "self", ".", "clfType", "==", "'Boost'", ":", "\n", "            ", "self", ".", "m", "=", "AdaBoostClassifier", "(", "n_estimators", "=", "Boostnestimator", ",", "learning_rate", "=", "BoostLearnrate", ")", "\n", "", "if", "self", ".", "clfType", "==", "'NN'", ":", "\n", "            ", "self", ".", "m", "=", "MLPClassifier", "(", "activation", "=", "NNactive", ",", "alpha", "=", "NNalpha", ",", "max_iter", "=", "NNmaxiter", ")", "\n", "", "if", "self", ".", "clfType", "==", "'KNN'", ":", "\n", "            ", "self", ".", "m", "=", "KNeighborsClassifier", "(", "n_neighbors", "=", "KNNneighbors", ")", "\n", "", "if", "self", ".", "clfType", "==", "'NB'", ":", "\n", "            ", "if", "NBtype", "==", "'gaussian'", ":", "\n", "                ", "self", ".", "m", "=", "GaussianNB", "(", ")", "\n", "", "elif", "NBtype", "==", "'multinomial'", ":", "\n", "                ", "self", ".", "m", "=", "MultinomialNB", "(", ")", "\n", "", "elif", "NBtype", "==", "'bernoulli'", ":", "\n", "                ", "self", ".", "m", "=", "BernoulliNB", "(", ")", "\n", "", "", "if", "self", ".", "clfType", "==", "'CART'", ":", "\n", "            ", "self", ".", "m", "=", "DecisionTreeClassifier", "(", "criterion", "=", "criterion", ",", "splitter", "=", "CARTsplitter", ",", "max_features", "=", "max_features", ",", "min_samples_split", "=", "RFmin_samples_split", ")", "\n", "", "if", "self", ".", "clfType", "==", "'Ridge'", ":", "\n", "            ", "self", ".", "m", "=", "RidgeClassifier", "(", "alpha", "=", "Ridgealpha", ",", "normalize", "=", "Ridgenormalize", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.HISNN.HISNN._MahalanobisDist": [[55, 64], ["numpy.cov", "numpy.linalg.pinv", "numpy.mean", "numpy.zeros", "range", "scipy.spatial.distance.mahalanobis", "numpy.asarray"], "methods", ["None"], ["", "", "def", "_MahalanobisDist", "(", "self", ",", "data", ",", "base", ")", ":", "\n", "\n", "        ", "covariance", "=", "np", ".", "cov", "(", "base", ".", "T", ")", "# calculate the covarince matrix", "\n", "inv_covariance", "=", "np", ".", "linalg", ".", "pinv", "(", "covariance", ")", "\n", "mean", "=", "np", ".", "mean", "(", "base", ",", "axis", "=", "0", ")", "\n", "dist", "=", "np", ".", "zeros", "(", "(", "np", ".", "asarray", "(", "data", ")", ")", ".", "shape", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "dist", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "dist", "[", "i", "]", "=", "distance", ".", "mahalanobis", "(", "data", "[", "i", "]", ",", "mean", ",", "inv_covariance", ")", "\n", "", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.HISNN.HISNN._TrainInstanceFiltering": [[66, 107], ["HISNN.HISNN._MahalanobisDist", "range", "numpy.delete", "numpy.delete", "HISNN.HISNN._MahalanobisDist", "range", "numpy.delete", "numpy.delete", "sklearn.neighbors.NearestNeighbors", "sklearn.neighbors.NearestNeighbors.fit", "numpy.zeros", "numpy.zeros", "range", "numpy.std", "len", "numpy.std", "len", "sklearn.neighbors.NearestNeighbors.radius_neighbors", "len", "len", "numpy.mean", "outliers.append", "numpy.mean", "outliers.append", "item.reshape", "len", "filtered.append"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.HISNN.HISNN._MahalanobisDist", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.HISNN.HISNN._MahalanobisDist", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit"], ["", "def", "_TrainInstanceFiltering", "(", "self", ")", ":", "\n", "# source outlier remove based on source", "\n", "        ", "dist", "=", "self", ".", "_MahalanobisDist", "(", "self", ".", "Xsource", ",", "self", ".", "Xsource", ")", "\n", "threshold", "=", "np", ".", "mean", "(", "dist", ")", "*", "3", "*", "np", ".", "std", "(", "dist", ")", "\n", "outliers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dist", ")", ")", ":", "\n", "            ", "if", "dist", "[", "i", "]", ">", "threshold", ":", "\n", "                ", "outliers", ".", "append", "(", "i", ")", "# index of the outlier", "\n", "", "", "self", ".", "Xsource", "=", "np", ".", "delete", "(", "self", ".", "Xsource", ",", "outliers", ",", "axis", "=", "0", ")", "\n", "self", ".", "Ysource", "=", "np", ".", "delete", "(", "self", ".", "Ysource", ",", "outliers", ",", "axis", "=", "0", ")", "\n", "\n", "# source outlier remove based on target", "\n", "dist", "=", "self", ".", "_MahalanobisDist", "(", "self", ".", "Xsource", ",", "self", ".", "Xtarget", ")", "\n", "threshold", "=", "np", ".", "mean", "(", "dist", ")", "*", "3", "*", "np", ".", "std", "(", "dist", ")", "\n", "outliers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dist", ")", ")", ":", "\n", "            ", "if", "dist", "[", "i", "]", ">", "threshold", ":", "\n", "                ", "outliers", ".", "append", "(", "i", ")", "# index of the outlier", "\n", "", "", "self", ".", "Xsource", "=", "np", ".", "delete", "(", "self", ".", "Xsource", ",", "outliers", ",", "axis", "=", "0", ")", "\n", "self", ".", "Ysource", "=", "np", ".", "delete", "(", "self", ".", "Ysource", ",", "outliers", ",", "axis", "=", "0", ")", "\n", "\n", "# NN filter for source data based on target", "\n", "neigh", "=", "NearestNeighbors", "(", "radius", "=", "self", ".", "MinHam", ",", "metric", "=", "'hamming'", ")", "\n", "neigh", ".", "fit", "(", "self", ".", "Xsource", ")", "\n", "\n", "filtered", "=", "[", "]", "\n", "for", "item", "in", "self", ".", "Xtarget", ":", "\n", "            ", "rng", "=", "neigh", ".", "radius_neighbors", "(", "item", ".", "reshape", "(", "1", ",", "-", "1", ")", ")", "\n", "indexNeighs", "=", "rng", "[", "1", "]", "[", "0", "]", "\n", "for", "it", "in", "indexNeighs", ":", "\n", "                ", "if", "it", "not", "in", "filtered", ":", "\n", "                    ", "filtered", ".", "append", "(", "it", ")", "\n", "\n", "", "", "", "a", "=", "np", ".", "zeros", "(", "(", "len", "(", "filtered", ")", ",", "self", ".", "Xsource", ".", "shape", "[", "1", "]", ")", ")", "\n", "b", "=", "np", ".", "zeros", "(", "len", "(", "filtered", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "filtered", ")", ")", ":", "\n", "            ", "a", "[", "i", "]", "=", "self", ".", "Xsource", "[", "filtered", "[", "i", "]", "]", "\n", "b", "[", "i", "]", "=", "self", ".", "Ysource", "[", "filtered", "[", "i", "]", "]", "\n", "\n", "", "self", ".", "Xsource", "=", "a", "\n", "self", ".", "Ysource", "=", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.HISNN.HISNN.fit": [[108, 111], ["HISNN.HISNN._TrainInstanceFiltering", "HISNN.HISNN.m.fit", "numpy.log"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.HISNN.HISNN._TrainInstanceFiltering", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit"], ["", "def", "fit", "(", "self", ")", ":", "\n", "        ", "self", ".", "_TrainInstanceFiltering", "(", ")", "\n", "self", ".", "m", ".", "fit", "(", "np", ".", "log", "(", "self", ".", "Xsource", "+", "1", ")", ",", "self", ".", "Ysource", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.HISNN.HISNN.predict": [[112, 157], ["numpy.zeros", "sklearn.neighbors.NearestNeighbors", "sklearn.neighbors.NearestNeighbors.fit", "range", "sklearn.metrics.roc_auc_score", "sklearn.neighbors.NearestNeighbors.radius_neighbors", "len", "sklearn.neighbors.NearestNeighbors.radius_neighbors", "range", "len", "HISNN.HISNN.m.predict", "range", "len", "HISNN.HISNN.m.predict", "len", "HISNN.HISNN.m.predict", "numpy.log", "numpy.log", "numpy.log"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.predict", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.predict", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.predict"], ["", "def", "predict", "(", "self", ")", ":", "\n", "        ", "predict", "=", "np", ".", "zeros", "(", "self", ".", "Xtarget", ".", "shape", "[", "0", "]", ")", "\n", "neigh", "=", "NearestNeighbors", "(", "n_neighbors", "=", "self", ".", "neighbors", ",", "radius", "=", "self", ".", "MinHam", ",", "metric", "=", "'hamming'", ")", "\n", "neigh", ".", "fit", "(", "self", ".", "Xsource", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "Xtarget", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "rng", "=", "neigh", ".", "radius_neighbors", "(", "[", "self", ".", "Xtarget", "[", "i", "]", "]", ")", "\n", "indexNeighs", "=", "rng", "[", "1", "]", "[", "0", "]", "\n", "\n", "# case 1", "\n", "if", "len", "(", "indexNeighs", ")", "==", "1", ":", "\n", "                ", "subRng", "=", "neigh", ".", "radius_neighbors", "(", "[", "self", ".", "Xsource", "[", "indexNeighs", "[", "0", "]", "]", "]", ")", "\n", "indexSubNeighs", "=", "subRng", "[", "1", "]", "[", "0", "]", "\n", "\n", "if", "len", "(", "indexSubNeighs", ")", "==", "1", ":", "\n", "                    ", "predict", "[", "i", "]", "=", "self", ".", "m", ".", "predict", "(", "[", "np", ".", "log", "(", "self", ".", "Xtarget", "[", "i", "]", "+", "1", ")", "]", ")", "\n", "", "else", ":", "\n", "                    ", "flag", "=", "0", "\n", "isDifferent", "=", "self", ".", "Ysource", "[", "indexSubNeighs", "[", "0", "]", "]", "\n", "for", "index", "in", "range", "(", "1", ",", "len", "(", "indexSubNeighs", ")", ")", ":", "\n", "                        ", "if", "self", ".", "Ysource", "[", "index", "]", "!=", "isDifferent", ":", "\n", "                            ", "flag", "=", "1", "\n", "break", "\n", "", "", "if", "flag", "==", "0", ":", "\n", "                        ", "predict", "[", "i", "]", "=", "isDifferent", "\n", "", "else", ":", "\n", "                        ", "predict", "[", "i", "]", "=", "self", ".", "m", ".", "predict", "(", "[", "np", ".", "log", "(", "self", ".", "Xtarget", "[", "i", "]", "+", "1", ")", "]", ")", "\n", "\n", "", "", "", "else", ":", "\n", "                ", "flag", "=", "0", "\n", "isDifferent", "=", "self", ".", "Ysource", "[", "indexNeighs", "[", "0", "]", "]", "\n", "for", "index", "in", "range", "(", "1", ",", "len", "(", "indexNeighs", ")", ")", ":", "\n", "                    ", "if", "self", ".", "Ysource", "[", "index", "]", "!=", "isDifferent", ":", "\n", "                        ", "flag", "=", "1", "\n", "break", "\n", "# case 2", "\n", "", "", "if", "flag", "==", "0", ":", "\n", "                    ", "predict", "[", "i", "]", "=", "isDifferent", "\n", "# case 3", "\n", "", "else", ":", "\n", "                    ", "predict", "[", "i", "]", "=", "self", ".", "m", ".", "predict", "(", "[", "np", ".", "log", "(", "self", ".", "Xtarget", "[", "i", "]", "+", "1", ")", "]", ")", "\n", "\n", "\n", "\n", "", "", "", "self", ".", "AUC", "=", "roc_auc_score", "(", "self", ".", "Ytarget", ",", "predict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.TCA.__init__": [[48, 60], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "kernel_type", "=", "'primal'", ",", "dim", "=", "5", ",", "lamb", "=", "1", ",", "gamma", "=", "1", ")", ":", "\n", "        ", "'''\n        Init func\n        :param kernel_type: kernel, values: 'primal' | 'linear' | 'rbf' | 'sam'\n        :param dim: dimension after transfer\n        :param lamb: lambda value in equation\n        :param gamma: kernel bandwidth for rbf kernel\n        '''", "\n", "self", ".", "kernel_type", "=", "kernel_type", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "lamb", "=", "lamb", "\n", "self", ".", "gamma", "=", "gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.TCA._normalization": [[61, 152], ["numpy.zeros", "range", "numpy.zeros", "range", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.zeros", "range", "numpy.zeros", "range", "numpy.mean", "numpy.std", "numpy.mean", "numpy.std", "numpy.zeros", "range", "numpy.zeros", "range", "numpy.mean", "numpy.std", "Smean.append", "Sstd.append", "numpy.zeros", "range", "numpy.zeros", "range", "numpy.mean", "numpy.std", "Smean.append", "Sstd.append"], "methods", ["None"], ["", "def", "_normalization", "(", "self", ",", "type", ")", ":", "\n", "        ", "ss", "=", "self", ".", "Xsource", ".", "shape", "\n", "tt", "=", "self", ".", "Xtarget", ".", "shape", "\n", "\n", "if", "type", "==", "'N1'", ":", "\n", "# normalization for source data", "\n", "            ", "res", "=", "np", ".", "zeros", "(", "(", "ss", "[", "0", "]", ",", "ss", "[", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "ss", "[", "1", "]", ")", ":", "\n", "                ", "tmp", "=", "self", ".", "Xsource", "[", ":", ",", "i", "]", "\n", "minm", "=", "np", ".", "min", "(", "tmp", ")", "\n", "maxm", "=", "np", ".", "max", "(", "tmp", ")", "\n", "res", "[", ":", ",", "i", "]", "=", "(", "tmp", "-", "minm", ")", "/", "(", "maxm", "-", "minm", ")", "\n", "", "self", ".", "Xsource", "=", "res", "\n", "\n", "# normalization for target data", "\n", "res", "=", "np", ".", "zeros", "(", "(", "tt", "[", "0", "]", ",", "tt", "[", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "tt", "[", "1", "]", ")", ":", "\n", "                ", "tmp", "=", "self", ".", "Xtarget", "[", ":", ",", "i", "]", "\n", "minm", "=", "np", ".", "min", "(", "tmp", ")", "\n", "maxm", "=", "np", ".", "max", "(", "tmp", ")", "\n", "res", "[", ":", ",", "i", "]", "=", "(", "tmp", "-", "minm", ")", "/", "(", "maxm", "-", "minm", ")", "\n", "", "self", ".", "Xtarget", "=", "res", "\n", "\n", "", "elif", "type", "==", "'N2'", ":", "\n", "# normalization for source data", "\n", "            ", "res", "=", "np", ".", "zeros", "(", "(", "ss", "[", "0", "]", ",", "ss", "[", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "ss", "[", "1", "]", ")", ":", "\n", "                ", "tmp", "=", "self", ".", "Xsource", "[", ":", ",", "i", "]", "\n", "mean", "=", "np", ".", "mean", "(", "tmp", ")", "\n", "std", "=", "np", ".", "std", "(", "tmp", ")", "\n", "res", "[", ":", ",", "i", "]", "=", "(", "tmp", "-", "mean", ")", "/", "std", "\n", "", "self", ".", "Xsource", "=", "res", "\n", "\n", "# normalization for target data", "\n", "res", "=", "np", ".", "zeros", "(", "(", "tt", "[", "0", "]", ",", "tt", "[", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "tt", "[", "1", "]", ")", ":", "\n", "                ", "tmp", "=", "self", ".", "Xtarget", "[", ":", ",", "i", "]", "\n", "mean", "=", "np", ".", "mean", "(", "tmp", ")", "\n", "std", "=", "np", ".", "std", "(", "tmp", ")", "\n", "res", "[", ":", ",", "i", "]", "=", "(", "tmp", "-", "mean", ")", "/", "std", "\n", "", "self", ".", "Xtarget", "=", "res", "\n", "\n", "", "elif", "type", "==", "'N3'", ":", "\n", "            ", "Smean", "=", "[", "]", "\n", "Sstd", "=", "[", "]", "\n", "# normalization for source data", "\n", "res", "=", "np", ".", "zeros", "(", "(", "ss", "[", "0", "]", ",", "ss", "[", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "ss", "[", "1", "]", ")", ":", "\n", "                ", "tmp", "=", "self", ".", "Xsource", "[", ":", ",", "i", "]", "\n", "mean", "=", "np", ".", "mean", "(", "tmp", ")", "\n", "std", "=", "np", ".", "std", "(", "tmp", ")", "\n", "Smean", ".", "append", "(", "mean", ")", "\n", "Sstd", ".", "append", "(", "std", ")", "\n", "res", "[", ":", ",", "i", "]", "=", "(", "tmp", "-", "mean", ")", "/", "std", "\n", "", "self", ".", "Xsource", "=", "res", "\n", "\n", "# normalization for target data", "\n", "res", "=", "np", ".", "zeros", "(", "(", "tt", "[", "0", "]", ",", "tt", "[", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "tt", "[", "1", "]", ")", ":", "\n", "                ", "tmp", "=", "self", ".", "Xtarget", "[", ":", ",", "i", "]", "\n", "mean", "=", "Smean", "[", "i", "]", "\n", "std", "=", "Sstd", "\n", "res", "[", ":", ",", "i", "]", "=", "(", "tmp", "-", "mean", ")", "/", "std", "\n", "", "self", ".", "Xtarget", "=", "res", "\n", "\n", "", "elif", "type", "==", "'N4'", ":", "\n", "            ", "Smean", "=", "[", "]", "\n", "Sstd", "=", "[", "]", "\n", "\n", "# normalization for target data", "\n", "res", "=", "np", ".", "zeros", "(", "(", "tt", "[", "0", "]", ",", "tt", "[", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "tt", "[", "1", "]", ")", ":", "\n", "                ", "tmp", "=", "self", ".", "Xtarget", "[", ":", ",", "i", "]", "\n", "mean", "=", "np", ".", "mean", "(", "tmp", ")", "\n", "std", "=", "np", ".", "std", "(", "tmp", ")", "\n", "Smean", ".", "append", "(", "mean", ")", "\n", "Sstd", ".", "append", "(", "std", ")", "\n", "res", "[", ":", ",", "i", "]", "=", "(", "tmp", "-", "mean", ")", "/", "std", "\n", "", "self", ".", "Xtarget", "=", "res", "\n", "\n", "# normalization for source data", "\n", "res", "=", "np", ".", "zeros", "(", "(", "ss", "[", "0", "]", ",", "ss", "[", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "ss", "[", "1", "]", ")", ":", "\n", "                ", "tmp", "=", "self", ".", "Xsource", "[", ":", ",", "i", "]", "\n", "mean", "=", "Smean", "[", "i", "]", "\n", "std", "=", "Sstd", "\n", "res", "[", ":", ",", "i", "]", "=", "(", "tmp", "-", "mean", ")", "/", "std", "\n", "", "self", ".", "Xsource", "=", "res", "\n", "\n", "", "elif", "type", "==", "'N0'", ":", "\n", "            ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.TCA._computDCV": [[153, 184], ["range", "SDCV.append", "SDCV.append", "SDCV.append", "SDCV.append", "SDCV.append", "SDCV.append", "range", "TDCV.append", "TDCV.append", "TDCV.append", "TDCV.append", "TDCV.append", "TDCV.append", "range", "numpy.mean", "numpy.median", "numpy.min", "numpy.max", "numpy.std", "range", "numpy.mean", "numpy.median", "numpy.min", "numpy.max", "numpy.std", "numpy.asarray", "numpy.asarray", "Sdist.append", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "Tdist.append", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "scipy.euclidean", "scipy.euclidean", "scipy.euclidean", "scipy.euclidean"], "methods", ["None"], ["", "", "def", "_computDCV", "(", "self", ")", ":", "\n", "        ", "ss", "=", "self", ".", "Xsource", ".", "shape", "\n", "tt", "=", "self", ".", "Xtarget", ".", "shape", "\n", "Sdist", "=", "[", "]", "\n", "Tdist", "=", "[", "]", "\n", "SDCV", "=", "[", "]", "\n", "TDCV", "=", "[", "]", "\n", "\n", "# compute DCV (dataset characteristic vector) of source dataset", "\n", "for", "i", "in", "range", "(", "ss", "[", "0", "]", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "ss", "[", "0", "]", ")", ":", "\n", "                ", "Sdist", ".", "append", "(", "dist", ".", "euclidean", "(", "self", ".", "Xsource", "[", "i", "]", ",", "self", ".", "Xsource", "[", "j", "]", ")", ")", "\n", "", "", "SDCV", ".", "append", "(", "np", ".", "mean", "(", "np", ".", "asarray", "(", "Sdist", ")", ")", ")", "\n", "SDCV", ".", "append", "(", "(", "np", ".", "median", "(", "np", ".", "asarray", "(", "Sdist", ")", ")", ")", ")", "\n", "SDCV", ".", "append", "(", "np", ".", "min", "(", "np", ".", "asarray", "(", "Sdist", ")", ")", ")", "\n", "SDCV", ".", "append", "(", "np", ".", "max", "(", "np", ".", "asarray", "(", "Sdist", ")", ")", ")", "\n", "SDCV", ".", "append", "(", "np", ".", "std", "(", "np", ".", "asarray", "(", "Sdist", ")", ")", ")", "\n", "SDCV", ".", "append", "(", "ss", "[", "0", "]", ")", "\n", "\n", "# compute DCV (dataset characteristic vector) of target dataset", "\n", "for", "i", "in", "range", "(", "tt", "[", "0", "]", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "tt", "[", "0", "]", ")", ":", "\n", "                ", "Tdist", ".", "append", "(", "dist", ".", "euclidean", "(", "self", ".", "Xtarget", "[", "i", "]", ",", "self", ".", "Xtarget", "[", "j", "]", ")", ")", "\n", "", "", "TDCV", ".", "append", "(", "np", ".", "mean", "(", "np", ".", "asarray", "(", "Tdist", ")", ")", ")", "\n", "TDCV", ".", "append", "(", "(", "np", ".", "median", "(", "np", ".", "asarray", "(", "Tdist", ")", ")", ")", ")", "\n", "TDCV", ".", "append", "(", "np", ".", "min", "(", "np", ".", "asarray", "(", "Tdist", ")", ")", ")", "\n", "TDCV", ".", "append", "(", "np", ".", "max", "(", "np", ".", "asarray", "(", "Tdist", ")", ")", ")", "\n", "TDCV", ".", "append", "(", "np", ".", "std", "(", "np", ".", "asarray", "(", "Tdist", ")", ")", ")", "\n", "TDCV", ".", "append", "(", "ss", "[", "0", "]", ")", "\n", "\n", "return", "np", ".", "asarray", "(", "SDCV", ")", ",", "np", ".", "asarray", "(", "TDCV", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.TCA._chooseNormalization": [[185, 221], ["domainAdaptation.TCA._computDCV", "range", "domainAdaptation.TCA._normalization", "nominal.append", "domainAdaptation.TCA._normalization", "nominal.append", "domainAdaptation.TCA._normalization", "nominal.append", "domainAdaptation.TCA._normalization", "domainAdaptation.TCA._normalization", "nominal.append", "nominal.append", "nominal.append", "nominal.append"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.TCA._computDCV", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.TCA._normalization", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.TCA._normalization", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.TCA._normalization", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.TCA._normalization", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.TCA._normalization"], ["", "def", "_chooseNormalization", "(", "self", ")", ":", "\n", "        ", "SDCV", ",", "TDCV", "=", "self", ".", "_computDCV", "(", ")", "\n", "\n", "nominal", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "6", ")", ":", "\n", "            ", "if", "SDCV", "[", "i", "]", "*", "1.6", "<", "TDCV", "[", "i", "]", ":", "\n", "                ", "nominal", ".", "append", "(", "'much-more'", ")", "\n", "", "elif", "TDCV", "[", "i", "]", "<", "SDCV", "[", "i", "]", "*", "0.4", ":", "\n", "                ", "nominal", ".", "append", "(", "'much-less'", ")", "\n", "", "elif", "(", "SDCV", "[", "i", "]", "*", "1.3", "<", "TDCV", "[", "i", "]", ")", "and", "(", "TDCV", "[", "i", "]", "<=", "SDCV", "[", "i", "]", "*", "1.6", ")", ":", "\n", "                ", "nominal", ".", "append", "(", "'more'", ")", "\n", "", "elif", "(", "SDCV", "[", "i", "]", "*", "1.1", "<", "TDCV", "[", "i", "]", ")", "and", "(", "TDCV", "[", "i", "]", "<=", "SDCV", "[", "i", "]", "*", "1.3", ")", ":", "\n", "                ", "nominal", ".", "append", "(", "'slight-more'", ")", "\n", "", "elif", "(", "SDCV", "[", "i", "]", "*", "0.9", "<=", "TDCV", "[", "i", "]", ")", "and", "(", "TDCV", "[", "i", "]", "<=", "SDCV", "[", "i", "]", "*", "1.1", ")", ":", "\n", "                ", "nominal", ".", "append", "(", "'same'", ")", "\n", "", "elif", "(", "SDCV", "[", "i", "]", "*", "0.7", "<=", "TDCV", "[", "i", "]", ")", "and", "(", "TDCV", "[", "i", "]", "<", "SDCV", "[", "i", "]", "*", "0.9", ")", ":", "\n", "                ", "nominal", ".", "append", "(", "'slight-less'", ")", "\n", "", "elif", "(", "SDCV", "[", "i", "]", "*", "0.4", "<=", "TDCV", "[", "i", "]", ")", "and", "(", "TDCV", "[", "i", "]", "<", "SDCV", "[", "i", "]", "*", "0.7", ")", ":", "\n", "                ", "nominal", ".", "append", "(", "'less'", ")", "\n", "\n", "", "", "if", "(", "nominal", "[", "5", "]", "==", "nominal", "[", "2", "]", "==", "nominal", "[", "3", "]", "==", "'much-less'", ")", "or", "(", "\n", "nominal", "[", "5", "]", "==", "nominal", "[", "2", "]", "==", "nominal", "[", "3", "]", "==", "'much-more'", ")", ":", "\n", "            ", "self", ".", "_normalization", "(", "'N1'", ")", "\n", "\n", "", "elif", "(", "(", "nominal", "[", "4", "]", "==", "'much-more'", ")", "and", "(", "'less'", "in", "nominal", "[", "5", "]", ")", ")", "or", "(", "\n", "(", "nominal", "[", "4", "]", "==", "'much-less'", ")", "and", "(", "'more'", "in", "nominal", "[", "5", "]", ")", ")", ":", "\n", "            ", "self", ".", "_normalization", "(", "'N3'", ")", "\n", "\n", "", "elif", "(", "nominal", "[", "4", "]", "==", "nominal", "[", "5", "]", "==", "'much-more'", ")", "or", "(", "nominal", "[", "4", "]", "==", "nominal", "[", "5", "]", "==", "'much-less'", ")", ":", "\n", "            ", "self", ".", "_normalization", "(", "'N4'", ")", "\n", "\n", "", "elif", "nominal", "[", "0", "]", "==", "nominal", "[", "4", "]", "==", "'same'", ":", "\n", "            ", "self", ".", "_normalization", "(", "'N0'", ")", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "_normalization", "(", "'N2'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.TCA.run": [[222, 253], ["domainAdaptation.TCA._chooseNormalization", "numpy.hstack", "numpy.linalg.norm", "numpy.vstack", "domainAdaptation.kernel", "scipy.linalg.eig", "scipy.linalg.eig", "scipy.linalg.eig", "scipy.linalg.eig", "numpy.argsort", "numpy.dot", "numpy.linalg.norm", "len", "len", "numpy.linalg.norm", "numpy.eye", "numpy.linalg.multi_dot", "numpy.ones", "numpy.linalg.multi_dot", "numpy.ones", "numpy.ones", "numpy.eye"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.TCA._chooseNormalization", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.kernel"], ["", "", "def", "run", "(", "self", ",", "Xs", ",", "Ys", ",", "Xt", ",", "Yt", ")", ":", "\n", "        ", "'''\n        Transform Xs and Xt\n        :param Xs: ns * n_feature, source feature\n        :param Xt: nt * n_feature, target feature\n        :return: Xs_new and Xt_new after TCA\n        '''", "\n", "self", ".", "Xsource", "=", "Xs", "\n", "self", ".", "Xtarget", "=", "Xt", "\n", "self", ".", "_chooseNormalization", "(", ")", "\n", "Xs", "=", "self", ".", "Xsource", "\n", "Xt", "=", "self", ".", "Xtarget", "\n", "\n", "X", "=", "np", ".", "hstack", "(", "(", "Xs", ".", "T", ",", "Xt", ".", "T", ")", ")", "\n", "X", "/=", "np", ".", "linalg", ".", "norm", "(", "X", ",", "axis", "=", "0", ")", "\n", "m", ",", "n", "=", "X", ".", "shape", "\n", "ns", ",", "nt", "=", "len", "(", "Xs", ")", ",", "len", "(", "Xt", ")", "\n", "e", "=", "np", ".", "vstack", "(", "(", "1", "/", "ns", "*", "np", ".", "ones", "(", "(", "ns", ",", "1", ")", ")", ",", "-", "1", "/", "nt", "*", "np", ".", "ones", "(", "(", "nt", ",", "1", ")", ")", ")", ")", "\n", "M", "=", "e", "*", "e", ".", "T", "\n", "M", "=", "M", "/", "np", ".", "linalg", ".", "norm", "(", "M", ",", "'fro'", ")", "\n", "H", "=", "np", ".", "eye", "(", "n", ")", "-", "1", "/", "n", "*", "np", ".", "ones", "(", "(", "n", ",", "n", ")", ")", "\n", "K", "=", "kernel", "(", "self", ".", "kernel_type", ",", "X", ",", "None", ",", "gamma", "=", "self", ".", "gamma", ")", "\n", "n_eye", "=", "m", "if", "self", ".", "kernel_type", "==", "'primal'", "else", "n", "\n", "a", ",", "b", "=", "np", ".", "linalg", ".", "multi_dot", "(", "[", "K", ",", "M", ",", "K", ".", "T", "]", ")", "+", "self", ".", "lamb", "*", "np", ".", "eye", "(", "n_eye", ")", ",", "np", ".", "linalg", ".", "multi_dot", "(", "[", "K", ",", "H", ",", "K", ".", "T", "]", ")", "\n", "w", ",", "V", "=", "scipy", ".", "linalg", ".", "eig", "(", "a", ",", "b", ")", "\n", "ind", "=", "np", ".", "argsort", "(", "w", ")", "\n", "A", "=", "V", "[", ":", ",", "ind", "[", ":", "self", ".", "dim", "]", "]", "\n", "Z", "=", "np", ".", "dot", "(", "A", ".", "T", ",", "K", ")", "\n", "Z", "/=", "np", ".", "linalg", ".", "norm", "(", "Z", ",", "axis", "=", "0", ")", "\n", "Xs_new", ",", "Xt_new", "=", "Z", "[", ":", ",", ":", "ns", "]", ".", "T", ",", "Z", "[", ":", ",", "ns", ":", "]", ".", "T", "\n", "return", "Xs_new", ",", "Ys", ",", "Xt_new", ",", "Yt", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DBSCANfilter.__init__": [[259, 261], ["sklearn.cluster.DBSCAN"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "eps", "=", "1.0", ",", "min_samples", "=", "10", ")", ":", "\n", "        ", "self", ".", "dbscan", "=", "DBSCAN", "(", "eps", "=", "eps", ",", "min_samples", "=", "min_samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DBSCANfilter.run": [[262, 297], ["numpy.append", "numpy.concatenate", "numpy.concatenate", "domainAdaptation.DBSCANfilter.dbscan.fit", "range", "range", "numpy.zeros", "range", "range", "numpy.delete", "numpy.delete", "Ytarget.reshape", "len", "len", "cluster.append", "numpy.delete", "set", "cluster[].append", "noise.append", "noise.append"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit"], ["", "def", "run", "(", "self", ",", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", ")", ":", "\n", "        ", "Tdata", "=", "np", ".", "append", "(", "Xtarget", ",", "Ytarget", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "axis", "=", "1", ")", "\n", "Xdata", "=", "np", ".", "concatenate", "(", "(", "Xsource", ",", "np", ".", "delete", "(", "Tdata", ",", "-", "1", ",", "axis", "=", "1", ")", ")", ",", "axis", "=", "0", ")", "\n", "Ldata", "=", "np", ".", "concatenate", "(", "(", "Ysource", ",", "Tdata", "[", ":", ",", "-", "1", "]", ")", ",", "axis", "=", "0", ")", "\n", "\n", "self", ".", "dbscan", ".", "fit", "(", "Xdata", ")", "\n", "labels", "=", "self", ".", "dbscan", ".", "labels_", "\n", "n_clusters_", "=", "len", "(", "set", "(", "labels", ")", ")", "-", "(", "1", "if", "-", "1", "in", "labels", "else", "0", ")", "\n", "\n", "cluster", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "labels", ")", ")", ":", "\n", "            ", "cluster", ".", "append", "(", "[", "]", ")", "\n", "", "noise", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "Xdata", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "labels", "[", "i", "]", "!=", "-", "1", ":", "\n", "                ", "cluster", "[", "labels", "[", "i", "]", "]", ".", "append", "(", "i", ")", "\n", "", "else", ":", "\n", "                ", "noise", ".", "append", "(", "i", ")", "\n", "\n", "", "", "flag", "=", "np", ".", "zeros", "(", "n_clusters_", ")", "\n", "for", "i", "in", "range", "(", "n_clusters_", ")", ":", "\n", "            ", "for", "item", "in", "cluster", "[", "i", "]", ":", "\n", "                ", "if", "item", ">=", "Xsource", ".", "shape", "[", "0", "]", "and", "item", "<", "Xdata", ".", "shape", "[", "0", "]", ":", "\n", "                    ", "flag", "[", "i", "]", "=", "1", "\n", "break", "\n", "\n", "", "", "", "for", "i", "in", "range", "(", "n_clusters_", ")", ":", "\n", "            ", "if", "flag", "[", "i", "]", "==", "0", ":", "\n", "                ", "for", "item", "in", "cluster", "[", "i", "]", ":", "\n", "                    ", "noise", ".", "append", "(", "item", ")", "\n", "\n", "", "", "", "Xsource", "=", "np", ".", "delete", "(", "Xsource", ",", "noise", ",", "axis", "=", "0", ")", "\n", "Ysource", "=", "np", ".", "delete", "(", "Ysource", ",", "noise", ",", "axis", "=", "0", ")", "\n", "\n", "return", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.Bruakfilter.__init__": [[300, 302], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n_neighbors", "=", "10", ")", ":", "\n", "        ", "self", ".", "n_neighbors", "=", "n_neighbors", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.Bruakfilter.run": [[303, 326], ["numpy.log", "numpy.log", "sklearn.neighbors.NearestNeighbors", "sklearn.neighbors.NearestNeighbors.fit", "numpy.asanyarray", "numpy.asanyarray", "sklearn.neighbors.NearestNeighbors.kneighbors", "item.reshape", "list", "data.append", "ysel.append", "list"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit"], ["", "def", "run", "(", "self", ",", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", ")", ":", "\n", "        ", "Xsource", "=", "np", ".", "log", "(", "Xsource", "+", "1", ")", "\n", "Xtarget", "=", "np", ".", "log", "(", "Xtarget", "+", "1", ")", "\n", "\n", "if", "self", ".", "n_neighbors", ">", "Xsource", ".", "shape", "[", "0", "]", ":", "\n", "            ", "return", "0", ",", "0", ",", "0", ",", "0", "\n", "\n", "", "knn", "=", "NearestNeighbors", "(", ")", "\n", "knn", ".", "fit", "(", "Xsource", ")", "\n", "data", "=", "[", "]", "\n", "ysel", "=", "[", "]", "\n", "\n", "for", "item", "in", "Xtarget", ":", "\n", "            ", "tmp", "=", "knn", ".", "kneighbors", "(", "item", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "self", ".", "n_neighbors", ",", "return_distance", "=", "False", ")", "\n", "tmp", "=", "tmp", "[", "0", "]", "\n", "for", "i", "in", "tmp", ":", "\n", "                ", "if", "list", "(", "Xsource", "[", "i", "]", ")", "not", "in", "data", ":", "\n", "                    ", "data", ".", "append", "(", "list", "(", "Xsource", "[", "i", "]", ")", ")", "\n", "ysel", ".", "append", "(", "Ysource", "[", "i", "]", ")", "\n", "", "", "", "Xsource", "=", "np", ".", "asanyarray", "(", "data", ")", "\n", "Ysource", "=", "np", ".", "asanyarray", "(", "ysel", ")", "\n", "\n", "return", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.Peterfilter.__init__": [[329, 331], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "eachCluster", "=", "10", ")", ":", "\n", "        ", "self", ".", "eachCluster", "=", "eachCluster", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.Peterfilter.run": [[332, 398], ["numpy.concatenate", "int", "sklearn.cluster.KMeans", "sklearn.cluster.KMeans.fit", "dict", "range", "range", "range", "range", "numpy.zeros", "numpy.zeros", "range", "len", "cluster[].append", "range", "len", "numpy.zeros", "sklearn.neighbors.NearestNeighbors", "sklearn.neighbors.NearestNeighbors.fit", "range", "len", "len", "len", "numpy.asarray", "sklearn.neighbors.NearestNeighbors.kneighbors", "len", "numpy.argmax", "len", "chosenCluster.append", "test.append", "indexTest.append", "train.append", "indexTrain.append", "len", "len", "numpy.asarray().reshape", "out.append", "list", "list", "numpy.asarray", "train.index"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit"], ["", "def", "run", "(", "self", ",", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", ")", ":", "\n", "        ", "self", ".", "Xsource", "=", "Xsource", "\n", "self", ".", "Xtarget", "=", "Xtarget", "\n", "self", ".", "Ysource", "=", "Ysource", "\n", "self", ".", "Ytarget", "=", "Ytarget", "\n", "data", "=", "np", ".", "concatenate", "(", "(", "self", ".", "Xsource", ",", "self", ".", "Xtarget", ")", ",", "axis", "=", "0", ")", "\n", "if", "self", ".", "eachCluster", "==", "0", ":", "\n", "            ", "return", "0", ",", "0", ",", "0", ",", "0", "\n", "", "n_cluster", "=", "int", "(", "self", ".", "Xsource", ".", "shape", "[", "0", "]", "/", "self", ".", "eachCluster", ")", "\n", "if", "n_cluster", "==", "0", ":", "\n", "            ", "return", "0", ",", "0", ",", "0", ",", "0", "\n", "", "kmeans", "=", "KMeans", "(", "n_clusters", "=", "n_cluster", ")", "\n", "kmeans", ".", "fit", "(", "data", ")", "\n", "labels", "=", "kmeans", ".", "labels_", "\n", "\n", "# remove the clusters where have no test instance", "\n", "cluster", "=", "dict", "(", ")", "\n", "for", "i", "in", "range", "(", "n_cluster", ")", ":", "\n", "            ", "cluster", "[", "i", "]", "=", "[", "]", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "labels", ")", ")", ":", "\n", "            ", "cluster", "[", "labels", "[", "i", "]", "]", ".", "append", "(", "i", ")", "\n", "\n", "", "chosenCluster", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "Xsource", ".", "shape", "[", "0", "]", ",", "data", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "n_cluster", ")", ":", "\n", "                ", "if", "i", "in", "cluster", "[", "j", "]", "and", "(", "j", "not", "in", "chosenCluster", ")", ":", "\n", "                    ", "chosenCluster", ".", "append", "(", "j", ")", "\n", "\n", "# choose train instance in each cluster", "\n", "", "", "", "out", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "chosenCluster", ")", ")", ":", "\n", "            ", "test", "=", "[", "]", "\n", "indexTest", "=", "[", "]", "\n", "train", "=", "[", "]", "\n", "indexTrain", "=", "[", "]", "\n", "for", "item", "in", "cluster", "[", "chosenCluster", "[", "i", "]", "]", ":", "\n", "                ", "if", "item", ">=", "self", ".", "Xsource", ".", "shape", "[", "0", "]", "and", "item", "<", "data", ".", "shape", "[", "0", "]", ":", "\n", "                    ", "test", ".", "append", "(", "list", "(", "data", "[", "item", "]", ")", ")", "\n", "indexTest", ".", "append", "(", "item", ")", "\n", "", "else", ":", "\n", "                    ", "train", ".", "append", "(", "list", "(", "self", ".", "Xsource", "[", "item", "]", ")", ")", "\n", "indexTrain", ".", "append", "(", "item", ")", "\n", "\n", "", "", "if", "len", "(", "train", ")", "==", "0", ":", "\n", "                ", "break", "\n", "", "Testfans", "=", "np", ".", "zeros", "(", "(", "len", "(", "indexTest", ")", ",", "len", "(", "indexTrain", ")", ")", ")", "\n", "\n", "neigh", "=", "NearestNeighbors", "(", "n_neighbors", "=", "1", ")", "\n", "neigh", ".", "fit", "(", "np", ".", "asarray", "(", "test", ")", ")", "\n", "for", "item", "in", "train", ":", "\n", "                ", "index", "=", "neigh", ".", "kneighbors", "(", "np", ".", "asarray", "(", "item", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "return_distance", "=", "False", ")", "\n", "Testfans", "[", "index", "[", "0", "]", "[", "0", "]", ",", "train", ".", "index", "(", "item", ")", "]", "+=", "1", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "test", ")", ")", ":", "\n", "                ", "index", "=", "np", ".", "argmax", "(", "Testfans", "[", "i", "]", ")", "\n", "if", "indexTrain", "[", "index", "]", "not", "in", "out", ":", "\n", "                    ", "out", ".", "append", "(", "indexTrain", "[", "index", "]", ")", "\n", "\n", "", "", "", "tmp", "=", "np", ".", "zeros", "(", "(", "len", "(", "out", ")", ",", "self", ".", "Xsource", ".", "shape", "[", "1", "]", ")", ")", "\n", "tmpl", "=", "np", ".", "zeros", "(", "len", "(", "out", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "out", ")", ")", ":", "\n", "            ", "tmp", "[", "i", "]", "=", "self", ".", "Xsource", "[", "out", "[", "i", "]", "]", "\n", "tmpl", "[", "i", "]", "=", "self", ".", "Ysource", "[", "out", "[", "i", "]", "]", "\n", "\n", "", "return", "tmp", ",", "tmpl", ",", "Xtarget", ",", "Ytarget", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DataSelection.__init__": [[404, 407], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "topN", "=", "5", ",", "FSS", "=", "0.2", ")", ":", "\n", "        ", "self", ".", "topN", "=", "topN", "\n", "self", ".", "FSS", "=", "FSS", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DataSelection._sample": [[408, 422], ["min", "numpy.ones", "random.sample", "random.sample", "numpy.delete", "numpy.delete", "numpy.concatenate", "numpy.concatenate", "numpy.ones", "range", "range"], "methods", ["None"], ["", "def", "_sample", "(", "self", ",", "Xsource", ",", "Xtarget", ")", ":", "\n", "        ", "K", "=", "min", "(", "500", ",", "Xsource", ".", "shape", "[", "0", "]", ",", "Xtarget", ".", "shape", "[", "0", "]", ")", "\n", "Ltrain", "=", "np", ".", "ones", "(", "K", ")", "\n", "Ltest", "=", "np", ".", "ones", "(", "K", ")", "*", "-", "1", "\n", "\n", "Train", "=", "random", ".", "sample", "(", "range", "(", "Xsource", ".", "shape", "[", "0", "]", ")", ",", "Xsource", ".", "shape", "[", "0", "]", "-", "K", ")", "\n", "Test", "=", "random", ".", "sample", "(", "range", "(", "Xtarget", ".", "shape", "[", "0", "]", ")", ",", "Xtarget", ".", "shape", "[", "0", "]", "-", "K", ")", "\n", "Train", "=", "np", ".", "delete", "(", "Xsource", ",", "Train", ",", "axis", "=", "0", ")", "\n", "Test", "=", "np", ".", "delete", "(", "Xtarget", ",", "Test", ",", "axis", "=", "0", ")", "\n", "\n", "data", "=", "np", ".", "concatenate", "(", "(", "Train", ",", "Test", ")", ",", "axis", "=", "0", ")", "\n", "label", "=", "np", ".", "concatenate", "(", "(", "Ltrain", ",", "Ltest", ")", ",", "axis", "=", "0", ")", "\n", "\n", "return", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DataSelection._calDistance": [[423, 430], ["numpy.zeros", "range", "domainAdaptation.DataSelection._sample", "LogisticRegression", "numpy.mean", "abs", "sklearn.model_selection.cross_val_score", "numpy.mean"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DataSelection._sample"], ["", "def", "_calDistance", "(", "self", ",", "Xsource", ",", "Xtarget", ")", ":", "\n", "        ", "acc", "=", "np", ".", "zeros", "(", "10", ")", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "            ", "x", ",", "y", "=", "self", ".", "_sample", "(", "Xsource", ",", "Xtarget", ")", "\n", "lr", "=", "LogisticRegression", "(", ")", "\n", "acc", "[", "i", "]", "=", "np", ".", "mean", "(", "cross_val_score", "(", "lr", ",", "x", ",", "y", ",", "scoring", "=", "'accuracy'", ",", "cv", "=", "5", ")", ")", "\n", "", "return", "2", "*", "abs", "(", "(", "np", ".", "mean", "(", "acc", ")", "-", "0.5", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DataSelection.run": [[431, 479], ["min", "dict", "range", "sorted", "range", "domainAdaptation.DataSelection._sample", "LogisticRegression", "LogisticRegression.fit", "dict", "range", "sorted", "range", "numpy.delete", "numpy.delete", "len", "len", "sorted.items", "numpy.concatenate", "numpy.concatenate", "sorted.items", "int", "dump.append", "domainAdaptation.DataSelection._calDistance", "domainAdaptation.DataSelection._calDistance", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DataSelection._sample", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DataSelection._calDistance", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DataSelection._calDistance"], ["", "def", "run", "(", "self", ",", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", ",", "loc", ")", ":", "\n", "        ", "self", ".", "topN", "=", "min", "(", "self", ".", "topN", ",", "len", "(", "loc", ")", ")", "\n", "dist", "=", "dict", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "loc", ")", ")", ":", "\n", "            ", "if", "i", "<", "len", "(", "loc", ")", "-", "1", ":", "\n", "                ", "train", "=", "Xsource", "[", "loc", "[", "i", "]", ":", "loc", "[", "i", "+", "1", "]", "]", "\n", "dist", "[", "i", "]", "=", "self", ".", "_calDistance", "(", "train", ",", "Xtarget", ")", "\n", "", "else", ":", "\n", "                ", "train", "=", "Xsource", "[", "loc", "[", "i", "]", ":", "]", "\n", "dist", "[", "i", "]", "=", "self", ".", "_calDistance", "(", "train", ",", "Xtarget", ")", "\n", "\n", "", "", "dist", "=", "sorted", "(", "dist", ".", "items", "(", ")", ",", "key", "=", "lambda", "d", ":", "d", "[", "1", "]", ")", "\n", "i", "=", "dist", "[", "0", "]", "[", "0", "]", "\n", "if", "i", "!=", "len", "(", "loc", ")", "-", "1", ":", "\n", "            ", "x", "=", "Xsource", "[", "loc", "[", "i", "]", ":", "loc", "[", "i", "+", "1", "]", "]", "\n", "y", "=", "Ysource", "[", "loc", "[", "i", "]", ":", "loc", "[", "i", "+", "1", "]", "]", "\n", "", "else", ":", "\n", "            ", "x", "=", "Xsource", "[", "loc", "[", "i", "]", ":", "]", "\n", "y", "=", "Ysource", "[", "loc", "[", "i", "]", ":", "]", "\n", "\n", "", "for", "i", "in", "range", "(", "1", ",", "self", ".", "topN", ")", ":", "\n", "            ", "index", "=", "dist", "[", "i", "]", "[", "0", "]", "\n", "if", "index", "<", "len", "(", "loc", ")", "-", "1", ":", "\n", "                ", "tmp", "=", "Xsource", "[", "loc", "[", "index", "]", ":", "loc", "[", "index", "+", "1", "]", "]", "\n", "temp", "=", "Ysource", "[", "loc", "[", "index", "]", ":", "loc", "[", "index", "+", "1", "]", "]", "\n", "", "else", ":", "\n", "                ", "tmp", "=", "Xsource", "[", "loc", "[", "index", "]", ":", "]", "\n", "temp", "=", "Ysource", "[", "loc", "[", "index", "]", ":", "]", "\n", "", "x", "=", "np", ".", "concatenate", "(", "(", "x", ",", "tmp", ")", ",", "axis", "=", "0", ")", "\n", "y", "=", "np", ".", "concatenate", "(", "(", "y", ",", "temp", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "fx", ",", "fy", "=", "self", ".", "_sample", "(", "x", ",", "Xtarget", ")", "\n", "lr", "=", "LogisticRegression", "(", ")", "\n", "lr", ".", "fit", "(", "fx", ",", "fy", ")", "\n", "coef", "=", "dict", "(", ")", "\n", "for", "i", "in", "range", "(", "Xsource", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "coef", "[", "i", "]", "=", "lr", ".", "coef_", "[", "0", "]", "[", "i", "]", "\n", "", "coef", "=", "sorted", "(", "coef", ".", "items", "(", ")", ",", "key", "=", "lambda", "d", ":", "d", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "\n", "dump", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "int", "(", "Xsource", ".", "shape", "[", "1", "]", "*", "self", ".", "FSS", ")", ")", ":", "\n", "            ", "dump", ".", "append", "(", "coef", "[", "i", "]", "[", "0", "]", ")", "\n", "\n", "", "x", "=", "np", ".", "delete", "(", "x", ",", "dump", ",", "axis", "=", "1", ")", "\n", "Xtarget", "=", "np", ".", "delete", "(", "Xtarget", ",", "dump", ",", "axis", "=", "1", ")", "\n", "\n", "return", "x", ",", "y", ",", "Xtarget", ",", "Ytarget", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DSBF.__init__": [[482, 485], ["int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "topK", "=", "1", ",", "neighbors", "=", "10", ")", ":", "\n", "        ", "self", ".", "topK", "=", "int", "(", "topK", ")", "\n", "self", ".", "neighbors", "=", "neighbors", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DSBF.featureReduction": [[486, 507], ["scipy.spatial.distance.pdist", "scipy.spatial.distance.pdist", "scipy.spatial.distance.squareform", "scipy.spatial.distance.squareform", "numpy.zeros.copy", "numpy.zeros", "range", "numpy.sum", "numpy.where", "numpy.delete", "numpy.delete", "numpy.argsort", "range", "len"], "methods", ["None"], ["", "def", "featureReduction", "(", "self", ",", "source", ",", "target", ")", ":", "\n", "        ", "d", "=", "pdist", "(", "target", ".", "T", ",", "metric", "=", "'euclidean'", ")", "\n", "D", "=", "squareform", "(", "d", ")", "\n", "dist", "=", "D", ".", "copy", "(", ")", "\n", "D", "=", "np", ".", "zeros", "(", "D", ".", "shape", ")", "\n", "\n", "for", "i", "in", "range", "(", "target", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "index", "=", "np", ".", "argsort", "(", "dist", "[", "i", "]", ")", "\n", "count", "=", "0", "\n", "for", "j", "in", "range", "(", "len", "(", "index", ")", ")", ":", "\n", "                ", "if", "count", "<", "self", ".", "topK", "and", "index", "[", "j", "]", "!=", "i", ":", "\n", "                    ", "D", "[", "i", "]", "[", "index", "[", "j", "]", "]", "=", "1", "\n", "count", "+=", "1", "\n", "\n", "", "", "", "V", "=", "np", ".", "sum", "(", "D", ",", "axis", "=", "0", ")", "\n", "V", "[", "V", "<", "1e-6", "]", "=", "0", "\n", "index", "=", "np", ".", "where", "(", "V", "!=", "0", ")", "\n", "target", "=", "np", ".", "delete", "(", "target", ",", "index", ",", "axis", "=", "1", ")", "\n", "source", "=", "np", ".", "delete", "(", "source", ",", "index", ",", "axis", "=", "1", ")", "\n", "\n", "return", "source", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DSBF.outlierRemove": [[508, 526], ["scipy.spatial.distance.pdist", "scipy.spatial.distance.pdist", "scipy.spatial.distance.squareform", "scipy.spatial.distance.squareform", "numpy.zeros.copy", "numpy.zeros", "range", "numpy.sum", "numpy.where", "numpy.delete", "numpy.delete", "numpy.argsort", "range", "len"], "methods", ["None"], ["", "def", "outlierRemove", "(", "self", ",", "target", ",", "ys", ")", ":", "\n", "        ", "d", "=", "pdist", "(", "target", ",", "metric", "=", "'euclidean'", ")", "\n", "D", "=", "squareform", "(", "d", ")", "\n", "dist", "=", "D", ".", "copy", "(", ")", "\n", "D", "=", "np", ".", "zeros", "(", "D", ".", "shape", ")", "\n", "for", "i", "in", "range", "(", "target", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "index", "=", "np", ".", "argsort", "(", "dist", "[", "i", "]", ")", "\n", "count", "=", "0", "\n", "for", "j", "in", "range", "(", "len", "(", "index", ")", ")", ":", "\n", "                ", "if", "count", "<", "self", ".", "topK", "and", "index", "[", "j", "]", "!=", "i", ":", "\n", "                    ", "D", "[", "i", "]", "[", "index", "[", "j", "]", "]", "=", "1", "\n", "count", "+=", "1", "\n", "", "", "", "V", "=", "np", ".", "sum", "(", "D", ",", "axis", "=", "0", ")", "\n", "V", "[", "V", "<", "1e-6", "]", "=", "0", "\n", "index", "=", "np", ".", "where", "(", "V", "==", "0", ")", "\n", "target", "=", "np", ".", "delete", "(", "target", ",", "index", ",", "axis", "=", "0", ")", "\n", "ys", "=", "np", ".", "delete", "(", "ys", ",", "index", ",", "axis", "=", "0", ")", "\n", "return", "target", ",", "ys", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DSBF.Bruakfilter": [[527, 550], ["numpy.log", "numpy.log", "sklearn.neighbors.NearestNeighbors", "sklearn.neighbors.NearestNeighbors.fit", "numpy.asanyarray", "numpy.asanyarray", "sklearn.neighbors.NearestNeighbors.kneighbors", "item.reshape", "list", "data.append", "ysel.append", "list"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit"], ["", "def", "Bruakfilter", "(", "self", ",", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", ")", ":", "\n", "        ", "Xsource", "=", "np", ".", "log", "(", "Xsource", "+", "1", ")", "\n", "Xtarget", "=", "np", ".", "log", "(", "Xtarget", "+", "1", ")", "\n", "\n", "if", "self", ".", "neighbors", ">", "Xsource", ".", "shape", "[", "0", "]", ":", "\n", "            ", "return", "0", ",", "0", ",", "0", ",", "0", "\n", "\n", "", "knn", "=", "NearestNeighbors", "(", ")", "\n", "knn", ".", "fit", "(", "Xsource", ")", "\n", "data", "=", "[", "]", "\n", "ysel", "=", "[", "]", "\n", "\n", "for", "item", "in", "Xtarget", ":", "\n", "            ", "tmp", "=", "knn", ".", "kneighbors", "(", "item", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "self", ".", "neighbors", ",", "return_distance", "=", "False", ")", "\n", "tmp", "=", "tmp", "[", "0", "]", "\n", "for", "i", "in", "tmp", ":", "\n", "                ", "if", "list", "(", "Xsource", "[", "i", "]", ")", "not", "in", "data", ":", "\n", "                    ", "data", ".", "append", "(", "list", "(", "Xsource", "[", "i", "]", ")", ")", "\n", "ysel", ".", "append", "(", "Ysource", "[", "i", "]", ")", "\n", "", "", "", "Xsource", "=", "np", ".", "asanyarray", "(", "data", ")", "\n", "Ysource", "=", "np", ".", "asanyarray", "(", "ysel", ")", "\n", "\n", "return", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DSBF.run": [[551, 569], ["domainAdaptation.DSBF.featureReduction", "domainAdaptation.DSBF.outlierRemove", "domainAdaptation.DSBF.outlierRemove", "domainAdaptation.DSBF.Bruakfilter", "domainAdaptation.DSBF.outlierRemove", "len", "len", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DSBF.featureReduction", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DSBF.outlierRemove", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DSBF.outlierRemove", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DSBF.Bruakfilter", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DSBF.outlierRemove"], ["", "def", "run", "(", "self", ",", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", ")", ":", "\n", "        ", "Xsource", ",", "Xtarget", "=", "self", ".", "featureReduction", "(", "Xsource", ",", "Xtarget", ")", "\n", "if", "Xsource", ".", "shape", "[", "1", "]", "==", "0", ":", "\n", "            ", "return", "0", ",", "0", ",", "0", ",", "0", "\n", "", "Xsource", ",", "Ysource", "=", "self", ".", "outlierRemove", "(", "Xsource", ",", "Ysource", ")", "\n", "if", "len", "(", "Xsource", ")", "==", "0", ":", "\n", "            ", "return", "0", ",", "0", ",", "0", ",", "0", "\n", "", "Xtarget", ",", "Ytarget", "=", "self", ".", "outlierRemove", "(", "Xtarget", ",", "Ytarget", ")", "\n", "if", "len", "(", "Xtarget", ")", "==", "0", ":", "\n", "            ", "return", "0", ",", "0", ",", "0", ",", "0", "\n", "", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", "=", "self", ".", "Bruakfilter", "(", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", ")", "\n", "if", "len", "(", "Xsource", ")", "==", "0", "or", "len", "(", "Xtarget", ")", "==", "0", ":", "\n", "            ", "return", "0", ",", "0", ",", "0", ",", "0", "\n", "", "Xsource", ",", "Ysource", "=", "self", ".", "outlierRemove", "(", "Xsource", ",", "Ysource", ")", "\n", "if", "len", "(", "Xsource", ")", "==", "0", "or", "len", "(", "Xtarget", ")", "==", "0", ":", "\n", "            ", "return", "0", ",", "0", ",", "0", ",", "0", "\n", "\n", "", "return", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.Universal.__init__": [[572, 575], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "pvalue", "=", "0.05", ",", "QuantifyType", "=", "'cliff'", ")", ":", "\n", "        ", "self", ".", "p", "=", "pvalue", "\n", "self", ".", "type", "=", "QuantifyType", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.Universal._compareMetricDistribution": [[576, 583], ["scipy.stats.mannwhitneyu", "scipy.stats.mannwhitneyu"], "methods", ["None"], ["", "def", "_compareMetricDistribution", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "s", ",", "p", "=", "mannwhitneyu", "(", "x1", ",", "x2", ")", "\n", "if", "p", "<", "self", ".", "p", ":", "\n", "            ", "sig_diff", "=", "1", "\n", "", "else", ":", "\n", "            ", "sig_diff", "=", "0", "\n", "", "return", "sig_diff", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.Universal._quantifyDifference": [[584, 590], ["Utils.cliffsDelta", "Utils.cohen"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.cliffsDelta.cliffsDelta", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Utils.cliffsDelta.cohen"], ["", "def", "_quantifyDifference", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "if", "self", ".", "type", "==", "'cliff'", ":", "\n", "            ", "d", ",", "res", "=", "cliff", ".", "cliffsDelta", "(", "x1", ",", "x2", ")", "\n", "", "else", ":", "\n", "            ", "res", "=", "cliff", ".", "cohen", "(", "x1", ",", "x2", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.Universal.cluster": [[591, 604], ["numpy.zeros", "range", "range", "domainAdaptation.Universal._compareMetricDistribution", "domainAdaptation.Universal._quantifyDifference"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.Universal._compareMetricDistribution", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.Universal._quantifyDifference"], ["", "def", "cluster", "(", "self", ",", "No_metric", ",", "numGroup", ",", "group", ")", ":", "\n", "        ", "indexOfCluster", "=", "0", "\n", "clusterOfGroup", "=", "np", ".", "zeros", "(", "numGroup", ")", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "numGroup", "-", "1", ")", ":", "\n", "            ", "indexNewCluster", "=", "indexOfCluster", "+", "1", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ",", "numGroup", ")", ":", "\n", "                ", "if", "self", ".", "_compareMetricDistribution", "(", "group", "[", "i", "]", "[", ":", ",", "No_metric", "]", ",", "group", "[", "j", "]", "[", ":", ",", "No_metric", "]", ")", "==", "1", ":", "\n", "                    ", "if", "self", ".", "_quantifyDifference", "(", "group", "[", "i", "]", "[", ":", ",", "No_metric", "]", ",", "group", "[", "j", "]", "[", ":", ",", "No_metric", "]", ")", "==", "'large'", ":", "\n", "                        ", "clusterOfGroup", "[", "j", "]", "=", "indexNewCluster", "\n", "indexOfCluster", "=", "indexNewCluster", "\n", "\n", "", "", "", "", "return", "clusterOfGroup", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.Universal.rankTransform": [[605, 653], ["range", "group.append", "group.copy", "range", "len", "group.append", "domainAdaptation.Universal.cluster", "numpy.unique", "numpy.asarray", "numpy.percentile", "len", "len", "numpy.asarray", "numpy.concatenate", "sorted", "int", "range", "numpy.where", "len", "int"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.Universal.cluster"], ["", "def", "rankTransform", "(", "self", ",", "xsource", ",", "xtarget", ",", "loc", ")", ":", "\n", "        ", "group", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "loc", ")", ")", ":", "\n", "            ", "if", "i", "<", "len", "(", "loc", ")", "-", "1", ":", "\n", "                ", "train", "=", "xsource", "[", "loc", "[", "i", "]", ":", "loc", "[", "i", "+", "1", "]", "]", "\n", "", "else", ":", "\n", "                ", "train", "=", "xsource", "[", "loc", "[", "i", "]", ":", "]", "\n", "", "group", ".", "append", "(", "train", ")", "\n", "", "group", ".", "append", "(", "xtarget", ")", "\n", "resGroup", "=", "group", ".", "copy", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "xsource", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "clusterIndex", "=", "self", ".", "cluster", "(", "i", ",", "len", "(", "loc", ")", "+", "1", ",", "group", ")", "\n", "cluster", "=", "np", ".", "unique", "(", "clusterIndex", ")", "\n", "for", "item", "in", "cluster", ":", "\n", "                ", "tmp", "=", "np", ".", "asarray", "(", "np", ".", "where", "(", "clusterIndex", "==", "item", ")", ")", "[", "0", "]", "\n", "tmp_data", "=", "np", ".", "asarray", "(", "[", "]", ")", "\n", "for", "ncs", "in", "tmp", ":", "\n", "                    ", "tmp_data", "=", "np", ".", "concatenate", "(", "(", "tmp_data", ",", "group", "[", "int", "(", "ncs", ")", "]", "[", ":", ",", "i", "]", ")", ")", "\n", "\n", "", "percentiles", "=", "np", ".", "percentile", "(", "sorted", "(", "tmp_data", ")", ",", "[", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",", "80", ",", "90", "]", ")", "\n", "for", "ncs", "in", "tmp", ":", "\n", "                    ", "ncs", "=", "int", "(", "ncs", ")", "\n", "t", "=", "resGroup", "[", "ncs", "]", "[", ":", ",", "i", "]", "\n", "for", "it", "in", "range", "(", "len", "(", "t", ")", ")", ":", "\n", "                        ", "if", "t", "[", "it", "]", "<=", "percentiles", "[", "0", "]", ":", "\n", "                            ", "resGroup", "[", "ncs", "]", "[", ":", ",", "i", "]", "[", "it", "]", "=", "1", "\n", "", "elif", "t", "[", "it", "]", "<=", "percentiles", "[", "1", "]", ":", "\n", "                            ", "resGroup", "[", "ncs", "]", "[", ":", ",", "i", "]", "[", "it", "]", "=", "2", "\n", "", "elif", "t", "[", "it", "]", "<=", "percentiles", "[", "2", "]", ":", "\n", "                            ", "resGroup", "[", "ncs", "]", "[", ":", ",", "i", "]", "[", "it", "]", "=", "3", "\n", "", "elif", "t", "[", "it", "]", "<=", "percentiles", "[", "3", "]", ":", "\n", "                            ", "resGroup", "[", "ncs", "]", "[", ":", ",", "i", "]", "[", "it", "]", "=", "4", "\n", "", "elif", "t", "[", "it", "]", "<=", "percentiles", "[", "4", "]", ":", "\n", "                            ", "resGroup", "[", "ncs", "]", "[", ":", ",", "i", "]", "[", "it", "]", "=", "5", "\n", "", "elif", "t", "[", "it", "]", "<=", "percentiles", "[", "5", "]", ":", "\n", "                            ", "resGroup", "[", "ncs", "]", "[", ":", ",", "i", "]", "[", "it", "]", "=", "6", "\n", "", "elif", "t", "[", "it", "]", "<=", "percentiles", "[", "6", "]", ":", "\n", "                            ", "resGroup", "[", "ncs", "]", "[", ":", ",", "i", "]", "[", "it", "]", "=", "7", "\n", "", "elif", "t", "[", "it", "]", "<=", "percentiles", "[", "7", "]", ":", "\n", "                            ", "resGroup", "[", "ncs", "]", "[", ":", ",", "i", "]", "[", "it", "]", "=", "8", "\n", "", "elif", "t", "[", "it", "]", "<=", "percentiles", "[", "8", "]", ":", "\n", "                            ", "resGroup", "[", "ncs", "]", "[", ":", ",", "i", "]", "[", "it", "]", "=", "9", "\n", "", "else", ":", "\n", "                            ", "resGroup", "[", "ncs", "]", "[", ":", ",", "i", "]", "[", "it", "]", "=", "10", "\n", "\n", "\n", "", "", "", "", "", "return", "resGroup", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.Universal.run": [[654, 662], ["domainAdaptation.Universal.rankTransform", "numpy.asarray", "range", "len", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.Universal.rankTransform"], ["", "def", "run", "(", "self", ",", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", ",", "loc", ")", ":", "\n", "        ", "res", "=", "self", ".", "rankTransform", "(", "Xsource", ",", "Xtarget", ",", "loc", ")", "\n", "source", "=", "np", ".", "asarray", "(", "res", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "loc", ")", ")", ":", "\n", "            ", "source", "=", "np", ".", "concatenate", "(", "(", "source", ",", "res", "[", "i", "]", ")", ",", "axis", "=", "0", ")", "\n", "", "target", "=", "res", "[", "-", "1", "]", "\n", "\n", "return", "source", ",", "Ysource", ",", "target", ",", "Ytarget", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.kernel": [[19, 45], ["numpy.dot", "numpy.dot", "numpy.sum", "numpy.exp", "numpy.sum", "numpy.exp", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.ones", "numpy.ones", "numpy.arccos", "numpy.ones", "numpy.ones"], "function", ["None"], ["def", "kernel", "(", "ker", ",", "X", ",", "X2", ",", "gamma", ")", ":", "\n", "    ", "if", "not", "ker", "or", "ker", "==", "'primal'", ":", "\n", "        ", "return", "X", "\n", "", "elif", "ker", "==", "'linear'", ":", "\n", "        ", "if", "not", "X2", ":", "\n", "            ", "K", "=", "np", ".", "dot", "(", "X", ".", "T", ",", "X", ")", "\n", "", "else", ":", "\n", "            ", "K", "=", "np", ".", "dot", "(", "X", ".", "T", ",", "X2", ")", "\n", "", "", "elif", "ker", "==", "'rbf'", ":", "\n", "        ", "n1sq", "=", "np", ".", "sum", "(", "X", "**", "2", ",", "axis", "=", "0", ")", "\n", "n1", "=", "X", ".", "shape", "[", "1", "]", "\n", "if", "not", "X2", ":", "\n", "            ", "D", "=", "(", "np", ".", "ones", "(", "(", "n1", ",", "1", ")", ")", "*", "n1sq", ")", ".", "T", "+", "np", ".", "ones", "(", "(", "n1", ",", "1", ")", ")", "*", "n1sq", "-", "2", "*", "np", ".", "dot", "(", "X", ".", "T", ",", "X", ")", "\n", "", "else", ":", "\n", "            ", "n2sq", "=", "np", ".", "sum", "(", "X2", "**", "2", ",", "axis", "=", "0", ")", "\n", "n2", "=", "X2", ".", "shape", "[", "1", "]", "\n", "D", "=", "(", "np", ".", "ones", "(", "(", "n2", ",", "1", ")", ")", "*", "n1sq", ")", ".", "T", "+", "np", ".", "ones", "(", "(", "n1", ",", "1", ")", ")", "*", "n2sq", "-", "2", "*", "np", ".", "dot", "(", "X", ".", "T", ",", "X", ")", "\n", "", "K", "=", "np", ".", "exp", "(", "-", "gamma", "*", "D", ")", "\n", "", "elif", "ker", "==", "'sam'", ":", "\n", "        ", "if", "not", "X2", ":", "\n", "            ", "D", "=", "np", ".", "dot", "(", "X", ".", "T", ",", "X", ")", "\n", "", "else", ":", "\n", "            ", "D", "=", "np", ".", "dot", "(", "X", ".", "T", ",", "X2", ")", "\n", "", "K", "=", "np", ".", "exp", "(", "-", "gamma", "*", "np", ".", "arccos", "(", "D", ")", "**", "2", ")", "\n", "K", "[", "K", "!=", "K", "]", "=", "0", "\n", "", "return", "K", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.__init__": [[23, 61], ["sklearn.model_selection.train_test_split", "sklearn.ensemble.RandomForestClassifier", "sklearn.svm.SVC", "sklearn.ensemble.AdaBoostClassifier", "sklearn.neural_network.MLPClassifier", "sklearn.neighbors.KNeighborsClassifier", "sklearn.tree.DecisionTreeClassifier", "sklearn.linear_model.RidgeClassifier", "GaussianNB", "MultinomialNB", "BernoulliNB"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "trans_S", ",", "label_S", ",", "trans_A", ",", "label_A", ",", "N", "=", "20", ",", "clf", "=", "'RF'", ",", "RFn_estimators", "=", "10", ",", "criterion", "=", "'gini'", ",", "\n", "max_features", "=", "'auto'", ",", "\n", "SVCkernel", "=", "'poly'", ",", "C", "=", "1", ",", "degree", "=", "3", ",", "coef0", "=", "1", ",", "SVCgamma", "=", "1", ",", "Boostnestimator", "=", "50", ",", "BoostLearnrate", "=", "1", ",", "\n", "NNactive", "=", "'relu'", ",", "NNalpha", "=", "0.0001", ",", "NNmaxiter", "=", "200", ",", "\n", "KNNneighbors", "=", "1", ",", "NBType", "=", "'gaussian'", ",", "CARTspliter", "=", "'best'", ",", "min_sample", "=", "2", ",", "\n", "Rgalpha", "=", "1", ",", "Ridgenormalize", "=", "False", ")", ":", "\n", "        ", "self", ".", "trans_S", "=", "trans_S", "\n", "self", ".", "trans_A", "=", "trans_A", "\n", "self", ".", "label_S", "=", "label_S", "\n", "self", ".", "label_A", "=", "label_A", "\n", "self", ".", "N", "=", "N", "\n", "self", ".", "sx", ",", "self", ".", "test", ",", "self", ".", "sy", ",", "self", ".", "lable_test", "=", "train_test_split", "(", "self", ".", "trans_A", ",", "self", ".", "label_A", ",", "test_size", "=", "0.3", ")", "\n", "\n", "self", ".", "clfType", "=", "clf", "\n", "\n", "if", "self", ".", "clfType", "==", "'RF'", ":", "\n", "            ", "self", ".", "m", "=", "RandomForestClassifier", "(", "n_estimators", "=", "RFn_estimators", ",", "criterion", "=", "criterion", ",", "\n", "max_features", "=", "max_features", ",", "min_samples_split", "=", "min_sample", ")", "\n", "", "if", "self", ".", "clfType", "==", "'SVM'", ":", "\n", "            ", "self", ".", "m", "=", "SVC", "(", "kernel", "=", "SVCkernel", ",", "C", "=", "C", ",", "degree", "=", "degree", ",", "coef0", "=", "coef0", ",", "gamma", "=", "SVCgamma", ")", "\n", "", "if", "self", ".", "clfType", "==", "'Boost'", ":", "\n", "            ", "self", ".", "m", "=", "AdaBoostClassifier", "(", "n_estimators", "=", "Boostnestimator", ",", "learning_rate", "=", "BoostLearnrate", ")", "\n", "", "if", "self", ".", "clfType", "==", "'NN'", ":", "\n", "            ", "self", ".", "m", "=", "MLPClassifier", "(", "activation", "=", "NNactive", ",", "alpha", "=", "NNalpha", ",", "max_iter", "=", "NNmaxiter", ")", "\n", "", "if", "self", ".", "clfType", "==", "'KNN'", ":", "\n", "            ", "self", ".", "m", "=", "KNeighborsClassifier", "(", "n_neighbors", "=", "KNNneighbors", ")", "\n", "", "if", "self", ".", "clfType", "==", "'NB'", ":", "\n", "            ", "if", "NBType", "==", "'gaussian'", ":", "\n", "                ", "self", ".", "m", "=", "GaussianNB", "(", ")", "\n", "", "elif", "NBType", "==", "'multinomial'", ":", "\n", "                ", "self", ".", "m", "=", "MultinomialNB", "(", ")", "\n", "", "elif", "NBType", "==", "'bernoulli'", ":", "\n", "                ", "self", ".", "m", "=", "BernoulliNB", "(", ")", "\n", "", "", "if", "self", ".", "clfType", "==", "'CART'", ":", "\n", "            ", "self", ".", "m", "=", "DecisionTreeClassifier", "(", "criterion", "=", "criterion", ",", "splitter", "=", "CARTspliter", ",", "max_features", "=", "max_features", ",", "\n", "min_samples_split", "=", "min_sample", ")", "\n", "", "if", "self", ".", "clfType", "==", "'Ridge'", ":", "\n", "            ", "self", ".", "m", "=", "RidgeClassifier", "(", "alpha", "=", "Rgalpha", ",", "normalize", "=", "Ridgenormalize", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit": [[62, 132], ["numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.zeros", "numpy.ones", "numpy.zeros", "numpy.asarray", "numpy.asarray", "numpy.asarray", "range", "range", "numpy.ones", "numpy.ones", "TrAdaBoost.TrAdaBoost.calculate_P", "TrAdaBoost.TrAdaBoost.train_classify", "TrAdaBoost.TrAdaBoost.calculate_error_rate", "range", "range", "numpy.sum", "numpy.sqrt", "numpy.sum", "numpy.power", "numpy.power", "numpy.log", "numpy.log", "numpy.log", "numpy.abs", "numpy.abs", "int", "numpy.ceil", "int", "int", "numpy.ceil", "numpy.ceil"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.calculate_P", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.train_classify", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.calculate_error_rate"], ["", "", "def", "fit", "(", "self", ")", ":", "\n", "        ", "trans_data", "=", "np", ".", "concatenate", "(", "(", "self", ".", "trans_A", ",", "self", ".", "trans_S", ")", ",", "axis", "=", "0", ")", "\n", "trans_label", "=", "np", ".", "concatenate", "(", "(", "self", ".", "label_A", ",", "self", ".", "label_S", ")", ",", "axis", "=", "0", ")", "\n", "\n", "row_A", "=", "self", ".", "trans_A", ".", "shape", "[", "0", "]", "\n", "row_S", "=", "self", ".", "trans_S", ".", "shape", "[", "0", "]", "\n", "row_T", "=", "self", ".", "test", ".", "shape", "[", "0", "]", "\n", "N", "=", "self", ".", "N", "\n", "\n", "test_data", "=", "np", ".", "concatenate", "(", "(", "trans_data", ",", "self", ".", "test", ")", ",", "axis", "=", "0", ")", "\n", "\n", "# \u521d\u59cb\u5316\u6743\u91cd", "\n", "weights_A", "=", "np", ".", "ones", "(", "[", "row_A", ",", "1", "]", ")", "/", "row_A", "\n", "weights_S", "=", "np", ".", "ones", "(", "[", "row_S", ",", "1", "]", ")", "/", "row_S", "\n", "weights", "=", "np", ".", "concatenate", "(", "(", "weights_A", ",", "weights_S", ")", ",", "axis", "=", "0", ")", "\n", "\n", "bata", "=", "1", "/", "(", "1", "+", "np", ".", "sqrt", "(", "2", "*", "np", ".", "log", "(", "row_A", "/", "N", ")", ")", ")", "\n", "\n", "# \u5b58\u50a8\u6bcf\u6b21\u8fed\u4ee3\u7684\u6807\u7b7e\u548cbata\u503c\uff1f", "\n", "bata_T", "=", "np", ".", "zeros", "(", "[", "1", ",", "N", "]", ")", "\n", "result_label", "=", "np", ".", "ones", "(", "[", "row_A", "+", "row_S", "+", "row_T", ",", "N", "]", ")", "\n", "\n", "predict", "=", "np", ".", "zeros", "(", "[", "row_T", "]", ")", "\n", "\n", "# print('params initial finished.')", "\n", "trans_data", "=", "np", ".", "asarray", "(", "trans_data", ",", "order", "=", "'C'", ")", "\n", "trans_label", "=", "np", ".", "asarray", "(", "trans_label", ",", "order", "=", "'C'", ")", "\n", "test_data", "=", "np", ".", "asarray", "(", "test_data", ",", "order", "=", "'C'", ")", "\n", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "P", "=", "self", ".", "calculate_P", "(", "weights", ",", "trans_label", ")", "\n", "\n", "result_label", "[", ":", ",", "i", "]", "=", "self", ".", "train_classify", "(", "trans_data", ",", "trans_label", ",", "\n", "test_data", ",", "P", ")", "\n", "# print('result,', result_label[:, i], row_A, row_S, i, result_label.shape)", "\n", "\n", "error_rate", "=", "self", ".", "calculate_error_rate", "(", "self", ".", "label_S", ",", "result_label", "[", "row_A", ":", "row_A", "+", "row_S", ",", "i", "]", ",", "\n", "weights", "[", "row_A", ":", "row_A", "+", "row_S", ",", ":", "]", ")", "\n", "# print('Error rate:', error_rate)", "\n", "if", "error_rate", ">", "0.5", ":", "\n", "                ", "error_rate", "=", "0.5", "\n", "", "if", "error_rate", "==", "0", ":", "\n", "                ", "N", "=", "i", "\n", "break", "# \u9632\u6b62\u8fc7\u62df\u5408", "\n", "# error_rate = 0.001", "\n", "\n", "", "bata_T", "[", "0", ",", "i", "]", "=", "error_rate", "/", "(", "1", "-", "error_rate", ")", "\n", "\n", "# \u8c03\u6574\u6e90\u57df\u6837\u672c\u6743\u91cd", "\n", "for", "j", "in", "range", "(", "row_S", ")", ":", "\n", "                ", "weights", "[", "row_A", "+", "j", "]", "=", "weights", "[", "row_A", "+", "j", "]", "*", "np", ".", "power", "(", "bata_T", "[", "0", ",", "i", "]", ",", "\n", "(", "-", "np", ".", "abs", "(", "result_label", "[", "row_A", "+", "j", ",", "i", "]", "-", "self", ".", "label_S", "[", "j", "]", ")", ")", ")", "\n", "\n", "# \u8c03\u6574\u8f85\u57df\u6837\u672c\u6743\u91cd", "\n", "", "for", "j", "in", "range", "(", "row_A", ")", ":", "\n", "                ", "weights", "[", "j", "]", "=", "weights", "[", "j", "]", "*", "np", ".", "power", "(", "bata", ",", "np", ".", "abs", "(", "result_label", "[", "j", ",", "i", "]", "-", "self", ".", "label_A", "[", "j", "]", ")", ")", "\n", "# print bata_T", "\n", "", "", "for", "i", "in", "range", "(", "row_T", ")", ":", "\n", "# \u8df3\u8fc7\u8bad\u7ec3\u6570\u636e\u7684\u6807\u7b7e", "\n", "            ", "left", "=", "np", ".", "sum", "(", "\n", "result_label", "[", "row_A", "+", "row_S", "+", "i", ",", "int", "(", "np", ".", "ceil", "(", "N", "/", "2", ")", ")", ":", "N", "]", "*", "np", ".", "log", "(", "1", "/", "bata_T", "[", "0", ",", "int", "(", "np", ".", "ceil", "(", "N", "/", "2", ")", ")", ":", "N", "]", ")", ")", "\n", "right", "=", "0.5", "*", "np", ".", "sum", "(", "np", ".", "log", "(", "1", "/", "bata_T", "[", "0", ",", "int", "(", "np", ".", "ceil", "(", "N", "/", "2", ")", ")", ":", "N", "]", ")", ")", "\n", "\n", "if", "left", ">=", "right", ":", "\n", "                ", "predict", "[", "i", "]", "=", "1", "\n", "", "else", ":", "\n", "                ", "predict", "[", "i", "]", "=", "0", "\n", "# print left, right, predict[i]", "\n", "\n", "", "", "self", ".", "label_p", "=", "predict", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.predict": [[133, 135], ["sklearn.metrics.roc_auc_score"], "methods", ["None"], ["", "def", "predict", "(", "self", ")", ":", "\n", "        ", "self", ".", "AUC", "=", "roc_auc_score", "(", "self", ".", "lable_test", ",", "self", ".", "label_p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.calculate_P": [[137, 140], ["numpy.sum", "numpy.asarray"], "methods", ["None"], ["", "def", "calculate_P", "(", "self", ",", "weights", ",", "label", ")", ":", "\n", "        ", "total", "=", "np", ".", "sum", "(", "weights", ")", "\n", "return", "np", ".", "asarray", "(", "weights", "/", "total", ",", "order", "=", "'C'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.train_classify": [[142, 145], ["TrAdaBoost.TrAdaBoost.m.fit", "TrAdaBoost.TrAdaBoost.m.predict"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.predict"], ["", "def", "train_classify", "(", "self", ",", "trans_data", ",", "trans_label", ",", "test_data", ",", "P", ")", ":", "\n", "        ", "self", ".", "m", ".", "fit", "(", "trans_data", ",", "trans_label", ",", "sample_weight", "=", "P", "[", ":", ",", "0", "]", ")", "\n", "return", "self", ".", "m", ".", "predict", "(", "test_data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.calculate_error_rate": [[147, 153], ["numpy.sum", "numpy.sum", "numpy.abs"], "methods", ["None"], ["", "def", "calculate_error_rate", "(", "self", ",", "label_R", ",", "label_H", ",", "weight", ")", ":", "\n", "        ", "total", "=", "np", ".", "sum", "(", "weight", ")", "\n", "\n", "# print(weight[:, 0] / total)", "\n", "# print(np.abs(label_R - label_H))", "\n", "return", "np", ".", "sum", "(", "weight", "[", ":", ",", "0", "]", "/", "total", "*", "np", ".", "abs", "(", "label_R", "-", "label_H", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.__init__": [[8, 153], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "kernel_type", "=", "'linear'", ",", "dim", "=", "5", ",", "lamb", "=", "1", ",", "gamma", "=", "1", ",", "# TCA", "\n", "eps", "=", "1.0", ",", "min_samples", "=", "10", ",", "# DBSCAN", "\n", "n_neighbors", "=", "5", ",", "# Bruak", "\n", "eachCluster", "=", "10", ",", "# Peter", "\n", "DStopn", "=", "5", ",", "DSfss", "=", "0.2", ",", "# DS", "\n", "DTBneighbors", "=", "10", ",", "DTBT", "=", "20", ",", "# DTB", "\n", "DSBFtopk", "=", "1", ",", "DSBFneighbors", "=", "10", ",", "# DSBF", "\n", "pvalue", "=", "0.05", ",", "QuantifyType", "=", "'cliff'", ",", "# Universal", "\n", "\n", "n_estimators", "=", "10", ",", "criterion", "=", "'gini'", ",", "max_features", "=", "'auto'", ",", "RFmin_samples_split", "=", "2", ",", "# RF", "\n", "Boostnestimator", "=", "50", ",", "BoostLearnrate", "=", "1", ",", "# Boost", "\n", "NNactive", "=", "'relu'", ",", "NNalpha", "=", "0.0001", ",", "NNmaxiter", "=", "50", ",", "# NN", "\n", "CARTsplitter", "=", "'best'", ",", "# CART", "\n", "Ridgealpha", "=", "1", ",", "Ridgenormalize", "=", "False", ",", "# Ridge", "\n", "KNNneighbors", "=", "5", ",", "# KNN", "\n", "NBType", "=", "'gaussian'", ",", "# NB", "\n", "\n", "clf", "=", "'SVM'", ",", "adpt", "=", "'TCA'", "# TL and Classifier", "\n", ")", ":", "\n", "# TL and Classifier", "\n", "        ", "self", ".", "clfType", "=", "clf", "\n", "self", ".", "adpt", "=", "adpt", "\n", "\n", "# Universal", "\n", "self", ".", "pvalue", "=", "pvalue", "\n", "self", ".", "QuntifyType", "=", "QuantifyType", "\n", "# DTB", "\n", "self", ".", "DTBneighbors", "=", "DTBneighbors", "\n", "self", ".", "DTBT", "=", "DTBT", "\n", "# DSBF", "\n", "self", ".", "DSBFtopk", "=", "DSBFtopk", "\n", "self", ".", "DSBFneighbor", "=", "DSBFneighbors", "\n", "# TCA", "\n", "self", ".", "kernelType", "=", "kernel_type", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "lamb", "=", "lamb", "\n", "self", ".", "gamma", "=", "gamma", "\n", "# DBSCAN", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "min_samples", "=", "min_samples", "\n", "# peter", "\n", "self", ".", "eachCluster", "=", "eachCluster", "\n", "# Bruak", "\n", "self", ".", "Barukneighbors", "=", "n_neighbors", "\n", "# DS", "\n", "self", ".", "DStopn", "=", "DStopn", "\n", "self", ".", "DSfss", "=", "DSfss", "\n", "\n", "# SVM", "\n", "self", ".", "SVCkernel", "=", "'poly'", "\n", "self", ".", "coef0", "=", "0", "\n", "self", ".", "gamma", "=", "1", "\n", "self", ".", "degree", "=", "3", "\n", "self", ".", "C", "=", "1", "\n", "# KNN", "\n", "self", ".", "KNNneighbors", "=", "KNNneighbors", "\n", "# RF", "\n", "self", ".", "n_estimators", "=", "n_estimators", "\n", "self", ".", "criterion", "=", "criterion", "\n", "self", ".", "max_features", "=", "max_features", "\n", "self", ".", "RFmin_samples", "=", "RFmin_samples_split", "\n", "# Boost", "\n", "self", ".", "Boostne", "=", "Boostnestimator", "\n", "self", ".", "BoostLearnrate", "=", "BoostLearnrate", "\n", "# NN", "\n", "self", ".", "NNactive", "=", "NNactive", "\n", "self", ".", "NNalpha", "=", "NNalpha", "\n", "self", ".", "NNmaxiter", "=", "NNmaxiter", "\n", "# NB", "\n", "self", ".", "NBType", "=", "NBType", "\n", "# CART", "\n", "self", ".", "CARTsplitter", "=", "CARTsplitter", "\n", "# Ridge", "\n", "self", ".", "Ridgealpha", "=", "Ridgealpha", "\n", "self", ".", "Ridgenormalize", "=", "Ridgenormalize", "\n", "\n", "self", ".", "default", "=", "{", "'Universal'", ":", "{", "\n", "'pvalue'", ":", "0.05", ",", "\n", "'QuantifyType'", ":", "0", "\n", "}", ",", "\n", "'DTB'", ":", "{", "\n", "'DTBneighbors'", ":", "10", ",", "\n", "'DTBT'", ":", "20", "\n", "}", ",", "\n", "'DSBF'", ":", "{", "\n", "'DSBFtopk'", ":", "1", ",", "\n", "'DSBFneighbors'", ":", "10", "\n", "}", ",", "\n", "'TCA'", ":", "{", "\n", "'kernel_type'", ":", "1", ",", "\n", "'dim'", ":", "5", ",", "\n", "'lamb'", ":", "1", ",", "\n", "'gamma'", ":", "1", "\n", "}", ",", "\n", "'DBSCANfilter'", ":", "{", "\n", "'eps'", ":", "1", ",", "\n", "'min_samples'", ":", "10", "\n", "}", ",", "\n", "'Peterfilter'", ":", "{", "\n", "'eachCluster'", ":", "10", "\n", "}", ",", "\n", "'Bruakfilter'", ":", "{", "\n", "'n_neighbors'", ":", "10", "\n", "}", ",", "\n", "'DS'", ":", "{", "\n", "'DStopn'", ":", "5", ",", "\n", "'DSfss'", ":", "0.2", "\n", "}", ",", "\n", "'SVM'", ":", "{", "\n", "'kernel'", ":", "1", ",", "\n", "'coef0'", ":", "0", ",", "\n", "'gamma'", ":", "1", ",", "\n", "'degree'", ":", "3", ",", "\n", "'c'", ":", "1", "\n", "}", ",", "\n", "'KNN'", ":", "{", "\n", "'KNNneighbors'", ":", "1", "\n", "}", ",", "\n", "'RF'", ":", "{", "\n", "'n_estimators'", ":", "10", ",", "\n", "'criterion'", ":", "0", ",", "\n", "'max_features'", ":", "0", ",", "\n", "'RFmin_samples_split'", ":", "2", "\n", "}", ",", "\n", "'Boost'", ":", "{", "\n", "'Boostnestimator'", ":", "50", ",", "\n", "'BoostLearnrate'", ":", "1", "\n", "}", ",", "\n", "'NN'", ":", "{", "\n", "'NNactive'", ":", "3", ",", "\n", "'NNalpha'", ":", "0.0001", ",", "\n", "'NNmaxiter'", ":", "50", "\n", "}", ",", "\n", "'NB'", ":", "{", "\n", "'NBType'", ":", "'gaussian'", "\n", "}", ",", "\n", "'CART'", ":", "{", "\n", "'criterion'", ":", "0", ",", "\n", "'max_features'", ":", "0", ",", "\n", "'CARTsplitter'", ":", "0", ",", "\n", "'RFmin_samples_split'", ":", "2", "\n", "}", ",", "\n", "'Ridge'", ":", "{", "\n", "'Ridgealpha'", ":", "1", ",", "\n", "'Ridgenormalize'", ":", "False", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp._get_param_names": [[156, 181], ["getattr", "signature", "sorted", "signature.parameters.values", "RuntimeError"], "methods", ["None"], ["", "def", "_get_param_names", "(", "cls", ")", ":", "\n", "        ", "\"\"\"Get parameter names for the estimator\"\"\"", "\n", "# fetch the constructor or the original constructor before", "\n", "# deprecation wrapping if any", "\n", "init", "=", "getattr", "(", "cls", ".", "__init__", ",", "'deprecated_original'", ",", "cls", ".", "__init__", ")", "\n", "if", "init", "is", "object", ".", "__init__", ":", "\n", "# No explicit constructor to introspect", "\n", "            ", "return", "[", "]", "\n", "\n", "# introspect the constructor arguments to find the model parameters", "\n", "# to represent", "\n", "", "init_signature", "=", "signature", "(", "init", ")", "\n", "# Consider the constructor parameters excluding 'self'", "\n", "parameters", "=", "[", "p", "for", "p", "in", "init_signature", ".", "parameters", ".", "values", "(", ")", "\n", "if", "p", ".", "name", "!=", "'self'", "and", "p", ".", "kind", "!=", "p", ".", "VAR_KEYWORD", "]", "\n", "for", "p", "in", "parameters", ":", "\n", "            ", "if", "p", ".", "kind", "==", "p", ".", "VAR_POSITIONAL", ":", "\n", "                ", "raise", "RuntimeError", "(", "\"scikit-learn estimators should always \"", "\n", "\"specify their parameters in the signature\"", "\n", "\" of their __init__ (no varargs).\"", "\n", "\" %s with constructor %s doesn't \"", "\n", "\" follow this convention.\"", "\n", "%", "(", "cls", ",", "init_signature", ")", ")", "\n", "# Extract and sort argument names excluding 'self'", "\n", "", "", "return", "sorted", "(", "[", "p", ".", "name", "for", "p", "in", "parameters", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.get_params": [[182, 202], ["dict", "Framework.cpdp._get_param_names", "getattr", "hasattr", "getattr.get_params().items", "dict.update", "getattr.get_params"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp._get_param_names", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.get_params"], ["", "def", "get_params", "(", "self", ",", "deep", "=", "True", ")", ":", "\n", "        ", "\"\"\"Get parameters for this estimator.\n        Parameters\n        ----------\n        deep : boolean, optional\n            If True, will return the parameters for this estimator and\n            contained subobjects that are estimators.\n        Returns\n        -------\n        params : mapping of string to any\n            Parameter names mapped to their values.\n        \"\"\"", "\n", "out", "=", "dict", "(", ")", "\n", "for", "key", "in", "self", ".", "_get_param_names", "(", ")", ":", "\n", "            ", "value", "=", "getattr", "(", "self", ",", "key", ",", "None", ")", "\n", "if", "deep", "and", "hasattr", "(", "value", ",", "'get_params'", ")", ":", "\n", "                ", "deep_items", "=", "value", ".", "get_params", "(", ")", ".", "items", "(", ")", "\n", "out", ".", "update", "(", "(", "key", "+", "'__'", "+", "k", ",", "val", ")", "for", "k", ",", "val", "in", "deep_items", ")", "\n", "", "out", "[", "key", "]", "=", "value", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.set_params": [[203, 250], ["Framework.cpdp.get_params", "collections.defaultdict", "params.items", "collections.defaultdict.items", "params.pop", "params.pop", "key.partition", "valid_params[].set_params", "ValueError", "setattr"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.get_params", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.set_params"], ["", "def", "set_params", "(", "self", ",", "**", "params", ")", ":", "\n", "        ", "if", "not", "params", ":", "\n", "# Simple optimization to gain speed (inspect is slow)", "\n", "            ", "return", "self", "\n", "\n", "", "if", "'C'", "in", "params", ":", "\n", "            ", "self", ".", "C", "=", "params", "[", "'C'", "]", "\n", "if", "params", "[", "'SVCkernel'", "]", "[", "'kernel'", "]", "==", "'linear'", ":", "\n", "                ", "self", ".", "SVCkernel", "=", "'linear'", "\n", "", "elif", "params", "[", "'SVCkernel'", "]", "[", "'kernel'", "]", "==", "'rbf'", ":", "\n", "                ", "self", ".", "SVCkernel", "=", "'rbf'", "\n", "self", ".", "gamma", "=", "params", "[", "'SVCkernel'", "]", "[", "'rbfgamma'", "]", "\n", "", "elif", "params", "[", "'SVCkernel'", "]", "[", "'kernel'", "]", "==", "'sigmoid'", ":", "\n", "                ", "self", ".", "SVCkernel", "=", "'sigmoid'", "\n", "self", ".", "gamma", "=", "params", "[", "'SVCkernel'", "]", "[", "'siggamma'", "]", "\n", "self", ".", "coef0", "=", "params", "[", "'SVCkernel'", "]", "[", "'sigcoef0'", "]", "\n", "", "elif", "params", "[", "'SVCkernel'", "]", "[", "'kernel'", "]", "==", "'poly'", ":", "\n", "                ", "self", ".", "SVCkernel", "=", "'poly'", "\n", "self", ".", "gamma", "=", "params", "[", "'SVCkernel'", "]", "[", "'polygamma'", "]", "\n", "self", ".", "degree", "=", "params", "[", "'SVCkernel'", "]", "[", "'degree'", "]", "\n", "self", ".", "coef0", "=", "params", "[", "'SVCkernel'", "]", "[", "'polycoef0'", "]", "\n", "", "params", ".", "pop", "(", "'C'", ")", "\n", "params", ".", "pop", "(", "'SVCkernel'", ")", "\n", "\n", "\n", "\n", "", "valid_params", "=", "self", ".", "get_params", "(", "deep", "=", "True", ")", "\n", "\n", "nested_params", "=", "defaultdict", "(", "dict", ")", "# grouped by prefix", "\n", "for", "key", ",", "value", "in", "params", ".", "items", "(", ")", ":", "\n", "            ", "key", ",", "delim", ",", "sub_key", "=", "key", ".", "partition", "(", "'__'", ")", "\n", "if", "key", "not", "in", "valid_params", ":", "\n", "                ", "raise", "ValueError", "(", "'Invalid parameter %s for estimator %s. '", "\n", "'Check the list of available parameters '", "\n", "'with `estimator.get_params().keys()`.'", "%", "\n", "(", "key", ",", "self", ")", ")", "\n", "\n", "", "if", "delim", ":", "\n", "                ", "nested_params", "[", "key", "]", "[", "sub_key", "]", "=", "value", "\n", "", "else", ":", "\n", "                ", "setattr", "(", "self", ",", "key", ",", "value", ")", "\n", "valid_params", "[", "key", "]", "=", "value", "\n", "\n", "", "", "for", "key", ",", "sub_params", "in", "nested_params", ".", "items", "(", ")", ":", "\n", "            ", "valid_params", "[", "key", "]", ".", "set_params", "(", "**", "sub_params", ")", "\n", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.run": [[251, 341], ["time.time", "time.time", "RandomForestClassifier", "SVC", "sklearn.preprocessing.normalize", "sklearn.preprocessing.normalize", "AdaBoostClassifier", "MLPClassifier", "KNeighborsClassifier", "DecisionTreeClassifier", "RidgeClassifier", "Universal", "TCA", "DBSCANfilter", "Bruakfilter", "Peterfilter", "DSBF", "DTB", "DTB.fit", "DTB.predict", "DataSelection", "Framework.cpdp.DA.run", "Framework.cpdp.DA.run", "time.time", "Framework.cpdp.m.fit", "Framework.cpdp.m.predict", "roc_auc_score", "GaussianNB", "len", "MultinomialNB", "np.asarray", "np.unique", "BernoulliNB"], "methods", ["home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.domainAdaptation.DSBF.Bruakfilter", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.predict", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.run", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.Framework.cpdp.run", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.fit", "home.repos.pwc.inspect_result.COLA-Laboratory_icse2020.Algorithms.TrAdaBoost.TrAdaBoost.predict"], ["", "def", "run", "(", "self", ",", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", ",", "loc", ")", ":", "\n", "# initial the DAtor and Classifier", "\n", "        ", "if", "self", ".", "clfType", "==", "'RF'", ":", "\n", "            ", "self", ".", "m", "=", "RandomForestClassifier", "(", "n_estimators", "=", "self", ".", "n_estimators", ",", "criterion", "=", "self", ".", "criterion", ",", "\n", "max_features", "=", "self", ".", "max_features", ",", "min_samples_split", "=", "self", ".", "RFmin_samples", ")", "\n", "\n", "", "if", "self", ".", "clfType", "==", "'SVM'", ":", "\n", "            ", "self", ".", "m", "=", "SVC", "(", "kernel", "=", "self", ".", "SVCkernel", ",", "C", "=", "1", ",", "degree", "=", "self", ".", "degree", ",", "coef0", "=", "self", ".", "coef0", ",", "gamma", "=", "self", ".", "gamma", ")", "\n", "Xsource", "=", "normalize", "(", "Xsource", ")", "\n", "Xtarget", "=", "normalize", "(", "Xtarget", ")", "\n", "\n", "\n", "", "if", "self", ".", "clfType", "==", "'Boost'", ":", "\n", "            ", "self", ".", "m", "=", "AdaBoostClassifier", "(", "n_estimators", "=", "self", ".", "Boostne", ",", "learning_rate", "=", "self", ".", "BoostLearnrate", ")", "\n", "\n", "", "if", "self", ".", "clfType", "==", "'MLP'", ":", "\n", "            ", "self", ".", "m", "=", "MLPClassifier", "(", "activation", "=", "self", ".", "NNactive", ",", "alpha", "=", "self", ".", "NNalpha", ",", "max_iter", "=", "self", ".", "NNmaxiter", ")", "\n", "\n", "", "if", "self", ".", "clfType", "==", "'KNN'", ":", "\n", "            ", "self", ".", "m", "=", "KNeighborsClassifier", "(", "n_neighbors", "=", "self", ".", "KNNneighbors", ")", "\n", "\n", "", "if", "self", ".", "clfType", "==", "'NB'", ":", "\n", "            ", "if", "self", ".", "NBType", "==", "'gaussian'", ":", "\n", "                ", "self", ".", "m", "=", "GaussianNB", "(", ")", "\n", "", "elif", "self", ".", "NBType", "==", "'multinomial'", ":", "\n", "                ", "self", ".", "m", "=", "MultinomialNB", "(", ")", "\n", "", "elif", "self", ".", "NBType", "==", "'bernoulli'", ":", "\n", "                ", "self", ".", "m", "=", "BernoulliNB", "(", ")", "\n", "\n", "", "", "if", "self", ".", "clfType", "==", "'CART'", ":", "\n", "            ", "self", ".", "m", "=", "DecisionTreeClassifier", "(", "criterion", "=", "self", ".", "criterion", ",", "splitter", "=", "self", ".", "CARTsplitter", ",", "\n", "max_features", "=", "self", ".", "max_features", ",", "min_samples_split", "=", "self", ".", "RFmin_samples", ")", "\n", "\n", "", "if", "self", ".", "clfType", "==", "'Ridge'", ":", "\n", "            ", "self", ".", "m", "=", "RidgeClassifier", "(", "alpha", "=", "self", ".", "Ridgealpha", ",", "normalize", "=", "self", ".", "Ridgenormalize", ")", "\n", "\n", "", "if", "self", ".", "adpt", "==", "'Universal'", ":", "\n", "            ", "self", ".", "DA", "=", "Universal", "(", "pvalue", "=", "self", ".", "pvalue", ",", "QuantifyType", "=", "self", ".", "QuntifyType", ")", "\n", "\n", "\n", "", "if", "self", ".", "adpt", "==", "'TCA'", ":", "\n", "            ", "self", ".", "DA", "=", "TCA", "(", "kernel_type", "=", "self", ".", "kernelType", ",", "dim", "=", "self", ".", "dim", ",", "lamb", "=", "self", ".", "lamb", ",", "gamma", "=", "self", ".", "gamma", ")", "\n", "\n", "", "if", "self", ".", "adpt", "==", "'DBSCANfilter'", ":", "\n", "            ", "self", ".", "DA", "=", "DBSCANfilter", "(", "eps", "=", "self", ".", "eps", ",", "min_samples", "=", "self", ".", "min_samples", ")", "\n", "\n", "", "if", "self", ".", "adpt", "==", "'Bruakfilter'", ":", "\n", "            ", "self", ".", "DA", "=", "Bruakfilter", "(", "n_neighbors", "=", "self", ".", "Barukneighbors", ")", "\n", "\n", "", "if", "self", ".", "adpt", "==", "'Peterfilter'", ":", "\n", "            ", "self", ".", "DA", "=", "Peterfilter", "(", "eachCluster", "=", "self", ".", "eachCluster", ")", "\n", "", "if", "self", ".", "adpt", "==", "'DSBF'", ":", "\n", "            ", "self", ".", "DA", "=", "DSBF", "(", "topK", "=", "self", ".", "DSBFtopk", ",", "neighbors", "=", "self", ".", "DSBFneighbor", ")", "\n", "\n", "", "if", "self", ".", "adpt", "==", "'DTB'", ":", "\n", "            ", "model", "=", "DTB", "(", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", ",", "n_neighbors", "=", "self", ".", "DTBneighbors", ",", "iter", "=", "self", ".", "DTBT", ",", "\n", "clf", "=", "self", ".", "clfType", ",", "\n", "n_estimators", "=", "self", ".", "n_estimators", ",", "criterion", "=", "self", ".", "criterion", ",", "max_features", "=", "self", ".", "max_features", ",", "\n", "SVCkernel", "=", "self", ".", "SVCkernel", ",", "C", "=", "self", ".", "C", ",", "degree", "=", "self", ".", "degree", ",", "coef0", "=", "self", ".", "coef0", ",", "SVCgamma", "=", "self", ".", "gamma", ",", "\n", "Boostnestimator", "=", "self", ".", "Boostne", ",", "BoostLearnrate", "=", "self", ".", "BoostLearnrate", ",", "\n", "NBtype", "=", "self", ".", "NBType", ",", "\n", "CARTsplitter", "=", "self", ".", "CARTsplitter", ",", "RFmin_samples_split", "=", "self", ".", "RFmin_samples", ",", "\n", "Ridgealpha", "=", "self", ".", "Ridgealpha", ",", "Ridgenormalize", "=", "self", ".", "Ridgenormalize", ")", "\n", "model", ".", "fit", "(", ")", "\n", "model", ".", "predict", "(", ")", "\n", "return", "model", ".", "AUC", "\n", "\n", "", "if", "self", ".", "adpt", "==", "'DS'", ":", "\n", "            ", "self", ".", "DA", "=", "DataSelection", "(", "topN", "=", "self", ".", "DStopn", ",", "FSS", "=", "self", ".", "DSfss", ")", "\n", "\n", "\n", "", "s1", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "self", ".", "adpt", "==", "'DS'", "or", "self", ".", "adpt", "==", "'Universal'", ":", "\n", "            ", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", "=", "self", ".", "DA", ".", "run", "(", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", ",", "loc", ")", "\n", "", "else", ":", "\n", "            ", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", "=", "self", ".", "DA", ".", "run", "(", "Xsource", ",", "Ysource", ",", "Xtarget", ",", "Ytarget", ")", "\n", "\n", "", "s1", "=", "time", ".", "time", "(", ")", "-", "s1", "\n", "\n", "s2", "=", "time", ".", "time", "(", ")", "\n", "if", "np", ".", "asarray", "(", "Xsource", ")", ".", "ndim", "<=", "1", "or", "len", "(", "np", ".", "unique", "(", "Ysource", ")", ")", "<=", "1", ":", "\n", "            ", "return", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "m", ".", "fit", "(", "Xsource", ",", "Ysource", ")", "\n", "if", "self", ".", "clfType", "==", "'KNN'", ":", "\n", "                ", "if", "Xsource", ".", "shape", "[", "0", "]", "<", "self", ".", "KNNneighbors", ":", "\n", "                    ", "return", "0", "\n", "", "", "predict", "=", "self", ".", "m", ".", "predict", "(", "Xtarget", ")", "\n", "return", "roc_auc_score", "(", "Ytarget", ",", "predict", ")", "\n", "", "", "", ""]]}