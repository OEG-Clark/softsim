{"home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.test.test_defenses.test_mixup": [[7, 19], ["test.test_pipeline.setup_CIFAR10_pipeline", "gradattack.defenses.MixupDefense", "gradattack.defenses.MixupDefense.apply", "test.test_pipeline.setup_CIFAR10_pipeline.run"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.test.test_pipeline.setup_CIFAR10_pipeline", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense.GradientDefense.apply", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.trainingpipeline.TrainingPipeline.run"], ["def", "test_mixup", "(", ")", ":", "\n", "    ", "pipeline", "=", "setup_CIFAR10_pipeline", "(", "loss", "=", "cross_entropy_for_onehot", ",", "\n", "fast_dev_run", "=", "True", ")", "\n", "\n", "mixup_defense", "=", "MixupDefense", "(", "pipeline", ".", "datamodule", ".", "train_set", ",", "\n", "klam", "=", "4", ",", "\n", "upper_bound", "=", "1", ",", "\n", "lower_bound", "=", "0", ",", "\n", "device", "=", "\"cpu\"", ",", "\n", "use_csprng", "=", "False", ")", "\n", "mixup_defense", ".", "apply", "(", "pipeline", ")", "\n", "pipeline", ".", "run", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.test.test_defenses.test_instahide": [[21, 33], ["test.test_pipeline.setup_CIFAR10_pipeline", "gradattack.defenses.InstahideDefense", "gradattack.defenses.InstahideDefense.apply", "test.test_pipeline.setup_CIFAR10_pipeline.run"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.test.test_pipeline.setup_CIFAR10_pipeline", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense.GradientDefense.apply", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.trainingpipeline.TrainingPipeline.run"], ["", "def", "test_instahide", "(", ")", ":", "\n", "    ", "pipeline", "=", "setup_CIFAR10_pipeline", "(", "loss", "=", "cross_entropy_for_onehot", ",", "\n", "fast_dev_run", "=", "True", ")", "\n", "\n", "defense", "=", "InstahideDefense", "(", "pipeline", ".", "datamodule", ".", "train_set", ",", "\n", "klam", "=", "4", ",", "\n", "upper_bound", "=", "1", ",", "\n", "lower_bound", "=", "0", ",", "\n", "device", "=", "\"cpu\"", ",", "\n", "use_csprng", "=", "False", ")", "\n", "defense", ".", "apply", "(", "pipeline", ")", "\n", "pipeline", ".", "run", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.test.test_defenses.test_gradprune": [[35, 41], ["test.test_pipeline.setup_CIFAR10_pipeline", "gradattack.defenses.GradPruneDefense", "gradattack.defenses.GradPruneDefense.apply", "test.test_pipeline.setup_CIFAR10_pipeline.run"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.test.test_pipeline.setup_CIFAR10_pipeline", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense.GradientDefense.apply", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.trainingpipeline.TrainingPipeline.run"], ["", "def", "test_gradprune", "(", ")", ":", "\n", "    ", "pipeline", "=", "setup_CIFAR10_pipeline", "(", "fast_dev_run", "=", "True", ")", "\n", "\n", "gradprune_defense", "=", "GradPruneDefense", "(", "prune_ratio", "=", "0.9", ")", "\n", "gradprune_defense", ".", "apply", "(", "pipeline", ")", "\n", "pipeline", ".", "run", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.test.test_pipeline.setup_CIFAR10_pipeline": [[57, 99], ["torch.nn.CrossEntropyLoss", "gradattack.datamodules.CIFAR10DataModule", "gradattack.datamodules.CIFAR10DataModule.setup", "gradattack.models.create_lightning_module", "pytorch_lightning.Trainer", "gradattack.trainingpipeline.TrainingPipeline"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.setup", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.create_lightning_module"], ["def", "setup_CIFAR10_pipeline", "(", "\n", "augment", "=", "augment", ",", "\n", "batch_size", "=", "128", ",", "\n", "tune_on_val", "=", "0.02", ",", "\n", "loss", "=", "CrossEntropyLoss", "(", "reduction", "=", "\"mean\"", ")", ",", "\n", "n_accumulation_steps", "=", "1", ",", "\n", "freeze_extractor", "=", "False", ",", "\n", "ckpt", "=", "None", ",", "\n", "model", "=", "\"ResNet18\"", ",", "\n", "stage", "=", "\"train\"", ",", "\n", "hparams", "=", "vanilla_hparams", ",", "\n", "fast_dev_run", "=", "True", ",", "\n", "max_epochs", "=", "200", ",", "\n", "logger", "=", "None", ",", "\n", ")", ":", "\n", "\n", "    ", "cifar10_datamodule", "=", "CIFAR10DataModule", "(", "\n", "augment", "=", "augment", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "tune_on_val", "=", "tune_on_val", ",", "\n", "batch_sampler", "=", "None", ",", "\n", ")", "\n", "cifar10_datamodule", ".", "setup", "(", "stage", "=", "stage", ")", "\n", "model", "=", "create_lightning_module", "(", "\n", "model", ",", "\n", "cifar10_datamodule", ".", "num_classes", ",", "\n", "training_loss_metric", "=", "loss", ",", "\n", "freeze_extractor", "=", "freeze_extractor", ",", "\n", "ckpt", "=", "ckpt", ",", "\n", "**", "hparams", ",", "\n", ")", "\n", "trainer", "=", "pl", ".", "Trainer", "(", "\n", "check_val_every_n_epoch", "=", "1", ",", "\n", "fast_dev_run", "=", "fast_dev_run", ",", "\n", "logger", "=", "logger", ",", "\n", "max_epochs", "=", "max_epochs", ",", "\n", "callbacks", "=", "[", "early_stop_callback", "]", ",", "\n", "accumulate_grad_batches", "=", "n_accumulation_steps", ",", "\n", ")", "\n", "\n", "pipeline", "=", "TrainingPipeline", "(", "model", ",", "cifar10_datamodule", ",", "trainer", ")", "\n", "return", "pipeline", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.test.test_pipeline.test_pipeline_creation": [[101, 104], ["test_pipeline.setup_CIFAR10_pipeline", "setup_CIFAR10_pipeline.run"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.test.test_pipeline.setup_CIFAR10_pipeline", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.trainingpipeline.TrainingPipeline.run"], ["", "def", "test_pipeline_creation", "(", ")", ":", "\n", "    ", "pipeline_cifar", "=", "setup_CIFAR10_pipeline", "(", ")", "\n", "pipeline_cifar", ".", "run", "(", ")", "\n", "# pipeline_imagenet = setup_ImageNet_pipeline()", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.test.test_attack.test_gradient_attack_CIFAR10": [[8, 46], ["torch.tensor", "torch.tensor", "test.test_pipeline.setup_CIFAR10_pipeline", "test.test_pipeline.setup_CIFAR10_pipeline.datamodule.setup", "test.test_pipeline.setup_CIFAR10_pipeline.get_datamodule_batch", "test.test_pipeline.setup_CIFAR10_pipeline.model.get_batch_gradients", "gradattack.attacks.gradientinversion.GradientReconstructor", "pytorch_lightning.loggers.tensorboard.TensorBoardLogger", "pytorch_lightning.Trainer", "pl.Trainer.fit"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.test.test_pipeline.setup_CIFAR10_pipeline", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.setup", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.trainingpipeline.TrainingPipeline.get_datamodule_batch", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.get_batch_gradients"], ["def", "test_gradient_attack_CIFAR10", "(", "fast_dev_run", "=", "True", ")", ":", "\n", "\n", "    ", "cifar10_mean", "=", "torch", ".", "tensor", "(", "\n", "[", "0.4914672374725342", ",", "0.4822617471218109", ",", "0.4467701315879822", "]", ")", "\n", "cifar10_std", "=", "torch", ".", "tensor", "(", "\n", "[", "0.24703224003314972", ",", "0.24348513782024384", ",", "0.26158785820007324", "]", ")", "\n", "dm", "=", "cifar10_mean", "[", ":", ",", "None", ",", "None", "]", "\n", "ds", "=", "cifar10_std", "[", ":", ",", "None", ",", "None", "]", "\n", "\n", "pipeline", "=", "setup_CIFAR10_pipeline", "(", ")", "\n", "pipeline", ".", "datamodule", ".", "setup", "(", "\"attack\"", ")", "\n", "\n", "example_batch", "=", "pipeline", ".", "get_datamodule_batch", "(", ")", "\n", "\n", "batch_gradients", ",", "step_results", "=", "pipeline", ".", "model", ".", "get_batch_gradients", "(", "\n", "example_batch", ",", "0", ")", "\n", "\n", "batch_inputs_transform", ",", "batch_targets_transform", "=", "step_results", "[", "\n", "\"transformed_batch\"", "]", "\n", "\n", "attack_instance", "=", "GradientReconstructor", "(", "\n", "pipeline", ",", "\n", "ground_truth_inputs", "=", "batch_inputs_transform", ",", "\n", "ground_truth_gradients", "=", "batch_gradients", ",", "\n", "ground_truth_labels", "=", "batch_targets_transform", ",", "\n", "mean_std", "=", "(", "dm", ",", "ds", ")", ",", "\n", ")", "\n", "\n", "tb_logger", "=", "TensorBoardLogger", "(", "\"tb_logs\"", ",", "name", "=", "\"gradient_attack_test\"", ")", "\n", "attack_trainer", "=", "pl", ".", "Trainer", "(", "\n", "logger", "=", "tb_logger", ",", "\n", "max_epochs", "=", "10000", ",", "\n", "benchmark", "=", "True", ",", "\n", "checkpoint_callback", "=", "False", ",", "\n", "fast_dev_run", "=", "fast_dev_run", ",", "\n", ")", "\n", "\n", "attack_trainer", ".", "fit", "(", "attack_instance", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.test.utils.cross_entropy_for_onehot": [[6, 8], ["torch.mean", "torch.sum", "torch.nn.functional.log_softmax"], "function", ["None"], ["def", "cross_entropy_for_onehot", "(", "pred", ",", "target", ")", ":", "\n", "    ", "return", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "-", "target", "*", "log_softmax", "(", "pred", ",", "dim", "=", "-", "1", ")", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.examples.attack_decode.parse_args": [[18, 31], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'gradattack training'", ")", "\n", "parser", ".", "add_argument", "(", "'--dir'", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--dest_dir'", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--num_batches'", ",", "default", "=", "50", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--instahide'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--k'", ",", "default", "=", "4", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--dim'", ",", "default", "=", "32", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--num_img'", ",", "default", "=", "50", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--num_epoch'", ",", "default", "=", "20", ",", "type", "=", "int", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.examples.attack_decode.toimg": [[33, 50], ["numpy.reshape", "numpy.concatenate", "numpy.concatenate", "PIL.Image.fromarray", "numpy.clip", "numpy.append", "numpy.array", "len", "int", "len", "numpy.zeros", "x.min", "x.max", "x.min", "len", "math.ceil", "len"], "function", ["None"], ["", "def", "toimg", "(", "x", ",", "ori", "=", "True", ")", ":", "\n", "    ", "\"\"\"Convert a list of images to a single patched image for better illustration\n    \"\"\"", "\n", "if", "ori", "is", "True", ":", "\n", "        ", "img", "=", "(", "x", "-", "x", ".", "min", "(", ")", ")", "/", "(", "x", ".", "max", "(", ")", "-", "x", ".", "min", "(", ")", ")", "\n", "img", "*=", "255", "\n", "", "else", ":", "\n", "        ", "img", "=", "(", "x", "+", "1", ")", "*", "127.5", "\n", "img", "=", "np", ".", "clip", "(", "img", ",", "0", ",", "255", ")", "\n", "", "if", "len", "(", "x", ")", "%", "10", "!=", "0", ":", "\n", "        ", "pad_size", "=", "int", "(", "math", ".", "ceil", "(", "len", "(", "img", ")", "/", "10", ")", "*", "10", ")", "-", "len", "(", "img", ")", "\n", "img", "=", "np", ".", "append", "(", "img", ",", "np", ".", "zeros", "(", "(", "pad_size", ",", "*", "img", "[", "0", "]", ".", "shape", ")", ")", ",", "axis", "=", "0", ")", "\n", "", "img", "=", "np", ".", "reshape", "(", "img", ",", "(", "len", "(", "img", ")", "//", "10", ",", "10", ",", "args", ".", "dim", ",", "args", ".", "dim", ",", "3", ")", ")", "\n", "img", "=", "np", ".", "concatenate", "(", "img", ",", "axis", "=", "2", ")", "\n", "img", "=", "np", ".", "concatenate", "(", "img", ",", "axis", "=", "0", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "np", ".", "array", "(", "img", ",", "dtype", "=", "np", ".", "uint8", ")", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.examples.attack_decode.explained_variance": [[52, 101], ["jax.nn.softmax", "jax.nn.softmax", "jax.nn.softmax", "numpy.zeros", "range", "attack_decode.explained_variance.keep_smallest_abs"], "function", ["None"], ["", "def", "explained_variance", "(", "I", ",", "\n", "private_images", ",", "\n", "lambdas", ",", "\n", "encoded_images", ",", "\n", "public_to_private", ",", "\n", "return_mat", "=", "False", ")", ":", "\n", "# private images: args.num_epochx32x32x3", "\n", "# encoded images: args.num_img*args.num_epoch x32x32x3", "\n", "\n", "    ", "public_to_private", "=", "jax", ".", "nn", ".", "softmax", "(", "public_to_private", ",", "axis", "=", "-", "1", ")", "\n", "\n", "# Now combine them together to get the variance we can explain", "\n", "merged", "=", "np", ".", "zeros", "(", "encoded_images", ".", "shape", ")", "\n", "for", "ik", "in", "range", "(", "k", ")", ":", "\n", "        ", "merged", "+=", "lambdas", "[", ":", ",", "ik", "]", "[", ":", ",", "None", ",", "None", ",", "None", "]", "*", "jn", ".", "dot", "(", "\n", "public_to_private", "[", "ik", "]", ",", "private_images", ".", "reshape", "(", "\n", "(", "args", ".", "num_img", ",", "-", "1", ")", ")", ")", ".", "reshape", "(", "\n", "(", "args", ".", "num_img", "*", "args", ".", "num_epoch", ",", "args", ".", "dim", ",", "args", ".", "dim", ",", "3", ")", ")", "\n", "\n", "# And now get the variance we can't explain.", "\n", "# This is the contribution of the public images.", "\n", "# We want this value to be small.", "\n", "\n", "", "def", "keep_smallest_abs", "(", "xx1", ",", "xx2", ")", ":", "\n", "        ", "t", "=", "0", "\n", "which", "=", "(", "jn", ".", "abs", "(", "xx1", "+", "t", ")", "<", "jn", ".", "abs", "(", "xx2", "+", "t", ")", ")", "+", "0.0", "\n", "return", "xx1", "*", "which", "+", "xx2", "*", "(", "1", "-", "which", ")", "\n", "\n", "", "if", "args", ".", "instahide", ":", "\n", "\n", "        ", "xx1", "=", "jn", ".", "abs", "(", "encoded", ")", "-", "merged", "\n", "xx2", "=", "-", "(", "jn", ".", "abs", "(", "encoded", ")", "+", "merged", ")", "\n", "\n", "xx", "=", "keep_smallest_abs", "(", "xx1", ",", "xx2", ")", "\n", "unexplained_variance", "=", "xx", "\n", "\n", "if", "return_mat", ":", "\n", "            ", "return", "unexplained_variance", ",", "xx1", ",", "xx2", "\n", "\n", "", "extra", "=", "(", "1", "-", "jn", ".", "abs", "(", "private_images", ")", ")", ".", "mean", "(", ")", "*", ".05", "\n", "\n", "return", "extra", "+", "(", "unexplained_variance", "**", "2", ")", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "diff", "=", "encoded", "-", "merged", "\n", "if", "return_mat", ":", "\n", "            ", "return", "diff", ",", "diff", ",", "diff", "\n", "\n", "", "extra", "=", "(", "1", "-", "jn", ".", "abs", "(", "private_images", ")", ")", ".", "mean", "(", ")", "*", ".05", "\n", "return", "extra", "+", "(", "diff", "**", "2", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.examples.attack_decode.setup": [[103, 130], ["numpy.zeros", "enumerate", "numpy.load", "numpy.load", "numpy.load", "list", "numpy.array", "enumerate", "numpy.load", "len", "x.append", "int"], "function", ["None"], ["", "", "def", "setup", "(", "encoded_p", "=", "None", ",", "lambdas_p", "=", "None", ",", "using_p", "=", "None", ")", ":", "\n", "    ", "global", "private", ",", "encoded", ",", "lambdas", ",", "using", "\n", "\n", "# Load all the things we've made.", "\n", "if", "encoded_p", "is", "None", ":", "\n", "        ", "encoded", "=", "np", ".", "load", "(", "\"data/encryption.npy\"", ")", "\n", "labels", "=", "np", ".", "load", "(", "\"data/label.npy\"", ")", "\n", "using", "=", "np", ".", "load", "(", "\"data/predicted_pairings_80.npy\"", ",", "allow_pickle", "=", "True", ")", "\n", "lambdas", "=", "list", "(", "\n", "np", ".", "load", "(", "\"data/predicted_lambdas_80.npy\"", ",", "allow_pickle", "=", "True", ")", ")", "\n", "for", "x", "in", "lambdas", ":", "\n", "            ", "while", "len", "(", "x", ")", "<", "2", ":", "\n", "                ", "x", ".", "append", "(", "0", ")", "\n", "", "", "lambdas", "=", "np", ".", "array", "(", "lambdas", ")", "\n", "", "else", ":", "\n", "        ", "encoded", "=", "encoded_p", "\n", "lambdas", "=", "lambdas_p", "\n", "using", "=", "using_p", "\n", "\n", "# Construct the mapping", "\n", "", "public_to_private_new", "=", "np", ".", "zeros", "(", "\n", "(", "k", ",", "args", ".", "num_img", "*", "args", ".", "num_epoch", ",", "args", ".", "num_img", ")", ")", "\n", "\n", "for", "i", ",", "row", "in", "enumerate", "(", "using", ")", ":", "\n", "        ", "for", "j", ",", "b", "in", "enumerate", "(", "row", ")", ":", "\n", "            ", "public_to_private_new", "[", "j", "]", "[", "i", "]", "[", "int", "(", "b", ")", "]", "=", "1e9", "\n", "", "", "using", "=", "public_to_private_new", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.examples.attack_decode.loss": [[132, 135], ["attack_decode.explained_variance", "jax.array", "jax.array"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.examples.attack_decode.explained_variance"], ["", "def", "loss", "(", "private", ",", "lams", ",", "I", ")", ":", "\n", "    ", "return", "explained_variance", "(", "I", ",", "private", ",", "lams", ",", "jn", ".", "array", "(", "encoded", ")", ",", "\n", "jn", ".", "array", "(", "using", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.examples.attack_decode.make_loss": [[137, 140], ["jax.jit", "jax.jit", "jax.jit", "jax.value_and_grad", "jax.value_and_grad", "jax.value_and_grad"], "function", ["None"], ["", "def", "make_loss", "(", ")", ":", "\n", "    ", "global", "vg", "\n", "vg", "=", "jax", ".", "jit", "(", "jax", ".", "value_and_grad", "(", "loss", ",", "argnums", "=", "(", "0", ",", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.examples.attack_decode.run": [[142, 195], ["numpy.zeros", "numpy.array", "numpy.array", "jax.experimental.optimizers.adam", "jax.experimental.optimizers.adam", "jax.experimental.optimizers.adam", "init_1", "range", "numpy.min", "numpy.max", "matplotlib.imshow", "matplotlib.axis", "os.makedirs", "opt_update_1", "vg", "attack_decode.run.update_1"], "function", ["None"], ["", "def", "run", "(", "mode", "=", "'grad'", ")", ":", "\n", "    ", "priv", "=", "np", ".", "zeros", "(", "(", "args", ".", "num_img", ",", "args", ".", "dim", ",", "args", ".", "dim", ",", "3", ")", ")", "\n", "uusing", "=", "np", ".", "array", "(", "using", ")", "\n", "lams", "=", "np", ".", "array", "(", "lambdas", ")", "\n", "\n", "# Use Adam, because thinking hard is overrated we have magic pixie dust.", "\n", "init_1", ",", "opt_update_1", ",", "get_params_1", "=", "jax", ".", "experimental", ".", "optimizers", ".", "adam", "(", ".01", ")", "\n", "\n", "@", "jax", ".", "jit", "\n", "def", "update_1", "(", "i", ",", "opt_state", ",", "gs", ")", ":", "\n", "        ", "return", "opt_update_1", "(", "i", ",", "gs", ",", "opt_state", ")", "\n", "\n", "", "opt_state_1", "=", "init_1", "(", "priv", ")", "\n", "\n", "# 1000 iterations of gradient descent is probably enough", "\n", "for", "i", "in", "range", "(", "1000", ")", ":", "\n", "        ", "value", ",", "grad", "=", "vg", "(", "priv", ",", "lams", ",", "i", ")", "\n", "\n", "if", "i", "%", "100", "==", "0", ":", "\n", "            ", "var", ",", "_", ",", "_", "=", "explained_variance", "(", "0", ",", "\n", "priv", ",", "\n", "jn", ".", "array", "(", "lambdas", ")", ",", "\n", "jn", ".", "array", "(", "encoded", ")", ",", "\n", "jn", ".", "array", "(", "using", ")", ",", "\n", "return_mat", "=", "True", ")", "\n", "print", "(", "'unexplained min/max'", ",", "var", ".", "min", "(", ")", ",", "var", ".", "max", "(", ")", ")", "\n", "", "opt_state_1", "=", "update_1", "(", "i", ",", "opt_state_1", ",", "grad", "[", "0", "]", ")", "\n", "priv", "=", "opt_state_1", ".", "packed_state", "[", "0", "]", "[", "0", "]", "\n", "\n", "", "priv", "-=", "np", ".", "min", "(", "priv", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ",", "keepdims", "=", "True", ")", "\n", "priv", "/=", "np", ".", "max", "(", "priv", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ",", "keepdims", "=", "True", ")", "\n", "\n", "priv", "*=", "2", "\n", "priv", "-=", "1", "\n", "\n", "# Finally save the stored values", "\n", "\n", "plt", ".", "imshow", "(", "toimg", "(", "priv", ")", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "# dest_dir = os.path.join('decode', SUB_ROOT_DIR)", "\n", "os", ".", "makedirs", "(", "dest_dir", ",", "exist_ok", "=", "True", ")", "\n", "if", "mode", "==", "'grad'", ":", "\n", "        ", "plt", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "dest_dir", ",", "'grad_decode.png'", ")", ",", "\n", "bbox_inches", "=", "'tight'", ",", "\n", "transparent", "=", "True", ",", "\n", "pad_inches", "=", "0", ")", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "dest_dir", ",", "'grad_decode.npy'", ")", ",", "priv", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "dest_dir", ",", "'vanilla_decode.png'", ")", ",", "\n", "bbox_inches", "=", "'tight'", ",", "\n", "transparent", "=", "True", ",", "\n", "pad_inches", "=", "0", ")", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "dest_dir", ",", "'vanilla_decode.npy'", ")", ",", "priv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.examples.attack_cifar10_gradinversion.setup_attack": [[24, 118], ["gradattack.utils.parse_args", "print", "torch.device", "pytorch_lightning.utilities.seed.seed_everything", "gradattack.datamodules.CIFAR10DataModule", "print", "pytorch_lightning.loggers.tensorboard.TensorBoardLogger", "pytorch_lightning.Trainer", "gradattack.trainingpipeline.TrainingPipeline", "gradattack.defenses.defense_utils.DefensePack", "gradattack.defenses.defense_utils.DefensePack.apply_defense", "print", "torch.nn.modules.loss.CrossEntropyLoss", "gradattack.models.create_lightning_module().to", "gradattack.datamodules.CIFAR10DataModule.setup", "os.makedirs", "gradattack.defenses.defense_utils.DefensePack.defense_params.keys", "gradattack.defenses.defense_utils.DefensePack.instahide_defense.cur_lams.cpu().numpy", "gradattack.defenses.defense_utils.DefensePack.instahide_defense.cur_selects.cpu().numpy", "numpy.savetxt", "numpy.savetxt", "gradattack.models.create_lightning_module().to", "gradattack.models.create_lightning_module().to", "gradattack.datamodules.CIFAR10DataModule.setup", "gradattack.datamodules.CIFAR10DataModule.setup", "str", "defense_pack.mixup_defense.cur_selects.cpu().numpy.astype", "gradattack.defenses.defense_utils.DefensePack.defense_params.keys", "gradattack.defenses.defense_utils.DefensePack.mixup_defense.cur_lams.cpu().numpy", "gradattack.defenses.defense_utils.DefensePack.mixup_defense.cur_selects.cpu().numpy", "numpy.savetxt", "numpy.savetxt", "gradattack.models.create_lightning_module", "gradattack.defenses.defense_utils.DefensePack.instahide_defense.cur_lams.cpu", "gradattack.defenses.defense_utils.DefensePack.instahide_defense.cur_selects.cpu", "defense_pack.mixup_defense.cur_selects.cpu().numpy.astype", "gradattack.models.create_lightning_module", "gradattack.models.create_lightning_module", "gradattack.defenses.defense_utils.DefensePack.mixup_defense.cur_lams.cpu", "gradattack.defenses.defense_utils.DefensePack.mixup_defense.cur_selects.cpu"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.parse_args", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense_utils.DefensePack.apply_defense", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.setup", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.setup", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.setup", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.create_lightning_module", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.create_lightning_module", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.create_lightning_module"], ["def", "setup_attack", "(", ")", ":", "\n", "    ", "\"\"\"Setup the pipeline for the attack\"\"\"", "\n", "args", ",", "hparams", ",", "attack_hparams", "=", "parse_args", "(", ")", "\n", "print", "(", "attack_hparams", ")", "\n", "\n", "global", "ROOT_DIR", ",", "DEVICE", ",", "EPOCH", "\n", "\n", "DEVICE", "=", "torch", ".", "device", "(", "f\"cuda:{args.gpuid}\"", ")", "\n", "EPOCH", "=", "attack_hparams", "[", "\"epoch\"", "]", "\n", "\n", "pl", ".", "utilities", ".", "seed", ".", "seed_everything", "(", "1234", "+", "EPOCH", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "BN_str", "=", "''", "\n", "\n", "if", "not", "args", ".", "attacker_eval_mode", ":", "\n", "        ", "BN_str", "+=", "\"-attacker_train\"", "\n", "", "if", "not", "args", ".", "defender_eval_mode", ":", "\n", "        ", "BN_str", "+=", "'-defender_train'", "\n", "", "if", "args", ".", "BN_exact", ":", "\n", "        ", "BN_str", "=", "'BN_exact'", "\n", "attack_hparams", "[", "'attacker_eval_mode'", "]", "=", "False", "\n", "\n", "", "datamodule", "=", "CIFAR10DataModule", "(", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "augment", "=", "{", "\n", "\"hflip\"", ":", "False", ",", "\n", "\"color_jitter\"", ":", "None", ",", "\n", "\"rotation\"", ":", "-", "1", ",", "\n", "\"crop\"", ":", "False", "\n", "}", ",", "\n", "num_workers", "=", "1", ",", "\n", "seed", "=", "args", ".", "data_seed", ")", "\n", "print", "(", "\"Loaded data!\"", ")", "\n", "if", "args", ".", "defense_instahide", "or", "args", ".", "defense_mixup", ":", "# Customize loss", "\n", "        ", "loss", "=", "cross_entropy_for_onehot", "\n", "", "else", ":", "\n", "        ", "loss", "=", "CrossEntropyLoss", "(", "reduction", "=", "\"mean\"", ")", "\n", "\n", "", "if", "args", ".", "defense_instahide", ":", "\n", "        ", "model", "=", "create_lightning_module", "(", "\"ResNet18\"", ",", "\n", "datamodule", ".", "num_classes", ",", "\n", "training_loss_metric", "=", "loss", ",", "\n", "pretrained", "=", "False", ",", "\n", "ckpt", "=", "\"checkpoint/InstaHide_ckpt.ckpt\"", ",", "\n", "**", "hparams", ")", ".", "to", "(", "DEVICE", ")", "\n", "", "elif", "args", ".", "defense_mixup", ":", "\n", "        ", "model", "=", "create_lightning_module", "(", "\"ResNet18\"", ",", "\n", "datamodule", ".", "num_classes", ",", "\n", "training_loss_metric", "=", "loss", ",", "\n", "pretrained", "=", "False", ",", "\n", "ckpt", "=", "\"checkpoint/Mixup_ckpt.ckpt\"", ",", "\n", "**", "hparams", ")", ".", "to", "(", "DEVICE", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "create_lightning_module", "(", "\n", "\"ResNet18\"", ",", "\n", "datamodule", ".", "num_classes", ",", "\n", "training_loss_metric", "=", "loss", ",", "\n", "pretrained", "=", "False", ",", "\n", "ckpt", "=", "\"checkpoint/vanilla_epoch=1-step=1531.ckpt\"", ",", "\n", "**", "hparams", ")", ".", "to", "(", "DEVICE", ")", "\n", "\n", "", "logger", "=", "TensorBoardLogger", "(", "\"tb_logs\"", ",", "name", "=", "f\"{args.logname}\"", ")", "\n", "trainer", "=", "pl", ".", "Trainer", "(", "benchmark", "=", "True", ",", "logger", "=", "logger", ")", "\n", "pipeline", "=", "TrainingPipeline", "(", "model", ",", "datamodule", ",", "trainer", ")", "\n", "\n", "defense_pack", "=", "DefensePack", "(", "args", ",", "logger", ")", "\n", "if", "attack_hparams", "[", "\"mini\"", "]", ":", "\n", "        ", "datamodule", ".", "setup", "(", "\"attack_mini\"", ")", "\n", "", "elif", "attack_hparams", "[", "\"large\"", "]", ":", "\n", "        ", "datamodule", ".", "setup", "(", "\"attack_large\"", ")", "\n", "", "else", ":", "\n", "        ", "datamodule", ".", "setup", "(", "\"attack\"", ")", "\n", "\n", "", "defense_pack", ".", "apply_defense", "(", "pipeline", ")", "\n", "\n", "ROOT_DIR", "=", "f\"{args.results_dir}/CIFAR10-{args.batch_size}-{str(defense_pack)}/tv={attack_hparams['total_variation']}{BN_str}-bn={attack_hparams['bn_reg']}-dataseed={args.data_seed}/Epoch_{EPOCH}\"", "\n", "try", ":", "\n", "        ", "os", ".", "makedirs", "(", "ROOT_DIR", ",", "exist_ok", "=", "True", ")", "\n", "", "except", "FileExistsError", ":", "\n", "        ", "pass", "\n", "", "print", "(", "\"storing in root dir\"", ",", "ROOT_DIR", ")", "\n", "\n", "if", "\"InstaHideDefense\"", "in", "defense_pack", ".", "defense_params", ".", "keys", "(", ")", ":", "\n", "        ", "cur_lams", "=", "defense_pack", ".", "instahide_defense", ".", "cur_lams", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "cur_selects", "=", "defense_pack", ".", "instahide_defense", ".", "cur_selects", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "np", ".", "savetxt", "(", "f\"{ROOT_DIR}/epoch_lams.txt\"", ",", "cur_lams", ")", "\n", "np", ".", "savetxt", "(", "f\"{ROOT_DIR}/epoch_selects.txt\"", ",", "cur_selects", ".", "astype", "(", "int", ")", ")", "\n", "", "elif", "\"MixupDefense\"", "in", "defense_pack", ".", "defense_params", ".", "keys", "(", ")", ":", "\n", "        ", "cur_lams", "=", "defense_pack", ".", "mixup_defense", ".", "cur_lams", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "cur_selects", "=", "defense_pack", ".", "mixup_defense", ".", "cur_selects", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "np", ".", "savetxt", "(", "f\"{ROOT_DIR}/epoch_lams.txt\"", ",", "cur_lams", ")", "\n", "np", ".", "savetxt", "(", "f\"{ROOT_DIR}/epoch_selects.txt\"", ",", "cur_selects", ".", "astype", "(", "int", ")", ")", "\n", "\n", "", "return", "pipeline", ",", "attack_hparams", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.examples.attack_cifar10_gradinversion.run_attack": [[120, 196], ["pipeline.datamodule.train_dataloader", "enumerate", "os.makedirs", "gradattack.utils.save_fig", "gradattack.utils.save_fig", "model.get_batch_gradients", "gradattack.utils.save_fig", "gradattack.utils.save_fig", "gradattack.attacks.gradientinversion.GradientReconstructor", "pytorch_lightning.loggers.tensorboard.TensorBoardLogger", "pytorch_lightning.Trainer", "pl.Trainer.fit", "gradattack.attacks.gradientinversion.GradientReconstructor.best_guess.detach().to", "gradattack.utils.save_fig", "gradattack.utils.save_fig", "gradattack.utils.patch_image", "batch_inputs.to", "batch_targets.to", "gradattack.utils.patch_image", "gradattack.utils.patch_image", "gradattack.attacks.gradientinversion.GradientReconstructor.best_guess.detach"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.train_dataloader", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.save_fig", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.save_fig", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.get_batch_gradients", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.save_fig", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.save_fig", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.save_fig", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.save_fig", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.patch_image", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.patch_image", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.patch_image"], ["", "def", "run_attack", "(", "pipeline", ",", "attack_hparams", ")", ":", "\n", "    ", "\"\"\"Launch the real attack\"\"\"", "\n", "trainloader", "=", "pipeline", ".", "datamodule", ".", "train_dataloader", "(", ")", "\n", "model", "=", "pipeline", ".", "model", "\n", "\n", "for", "batch_idx", ",", "(", "batch_inputs", ",", "batch_targets", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "BATCH_ROOT_DIR", "=", "ROOT_DIR", "+", "f\"/{batch_idx}\"", "\n", "os", ".", "makedirs", "(", "BATCH_ROOT_DIR", ",", "exist_ok", "=", "True", ")", "\n", "save_fig", "(", "batch_inputs", ",", "\n", "f\"{BATCH_ROOT_DIR}/original.png\"", ",", "\n", "save_npy", "=", "True", ",", "\n", "save_fig", "=", "False", ")", "\n", "save_fig", "(", "patch_image", "(", "batch_inputs", ")", ",", "\n", "f\"{BATCH_ROOT_DIR}/original.png\"", ",", "\n", "save_npy", "=", "False", ")", "\n", "\n", "batch_inputs", ",", "batch_targets", "=", "batch_inputs", ".", "to", "(", "\n", "DEVICE", ")", ",", "batch_targets", ".", "to", "(", "DEVICE", ")", "\n", "\n", "batch_gradients", ",", "step_results", "=", "model", ".", "get_batch_gradients", "(", "\n", "(", "batch_inputs", ",", "batch_targets", ")", ",", "\n", "batch_idx", ",", "\n", "eval_mode", "=", "attack_hparams", "[", "\"defender_eval_mode\"", "]", ",", "\n", "apply_transforms", "=", "True", ",", "\n", "stop_track_bn_stats", "=", "False", ",", "\n", "BN_exact", "=", "attack_hparams", "[", "\"BN_exact\"", "]", ")", "\n", "batch_inputs_transform", ",", "batch_targets_transform", "=", "step_results", "[", "\n", "\"transformed_batch\"", "]", "\n", "\n", "save_fig", "(", "\n", "batch_inputs_transform", ",", "\n", "f\"{BATCH_ROOT_DIR}/transformed.png\"", ",", "\n", "save_npy", "=", "True", ",", "\n", "save_fig", "=", "False", ",", "\n", ")", "\n", "save_fig", "(", "\n", "patch_image", "(", "batch_inputs_transform", ")", ",", "\n", "f\"{BATCH_ROOT_DIR}/transformed.png\"", ",", "\n", "save_npy", "=", "False", ",", "\n", ")", "\n", "\n", "attack", "=", "GradientReconstructor", "(", "\n", "pipeline", ",", "\n", "ground_truth_inputs", "=", "batch_inputs_transform", ",", "\n", "ground_truth_gradients", "=", "batch_gradients", ",", "\n", "ground_truth_labels", "=", "batch_targets_transform", ",", "\n", "reconstruct_labels", "=", "attack_hparams", "[", "\"reconstruct_labels\"", "]", ",", "\n", "num_iterations", "=", "10000", ",", "\n", "signed_gradients", "=", "True", ",", "\n", "signed_image", "=", "attack_hparams", "[", "\"signed_image\"", "]", ",", "\n", "boxed", "=", "True", ",", "\n", "total_variation", "=", "attack_hparams", "[", "\"total_variation\"", "]", ",", "\n", "bn_reg", "=", "attack_hparams", "[", "\"bn_reg\"", "]", ",", "\n", "lr_scheduler", "=", "True", ",", "\n", "lr", "=", "attack_hparams", "[", "\"attack_lr\"", "]", ",", "\n", "mean_std", "=", "(", "dm", ",", "ds", ")", ",", "\n", "attacker_eval_mode", "=", "attack_hparams", "[", "\"attacker_eval_mode\"", "]", ",", "\n", "BN_exact", "=", "attack_hparams", "[", "\"BN_exact\"", "]", ")", "\n", "\n", "tb_logger", "=", "TensorBoardLogger", "(", "BATCH_ROOT_DIR", ",", "name", "=", "\"tb_log\"", ")", "\n", "attack_trainer", "=", "pl", ".", "Trainer", "(", "\n", "logger", "=", "tb_logger", ",", "\n", "max_epochs", "=", "1", ",", "\n", "benchmark", "=", "True", ",", "\n", "checkpoint_callback", "=", "False", ",", "\n", ")", "\n", "attack_trainer", ".", "fit", "(", "attack", ")", "\n", "result", "=", "attack", ".", "best_guess", ".", "detach", "(", ")", ".", "to", "(", "\"cpu\"", ")", "\n", "\n", "save_fig", "(", "result", ",", "\n", "f\"{BATCH_ROOT_DIR}/reconstructed.png\"", ",", "\n", "save_npy", "=", "True", ",", "\n", "save_fig", "=", "False", ")", "\n", "save_fig", "(", "patch_image", "(", "result", ")", ",", "\n", "f\"{BATCH_ROOT_DIR}/reconstructed.png\"", ",", "\n", "save_npy", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.examples.calc_metric.parse_args": [[15, 21], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"gradattack training\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--dir\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"--decode_defense\"", ",", "action", "=", "\"store_true\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.trainingpipeline.TrainingPipeline.__init__": [[7, 22], ["trainingpipeline.TrainingPipeline.datamodule.setup"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.setup"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "model", ":", "LightningWrapper", ",", "\n", "datamodule", ":", "pl", ".", "LightningDataModule", ",", "\n", "trainer", ":", "pl", ".", "Trainer", ",", "\n", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "datamodule", "=", "datamodule", "\n", "self", ".", "trainer", "=", "trainer", "\n", "self", ".", "applied_defenses", "=", "[", "]", "\n", "self", ".", "_data_transformations", "=", "[", "]", "# Modifications to the dataloader", "\n", "self", ".", "_model_transformations", "=", "(", "\n", "[", "]", "\n", ")", "# Modifications to the model architecture, trainable params ...", "\n", "self", ".", "datamodule", ".", "setup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.trainingpipeline.TrainingPipeline.log_hparams": [[24, 26], ["trainingpipeline.TrainingPipeline.trainer.logger.log_hyperparams"], "methods", ["None"], ["", "def", "log_hparams", "(", "self", ")", ":", "\n", "        ", "self", ".", "trainer", ".", "logger", ".", "log_hyperparams", "(", "self", ".", "model", ".", "hparams", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.trainingpipeline.TrainingPipeline.setup_pipeline": [[27, 37], ["trainingpipeline.TrainingPipeline.datamodule.prepare_data", "transform", "transform", "len"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.prepare_data"], ["", "def", "setup_pipeline", "(", "self", ")", ":", "\n", "        ", "self", ".", "datamodule", ".", "prepare_data", "(", ")", "\n", "\n", "for", "transform", "in", "self", ".", "_data_transformations", ":", "\n", "            ", "transform", "(", "self", ".", "datamodule", ")", "\n", "", "for", "transform", "in", "self", ".", "_model_transformations", ":", "\n", "            ", "transform", "(", "self", ".", "model", ")", "\n", "\n", "", "if", "len", "(", "self", ".", "_data_transformations", ")", ">", "0", ":", "\n", "            ", "assert", "self", ".", "datamodule", ".", "batch_sampler", "!=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.trainingpipeline.TrainingPipeline.run": [[38, 42], ["trainingpipeline.TrainingPipeline.setup_pipeline", "trainingpipeline.TrainingPipeline.trainer.fit"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.trainingpipeline.TrainingPipeline.setup_pipeline"], ["", "", "def", "run", "(", "self", ")", ":", "\n", "        ", "self", ".", "setup_pipeline", "(", ")", "\n", "# If we didn't call setup(), any updates to transforms (e.g. from defenses) wouldn't be applied", "\n", "return", "self", ".", "trainer", ".", "fit", "(", "self", ".", "model", ",", "self", ".", "datamodule", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.trainingpipeline.TrainingPipeline.test": [[43, 46], ["trainingpipeline.TrainingPipeline.trainer.test", "trainingpipeline.TrainingPipeline.datamodule.test_dataloader"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.test", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.test_dataloader"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "trainer", ".", "test", "(", "\n", "self", ".", "model", ",", "test_dataloaders", "=", "self", ".", "datamodule", ".", "test_dataloader", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.trainingpipeline.TrainingPipeline.get_datamodule_batch": [[48, 53], ["trainingpipeline.TrainingPipeline.datamodule.setup", "trainingpipeline.TrainingPipeline.datamodule.train_dataloader"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.setup", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.train_dataloader"], ["", "def", "get_datamodule_batch", "(", "self", ")", ":", "\n", "        ", "self", ".", "datamodule", ".", "setup", "(", ")", "\n", "trainloader", "=", "self", ".", "datamodule", ".", "train_dataloader", "(", ")", "\n", "for", "batch", "in", "trainloader", ":", "\n", "            ", "return", "batch", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.StandardizeLayer.__init__": [[355, 362], ["torch.Module.__init__", "numpy.zeros", "numpy.ones", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.StandardizeLayer.forward": [[363, 368], ["utils.standardize", "utils.StandardizeLayer.bn_stats[].to", "utils.StandardizeLayer.bn_stats[].to"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.standardize"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.parse_args": [[21, 285], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.parse_args"], ["\"affine\"", ":", "False", ",", "\n", "}", "\n", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.parse_augmentation": [[287, 299], ["float"], "function", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.get_mean_and_std": [[302, 318], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "print", "torch.zeros.div_", "torch.zeros.div_", "range", "len", "len", "inputs[].mean", "inputs[].std"], "function", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.save_fig": [[320, 336], ["torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "np.transpose.cpu().detach", "len", "numpy.transpose", "numpy.save", "matplotlib.imshow", "matplotlib.axis", "matplotlib.savefig", "matplotlib.show", "len", "numpy.transpose", "re.sub", "np.transpose.cpu", "np.transpose.min", "np.transpose.max", "np.transpose.min"], "function", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.standardize": [[338, 352], ["torch.sqrt", "torch.sqrt", "torch.sqrt"], "function", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.cross_entropy_for_onehot": [[370, 373], ["torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum", "torch.nn.functional.log_softmax"], "function", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.patch_image": [[375, 401], ["torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "len", "np.transpose.cpu().detach().numpy", "len", "numpy.transpose", "numpy.append", "int", "numpy.reshape", "numpy.concatenate", "numpy.concatenate", "numpy.transpose", "numpy.reshape", "numpy.concatenate", "numpy.concatenate", "numpy.transpose", "np.transpose.cpu().detach", "int", "numpy.zeros", "int", "numpy.sqrt", "numpy.sqrt", "np.transpose.cpu", "math.ceil"], "function", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.FileDataModule.__init__": [[68, 82], ["torchvision.Compose", "torchvision.Compose"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "data_dir", ":", "str", "=", "DEFAULT_DATA_DIR", ",", "\n", "transform", ":", "torch", ".", "nn", ".", "Module", "=", "transforms", ".", "Compose", "(", "TRANSFORM_IMAGENET", ")", ",", "\n", "batch_size", ":", "int", "=", "32", ",", "\n", "num_workers", ":", "int", "=", "DEFAULT_NUM_WORKERS", ",", "\n", "batch_sampler", ":", "Sampler", "=", "None", ",", "\n", ")", ":", "\n", "        ", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "num_workers", "=", "num_workers", "\n", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "batch_sampler", "=", "batch_sampler", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.FileDataModule.setup": [[83, 86], ["torchvision.ImageFolder", "torchvision.ImageFolder"], "methods", ["None"], ["", "def", "setup", "(", "self", ",", "stage", ":", "Optional", "[", "str", "]", "=", "None", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "datasets", ".", "ImageFolder", "(", "self", ".", "data_dir", ",", "\n", "transform", "=", "self", ".", "transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.FileDataModule.get_dataloader": [[87, 91], ["torch.utils.data.dataloader.DataLoader"], "methods", ["None"], ["", "def", "get_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "DataLoader", "(", "self", ".", "dataset", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.FileDataModule.train_dataloader": [[92, 94], ["datamodules.FileDataModule.get_dataloader"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.FileDataModule.get_dataloader"], ["", "def", "train_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "get_dataloader", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.FileDataModule.test_dataloader": [[95, 97], ["datamodules.FileDataModule.get_dataloader"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.FileDataModule.get_dataloader"], ["", "def", "test_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "get_dataloader", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.ImageNetDataModule.__init__": [[100, 155], ["os.path.join", "print", "torchvision.Normalize", "torchvision.Normalize", "print", "torchvision.Resize", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.ToTensor", "datamodules.ImageNetDataModule._train_transforms.insert", "datamodules.ImageNetDataModule._train_transforms.insert", "datamodules.ImageNetDataModule._train_transforms.insert", "datamodules.ImageNetDataModule._train_transforms.insert", "torchvision.Resize", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.RandomHorizontalFlip", "torchvision.RandomHorizontalFlip", "torchvision.ColorJitter", "torchvision.ColorJitter", "torchvision.RandomRotation", "torchvision.RandomRotation", "torchvision.RandomCrop", "torchvision.RandomCrop"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "augment", ":", "dict", "=", "None", ",", "\n", "data_dir", ":", "str", "=", "os", ".", "path", ".", "join", "(", "DEFAULT_DATA_DIR", ",", "\"imagenet\"", ")", ",", "\n", "batch_size", ":", "int", "=", "32", ",", "\n", "num_workers", ":", "int", "=", "DEFAULT_NUM_WORKERS", ",", "\n", "batch_sampler", ":", "Sampler", "=", "None", ",", "\n", "tune_on_val", ":", "bool", "=", "False", ",", "\n", ")", ":", "\n", "        ", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "num_workers", "=", "num_workers", "\n", "self", ".", "num_classes", "=", "1000", "\n", "self", ".", "multi_class", "=", "False", "\n", "\n", "self", ".", "batch_sampler", "=", "batch_sampler", "\n", "self", ".", "tune_on_val", "=", "tune_on_val", "\n", "\n", "print", "(", "data_dir", ")", "\n", "imagenet_normalize", "=", "transforms", ".", "Normalize", "(", "(", "0.485", ",", "0.456", ",", "0.406", ")", ",", "\n", "(", "0.229", ",", "0.224", ",", "0.225", ")", ")", "\n", "\n", "self", ".", "_train_transforms", "=", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "imagenet_normalize", ",", "\n", "]", "\n", "if", "augment", "[", "\"hflip\"", "]", ":", "\n", "            ", "self", ".", "_train_transforms", ".", "insert", "(", "\n", "0", ",", "transforms", ".", "RandomHorizontalFlip", "(", "p", "=", "0.5", ")", ")", "\n", "", "if", "augment", "[", "\"color_jitter\"", "]", "is", "not", "None", ":", "\n", "            ", "self", ".", "_train_transforms", ".", "insert", "(", "\n", "0", ",", "\n", "transforms", ".", "ColorJitter", "(", "\n", "brightness", "=", "augment", "[", "\"color_jitter\"", "]", "[", "0", "]", ",", "\n", "contrast", "=", "augment", "[", "\"color_jitter\"", "]", "[", "1", "]", ",", "\n", "saturation", "=", "augment", "[", "\"color_jitter\"", "]", "[", "2", "]", ",", "\n", "hue", "=", "augment", "[", "\"color_jitter\"", "]", "[", "3", "]", ",", "\n", ")", ",", "\n", ")", "\n", "", "if", "augment", "[", "\"rotation\"", "]", ">", "0", ":", "\n", "            ", "self", ".", "_train_transforms", ".", "insert", "(", "\n", "0", ",", "transforms", ".", "RandomRotation", "(", "augment", "[", "\"rotation\"", "]", ")", ")", "\n", "", "if", "augment", "[", "\"crop\"", "]", ":", "\n", "            ", "self", ".", "_train_transforms", ".", "insert", "(", "0", ",", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ")", "\n", "\n", "", "print", "(", "self", ".", "_train_transforms", ")", "\n", "\n", "self", ".", "_test_transforms", "=", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "imagenet_normalize", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.ImageNetDataModule.setup": [[157, 201], ["torchvision.ImageFolder", "torchvision.ImageFolder", "torchvision.ImageFolder", "torchvision.ImageFolder", "torchvision.ImageFolder", "torchvision.ImageFolder", "datamodules.extract_attack_set", "torch.utils.data.Subset", "os.path.join", "torchvision.ImageFolder", "torchvision.ImageFolder", "datamodules.train_val_split", "torch.utils.data.Subset", "torch.utils.data.Subset", "torchvision.ImageFolder", "torchvision.ImageFolder", "os.path.join", "os.path.join", "torchvision.Compose", "torchvision.Compose", "os.path.join", "len", "os.path.join", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.extract_attack_set", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.train_val_split"], ["", "def", "setup", "(", "self", ",", "stage", ":", "Optional", "[", "str", "]", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize the dataset based on the stage option ('fit', 'test' or 'attack'):\n        - if stage is 'fit', set up the training and validation dataset;\n        - if stage is 'test', set up the testing dataset;\n        - if stage is 'attack', set up the attack dataset (a subset of training images)\n\n        Args:\n            stage (Optional[str], optional): stage option. Defaults to None.\n        \"\"\"", "\n", "if", "stage", "==", "\"fit\"", "or", "stage", "is", "None", ":", "\n", "            ", "self", ".", "train_set", "=", "datasets", ".", "ImageFolder", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "data_dir", ",", "\"train\"", ")", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_train_transforms", ")", ",", "\n", ")", "\n", "if", "self", ".", "tune_on_val", ":", "\n", "                ", "self", ".", "val_set", "=", "datasets", ".", "ImageFolder", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "data_dir", ",", "\"train\"", ")", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_test_transforms", ")", ",", "\n", ")", "\n", "train_indices", ",", "val_indices", "=", "train_val_split", "(", "\n", "len", "(", "self", ".", "train_set", ")", ",", "self", ".", "tune_on_val", ")", "\n", "self", ".", "train_set", "=", "Subset", "(", "self", ".", "train_set", ",", "train_indices", ")", "\n", "self", ".", "val_set", "=", "Subset", "(", "self", ".", "val_set", ",", "val_indices", ")", "\n", "", "else", ":", "# use test set", "\n", "                ", "self", ".", "val_set", "=", "datasets", ".", "ImageFolder", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "data_dir", ",", "\"val\"", ")", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_test_transforms", ")", ",", "\n", ")", "\n", "\n", "# Assign test dataset for use in dataloader(s)", "\n", "", "", "if", "stage", "==", "\"test\"", "or", "stage", "is", "None", ":", "\n", "            ", "self", ".", "test_set", "=", "datasets", ".", "ImageFolder", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "data_dir", ",", "\"val\"", ")", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_test_transforms", ")", ",", "\n", ")", "\n", "\n", "", "if", "stage", "==", "\"attack\"", ":", "\n", "            ", "ori_train_set", "=", "datasets", ".", "ImageFolder", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "data_dir", ",", "\"attack\"", ")", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_train_transforms", ")", ",", "\n", ")", "\n", "self", ".", "attack_indices", ",", "self", ".", "class2attacksample", "=", "extract_attack_set", "(", "\n", "ori_train_set", ")", "\n", "self", ".", "train_set", "=", "Subset", "(", "ori_train_set", ",", "self", ".", "attack_indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.ImageNetDataModule.train_dataloader": [[202, 212], ["torch.utils.data.dataloader.DataLoader", "torch.utils.data.dataloader.DataLoader"], "methods", ["None"], ["", "", "def", "train_dataloader", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "batch_sampler", "is", "None", ":", "\n", "            ", "return", "DataLoader", "(", "self", ".", "train_set", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ")", "\n", "", "else", ":", "\n", "            ", "return", "DataLoader", "(", "\n", "self", ".", "train_set", ",", "\n", "batch_sampler", "=", "self", ".", "batch_sampler", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.ImageNetDataModule.val_dataloader": [[214, 218], ["torch.utils.data.dataloader.DataLoader"], "methods", ["None"], ["", "", "def", "val_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "DataLoader", "(", "self", ".", "val_set", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.ImageNetDataModule.test_dataloader": [[219, 223], ["torch.utils.data.dataloader.DataLoader"], "methods", ["None"], ["", "def", "test_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "DataLoader", "(", "self", ".", "test_set", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.MNISTDataModule.__init__": [[226, 286], ["pytorch_lightning.core.datamodule.LightningDataModule.__init__", "torchvision.Normalize", "torchvision.Normalize", "print", "datamodules.MNISTDataModule.prepare_data", "torchvision.Resize", "torchvision.Resize", "torchvision.Grayscale", "torchvision.Grayscale", "torchvision.ToTensor", "torchvision.ToTensor", "datamodules.MNISTDataModule._train_transforms.insert", "datamodules.MNISTDataModule._train_transforms.insert", "datamodules.MNISTDataModule._train_transforms.insert", "datamodules.MNISTDataModule._train_transforms.insert", "torchvision.Resize", "torchvision.Resize", "torchvision.Grayscale", "torchvision.Grayscale", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.RandomHorizontalFlip", "torchvision.RandomHorizontalFlip", "torchvision.ColorJitter", "torchvision.ColorJitter", "torchvision.RandomRotation", "torchvision.RandomRotation", "torchvision.RandomCrop", "torchvision.RandomCrop"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.prepare_data"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "augment", ":", "dict", "=", "None", ",", "\n", "batch_size", ":", "int", "=", "32", ",", "\n", "data_dir", ":", "str", "=", "DEFAULT_DATA_DIR", ",", "\n", "num_workers", ":", "int", "=", "DEFAULT_NUM_WORKERS", ",", "\n", "batch_sampler", ":", "Sampler", "=", "None", ",", "\n", "tune_on_val", ":", "float", "=", "0", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_has_setup_attack", "=", "False", "\n", "\n", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "num_workers", "=", "num_workers", "\n", "self", ".", "dims", "=", "(", "3", ",", "32", ",", "32", ")", "\n", "self", ".", "num_classes", "=", "10", "\n", "\n", "self", ".", "batch_sampler", "=", "batch_sampler", "\n", "self", ".", "tune_on_val", "=", "tune_on_val", "\n", "self", ".", "multi_class", "=", "False", "\n", "\n", "mnist_normalize", "=", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "\n", "\n", "self", ".", "_train_transforms", "=", "[", "\n", "transforms", ".", "Resize", "(", "32", ")", ",", "\n", "transforms", ".", "Grayscale", "(", "3", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "mnist_normalize", ",", "\n", "]", "\n", "if", "augment", "[", "\"hflip\"", "]", ":", "\n", "            ", "self", ".", "_train_transforms", ".", "insert", "(", "\n", "0", ",", "transforms", ".", "RandomHorizontalFlip", "(", "p", "=", "0.5", ")", ")", "\n", "", "if", "augment", "[", "\"color_jitter\"", "]", "is", "not", "None", ":", "\n", "            ", "self", ".", "_train_transforms", ".", "insert", "(", "\n", "0", ",", "\n", "transforms", ".", "ColorJitter", "(", "\n", "brightness", "=", "augment", "[", "\"color_jitter\"", "]", "[", "0", "]", ",", "\n", "contrast", "=", "augment", "[", "\"color_jitter\"", "]", "[", "1", "]", ",", "\n", "saturation", "=", "augment", "[", "\"color_jitter\"", "]", "[", "2", "]", ",", "\n", "hue", "=", "augment", "[", "\"color_jitter\"", "]", "[", "3", "]", ",", "\n", ")", ",", "\n", ")", "\n", "", "if", "augment", "[", "\"rotation\"", "]", ">", "0", ":", "\n", "            ", "self", ".", "_train_transforms", ".", "insert", "(", "\n", "0", ",", "transforms", ".", "RandomRotation", "(", "augment", "[", "\"rotation\"", "]", ")", ")", "\n", "", "if", "augment", "[", "\"crop\"", "]", ":", "\n", "            ", "self", ".", "_train_transforms", ".", "insert", "(", "0", ",", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ")", "\n", "\n", "", "print", "(", "self", ".", "_train_transforms", ")", "\n", "\n", "self", ".", "_test_transforms", "=", "[", "\n", "transforms", ".", "Resize", "(", "32", ")", ",", "\n", "transforms", ".", "Grayscale", "(", "3", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "mnist_normalize", ",", "\n", "]", "\n", "\n", "self", ".", "prepare_data", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.MNISTDataModule.prepare_data": [[287, 290], ["torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST"], "methods", ["None"], ["", "def", "prepare_data", "(", "self", ")", ":", "\n", "        ", "MNIST", "(", "self", ".", "data_dir", ",", "train", "=", "True", ",", "download", "=", "True", ")", "\n", "MNIST", "(", "self", ".", "data_dir", ",", "train", "=", "False", ",", "download", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.MNISTDataModule.setup": [[291, 361], ["torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "datamodules.extract_attack_set", "torch.utils.data.Subset", "torch.utils.data.Subset", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "datamodules.train_val_split", "torch.utils.data.Subset", "torch.utils.data.Subset", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "range", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "datamodules.extract_attack_set", "torch.utils.data.Subset", "torch.utils.data.Subset", "torchvision.Compose", "torchvision.Compose", "len", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "range", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "datamodules.extract_attack_set", "torch.utils.data.Subset", "torch.utils.data.Subset", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "range", "torchvision.Compose", "torchvision.Compose"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.extract_attack_set", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.train_val_split", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.extract_attack_set", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.extract_attack_set"], ["", "def", "setup", "(", "self", ",", "stage", ":", "Optional", "[", "str", "]", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize the dataset based on the stage option ('fit', 'test' or 'attack'):\n        - if stage is 'fit', set up the training and validation dataset;\n        - if stage is 'test', set up the testing dataset;\n        - if stage is 'attack', set up the attack dataset (a subset of training images)\n\n        Args:\n            stage (Optional[str], optional): stage option. Defaults to None.\n        \"\"\"", "\n", "if", "stage", "==", "\"fit\"", "or", "stage", "is", "None", ":", "\n", "            ", "self", ".", "train_set", "=", "MNIST", "(", "\n", "self", ".", "data_dir", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_train_transforms", ")", ",", "\n", ")", "\n", "if", "self", ".", "tune_on_val", ":", "\n", "                ", "self", ".", "val_set", "=", "MNIST", "(", "\n", "self", ".", "data_dir", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_test_transforms", ")", ",", "\n", ")", "\n", "train_indices", ",", "val_indices", "=", "train_val_split", "(", "\n", "len", "(", "self", ".", "train_set", ")", ",", "self", ".", "tune_on_val", ")", "\n", "self", ".", "train_set", "=", "Subset", "(", "self", ".", "train_set", ",", "train_indices", ")", "\n", "self", ".", "val_set", "=", "Subset", "(", "self", ".", "val_set", ",", "val_indices", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "val_set", "=", "MNIST", "(", "\n", "self", ".", "data_dir", ",", "\n", "train", "=", "False", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_test_transforms", ")", ",", "\n", ")", "\n", "\n", "# Assign test dataset for use in dataloader(s)", "\n", "", "", "if", "stage", "==", "\"test\"", "or", "stage", "is", "None", ":", "\n", "            ", "self", ".", "test_set", "=", "MNIST", "(", "\n", "self", ".", "data_dir", ",", "\n", "train", "=", "False", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_test_transforms", ")", ",", "\n", ")", "\n", "\n", "", "if", "stage", "==", "\"attack\"", ":", "\n", "            ", "ori_train_set", "=", "MNIST", "(", "\n", "self", ".", "data_dir", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_train_transforms", ")", ",", "\n", ")", "\n", "self", ".", "attack_indices", ",", "self", ".", "class2attacksample", "=", "extract_attack_set", "(", "\n", "ori_train_set", ")", "\n", "self", ".", "train_set", "=", "Subset", "(", "ori_train_set", ",", "self", ".", "attack_indices", ")", "\n", "self", ".", "test_set", "=", "Subset", "(", "self", ".", "test_set", ",", "range", "(", "100", ")", ")", "\n", "", "elif", "stage", "==", "\"attack_mini\"", ":", "\n", "            ", "ori_train_set", "=", "MNIST", "(", "\n", "self", ".", "data_dir", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_train_transforms", ")", ",", "\n", ")", "\n", "self", ".", "attack_indices", ",", "self", ".", "class2attacksample", "=", "extract_attack_set", "(", "\n", "ori_train_set", ",", "sample_per_class", "=", "2", ")", "\n", "self", ".", "train_set", "=", "Subset", "(", "ori_train_set", ",", "self", ".", "attack_indices", ")", "\n", "self", ".", "test_set", "=", "Subset", "(", "self", ".", "test_set", ",", "range", "(", "100", ")", ")", "\n", "", "elif", "stage", "==", "\"attack_large\"", ":", "\n", "            ", "ori_train_set", "=", "MNIST", "(", "\n", "self", ".", "data_dir", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_train_transforms", ")", ",", "\n", ")", "\n", "self", ".", "attack_indices", ",", "self", ".", "class2attacksample", "=", "extract_attack_set", "(", "\n", "ori_train_set", ",", "sample_per_class", "=", "500", ")", "\n", "self", ".", "train_set", "=", "Subset", "(", "ori_train_set", ",", "self", ".", "attack_indices", ")", "\n", "self", ".", "test_set", "=", "Subset", "(", "self", ".", "test_set", ",", "range", "(", "100", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.MNISTDataModule.train_dataloader": [[362, 376], ["torch.utils.data.dataloader.DataLoader", "torch.utils.data.dataloader.DataLoader"], "methods", ["None"], ["", "", "def", "train_dataloader", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "batch_sampler", "is", "None", ":", "\n", "            ", "return", "DataLoader", "(", "\n", "self", ".", "train_set", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ",", "\n", "shuffle", "=", "True", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "return", "DataLoader", "(", "\n", "self", ".", "train_set", ",", "\n", "batch_sampler", "=", "self", ".", "batch_sampler", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ",", "\n", "shuffle", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.MNISTDataModule.val_dataloader": [[378, 382], ["torch.utils.data.dataloader.DataLoader"], "methods", ["None"], ["", "", "def", "val_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "DataLoader", "(", "self", ".", "val_set", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.MNISTDataModule.test_dataloader": [[383, 387], ["torch.utils.data.dataloader.DataLoader"], "methods", ["None"], ["", "def", "test_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "DataLoader", "(", "self", ".", "test_set", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.__init__": [[390, 443], ["pytorch_lightning.core.datamodule.LightningDataModule.__init__", "torchvision.Normalize", "torchvision.Normalize", "print", "datamodules.CIFAR10DataModule.prepare_data", "torchvision.ToTensor", "torchvision.ToTensor", "datamodules.CIFAR10DataModule._train_transforms.insert", "datamodules.CIFAR10DataModule._train_transforms.insert", "datamodules.CIFAR10DataModule._train_transforms.insert", "datamodules.CIFAR10DataModule._train_transforms.insert", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.RandomHorizontalFlip", "torchvision.RandomHorizontalFlip", "torchvision.ColorJitter", "torchvision.ColorJitter", "torchvision.RandomRotation", "torchvision.RandomRotation", "torchvision.RandomCrop", "torchvision.RandomCrop"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.prepare_data"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "augment", ":", "dict", "=", "None", ",", "\n", "batch_size", ":", "int", "=", "32", ",", "\n", "data_dir", ":", "str", "=", "DEFAULT_DATA_DIR", ",", "\n", "num_workers", ":", "int", "=", "DEFAULT_NUM_WORKERS", ",", "\n", "batch_sampler", ":", "Sampler", "=", "None", ",", "\n", "tune_on_val", ":", "float", "=", "0", ",", "\n", "seed", ":", "int", "=", "None", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_has_setup_attack", "=", "False", "\n", "\n", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "num_workers", "=", "num_workers", "\n", "self", ".", "dims", "=", "(", "3", ",", "32", ",", "32", ")", "\n", "self", ".", "num_classes", "=", "10", "\n", "\n", "self", ".", "batch_sampler", "=", "batch_sampler", "\n", "self", ".", "tune_on_val", "=", "tune_on_val", "\n", "self", ".", "multi_class", "=", "False", "\n", "self", ".", "seed", "=", "seed", "\n", "\n", "cifar_normalize", "=", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "\n", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", "\n", "\n", "self", ".", "_train_transforms", "=", "[", "transforms", ".", "ToTensor", "(", ")", ",", "cifar_normalize", "]", "\n", "if", "augment", "[", "\"hflip\"", "]", ":", "\n", "            ", "self", ".", "_train_transforms", ".", "insert", "(", "\n", "0", ",", "transforms", ".", "RandomHorizontalFlip", "(", "p", "=", "0.5", ")", ")", "\n", "", "if", "augment", "[", "\"color_jitter\"", "]", "is", "not", "None", ":", "\n", "            ", "self", ".", "_train_transforms", ".", "insert", "(", "\n", "0", ",", "\n", "transforms", ".", "ColorJitter", "(", "\n", "brightness", "=", "augment", "[", "\"color_jitter\"", "]", "[", "0", "]", ",", "\n", "contrast", "=", "augment", "[", "\"color_jitter\"", "]", "[", "1", "]", ",", "\n", "saturation", "=", "augment", "[", "\"color_jitter\"", "]", "[", "2", "]", ",", "\n", "hue", "=", "augment", "[", "\"color_jitter\"", "]", "[", "3", "]", ",", "\n", ")", ",", "\n", ")", "\n", "", "if", "augment", "[", "\"rotation\"", "]", ">", "0", ":", "\n", "            ", "self", ".", "_train_transforms", ".", "insert", "(", "\n", "0", ",", "transforms", ".", "RandomRotation", "(", "augment", "[", "\"rotation\"", "]", ")", ")", "\n", "", "if", "augment", "[", "\"crop\"", "]", ":", "\n", "            ", "self", ".", "_train_transforms", ".", "insert", "(", "0", ",", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ")", "\n", "\n", "", "print", "(", "self", ".", "_train_transforms", ")", "\n", "\n", "self", ".", "_test_transforms", "=", "[", "transforms", ".", "ToTensor", "(", ")", ",", "cifar_normalize", "]", "\n", "\n", "self", ".", "prepare_data", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.prepare_data": [[444, 448], ["torchvision.datasets.cifar.CIFAR10", "torchvision.datasets.cifar.CIFAR10", "torchvision.datasets.cifar.CIFAR10", "torchvision.datasets.cifar.CIFAR10"], "methods", ["None"], ["", "def", "prepare_data", "(", "self", ")", ":", "\n", "        ", "\"\"\"Download the data\"\"\"", "\n", "CIFAR10", "(", "self", ".", "data_dir", ",", "train", "=", "True", ",", "download", "=", "True", ")", "\n", "CIFAR10", "(", "self", ".", "data_dir", ",", "train", "=", "False", ",", "download", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.setup": [[449, 519], ["torchvision.datasets.cifar.CIFAR10", "torchvision.datasets.cifar.CIFAR10", "torchvision.datasets.cifar.CIFAR10", "torchvision.datasets.cifar.CIFAR10", "torchvision.datasets.cifar.CIFAR10", "torchvision.datasets.cifar.CIFAR10", "datamodules.extract_attack_set", "torch.utils.data.Subset", "torch.utils.data.Subset", "torchvision.datasets.cifar.CIFAR10", "torchvision.datasets.cifar.CIFAR10", "datamodules.train_val_split", "torch.utils.data.Subset", "torch.utils.data.Subset", "torchvision.datasets.cifar.CIFAR10", "torchvision.datasets.cifar.CIFAR10", "range", "torchvision.datasets.cifar.CIFAR10", "torchvision.datasets.cifar.CIFAR10", "datamodules.extract_attack_set", "torch.utils.data.Subset", "torch.utils.data.Subset", "torchvision.Compose", "torchvision.Compose", "len", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "range", "torchvision.datasets.cifar.CIFAR10", "torchvision.datasets.cifar.CIFAR10", "datamodules.extract_attack_set", "torch.utils.data.Subset", "torch.utils.data.Subset", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "range", "torchvision.Compose", "torchvision.Compose"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.extract_attack_set", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.train_val_split", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.extract_attack_set", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.extract_attack_set"], ["", "def", "setup", "(", "self", ",", "stage", ":", "Optional", "[", "str", "]", "=", "None", ")", ":", "\n", "        ", "\"\"\"Initialize the dataset based on the stage option ('fit', 'test' or 'attack'):\n        - if stage is 'fit', set up the training and validation dataset;\n        - if stage is 'test', set up the testing dataset;\n        - if stage is 'attack', set up the attack dataset (a subset of training images)\n\n        Args:\n            stage (Optional[str], optional): stage option. Defaults to None.\n        \"\"\"", "\n", "if", "stage", "==", "\"fit\"", "or", "stage", "is", "None", ":", "\n", "            ", "self", ".", "train_set", "=", "CIFAR10", "(", "\n", "self", ".", "data_dir", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_train_transforms", ")", ",", "\n", ")", "\n", "if", "self", ".", "tune_on_val", ":", "\n", "                ", "self", ".", "val_set", "=", "CIFAR10", "(", "\n", "self", ".", "data_dir", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_test_transforms", ")", ",", "\n", ")", "\n", "train_indices", ",", "val_indices", "=", "train_val_split", "(", "\n", "len", "(", "self", ".", "train_set", ")", ",", "self", ".", "tune_on_val", ")", "\n", "self", ".", "train_set", "=", "Subset", "(", "self", ".", "train_set", ",", "train_indices", ")", "\n", "self", ".", "val_set", "=", "Subset", "(", "self", ".", "val_set", ",", "val_indices", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "val_set", "=", "CIFAR10", "(", "\n", "self", ".", "data_dir", ",", "\n", "train", "=", "False", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_test_transforms", ")", ",", "\n", ")", "\n", "\n", "# Assign test dataset for use in dataloader(s)", "\n", "", "", "if", "stage", "==", "\"test\"", "or", "stage", "is", "None", ":", "\n", "            ", "self", ".", "test_set", "=", "CIFAR10", "(", "\n", "self", ".", "data_dir", ",", "\n", "train", "=", "False", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_test_transforms", ")", ",", "\n", ")", "\n", "\n", "", "if", "stage", "==", "\"attack\"", ":", "\n", "            ", "ori_train_set", "=", "CIFAR10", "(", "\n", "self", ".", "data_dir", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_train_transforms", ")", ",", "\n", ")", "\n", "self", ".", "attack_indices", ",", "self", ".", "class2attacksample", "=", "extract_attack_set", "(", "\n", "ori_train_set", ",", "seed", "=", "self", ".", "seed", ")", "\n", "self", ".", "train_set", "=", "Subset", "(", "ori_train_set", ",", "self", ".", "attack_indices", ")", "\n", "self", ".", "test_set", "=", "Subset", "(", "self", ".", "test_set", ",", "range", "(", "100", ")", ")", "\n", "", "elif", "stage", "==", "\"attack_mini\"", ":", "\n", "            ", "ori_train_set", "=", "CIFAR10", "(", "\n", "self", ".", "data_dir", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_train_transforms", ")", ",", "\n", ")", "\n", "self", ".", "attack_indices", ",", "self", ".", "class2attacksample", "=", "extract_attack_set", "(", "\n", "ori_train_set", ",", "sample_per_class", "=", "2", ")", "\n", "self", ".", "train_set", "=", "Subset", "(", "ori_train_set", ",", "self", ".", "attack_indices", ")", "\n", "self", ".", "test_set", "=", "Subset", "(", "self", ".", "test_set", ",", "range", "(", "100", ")", ")", "\n", "", "elif", "stage", "==", "\"attack_large\"", ":", "\n", "            ", "ori_train_set", "=", "CIFAR10", "(", "\n", "self", ".", "data_dir", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "self", ".", "_train_transforms", ")", ",", "\n", ")", "\n", "self", ".", "attack_indices", ",", "self", ".", "class2attacksample", "=", "extract_attack_set", "(", "\n", "ori_train_set", ",", "sample_per_class", "=", "500", ")", "\n", "self", ".", "train_set", "=", "Subset", "(", "ori_train_set", ",", "self", ".", "attack_indices", ")", "\n", "self", ".", "test_set", "=", "Subset", "(", "self", ".", "test_set", ",", "range", "(", "100", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.train_dataloader": [[520, 530], ["torch.utils.data.dataloader.DataLoader", "torch.utils.data.dataloader.DataLoader"], "methods", ["None"], ["", "", "def", "train_dataloader", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "batch_sampler", "is", "None", ":", "\n", "            ", "return", "DataLoader", "(", "self", ".", "train_set", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ")", "\n", "", "else", ":", "\n", "            ", "return", "DataLoader", "(", "\n", "self", ".", "train_set", ",", "\n", "batch_sampler", "=", "self", ".", "batch_sampler", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.val_dataloader": [[532, 536], ["torch.utils.data.dataloader.DataLoader"], "methods", ["None"], ["", "", "def", "val_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "DataLoader", "(", "self", ".", "val_set", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.CIFAR10DataModule.test_dataloader": [[537, 541], ["torch.utils.data.dataloader.DataLoader"], "methods", ["None"], ["", "def", "test_dataloader", "(", "self", ")", ":", "\n", "        ", "return", "DataLoader", "(", "self", ".", "test_set", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.train_val_split": [[27, 35], ["int", "range"], "function", ["None"], ["def", "train_val_split", "(", "dataset_size", ":", "int", ",", "val_train_split", ":", "float", "=", "0.02", ")", ":", "\n", "    ", "validation_split", "=", "int", "(", "(", "1", "-", "val_train_split", ")", "*", "dataset_size", ")", "\n", "train_indices", "=", "range", "(", "dataset_size", ")", "\n", "train_indices", ",", "val_indices", "=", "(", "\n", "train_indices", "[", ":", "validation_split", "]", ",", "\n", "train_indices", "[", "validation_split", ":", "]", ",", "\n", ")", "\n", "return", "train_indices", ",", "val_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.datamodules.extract_attack_set": [[37, 65], ["len", "range", "range", "numpy.random.RandomState().permutation", "range", "len", "len", "len", "class2sample[].append", "range.append", "numpy.random.RandomState", "len"], "function", ["None"], ["", "def", "extract_attack_set", "(", "\n", "dataset", ":", "Dataset", ",", "\n", "sample_per_class", ":", "int", "=", "5", ",", "\n", "multi_class", "=", "False", ",", "\n", "total_num_samples", ":", "int", "=", "50", ",", "\n", "seed", ":", "int", "=", "None", ",", "\n", ")", ":", "\n", "    ", "if", "not", "multi_class", ":", "\n", "        ", "num_classes", "=", "len", "(", "dataset", ".", "classes", ")", "\n", "class2sample", "=", "{", "i", ":", "[", "]", "for", "i", "in", "range", "(", "num_classes", ")", "}", "\n", "select_indices", "=", "[", "]", "\n", "if", "seed", "==", "None", ":", "\n", "            ", "index_pool", "=", "range", "(", "len", "(", "dataset", ")", ")", "\n", "", "else", ":", "\n", "            ", "index_pool", "=", "np", ".", "random", ".", "RandomState", "(", "seed", "=", "seed", ")", ".", "permutation", "(", "\n", "len", "(", "dataset", ")", ")", "\n", "", "for", "i", "in", "index_pool", ":", "\n", "            ", "current_class", "=", "dataset", "[", "i", "]", "[", "1", "]", "\n", "if", "len", "(", "class2sample", "[", "current_class", "]", ")", "<", "sample_per_class", ":", "\n", "                ", "class2sample", "[", "current_class", "]", ".", "append", "(", "i", ")", "\n", "select_indices", ".", "append", "(", "i", ")", "\n", "", "elif", "len", "(", "select_indices", ")", "==", "sample_per_class", "*", "num_classes", ":", "\n", "                ", "break", "\n", "", "", "return", "select_indices", ",", "class2sample", "\n", "", "else", ":", "\n", "        ", "select_indices", "=", "range", "(", "total_num_samples", ")", "\n", "class2sample", "=", "None", "\n", "return", "select_indices", ",", "class2sample", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.attack.GradientInversionAttack.__init__": [[14, 31], ["attack.GradientInversionAttack.pipeline.model.to", "invertinggradients.inversefed.reconstruction_algorithms.GradientReconstructor"], "methods", ["None"], ["def", "__init__", "(", "\n", "self", ",", "\n", "pipeline", ":", "TrainingPipeline", ",", "\n", "dm", ",", "\n", "ds", ",", "\n", "device", ":", "torch", ".", "device", ",", "\n", "loss_metric", ":", "Callable", ",", "\n", "reconstructor_args", ":", "dict", "=", "None", ",", "\n", ")", ":", "\n", "        ", "self", ".", "pipeline", "=", "pipeline", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "loss_metric", "=", "loss_metric", "\n", "self", ".", "pipeline", ".", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "reconstructor_args", "is", "None", ":", "\n", "            ", "reconstructor_args", "=", "{", "}", "\n", "", "self", ".", "reconstructor", ":", "GradientReconstructor", "=", "GradientReconstructor", "(", "\n", "pipeline", ".", "model", ",", "mean_std", "=", "(", "dm", ",", "ds", ")", ",", "**", "reconstructor_args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.attack.GradientInversionAttack.run_attack_batch": [[32, 47], ["attack.GradientInversionAttack.pipeline.model.to", "attack.GradientInversionAttack.pipeline.model.zero_grad", "attack.GradientInversionAttack.pipeline.model.train", "attack.GradientInversionAttack.pipeline.model", "attack.GradientInversionAttack.loss_metric", "torch.autograd.grad", "attack.GradientInversionAttack.run_attack_gradient", "attack.GradientInversionAttack.pipeline.model.parameters"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.train", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.attack.GradientInversionAttack.run_attack_gradient"], ["", "def", "run_attack_batch", "(", "self", ",", "batch_inputs", ":", "torch", ".", "tensor", ",", "\n", "batch_targets", ":", "torch", ".", "tensor", ")", ":", "\n", "        ", "\"\"\"Runs an attack given a batch of inputs and targets. Both should be tensors of shape (N, ...), where N\n        is the number of inputs in the batch\"\"\"", "\n", "self", ".", "pipeline", ".", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "pipeline", ".", "model", ".", "zero_grad", "(", ")", "\n", "self", ".", "pipeline", ".", "model", ".", "train", "(", ")", "\n", "output", "=", "self", ".", "pipeline", ".", "model", "(", "batch_inputs", ")", "\n", "loss", "=", "self", ".", "loss_metric", "(", "output", ",", "batch_targets", ")", "\n", "batch_gradients", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "\n", "self", ".", "pipeline", ".", "model", ".", "parameters", "(", ")", ",", "\n", "create_graph", "=", "False", ")", "\n", "return", "self", ".", "run_attack_gradient", "(", "batch_gradients", ",", "\n", "input_shape", "=", "batch_inputs", "[", "0", "]", ".", "shape", ",", "\n", "labels", "=", "batch_targets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.attack.GradientInversionAttack.run_attack_gradient": [[48, 55], ["attack.GradientInversionAttack.reconstructor.reconstruct"], "methods", ["None"], ["", "def", "run_attack_gradient", "(", "self", ",", "\n", "batch_gradients", ":", "torch", ".", "tensor", ",", "\n", "input_shape", ":", "tuple", ",", "\n", "labels", "=", "None", ")", ":", "\n", "        ", "return", "self", ".", "reconstructor", ".", "reconstruct", "(", "batch_gradients", ",", "\n", "img_shape", "=", "input_shape", ",", "\n", "labels", "=", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.attack.GradientInversionAttack.run_from_dump": [[56, 63], ["torch.load", "attack.GradientInversionAttack.model.load_state_dict", "attack.GradientInversionAttack.run_attack_batch"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.attack.GradientInversionAttack.run_attack_batch"], ["", "def", "run_from_dump", "(", "self", ",", "filepath", ":", "str", ",", "dataset", ":", "torch", ".", "utils", ".", "data", ".", "Dataset", ")", ":", "\n", "        ", "loaded_data", "=", "torch", ".", "load", "(", "filepath", ",", "map_location", "=", "self", ".", "device", ")", "\n", "self", ".", "model", ".", "load_state_dict", "(", "loaded_data", "[", "\"model_state_dict\"", "]", ")", "\n", "batch_inputs", ",", "batch_targets", "=", "(", "\n", "dataset", "[", "i", "]", "[", "0", "]", "for", "i", "in", "loaded_data", "[", "\"batch_indices\"", "]", ")", ",", "(", "\n", "dataset", "[", "i", "]", "[", "1", "]", "for", "i", "in", "loaded_data", "[", "\"batch_indices\"", "]", ")", "\n", "return", "self", ".", "run_attack_batch", "(", "batch_inputs", ",", "batch_targets", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.BNFeatureHook.__init__": [[39, 41], ["module.register_forward_hook"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "module", ")", ":", "\n", "        ", "self", ".", "hook", "=", "module", ".", "register_forward_hook", "(", "self", ".", "hook_fn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.BNFeatureHook.hook_fn": [[42, 58], ["input[].mean", "input[].permute().contiguous().view().var", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "input[].permute().contiguous().view", "input[].permute().contiguous", "input[].permute"], "methods", ["None"], ["", "def", "hook_fn", "(", "self", ",", "module", ",", "input", ",", "output", ")", ":", "\n", "# hook co compute deepinversion's feature distribution regularization", "\n", "        ", "nch", "=", "input", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "mean", "=", "input", "[", "0", "]", ".", "mean", "(", "[", "0", ",", "2", ",", "3", "]", ")", "\n", "var", "=", "(", "input", "[", "0", "]", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "\n", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "[", "nch", ",", "\n", "-", "1", "]", ")", ".", "var", "(", "1", ",", "\n", "unbiased", "=", "False", ")", ")", "\n", "\n", "# forcing mean and variance to match between two distributions", "\n", "# other ways might work better, i.g. KL divergence", "\n", "r_feature", "=", "torch", ".", "norm", "(", "module", ".", "running_var", ".", "data", "-", "var", ",", "2", ")", "+", "torch", ".", "norm", "(", "\n", "module", ".", "running_mean", ".", "data", "-", "mean", ",", "2", ")", "\n", "self", ".", "mean", "=", "mean", "\n", "self", ".", "var", "=", "var", "\n", "self", ".", "r_feature", "=", "r_feature", "\n", "# must have no output", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.BNFeatureHook.close": [[60, 62], ["gradientinversion.BNFeatureHook.hook.remove"], "methods", ["None"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "hook", ".", "remove", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.DummyGradientDataset.__init__": [[82, 84], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "num_values", ":", "int", ")", ":", "\n", "        ", "self", ".", "num_values", "=", "num_values", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.DummyGradientDataset.__len__": [[85, 87], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_values", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.DummyGradientDataset.__getitem__": [[88, 90], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ":", "int", ")", ":", "\n", "        ", "return", "(", "1", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.__init__": [[93, 202], ["gradattack.metrics.gradients.CosineSimilarity", "pytorch_lightning.LightningModule.__init__", "gradientinversion.GradientReconstructor.save_hyperparameters", "copy.deepcopy", "len", "gradientinversion.GradientReconstructor.save_hyperparameters", "gradientinversion.GradientReconstructor._model.modules", "gradientinversion.GradientReconstructor.best_guess_grayscale.repeat", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "loss_fn", "isinstance", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "gradientinversion.GradientReconstructor.loss_r_feature_layers.append", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "gradientinversion.BNFeatureHook", "len", "len", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.nn.functional.cross_entropy", "torch.nn.functional.cross_entropy", "torch.nn.functional.cross_entropy", "torch.nn.functional.cross_entropy", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.nn.functional.log_softmax", "torch.nn.functional.log_softmax", "torch.nn.functional.log_softmax", "torch.nn.functional.log_softmax"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "pipeline", ":", "TrainingPipeline", ",", "\n", "ground_truth_inputs", ":", "tuple", ",", "\n", "ground_truth_gradients", ":", "tuple", ",", "\n", "ground_truth_labels", ":", "tuple", ",", "\n", "intial_reconstruction", ":", "torch", ".", "tensor", "=", "None", ",", "\n", "reconstruct_labels", "=", "False", ",", "\n", "attack_loss_metric", ":", "Callable", "=", "CosineSimilarity", "(", ")", ",", "\n", "mean_std", ":", "tuple", "=", "(", "0.0", ",", "1.0", ")", ",", "\n", "num_iterations", "=", "10000", ",", "\n", "optimizer", ":", "str", "=", "\"Adam\"", ",", "\n", "lr_scheduler", ":", "bool", "=", "True", ",", "\n", "lr", ":", "float", "=", "0.1", ",", "\n", "total_variation", ":", "float", "=", "1e-1", ",", "\n", "l2", ":", "float", "=", "0", ",", "\n", "bn_reg", ":", "float", "=", "0", ",", "\n", "first_bn_multiplier", ":", "float", "=", "1", ",", "\n", "signed_image", ":", "bool", "=", "False", ",", "\n", "signed_gradients", ":", "bool", "=", "True", ",", "\n", "boxed", ":", "bool", "=", "True", ",", "\n", "attacker_eval_mode", ":", "bool", "=", "True", ",", "\n", "recipe", ":", "str", "=", "'Geiping'", ",", "\n", "BN_exact", ":", "bool", "=", "False", ",", "\n", "grayscale", ":", "bool", "=", "False", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "save_hyperparameters", "(", "\"optimizer\"", ",", "\"lr_scheduler\"", ",", "\"lr\"", ",", "\n", "\"total_variation\"", ",", "\"l2\"", ",", "\"bn_reg\"", ",", "\n", "\"first_bn_multiplier\"", ",", "\"signed_image\"", ",", "\n", "\"signed_gradients\"", ",", "\"boxed\"", ",", "\n", "\"attacker_eval_mode\"", ",", "\"recipe\"", ")", "\n", "\n", "# Need to clone model - otherwise, it could be modified by training", "\n", "self", ".", "_model", "=", "copy", ".", "deepcopy", "(", "pipeline", ".", "model", ")", "\n", "self", ".", "BN_exact", "=", "BN_exact", "\n", "self", ".", "recipe", "=", "recipe", "\n", "\n", "self", ".", "automatic_optimization", "=", "False", "\n", "self", ".", "_attack_loss_metric", "=", "attack_loss_metric", "\n", "\n", "self", ".", "num_iterations", "=", "num_iterations", "\n", "self", ".", "num_images", "=", "len", "(", "ground_truth_inputs", ")", "\n", "self", ".", "image_shape", "=", "ground_truth_inputs", "[", "0", "]", ".", "shape", "\n", "self", ".", "mean_std", "=", "mean_std", "\n", "self", ".", "grayscale", "=", "grayscale", "\n", "self", ".", "ground_truth_inputs", "=", "ground_truth_inputs", "\n", "self", ".", "ground_truth_labels", "=", "ground_truth_labels", "\n", "self", ".", "ground_truth_gradients", "=", "ground_truth_gradients", "\n", "self", ".", "save_hyperparameters", "(", "{", "\n", "\"num_images\"", ":", "self", ".", "num_images", ",", "\n", "\"image_shape\"", ":", "self", ".", "image_shape", "\n", "}", ")", "\n", "\n", "if", "self", ".", "grayscale", ":", "\n", "            ", "self", ".", "best_guess_grayscale", "=", "(", "\n", "torch", ".", "nn", ".", "Parameter", "(", "intial_reconstruction", ")", "\n", "if", "intial_reconstruction", "is", "not", "None", "else", "torch", ".", "nn", ".", "Parameter", "(", "\n", "torch", ".", "randn", "(", "\n", "(", "self", ".", "num_images", ",", "1", ",", "self", ".", "image_shape", "[", "1", "]", ",", "\n", "self", ".", "image_shape", "[", "2", "]", ")", ",", "\n", "requires_grad", "=", "True", ",", "\n", "device", "=", "self", ".", "device", ",", "\n", ")", ")", ")", "\n", "self", ".", "best_guess", "=", "self", ".", "best_guess_grayscale", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "best_guess", "=", "(", "torch", ".", "nn", ".", "Parameter", "(", "intial_reconstruction", ")", "\n", "if", "intial_reconstruction", "is", "not", "None", "else", "\n", "torch", ".", "nn", ".", "Parameter", "(", "\n", "torch", ".", "randn", "(", "\n", "(", "self", ".", "num_images", ",", "*", "self", ".", "image_shape", ")", ",", "\n", "requires_grad", "=", "True", ",", "\n", "device", "=", "self", ".", "device", ",", "\n", ")", ")", ")", "\n", "", "self", ".", "labels", "=", "ground_truth_labels", "\n", "if", "reconstruct_labels", ":", "\n", "            ", "self", ".", "labels", "=", "torch", ".", "nn", ".", "Parameter", "(", "\n", "torch", ".", "randn", "(", "\n", "(", "self", ".", "num_images", ",", "len", "(", "ground_truth_gradients", "[", "-", "1", "]", ")", ")", ",", "\n", "requires_grad", "=", "True", ",", "\n", "device", "=", "self", ".", "device", ",", "\n", ")", ")", "\n", "self", ".", "_reconstruct_labels", "=", "True", "\n", "\n", "class", "loss_fn", "(", "torch", ".", "nn", ".", "Module", ")", ":", "\n", "                ", "def", "__call__", "(", "self", ",", "pred", ",", "labels", ")", ":", "\n", "                    ", "if", "len", "(", "labels", ".", "shape", ")", ">=", "2", ":", "\n", "                        ", "labels", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "labels", ",", "dim", "=", "-", "1", ")", "\n", "return", "torch", ".", "mean", "(", "\n", "torch", ".", "sum", "(", "\n", "-", "labels", "*", "\n", "torch", ".", "nn", ".", "functional", ".", "log_softmax", "(", "pred", ",", "dim", "=", "-", "1", ")", ",", "\n", "1", ",", "\n", ")", ")", "\n", "", "else", ":", "\n", "                        ", "return", "torch", ".", "nn", ".", "functional", ".", "cross_entropy", "(", "pred", ",", "labels", ")", "\n", "\n", "", "", "", "self", ".", "_model", ".", "_training_loss_metric", "=", "None", "\n", "self", ".", "_model", ".", "_training_loss_metric", "=", "loss_fn", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_reconstruct_labels", "=", "False", "\n", "\n", "", "self", ".", "_batch_transferred", "=", "False", "\n", "\n", "self", ".", "loss_r_feature_layers", "=", "[", "]", "\n", "\n", "for", "module", "in", "self", ".", "_model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "self", ".", "loss_r_feature_layers", ".", "append", "(", "BNFeatureHook", "(", "module", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.forward": [[203, 205], ["gradientinversion.GradientReconstructor._model"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "_model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.guess_labels": [[206, 212], ["labels.flatten", "torch.min", "torch.min", "torch.min", "torch.min"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "guess_labels", "(", "gradients", ")", ":", "\n", "        ", "\"\"\"Uses the method from iDLG to retrieve the labels given gradients\"\"\"", "\n", "labels", "=", "(", "torch", ".", "min", "(", "gradients", "[", "-", "2", "]", ",", "dim", "=", "1", ")", "[", "0", "]", "<", "0", ")", ".", "nonzero", "(", "\n", "as_tuple", "=", "False", ")", "\n", "return", "labels", ".", "flatten", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.on_train_start": [[213, 267], ["gradientinversion.GradientReconstructor.logger.experiment.add_image", "gradientinversion.GradientReconstructor.ground_truth_inputs.to", "gradientinversion.GradientReconstructor._model.to", "gradientinversion.GradientReconstructor.optimizer.zero_grad", "gradientinversion.GradientReconstructor.zero_grad", "gradientinversion.GradientReconstructor._model.zero_grad", "gradientinversion.GradientReconstructor._model.get_batch_gradients", "gradientinversion.GradientReconstructor._model.modules", "gradattack.utils.patch_image", "gradientinversion.GradientReconstructor.logger.experiment.add_image", "gradientinversion.GradientReconstructor.mean_std[].to", "gradientinversion.GradientReconstructor.mean_std[].to", "isinstance", "gradientinversion.GradientReconstructor.normalize_image", "gradattack.utils.patch_image", "enumerate", "enumerate", "gradientinversion.GradientReconstructor.normalize_image", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.get_batch_gradients", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.patch_image", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.normalize_image", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.patch_image", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.normalize_image"], ["", "def", "on_train_start", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "logger", ".", "experiment", ".", "add_image", "(", "\n", "\"Ground truth\"", ",", "\n", "patch_image", "(", "\n", "self", ".", "normalize_image", "(", "self", ".", "ground_truth_inputs", ")", ",", "\n", "(", "self", ".", "ground_truth_inputs", ".", "shape", "[", "2", "]", ",", "\n", "self", ".", "ground_truth_inputs", ".", "shape", "[", "3", "]", ")", ",", "\n", ")", ",", "\n", "global_step", "=", "self", ".", "global_step", ",", "\n", ")", "\n", "if", "self", ".", "hparams", "[", "\"signed_image\"", "]", ":", "\n", "            ", "self", ".", "logger", ".", "experiment", ".", "add_image", "(", "\n", "\"Abs(Ground truth)\"", ",", "\n", "patch_image", "(", "\n", "self", ".", "normalize_image", "(", "torch", ".", "abs", "(", "self", ".", "ground_truth_inputs", ")", ")", ",", "\n", "(", "\n", "self", ".", "ground_truth_inputs", ".", "shape", "[", "2", "]", ",", "\n", "self", ".", "ground_truth_inputs", ".", "shape", "[", "3", "]", ",", "\n", ")", ",", "\n", ")", ",", "\n", "global_step", "=", "self", ".", "global_step", ",", "\n", ")", "\n", "\n", "", "self", ".", "ground_truth_inputs", "=", "self", ".", "ground_truth_inputs", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "mean_std", "=", "(", "\n", "self", ".", "mean_std", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", ",", "\n", "self", ".", "mean_std", "[", "1", "]", ".", "to", "(", "self", ".", "device", ")", ",", "\n", ")", "\n", "self", ".", "_model", "=", "self", ".", "_model", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "zero_grad", "(", ")", "\n", "self", ".", "_model", ".", "zero_grad", "(", ")", "\n", "\n", "# collet BN stats from the original batch", "\n", "recovered_gradients", ",", "step_results", "=", "self", ".", "_model", ".", "get_batch_gradients", "(", "\n", "(", "self", ".", "ground_truth_inputs", ",", "self", ".", "ground_truth_labels", ")", ",", "\n", "create_graph", "=", "True", ",", "\n", "apply_transforms", "=", "False", ",", "\n", "clone_gradients", "=", "False", ",", "\n", "eval_mode", "=", "self", ".", "hparams", "[", "\"attacker_eval_mode\"", "]", ",", "\n", ")", "\n", "\n", "self", ".", "mean_gt", "=", "[", "\n", "mod", ".", "mean", "for", "(", "idx", ",", "mod", ")", "in", "enumerate", "(", "self", ".", "loss_r_feature_layers", ")", "\n", "]", "\n", "self", ".", "var_gt", "=", "[", "\n", "mod", ".", "var", "for", "(", "idx", ",", "mod", ")", "in", "enumerate", "(", "self", ".", "loss_r_feature_layers", ")", "\n", "]", "\n", "\n", "for", "module", "in", "self", ".", "_model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "module", ",", "torch", ".", "nn", ".", "BatchNorm2d", ")", ":", "\n", "# print(module.running_mean)", "\n", "                ", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.normalize_image": [[268, 270], ["img.min", "img.max", "img.min"], "methods", ["None"], ["", "", "", "def", "normalize_image", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "(", "img", "-", "img", ".", "min", "(", ")", ")", "/", "(", "img", ".", "max", "(", ")", "-", "img", ".", "min", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.train_dataloader": [[271, 274], ["torch.utils.data.dataloader.DataLoader", "torch.utils.data.dataloader.DataLoader", "gradientinversion.DummyGradientDataset"], "methods", ["None"], ["", "def", "train_dataloader", "(", "self", ")", "->", "Any", ":", "\n", "        ", "return", "DataLoader", "(", "\n", "DummyGradientDataset", "(", "num_values", "=", "self", ".", "num_iterations", ",", ")", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.transfer_batch_to_device": [[275, 285], ["gradientinversion.GradientReconstructor.ground_truth_labels.detach().to", "tuple", "gradientinversion.GradientReconstructor.ground_truth_labels.detach", "x.detach().to", "x.detach"], "methods", ["None"], ["", "def", "transfer_batch_to_device", "(", "self", ",", "batch", ":", "Any", ",", "\n", "device", ":", "Optional", "[", "torch", ".", "device", "]", ")", "->", "Any", ":", "\n", "        ", "if", "not", "self", ".", "_batch_transferred", ":", "\n", "            ", "self", ".", "ground_truth_labels", "=", "self", ".", "ground_truth_labels", ".", "detach", "(", ")", ".", "to", "(", "\n", "self", ".", "device", ")", "\n", "self", ".", "ground_truth_gradients", "=", "tuple", "(", "\n", "x", ".", "detach", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "for", "x", "in", "self", ".", "ground_truth_gradients", ")", "\n", "self", ".", "_batch_transferred", "=", "True", "\n", "", "return", "(", "self", ".", "ground_truth_gradients", ",", "self", ".", "ground_truth_labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.training_step": [[286, 435], ["gradientinversion.GradientReconstructor.optimizer.step", "gradientinversion.GradientReconstructor.optimizer.zero_grad", "gradientinversion.GradientReconstructor.zero_grad", "gradientinversion.GradientReconstructor._model.zero_grad", "gradientinversion.GradientReconstructor._model.get_batch_gradients", "gradientinversion.GradientReconstructor.logger.experiment.add_scalar", "gradientinversion.GradientReconstructor.logger.experiment.add_scalar", "gradientinversion.GradientReconstructor.manual_backward", "gradientinversion.GradientReconstructor.lr_scheduler.step", "torch.max", "torch.max", "torch.max", "torch.max", "gradientinversion.GradientReconstructor.best_guess_grayscale.repeat", "gradientinversion.GradientReconstructor._attack_loss_metric", "sum", "range", "torch.min", "torch.min", "torch.min", "torch.min", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "gradientinversion.GradientReconstructor.logger.experiment.add_image", "gradientinversion.GradientReconstructor.logger.experiment.add_scalar", "gradientinversion.GradientReconstructor.logger.experiment.add_scalar", "gradientinversion.total_variation", "gradientinversion.l2_norm", "gradattack.metrics.gradients.L2Diff", "gradientinversion.GradientReconstructor._attack_loss_metric", "enumerate", "enumerate", "len", "gradientinversion.GradientReconstructor.logger.experiment.add_scalar", "gradientinversion.GradientReconstructor.logger.experiment.add_scalar", "gradientinversion.GradientReconstructor.best_guess_grayscale.grad.sign_", "gradientinversion.GradientReconstructor.best_guess.grad.sign_", "gradattack.utils.patch_image", "gradientinversion.GradientReconstructor.logger.experiment.add_image", "torchmetrics.functional.psnr", "sum", "gradattack.metrics.pixelwise.MeanPixelwiseError", "sum", "gradientinversion.GradientReconstructor.logger.experiment.add_scalar", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "gradientinversion.GradientReconstructor.normalize_image", "gradattack.utils.patch_image", "zip", "zip", "gradattack.metrics.pixelwise.MeanPixelwiseError", "sum", "range", "enumerate", "gradientinversion.GradientReconstructor.normalize_image", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "zip", "sum", "len", "sum", "len", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "len"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.get_batch_gradients", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.total_variation", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.l2_norm", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.patch_image", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.pixelwise.MeanPixelwiseError", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.normalize_image", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.gradattack.utils.patch_image", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.pixelwise.MeanPixelwiseError", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.normalize_image"], ["", "def", "training_step", "(", "self", ",", "batch", ",", "*", "args", ")", ":", "\n", "        ", "input_gradients", ",", "labels", "=", "batch", "\n", "\n", "def", "_closure", "(", ")", ":", "\n", "            ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "zero_grad", "(", ")", "\n", "self", ".", "_model", ".", "zero_grad", "(", ")", "\n", "if", "self", ".", "grayscale", ":", "\n", "                ", "self", ".", "best_guess", "=", "self", ".", "best_guess_grayscale", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "", "recovered_gradients", ",", "step_results", "=", "self", ".", "_model", ".", "get_batch_gradients", "(", "\n", "(", "self", ".", "best_guess", ",", "self", ".", "labels", ")", ",", "\n", "create_graph", "=", "True", ",", "\n", "apply_transforms", "=", "False", ",", "\n", "clone_gradients", "=", "False", ",", "\n", "eval_mode", "=", "self", ".", "hparams", "[", "\"attacker_eval_mode\"", "]", ",", "\n", "BN_exact", "=", "self", ".", "BN_exact", ",", "\n", "attacker", "=", "True", ",", "\n", ")", "\n", "if", "self", ".", "recipe", "==", "'Geiping'", ":", "\n", "                ", "reconstruction_loss", "=", "self", ".", "_attack_loss_metric", "(", "\n", "recovered_gradients", ",", "input_gradients", ")", "\n", "reconstruction_loss", "+=", "self", ".", "hparams", "[", "\n", "\"total_variation\"", "]", "*", "total_variation", "(", "\n", "self", ".", "best_guess", ",", "self", ".", "hparams", "[", "\"signed_image\"", "]", ")", "\n", "reconstruction_loss", "+=", "self", ".", "hparams", "[", "\"l2\"", "]", "*", "l2_norm", "(", "\n", "self", ".", "best_guess", ",", "self", ".", "hparams", "[", "\"signed_image\"", "]", ")", "\n", "", "elif", "self", ".", "recipe", "==", "'Zhu'", ":", "## TODO: test", "\n", "                ", "self", ".", "_attack_loss_metric", "=", "L2Diff", "(", ")", "\n", "reconstruction_loss", "=", "self", ".", "_attack_loss_metric", "(", "\n", "recovered_gradients", ",", "input_gradients", ")", "\n", "\n", "", "recon_mean", "=", "[", "\n", "mod", ".", "mean", "\n", "for", "(", "idx", ",", "mod", ")", "in", "enumerate", "(", "self", ".", "loss_r_feature_layers", ")", "\n", "]", "\n", "recon_var", "=", "[", "\n", "mod", ".", "var", "for", "(", "idx", ",", "mod", ")", "in", "enumerate", "(", "self", ".", "loss_r_feature_layers", ")", "\n", "]", "\n", "\n", "if", "self", ".", "hparams", "[", "\"bn_reg\"", "]", ">", "0", ":", "\n", "                ", "rescale", "=", "[", "self", ".", "hparams", "[", "\"first_bn_multiplier\"", "]", "]", "+", "[", "\n", "1.0", "for", "_", "in", "range", "(", "len", "(", "self", ".", "loss_r_feature_layers", ")", "-", "1", ")", "\n", "]", "\n", "loss_r_feature", "=", "sum", "(", "[", "\n", "mod", ".", "r_feature", "*", "rescale", "[", "idx", "]", "\n", "for", "(", "idx", ",", "mod", ")", "in", "enumerate", "(", "self", ".", "loss_r_feature_layers", ")", "\n", "]", ")", "\n", "\n", "reconstruction_loss", "+=", "self", ".", "hparams", "[", "\"bn_reg\"", "]", "*", "loss_r_feature", "\n", "\n", "", "self", ".", "logger", ".", "experiment", ".", "add_scalar", "(", "\"Loss\"", ",", "\n", "step_results", "[", "\"loss\"", "]", ",", "\n", "global_step", "=", "self", ".", "global_step", ")", "\n", "self", ".", "logger", ".", "experiment", ".", "add_scalar", "(", "\n", "\"Reconstruction Metric Loss\"", ",", "\n", "reconstruction_loss", ",", "\n", "global_step", "=", "self", ".", "global_step", ",", "\n", ")", "\n", "\n", "if", "self", ".", "global_step", "%", "100", "==", "0", ":", "\n", "                ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "loss_r_feature_layers", ")", ")", ":", "\n", "                    ", "self", ".", "logger", ".", "experiment", ".", "add_scalar", "(", "\n", "f\"BN_loss/layer_{i}_mean_loss\"", ",", "\n", "torch", ".", "sqrt", "(", "\n", "sum", "(", "(", "recon_mean", "[", "i", "]", "-", "self", ".", "mean_gt", "[", "i", "]", ")", "**", "2", ")", "/", "\n", "len", "(", "recon_mean", "[", "i", "]", ")", ")", ",", "\n", "global_step", "=", "self", ".", "global_step", ",", "\n", ")", "\n", "self", ".", "logger", ".", "experiment", ".", "add_scalar", "(", "\n", "f\"BN_loss/layer_{i}_var_loss\"", ",", "\n", "torch", ".", "sqrt", "(", "\n", "sum", "(", "(", "recon_var", "[", "i", "]", "-", "self", ".", "var_gt", "[", "i", "]", ")", "**", "2", ")", "/", "\n", "len", "(", "recon_mean", "[", "i", "]", ")", ")", ",", "\n", "global_step", "=", "self", ".", "global_step", ",", "\n", ")", "\n", "", "", "self", ".", "manual_backward", "(", "reconstruction_loss", ",", "self", ".", "optimizer", ")", "\n", "if", "self", ".", "hparams", "[", "\"signed_gradients\"", "]", ":", "\n", "                ", "if", "self", ".", "grayscale", ":", "\n", "                    ", "self", ".", "best_guess_grayscale", ".", "grad", ".", "sign_", "(", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "best_guess", ".", "grad", ".", "sign_", "(", ")", "\n", "", "", "return", "reconstruction_loss", "\n", "\n", "", "reconstruction_loss", "=", "self", ".", "optimizer", ".", "step", "(", "closure", "=", "_closure", ")", "\n", "if", "self", ".", "hparams", "[", "\"lr_scheduler\"", "]", ":", "\n", "            ", "self", ".", "lr_scheduler", ".", "step", "(", ")", "\n", "", "if", "self", ".", "hparams", "[", "\"boxed\"", "]", ":", "\n", "            ", "dm", ",", "ds", "=", "self", ".", "mean_std", "\n", "self", ".", "best_guess", ".", "data", "=", "torch", ".", "max", "(", "\n", "torch", ".", "min", "(", "self", ".", "best_guess", ",", "(", "1", "-", "dm", ")", "/", "ds", ")", ",", "-", "dm", "/", "ds", ")", "\n", "", "if", "self", ".", "global_step", "%", "50", "==", "0", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "self", ".", "logger", ".", "experiment", ".", "add_image", "(", "\n", "\"Reconstruction\"", ",", "\n", "patch_image", "(", "\n", "self", ".", "normalize_image", "(", "self", ".", "best_guess", ")", ",", "\n", "(", "\n", "self", ".", "ground_truth_inputs", ".", "shape", "[", "2", "]", ",", "\n", "self", ".", "ground_truth_inputs", ".", "shape", "[", "3", "]", ",", "\n", ")", ",", "\n", ")", ",", "\n", "global_step", "=", "self", ".", "global_step", ",", "\n", ")", "\n", "if", "self", ".", "hparams", "[", "\"signed_image\"", "]", ":", "\n", "                    ", "self", ".", "logger", ".", "experiment", ".", "add_image", "(", "\n", "\"Abs(Reconstruction)\"", ",", "\n", "patch_image", "(", "\n", "self", ".", "normalize_image", "(", "torch", ".", "abs", "(", "self", ".", "best_guess", ")", ")", ",", "\n", "(", "\n", "self", ".", "ground_truth_inputs", ".", "shape", "[", "2", "]", ",", "\n", "self", ".", "ground_truth_inputs", ".", "shape", "[", "3", "]", ",", "\n", ")", ",", "\n", ")", ",", "\n", "global_step", "=", "self", ".", "global_step", ",", "\n", ")", "\n", "", "psnrs", "=", "[", "\n", "torchmetrics", ".", "functional", ".", "psnr", "(", "a", ",", "b", ")", "\n", "for", "(", "a", ",", "\n", "b", ")", "in", "zip", "(", "self", ".", "best_guess", ",", "self", ".", "ground_truth_inputs", ")", "\n", "]", "\n", "avg_psnr", "=", "sum", "(", "psnrs", ")", "/", "self", ".", "num_images", "\n", "self", ".", "logger", ".", "experiment", ".", "add_scalar", "(", "\"Avg. PSNR\"", ",", "\n", "avg_psnr", ",", "\n", "global_step", "=", "self", ".", "global_step", ")", "\n", "\n", "rmses", "=", "[", "\n", "MeanPixelwiseError", "(", "a", ",", "b", ")", "\n", "for", "(", "a", ",", "\n", "b", ")", "in", "zip", "(", "self", ".", "best_guess", ",", "self", ".", "ground_truth_inputs", ")", "\n", "]", "\n", "avg_rmse", "=", "sum", "(", "rmses", ")", "/", "self", ".", "num_images", "\n", "self", ".", "logger", ".", "experiment", ".", "add_scalar", "(", "\"Avg. Pixelwise Error\"", ",", "\n", "avg_rmse", ",", "\n", "global_step", "=", "self", ".", "global_step", ")", "\n", "\n", "if", "self", ".", "hparams", "[", "\"signed_image\"", "]", ":", "\n", "                    ", "abs_rmses", "=", "[", "\n", "MeanPixelwiseError", "(", "torch", ".", "abs", "(", "a", ")", ",", "torch", ".", "abs", "(", "b", ")", ")", "\n", "for", "(", "a", ",", "b", ")", "in", "zip", "(", "self", ".", "best_guess", ",", "\n", "self", ".", "ground_truth_inputs", ")", "\n", "]", "\n", "abs_avg_rmse", "=", "sum", "(", "abs_rmses", ")", "/", "self", ".", "num_images", "\n", "self", ".", "logger", ".", "experiment", ".", "add_scalar", "(", "\n", "\"Avg. Absolute Pixelwise Error\"", ",", "\n", "abs_avg_rmse", ",", "\n", "global_step", "=", "self", ".", "global_step", ",", "\n", ")", "\n", "\n", "", "", "", "return", "reconstruction_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.configure_optimizers": [[436, 459], ["gradientinversion.GradientReconstructor.best_guess.to", "gradientinversion.GradientReconstructor.labels.to", "gradientinversion.GradientReconstructor.configure_lr_scheduler", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.configure_lr_scheduler"], ["", "def", "configure_optimizers", "(", "self", ")", ":", "\n", "        ", "self", ".", "best_guess", "=", "self", ".", "best_guess", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "labels", "=", "self", ".", "labels", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "self", ".", "grayscale", ":", "\n", "            ", "parameters", "=", "(", "[", "\n", "self", ".", "best_guess_grayscale", ",", "self", ".", "labels", "\n", "]", "if", "self", ".", "_reconstruct_labels", "else", "[", "self", ".", "best_guess_grayscale", "]", ")", "\n", "", "else", ":", "\n", "            ", "parameters", "=", "(", "[", "self", ".", "best_guess", ",", "self", ".", "labels", "]", "\n", "if", "self", ".", "_reconstruct_labels", "else", "[", "self", ".", "best_guess", "]", ")", "\n", "", "if", "self", ".", "hparams", "[", "\"optimizer\"", "]", "==", "\"Adam\"", ":", "\n", "            ", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "parameters", ",", "\n", "lr", "=", "self", ".", "hparams", "[", "\"lr\"", "]", ")", "\n", "", "elif", "self", ".", "hparams", "[", "\"optimizer\"", "]", "==", "\"SGD\"", ":", "\n", "            ", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "\n", "parameters", ",", "\n", "lr", "=", "self", ".", "hparams", "[", "\"lr\"", "]", ",", "\n", "momentum", "=", "0.9", ",", "\n", "weight_decay", "=", "5e-4", ",", "\n", ")", "\n", "", "self", ".", "configure_lr_scheduler", "(", ")", "\n", "\n", "return", "[", "self", ".", "optimizer", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.GradientReconstructor.configure_lr_scheduler": [[460, 470], ["torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.MultiStepLR"], "methods", ["None"], ["", "def", "configure_lr_scheduler", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "hparams", "[", "\"lr_scheduler\"", "]", ":", "\n", "            ", "self", ".", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "\n", "self", ".", "optimizer", ",", "\n", "milestones", "=", "[", "\n", "self", ".", "num_iterations", "//", "2.667", ",", "\n", "self", ".", "num_iterations", "//", "1.6", ",", "\n", "self", ".", "num_iterations", "//", "1.142", ",", "\n", "]", ",", "\n", "gamma", "=", "0.1", ",", "\n", ")", "# 3/8 5/8 7/8", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.l2_norm": [[64, 70], ["len", "torch.norm().mean", "torch.norm().mean", "torch.abs", "torch.abs", "torch.norm", "torch.norm", "torch.abs.view"], "function", ["None"], ["", "", "def", "l2_norm", "(", "x", ",", "signed_image", "=", "False", ")", ":", "\n", "    ", "if", "signed_image", ":", "\n", "        ", "x", "=", "torch", ".", "abs", "(", "x", ")", "\n", "", "batch_size", "=", "len", "(", "x", ")", "\n", "loss_l2", "=", "torch", ".", "norm", "(", "x", ".", "view", "(", "batch_size", ",", "-", "1", ")", ",", "dim", "=", "1", ")", ".", "mean", "(", ")", "\n", "return", "loss_l2", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.attacks.gradientinversion.total_variation": [[72, 79], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "function", ["None"], ["", "def", "total_variation", "(", "x", ",", "signed_image", "=", "False", ")", ":", "\n", "    ", "\"\"\"Anisotropic TV.\"\"\"", "\n", "if", "signed_image", ":", "\n", "        ", "x", "=", "torch", ".", "abs", "(", "x", ")", "\n", "", "dx", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "x", "[", ":", ",", ":", ",", ":", ",", ":", "-", "1", "]", "-", "x", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", ")", ")", "\n", "dy", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "x", "[", ":", ",", ":", ",", ":", "-", "1", ",", ":", "]", "-", "x", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", ")", ")", "\n", "return", "dx", "+", "dy", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.mobilenet.Block.__init__": [[15, 34], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "\n", "in_planes", ",", "\n", "in_planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "in_planes", ",", "\n", "bias", "=", "False", ",", "\n", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.mobilenet.Block.forward": [[35, 39], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "mobilenet.Block.bn1", "mobilenet.Block.bn2", "mobilenet.Block.conv1", "mobilenet.Block.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.mobilenet.MobileNet.__init__": [[59, 70], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "mobilenet.MobileNet._make_layers", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.NasNetA._make_layers"], ["def", "__init__", "(", "self", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "MobileNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "\n", "32", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "layers", "=", "self", ".", "_make_layers", "(", "in_planes", "=", "32", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "1024", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.mobilenet.MobileNet._make_layers": [[71, 79], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "isinstance", "isinstance", "mobilenet.Block"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "in_planes", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "x", "in", "self", ".", "cfg", ":", "\n", "            ", "out_planes", "=", "x", "if", "isinstance", "(", "x", ",", "int", ")", "else", "x", "[", "0", "]", "\n", "stride", "=", "1", "if", "isinstance", "(", "x", ",", "int", ")", "else", "x", "[", "1", "]", "\n", "layers", ".", "append", "(", "Block", "(", "in_planes", ",", "out_planes", ",", "stride", ")", ")", "\n", "in_planes", "=", "out_planes", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.mobilenet.MobileNet.forward": [[80, 87], ["torch.relu", "torch.relu", "torch.relu", "mobilenet.MobileNet.layers", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "mobilenet.MobileNet.view", "mobilenet.MobileNet.linear", "mobilenet.MobileNet.bn1", "mobilenet.MobileNet.size", "mobilenet.MobileNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layers", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "2", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.mobilenet.test": [[89, 94], ["mobilenet.MobileNet", "torch.randn", "torch.randn", "torch.randn", "MobileNet.", "print", "torch.autograd.Variable", "net.size"], "function", ["None"], ["", "", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "MobileNet", "(", ")", "\n", "x", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "Variable", "(", "x", ")", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.covidmodel.Flatten.forward": [[9, 11], ["input.view", "input.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "view", "(", "input", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.covidmodel.PEXP.__init__": [[14, 59], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_input", ",", "n_out", ")", ":", "\n", "        ", "super", "(", "PEXP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\"\"\"\n        \u2022 First-stage Projection: 1\u00d71 convolutions for projecting input features to a lower dimension,\n\n        \u2022 Expansion: 1\u00d71 convolutions for expanding features\n            to a higher dimension that is different than that of the\n            input features,\n\n\n        \u2022 Depth-wise Representation: efficient 3\u00d73 depthwise convolutions for learning spatial characteristics to\n            minimize computational complexity while preserving\n            representational capacity,\n\n        \u2022 Second-stage Projection: 1\u00d71 convolutions for projecting features back to a lower dimension, and\n\n        \u2022 Extension: 1\u00d71 convolutions that finally extend channel dimensionality to a higher dimension to produce\n             the final features.\n             \n        \"\"\"", "\n", "\n", "self", ".", "network", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "n_input", ",", "\n", "out_channels", "=", "n_input", "//", "2", ",", "\n", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "n_input", "//", "2", ",", "\n", "out_channels", "=", "int", "(", "3", "*", "n_input", "/", "4", ")", ",", "\n", "kernel_size", "=", "1", ",", "\n", ")", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "int", "(", "3", "*", "n_input", "/", "4", ")", ",", "\n", "out_channels", "=", "int", "(", "3", "*", "n_input", "/", "4", ")", ",", "\n", "kernel_size", "=", "3", ",", "\n", "groups", "=", "int", "(", "3", "*", "n_input", "/", "4", ")", ",", "\n", "padding", "=", "1", ",", "\n", ")", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "int", "(", "3", "*", "n_input", "/", "4", ")", ",", "\n", "out_channels", "=", "n_input", "//", "2", ",", "\n", "kernel_size", "=", "1", ",", "\n", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "n_input", "//", "2", ",", "\n", "out_channels", "=", "n_out", ",", "\n", "kernel_size", "=", "1", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.covidmodel.PEXP.forward": [[61, 63], ["covidmodel.PEXP.network"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "network", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.covidmodel.CovidNet.__init__": [[66, 128], ["torch.Module.__init__", "covidmodel.CovidNet.add_module", "covidmodel.CovidNet.add_module", "covidmodel.CovidNet.add_module", "covidmodel.CovidNet.add_module", "covidmodel.CovidNet.add_module", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "covidmodel.CovidNet.add_module", "covidmodel.CovidNet.add_module", "covidmodel.CovidNet.add_module", "covidmodel.CovidNet.add_module", "covidmodel.Flatten", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "covidmodel.CovidNet.add_module", "covidmodel.CovidNet.add_module", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "covidmodel.PEXP"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", "=", "\"small\"", ",", "num_classes", "=", "3", ")", ":", "\n", "        ", "super", "(", "CovidNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "filters", "=", "{", "\n", "\"pexp1_1\"", ":", "[", "64", ",", "256", "]", ",", "\n", "\"pexp1_2\"", ":", "[", "256", ",", "256", "]", ",", "\n", "\"pexp1_3\"", ":", "[", "256", ",", "256", "]", ",", "\n", "\"pexp2_1\"", ":", "[", "256", ",", "512", "]", ",", "\n", "\"pexp2_2\"", ":", "[", "512", ",", "512", "]", ",", "\n", "\"pexp2_3\"", ":", "[", "512", ",", "512", "]", ",", "\n", "\"pexp2_4\"", ":", "[", "512", ",", "512", "]", ",", "\n", "\"pexp3_1\"", ":", "[", "512", ",", "1024", "]", ",", "\n", "\"pexp3_2\"", ":", "[", "1024", ",", "1024", "]", ",", "\n", "\"pexp3_3\"", ":", "[", "1024", ",", "1024", "]", ",", "\n", "\"pexp3_4\"", ":", "[", "1024", ",", "1024", "]", ",", "\n", "\"pexp3_5\"", ":", "[", "1024", ",", "1024", "]", ",", "\n", "\"pexp3_6\"", ":", "[", "1024", ",", "1024", "]", ",", "\n", "\"pexp4_1\"", ":", "[", "1024", ",", "2048", "]", ",", "\n", "\"pexp4_2\"", ":", "[", "2048", ",", "2048", "]", ",", "\n", "\"pexp4_3\"", ":", "[", "2048", ",", "2048", "]", ",", "\n", "}", "\n", "\n", "self", ".", "add_module", "(", "\n", "\"conv1\"", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "3", ",", "\n", "out_channels", "=", "64", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "3", ")", ",", "\n", ")", "\n", "for", "key", "in", "filters", ":", "\n", "\n", "            ", "if", "\"pool\"", "in", "key", ":", "\n", "                ", "self", ".", "add_module", "(", "key", ",", "\n", "nn", ".", "MaxPool2d", "(", "filters", "[", "key", "]", "[", "0", "]", ",", "filters", "[", "key", "]", "[", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "add_module", "(", "key", ",", "PEXP", "(", "filters", "[", "key", "]", "[", "0", "]", ",", "filters", "[", "key", "]", "[", "1", "]", ")", ")", "\n", "\n", "", "", "if", "model", "==", "\"large\"", ":", "\n", "\n", "            ", "self", ".", "add_module", "(", "\n", "\"conv1_1x1\"", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "1", ")", ")", "\n", "self", ".", "add_module", "(", "\n", "\"conv2_1x1\"", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "1", ")", ")", "\n", "self", ".", "add_module", "(", "\n", "\"conv3_1x1\"", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "1", ")", ",", "\n", ")", "\n", "self", ".", "add_module", "(", "\n", "\"conv4_1x1\"", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "1024", ",", "out_channels", "=", "2048", ",", "kernel_size", "=", "1", ")", ",", "\n", ")", "\n", "\n", "self", ".", "__forward__", "=", "self", ".", "forward_large_net", "\n", "", "else", ":", "\n", "            ", "self", ".", "__forward__", "=", "self", ".", "forward_small_net", "\n", "", "self", ".", "add_module", "(", "\"flatten\"", ",", "Flatten", "(", ")", ")", "\n", "self", ".", "add_module", "(", "\"fc1\"", ",", "nn", ".", "Linear", "(", "7", "*", "7", "*", "2048", ",", "1024", ")", ")", "\n", "\n", "self", ".", "add_module", "(", "\"fc2\"", ",", "nn", ".", "Linear", "(", "1024", ",", "256", ")", ")", "\n", "self", ".", "add_module", "(", "\"classifier\"", ",", "nn", ".", "Linear", "(", "256", ",", "num_classes", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.covidmodel.CovidNet.forward": [[129, 131], ["covidmodel.CovidNet.__forward__"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "__forward__", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.covidmodel.CovidNet.forward_large_net": [[132, 185], ["torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "covidmodel.CovidNet.conv1_1x1", "covidmodel.CovidNet.pexp1_1", "covidmodel.CovidNet.pexp1_2", "covidmodel.CovidNet.pexp1_3", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "covidmodel.CovidNet.pexp2_1", "covidmodel.CovidNet.pexp2_2", "covidmodel.CovidNet.pexp2_3", "covidmodel.CovidNet.pexp2_4", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "covidmodel.CovidNet.pexp3_1", "covidmodel.CovidNet.pexp3_2", "covidmodel.CovidNet.pexp3_3", "covidmodel.CovidNet.pexp3_4", "covidmodel.CovidNet.pexp3_5", "covidmodel.CovidNet.pexp3_6", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "covidmodel.CovidNet.pexp4_1", "covidmodel.CovidNet.pexp4_2", "covidmodel.CovidNet.pexp4_3", "covidmodel.CovidNet.flatten", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "covidmodel.CovidNet.classifier", "torch.relu", "torch.relu", "torch.relu", "covidmodel.CovidNet.conv2_1x1", "covidmodel.CovidNet.conv3_1x1", "covidmodel.CovidNet.conv4_1x1", "covidmodel.CovidNet.fc1", "covidmodel.CovidNet.fc2", "covidmodel.CovidNet.conv1", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d"], "methods", ["None"], ["", "def", "forward_large_net", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "F", ".", "max_pool2d", "(", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", ",", "2", ")", "\n", "out_conv1_1x1", "=", "self", ".", "conv1_1x1", "(", "x", ")", "\n", "\n", "pepx11", "=", "self", ".", "pexp1_1", "(", "x", ")", "\n", "pepx12", "=", "self", ".", "pexp1_2", "(", "pepx11", "+", "out_conv1_1x1", ")", "\n", "pepx13", "=", "self", ".", "pexp1_3", "(", "pepx12", "+", "pepx11", "+", "out_conv1_1x1", ")", "\n", "\n", "out_conv2_1x1", "=", "F", ".", "max_pool2d", "(", "\n", "self", ".", "conv2_1x1", "(", "pepx12", "+", "pepx11", "+", "pepx13", "+", "out_conv1_1x1", ")", ",", "2", ")", "\n", "\n", "pepx21", "=", "self", ".", "pexp2_1", "(", "\n", "F", ".", "max_pool2d", "(", "pepx13", ",", "2", ")", "+", "F", ".", "max_pool2d", "(", "pepx11", ",", "2", ")", "+", "\n", "F", ".", "max_pool2d", "(", "pepx12", ",", "2", ")", "+", "F", ".", "max_pool2d", "(", "out_conv1_1x1", ",", "2", ")", ")", "\n", "pepx22", "=", "self", ".", "pexp2_2", "(", "pepx21", "+", "out_conv2_1x1", ")", "\n", "pepx23", "=", "self", ".", "pexp2_3", "(", "pepx22", "+", "pepx21", "+", "out_conv2_1x1", ")", "\n", "pepx24", "=", "self", ".", "pexp2_4", "(", "pepx23", "+", "pepx21", "+", "pepx22", "+", "out_conv2_1x1", ")", "\n", "\n", "out_conv3_1x1", "=", "F", ".", "max_pool2d", "(", "\n", "self", ".", "conv3_1x1", "(", "pepx22", "+", "pepx21", "+", "pepx23", "+", "pepx24", "+", "out_conv2_1x1", ")", ",", "\n", "2", ")", "\n", "\n", "pepx31", "=", "self", ".", "pexp3_1", "(", "\n", "F", ".", "max_pool2d", "(", "pepx24", ",", "2", ")", "+", "F", ".", "max_pool2d", "(", "pepx21", ",", "2", ")", "+", "\n", "F", ".", "max_pool2d", "(", "pepx22", ",", "2", ")", "+", "F", ".", "max_pool2d", "(", "pepx23", ",", "2", ")", "+", "\n", "F", ".", "max_pool2d", "(", "out_conv2_1x1", ",", "2", ")", ")", "\n", "pepx32", "=", "self", ".", "pexp3_2", "(", "pepx31", "+", "out_conv3_1x1", ")", "\n", "pepx33", "=", "self", ".", "pexp3_3", "(", "pepx31", "+", "pepx32", "+", "out_conv3_1x1", ")", "\n", "pepx34", "=", "self", ".", "pexp3_4", "(", "pepx31", "+", "pepx32", "+", "pepx33", "+", "out_conv3_1x1", ")", "\n", "pepx35", "=", "self", ".", "pexp3_5", "(", "pepx31", "+", "pepx32", "+", "pepx33", "+", "pepx34", "+", "\n", "out_conv3_1x1", ")", "\n", "pepx36", "=", "self", ".", "pexp3_6", "(", "pepx31", "+", "pepx32", "+", "pepx33", "+", "pepx34", "+", "pepx35", "+", "\n", "out_conv3_1x1", ")", "\n", "\n", "out_conv4_1x1", "=", "F", ".", "max_pool2d", "(", "\n", "self", ".", "conv4_1x1", "(", "pepx31", "+", "pepx32", "+", "pepx33", "+", "pepx34", "+", "pepx35", "+", "\n", "pepx36", "+", "out_conv3_1x1", ")", ",", "\n", "2", ",", "\n", ")", "\n", "\n", "pepx41", "=", "self", ".", "pexp4_1", "(", "\n", "F", ".", "max_pool2d", "(", "pepx31", ",", "2", ")", "+", "F", ".", "max_pool2d", "(", "pepx32", ",", "2", ")", "+", "\n", "F", ".", "max_pool2d", "(", "pepx32", ",", "2", ")", "+", "F", ".", "max_pool2d", "(", "pepx34", ",", "2", ")", "+", "\n", "F", ".", "max_pool2d", "(", "pepx35", ",", "2", ")", "+", "F", ".", "max_pool2d", "(", "pepx36", ",", "2", ")", "+", "\n", "F", ".", "max_pool2d", "(", "out_conv3_1x1", ",", "2", ")", ")", "\n", "pepx42", "=", "self", ".", "pexp4_2", "(", "pepx41", "+", "out_conv4_1x1", ")", "\n", "pepx43", "=", "self", ".", "pexp4_3", "(", "pepx41", "+", "pepx42", "+", "out_conv4_1x1", ")", "\n", "flattened", "=", "self", ".", "flatten", "(", "pepx41", "+", "pepx42", "+", "pepx43", "+", "out_conv4_1x1", ")", "\n", "\n", "fc1out", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "flattened", ")", ")", "\n", "fc2out", "=", "F", ".", "relu", "(", "self", ".", "fc2", "(", "fc1out", ")", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "fc2out", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.covidmodel.CovidNet.forward_small_net": [[186, 221], ["torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "covidmodel.CovidNet.pexp1_1", "covidmodel.CovidNet.pexp1_2", "covidmodel.CovidNet.pexp1_3", "covidmodel.CovidNet.pexp2_1", "covidmodel.CovidNet.pexp2_2", "covidmodel.CovidNet.pexp2_3", "covidmodel.CovidNet.pexp2_4", "covidmodel.CovidNet.pexp3_1", "covidmodel.CovidNet.pexp3_2", "covidmodel.CovidNet.pexp3_3", "covidmodel.CovidNet.pexp3_4", "covidmodel.CovidNet.pexp3_5", "covidmodel.CovidNet.pexp3_6", "covidmodel.CovidNet.pexp4_1", "covidmodel.CovidNet.pexp4_2", "covidmodel.CovidNet.pexp4_3", "covidmodel.CovidNet.flatten", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "covidmodel.CovidNet.classifier", "torch.relu", "torch.relu", "torch.relu", "covidmodel.CovidNet.fc1", "covidmodel.CovidNet.fc2", "covidmodel.CovidNet.conv1", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d"], "methods", ["None"], ["", "def", "forward_small_net", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "F", ".", "max_pool2d", "(", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", ",", "2", ")", "\n", "\n", "pepx11", "=", "self", ".", "pexp1_1", "(", "x", ")", "\n", "pepx12", "=", "self", ".", "pexp1_2", "(", "pepx11", ")", "\n", "pepx13", "=", "self", ".", "pexp1_3", "(", "pepx12", "+", "pepx11", ")", "\n", "\n", "pepx21", "=", "self", ".", "pexp2_1", "(", "\n", "F", ".", "max_pool2d", "(", "pepx13", ",", "2", ")", "+", "F", ".", "max_pool2d", "(", "pepx11", ",", "2", ")", "+", "\n", "F", ".", "max_pool2d", "(", "pepx12", ",", "2", ")", ")", "\n", "pepx22", "=", "self", ".", "pexp2_2", "(", "pepx21", ")", "\n", "pepx23", "=", "self", ".", "pexp2_3", "(", "pepx22", "+", "pepx21", ")", "\n", "pepx24", "=", "self", ".", "pexp2_4", "(", "pepx23", "+", "pepx21", "+", "pepx22", ")", "\n", "\n", "pepx31", "=", "self", ".", "pexp3_1", "(", "\n", "F", ".", "max_pool2d", "(", "pepx24", ",", "2", ")", "+", "F", ".", "max_pool2d", "(", "pepx21", ",", "2", ")", "+", "\n", "F", ".", "max_pool2d", "(", "pepx22", ",", "2", ")", "+", "F", ".", "max_pool2d", "(", "pepx23", ",", "2", ")", ")", "\n", "pepx32", "=", "self", ".", "pexp3_2", "(", "pepx31", ")", "\n", "pepx33", "=", "self", ".", "pexp3_3", "(", "pepx31", "+", "pepx32", ")", "\n", "pepx34", "=", "self", ".", "pexp3_4", "(", "pepx31", "+", "pepx32", "+", "pepx33", ")", "\n", "pepx35", "=", "self", ".", "pexp3_5", "(", "pepx31", "+", "pepx32", "+", "pepx33", "+", "pepx34", ")", "\n", "pepx36", "=", "self", ".", "pexp3_6", "(", "pepx31", "+", "pepx32", "+", "pepx33", "+", "pepx34", "+", "pepx35", ")", "\n", "\n", "pepx41", "=", "self", ".", "pexp4_1", "(", "\n", "F", ".", "max_pool2d", "(", "pepx31", ",", "2", ")", "+", "F", ".", "max_pool2d", "(", "pepx32", ",", "2", ")", "+", "\n", "F", ".", "max_pool2d", "(", "pepx32", ",", "2", ")", "+", "F", ".", "max_pool2d", "(", "pepx34", ",", "2", ")", "+", "\n", "F", ".", "max_pool2d", "(", "pepx35", ",", "2", ")", "+", "F", ".", "max_pool2d", "(", "pepx36", ",", "2", ")", ")", "\n", "pepx42", "=", "self", ".", "pexp4_2", "(", "pepx41", ")", "\n", "pepx43", "=", "self", ".", "pexp4_3", "(", "pepx41", "+", "pepx42", ")", "\n", "flattened", "=", "self", ".", "flatten", "(", "pepx41", "+", "pepx42", "+", "pepx43", ")", "\n", "\n", "fc1out", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "flattened", ")", ")", "\n", "fc2out", "=", "F", ".", "relu", "(", "self", ".", "fc2", "(", "fc1out", ")", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "fc2out", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.covidmodel.COVIDNet": [[223, 225], ["covidmodel.CovidNet"], "function", ["None"], ["", "", "def", "COVIDNet", "(", "num_classes", "=", "3", ")", ":", "\n", "    ", "return", "CovidNet", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.covidmodel.ResNet18_COVID": [[227, 231], ["torchvision.models.resnet18", "torch.Linear"], "function", ["None"], ["", "def", "ResNet18_COVID", "(", "num_classes", "=", "3", ")", ":", "\n", "    ", "net", "=", "models", ".", "resnet18", "(", "pretrained", "=", "True", ")", "\n", "net", ".", "fc", "=", "nn", ".", "Linear", "(", "512", ",", "num_classes", ")", "\n", "return", "net", "\n", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.vgg.VGG.__init__": [[57, 61], ["torch.Module.__init__", "vgg.VGG._make_layers", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.NasNetA._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "vgg_name", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "cfg", "[", "vgg_name", "]", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "512", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.vgg.VGG.forward": [[62, 67], ["vgg.VGG.features", "vgg.VGG.view", "vgg.VGG.classifier", "vgg.VGG.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.vgg.VGG._make_layers": [[68, 83], ["torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "x", "in", "cfg", ":", "\n", "            ", "if", "x", "==", "\"M\"", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "x", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "x", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "]", "\n", "in_channels", "=", "x", "\n", "", "", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.simple.SimpleConvNet.__init__": [[10, 25], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "simple.SimpleConvNet._get_conv_output", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.simple.SimpleConvNet._get_conv_output"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "SimpleConvNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1_1", "=", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "3", ",", "1", ")", "\n", "self", ".", "conv1_2", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "1", ")", "\n", "# self.conv1_bn = nn.BatchNorm2d(32)", "\n", "self", ".", "conv2_1", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "1", ")", "\n", "self", ".", "conv2_2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ")", "\n", "# self.conv2_bn = nn.BatchNorm2d(64)", "\n", "self", ".", "conv3_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "1", ")", "\n", "self", ".", "conv3_2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ")", "\n", "# self.conv3_bn = nn.BatchNorm2d(128)", "\n", "self", ".", "n_size", "=", "self", ".", "_get_conv_output", "(", "(", "3", ",", "32", ",", "32", ")", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "self", ".", "n_size", ",", "1024", ")", "\n", "# self.bn1 = nn.BatchNorm1d(num_features=1024)", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "1024", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.simple.SimpleConvNet.forward": [[26, 43], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "simple.SimpleConvNet.view", "torch.relu", "torch.relu", "torch.relu", "simple.SimpleConvNet.fc2", "simple.SimpleConvNet.conv1_1", "simple.SimpleConvNet.conv1_2", "simple.SimpleConvNet.conv2_1", "simple.SimpleConvNet.conv2_2", "simple.SimpleConvNet.conv3_1", "simple.SimpleConvNet.conv3_2", "simple.SimpleConvNet.fc1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_2", "(", "x", ")", ")", "\n", "# x = self.conv1_bn(x)", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "2", ",", "2", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv2_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv2_2", "(", "x", ")", ")", "\n", "# x = self.conv2_bn(x)", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "2", ",", "2", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv3_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv3_2", "(", "x", ")", ")", "\n", "# x = self.conv3_bn(x)", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "self", ".", "n_size", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "x", ")", ")", "\n", "# x = self.bn1(x)", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.simple.SimpleConvNet._get_conv_output": [[44, 50], ["torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "simple.SimpleConvNet._forward_features", "simple.SimpleConvNet.data.view().size", "simple.SimpleConvNet.data.view"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.simple.SimpleConvNet._forward_features"], ["", "def", "_get_conv_output", "(", "self", ",", "shape", ")", ":", "\n", "        ", "bs", "=", "1", "\n", "input", "=", "torch", ".", "rand", "(", "bs", ",", "*", "shape", ")", "\n", "output_feat", "=", "self", ".", "_forward_features", "(", "input", ")", "\n", "n_size", "=", "output_feat", ".", "data", ".", "view", "(", "bs", ",", "-", "1", ")", ".", "size", "(", "1", ")", "\n", "return", "n_size", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.simple.SimpleConvNet._forward_features": [[51, 61], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "simple.SimpleConvNet.conv1_1", "simple.SimpleConvNet.conv1_2", "simple.SimpleConvNet.conv2_1", "simple.SimpleConvNet.conv2_2", "simple.SimpleConvNet.conv3_1", "simple.SimpleConvNet.conv3_2"], "methods", ["None"], ["", "def", "_forward_features", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "2", ",", "2", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv2_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv2_2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "2", ",", "2", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv3_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv3_2", "(", "x", ")", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.SeperableConv2d.__init__": [[12, 22], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "output_channels", ",", "kernel_size", ",", "**", "kwargs", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "depthwise", "=", "nn", ".", "Conv2d", "(", "input_channels", ",", "\n", "input_channels", ",", "\n", "kernel_size", ",", "\n", "groups", "=", "input_channels", ",", "\n", "**", "kwargs", ")", "\n", "\n", "self", ".", "pointwise", "=", "nn", ".", "Conv2d", "(", "input_channels", ",", "output_channels", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.SeperableConv2d.forward": [[23, 28], ["nasnet.SeperableConv2d.depthwise", "nasnet.SeperableConv2d.pointwise"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "depthwise", "(", "x", ")", "\n", "x", "=", "self", ".", "pointwise", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.SeperableBranch.__init__": [[31, 51], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "nasnet.SeperableConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "nasnet.SeperableConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "int"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "output_channels", ",", "kernel_size", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"Adds 2 blocks of [relu-separable conv-batchnorm].\"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "block1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "SeperableConv2d", "(", "input_channels", ",", "output_channels", ",", "kernel_size", ",", "\n", "**", "kwargs", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "output_channels", ")", ",", "\n", ")", "\n", "\n", "self", ".", "block2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "SeperableConv2d", "(", "\n", "output_channels", ",", "\n", "output_channels", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "int", "(", "kernel_size", "/", "2", ")", ",", "\n", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "output_channels", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.SeperableBranch.forward": [[53, 58], ["nasnet.SeperableBranch.block1", "nasnet.SeperableBranch.block2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "block1", "(", "x", ")", "\n", "x", "=", "self", ".", "block2", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.Fit.__init__": [[66, 88], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.ConstantPad2d", "torch.ConstantPad2d", "torch.ConstantPad2d", "torch.ConstantPad2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "int", "int"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["def", "__init__", "(", "self", ",", "prev_filters", ",", "filters", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "p1", "=", "nn", ".", "Sequential", "(", "nn", ".", "AvgPool2d", "(", "1", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "prev_filters", ",", "int", "(", "filters", "/", "2", ")", ",", "1", ")", ")", "\n", "\n", "# make sure there is no information loss", "\n", "self", ".", "p2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConstantPad2d", "(", "(", "0", ",", "1", ",", "0", ",", "1", ")", ",", "0", ")", ",", "\n", "nn", ".", "ConstantPad2d", "(", "(", "-", "1", ",", "0", ",", "-", "1", ",", "0", ")", ",", "0", ")", ",", "# cropping", "\n", "nn", ".", "AvgPool2d", "(", "1", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "prev_filters", ",", "int", "(", "filters", "/", "2", ")", ",", "1", ")", ",", "\n", ")", "\n", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "filters", ")", "\n", "\n", "self", ".", "dim_reduce", "=", "nn", ".", "Sequential", "(", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "prev_filters", ",", "filters", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "filters", ")", ")", "\n", "\n", "self", ".", "filters", "=", "filters", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.Fit.forward": [[89, 106], ["x.size", "nasnet.Fit.size", "nasnet.Fit.relu", "nasnet.Fit.p1", "nasnet.Fit.p2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "nasnet.Fit.bn", "nasnet.Fit.size", "nasnet.Fit.dim_reduce"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "x", ",", "prev", "=", "inputs", "\n", "if", "prev", "is", "None", ":", "\n", "            ", "return", "x", "\n", "\n", "# image size does not match", "\n", "", "elif", "x", ".", "size", "(", "2", ")", "!=", "prev", ".", "size", "(", "2", ")", ":", "\n", "            ", "prev", "=", "self", ".", "relu", "(", "prev", ")", "\n", "p1", "=", "self", ".", "p1", "(", "prev", ")", "\n", "p2", "=", "self", ".", "p2", "(", "prev", ")", "\n", "prev", "=", "torch", ".", "cat", "(", "[", "p1", ",", "p2", "]", ",", "1", ")", "\n", "prev", "=", "self", ".", "bn", "(", "prev", ")", "\n", "\n", "", "elif", "prev", ".", "size", "(", "1", ")", "!=", "self", ".", "filters", ":", "\n", "            ", "prev", "=", "self", ".", "dim_reduce", "(", "prev", ")", "\n", "\n", "", "return", "prev", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.NormalCell.__init__": [[109, 154], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "nasnet.SeperableBranch", "torch.Sequential", "torch.Sequential", "nasnet.SeperableBranch", "nasnet.SeperableBranch", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "nasnet.SeperableBranch", "nasnet.SeperableBranch", "nasnet.Fit", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "x_in", ",", "prev_in", ",", "output_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dem_reduce", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "x_in", ",", "output_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "output_channels", ")", ",", "\n", ")", "\n", "\n", "self", ".", "block1_left", "=", "SeperableBranch", "(", "output_channels", ",", "\n", "output_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "block1_right", "=", "nn", ".", "Sequential", "(", ")", "\n", "\n", "self", ".", "block2_left", "=", "SeperableBranch", "(", "output_channels", ",", "\n", "output_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "block2_right", "=", "SeperableBranch", "(", "output_channels", ",", "\n", "output_channels", ",", "\n", "kernel_size", "=", "5", ",", "\n", "padding", "=", "2", ",", "\n", "bias", "=", "False", ")", "\n", "\n", "self", ".", "block3_left", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "block3_right", "=", "nn", ".", "Sequential", "(", ")", "\n", "\n", "self", ".", "block4_left", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "block4_right", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "block5_left", "=", "SeperableBranch", "(", "output_channels", ",", "\n", "output_channels", ",", "\n", "kernel_size", "=", "5", ",", "\n", "padding", "=", "2", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "block5_right", "=", "SeperableBranch", "(", "output_channels", ",", "\n", "output_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "\n", "self", ".", "fit", "=", "Fit", "(", "prev_in", ",", "output_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.NormalCell.forward": [[155, 171], ["nasnet.NormalCell.fit", "nasnet.NormalCell.dem_reduce", "nasnet.NormalCell.block1_left", "nasnet.NormalCell.block1_right", "nasnet.NormalCell.block2_left", "nasnet.NormalCell.block2_right", "nasnet.NormalCell.block3_left", "nasnet.NormalCell.block3_right", "nasnet.NormalCell.block4_left", "nasnet.NormalCell.block4_right", "nasnet.NormalCell.block5_left", "nasnet.NormalCell.block5_right", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", ",", "prev", "=", "x", "\n", "\n", "# return transformed x as new x, and original x as prev", "\n", "# only prev tensor needs to be modified", "\n", "prev", "=", "self", ".", "fit", "(", "(", "x", ",", "prev", ")", ")", "\n", "\n", "h", "=", "self", ".", "dem_reduce", "(", "x", ")", "\n", "\n", "x1", "=", "self", ".", "block1_left", "(", "h", ")", "+", "self", ".", "block1_right", "(", "h", ")", "\n", "x2", "=", "self", ".", "block2_left", "(", "prev", ")", "+", "self", ".", "block2_right", "(", "h", ")", "\n", "x3", "=", "self", ".", "block3_left", "(", "h", ")", "+", "self", ".", "block3_right", "(", "h", ")", "\n", "x4", "=", "self", ".", "block4_left", "(", "prev", ")", "+", "self", ".", "block4_right", "(", "prev", ")", "\n", "x5", "=", "self", ".", "block5_left", "(", "prev", ")", "+", "self", ".", "block5_right", "(", "prev", ")", "\n", "\n", "return", "torch", ".", "cat", "(", "[", "prev", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", "]", ",", "1", ")", ",", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.ReductionCell.__init__": [[174, 224], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "nasnet.SeperableBranch", "nasnet.SeperableBranch", "torch.MaxPool2d", "torch.MaxPool2d", "nasnet.SeperableBranch", "torch.AvgPool2d", "torch.AvgPool2d", "nasnet.SeperableBranch", "torch.MaxPool2d", "torch.MaxPool2d", "nasnet.SeperableBranch", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Sequential", "torch.Sequential", "nasnet.Fit", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "x_in", ",", "prev_in", ",", "output_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dim_reduce", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "x_in", ",", "output_channels", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "output_channels", ")", ",", "\n", ")", "\n", "\n", "# block1", "\n", "self", ".", "layer1block1_left", "=", "SeperableBranch", "(", "output_channels", ",", "\n", "output_channels", ",", "\n", "7", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "3", ")", "\n", "self", ".", "layer1block1_right", "=", "SeperableBranch", "(", "output_channels", ",", "\n", "output_channels", ",", "\n", "5", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "2", ")", "\n", "\n", "# block2", "\n", "self", ".", "layer1block2_left", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1block2_right", "=", "SeperableBranch", "(", "output_channels", ",", "\n", "output_channels", ",", "\n", "7", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "3", ")", "\n", "\n", "# block3", "\n", "self", ".", "layer1block3_left", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "2", ",", "1", ")", "\n", "self", ".", "layer1block3_right", "=", "SeperableBranch", "(", "output_channels", ",", "\n", "output_channels", ",", "\n", "5", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "2", ")", "\n", "\n", "# block5", "\n", "self", ".", "layer2block1_left", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "2", ",", "1", ")", "\n", "self", ".", "layer2block1_right", "=", "SeperableBranch", "(", "output_channels", ",", "\n", "output_channels", ",", "\n", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "# block4", "\n", "self", ".", "layer2block2_left", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "layer2block2_right", "=", "nn", ".", "Sequential", "(", ")", "\n", "\n", "self", ".", "fit", "=", "Fit", "(", "prev_in", ",", "output_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.ReductionCell.forward": [[225, 253], ["nasnet.ReductionCell.fit", "nasnet.ReductionCell.dim_reduce", "nasnet.ReductionCell.layer1block1_left", "nasnet.ReductionCell.layer1block1_right", "nasnet.ReductionCell.layer1block2_left", "nasnet.ReductionCell.layer1block2_right", "nasnet.ReductionCell.layer1block3_left", "nasnet.ReductionCell.layer1block3_right", "nasnet.ReductionCell.layer2block1_left", "nasnet.ReductionCell.layer2block1_right", "nasnet.ReductionCell.layer2block2_left", "nasnet.ReductionCell.layer2block2_right", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", ",", "prev", "=", "x", "\n", "prev", "=", "self", ".", "fit", "(", "(", "x", ",", "prev", ")", ")", "\n", "\n", "h", "=", "self", ".", "dim_reduce", "(", "x", ")", "\n", "\n", "layer1block1", "=", "self", ".", "layer1block1_left", "(", "prev", ")", "+", "self", ".", "layer1block1_right", "(", "\n", "h", ")", "\n", "layer1block2", "=", "self", ".", "layer1block2_left", "(", "h", ")", "+", "self", ".", "layer1block2_right", "(", "\n", "prev", ")", "\n", "layer1block3", "=", "self", ".", "layer1block3_left", "(", "h", ")", "+", "self", ".", "layer1block3_right", "(", "\n", "prev", ")", "\n", "layer2block1", "=", "self", ".", "layer2block1_left", "(", "h", ")", "+", "self", ".", "layer2block1_right", "(", "\n", "layer1block1", ")", "\n", "layer2block2", "=", "self", ".", "layer2block2_left", "(", "\n", "layer1block1", ")", "+", "self", ".", "layer2block2_right", "(", "layer1block2", ")", "\n", "\n", "return", "(", "\n", "torch", ".", "cat", "(", "\n", "[", "\n", "layer1block2", ",", "# https://github.com/keras-team/keras-applications/blob/master/keras_applications/nasnet.py line 739", "\n", "layer1block3", ",", "\n", "layer2block1", ",", "\n", "layer2block2", ",", "\n", "]", ",", "\n", "1", ",", "\n", ")", ",", "\n", "x", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.NasNetA.__init__": [[257, 279], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "nasnet.NasNetA._make_layers", "torch.ReLU", "torch.ReLU", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.NasNetA._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "\n", "repeat_cell_num", ",", "\n", "reduction_num", ",", "\n", "filters", ",", "\n", "stemfilter", ",", "\n", "num_classes", "=", "100", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "stem", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "stemfilter", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "stemfilter", ")", ",", "\n", ")", "\n", "\n", "self", ".", "prev_filters", "=", "stemfilter", "\n", "self", ".", "x_filters", "=", "stemfilter", "\n", "self", ".", "filters", "=", "filters", "\n", "\n", "self", ".", "cell_layers", "=", "self", ".", "_make_layers", "(", "repeat_cell_num", ",", "reduction_num", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "avg", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "self", ".", "filters", "*", "6", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.NasNetA._make_normal": [[280, 297], ["range", "layers.append", "block"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.block"], ["", "def", "_make_normal", "(", "self", ",", "block", ",", "repeat", ",", "output", ")", ":", "\n", "        ", "\"\"\"make normal cell\n        Args:\n            block: cell type\n            repeat: number of repeated normal cell\n            output: output filters for each branch in normal cell\n        Returns:\n            stacked normal cells\n        \"\"\"", "\n", "\n", "layers", "=", "[", "]", "\n", "for", "r", "in", "range", "(", "repeat", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "x_filters", ",", "self", ".", "prev_filters", ",", "output", ")", ")", "\n", "self", ".", "prev_filters", "=", "self", ".", "x_filters", "\n", "self", ".", "x_filters", "=", "output", "*", "6", "# concatenate 6 branches", "\n", "\n", "", "return", "layers", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.NasNetA._make_reduction": [[298, 312], ["block"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.block"], ["", "def", "_make_reduction", "(", "self", ",", "block", ",", "output", ")", ":", "\n", "        ", "\"\"\"make normal cell\n        Args:\n            block: cell type\n            output: output filters for each branch in reduction cell\n        Returns:\n            reduction cell\n        \"\"\"", "\n", "\n", "reduction", "=", "block", "(", "self", ".", "x_filters", ",", "self", ".", "prev_filters", ",", "output", ")", "\n", "self", ".", "prev_filters", "=", "self", ".", "x_filters", "\n", "self", ".", "x_filters", "=", "output", "*", "4", "# stack for 4 branches", "\n", "\n", "return", "reduction", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.NasNetA._make_layers": [[313, 327], ["range", "layers.extend", "torch.Sequential", "torch.Sequential", "layers.extend", "layers.append", "nasnet.NasNetA._make_normal", "nasnet.NasNetA._make_normal", "nasnet.NasNetA._make_reduction"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.NasNetA._make_normal", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.NasNetA._make_normal", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.NasNetA._make_reduction"], ["", "def", "_make_layers", "(", "self", ",", "repeat_cell_num", ",", "reduction_num", ")", ":", "\n", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "reduction_num", ")", ":", "\n", "\n", "            ", "layers", ".", "extend", "(", "\n", "self", ".", "_make_normal", "(", "NormalCell", ",", "repeat_cell_num", ",", "self", ".", "filters", ")", ")", "\n", "self", ".", "filters", "*=", "2", "\n", "layers", ".", "append", "(", "self", ".", "_make_reduction", "(", "ReductionCell", ",", "self", ".", "filters", ")", ")", "\n", "\n", "", "layers", ".", "extend", "(", "\n", "self", ".", "_make_normal", "(", "NormalCell", ",", "repeat_cell_num", ",", "self", ".", "filters", ")", ")", "\n", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.NasNetA.forward": [[328, 339], ["nasnet.NasNetA.stem", "nasnet.NasNetA.cell_layers", "nasnet.NasNetA.relu", "nasnet.NasNetA.avg", "nasnet.NasNetA.view", "nasnet.NasNetA.fc", "nasnet.NasNetA.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "stem", "(", "x", ")", "\n", "prev", "=", "None", "\n", "x", ",", "prev", "=", "self", ".", "cell_layers", "(", "(", "x", ",", "prev", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "avg", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.nasnet.nasnet": [[341, 345], ["nasnet.NasNetA"], "function", ["None"], ["", "", "def", "nasnet", "(", "num_classes", "=", "100", ")", ":", "\n", "\n", "# stem filters must be 44, it's a pytorch workaround, cant change to other number", "\n", "    ", "return", "NasNetA", "(", "4", ",", "2", ",", "44", ",", "44", ",", "num_classes", "=", "num_classes", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.BasicBlock.__init__": [[30, 48], ["torch.Module.__init__", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.conv3x3", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "in_planes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "in_planes", ",", "\n", "self", ".", "expansion", "*", "planes", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "False", ",", "\n", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.BasicBlock.forward": [[50, 56], ["torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn2", "resnet.BasicBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn1", "resnet.BasicBlock.conv2", "resnet.BasicBlock.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.PreActBlock.__init__": [[63, 79], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.conv3x3", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.conv3x3", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "PreActBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "in_planes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "in_planes", ",", "\n", "self", ".", "expansion", "*", "planes", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "False", ",", "\n", ")", ")", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.PreActBlock.forward": [[81, 88], ["torch.relu", "torch.relu", "torch.relu", "resnet.PreActBlock.shortcut", "resnet.PreActBlock.conv1", "resnet.PreActBlock.conv2", "resnet.PreActBlock.bn1", "torch.relu", "torch.relu", "torch.relu", "resnet.PreActBlock.bn2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "shortcut", "=", "self", ".", "shortcut", "(", "out", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "+=", "shortcut", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.Bottleneck.__init__": [[93, 121], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "\n", "planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "\n", "self", ".", "expansion", "*", "planes", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "in_planes", ",", "\n", "self", ".", "expansion", "*", "planes", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "False", ",", "\n", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.Bottleneck.forward": [[123, 130], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck.bn3", "resnet.Bottleneck.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck.bn1", "resnet.Bottleneck.bn2", "resnet.Bottleneck.conv3", "resnet.Bottleneck.conv1", "resnet.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.PreActBottleneck.__init__": [[137, 163], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "PreActBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "\n", "planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "\n", "self", ".", "expansion", "*", "planes", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "in_planes", ",", "\n", "self", ".", "expansion", "*", "planes", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "False", ",", "\n", ")", ")", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.PreActBottleneck.forward": [[165, 173], ["torch.relu", "torch.relu", "torch.relu", "resnet.PreActBottleneck.shortcut", "resnet.PreActBottleneck.conv1", "resnet.PreActBottleneck.conv2", "resnet.PreActBottleneck.conv3", "resnet.PreActBottleneck.bn1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet.PreActBottleneck.bn2", "resnet.PreActBottleneck.bn3"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "shortcut", "=", "self", ".", "shortcut", "(", "out", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "conv3", "(", "F", ".", "relu", "(", "self", ".", "bn3", "(", "out", ")", ")", ")", "\n", "out", "+=", "shortcut", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.ResNet.__init__": [[176, 187], ["torch.Module.__init__", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.conv3x3", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "3", ",", "64", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.ResNet._make_layer": [[188, 195], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.block"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.ResNet.forward": [[196, 215], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "torch.relu", "torch.relu", "torch.relu", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "resnet.ResNet.view", "resnet.ResNet.linear", "resnet.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "lin", "=", "0", ",", "lout", "=", "5", ")", ":", "\n", "        ", "out", "=", "x", "\n", "if", "lin", "<", "1", "and", "lout", ">", "-", "1", ":", "\n", "            ", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "", "if", "lin", "<", "2", "and", "lout", ">", "0", ":", "\n", "            ", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "", "if", "lin", "<", "3", "and", "lout", ">", "1", ":", "\n", "            ", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "", "if", "lin", "<", "4", "and", "lout", ">", "2", ":", "\n", "            ", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "", "if", "lin", "<", "5", "and", "lout", ">", "3", ":", "\n", "            ", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "", "if", "lout", ">", "4", ":", "\n", "            ", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.conv3x3": [[18, 25], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.ResNet18": [[217, 219], ["resnet.ResNet"], "function", ["None"], ["", "", "def", "ResNet18", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "PreActBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.ResNet18_basic": [[221, 223], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet18_basic", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.ResNet34": [[225, 227], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet34", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.ResNet50": [[229, 231], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet50", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.ResNet101": [[233, 235], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet101", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.ResNet152": [[237, 239], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet152", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.test": [[241, 245], ["resnet.ResNet18", "ResNet18.", "print", "torch.autograd.Variable", "net.size", "torch.randn", "torch.randn", "torch.randn"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnet.ResNet18"], ["", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "ResNet18", "(", ")", "\n", "y", "=", "net", "(", "Variable", "(", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", ")", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.Bottleneck.__init__": [[12, 25], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "growth_rate", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "\n", "4", "*", "growth_rate", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "4", "*", "growth_rate", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "4", "*", "growth_rate", ",", "\n", "growth_rate", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.Bottleneck.forward": [[26, 31], ["densenet.Bottleneck.conv1", "densenet.Bottleneck.conv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "densenet.Bottleneck.bn1", "densenet.Bottleneck.bn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out", ",", "x", "]", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.Transition.__init__": [[34, 38], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ")", ":", "\n", "        ", "super", "(", "Transition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.Transition.forward": [[39, 43], ["densenet.Transition.conv", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.relu", "torch.relu", "torch.relu", "densenet.Transition.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "F", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "2", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.DenseNet.__init__": [[46, 85], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "densenet.DenseNet._make_dense_layers", "int", "densenet.Transition", "densenet.DenseNet._make_dense_layers", "int", "densenet.Transition", "densenet.DenseNet._make_dense_layers", "int", "densenet.Transition", "densenet.DenseNet._make_dense_layers", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "math.floor", "math.floor", "math.floor"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.DenseNet._make_dense_layers", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.DenseNet._make_dense_layers", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.DenseNet._make_dense_layers", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.DenseNet._make_dense_layers"], ["    ", "def", "__init__", "(", "self", ",", "\n", "block", ",", "\n", "nblocks", ",", "\n", "growth_rate", "=", "12", ",", "\n", "reduction", "=", "0.5", ",", "\n", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "DenseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "growth_rate", "=", "growth_rate", "\n", "\n", "num_planes", "=", "2", "*", "growth_rate", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "\n", "num_planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "\n", "self", ".", "dense1", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "0", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "0", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans1", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense2", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "1", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "1", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans2", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense3", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "2", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "2", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans3", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense4", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "3", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "3", "]", "*", "growth_rate", "\n", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "num_planes", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "num_planes", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.DenseNet._make_dense_layers": [[86, 92], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.block"], ["", "def", "_make_dense_layers", "(", "self", ",", "block", ",", "in_planes", ",", "nblock", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nblock", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "in_planes", ",", "self", ".", "growth_rate", ")", ")", "\n", "in_planes", "+=", "self", ".", "growth_rate", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.DenseNet.forward": [[93, 103], ["densenet.DenseNet.conv1", "densenet.DenseNet.trans1", "densenet.DenseNet.trans2", "densenet.DenseNet.trans3", "densenet.DenseNet.dense4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "densenet.DenseNet.view", "densenet.DenseNet.linear", "densenet.DenseNet.dense1", "densenet.DenseNet.dense2", "densenet.DenseNet.dense3", "torch.relu", "torch.relu", "torch.relu", "densenet.DenseNet.size", "densenet.DenseNet.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "trans1", "(", "self", ".", "dense1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "trans2", "(", "self", ".", "dense2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "trans3", "(", "self", ".", "dense3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "dense4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "F", ".", "relu", "(", "self", ".", "bn", "(", "out", ")", ")", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.DenseNet121": [[105, 107], ["densenet.DenseNet"], "function", ["None"], ["", "", "def", "DenseNet121", "(", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "24", ",", "16", "]", ",", "growth_rate", "=", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.DenseNet169": [[109, 111], ["densenet.DenseNet"], "function", ["None"], ["", "def", "DenseNet169", "(", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "32", ",", "32", "]", ",", "growth_rate", "=", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.DenseNet201": [[113, 115], ["densenet.DenseNet"], "function", ["None"], ["", "def", "DenseNet201", "(", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "48", ",", "32", "]", ",", "growth_rate", "=", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.DenseNet161": [[117, 119], ["densenet.DenseNet"], "function", ["None"], ["", "def", "DenseNet161", "(", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "36", ",", "24", "]", ",", "growth_rate", "=", "48", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.densenet_cifar": [[121, 123], ["densenet.DenseNet"], "function", ["None"], ["", "def", "densenet_cifar", "(", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "24", ",", "16", "]", ",", "growth_rate", "=", "12", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.test_densenet": [[125, 130], ["densenet.densenet_cifar", "torch.randn", "torch.randn", "torch.randn", "densenet_cifar.", "print", "torch.autograd.Variable"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.densenet.densenet_cifar"], ["", "def", "test_densenet", "(", ")", ":", "\n", "    ", "net", "=", "densenet_cifar", "(", ")", "\n", "x", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "Variable", "(", "x", ")", ")", "\n", "print", "(", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.BasicBlock.__init__": [[37, 46], ["torch.Module.__init__", "multihead_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "multihead_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.conv3x3", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.BasicBlock.forward": [[47, 64], ["multihead_resnet.BasicBlock.conv1", "multihead_resnet.BasicBlock.bn1", "multihead_resnet.BasicBlock.relu", "multihead_resnet.BasicBlock.conv2", "multihead_resnet.BasicBlock.bn2", "multihead_resnet.BasicBlock.relu", "multihead_resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.Bottleneck.__init__": [[69, 80], ["torch.Module.__init__", "multihead_resnet.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "multihead_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "multihead_resnet.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.conv1x1", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.conv3x3", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "planes", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.Bottleneck.forward": [[81, 102], ["multihead_resnet.Bottleneck.conv1", "multihead_resnet.Bottleneck.bn1", "multihead_resnet.Bottleneck.relu", "multihead_resnet.Bottleneck.conv2", "multihead_resnet.Bottleneck.bn2", "multihead_resnet.Bottleneck.relu", "multihead_resnet.Bottleneck.conv3", "multihead_resnet.Bottleneck.bn3", "multihead_resnet.Bottleneck.relu", "multihead_resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.fc_block.__init__": [[105, 113], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "drop_rate", "=", "0.15", ")", ":", "\n", "        ", "super", "(", "fc_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "inplanes", ",", "planes", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "planes", ")", "\n", "if", "drop_rate", ">", "0", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "drop_rate", ")", "\n", "", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "drop_rate", "=", "drop_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.fc_block.forward": [[114, 121], ["multihead_resnet.fc_block.fc", "multihead_resnet.fc_block.bn", "multihead_resnet.fc_block.relu", "multihead_resnet.fc_block.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "if", "self", ".", "drop_rate", ">", "0", ":", "\n", "            ", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.ResNet.__init__": [[124, 172], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "multihead_resnet.ResNet._make_layer", "multihead_resnet.ResNet._make_layer", "multihead_resnet.ResNet._make_layer", "multihead_resnet.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "multihead_resnet.fc_block", "range", "multihead_resnet.ResNet.modules", "setattr", "isinstance", "multihead_resnet.ResNet.modules", "torch.Sequential", "torch.Sequential", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "str().zfill", "multihead_resnet.fc_block", "torch.Linear", "torch.Linear", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "str"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "\n", "block", ",", "\n", "layers", ",", "\n", "num_attributes", "=", "40", ",", "\n", "zero_init_residual", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "\n", "64", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "stem", "=", "fc_block", "(", "512", "*", "block", ".", "expansion", ",", "512", ")", "\n", "for", "i", "in", "range", "(", "num_attributes", ")", ":", "\n", "            ", "setattr", "(", "\n", "self", ",", "\n", "\"classifier\"", "+", "str", "(", "i", ")", ".", "zfill", "(", "2", ")", ",", "\n", "nn", ".", "Sequential", "(", "fc_block", "(", "512", ",", "256", ")", ",", "nn", ".", "Linear", "(", "256", ",", "2", ")", ")", ",", "\n", ")", "\n", "", "self", ".", "num_attributes", "=", "num_attributes", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "\n", "mode", "=", "\"fan_out\"", ",", "\n", "nonlinearity", "=", "\"relu\"", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.ResNet._make_layer": [[173, 188], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "multihead_resnet.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.block", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.conv1x1", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.block"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.ResNet.forward": [[189, 209], ["multihead_resnet.ResNet.conv1", "multihead_resnet.ResNet.bn1", "multihead_resnet.ResNet.relu", "multihead_resnet.ResNet.maxpool", "multihead_resnet.ResNet.layer1", "multihead_resnet.ResNet.layer2", "multihead_resnet.ResNet.layer3", "multihead_resnet.ResNet.layer4", "multihead_resnet.ResNet.avgpool", "multihead_resnet.ResNet.view", "multihead_resnet.ResNet.stem", "range", "multihead_resnet.ResNet.size", "getattr", "y.append", "getattr.", "str().zfill", "str"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "stem", "(", "x", ")", "\n", "\n", "y", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_attributes", ")", ":", "\n", "            ", "classifier", "=", "getattr", "(", "self", ",", "\"classifier\"", "+", "str", "(", "i", ")", ".", "zfill", "(", "2", ")", ")", "\n", "y", ".", "append", "(", "classifier", "(", "x", ")", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.conv3x3": [[15, 23], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.conv1x1": [[25, 32], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.multihead_resnet50": [[211, 221], ["multihead_resnet.ResNet", "multihead_resnet.init_pretrained_weights"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.init_pretrained_weights"], ["", "", "def", "multihead_resnet50", "(", "pretrained", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "init_pretrained_weights", "(", "model", ",", "model_urls", "[", "\"resnet50\"", "]", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.multihead_resnet.init_pretrained_weights": [[223, 239], ["torch.load_url", "model.state_dict", "model.state_dict.update", "model.load_state_dict", "print", "model_zoo.load_url.items", "model_dict[].size", "v.size"], "function", ["None"], ["", "def", "init_pretrained_weights", "(", "model", ",", "model_url", ")", ":", "\n", "    ", "\"\"\"\n    Initialize model with pretrained weights.\n    Layers that don't match with pretrained layers in name or size are kept unchanged.\n    \"\"\"", "\n", "pretrain_dict", "=", "model_zoo", ".", "load_url", "(", "model_url", ")", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "pretrain_dict", "=", "{", "\n", "k", ":", "v", "\n", "for", "k", ",", "v", "in", "pretrain_dict", ".", "items", "(", ")", "\n", "if", "k", "in", "model_dict", "and", "model_dict", "[", "k", "]", ".", "size", "(", ")", "==", "v", ".", "size", "(", ")", "\n", "}", "\n", "model_dict", ".", "update", "(", "pretrain_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "print", "(", "\n", "\"Initialized model with pretrained weights from {}\"", ".", "format", "(", "model_url", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.LeNet.LeNet.__init__": [[5, 15], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.MaxPool2d", "torch.nn.Conv2d", "torch.nn.MaxPool2d", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "LeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "6", ",", "5", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool2d", "(", "2", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "6", ",", "16", ",", "5", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "MaxPool2d", "(", "2", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "400", ",", "120", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "120", ",", "84", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "84", ",", "num_classes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.LeNet.LeNet.forward": [[16, 31], ["LeNet.LeNet.conv1", "LeNet.LeNet.relu", "LeNet.LeNet.pool1", "LeNet.LeNet.conv2", "LeNet.LeNet.relu", "LeNet.LeNet.pool2", "LeNet.LeNet.view", "LeNet.LeNet.fc1", "LeNet.LeNet.relu", "LeNet.LeNet.fc2", "LeNet.LeNet.relu", "LeNet.LeNet.fc3", "LeNet.LeNet.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "conv1", "(", "x", ")", "\n", "y", "=", "self", ".", "relu", "(", "y", ")", "\n", "y", "=", "self", ".", "pool1", "(", "y", ")", "\n", "y", "=", "self", ".", "conv2", "(", "y", ")", "\n", "y", "=", "self", ".", "relu", "(", "y", ")", "\n", "y", "=", "self", ".", "pool2", "(", "y", ")", "\n", "y", "=", "y", ".", "view", "(", "y", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "y", "=", "self", ".", "fc1", "(", "y", ")", "\n", "y", "=", "self", ".", "relu", "(", "y", ")", "\n", "y", "=", "self", ".", "fc2", "(", "y", ")", "\n", "y", "=", "self", ".", "relu", "(", "y", ")", "\n", "y", "=", "self", ".", "fc3", "(", "y", ")", "\n", "y", "=", "self", ".", "relu", "(", "y", ")", "\n", "return", "y", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.ResNeXtBottleneck.__init__": [[18, 70], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "resnext.ResNeXtBottleneck.shortcut.add_module", "resnext.ResNeXtBottleneck.shortcut.add_module", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "stride", ",", "cardinality", ",", "\n", "widen_factor", ")", ":", "\n", "        ", "\"\"\"Constructor\n        Args:\n            in_channels: input channel dimensionality\n            out_channels: output channel dimensionality\n            stride: conv stride. Replaces pooling layer.\n            cardinality: num of convolution groups.\n            widen_factor: factor to reduce the input dimensionality before convolution.\n        \"\"\"", "\n", "super", "(", "ResNeXtBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "D", "=", "cardinality", "*", "out_channels", "//", "widen_factor", "\n", "self", ".", "conv_reduce", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "\n", "D", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn_reduce", "=", "nn", ".", "BatchNorm2d", "(", "D", ")", "\n", "self", ".", "conv_conv", "=", "nn", ".", "Conv2d", "(", "\n", "D", ",", "\n", "D", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "cardinality", ",", "\n", "bias", "=", "False", ",", "\n", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "D", ")", "\n", "self", ".", "conv_expand", "=", "nn", ".", "Conv2d", "(", "D", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn_expand", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "in_channels", "!=", "out_channels", ":", "\n", "            ", "self", ".", "shortcut", ".", "add_module", "(", "\n", "\"shortcut_conv\"", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "False", ",", "\n", ")", ",", "\n", ")", "\n", "self", ".", "shortcut", ".", "add_module", "(", "\"shortcut_bn\"", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.ResNeXtBottleneck.forward": [[71, 80], ["resnext.ResNeXtBottleneck.conv_reduce", "torch.relu", "torch.relu", "resnext.ResNeXtBottleneck.conv_conv", "torch.relu", "torch.relu", "resnext.ResNeXtBottleneck.conv_expand", "resnext.ResNeXtBottleneck.bn_expand", "resnext.ResNeXtBottleneck.shortcut", "torch.relu", "torch.relu", "resnext.ResNeXtBottleneck.bn_reduce", "resnext.ResNeXtBottleneck.bn"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "bottleneck", "=", "self", ".", "conv_reduce", "(", "x", ")", "\n", "bottleneck", "=", "F", ".", "relu", "(", "self", ".", "bn_reduce", "(", "bottleneck", ")", ",", "inplace", "=", "True", ")", "\n", "bottleneck", "=", "self", ".", "conv_conv", "(", "bottleneck", ")", "\n", "bottleneck", "=", "F", ".", "relu", "(", "self", ".", "bn", "(", "bottleneck", ")", ",", "inplace", "=", "True", ")", "\n", "bottleneck", "=", "self", ".", "conv_expand", "(", "bottleneck", ")", "\n", "bottleneck", "=", "self", ".", "bn_expand", "(", "bottleneck", ")", "\n", "residual", "=", "self", ".", "shortcut", "(", "x", ")", "\n", "return", "F", ".", "relu", "(", "residual", "+", "bottleneck", ",", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.ResNeXtBottleneck.train": [[81, 91], ["super().train", "resnext.ResNeXtBottleneck.conv_conv.eval", "resnext.ResNeXtBottleneck.modules", "isinstance"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.train"], ["", "def", "train", "(", "self", ",", "mode", "=", "True", ",", "freeze_DP", "=", "True", ")", ":", "\n", "        ", "super", "(", "ResNeXtBottleneck", ",", "self", ")", ".", "train", "(", "mode", ")", "\n", "\n", "if", "freeze_DP", ":", "\n", "            ", "self", ".", "conv_conv", ".", "eval", "(", ")", "\n", "self", ".", "conv_conv", ".", "weight", ".", "requires_grad", "=", "False", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                    ", "m", ".", "weight", ".", "requires_grad", "=", "False", "\n", "m", ".", "bias", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.__init__": [[98, 142], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnext.CifarResNeXt.block", "resnext.CifarResNeXt.block", "resnext.CifarResNeXt.block", "torch.Linear", "torch.Linear", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "resnext.CifarResNeXt.state_dict", "key.split", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "key.split", "resnext.CifarResNeXt.state_dict", "resnext.CifarResNeXt.state_dict", "resnext.CifarResNeXt.state_dict"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.block", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.block", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.block"], ["def", "__init__", "(", "self", ",", "\n", "cardinality", ",", "\n", "depth", ",", "\n", "num_classes", ",", "\n", "widen_factor", "=", "4", ",", "\n", "dropRate", "=", "0", ")", ":", "\n", "        ", "\"\"\"Constructor\n        Args:\n            cardinality: number of convolution groups.\n            depth: number of layers.\n            num_classes: number of classes\n            widen_factor: factor to adjust the channel dimensionality\n        \"\"\"", "\n", "super", "(", "CifarResNeXt", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cardinality", "=", "cardinality", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "block_depth", "=", "(", "self", ".", "depth", "-", "2", ")", "//", "9", "\n", "self", ".", "widen_factor", "=", "widen_factor", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "output_size", "=", "64", "\n", "self", ".", "stages", "=", "[", "\n", "64", ",", "\n", "64", "*", "self", ".", "widen_factor", ",", "\n", "128", "*", "self", ".", "widen_factor", ",", "\n", "256", "*", "self", ".", "widen_factor", ",", "\n", "]", "\n", "\n", "self", ".", "conv_1_3x3", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn_1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "stage_1", "=", "self", ".", "block", "(", "\"stage_1\"", ",", "self", ".", "stages", "[", "0", "]", ",", "self", ".", "stages", "[", "1", "]", ",", "1", ")", "\n", "self", ".", "stage_2", "=", "self", ".", "block", "(", "\"stage_2\"", ",", "self", ".", "stages", "[", "1", "]", ",", "self", ".", "stages", "[", "2", "]", ",", "2", ")", "\n", "self", ".", "stage_3", "=", "self", ".", "block", "(", "\"stage_3\"", ",", "self", ".", "stages", "[", "2", "]", ",", "self", ".", "stages", "[", "3", "]", ",", "2", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "1024", ",", "num_classes", ")", "\n", "init", ".", "kaiming_normal_", "(", "self", ".", "classifier", ".", "weight", ")", "\n", "\n", "for", "key", "in", "self", ".", "state_dict", "(", ")", ":", "\n", "            ", "if", "key", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "==", "\"weight\"", ":", "\n", "                ", "if", "\"conv\"", "in", "key", ":", "\n", "                    ", "init", ".", "kaiming_normal_", "(", "self", ".", "state_dict", "(", ")", "[", "key", "]", ",", "\n", "mode", "=", "\"fan_out\"", ")", "\n", "", "if", "\"bn\"", "in", "key", ":", "\n", "                    ", "self", ".", "state_dict", "(", ")", "[", "key", "]", "[", "...", "]", "=", "1", "\n", "", "", "elif", "key", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "==", "\"bias\"", ":", "\n", "                ", "self", ".", "state_dict", "(", ")", "[", "key", "]", "[", "...", "]", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.block": [[143, 178], ["torch.Sequential", "torch.Sequential", "range", "torch.Sequential.add_module", "torch.Sequential.add_module", "resnext.ResNeXtBottleneck", "resnext.ResNeXtBottleneck"], "methods", ["None"], ["", "", "", "def", "block", "(", "self", ",", "name", ",", "in_channels", ",", "out_channels", ",", "pool_stride", "=", "2", ")", ":", "\n", "        ", "\"\"\"Stack n bottleneck modules where n is inferred from the depth of the network.\n        Args:\n            name: string name of the current block.\n            in_channels: number of input channels\n            out_channels: number of output channels\n            pool_stride: factor to reduce the spatial dimensionality in the first bottleneck of the block.\n        Returns: a Module consisting of n sequential bottlenecks.\n        \"\"\"", "\n", "block", "=", "nn", ".", "Sequential", "(", ")", "\n", "for", "bottleneck", "in", "range", "(", "self", ".", "block_depth", ")", ":", "\n", "            ", "name_", "=", "\"%s_bottleneck_%d\"", "%", "(", "name", ",", "bottleneck", ")", "\n", "if", "bottleneck", "==", "0", ":", "\n", "                ", "block", ".", "add_module", "(", "\n", "name_", ",", "\n", "ResNeXtBottleneck", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "pool_stride", ",", "\n", "self", ".", "cardinality", ",", "\n", "self", ".", "widen_factor", ",", "\n", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "                ", "block", ".", "add_module", "(", "\n", "name_", ",", "\n", "ResNeXtBottleneck", "(", "\n", "out_channels", ",", "\n", "out_channels", ",", "\n", "1", ",", "\n", "self", ".", "cardinality", ",", "\n", "self", ".", "widen_factor", ",", "\n", ")", ",", "\n", ")", "\n", "", "", "return", "block", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.forward": [[179, 188], ["resnext.CifarResNeXt.conv_1_3x3", "torch.relu", "torch.relu", "resnext.CifarResNeXt.stage_1", "resnext.CifarResNeXt.stage_2", "resnext.CifarResNeXt.stage_3", "torch.avg_pool2d", "torch.avg_pool2d", "x.view.view.view", "resnext.CifarResNeXt.classifier", "resnext.CifarResNeXt.bn_1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_1_3x3", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn_1", "(", "x", ")", ",", "inplace", "=", "True", ")", "\n", "x", "=", "self", ".", "stage_1", "(", "x", ")", "\n", "x", "=", "self", ".", "stage_2", "(", "x", ")", "\n", "x", "=", "self", ".", "stage_3", "(", "x", ")", "\n", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "8", ",", "1", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1024", ")", "\n", "return", "self", ".", "classifier", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.train": [[189, 199], ["super().train", "resnext.CifarResNeXt.modules", "isinstance", "isinstance", "m.train"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.train", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.train"], ["", "def", "train", "(", "self", ",", "mode", "=", "True", ",", "freeze_DP", "=", "True", ")", ":", "\n", "        ", "super", "(", "CifarResNeXt", ",", "self", ")", ".", "train", "(", "mode", ")", "\n", "if", "freeze_DP", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "ResNeXtBottleneck", ")", ":", "\n", "                    ", "m", ".", "train", "(", "mode", ",", "freeze_DP", ")", "\n", "\n", "", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                    ", "m", ".", "weight", ".", "requires_grad", "=", "False", "\n", "m", ".", "bias", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.resnext": [[201, 205], ["resnext.CifarResNeXt"], "function", ["None"], ["", "", "", "", "", "def", "resnext", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNeXt.\"\"\"", "\n", "model", "=", "CifarResNeXt", "(", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.resnext_8x64d": [[207, 213], ["resnext.resnext"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.resnext"], ["", "def", "resnext_8x64d", "(", "num_classes", "=", "100", ")", ":", "\n", "    ", "return", "resnext", "(", "cardinality", "=", "8", ",", "\n", "num_classes", "=", "num_classes", ",", "\n", "depth", "=", "29", ",", "\n", "widen_factor", "=", "4", ",", "\n", "dropRate", "=", "0", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.StepTracker.__init__": [[28, 30], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.StepTracker.start": [[31, 34], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.StepTracker.end": [[35, 37], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.__init__": [[41, 95], ["pytorch_lightning.LightningModule.__init__", "__init__.LightningWrapper.save_hyperparameters", "__init__.StepTracker"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.forward": [[96, 104], ["__init__.LightningWrapper._model", "torch.stack", "torch.transpose", "__init__.LightningWrapper._model"], "methods", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.should_accumulate": [[105, 107], ["__init__.LightningWrapper.trainer.train_loop.should_accumulate"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.should_accumulate"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.on_train_epoch_start": [[108, 111], ["callback"], "methods", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper._transform_batch": [[112, 116], ["transform"], "methods", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper._transform_gradients": [[117, 120], ["transform"], "methods", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper._compute_training_step": [[121, 150], ["__init__.LightningWrapper.", "__init__.LightningWrapper._transform_batch", "range", "sum", "__init__.LightningWrapper._training_loss_metric", "__init__.LightningWrapper.size", "__init__.LightningWrapper.append", "__init__.LightningWrapper._training_loss_metric"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper._transform_batch"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.training_step": [[152, 186], ["__init__.LightningWrapper._compute_training_step", "training_step_results[].item", "__init__.LightningWrapper.manual_backward", "__init__.LightningWrapper.should_accumulate", "__init__.LightningWrapper.step_tracker.start", "hasattr", "__init__.LightningWrapper.on_non_accumulate_step", "__init__.LightningWrapper.log", "__init__.accuracy", "torch.no_grad", "__init__.LightningWrapper.optimizer.virtual_step"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper._compute_training_step", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.should_accumulate", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.StepTracker.start", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.on_non_accumulate_step", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.accuracy"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.get_batch_gradients": [[187, 247], ["tuple", "__init__.LightningWrapper.zero_grad", "__init__.LightningWrapper._compute_training_step", "__init__.LightningWrapper.eval", "__init__.LightningWrapper.train", "__init__.LightningWrapper._model.modules", "__init__.LightningWrapper._model.modules", "training_step_results[].backward", "__init__.LightningWrapper._transform_gradients", "tuple", "torch.autograd.grad", "k.to", "isinstance", "isinstance", "__init__.LightningWrapper._model.parameters", "module.reset_running_stats", "hasattr", "hasattr", "p.grad.clone", "__init__.LightningWrapper.parameters", "module.weight.requires_grad_", "module.bias.requires_grad_"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper._compute_training_step", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.resnext.CifarResNeXt.train", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper._transform_gradients"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.on_non_accumulate_step": [[248, 280], ["__init__.LightningWrapper._transform_gradients", "__init__.LightningWrapper.optimizer.step", "__init__.LightningWrapper.optimizer.zero_grad", "__init__.LightningWrapper.step_tracker.end", "__init__.LightningWrapper.log", "__init__.LightningWrapper.grad_norm", "__init__.LightningWrapper.items", "callback", "__init__.LightningWrapper.log"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper._transform_gradients", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.StepTracker.end"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.configure_optimizers": [[282, 300], ["__init__.LightningWrapper.configure_lr_scheduler", "torch.optim.Adam", "transform", "__init__.LightningWrapper.parameters", "torch.optim.SGD", "__init__.LightningWrapper.parameters"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.configure_lr_scheduler"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.configure_lr_scheduler": [[301, 335], ["torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.LambdaLR", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.CosineAnnealingLR"], "methods", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.validation_step": [[336, 357], ["__init__.LightningWrapper.forward", "range", "__init__.LightningWrapper._val_loss_metric", "__init__.accuracy", "__init__.auc_list", "__init__.LightningWrapper.size", "__init__.LightningWrapper.append", "sum", "len", "__init__.LightningWrapper._val_loss_metric"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.alldnet.AllDNet.forward", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.accuracy", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.auc_list"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.validation_epoch_end": [[359, 396], ["torch.stack().mean", "torch.stack().mean", "__init__.LightningWrapper.log", "__init__.LightningWrapper.log", "__init__.LightningWrapper.log", "__init__.LightningWrapper.log_aucs", "callback", "torch.stack", "torch.stack", "__init__.LightningWrapper.lr_scheduler.step", "__init__.LightningWrapper.lr_scheduler.step"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.log_aucs"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.test_step": [[397, 417], ["__init__.LightningWrapper.forward", "range", "__init__.LightningWrapper._val_loss_metric", "__init__.accuracy", "__init__.auc_list", "__init__.LightningWrapper.size", "__init__.LightningWrapper.append", "sum", "len", "__init__.LightningWrapper._val_loss_metric"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.alldnet.AllDNet.forward", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.accuracy", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.auc_list"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.test_epoch_end": [[419, 436], ["torch.stack().mean", "torch.stack().mean", "__init__.LightningWrapper.log", "__init__.LightningWrapper.log", "__init__.LightningWrapper.log_aucs", "torch.stack", "torch.stack"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.log_aucs"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.LightningWrapper.log_aucs": [[437, 464], ["np.concatenate", "np.concatenate", "range", "__init__.LightningWrapper.log", "len", "sklearn.metrics.roc_curve", "sklearn.metrics.auc", "aucs.append", "__init__.LightningWrapper.log", "np.mean"], "methods", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.create_lightning_module": [[467, 513], ["__init__.LightningWrapper", "model_name.replace.replace", "os.path.exists", "torch.load", "_model.load_state_dict", "__init__.do_freeze_extractor", "nn.Sequential", "k.replace", "k.replace", "gradattack.utils.StandardizeLayer", "nn.Linear", "isinstance", "globals", "torch.device", "pretrained_dict.items", "pretrained_dict.items", "list", "nn.Linear", "_model.named_modules"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.do_freeze_extractor"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.do_freeze_extractor": [[515, 522], ["model.eval", "model.named_parameters"], "function", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.multihead_accuracy": [[524, 530], ["range", "torch.mean", "output.size", "__init__.accuracy", "prec1.append", "torch.Tensor"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.accuracy"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.accuracy": [[532, 557], ["torch.no_grad", "max", "target.size", "len", "output.topk", "torch.sigmoid().ge().float.t", "torch.sigmoid().ge().float.eq", "target.size", "target.view().expand_as", "correct[].view().float().sum", "res.append", "torch.sigmoid().ge().float", "torch.count_nonzero().float", "correct[].view().float().sum.mul_", "__init__.multihead_accuracy", "len", "target.view", "correct[].view().float", "torch.sigmoid().ge", "torch.count_nonzero", "target.size", "correct[].view", "torch.sigmoid"], "function", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.multihead_accuracy"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.__init__.auc_list": [[559, 565], ["torch.sigmoid().cpu().detach().numpy", "target.cpu().detach().numpy", "len", "target.size", "torch.sigmoid().cpu().detach", "target.cpu().detach", "torch.sigmoid().cpu", "target.cpu", "torch.sigmoid"], "function", ["None"], []], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.googlenet.Inception.__init__": [[10, 49], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "n1x1", ",", "n3x3red", ",", "n3x3", ",", "n5x5red", ",", "n5x5", ",", "\n", "pool_planes", ")", ":", "\n", "        ", "super", "(", "Inception", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# 1x1 conv branch", "\n", "self", ".", "b1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "n1x1", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n1x1", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n", "\n", "# 1x1 conv -> 3x3 conv branch", "\n", "self", ".", "b2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "n3x3red", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n3x3red", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n3x3red", ",", "n3x3", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n3x3", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n", "\n", "# 1x1 conv -> 5x5 conv branch", "\n", "self", ".", "b3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "n5x5red", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n5x5red", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n5x5red", ",", "n5x5", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n5x5", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n5x5", ",", "n5x5", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n5x5", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n", "\n", "# 3x3 pool -> 1x1 conv branch", "\n", "self", ".", "b4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "pool_planes", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "pool_planes", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.googlenet.Inception.forward": [[51, 57], ["googlenet.Inception.b1", "googlenet.Inception.b2", "googlenet.Inception.b3", "googlenet.Inception.b4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y1", "=", "self", ".", "b1", "(", "x", ")", "\n", "y2", "=", "self", ".", "b2", "(", "x", ")", "\n", "y3", "=", "self", ".", "b3", "(", "x", ")", "\n", "y4", "=", "self", ".", "b4", "(", "x", ")", "\n", "return", "torch", ".", "cat", "(", "[", "y1", ",", "y2", ",", "y3", ",", "y4", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.googlenet.GoogLeNet.__init__": [[60, 84], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "googlenet.Inception", "googlenet.Inception", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "GoogLeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pre_layers", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "192", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "192", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "a3", "=", "Inception", "(", "192", ",", "64", ",", "96", ",", "128", ",", "16", ",", "32", ",", "32", ")", "\n", "self", ".", "b3", "=", "Inception", "(", "256", ",", "128", ",", "128", ",", "192", ",", "32", ",", "96", ",", "64", ")", "\n", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "a4", "=", "Inception", "(", "480", ",", "192", ",", "96", ",", "208", ",", "16", ",", "48", ",", "64", ")", "\n", "self", ".", "b4", "=", "Inception", "(", "512", ",", "160", ",", "112", ",", "224", ",", "24", ",", "64", ",", "64", ")", "\n", "self", ".", "c4", "=", "Inception", "(", "512", ",", "128", ",", "128", ",", "256", ",", "24", ",", "64", ",", "64", ")", "\n", "self", ".", "d4", "=", "Inception", "(", "512", ",", "112", ",", "144", ",", "288", ",", "32", ",", "64", ",", "64", ")", "\n", "self", ".", "e4", "=", "Inception", "(", "528", ",", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", ")", "\n", "\n", "self", ".", "a5", "=", "Inception", "(", "832", ",", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", ")", "\n", "self", ".", "b5", "=", "Inception", "(", "832", ",", "384", ",", "192", ",", "384", ",", "48", ",", "128", ",", "128", ")", "\n", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "8", ",", "stride", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "1024", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.googlenet.GoogLeNet.forward": [[85, 102], ["googlenet.GoogLeNet.pre_layers", "googlenet.GoogLeNet.a3", "googlenet.GoogLeNet.b3", "googlenet.GoogLeNet.maxpool", "googlenet.GoogLeNet.a4", "googlenet.GoogLeNet.b4", "googlenet.GoogLeNet.c4", "googlenet.GoogLeNet.d4", "googlenet.GoogLeNet.e4", "googlenet.GoogLeNet.maxpool", "googlenet.GoogLeNet.a5", "googlenet.GoogLeNet.b5", "googlenet.GoogLeNet.avgpool", "googlenet.GoogLeNet.view", "googlenet.GoogLeNet.linear", "googlenet.GoogLeNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "pre_layers", "(", "x", ")", "\n", "out", "=", "self", ".", "a3", "(", "out", ")", "\n", "out", "=", "self", ".", "b3", "(", "out", ")", "\n", "out", "=", "self", ".", "maxpool", "(", "out", ")", "\n", "out", "=", "self", ".", "a4", "(", "out", ")", "\n", "out", "=", "self", ".", "b4", "(", "out", ")", "\n", "out", "=", "self", ".", "c4", "(", "out", ")", "\n", "out", "=", "self", ".", "d4", "(", "out", ")", "\n", "out", "=", "self", ".", "e4", "(", "out", ")", "\n", "out", "=", "self", ".", "maxpool", "(", "out", ")", "\n", "out", "=", "self", ".", "a5", "(", "out", ")", "\n", "out", "=", "self", ".", "b5", "(", "out", ")", "\n", "out", "=", "self", ".", "avgpool", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.alldnet.AllDNet.__init__": [[8, 16], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "AllDNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "6", ",", "5", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "6", ",", "16", ",", "5", ")", "\n", "# self.conv2 = nn.Linear(6*14*14, 16*10*10)", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "16", "*", "5", "*", "5", ",", "120", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "120", ",", "84", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "84", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.models.alldnet.AllDNet.forward": [[17, 34], ["torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "alldnet.AllDNet.view", "activations.append", "torch.relu", "torch.relu", "activations.append", "torch.relu", "torch.relu", "activations.append", "alldnet.AllDNet.fc3", "alldnet.AllDNet.conv1", "alldnet.AllDNet.conv2", "alldnet.AllDNet.size", "alldnet.AllDNet.fc1", "alldnet.AllDNet.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "activations", "=", "[", "]", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "out", "=", "F", ".", "max_pool2d", "(", "out", ",", "2", ")", "\n", "# out = out.view(out.size(0), -1)", "\n", "# activations.append(out)", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "# out = out.view(out.size(0), 16, 10, -1)", "\n", "out", "=", "F", ".", "max_pool2d", "(", "out", ",", "2", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "activations", ".", "append", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "out", ")", ")", "\n", "activations", ".", "append", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "fc2", "(", "out", ")", ")", "\n", "activations", ".", "append", "(", "out", ")", "\n", "out", "=", "self", ".", "fc3", "(", "out", ")", "\n", "return", "out", ",", "activations", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.instahide.InstahideDefense.__init__": [[13, 59], ["gradattack.defenses.defense.GradientDefense.__init__", "isinstance", "len", "len", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "list", "isinstance", "torch.tensor", "torch.tensor().repeat", "list", "torchcsprng.create_random_device_generator", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "mix_dataset", ":", "Dataset", ",", "\n", "klam", ":", "int", ",", "\n", "upper_bound", ":", "float", ",", "\n", "lower_bound", ":", "float", ",", "\n", "device", ":", "torch", ".", "device", "=", "None", ",", "\n", "use_csprng", ":", "bool", "=", "True", ",", "\n", "cs_prng", ":", "torch", ".", "Generator", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            mix_dataset (Dataset): the original training dataset\n            klam (int): the numebr of data points to mix for each encoding\n            upper_bound (float): the upper bound for mixing coefficients\n            lower_bound (float): the lower bound for mixing coefficients\n            device (torch.device, optional): the device to run training on. Defaults to None.\n            use_csprng (bool, optional): whether to use cryptographically secure pseudorandom number generator. Defaults to True.\n            cs_prng (torch.Generator, optional): the cryptographically secure pseudorandom number generator. Defaults to None.\n        \"\"\"", "\n", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "klam", "=", "klam", "\n", "self", ".", "lower_bound", "=", "lower_bound", "\n", "self", ".", "upper_bound", "=", "upper_bound", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "alpha", "=", "[", "1.0", "]", "*", "klam", "\n", "self", ".", "alpha", "[", "0", "]", "=", "3.0", "\n", "\n", "self", ".", "mix_dataset", "=", "mix_dataset", "\n", "self", ".", "x_values", ",", "self", ".", "y_values", "=", "None", ",", "None", "\n", "if", "isinstance", "(", "self", ".", "mix_dataset", ",", "torch", ".", "utils", ".", "data", ".", "Subset", ")", ":", "\n", "            ", "all_classes", "=", "list", "(", "self", ".", "mix_dataset", ".", "dataset", ".", "classes", ")", "\n", "", "elif", "isinstance", "(", "self", ".", "mix_dataset", ",", "torch", ".", "utils", ".", "data", ".", "dataset", ".", "Dataset", ")", ":", "\n", "            ", "all_classes", "=", "list", "(", "self", ".", "mix_dataset", ".", "classes", ")", "\n", "", "self", ".", "num_classes", "=", "len", "(", "all_classes", ")", "\n", "self", ".", "dataset_size", "=", "len", "(", "self", ".", "mix_dataset", ")", "\n", "\n", "self", ".", "lambda_sampler_single", "=", "Dirichlet", "(", "torch", ".", "tensor", "(", "self", ".", "alpha", ")", ")", "\n", "self", ".", "lambda_sampler_whole", "=", "Dirichlet", "(", "\n", "torch", ".", "tensor", "(", "self", ".", "alpha", ")", ".", "repeat", "(", "self", ".", "dataset_size", ",", "1", ")", ")", "\n", "self", ".", "use_csprng", "=", "use_csprng", "\n", "\n", "if", "self", ".", "use_csprng", ":", "\n", "            ", "if", "cs_prng", "is", "None", ":", "\n", "                ", "self", ".", "cs_prng", "=", "csprng", ".", "create_random_device_generator", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "cs_prng", "=", "cs_prng", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.instahide.InstahideDefense.generate_mapping": [[61, 125], ["numpy.random.dirichlet", "numpy.asarray", "numpy.transpose", "range", "instahide.InstahideDefense.lambda_sampler_whole.sample().to", "torch.stack", "torch.transpose", "range", "numpy.random.permutation", "len", "numpy.random.randint", "torch.from_numpy().float().to", "torch.from_numpy().long().to", "numpy.asarray", "numpy.asarray", "instahide.InstahideDefense.lambda_sampler_whole.sample", "torch.randperm", "len", "torch.randint", "numpy.asarray", "numpy.asarray", "range", "set", "numpy.random.dirichlet", "range", "set", "instahide.InstahideDefense.lambda_sampler_single.sample().to", "lams[].max", "lams[].min", "torch.from_numpy().float", "torch.from_numpy().long", "lams[].max", "lams[].min", "instahide.InstahideDefense.lambda_sampler_single.sample", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "", "", "def", "generate_mapping", "(", "self", ",", "return_tensor", "=", "True", ")", ":", "\n", "        ", "\"\"\"Generate the mapping and coefficients for InstaHide\n\n        Args:\n            return_tensor (bool, optional): whether to return the results in the format of PyTorch tensor. Defaults to True.\n\n        Returns:\n            (numpy.array): the mapping and coefficients array\n        \"\"\"", "\n", "if", "not", "self", ".", "use_csprng", ":", "\n", "            ", "lams", "=", "np", ".", "random", ".", "dirichlet", "(", "alpha", "=", "self", ".", "alpha", ",", "\n", "size", "=", "self", ".", "dataset_size", ")", "\n", "\n", "selects", "=", "np", ".", "asarray", "(", "[", "\n", "np", ".", "random", ".", "permutation", "(", "self", ".", "dataset_size", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "klam", ")", "\n", "]", ")", "\n", "selects", "=", "np", ".", "transpose", "(", "selects", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "dataset_size", ")", ":", "\n", "# enforce that k images are non-repetitive", "\n", "                ", "while", "len", "(", "set", "(", "selects", "[", "i", "]", ")", ")", "!=", "self", ".", "klam", ":", "\n", "                    ", "selects", "[", "i", "]", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "dataset_size", ",", "\n", "self", ".", "klam", ")", "\n", "", "if", "self", ".", "klam", ">", "1", ":", "\n", "                    ", "while", "(", "lams", "[", "i", "]", ".", "max", "(", ")", ">", "self", ".", "upper_bound", ")", "or", "(", "\n", "lams", "[", "i", "]", ".", "min", "(", ")", "<", "\n", "self", ".", "lower_bound", ")", ":", "# upper bounds a single lambda", "\n", "                        ", "lams", "[", "i", "]", "=", "np", ".", "random", ".", "dirichlet", "(", "alpha", "=", "self", ".", "alpha", ")", "\n", "", "", "", "if", "return_tensor", ":", "\n", "                ", "return", "(", "\n", "torch", ".", "from_numpy", "(", "lams", ")", ".", "float", "(", ")", ".", "to", "(", "self", ".", "device", ")", ",", "\n", "torch", ".", "from_numpy", "(", "selects", ")", ".", "long", "(", ")", ".", "to", "(", "self", ".", "device", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "                ", "return", "np", ".", "asarray", "(", "lams", ")", ",", "np", ".", "asarray", "(", "selects", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "lams", "=", "self", ".", "lambda_sampler_whole", ".", "sample", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "selects", "=", "torch", ".", "stack", "(", "[", "\n", "torch", ".", "randperm", "(", "self", ".", "dataset_size", ",", "\n", "device", "=", "self", ".", "device", ",", "\n", "generator", "=", "self", ".", "cs_prng", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "klam", ")", "\n", "]", ")", "\n", "selects", "=", "torch", ".", "transpose", "(", "selects", ",", "0", ",", "1", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "dataset_size", ")", ":", "\n", "# enforce that k images are non-repetitive", "\n", "                ", "while", "len", "(", "set", "(", "selects", "[", "i", "]", ")", ")", "!=", "self", ".", "klam", ":", "\n", "                    ", "selects", "[", "i", "]", "=", "torch", ".", "randint", "(", "0", ",", "\n", "self", ".", "dataset_size", ",", "\n", "self", ".", "klam", ",", "\n", "generator", "=", "self", ".", "cs_prng", ")", "\n", "", "if", "self", ".", "klam", ">", "1", ":", "\n", "                    ", "while", "(", "lams", "[", "i", "]", ".", "max", "(", ")", ">", "self", ".", "upper_bound", ")", "or", "(", "\n", "lams", "[", "i", "]", ".", "min", "(", ")", "<", "\n", "self", ".", "lower_bound", ")", ":", "# upper bounds a single lambda", "\n", "                        ", "lams", "[", "i", "]", "=", "self", ".", "lambda_sampler_single", ".", "sample", "(", ")", ".", "to", "(", "\n", "self", ".", "device", ")", "\n", "", "", "", "if", "return_tensor", ":", "\n", "                ", "return", "lams", ",", "selects", "\n", "", "else", ":", "\n", "                ", "return", "np", ".", "asarray", "(", "lams", ")", ",", "np", ".", "asarray", "(", "selects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.instahide.InstahideDefense.instahide_batch": [[126, 161], ["torch.zeros_like", "torch.zeros", "range", "sign.float", "torch.index_select().clone", "torch.index_select().clone", "len", "torch.randint", "torch.index_select", "torch.index_select", "list"], "methods", ["None"], ["", "", "", "def", "instahide_batch", "(", "\n", "self", ",", "\n", "inputs", ":", "torch", ".", "tensor", ",", "\n", "lams_b", ":", "float", ",", "\n", "selects_b", ":", "np", ".", "array", ",", "\n", ")", ":", "\n", "        ", "\"\"\"Generate an InstaHide batch.\n\n        Args:\n            inputs (torch.tensor): the original batch (only its size is used)\n            lams_b (float): the coefficients for InstaHide\n            selects_b (np.array): the mappings for InstaHide\n\n        Returns:\n            (torch.tensor): the InstaHide images and labels\n        \"\"\"", "\n", "mixed_x", "=", "torch", ".", "zeros_like", "(", "inputs", ")", "\n", "mixed_y", "=", "torch", ".", "zeros", "(", "(", "len", "(", "inputs", ")", ",", "self", ".", "num_classes", ")", ",", "\n", "device", "=", "self", ".", "device", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "klam", ")", ":", "\n", "            ", "x", "=", "torch", ".", "index_select", "(", "self", ".", "x_values", ",", "0", ",", "selects_b", "[", ":", ",", "i", "]", ")", ".", "clone", "(", ")", "\n", "ys_onehot", "=", "torch", ".", "index_select", "(", "self", ".", "y_values", ",", "0", ",", "\n", "selects_b", "[", ":", ",", "i", "]", ")", ".", "clone", "(", ")", "\n", "# need to broadcast here to make row-wise multiplication work", "\n", "# see: https://stackoverflow.com/questions/53987906/how-to-multiply-a-tensor-row-wise-by-a-vector-in-pytorch", "\n", "mixed_x", "+=", "lams_b", "[", ":", ",", "i", "]", "[", ":", ",", "None", ",", "None", ",", "None", "]", "*", "x", "\n", "mixed_y", "+=", "lams_b", "[", ":", ",", "i", "]", "[", ":", ",", "None", "]", "*", "ys_onehot", "\n", "\n", "# Apply InstaHide random sign flip", "\n", "", "sign", "=", "torch", ".", "randint", "(", "2", ",", "size", "=", "list", "(", "mixed_x", ".", "shape", ")", ",", "\n", "device", "=", "self", ".", "device", ")", "*", "2.0", "-", "1", "\n", "mixed_x", "*=", "sign", ".", "float", "(", ")", "\n", "\n", "return", "mixed_x", ",", "mixed_y", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.instahide.InstahideDefense.apply": [[162, 235], ["super().apply", "pipeline.model._on_train_epoch_start_callbacks.append", "instahide.InstahideDefense.apply.regenerate_mappings"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense.GradientDefense.apply"], ["", "def", "apply", "(", "self", ",", "pipeline", ":", "TrainingPipeline", ")", ":", "\n", "        ", "super", "(", ")", ".", "apply", "(", "pipeline", ")", "\n", "\n", "self", ".", "cur_selects", ",", "self", ".", "cur_selects", "=", "None", ",", "None", "\n", "\n", "def", "regenerate_mappings", "(", "module", ")", ":", "\n", "            ", "\"\"\"Regenerate InstaHide mapping and coefficients at the begining of each epoch\n\n            Args:\n                module (pl.LightningModule): the pl.LightningModule for training\n            \"\"\"", "\n", "self", ".", "cur_lams", ",", "self", ".", "cur_selects", "=", "self", ".", "generate_mapping", "(", "\n", "return_tensor", "=", "True", ")", "\n", "\n", "# IMPORTANT! Use new augmentations for every epoch", "\n", "self", ".", "x_values", "=", "torch", ".", "stack", "(", "[", "data", "[", "0", "]", "for", "data", "in", "self", ".", "mix_dataset", "\n", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "if", "self", ".", "y_values", "is", "None", ":", "\n", "                ", "self", ".", "y_values", "=", "torch", ".", "from_numpy", "(", "\n", "np", ".", "asarray", "(", "[", "data", "[", "1", "]", "\n", "for", "data", "in", "self", ".", "mix_dataset", "]", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "len", "(", "self", ".", "y_values", ".", "shape", ")", "==", "1", ":", "\n", "                    ", "self", ".", "y_values", "=", "one_hot", "(", "\n", "self", ".", "y_values", ",", "num_classes", "=", "self", ".", "num_classes", ")", ".", "float", "(", ")", "\n", "\n", "", "", "", "pipeline", ".", "model", ".", "_on_train_epoch_start_callbacks", ".", "append", "(", "\n", "regenerate_mappings", ")", "\n", "\n", "regenerate_mappings", "(", "pipeline", ".", "model", ")", "\n", "\n", "# @profile", "\n", "def", "do_instahide", "(", "batch", ",", "batch_idx", ",", "use_tensor", "=", "True", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "            ", "\"\"\"Run InstaHide for a given batch\n\n            Args:\n                batch ((torch.tensor)): the original batch (only the size information is used)\n                batch_idx (int): index of the batch; used to slice the whole mapping array\n                use_tensor (bool, optional): whether the mapping and coefficients are in the format of PyTorch tensor. Defaults to True.\n            \"\"\"", "\n", "inputs", ",", "targets", "=", "batch", "\n", "batch_size", "=", "len", "(", "inputs", ")", "\n", "start_idx", "=", "batch_idx", "*", "batch_size", "\n", "batch_device", "=", "batch", "[", "0", "]", ".", "device", "\n", "if", "use_tensor", ":", "\n", "                ", "batch_indices", "=", "torch", ".", "arange", "(", "start_idx", ",", "\n", "start_idx", "+", "batch_size", ",", "\n", "device", "=", "self", ".", "device", ")", ".", "long", "(", ")", "\n", "lams_b", "=", "torch", ".", "index_select", "(", "self", ".", "cur_lams", ",", "0", ",", "batch_indices", ")", "\n", "selects_b", "=", "torch", ".", "index_select", "(", "self", ".", "cur_selects", ",", "0", ",", "\n", "batch_indices", ")", "\n", "", "else", ":", "\n", "                ", "batch_indices", "=", "range", "(", "start_idx", ",", "start_idx", "+", "batch_size", ")", "\n", "lams_b", "=", "(", "torch", ".", "from_numpy", "(", "\n", "np", ".", "asarray", "(", "[", "self", ".", "cur_lams", "[", "i", "]", "for", "i", "in", "batch_indices", "\n", "]", ")", ")", ".", "float", "(", ")", ".", "to", "(", "batch_device", ")", ")", "\n", "selects_b", "=", "(", "torch", ".", "from_numpy", "(", "\n", "np", ".", "asarray", "(", "[", "self", ".", "cur_selects", "[", "i", "]", "for", "i", "in", "batch_indices", "\n", "]", ")", ")", ".", "long", "(", ")", ".", "to", "(", "batch_device", ")", ")", "\n", "\n", "", "mixed_inputs", ",", "mixed_targets", "=", "self", ".", "instahide_batch", "(", "\n", "inputs", ",", "lams_b", ",", "selects_b", ")", "\n", "return", "(", "mixed_inputs", ",", "mixed_targets", ")", "\n", "\n", "", "pipeline", ".", "model", ".", "_batch_transformations", ".", "append", "(", "do_instahide", ")", "\n", "pipeline", ".", "model", ".", "log_train_acc", "=", "False", "\n", "\n", "if", "pipeline", ".", "model", ".", "multi_class", ":", "\n", "            ", "pipeline", ".", "model", ".", "_val_loss_metric", "=", "torch", ".", "nn", ".", "BCEWithLogitsLoss", "(", "\n", "reduction", "=", "\"mean\"", ")", "\n", "", "else", ":", "\n", "            ", "pipeline", ".", "model", ".", "_val_loss_metric", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", "\n", "reduction", "=", "\"mean\"", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.gradprune.GradPruneDefense.__init__": [[8, 15], ["gradattack.defenses.defense.GradientDefense.__init__"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "prune_ratio", ":", "float", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            prune_ratio (float): the ratio of gradients to be pruned\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "prune_ratio", "=", "prune_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.gradprune.GradPruneDefense.apply": [[16, 52], ["super().apply", "pipeline.model._grad_transformations.append", "model.parameters", "isinstance", "enumerate", "list", "torch.quantile", "model.parameters", "filter", "torch.abs", "range", "len", "torch.abs"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense.GradientDefense.apply"], ["", "def", "apply", "(", "self", ",", "pipeline", ":", "TrainingPipeline", ")", ":", "\n", "        ", "\"\"\"Apply the gradient pruning defense\n\n        Args:\n            pipeline (TrainingPipeline): the training pipeline to protect\n        \"\"\"", "\n", "super", "(", ")", ".", "apply", "(", "pipeline", ")", "\n", "\n", "def", "do_gradprune", "(", "model", ")", ":", "\n", "            ", "\"\"\"\n\n            Args:\n                model (nn.Module): the original model\n\n            Returns:\n                nn.Module: the model with pruned gradients\n            \"\"\"", "\n", "parameters", "=", "model", ".", "parameters", "(", ")", "\n", "\n", "if", "isinstance", "(", "parameters", ",", "torch", ".", "Tensor", ")", ":", "\n", "                ", "parameters", "=", "[", "parameters", "]", "\n", "parameters", "=", "list", "(", "\n", "filter", "(", "lambda", "p", ":", "p", ".", "grad", "is", "not", "None", ",", "parameters", ")", ")", "\n", "\n", "", "input_grads", "=", "[", "p", ".", "grad", ".", "data", "for", "p", "in", "parameters", "]", "\n", "\n", "threshold", "=", "[", "\n", "torch", ".", "quantile", "(", "torch", ".", "abs", "(", "input_grads", "[", "i", "]", ")", ",", "self", ".", "prune_ratio", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "input_grads", ")", ")", "\n", "]", "\n", "\n", "for", "i", ",", "p", "in", "enumerate", "(", "model", ".", "parameters", "(", ")", ")", ":", "\n", "                ", "p", ".", "grad", "[", "torch", ".", "abs", "(", "p", ".", "grad", ")", "<", "threshold", "[", "i", "]", "]", "=", "0", "\n", "", "return", "model", "\n", "\n", "", "pipeline", ".", "model", ".", "_grad_transformations", ".", "append", "(", "do_gradprune", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.dpsgd.DPSGDDefense.__init__": [[34, 65], ["gradattack.defenses.defense.GradientDefense.__init__", "prng.create_random_device_generator"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "mini_batch_size", ":", "int", ",", "\n", "sample_size", ":", "int", ",", "\n", "n_accumulation_steps", ":", "int", ",", "\n", "max_grad_norm", ":", "float", ",", "\n", "noise_multiplier", ":", "float", ",", "\n", "delta_list", ":", "List", "[", "float", "]", "=", "[", "1e-3", ",", "1e-4", ",", "1e-5", "]", ",", "\n", "max_epsilon", ":", "float", "=", "2", ",", "\n", "secure_rng", ":", "bool", "=", "False", ",", "\n", "freeze_extractor", ":", "bool", "=", "False", ",", "\n", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "delta_list", "=", "delta_list", "\n", "self", ".", "max_epsilon", "=", "max_epsilon", "\n", "\n", "self", ".", "mini_batch_size", "=", "mini_batch_size", "\n", "self", ".", "max_grad_norm", "=", "max_grad_norm", "\n", "self", ".", "sample_size", "=", "sample_size", "\n", "self", ".", "noise_multiplier", "=", "noise_multiplier", "\n", "self", ".", "n_accumulation_steps", "=", "n_accumulation_steps", "\n", "self", ".", "secure_rng", "=", "secure_rng", "\n", "\n", "if", "self", ".", "secure_rng", ":", "\n", "            ", "import", "torchcsprng", "as", "prng", "\n", "\n", "self", ".", "generator", "=", "prng", ".", "create_random_device_generator", "(", "\n", "\"/dev/urandom\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "generator", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.dpsgd.DPSGDDefense.apply": [[66, 148], ["super().apply", "pipeline._data_transformations.append", "pipeline.model._opt_transformations.append", "pipeline.model._step_end_callbacks.append", "opacus.PrivacyEngine", "opacus.PrivacyEngine.attach", "opacus.utils.uniform_sampler.UniformWithReplacementSampler", "model.optimizer.privacy_engine.get_privacy_spent", "model.log", "model.log", "len"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense.GradientDefense.apply"], ["", "", "def", "apply", "(", "self", ",", "pipeline", ":", "TrainingPipeline", ")", "->", "None", ":", "\n", "        ", "\"\"\"Apply differentially private training to the given training pipeline. The implementation of DPSGD is based on Opacus: https://opacus.ai/\n\n        Args:\n            pipeline (TrainingPipeline): The training pipeline to which we apply the DPSGD defense.\n        \"\"\"", "\n", "super", "(", ")", ".", "apply", "(", "pipeline", ")", "\n", "\n", "def", "step_callback_dpsgd", "(", "model", ":", "pl", ".", "LightningModule", ",", "\n", "timer", ":", "StepTracker", "=", "None", ")", "->", "bool", ":", "\n", "            ", "r\"\"\"Per-step callback for DPSGD to compute and log the (epsilon, delta) privacy budget spent so far.\n\n            Args:\n                model (pl.LightningModule, optional): The Pytorch module to which we are attaching the privacy engine.\n                timer (StepTracker, optional): The StepTracker which records per-step running time. Defaults to None.\n\n            Returns:\n                bool: A termination flag: if Ture, terminate training. We set the flag to be true if the spent privacy exceeds the privacy budget.\n            \"\"\"", "\n", "for", "delta", "in", "self", ".", "delta_list", ":", "\n", "                ", "epsilon", ",", "best_alpha", "=", "model", ".", "optimizer", ".", "privacy_engine", ".", "get_privacy_spent", "(", "\n", "delta", ")", "\n", "# timer.pause()", "\n", "model", ".", "log", "(", "\n", "f\"step/\u03b5/\u03b4={delta}\"", ",", "\n", "epsilon", ",", "\n", "on_step", "=", "True", ",", "\n", "prog_bar", "=", "True", ",", "\n", "logger", "=", "True", ",", "\n", ")", "\n", "model", ".", "log", "(", "\n", "f\"step/\u03b1/\u03b4={delta}\"", ",", "\n", "best_alpha", ",", "\n", "on_step", "=", "True", ",", "\n", "prog_bar", "=", "False", ",", "\n", "logger", "=", "True", ",", "\n", ")", "\n", "# timer.cont()", "\n", "if", "self", ".", "max_epsilon", "is", "not", "None", "and", "epsilon", ">=", "self", ".", "max_epsilon", ":", "\n", "                    ", "return", "True", "\n", "", "else", ":", "\n", "                    ", "return", "False", "\n", "\n", "", "", "", "def", "do_dpsgd", "(", "model", ":", "pl", ".", "LightningModule", ")", ":", "\n", "            ", "r\"\"\"Generate a DPSGD engine based on given configurations, and attach it to the model. Check out here for the official documentation of Opacus's privacy engine: https://opacus.ai/api/privacy_engine.html.\n\n            Args:\n                model (pl.LightningModule): The Pytorch module to which we are attaching the privacy engine.\n            \"\"\"", "\n", "\n", "assert", "self", ".", "n_accumulation_steps", "==", "model", ".", "trainer", ".", "accumulate_grad_batches", "\n", "privacy_engine", "=", "PrivacyEngine", "(", "\n", "model", ".", "_model", ",", "\n", "sample_size", "=", "self", ".", "sample_size", ",", "\n", "batch_size", "=", "self", ".", "n_accumulation_steps", "*", "self", ".", "mini_batch_size", ",", "\n", "alphas", "=", "ORDERS", ",", "\n", "noise_multiplier", "=", "self", ".", "noise_multiplier", ",", "\n", "secure_rng", "=", "self", ".", "secure_rng", ",", "\n", "max_grad_norm", "=", "self", ".", "max_grad_norm", ",", "\n", ")", "\n", "privacy_engine", ".", "attach", "(", "model", ".", "optimizer", ")", "\n", "\n", "", "def", "do_DPSGD_sampler", "(", "dataset", ":", "LightningDataModule", ")", ":", "\n", "            ", "r\"\"\"Samples batch elements according to the Gaussian Mechanism.\n\n            Args:\n                dataset (LightningDataModule): The LightningDataModule to be sampled.\n            \"\"\"", "\n", "dataset", ".", "batch_sampler", "=", "UniformWithReplacementSampler", "(", "\n", "num_samples", "=", "self", ".", "sample_size", ",", "\n", "sample_rate", "=", "self", ".", "mini_batch_size", "/", "len", "(", "dataset", ".", "train_set", ")", ",", "\n", "generator", "=", "self", ".", "generator", ",", "\n", ")", "\n", "\n", "# Converts all BatchNorm modules to another module (defaults to GroupNorm) that is privacy compliant  # FIXME: should update the privacy accountant", "\n", "# pipeline.model._model = convert_batchnorm_modules(", "\n", "#     pipeline.model._model)", "\n", "\n", "", "pipeline", ".", "_data_transformations", ".", "append", "(", "do_DPSGD_sampler", ")", "\n", "pipeline", ".", "model", ".", "_opt_transformations", ".", "append", "(", "do_dpsgd", ")", "\n", "pipeline", ".", "model", ".", "_step_end_callbacks", ".", "append", "(", "step_callback_dpsgd", ")", "\n", "pipeline", ".", "model", ".", "_log_gradients", "=", "True", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.mixup.MixupDefense.__init__": [[13, 59], ["gradattack.defenses.defense.GradientDefense.__init__", "isinstance", "len", "len", "torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet", "list", "isinstance", "torch.tensor", "torch.tensor().repeat", "list", "torchcsprng.create_random_device_generator", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "mix_dataset", ":", "Dataset", ",", "\n", "klam", ":", "int", ",", "\n", "upper_bound", ":", "float", ",", "\n", "lower_bound", ":", "float", ",", "\n", "device", ":", "torch", ".", "device", "=", "None", ",", "\n", "use_csprng", ":", "bool", "=", "True", ",", "\n", "cs_prng", ":", "torch", ".", "Generator", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            mix_dataset (Dataset): the original training dataset\n            klam (int): the numebr of data points to mix for each encoding\n            upper_bound (float): the upper bound for mixing coefficients\n            lower_bound (float): the lower bound for mixing coefficients\n            device (torch.device, optional): the device to run training on. Defaults to None.\n            use_csprng (bool, optional): whether to use cryptographically secure pseudorandom number generator. Defaults to True.\n            cs_prng (torch.Generator, optional): the cryptographically secure pseudorandom number generator. Defaults to None.\n        \"\"\"", "\n", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "klam", "=", "klam", "\n", "self", ".", "lower_bound", "=", "lower_bound", "\n", "self", ".", "upper_bound", "=", "upper_bound", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "alpha", "=", "[", "1.0", "]", "*", "klam", "\n", "self", ".", "alpha", "[", "0", "]", "=", "3.0", "\n", "\n", "self", ".", "mix_dataset", "=", "mix_dataset", "\n", "self", ".", "x_values", ",", "self", ".", "y_values", "=", "None", ",", "None", "\n", "if", "isinstance", "(", "self", ".", "mix_dataset", ",", "torch", ".", "utils", ".", "data", ".", "Subset", ")", ":", "\n", "            ", "all_classes", "=", "list", "(", "self", ".", "mix_dataset", ".", "dataset", ".", "classes", ")", "\n", "", "elif", "isinstance", "(", "self", ".", "mix_dataset", ",", "torch", ".", "utils", ".", "data", ".", "dataset", ".", "Dataset", ")", ":", "\n", "            ", "all_classes", "=", "list", "(", "self", ".", "mix_dataset", ".", "classes", ")", "\n", "", "self", ".", "num_classes", "=", "len", "(", "all_classes", ")", "\n", "self", ".", "dataset_size", "=", "len", "(", "self", ".", "mix_dataset", ")", "\n", "\n", "self", ".", "lambda_sampler_single", "=", "Dirichlet", "(", "torch", ".", "tensor", "(", "self", ".", "alpha", ")", ")", "\n", "self", ".", "lambda_sampler_whole", "=", "Dirichlet", "(", "\n", "torch", ".", "tensor", "(", "self", ".", "alpha", ")", ".", "repeat", "(", "self", ".", "dataset_size", ",", "1", ")", ")", "\n", "self", ".", "use_csprng", "=", "use_csprng", "\n", "\n", "if", "self", ".", "use_csprng", ":", "\n", "            ", "if", "cs_prng", "is", "None", ":", "\n", "                ", "self", ".", "cs_prng", "=", "csprng", ".", "create_random_device_generator", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "cs_prng", "=", "cs_prng", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.mixup.MixupDefense.generate_mapping": [[61, 125], ["numpy.random.dirichlet", "numpy.asarray", "numpy.transpose", "range", "mixup.MixupDefense.lambda_sampler_whole.sample().to", "torch.stack", "torch.transpose", "range", "numpy.random.permutation", "len", "numpy.random.randint", "torch.from_numpy().float().to", "torch.from_numpy().long().to", "numpy.asarray", "numpy.asarray", "mixup.MixupDefense.lambda_sampler_whole.sample", "torch.randperm", "len", "torch.randint", "numpy.asarray", "numpy.asarray", "range", "set", "numpy.random.dirichlet", "range", "set", "mixup.MixupDefense.lambda_sampler_single.sample().to", "lams[].max", "lams[].min", "torch.from_numpy().float", "torch.from_numpy().long", "lams[].max", "lams[].min", "mixup.MixupDefense.lambda_sampler_single.sample", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "", "", "def", "generate_mapping", "(", "self", ",", "return_tensor", "=", "True", ")", ":", "\n", "        ", "\"\"\"Generate the mapping and coefficients for MixUp\n\n        Args:\n            return_tensor (bool, optional): whether to return the results in the format of PyTorch tensor. Defaults to True.\n\n        Returns:\n            (numpy.array): the mapping and coefficients array\n        \"\"\"", "\n", "if", "not", "self", ".", "use_csprng", ":", "\n", "            ", "lams", "=", "np", ".", "random", ".", "dirichlet", "(", "alpha", "=", "self", ".", "alpha", ",", "\n", "size", "=", "self", ".", "dataset_size", ")", "\n", "\n", "selects", "=", "np", ".", "asarray", "(", "[", "\n", "np", ".", "random", ".", "permutation", "(", "self", ".", "dataset_size", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "klam", ")", "\n", "]", ")", "\n", "selects", "=", "np", ".", "transpose", "(", "selects", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "dataset_size", ")", ":", "\n", "# enforce that k images are non-repetitive", "\n", "                ", "while", "len", "(", "set", "(", "selects", "[", "i", "]", ")", ")", "!=", "self", ".", "klam", ":", "\n", "                    ", "selects", "[", "i", "]", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "dataset_size", ",", "\n", "self", ".", "klam", ")", "\n", "", "if", "self", ".", "klam", ">", "1", ":", "\n", "                    ", "while", "(", "lams", "[", "i", "]", ".", "max", "(", ")", ">", "self", ".", "upper_bound", ")", "or", "(", "\n", "lams", "[", "i", "]", ".", "min", "(", ")", "<", "\n", "self", ".", "lower_bound", ")", ":", "# upper bounds a single lambda", "\n", "                        ", "lams", "[", "i", "]", "=", "np", ".", "random", ".", "dirichlet", "(", "alpha", "=", "self", ".", "alpha", ")", "\n", "", "", "", "if", "return_tensor", ":", "\n", "                ", "return", "(", "\n", "torch", ".", "from_numpy", "(", "lams", ")", ".", "float", "(", ")", ".", "to", "(", "self", ".", "device", ")", ",", "\n", "torch", ".", "from_numpy", "(", "selects", ")", ".", "long", "(", ")", ".", "to", "(", "self", ".", "device", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "                ", "return", "np", ".", "asarray", "(", "lams", ")", ",", "np", ".", "asarray", "(", "selects", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "lams", "=", "self", ".", "lambda_sampler_whole", ".", "sample", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "selects", "=", "torch", ".", "stack", "(", "[", "\n", "torch", ".", "randperm", "(", "self", ".", "dataset_size", ",", "\n", "device", "=", "self", ".", "device", ",", "\n", "generator", "=", "self", ".", "cs_prng", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "klam", ")", "\n", "]", ")", "\n", "selects", "=", "torch", ".", "transpose", "(", "selects", ",", "0", ",", "1", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "dataset_size", ")", ":", "\n", "# enforce that k images are non-repetitive", "\n", "                ", "while", "len", "(", "set", "(", "selects", "[", "i", "]", ")", ")", "!=", "self", ".", "klam", ":", "\n", "                    ", "selects", "[", "i", "]", "=", "torch", ".", "randint", "(", "0", ",", "\n", "self", ".", "dataset_size", ",", "\n", "self", ".", "klam", ",", "\n", "generator", "=", "self", ".", "cs_prng", ")", "\n", "", "if", "self", ".", "klam", ">", "1", ":", "\n", "                    ", "while", "(", "lams", "[", "i", "]", ".", "max", "(", ")", ">", "self", ".", "upper_bound", ")", "or", "(", "\n", "lams", "[", "i", "]", ".", "min", "(", ")", "<", "\n", "self", ".", "lower_bound", ")", ":", "# upper bounds a single lambda", "\n", "                        ", "lams", "[", "i", "]", "=", "self", ".", "lambda_sampler_single", ".", "sample", "(", ")", ".", "to", "(", "\n", "self", ".", "device", ")", "\n", "", "", "", "if", "return_tensor", ":", "\n", "                ", "return", "lams", ",", "selects", "\n", "", "else", ":", "\n", "                ", "return", "np", ".", "asarray", "(", "lams", ")", ",", "np", ".", "asarray", "(", "selects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.mixup.MixupDefense.mixup_batch": [[126, 156], ["torch.zeros_like", "torch.zeros", "range", "torch.index_select().clone", "torch.index_select().clone", "len", "torch.index_select", "torch.index_select"], "methods", ["None"], ["", "", "", "def", "mixup_batch", "(", "\n", "self", ",", "\n", "inputs", ":", "torch", ".", "tensor", ",", "\n", "lams_b", ":", "float", ",", "\n", "selects_b", ":", "np", ".", "array", ",", "\n", ")", ":", "\n", "        ", "\"\"\"Generate a MixUp batch.\n\n        Args:\n            inputs (torch.tensor): the original batch (only its size is used)\n            lams_b (float): the coefficients for MixUp\n            selects_b (np.array): the mappings for MixUp\n\n        Returns:\n            (torch.tensor): the MixUp images and labels\n        \"\"\"", "\n", "mixed_x", "=", "torch", ".", "zeros_like", "(", "inputs", ")", "\n", "mixed_y", "=", "torch", ".", "zeros", "(", "(", "len", "(", "inputs", ")", ",", "self", ".", "num_classes", ")", ",", "\n", "device", "=", "self", ".", "device", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "klam", ")", ":", "\n", "            ", "x", "=", "torch", ".", "index_select", "(", "self", ".", "x_values", ",", "0", ",", "selects_b", "[", ":", ",", "i", "]", ")", ".", "clone", "(", ")", "\n", "ys_onehot", "=", "torch", ".", "index_select", "(", "self", ".", "y_values", ",", "0", ",", "\n", "selects_b", "[", ":", ",", "i", "]", ")", ".", "clone", "(", ")", "\n", "# need to broadcast here to make row-wise multiplication work", "\n", "# see: https://stackoverflow.com/questions/53987906/how-to-multiply-a-tensor-row-wise-by-a-vector-in-pytorch", "\n", "mixed_x", "+=", "lams_b", "[", ":", ",", "i", "]", "[", ":", ",", "None", ",", "None", ",", "None", "]", "*", "x", "\n", "mixed_y", "+=", "lams_b", "[", ":", ",", "i", "]", "[", ":", ",", "None", "]", "*", "ys_onehot", "\n", "\n", "", "return", "mixed_x", ",", "mixed_y", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.mixup.MixupDefense.apply": [[157, 230], ["super().apply", "pipeline.model._on_train_epoch_start_callbacks.append", "mixup.MixupDefense.apply.regenerate_mappings"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense.GradientDefense.apply"], ["", "def", "apply", "(", "self", ",", "pipeline", ":", "TrainingPipeline", ")", ":", "\n", "        ", "super", "(", ")", ".", "apply", "(", "pipeline", ")", "\n", "\n", "self", ".", "cur_selects", ",", "self", ".", "cur_selects", "=", "None", ",", "None", "\n", "\n", "def", "regenerate_mappings", "(", "module", ")", ":", "\n", "            ", "\"\"\"Regenerate MixUp mapping and coefficients at the begining of each epoch\n\n            Args:\n                module (pl.LightningModule): the pl.LightningModule for training\n            \"\"\"", "\n", "# print(\"Regenerating mixup mappings...\")", "\n", "self", ".", "cur_lams", ",", "self", ".", "cur_selects", "=", "self", ".", "generate_mapping", "(", "\n", "return_tensor", "=", "True", ")", "\n", "\n", "# IMPORTANT! Use new augmentations for every epoch", "\n", "self", ".", "x_values", "=", "torch", ".", "stack", "(", "[", "data", "[", "0", "]", "for", "data", "in", "self", ".", "mix_dataset", "\n", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "if", "self", ".", "y_values", "is", "None", ":", "\n", "                ", "self", ".", "y_values", "=", "torch", ".", "from_numpy", "(", "\n", "np", ".", "asarray", "(", "[", "data", "[", "1", "]", "\n", "for", "data", "in", "self", ".", "mix_dataset", "]", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "len", "(", "self", ".", "y_values", ".", "shape", ")", "==", "1", ":", "\n", "                    ", "self", ".", "y_values", "=", "one_hot", "(", "\n", "self", ".", "y_values", ",", "num_classes", "=", "self", ".", "num_classes", ")", ".", "float", "(", ")", "\n", "\n", "", "", "", "pipeline", ".", "model", ".", "_on_train_epoch_start_callbacks", ".", "append", "(", "\n", "regenerate_mappings", ")", "\n", "\n", "regenerate_mappings", "(", "pipeline", ".", "model", ")", "\n", "\n", "def", "do_mixup", "(", "batch", ",", "batch_idx", ":", "int", ",", "use_tensor", "=", "True", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "            ", "\"\"\"Run MixUp for a given batch\n\n            Args:\n                batch ((torch.tensor)): the original batch (only the size information is used)\n                batch_idx (int): index of the batch; used to slice the whole mapping array\n                use_tensor (bool, optional): whether the mapping and coefficients are in the format of PyTorch tensor. Defaults to True.\n            \"\"\"", "\n", "inputs", ",", "targets", "=", "batch", "\n", "batch_size", "=", "len", "(", "inputs", ")", "\n", "start_idx", "=", "batch_idx", "*", "batch_size", "\n", "batch_device", "=", "batch", "[", "0", "]", ".", "device", "\n", "if", "use_tensor", ":", "\n", "                ", "batch_indices", "=", "torch", ".", "arange", "(", "start_idx", ",", "\n", "start_idx", "+", "batch_size", ",", "\n", "device", "=", "self", ".", "device", ")", ".", "long", "(", ")", "\n", "lams_b", "=", "torch", ".", "index_select", "(", "self", ".", "cur_lams", ",", "0", ",", "batch_indices", ")", "\n", "selects_b", "=", "torch", ".", "index_select", "(", "self", ".", "cur_selects", ",", "0", ",", "\n", "batch_indices", ")", "\n", "", "else", ":", "\n", "                ", "batch_indices", "=", "range", "(", "start_idx", ",", "start_idx", "+", "batch_size", ")", "\n", "lams_b", "=", "(", "torch", ".", "from_numpy", "(", "\n", "np", ".", "asarray", "(", "[", "self", ".", "cur_lams", "[", "i", "]", "for", "i", "in", "batch_indices", "\n", "]", ")", ")", ".", "float", "(", ")", ".", "to", "(", "batch_device", ")", ")", "\n", "selects_b", "=", "(", "torch", ".", "from_numpy", "(", "\n", "np", ".", "asarray", "(", "[", "self", ".", "cur_selects", "[", "i", "]", "for", "i", "in", "batch_indices", "\n", "]", ")", ")", ".", "long", "(", ")", ".", "to", "(", "batch_device", ")", ")", "\n", "\n", "", "mixed_inputs", ",", "mixed_targets", "=", "self", ".", "mixup_batch", "(", "\n", "inputs", ",", "lams_b", ",", "selects_b", ")", "\n", "return", "(", "mixed_inputs", ",", "mixed_targets", ")", "\n", "\n", "", "pipeline", ".", "model", ".", "_batch_transformations", ".", "append", "(", "do_mixup", ")", "\n", "pipeline", ".", "model", ".", "log_train_acc", "=", "False", "\n", "\n", "if", "pipeline", ".", "model", ".", "multi_class", ":", "\n", "            ", "pipeline", ".", "model", ".", "_val_loss_metric", "=", "torch", ".", "nn", ".", "BCEWithLogitsLoss", "(", "\n", "reduction", "=", "\"mean\"", ")", "\n", "", "else", ":", "\n", "            ", "pipeline", ".", "model", ".", "_val_loss_metric", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", "\n", "reduction", "=", "\"mean\"", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense.GradientDefense.apply": [[8, 12], ["pipeline.applied_defenses.append"], "methods", ["None"], ["def", "apply", "(", "self", ",", "pipeline", ":", "TrainingPipeline", ")", ":", "\n", "        ", "assert", "(", "self", ".", "defense_name", "not", "in", "pipeline", ".", "applied_defenses", "\n", ")", ",", "f\"Tried to apply duplicate defense {self.defense_name}!\"", "\n", "pipeline", ".", "applied_defenses", ".", "append", "(", "self", ".", "defense_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense.GradientDefense.defense_name": [[13, 16], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "defense_name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense_utils.DefensePack.__init__": [[19, 23], ["defense_utils.DefensePack.parse_defense_params"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense_utils.DefensePack.parse_defense_params"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "logger", "=", "None", ")", ":", "\n", "        ", "self", ".", "defense_params", "=", "{", "}", "\n", "self", ".", "parse_defense_params", "(", "args", ")", "\n", "self", ".", "logger", "=", "logger", "# this might be useful for logging DP prarameters in the future", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense_utils.DefensePack.apply_defense": [[24, 67], ["defense_utils.DefensePack.defense_params.keys", "instahide.InstahideDefense", "defense_utils.DefensePack.instahide_defense.apply", "mixup.MixupDefense", "defense_utils.DefensePack.mixup_defense.apply", "defense_utils.DefensePack.defense_params.keys", "gradprune.GradPruneDefense", "defense_utils.DefensePack.gradprune_defense.apply", "defense_utils.DefensePack.defense_params.keys", "dpsgd.DPSGDDefense", "defense_utils.DefensePack.DPSGD_defense.apply", "defense_utils.DefensePack.defense_params.keys", "print", "defense_utils.DefensePack.defense_params.keys", "defense_utils.DefensePack.defense_params.keys", "torch.device", "torch.device", "len"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense.GradientDefense.apply", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense.GradientDefense.apply", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense.GradientDefense.apply", "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense.GradientDefense.apply"], ["", "def", "apply_defense", "(", "self", ",", "pipeline", ":", "TrainingPipeline", ")", ":", "\n", "        ", "dataset", "=", "pipeline", ".", "datamodule", "\n", "\n", "if", "\"InstaHideDefense\"", "in", "self", ".", "defense_params", ".", "keys", "(", ")", ":", "\n", "            ", "if", "\"MixupDefense\"", "in", "self", ".", "defense_params", ".", "keys", "(", ")", ":", "\n", "                ", "print", "(", "\"Overriding Mixup with InstaHide\"", ")", "\n", "", "params", "=", "self", ".", "defense_params", "[", "\"InstaHideDefense\"", "]", "\n", "self", ".", "instahide_defense", "=", "InstahideDefense", "(", "\n", "mix_dataset", "=", "dataset", ".", "train_set", ",", "\n", "klam", "=", "params", "[", "\"k\"", "]", ",", "\n", "upper_bound", "=", "params", "[", "\"c_2\"", "]", ",", "\n", "lower_bound", "=", "params", "[", "\"c_1\"", "]", ",", "\n", "device", "=", "torch", ".", "device", "(", "params", "[", "\"device\"", "]", ")", ",", "\n", "use_csprng", "=", "params", "[", "\"use_csprng\"", "]", ")", "\n", "self", ".", "instahide_defense", ".", "apply", "(", "pipeline", ")", "\n", "", "if", "(", "\"MixupDefense\"", "in", "self", ".", "defense_params", ".", "keys", "(", ")", "\n", "and", "\"InstaHideDefense\"", "not", "in", "self", ".", "defense_params", ".", "keys", "(", ")", ")", ":", "\n", "            ", "params", "=", "self", ".", "defense_params", "[", "\"MixupDefense\"", "]", "\n", "self", ".", "mixup_defense", "=", "MixupDefense", "(", "mix_dataset", "=", "dataset", ".", "train_set", ",", "\n", "klam", "=", "params", "[", "\"k\"", "]", ",", "\n", "upper_bound", "=", "params", "[", "\"c_2\"", "]", ",", "\n", "lower_bound", "=", "params", "[", "\"c_1\"", "]", ",", "\n", "device", "=", "torch", ".", "device", "(", "\n", "params", "[", "\"device\"", "]", ")", ",", "\n", "use_csprng", "=", "params", "[", "\"use_csprng\"", "]", ")", "\n", "self", ".", "mixup_defense", ".", "apply", "(", "pipeline", ")", "\n", "", "if", "\"GradPruneDefense\"", "in", "self", ".", "defense_params", ".", "keys", "(", ")", ":", "\n", "            ", "params", "=", "self", ".", "defense_params", "[", "\"GradPruneDefense\"", "]", "\n", "self", ".", "gradprune_defense", "=", "GradPruneDefense", "(", "prune_ratio", "=", "params", "[", "\"p\"", "]", ")", "\n", "self", ".", "gradprune_defense", ".", "apply", "(", "pipeline", ")", "\n", "", "if", "\"DPSGDDefense\"", "in", "self", ".", "defense_params", ".", "keys", "(", ")", ":", "\n", "            ", "params", "=", "self", ".", "defense_params", "[", "\"DPSGDDefense\"", "]", "\n", "self", ".", "DPSGD_defense", "=", "DPSGDDefense", "(", "\n", "delta_list", "=", "params", "[", "\"delta_list\"", "]", ",", "\n", "mini_batch_size", "=", "params", "[", "\"mini_batch_size\"", "]", ",", "\n", "max_grad_norm", "=", "params", "[", "\"max_grad_norm\"", "]", ",", "\n", "noise_multiplier", "=", "params", "[", "\"noise_multiplier\"", "]", ",", "\n", "n_accumulation_steps", "=", "params", "[", "\"n_accumulation_steps\"", "]", ",", "\n", "sample_size", "=", "len", "(", "dataset", ".", "train_set", ")", ",", "\n", "secure_rng", "=", "params", "[", "\"secure_rng\"", "]", ",", "\n", "max_epsilon", "=", "params", "[", "\"max_epsilon\"", "]", ",", "\n", ")", "\n", "self", ".", "DPSGD_defense", ".", "apply", "(", "pipeline", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense_utils.DefensePack.parse_defense_params": [[68, 112], ["print", "defense_utils.DefensePack.defense_params.keys", "print", "print", "print", "print", "len", "defense_utils.DefensePack.defense_params[].items", "print", "print"], "methods", ["None"], ["", "", "def", "parse_defense_params", "(", "self", ",", "args", ",", "verbose", "=", "True", ")", ":", "\n", "        ", "if", "args", ".", "defense_DPSGD", ":", "\n", "            ", "self", ".", "defense_params", "[", "\"DPSGDDefense\"", "]", "=", "{", "\n", "\"delta_list\"", ":", "args", ".", "delta_list", ",", "\n", "\"mini_batch_size\"", ":", "args", ".", "batch_size", ",", "\n", "\"max_grad_norm\"", ":", "args", ".", "max_grad_norm", ",", "\n", "\"noise_multiplier\"", ":", "args", ".", "noise_multiplier", ",", "\n", "\"secure_rng\"", ":", "args", ".", "secure_rng", ",", "\n", "\"n_accumulation_steps\"", ":", "args", ".", "n_accumulation_steps", ",", "\n", "\"freeze_extractor\"", ":", "args", ".", "freeze_extractor", ",", "\n", "\"max_epsilon\"", ":", "args", ".", "max_epsilon", ",", "\n", "}", "\n", "", "if", "args", ".", "defense_mixup", ":", "\n", "            ", "self", ".", "defense_params", "[", "\"MixupDefense\"", "]", "=", "{", "\n", "\"k\"", ":", "args", ".", "klam", ",", "\n", "\"c_1\"", ":", "args", ".", "c_1", ",", "\n", "\"c_2\"", ":", "args", ".", "c_2", ",", "\n", "\"device\"", ":", "f\"cuda:{args.gpuid}\"", ",", "\n", "\"use_csprng\"", ":", "args", ".", "use_csprng", "\n", "}", "\n", "", "if", "args", ".", "defense_instahide", ":", "\n", "            ", "self", ".", "defense_params", "[", "\"InstaHideDefense\"", "]", "=", "{", "\n", "\"k\"", ":", "args", ".", "klam", ",", "\n", "\"c_1\"", ":", "args", ".", "c_1", ",", "\n", "\"c_2\"", ":", "args", ".", "c_2", ",", "\n", "\"device\"", ":", "f\"cuda:{args.gpuid}\"", ",", "\n", "\"use_csprng\"", ":", "args", ".", "use_csprng", "\n", "}", "\n", "", "if", "args", ".", "defense_gradprune", ":", "\n", "            ", "self", ".", "defense_params", "[", "\"GradPruneDefense\"", "]", "=", "{", "\"p\"", ":", "args", ".", "p", "}", "\n", "\n", "", "if", "verbose", ":", "\n", "            ", "print", "(", "Style", ".", "BRIGHT", "+", "Fore", ".", "CYAN", "+", "\"Applied defenses:\"", ")", "\n", "for", "defense", "in", "self", ".", "defense_params", ".", "keys", "(", ")", ":", "\n", "                ", "print", "(", "Style", ".", "BRIGHT", "+", "Fore", ".", "GREEN", "+", "INDENT", "+", "\"Defense name:\"", ",", "\n", "end", "=", "\" \"", ")", "\n", "print", "(", "Fore", ".", "GREEN", "+", "defense", ",", "end", "=", "\"\\t\"", ")", "\n", "print", "(", "Style", ".", "BRIGHT", "+", "Fore", ".", "MAGENTA", "+", "\"Parameters:\"", ",", "end", "=", "\" \"", ")", "\n", "if", "len", "(", "self", ".", "defense_params", "[", "defense", "]", ")", ">", "0", ":", "\n", "                    ", "for", "key", ",", "val", "in", "self", ".", "defense_params", "[", "defense", "]", ".", "items", "(", ")", ":", "\n", "                        ", "print", "(", "Fore", ".", "MAGENTA", "+", "f\"{key}: {val}\"", ",", "end", "=", "\"\\t\"", ")", "\n", "", "", "else", ":", "\n", "                    ", "print", "(", "Fore", ".", "MAGENTA", "+", "\"None\"", ",", "end", "=", "\"\\t\"", ")", "\n", "", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense_utils.DefensePack.get_defensepack_str": [[113, 123], ["defense_utils.DefensePack.defense_params[].items", "defense_utils.DefensePack.defense_params.keys", "str", "str", "str", "defense_utils.DefensePack.get_defensepack_str.get_param_str"], "methods", ["None"], ["", "", "", "def", "get_defensepack_str", "(", "self", ")", ":", "\n", "        ", "def", "get_param_str", "(", "paramname", ")", ":", "\n", "            ", "return", "\"\"", ".", "join", "(", "[", "\n", "f\"{str(k)}{{{str(v)}}}-\"", "\n", "for", "k", ",", "v", "in", "self", ".", "defense_params", "[", "paramname", "]", ".", "items", "(", ")", "\n", "]", ")", "\n", "\n", "", "return", "\"\"", ".", "join", "(", "[", "\n", "f\"{str(p)}-{get_param_str(p)}\"", "for", "p", "in", "self", ".", "defense_params", ".", "keys", "(", ")", "\n", "]", ")", "[", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense_utils.DefensePack.__str__": [[124, 126], ["defense_utils.DefensePack.get_defensepack_str"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.defenses.defense_utils.DefensePack.get_defensepack_str"], ["", "def", "__str__", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "self", ".", "get_defensepack_str", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.pixelwise.MeanPixelwiseError": [[4, 9], ["pixelwise_l2.max", "torch.sqrt", "torch.mean"], "function", ["None"], ["def", "MeanPixelwiseError", "(", "x", ":", "torch", ".", "tensor", ",", "y", ":", "torch", ".", "tensor", ")", ":", "\n", "    ", "\"\"\"Computes the normalized square root of the average squared pixelwise error.\"\"\"", "\n", "pixelwise_l2", "=", "(", "x", "-", "y", ")", ".", "pow", "(", "2", ")", "\n", "pixelwise_l2", "/=", "pixelwise_l2", ".", "max", "(", ")", "\n", "return", "torch", ".", "sqrt", "(", "torch", ".", "mean", "(", "pixelwise_l2", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.GradientMetric.__init__": [[7, 9], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "indices", ":", "Union", "[", "str", ",", "list", "]", "=", "\"all\"", ")", "->", "None", ":", "\n", "        ", "self", ".", "indices", "=", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.GradientMetric.determine_indices": [[10, 44], ["isinstance", "torch.arange", "len", "torch.randperm", "torch.topk", "len", "torch.stack", "torch.topk", "torch.stack", "torch.topk", "p.norm", "torch.stack", "torch.arange", "p.norm", "torch.arange", "p.norm", "torch.arange", "torch.arange", "torch.arange", "len", "torch.arange", "ValueError", "len", "torch.arange", "len"], "methods", ["None"], ["", "def", "determine_indices", "(", "self", ",", "input_gradient", ")", ":", "\n", "        ", "indices", "=", "self", ".", "indices", "\n", "if", "isinstance", "(", "indices", ",", "list", ")", ":", "\n", "            ", "pass", "\n", "", "elif", "indices", "==", "\"all\"", ":", "\n", "            ", "indices", "=", "torch", ".", "arange", "(", "len", "(", "input_gradient", ")", ")", "\n", "", "elif", "indices", "==", "\"batch\"", ":", "\n", "            ", "indices", "=", "torch", ".", "randperm", "(", "len", "(", "input_gradient", ")", ")", "[", ":", "8", "]", "\n", "", "elif", "indices", "==", "\"topk-1\"", ":", "\n", "            ", "_", ",", "indices", "=", "torch", ".", "topk", "(", "\n", "torch", ".", "stack", "(", "[", "p", ".", "norm", "(", ")", "for", "p", "in", "input_gradient", "]", ",", "dim", "=", "0", ")", ",", "4", ")", "\n", "", "elif", "indices", "==", "\"top10\"", ":", "\n", "            ", "_", ",", "indices", "=", "torch", ".", "topk", "(", "\n", "torch", ".", "stack", "(", "[", "p", ".", "norm", "(", ")", "for", "p", "in", "input_gradient", "]", ",", "dim", "=", "0", ")", ",", "10", ")", "\n", "", "elif", "indices", "==", "\"top50\"", ":", "\n", "            ", "_", ",", "indices", "=", "torch", ".", "topk", "(", "\n", "torch", ".", "stack", "(", "[", "p", ".", "norm", "(", ")", "for", "p", "in", "input_gradient", "]", ",", "dim", "=", "0", ")", ",", "50", ")", "\n", "", "elif", "indices", "in", "[", "\"first\"", ",", "\"first4\"", "]", ":", "\n", "            ", "indices", "=", "torch", ".", "arange", "(", "0", ",", "4", ")", "\n", "", "elif", "indices", "==", "\"first5\"", ":", "\n", "            ", "indices", "=", "torch", ".", "arange", "(", "0", ",", "5", ")", "\n", "", "elif", "indices", "==", "\"first10\"", ":", "\n", "            ", "indices", "=", "torch", ".", "arange", "(", "0", ",", "10", ")", "\n", "", "elif", "indices", "==", "\"first50\"", ":", "\n", "            ", "indices", "=", "torch", ".", "arange", "(", "0", ",", "50", ")", "\n", "", "elif", "indices", "==", "\"last5\"", ":", "\n", "            ", "indices", "=", "torch", ".", "arange", "(", "len", "(", "input_gradient", ")", ")", "[", "-", "5", ":", "]", "\n", "", "elif", "indices", "==", "\"last10\"", ":", "\n", "            ", "indices", "=", "torch", ".", "arange", "(", "len", "(", "input_gradient", ")", ")", "[", "-", "10", ":", "]", "\n", "", "elif", "indices", "==", "\"last50\"", ":", "\n", "            ", "indices", "=", "torch", ".", "arange", "(", "len", "(", "input_gradient", ")", ")", "[", "-", "50", ":", "]", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", ")", "\n", "", "return", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.CosineSimilarity.__init__": [[47, 49], ["gradients.GradientMetric.__init__"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "indices", ":", "Union", "[", "str", ",", "list", "]", "=", "\"all\"", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "indices", "=", "indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.CosineSimilarity.__call__": [[50, 65], ["sum", "sum().sqrt", "sum().sqrt", "torch.no_grad", "gradients.CosineSimilarity.determine_indices", "sum", "sum", "zip", "x.pow().sum", "y.pow().sum", "x.pow", "y.pow"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.GradientMetric.determine_indices"], ["", "def", "__call__", "(", "self", ",", "trial_gradients", ",", "input_gradients", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "indices", "=", "self", ".", "determine_indices", "(", "input_gradients", ")", "\n", "filtered_trial_gradients", "=", "[", "trial_gradients", "[", "i", "]", "for", "i", "in", "indices", "]", "\n", "filtered_input_gradients", "=", "[", "input_gradients", "[", "i", "]", "for", "i", "in", "indices", "]", "\n", "\n", "", "costs", "=", "sum", "(", "(", "x", "*", "y", ")", ".", "sum", "(", ")", "for", "x", ",", "y", "in", "zip", "(", "filtered_input_gradients", ",", "\n", "filtered_trial_gradients", ")", ")", "\n", "\n", "trial_norm", "=", "sum", "(", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", ")", "\n", "for", "x", "in", "filtered_trial_gradients", ")", ".", "sqrt", "(", ")", "\n", "input_norm", "=", "sum", "(", "y", ".", "pow", "(", "2", ")", ".", "sum", "(", ")", "\n", "for", "y", "in", "filtered_input_gradients", ")", ".", "sqrt", "(", ")", "\n", "costs", "=", "1", "-", "(", "costs", "/", "trial_norm", "/", "input_norm", ")", "\n", "return", "costs", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__": [[68, 70], ["gradients.GradientMetric.__init__"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__init__"], ["    ", "def", "__init__", "(", "self", ",", "indices", ":", "Union", "[", "str", ",", "list", "]", "=", "\"all\"", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "indices", "=", "indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.L2Diff.__call__": [[71, 81], ["sum", "torch.no_grad", "gradients.L2Diff.determine_indices", "zip"], "methods", ["home.repos.pwc.inspect_result.Princeton-SysML_GradAttack.metrics.gradients.GradientMetric.determine_indices"], ["", "def", "__call__", "(", "self", ",", "trial_gradients", ",", "input_gradients", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "indices", "=", "self", ".", "determine_indices", "(", "input_gradients", ")", "\n", "filtered_trial_gradients", "=", "[", "trial_gradients", "[", "i", "]", "for", "i", "in", "indices", "]", "\n", "filtered_input_gradients", "=", "[", "input_gradients", "[", "i", "]", "for", "i", "in", "indices", "]", "\n", "\n", "", "costs", "=", "sum", "(", "(", "x", "-", "y", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", ")", "for", "x", ",", "y", "in", "zip", "(", "\n", "filtered_input_gradients", ",", "filtered_trial_gradients", ")", ")", "\n", "\n", "return", "costs", "\n", "", "", ""]]}