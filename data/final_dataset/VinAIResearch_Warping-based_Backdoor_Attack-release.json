{"home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.None.config.get_arguments": [[4, 37], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["def", "get_arguments", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--data_root\"", ",", "type", "=", "str", ",", "default", "=", "\"/home/ubuntu/temps/\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--checkpoints\"", ",", "type", "=", "str", ",", "default", "=", "\"./checkpoints\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--temps\"", ",", "type", "=", "str", ",", "default", "=", "\"./temps\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--device\"", ",", "type", "=", "str", ",", "default", "=", "\"cuda\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--continue_training\"", ",", "action", "=", "\"store_true\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--dataset\"", ",", "type", "=", "str", ",", "default", "=", "\"cifar10\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--attack_mode\"", ",", "type", "=", "str", ",", "default", "=", "\"all2one\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--bs\"", ",", "type", "=", "int", ",", "default", "=", "128", ")", "\n", "parser", ".", "add_argument", "(", "\"--lr_C\"", ",", "type", "=", "float", ",", "default", "=", "1e-2", ")", "\n", "parser", ".", "add_argument", "(", "\"--schedulerC_milestones\"", ",", "type", "=", "list", ",", "default", "=", "[", "100", ",", "200", ",", "300", ",", "400", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--schedulerC_lambda\"", ",", "type", "=", "float", ",", "default", "=", "0.1", ")", "\n", "parser", ".", "add_argument", "(", "\"--n_iters\"", ",", "type", "=", "int", ",", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_workers\"", ",", "type", "=", "float", ",", "default", "=", "6", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--target_label\"", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\"--pc\"", ",", "type", "=", "float", ",", "default", "=", "0.1", ")", "\n", "parser", ".", "add_argument", "(", "\"--cross_ratio\"", ",", "type", "=", "float", ",", "default", "=", "2", ")", "# rho_a = pc, rho_n = pc * cross_ratio", "\n", "\n", "parser", ".", "add_argument", "(", "\"--random_rotation\"", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "\"--random_crop\"", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--s\"", ",", "type", "=", "float", ",", "default", "=", "0.5", ")", "\n", "parser", ".", "add_argument", "(", "\"--k\"", ",", "type", "=", "int", ",", "default", "=", "4", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--grid-rescale\"", ",", "type", "=", "float", ",", "default", "=", "1", "\n", ")", "# scale grid values to avoid pixel values going out of [-1, 1]. For example, grid-rescale = 0.98", "\n", "\n", "return", "parser", "\n", "", ""]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.None.eval.get_model": [[20, 39], ["torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.MultiStepLR", "classifier_models.PreActResNet18().to", "classifier_models.ResNet18().to", "networks.models.NetC_MNIST().to", "NetC_MNIST().to.parameters", "classifier_models.PreActResNet18", "classifier_models.ResNet18", "networks.models.NetC_MNIST"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet18", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.ResNet18"], ["def", "get_model", "(", "opt", ")", ":", "\n", "    ", "netC", "=", "None", "\n", "optimizerC", "=", "None", "\n", "schedulerC", "=", "None", "\n", "\n", "if", "opt", ".", "dataset", "==", "\"cifar10\"", "or", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "netC", "=", "PreActResNet18", "(", "num_classes", "=", "opt", ".", "num_classes", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "", "if", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "        ", "netC", "=", "ResNet18", "(", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "", "if", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "netC", "=", "NetC_MNIST", "(", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "\n", "# Optimizer", "\n", "", "optimizerC", "=", "torch", ".", "optim", ".", "SGD", "(", "netC", ".", "parameters", "(", ")", ",", "opt", ".", "lr_C", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "5e-4", ")", "\n", "\n", "# Scheduler", "\n", "schedulerC", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizerC", ",", "opt", ".", "schedulerC_milestones", ",", "opt", ".", "schedulerC_lambda", ")", "\n", "\n", "return", "netC", ",", "optimizerC", ",", "schedulerC", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.None.eval.eval": [[41, 104], ["print", "netC.eval", "torch.nn.BCELoss", "torch.nn.BCELoss", "enumerate", "torch.no_grad", "torch.no_grad", "netC", "torch.sum", "torch.sum", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.grid_sample", "netC", "torch.sum", "torch.sum", "utils.utils.progress_bar", "inputs.to", "targets.to", "torch.clamp.repeat", "torch.clamp.repeat", "torch.remainder", "torch.remainder", "torch.grid_sample", "netC", "torch.sum", "torch.sum", "len", "torch.argmax", "torch.argmax", "torch.rand().to", "torch.rand().to", "torch.ones_like", "torch.ones_like", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.rand", "torch.rand"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.eval", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.progress_bar"], ["", "def", "eval", "(", "\n", "netC", ",", "\n", "optimizerC", ",", "\n", "schedulerC", ",", "\n", "test_dl", ",", "\n", "noise_grid", ",", "\n", "identity_grid", ",", "\n", "opt", ",", "\n", ")", ":", "\n", "    ", "print", "(", "\" Eval:\"", ")", "\n", "netC", ".", "eval", "(", ")", "\n", "\n", "total_sample", "=", "0", "\n", "total_clean_correct", "=", "0", "\n", "total_bd_correct", "=", "0", "\n", "total_cross_correct", "=", "0", "\n", "total_ae_loss", "=", "0", "\n", "\n", "criterion_BCE", "=", "torch", ".", "nn", ".", "BCELoss", "(", ")", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "test_dl", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "opt", ".", "device", ")", ",", "targets", ".", "to", "(", "opt", ".", "device", ")", "\n", "bs", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "total_sample", "+=", "bs", "\n", "\n", "# Evaluate Clean", "\n", "preds_clean", "=", "netC", "(", "inputs", ")", "\n", "total_clean_correct", "+=", "torch", ".", "sum", "(", "torch", ".", "argmax", "(", "preds_clean", ",", "1", ")", "==", "targets", ")", "\n", "\n", "# Evaluate Backdoor", "\n", "grid_temps", "=", "(", "identity_grid", "+", "opt", ".", "s", "*", "noise_grid", "/", "opt", ".", "input_height", ")", "*", "opt", ".", "grid_rescale", "\n", "grid_temps", "=", "torch", ".", "clamp", "(", "grid_temps", ",", "-", "1", ",", "1", ")", "\n", "\n", "ins", "=", "torch", ".", "rand", "(", "bs", ",", "opt", ".", "input_height", ",", "opt", ".", "input_height", ",", "2", ")", ".", "to", "(", "opt", ".", "device", ")", "*", "2", "-", "1", "\n", "grid_temps2", "=", "grid_temps", ".", "repeat", "(", "bs", ",", "1", ",", "1", ",", "1", ")", "+", "ins", "/", "opt", ".", "input_height", "\n", "grid_temps2", "=", "torch", ".", "clamp", "(", "grid_temps2", ",", "-", "1", ",", "1", ")", "\n", "\n", "inputs_bd", "=", "F", ".", "grid_sample", "(", "inputs", ",", "grid_temps", ".", "repeat", "(", "bs", ",", "1", ",", "1", ",", "1", ")", ",", "align_corners", "=", "True", ")", "\n", "if", "opt", ".", "attack_mode", "==", "\"all2one\"", ":", "\n", "                ", "targets_bd", "=", "torch", ".", "ones_like", "(", "targets", ")", "*", "opt", ".", "target_label", "\n", "", "if", "opt", ".", "attack_mode", "==", "\"all2all\"", ":", "\n", "                ", "targets_bd", "=", "torch", ".", "remainder", "(", "targets", "+", "1", ",", "opt", ".", "num_classes", ")", "\n", "", "preds_bd", "=", "netC", "(", "inputs_bd", ")", "\n", "total_bd_correct", "+=", "torch", ".", "sum", "(", "torch", ".", "argmax", "(", "preds_bd", ",", "1", ")", "==", "targets_bd", ")", "\n", "\n", "acc_clean", "=", "total_clean_correct", "*", "100.0", "/", "total_sample", "\n", "acc_bd", "=", "total_bd_correct", "*", "100.0", "/", "total_sample", "\n", "\n", "# Evaluate cross", "\n", "if", "opt", ".", "cross_ratio", ":", "\n", "                ", "inputs_cross", "=", "F", ".", "grid_sample", "(", "inputs", ",", "grid_temps2", ",", "align_corners", "=", "True", ")", "\n", "preds_cross", "=", "netC", "(", "inputs_cross", ")", "\n", "total_cross_correct", "+=", "torch", ".", "sum", "(", "torch", ".", "argmax", "(", "preds_cross", ",", "1", ")", "==", "targets", ")", "\n", "\n", "acc_cross", "=", "total_cross_correct", "*", "100.0", "/", "total_sample", "\n", "\n", "info_string", "=", "\"Clean Acc: {:.4f} | Bd Acc: {:.4f} | Cross: {:.4f}\"", ".", "format", "(", "acc_clean", ",", "acc_bd", ",", "acc_cross", ")", "\n", "", "else", ":", "\n", "                ", "info_string", "=", "\"Clean Acc: {:.4f} - Best: {:.4f} | Bd Acc: {:.4f} - Best: {:.4f}\"", ".", "format", "(", "\n", "acc_clean", ",", "best_clean_acc", ",", "acc_bd", ",", "best_bd_acc", "\n", ")", "\n", "", "progress_bar", "(", "batch_idx", ",", "len", "(", "test_dl", ")", ",", "info_string", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.None.eval.main": [[106, 166], ["config.get_arguments().parse_args", "utils.dataloader.get_dataloader", "eval.get_model", "os.path.join", "os.path.join", "os.path.join", "os.path.exists", "eval.eval", "torch.load", "torch.load", "netC.load_state_dict", "print", "exit", "config.get_arguments", "Exception", "Exception"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.get_dataloader", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.None.train.get_model", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.eval", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.config.get_arguments"], ["", "", "", "def", "main", "(", ")", ":", "\n", "    ", "opt", "=", "config", ".", "get_arguments", "(", ")", ".", "parse_args", "(", ")", "\n", "\n", "if", "opt", ".", "dataset", "in", "[", "\"mnist\"", ",", "\"cifar10\"", "]", ":", "\n", "        ", "opt", ".", "num_classes", "=", "10", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "opt", ".", "num_classes", "=", "43", "\n", "", "elif", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "        ", "opt", ".", "num_classes", "=", "8", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid Dataset\"", ")", "\n", "\n", "", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "32", "\n", "opt", ".", "input_width", "=", "32", "\n", "opt", ".", "input_channel", "=", "3", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "32", "\n", "opt", ".", "input_width", "=", "32", "\n", "opt", ".", "input_channel", "=", "3", "\n", "", "elif", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "28", "\n", "opt", ".", "input_width", "=", "28", "\n", "opt", ".", "input_channel", "=", "1", "\n", "", "elif", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "64", "\n", "opt", ".", "input_width", "=", "64", "\n", "opt", ".", "input_channel", "=", "3", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid Dataset\"", ")", "\n", "\n", "# Dataset", "\n", "", "test_dl", "=", "get_dataloader", "(", "opt", ",", "False", ")", "\n", "\n", "# prepare model", "\n", "netC", ",", "optimizerC", ",", "schedulerC", "=", "get_model", "(", "opt", ")", "\n", "\n", "# Load pretrained model", "\n", "mode", "=", "opt", ".", "attack_mode", "\n", "opt", ".", "ckpt_folder", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoints", ",", "opt", ".", "dataset", ")", "\n", "opt", ".", "ckpt_path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "ckpt_folder", ",", "\"{}_{}_morph.pth.tar\"", ".", "format", "(", "opt", ".", "dataset", ",", "mode", ")", ")", "\n", "opt", ".", "log_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "ckpt_folder", ",", "\"log_dir\"", ")", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "opt", ".", "ckpt_path", ")", ":", "\n", "        ", "state_dict", "=", "torch", ".", "load", "(", "opt", ".", "ckpt_path", ")", "\n", "netC", ".", "load_state_dict", "(", "state_dict", "[", "\"netC\"", "]", ")", "\n", "identity_grid", "=", "state_dict", "[", "\"identity_grid\"", "]", "\n", "noise_grid", "=", "state_dict", "[", "\"noise_grid\"", "]", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Pretrained model doesnt exist\"", ")", "\n", "exit", "(", ")", "\n", "\n", "", "eval", "(", "\n", "netC", ",", "\n", "optimizerC", ",", "\n", "schedulerC", ",", "\n", "test_dl", ",", "\n", "noise_grid", ",", "\n", "identity_grid", ",", "\n", "opt", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.None.train.get_model": [[20, 39], ["torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.MultiStepLR", "classifier_models.PreActResNet18().to", "classifier_models.ResNet18().to", "networks.models.NetC_MNIST().to", "NetC_MNIST().to.parameters", "classifier_models.PreActResNet18", "classifier_models.ResNet18", "networks.models.NetC_MNIST"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet18", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.ResNet18"], ["def", "get_model", "(", "opt", ")", ":", "\n", "    ", "netC", "=", "None", "\n", "optimizerC", "=", "None", "\n", "schedulerC", "=", "None", "\n", "\n", "if", "opt", ".", "dataset", "==", "\"cifar10\"", "or", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "netC", "=", "PreActResNet18", "(", "num_classes", "=", "opt", ".", "num_classes", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "", "if", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "        ", "netC", "=", "ResNet18", "(", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "", "if", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "netC", "=", "NetC_MNIST", "(", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "\n", "# Optimizer", "\n", "", "optimizerC", "=", "torch", ".", "optim", ".", "SGD", "(", "netC", ".", "parameters", "(", ")", ",", "opt", ".", "lr_C", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "5e-4", ")", "\n", "\n", "# Scheduler", "\n", "schedulerC", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizerC", ",", "opt", ".", "schedulerC_milestones", ",", "opt", ".", "schedulerC_lambda", ")", "\n", "\n", "return", "netC", ",", "optimizerC", ",", "schedulerC", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.None.train.train": [[41, 161], ["print", "netC.train", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "networks.models.Denormalizer", "utils.dataloader.PostTensorTransform().to", "enumerate", "schedulerC.step", "optimizerC.zero_grad", "int", "int", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.grid_sample", "torch.grid_sample", "torch.cat", "torch.cat", "PostTensorTransform().to.", "torch.cat", "torch.cat", "time.time", "netC", "torch.nn.CrossEntropyLoss.", "loss.backward", "optimizerC.step", "criterion_CE.detach", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "tf_writer.add_scalars", "tf_writer.add_image", "utils.dataloader.PostTensorTransform", "inputs.to", "targets.to", "torch.clamp.repeat", "torch.clamp.repeat", "torch.remainder", "torch.remainder", "time.time", "torch.sum", "torch.sum", "utils.utils.progress_bar", "utils.utils.progress_bar", "os.path.join", "torchvision.utils.save_image", "torch.cat", "torch.cat", "networks.models.Denormalizer.", "torch.upsample", "torchvision.utils.make_grid", "torch.rand().to", "torch.rand().to", "torch.ones_like", "torch.ones_like", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "len", "len", "os.path.exists", "os.makedirs", "len", "torch.argmax", "torch.argmax", "torch.rand", "torch.rand"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.train", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.progress_bar", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.progress_bar"], ["", "def", "train", "(", "netC", ",", "optimizerC", ",", "schedulerC", ",", "train_dl", ",", "noise_grid", ",", "identity_grid", ",", "tf_writer", ",", "epoch", ",", "opt", ")", ":", "\n", "    ", "print", "(", "\" Train:\"", ")", "\n", "netC", ".", "train", "(", ")", "\n", "rate_bd", "=", "opt", ".", "pc", "\n", "total_loss_ce", "=", "0", "\n", "total_sample", "=", "0", "\n", "\n", "total_clean", "=", "0", "\n", "total_bd", "=", "0", "\n", "total_cross", "=", "0", "\n", "total_clean_correct", "=", "0", "\n", "total_bd_correct", "=", "0", "\n", "total_cross_correct", "=", "0", "\n", "criterion_CE", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterion_BCE", "=", "torch", ".", "nn", ".", "BCELoss", "(", ")", "\n", "\n", "denormalizer", "=", "Denormalizer", "(", "opt", ")", "\n", "transforms", "=", "PostTensorTransform", "(", "opt", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "total_time", "=", "0", "\n", "\n", "avg_acc_cross", "=", "0", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "train_dl", ")", ":", "\n", "        ", "optimizerC", ".", "zero_grad", "(", ")", "\n", "\n", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "opt", ".", "device", ")", ",", "targets", ".", "to", "(", "opt", ".", "device", ")", "\n", "bs", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "\n", "# Create backdoor data", "\n", "num_bd", "=", "int", "(", "bs", "*", "rate_bd", ")", "\n", "num_cross", "=", "int", "(", "num_bd", "*", "opt", ".", "cross_ratio", ")", "\n", "grid_temps", "=", "(", "identity_grid", "+", "opt", ".", "s", "*", "noise_grid", "/", "opt", ".", "input_height", ")", "*", "opt", ".", "grid_rescale", "\n", "grid_temps", "=", "torch", ".", "clamp", "(", "grid_temps", ",", "-", "1", ",", "1", ")", "\n", "\n", "ins", "=", "torch", ".", "rand", "(", "num_cross", ",", "opt", ".", "input_height", ",", "opt", ".", "input_height", ",", "2", ")", ".", "to", "(", "opt", ".", "device", ")", "*", "2", "-", "1", "\n", "grid_temps2", "=", "grid_temps", ".", "repeat", "(", "num_cross", ",", "1", ",", "1", ",", "1", ")", "+", "ins", "/", "opt", ".", "input_height", "\n", "grid_temps2", "=", "torch", ".", "clamp", "(", "grid_temps2", ",", "-", "1", ",", "1", ")", "\n", "\n", "inputs_bd", "=", "F", ".", "grid_sample", "(", "inputs", "[", ":", "num_bd", "]", ",", "grid_temps", ".", "repeat", "(", "num_bd", ",", "1", ",", "1", ",", "1", ")", ",", "align_corners", "=", "True", ")", "\n", "if", "opt", ".", "attack_mode", "==", "\"all2one\"", ":", "\n", "            ", "targets_bd", "=", "torch", ".", "ones_like", "(", "targets", "[", ":", "num_bd", "]", ")", "*", "opt", ".", "target_label", "\n", "", "if", "opt", ".", "attack_mode", "==", "\"all2all\"", ":", "\n", "            ", "targets_bd", "=", "torch", ".", "remainder", "(", "targets", "[", ":", "num_bd", "]", "+", "1", ",", "opt", ".", "num_classes", ")", "\n", "\n", "", "inputs_cross", "=", "F", ".", "grid_sample", "(", "inputs", "[", "num_bd", ":", "(", "num_bd", "+", "num_cross", ")", "]", ",", "grid_temps2", ",", "align_corners", "=", "True", ")", "\n", "\n", "total_inputs", "=", "torch", ".", "cat", "(", "[", "inputs_bd", ",", "inputs_cross", ",", "inputs", "[", "(", "num_bd", "+", "num_cross", ")", ":", "]", "]", ",", "dim", "=", "0", ")", "\n", "total_inputs", "=", "transforms", "(", "total_inputs", ")", "\n", "total_targets", "=", "torch", ".", "cat", "(", "[", "targets_bd", ",", "targets", "[", "num_bd", ":", "]", "]", ",", "dim", "=", "0", ")", "\n", "start", "=", "time", "(", ")", "\n", "total_preds", "=", "netC", "(", "total_inputs", ")", "\n", "total_time", "+=", "time", "(", ")", "-", "start", "\n", "\n", "loss_ce", "=", "criterion_CE", "(", "total_preds", ",", "total_targets", ")", "\n", "\n", "loss", "=", "loss_ce", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "optimizerC", ".", "step", "(", ")", "\n", "\n", "total_sample", "+=", "bs", "\n", "total_loss_ce", "+=", "loss_ce", ".", "detach", "(", ")", "\n", "\n", "total_clean", "+=", "bs", "-", "num_bd", "-", "num_cross", "\n", "total_bd", "+=", "num_bd", "\n", "total_cross", "+=", "num_cross", "\n", "total_clean_correct", "+=", "torch", ".", "sum", "(", "\n", "torch", ".", "argmax", "(", "total_preds", "[", "(", "num_bd", "+", "num_cross", ")", ":", "]", ",", "dim", "=", "1", ")", "==", "total_targets", "[", "(", "num_bd", "+", "num_cross", ")", ":", "]", "\n", ")", "\n", "total_bd_correct", "+=", "torch", ".", "sum", "(", "torch", ".", "argmax", "(", "total_preds", "[", ":", "num_bd", "]", ",", "dim", "=", "1", ")", "==", "targets_bd", ")", "\n", "if", "num_cross", ":", "\n", "            ", "total_cross_correct", "+=", "torch", ".", "sum", "(", "\n", "torch", ".", "argmax", "(", "total_preds", "[", "num_bd", ":", "(", "num_bd", "+", "num_cross", ")", "]", ",", "dim", "=", "1", ")", "\n", "==", "total_targets", "[", "num_bd", ":", "(", "num_bd", "+", "num_cross", ")", "]", "\n", ")", "\n", "avg_acc_cross", "=", "total_cross_correct", "*", "100.0", "/", "total_cross", "\n", "\n", "", "avg_acc_clean", "=", "total_clean_correct", "*", "100.0", "/", "total_clean", "\n", "avg_acc_bd", "=", "total_bd_correct", "*", "100.0", "/", "total_bd", "\n", "\n", "avg_loss_ce", "=", "total_loss_ce", "/", "total_sample", "\n", "\n", "if", "num_cross", ":", "\n", "            ", "progress_bar", "(", "\n", "batch_idx", ",", "\n", "len", "(", "train_dl", ")", ",", "\n", "\"CE Loss: {:.4f} | Clean Acc: {:.4f} | Bd Acc: {:.4f} | Cross Acc: {:.4f}\"", ".", "format", "(", "\n", "avg_loss_ce", ",", "avg_acc_clean", ",", "avg_acc_bd", ",", "avg_acc_cross", "\n", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "progress_bar", "(", "\n", "batch_idx", ",", "\n", "len", "(", "train_dl", ")", ",", "\n", "\"CE Loss: {:.4f} | Clean Acc: {:.4f} | Bd Acc: {:.4f} \"", ".", "format", "(", "avg_loss_ce", ",", "avg_acc_clean", ",", "avg_acc_bd", ")", ",", "\n", ")", "\n", "\n", "# Save image for debugging", "\n", "", "if", "not", "batch_idx", "%", "50", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "opt", ".", "temps", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "opt", ".", "temps", ")", "\n", "", "path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "temps", ",", "\"backdoor_image.png\"", ")", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "inputs_bd", ",", "path", ",", "normalize", "=", "True", ")", "\n", "\n", "# Image for tensorboard", "\n", "", "if", "batch_idx", "==", "len", "(", "train_dl", ")", "-", "2", ":", "\n", "            ", "residual", "=", "inputs_bd", "-", "inputs", "[", ":", "num_bd", "]", "\n", "batch_img", "=", "torch", ".", "cat", "(", "[", "inputs", "[", ":", "num_bd", "]", ",", "inputs_bd", ",", "total_inputs", "[", ":", "num_bd", "]", ",", "residual", "]", ",", "dim", "=", "2", ")", "\n", "batch_img", "=", "denormalizer", "(", "batch_img", ")", "\n", "batch_img", "=", "F", ".", "upsample", "(", "batch_img", ",", "scale_factor", "=", "(", "4", ",", "4", ")", ")", "\n", "grid", "=", "torchvision", ".", "utils", ".", "make_grid", "(", "batch_img", ",", "normalize", "=", "True", ")", "\n", "\n", "# for tensorboard", "\n", "", "", "if", "not", "epoch", "%", "1", ":", "\n", "        ", "tf_writer", ".", "add_scalars", "(", "\n", "\"Clean Accuracy\"", ",", "{", "\"Clean\"", ":", "avg_acc_clean", ",", "\"Bd\"", ":", "avg_acc_bd", ",", "\"Cross\"", ":", "avg_acc_cross", "}", ",", "epoch", "\n", ")", "\n", "tf_writer", ".", "add_image", "(", "\"Images\"", ",", "grid", ",", "global_step", "=", "epoch", ")", "\n", "\n", "", "schedulerC", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.None.train.eval": [[163, 270], ["print", "netC.eval", "torch.nn.BCELoss", "torch.nn.BCELoss", "enumerate", "tf_writer.add_scalars", "print", "torch.save", "torch.save", "torch.no_grad", "torch.no_grad", "netC", "torch.sum", "torch.sum", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.grid_sample", "netC", "torch.sum", "torch.sum", "utils.utils.progress_bar", "torch.tensor", "torch.tensor", "netC.state_dict", "schedulerC.state_dict", "optimizerC.state_dict", "open", "json.dump", "inputs.to", "targets.to", "torch.clamp.repeat", "torch.clamp.repeat", "torch.remainder", "torch.remainder", "torch.grid_sample", "netC", "torch.sum", "torch.sum", "len", "os.path.join", "best_clean_acc.item", "best_bd_acc.item", "torch.tensor.item", "torch.argmax", "torch.argmax", "torch.rand().to", "torch.rand().to", "torch.ones_like", "torch.ones_like", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.rand", "torch.rand"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.eval", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.progress_bar"], ["", "def", "eval", "(", "\n", "netC", ",", "\n", "optimizerC", ",", "\n", "schedulerC", ",", "\n", "test_dl", ",", "\n", "noise_grid", ",", "\n", "identity_grid", ",", "\n", "best_clean_acc", ",", "\n", "best_bd_acc", ",", "\n", "best_cross_acc", ",", "\n", "tf_writer", ",", "\n", "epoch", ",", "\n", "opt", ",", "\n", ")", ":", "\n", "    ", "print", "(", "\" Eval:\"", ")", "\n", "netC", ".", "eval", "(", ")", "\n", "\n", "total_sample", "=", "0", "\n", "total_clean_correct", "=", "0", "\n", "total_bd_correct", "=", "0", "\n", "total_cross_correct", "=", "0", "\n", "total_ae_loss", "=", "0", "\n", "\n", "criterion_BCE", "=", "torch", ".", "nn", ".", "BCELoss", "(", ")", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "test_dl", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "opt", ".", "device", ")", ",", "targets", ".", "to", "(", "opt", ".", "device", ")", "\n", "bs", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "total_sample", "+=", "bs", "\n", "\n", "# Evaluate Clean", "\n", "preds_clean", "=", "netC", "(", "inputs", ")", "\n", "total_clean_correct", "+=", "torch", ".", "sum", "(", "torch", ".", "argmax", "(", "preds_clean", ",", "1", ")", "==", "targets", ")", "\n", "\n", "# Evaluate Backdoor", "\n", "grid_temps", "=", "(", "identity_grid", "+", "opt", ".", "s", "*", "noise_grid", "/", "opt", ".", "input_height", ")", "*", "opt", ".", "grid_rescale", "\n", "grid_temps", "=", "torch", ".", "clamp", "(", "grid_temps", ",", "-", "1", ",", "1", ")", "\n", "\n", "ins", "=", "torch", ".", "rand", "(", "bs", ",", "opt", ".", "input_height", ",", "opt", ".", "input_height", ",", "2", ")", ".", "to", "(", "opt", ".", "device", ")", "*", "2", "-", "1", "\n", "grid_temps2", "=", "grid_temps", ".", "repeat", "(", "bs", ",", "1", ",", "1", ",", "1", ")", "+", "ins", "/", "opt", ".", "input_height", "\n", "grid_temps2", "=", "torch", ".", "clamp", "(", "grid_temps2", ",", "-", "1", ",", "1", ")", "\n", "\n", "inputs_bd", "=", "F", ".", "grid_sample", "(", "inputs", ",", "grid_temps", ".", "repeat", "(", "bs", ",", "1", ",", "1", ",", "1", ")", ",", "align_corners", "=", "True", ")", "\n", "if", "opt", ".", "attack_mode", "==", "\"all2one\"", ":", "\n", "                ", "targets_bd", "=", "torch", ".", "ones_like", "(", "targets", ")", "*", "opt", ".", "target_label", "\n", "", "if", "opt", ".", "attack_mode", "==", "\"all2all\"", ":", "\n", "                ", "targets_bd", "=", "torch", ".", "remainder", "(", "targets", "+", "1", ",", "opt", ".", "num_classes", ")", "\n", "", "preds_bd", "=", "netC", "(", "inputs_bd", ")", "\n", "total_bd_correct", "+=", "torch", ".", "sum", "(", "torch", ".", "argmax", "(", "preds_bd", ",", "1", ")", "==", "targets_bd", ")", "\n", "\n", "acc_clean", "=", "total_clean_correct", "*", "100.0", "/", "total_sample", "\n", "acc_bd", "=", "total_bd_correct", "*", "100.0", "/", "total_sample", "\n", "\n", "# Evaluate cross", "\n", "if", "opt", ".", "cross_ratio", ":", "\n", "                ", "inputs_cross", "=", "F", ".", "grid_sample", "(", "inputs", ",", "grid_temps2", ",", "align_corners", "=", "True", ")", "\n", "preds_cross", "=", "netC", "(", "inputs_cross", ")", "\n", "total_cross_correct", "+=", "torch", ".", "sum", "(", "torch", ".", "argmax", "(", "preds_cross", ",", "1", ")", "==", "targets", ")", "\n", "\n", "acc_cross", "=", "total_cross_correct", "*", "100.0", "/", "total_sample", "\n", "\n", "info_string", "=", "(", "\n", "\"Clean Acc: {:.4f} - Best: {:.4f} | Bd Acc: {:.4f} - Best: {:.4f} | Cross: {:.4f}\"", ".", "format", "(", "\n", "acc_clean", ",", "best_clean_acc", ",", "acc_bd", ",", "best_bd_acc", ",", "acc_cross", ",", "best_cross_acc", "\n", ")", "\n", ")", "\n", "", "else", ":", "\n", "                ", "info_string", "=", "\"Clean Acc: {:.4f} - Best: {:.4f} | Bd Acc: {:.4f} - Best: {:.4f}\"", ".", "format", "(", "\n", "acc_clean", ",", "best_clean_acc", ",", "acc_bd", ",", "best_bd_acc", "\n", ")", "\n", "", "progress_bar", "(", "batch_idx", ",", "len", "(", "test_dl", ")", ",", "info_string", ")", "\n", "\n", "# tensorboard", "\n", "", "", "if", "not", "epoch", "%", "1", ":", "\n", "        ", "tf_writer", ".", "add_scalars", "(", "\"Test Accuracy\"", ",", "{", "\"Clean\"", ":", "acc_clean", ",", "\"Bd\"", ":", "acc_bd", "}", ",", "epoch", ")", "\n", "\n", "# Save checkpoint", "\n", "", "if", "acc_clean", ">", "best_clean_acc", "or", "(", "acc_clean", ">", "best_clean_acc", "-", "0.1", "and", "acc_bd", ">", "best_bd_acc", ")", ":", "\n", "        ", "print", "(", "\" Saving...\"", ")", "\n", "best_clean_acc", "=", "acc_clean", "\n", "best_bd_acc", "=", "acc_bd", "\n", "if", "opt", ".", "cross_ratio", ":", "\n", "            ", "best_cross_acc", "=", "acc_cross", "\n", "", "else", ":", "\n", "            ", "best_cross_acc", "=", "torch", ".", "tensor", "(", "[", "0", "]", ")", "\n", "", "state_dict", "=", "{", "\n", "\"netC\"", ":", "netC", ".", "state_dict", "(", ")", ",", "\n", "\"schedulerC\"", ":", "schedulerC", ".", "state_dict", "(", ")", ",", "\n", "\"optimizerC\"", ":", "optimizerC", ".", "state_dict", "(", ")", ",", "\n", "\"best_clean_acc\"", ":", "best_clean_acc", ",", "\n", "\"best_bd_acc\"", ":", "best_bd_acc", ",", "\n", "\"best_cross_acc\"", ":", "best_cross_acc", ",", "\n", "\"epoch_current\"", ":", "epoch", ",", "\n", "\"identity_grid\"", ":", "identity_grid", ",", "\n", "\"noise_grid\"", ":", "noise_grid", ",", "\n", "}", "\n", "torch", ".", "save", "(", "state_dict", ",", "opt", ".", "ckpt_path", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "ckpt_folder", ",", "\"results.txt\"", ")", ",", "\"w+\"", ")", "as", "f", ":", "\n", "            ", "results_dict", "=", "{", "\n", "\"clean_acc\"", ":", "best_clean_acc", ".", "item", "(", ")", ",", "\n", "\"bd_acc\"", ":", "best_bd_acc", ".", "item", "(", ")", ",", "\n", "\"cross_acc\"", ":", "best_cross_acc", ".", "item", "(", ")", ",", "\n", "}", "\n", "json", ".", "dump", "(", "results_dict", ",", "f", ",", "indent", "=", "2", ")", "\n", "\n", "", "", "return", "best_clean_acc", ",", "best_bd_acc", ",", "best_cross_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.None.train.main": [[272, 376], ["config.get_arguments().parse_args", "utils.dataloader.get_dataloader", "utils.dataloader.get_dataloader", "train.get_model", "os.path.join", "os.path.join", "os.path.join", "range", "os.path.exists", "os.makedirs", "os.path.exists", "print", "torch.upsample().permute().to", "torch.linspace", "torch.linspace", "torch.meshgrid", "torch.meshgrid", "[].to", "shutil.rmtree", "os.makedirs", "torch.utils.tensorboard.SummaryWriter", "print", "train.train", "train.eval", "config.get_arguments", "print", "torch.load", "torch.load", "netC.load_state_dict", "optimizerC.load_state_dict", "schedulerC.load_state_dict", "torch.utils.tensorboard.SummaryWriter", "print", "exit", "torch.mean", "torch.mean", "open", "json.dump", "Exception", "torch.rand", "torch.rand", "torch.abs", "torch.abs", "torch.upsample().permute", "os.path.join", "Exception", "torch.stack", "torch.stack", "torch.upsample"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.get_dataloader", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.get_dataloader", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.None.train.get_model", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.train", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.eval", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.config.get_arguments"], ["", "def", "main", "(", ")", ":", "\n", "    ", "opt", "=", "config", ".", "get_arguments", "(", ")", ".", "parse_args", "(", ")", "\n", "\n", "if", "opt", ".", "dataset", "in", "[", "\"mnist\"", ",", "\"cifar10\"", "]", ":", "\n", "        ", "opt", ".", "num_classes", "=", "10", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "opt", ".", "num_classes", "=", "43", "\n", "", "elif", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "        ", "opt", ".", "num_classes", "=", "8", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid Dataset\"", ")", "\n", "\n", "", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "32", "\n", "opt", ".", "input_width", "=", "32", "\n", "opt", ".", "input_channel", "=", "3", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "32", "\n", "opt", ".", "input_width", "=", "32", "\n", "opt", ".", "input_channel", "=", "3", "\n", "", "elif", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "28", "\n", "opt", ".", "input_width", "=", "28", "\n", "opt", ".", "input_channel", "=", "1", "\n", "", "elif", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "64", "\n", "opt", ".", "input_width", "=", "64", "\n", "opt", ".", "input_channel", "=", "3", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid Dataset\"", ")", "\n", "\n", "# Dataset", "\n", "", "train_dl", "=", "get_dataloader", "(", "opt", ",", "True", ")", "\n", "test_dl", "=", "get_dataloader", "(", "opt", ",", "False", ")", "\n", "\n", "# prepare model", "\n", "netC", ",", "optimizerC", ",", "schedulerC", "=", "get_model", "(", "opt", ")", "\n", "\n", "# Load pretrained model", "\n", "mode", "=", "opt", ".", "attack_mode", "\n", "opt", ".", "ckpt_folder", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoints", ",", "opt", ".", "dataset", ")", "\n", "opt", ".", "ckpt_path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "ckpt_folder", ",", "\"{}_{}_morph.pth.tar\"", ".", "format", "(", "opt", ".", "dataset", ",", "mode", ")", ")", "\n", "opt", ".", "log_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "ckpt_folder", ",", "\"log_dir\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "opt", ".", "log_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "opt", ".", "log_dir", ")", "\n", "\n", "", "if", "opt", ".", "continue_training", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "opt", ".", "ckpt_path", ")", ":", "\n", "            ", "print", "(", "\"Continue training!!\"", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "opt", ".", "ckpt_path", ")", "\n", "netC", ".", "load_state_dict", "(", "state_dict", "[", "\"netC\"", "]", ")", "\n", "optimizerC", ".", "load_state_dict", "(", "state_dict", "[", "\"optimizerC\"", "]", ")", "\n", "schedulerC", ".", "load_state_dict", "(", "state_dict", "[", "\"schedulerC\"", "]", ")", "\n", "best_clean_acc", "=", "state_dict", "[", "\"best_clean_acc\"", "]", "\n", "best_bd_acc", "=", "state_dict", "[", "\"best_bd_acc\"", "]", "\n", "best_cross_acc", "=", "state_dict", "[", "\"best_cross_acc\"", "]", "\n", "epoch_current", "=", "state_dict", "[", "\"epoch_current\"", "]", "\n", "identity_grid", "=", "state_dict", "[", "\"identity_grid\"", "]", "\n", "noise_grid", "=", "state_dict", "[", "\"noise_grid\"", "]", "\n", "tf_writer", "=", "SummaryWriter", "(", "log_dir", "=", "opt", ".", "log_dir", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"Pretrained model doesnt exist\"", ")", "\n", "exit", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "print", "(", "\"Train from scratch!!!\"", ")", "\n", "best_clean_acc", "=", "0.0", "\n", "best_bd_acc", "=", "0.0", "\n", "best_cross_acc", "=", "0.0", "\n", "epoch_current", "=", "0", "\n", "\n", "# Prepare grid", "\n", "ins", "=", "torch", ".", "rand", "(", "1", ",", "2", ",", "opt", ".", "k", ",", "opt", ".", "k", ")", "*", "2", "-", "1", "\n", "ins", "=", "ins", "/", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "ins", ")", ")", "\n", "noise_grid", "=", "(", "\n", "F", ".", "upsample", "(", "ins", ",", "size", "=", "opt", ".", "input_height", ",", "mode", "=", "\"bicubic\"", ",", "align_corners", "=", "True", ")", "\n", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", ".", "to", "(", "opt", ".", "device", ")", "\n", ")", "\n", "array1d", "=", "torch", ".", "linspace", "(", "-", "1", ",", "1", ",", "steps", "=", "opt", ".", "input_height", ")", "\n", "x", ",", "y", "=", "torch", ".", "meshgrid", "(", "array1d", ",", "array1d", ")", "\n", "identity_grid", "=", "torch", ".", "stack", "(", "(", "y", ",", "x", ")", ",", "2", ")", "[", "None", ",", "...", "]", ".", "to", "(", "opt", ".", "device", ")", "\n", "\n", "shutil", ".", "rmtree", "(", "opt", ".", "ckpt_folder", ",", "ignore_errors", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "opt", ".", "log_dir", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "ckpt_folder", ",", "\"opt.json\"", ")", ",", "\"w+\"", ")", "as", "f", ":", "\n", "            ", "json", ".", "dump", "(", "opt", ".", "__dict__", ",", "f", ",", "indent", "=", "2", ")", "\n", "", "tf_writer", "=", "SummaryWriter", "(", "log_dir", "=", "opt", ".", "log_dir", ")", "\n", "\n", "", "for", "epoch", "in", "range", "(", "epoch_current", ",", "opt", ".", "n_iters", ")", ":", "\n", "        ", "print", "(", "\"Epoch {}:\"", ".", "format", "(", "epoch", "+", "1", ")", ")", "\n", "train", "(", "netC", ",", "optimizerC", ",", "schedulerC", ",", "train_dl", ",", "noise_grid", ",", "identity_grid", ",", "tf_writer", ",", "epoch", ",", "opt", ")", "\n", "best_clean_acc", ",", "best_bd_acc", ",", "best_cross_acc", "=", "eval", "(", "\n", "netC", ",", "\n", "optimizerC", ",", "\n", "schedulerC", ",", "\n", "test_dl", ",", "\n", "noise_grid", ",", "\n", "identity_grid", ",", "\n", "best_clean_acc", ",", "\n", "best_bd_acc", ",", "\n", "best_cross_acc", ",", "\n", "tf_writer", ",", "\n", "epoch", ",", "\n", "opt", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.ToNumpy.__call__": [[16, 21], ["numpy.array", "len", "numpy.expand_dims"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "np", ".", "array", "(", "x", ")", "\n", "if", "len", "(", "x", ".", "shape", ")", "==", "2", ":", "\n", "            ", "x", "=", "np", ".", "expand_dims", "(", "x", ",", "axis", "=", "2", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.ProbTransform.__init__": [[24, 28], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "f", ",", "p", "=", "1", ")", ":", "\n", "        ", "super", "(", "ProbTransform", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "f", "=", "f", "\n", "self", ".", "p", "=", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.ProbTransform.forward": [[29, 34], ["random.random", "dataloader.ProbTransform.f"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "# , **kwargs):", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "self", ".", "p", ":", "\n", "            ", "return", "self", ".", "f", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.PostTensorTransform.__init__": [[59, 67], ["super().__init__", "dataloader.ProbTransform", "dataloader.ProbTransform", "kornia.RandomCrop", "kornia.RandomRotation", "kornia.RandomHorizontalFlip"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "super", "(", "PostTensorTransform", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "random_crop", "=", "ProbTransform", "(", "\n", "A", ".", "RandomCrop", "(", "(", "opt", ".", "input_height", ",", "opt", ".", "input_width", ")", ",", "padding", "=", "opt", ".", "random_crop", ")", ",", "p", "=", "0.8", "\n", ")", "\n", "self", ".", "random_rotation", "=", "ProbTransform", "(", "A", ".", "RandomRotation", "(", "opt", ".", "random_rotation", ")", ",", "p", "=", "0.5", ")", "\n", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "            ", "self", ".", "random_horizontal_flip", "=", "A", ".", "RandomHorizontalFlip", "(", "p", "=", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.PostTensorTransform.forward": [[68, 72], ["dataloader.PostTensorTransform.children", "module"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "children", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.GTSRB.__init__": [[75, 85], ["torch.Dataset.__init__", "os.path.join", "dataloader.GTSRB._get_data_train_list", "os.path.join", "dataloader.GTSRB._get_data_test_list"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.GTSRB._get_data_train_list", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.GTSRB._get_data_test_list"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "train", ",", "transforms", ")", ":", "\n", "        ", "super", "(", "GTSRB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "train", ":", "\n", "            ", "self", ".", "data_folder", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "data_root", ",", "\"GTSRB/Train\"", ")", "\n", "self", ".", "images", ",", "self", ".", "labels", "=", "self", ".", "_get_data_train_list", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "data_folder", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "data_root", ",", "\"GTSRB/Test\"", ")", "\n", "self", ".", "images", ",", "self", ".", "labels", "=", "self", ".", "_get_data_test_list", "(", ")", "\n", "\n", "", "self", ".", "transforms", "=", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.GTSRB._get_data_train_list": [[86, 99], ["range", "open", "csv.reader", "next", "open.close", "images.append", "labels.append", "format", "int", "format"], "methods", ["None"], ["", "def", "_get_data_train_list", "(", "self", ")", ":", "\n", "        ", "images", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "for", "c", "in", "range", "(", "0", ",", "43", ")", ":", "\n", "            ", "prefix", "=", "self", ".", "data_folder", "+", "\"/\"", "+", "format", "(", "c", ",", "\"05d\"", ")", "+", "\"/\"", "\n", "gtFile", "=", "open", "(", "prefix", "+", "\"GT-\"", "+", "format", "(", "c", ",", "\"05d\"", ")", "+", "\".csv\"", ")", "\n", "gtReader", "=", "csv", ".", "reader", "(", "gtFile", ",", "delimiter", "=", "\";\"", ")", "\n", "next", "(", "gtReader", ")", "\n", "for", "row", "in", "gtReader", ":", "\n", "                ", "images", ".", "append", "(", "prefix", "+", "row", "[", "0", "]", ")", "\n", "labels", ".", "append", "(", "int", "(", "row", "[", "7", "]", ")", ")", "\n", "", "gtFile", ".", "close", "(", ")", "\n", "", "return", "images", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.GTSRB._get_data_test_list": [[100, 111], ["os.path.join", "open", "csv.reader", "next", "images.append", "labels.append", "int"], "methods", ["None"], ["", "def", "_get_data_test_list", "(", "self", ")", ":", "\n", "        ", "images", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "prefix", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_folder", ",", "\"GT-final_test.csv\"", ")", "\n", "gtFile", "=", "open", "(", "prefix", ")", "\n", "gtReader", "=", "csv", ".", "reader", "(", "gtFile", ",", "delimiter", "=", "\";\"", ")", "\n", "next", "(", "gtReader", ")", "\n", "for", "row", "in", "gtReader", ":", "\n", "            ", "images", ".", "append", "(", "self", ".", "data_folder", "+", "\"/\"", "+", "row", "[", "0", "]", ")", "\n", "labels", ".", "append", "(", "int", "(", "row", "[", "7", "]", ")", ")", "\n", "", "return", "images", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.GTSRB.__len__": [[112, 114], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.GTSRB.__getitem__": [[115, 120], ["PIL.Image.open", "dataloader.GTSRB.transforms"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image", "=", "Image", ".", "open", "(", "self", ".", "images", "[", "index", "]", ")", "\n", "image", "=", "self", ".", "transforms", "(", "image", ")", "\n", "label", "=", "self", ".", "labels", "[", "index", "]", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.CelebA_attr.__init__": [[123, 128], ["torchvision.datasets.CelebA", "torchvision.datasets.CelebA", "torchvision.datasets.CelebA", "torchvision.datasets.CelebA"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "split", ",", "transforms", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "torchvision", ".", "datasets", ".", "CelebA", "(", "root", "=", "opt", ".", "data_root", ",", "split", "=", "split", ",", "target_type", "=", "\"attr\"", ",", "download", "=", "True", ")", "\n", "self", ".", "list_attributes", "=", "[", "18", ",", "31", ",", "21", "]", "\n", "self", ".", "transforms", "=", "transforms", "\n", "self", ".", "split", "=", "split", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.CelebA_attr._convert_attributes": [[129, 131], ["None"], "methods", ["None"], ["", "def", "_convert_attributes", "(", "self", ",", "bool_attributes", ")", ":", "\n", "        ", "return", "(", "bool_attributes", "[", "0", "]", "<<", "2", ")", "+", "(", "bool_attributes", "[", "1", "]", "<<", "1", ")", "+", "(", "bool_attributes", "[", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.CelebA_attr.__len__": [[132, 134], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.CelebA_attr.__getitem__": [[135, 140], ["dataloader.CelebA_attr.transforms", "dataloader.CelebA_attr._convert_attributes"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.CelebA_attr._convert_attributes"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "input", ",", "target", "=", "self", ".", "dataset", "[", "index", "]", "\n", "input", "=", "self", ".", "transforms", "(", "input", ")", "\n", "target", "=", "self", ".", "_convert_attributes", "(", "target", "[", "self", ".", "list_attributes", "]", ")", "\n", "return", "(", "input", ",", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.get_transform": [[36, 56], ["transforms_list.append", "transforms_list.append", "torchvision.Compose", "torchvision.Resize", "torchvision.ToTensor", "transforms_list.append", "transforms_list.append", "transforms_list.append", "torchvision.Normalize", "transforms_list.append", "torchvision.RandomCrop", "torchvision.RandomRotation", "transforms_list.append", "torchvision.Normalize", "Exception", "torchvision.RandomHorizontalFlip"], "function", ["None"], ["", "", "", "def", "get_transform", "(", "opt", ",", "train", "=", "True", ",", "pretensor_transform", "=", "False", ")", ":", "\n", "    ", "transforms_list", "=", "[", "]", "\n", "transforms_list", ".", "append", "(", "transforms", ".", "Resize", "(", "(", "opt", ".", "input_height", ",", "opt", ".", "input_width", ")", ")", ")", "\n", "if", "pretensor_transform", ":", "\n", "        ", "if", "train", ":", "\n", "            ", "transforms_list", ".", "append", "(", "transforms", ".", "RandomCrop", "(", "(", "opt", ".", "input_height", ",", "opt", ".", "input_width", ")", ",", "padding", "=", "opt", ".", "random_crop", ")", ")", "\n", "transforms_list", ".", "append", "(", "transforms", ".", "RandomRotation", "(", "opt", ".", "random_rotation", ")", ")", "\n", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "                ", "transforms_list", ".", "append", "(", "transforms", ".", "RandomHorizontalFlip", "(", "p", "=", "0.5", ")", ")", "\n", "\n", "", "", "", "transforms_list", ".", "append", "(", "transforms", ".", "ToTensor", "(", ")", ")", "\n", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "transforms_list", ".", "append", "(", "transforms", ".", "Normalize", "(", "[", "0.4914", ",", "0.4822", ",", "0.4465", "]", ",", "[", "0.247", ",", "0.243", ",", "0.261", "]", ")", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "transforms_list", ".", "append", "(", "transforms", ".", "Normalize", "(", "[", "0.5", "]", ",", "[", "0.5", "]", ")", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", "or", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "        ", "pass", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid Dataset\"", ")", "\n", "", "return", "transforms", ".", "Compose", "(", "transforms_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.get_dataloader": [[142, 160], ["dataloader.get_transform", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "dataloader.GTSRB", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "dataloader.CelebA_attr", "Exception"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.get_transform"], ["", "", "def", "get_dataloader", "(", "opt", ",", "train", "=", "True", ",", "pretensor_transform", "=", "False", ")", ":", "\n", "    ", "transform", "=", "get_transform", "(", "opt", ",", "train", ",", "pretensor_transform", ")", "\n", "if", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "dataset", "=", "GTSRB", "(", "opt", ",", "train", ",", "transform", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "dataset", "=", "torchvision", ".", "datasets", ".", "MNIST", "(", "opt", ".", "data_root", ",", "train", ",", "transform", ",", "download", "=", "True", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "dataset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "opt", ".", "data_root", ",", "train", ",", "transform", ",", "download", "=", "True", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "        ", "if", "train", ":", "\n", "            ", "split", "=", "\"train\"", "\n", "", "else", ":", "\n", "            ", "split", "=", "\"test\"", "\n", "", "dataset", "=", "CelebA_attr", "(", "opt", ",", "split", ",", "transform", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid dataset\"", ")", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "opt", ".", "bs", ",", "num_workers", "=", "opt", ".", "num_workers", ",", "shuffle", "=", "True", ")", "\n", "return", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.get_dataset": [[162, 186], ["dataloader.GTSRB", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.Compose", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "dataloader.ToNumpy", "dataloader.CelebA_attr", "Exception", "torchvision.Resize", "dataloader.ToNumpy", "dataloader.ToNumpy", "torchvision.Compose", "torchvision.Resize", "dataloader.ToNumpy"], "function", ["None"], ["", "def", "get_dataset", "(", "opt", ",", "train", "=", "True", ")", ":", "\n", "    ", "if", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "dataset", "=", "GTSRB", "(", "\n", "opt", ",", "\n", "train", ",", "\n", "transforms", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "opt", ".", "input_height", ",", "opt", ".", "input_width", ")", ")", ",", "ToNumpy", "(", ")", "]", ")", ",", "\n", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "dataset", "=", "torchvision", ".", "datasets", ".", "MNIST", "(", "opt", ".", "data_root", ",", "train", ",", "transform", "=", "ToNumpy", "(", ")", ",", "download", "=", "True", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "dataset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "opt", ".", "data_root", ",", "train", ",", "transform", "=", "ToNumpy", "(", ")", ",", "download", "=", "True", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "        ", "if", "train", ":", "\n", "            ", "split", "=", "\"train\"", "\n", "", "else", ":", "\n", "            ", "split", "=", "\"test\"", "\n", "", "dataset", "=", "CelebA_attr", "(", "\n", "opt", ",", "\n", "split", ",", "\n", "transforms", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "opt", ".", "input_height", ",", "opt", ".", "input_width", ")", ")", ",", "ToNumpy", "(", ")", "]", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid dataset\"", ")", "\n", "", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.main": [[188, 190], ["None"], "function", ["None"], ["", "def", "main", "(", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.get_mean_and_std": [[16, 29], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "print", "torch.zeros.div_", "torch.zeros.div_", "range", "len", "len", "inputs[].mean", "inputs[].std"], "function", ["None"], ["def", "get_mean_and_std", "(", "dataset", ")", ":", "\n", "    ", "\"\"\"Compute the mean and std value of dataset.\"\"\"", "\n", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "mean", "=", "torch", ".", "zeros", "(", "3", ")", "\n", "std", "=", "torch", ".", "zeros", "(", "3", ")", "\n", "print", "(", "\"==> Computing mean and std..\"", ")", "\n", "for", "inputs", ",", "targets", "in", "dataloader", ":", "\n", "        ", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "            ", "mean", "[", "i", "]", "+=", "inputs", "[", ":", ",", "i", ",", ":", ",", ":", "]", ".", "mean", "(", ")", "\n", "std", "[", "i", "]", "+=", "inputs", "[", ":", ",", "i", ",", ":", ",", ":", "]", ".", "std", "(", ")", "\n", "", "", "mean", ".", "div_", "(", "len", "(", "dataset", ")", ")", "\n", "std", ".", "div_", "(", "len", "(", "dataset", ")", ")", "\n", "return", "mean", ",", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.init_params": [[31, 45], ["net.modules", "isinstance", "torch.kaiming_normal", "isinstance", "torch.constant", "torch.constant", "torch.constant", "isinstance", "torch.normal", "torch.constant"], "function", ["None"], ["", "def", "init_params", "(", "net", ")", ":", "\n", "    ", "\"\"\"Init layer parameters.\"\"\"", "\n", "for", "m", "in", "net", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "init", ".", "kaiming_normal", "(", "m", ".", "weight", ",", "mode", "=", "\"fan_out\"", ")", "\n", "if", "m", ".", "bias", ":", "\n", "                ", "init", ".", "constant", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "            ", "init", ".", "constant", "(", "m", ".", "weight", ",", "1", ")", "\n", "init", ".", "constant", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "init", ".", "normal", "(", "m", ".", "weight", ",", "std", "=", "1e-3", ")", "\n", "if", "m", ".", "bias", ":", "\n", "                ", "init", ".", "constant", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.progress_bar": [[55, 95], ["int", "sys.stdout.write", "range", "sys.stdout.write", "range", "sys.stdout.write", "time.time", "sys.stdout.write", "range", "range", "sys.stdout.write", "sys.stdout.flush", "time.time", "int", "sys.stdout.write", "sys.stdout.write", "L.append", "sys.stdout.write", "sys.stdout.write", "sys.stdout.write", "sys.stdout.write", "len", "int", "int"], "function", ["None"], ["def", "progress_bar", "(", "current", ",", "total", ",", "msg", "=", "None", ")", ":", "\n", "    ", "global", "last_time", ",", "begin_time", "\n", "if", "current", "==", "0", ":", "\n", "        ", "begin_time", "=", "time", ".", "time", "(", ")", "# Reset for new bar.", "\n", "\n", "", "cur_len", "=", "int", "(", "TOTAL_BAR_LENGTH", "*", "current", "/", "total", ")", "\n", "rest_len", "=", "int", "(", "TOTAL_BAR_LENGTH", "-", "cur_len", ")", "-", "1", "\n", "\n", "sys", ".", "stdout", ".", "write", "(", "\" [\"", ")", "\n", "for", "i", "in", "range", "(", "cur_len", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "\"=\"", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "\">\"", ")", "\n", "for", "i", "in", "range", "(", "rest_len", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "\".\"", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "\"]\"", ")", "\n", "\n", "cur_time", "=", "time", ".", "time", "(", ")", "\n", "step_time", "=", "cur_time", "-", "last_time", "\n", "last_time", "=", "cur_time", "\n", "tot_time", "=", "cur_time", "-", "begin_time", "\n", "\n", "L", "=", "[", "]", "\n", "if", "msg", ":", "\n", "        ", "L", ".", "append", "(", "\" | \"", "+", "msg", ")", "\n", "\n", "", "msg", "=", "\"\"", ".", "join", "(", "L", ")", "\n", "sys", ".", "stdout", ".", "write", "(", "msg", ")", "\n", "for", "i", "in", "range", "(", "term_width", "-", "int", "(", "TOTAL_BAR_LENGTH", ")", "-", "len", "(", "msg", ")", "-", "3", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "\" \"", ")", "\n", "\n", "# Go back to the center of the bar.", "\n", "", "for", "i", "in", "range", "(", "term_width", "-", "int", "(", "TOTAL_BAR_LENGTH", "/", "2", ")", "+", "2", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "\"\\b\"", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "\" %d/%d \"", "%", "(", "current", "+", "1", ",", "total", ")", ")", "\n", "\n", "if", "current", "<", "total", "-", "1", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "\"\\r\"", ")", "\n", "", "else", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "\"\\n\"", ")", "\n", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.format_time": [[97, 128], ["int", "int", "int", "int", "int", "str", "str", "str", "str", "str"], "function", ["None"], ["", "def", "format_time", "(", "seconds", ")", ":", "\n", "    ", "days", "=", "int", "(", "seconds", "/", "3600", "/", "24", ")", "\n", "seconds", "=", "seconds", "-", "days", "*", "3600", "*", "24", "\n", "hours", "=", "int", "(", "seconds", "/", "3600", ")", "\n", "seconds", "=", "seconds", "-", "hours", "*", "3600", "\n", "minutes", "=", "int", "(", "seconds", "/", "60", ")", "\n", "seconds", "=", "seconds", "-", "minutes", "*", "60", "\n", "secondsf", "=", "int", "(", "seconds", ")", "\n", "seconds", "=", "seconds", "-", "secondsf", "\n", "millis", "=", "int", "(", "seconds", "*", "1000", ")", "\n", "\n", "f", "=", "\"\"", "\n", "i", "=", "1", "\n", "if", "days", ">", "0", ":", "\n", "        ", "f", "+=", "str", "(", "days", ")", "+", "\"D\"", "\n", "i", "+=", "1", "\n", "", "if", "hours", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "hours", ")", "+", "\"h\"", "\n", "i", "+=", "1", "\n", "", "if", "minutes", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "minutes", ")", "+", "\"m\"", "\n", "i", "+=", "1", "\n", "", "if", "secondsf", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "secondsf", ")", "+", "\"s\"", "\n", "i", "+=", "1", "\n", "", "if", "millis", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "millis", ")", "+", "\"ms\"", "\n", "i", "+=", "1", "\n", "", "if", "f", "==", "\"\"", ":", "\n", "        ", "f", "=", "\"0ms\"", "\n", "", "return", "f", "\n", "", ""]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.mobilenet.Block.__init__": [[14, 22], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "\n", "in_planes", ",", "in_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "groups", "=", "in_planes", ",", "bias", "=", "False", "\n", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.mobilenet.Block.forward": [[23, 27], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "mobilenet.Block.bn1", "mobilenet.Block.bn2", "mobilenet.Block.conv1", "mobilenet.Block.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.mobilenet.MobileNet.__init__": [[33, 39], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "mobilenet.MobileNet._make_layers", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.mobilenetv2.MobileNetV2._make_layers"], ["def", "__init__", "(", "self", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "MobileNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "layers", "=", "self", ".", "_make_layers", "(", "in_planes", "=", "32", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "1024", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.mobilenet.MobileNet._make_layers": [[40, 48], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "isinstance", "isinstance", "mobilenet.Block"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "in_planes", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "x", "in", "self", ".", "cfg", ":", "\n", "            ", "out_planes", "=", "x", "if", "isinstance", "(", "x", ",", "int", ")", "else", "x", "[", "0", "]", "\n", "stride", "=", "1", "if", "isinstance", "(", "x", ",", "int", ")", "else", "x", "[", "1", "]", "\n", "layers", ".", "append", "(", "Block", "(", "in_planes", ",", "out_planes", ",", "stride", ")", ")", "\n", "in_planes", "=", "out_planes", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.mobilenet.MobileNet.forward": [[49, 56], ["torch.relu", "torch.relu", "torch.relu", "mobilenet.MobileNet.layers", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "mobilenet.MobileNet.view", "mobilenet.MobileNet.linear", "mobilenet.MobileNet.bn1", "mobilenet.MobileNet.size", "mobilenet.MobileNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layers", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "2", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.vgg.VGG.__init__": [[15, 19], ["torch.Module.__init__", "vgg.VGG._make_layers", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.mobilenetv2.MobileNetV2._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "vgg_name", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "cfg", "[", "vgg_name", "]", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "512", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.vgg.VGG.forward": [[20, 25], ["vgg.VGG.features", "vgg.VGG.view", "vgg.VGG.classifier", "vgg.VGG.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.vgg.VGG._make_layers": [[26, 41], ["torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "x", "in", "cfg", ":", "\n", "            ", "if", "x", "==", "\"M\"", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "x", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "x", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "]", "\n", "in_channels", "=", "x", "\n", "", "", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.vgg.test": [[43, 48], ["vgg.VGG", "torch.randn", "torch.randn", "VGG.", "print", "net.size"], "function", ["None"], ["", "", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "VGG", "(", "\"VGG11\"", ")", "\n", "x", "=", "torch", ".", "randn", "(", "2", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "x", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.efficientnet.Block.__init__": [[19, 55], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "max", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "int", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", ",", "expand_ratio", "=", "1", ",", "se_ratio", "=", "0.0", ",", "drop_rate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "drop_rate", "=", "drop_rate", "\n", "\n", "# Expansion", "\n", "planes", "=", "expand_ratio", "*", "in_planes", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "# Depthwise conv", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "\n", "planes", ",", "\n", "planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "\n", "groups", "=", "planes", ",", "\n", "bias", "=", "False", ",", "\n", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "# SE layers", "\n", "se_planes", "=", "max", "(", "1", ",", "int", "(", "planes", "*", "se_ratio", ")", ")", "\n", "self", ".", "se1", "=", "nn", ".", "Conv2d", "(", "planes", ",", "se_planes", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "se2", "=", "nn", ".", "Conv2d", "(", "se_planes", ",", "planes", ",", "kernel_size", "=", "1", ")", "\n", "\n", "# Output", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "==", "1", "and", "in_planes", "!=", "out_planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.efficientnet.Block.forward": [[57, 72], ["efficientnet.swish", "efficientnet.swish", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "efficientnet.swish", "efficientnet.Block.se2().sigmoid", "efficientnet.Block.bn3", "efficientnet.Block.bn1", "efficientnet.Block.bn2", "torch.dropout2d.size", "efficientnet.Block.se1", "efficientnet.Block.conv3", "torch.dropout2d", "torch.dropout2d", "torch.dropout2d", "efficientnet.Block.shortcut", "efficientnet.Block.conv1", "efficientnet.Block.conv2", "efficientnet.Block.se2"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.efficientnet.swish", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.efficientnet.swish", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.efficientnet.swish"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "swish", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "swish", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "# Squeeze-Excitation", "\n", "w", "=", "F", ".", "avg_pool2d", "(", "out", ",", "out", ".", "size", "(", "2", ")", ")", "\n", "w", "=", "swish", "(", "self", ".", "se1", "(", "w", ")", ")", "\n", "w", "=", "self", ".", "se2", "(", "w", ")", ".", "sigmoid", "(", ")", "\n", "out", "=", "out", "*", "w", "\n", "# Output", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "if", "self", ".", "drop_rate", ">", "0", ":", "\n", "            ", "out", "=", "F", ".", "dropout2d", "(", "out", ",", "self", ".", "drop_rate", ")", "\n", "", "shortcut", "=", "self", ".", "shortcut", "(", "x", ")", "if", "self", ".", "stride", "==", "1", "else", "out", "\n", "out", "=", "out", "+", "shortcut", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.efficientnet.EfficientNet.__init__": [[75, 82], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "efficientnet.EfficientNet._make_layers", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.mobilenetv2.MobileNetV2._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "EfficientNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "layers", "=", "self", ".", "_make_layers", "(", "in_planes", "=", "32", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "cfg", "[", "-", "1", "]", "[", "1", "]", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.efficientnet.EfficientNet._make_layers": [[83, 93], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "efficientnet.Block"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "in_planes", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "expansion", ",", "out_planes", ",", "num_blocks", ",", "kernel_size", ",", "stride", "in", "self", ".", "cfg", ":", "\n", "            ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "for", "stride", "in", "strides", ":", "\n", "                ", "layers", ".", "append", "(", "\n", "Block", "(", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", ",", "expansion", ",", "se_ratio", "=", "0.25", ",", "drop_rate", "=", "0.2", ")", "\n", ")", "\n", "in_planes", "=", "out_planes", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.efficientnet.EfficientNet.forward": [[94, 101], ["efficientnet.swish", "efficientnet.EfficientNet.layers", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "efficientnet.EfficientNet.view", "efficientnet.EfficientNet.linear", "efficientnet.EfficientNet.bn1", "efficientnet.EfficientNet.size", "efficientnet.EfficientNet.conv1"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.efficientnet.swish"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "swish", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layers", "(", "out", ")", "\n", "out", "=", "F", ".", "adaptive_avg_pool2d", "(", "out", ",", "1", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.efficientnet.swish": [[12, 14], ["x.sigmoid"], "function", ["None"], ["def", "swish", "(", "x", ")", ":", "\n", "    ", "return", "x", "*", "x", ".", "sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.efficientnet.EfficientNetB0": [[103, 115], ["efficientnet.EfficientNet"], "function", ["None"], ["", "", "def", "EfficientNetB0", "(", ")", ":", "\n", "# (expansion, out_planes, num_blocks, kernel_size, stride)", "\n", "    ", "cfg", "=", "[", "\n", "(", "1", ",", "16", ",", "1", ",", "3", ",", "1", ")", ",", "\n", "(", "6", ",", "24", ",", "2", ",", "3", ",", "2", ")", ",", "\n", "(", "6", ",", "40", ",", "2", ",", "5", ",", "2", ")", ",", "\n", "(", "6", ",", "80", ",", "3", ",", "3", ",", "2", ")", ",", "\n", "(", "6", ",", "112", ",", "3", ",", "5", ",", "1", ")", ",", "\n", "(", "6", ",", "192", ",", "4", ",", "5", ",", "2", ")", ",", "\n", "(", "6", ",", "320", ",", "1", ",", "3", ",", "1", ")", ",", "\n", "]", "\n", "return", "EfficientNet", "(", "cfg", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.mobilenetv2.Block.__init__": [[14, 31], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "expansion", ",", "stride", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "planes", "=", "expansion", "*", "in_planes", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "groups", "=", "planes", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "==", "1", "and", "in_planes", "!=", "out_planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.mobilenetv2.Block.forward": [[33, 39], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "mobilenetv2.Block.bn3", "mobilenetv2.Block.bn1", "mobilenetv2.Block.bn2", "mobilenetv2.Block.conv3", "mobilenetv2.Block.conv1", "mobilenetv2.Block.conv2", "mobilenetv2.Block.shortcut"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "=", "out", "+", "self", ".", "shortcut", "(", "x", ")", "if", "self", ".", "stride", "==", "1", "else", "out", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.mobilenetv2.MobileNetV2.__init__": [[53, 62], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "mobilenetv2.MobileNetV2._make_layers", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.mobilenetv2.MobileNetV2._make_layers"], ["def", "__init__", "(", "self", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "MobileNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# NOTE: change conv1 stride 2 -> 1 for CIFAR10", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "layers", "=", "self", ".", "_make_layers", "(", "in_planes", "=", "32", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "320", ",", "1280", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "1280", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "1280", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.mobilenetv2.MobileNetV2._make_layers": [[63, 71], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "mobilenetv2.Block"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "in_planes", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "expansion", ",", "out_planes", ",", "num_blocks", ",", "stride", "in", "self", ".", "cfg", ":", "\n", "            ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "for", "stride", "in", "strides", ":", "\n", "                ", "layers", ".", "append", "(", "Block", "(", "in_planes", ",", "out_planes", ",", "expansion", ",", "stride", ")", ")", "\n", "in_planes", "=", "out_planes", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.mobilenetv2.MobileNetV2.forward": [[72, 81], ["torch.relu", "torch.relu", "torch.relu", "mobilenetv2.MobileNetV2.layers", "torch.relu", "torch.relu", "torch.relu", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "mobilenetv2.MobileNetV2.view", "mobilenetv2.MobileNetV2.linear", "mobilenetv2.MobileNetV2.bn1", "mobilenetv2.MobileNetV2.bn2", "mobilenetv2.MobileNetV2.size", "mobilenetv2.MobileNetV2.conv1", "mobilenetv2.MobileNetV2.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layers", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "# NOTE: change pooling kernel_size 7 -> 4 for CIFAR10", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.SepConv.__init__": [[13, 19], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", ")", ":", "\n", "        ", "super", "(", "SepConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "\n", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "bias", "=", "False", ",", "groups", "=", "in_planes", "\n", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.SepConv.forward": [[20, 22], ["pnasnet.SepConv.bn1", "pnasnet.SepConv.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.CellA.__init__": [[25, 32], ["torch.Module.__init__", "pnasnet.SepConv", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "CellA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "sep_conv1", "=", "SepConv", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "7", ",", "stride", "=", "stride", ")", "\n", "if", "stride", "==", "2", ":", "\n", "            ", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.CellA.forward": [[33, 39], ["pnasnet.CellA.sep_conv1", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.relu", "pnasnet.CellA.bn1", "pnasnet.CellA.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y1", "=", "self", ".", "sep_conv1", "(", "x", ")", "\n", "y2", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "1", ")", "\n", "if", "self", ".", "stride", "==", "2", ":", "\n", "            ", "y2", "=", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "y2", ")", ")", "\n", "", "return", "F", ".", "relu", "(", "y1", "+", "y2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.CellB.__init__": [[42, 56], ["torch.Module.__init__", "pnasnet.SepConv", "pnasnet.SepConv", "pnasnet.SepConv", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "CellB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "# Left branch", "\n", "self", ".", "sep_conv1", "=", "SepConv", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "7", ",", "stride", "=", "stride", ")", "\n", "self", ".", "sep_conv2", "=", "SepConv", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ")", "\n", "# Right branch", "\n", "self", ".", "sep_conv3", "=", "SepConv", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "5", ",", "stride", "=", "stride", ")", "\n", "if", "stride", "==", "2", ":", "\n", "            ", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "# Reduce channels", "\n", "", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "2", "*", "out_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.CellB.forward": [[57, 71], ["pnasnet.CellB.sep_conv1", "pnasnet.CellB.sep_conv2", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "pnasnet.CellB.sep_conv3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "pnasnet.CellB.bn1", "pnasnet.CellB.bn2", "pnasnet.CellB.conv1", "pnasnet.CellB.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# Left branch", "\n", "        ", "y1", "=", "self", ".", "sep_conv1", "(", "x", ")", "\n", "y2", "=", "self", ".", "sep_conv2", "(", "x", ")", "\n", "# Right branch", "\n", "y3", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "1", ")", "\n", "if", "self", ".", "stride", "==", "2", ":", "\n", "            ", "y3", "=", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "y3", ")", ")", "\n", "", "y4", "=", "self", ".", "sep_conv3", "(", "x", ")", "\n", "# Concat & reduce channels", "\n", "b1", "=", "F", ".", "relu", "(", "y1", "+", "y2", ")", "\n", "b2", "=", "F", ".", "relu", "(", "y3", "+", "y4", ")", "\n", "y", "=", "torch", ".", "cat", "(", "[", "b1", ",", "b2", "]", ",", "1", ")", "\n", "return", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "y", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.PNASNet.__init__": [[74, 89], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "pnasnet.PNASNet._make_layer", "pnasnet.PNASNet._downsample", "pnasnet.PNASNet._make_layer", "pnasnet.PNASNet._downsample", "pnasnet.PNASNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.PNASNet._downsample", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.PNASNet._downsample", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "cell_type", ",", "num_cells", ",", "num_planes", ")", ":", "\n", "        ", "super", "(", "PNASNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "num_planes", "\n", "self", ".", "cell_type", "=", "cell_type", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "num_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "num_planes", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "num_planes", ",", "num_cells", "=", "6", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_downsample", "(", "num_planes", "*", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "num_planes", "*", "2", ",", "num_cells", "=", "6", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_downsample", "(", "num_planes", "*", "4", ")", "\n", "self", ".", "layer5", "=", "self", ".", "_make_layer", "(", "num_planes", "*", "4", ",", "num_cells", "=", "6", ")", "\n", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "num_planes", "*", "4", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.PNASNet._make_layer": [[90, 96], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "pnasnet.PNASNet.cell_type"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "planes", ",", "num_cells", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_cells", ")", ":", "\n", "            ", "layers", ".", "append", "(", "self", ".", "cell_type", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.PNASNet._downsample": [[97, 101], ["pnasnet.PNASNet.cell_type"], "methods", ["None"], ["", "def", "_downsample", "(", "self", ",", "planes", ")", ":", "\n", "        ", "layer", "=", "self", ".", "cell_type", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", "=", "2", ")", "\n", "self", ".", "in_planes", "=", "planes", "\n", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.PNASNet.forward": [[102, 112], ["torch.relu", "torch.relu", "torch.relu", "pnasnet.PNASNet.layer1", "pnasnet.PNASNet.layer2", "pnasnet.PNASNet.layer3", "pnasnet.PNASNet.layer4", "pnasnet.PNASNet.layer5", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "pnasnet.PNASNet.linear", "pnasnet.PNASNet.bn1", "pnasnet.PNASNet.view", "pnasnet.PNASNet.conv1", "pnasnet.PNASNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "self", ".", "layer5", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "8", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.PNASNetA": [[114, 116], ["pnasnet.PNASNet"], "function", ["None"], ["", "", "def", "PNASNetA", "(", ")", ":", "\n", "    ", "return", "PNASNet", "(", "CellA", ",", "num_cells", "=", "6", ",", "num_planes", "=", "44", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.PNASNetB": [[118, 120], ["pnasnet.PNASNet"], "function", ["None"], ["", "def", "PNASNetB", "(", ")", ":", "\n", "    ", "return", "PNASNet", "(", "CellB", ",", "num_cells", "=", "6", ",", "num_planes", "=", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.test": [[122, 127], ["pnasnet.PNASNetB", "torch.randn", "torch.randn", "torch.randn", "PNASNetB.", "print"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.pnasnet.PNASNetB"], ["", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "PNASNetB", "(", ")", "\n", "x", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.lenet.LeNet.__init__": [[7, 14], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "LeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "6", ",", "5", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "6", ",", "16", ",", "5", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "16", "*", "5", "*", "5", ",", "120", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "120", ",", "84", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "84", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.lenet.LeNet.forward": [[15, 25], ["torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "lenet.LeNet.view", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "lenet.LeNet.fc3", "lenet.LeNet.conv1", "lenet.LeNet.conv2", "lenet.LeNet.size", "lenet.LeNet.fc1", "lenet.LeNet.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "out", "=", "F", ".", "max_pool2d", "(", "out", ",", "2", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "max_pool2d", "(", "out", ",", "2", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "fc2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "fc3", "(", "out", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.dpn.Bottleneck.__init__": [[8, 25], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "last_planes", ",", "in_planes", ",", "out_planes", ",", "dense_depth", ",", "stride", ",", "first_layer", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "out_planes", "=", "out_planes", "\n", "self", ".", "dense_depth", "=", "dense_depth", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "last_planes", ",", "in_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "in_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "groups", "=", "32", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", "+", "dense_depth", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", "+", "dense_depth", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "first_layer", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "last_planes", ",", "out_planes", "+", "dense_depth", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", "+", "dense_depth", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.dpn.Bottleneck.forward": [[27, 36], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "dpn.Bottleneck.bn3", "dpn.Bottleneck.shortcut", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "dpn.Bottleneck.bn1", "dpn.Bottleneck.bn2", "dpn.Bottleneck.conv3", "dpn.Bottleneck.conv1", "dpn.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "x", "=", "self", ".", "shortcut", "(", "x", ")", "\n", "d", "=", "self", ".", "out_planes", "\n", "out", "=", "torch", ".", "cat", "(", "[", "x", "[", ":", ",", ":", "d", ",", ":", ",", ":", "]", "+", "out", "[", ":", ",", ":", "d", ",", ":", ",", ":", "]", ",", "x", "[", ":", ",", "d", ":", ",", ":", ",", ":", "]", ",", "out", "[", ":", ",", "d", ":", ",", ":", ",", ":", "]", "]", ",", "1", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.dpn.DPN.__init__": [[39, 52], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "dpn.DPN._make_layer", "dpn.DPN._make_layer", "dpn.DPN._make_layer", "dpn.DPN._make_layer", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "DPN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "in_planes", ",", "out_planes", "=", "cfg", "[", "\"in_planes\"", "]", ",", "cfg", "[", "\"out_planes\"", "]", "\n", "num_blocks", ",", "dense_depth", "=", "cfg", "[", "\"num_blocks\"", "]", ",", "cfg", "[", "\"dense_depth\"", "]", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "last_planes", "=", "64", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "in_planes", "[", "0", "]", ",", "out_planes", "[", "0", "]", ",", "num_blocks", "[", "0", "]", ",", "dense_depth", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "in_planes", "[", "1", "]", ",", "out_planes", "[", "1", "]", ",", "num_blocks", "[", "1", "]", ",", "dense_depth", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "in_planes", "[", "2", "]", ",", "out_planes", "[", "2", "]", ",", "num_blocks", "[", "2", "]", ",", "dense_depth", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "in_planes", "[", "3", "]", ",", "out_planes", "[", "3", "]", ",", "num_blocks", "[", "3", "]", ",", "dense_depth", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "out_planes", "[", "3", "]", "+", "(", "num_blocks", "[", "3", "]", "+", "1", ")", "*", "dense_depth", "[", "3", "]", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.dpn.DPN._make_layer": [[53, 60], ["enumerate", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "dpn.Bottleneck"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "in_planes", ",", "out_planes", ",", "num_blocks", ",", "dense_depth", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "i", ",", "stride", "in", "enumerate", "(", "strides", ")", ":", "\n", "            ", "layers", ".", "append", "(", "Bottleneck", "(", "self", ".", "last_planes", ",", "in_planes", ",", "out_planes", ",", "dense_depth", ",", "stride", ",", "i", "==", "0", ")", ")", "\n", "self", ".", "last_planes", "=", "out_planes", "+", "(", "i", "+", "2", ")", "*", "dense_depth", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.dpn.DPN.forward": [[61, 71], ["torch.relu", "torch.relu", "torch.relu", "dpn.DPN.layer1", "dpn.DPN.layer2", "dpn.DPN.layer3", "dpn.DPN.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "dpn.DPN.view", "dpn.DPN.linear", "dpn.DPN.bn1", "dpn.DPN.size", "dpn.DPN.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.dpn.DPN26": [[73, 81], ["dpn.DPN"], "function", ["None"], ["", "", "def", "DPN26", "(", ")", ":", "\n", "    ", "cfg", "=", "{", "\n", "\"in_planes\"", ":", "(", "96", ",", "192", ",", "384", ",", "768", ")", ",", "\n", "\"out_planes\"", ":", "(", "256", ",", "512", ",", "1024", ",", "2048", ")", ",", "\n", "\"num_blocks\"", ":", "(", "2", ",", "2", ",", "2", ",", "2", ")", ",", "\n", "\"dense_depth\"", ":", "(", "16", ",", "32", ",", "24", ",", "128", ")", ",", "\n", "}", "\n", "return", "DPN", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.dpn.DPN92": [[83, 91], ["dpn.DPN"], "function", ["None"], ["", "def", "DPN92", "(", ")", ":", "\n", "    ", "cfg", "=", "{", "\n", "\"in_planes\"", ":", "(", "96", ",", "192", ",", "384", ",", "768", ")", ",", "\n", "\"out_planes\"", ":", "(", "256", ",", "512", ",", "1024", ",", "2048", ")", ",", "\n", "\"num_blocks\"", ":", "(", "3", ",", "4", ",", "20", ",", "3", ")", ",", "\n", "\"dense_depth\"", ":", "(", "16", ",", "32", ",", "24", ",", "128", ")", ",", "\n", "}", "\n", "return", "DPN", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.dpn.test": [[93, 98], ["dpn.DPN92", "torch.randn", "torch.randn", "torch.randn", "DPN92.", "print"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.dpn.DPN92"], ["", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "DPN92", "(", ")", "\n", "x", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenet.ShuffleBlock.__init__": [[11, 14], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "groups", ")", ":", "\n", "        ", "super", "(", "ShuffleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenet.ShuffleBlock.forward": [[15, 20], ["x.size", "x.view().permute().reshape", "x.view().permute", "x.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Channel shuffle: [N,C,H,W] -> [N,g,C/g,H,W] -> [N,C/g,g,H,w] -> [N,C,H,W]\"\"\"", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "g", "=", "self", ".", "groups", "\n", "return", "x", ".", "view", "(", "N", ",", "g", ",", "C", "//", "g", ",", "H", ",", "W", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ".", "reshape", "(", "N", ",", "C", ",", "H", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenet.Bottleneck.__init__": [[23, 42], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "shufflenet.ShuffleBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "stride", ",", "groups", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "mid_planes", "=", "out_planes", "/", "4", "\n", "g", "=", "1", "if", "in_planes", "==", "24", "else", "groups", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "mid_planes", ",", "kernel_size", "=", "1", ",", "groups", "=", "g", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "mid_planes", ")", "\n", "self", ".", "shuffle1", "=", "ShuffleBlock", "(", "groups", "=", "g", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "\n", "mid_planes", ",", "mid_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "groups", "=", "mid_planes", ",", "bias", "=", "False", "\n", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "mid_planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "mid_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "groups", "=", "groups", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "==", "2", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenet.Bottleneck.forward": [[43, 51], ["torch.relu", "torch.relu", "torch.relu", "shufflenet.Bottleneck.shuffle1", "torch.relu", "torch.relu", "torch.relu", "shufflenet.Bottleneck.bn3", "shufflenet.Bottleneck.shortcut", "shufflenet.Bottleneck.bn1", "shufflenet.Bottleneck.bn2", "shufflenet.Bottleneck.conv3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "shufflenet.Bottleneck.conv1", "shufflenet.Bottleneck.conv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "shuffle1", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "res", "=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "torch", ".", "cat", "(", "[", "out", ",", "res", "]", ",", "1", ")", ")", "if", "self", ".", "stride", "==", "2", "else", "F", ".", "relu", "(", "out", "+", "res", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenet.ShuffleNet.__init__": [[54, 67], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "shufflenet.ShuffleNet._make_layer", "shufflenet.ShuffleNet._make_layer", "shufflenet.ShuffleNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "ShuffleNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "out_planes", "=", "cfg", "[", "\"out_planes\"", "]", "\n", "num_blocks", "=", "cfg", "[", "\"num_blocks\"", "]", "\n", "groups", "=", "cfg", "[", "\"groups\"", "]", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "24", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "24", ")", "\n", "self", ".", "in_planes", "=", "24", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "out_planes", "[", "0", "]", ",", "num_blocks", "[", "0", "]", ",", "groups", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "out_planes", "[", "1", "]", ",", "num_blocks", "[", "1", "]", ",", "groups", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "out_planes", "[", "2", "]", ",", "num_blocks", "[", "2", "]", ",", "groups", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "out_planes", "[", "2", "]", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenet.ShuffleNet._make_layer": [[68, 76], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "shufflenet.Bottleneck"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "out_planes", ",", "num_blocks", ",", "groups", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_blocks", ")", ":", "\n", "            ", "stride", "=", "2", "if", "i", "==", "0", "else", "1", "\n", "cat_planes", "=", "self", ".", "in_planes", "if", "i", "==", "0", "else", "0", "\n", "layers", ".", "append", "(", "Bottleneck", "(", "self", ".", "in_planes", ",", "out_planes", "-", "cat_planes", ",", "stride", "=", "stride", ",", "groups", "=", "groups", ")", ")", "\n", "self", ".", "in_planes", "=", "out_planes", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenet.ShuffleNet.forward": [[77, 86], ["torch.relu", "torch.relu", "torch.relu", "shufflenet.ShuffleNet.layer1", "shufflenet.ShuffleNet.layer2", "shufflenet.ShuffleNet.layer3", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "shufflenet.ShuffleNet.view", "shufflenet.ShuffleNet.linear", "shufflenet.ShuffleNet.bn1", "shufflenet.ShuffleNet.size", "shufflenet.ShuffleNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenet.ShuffleNetG2": [[88, 91], ["shufflenet.ShuffleNet"], "function", ["None"], ["", "", "def", "ShuffleNetG2", "(", ")", ":", "\n", "    ", "cfg", "=", "{", "\"out_planes\"", ":", "[", "200", ",", "400", ",", "800", "]", ",", "\"num_blocks\"", ":", "[", "4", ",", "8", ",", "4", "]", ",", "\"groups\"", ":", "2", "}", "\n", "return", "ShuffleNet", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenet.ShuffleNetG3": [[93, 96], ["shufflenet.ShuffleNet"], "function", ["None"], ["", "def", "ShuffleNetG3", "(", ")", ":", "\n", "    ", "cfg", "=", "{", "\"out_planes\"", ":", "[", "240", ",", "480", ",", "960", "]", ",", "\"num_blocks\"", ":", "[", "4", ",", "8", ",", "4", "]", ",", "\"groups\"", ":", "3", "}", "\n", "return", "ShuffleNet", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenet.test": [[98, 103], ["shufflenet.ShuffleNetG2", "torch.randn", "torch.randn", "torch.randn", "ShuffleNetG2.", "print"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenet.ShuffleNetG2"], ["", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "ShuffleNetG2", "(", ")", "\n", "x", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenetv2.ShuffleBlock.__init__": [[11, 14], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "groups", "=", "2", ")", ":", "\n", "        ", "super", "(", "ShuffleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenetv2.ShuffleBlock.forward": [[15, 20], ["x.size", "x.view().permute().reshape", "x.view().permute", "x.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Channel shuffle: [N,C,H,W] -> [N,g,C/g,H,W] -> [N,C/g,g,H,w] -> [N,C,H,W]\"\"\"", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "g", "=", "self", ".", "groups", "\n", "return", "x", ".", "view", "(", "N", ",", "g", ",", "C", "//", "g", ",", "H", ",", "W", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ".", "reshape", "(", "N", ",", "C", ",", "H", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenetv2.SplitBlock.__init__": [[23, 26], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ratio", ")", ":", "\n", "        ", "super", "(", "SplitBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ratio", "=", "ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenetv2.SplitBlock.forward": [[27, 30], ["int", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "c", "=", "int", "(", "x", ".", "size", "(", "1", ")", "*", "self", ".", "ratio", ")", "\n", "return", "x", "[", ":", ",", ":", "c", ",", ":", ",", ":", "]", ",", "x", "[", ":", ",", "c", ":", ",", ":", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenetv2.BasicBlock.__init__": [[33, 46], ["torch.Module.__init__", "shufflenetv2.SplitBlock", "int", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "shufflenetv2.ShuffleBlock"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "split_ratio", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "split", "=", "SplitBlock", "(", "split_ratio", ")", "\n", "in_channels", "=", "int", "(", "in_channels", "*", "split_ratio", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "groups", "=", "in_channels", ",", "bias", "=", "False", "\n", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", "\n", "self", ".", "shuffle", "=", "ShuffleBlock", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenetv2.BasicBlock.forward": [[47, 55], ["shufflenetv2.BasicBlock.split", "torch.relu", "torch.relu", "torch.relu", "shufflenetv2.BasicBlock.bn2", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "shufflenetv2.BasicBlock.shuffle", "shufflenetv2.BasicBlock.bn1", "shufflenetv2.BasicBlock.conv2", "shufflenetv2.BasicBlock.bn3", "shufflenetv2.BasicBlock.conv1", "shufflenetv2.BasicBlock.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", ",", "x2", "=", "self", ".", "split", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x2", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "x1", ",", "out", "]", ",", "1", ")", "\n", "out", "=", "self", ".", "shuffle", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenetv2.DownBlock.__init__": [[58, 79], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "shufflenetv2.ShuffleBlock"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "DownBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "mid_channels", "=", "out_channels", "//", "2", "\n", "# left", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "groups", "=", "in_channels", ",", "bias", "=", "False", "\n", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "mid_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "mid_channels", ")", "\n", "# right", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "mid_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "mid_channels", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "\n", "mid_channels", ",", "mid_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "groups", "=", "mid_channels", ",", "bias", "=", "False", "\n", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "mid_channels", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2d", "(", "mid_channels", ",", "mid_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm2d", "(", "mid_channels", ")", "\n", "\n", "self", ".", "shuffle", "=", "ShuffleBlock", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenetv2.DownBlock.forward": [[80, 92], ["shufflenetv2.DownBlock.bn1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "shufflenetv2.DownBlock.bn4", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "shufflenetv2.DownBlock.shuffle", "shufflenetv2.DownBlock.conv1", "shufflenetv2.DownBlock.bn2", "shufflenetv2.DownBlock.bn3", "shufflenetv2.DownBlock.conv4", "shufflenetv2.DownBlock.bn5", "shufflenetv2.DownBlock.conv2", "shufflenetv2.DownBlock.conv3", "shufflenetv2.DownBlock.conv5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# left", "\n", "        ", "out1", "=", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out1", ")", ")", ")", "\n", "# right", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", ")", "\n", "out2", "=", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "out2", ")", ")", "\n", "out2", "=", "F", ".", "relu", "(", "self", ".", "bn5", "(", "self", ".", "conv5", "(", "out2", ")", ")", ")", "\n", "# concat", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out1", ",", "out2", "]", ",", "1", ")", "\n", "out", "=", "self", ".", "shuffle", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenetv2.ShuffleNetV2.__init__": [[95, 109], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "shufflenetv2.ShuffleNetV2._make_layer", "shufflenetv2.ShuffleNetV2._make_layer", "shufflenetv2.ShuffleNetV2._make_layer", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "net_size", ")", ":", "\n", "        ", "super", "(", "ShuffleNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "out_channels", "=", "configs", "[", "net_size", "]", "[", "\"out_channels\"", "]", "\n", "num_blocks", "=", "configs", "[", "net_size", "]", "[", "\"num_blocks\"", "]", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "24", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "24", ")", "\n", "self", ".", "in_channels", "=", "24", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "out_channels", "[", "0", "]", ",", "num_blocks", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "out_channels", "[", "1", "]", ",", "num_blocks", "[", "1", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "out_channels", "[", "2", "]", ",", "num_blocks", "[", "2", "]", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "out_channels", "[", "2", "]", ",", "out_channels", "[", "3", "]", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", "[", "3", "]", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "out_channels", "[", "3", "]", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenetv2.ShuffleNetV2._make_layer": [[110, 116], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "shufflenetv2.DownBlock", "layers.append", "shufflenetv2.BasicBlock"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "out_channels", ",", "num_blocks", ")", ":", "\n", "        ", "layers", "=", "[", "DownBlock", "(", "self", ".", "in_channels", ",", "out_channels", ")", "]", "\n", "for", "i", "in", "range", "(", "num_blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "BasicBlock", "(", "out_channels", ")", ")", "\n", "self", ".", "in_channels", "=", "out_channels", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenetv2.ShuffleNetV2.forward": [[117, 128], ["torch.relu", "torch.relu", "torch.relu", "shufflenetv2.ShuffleNetV2.layer1", "shufflenetv2.ShuffleNetV2.layer2", "shufflenetv2.ShuffleNetV2.layer3", "torch.relu", "torch.relu", "torch.relu", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "shufflenetv2.ShuffleNetV2.view", "shufflenetv2.ShuffleNetV2.linear", "shufflenetv2.ShuffleNetV2.bn1", "shufflenetv2.ShuffleNetV2.bn2", "shufflenetv2.ShuffleNetV2.size", "shufflenetv2.ShuffleNetV2.conv1", "shufflenetv2.ShuffleNetV2.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "# out = F.max_pool2d(out, 3, stride=2, padding=1)", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.shufflenetv2.test": [[138, 143], ["shufflenetv2.ShuffleNetV2", "torch.randn", "torch.randn", "torch.randn", "ShuffleNetV2.", "print"], "function", ["None"], ["def", "test", "(", ")", ":", "\n", "    ", "net", "=", "ShuffleNetV2", "(", "net_size", "=", "0.5", ")", "\n", "x", "=", "torch", ".", "randn", "(", "3", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "x", ")", "\n", "print", "(", "y", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.BasicBlock.__init__": [[17, 30], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "ind", "=", "None", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.BasicBlock.forward": [[32, 41], ["torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn2", "torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn1", "resnet.BasicBlock.conv2", "resnet.BasicBlock.shortcut", "resnet.BasicBlock.conv1", "resnet.BasicBlock.shortcut"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "if", "self", ".", "ind", "is", "not", "None", ":", "\n", "           ", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "[", ":", ",", "self", ".", "ind", ",", ":", ",", ":", "]", "\n", "", "else", ":", "\n", "           ", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.Bottleneck.__init__": [[46, 61], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "self", ".", "ind", "=", "None", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.Bottleneck.forward": [[63, 73], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck.bn3", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck.bn1", "resnet.Bottleneck.bn2", "resnet.Bottleneck.conv3", "resnet.Bottleneck.conv1", "resnet.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "if", "self", ".", "ind", "is", "not", "None", ":", "\n", "           ", "out", "+=", "x", "[", ":", ",", "self", ".", "ind", ",", ":", ",", ":", "]", "\n", "", "else", ":", "\n", "           ", "out", "+=", "x", "\n", "", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.ResNet.__init__": [[76, 87], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "8", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", "*", "4", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.ResNet._make_layer": [[88, 95], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.ResNet.forward": [[96, 106], ["torch.relu", "torch.relu", "torch.relu", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "resnet.ResNet.view", "resnet.ResNet.linear", "resnet.ResNet.bn1", "resnet.ResNet.size", "resnet.ResNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.ResNet18": [[108, 110], ["resnet.ResNet"], "function", ["None"], ["", "", "def", "ResNet18", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.ResNet34": [[111, 113], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet34", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.ResNet50": [[114, 116], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet50", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.ResNet101": [[117, 119], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet101", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.ResNet152": [[120, 122], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet152", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.test": [[124, 128], ["resnet.ResNet18", "ResNet18.", "print", "torch.randn", "torch.randn", "torch.randn", "net.size"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.ResNet18"], ["", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "ResNet18", "(", ")", "\n", "y", "=", "net", "(", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.senet.BasicBlock.__init__": [[11, 27], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", ")", "\n", "\n", "# SE layers", "\n", "", "self", ".", "fc1", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "//", "16", ",", "kernel_size", "=", "1", ")", "# Use nn.Conv2d instead of nn.Linear", "\n", "self", ".", "fc2", "=", "nn", ".", "Conv2d", "(", "planes", "//", "16", ",", "planes", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.senet.BasicBlock.forward": [[28, 42], ["torch.relu", "torch.relu", "torch.relu", "senet.BasicBlock.bn2", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.relu", "torch.relu", "torch.relu", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "senet.BasicBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "senet.BasicBlock.bn1", "senet.BasicBlock.conv2", "torch.relu.size", "senet.BasicBlock.fc1", "senet.BasicBlock.fc2", "senet.BasicBlock.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "\n", "# Squeeze", "\n", "w", "=", "F", ".", "avg_pool2d", "(", "out", ",", "out", ".", "size", "(", "2", ")", ")", "\n", "w", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "w", ")", ")", "\n", "w", "=", "F", ".", "sigmoid", "(", "self", ".", "fc2", "(", "w", ")", ")", "\n", "# Excitation", "\n", "out", "=", "out", "*", "w", "# New broadcasting feature from v0.2!", "\n", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.senet.PreActBlock.__init__": [[45, 58], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "PreActBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ")", "\n", "\n", "# SE layers", "\n", "", "self", ".", "fc1", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "//", "16", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Conv2d", "(", "planes", "//", "16", ",", "planes", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.senet.PreActBlock.forward": [[59, 74], ["torch.relu", "torch.relu", "torch.relu", "senet.PreActBlock.conv1", "senet.PreActBlock.conv2", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.relu", "torch.relu", "torch.relu", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "senet.PreActBlock.bn1", "hasattr", "senet.PreActBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "senet.PreActBlock.size", "senet.PreActBlock.fc1", "senet.PreActBlock.fc2", "senet.PreActBlock.bn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "shortcut", "=", "self", ".", "shortcut", "(", "out", ")", "if", "hasattr", "(", "self", ",", "\"shortcut\"", ")", "else", "x", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "\n", "# Squeeze", "\n", "w", "=", "F", ".", "avg_pool2d", "(", "out", ",", "out", ".", "size", "(", "2", ")", ")", "\n", "w", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "w", ")", ")", "\n", "w", "=", "F", ".", "sigmoid", "(", "self", ".", "fc2", "(", "w", ")", ")", "\n", "# Excitation", "\n", "out", "=", "out", "*", "w", "\n", "\n", "out", "+=", "shortcut", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.senet.SENet.__init__": [[77, 88], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "senet.SENet._make_layer", "senet.SENet._make_layer", "senet.SENet._make_layer", "senet.SENet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "SENet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.senet.SENet._make_layer": [[89, 96], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.senet.SENet.forward": [[97, 107], ["torch.relu", "torch.relu", "torch.relu", "senet.SENet.layer1", "senet.SENet.layer2", "senet.SENet.layer3", "senet.SENet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "senet.SENet.view", "senet.SENet.linear", "senet.SENet.bn1", "senet.SENet.size", "senet.SENet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.senet.SENet18": [[109, 111], ["senet.SENet"], "function", ["None"], ["", "", "def", "SENet18", "(", ")", ":", "\n", "    ", "return", "SENet", "(", "PreActBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.senet.test": [[113, 117], ["senet.SENet18", "SENet18.", "print", "torch.randn", "torch.randn", "torch.randn", "net.size"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.senet.SENet18"], ["", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "SENet18", "(", ")", "\n", "y", "=", "net", "(", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.Bottleneck.__init__": [[10, 16], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "growth_rate", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "4", "*", "growth_rate", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "4", "*", "growth_rate", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "4", "*", "growth_rate", ",", "growth_rate", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.Bottleneck.forward": [[17, 22], ["densenet.Bottleneck.conv1", "densenet.Bottleneck.conv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "densenet.Bottleneck.bn1", "densenet.Bottleneck.bn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out", ",", "x", "]", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.Transition.__init__": [[25, 29], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ")", ":", "\n", "        ", "super", "(", "Transition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.Transition.forward": [[30, 34], ["densenet.Transition.conv", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.relu", "torch.relu", "torch.relu", "densenet.Transition.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "F", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "2", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.DenseNet.__init__": [[37, 67], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "densenet.DenseNet._make_dense_layers", "int", "densenet.Transition", "densenet.DenseNet._make_dense_layers", "int", "densenet.Transition", "densenet.DenseNet._make_dense_layers", "int", "densenet.Transition", "densenet.DenseNet._make_dense_layers", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "math.floor", "math.floor", "math.floor"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.DenseNet._make_dense_layers", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.DenseNet._make_dense_layers", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.DenseNet._make_dense_layers", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.DenseNet._make_dense_layers"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "nblocks", ",", "growth_rate", "=", "12", ",", "reduction", "=", "0.5", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "DenseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "growth_rate", "=", "growth_rate", "\n", "\n", "num_planes", "=", "2", "*", "growth_rate", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "num_planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "dense1", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "0", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "0", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans1", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense2", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "1", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "1", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans2", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense3", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "2", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "2", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans3", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense4", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "3", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "3", "]", "*", "growth_rate", "\n", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "num_planes", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "num_planes", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.DenseNet._make_dense_layers": [[68, 74], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_dense_layers", "(", "self", ",", "block", ",", "in_planes", ",", "nblock", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nblock", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "in_planes", ",", "self", ".", "growth_rate", ")", ")", "\n", "in_planes", "+=", "self", ".", "growth_rate", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.DenseNet.forward": [[75, 85], ["densenet.DenseNet.conv1", "densenet.DenseNet.trans1", "densenet.DenseNet.trans2", "densenet.DenseNet.trans3", "densenet.DenseNet.dense4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "densenet.DenseNet.view", "densenet.DenseNet.linear", "densenet.DenseNet.dense1", "densenet.DenseNet.dense2", "densenet.DenseNet.dense3", "torch.relu", "torch.relu", "torch.relu", "densenet.DenseNet.size", "densenet.DenseNet.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "trans1", "(", "self", ".", "dense1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "trans2", "(", "self", ".", "dense2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "trans3", "(", "self", ".", "dense3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "dense4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "F", ".", "relu", "(", "self", ".", "bn", "(", "out", ")", ")", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.DenseNet121": [[87, 89], ["densenet.DenseNet"], "function", ["None"], ["", "", "def", "DenseNet121", "(", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "24", ",", "16", "]", ",", "growth_rate", "=", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.DenseNet169": [[91, 93], ["densenet.DenseNet"], "function", ["None"], ["", "def", "DenseNet169", "(", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "32", ",", "32", "]", ",", "growth_rate", "=", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.DenseNet201": [[95, 97], ["densenet.DenseNet"], "function", ["None"], ["", "def", "DenseNet201", "(", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "48", ",", "32", "]", ",", "growth_rate", "=", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.DenseNet161": [[99, 101], ["densenet.DenseNet"], "function", ["None"], ["", "def", "DenseNet161", "(", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "36", ",", "24", "]", ",", "growth_rate", "=", "48", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.densenet_cifar": [[103, 105], ["densenet.DenseNet"], "function", ["None"], ["", "def", "densenet_cifar", "(", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "24", ",", "16", "]", ",", "growth_rate", "=", "12", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.test": [[107, 112], ["densenet.densenet_cifar", "torch.randn", "torch.randn", "torch.randn", "densenet_cifar.", "print"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.densenet.densenet_cifar"], ["", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "densenet_cifar", "(", ")", "\n", "x", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnext.Block.__init__": [[15, 32], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "cardinality", "=", "32", ",", "bottleneck_width", "=", "4", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "group_width", "=", "cardinality", "*", "bottleneck_width", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "group_width", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "group_width", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "\n", "group_width", ",", "group_width", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "groups", "=", "cardinality", ",", "bias", "=", "False", "\n", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "group_width", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "group_width", ",", "self", ".", "expansion", "*", "group_width", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "group_width", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "group_width", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "group_width", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "group_width", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnext.Block.forward": [[34, 41], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnext.Block.bn3", "resnext.Block.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnext.Block.bn1", "resnext.Block.bn2", "resnext.Block.conv3", "resnext.Block.conv1", "resnext.Block.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnext.ResNeXt.__init__": [[44, 57], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnext.ResNeXt._make_layer", "resnext.ResNeXt._make_layer", "resnext.ResNeXt._make_layer", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "num_blocks", ",", "cardinality", ",", "bottleneck_width", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNeXt", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cardinality", "=", "cardinality", "\n", "self", ".", "bottleneck_width", "=", "bottleneck_width", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "0", "]", ",", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "1", "]", ",", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "2", "]", ",", "2", ")", "\n", "# self.layer4 = self._make_layer(num_blocks[3], 2)", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "cardinality", "*", "bottleneck_width", "*", "8", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnext.ResNeXt._make_layer": [[58, 67], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "resnext.Block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "Block", "(", "self", ".", "in_planes", ",", "self", ".", "cardinality", ",", "self", ".", "bottleneck_width", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "Block", ".", "expansion", "*", "self", ".", "cardinality", "*", "self", ".", "bottleneck_width", "\n", "# Increase bottleneck_width by 2 after each stage.", "\n", "", "self", ".", "bottleneck_width", "*=", "2", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnext.ResNeXt.forward": [[68, 78], ["torch.relu", "torch.relu", "torch.relu", "resnext.ResNeXt.layer1", "resnext.ResNeXt.layer2", "resnext.ResNeXt.layer3", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "resnext.ResNeXt.view", "resnext.ResNeXt.linear", "resnext.ResNeXt.bn1", "resnext.ResNeXt.size", "resnext.ResNeXt.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "# out = self.layer4(out)", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "8", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnext.ResNeXt29_2x64d": [[80, 82], ["resnext.ResNeXt"], "function", ["None"], ["", "", "def", "ResNeXt29_2x64d", "(", ")", ":", "\n", "    ", "return", "ResNeXt", "(", "num_blocks", "=", "[", "3", ",", "3", ",", "3", "]", ",", "cardinality", "=", "2", ",", "bottleneck_width", "=", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnext.ResNeXt29_4x64d": [[84, 86], ["resnext.ResNeXt"], "function", ["None"], ["", "def", "ResNeXt29_4x64d", "(", ")", ":", "\n", "    ", "return", "ResNeXt", "(", "num_blocks", "=", "[", "3", ",", "3", ",", "3", "]", ",", "cardinality", "=", "4", ",", "bottleneck_width", "=", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnext.ResNeXt29_8x64d": [[88, 90], ["resnext.ResNeXt"], "function", ["None"], ["", "def", "ResNeXt29_8x64d", "(", ")", ":", "\n", "    ", "return", "ResNeXt", "(", "num_blocks", "=", "[", "3", ",", "3", ",", "3", "]", ",", "cardinality", "=", "8", ",", "bottleneck_width", "=", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnext.ResNeXt29_32x4d": [[92, 94], ["resnext.ResNeXt"], "function", ["None"], ["", "def", "ResNeXt29_32x4d", "(", ")", ":", "\n", "    ", "return", "ResNeXt", "(", "num_blocks", "=", "[", "3", ",", "3", ",", "3", "]", ",", "cardinality", "=", "32", ",", "bottleneck_width", "=", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnext.test_resnext": [[96, 101], ["resnext.ResNeXt29_2x64d", "torch.randn", "torch.randn", "torch.randn", "ResNeXt29_2x64d.", "print", "net.size"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnext.ResNeXt29_2x64d"], ["", "def", "test_resnext", "(", ")", ":", "\n", "    ", "net", "=", "ResNeXt29_2x64d", "(", ")", "\n", "x", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "x", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.googlenet.Inception.__init__": [[8, 46], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "n1x1", ",", "n3x3red", ",", "n3x3", ",", "n5x5red", ",", "n5x5", ",", "pool_planes", ")", ":", "\n", "        ", "super", "(", "Inception", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# 1x1 conv branch", "\n", "self", ".", "b1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "n1x1", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n1x1", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n", "\n", "# 1x1 conv -> 3x3 conv branch", "\n", "self", ".", "b2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "n3x3red", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n3x3red", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n3x3red", ",", "n3x3", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n3x3", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n", "\n", "# 1x1 conv -> 5x5 conv branch", "\n", "self", ".", "b3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "n5x5red", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n5x5red", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n5x5red", ",", "n5x5", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n5x5", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n5x5", ",", "n5x5", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n5x5", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n", "\n", "# 3x3 pool -> 1x1 conv branch", "\n", "self", ".", "b4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "pool_planes", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "pool_planes", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.googlenet.Inception.forward": [[48, 54], ["googlenet.Inception.b1", "googlenet.Inception.b2", "googlenet.Inception.b3", "googlenet.Inception.b4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y1", "=", "self", ".", "b1", "(", "x", ")", "\n", "y2", "=", "self", ".", "b2", "(", "x", ")", "\n", "y3", "=", "self", ".", "b3", "(", "x", ")", "\n", "y4", "=", "self", ".", "b4", "(", "x", ")", "\n", "return", "torch", ".", "cat", "(", "[", "y1", ",", "y2", ",", "y3", ",", "y4", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.googlenet.GoogLeNet.__init__": [[57, 81], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "googlenet.Inception", "googlenet.Inception", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "GoogLeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pre_layers", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "192", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "192", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "a3", "=", "Inception", "(", "192", ",", "64", ",", "96", ",", "128", ",", "16", ",", "32", ",", "32", ")", "\n", "self", ".", "b3", "=", "Inception", "(", "256", ",", "128", ",", "128", ",", "192", ",", "32", ",", "96", ",", "64", ")", "\n", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "a4", "=", "Inception", "(", "480", ",", "192", ",", "96", ",", "208", ",", "16", ",", "48", ",", "64", ")", "\n", "self", ".", "b4", "=", "Inception", "(", "512", ",", "160", ",", "112", ",", "224", ",", "24", ",", "64", ",", "64", ")", "\n", "self", ".", "c4", "=", "Inception", "(", "512", ",", "128", ",", "128", ",", "256", ",", "24", ",", "64", ",", "64", ")", "\n", "self", ".", "d4", "=", "Inception", "(", "512", ",", "112", ",", "144", ",", "288", ",", "32", ",", "64", ",", "64", ")", "\n", "self", ".", "e4", "=", "Inception", "(", "528", ",", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", ")", "\n", "\n", "self", ".", "a5", "=", "Inception", "(", "832", ",", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", ")", "\n", "self", ".", "b5", "=", "Inception", "(", "832", ",", "384", ",", "192", ",", "384", ",", "48", ",", "128", ",", "128", ")", "\n", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "8", ",", "stride", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "1024", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.googlenet.GoogLeNet.forward": [[82, 99], ["googlenet.GoogLeNet.pre_layers", "googlenet.GoogLeNet.a3", "googlenet.GoogLeNet.b3", "googlenet.GoogLeNet.maxpool", "googlenet.GoogLeNet.a4", "googlenet.GoogLeNet.b4", "googlenet.GoogLeNet.c4", "googlenet.GoogLeNet.d4", "googlenet.GoogLeNet.e4", "googlenet.GoogLeNet.maxpool", "googlenet.GoogLeNet.a5", "googlenet.GoogLeNet.b5", "googlenet.GoogLeNet.avgpool", "googlenet.GoogLeNet.view", "googlenet.GoogLeNet.linear", "googlenet.GoogLeNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "pre_layers", "(", "x", ")", "\n", "out", "=", "self", ".", "a3", "(", "out", ")", "\n", "out", "=", "self", ".", "b3", "(", "out", ")", "\n", "out", "=", "self", ".", "maxpool", "(", "out", ")", "\n", "out", "=", "self", ".", "a4", "(", "out", ")", "\n", "out", "=", "self", ".", "b4", "(", "out", ")", "\n", "out", "=", "self", ".", "c4", "(", "out", ")", "\n", "out", "=", "self", ".", "d4", "(", "out", ")", "\n", "out", "=", "self", ".", "e4", "(", "out", ")", "\n", "out", "=", "self", ".", "maxpool", "(", "out", ")", "\n", "out", "=", "self", ".", "a5", "(", "out", ")", "\n", "out", "=", "self", ".", "b5", "(", "out", ")", "\n", "out", "=", "self", ".", "avgpool", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActBlock.__init__": [[17, 28], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "PreActBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "ind", "=", "None", "\n", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActBlock.forward": [[30, 40], ["torch.relu", "torch.relu", "torch.relu", "preact_resnet.PreActBlock.conv1", "preact_resnet.PreActBlock.conv2", "preact_resnet.PreActBlock.bn1", "hasattr", "preact_resnet.PreActBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "preact_resnet.PreActBlock.bn2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "shortcut", "=", "self", ".", "shortcut", "(", "out", ")", "if", "hasattr", "(", "self", ",", "\"shortcut\"", ")", "else", "x", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "if", "self", ".", "ind", "is", "not", "None", ":", "\n", "            ", "out", "+=", "shortcut", "[", ":", ",", "self", ".", "ind", ",", ":", ",", ":", "]", "\n", "", "else", ":", "\n", "            ", "out", "+=", "shortcut", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActBottleneck.__init__": [[47, 59], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "PreActBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActBottleneck.forward": [[61, 69], ["torch.relu", "torch.relu", "torch.relu", "preact_resnet.PreActBottleneck.conv1", "preact_resnet.PreActBottleneck.conv2", "preact_resnet.PreActBottleneck.conv3", "preact_resnet.PreActBottleneck.bn1", "hasattr", "preact_resnet.PreActBottleneck.shortcut", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "preact_resnet.PreActBottleneck.bn2", "preact_resnet.PreActBottleneck.bn3"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "shortcut", "=", "self", ".", "shortcut", "(", "out", ")", "if", "hasattr", "(", "self", ",", "\"shortcut\"", ")", "else", "x", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "conv3", "(", "F", ".", "relu", "(", "self", ".", "bn3", "(", "out", ")", ")", ")", "\n", "out", "+=", "shortcut", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet.__init__": [[72, 83], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "preact_resnet.PreActResNet._make_layer", "preact_resnet.PreActResNet._make_layer", "preact_resnet.PreActResNet._make_layer", "preact_resnet.PreActResNet._make_layer", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "PreActResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "4", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet._make_layer": [[84, 91], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet.forward": [[92, 102], ["preact_resnet.PreActResNet.conv1", "preact_resnet.PreActResNet.layer1", "preact_resnet.PreActResNet.layer2", "preact_resnet.PreActResNet.layer3", "preact_resnet.PreActResNet.layer4", "preact_resnet.PreActResNet.avgpool", "preact_resnet.PreActResNet.view", "preact_resnet.PreActResNet.linear", "preact_resnet.PreActResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "self", ".", "avgpool", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet18": [[104, 106], ["preact_resnet.PreActResNet"], "function", ["None"], ["", "", "def", "PreActResNet18", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "PreActResNet", "(", "PreActBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet34": [[108, 110], ["preact_resnet.PreActResNet"], "function", ["None"], ["", "def", "PreActResNet34", "(", ")", ":", "\n", "    ", "return", "PreActResNet", "(", "PreActBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet50": [[112, 114], ["preact_resnet.PreActResNet"], "function", ["None"], ["", "def", "PreActResNet50", "(", ")", ":", "\n", "    ", "return", "PreActResNet", "(", "PreActBottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet101": [[116, 118], ["preact_resnet.PreActResNet"], "function", ["None"], ["", "def", "PreActResNet101", "(", ")", ":", "\n", "    ", "return", "PreActResNet", "(", "PreActBottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet152": [[120, 122], ["preact_resnet.PreActResNet"], "function", ["None"], ["", "def", "PreActResNet152", "(", ")", ":", "\n", "    ", "return", "PreActResNet", "(", "PreActBottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.test": [[124, 128], ["preact_resnet.PreActResNet18", "PreActResNet18.", "print", "torch.randn", "torch.randn", "torch.randn", "net.size"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet18"], ["", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "PreActResNet18", "(", ")", "\n", "y", "=", "net", "(", "(", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", ")", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.Normalize.__init__": [[12, 17], ["len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "expected_values", ",", "variance", ")", ":", "\n", "        ", "self", ".", "n_channels", "=", "opt", ".", "input_channel", "\n", "self", ".", "expected_values", "=", "expected_values", "\n", "self", ".", "variance", "=", "variance", "\n", "assert", "self", ".", "n_channels", "==", "len", "(", "self", ".", "expected_values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.Normalize.__call__": [[18, 23], ["x.clone", "range"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_clone", "=", "x", ".", "clone", "(", ")", "\n", "for", "channel", "in", "range", "(", "self", ".", "n_channels", ")", ":", "\n", "            ", "x_clone", "[", ":", ",", "channel", "]", "=", "(", "x", "[", ":", ",", "channel", "]", "-", "self", ".", "expected_values", "[", "channel", "]", ")", "/", "self", ".", "variance", "[", "channel", "]", "\n", "", "return", "x_clone", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.Denormalize.__init__": [[26, 31], ["len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "expected_values", ",", "variance", ")", ":", "\n", "        ", "self", ".", "n_channels", "=", "opt", ".", "input_channel", "\n", "self", ".", "expected_values", "=", "expected_values", "\n", "self", ".", "variance", "=", "variance", "\n", "assert", "self", ".", "n_channels", "==", "len", "(", "self", ".", "expected_values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.Denormalize.__call__": [[32, 37], ["x.clone", "range"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_clone", "=", "x", ".", "clone", "(", ")", "\n", "for", "channel", "in", "range", "(", "self", ".", "n_channels", ")", ":", "\n", "            ", "x_clone", "[", ":", ",", "channel", "]", "=", "x", "[", ":", ",", "channel", "]", "*", "self", ".", "variance", "[", "channel", "]", "+", "self", ".", "expected_values", "[", "channel", "]", "\n", "", "return", "x_clone", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.Normalizer.__init__": [[40, 42], ["models.Normalizer._get_normalizer"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.Normalizer._get_normalizer"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "normalizer", "=", "self", ".", "_get_normalizer", "(", "opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.Normalizer._get_normalizer": [[43, 53], ["models.Normalize", "models.Normalize", "Exception"], "methods", ["None"], ["", "def", "_get_normalizer", "(", "self", ",", "opt", ")", ":", "\n", "        ", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "            ", "normalizer", "=", "Normalize", "(", "opt", ",", "[", "0.4914", ",", "0.4822", ",", "0.4465", "]", ",", "[", "0.247", ",", "0.243", ",", "0.261", "]", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "            ", "normalizer", "=", "Normalize", "(", "opt", ",", "[", "0.5", "]", ",", "[", "0.5", "]", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", "or", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "            ", "normalizer", "=", "None", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Invalid dataset\"", ")", "\n", "", "return", "normalizer", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.Normalizer.__call__": [[54, 58], ["models.Normalizer.normalizer"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "normalizer", ":", "\n", "            ", "x", "=", "self", ".", "normalizer", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.Denormalizer.__init__": [[61, 63], ["models.Denormalizer._get_denormalizer"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.Denormalizer._get_denormalizer"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "denormalizer", "=", "self", ".", "_get_denormalizer", "(", "opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.Denormalizer._get_denormalizer": [[64, 74], ["models.Denormalize", "models.Denormalize", "Exception"], "methods", ["None"], ["", "def", "_get_denormalizer", "(", "self", ",", "opt", ")", ":", "\n", "        ", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "            ", "denormalizer", "=", "Denormalize", "(", "opt", ",", "[", "0.4914", ",", "0.4822", ",", "0.4465", "]", ",", "[", "0.247", ",", "0.243", ",", "0.261", "]", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "            ", "denormalizer", "=", "Denormalize", "(", "opt", ",", "[", "0.5", "]", ",", "[", "0.5", "]", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", "or", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "            ", "denormalizer", "=", "None", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Invalid dataset\"", ")", "\n", "", "return", "denormalizer", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.Denormalizer.__call__": [[75, 79], ["models.Denormalizer.denormalizer"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "denormalizer", ":", "\n", "            ", "x", "=", "self", ".", "denormalizer", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.MNISTBlock.__init__": [[83, 88], ["torch.nn.Module.__init__", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "MNISTBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "ind", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.MNISTBlock.forward": [[89, 91], ["models.MNISTBlock.conv1", "torch.relu", "torch.relu", "models.MNISTBlock.bn1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv1", "(", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.NetC_MNIST.__init__": [[94, 105], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "models.MNISTBlock", "models.MNISTBlock", "torch.nn.Flatten", "torch.nn.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "NetC_MNIST", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "32", ",", "(", "3", ",", "3", ")", ",", "2", ",", "1", ")", "# 14", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "layer2", "=", "MNISTBlock", "(", "32", ",", "64", ",", "2", ")", "# 7", "\n", "self", ".", "layer3", "=", "MNISTBlock", "(", "64", ",", "64", ",", "2", ")", "# 4", "\n", "self", ".", "flatten", "=", "nn", ".", "Flatten", "(", ")", "\n", "self", ".", "linear6", "=", "nn", ".", "Linear", "(", "64", "*", "4", "*", "4", ",", "512", ")", "\n", "self", ".", "relu7", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "dropout8", "=", "nn", ".", "Dropout", "(", "0.3", ")", "\n", "self", ".", "linear9", "=", "nn", ".", "Linear", "(", "512", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.models.NetC_MNIST.forward": [[106, 110], ["models.NetC_MNIST.children", "module"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "children", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.blocks.Conv2dBlock.__init__": [[6, 13], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "ker_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "batch_norm", "=", "True", ",", "relu", "=", "True", ")", ":", "\n", "        ", "super", "(", "Conv2dBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_c", ",", "out_c", ",", "ker_size", ",", "stride", ",", "padding", ")", "\n", "if", "batch_norm", ":", "\n", "            ", "self", ".", "batch_norm", "=", "nn", ".", "BatchNorm2d", "(", "out_c", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.05", ",", "affine", "=", "True", ")", "\n", "", "if", "relu", ":", "\n", "            ", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.blocks.Conv2dBlock.forward": [[14, 18], ["blocks.Conv2dBlock.children", "module"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "children", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.blocks.ConvTranspose2dBlock.__init__": [[21, 28], ["torch.nn.Module.__init__", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "ker_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "batch_norm", "=", "True", ",", "relu", "=", "True", ")", ":", "\n", "        ", "super", "(", "ConvTranspose2dBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "convtranpose2d", "=", "nn", ".", "ConvTranspose2d", "(", "in_c", ",", "out_c", ",", "ker_size", ",", "stride", ",", "padding", ")", "\n", "if", "batch_norm", ":", "\n", "            ", "self", ".", "batch_norm", "=", "nn", ".", "BatchNorm2d", "(", "out_c", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.05", ",", "affine", "=", "True", ")", "\n", "", "if", "relu", ":", "\n", "            ", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.blocks.ConvTranspose2dBlock.forward": [[29, 33], ["blocks.ConvTranspose2dBlock.children", "module"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "children", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.blocks.DownSampleBlock.__init__": [[36, 41], ["torch.nn.Module.__init__", "torch.nn.MaxPool2d", "torch.nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ker_size", "=", "(", "2", ",", "2", ")", ",", "stride", "=", "2", ",", "dilation", "=", "(", "1", ",", "1", ")", ",", "ceil_mode", "=", "False", ",", "p", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "DownSampleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "maxpooling", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "ker_size", ",", "stride", "=", "stride", ",", "dilation", "=", "dilation", ",", "ceil_mode", "=", "ceil_mode", ")", "\n", "if", "p", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.blocks.DownSampleBlock.forward": [[42, 46], ["blocks.DownSampleBlock.children", "module"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "children", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.blocks.UpSampleBlock.__init__": [[49, 59], ["torch.nn.Module.__init__", "torch.nn.Upsample", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "in_c", ",", "out_c", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "\"bilinear\"", ",", "batch_norm", "=", "True", ",", "p", "=", "0.0", "\n", ")", ":", "\n", "        ", "super", "(", "UpSampleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "scale_factor", ",", "mode", "=", "mode", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_c", ",", "out_c", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ")", "\n", "if", "batch_norm", ":", "\n", "            ", "self", ".", "batch_norm", "=", "nn", ".", "BatchNorm2d", "(", "out_c", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.05", ",", "affine", "=", "True", ")", "\n", "", "if", "p", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.networks.blocks.UpSampleBlock.forward": [[60, 64], ["blocks.UpSampleBlock.children", "module"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "children", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.config.get_arguments": [[4, 29], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["def", "get_arguments", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--data_root\"", ",", "type", "=", "str", ",", "default", "=", "\"/home/ubuntu/temps/\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--checkpoints\"", ",", "type", "=", "str", ",", "default", "=", "\"./checkpoints\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--temps\"", ",", "type", "=", "str", ",", "default", "=", "\"./temps\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--device\"", ",", "type", "=", "str", ",", "default", "=", "\"cuda\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--continue_training\"", ",", "action", "=", "\"store_true\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--dataset\"", ",", "type", "=", "str", ",", "default", "=", "\"cifar10\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--attack_mode\"", ",", "type", "=", "str", ",", "default", "=", "\"all2one\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--bs\"", ",", "type", "=", "int", ",", "default", "=", "128", ")", "\n", "parser", ".", "add_argument", "(", "\"--lr_C\"", ",", "type", "=", "float", ",", "default", "=", "1e-2", ")", "\n", "parser", ".", "add_argument", "(", "\"--schedulerC_milestones\"", ",", "type", "=", "list", ",", "default", "=", "[", "100", ",", "200", ",", "300", ",", "400", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--schedulerC_lambda\"", ",", "type", "=", "float", ",", "default", "=", "0.1", ")", "\n", "parser", ".", "add_argument", "(", "\"--n_iters\"", ",", "type", "=", "int", ",", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_workers\"", ",", "type", "=", "float", ",", "default", "=", "6", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--target_label\"", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\"--pc\"", ",", "type", "=", "float", ",", "default", "=", "0.1", ")", "\n", "parser", ".", "add_argument", "(", "\"--cross_ratio\"", ",", "type", "=", "float", ",", "default", "=", "2", ")", "# rho_a = pc, rho_n = pc * cross_ratio", "\n", "\n", "parser", ".", "add_argument", "(", "\"--random_rotation\"", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "\"--random_crop\"", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-cifar10-gtsrb.create_targets_bd": [[17, 25], ["torch.tensor.to", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.tensor", "torch.tensor", "torch.tensor", "Exception"], "function", ["None"], ["def", "create_targets_bd", "(", "targets", ",", "opt", ")", ":", "\n", "    ", "if", "opt", ".", "attack_mode", "==", "\"all2one\"", ":", "\n", "        ", "bd_targets", "=", "torch", ".", "ones_like", "(", "targets", ")", "*", "opt", ".", "target_label", "\n", "", "elif", "opt", ".", "attack_mode", "==", "\"all2all\"", ":", "\n", "        ", "bd_targets", "=", "torch", ".", "tensor", "(", "[", "(", "label", "+", "1", ")", "%", "opt", ".", "num_classes", "for", "label", "in", "targets", "]", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"{} attack mode is not implemented\"", ".", "format", "(", "opt", ".", "attack_mode", ")", ")", "\n", "", "return", "bd_targets", ".", "to", "(", "opt", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-cifar10-gtsrb.create_bd": [[27, 35], ["fine-pruning-cifar10-gtsrb.create_targets_bd", "netG", "netG.normalize_pattern", "netM.threshold", "netM"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.create_targets_bd"], ["", "def", "create_bd", "(", "netG", ",", "netM", ",", "inputs", ",", "targets", ",", "opt", ")", ":", "\n", "    ", "bd_targets", "=", "create_targets_bd", "(", "targets", ",", "opt", ")", "\n", "patterns", "=", "netG", "(", "inputs", ")", "\n", "patterns", "=", "netG", ".", "normalize_pattern", "(", "patterns", ")", "\n", "\n", "masks_output", "=", "netM", ".", "threshold", "(", "netM", "(", "inputs", ")", ")", "\n", "bd_inputs", "=", "inputs", "+", "(", "patterns", "-", "inputs", ")", "*", "masks_output", "\n", "return", "bd_inputs", ",", "bd_targets", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-cifar10-gtsrb.eval": [[37, 69], ["print", "enumerate", "netC", "torch.sum", "torch.sum", "torch.sum", "torch.clamp", "torch.clamp", "torch.clamp", "torch.grid_sample", "netC", "torch.sum", "torch.sum", "torch.sum", "utils.utils.progress_bar", "inputs.to", "targets.to", "torch.clamp.repeat", "torch.ones_like", "torch.ones_like", "torch.ones_like", "len", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.progress_bar"], ["", "def", "eval", "(", "netC", ",", "identity_grid", ",", "noise_grid", ",", "test_dl", ",", "opt", ")", ":", "\n", "    ", "print", "(", "\" Eval:\"", ")", "\n", "acc_clean", "=", "0.0", "\n", "acc_bd", "=", "0.0", "\n", "total_sample", "=", "0", "\n", "total_correct_clean", "=", "0", "\n", "total_correct_bd", "=", "0", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "test_dl", ")", ":", "\n", "        ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "opt", ".", "device", ")", ",", "targets", ".", "to", "(", "opt", ".", "device", ")", "\n", "bs", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "total_sample", "+=", "bs", "\n", "\n", "# Evaluating clean", "\n", "preds_clean", "=", "netC", "(", "inputs", ")", "\n", "correct_clean", "=", "torch", ".", "sum", "(", "torch", ".", "argmax", "(", "preds_clean", ",", "1", ")", "==", "targets", ")", "\n", "total_correct_clean", "+=", "correct_clean", "\n", "acc_clean", "=", "total_correct_clean", "*", "100.0", "/", "total_sample", "\n", "\n", "# Evaluating backdoor", "\n", "grid_temps", "=", "(", "identity_grid", "+", "opt", ".", "s", "*", "noise_grid", "/", "opt", ".", "input_height", ")", "*", "opt", ".", "grid_rescale", "\n", "grid_temps", "=", "torch", ".", "clamp", "(", "grid_temps", ",", "-", "1", ",", "1", ")", "\n", "\n", "inputs_bd", "=", "F", ".", "grid_sample", "(", "inputs", ",", "grid_temps", ".", "repeat", "(", "bs", ",", "1", ",", "1", ",", "1", ")", ",", "align_corners", "=", "True", ")", "\n", "targets_bd", "=", "torch", ".", "ones_like", "(", "targets", ")", "*", "opt", ".", "target_label", "\n", "preds_bd", "=", "netC", "(", "inputs_bd", ")", "\n", "correct_bd", "=", "torch", ".", "sum", "(", "torch", ".", "argmax", "(", "preds_bd", ",", "1", ")", "==", "targets_bd", ")", "\n", "total_correct_bd", "+=", "correct_bd", "\n", "acc_bd", "=", "total_correct_bd", "*", "100.0", "/", "total_sample", "\n", "\n", "progress_bar", "(", "batch_idx", ",", "len", "(", "test_dl", ")", ",", "\"Acc Clean: {:.3f} | Acc Bd: {:.3f}\"", ".", "format", "(", "acc_clean", ",", "acc_bd", ")", ")", "\n", "", "return", "acc_clean", ",", "acc_bd", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-cifar10-gtsrb.main": [[71, 169], ["config.get_arguments().parse_args", "os.path.join", "os.path.join", "os.path.join", "torch.load", "torch.load", "torch.load", "print", "PreActResNet18().to.load_state_dict", "PreActResNet18().to.to", "PreActResNet18().to.eval", "PreActResNet18().to.requires_grad_", "utils.dataloader.get_dataloader", "PreActResNet18().to.layer4.register_forward_hook", "print", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "torch.argsort", "torch.argsort", "torch.argsort", "torch.ones", "torch.ones", "torch.ones", "netC.layer4.register_forward_hook.remove", "classifier_models.PreActResNet18().to", "torch.cat.append", "inputs.to.to", "PreActResNet18().to.", "utils.utils.progress_bar", "open", "range", "config.get_arguments", "Exception", "Exception", "classifier_models.PreActResNet18().to", "Exception", "len", "copy.deepcopy", "print", "torch.Conv2d", "torch.Linear", "copy.deepcopy._modules.items", "copy.deepcopy.to", "fine-pruning-cifar10-gtsrb.eval", "outs.write", "classifier_models.PreActResNet18", "classifier_models.PreActResNet18"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.eval", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.get_dataloader", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.progress_bar", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.config.get_arguments", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.eval", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet18", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet18"], ["", "def", "main", "(", ")", ":", "\n", "# Prepare arguments", "\n", "    ", "opt", "=", "get_arguments", "(", ")", ".", "parse_args", "(", ")", "\n", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "opt", ".", "num_classes", "=", "10", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "opt", ".", "num_classes", "=", "43", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid Dataset\"", ")", "\n", "", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "32", "\n", "opt", ".", "input_width", "=", "32", "\n", "opt", ".", "input_channel", "=", "3", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "32", "\n", "opt", ".", "input_width", "=", "32", "\n", "opt", ".", "input_channel", "=", "3", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid Dataset\"", ")", "\n", "\n", "# Load models", "\n", "", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "netC", "=", "PreActResNet18", "(", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "netC", "=", "PreActResNet18", "(", "num_classes", "=", "43", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid dataset\"", ")", "\n", "\n", "", "mode", "=", "opt", ".", "attack_mode", "\n", "opt", ".", "ckpt_folder", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoints", ",", "opt", ".", "dataset", ")", "\n", "opt", ".", "ckpt_path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "ckpt_folder", ",", "\"{}_{}_morph.pth.tar\"", ".", "format", "(", "opt", ".", "dataset", ",", "mode", ")", ")", "\n", "opt", ".", "log_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "ckpt_folder", ",", "\"log_dir\"", ")", "\n", "\n", "state_dict", "=", "torch", ".", "load", "(", "opt", ".", "ckpt_path", ")", "\n", "print", "(", "\"load C\"", ")", "\n", "netC", ".", "load_state_dict", "(", "state_dict", "[", "\"netC\"", "]", ")", "\n", "netC", ".", "to", "(", "opt", ".", "device", ")", "\n", "netC", ".", "eval", "(", ")", "\n", "netC", ".", "requires_grad_", "(", "False", ")", "\n", "\n", "identity_grid", "=", "state_dict", "[", "\"identity_grid\"", "]", "\n", "noise_grid", "=", "state_dict", "[", "\"noise_grid\"", "]", "\n", "# Prepare dataloader", "\n", "test_dl", "=", "get_dataloader", "(", "opt", ",", "train", "=", "False", ")", "\n", "\n", "# Forward hook for getting layer's output", "\n", "container", "=", "[", "]", "\n", "\n", "def", "forward_hook", "(", "module", ",", "input", ",", "output", ")", ":", "\n", "        ", "container", ".", "append", "(", "output", ")", "\n", "\n", "", "hook", "=", "netC", ".", "layer4", ".", "register_forward_hook", "(", "forward_hook", ")", "\n", "\n", "# Forwarding all the validation set", "\n", "print", "(", "\"Forwarding all the validation dataset:\"", ")", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "_", ")", "in", "enumerate", "(", "test_dl", ")", ":", "\n", "        ", "inputs", "=", "inputs", ".", "to", "(", "opt", ".", "device", ")", "\n", "netC", "(", "inputs", ")", "\n", "progress_bar", "(", "batch_idx", ",", "len", "(", "test_dl", ")", ")", "\n", "\n", "# Processing to get the \"more important mask\"", "\n", "", "container", "=", "torch", ".", "cat", "(", "container", ",", "dim", "=", "0", ")", "\n", "activation", "=", "torch", ".", "mean", "(", "container", ",", "dim", "=", "[", "0", ",", "2", ",", "3", "]", ")", "\n", "seq_sort", "=", "torch", ".", "argsort", "(", "activation", ")", "\n", "pruning_mask", "=", "torch", ".", "ones", "(", "seq_sort", ".", "shape", "[", "0", "]", ",", "dtype", "=", "bool", ")", "\n", "hook", ".", "remove", "(", ")", "\n", "\n", "# Pruning times - no-tuning after pruning a channel!!!", "\n", "acc_clean", "=", "[", "]", "\n", "acc_bd", "=", "[", "]", "\n", "opt", ".", "outfile", "=", "\"{}_results.txt\"", ".", "format", "(", "opt", ".", "dataset", ")", "\n", "with", "open", "(", "opt", ".", "outfile", ",", "\"w\"", ")", "as", "outs", ":", "\n", "        ", "for", "index", "in", "range", "(", "pruning_mask", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "net_pruned", "=", "copy", ".", "deepcopy", "(", "netC", ")", "\n", "num_pruned", "=", "index", "\n", "if", "index", ":", "\n", "                ", "channel", "=", "seq_sort", "[", "index", "-", "1", "]", "\n", "pruning_mask", "[", "channel", "]", "=", "False", "\n", "", "print", "(", "\"Pruned {} filters\"", ".", "format", "(", "num_pruned", ")", ")", "\n", "\n", "net_pruned", ".", "layer4", "[", "1", "]", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "\n", "pruning_mask", ".", "shape", "[", "0", "]", ",", "pruning_mask", ".", "shape", "[", "0", "]", "-", "num_pruned", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", "\n", ")", "\n", "net_pruned", ".", "linear", "=", "nn", ".", "Linear", "(", "pruning_mask", ".", "shape", "[", "0", "]", "-", "num_pruned", ",", "10", ")", "\n", "\n", "# Re-assigning weight to the pruned net", "\n", "for", "name", ",", "module", "in", "net_pruned", ".", "_modules", ".", "items", "(", ")", ":", "\n", "                ", "if", "\"layer4\"", "in", "name", ":", "\n", "                    ", "module", "[", "1", "]", ".", "conv2", ".", "weight", ".", "data", "=", "netC", ".", "layer4", "[", "1", "]", ".", "conv2", ".", "weight", ".", "data", "[", "pruning_mask", "]", "\n", "module", "[", "1", "]", ".", "ind", "=", "pruning_mask", "\n", "", "elif", "\"linear\"", "==", "name", ":", "\n", "                    ", "module", ".", "weight", ".", "data", "=", "netC", ".", "linear", ".", "weight", ".", "data", "[", ":", ",", "pruning_mask", "]", "\n", "module", ".", "bias", ".", "data", "=", "netC", ".", "linear", ".", "bias", ".", "data", "\n", "", "else", ":", "\n", "                    ", "continue", "\n", "", "", "net_pruned", ".", "to", "(", "opt", ".", "device", ")", "\n", "clean", ",", "bd", "=", "eval", "(", "net_pruned", ",", "identity_grid", ",", "noise_grid", ",", "test_dl", ",", "opt", ")", "\n", "outs", ".", "write", "(", "\"%d %0.4f %0.4f\\n\"", "%", "(", "index", ",", "clean", ",", "bd", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.create_targets_bd": [[17, 25], ["torch.tensor.to", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.tensor", "torch.tensor", "torch.tensor", "Exception"], "function", ["None"], ["def", "create_targets_bd", "(", "targets", ",", "opt", ")", ":", "\n", "    ", "if", "opt", ".", "attack_mode", "==", "\"all2one\"", ":", "\n", "        ", "bd_targets", "=", "torch", ".", "ones_like", "(", "targets", ")", "*", "opt", ".", "target_label", "\n", "", "elif", "opt", ".", "attack_mode", "==", "\"all2all\"", ":", "\n", "        ", "bd_targets", "=", "torch", ".", "tensor", "(", "[", "(", "label", "+", "1", ")", "%", "opt", ".", "num_classes", "for", "label", "in", "targets", "]", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"{} attack mode is not implemented\"", ".", "format", "(", "opt", ".", "attack_mode", ")", ")", "\n", "", "return", "bd_targets", ".", "to", "(", "opt", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.eval": [[27, 59], ["print", "enumerate", "netC", "torch.sum", "torch.sum", "torch.sum", "torch.clamp", "torch.clamp", "torch.clamp", "torch.grid_sample", "fine-pruning-mnist.create_targets_bd", "netC", "torch.sum", "torch.sum", "torch.sum", "utils.utils.progress_bar", "inputs.to", "targets.to", "torch.clamp.repeat", "len", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.create_targets_bd", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.progress_bar"], ["", "def", "eval", "(", "netC", ",", "identity_grid", ",", "noise_grid", ",", "test_dl", ",", "opt", ")", ":", "\n", "    ", "print", "(", "\" Eval:\"", ")", "\n", "acc_clean", "=", "0.0", "\n", "acc_bd", "=", "0.0", "\n", "total_sample", "=", "0", "\n", "total_correct_clean", "=", "0", "\n", "total_correct_bd", "=", "0", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "test_dl", ")", ":", "\n", "        ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "opt", ".", "device", ")", ",", "targets", ".", "to", "(", "opt", ".", "device", ")", "\n", "bs", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "total_sample", "+=", "bs", "\n", "\n", "# Evaluating clean", "\n", "preds_clean", "=", "netC", "(", "inputs", ")", "\n", "correct_clean", "=", "torch", ".", "sum", "(", "torch", ".", "argmax", "(", "preds_clean", ",", "1", ")", "==", "targets", ")", "\n", "total_correct_clean", "+=", "correct_clean", "\n", "acc_clean", "=", "total_correct_clean", "*", "100.0", "/", "total_sample", "\n", "\n", "# Evaluating backdoor", "\n", "grid_temps", "=", "(", "identity_grid", "+", "opt", ".", "s", "*", "noise_grid", "/", "opt", ".", "input_height", ")", "*", "opt", ".", "grid_rescale", "\n", "grid_temps", "=", "torch", ".", "clamp", "(", "grid_temps", ",", "-", "1", ",", "1", ")", "\n", "\n", "inputs_bd", "=", "F", ".", "grid_sample", "(", "inputs", ",", "grid_temps", ".", "repeat", "(", "bs", ",", "1", ",", "1", ",", "1", ")", ",", "align_corners", "=", "True", ")", "\n", "targets_bd", "=", "create_targets_bd", "(", "targets", ",", "opt", ")", "\n", "preds_bd", "=", "netC", "(", "inputs_bd", ")", "\n", "correct_bd", "=", "torch", ".", "sum", "(", "torch", ".", "argmax", "(", "preds_bd", ",", "1", ")", "==", "targets_bd", ")", "\n", "total_correct_bd", "+=", "correct_bd", "\n", "acc_bd", "=", "total_correct_bd", "*", "100.0", "/", "total_sample", "\n", "\n", "progress_bar", "(", "batch_idx", ",", "len", "(", "test_dl", ")", ",", "\"Acc Clean: {:.3f} | Acc Bd: {:.3f}\"", ".", "format", "(", "acc_clean", ",", "acc_bd", ")", ")", "\n", "", "return", "acc_clean", ",", "acc_bd", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.main": [[61, 149], ["config.get_arguments().parse_args", "os.path.join", "os.path.join", "os.path.join", "torch.load", "torch.load", "torch.load", "print", "NetC_MNIST().to.load_state_dict", "NetC_MNIST().to.to", "NetC_MNIST().to.eval", "NetC_MNIST().to.requires_grad_", "print", "state_dict[].to", "state_dict[].to", "print", "utils.dataloader.get_dataloader", "NetC_MNIST().to._modules.items", "NetC_MNIST().to.layer3.register_forward_hook", "print", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "torch.argsort", "torch.argsort", "torch.argsort", "torch.ones", "torch.ones", "torch.ones", "netC.layer3.register_forward_hook.remove", "networks.models.NetC_MNIST().to", "Exception", "print", "torch.cat.append", "inputs.to.to", "NetC_MNIST().to.", "utils.utils.progress_bar", "open", "range", "config.get_arguments", "len", "copy.deepcopy", "print", "torch.Conv2d", "torch.Linear", "copy.deepcopy._modules.items", "copy.deepcopy.to", "fine-pruning-mnist.eval", "outs.write", "networks.models.NetC_MNIST", "[].reshape", "NetC_MNIST().to.linear6.weight.data.reshape"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.eval", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.get_dataloader", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.progress_bar", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.config.get_arguments", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.eval"], ["", "def", "main", "(", ")", ":", "\n", "# Prepare arguments", "\n", "    ", "opt", "=", "get_arguments", "(", ")", ".", "parse_args", "(", ")", "\n", "\n", "if", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "28", "\n", "opt", ".", "input_width", "=", "28", "\n", "opt", ".", "input_channel", "=", "1", "\n", "netC", "=", "NetC_MNIST", "(", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid Dataset\"", ")", "\n", "\n", "", "mode", "=", "opt", ".", "attack_mode", "\n", "opt", ".", "ckpt_folder", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoints", ",", "opt", ".", "dataset", ")", "\n", "opt", ".", "ckpt_path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "ckpt_folder", ",", "\"{}_{}_morph.pth.tar\"", ".", "format", "(", "opt", ".", "dataset", ",", "mode", ")", ")", "\n", "opt", ".", "log_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "ckpt_folder", ",", "\"log_dir\"", ")", "\n", "\n", "state_dict", "=", "torch", ".", "load", "(", "opt", ".", "ckpt_path", ")", "\n", "print", "(", "\"load C\"", ")", "\n", "netC", ".", "load_state_dict", "(", "state_dict", "[", "\"netC\"", "]", ")", "\n", "netC", ".", "to", "(", "opt", ".", "device", ")", "\n", "netC", ".", "eval", "(", ")", "\n", "netC", ".", "requires_grad_", "(", "False", ")", "\n", "print", "(", "\"load grid\"", ")", "\n", "identity_grid", "=", "state_dict", "[", "\"identity_grid\"", "]", ".", "to", "(", "opt", ".", "device", ")", "\n", "noise_grid", "=", "state_dict", "[", "\"noise_grid\"", "]", ".", "to", "(", "opt", ".", "device", ")", "\n", "print", "(", "state_dict", "[", "\"best_clean_acc\"", "]", ",", "state_dict", "[", "\"best_bd_acc\"", "]", ")", "\n", "\n", "# Prepare dataloader", "\n", "test_dl", "=", "get_dataloader", "(", "opt", ",", "train", "=", "False", ")", "\n", "\n", "for", "name", ",", "module", "in", "netC", ".", "_modules", ".", "items", "(", ")", ":", "\n", "        ", "print", "(", "name", ")", "\n", "\n", "# Forward hook for getting layer's output", "\n", "", "container", "=", "[", "]", "\n", "\n", "def", "forward_hook", "(", "module", ",", "input", ",", "output", ")", ":", "\n", "        ", "container", ".", "append", "(", "output", ")", "\n", "\n", "", "hook", "=", "netC", ".", "layer3", ".", "register_forward_hook", "(", "forward_hook", ")", "\n", "\n", "# Forwarding all the validation set", "\n", "print", "(", "\"Forwarding all the validation dataset:\"", ")", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "_", ")", "in", "enumerate", "(", "test_dl", ")", ":", "\n", "        ", "inputs", "=", "inputs", ".", "to", "(", "opt", ".", "device", ")", "\n", "netC", "(", "inputs", ")", "\n", "progress_bar", "(", "batch_idx", ",", "len", "(", "test_dl", ")", ")", "\n", "\n", "# Processing to get the \"more important mask\"", "\n", "", "container", "=", "torch", ".", "cat", "(", "container", ",", "dim", "=", "0", ")", "\n", "activation", "=", "torch", ".", "mean", "(", "container", ",", "dim", "=", "[", "0", ",", "2", ",", "3", "]", ")", "\n", "seq_sort", "=", "torch", ".", "argsort", "(", "activation", ")", "\n", "pruning_mask", "=", "torch", ".", "ones", "(", "seq_sort", ".", "shape", "[", "0", "]", ",", "dtype", "=", "bool", ")", "\n", "hook", ".", "remove", "(", ")", "\n", "\n", "# Pruning times - no-tuning after pruning a channel!!!", "\n", "acc_clean", "=", "[", "]", "\n", "acc_bd", "=", "[", "]", "\n", "with", "open", "(", "\"mnist_{}_results.txt\"", ".", "format", "(", "opt", ".", "attack_mode", ")", ",", "\"w\"", ")", "as", "outs", ":", "\n", "        ", "for", "index", "in", "range", "(", "pruning_mask", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "net_pruned", "=", "copy", ".", "deepcopy", "(", "netC", ")", "\n", "num_pruned", "=", "index", "\n", "if", "index", ":", "\n", "                ", "channel", "=", "seq_sort", "[", "index", "-", "1", "]", "\n", "pruning_mask", "[", "channel", "]", "=", "False", "\n", "", "print", "(", "\"Pruned {} filters\"", ".", "format", "(", "num_pruned", ")", ")", "\n", "\n", "net_pruned", ".", "layer3", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "\n", "pruning_mask", ".", "shape", "[", "0", "]", ",", "pruning_mask", ".", "shape", "[", "0", "]", "-", "num_pruned", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", "\n", ")", "\n", "net_pruned", ".", "linear6", "=", "nn", ".", "Linear", "(", "(", "pruning_mask", ".", "shape", "[", "0", "]", "-", "num_pruned", ")", "*", "16", ",", "512", ")", "\n", "\n", "# Re-assigning weight to the pruned net", "\n", "for", "name", ",", "module", "in", "net_pruned", ".", "_modules", ".", "items", "(", ")", ":", "\n", "                ", "if", "\"layer3\"", "in", "name", ":", "\n", "                    ", "module", ".", "conv1", ".", "weight", ".", "data", "=", "netC", ".", "layer3", ".", "conv1", ".", "weight", ".", "data", "[", "pruning_mask", "]", "\n", "module", ".", "ind", "=", "pruning_mask", "\n", "", "elif", "\"linear6\"", "==", "name", ":", "\n", "                    ", "module", ".", "weight", ".", "data", "=", "netC", ".", "linear6", ".", "weight", ".", "data", ".", "reshape", "(", "-", "1", ",", "64", ",", "16", ")", "[", ":", ",", "pruning_mask", "]", ".", "reshape", "(", "\n", "512", ",", "-", "1", "\n", ")", "# [:, pruning_mask]", "\n", "module", ".", "bias", ".", "data", "=", "netC", ".", "linear6", ".", "bias", ".", "data", "\n", "", "else", ":", "\n", "                    ", "continue", "\n", "", "", "net_pruned", ".", "to", "(", "opt", ".", "device", ")", "\n", "clean", ",", "bd", "=", "eval", "(", "net_pruned", ",", "identity_grid", ",", "noise_grid", ",", "test_dl", ",", "opt", ")", "\n", "outs", ".", "write", "(", "\"%d %0.4f %0.4f\\n\"", "%", "(", "index", ",", "clean", ",", "bd", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.config.get_argument": [[4, 31], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["def", "get_arguments", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--data_root\"", ",", "type", "=", "str", ",", "default", "=", "\"/home/ubuntu/temps/\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--checkpoints\"", ",", "type", "=", "str", ",", "default", "=", "\"./checkpoints\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--temps\"", ",", "type", "=", "str", ",", "default", "=", "\"./temps\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--device\"", ",", "type", "=", "str", ",", "default", "=", "\"cuda\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--continue_training\"", ",", "action", "=", "\"store_true\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--dataset\"", ",", "type", "=", "str", ",", "default", "=", "\"cifar10\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--attack_mode\"", ",", "type", "=", "str", ",", "default", "=", "\"all2one\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--bs\"", ",", "type", "=", "int", ",", "default", "=", "128", ")", "\n", "parser", ".", "add_argument", "(", "\"--lr_C\"", ",", "type", "=", "float", ",", "default", "=", "1e-2", ")", "\n", "parser", ".", "add_argument", "(", "\"--schedulerC_milestones\"", ",", "type", "=", "list", ",", "default", "=", "[", "100", ",", "200", ",", "300", ",", "400", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--schedulerC_lambda\"", ",", "type", "=", "float", ",", "default", "=", "0.1", ")", "\n", "parser", ".", "add_argument", "(", "\"--n_iters\"", ",", "type", "=", "int", ",", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_workers\"", ",", "type", "=", "float", ",", "default", "=", "6", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--target_label\"", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\"--pc\"", ",", "type", "=", "float", ",", "default", "=", "0.1", ")", "\n", "parser", ".", "add_argument", "(", "\"--cross_ratio\"", ",", "type", "=", "float", ",", "default", "=", "2", ")", "# rho_a = pc, rho_n = pc * cross_ratio", "\n", "\n", "parser", ".", "add_argument", "(", "\"--random_rotation\"", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "\"--random_crop\"", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--s\"", ",", "type", "=", "float", ",", "default", "=", "0.5", ")", "\n", "parser", ".", "add_argument", "(", "\"--k\"", ",", "type", "=", "int", ",", "default", "=", "4", ")", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.Normalize.__init__": [[21, 26], ["len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "expected_values", ",", "variance", ")", ":", "\n", "        ", "self", ".", "n_channels", "=", "opt", ".", "input_channel", "\n", "self", ".", "expected_values", "=", "expected_values", "\n", "self", ".", "variance", "=", "variance", "\n", "assert", "self", ".", "n_channels", "==", "len", "(", "self", ".", "expected_values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.Normalize.__call__": [[27, 32], ["x.clone", "range"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_clone", "=", "x", ".", "clone", "(", ")", "\n", "for", "channel", "in", "range", "(", "self", ".", "n_channels", ")", ":", "\n", "            ", "x_clone", "[", ":", ",", ":", ",", "channel", "]", "=", "(", "x", "[", ":", ",", ":", ",", "channel", "]", "-", "self", ".", "expected_values", "[", "channel", "]", ")", "/", "self", ".", "variance", "[", "channel", "]", "\n", "", "return", "x_clone", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.Denormalize.__init__": [[35, 40], ["len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "expected_values", ",", "variance", ")", ":", "\n", "        ", "self", ".", "n_channels", "=", "opt", ".", "input_channel", "\n", "self", ".", "expected_values", "=", "expected_values", "\n", "self", ".", "variance", "=", "variance", "\n", "assert", "self", ".", "n_channels", "==", "len", "(", "self", ".", "expected_values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.Denormalize.__call__": [[41, 46], ["x.clone", "range"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_clone", "=", "x", ".", "clone", "(", ")", "\n", "for", "channel", "in", "range", "(", "self", ".", "n_channels", ")", ":", "\n", "            ", "x_clone", "[", ":", ",", ":", ",", "channel", "]", "=", "x", "[", ":", ",", ":", ",", "channel", "]", "*", "self", ".", "variance", "[", "channel", "]", "+", "self", ".", "expected_values", "[", "channel", "]", "\n", "", "return", "x_clone", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.STRIP._superimpose": [[49, 54], ["cv2.addWeighted", "len", "numpy.expand_dims"], "methods", ["None"], ["    ", "def", "_superimpose", "(", "self", ",", "background", ",", "overlay", ")", ":", "\n", "        ", "output", "=", "cv2", ".", "addWeighted", "(", "background", ",", "1", ",", "overlay", ",", "1", ",", "0", ")", "\n", "if", "len", "(", "output", ".", "shape", ")", "==", "2", ":", "\n", "            ", "output", "=", "np", ".", "expand_dims", "(", "output", ",", "2", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.STRIP._get_entropy": [[55, 68], ["numpy.random.randint", "range", "classifier", "torch.sigmoid().cpu().numpy", "torch.sigmoid().cpu().numpy", "torch.sigmoid().cpu().numpy", "torch.sigmoid().cpu().numpy", "len", "STRIP.STRIP._superimpose", "STRIP.STRIP.normalize", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "numpy.nansum", "torch.sigmoid().cpu", "torch.sigmoid().cpu", "torch.sigmoid().cpu", "torch.sigmoid().cpu", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "numpy.log2", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.STRIP._superimpose", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.STRIP.normalize"], ["", "def", "_get_entropy", "(", "self", ",", "background", ",", "dataset", ",", "classifier", ")", ":", "\n", "        ", "entropy_sum", "=", "[", "0", "]", "*", "self", ".", "n_sample", "\n", "x1_add", "=", "[", "0", "]", "*", "self", ".", "n_sample", "\n", "index_overlay", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "dataset", ")", ",", "size", "=", "self", ".", "n_sample", ")", "\n", "for", "index", "in", "range", "(", "self", ".", "n_sample", ")", ":", "\n", "            ", "add_image", "=", "self", ".", "_superimpose", "(", "background", ",", "dataset", "[", "index_overlay", "[", "index", "]", "]", "[", "0", "]", ")", "\n", "add_image", "=", "self", ".", "normalize", "(", "add_image", ")", "\n", "x1_add", "[", "index", "]", "=", "add_image", "\n", "\n", "", "py1_add", "=", "classifier", "(", "torch", ".", "stack", "(", "x1_add", ")", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "py1_add", "=", "torch", ".", "sigmoid", "(", "py1_add", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "entropy_sum", "=", "-", "np", ".", "nansum", "(", "py1_add", "*", "np", ".", "log2", "(", "py1_add", ")", ")", "\n", "return", "entropy_sum", "/", "self", ".", "n_sample", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.STRIP._get_denormalize": [[69, 79], ["STRIP.Denormalize", "STRIP.Denormalize", "Exception"], "methods", ["None"], ["", "def", "_get_denormalize", "(", "self", ",", "opt", ")", ":", "\n", "        ", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "            ", "denormalizer", "=", "Denormalize", "(", "opt", ",", "[", "0.4914", ",", "0.4822", ",", "0.4465", "]", ",", "[", "0.247", ",", "0.243", ",", "0.261", "]", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "            ", "denormalizer", "=", "Denormalize", "(", "opt", ",", "[", "0.5", "]", ",", "[", "0.5", "]", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", "or", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "            ", "denormalizer", "=", "None", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Invalid dataset\"", ")", "\n", "", "return", "denormalizer", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.STRIP._get_normalize": [[80, 94], ["STRIP.Normalize", "torchvision.transforms.Compose", "torchvision.transforms.ToTensor", "STRIP.Normalize", "Exception", "torchvision.transforms.ToTensor"], "methods", ["None"], ["", "def", "_get_normalize", "(", "self", ",", "opt", ")", ":", "\n", "        ", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "            ", "normalizer", "=", "Normalize", "(", "opt", ",", "[", "0.4914", ",", "0.4822", ",", "0.4465", "]", ",", "[", "0.247", ",", "0.243", ",", "0.261", "]", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "            ", "normalizer", "=", "Normalize", "(", "opt", ",", "[", "0.5", "]", ",", "[", "0.5", "]", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", "or", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "            ", "normalizer", "=", "None", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Invalid dataset\"", ")", "\n", "", "if", "normalizer", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "normalizer", "]", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "", "return", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.STRIP.__init__": [[95, 101], ["super().__init__", "STRIP.STRIP._get_normalize", "STRIP.STRIP._get_denormalize"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel._get_normalize", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel._get_denormalize"], ["", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_sample", "=", "opt", ".", "n_sample", "\n", "self", ".", "normalizer", "=", "self", ".", "_get_normalize", "(", "opt", ")", "\n", "self", ".", "denormalizer", "=", "self", ".", "_get_denormalize", "(", "opt", ")", "\n", "self", ".", "device", "=", "opt", ".", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.STRIP.normalize": [[102, 106], ["STRIP.STRIP.normalizer"], "methods", ["None"], ["", "def", "normalize", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "normalizer", ":", "\n", "            ", "x", "=", "self", ".", "normalizer", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.STRIP.denormalize": [[107, 111], ["STRIP.STRIP.denormalizer"], "methods", ["None"], ["", "def", "denormalize", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "denormalizer", ":", "\n", "            ", "x", "=", "self", ".", "denormalizer", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.STRIP.__call__": [[112, 114], ["STRIP.STRIP._get_entropy"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.STRIP._get_entropy"], ["", "def", "__call__", "(", "self", ",", "background", ",", "dataset", ",", "classifier", ")", ":", "\n", "        ", "return", "self", ".", "_get_entropy", "(", "background", ",", "dataset", ",", "classifier", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.create_backdoor": [[116, 123], ["torch.clamp", "torch.clamp", "torch.grid_sample", "torch.clamp.repeat"], "function", ["None"], ["", "", "def", "create_backdoor", "(", "inputs", ",", "identity_grid", ",", "noise_grid", ",", "opt", ")", ":", "\n", "    ", "bs", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "grid_temps", "=", "(", "identity_grid", "+", "opt", ".", "s", "*", "noise_grid", "/", "opt", ".", "input_height", ")", "*", "opt", ".", "grid_rescale", "\n", "grid_temps", "=", "torch", ".", "clamp", "(", "grid_temps", ",", "-", "1", ",", "1", ")", "\n", "\n", "bd_inputs", "=", "F", ".", "grid_sample", "(", "inputs", ",", "grid_temps", ".", "repeat", "(", "bs", ",", "1", ",", "1", ",", "1", ")", ",", "align_corners", "=", "True", ")", "\n", "return", "bd_inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.strip": [[125, 196], ["os.path.join", "os.path.join", "os.path.join", "torch.load", "torch.load", "ResNet18().to.load_state_dict", "ResNet18().to.requires_grad_", "ResNet18().to.eval", "ResNet18().to.to", "utils.dataloader.get_dataset", "utils.dataloader.get_dataloader", "networks.models.Denormalizer", "STRIP.STRIP", "networks.models.NetC_MNIST().to", "print", "next", "inputs.to.to", "STRIP.create_backdoor", "np.clip().astype().transpose.detach().cpu().numpy", "numpy.clip().astype().transpose", "range", "range", "print", "range", "classifier_models.PreActResNet18().to", "iter", "networks.models.Denormalizer.", "STRIP.", "list_entropy_trojan.append", "utils.utils.progress_bar", "STRIP.", "list_entropy_benign.append", "STRIP.", "list_entropy_benign.append", "utils.utils.progress_bar", "networks.models.NetC_MNIST", "classifier_models.ResNet18().to", "Exception", "np.clip().astype().transpose.detach().cpu", "numpy.clip().astype", "classifier_models.PreActResNet18", "classifier_models.ResNet18", "np.clip().astype().transpose.detach", "numpy.clip"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.eval", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.get_dataset", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.get_dataloader", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.create_backdoor", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.progress_bar", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.progress_bar", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet18", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.ResNet18"], ["", "def", "strip", "(", "opt", ",", "mode", "=", "\"clean\"", ")", ":", "\n", "\n", "# Prepare pretrained classifier", "\n", "    ", "if", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "netC", "=", "NetC_MNIST", "(", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"cifar10\"", "or", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "netC", "=", "PreActResNet18", "(", "num_classes", "=", "opt", ".", "num_classes", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "        ", "netC", "=", "ResNet18", "(", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid dataset\"", ")", "\n", "\n", "# Load pretrained model", "\n", "", "mode", "=", "opt", ".", "attack_mode", "\n", "opt", ".", "ckpt_folder", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoints", ",", "opt", ".", "dataset", ")", "\n", "opt", ".", "ckpt_path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "ckpt_folder", ",", "\"{}_{}_morph.pth.tar\"", ".", "format", "(", "opt", ".", "dataset", ",", "mode", ")", ")", "\n", "opt", ".", "log_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "ckpt_folder", ",", "\"log_dir\"", ")", "\n", "\n", "state_dict", "=", "torch", ".", "load", "(", "opt", ".", "ckpt_path", ")", "\n", "netC", ".", "load_state_dict", "(", "state_dict", "[", "\"netC\"", "]", ")", "\n", "if", "mode", "!=", "\"clean\"", ":", "\n", "        ", "identity_grid", "=", "state_dict", "[", "\"identity_grid\"", "]", "\n", "noise_grid", "=", "state_dict", "[", "\"noise_grid\"", "]", "\n", "", "netC", ".", "requires_grad_", "(", "False", ")", "\n", "netC", ".", "eval", "(", ")", "\n", "netC", ".", "to", "(", "opt", ".", "device", ")", "\n", "\n", "# Prepare test set", "\n", "testset", "=", "get_dataset", "(", "opt", ",", "train", "=", "False", ")", "\n", "opt", ".", "bs", "=", "opt", ".", "n_test", "\n", "test_dataloader", "=", "get_dataloader", "(", "opt", ",", "train", "=", "False", ")", "\n", "denormalizer", "=", "Denormalizer", "(", "opt", ")", "\n", "\n", "# STRIP detector", "\n", "strip_detector", "=", "STRIP", "(", "opt", ")", "\n", "\n", "# Entropy list", "\n", "list_entropy_trojan", "=", "[", "]", "\n", "list_entropy_benign", "=", "[", "]", "\n", "\n", "if", "mode", "==", "\"attack\"", ":", "\n", "# Testing with perturbed data", "\n", "        ", "print", "(", "\"Testing with bd data !!!!\"", ")", "\n", "inputs", ",", "targets", "=", "next", "(", "iter", "(", "test_dataloader", ")", ")", "\n", "inputs", "=", "inputs", ".", "to", "(", "opt", ".", "device", ")", "\n", "bd_inputs", "=", "create_backdoor", "(", "inputs", ",", "identity_grid", ",", "noise_grid", ",", "opt", ")", "\n", "\n", "bd_inputs", "=", "denormalizer", "(", "bd_inputs", ")", "*", "255.0", "\n", "bd_inputs", "=", "bd_inputs", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "bd_inputs", "=", "np", ".", "clip", "(", "bd_inputs", ",", "0", ",", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "for", "index", "in", "range", "(", "opt", ".", "n_test", ")", ":", "\n", "            ", "background", "=", "bd_inputs", "[", "index", "]", "\n", "entropy", "=", "strip_detector", "(", "background", ",", "testset", ",", "netC", ")", "\n", "list_entropy_trojan", ".", "append", "(", "entropy", ")", "\n", "progress_bar", "(", "index", ",", "opt", ".", "n_test", ")", "\n", "\n", "# Testing with clean data", "\n", "", "for", "index", "in", "range", "(", "opt", ".", "n_test", ")", ":", "\n", "            ", "background", ",", "_", "=", "testset", "[", "index", "]", "\n", "entropy", "=", "strip_detector", "(", "background", ",", "testset", ",", "netC", ")", "\n", "list_entropy_benign", ".", "append", "(", "entropy", ")", "\n", "", "", "else", ":", "\n", "# Testing with clean data", "\n", "        ", "print", "(", "\"Testing with clean data !!!!\"", ")", "\n", "for", "index", "in", "range", "(", "opt", ".", "n_test", ")", ":", "\n", "            ", "background", ",", "_", "=", "testset", "[", "index", "]", "\n", "entropy", "=", "strip_detector", "(", "background", ",", "testset", ",", "netC", ")", "\n", "list_entropy_benign", ".", "append", "(", "entropy", ")", "\n", "progress_bar", "(", "index", ",", "opt", ".", "n_test", ")", "\n", "\n", "", "", "return", "list_entropy_trojan", ",", "list_entropy_benign", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.main": [[198, 267], ["config.get_argument().parse_args", "range", "os.path.join", "os.path.join", "os.path.join", "min", "print", "STRIP.strip", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "open", "range", "f.write", "range", "print", "print", "config.get_argument", "len", "len", "f.write", "f.write", "f.write", "f.write", "Exception", "len", "len"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.strip", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.config.get_argument"], ["", "def", "main", "(", ")", ":", "\n", "    ", "opt", "=", "get_argument", "(", ")", ".", "parse_args", "(", ")", "\n", "if", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "28", "\n", "opt", ".", "input_width", "=", "28", "\n", "opt", ".", "input_channel", "=", "1", "\n", "opt", ".", "num_classes", "=", "10", "\n", "", "elif", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "32", "\n", "opt", ".", "input_width", "=", "32", "\n", "opt", ".", "input_channel", "=", "3", "\n", "opt", ".", "num_classes", "=", "10", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "32", "\n", "opt", ".", "input_width", "=", "32", "\n", "opt", ".", "input_channel", "=", "3", "\n", "opt", ".", "num_classes", "=", "43", "\n", "", "elif", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "64", "\n", "opt", ".", "input_width", "=", "64", "\n", "opt", ".", "input_channel", "=", "3", "\n", "opt", ".", "num_classes", "=", "8", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid dataset\"", ")", "\n", "\n", "", "if", "\"2\"", "in", "opt", ".", "attack_mode", ":", "\n", "        ", "mode", "=", "\"attack\"", "\n", "", "else", ":", "\n", "        ", "mode", "=", "\"clean\"", "\n", "\n", "", "lists_entropy_trojan", "=", "[", "]", "\n", "lists_entropy_benign", "=", "[", "]", "\n", "for", "test_round", "in", "range", "(", "opt", ".", "test_rounds", ")", ":", "\n", "        ", "list_entropy_trojan", ",", "list_entropy_benign", "=", "strip", "(", "opt", ",", "mode", ")", "\n", "lists_entropy_trojan", "+=", "list_entropy_trojan", "\n", "lists_entropy_benign", "+=", "list_entropy_benign", "\n", "\n", "# Save result to file", "\n", "", "result_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "results", ",", "opt", ".", "dataset", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "result_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "result_dir", ")", "\n", "", "result_path", "=", "os", ".", "path", ".", "join", "(", "result_dir", ",", "opt", ".", "attack_mode", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "result_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "result_path", ")", "\n", "", "result_path", "=", "os", ".", "path", ".", "join", "(", "\"{}_{}_output.txt\"", ".", "format", "(", "opt", ".", "dataset", ",", "opt", ".", "attack_mode", ")", ")", "\n", "\n", "with", "open", "(", "result_path", ",", "\"w+\"", ")", "as", "f", ":", "\n", "        ", "for", "index", "in", "range", "(", "len", "(", "lists_entropy_trojan", ")", ")", ":", "\n", "            ", "if", "index", "<", "len", "(", "lists_entropy_trojan", ")", "-", "1", ":", "\n", "                ", "f", ".", "write", "(", "\"{} \"", ".", "format", "(", "lists_entropy_trojan", "[", "index", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "f", ".", "write", "(", "\"{}\"", ".", "format", "(", "lists_entropy_trojan", "[", "index", "]", ")", ")", "\n", "\n", "", "", "f", ".", "write", "(", "\"\\n\"", ")", "\n", "\n", "for", "index", "in", "range", "(", "len", "(", "lists_entropy_benign", ")", ")", ":", "\n", "            ", "if", "index", "<", "len", "(", "lists_entropy_benign", ")", "-", "1", ":", "\n", "                ", "f", ".", "write", "(", "\"{} \"", ".", "format", "(", "lists_entropy_benign", "[", "index", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "f", ".", "write", "(", "\"{}\"", ".", "format", "(", "lists_entropy_benign", "[", "index", "]", ")", ")", "\n", "\n", "", "", "", "min_entropy", "=", "min", "(", "lists_entropy_trojan", "+", "lists_entropy_benign", ")", "\n", "\n", "# Determining", "\n", "print", "(", "\"Min entropy trojan: {}, Detection boundary: {}\"", ".", "format", "(", "min_entropy", ",", "opt", ".", "detection_boundary", ")", ")", "\n", "if", "min_entropy", "<", "opt", ".", "detection_boundary", ":", "\n", "        ", "print", "(", "\"A backdoored model\\n\"", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Not a backdoor model\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.config.get_argument": [[4, 42], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["def", "get_arguments", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--data_root\"", ",", "type", "=", "str", ",", "default", "=", "\"/home/ubuntu/temps/\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--checkpoints\"", ",", "type", "=", "str", ",", "default", "=", "\"./checkpoints\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--temps\"", ",", "type", "=", "str", ",", "default", "=", "\"./temps\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--device\"", ",", "type", "=", "str", ",", "default", "=", "\"cuda\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--continue_training\"", ",", "action", "=", "\"store_true\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--dataset\"", ",", "type", "=", "str", ",", "default", "=", "\"cifar10\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--attack_mode\"", ",", "type", "=", "str", ",", "default", "=", "\"all2one\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--bs\"", ",", "type", "=", "int", ",", "default", "=", "128", ")", "\n", "parser", ".", "add_argument", "(", "\"--lr_C\"", ",", "type", "=", "float", ",", "default", "=", "1e-2", ")", "\n", "parser", ".", "add_argument", "(", "\"--schedulerC_milestones\"", ",", "type", "=", "list", ",", "default", "=", "[", "100", ",", "200", ",", "300", ",", "400", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--schedulerC_lambda\"", ",", "type", "=", "float", ",", "default", "=", "0.1", ")", "\n", "parser", ".", "add_argument", "(", "\"--n_iters\"", ",", "type", "=", "int", ",", "default", "=", "1000", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_workers\"", ",", "type", "=", "float", ",", "default", "=", "6", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--target_label\"", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\"--pc\"", ",", "type", "=", "float", ",", "default", "=", "0.1", ")", "\n", "parser", ".", "add_argument", "(", "\"--cross_ratio\"", ",", "type", "=", "float", ",", "default", "=", "2", ")", "# rho_a = pc, rho_n = pc * cross_ratio", "\n", "\n", "parser", ".", "add_argument", "(", "\"--random_rotation\"", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "\"--random_crop\"", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--s\"", ",", "type", "=", "float", ",", "default", "=", "0.5", ")", "\n", "parser", ".", "add_argument", "(", "\"--k\"", ",", "type", "=", "int", ",", "default", "=", "4", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--grid-rescale\"", ",", "type", "=", "float", ",", "default", "=", "1", "\n", ")", "# scale grid values to avoid pixel values going out of [-1, 1]. For example, grid-rescale = 0.98", "\n", "\n", "return", "parser", "\n", "", ""]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.neural_cleanse.create_dir": [[10, 20], ["path_dir.strip().split", "path_dir.strip().split.remove", "os.path.join", "path_dir.strip", "os.mkdir"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.STRIP.STRIP.strip"], ["def", "create_dir", "(", "path_dir", ")", ":", "\n", "    ", "list_subdir", "=", "path_dir", ".", "strip", "(", "\".\"", ")", ".", "split", "(", "\"/\"", ")", "\n", "list_subdir", ".", "remove", "(", "\"\"", ")", "\n", "base_dir", "=", "\"./\"", "\n", "for", "subdir", "in", "list_subdir", ":", "\n", "        ", "base_dir", "=", "os", ".", "path", ".", "join", "(", "base_dir", ",", "subdir", ")", "\n", "try", ":", "\n", "            ", "os", ".", "mkdir", "(", "base_dir", ")", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.neural_cleanse.outlier_detection": [[22, 62], ["print", "print", "torch.median", "print", "print", "print", "torch.median", "torch.abs", "print", "print", "os.path.join", "len", "sorted", "torch.abs", "open", "f.write", "f.write", "sorted.append", "torch.min", "str", "torch.abs", "l1_norm_list.cpu().numpy", "str", "min_mad.cpu().numpy", "l1_norm_list.cpu", "str", "str", "mad.cpu().numpy", "min_mad.cpu", "torch.median.cpu().numpy", "mad.cpu", "torch.median.cpu"], "function", ["None"], ["", "", "", "def", "outlier_detection", "(", "l1_norm_list", ",", "idx_mapping", ",", "opt", ")", ":", "\n", "    ", "print", "(", "\"-\"", "*", "30", ")", "\n", "print", "(", "\"Determining whether model is backdoor\"", ")", "\n", "consistency_constant", "=", "1.4826", "\n", "median", "=", "torch", ".", "median", "(", "l1_norm_list", ")", "\n", "mad", "=", "consistency_constant", "*", "torch", ".", "median", "(", "torch", ".", "abs", "(", "l1_norm_list", "-", "median", ")", ")", "\n", "min_mad", "=", "torch", ".", "abs", "(", "torch", ".", "min", "(", "l1_norm_list", ")", "-", "median", ")", "/", "mad", "\n", "\n", "print", "(", "\"Median: {}, MAD: {}\"", ".", "format", "(", "median", ",", "mad", ")", ")", "\n", "print", "(", "\"Anomaly index: {}\"", ".", "format", "(", "min_mad", ")", ")", "\n", "\n", "if", "min_mad", "<", "2", ":", "\n", "        ", "print", "(", "\"Not a backdoor model\"", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"This is a backdoor model\"", ")", "\n", "\n", "", "if", "opt", ".", "to_file", ":", "\n", "# result_path = os.path.join(opt.result, opt.saving_prefix, opt.dataset)", "\n", "        ", "output_path", "=", "os", ".", "path", ".", "join", "(", "\n", "result_path", ",", "\"{}_{}_output.txt\"", ".", "format", "(", "opt", ".", "attack_mode", ",", "opt", ".", "dataset", ",", "opt", ".", "attack_mode", ")", "\n", ")", "\n", "with", "open", "(", "output_path", ",", "\"a+\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "\n", "str", "(", "median", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "+", "\", \"", "+", "str", "(", "mad", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "+", "\", \"", "+", "str", "(", "min_mad", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "+", "\"\\n\"", "\n", ")", "\n", "l1_norm_list_to_save", "=", "[", "str", "(", "value", ")", "for", "value", "in", "l1_norm_list", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", "\n", "f", ".", "write", "(", "\", \"", ".", "join", "(", "l1_norm_list_to_save", ")", "+", "\"\\n\"", ")", "\n", "\n", "", "", "flag_list", "=", "[", "]", "\n", "for", "y_label", "in", "idx_mapping", ":", "\n", "        ", "if", "l1_norm_list", "[", "idx_mapping", "[", "y_label", "]", "]", ">", "median", ":", "\n", "            ", "continue", "\n", "", "if", "torch", ".", "abs", "(", "l1_norm_list", "[", "idx_mapping", "[", "y_label", "]", "]", "-", "median", ")", "/", "mad", ">", "2", ":", "\n", "            ", "flag_list", ".", "append", "(", "(", "y_label", ",", "l1_norm_list", "[", "idx_mapping", "[", "y_label", "]", "]", ")", ")", "\n", "\n", "", "", "if", "len", "(", "flag_list", ")", ">", "0", ":", "\n", "        ", "flag_list", "=", "sorted", "(", "flag_list", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ")", "\n", "\n", "", "print", "(", "\n", "\"Flagged label list: {}\"", ".", "format", "(", "\",\"", ".", "join", "(", "[", "\"{}: {}\"", ".", "format", "(", "y_label", ",", "l_norm", ")", "for", "y_label", ",", "l_norm", "in", "flag_list", "]", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.neural_cleanse.main": [[65, 131], ["config.get_argument().parse_args", "os.path.join", "neural_cleanse.create_dir", "os.path.join", "numpy.ones().astype", "numpy.ones().astype", "range", "print", "range", "torch.stack", "print", "print", "neural_cleanse.outlier_detection", "config.get_argument", "open", "f.write", "numpy.ones", "numpy.ones", "print", "detecting.train", "masks.append", "Exception", "open", "f.write", "f.write", "len", "torch.norm", "len", "Exception", "str"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.neural_cleanse.create_dir", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.neural_cleanse.outlier_detection", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.config.get_argument", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.train"], ["", "def", "main", "(", ")", ":", "\n", "\n", "    ", "opt", "=", "config", ".", "get_argument", "(", ")", ".", "parse_args", "(", ")", "\n", "\n", "if", "opt", ".", "dataset", "==", "\"mnist\"", "or", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "opt", ".", "total_label", "=", "10", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "opt", ".", "total_label", "=", "43", "\n", "", "elif", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "        ", "opt", ".", "total_label", "=", "8", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid Dataset\"", ")", "\n", "\n", "", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "32", "\n", "opt", ".", "input_width", "=", "32", "\n", "opt", ".", "input_channel", "=", "3", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "32", "\n", "opt", ".", "input_width", "=", "32", "\n", "opt", ".", "input_channel", "=", "3", "\n", "", "elif", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "28", "\n", "opt", ".", "input_width", "=", "28", "\n", "opt", ".", "input_channel", "=", "1", "\n", "", "elif", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "        ", "opt", ".", "input_height", "=", "64", "\n", "opt", ".", "input_width", "=", "64", "\n", "opt", ".", "input_channel", "=", "3", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid Dataset\"", ")", "\n", "\n", "", "result_path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "result", ",", "opt", ".", "dataset", ",", "opt", ".", "attack_mode", ")", "\n", "create_dir", "(", "result_path", ")", "\n", "opt", ".", "output_path", "=", "os", ".", "path", ".", "join", "(", "result_path", ",", "\"{}_{}_output_clean.txt\"", ".", "format", "(", "opt", ".", "attack_mode", ",", "opt", ".", "dataset", ")", ")", "\n", "if", "opt", ".", "to_file", ":", "\n", "        ", "with", "open", "(", "opt", ".", "output_path", ",", "\"w+\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "\"Output for cleanse:  - {}\"", ".", "format", "(", "opt", ".", "attack_mode", ",", "opt", ".", "dataset", ")", "+", "\"\\n\"", ")", "\n", "\n", "", "", "init_mask", "=", "np", ".", "ones", "(", "(", "1", ",", "opt", ".", "input_height", ",", "opt", ".", "input_width", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "init_pattern", "=", "np", ".", "ones", "(", "(", "opt", ".", "input_channel", ",", "opt", ".", "input_height", ",", "opt", ".", "input_width", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "for", "test", "in", "range", "(", "opt", ".", "n_times_test", ")", ":", "\n", "        ", "print", "(", "\"Test {}:\"", ".", "format", "(", "test", ")", ")", "\n", "if", "opt", ".", "to_file", ":", "\n", "            ", "with", "open", "(", "opt", ".", "output_path", ",", "\"a+\"", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "\"-\"", "*", "30", "+", "\"\\n\"", ")", "\n", "f", ".", "write", "(", "\"Test {}:\"", ".", "format", "(", "str", "(", "test", ")", ")", "+", "\"\\n\"", ")", "\n", "\n", "", "", "masks", "=", "[", "]", "\n", "idx_mapping", "=", "{", "}", "\n", "\n", "for", "target_label", "in", "range", "(", "opt", ".", "total_label", ")", ":", "\n", "            ", "print", "(", "\"----------------- Analyzing label: {} -----------------\"", ".", "format", "(", "target_label", ")", ")", "\n", "opt", ".", "target_label", "=", "target_label", "\n", "recorder", ",", "opt", "=", "train", "(", "opt", ",", "init_mask", ",", "init_pattern", ")", "\n", "\n", "mask", "=", "recorder", ".", "mask_best", "\n", "masks", ".", "append", "(", "mask", ")", "\n", "idx_mapping", "[", "target_label", "]", "=", "len", "(", "masks", ")", "-", "1", "\n", "\n", "", "l1_norm_list", "=", "torch", ".", "stack", "(", "[", "torch", ".", "norm", "(", "m", ",", "p", "=", "opt", ".", "use_norm", ")", "for", "m", "in", "masks", "]", ")", "\n", "print", "(", "\"{} labels found\"", ".", "format", "(", "len", "(", "l1_norm_list", ")", ")", ")", "\n", "print", "(", "\"Norm values: {}\"", ".", "format", "(", "l1_norm_list", ")", ")", "\n", "outlier_detection", "(", "l1_norm_list", ",", "idx_mapping", ",", "opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel.__init__": [[20, 29], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "detecting.RegressionModel._get_classifier", "detecting.RegressionModel._get_normalize", "detecting.RegressionModel._get_denormalize", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel._get_classifier", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel._get_normalize", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel._get_denormalize"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "init_mask", ",", "init_pattern", ")", ":", "\n", "        ", "self", ".", "_EPSILON", "=", "opt", ".", "EPSILON", "\n", "super", "(", "RegressionModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mask_tanh", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "init_mask", ")", ")", "\n", "self", ".", "pattern_tanh", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "init_pattern", ")", ")", "\n", "\n", "self", ".", "classifier", "=", "self", ".", "_get_classifier", "(", "opt", ")", "\n", "self", ".", "normalizer", "=", "self", ".", "_get_normalize", "(", "opt", ")", "\n", "self", ".", "denormalizer", "=", "self", ".", "_get_denormalize", "(", "opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel.forward": [[30, 37], ["detecting.RegressionModel.get_raw_mask", "detecting.RegressionModel.get_raw_pattern", "detecting.RegressionModel.classifier", "detecting.RegressionModel.normalizer", "detecting.RegressionModel.get_raw_pattern"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel.get_raw_mask", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel.get_raw_pattern", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel.get_raw_pattern"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "mask", "=", "self", ".", "get_raw_mask", "(", ")", "\n", "pattern", "=", "self", ".", "get_raw_pattern", "(", ")", "\n", "if", "self", ".", "normalizer", ":", "\n", "            ", "pattern", "=", "self", ".", "normalizer", "(", "self", ".", "get_raw_pattern", "(", ")", ")", "\n", "", "x", "=", "(", "1", "-", "mask", ")", "*", "x", "+", "mask", "*", "pattern", "\n", "return", "self", ".", "classifier", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel.get_raw_mask": [[38, 41], ["torch.nn.Tanh"], "methods", ["None"], ["", "def", "get_raw_mask", "(", "self", ")", ":", "\n", "        ", "mask", "=", "nn", ".", "Tanh", "(", ")", "(", "self", ".", "mask_tanh", ")", "\n", "return", "mask", "/", "(", "2", "+", "self", ".", "_EPSILON", ")", "+", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel.get_raw_pattern": [[42, 45], ["torch.nn.Tanh"], "methods", ["None"], ["", "def", "get_raw_pattern", "(", "self", ")", ":", "\n", "        ", "pattern", "=", "nn", ".", "Tanh", "(", ")", "(", "self", ".", "pattern_tanh", ")", "\n", "return", "pattern", "/", "(", "2", "+", "self", ".", "_EPSILON", ")", "+", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel._get_classifier": [[46, 68], ["os.path.join", "torch.load", "ResNet18.load_state_dict", "ResNet18.parameters", "ResNet18.eval", "ResNet18.to", "networks.models.NetC_MNIST", "PreActResNet18", "PreActResNet18", "ResNet18", "Exception"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.fine_pruning.fine-pruning-mnist.eval", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet18", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.preact_resnet.PreActResNet18", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.classifier_models.resnet.ResNet18"], ["", "def", "_get_classifier", "(", "self", ",", "opt", ")", ":", "\n", "        ", "if", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "            ", "classifier", "=", "NetC_MNIST", "(", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "            ", "classifier", "=", "PreActResNet18", "(", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", ":", "\n", "            ", "classifier", "=", "PreActResNet18", "(", "num_classes", "=", "43", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "            ", "classifier", "=", "ResNet18", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Invalid Dataset\"", ")", "\n", "# Load pretrained classifie", "\n", "", "ckpt_path", "=", "os", ".", "path", ".", "join", "(", "\n", "opt", ".", "checkpoints", ",", "opt", ".", "dataset", ",", "\"{}_{}_morph.pth.tar\"", ".", "format", "(", "opt", ".", "dataset", ",", "opt", ".", "attack_mode", ")", "\n", ")", "\n", "\n", "state_dict", "=", "torch", ".", "load", "(", "ckpt_path", ")", "\n", "classifier", ".", "load_state_dict", "(", "state_dict", "[", "\"netC\"", "]", ")", "\n", "for", "param", "in", "classifier", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "False", "\n", "", "classifier", ".", "eval", "(", ")", "\n", "return", "classifier", ".", "to", "(", "opt", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel._get_denormalize": [[69, 79], ["networks.models.Denormalize", "networks.models.Denormalize", "Exception"], "methods", ["None"], ["", "def", "_get_denormalize", "(", "self", ",", "opt", ")", ":", "\n", "        ", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "            ", "denormalizer", "=", "Denormalize", "(", "opt", ",", "[", "0.4914", ",", "0.4822", ",", "0.4465", "]", ",", "[", "0.247", ",", "0.243", ",", "0.261", "]", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "            ", "denormalizer", "=", "Denormalize", "(", "opt", ",", "[", "0.5", "]", ",", "[", "0.5", "]", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", "or", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "            ", "denormalizer", "=", "None", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Invalid dataset\"", ")", "\n", "", "return", "denormalizer", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel._get_normalize": [[80, 90], ["networks.models.Normalize", "networks.models.Normalize", "Exception"], "methods", ["None"], ["", "def", "_get_normalize", "(", "self", ",", "opt", ")", ":", "\n", "        ", "if", "opt", ".", "dataset", "==", "\"cifar10\"", ":", "\n", "            ", "normalizer", "=", "Normalize", "(", "opt", ",", "[", "0.4914", ",", "0.4822", ",", "0.4465", "]", ",", "[", "0.247", ",", "0.243", ",", "0.261", "]", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"mnist\"", ":", "\n", "            ", "normalizer", "=", "Normalize", "(", "opt", ",", "[", "0.5", "]", ",", "[", "0.5", "]", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "\"gtsrb\"", "or", "opt", ".", "dataset", "==", "\"celeba\"", ":", "\n", "            ", "normalizer", "=", "None", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Invalid dataset\"", ")", "\n", "", "return", "normalizer", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__": [[93, 117], ["super().__init__", "float"], "methods", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "# Best optimization results", "\n", "self", ".", "mask_best", "=", "None", "\n", "self", ".", "pattern_best", "=", "None", "\n", "self", ".", "reg_best", "=", "float", "(", "\"inf\"", ")", "\n", "\n", "# Logs and counters for adjusting balance cost", "\n", "self", ".", "logs", "=", "[", "]", "\n", "self", ".", "cost_set_counter", "=", "0", "\n", "self", ".", "cost_up_counter", "=", "0", "\n", "self", ".", "cost_down_counter", "=", "0", "\n", "self", ".", "cost_up_flag", "=", "False", "\n", "self", ".", "cost_down_flag", "=", "False", "\n", "\n", "# Counter for early stop", "\n", "self", ".", "early_stop_counter", "=", "0", "\n", "self", ".", "early_stop_reg_best", "=", "self", ".", "reg_best", "\n", "\n", "# Cost", "\n", "self", ".", "cost", "=", "opt", ".", "init_cost", "\n", "self", ".", "cost_multiplier_up", "=", "opt", ".", "cost_multiplier", "\n", "self", ".", "cost_multiplier_down", "=", "opt", ".", "cost_multiplier", "**", "1.5", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.reset_state": [[118, 125], ["print"], "methods", ["None"], ["", "def", "reset_state", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "cost", "=", "opt", ".", "init_cost", "\n", "self", ".", "cost_up_counter", "=", "0", "\n", "self", ".", "cost_down_counter", "=", "0", "\n", "self", ".", "cost_up_flag", "=", "False", "\n", "self", ".", "cost_down_flag", "=", "False", "\n", "print", "(", "\"Initialize cost to {:f}\"", ".", "format", "(", "self", ".", "cost", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.save_result_to_dir": [[126, 148], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "torchvision.utils.save_image", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "str", "os.path.exists", "os.makedirs"], "methods", ["None"], ["", "def", "save_result_to_dir", "(", "self", ",", "opt", ")", ":", "\n", "        ", "result_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "result", ",", "opt", ".", "dataset", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "result_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "result_dir", ")", "\n", "", "result_dir", "=", "os", ".", "path", ".", "join", "(", "result_dir", ",", "opt", ".", "attack_mode", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "result_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "result_dir", ")", "\n", "", "result_dir", "=", "os", ".", "path", ".", "join", "(", "result_dir", ",", "str", "(", "opt", ".", "target_label", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "result_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "result_dir", ")", "\n", "\n", "", "pattern_best", "=", "self", ".", "pattern_best", "\n", "mask_best", "=", "self", ".", "mask_best", "\n", "trigger", "=", "pattern_best", "*", "mask_best", "\n", "\n", "path_mask", "=", "os", ".", "path", ".", "join", "(", "result_dir", ",", "\"mask.png\"", ")", "\n", "path_pattern", "=", "os", ".", "path", ".", "join", "(", "result_dir", ",", "\"pattern.png\"", ")", "\n", "path_trigger", "=", "os", ".", "path", ".", "join", "(", "result_dir", ",", "\"trigger.png\"", ")", "\n", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "mask_best", ",", "path_mask", ",", "normalize", "=", "True", ")", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "pattern_best", ",", "path_pattern", ",", "normalize", "=", "True", ")", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "trigger", ",", "path_trigger", ",", "normalize", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.train": [[150, 172], ["utils.dataloader.get_dataloader", "RegressionModel().to", "torch.optim.Adam", "detecting.Recorder", "range", "detecting.Recorder.save_result_to_dir", "RegressionModel().to.parameters", "detecting.train_step", "detecting.RegressionModel"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.dataloader.get_dataloader", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.save_result_to_dir", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.train_step"], ["", "", "def", "train", "(", "opt", ",", "init_mask", ",", "init_pattern", ")", ":", "\n", "\n", "    ", "test_dataloader", "=", "get_dataloader", "(", "opt", ",", "train", "=", "False", ")", "\n", "\n", "# Build regression model", "\n", "regression_model", "=", "RegressionModel", "(", "opt", ",", "init_mask", ",", "init_pattern", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "\n", "# Set optimizer", "\n", "optimizerR", "=", "torch", ".", "optim", ".", "Adam", "(", "regression_model", ".", "parameters", "(", ")", ",", "lr", "=", "opt", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.9", ")", ")", "\n", "\n", "# Set recorder (for recording best result)", "\n", "recorder", "=", "Recorder", "(", "opt", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "opt", ".", "epoch", ")", ":", "\n", "        ", "early_stop", "=", "train_step", "(", "regression_model", ",", "optimizerR", ",", "test_dataloader", ",", "recorder", ",", "epoch", ",", "opt", ")", "\n", "if", "early_stop", ":", "\n", "            ", "break", "\n", "\n", "# Save result to dir", "\n", "", "", "recorder", ".", "save_result_to_dir", "(", "opt", ")", "\n", "\n", "return", "recorder", ",", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.train_step": [[174, 292], ["print", "torch.nn.CrossEntropyLoss", "enumerate", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "print", "optimizerR.zero_grad", "inputs.to.to", "regression_model", "nn.CrossEntropyLoss.", "torch.norm", "total_loss.backward", "optimizerR.step", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.sum().detach", "utils.utils.progress_bar", "regression_model.get_raw_mask().detach", "regression_model.get_raw_pattern().detach", "recorder.save_result_to_dir", "print", "min", "torch.ones().to", "regression_model.get_raw_mask", "cross_entropy.detach", "torch.norm.detach", "total_loss.detach", "len", "float", "print", "print", "regression_model.get_raw_mask().detach", "regression_model.get_raw_pattern().detach", "torch.sum().detach", "torch.sum", "regression_model.get_raw_mask", "regression_model.get_raw_pattern", "recorder.reset_state", "print", "torch.ones", "regression_model.get_raw_mask", "regression_model.get_raw_pattern", "torch.sum", "torch.argmax", "torch.argmax"], "function", ["home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.utils.utils.progress_bar", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.save_result_to_dir", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel.get_raw_mask", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel.get_raw_mask", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel.get_raw_pattern", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.Recorder.reset_state", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel.get_raw_mask", "home.repos.pwc.inspect_result.VinAIResearch_Warping-based_Backdoor_Attack-release.neural_cleanse.detecting.RegressionModel.get_raw_pattern"], ["", "def", "train_step", "(", "regression_model", ",", "optimizerR", ",", "dataloader", ",", "recorder", ",", "epoch", ",", "opt", ")", ":", "\n", "    ", "print", "(", "\"Epoch {} - Label: {} | {} - {}:\"", ".", "format", "(", "epoch", ",", "opt", ".", "target_label", ",", "opt", ".", "dataset", ",", "opt", ".", "attack_mode", ")", ")", "\n", "# Set losses", "\n", "cross_entropy", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "total_pred", "=", "0", "\n", "true_pred", "=", "0", "\n", "\n", "# Record loss for all mini-batches", "\n", "loss_ce_list", "=", "[", "]", "\n", "loss_reg_list", "=", "[", "]", "\n", "loss_list", "=", "[", "]", "\n", "loss_acc_list", "=", "[", "]", "\n", "\n", "# Set inner early stop flag", "\n", "inner_early_stop_flag", "=", "False", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "labels", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "# Forwarding and update model", "\n", "        ", "optimizerR", ".", "zero_grad", "(", ")", "\n", "\n", "inputs", "=", "inputs", ".", "to", "(", "opt", ".", "device", ")", "\n", "sample_num", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "total_pred", "+=", "sample_num", "\n", "target_labels", "=", "torch", ".", "ones", "(", "(", "sample_num", ")", ",", "dtype", "=", "torch", ".", "int64", ")", ".", "to", "(", "opt", ".", "device", ")", "*", "opt", ".", "target_label", "\n", "predictions", "=", "regression_model", "(", "inputs", ")", "\n", "\n", "loss_ce", "=", "cross_entropy", "(", "predictions", ",", "target_labels", ")", "\n", "loss_reg", "=", "torch", ".", "norm", "(", "regression_model", ".", "get_raw_mask", "(", ")", ",", "opt", ".", "use_norm", ")", "\n", "total_loss", "=", "loss_ce", "+", "recorder", ".", "cost", "*", "loss_reg", "\n", "total_loss", ".", "backward", "(", ")", "\n", "optimizerR", ".", "step", "(", ")", "\n", "\n", "# Record minibatch information to list", "\n", "minibatch_accuracy", "=", "torch", ".", "sum", "(", "torch", ".", "argmax", "(", "predictions", ",", "dim", "=", "1", ")", "==", "target_labels", ")", ".", "detach", "(", ")", "*", "100.0", "/", "sample_num", "\n", "loss_ce_list", ".", "append", "(", "loss_ce", ".", "detach", "(", ")", ")", "\n", "loss_reg_list", ".", "append", "(", "loss_reg", ".", "detach", "(", ")", ")", "\n", "loss_list", ".", "append", "(", "total_loss", ".", "detach", "(", ")", ")", "\n", "loss_acc_list", ".", "append", "(", "minibatch_accuracy", ")", "\n", "\n", "true_pred", "+=", "torch", ".", "sum", "(", "torch", ".", "argmax", "(", "predictions", ",", "dim", "=", "1", ")", "==", "target_labels", ")", ".", "detach", "(", ")", "\n", "progress_bar", "(", "batch_idx", ",", "len", "(", "dataloader", ")", ")", "\n", "\n", "", "loss_ce_list", "=", "torch", ".", "stack", "(", "loss_ce_list", ")", "\n", "loss_reg_list", "=", "torch", ".", "stack", "(", "loss_reg_list", ")", "\n", "loss_list", "=", "torch", ".", "stack", "(", "loss_list", ")", "\n", "loss_acc_list", "=", "torch", ".", "stack", "(", "loss_acc_list", ")", "\n", "\n", "avg_loss_ce", "=", "torch", ".", "mean", "(", "loss_ce_list", ")", "\n", "avg_loss_reg", "=", "torch", ".", "mean", "(", "loss_reg_list", ")", "\n", "avg_loss", "=", "torch", ".", "mean", "(", "loss_list", ")", "\n", "avg_loss_acc", "=", "torch", ".", "mean", "(", "loss_acc_list", ")", "\n", "\n", "# Check to save best mask or not", "\n", "if", "avg_loss_acc", ">=", "opt", ".", "atk_succ_threshold", "and", "avg_loss_reg", "<", "recorder", ".", "reg_best", ":", "\n", "        ", "recorder", ".", "mask_best", "=", "regression_model", ".", "get_raw_mask", "(", ")", ".", "detach", "(", ")", "\n", "recorder", ".", "pattern_best", "=", "regression_model", ".", "get_raw_pattern", "(", ")", ".", "detach", "(", ")", "\n", "recorder", ".", "reg_best", "=", "avg_loss_reg", "\n", "recorder", ".", "save_result_to_dir", "(", "opt", ")", "\n", "print", "(", "\" Updated !!!\"", ")", "\n", "\n", "# Show information", "\n", "", "print", "(", "\n", "\"  Result: Accuracy: {:.3f} | Cross Entropy Loss: {:.6f} | Reg Loss: {:.6f} | Reg best: {:.6f}\"", ".", "format", "(", "\n", "true_pred", "*", "100.0", "/", "total_pred", ",", "avg_loss_ce", ",", "avg_loss_reg", ",", "recorder", ".", "reg_best", "\n", ")", "\n", ")", "\n", "\n", "# Check early stop", "\n", "if", "opt", ".", "early_stop", ":", "\n", "        ", "if", "recorder", ".", "reg_best", "<", "float", "(", "\"inf\"", ")", ":", "\n", "            ", "if", "recorder", ".", "reg_best", ">=", "opt", ".", "early_stop_threshold", "*", "recorder", ".", "early_stop_reg_best", ":", "\n", "                ", "recorder", ".", "early_stop_counter", "+=", "1", "\n", "", "else", ":", "\n", "                ", "recorder", ".", "early_stop_counter", "=", "0", "\n", "\n", "", "", "recorder", ".", "early_stop_reg_best", "=", "min", "(", "recorder", ".", "early_stop_reg_best", ",", "recorder", ".", "reg_best", ")", "\n", "\n", "if", "(", "\n", "recorder", ".", "cost_down_flag", "\n", "and", "recorder", ".", "cost_up_flag", "\n", "and", "recorder", ".", "early_stop_counter", ">=", "opt", ".", "early_stop_patience", "\n", ")", ":", "\n", "            ", "print", "(", "\"Early_stop !!!\"", ")", "\n", "inner_early_stop_flag", "=", "True", "\n", "\n", "", "", "if", "not", "inner_early_stop_flag", ":", "\n", "# Check cost modification", "\n", "        ", "if", "recorder", ".", "cost", "==", "0", "and", "avg_loss_acc", ">=", "opt", ".", "atk_succ_threshold", ":", "\n", "            ", "recorder", ".", "cost_set_counter", "+=", "1", "\n", "if", "recorder", ".", "cost_set_counter", ">=", "opt", ".", "patience", ":", "\n", "                ", "recorder", ".", "reset_state", "(", "opt", ")", "\n", "", "", "else", ":", "\n", "            ", "recorder", ".", "cost_set_counter", "=", "0", "\n", "\n", "", "if", "avg_loss_acc", ">=", "opt", ".", "atk_succ_threshold", ":", "\n", "            ", "recorder", ".", "cost_up_counter", "+=", "1", "\n", "recorder", ".", "cost_down_counter", "=", "0", "\n", "", "else", ":", "\n", "            ", "recorder", ".", "cost_up_counter", "=", "0", "\n", "recorder", ".", "cost_down_counter", "+=", "1", "\n", "\n", "", "if", "recorder", ".", "cost_up_counter", ">=", "opt", ".", "patience", ":", "\n", "            ", "recorder", ".", "cost_up_counter", "=", "0", "\n", "print", "(", "\"Up cost from {} to {}\"", ".", "format", "(", "recorder", ".", "cost", ",", "recorder", ".", "cost", "*", "recorder", ".", "cost_multiplier_up", ")", ")", "\n", "recorder", ".", "cost", "*=", "recorder", ".", "cost_multiplier_up", "\n", "recorder", ".", "cost_up_flag", "=", "True", "\n", "\n", "", "elif", "recorder", ".", "cost_down_counter", ">=", "opt", ".", "patience", ":", "\n", "            ", "recorder", ".", "cost_down_counter", "=", "0", "\n", "print", "(", "\"Down cost from {} to {}\"", ".", "format", "(", "recorder", ".", "cost", ",", "recorder", ".", "cost", "/", "recorder", ".", "cost_multiplier_down", ")", ")", "\n", "recorder", ".", "cost", "/=", "recorder", ".", "cost_multiplier_down", "\n", "recorder", ".", "cost_down_flag", "=", "True", "\n", "\n", "# Save the final version", "\n", "", "if", "recorder", ".", "mask_best", "is", "None", ":", "\n", "            ", "recorder", ".", "mask_best", "=", "regression_model", ".", "get_raw_mask", "(", ")", ".", "detach", "(", ")", "\n", "recorder", ".", "pattern_best", "=", "regression_model", ".", "get_raw_pattern", "(", ")", ".", "detach", "(", ")", "\n", "\n", "", "", "return", "inner_early_stop_flag", "\n", "\n"]]}