{"home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.LungSeg.normalize": [[9, 16], ["None"], "function", ["None"], ["def", "normalize", "(", "img_arr", ")", ":", "\n", "    ", "max_hu", "=", "400.", "\n", "min_hu", "=", "-", "1000.", "\n", "img_arr", "[", "img_arr", ">", "max_hu", "]", "=", "max_hu", "\n", "img_arr", "[", "img_arr", "<", "min_hu", "]", "=", "min_hu", "\n", "img_arr_normalized", "=", "(", "img_arr", "-", "min_hu", ")", "/", "(", "max_hu", "-", "min_hu", ")", "\n", "return", "img_arr_normalized", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.LungSeg.resample_image": [[18, 31], ["sitk_img.GetOrigin", "sitk_img.GetDirection", "SimpleITK.ResampleImageFilter", "SimpleITK.ResampleImageFilter.SetOutputDirection", "SimpleITK.ResampleImageFilter.SetOutputOrigin", "SimpleITK.ResampleImageFilter.SetSize", "SimpleITK.ResampleImageFilter.SetOutputSpacing", "SimpleITK.ResampleImageFilter.Execute", "SimpleITK.ResampleImageFilter.SetInterpolator", "SimpleITK.ResampleImageFilter.SetInterpolator"], "function", ["None"], ["", "def", "resample_image", "(", "sitk_img", ",", "new_spacing", ",", "new_size", ",", "method", "=", "'Linear'", ")", ":", "\n", "    ", "origin", "=", "sitk_img", ".", "GetOrigin", "(", ")", "\n", "direction", "=", "sitk_img", ".", "GetDirection", "(", ")", "\n", "resampler", "=", "ResampleImageFilter", "(", ")", "\n", "resampler", ".", "SetOutputDirection", "(", "direction", ")", "\n", "resampler", ".", "SetOutputOrigin", "(", "origin", ")", "\n", "resampler", ".", "SetSize", "(", "new_size", ")", "\n", "if", "method", "==", "'Linear'", ":", "\n", "        ", "resampler", ".", "SetInterpolator", "(", "sitkLinear", ")", "\n", "", "else", ":", "\n", "        ", "resampler", ".", "SetInterpolator", "(", "sitkNearestNeighbor", ")", "\n", "", "resampler", ".", "SetOutputSpacing", "(", "new_spacing", ")", "\n", "return", "resampler", ".", "Execute", "(", "sitk_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.LungSeg.gaussian_smooth": [[33, 37], ["SimpleITK.SmoothingRecursiveGaussianImageFilter", "SimpleITK.SmoothingRecursiveGaussianImageFilter.SetSigma", "SimpleITK.SmoothingRecursiveGaussianImageFilter.Execute", "float"], "function", ["None"], ["", "def", "gaussian_smooth", "(", "sitk_img", ",", "sigma", "=", "1.5", ")", ":", "\n", "    ", "img_filter", "=", "SmoothingRecursiveGaussianImageFilter", "(", ")", "\n", "img_filter", ".", "SetSigma", "(", "float", "(", "sigma", ")", ")", "\n", "return", "img_filter", ".", "Execute", "(", "sitk_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.LungSeg.lung_segmentation": [[38, 146], ["numpy.asarray", "resample_image.GetSize", "resample_image.GetSpacing", "LungSeg.resample_image", "LungSeg.gaussian_smooth", "SimpleITK.GetArrayFromImage", "skimage.filters.threshold_otsu", "numpy.zeros", "range", "SimpleITK.GetArrayFromImage.copy", "skimage.morphology.binary_closing", "skimage.measure.label", "skimage.measure.regionprops", "measure.label.sort", "range", "SimpleITK.GetArrayFromImage.astype", "skimage.measure.label", "skimage.measure.regionprops", "measure.label.sort", "skimage.measure.label", "skimage.morphology.dilation", "SimpleITK.GetArrayFromImage.astype", "SimpleITK.GetImageFromArray", "SimpleITK.GetImageFromArray.CopyInformation", "LungSeg.resample_image", "SimpleITK.GetArrayFromImage", "numpy.where", "int", "int", "int", "numpy.sum", "int", "skimage.measure.label", "skimage.measure.regionprops", "numpy.sum", "skimage.measure.regionprops", "slice_labels.sort", "morphology.remove_small_objects.astype", "skimage.morphology.remove_small_objects", "numpy.where", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.zeros", "binary_img[].min", "binary_img[].max", "binary_img[].min", "binary_img[].max", "binary_img[].min", "binary_img[].max", "numpy.ceil", "numpy.ceil", "numpy.ceil", "skimage.measure.label", "skimage.measure.regionprops", "measure.label.index", "skimage.segmentation.clear_border", "numpy.ones", "len", "slice_labels.sort", "morphology.remove_small_objects.astype", "skimage.morphology.remove_small_objects", "int", "numpy.ones", "max", "int"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.LungSeg.resample_image", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.LungSeg.gaussian_smooth", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.LungSeg.resample_image"], ["", "def", "lung_segmentation", "(", "sitk_img", ",", "lower_bound", ",", "upper_bound", ")", ":", "\n", "    ", "new_spacing", "=", "np", ".", "asarray", "(", "[", "2.5", ",", "2.5", ",", "5", "]", ")", "\n", "orig_size", "=", "sitk_img", ".", "GetSize", "(", ")", "\n", "orig_spacing", "=", "sitk_img", ".", "GetSpacing", "(", ")", "\n", "new_size", "=", "[", "int", "(", "np", ".", "ceil", "(", "orig_size", "[", "0", "]", "/", "new_spacing", "[", "0", "]", "*", "orig_spacing", "[", "0", "]", ")", ")", ",", "\n", "int", "(", "np", ".", "ceil", "(", "orig_size", "[", "1", "]", "/", "new_spacing", "[", "1", "]", "*", "orig_spacing", "[", "1", "]", ")", ")", ",", "\n", "int", "(", "np", ".", "ceil", "(", "orig_size", "[", "2", "]", "/", "new_spacing", "[", "2", "]", "*", "orig_spacing", "[", "2", "]", ")", ")", "]", "\n", "new_sitk_img", "=", "resample_image", "(", "sitk_img", ",", "new_spacing", ",", "new_size", ")", "\n", "new_sitk_img", "=", "gaussian_smooth", "(", "new_sitk_img", ")", "\n", "imgs_to_process", "=", "GetArrayFromImage", "(", "new_sitk_img", ")", "\n", "\n", "imgs_to_process", "[", "imgs_to_process", "<", "lower_bound", "]", "=", "lower_bound", "\n", "binary_threshold", "=", "filters", ".", "threshold_otsu", "(", "imgs_to_process", ")", "\n", "img", "=", "imgs_to_process", "<", "binary_threshold", "\n", "\n", "old_bbox", "=", "imgs_to_process", ".", "shape", "\n", "del", "imgs_to_process", "\n", "temp", "=", "np", ".", "zeros", "(", "old_bbox", ")", "\n", "for", "c", "in", "range", "(", "old_bbox", "[", "0", "]", ")", ":", "\n", "        ", "labels", "=", "~", "img", "[", "c", ",", ":", ",", ":", "]", "\n", "if", "np", ".", "sum", "(", "labels", ")", ":", "\n", "            ", "labels", "=", "measure", ".", "label", "(", "labels", ",", "neighbors", "=", "4", ")", "\n", "regions", "=", "measure", ".", "regionprops", "(", "labels", ")", "\n", "labels", "=", "[", "r", ".", "area", "for", "r", "in", "regions", "]", "\n", "index", "=", "labels", ".", "index", "(", "max", "(", "labels", ")", ")", "\n", "bbox", "=", "regions", "[", "index", "]", ".", "bbox", "\n", "dist", "=", "1", "\n", "temp", "[", "c", ",", "bbox", "[", "0", "]", "+", "dist", ":", "bbox", "[", "2", "]", "-", "dist", ",", "bbox", "[", "1", "]", "+", "dist", ":", "bbox", "[", "3", "]", "-", "dist", "]", "=", "segmentation", ".", "clear_border", "(", "\n", "img", "[", "c", ",", "bbox", "[", "0", "]", "+", "dist", ":", "bbox", "[", "2", "]", "-", "dist", ",", "bbox", "[", "1", "]", "+", "dist", ":", "bbox", "[", "3", "]", "-", "dist", "]", ")", "\n", "", "", "img", "=", "temp", ">", "0", "\n", "del", "temp", "\n", "otsu_img", "=", "img", ".", "copy", "(", ")", "\n", "\n", "img", "=", "morphology", ".", "binary_closing", "(", "img", ",", "selem", "=", "np", ".", "ones", "(", "(", "1", ",", "2", ",", "2", ")", ")", ")", "\n", "\n", "labels", "=", "measure", ".", "label", "(", "img", ",", "neighbors", "=", "4", ")", "\n", "regions", "=", "measure", ".", "regionprops", "(", "labels", ")", "\n", "\n", "labels", "=", "[", "(", "r", ".", "area", ",", "r", ".", "bbox", ")", "for", "r", "in", "regions", "]", "\n", "labels", ".", "sort", "(", "reverse", "=", "True", ")", "\n", "max_bbox", "=", "labels", "[", "0", "]", "[", "1", "]", "\n", "max_bbox_zmin", "=", "max_bbox", "[", "0", "]", "\n", "max_bbox_zmax", "=", "max_bbox", "[", "3", "]", "-", "1", "\n", "for", "i", "in", "range", "(", "int", "(", "max_bbox_zmax", "-", "(", "max_bbox_zmax", "-", "max_bbox_zmin", ")", "/", "3", ")", ",", "max_bbox_zmax", ")", ":", "\n", "        ", "_slice", "=", "img", "[", "i", ",", ":", ",", ":", "]", "\n", "slice_labels", ",", "num", "=", "measure", ".", "label", "(", "_slice", ",", "return_num", "=", "True", ")", "\n", "regions", "=", "measure", ".", "regionprops", "(", "slice_labels", ")", "\n", "slice_labels", "=", "[", "[", "r", ".", "area", ",", "r", ".", "label", "]", "for", "r", "in", "regions", "]", "\n", "if", "len", "(", "slice_labels", ")", ">", "2", ":", "\n", "            ", "slice_labels", ".", "sort", "(", "reverse", "=", "True", ")", "\n", "max_area", "=", "slice_labels", "[", "0", "]", "[", "0", "]", "\n", "_slice", "=", "_slice", ".", "astype", "(", "np", ".", "bool", ")", "\n", "thresh", "=", "int", "(", "max_area", ")", "/", "4", "\n", "_slice", "=", "morphology", ".", "remove_small_objects", "(", "_slice", ",", "thresh", ")", "\n", "img", "[", "i", ",", ":", ",", ":", "]", "=", "_slice", "\n", "\n", "", "", "img", "=", "img", ".", "astype", "(", "np", ".", "bool", ")", "\n", "labels", "=", "measure", ".", "label", "(", "img", ",", "neighbors", "=", "4", ")", "\n", "regions", "=", "measure", ".", "regionprops", "(", "labels", ")", "\n", "labels", "=", "[", "(", "r", ".", "area", ",", "r", ".", "bbox", ",", "r", ".", "coords", ")", "for", "r", "in", "regions", "]", "\n", "labels", ".", "sort", "(", "reverse", "=", "True", ")", "\n", "max_area", "=", "labels", "[", "0", "]", "[", "0", "]", "\n", "max_bbox", "=", "labels", "[", "0", "]", "[", "1", "]", "\n", "max_bbox_zmin", "=", "max_bbox", "[", "0", "]", "\n", "max_bbox_zmax", "=", "max_bbox", "[", "3", "]", "-", "1", "\n", "for", "area", ",", "bbox", ",", "coords", "in", "labels", ":", "\n", "        ", "region_center_z", "=", "(", "bbox", "[", "0", "]", "+", "bbox", "[", "3", "]", ")", "/", "2", "\n", "if", "area", ">", "max_area", "/", "2", ":", "\n", "            ", "continue", "\n", "", "if", "region_center_z", ">", "max_bbox_zmax", "or", "region_center_z", "<", "max_bbox_zmin", ":", "\n", "            ", "img", "[", "coords", "[", ":", ",", "0", "]", ",", "coords", "[", ":", ",", "1", "]", ",", "coords", "[", ":", ",", "2", "]", "]", "=", "0", "\n", "", "", "_slice", "=", "np", ".", "sum", "(", "img", ",", "axis", "=", "0", ")", ">", "0", "\n", "slice_labels", ",", "num", "=", "measure", ".", "label", "(", "_slice", ",", "return_num", "=", "True", ")", "\n", "if", "num", ">", "1", ":", "\n", "        ", "regions", "=", "measure", ".", "regionprops", "(", "slice_labels", ")", "\n", "slice_labels", "=", "[", "r", ".", "area", "for", "r", "in", "regions", "]", "\n", "slice_labels", ".", "sort", "(", "reverse", "=", "True", ")", "\n", "max_area", "=", "slice_labels", "[", "0", "]", "\n", "_slice", "=", "_slice", ".", "astype", "(", "np", ".", "bool", ")", "\n", "thresh", "=", "int", "(", "max_area", ")", "/", "4", "\n", "_slice", "=", "morphology", ".", "remove_small_objects", "(", "_slice", ",", "thresh", ")", "\n", "bbox", "=", "np", ".", "where", "(", "_slice", ")", "\n", "x_min", "=", "np", ".", "min", "(", "bbox", "[", "1", "]", ")", "\n", "x_max", "=", "np", ".", "max", "(", "bbox", "[", "1", "]", ")", "\n", "y_min", "=", "np", ".", "min", "(", "bbox", "[", "0", "]", ")", "\n", "y_max", "=", "np", ".", "max", "(", "bbox", "[", "0", "]", ")", "\n", "temp", "=", "np", ".", "zeros", "(", "img", ".", "shape", ")", "\n", "temp", "[", ":", ",", "y_min", ":", "y_max", ",", "x_min", ":", "x_max", "]", "=", "img", "[", ":", ",", "y_min", ":", "y_max", ",", "x_min", ":", "x_max", "]", "\n", "img", "=", "temp", "\n", "\n", "", "img", "=", "img", ">", "0", "\n", "del", "otsu_img", "\n", "\n", "img", "=", "morphology", ".", "dilation", "(", "img", ",", "selem", "=", "np", ".", "ones", "(", "(", "2", ",", "3", ",", "3", ")", ")", ")", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "uint32", ")", "\n", "\n", "mask_img", "=", "GetImageFromArray", "(", "img", ")", "\n", "mask_img", ".", "CopyInformation", "(", "new_sitk_img", ")", "\n", "sitk_img", "=", "resample_image", "(", "mask_img", ",", "orig_spacing", ",", "orig_size", ",", "'near'", ")", "\n", "img", "=", "GetArrayFromImage", "(", "sitk_img", ")", "\n", "\n", "binary_img", "=", "np", ".", "where", "(", "img", ")", "\n", "z_min", ",", "z_max", "=", "(", "binary_img", "[", "0", "]", ".", "min", "(", ")", ",", "binary_img", "[", "0", "]", ".", "max", "(", ")", ")", "\n", "y_min", ",", "y_max", "=", "(", "binary_img", "[", "1", "]", ".", "min", "(", ")", ",", "binary_img", "[", "1", "]", ".", "max", "(", ")", ")", "\n", "x_min", ",", "x_max", "=", "(", "binary_img", "[", "2", "]", ".", "min", "(", ")", ",", "binary_img", "[", "2", "]", ".", "max", "(", ")", ")", "\n", "bbox", "=", "[", "z_min", ",", "y_min", ",", "x_min", ",", "z_max", ",", "y_max", ",", "x_max", "]", "\n", "\n", "return", "img", ",", "bbox", "\n", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.testDataset.__init__": [[119, 126], ["pathlib.Path", "list", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "pathlib.Path.glob"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "images", ")", ":", "\n", "        ", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "images_path", "=", "Path", "(", "images", ")", "\n", "self", ".", "filelist", "=", "list", "(", "images_path", ".", "glob", "(", "\"*.jpg\"", ")", ")", "\n", "self", ".", "to_tensor", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "self", ".", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", ",", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.testDataset.__len__": [[127, 129], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "filelist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.testDataset.__getitem__": [[130, 136], ["PIL.Image.open", "inference.testDataset.normalize", "[].split", "inference.testDataset.to_tensor", "str().split", "str"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.normalize"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image_path", "=", "self", ".", "filelist", "[", "index", "]", "\n", "image_id", "=", "str", "(", "image_path", ")", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "image", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "image", "=", "self", ".", "normalize", "(", "self", ".", "to_tensor", "(", "image", ")", ")", "\n", "return", "image", ",", "image_id", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.resample_ct_image": [[34, 47], ["SimpleITK.ResampleImageFilter", "sitk.ResampleImageFilter.SetSize", "sitk.ResampleImageFilter.SetInterpolator", "sitk.ResampleImageFilter.SetOutputSpacing", "sitk.ResampleImageFilter.Execute", "sitk.ResampleImageFilter.SetDefaultPixelValue"], "function", ["None"], ["def", "resample_ct_image", "(", "image", ",", "new_size", ",", "new_spacing", ",", "interpolator", "=", "sitk", ".", "sitkLinear", ",", "min_value", "=", "None", ")", ":", "\n", "    ", "resample", "=", "sitk", ".", "ResampleImageFilter", "(", ")", "\n", "\n", "resample", ".", "SetSize", "(", "new_size", ")", "\n", "resample", ".", "SetInterpolator", "(", "interpolator", ")", "\n", "resample", ".", "SetOutputSpacing", "(", "new_spacing", ")", "\n", "\n", "if", "min_value", ":", "\n", "        ", "resample", ".", "SetDefaultPixelValue", "(", "min_value", ")", "\n", "\n", "", "new_image", "=", "resample", ".", "Execute", "(", "image", ")", "\n", "\n", "return", "new_image", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.resample_ct_image_with_shape": [[48, 58], ["print", "SimpleITK.GetImageFromArray", "sitk.GetImageFromArray.SetSpacing", "inference.resample_ct_image"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.resample_ct_image"], ["", "def", "resample_ct_image_with_shape", "(", "image", ",", "spacing", ",", "new_shape", ",", "interpolator", "=", "sitk", ".", "sitkLinear", ",", "min_value", "=", "None", ")", ":", "\n", "    ", "size", "=", "[", "image", ".", "shape", "[", "2", "]", ",", "image", ".", "shape", "[", "1", "]", ",", "image", ".", "shape", "[", "0", "]", "]", "\n", "\n", "new_spacing", "=", "[", "size", "[", "0", "]", "*", "spacing", "[", "0", "]", "/", "new_shape", "[", "0", "]", ",", "\n", "size", "[", "1", "]", "*", "spacing", "[", "1", "]", "/", "new_shape", "[", "1", "]", ",", "\n", "size", "[", "2", "]", "*", "spacing", "[", "2", "]", "/", "new_shape", "[", "2", "]", "]", "\n", "print", "(", "new_spacing", ")", "\n", "image", "=", "sitk", ".", "GetImageFromArray", "(", "image", ")", "\n", "image", ".", "SetSpacing", "(", "spacing", ")", "\n", "return", "resample_ct_image", "(", "image", ",", "new_shape", ",", "new_spacing", ",", "interpolator", "=", "interpolator", ",", "min_value", "=", "min_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.resample_ct_image_with_spacing": [[59, 68], ["SimpleITK.GetImageFromArray", "sitk.GetImageFromArray.SetSpacing", "inference.resample_ct_image", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.resample_ct_image"], ["", "def", "resample_ct_image_with_spacing", "(", "image", ",", "spacing", ",", "new_spacing", ",", "interpolator", "=", "sitk", ".", "sitkLinear", ",", "min_value", "=", "None", ")", ":", "\n", "    ", "size", "=", "[", "image", ".", "shape", "[", "2", "]", ",", "image", ".", "shape", "[", "1", "]", ",", "image", ".", "shape", "[", "0", "]", "]", "\n", "\n", "new_size", "=", "[", "int", "(", "size", "[", "0", "]", "*", "spacing", "[", "0", "]", "/", "new_spacing", "[", "0", "]", ")", ",", "\n", "int", "(", "size", "[", "1", "]", "*", "spacing", "[", "1", "]", "/", "new_spacing", "[", "1", "]", ")", ",", "\n", "int", "(", "size", "[", "2", "]", "*", "spacing", "[", "2", "]", "/", "new_spacing", "[", "2", "]", ")", "]", "\n", "image", "=", "sitk", ".", "GetImageFromArray", "(", "image", ")", "\n", "image", ".", "SetSpacing", "(", "spacing", ")", "\n", "return", "resample_ct_image", "(", "image", ",", "new_size", ",", "new_spacing", ",", "interpolator", "=", "interpolator", ",", "min_value", "=", "min_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.read_dcm_series": [[70, 77], ["SimpleITK.ImageSeriesReader", "sitk.ImageSeriesReader.MetaDataDictionaryArrayUpdateOn", "sitk.ImageSeriesReader.GetGDCMSeriesFileNames", "sitk.ImageSeriesReader.SetFileNames", "sitk.ImageSeriesReader.Execute"], "function", ["None"], ["", "def", "read_dcm_series", "(", "path", ")", ":", "\n", "    ", "reader", "=", "sitk", ".", "ImageSeriesReader", "(", ")", "\n", "reader", ".", "MetaDataDictionaryArrayUpdateOn", "(", ")", "\n", "dicom_names", "=", "reader", ".", "GetGDCMSeriesFileNames", "(", "path", ")", "\n", "reader", ".", "SetFileNames", "(", "dicom_names", ")", "\n", "image", "=", "reader", ".", "Execute", "(", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.calculate_metric_percase": [[78, 86], ["medpy.metric.binary.dc", "medpy.metric.binary.jc", "medpy.metric.binary.hd95", "medpy.metric.binary.asd"], "function", ["None"], ["", "def", "calculate_metric_percase", "(", "pred", ",", "gt", ")", ":", "\n", "    ", "dice", "=", "metric", ".", "binary", ".", "dc", "(", "pred", ",", "gt", ")", "\n", "jc", "=", "metric", ".", "binary", ".", "jc", "(", "pred", ",", "gt", ")", "\n", "hd", "=", "metric", ".", "binary", ".", "hd95", "(", "pred", ",", "gt", ")", "\n", "asd", "=", "metric", ".", "binary", ".", "asd", "(", "pred", ",", "gt", ")", "\n", "# asd = 0", "\n", "\n", "return", "dice", ",", "jc", ",", "hd", ",", "asd", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.get_patch_position": [[87, 110], ["inference.get_patch_position.get_anchors"], "function", ["None"], ["", "def", "get_patch_position", "(", "shape", ",", "window", ",", "stride", ")", ":", "\n", "    ", "patch_position", "=", "[", "]", "\n", "\n", "def", "get_anchors", "(", "axis_idx", ")", ":", "\n", "        ", "anchors", "=", "[", "anchor", "for", "anchor", "in", "range", "(", "0", ",", "shape", "[", "axis_idx", "]", "-", "window", "[", "axis_idx", "]", ",", "stride", "[", "axis_idx", "]", ")", "]", "\n", "cur", "=", "anchors", "[", "-", "1", "]", "+", "stride", "[", "axis_idx", "]", "\n", "if", "cur", "+", "window", "[", "axis_idx", "]", "<=", "shape", "[", "axis_idx", "]", ":", "\n", "            ", "anchors", ".", "append", "(", "cur", ")", "\n", "", "else", ":", "\n", "            ", "anchors", ".", "append", "(", "shape", "[", "axis_idx", "]", "-", "window", "[", "axis_idx", "]", ")", "\n", "\n", "", "return", "anchors", "\n", "\n", "", "x_anchors", "=", "get_anchors", "(", "2", ")", "\n", "y_anchors", "=", "get_anchors", "(", "1", ")", "\n", "z_anchors", "=", "get_anchors", "(", "0", ")", "\n", "\n", "for", "z", "in", "z_anchors", ":", "\n", "        ", "for", "y", "in", "y_anchors", ":", "\n", "            ", "for", "x", "in", "x_anchors", ":", "\n", "                ", "patch_position", ".", "append", "(", "(", "z", ",", "y", ",", "x", ")", ")", "\n", "\n", "", "", "", "return", "patch_position", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.normalize": [[112, 117], ["None"], "function", ["None"], ["", "def", "normalize", "(", "img", ",", "max", ",", "min", ")", ":", "\n", "    ", "img", "[", "img", ">", "max", "]", "=", "max", "\n", "img", "[", "img", "<", "min", "]", "=", "min", "\n", "image", "=", "(", "img", "-", "min", ")", "/", "(", "max", "-", "min", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.multi_scale_predict": [[137, 158], ["torch.Upsample", "torch.pad", "numpy.zeros", "len", "F.pad.size", "F.pad.size", "torch.interpolate", "nn.Upsample.", "upsample.data.cpu().numpy().squeeze", "math.ceil", "math.ceil", "model", "F.interpolate.flip", "nn.Upsample.", "model", "upsample.data.cpu().numpy", "upsample.flip", "upsample.data.cpu"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.flip", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.flip"], ["", "", "def", "multi_scale_predict", "(", "model", ",", "image", ",", "scales", ",", "num_classes", ",", "flip", "=", "True", ")", ":", "\n", "    ", "H", ",", "W", "=", "(", "image", ".", "size", "(", "2", ")", ",", "image", ".", "size", "(", "3", ")", ")", "\n", "upsize", "=", "(", "ceil", "(", "H", "/", "8", ")", "*", "8", ",", "ceil", "(", "W", "/", "8", ")", "*", "8", ")", "\n", "upsample", "=", "nn", ".", "Upsample", "(", "size", "=", "upsize", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "pad_h", ",", "pad_w", "=", "upsize", "[", "0", "]", "-", "H", ",", "upsize", "[", "1", "]", "-", "W", "\n", "image", "=", "F", ".", "pad", "(", "image", ",", "pad", "=", "(", "0", ",", "pad_w", ",", "0", ",", "pad_h", ")", ",", "mode", "=", "'reflect'", ")", "\n", "\n", "total_predictions", "=", "np", ".", "zeros", "(", "(", "num_classes", ",", "image", ".", "shape", "[", "2", "]", ",", "image", ".", "shape", "[", "3", "]", ")", ")", "\n", "\n", "for", "scale", "in", "scales", ":", "\n", "        ", "scaled_img", "=", "F", ".", "interpolate", "(", "image", ",", "scale_factor", "=", "scale", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "scaled_prediction", "=", "upsample", "(", "model", "(", "scaled_img", ")", ")", "\n", "\n", "if", "flip", ":", "\n", "            ", "fliped_img", "=", "scaled_img", ".", "flip", "(", "-", "1", ")", "\n", "fliped_predictions", "=", "upsample", "(", "model", "(", "fliped_img", ")", ")", "\n", "scaled_prediction", "=", "0.5", "*", "(", "fliped_predictions", ".", "flip", "(", "-", "1", ")", "+", "scaled_prediction", ")", "\n", "", "total_predictions", "+=", "scaled_prediction", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", "0", ")", "\n", "\n", "", "total_predictions", "/=", "len", "(", "scales", ")", "\n", "return", "total_predictions", "[", ":", ",", ":", "H", ",", ":", "W", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.predict": [[159, 165], ["model", "torch.softmax", "pred_mask.cpu().numpy.cpu().numpy", "pred_mask.cpu().numpy.cpu"], "function", ["None"], ["", "def", "predict", "(", "model", ",", "image", ",", "num_classes", ")", ":", "\n", "    ", "prediction", "=", "model", "(", "image", ")", "\n", "pred_mask", "=", "F", ".", "softmax", "(", "prediction", ",", "dim", "=", "1", ")", "\n", "pred_mask", "=", "pred_mask", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "return", "pred_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.cal_dice": [[166, 179], ["numpy.zeros", "range", "prediction_tmp.astype.astype", "label_tmp.astype.astype", "numpy.sum", "numpy.sum", "numpy.sum"], "function", ["None"], ["", "def", "cal_dice", "(", "prediction", ",", "label", ",", "num", "=", "2", ")", ":", "\n", "    ", "total_dice", "=", "np", ".", "zeros", "(", "num", "-", "1", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "num", ")", ":", "\n", "        ", "prediction_tmp", "=", "(", "prediction", "==", "i", ")", "\n", "label_tmp", "=", "(", "label", "==", "i", ")", "\n", "\n", "prediction_tmp", "=", "prediction_tmp", ".", "astype", "(", "np", ".", "float", ")", "\n", "label_tmp", "=", "label_tmp", ".", "astype", "(", "np", ".", "float", ")", "\n", "\n", "dice", "=", "2", "*", "np", ".", "sum", "(", "prediction_tmp", "*", "label_tmp", ")", "/", "(", "np", ".", "sum", "(", "prediction_tmp", ")", "+", "np", ".", "sum", "(", "label_tmp", ")", ")", "\n", "total_dice", "[", "i", "-", "1", "]", "+=", "dice", "\n", "\n", "", "return", "dice", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.dice_loss": [[180, 192], ["numpy.sum", "numpy.sum", "numpy.sum"], "function", ["None"], ["", "def", "dice_loss", "(", "input", ",", "target", ")", ":", "\n", "# N = target.size(0)", "\n", "    ", "smooth", "=", "1", "\n", "\n", "input_flat", "=", "input", "\n", "target_flat", "=", "target", "\n", "\n", "intersection", "=", "input_flat", "*", "target_flat", "\n", "\n", "loss", "=", "2", "*", "(", "np", ".", "sum", "(", "intersection", "+", "smooth", ")", "/", "(", "np", ".", "sum", "(", "input_flat", ")", "+", "np", ".", "sum", "(", "target_flat", ")", "+", "smooth", ")", ")", "\n", "loss", "=", "1", "-", "loss", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.main": [[193, 299], ["inference.parse_arguments", "json.load", "models.CCT", "torch.load", "torch.load", "torch.load", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel.state_dict", "checkpoint[].items", "model.state_dict.update", "torch.nn.DataParallel.load_state_dict", "torch.nn.DataParallel.eval", "torch.nn.DataParallel.cuda", "os.listdir", "print", "print", "print", "open", "os.listdir", "len", "print", "print", "print", "numpy.load", "numpy.load", "numpy.zeros_like", "inference.cal_dice", "print", "inference.calculate_metric_percase", "print", "pat_predict_result.append", "os.listdir", "len", "inference.get_patch_position", "numpy.zeros", "numpy.transpose", "torch.from_numpy().cuda.reshape().astype", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "numpy.asarray", "numpy.transpose", "os.listdir", "torch.no_grad", "torch.no_grad", "torch.no_grad", "inference.predict", "numpy.argmax", "torch.from_numpy().cuda.reshape", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().cuda.astype"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.parse_arguments", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.update", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.cal_dice", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.calculate_metric_percase", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.get_patch_position", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.predict"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_arguments", "(", ")", "\n", "\n", "# CONFIG", "\n", "assert", "args", ".", "config", "\n", "config", "=", "json", ".", "load", "(", "open", "(", "args", ".", "config", ")", ")", "\n", "scales", "=", "[", "0.5", ",", "0.75", ",", "1.0", ",", "1.25", ",", "1.5", "]", "\n", "\n", "num_classes", "=", "2", "\n", "\n", "# MODEL", "\n", "config", "[", "'model'", "]", "[", "'supervised'", "]", "=", "True", ";", "config", "[", "'model'", "]", "[", "'semi'", "]", "=", "False", "\n", "model", "=", "models", ".", "CCT", "(", "num_classes", "=", "num_classes", ",", "\n", "conf", "=", "config", "[", "'model'", "]", ",", "testing", "=", "True", ")", "\n", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "model", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "\n", "pretrained_dict_2", "=", "{", "}", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "for", "k", ",", "v", "in", "checkpoint", "[", "'state_dict'", "]", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "in", "model_dict", ":", "\n", "            ", "pretrained_dict_2", "[", "k", "]", "=", "v", "\n", "", "else", ":", "\n", "            ", "print", "(", "k", ")", "\n", "\n", "", "", "model_dict", ".", "update", "(", "pretrained_dict_2", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "test_path", "=", "args", ".", "data_path", "\n", "test_mask_path", "=", "args", ".", "mask_path", "\n", "\n", "window", "=", "[", "80", ",", "112", ",", "112", "]", "\n", "stride", "=", "[", "80", ",", "112", ",", "112", "]", "\n", "dice_test_all_avg", "=", "0", "\n", "pat_num", "=", "0", "\n", "\n", "pat_predict_result", "=", "[", "]", "\n", "\n", "\n", "count", "=", "0", "\n", "for", "data_path", "in", "os", ".", "listdir", "(", "test_path", ")", ":", "\n", "        ", "dice_test_avg", "=", "0", "\n", "if", "data_path", "==", "'test_val'", ":", "\n", "            ", "continue", "\n", "\n", "", "for", "pat", "in", "os", ".", "listdir", "(", "test_path", "+", "data_path", ")", ":", "\n", "            ", "print", "(", "pat", ")", "\n", "\n", "\n", "pat_img", "=", "np", ".", "load", "(", "test_path", "+", "data_path", "+", "'/'", "+", "pat", ")", "\n", "pat_mask", "=", "np", ".", "load", "(", "test_mask_path", "+", "data_path", "+", "'_mask'", "+", "'/'", "+", "pat", "[", ":", "-", "4", "]", "+", "'_mask.npy'", ")", "\n", "\n", "pat_pred", "=", "np", ".", "zeros_like", "(", "pat_img", ")", "\n", "\n", "try", ":", "\n", "                ", "patch_positions", "=", "get_patch_position", "(", "pat_img", ".", "shape", ",", "window", ",", "stride", ")", "\n", "", "except", ":", "\n", "                ", "continue", "\n", "", "for", "position", "in", "patch_positions", ":", "\n", "                ", "patch_img_arr", "=", "np", ".", "zeros", "(", "[", "window", "[", "0", "]", ",", "window", "[", "1", "]", ",", "window", "[", "2", "]", "]", ",", "dtype", "=", "'float32'", ")", "\n", "\n", "patch_z_min", "=", "position", "[", "0", "]", "\n", "patch_z_max", "=", "patch_z_min", "+", "window", "[", "0", "]", "\n", "patch_y_min", "=", "position", "[", "1", "]", "\n", "patch_y_max", "=", "patch_y_min", "+", "window", "[", "1", "]", "\n", "patch_x_min", "=", "position", "[", "2", "]", "\n", "patch_x_max", "=", "patch_x_min", "+", "window", "[", "2", "]", "\n", "patch_img_arr", "=", "pat_img", "[", "patch_z_min", ":", "patch_z_max", ",", "\n", "patch_y_min", ":", "patch_y_max", ",", "\n", "patch_x_min", ":", "patch_x_max", "]", "\n", "patch_img_arr", "=", "np", ".", "transpose", "(", "patch_img_arr", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "\n", "patch_img_arr", "=", "patch_img_arr", ".", "reshape", "(", "1", ",", "1", ",", "patch_img_arr", ".", "shape", "[", "0", "]", ",", "patch_img_arr", ".", "shape", "[", "1", "]", ",", "patch_img_arr", ".", "shape", "[", "2", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "patch_img_arr", "=", "torch", ".", "from_numpy", "(", "patch_img_arr", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "cuda", "(", ")", "\n", "\n", "# PREDICT", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "output_patch", "=", "predict", "(", "model", ",", "patch_img_arr", ",", "num_classes", ")", "\n", "output_patch", "=", "output_patch", "[", "0", "]", "\n", "", "pred_patch", "=", "np", ".", "asarray", "(", "np", ".", "argmax", "(", "output_patch", ",", "axis", "=", "0", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "pred_patch", "=", "np", ".", "transpose", "(", "pred_patch", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "pat_pred", "[", "patch_z_min", ":", "patch_z_max", ",", "patch_y_min", ":", "patch_y_max", ",", "patch_x_min", ":", "patch_x_max", "]", "=", "pred_patch", "\n", "\n", "", "dice_coef", "=", "cal_dice", "(", "pat_pred", ",", "pat_mask", ")", "\n", "dice_test_avg", "+=", "dice_coef", "\n", "print", "(", "'dice_coef'", ",", "dice_coef", ")", "\n", "\n", "metrix", "=", "calculate_metric_percase", "(", "pat_pred", ",", "pat_mask", "[", ":", "]", ")", "\n", "print", "(", "metrix", "[", "0", "]", ")", "\n", "pat_predict_result", ".", "append", "(", "[", "pat", ",", "metrix", "[", "0", "]", ",", "metrix", "[", "1", "]", ",", "metrix", "[", "2", "]", ",", "metrix", "[", "3", "]", "]", ")", "\n", "\n", "\n", "", "dice_test_all_avg", "+=", "dice_test_avg", "\n", "pat_num", "+=", "len", "(", "os", ".", "listdir", "(", "test_path", "+", "data_path", ")", ")", "\n", "dice_test_avg", "=", "dice_test_avg", "/", "len", "(", "os", ".", "listdir", "(", "test_path", "+", "data_path", ")", ")", "\n", "print", "(", "'test dataset'", "+", "data_path", "+", "'avg dice'", ",", "dice_test_avg", ")", "\n", "\n", "", "print", "(", "count", ")", "\n", "dice_test_all_avg", "=", "dice_test_all_avg", "/", "pat_num", "\n", "print", "(", "args", ".", "model", ")", "\n", "print", "(", "'test_all_dice'", ",", "dice_test_all_avg", ")", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.parse_arguments": [[302, 314], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["", "def", "parse_arguments", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PyTorch Training'", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "default", "=", "'./saved_semi_confi_1125_flip/CCT/config.json'", ",", "type", "=", "str", ",", "\n", "help", "=", "'Path to the config file'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "default", "=", "'./saved_semi_confi_1125_flip/CCT/checkpoint_best.pth'", ",", "type", "=", "str", ",", "\n", "help", "=", "'Path to the trained .pth model'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_path'", ",", "default", "=", "\"/home2/pneumonia_ct/test/image/\"", ",", "type", "=", "str", ",", "\n", "help", "=", "'Test images for Pascal VOC'", ")", "\n", "parser", ".", "add_argument", "(", "'--mask_path'", ",", "default", "=", "\"/home2/pneumonia_ct/test/label\"", ",", "type", "=", "str", ",", "\n", "help", "=", "'Test images for Pascal VOC'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer.__init__": [[36, 54], ["base.BaseTrainer.__init__", "config[].get", "time.time", "int", "numpy.sqrt", "int"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "resume", ",", "config", ",", "supervised_loader", ",", "unsupervised_loader", ",", "iter_per_epoch", ",", "\n", "val_loader", "=", "None", ",", "train_logger", "=", "None", ")", ":", "#D,", "\n", "        ", "super", "(", "Trainer", ",", "self", ")", ".", "__init__", "(", "model", ",", "resume", ",", "config", ",", "iter_per_epoch", ",", "train_logger", ")", "\n", "\n", "self", ".", "supervised_loader", "=", "supervised_loader", "\n", "self", ".", "unsupervised_loader", "=", "unsupervised_loader", "\n", "self", ".", "val_loader", "=", "val_loader", "\n", "\n", "# self.ignore_index = self.val_loader.dataset.ignore_index", "\n", "self", ".", "wrt_mode", ",", "self", ".", "wrt_step", "=", "'train_'", ",", "0", "\n", "self", ".", "log_step", "=", "config", "[", "'trainer'", "]", ".", "get", "(", "'log_per_iter'", ",", "int", "(", "np", ".", "sqrt", "(", "self", ".", "val_loader", ".", "batch_size", ")", ")", ")", "\n", "if", "config", "[", "'trainer'", "]", "[", "'log_per_iter'", "]", ":", "\n", "            ", "self", ".", "log_step", "=", "int", "(", "self", ".", "log_step", "/", "self", ".", "val_loader", ".", "batch_size", ")", "+", "1", "\n", "\n", "", "self", ".", "num_classes", "=", "self", ".", "val_loader", ".", "dataset", ".", "num_classes", "\n", "self", ".", "mode", "=", "self", ".", "model", ".", "module", ".", "mode", "\n", "\n", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._train_epoch": [[57, 117], ["trainer.Trainer.html_results.save", "trainer.Trainer.logger.info", "trainer.Trainer._reset_metrics", "iter", "tqdm.tqdm.tqdm", "iter", "tqdm.tqdm.tqdm", "trainer.Trainer.model.train", "trainer.Trainer.optimizer.zero_grad", "random.randint", "trainer.flip", "trainer.flip", "trainer.Trainer.model", "total_loss.mean.mean.mean", "total_loss.mean.mean.backward", "trainer.Trainer.optimizer.step", "trainer.Trainer._update_losses", "trainer.Trainer._compute_metrics", "trainer.Trainer._log_values", "tqdm.tqdm.tqdm.set_description", "trainer.Trainer.lr_scheduler.step", "range", "zip", "range", "next", "input_l.cuda", "target_l.cuda", "trainer.flip", "trainer.Trainer._write_scalars_tb", "len", "itertools.cycle", "len", "next", "input_ul.cuda", "target_ul.cuda", "len"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.save", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._reset_metrics", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer.train", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.flip", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.flip", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._update_losses", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._compute_metrics", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._log_values", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.flip", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._write_scalars_tb"], ["", "def", "_train_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "html_results", ".", "save", "(", ")", "\n", "\n", "self", ".", "logger", ".", "info", "(", "'\\n'", ")", "\n", "\n", "if", "self", ".", "mode", "==", "'supervised'", ":", "\n", "            ", "dataloader", "=", "iter", "(", "self", ".", "supervised_loader", ")", "\n", "tbar", "=", "tqdm", "(", "range", "(", "len", "(", "self", ".", "supervised_loader", ")", ")", ",", "ncols", "=", "135", ")", "\n", "", "else", ":", "\n", "            ", "dataloader", "=", "iter", "(", "zip", "(", "self", ".", "supervised_loader", ",", "cycle", "(", "self", ".", "unsupervised_loader", ")", ")", ")", "\n", "tbar", "=", "tqdm", "(", "range", "(", "len", "(", "self", ".", "supervised_loader", ")", ")", ",", "ncols", "=", "135", ")", "\n", "\n", "", "self", ".", "_reset_metrics", "(", ")", "\n", "for", "batch_idx", "in", "tbar", ":", "\n", "            ", "self", ".", "model", ".", "train", "(", ")", "\n", "# self.D.eval()", "\n", "if", "self", ".", "mode", "==", "'supervised'", ":", "\n", "                ", "(", "input_l", ",", "target_l", ",", "image_id_l", ")", ",", "(", "input_ul", ",", "target_ul", ",", "image_id_ul", ")", "=", "next", "(", "dataloader", ")", ",", "(", "None", ",", "None", ",", "None", ")", "\n", "", "else", ":", "\n", "                ", "(", "input_l", ",", "target_l", ",", "image_id_l", ")", ",", "(", "input_ul", ",", "target_ul", ",", "image_id_ul", ")", "=", "next", "(", "dataloader", ")", "\n", "input_ul", ",", "target_ul", "=", "input_ul", ".", "cuda", "(", "non_blocking", "=", "True", ")", ",", "target_ul", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "", "input_l", ",", "target_l", "=", "input_l", ".", "cuda", "(", "non_blocking", "=", "True", ")", ",", "target_l", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "flip_index", "=", "random", ".", "randint", "(", "2", ",", "5", ")", "\n", "input_l_flip", "=", "flip", "(", "input_l", ",", "dim", "=", "flip_index", ")", "\n", "target_l_flip", "=", "flip", "(", "target_l", ",", "dim", "=", "flip_index", ")", "\n", "if", "self", ".", "mode", "==", "'supervised'", ":", "\n", "                ", "input_ul_flip", "=", "None", "\n", "", "else", ":", "\n", "                ", "input_ul_flip", "=", "flip", "(", "input_ul", ",", "dim", "=", "flip_index", ")", "\n", "\n", "", "total_loss", ",", "cur_losses", ",", "outputs", "=", "self", ".", "model", "(", "x_l", "=", "input_l", ",", "target_l", "=", "target_l", ",", "x_ul", "=", "input_ul", ",", "target_ul", "=", "target_ul", ",", "\n", "x_l_flip", "=", "input_l_flip", ",", "target_l_flip", "=", "target_l_flip", ",", "x_ul_flip", "=", "input_ul_flip", ",", "\n", "flip_index", "=", "flip_index", ",", "curr_iter", "=", "batch_idx", ",", "epoch", "=", "epoch", "-", "1", ")", "\n", "\n", "\n", "total_loss", "=", "total_loss", ".", "mean", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "self", ".", "_update_losses", "(", "cur_losses", ")", "\n", "self", ".", "_compute_metrics", "(", "outputs", ",", "target_l", ",", "target_ul", ",", "epoch", "-", "1", ")", "\n", "logs", "=", "self", ".", "_log_values", "(", "cur_losses", ")", "\n", "\n", "if", "batch_idx", "%", "self", ".", "log_step", "==", "0", ":", "\n", "                ", "self", ".", "wrt_step", "=", "(", "epoch", "-", "1", ")", "*", "len", "(", "self", ".", "unsupervised_loader", ")", "+", "batch_idx", "\n", "self", ".", "_write_scalars_tb", "(", "logs", ")", "\n", "\n", "", "del", "input_l", ",", "target_l", ",", "input_ul", ",", "target_ul", "\n", "del", "total_loss", ",", "cur_losses", ",", "outputs", "\n", "\n", "tbar", ".", "set_description", "(", "'T ({}) | Ls {:.5f} Lu {:.5f} Lp {:.5f} Lf {:.5f} Lw {:.5f} PW {:.5f} m1 {:.5f} m2 {:.5f}|'", ".", "format", "(", "\n", "epoch", ",", "self", ".", "loss_sup", ".", "average", ",", "self", ".", "loss_unsup", ".", "average", ",", "self", ".", "loss_pseudo", ".", "average", ",", "self", ".", "loss_flip", ".", "average", ",", "self", ".", "loss_weakly", ".", "average", ",", "\n", "self", ".", "pair_wise", ".", "average", ",", "self", ".", "mIoU_l", ",", "self", ".", "mIoU_ul", ")", ")", "\n", "\n", "self", ".", "lr_scheduler", ".", "step", "(", "epoch", "=", "epoch", "-", "1", ")", "\n", "\n", "", "return", "logs", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._valid_epoch": [[120, 184], ["trainer.Trainer.logger.info", "trainer.Trainer.model.eval", "utils.metrics.AverageMeter", "tqdm.tqdm.tqdm", "trainer.Trainer.logger.warning", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "trainer.Trainer.writer.add_scalar", "trainer.Trainer.html_results.add_results", "trainer.Trainer.html_results.save", "trainer.Trainer.model", "torch.softmax", "torch.softmax", "torch.cross_entropy", "torch.cross_entropy", "utils.dice_loss().cuda", "utils.dice_loss().cuda.", "utils.metrics.AverageMeter.update", "utils.metrics.eval_metrics", "IoU.mean", "tqdm.tqdm.tqdm.set_description", "len", "list", "trainer.Trainer.writer.add_scalar", "trainer.Trainer._save_checkpoint", "target.cuda", "data.cuda", "val_loss.item", "numpy.round", "numpy.round", "numpy.round", "dict", "seg_metrics.items", "utils.dice_loss", "numpy.spacing", "numpy.spacing", "zip", "time.time", "range", "numpy.round"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.add_results", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.save", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.update", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.eval_metrics", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer._save_checkpoint", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.dice_loss"], ["", "def", "_valid_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "if", "self", ".", "val_loader", "is", "None", ":", "\n", "            ", "self", ".", "logger", ".", "warning", "(", "'Not data loader was passed for the validation step, No validation is performed !'", ")", "\n", "return", "{", "}", "\n", "", "self", ".", "logger", ".", "info", "(", "'\\n###### EVALUATION ######'", ")", "\n", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "self", ".", "wrt_mode", "=", "'val'", "\n", "total_loss_val", "=", "AverageMeter", "(", ")", "\n", "total_inter", ",", "total_union", "=", "0", ",", "0", "\n", "total_correct", ",", "total_label", "=", "0", ",", "0", "\n", "\n", "tbar", "=", "tqdm", "(", "self", ".", "val_loader", ",", "ncols", "=", "130", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "val_visual", "=", "[", "]", "\n", "for", "batch_idx", ",", "(", "data", ",", "target", ",", "image_id", ")", "in", "enumerate", "(", "tbar", ")", ":", "\n", "                ", "target", ",", "data", "=", "target", ".", "cuda", "(", "non_blocking", "=", "True", ")", ",", "data", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "output", "=", "self", ".", "model", "(", "data", ")", "\n", "output_softmax", "=", "F", ".", "softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "\n", "# LOSS", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "output", ",", "target", ")", "\n", "diceloss", "=", "losses", ".", "dice_loss", "(", ")", ".", "cuda", "(", ")", "\n", "dice_loss", "=", "diceloss", "(", "output_softmax", "[", ":", ",", "1", ",", ":", ",", ":", ",", ":", "]", ",", "target", "[", ":", "]", "==", "1", ")", "\n", "# val_loss = 0.5*(loss+dice_loss)", "\n", "val_loss", "=", "dice_loss", "\n", "total_loss_val", ".", "update", "(", "val_loss", ".", "item", "(", ")", ")", "\n", "\n", "correct", ",", "labeled", ",", "inter", ",", "union", "=", "eval_metrics", "(", "output", ",", "target", ",", "self", ".", "num_classes", ")", "\n", "total_inter", ",", "total_union", "=", "total_inter", "+", "inter", ",", "total_union", "+", "union", "\n", "total_correct", ",", "total_label", "=", "total_correct", "+", "correct", ",", "total_label", "+", "labeled", "\n", "\n", "\n", "# PRINT INFO", "\n", "pixAcc", "=", "1.0", "*", "total_correct", "/", "(", "np", ".", "spacing", "(", "1", ")", "+", "total_label", ")", "\n", "IoU", "=", "1.0", "*", "total_inter", "/", "(", "np", ".", "spacing", "(", "1", ")", "+", "total_union", ")", "\n", "dice_coef", "=", "2.0", "*", "(", "total_inter", ")", "/", "(", "total_union", "+", "total_inter", ")", "\n", "\n", "mIoU", "=", "IoU", ".", "mean", "(", ")", "\n", "seg_metrics", "=", "{", "\"Pixel_Accuracy\"", ":", "np", ".", "round", "(", "pixAcc", ",", "3", ")", ",", "\"Mean_IoU\"", ":", "np", ".", "round", "(", "mIoU", ",", "3", ")", ",", "\n", "\"Dice_coef\"", ":", "np", ".", "round", "(", "dice_coef", "[", "1", "]", ",", "3", ")", ",", "\"Class_IoU\"", ":", "dict", "(", "zip", "(", "range", "(", "self", ".", "num_classes", ")", ",", "np", ".", "round", "(", "IoU", ",", "3", ")", ")", ")", "}", "\n", "\n", "tbar", ".", "set_description", "(", "'EVAL ({}) | Loss: {:.3f}, PixelAcc: {:.2f}, Mean IoU: {:.2f}, Dice_coef: {:.3f}|'", ".", "format", "(", "epoch", ",", "\n", "total_loss_val", ".", "average", ",", "pixAcc", ",", "mIoU", ",", "dice_coef", "[", "1", "]", ")", ")", "\n", "\n", "# self._add_img_tb(val_visual, 'val')", "\n", "\n", "# METRICS TO TENSORBOARD", "\n", "", "self", ".", "wrt_step", "=", "(", "epoch", ")", "*", "len", "(", "self", ".", "val_loader", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "f'{self.wrt_mode}/loss'", ",", "total_loss_val", ".", "average", ",", "self", ".", "wrt_step", ")", "\n", "for", "k", ",", "v", "in", "list", "(", "seg_metrics", ".", "items", "(", ")", ")", "[", ":", "-", "1", "]", ":", "\n", "                ", "self", ".", "writer", ".", "add_scalar", "(", "f'{self.wrt_mode}/{k}'", ",", "v", ",", "self", ".", "wrt_step", ")", "\n", "\n", "", "log", "=", "{", "\n", "'val_loss'", ":", "total_loss_val", ".", "average", ",", "\n", "**", "seg_metrics", "\n", "}", "\n", "self", ".", "html_results", ".", "add_results", "(", "epoch", "=", "epoch", ",", "seg_resuts", "=", "log", ")", "\n", "self", ".", "html_results", ".", "save", "(", ")", "\n", "\n", "if", "(", "time", ".", "time", "(", ")", "-", "self", ".", "start_time", ")", "/", "3600", ">", "22", ":", "\n", "                ", "self", ".", "_save_checkpoint", "(", "epoch", ",", "save_best", "=", "self", ".", "improved", ")", "\n", "", "", "return", "log", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._reset_metrics": [[187, 201], ["utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter", "utils.metrics.AverageMeter"], "methods", ["None"], ["", "def", "_reset_metrics", "(", "self", ")", ":", "\n", "        ", "self", ".", "loss_sup", "=", "AverageMeter", "(", ")", "\n", "self", ".", "loss_unsup", "=", "AverageMeter", "(", ")", "\n", "self", ".", "loss_pseudo", "=", "AverageMeter", "(", ")", "\n", "self", ".", "loss_flip", "=", "AverageMeter", "(", ")", "\n", "self", ".", "loss_weakly", "=", "AverageMeter", "(", ")", "\n", "self", ".", "pair_wise", "=", "AverageMeter", "(", ")", "\n", "self", ".", "total_inter_l", ",", "self", ".", "total_union_l", "=", "0", ",", "0", "\n", "self", ".", "total_correct_l", ",", "self", ".", "total_label_l", "=", "0", ",", "0", "\n", "self", ".", "total_inter_ul", ",", "self", ".", "total_union_ul", "=", "0", ",", "0", "\n", "self", ".", "total_correct_ul", ",", "self", ".", "total_label_ul", "=", "0", ",", "0", "\n", "self", ".", "mIoU_l", ",", "self", ".", "mIoU_ul", "=", "0", ",", "0", "\n", "self", ".", "pixel_acc_l", ",", "self", ".", "pixel_acc_ul", "=", "0", ",", "0", "\n", "self", ".", "class_iou_l", ",", "self", ".", "class_iou_ul", "=", "{", "}", ",", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._update_losses": [[204, 217], ["cur_losses.keys", "trainer.Trainer.loss_sup.update", "cur_losses.keys", "trainer.Trainer.loss_unsup.update", "cur_losses.keys", "trainer.Trainer.loss_pseudo.update", "cur_losses.keys", "trainer.Trainer.loss_flip.update", "cur_losses.keys", "trainer.Trainer.loss_weakly.update", "cur_losses.keys", "trainer.Trainer.pair_wise.update", "cur_losses[].mean().item", "cur_losses[].mean().item", "cur_losses[].mean().item", "cur_losses[].mean().item", "cur_losses[].mean().item", "cur_losses[].mean().item", "cur_losses[].mean", "cur_losses[].mean", "cur_losses[].mean", "cur_losses[].mean", "cur_losses[].mean", "cur_losses[].mean"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.update", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.update", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.update", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.update", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.update", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.update"], ["", "def", "_update_losses", "(", "self", ",", "cur_losses", ")", ":", "\n", "        ", "if", "\"loss_sup\"", "in", "cur_losses", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "loss_sup", ".", "update", "(", "cur_losses", "[", "'loss_sup'", "]", ".", "mean", "(", ")", ".", "item", "(", ")", ")", "\n", "", "if", "\"loss_unsup\"", "in", "cur_losses", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "loss_unsup", ".", "update", "(", "cur_losses", "[", "'loss_unsup'", "]", ".", "mean", "(", ")", ".", "item", "(", ")", ")", "\n", "", "if", "\"loss_pseudo\"", "in", "cur_losses", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "loss_pseudo", ".", "update", "(", "cur_losses", "[", "'loss_pseudo'", "]", ".", "mean", "(", ")", ".", "item", "(", ")", ")", "\n", "", "if", "\"loss_flip\"", "in", "cur_losses", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "loss_flip", ".", "update", "(", "cur_losses", "[", "'loss_flip'", "]", ".", "mean", "(", ")", ".", "item", "(", ")", ")", "\n", "", "if", "\"loss_weakly\"", "in", "cur_losses", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "loss_weakly", ".", "update", "(", "cur_losses", "[", "'loss_weakly'", "]", ".", "mean", "(", ")", ".", "item", "(", ")", ")", "\n", "", "if", "\"pair_wise\"", "in", "cur_losses", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "pair_wise", ".", "update", "(", "cur_losses", "[", "'pair_wise'", "]", ".", "mean", "(", ")", ".", "item", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._compute_metrics": [[220, 231], ["utils.metrics.eval_metrics", "trainer.Trainer._update_seg_metrics", "trainer.Trainer._get_seg_metrics", "trainer.Trainer.values", "utils.metrics.eval_metrics", "trainer.Trainer._update_seg_metrics", "trainer.Trainer._get_seg_metrics", "trainer.Trainer.values"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.eval_metrics", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._update_seg_metrics", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._get_seg_metrics", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.eval_metrics", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._update_seg_metrics", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._get_seg_metrics"], ["", "", "def", "_compute_metrics", "(", "self", ",", "outputs", ",", "target_l", ",", "target_ul", ",", "epoch", ")", ":", "\n", "        ", "seg_metrics_l", "=", "eval_metrics", "(", "outputs", "[", "'sup_pred'", "]", ",", "target_l", ",", "self", ".", "num_classes", ")", "\n", "self", ".", "_update_seg_metrics", "(", "*", "seg_metrics_l", ",", "True", ")", "\n", "seg_metrics_l", "=", "self", ".", "_get_seg_metrics", "(", "True", ")", "\n", "self", ".", "pixel_acc_l", ",", "self", ".", "mIoU_l", ",", "self", ".", "class_iou_l", "=", "seg_metrics_l", ".", "values", "(", ")", "\n", "\n", "if", "self", ".", "mode", "==", "'semi'", ":", "\n", "            ", "seg_metrics_ul", "=", "eval_metrics", "(", "outputs", "[", "'unsup_pred'", "]", ",", "target_ul", ",", "self", ".", "num_classes", ")", "\n", "self", ".", "_update_seg_metrics", "(", "*", "seg_metrics_ul", ",", "False", ")", "\n", "seg_metrics_ul", "=", "self", ".", "_get_seg_metrics", "(", "False", ")", "\n", "self", ".", "pixel_acc_ul", ",", "self", ".", "mIoU_ul", ",", "self", ".", "class_iou_ul", "=", "seg_metrics_ul", ".", "values", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._update_seg_metrics": [[234, 245], ["None"], "methods", ["None"], ["", "", "def", "_update_seg_metrics", "(", "self", ",", "correct", ",", "labeled", ",", "inter", ",", "union", ",", "supervised", "=", "True", ")", ":", "\n", "        ", "if", "supervised", ":", "\n", "            ", "self", ".", "total_correct_l", "+=", "correct", "\n", "self", ".", "total_label_l", "+=", "labeled", "\n", "self", ".", "total_inter_l", "+=", "inter", "\n", "self", ".", "total_union_l", "+=", "union", "\n", "", "else", ":", "\n", "            ", "self", ".", "total_correct_ul", "+=", "correct", "\n", "self", ".", "total_label_ul", "+=", "labeled", "\n", "self", ".", "total_inter_ul", "+=", "inter", "\n", "self", ".", "total_union_ul", "+=", "union", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._get_seg_metrics": [[248, 260], ["IoU.mean", "numpy.round", "numpy.round", "dict", "zip", "numpy.spacing", "numpy.spacing", "numpy.spacing", "numpy.spacing", "range", "numpy.round"], "methods", ["None"], ["", "", "def", "_get_seg_metrics", "(", "self", ",", "supervised", "=", "True", ")", ":", "\n", "        ", "if", "supervised", ":", "\n", "            ", "pixAcc", "=", "1.0", "*", "self", ".", "total_correct_l", "/", "(", "np", ".", "spacing", "(", "1", ")", "+", "self", ".", "total_label_l", ")", "\n", "IoU", "=", "1.0", "*", "self", ".", "total_inter_l", "/", "(", "np", ".", "spacing", "(", "1", ")", "+", "self", ".", "total_union_l", ")", "\n", "", "else", ":", "\n", "            ", "pixAcc", "=", "1.0", "*", "self", ".", "total_correct_ul", "/", "(", "np", ".", "spacing", "(", "1", ")", "+", "self", ".", "total_label_ul", ")", "\n", "IoU", "=", "1.0", "*", "self", ".", "total_inter_ul", "/", "(", "np", ".", "spacing", "(", "1", ")", "+", "self", ".", "total_union_ul", ")", "\n", "", "mIoU", "=", "IoU", ".", "mean", "(", ")", "\n", "return", "{", "\n", "\"Pixel_Accuracy\"", ":", "np", ".", "round", "(", "pixAcc", ",", "3", ")", ",", "\n", "\"Mean_IoU\"", ":", "np", ".", "round", "(", "mIoU", ",", "3", ")", ",", "\n", "\"Class_IoU\"", ":", "dict", "(", "zip", "(", "range", "(", "self", ".", "num_classes", ")", ",", "np", ".", "round", "(", "IoU", ",", "3", ")", ")", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._log_values": [[264, 285], ["cur_losses.keys", "cur_losses.keys", "cur_losses.keys", "cur_losses.keys", "cur_losses.keys", "cur_losses.keys"], "methods", ["None"], ["", "def", "_log_values", "(", "self", ",", "cur_losses", ")", ":", "\n", "        ", "logs", "=", "{", "}", "\n", "if", "\"loss_sup\"", "in", "cur_losses", ".", "keys", "(", ")", ":", "\n", "            ", "logs", "[", "'loss_sup'", "]", "=", "self", ".", "loss_sup", ".", "average", "\n", "", "if", "\"loss_unsup\"", "in", "cur_losses", ".", "keys", "(", ")", ":", "\n", "            ", "logs", "[", "'loss_unsup'", "]", "=", "self", ".", "loss_unsup", ".", "average", "\n", "", "if", "\"loss_pseudo\"", "in", "cur_losses", ".", "keys", "(", ")", ":", "\n", "            ", "logs", "[", "'loss_pseudo'", "]", "=", "self", ".", "loss_pseudo", ".", "average", "\n", "", "if", "\"loss_flip\"", "in", "cur_losses", ".", "keys", "(", ")", ":", "\n", "            ", "logs", "[", "'loss_flip'", "]", "=", "self", ".", "loss_flip", ".", "average", "\n", "", "if", "\"loss_weakly\"", "in", "cur_losses", ".", "keys", "(", ")", ":", "\n", "            ", "logs", "[", "'loss_weakly'", "]", "=", "self", ".", "loss_weakly", ".", "average", "\n", "", "if", "\"pair_wise\"", "in", "cur_losses", ".", "keys", "(", ")", ":", "\n", "            ", "logs", "[", "'pair_wise'", "]", "=", "self", ".", "pair_wise", ".", "average", "\n", "\n", "", "logs", "[", "'mIoU_labeled'", "]", "=", "self", ".", "mIoU_l", "\n", "logs", "[", "'pixel_acc_labeled'", "]", "=", "self", ".", "pixel_acc_l", "\n", "if", "self", ".", "mode", "==", "'semi'", ":", "\n", "            ", "logs", "[", "'mIoU_unlabeled'", "]", "=", "self", ".", "mIoU_ul", "\n", "logs", "[", "'pixel_acc_unlabeled'", "]", "=", "self", ".", "pixel_acc_ul", "\n", "", "return", "logs", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._write_scalars_tb": [[287, 294], ["logs.items", "enumerate", "trainer.Trainer.writer.add_scalar", "trainer.Trainer.writer.add_scalar", "trainer.Trainer.writer.add_scalar"], "methods", ["None"], ["", "def", "_write_scalars_tb", "(", "self", ",", "logs", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "logs", ".", "items", "(", ")", ":", "\n", "            ", "if", "'class_iou'", "not", "in", "k", ":", "self", ".", "writer", ".", "add_scalar", "(", "f'train/{k}'", ",", "v", ",", "self", ".", "wrt_step", ")", "\n", "", "for", "i", ",", "opt_group", "in", "enumerate", "(", "self", ".", "optimizer", ".", "param_groups", ")", ":", "\n", "            ", "self", ".", "writer", ".", "add_scalar", "(", "f'train/Learning_rate_{i}'", ",", "opt_group", "[", "'lr'", "]", ",", "self", ".", "wrt_step", ")", "\n", "", "current_rampup", "=", "self", ".", "model", ".", "module", ".", "unsup_loss_w", ".", "current_rampup", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'train/Unsupervised_rampup'", ",", "current_rampup", ",", "self", ".", "wrt_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._add_img_tb": [[297, 309], ["torch.stack", "torch.stack", "torch.stack", "torch.stack", "torchvision.utils.make_grid", "trainer.Trainer.writer.add_image", "torchvision.utils.make_grid.extend", "torchvision.utils.make_grid.cpu", "i.convert", "trainer.Trainer.viz_transform", "trainer.Trainer.restore_transform", "utils.helpers.colorize_mask", "torchvision.utils.make_grid.size", "len", "isinstance", "len"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.helpers.colorize_mask"], ["", "def", "_add_img_tb", "(", "self", ",", "val_visual", ",", "wrt_mode", ")", ":", "\n", "        ", "val_img", "=", "[", "]", "\n", "palette", "=", "self", ".", "val_loader", ".", "dataset", ".", "palette", "\n", "for", "imgs", "in", "val_visual", ":", "\n", "            ", "imgs", "=", "[", "self", ".", "restore_transform", "(", "i", ")", "if", "(", "isinstance", "(", "i", ",", "torch", ".", "Tensor", ")", "and", "len", "(", "i", ".", "shape", ")", "==", "3", ")", "\n", "else", "colorize_mask", "(", "i", ",", "palette", ")", "for", "i", "in", "imgs", "]", "\n", "imgs", "=", "[", "i", ".", "convert", "(", "'RGB'", ")", "for", "i", "in", "imgs", "]", "\n", "imgs", "=", "[", "self", ".", "viz_transform", "(", "i", ")", "for", "i", "in", "imgs", "]", "\n", "val_img", ".", "extend", "(", "imgs", ")", "\n", "", "val_img", "=", "torch", ".", "stack", "(", "val_img", ",", "0", ")", "\n", "val_img", "=", "make_grid", "(", "val_img", ".", "cpu", "(", ")", ",", "nrow", "=", "val_img", ".", "size", "(", "0", ")", "//", "len", "(", "val_visual", ")", ",", "padding", "=", "5", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "f'{wrt_mode}/inputs_targets_predictions'", ",", "val_img", ",", "self", ".", "wrt_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._write_img_tb": [[312, 323], ["[].cpu().numpy", "target_l.data.cpu().numpy", "trainer.Trainer._add_img_tb", "[].cpu().numpy", "target_ul.data.cpu().numpy", "trainer.Trainer._add_img_tb", "[].cpu", "target_l.data.cpu", "i.data.cpu", "zip", "[].cpu", "target_ul.data.cpu", "i.data.cpu", "zip", "outputs[].data.max", "outputs[].data.max"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._add_img_tb", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.Trainer._add_img_tb"], ["", "def", "_write_img_tb", "(", "self", ",", "input_l", ",", "target_l", ",", "input_ul", ",", "target_ul", ",", "outputs", ",", "epoch", ")", ":", "\n", "        ", "outputs_l_np", "=", "outputs", "[", "'sup_pred'", "]", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "targets_l_np", "=", "target_l", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "imgs", "=", "[", "[", "i", ".", "data", ".", "cpu", "(", ")", ",", "j", ",", "k", "]", "for", "i", ",", "j", ",", "k", "in", "zip", "(", "input_l", ",", "outputs_l_np", ",", "targets_l_np", ")", "]", "\n", "self", ".", "_add_img_tb", "(", "imgs", ",", "'supervised'", ")", "\n", "\n", "if", "self", ".", "mode", "==", "'semi'", ":", "\n", "            ", "outputs_ul_np", "=", "outputs", "[", "'unsup_pred'", "]", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "targets_ul_np", "=", "target_ul", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "imgs", "=", "[", "[", "i", ".", "data", ".", "cpu", "(", ")", ",", "j", ",", "k", "]", "for", "i", ",", "j", ",", "k", "in", "zip", "(", "input_ul", ",", "outputs_ul_np", ",", "targets_ul_np", ")", "]", "\n", "self", ".", "_add_img_tb", "(", "imgs", ",", "'unsupervised'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.cal_dice": [[17, 28], ["prediction_tmp.astype.astype", "label_tmp.astype.astype", "numpy.sum", "numpy.sum", "numpy.sum"], "function", ["None"], ["def", "cal_dice", "(", "prediction", ",", "label", ")", ":", "\n", "\n", "    ", "prediction_tmp", "=", "(", "prediction", "==", "1", ")", "\n", "label_tmp", "=", "(", "label", "==", "1", ")", "\n", "\n", "prediction_tmp", "=", "prediction_tmp", ".", "astype", "(", "np", ".", "float", ")", "\n", "label_tmp", "=", "label_tmp", ".", "astype", "(", "np", ".", "float", ")", "\n", "\n", "dice", "=", "2", "*", "np", ".", "sum", "(", "prediction_tmp", "*", "label_tmp", ")", "/", "(", "np", ".", "sum", "(", "prediction_tmp", ")", "+", "np", ".", "sum", "(", "label_tmp", ")", ")", "\n", "\n", "return", "dice", "#total_dice", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.trainer.flip": [[29, 34], ["x.dim", "tuple", "slice", "torch.arange().long", "torch.arange().long", "range", "x.dim", "torch.arange", "torch.arange", "x.size"], "function", ["None"], ["", "def", "flip", "(", "x", ",", "dim", ")", ":", "\n", "    ", "dim", "=", "x", ".", "dim", "(", ")", "+", "dim", "if", "dim", "<", "0", "else", "dim", "\n", "return", "x", "[", "tuple", "(", "slice", "(", "None", ",", "None", ")", "if", "i", "!=", "dim", "\n", "else", "torch", ".", "arange", "(", "x", ".", "size", "(", "i", ")", "-", "1", ",", "-", "1", ",", "-", "1", ")", ".", "long", "(", ")", "\n", "for", "i", "in", "range", "(", "x", ".", "dim", "(", ")", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.train.get_instance": [[15, 18], ["getattr"], "function", ["None"], ["def", "get_instance", "(", "module", ",", "name", ",", "config", ",", "*", "args", ")", ":", "\n", "# GET THE CORRESPONDING CLASS / FCT ", "\n", "    ", "return", "getattr", "(", "module", ",", "config", "[", "name", "]", "[", "'type'", "]", ")", "(", "*", "args", ",", "**", "config", "[", "name", "]", "[", "'args'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.train.main": [[19, 75], ["torch.manual_seed", "torch.manual_seed", "utils.Logger", "dataloaders.VOC", "dataloaders.VOC", "dataloaders.VOC", "len", "int", "utils.losses.consistency_weight", "utils.losses.consistency_weight", "models.CCT", "print", "trainer.Trainer", "trainer.Trainer.train", "utils.losses.dice_loss().cuda", "len", "len", "utils.losses.dice_loss().cuda", "utils.losses.abCE_loss", "utils.losses.dice_loss", "utils.losses.dice_loss"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer.train", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.dice_loss", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.None.inference.dice_loss"], ["", "def", "main", "(", "config", ",", "resume", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "42", ")", "\n", "train_logger", "=", "Logger", "(", ")", "\n", "\n", "# DATA LOADERS", "\n", "config", "[", "'train_supervised'", "]", "[", "'n_labeled_examples'", "]", "=", "config", "[", "'n_labeled_examples'", "]", "\n", "config", "[", "'train_unsupervised'", "]", "[", "'n_labeled_examples'", "]", "=", "config", "[", "'n_labeled_examples'", "]", "\n", "config", "[", "'train_unsupervised'", "]", "[", "'use_weak_lables'", "]", "=", "config", "[", "'use_weak_lables'", "]", "\n", "supervised_loader", "=", "dataloaders", ".", "VOC", "(", "config", "[", "'train_supervised'", "]", ")", "\n", "unsupervised_loader", "=", "dataloaders", ".", "VOC", "(", "config", "[", "'train_unsupervised'", "]", ")", "\n", "val_loader", "=", "dataloaders", ".", "VOC", "(", "config", "[", "'val_loader'", "]", ")", "\n", "iter_per_epoch", "=", "len", "(", "unsupervised_loader", ")", "\n", "\n", "# SUPERVISED LOSS", "\n", "if", "config", "[", "'model'", "]", "[", "'sup_loss'", "]", "==", "'CE'", ":", "\n", "        ", "sup_loss", "=", "CE_loss", "\n", "", "elif", "config", "[", "'model'", "]", "[", "'sup_loss'", "]", "==", "'multi'", ":", "\n", "        ", "diceloss", "=", "dice_loss", "(", ")", ".", "cuda", "(", ")", "\n", "sup_loss", "=", "[", "CE_loss", ",", "diceloss", "]", "\n", "", "elif", "config", "[", "'model'", "]", "[", "'sup_loss'", "]", "==", "'dice'", ":", "\n", "        ", "diceloss", "=", "dice_loss", "(", ")", ".", "cuda", "(", ")", "\n", "sup_loss", "=", "diceloss", "\n", "", "else", ":", "\n", "        ", "sup_loss", "=", "abCE_loss", "(", "iters_per_epoch", "=", "iter_per_epoch", ",", "epochs", "=", "config", "[", "'trainer'", "]", "[", "'epochs'", "]", ",", "\n", "num_classes", "=", "val_loader", ".", "dataset", ".", "num_classes", ")", "\n", "\n", "# MODEL", "\n", "", "rampup_ends", "=", "int", "(", "config", "[", "'ramp_up'", "]", "*", "config", "[", "'trainer'", "]", "[", "'epochs'", "]", ")", "\n", "cons_w_unsup", "=", "consistency_weight", "(", "final_w", "=", "config", "[", "'unsupervised_w'", "]", ",", "iters_per_epoch", "=", "len", "(", "unsupervised_loader", ")", ",", "\n", "rampup_ends", "=", "rampup_ends", ")", "\n", "cons_w_flip", "=", "consistency_weight", "(", "final_w", "=", "config", "[", "'flip_loss_w'", "]", ",", "iters_per_epoch", "=", "len", "(", "unsupervised_loader", ")", ",", "\n", "rampup_ends", "=", "rampup_ends", ")", "\n", "\n", "model", "=", "models", ".", "CCT", "(", "num_classes", "=", "val_loader", ".", "dataset", ".", "num_classes", ",", "conf", "=", "config", "[", "'model'", "]", ",", "\n", "sup_loss", "=", "sup_loss", ",", "cons_w_unsup", "=", "cons_w_unsup", ",", "\n", "weakly_loss_w", "=", "config", "[", "'weakly_loss_w'", "]", ",", "cons_w_flip", "=", "cons_w_flip", ",", "\n", "use_weak_lables", "=", "config", "[", "'use_weak_lables'", "]", ")", "\n", "\n", "# pretrained_dict = torch.load('./competition/saved_supervise_0728/CCT/checkpoint_7.pth')", "\n", "# checkpoint = torch.load(args.model)", "\n", "# model.load_state_dict(pretrained_dict['state_dict'], strict=True)", "\n", "\n", "print", "(", "f'\\n{model}\\n'", ")", "\n", "\n", "# TRAINING", "\n", "trainer", "=", "Trainer", "(", "\n", "model", "=", "model", ",", "\n", "resume", "=", "resume", ",", "\n", "config", "=", "config", ",", "\n", "supervised_loader", "=", "supervised_loader", ",", "\n", "unsupervised_loader", "=", "unsupervised_loader", ",", "\n", "val_loader", "=", "val_loader", ",", "\n", "iter_per_epoch", "=", "iter_per_epoch", ",", "\n", "train_logger", "=", "train_logger", ")", "\n", "\n", "trainer", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.__init__": [[6, 35], ["os.path.join", "dominate.document", "datetime.datetime.now().strftime", "htmlwriter.HTML.add_header", "htmlwriter.HTML.add_header", "htmlwriter.HTML.add_config", "htmlwriter.HTML.add_table", "os.path.exists", "os.makedirs", "os.path.isfile", "open().read", "hr", "hr", "meta", "datetime.datetime.now", "open", "str"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.add_header", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.add_header", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.add_config", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.add_table"], ["    ", "def", "__init__", "(", "self", ",", "web_dir", ",", "exp_name", ",", "config", ",", "title", "=", "'seg results'", ",", "save_name", "=", "'index'", ",", "reflesh", "=", "0", ",", "resume", "=", "None", ")", ":", "\n", "        ", "self", ".", "title", "=", "title", "\n", "self", ".", "web_dir", "=", "web_dir", "\n", "self", ".", "save_name", "=", "save_name", "+", "'.html'", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "web_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "web_dir", ")", "\n", "\n", "", "html_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "web_dir", ",", "self", ".", "save_name", ")", "\n", "\n", "if", "resume", "is", "not", "None", "and", "os", ".", "path", ".", "isfile", "(", "html_file", ")", ":", "\n", "            ", "self", ".", "old_content", "=", "open", "(", "html_file", ")", ".", "read", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "old_content", "=", "None", "\n", "\n", "", "self", ".", "doc", "=", "dominate", ".", "document", "(", "title", "=", "title", ")", "\n", "if", "reflesh", ">", "0", ":", "\n", "            ", "with", "self", ".", "doc", ".", "head", ":", "\n", "                ", "meta", "(", "http_equiv", "=", "\"reflesh\"", ",", "content", "=", "str", "(", "reflesh", ")", ")", "\n", "\n", "", "", "date_time", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%m-%d_%H-%M'", ")", "\n", "header", "=", "f'Experiment name: {exp_name}, Date: {date_time}'", "\n", "self", ".", "add_header", "(", "header", ")", "\n", "self", ".", "add_header", "(", "'Configs'", ")", "\n", "self", ".", "add_config", "(", "config", ")", "\n", "with", "self", ".", "doc", ":", "\n", "            ", "hr", "(", ")", "\n", "hr", "(", ")", "\n", "", "self", ".", "add_table", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.add_header": [[36, 39], ["h3"], "methods", ["None"], ["", "def", "add_header", "(", "self", ",", "str", ")", ":", "\n", "        ", "with", "self", ".", "doc", ":", "\n", "            ", "h3", "(", "str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.add_table": [[40, 43], ["table", "htmlwriter.HTML.doc.add"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.add"], ["", "", "def", "add_table", "(", "self", ",", "border", "=", "1", ")", ":", "\n", "        ", "self", ".", "t", "=", "table", "(", "border", "=", "border", ",", "style", "=", "\"table-layout: fixed;\"", ")", "\n", "self", ".", "doc", ".", "add", "(", "self", ".", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.add_config": [[44, 62], ["table", "htmlwriter.HTML.doc.add", "list", "htmlwriter.HTML.doc.add", "htmlwriter.HTML.doc.add", "tr", "config.keys", "p", "p", "td", "td", "td", "td", "td", "json.dumps", "json.dumps", "list", "td", "config.keys"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.add", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.add", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.add"], ["", "def", "add_config", "(", "self", ",", "config", ")", ":", "\n", "        ", "t", "=", "table", "(", "border", "=", "1", ",", "style", "=", "\"table-layout: fixed;\"", ")", "\n", "self", ".", "doc", ".", "add", "(", "t", ")", "\n", "conf_model", "=", "config", "[", "'model'", "]", "\n", "with", "t", ":", "\n", "            ", "with", "tr", "(", ")", ":", "\n", "                ", "with", "td", "(", "style", "=", "\"word-wrap: break-word;\"", ",", "halign", "=", "\"center\"", ",", "valign", "=", "\"top\"", ")", ":", "\n", "                    ", "td", "(", "f'Epochs : {config[\"trainer\"][\"epochs\"]}'", ")", "\n", "td", "(", "f'Lr scheduler : {config[\"lr_scheduler\"]}'", ")", "\n", "td", "(", "f'Lr : {config[\"optimizer\"][\"args\"][\"lr\"]}'", ")", "\n", "if", "\"datasets\"", "in", "list", "(", "config", ".", "keys", "(", ")", ")", ":", "td", "(", "f'Datasets : {config[\"datasets\"]}'", ")", "\n", "td", "(", "f\"\"\"Decoders : Vat {conf_model[\"vat\"]} Dropout {conf_model[\"drop\"]} Cutout {conf_model[\"cutout\"]}\n                                     FeatureNoise {conf_model[\"feature_noise\"]} FeatureDrop {conf_model[\"feature_drop\"]}\n                                     ContextMsk {conf_model[\"context_masking\"]} ObjMsk {conf_model[\"object_masking\"]}\"\"\"", ")", "\n", "", "", "", "if", "\"datasets\"", "in", "list", "(", "config", ".", "keys", "(", ")", ")", ":", "\n", "            ", "self", ".", "doc", ".", "add", "(", "p", "(", "json", ".", "dumps", "(", "config", "[", "config", "[", "\"datasets\"", "]", "]", ",", "indent", "=", "4", ",", "sort_keys", "=", "True", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "doc", ".", "add", "(", "p", "(", "json", ".", "dumps", "(", "config", "[", "\"train_supervised\"", "]", ",", "indent", "=", "4", ",", "sort_keys", "=", "True", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.add_results": [[63, 77], ["p", "tr", "td", "td", "td", "td", "td", "td", "td", "td"], "methods", ["None"], ["", "", "def", "add_results", "(", "self", ",", "epoch", ",", "seg_resuts", ",", "width", "=", "400", ",", "domain", "=", "None", ")", ":", "\n", "        ", "para", "=", "p", "(", "__pretty", "=", "False", ")", "\n", "with", "self", ".", "t", ":", "\n", "            ", "with", "tr", "(", ")", ":", "\n", "                ", "with", "td", "(", "style", "=", "\"word-wrap: break-word;\"", ",", "halign", "=", "\"center\"", ",", "valign", "=", "\"top\"", ")", ":", "\n", "                    ", "td", "(", "f'Epoch : {epoch}'", ")", "\n", "if", "domain", "is", "not", "None", ":", "\n", "                        ", "td", "(", "f'Mean_IoU_{domain} : {seg_resuts[f\"Mean_IoU_{domain}\"]}'", ")", "\n", "td", "(", "f'PixelAcc_{domain} : {seg_resuts[f\"Pixel_Accuracy_{domain}\"]}'", ")", "\n", "td", "(", "f'Val Loss_{domain} : {seg_resuts[f\"val_loss_{domain}\"]}'", ")", "\n", "", "else", ":", "\n", "                        ", "td", "(", "f'Mean_IoU : {seg_resuts[\"Mean_IoU\"]}'", ")", "\n", "td", "(", "f'PixelAcc : {seg_resuts[\"Pixel_Accuracy\"]}'", ")", "\n", "td", "(", "f'Val Loss : {seg_resuts[\"val_loss\"]}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.save": [[79, 87], ["os.path.join", "open", "open.close", "open.write", "open.write", "htmlwriter.HTML.doc.render", "htmlwriter.HTML.doc.render"], "methods", ["None"], ["", "", "", "", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "html_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "web_dir", ",", "self", ".", "save_name", ")", "\n", "f", "=", "open", "(", "html_file", ",", "'w'", ")", "\n", "if", "self", ".", "old_content", "is", "not", "None", ":", "\n", "            ", "f", ".", "write", "(", "self", ".", "old_content", "+", "self", ".", "doc", ".", "render", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "f", ".", "write", "(", "self", ".", "doc", ".", "render", "(", ")", ")", "\n", "", "f", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.__init__": [[8, 14], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "initialized", "=", "False", "\n", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.initialize": [[15, 21], ["numpy.multiply"], "methods", ["None"], ["", "def", "initialize", "(", "self", ",", "val", ",", "weight", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "avg", "=", "val", "\n", "self", ".", "sum", "=", "np", ".", "multiply", "(", "val", ",", "weight", ")", "\n", "self", ".", "count", "=", "weight", "\n", "self", ".", "initialized", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.update": [[22, 27], ["metrics.AverageMeter.initialize", "metrics.AverageMeter.add"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.initialize", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.add"], ["", "def", "update", "(", "self", ",", "val", ",", "weight", "=", "1", ")", ":", "\n", "        ", "if", "not", "self", ".", "initialized", ":", "\n", "            ", "self", ".", "initialize", "(", "val", ",", "weight", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "add", "(", "val", ",", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.add": [[28, 33], ["numpy.add", "numpy.multiply"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.add"], ["", "", "def", "add", "(", "self", ",", "val", ",", "weight", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "=", "np", ".", "add", "(", "self", ".", "sum", ",", "np", ".", "multiply", "(", "val", ",", "weight", ")", ")", "\n", "self", ".", "count", "=", "self", ".", "count", "+", "weight", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.value": [[34, 37], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "value", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.average": [[38, 41], ["numpy.round"], "methods", ["None"], ["", "@", "property", "\n", "def", "average", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "round", "(", "self", ".", "avg", ",", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.batch_pix_accuracy": [[43, 53], ["torch.max", "torch.max", "torch.max", "predict.int", "target.int", "pixel_correct.cpu().numpy", "pixel_labeled.cpu().numpy", "pixel_correct.cpu", "pixel_labeled.cpu"], "function", ["None"], ["", "", "def", "batch_pix_accuracy", "(", "output", ",", "target", ")", ":", "\n", "    ", "_", ",", "predict", "=", "torch", ".", "max", "(", "output", ",", "1", ")", "\n", "\n", "predict", "=", "predict", ".", "int", "(", ")", "+", "1", "\n", "target", "=", "target", ".", "int", "(", ")", "+", "1", "\n", "\n", "pixel_labeled", "=", "(", "target", ">", "0", ")", ".", "sum", "(", ")", "\n", "pixel_correct", "=", "(", "(", "predict", "==", "target", ")", "*", "(", "target", ">", "0", ")", ")", ".", "sum", "(", ")", "\n", "assert", "pixel_correct", "<=", "pixel_labeled", ",", "\"Correct area should be smaller than Labeled\"", "\n", "return", "pixel_correct", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "pixel_labeled", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.batch_intersection_union": [[55, 69], ["torch.max", "torch.max", "torch.max", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "intersection.float", "predict.float", "target.float", "torch.histc.cpu().numpy", "area_union.cpu().numpy", "torch.histc.cpu", "area_union.cpu"], "function", ["None"], ["", "def", "batch_intersection_union", "(", "output", ",", "target", ",", "num_class", ")", ":", "\n", "    ", "_", ",", "predict", "=", "torch", ".", "max", "(", "output", ",", "1", ")", "\n", "predict", "=", "predict", "+", "1", "\n", "target", "=", "target", "+", "1", "\n", "\n", "predict", "=", "predict", "*", "(", "target", ">", "0", ")", ".", "long", "(", ")", "\n", "intersection", "=", "predict", "*", "(", "predict", "==", "target", ")", ".", "long", "(", ")", "\n", "\n", "area_inter", "=", "torch", ".", "histc", "(", "intersection", ".", "float", "(", ")", ",", "bins", "=", "num_class", ",", "max", "=", "num_class", ",", "min", "=", "1", ")", "\n", "area_pred", "=", "torch", ".", "histc", "(", "predict", ".", "float", "(", ")", ",", "bins", "=", "num_class", ",", "max", "=", "num_class", ",", "min", "=", "1", ")", "\n", "area_lab", "=", "torch", ".", "histc", "(", "target", ".", "float", "(", ")", ",", "bins", "=", "num_class", ",", "max", "=", "num_class", ",", "min", "=", "1", ")", "\n", "area_union", "=", "area_pred", "+", "area_lab", "-", "area_inter", "\n", "assert", "(", "area_inter", "<=", "area_union", ")", ".", "all", "(", ")", ",", "\"Intersection area should be smaller than Union area\"", "\n", "return", "area_inter", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "area_union", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.eval_metrics": [[71, 77], ["target.clone.clone", "metrics.batch_pix_accuracy", "metrics.batch_intersection_union", "numpy.round", "numpy.round", "numpy.round", "numpy.round"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.batch_pix_accuracy", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.batch_intersection_union"], ["", "def", "eval_metrics", "(", "output", ",", "target", ",", "num_classes", ")", ":", "\n", "    ", "target", "=", "target", ".", "clone", "(", ")", "\n", "# target[target == ignore_index] = -1", "\n", "correct", ",", "labeled", "=", "batch_pix_accuracy", "(", "output", ".", "data", ",", "target", ")", "\n", "inter", ",", "union", "=", "batch_intersection_union", "(", "output", ".", "data", ",", "target", ",", "num_classes", ")", "\n", "return", "[", "np", ".", "round", "(", "correct", ",", "5", ")", ",", "np", ".", "round", "(", "labeled", ",", "5", ")", ",", "np", ".", "round", "(", "inter", ",", "5", ")", ",", "np", ".", "round", "(", "union", ",", "5", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.pixel_accuracy": [[80, 86], ["numpy.asarray", "numpy.asarray", "numpy.sum", "numpy.sum"], "function", ["None"], ["", "def", "pixel_accuracy", "(", "output", ",", "target", ")", ":", "\n", "    ", "output", "=", "np", ".", "asarray", "(", "output", ")", "\n", "target", "=", "np", ".", "asarray", "(", "target", ")", "\n", "pixel_labeled", "=", "np", ".", "sum", "(", "target", ">", "0", ")", "\n", "pixel_correct", "=", "np", ".", "sum", "(", "(", "output", "==", "target", ")", "*", "(", "target", ">", "0", ")", ")", "\n", "return", "pixel_correct", ",", "pixel_labeled", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.inter_over_union": [[88, 99], ["numpy.histogram", "numpy.histogram", "numpy.histogram", "numpy.asarray", "numpy.asarray"], "function", ["None"], ["", "def", "inter_over_union", "(", "output", ",", "target", ",", "num_class", ")", ":", "\n", "    ", "output", "=", "np", ".", "asarray", "(", "output", ")", "+", "1", "\n", "target", "=", "np", ".", "asarray", "(", "target", ")", "+", "1", "\n", "output", "=", "output", "*", "(", "target", ">", "0", ")", "\n", "\n", "intersection", "=", "output", "*", "(", "output", "==", "target", ")", "\n", "area_inter", ",", "_", "=", "np", ".", "histogram", "(", "intersection", ",", "bins", "=", "num_class", ",", "range", "=", "(", "1", ",", "num_class", ")", ")", "\n", "area_pred", ",", "_", "=", "np", ".", "histogram", "(", "output", ",", "bins", "=", "num_class", ",", "range", "=", "(", "1", ",", "num_class", ")", ")", "\n", "area_lab", ",", "_", "=", "np", ".", "histogram", "(", "target", ",", "bins", "=", "num_class", ",", "range", "=", "(", "1", ",", "num_class", ")", ")", "\n", "area_union", "=", "area_pred", "+", "area_lab", "-", "area_inter", "\n", "return", "area_inter", ",", "area_union", "", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.logger.Logger.__init__": [[13, 15], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "entries", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.logger.Logger.add_entry": [[16, 18], ["len"], "methods", ["None"], ["", "def", "add_entry", "(", "self", ",", "entry", ")", ":", "\n", "        ", "self", ".", "entries", "[", "len", "(", "self", ".", "entries", ")", "+", "1", "]", "=", "entry", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.logger.Logger.__str__": [[19, 21], ["json.dumps"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "json", ".", "dumps", "(", "self", ".", "entries", ",", "sort_keys", "=", "True", ",", "indent", "=", "4", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.ramps.sigmoid_rampup": [[3, 9], ["numpy.clip", "float", "numpy.exp"], "function", ["None"], ["def", "sigmoid_rampup", "(", "current", ",", "rampup_length", ")", ":", "\n", "    ", "if", "rampup_length", "==", "0", ":", "\n", "        ", "return", "1.0", "\n", "", "current", "=", "np", ".", "clip", "(", "current", ",", "0.0", ",", "rampup_length", ")", "\n", "phase", "=", "1.0", "-", "current", "/", "rampup_length", "\n", "return", "float", "(", "np", ".", "exp", "(", "-", "5.0", "*", "phase", "*", "phase", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.ramps.linear_rampup": [[10, 15], ["None"], "function", ["None"], ["", "def", "linear_rampup", "(", "current", ",", "rampup_length", ")", ":", "\n", "    ", "assert", "current", ">=", "0", "and", "rampup_length", ">=", "0", "\n", "if", "current", ">=", "rampup_length", ":", "\n", "        ", "return", "1.0", "\n", "", "return", "current", "/", "rampup_length", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.ramps.cosine_rampup": [[16, 21], ["numpy.clip", "float", "numpy.cos"], "function", ["None"], ["", "def", "cosine_rampup", "(", "current", ",", "rampup_length", ")", ":", "\n", "    ", "if", "rampup_length", "==", "0", ":", "\n", "        ", "return", "1.0", "\n", "", "current", "=", "np", ".", "clip", "(", "current", ",", "0.0", ",", "rampup_length", ")", "\n", "return", "1", "-", "float", "(", ".5", "*", "(", "np", ".", "cos", "(", "np", ".", "pi", "*", "current", "/", "rampup_length", ")", "+", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.ramps.log_rampup": [[22, 27], ["numpy.clip", "float", "numpy.exp"], "function", ["None"], ["", "def", "log_rampup", "(", "current", ",", "rampup_length", ")", ":", "\n", "    ", "if", "rampup_length", "==", "0", ":", "\n", "        ", "return", "1.0", "\n", "", "current", "=", "np", ".", "clip", "(", "current", ",", "0.0", ",", "rampup_length", ")", "\n", "return", "float", "(", "1", "-", "np", ".", "exp", "(", "-", "5.0", "*", "current", "/", "rampup_length", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.ramps.exp_rampup": [[28, 33], ["numpy.clip", "float", "numpy.exp"], "function", ["None"], ["", "def", "exp_rampup", "(", "current", ",", "rampup_length", ")", ":", "\n", "    ", "if", "rampup_length", "==", "0", ":", "\n", "        ", "return", "1.0", "\n", "", "current", "=", "np", ".", "clip", "(", "current", ",", "0.0", ",", "rampup_length", ")", "\n", "return", "float", "(", "np", ".", "exp", "(", "5.0", "*", "(", "current", "/", "rampup_length", "-", "1", ")", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.helpers.DeNormalize.__init__": [[20, 23], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.helpers.DeNormalize.__call__": [[24, 28], ["zip", "t.mul_().add_", "t.mul_"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "for", "t", ",", "m", ",", "s", "in", "zip", "(", "tensor", ",", "self", ".", "mean", ",", "self", ".", "std", ")", ":", "\n", "            ", "t", ".", "mul_", "(", "s", ")", ".", "add_", "(", "m", ")", "\n", "", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.helpers.dir_exists": [[30, 33], ["os.path.exists", "os.makedirs"], "function", ["None"], ["", "", "def", "dir_exists", "(", "path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.helpers.initialize_weights": [[35, 48], ["model.modules", "isinstance", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.normal_", "torch.init.constant_"], "function", ["None"], ["", "", "def", "initialize_weights", "(", "*", "models", ")", ":", "\n", "    ", "for", "model", "in", "models", ":", "\n", "        ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.01", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.helpers.colorize_mask": [[50, 58], ["range", "PIL.Image.fromarray().convert", "PIL.Image.fromarray().convert.putpalette", "len", "palette.append", "PIL.Image.fromarray", "mask.astype"], "function", ["None"], ["", "", "", "", "def", "colorize_mask", "(", "mask", ",", "palette", ")", ":", "\n", "    ", "zero_pad", "=", "256", "*", "3", "-", "len", "(", "palette", ")", "\n", "for", "i", "in", "range", "(", "zero_pad", ")", ":", "\n", "                    ", "palette", ".", "append", "(", "0", ")", "\n", "", "palette", "[", "-", "3", ":", "]", "=", "[", "255", ",", "255", ",", "255", "]", "\n", "new_mask", "=", "PIL", ".", "Image", ".", "fromarray", "(", "mask", ".", "astype", "(", "np", ".", "uint8", ")", ")", ".", "convert", "(", "'P'", ")", "\n", "new_mask", ".", "putpalette", "(", "palette", ")", "\n", "return", "new_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.helpers.set_trainable_attr": [[60, 63], ["m.parameters"], "function", ["None"], ["", "def", "set_trainable_attr", "(", "m", ",", "b", ")", ":", "\n", "    ", "m", ".", "trainable", "=", "b", "\n", "for", "p", "in", "m", ".", "parameters", "(", ")", ":", "p", ".", "requires_grad", "=", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.helpers.apply_leaf": [[64, 71], ["isinstance", "isinstance", "list", "f", "len", "m.children", "helpers.apply_leaf"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.helpers.apply_leaf"], ["", "def", "apply_leaf", "(", "m", ",", "f", ")", ":", "\n", "    ", "c", "=", "m", "if", "isinstance", "(", "m", ",", "(", "list", ",", "tuple", ")", ")", "else", "list", "(", "m", ".", "children", "(", ")", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Module", ")", ":", "\n", "        ", "f", "(", "m", ")", "\n", "", "if", "len", "(", "c", ")", ">", "0", ":", "\n", "        ", "for", "l", "in", "c", ":", "\n", "            ", "apply_leaf", "(", "l", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.helpers.set_trainable": [[72, 74], ["helpers.apply_leaf", "helpers.set_trainable_attr"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.helpers.apply_leaf", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.helpers.set_trainable_attr"], ["", "", "", "def", "set_trainable", "(", "l", ",", "b", ")", ":", "\n", "    ", "apply_leaf", "(", "l", ",", "lambda", "m", ":", "set_trainable_attr", "(", "m", ",", "b", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.lr_scheduler.Step.__init__": [[6, 11], ["torch.optim.lr_scheduler._LRScheduler.__init__"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "num_epochs", ",", "steps", "=", "2", ",", "gamma", "=", "0.1", ",", "last_epoch", "=", "-", "1", ",", "**", "_", ")", ":", "\n", "        ", "self", ".", "step_size", "=", "num_epochs", "//", "steps", "\n", "self", ".", "num_epochs", "=", "num_epochs", "\n", "self", ".", "gamma", "=", "gamma", "\n", "super", "(", "Step", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.lr_scheduler.Step.get_lr": [[12, 17], ["None"], "methods", ["None"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "step_size", "!=", "0", ":", "\n", "            ", "return", "[", "base_lr", "*", "self", ".", "gamma", "**", "(", "self", ".", "last_epoch", "//", "self", ".", "step_size", ")", "\n", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "", "return", "self", ".", "base_lrs", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.lr_scheduler.Poly.__init__": [[19, 25], ["torch.optim.lr_scheduler._LRScheduler.__init__"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "num_epochs", ",", "iters_per_epoch", ",", "warmup_epochs", "=", "0", ",", "last_epoch", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "iters_per_epoch", "=", "iters_per_epoch", "\n", "self", ".", "cur_iter", "=", "0", "\n", "self", ".", "N", "=", "num_epochs", "*", "iters_per_epoch", "\n", "self", ".", "warmup_iters", "=", "warmup_epochs", "*", "iters_per_epoch", "\n", "super", "(", "Poly", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.lr_scheduler.Poly.get_lr": [[26, 36], ["pow"], "methods", ["None"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "T", "=", "self", ".", "last_epoch", "*", "self", ".", "iters_per_epoch", "+", "self", ".", "cur_iter", "\n", "factor", "=", "pow", "(", "(", "1", "-", "1.0", "*", "T", "/", "self", ".", "N", ")", ",", "0.9", ")", "\n", "if", "self", ".", "warmup_iters", ">", "0", "and", "T", "<", "self", ".", "warmup_iters", ":", "\n", "            ", "factor", "=", "1.0", "*", "T", "/", "self", ".", "warmup_iters", "\n", "\n", "", "self", ".", "cur_iter", "%=", "self", ".", "iters_per_epoch", "\n", "self", ".", "cur_iter", "+=", "1", "\n", "assert", "factor", ">=", "0", ",", "'error in lr_scheduler'", "\n", "return", "[", "base_lr", "*", "factor", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.lr_scheduler.OneCycle.__init__": [[38, 51], ["int", "torch.optim.lr_scheduler._LRScheduler.__init__"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "num_epochs", ",", "iters_per_epoch", "=", "0", ",", "last_epoch", "=", "-", "1", ",", "\n", "momentums", "=", "(", "0.85", ",", "0.95", ")", ",", "div_factor", "=", "25", ",", "phase1", "=", "0.3", ")", ":", "\n", "        ", "self", ".", "iters_per_epoch", "=", "iters_per_epoch", "\n", "self", ".", "cur_iter", "=", "0", "\n", "self", ".", "N", "=", "num_epochs", "*", "iters_per_epoch", "\n", "self", ".", "phase1_iters", "=", "int", "(", "self", ".", "N", "*", "phase1", ")", "\n", "self", ".", "phase2_iters", "=", "(", "self", ".", "N", "-", "self", ".", "phase1_iters", ")", "\n", "self", ".", "momentums", "=", "momentums", "\n", "self", ".", "mom_diff", "=", "momentums", "[", "1", "]", "-", "momentums", "[", "0", "]", "\n", "\n", "self", ".", "low_lrs", "=", "[", "opt_grp", "[", "'lr'", "]", "/", "div_factor", "for", "opt_grp", "in", "optimizer", ".", "param_groups", "]", "\n", "self", ".", "final_lrs", "=", "[", "opt_grp", "[", "'lr'", "]", "/", "(", "div_factor", "*", "1e4", ")", "for", "opt_grp", "in", "optimizer", ".", "param_groups", "]", "\n", "super", "(", "OneCycle", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.lr_scheduler.OneCycle.get_lr": [[52, 73], ["range", "range", "len", "len", "math.cos", "zip", "math.cos", "zip"], "methods", ["None"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "T", "=", "self", ".", "last_epoch", "*", "self", ".", "iters_per_epoch", "+", "self", ".", "cur_iter", "\n", "self", ".", "cur_iter", "%=", "self", ".", "iters_per_epoch", "\n", "self", ".", "cur_iter", "+=", "1", "\n", "\n", "# Going from base_lr / 25 -> base_lr", "\n", "if", "T", "<=", "self", ".", "phase1_iters", ":", "\n", "            ", "cos_anneling", "=", "(", "1", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "T", "/", "self", ".", "phase1_iters", ")", ")", "/", "2", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "optimizer", ".", "param_groups", ")", ")", ":", "\n", "                ", "self", ".", "optimizer", ".", "param_groups", "[", "i", "]", "[", "'momentum'", "]", "=", "self", ".", "momentums", "[", "0", "]", "+", "self", ".", "mom_diff", "*", "cos_anneling", "\n", "\n", "", "return", "[", "base_lr", "-", "(", "base_lr", "-", "low_lr", ")", "*", "cos_anneling", "\n", "for", "base_lr", ",", "low_lr", "in", "zip", "(", "self", ".", "base_lrs", ",", "self", ".", "low_lrs", ")", "]", "\n", "\n", "# Going from base_lr -> base_lr / (25e4)", "\n", "", "T", "-=", "self", ".", "phase1_iters", "\n", "cos_anneling", "=", "(", "1", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "T", "/", "self", ".", "phase2_iters", ")", ")", "/", "2", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "optimizer", ".", "param_groups", ")", ")", ":", "\n", "            ", "self", ".", "optimizer", ".", "param_groups", "[", "i", "]", "[", "'momentum'", "]", "=", "self", ".", "momentums", "[", "1", "]", "-", "self", ".", "mom_diff", "*", "cos_anneling", "\n", "", "return", "[", "final_lr", "+", "(", "base_lr", "-", "final_lr", ")", "*", "cos_anneling", "\n", "for", "base_lr", ",", "final_lr", "in", "zip", "(", "self", ".", "base_lrs", ",", "self", ".", "final_lrs", ")", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.pallete.get_voc_pallete": [[2, 18], ["range"], "function", ["None"], ["def", "get_voc_pallete", "(", "num_classes", ")", ":", "\n", "    ", "n", "=", "num_classes", "\n", "pallete", "=", "[", "0", "]", "*", "(", "n", "*", "3", ")", "\n", "for", "j", "in", "range", "(", "0", ",", "n", ")", ":", "\n", "            ", "lab", "=", "j", "\n", "pallete", "[", "j", "*", "3", "+", "0", "]", "=", "0", "\n", "pallete", "[", "j", "*", "3", "+", "1", "]", "=", "0", "\n", "pallete", "[", "j", "*", "3", "+", "2", "]", "=", "0", "\n", "i", "=", "0", "\n", "while", "(", "lab", ">", "0", ")", ":", "\n", "                    ", "pallete", "[", "j", "*", "3", "+", "0", "]", "|=", "(", "(", "(", "lab", ">>", "0", ")", "&", "1", ")", "<<", "(", "7", "-", "i", ")", ")", "\n", "pallete", "[", "j", "*", "3", "+", "1", "]", "|=", "(", "(", "(", "lab", ">>", "1", ")", "&", "1", ")", "<<", "(", "7", "-", "i", ")", ")", "\n", "pallete", "[", "j", "*", "3", "+", "2", "]", "|=", "(", "(", "(", "lab", ">>", "2", ")", "&", "1", ")", "<<", "(", "7", "-", "i", ")", ")", "\n", "i", "=", "i", "+", "1", "\n", "lab", ">>=", "3", "\n", "", "", "return", "pallete", "\n", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.consistency_weight.__init__": [[15, 23], ["getattr"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "final_w", ",", "iters_per_epoch", ",", "rampup_starts", "=", "0", ",", "rampup_ends", "=", "7", ",", "ramp_type", "=", "'sigmoid_rampup'", ")", ":", "\n", "        ", "self", ".", "final_w", "=", "final_w", "\n", "self", ".", "iters_per_epoch", "=", "iters_per_epoch", "\n", "self", ".", "rampup_starts", "=", "rampup_starts", "*", "iters_per_epoch", "\n", "self", ".", "rampup_ends", "=", "rampup_ends", "*", "iters_per_epoch", "\n", "self", ".", "rampup_length", "=", "(", "self", ".", "rampup_ends", "-", "self", ".", "rampup_starts", ")", "\n", "self", ".", "rampup_func", "=", "getattr", "(", "ramps", ",", "ramp_type", ")", "\n", "self", ".", "current_rampup", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.consistency_weight.__call__": [[24, 30], ["losses.consistency_weight.rampup_func"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "epoch", ",", "curr_iter", ")", ":", "\n", "        ", "cur_total_iter", "=", "self", ".", "iters_per_epoch", "*", "epoch", "+", "curr_iter", "\n", "if", "cur_total_iter", "<", "self", ".", "rampup_starts", ":", "\n", "            ", "return", "0", "\n", "", "self", ".", "current_rampup", "=", "self", ".", "rampup_func", "(", "cur_total_iter", "-", "self", ".", "rampup_starts", ",", "self", ".", "rampup_length", ")", "\n", "return", "self", ".", "final_w", "*", "self", ".", "current_rampup", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.dice_loss.__init__": [[61, 63], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "dice_loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.dice_loss.forward": [[64, 77], ["target.size", "input.view", "target.view", "loss.sum", "intersection.sum", "input.view.sum", "target.view.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "N", "=", "target", ".", "size", "(", "0", ")", "\n", "smooth", "=", "1", "\n", "\n", "input_flat", "=", "input", ".", "view", "(", "N", ",", "-", "1", ")", "\n", "target_flat", "=", "target", ".", "view", "(", "N", ",", "-", "1", ")", "\n", "\n", "intersection", "=", "input_flat", "*", "target_flat", "\n", "\n", "loss", "=", "2", "*", "(", "intersection", ".", "sum", "(", "1", ")", "+", "smooth", ")", "/", "(", "input_flat", ".", "sum", "(", "1", ")", "+", "target_flat", ".", "sum", "(", "1", ")", "+", "smooth", ")", "\n", "loss", "=", "1", "-", "loss", ".", "sum", "(", ")", "/", "N", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.abCE_loss.__init__": [[120, 136], ["torch.Module.__init__", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "getattr"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__"], ["def", "__init__", "(", "self", ",", "iters_per_epoch", ",", "epochs", ",", "num_classes", ",", "weight", "=", "None", ",", "\n", "reduction", "=", "'mean'", ",", "thresh", "=", "0.7", ",", "min_kept", "=", "1", ",", "ramp_type", "=", "'log_rampup'", ")", ":", "\n", "        ", "super", "(", "abCE_loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight", "=", "torch", ".", "FloatTensor", "(", "weight", ")", "if", "weight", "is", "not", "None", "else", "weight", "\n", "self", ".", "reduction", "=", "reduction", "\n", "self", ".", "thresh", "=", "thresh", "\n", "self", ".", "min_kept", "=", "min_kept", "\n", "self", ".", "ramp_type", "=", "ramp_type", "\n", "\n", "if", "ramp_type", "is", "not", "None", ":", "\n", "            ", "self", ".", "rampup_func", "=", "getattr", "(", "ramps", ",", "ramp_type", ")", "\n", "self", ".", "iters_per_epoch", "=", "iters_per_epoch", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "start", "=", "1", "/", "num_classes", "\n", "self", ".", "end", "=", "0.9", "\n", "self", ".", "total_num_iters", "=", "(", "epochs", "-", "(", "0.6", "*", "epochs", ")", ")", "*", "iters_per_epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.abCE_loss.threshold": [[137, 141], ["losses.abCE_loss.rampup_func"], "methods", ["None"], ["", "", "def", "threshold", "(", "self", ",", "curr_iter", ",", "epoch", ")", ":", "\n", "        ", "cur_total_iter", "=", "self", ".", "iters_per_epoch", "*", "epoch", "+", "curr_iter", "\n", "current_rampup", "=", "self", ".", "rampup_func", "(", "cur_total_iter", ",", "self", ".", "total_num_iters", ")", "\n", "return", "current_rampup", "*", "(", "self", ".", "end", "-", "self", ".", "start", ")", "+", "self", ".", "start", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.abCE_loss.forward": [[142, 170], ["torch.softmax", "torch.softmax", "torch.softmax", "target.clone", "torch.softmax.gather", "[].contiguous().sort", "max", "torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy.contiguous().view", "target.size", "target.clone.unsqueeze", "target.contiguous().view", "losses.abCE_loss.threshold", "select_loss_matrix.sum", "[].contiguous", "sort_prob.numel", "torch.cross_entropy.contiguous", "select_loss_matrix.numel", "select_loss_matrix.mean", "NotImplementedError", "target.contiguous", "min", "losses.abCE_loss.weight.to", "F.softmax.gather.contiguous().view", "sort_prob.numel", "F.softmax.gather.contiguous"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.abCE_loss.threshold"], ["", "def", "forward", "(", "self", ",", "predict", ",", "target", ",", "ignore_index", ",", "curr_iter", ",", "epoch", ")", ":", "\n", "        ", "batch_kept", "=", "self", ".", "min_kept", "*", "target", ".", "size", "(", "0", ")", "\n", "prob_out", "=", "F", ".", "softmax", "(", "predict", ",", "dim", "=", "1", ")", "\n", "tmp_target", "=", "target", ".", "clone", "(", ")", "\n", "tmp_target", "[", "tmp_target", "==", "ignore_index", "]", "=", "0", "\n", "prob", "=", "prob_out", ".", "gather", "(", "1", ",", "tmp_target", ".", "unsqueeze", "(", "1", ")", ")", "\n", "mask", "=", "target", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", ")", "!=", "ignore_index", "\n", "sort_prob", ",", "sort_indices", "=", "prob", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", ")", "[", "mask", "]", ".", "contiguous", "(", ")", ".", "sort", "(", ")", "\n", "\n", "if", "self", ".", "ramp_type", "is", "not", "None", ":", "\n", "            ", "thresh", "=", "self", ".", "threshold", "(", "curr_iter", "=", "curr_iter", ",", "epoch", "=", "epoch", ")", "\n", "", "else", ":", "\n", "            ", "thresh", "=", "self", ".", "thresh", "\n", "\n", "", "min_threshold", "=", "sort_prob", "[", "min", "(", "batch_kept", ",", "sort_prob", ".", "numel", "(", ")", "-", "1", ")", "]", "if", "sort_prob", ".", "numel", "(", ")", ">", "0", "else", "0.0", "\n", "threshold", "=", "max", "(", "min_threshold", ",", "thresh", ")", "\n", "loss_matrix", "=", "F", ".", "cross_entropy", "(", "predict", ",", "target", ",", "\n", "weight", "=", "self", ".", "weight", ".", "to", "(", "predict", ".", "device", ")", "if", "self", ".", "weight", "is", "not", "None", "else", "None", ",", "\n", "ignore_index", "=", "ignore_index", ",", "reduction", "=", "'none'", ")", "\n", "loss_matirx", "=", "loss_matrix", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", ")", "\n", "sort_loss_matirx", "=", "loss_matirx", "[", "mask", "]", "[", "sort_indices", "]", "\n", "select_loss_matrix", "=", "sort_loss_matirx", "[", "sort_prob", "<", "threshold", "]", "\n", "if", "self", ".", "reduction", "==", "'sum'", "or", "select_loss_matrix", ".", "numel", "(", ")", "==", "0", ":", "\n", "            ", "return", "select_loss_matrix", ".", "sum", "(", ")", "\n", "", "elif", "self", ".", "reduction", "==", "'mean'", ":", "\n", "            ", "return", "select_loss_matrix", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'Reduction Error!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.CE_loss": [[57, 59], ["torch.cross_entropy"], "function", ["None"], ["", "", "def", "CE_loss", "(", "input_logits", ",", "target_targets", ",", "temperature", "=", "1", ")", ":", "\n", "    ", "return", "F", ".", "cross_entropy", "(", "input_logits", "/", "temperature", ",", "target_targets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.softmax_kl_loss": [[97, 115], ["torch.log_softmax", "inputs.size", "F.softmax.size", "torch.softmax", "torch.kl_div", "torch.tensor().to.mean", "torch.kl_div", "torch.tensor().to.shape.numel", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor", "torch.tensor", "torch.tensor"], "function", ["None"], ["", "", "def", "softmax_kl_loss", "(", "inputs", ",", "targets", ",", "uncertainty_map_mse", "=", "None", ",", "conf_mask", "=", "False", ",", "threshold", "=", "None", ",", "use_softmax", "=", "False", ")", ":", "\n", "    ", "assert", "inputs", ".", "requires_grad", "==", "True", "and", "targets", ".", "requires_grad", "==", "False", "\n", "assert", "inputs", ".", "size", "(", ")", "==", "targets", ".", "size", "(", ")", "\n", "input_log_softmax", "=", "F", ".", "log_softmax", "(", "inputs", ",", "dim", "=", "1", ")", "\n", "if", "use_softmax", ":", "\n", "        ", "targets", "=", "F", ".", "softmax", "(", "targets", ",", "dim", "=", "1", ")", "\n", "\n", "", "if", "conf_mask", ":", "\n", "        ", "loss_mat", "=", "F", ".", "kl_div", "(", "input_log_softmax", ",", "targets", ",", "reduction", "=", "'none'", ")", "\n", "mask", "=", "(", "uncertainty_map_mse", "<", "0.12", ")", "\n", "# print(torch.max(mask))", "\n", "# print(loss_mat.size())", "\n", "loss_mat", "=", "loss_mat", "[", "mask", "]", "\n", "if", "loss_mat", ".", "shape", ".", "numel", "(", ")", "==", "0", ":", "loss_mat", "=", "torch", ".", "tensor", "(", "[", "0.", "]", ")", ".", "to", "(", "inputs", ".", "device", ")", "\n", "# return loss_mat.sum() / mask.shape.numel()", "\n", "return", "loss_mat", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "F", ".", "kl_div", "(", "input_log_softmax", ",", "targets", ",", "reduction", "=", "'mean'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.softmax_mse_loss": [[173, 191], ["torch.softmax", "F.softmax.size", "F.softmax.size", "torch.softmax", "torch.mse_loss", "torch.tensor().to.mean", "torch.mse_loss", "torch.tensor().to.shape.numel", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor", "torch.tensor", "torch.tensor"], "function", ["None"], ["", "", "", "def", "softmax_mse_loss", "(", "inputs", ",", "targets", ",", "uncertainty_map_mean", "=", "None", ",", "uncertainty_map_mse", "=", "None", ",", "conf_mask", "=", "False", ",", "threshold", "=", "None", ",", "use_softmax", "=", "False", ")", ":", "\n", "    ", "assert", "inputs", ".", "requires_grad", "==", "True", "and", "targets", ".", "requires_grad", "==", "False", "\n", "assert", "inputs", ".", "size", "(", ")", "==", "targets", ".", "size", "(", ")", "\n", "inputs", "=", "F", ".", "softmax", "(", "inputs", ",", "dim", "=", "1", ")", "\n", "if", "use_softmax", ":", "\n", "        ", "targets", "=", "F", ".", "softmax", "(", "targets", ",", "dim", "=", "1", ")", "\n", "\n", "", "if", "conf_mask", ":", "\n", "        ", "loss_mat", "=", "F", ".", "mse_loss", "(", "inputs", ",", "targets", ",", "reduction", "=", "'none'", ")", "\n", "# mask = ((uncertainty_map_mean > threshold) * (uncertainty_map_mse < 0.13))", "\n", "mask", "=", "uncertainty_map_mse", "<", "0.13", "\n", "# print(torch.max(mask))", "\n", "# print(loss_mat.size())", "\n", "loss_mat", "=", "loss_mat", "[", "mask", "]", "\n", "if", "loss_mat", ".", "shape", ".", "numel", "(", ")", "==", "0", ":", "loss_mat", "=", "torch", ".", "tensor", "(", "[", "0.", "]", ")", ".", "to", "(", "inputs", ".", "device", ")", "\n", "return", "loss_mat", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "F", ".", "mse_loss", "(", "inputs", ",", "targets", ",", "reduction", "=", "'mean'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.softmax_js_loss": [[210, 219], ["torch.kl_div", "torch.kl_div", "inputs.size", "targets.size", "torch.log_softmax", "torch.log", "torch.log", "torch.log", "torch.softmax"], "function", ["None"], ["", "", "def", "softmax_js_loss", "(", "inputs", ",", "targets", ",", "**", "_", ")", ":", "\n", "    ", "assert", "inputs", ".", "requires_grad", "==", "True", "and", "targets", ".", "requires_grad", "==", "False", "\n", "assert", "inputs", ".", "size", "(", ")", "==", "targets", ".", "size", "(", ")", "\n", "epsilon", "=", "1e-5", "\n", "\n", "M", "=", "(", "F", ".", "softmax", "(", "inputs", ",", "dim", "=", "1", ")", "+", "targets", ")", "*", "0.5", "\n", "kl1", "=", "F", ".", "kl_div", "(", "F", ".", "log_softmax", "(", "inputs", ",", "dim", "=", "1", ")", ",", "M", ",", "reduction", "=", "'mean'", ")", "\n", "kl2", "=", "F", ".", "kl_div", "(", "torch", ".", "log", "(", "targets", "+", "epsilon", ")", ",", "M", ",", "reduction", "=", "'mean'", ")", "\n", "return", "(", "kl1", "+", "kl2", ")", "*", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.pair_wise_loss": [[222, 242], ["isinstance", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "enumerate", "torch.zeros_like.mean().unsqueeze", "pw_loss.sum.sum", "pw_loss.sum.sum", "torch.stack", "torch.stack", "torch.stack", "torch.softmax", "pw_loss.sum.mean", "torch.randperm", "torch.randperm", "torch.randperm", "torch.zeros_like.mean", "torch.stack.size"], "function", ["None"], ["", "def", "pair_wise_loss", "(", "unsup_outputs", ",", "size_average", "=", "True", ",", "nbr_of_pairs", "=", "8", ")", ":", "\n", "\t", "\"\"\"\n\tPair-wise loss in the sup. mat.\n\t\"\"\"", "\n", "if", "isinstance", "(", "unsup_outputs", ",", "list", ")", ":", "\n", "\t\t", "unsup_outputs", "=", "torch", ".", "stack", "(", "unsup_outputs", ")", "\n", "\n", "# Only for a subset of the aux outputs to reduce computation and memory", "\n", "", "unsup_outputs", "=", "unsup_outputs", "[", "torch", ".", "randperm", "(", "unsup_outputs", ".", "size", "(", "0", ")", ")", "]", "\n", "unsup_outputs", "=", "unsup_outputs", "[", ":", "nbr_of_pairs", "]", "\n", "\n", "temp", "=", "torch", ".", "zeros_like", "(", "unsup_outputs", ")", "# For grad purposes", "\n", "for", "i", ",", "u", "in", "enumerate", "(", "unsup_outputs", ")", ":", "\n", "\t\t", "temp", "[", "i", "]", "=", "F", ".", "softmax", "(", "u", ",", "dim", "=", "1", ")", "\n", "", "mean_prediction", "=", "temp", ".", "mean", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "# Mean over the auxiliary outputs", "\n", "pw_loss", "=", "(", "(", "temp", "-", "mean_prediction", ")", "**", "2", ")", ".", "mean", "(", "0", ")", "# Variance", "\n", "pw_loss", "=", "pw_loss", ".", "sum", "(", "1", ")", "# Sum over classes", "\n", "if", "size_average", ":", "\n", "\t\t", "return", "pw_loss", ".", "mean", "(", ")", "\n", "", "return", "pw_loss", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.compute_sdf": [[243, 271], ["img_gt.astype.astype", "numpy.zeros", "range", "img_gt[].astype", "img_gt[].astype.any", "scipy.ndimage.distance_transform_edt", "scipy.ndimage.distance_transform_edt", "skimage.segmentation.find_boundaries().astype", "skimage.segmentation.find_boundaries", "numpy.min", "numpy.max", "numpy.min", "numpy.min", "numpy.max", "numpy.min"], "function", ["None"], ["", "def", "compute_sdf", "(", "img_gt", ",", "out_shape", ")", ":", "\n", "    ", "\"\"\"\n    compute the signed distance map of binary mask\n    input: segmentation, shape = (batch_size, x, y, z)\n    output: the Signed Distance Map (SDM)\n    sdf(x) = 0; x in segmentation boundary\n             -inf|x-y|; x in segmentation\n             +inf|x-y|; x out of segmentation\n    normalize sdf to [-1,1]\n    \"\"\"", "\n", "\n", "img_gt", "=", "img_gt", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "normalized_sdf", "=", "np", ".", "zeros", "(", "out_shape", ")", "\n", "\n", "for", "b", "in", "range", "(", "out_shape", "[", "0", "]", ")", ":", "# batch size", "\n", "        ", "posmask", "=", "img_gt", "[", "b", "]", ".", "astype", "(", "np", ".", "bool", ")", "\n", "if", "posmask", ".", "any", "(", ")", ":", "\n", "            ", "negmask", "=", "~", "posmask", "\n", "posdis", "=", "distance", "(", "posmask", ")", "\n", "negdis", "=", "distance", "(", "negmask", ")", "\n", "boundary", "=", "skimage_seg", ".", "find_boundaries", "(", "posmask", ",", "mode", "=", "'inner'", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "sdf", "=", "(", "negdis", "-", "np", ".", "min", "(", "negdis", ")", ")", "/", "(", "np", ".", "max", "(", "negdis", ")", "-", "np", ".", "min", "(", "negdis", ")", ")", "-", "(", "posdis", "-", "np", ".", "min", "(", "posdis", ")", ")", "/", "(", "np", ".", "max", "(", "posdis", ")", "-", "np", ".", "min", "(", "posdis", ")", ")", "\n", "sdf", "[", "boundary", "==", "1", "]", "=", "0", "\n", "normalized_sdf", "[", "b", "]", "=", "sdf", "\n", "# assert np.min(sdf) == -1.0, print(np.min(posdis), np.max(posdis), np.min(negdis), np.max(negdis))", "\n", "# assert np.max(sdf) ==  1.0, print(np.min(posdis), np.min(negdis), np.max(posdis), np.max(negdis))", "\n", "\n", "", "", "return", "normalized_sdf", "", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder._PSPModule.__init__": [[13, 23], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "torch.Sequential", "len", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "encoder._PSPModule._make_stages", "len"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder._PSPModule._make_stages"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "bin_sizes", ")", ":", "\n", "        ", "super", "(", "_PSPModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "out_channels", "=", "in_channels", "//", "len", "(", "bin_sizes", ")", "\n", "self", ".", "stages", "=", "nn", ".", "ModuleList", "(", "[", "self", ".", "_make_stages", "(", "in_channels", ",", "out_channels", ",", "b_s", ")", "for", "b_s", "in", "bin_sizes", "]", ")", "\n", "self", ".", "bottleneck", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "+", "(", "out_channels", "*", "len", "(", "bin_sizes", ")", ")", ",", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder._PSPModule._make_stages": [[25, 31], ["torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d"], ["", "def", "_make_stages", "(", "self", ",", "in_channels", ",", "out_channels", ",", "bin_sz", ")", ":", "\n", "        ", "prior", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "bin_sz", ")", "\n", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", "\n", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "return", "nn", ".", "Sequential", "(", "prior", ",", "conv", ",", "bn", ",", "relu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder._PSPModule.forward": [[32, 39], ["pyramids.extend", "encoder._PSPModule.bottleneck", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "features.size", "features.size", "torch.interpolate", "torch.interpolate", "torch.interpolate", "stage"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "h", ",", "w", "=", "features", ".", "size", "(", ")", "[", "2", "]", ",", "features", ".", "size", "(", ")", "[", "3", "]", "\n", "pyramids", "=", "[", "features", "]", "\n", "pyramids", ".", "extend", "(", "[", "F", ".", "interpolate", "(", "stage", "(", "features", ")", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "for", "stage", "in", "self", ".", "stages", "]", ")", "\n", "output", "=", "self", ".", "bottleneck", "(", "torch", ".", "cat", "(", "pyramids", ",", "dim", "=", "1", ")", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder.ConvBlock.__init__": [[41, 63], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ops.append", "ops.append", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "ops.append", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "ops.append", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "ops.append", "torch.InstanceNorm3d", "torch.InstanceNorm3d", "torch.InstanceNorm3d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d"], ["    ", "def", "__init__", "(", "self", ",", "n_stages", ",", "n_filters_in", ",", "n_filters_out", ",", "normalization", "=", "'none'", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "ops", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_stages", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "input_channel", "=", "n_filters_in", "\n", "", "else", ":", "\n", "                ", "input_channel", "=", "n_filters_out", "\n", "\n", "", "ops", ".", "append", "(", "nn", ".", "Conv3d", "(", "input_channel", ",", "n_filters_out", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "if", "normalization", "==", "'batchnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "BatchNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'groupnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "GroupNorm", "(", "num_groups", "=", "16", ",", "num_channels", "=", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'instancenorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "InstanceNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "!=", "'none'", ":", "\n", "                ", "assert", "False", "\n", "", "ops", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder.ConvBlock.forward": [[64, 67], ["encoder.ConvBlock.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder.ResidualConvBlock.__init__": [[70, 95], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "ops.append", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "ops.append", "ops.append", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "ops.append", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "ops.append", "torch.InstanceNorm3d", "torch.InstanceNorm3d", "torch.InstanceNorm3d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d"], ["    ", "def", "__init__", "(", "self", ",", "n_stages", ",", "n_filters_in", ",", "n_filters_out", ",", "normalization", "=", "'none'", ")", ":", "\n", "        ", "super", "(", "ResidualConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "ops", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_stages", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "input_channel", "=", "n_filters_in", "\n", "", "else", ":", "\n", "                ", "input_channel", "=", "n_filters_out", "\n", "\n", "", "ops", ".", "append", "(", "nn", ".", "Conv3d", "(", "input_channel", ",", "n_filters_out", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "if", "normalization", "==", "'batchnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "BatchNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'groupnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "GroupNorm", "(", "num_groups", "=", "16", ",", "num_channels", "=", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'instancenorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "InstanceNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "!=", "'none'", ":", "\n", "                ", "assert", "False", "\n", "\n", "", "if", "i", "!=", "n_stages", "-", "1", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "", "", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "ops", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder.ResidualConvBlock.forward": [[96, 100], ["encoder.ResidualConvBlock.relu", "encoder.ResidualConvBlock.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "(", "self", ".", "conv", "(", "x", ")", "+", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder.DownsamplingConvBlock.__init__": [[103, 123], ["torch.Module.__init__", "ops.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ops.append", "ops.append", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "ops.append", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "ops.append", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "ops.append", "torch.InstanceNorm3d", "torch.InstanceNorm3d", "torch.InstanceNorm3d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d"], ["    ", "def", "__init__", "(", "self", ",", "n_filters_in", ",", "n_filters_out", ",", "stride", "=", "2", ",", "normalization", "=", "'none'", ")", ":", "\n", "        ", "super", "(", "DownsamplingConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "ops", "=", "[", "]", "\n", "if", "normalization", "!=", "'none'", ":", "\n", "            ", "ops", ".", "append", "(", "nn", ".", "Conv3d", "(", "n_filters_in", ",", "n_filters_out", ",", "stride", ",", "padding", "=", "0", ",", "stride", "=", "stride", ")", ")", "\n", "if", "normalization", "==", "'batchnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "BatchNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'groupnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "GroupNorm", "(", "num_groups", "=", "16", ",", "num_channels", "=", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'instancenorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "InstanceNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "else", ":", "\n", "                ", "assert", "False", "\n", "", "", "else", ":", "\n", "            ", "ops", ".", "append", "(", "nn", ".", "Conv3d", "(", "n_filters_in", ",", "n_filters_out", ",", "stride", ",", "padding", "=", "0", ",", "stride", "=", "stride", ")", ")", "\n", "\n", "", "ops", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder.DownsamplingConvBlock.forward": [[124, 127], ["encoder.DownsamplingConvBlock.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder.UpsamplingDeconvBlock.__init__": [[130, 150], ["torch.Module.__init__", "ops.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ops.append", "ops.append", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "ops.append", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "ops.append", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "ops.append", "torch.InstanceNorm3d", "torch.InstanceNorm3d", "torch.InstanceNorm3d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d"], ["    ", "def", "__init__", "(", "self", ",", "n_filters_in", ",", "n_filters_out", ",", "stride", "=", "2", ",", "normalization", "=", "'none'", ")", ":", "\n", "        ", "super", "(", "UpsamplingDeconvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "ops", "=", "[", "]", "\n", "if", "normalization", "!=", "'none'", ":", "\n", "            ", "ops", ".", "append", "(", "nn", ".", "ConvTranspose3d", "(", "n_filters_in", ",", "n_filters_out", ",", "stride", ",", "padding", "=", "0", ",", "stride", "=", "stride", ")", ")", "\n", "if", "normalization", "==", "'batchnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "BatchNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'groupnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "GroupNorm", "(", "num_groups", "=", "16", ",", "num_channels", "=", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'instancenorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "InstanceNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "else", ":", "\n", "                ", "assert", "False", "\n", "", "", "else", ":", "\n", "            ", "ops", ".", "append", "(", "nn", ".", "ConvTranspose3d", "(", "n_filters_in", ",", "n_filters_out", ",", "stride", ",", "padding", "=", "0", ",", "stride", "=", "stride", ")", ")", "\n", "\n", "", "ops", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder.UpsamplingDeconvBlock.forward": [[151, 154], ["encoder.UpsamplingDeconvBlock.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder.Upsampling.__init__": [[157, 174], ["torch.Module.__init__", "ops.append", "ops.append", "ops.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "ops.append", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "ops.append", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "ops.append", "torch.InstanceNorm3d", "torch.InstanceNorm3d", "torch.InstanceNorm3d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d"], ["    ", "def", "__init__", "(", "self", ",", "n_filters_in", ",", "n_filters_out", ",", "stride", "=", "2", ",", "normalization", "=", "'none'", ")", ":", "\n", "        ", "super", "(", "Upsampling", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "ops", "=", "[", "]", "\n", "ops", ".", "append", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "stride", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", ")", "\n", "ops", ".", "append", "(", "nn", ".", "Conv3d", "(", "n_filters_in", ",", "n_filters_out", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "if", "normalization", "==", "'batchnorm'", ":", "\n", "            ", "ops", ".", "append", "(", "nn", ".", "BatchNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'groupnorm'", ":", "\n", "            ", "ops", ".", "append", "(", "nn", ".", "GroupNorm", "(", "num_groups", "=", "16", ",", "num_channels", "=", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'instancenorm'", ":", "\n", "            ", "ops", ".", "append", "(", "nn", ".", "InstanceNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "!=", "'none'", ":", "\n", "            ", "assert", "False", "\n", "", "ops", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder.Upsampling.forward": [[175, 178], ["encoder.Upsampling.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder.Encoder.__init__": [[182, 214], ["torch.Module.__init__", "encoder.ConvBlock", "encoder.DownsamplingConvBlock", "encoder.ConvBlock", "encoder.DownsamplingConvBlock", "encoder.ConvBlock", "encoder.DownsamplingConvBlock", "encoder.ConvBlock", "encoder.DownsamplingConvBlock", "encoder.ConvBlock", "encoder.UpsamplingDeconvBlock", "encoder.ConvBlock", "encoder.UpsamplingDeconvBlock", "encoder.ConvBlock", "encoder.UpsamplingDeconvBlock", "encoder.ConvBlock", "encoder.UpsamplingDeconvBlock", "encoder.ConvBlock", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Dropout3d", "torch.Dropout3d", "torch.Dropout3d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrained", "=", "None", ",", "n_channels", "=", "1", ",", "n_classes", "=", "2", ",", "n_filters", "=", "16", ",", "normalization", "=", "'batchnorm'", ",", "has_dropout", "=", "False", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "has_dropout", "=", "has_dropout", "\n", "\n", "self", ".", "block_one", "=", "ConvBlock", "(", "1", ",", "n_channels", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_one_dw", "=", "DownsamplingConvBlock", "(", "n_filters", ",", "2", "*", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_two", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_two_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "2", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_three", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_three_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_four", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_four_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_five", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "16", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_five_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "16", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_six", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_six_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_seven", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_seven_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_eight", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_eight_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "2", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_nine", "=", "ConvBlock", "(", "1", ",", "n_filters", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "out_conv", "=", "nn", ".", "Conv3d", "(", "n_filters", ",", "n_classes", ",", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout3d", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.encoder.Encoder.forward": [[215, 236], ["encoder.Encoder.block_one", "encoder.Encoder.block_one_dw", "encoder.Encoder.block_two", "encoder.Encoder.block_two_dw", "encoder.Encoder.block_three", "encoder.Encoder.block_three_dw", "encoder.Encoder.block_four", "encoder.Encoder.block_four_dw", "encoder.Encoder.block_five", "encoder.Encoder.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "x1", "=", "self", ".", "block_one", "(", "input", ")", "\n", "x1_dw", "=", "self", ".", "block_one_dw", "(", "x1", ")", "\n", "\n", "x2", "=", "self", ".", "block_two", "(", "x1_dw", ")", "\n", "x2_dw", "=", "self", ".", "block_two_dw", "(", "x2", ")", "\n", "\n", "x3", "=", "self", ".", "block_three", "(", "x2_dw", ")", "\n", "x3_dw", "=", "self", ".", "block_three_dw", "(", "x3", ")", "\n", "\n", "x4", "=", "self", ".", "block_four", "(", "x3_dw", ")", "\n", "x4_dw", "=", "self", ".", "block_four_dw", "(", "x4", ")", "\n", "\n", "x5", "=", "self", ".", "block_five", "(", "x4_dw", ")", "\n", "# x5 = F.dropout3d(x5, p=0.5, training=True)", "\n", "if", "self", ".", "has_dropout", ":", "\n", "            ", "x5", "=", "self", ".", "dropout", "(", "x5", ")", "\n", "\n", "", "res", "=", "[", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", "]", "\n", "\n", "return", "res", "\n", "", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.ConvBlock.__init__": [[15, 37], ["torch.nn.Module.__init__", "range", "torch.nn.Sequential", "torch.nn.Sequential", "ops.append", "ops.append", "torch.nn.Conv3d", "torch.nn.Conv3d", "ops.append", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "ops.append", "torch.nn.GroupNorm", "torch.nn.GroupNorm", "ops.append", "torch.nn.InstanceNorm3d", "torch.nn.InstanceNorm3d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d"], ["    ", "def", "__init__", "(", "self", ",", "n_stages", ",", "n_filters_in", ",", "n_filters_out", ",", "normalization", "=", "'none'", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "ops", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_stages", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "input_channel", "=", "n_filters_in", "\n", "", "else", ":", "\n", "                ", "input_channel", "=", "n_filters_out", "\n", "\n", "", "ops", ".", "append", "(", "nn", ".", "Conv3d", "(", "input_channel", ",", "n_filters_out", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "if", "normalization", "==", "'batchnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "BatchNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'groupnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "GroupNorm", "(", "num_groups", "=", "16", ",", "num_channels", "=", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'instancenorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "InstanceNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "!=", "'none'", ":", "\n", "                ", "assert", "False", "\n", "", "ops", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.ConvBlock.forward": [[38, 41], ["decoders.ConvBlock.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.ResidualConvBlock.__init__": [[44, 69], ["torch.nn.Module.__init__", "range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ReLU", "torch.nn.ReLU", "ops.append", "torch.nn.Conv3d", "torch.nn.Conv3d", "ops.append", "ops.append", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "ops.append", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.GroupNorm", "torch.nn.GroupNorm", "ops.append", "torch.nn.InstanceNorm3d", "torch.nn.InstanceNorm3d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d"], ["    ", "def", "__init__", "(", "self", ",", "n_stages", ",", "n_filters_in", ",", "n_filters_out", ",", "normalization", "=", "'none'", ")", ":", "\n", "        ", "super", "(", "ResidualConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "ops", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_stages", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "input_channel", "=", "n_filters_in", "\n", "", "else", ":", "\n", "                ", "input_channel", "=", "n_filters_out", "\n", "\n", "", "ops", ".", "append", "(", "nn", ".", "Conv3d", "(", "input_channel", ",", "n_filters_out", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "if", "normalization", "==", "'batchnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "BatchNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'groupnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "GroupNorm", "(", "num_groups", "=", "16", ",", "num_channels", "=", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'instancenorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "InstanceNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "!=", "'none'", ":", "\n", "                ", "assert", "False", "\n", "\n", "", "if", "i", "!=", "n_stages", "-", "1", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "", "", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "ops", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.ResidualConvBlock.forward": [[70, 74], ["decoders.ResidualConvBlock.relu", "decoders.ResidualConvBlock.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "(", "self", ".", "conv", "(", "x", ")", "+", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.DownsamplingConvBlock.__init__": [[77, 97], ["torch.nn.Module.__init__", "ops.append", "torch.nn.Sequential", "torch.nn.Sequential", "ops.append", "ops.append", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv3d", "torch.nn.Conv3d", "ops.append", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "ops.append", "torch.nn.GroupNorm", "torch.nn.GroupNorm", "ops.append", "torch.nn.InstanceNorm3d", "torch.nn.InstanceNorm3d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d"], ["    ", "def", "__init__", "(", "self", ",", "n_filters_in", ",", "n_filters_out", ",", "stride", "=", "2", ",", "normalization", "=", "'none'", ")", ":", "\n", "        ", "super", "(", "DownsamplingConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "ops", "=", "[", "]", "\n", "if", "normalization", "!=", "'none'", ":", "\n", "            ", "ops", ".", "append", "(", "nn", ".", "Conv3d", "(", "n_filters_in", ",", "n_filters_out", ",", "stride", ",", "padding", "=", "0", ",", "stride", "=", "stride", ")", ")", "\n", "if", "normalization", "==", "'batchnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "BatchNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'groupnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "GroupNorm", "(", "num_groups", "=", "16", ",", "num_channels", "=", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'instancenorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "InstanceNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "else", ":", "\n", "                ", "assert", "False", "\n", "", "", "else", ":", "\n", "            ", "ops", ".", "append", "(", "nn", ".", "Conv3d", "(", "n_filters_in", ",", "n_filters_out", ",", "stride", ",", "padding", "=", "0", ",", "stride", "=", "stride", ")", ")", "\n", "\n", "", "ops", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.DownsamplingConvBlock.forward": [[98, 101], ["decoders.DownsamplingConvBlock.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.UpsamplingDeconvBlock.__init__": [[104, 124], ["torch.nn.Module.__init__", "ops.append", "torch.nn.Sequential", "torch.nn.Sequential", "ops.append", "ops.append", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ConvTranspose3d", "torch.nn.ConvTranspose3d", "ops.append", "torch.nn.ConvTranspose3d", "torch.nn.ConvTranspose3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "ops.append", "torch.nn.GroupNorm", "torch.nn.GroupNorm", "ops.append", "torch.nn.InstanceNorm3d", "torch.nn.InstanceNorm3d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d"], ["    ", "def", "__init__", "(", "self", ",", "n_filters_in", ",", "n_filters_out", ",", "stride", "=", "2", ",", "normalization", "=", "'none'", ")", ":", "\n", "        ", "super", "(", "UpsamplingDeconvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "ops", "=", "[", "]", "\n", "if", "normalization", "!=", "'none'", ":", "\n", "            ", "ops", ".", "append", "(", "nn", ".", "ConvTranspose3d", "(", "n_filters_in", ",", "n_filters_out", ",", "stride", ",", "padding", "=", "0", ",", "stride", "=", "stride", ")", ")", "\n", "if", "normalization", "==", "'batchnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "BatchNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'groupnorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "GroupNorm", "(", "num_groups", "=", "16", ",", "num_channels", "=", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'instancenorm'", ":", "\n", "                ", "ops", ".", "append", "(", "nn", ".", "InstanceNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "else", ":", "\n", "                ", "assert", "False", "\n", "", "", "else", ":", "\n", "            ", "ops", ".", "append", "(", "nn", ".", "ConvTranspose3d", "(", "n_filters_in", ",", "n_filters_out", ",", "stride", ",", "padding", "=", "0", ",", "stride", "=", "stride", ")", ")", "\n", "\n", "", "ops", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.UpsamplingDeconvBlock.forward": [[125, 128], ["decoders.UpsamplingDeconvBlock.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.Upsampling.__init__": [[131, 148], ["torch.nn.Module.__init__", "ops.append", "ops.append", "ops.append", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Conv3d", "torch.nn.Conv3d", "ops.append", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "ops.append", "torch.nn.GroupNorm", "torch.nn.GroupNorm", "ops.append", "torch.nn.InstanceNorm3d", "torch.nn.InstanceNorm3d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d"], ["    ", "def", "__init__", "(", "self", ",", "n_filters_in", ",", "n_filters_out", ",", "stride", "=", "2", ",", "normalization", "=", "'none'", ")", ":", "\n", "        ", "super", "(", "Upsampling", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "ops", "=", "[", "]", "\n", "ops", ".", "append", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "stride", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", ")", "\n", "ops", ".", "append", "(", "nn", ".", "Conv3d", "(", "n_filters_in", ",", "n_filters_out", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", "\n", "if", "normalization", "==", "'batchnorm'", ":", "\n", "            ", "ops", ".", "append", "(", "nn", ".", "BatchNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'groupnorm'", ":", "\n", "            ", "ops", ".", "append", "(", "nn", ".", "GroupNorm", "(", "num_groups", "=", "16", ",", "num_channels", "=", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "==", "'instancenorm'", ":", "\n", "            ", "ops", ".", "append", "(", "nn", ".", "InstanceNorm3d", "(", "n_filters_out", ")", ")", "\n", "", "elif", "normalization", "!=", "'none'", ":", "\n", "            ", "assert", "False", "\n", "", "ops", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.Upsampling.forward": [[149, 152], ["decoders.Upsampling.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.PixelShuffle.__init__": [[173, 180], ["torch.nn.Module.__init__", "torch.nn.Conv3d", "torch.nn.Conv3d", "decoders.icnr", "decoders.Upsampling", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.icnr"], ["def", "__init__", "(", "self", ",", "n_channels", ",", "scale", ")", ":", "\n", "        ", "super", "(", "PixelShuffle", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "n_channels", ",", "n_channels", "*", "(", "scale", "**", "2", ")", ",", "kernel_size", "=", "1", ")", "\n", "icnr", "(", "self", ".", "conv", ".", "weight", ")", "\n", "# self.shuf = nn.PixelShuffle3D(scale)", "\n", "self", ".", "shuf", "=", "Upsampling", "(", "n_channels", "*", "(", "scale", "**", "2", ")", ",", "n_channels", ",", "normalization", "=", "'batchnorm'", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.PixelShuffle.forward": [[181, 184], ["decoders.PixelShuffle.shuf", "decoders.PixelShuffle.relu", "decoders.PixelShuffle.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "shuf", "(", "self", ".", "relu", "(", "self", ".", "conv", "(", "x", ")", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.MainDecoder.__init__": [[198, 221], ["torch.nn.Module.__init__", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Dropout3d", "torch.nn.Dropout3d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", "=", "1", ",", "n_classes", "=", "2", ",", "n_filters", "=", "16", ",", "normalization", "=", "'batchnorm'", ",", "has_dropout", "=", "False", ")", ":", "\n", "        ", "super", "(", "MainDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.upsample = upsample(conv_in_ch, num_classes, upscale=upscale)", "\n", "self", ".", "has_dropout", "=", "has_dropout", "\n", "\n", "self", ".", "block_five", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "16", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_five_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "16", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_six", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_six_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_seven", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_seven_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_eight", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_eight_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "2", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_nine", "=", "ConvBlock", "(", "1", ",", "n_filters", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "out_conv", "=", "nn", ".", "Conv3d", "(", "n_filters", ",", "n_classes", ",", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "out_conv2", "=", "nn", ".", "Conv3d", "(", "n_filters", ",", "n_classes", ",", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "tanh", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout3d", "(", "p", "=", "0.5", ",", "inplace", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.MainDecoder.forward": [[222, 253], ["decoders.MainDecoder.block_five_up", "decoders.MainDecoder.block_six", "decoders.MainDecoder.block_six_up", "decoders.MainDecoder.block_seven", "decoders.MainDecoder.block_seven_up", "decoders.MainDecoder.block_eight", "decoders.MainDecoder.block_eight_up", "decoders.MainDecoder.block_nine", "decoders.MainDecoder.out_conv", "decoders.MainDecoder.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "# x = self.upsample(x)", "\n", "# return x", "\n", "        ", "x1", "=", "features", "[", "0", "]", "\n", "x2", "=", "features", "[", "1", "]", "\n", "x3", "=", "features", "[", "2", "]", "\n", "x4", "=", "features", "[", "3", "]", "\n", "x5", "=", "features", "[", "4", "]", "\n", "\n", "x5_up", "=", "self", ".", "block_five_up", "(", "x5", ")", "\n", "x5_up", "=", "x5_up", "+", "x4", "\n", "\n", "x6", "=", "self", ".", "block_six", "(", "x5_up", ")", "\n", "x6_up", "=", "self", ".", "block_six_up", "(", "x6", ")", "\n", "x6_up", "=", "x6_up", "+", "x3", "\n", "\n", "x7", "=", "self", ".", "block_seven", "(", "x6_up", ")", "\n", "x7_up", "=", "self", ".", "block_seven_up", "(", "x7", ")", "\n", "x7_up", "=", "x7_up", "+", "x2", "\n", "\n", "x8", "=", "self", ".", "block_eight", "(", "x7_up", ")", "\n", "x8_up", "=", "self", ".", "block_eight_up", "(", "x8", ")", "\n", "x8_up", "=", "x8_up", "+", "x1", "\n", "x9", "=", "self", ".", "block_nine", "(", "x8_up", ")", "\n", "# x9 = F.dropout3d(x9, p=0.5, training=True)", "\n", "if", "self", ".", "has_dropout", ":", "\n", "            ", "x9", "=", "self", ".", "dropout", "(", "x9", ")", "\n", "", "out", "=", "self", ".", "out_conv", "(", "x9", ")", "\n", "# out_tanh = self.tanh(out)", "\n", "# out_seg = self.out_conv2(x9)", "\n", "return", "out", "#_tanh, out_seg", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.DropOutDecoder.__init__": [[256, 288], ["torch.nn.Module.__init__", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Dropout", "torch.nn.Dropout", "decoders.upsample"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample"], ["    ", "def", "__init__", "(", "self", ",", "upscale", ",", "conv_in_ch", ",", "n_channels", "=", "1", ",", "n_classes", "=", "2", ",", "n_filters", "=", "16", ",", "normalization", "=", "'none'", ",", "drop_rate", "=", "0.3", ")", ":", "\n", "        ", "super", "(", "DropOutDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "block_one", "=", "ConvBlock", "(", "1", ",", "n_channels", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_one_dw", "=", "DownsamplingConvBlock", "(", "n_filters", ",", "2", "*", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_two", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_two_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "2", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_three", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_three_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_four", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_four_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_five", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "16", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_five_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "16", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_six", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_six_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_seven", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_seven_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_eight", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_eight_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "2", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_nine", "=", "ConvBlock", "(", "1", ",", "n_filters", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "out_conv", "=", "nn", ".", "Conv3d", "(", "n_filters", ",", "n_classes", ",", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "drop_rate", ")", "\n", "self", ".", "upsample", "=", "upsample", "(", "conv_in_ch", ",", "n_classes", ",", "upscale", "=", "upscale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.DropOutDecoder.forward": [[289, 303], ["decoders.DropOutDecoder.dropout", "decoders.DropOutDecoder.upsample"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample"], ["", "def", "forward", "(", "self", ",", "features", ",", "_", ")", ":", "\n", "# x = self.upsample(self.dropout(x))", "\n", "# return x", "\n", "        ", "x1", "=", "features", "[", "0", "]", "\n", "x2", "=", "features", "[", "1", "]", "\n", "x3", "=", "features", "[", "2", "]", "\n", "x4", "=", "features", "[", "3", "]", "\n", "x5", "=", "features", "[", "4", "]", "\n", "\n", "x5", "=", "self", ".", "dropout", "(", "x5", ")", "\n", "\n", "out", "=", "self", ".", "upsample", "(", "x5", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.FeatureDropDecoder.__init__": [[306, 337], ["torch.nn.Module.__init__", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "torch.nn.Conv3d", "torch.nn.Conv3d", "decoders.upsample"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample"], ["    ", "def", "__init__", "(", "self", ",", "upscale", ",", "conv_in_ch", ",", "n_channels", "=", "1", ",", "n_classes", "=", "2", ",", "n_filters", "=", "16", ",", "normalization", "=", "'none'", ",", "drop_rate", "=", "0.3", ")", ":", "\n", "        ", "super", "(", "FeatureDropDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "block_one", "=", "ConvBlock", "(", "1", ",", "n_channels", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_one_dw", "=", "DownsamplingConvBlock", "(", "n_filters", ",", "2", "*", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_two", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_two_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "2", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_three", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_three_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_four", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_four_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_five", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "16", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_five_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "16", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_six", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_six_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_seven", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_seven_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_eight", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_eight_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "2", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_nine", "=", "ConvBlock", "(", "1", ",", "n_filters", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "out_conv", "=", "nn", ".", "Conv3d", "(", "n_filters", ",", "n_classes", ",", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "upsample", "=", "upsample", "(", "conv_in_ch", ",", "n_classes", ",", "upscale", "=", "upscale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.FeatureDropDecoder.feature_dropout": [[340, 347], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.max", "torch.max", "torch.max", "torch.max", "threshold.view().expand_as.view().expand_as.view().expand_as", "x.mul", "torch.mean.view", "torch.mean.view", "numpy.random.uniform", "x.size", "threshold.view().expand_as.view().expand_as.view", "x.size"], "methods", ["None"], ["", "def", "feature_dropout", "(", "self", ",", "x", ")", ":", "\n", "        ", "attention", "=", "torch", ".", "mean", "(", "x", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "max_val", ",", "_", "=", "torch", ".", "max", "(", "attention", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "threshold", "=", "max_val", "*", "np", ".", "random", ".", "uniform", "(", "0.7", ",", "0.9", ")", "\n", "threshold", "=", "threshold", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ",", "1", ")", ".", "expand_as", "(", "attention", ")", "\n", "drop_mask", "=", "(", "attention", "<", "threshold", ")", ".", "float", "(", ")", "\n", "return", "x", ".", "mul", "(", "drop_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.FeatureDropDecoder.forward": [[348, 360], ["decoders.FeatureDropDecoder.feature_dropout", "decoders.FeatureDropDecoder.upsample"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.FeatureDropDecoder.feature_dropout", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample"], ["", "def", "forward", "(", "self", ",", "features", ",", "_", ")", ":", "\n", "        ", "x1", "=", "features", "[", "0", "]", "\n", "x2", "=", "features", "[", "1", "]", "\n", "x3", "=", "features", "[", "2", "]", "\n", "x4", "=", "features", "[", "3", "]", "\n", "x5", "=", "features", "[", "4", "]", "\n", "\n", "x5", "=", "self", ".", "feature_dropout", "(", "x5", ")", "\n", "\n", "out", "=", "self", ".", "upsample", "(", "x5", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.FeatureNoiseDecoder.__init__": [[363, 394], ["torch.nn.Module.__init__", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "torch.nn.Conv3d", "torch.nn.Conv3d", "decoders.upsample", "torch.distributions.uniform.Uniform", "torch.distributions.uniform.Uniform"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample"], ["    ", "def", "__init__", "(", "self", ",", "upscale", ",", "conv_in_ch", ",", "n_filters", "=", "16", ",", "n_classes", "=", "2", ",", "normalization", "=", "'none'", ",", "drop_rate", "=", "0.3", ",", "uniform_range", "=", "0.3", ")", ":", "\n", "        ", "super", "(", "FeatureNoiseDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "block_one_dw", "=", "DownsamplingConvBlock", "(", "n_filters", ",", "2", "*", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_two", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_two_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "2", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_three", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_three_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_four", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_four_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_five", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "16", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_five_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "16", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_six", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_six_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_seven", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_seven_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_eight", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_eight_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "2", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_nine", "=", "ConvBlock", "(", "1", ",", "n_filters", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "out_conv", "=", "nn", ".", "Conv3d", "(", "n_filters", ",", "n_classes", ",", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "upsample", "=", "upsample", "(", "conv_in_ch", ",", "n_classes", ",", "upscale", "=", "upscale", ")", "\n", "self", ".", "uni_dist", "=", "Uniform", "(", "-", "uniform_range", ",", "uniform_range", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.FeatureNoiseDecoder.feature_based_noise": [[395, 399], ["decoders.FeatureNoiseDecoder.uni_dist.sample().to().unsqueeze", "x.mul", "decoders.FeatureNoiseDecoder.uni_dist.sample().to", "decoders.FeatureNoiseDecoder.uni_dist.sample"], "methods", ["None"], ["", "def", "feature_based_noise", "(", "self", ",", "x", ")", ":", "\n", "        ", "noise_vector", "=", "self", ".", "uni_dist", ".", "sample", "(", "x", ".", "shape", "[", "1", ":", "]", ")", ".", "to", "(", "x", ".", "device", ")", ".", "unsqueeze", "(", "0", ")", "\n", "x_noise", "=", "x", ".", "mul", "(", "noise_vector", ")", "+", "x", "\n", "return", "x_noise", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.FeatureNoiseDecoder.forward": [[400, 413], ["decoders.FeatureNoiseDecoder.feature_based_noise", "decoders.FeatureNoiseDecoder.upsample"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.FeatureNoiseDecoder.feature_based_noise", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample"], ["", "def", "forward", "(", "self", ",", "features", ",", "_", ")", ":", "\n", "# x = self.upsample(x)", "\n", "        ", "x1", "=", "features", "[", "0", "]", "\n", "x2", "=", "features", "[", "1", "]", "\n", "x3", "=", "features", "[", "2", "]", "\n", "x4", "=", "features", "[", "3", "]", "\n", "x5", "=", "features", "[", "4", "]", "\n", "\n", "x5", "=", "self", ".", "feature_based_noise", "(", "x5", ")", "\n", "\n", "out", "=", "self", ".", "upsample", "(", "x5", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.VATDecoder.__init__": [[454, 490], ["torch.nn.Module.__init__", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "torch.nn.Conv3d", "torch.nn.Conv3d", "decoders.upsample"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample"], ["    ", "def", "__init__", "(", "self", ",", "upscale", ",", "conv_in_ch", ",", "n_filters", "=", "16", ",", "n_classes", "=", "2", ",", "normalization", "=", "'none'", ",", "xi", "=", "1e-1", ",", "eps", "=", "10.0", ",", "iterations", "=", "5", ")", ":", "\n", "        ", "super", "(", "VATDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "xi", "=", "xi", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "it", "=", "iterations", "\n", "\n", "self", ".", "block_one_dw", "=", "DownsamplingConvBlock", "(", "n_filters", ",", "2", "*", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_two", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_two_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "2", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_three", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_three_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_four", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_four_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_five", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "16", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_five_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "16", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_six", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_six_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_seven", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_seven_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_eight", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_eight_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "2", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_nine", "=", "ConvBlock", "(", "1", ",", "n_filters", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "out_conv", "=", "nn", ".", "Conv3d", "(", "n_filters", ",", "n_classes", ",", "1", ",", "padding", "=", "0", ")", "\n", "\n", "# self.dropout = nn.Dropout(drop_rate)", "\n", "\n", "\n", "self", ".", "upsample", "=", "upsample", "(", "conv_in_ch", ",", "n_classes", ",", "upscale", "=", "upscale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.VATDecoder.forward": [[491, 502], ["decoders.get_r_adv", "decoders.VATDecoder.upsample"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.get_r_adv", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample"], ["", "def", "forward", "(", "self", ",", "features", ",", "_", ")", ":", "\n", "        ", "x1", "=", "features", "[", "0", "]", "\n", "x2", "=", "features", "[", "1", "]", "\n", "x3", "=", "features", "[", "2", "]", "\n", "x4", "=", "features", "[", "3", "]", "\n", "x5", "=", "features", "[", "4", "]", "\n", "\n", "r_adv", "=", "get_r_adv", "(", "x5", ",", "self", ".", "upsample", ",", "self", ".", "it", ",", "self", ".", "xi", ",", "self", ".", "eps", ")", "\n", "out", "=", "self", ".", "upsample", "(", "x5", "+", "r_adv", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.CutOutDecoder.__init__": [[546, 580], ["torch.nn.Module.__init__", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Dropout", "torch.nn.Dropout", "decoders.upsample"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample"], ["    ", "def", "__init__", "(", "self", ",", "upscale", ",", "conv_in_ch", ",", "n_filters", ",", "n_classes", ",", "normalization", ",", "drop_rate", "=", "0.3", ",", "erase", "=", "0.4", ")", ":", "\n", "        ", "super", "(", "CutOutDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "block_one_dw", "=", "DownsamplingConvBlock", "(", "n_filters", ",", "2", "*", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_two", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_two_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "2", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_three", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_three_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_four", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_four_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_five", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "16", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_five_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "16", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_six", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_six_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_seven", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_seven_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_eight", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_eight_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "2", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_nine", "=", "ConvBlock", "(", "1", ",", "n_filters", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "out_conv", "=", "nn", ".", "Conv3d", "(", "n_filters", ",", "n_classes", ",", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "drop_rate", ")", "\n", "\n", "self", ".", "erase", "=", "erase", "\n", "self", ".", "upscale", "=", "upscale", "\n", "self", ".", "upsample", "=", "upsample", "(", "conv_in_ch", ",", "n_classes", ",", "upscale", "=", "upscale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.CutOutDecoder.forward": [[581, 593], ["decoders.guided_cutout", "decoders.CutOutDecoder.upsample", "x5.size", "x5.size", "x5.size"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.guided_cutout", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample"], ["", "def", "forward", "(", "self", ",", "features", ",", "pred", "=", "None", ")", ":", "\n", "        ", "x1", "=", "features", "[", "0", "]", "\n", "x2", "=", "features", "[", "1", "]", "\n", "x3", "=", "features", "[", "2", "]", "\n", "x4", "=", "features", "[", "3", "]", "\n", "x5", "=", "features", "[", "4", "]", "\n", "\n", "maskcut", "=", "guided_cutout", "(", "pred", ",", "upscale", "=", "self", ".", "upscale", ",", "erase", "=", "self", ".", "erase", ",", "resize", "=", "(", "x5", ".", "size", "(", "2", ")", ",", "x5", ".", "size", "(", "3", ")", ",", "x5", ".", "size", "(", "4", ")", ")", ")", "\n", "x5", "=", "x5", "*", "maskcut", "\n", "out", "=", "self", ".", "upsample", "(", "x5", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.ContextMaskingDecoder.__init__": [[613, 644], ["torch.nn.Module.__init__", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "torch.nn.Conv3d", "torch.nn.Conv3d", "decoders.upsample"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample"], ["    ", "def", "__init__", "(", "self", ",", "upscale", ",", "conv_in_ch", ",", "n_filters", ",", "n_classes", ",", "normalization", ")", ":", "\n", "        ", "super", "(", "ContextMaskingDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "block_one_dw", "=", "DownsamplingConvBlock", "(", "n_filters", ",", "2", "*", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_two", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_two_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "2", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_three", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_three_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_four", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_four_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_five", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "16", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_five_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "16", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_six", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_six_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_seven", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_seven_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_eight", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_eight_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "2", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_nine", "=", "ConvBlock", "(", "1", ",", "n_filters", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "out_conv", "=", "nn", ".", "Conv3d", "(", "n_filters", ",", "n_classes", ",", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "upscale", "=", "upscale", "\n", "self", ".", "upsample", "=", "upsample", "(", "conv_in_ch", ",", "n_classes", ",", "upscale", "=", "upscale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.ContextMaskingDecoder.forward": [[645, 659], ["decoders.guided_masking", "decoders.ContextMaskingDecoder.upsample", "x5.size", "x5.size", "x5.size"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.guided_masking", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample"], ["", "def", "forward", "(", "self", ",", "features", ",", "pred", "=", "None", ")", ":", "\n", "\n", "        ", "x1", "=", "features", "[", "0", "]", "\n", "x2", "=", "features", "[", "1", "]", "\n", "x3", "=", "features", "[", "2", "]", "\n", "x4", "=", "features", "[", "3", "]", "\n", "x5", "=", "features", "[", "4", "]", "\n", "\n", "x_masked_context", "=", "guided_masking", "(", "x5", ",", "pred", ",", "resize", "=", "(", "x5", ".", "size", "(", "2", ")", ",", "x5", ".", "size", "(", "3", ")", ",", "x5", ".", "size", "(", "4", ")", ")", ",", "\n", "upscale", "=", "self", ".", "upscale", ",", "return_msk_context", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "upsample", "(", "x_masked_context", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.ObjectMaskingDecoder.__init__": [[663, 693], ["torch.nn.Module.__init__", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.DownsamplingConvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "decoders.UpsamplingDeconvBlock", "decoders.ConvBlock", "torch.nn.Conv3d", "torch.nn.Conv3d", "decoders.upsample"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample"], ["    ", "def", "__init__", "(", "self", ",", "upscale", ",", "conv_in_ch", ",", "n_filters", ",", "n_classes", ",", "normalization", ")", ":", "\n", "        ", "super", "(", "ObjectMaskingDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "block_one_dw", "=", "DownsamplingConvBlock", "(", "n_filters", ",", "2", "*", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_two", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_two_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "2", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_three", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_three_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_four", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_four_dw", "=", "DownsamplingConvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_five", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "16", ",", "n_filters", "*", "16", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_five_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "16", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_six", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "8", ",", "n_filters", "*", "8", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_six_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "8", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_seven", "=", "ConvBlock", "(", "3", ",", "n_filters", "*", "4", ",", "n_filters", "*", "4", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_seven_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "4", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_eight", "=", "ConvBlock", "(", "2", ",", "n_filters", "*", "2", ",", "n_filters", "*", "2", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "block_eight_up", "=", "UpsamplingDeconvBlock", "(", "n_filters", "*", "2", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "\n", "self", ".", "block_nine", "=", "ConvBlock", "(", "1", ",", "n_filters", ",", "n_filters", ",", "normalization", "=", "normalization", ")", "\n", "self", ".", "out_conv", "=", "nn", ".", "Conv3d", "(", "n_filters", ",", "n_classes", ",", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "upscale", "=", "upscale", "\n", "self", ".", "upsample", "=", "upsample", "(", "conv_in_ch", ",", "n_classes", ",", "upscale", "=", "upscale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.ObjectMaskingDecoder.forward": [[694, 710], ["decoders.guided_masking", "decoders.guided_masking", "decoders.ObjectMaskingDecoder.upsample", "x5.size", "x5.size", "x5.size", "x5.size", "x5.size", "x5.size"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.guided_masking", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.guided_masking", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample"], ["", "def", "forward", "(", "self", ",", "features", ",", "pred", "=", "None", ")", ":", "\n", "        ", "x1", "=", "features", "[", "0", "]", "\n", "x2", "=", "features", "[", "1", "]", "\n", "x3", "=", "features", "[", "2", "]", "\n", "x4", "=", "features", "[", "3", "]", "\n", "x5", "=", "features", "[", "4", "]", "\n", "x_masked_obj", "=", "guided_masking", "(", "x5", ",", "pred", ",", "resize", "=", "(", "x5", ".", "size", "(", "2", ")", ",", "x5", ".", "size", "(", "3", ")", ",", "x5", ".", "size", "(", "4", ")", ")", ",", "\n", "upscale", "=", "self", ".", "upscale", ",", "return_msk_context", "=", "False", ")", "\n", "\n", "x_masked_context", "=", "guided_masking", "(", "x5", ",", "pred", ",", "resize", "=", "(", "x5", ".", "size", "(", "2", ")", ",", "x5", ".", "size", "(", "3", ")", ",", "x5", ".", "size", "(", "4", ")", ")", ",", "\n", "upscale", "=", "self", ".", "upscale", ",", "return_msk_context", "=", "True", ")", "\n", "\n", "out", "=", "self", ".", "upsample", "(", "x_masked_obj", ")", "\n", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.icnr": [[154, 166], ["int", "init().transpose", "k.contiguous().view().transpose.contiguous().view", "k.contiguous().view().transpose.repeat", "k.contiguous().view().transpose.contiguous().view().transpose", "x.data.copy_", "init", "k.contiguous().view().transpose.contiguous", "k.contiguous().view().transpose.contiguous().view", "torch.zeros", "torch.zeros", "k.contiguous().view().transpose.contiguous"], "function", ["None"], ["", "", "def", "icnr", "(", "x", ",", "scale", "=", "2", ",", "init", "=", "nn", ".", "init", ".", "kaiming_normal_", ")", ":", "\n", "    ", "\"\"\"\n    Checkerboard artifact free sub-pixel convolution\n    https://arxiv.org/abs/1707.02937\n    \"\"\"", "\n", "ni", ",", "nf", ",", "h", ",", "w", ",", "d", "=", "x", ".", "shape", "\n", "ni2", "=", "int", "(", "ni", "/", "(", "scale", "**", "2", ")", ")", "\n", "k", "=", "init", "(", "torch", ".", "zeros", "(", "[", "ni2", ",", "nf", ",", "h", ",", "w", ",", "d", "]", ")", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "k", "=", "k", ".", "contiguous", "(", ")", ".", "view", "(", "ni2", ",", "nf", ",", "-", "1", ")", "\n", "k", "=", "k", ".", "repeat", "(", "1", ",", "1", ",", "scale", "**", "2", ")", "\n", "k", "=", "k", ".", "contiguous", "(", ")", ".", "view", "(", "[", "nf", ",", "ni", ",", "h", ",", "w", ",", "d", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "x", ".", "data", ".", "copy_", "(", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.upsample": [[186, 195], ["torch.nn.Conv3d", "torch.nn.init.kaiming_normal_", "layers.append", "range", "torch.nn.Sequential", "int", "layers.append", "math.log", "decoders.PixelShuffle"], "function", ["None"], ["", "", "def", "upsample", "(", "in_channels", ",", "out_channels", ",", "upscale", ",", "kernel_size", "=", "3", ")", ":", "\n", "# A series of x 2 upsamling until we get to the upscale we want", "\n", "    ", "layers", "=", "[", "]", "\n", "conv1x1", "=", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "kaiming_normal_", "(", "conv1x1", ".", "weight", ".", "data", ",", "nonlinearity", "=", "'relu'", ")", "\n", "layers", ".", "append", "(", "conv1x1", ")", "\n", "for", "i", "in", "range", "(", "int", "(", "math", ".", "log", "(", "upscale", ",", "2", ")", ")", ")", ":", "\n", "        ", "layers", ".", "append", "(", "PixelShuffle", "(", "out_channels", ",", "scale", "=", "2", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders._l2_normalize": [[416, 421], ["d.view", "torch.norm", "torch.norm", "range", "d.dim"], "function", ["None"], ["", "", "def", "_l2_normalize", "(", "d", ")", ":", "\n", "# Normalizing per batch axis", "\n", "    ", "d_reshaped", "=", "d", ".", "view", "(", "d", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "*", "(", "1", "for", "_", "in", "range", "(", "d", ".", "dim", "(", ")", "-", "2", ")", ")", ")", "\n", "d", "/=", "torch", ".", "norm", "(", "d_reshaped", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "1e-8", "\n", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.get_r_adv": [[423, 451], ["x.detach", "torch.rand().sub().to", "torch.rand().sub().to", "decoders._l2_normalize", "range", "torch.no_grad", "torch.no_grad", "torch.softmax", "_l2_normalize.requires_grad_", "decoder", "torch.log_softmax", "torch.kl_div", "F.kl_div.backward", "decoders._l2_normalize", "decoder.zero_grad", "decoder", "torch.rand().sub", "torch.rand().sub", "torch.rand", "torch.rand"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders._l2_normalize", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders._l2_normalize"], ["", "def", "get_r_adv", "(", "x", ",", "decoder", ",", "it", "=", "1", ",", "xi", "=", "1e-1", ",", "eps", "=", "10.0", ")", ":", "\n", "    ", "\"\"\"\n    Virtual Adversarial Training\n    https://arxiv.org/abs/1704.03976\n    \"\"\"", "\n", "x_detached", "=", "x", ".", "detach", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "pred", "=", "F", ".", "softmax", "(", "decoder", "(", "x_detached", ")", ",", "dim", "=", "1", ")", "\n", "\n", "", "d", "=", "torch", ".", "rand", "(", "x", ".", "shape", ")", ".", "sub", "(", "0.5", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "d", "=", "_l2_normalize", "(", "d", ")", "\n", "\n", "for", "_", "in", "range", "(", "it", ")", ":", "\n", "        ", "d", ".", "requires_grad_", "(", ")", "\n", "pred_hat", "=", "decoder", "(", "x_detached", "+", "xi", "*", "d", ")", "\n", "logp_hat", "=", "F", ".", "log_softmax", "(", "pred_hat", ",", "dim", "=", "1", ")", "\n", "adv_distance", "=", "F", ".", "kl_div", "(", "logp_hat", ",", "pred", ",", "reduction", "=", "'batchmean'", ")", "\n", "# print ('a')", "\n", "# print (adv_distance)", "\n", "adv_distance", ".", "backward", "(", ")", "\n", "# print('c')", "\n", "\n", "d", "=", "_l2_normalize", "(", "d", ".", "grad", ")", "\n", "# print ('b')", "\n", "decoder", ".", "zero_grad", "(", ")", "\n", "\n", "", "r_adv", "=", "d", "*", "eps", "\n", "return", "r_adv", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.guided_cutout": [[505, 543], ["numpy.stack", "torch.from_numpy().float().unsqueeze_", "torch.from_numpy().float().unsqueeze_", "torch.interpolate", "F.interpolate.to", "len", "F.interpolate.unsqueeze_", "torch.interpolate", "numpy.uint8", "numpy.ones_like", "skimage.measure.label", "skimage.measure.regionprops", "np.stack.append", "random.randint", "mask.cpu().numpy", "random.randint", "random.randint", "random.randint", "torch.from_numpy().float", "torch.from_numpy().float", "F.interpolate.to", "F.interpolate.to", "int", "int", "int", "output.argmax", "torch.dropout", "mask.cpu", "int", "int", "int", "torch.from_numpy", "torch.from_numpy"], "function", ["None"], ["", "", "def", "guided_cutout", "(", "output", ",", "upscale", ",", "resize", ",", "erase", "=", "0.4", ",", "use_dropout", "=", "False", ")", ":", "\n", "    ", "if", "len", "(", "output", ".", "shape", ")", "==", "3", ":", "\n", "        ", "masks", "=", "(", "output", ">", "0", ")", ".", "float", "(", ")", "\n", "", "else", ":", "\n", "        ", "masks", "=", "(", "output", ".", "argmax", "(", "1", ")", ">", "0", ")", ".", "float", "(", ")", "\n", "\n", "", "if", "use_dropout", ":", "\n", "        ", "p_drop", "=", "random", ".", "randint", "(", "3", ",", "6", ")", "/", "10", "\n", "maskdroped", "=", "(", "F", ".", "dropout", "(", "masks", ",", "p_drop", ")", ">", "0", ")", ".", "float", "(", ")", "\n", "maskdroped", "=", "maskdroped", "+", "(", "1", "-", "masks", ")", "\n", "maskdroped", ".", "unsqueeze_", "(", "0", ")", "\n", "maskdroped", "=", "F", ".", "interpolate", "(", "maskdroped", ",", "size", "=", "resize", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "", "masks_np", "=", "[", "]", "\n", "for", "mask", "in", "masks", ":", "\n", "        ", "mask_np", "=", "np", ".", "uint8", "(", "mask", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "mask_ones", "=", "np", ".", "ones_like", "(", "mask_np", ")", "\n", "mask_label", "=", "measure", ".", "label", "(", "mask_np", ")", "\n", "mask_region", "=", "measure", ".", "regionprops", "(", "mask_label", ")", "\n", "for", "region", "in", "mask_region", ":", "\n", "            ", "min_w", ",", "min_h", ",", "min_d", ",", "max_w", ",", "max_h", ",", "max_d", "=", "region", "[", "'bbox'", "]", "\n", "bb_w", ",", "bb_h", ",", "bb_d", "=", "max_w", "-", "min_w", ",", "max_h", "-", "min_h", ",", "max_d", "-", "min_d", "\n", "rnd_start_w", "=", "random", ".", "randint", "(", "0", ",", "int", "(", "bb_w", "*", "(", "1", "-", "erase", ")", ")", ")", "\n", "rnd_start_h", "=", "random", ".", "randint", "(", "0", ",", "int", "(", "bb_h", "*", "(", "1", "-", "erase", ")", ")", ")", "\n", "rnd_start_d", "=", "random", ".", "randint", "(", "0", ",", "int", "(", "bb_d", "*", "(", "1", "-", "erase", ")", ")", ")", "\n", "h_start", ",", "h_end", "=", "min_h", "+", "rnd_start_h", ",", "min_h", "+", "rnd_start_h", "+", "int", "(", "bb_h", "*", "erase", ")", "\n", "w_start", ",", "w_end", "=", "min_w", "+", "rnd_start_w", ",", "min_w", "+", "rnd_start_w", "+", "int", "(", "bb_w", "*", "erase", ")", "\n", "d_start", ",", "d_end", "=", "min_d", "+", "rnd_start_d", ",", "min_d", "+", "rnd_start_d", "+", "int", "(", "bb_d", "*", "erase", ")", "\n", "mask_ones", "[", "h_start", ":", "h_end", ",", "w_start", ":", "w_end", ",", "d_start", ":", "d_end", "]", "=", "0", "\n", "", "masks_np", ".", "append", "(", "mask_ones", ")", "\n", "", "masks_np", "=", "np", ".", "stack", "(", "masks_np", ")", "\n", "\n", "maskcut", "=", "torch", ".", "from_numpy", "(", "masks_np", ")", ".", "float", "(", ")", ".", "unsqueeze_", "(", "1", ")", "\n", "maskcut", "=", "F", ".", "interpolate", "(", "maskcut", ",", "size", "=", "resize", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "if", "use_dropout", ":", "\n", "        ", "return", "maskcut", ".", "to", "(", "output", ".", "device", ")", ",", "maskdroped", ".", "to", "(", "output", ".", "device", ")", "\n", "", "return", "maskcut", ".", "to", "(", "output", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.decoders.guided_masking": [[595, 610], ["torch.interpolate", "len", "output.argmax"], "function", ["None"], ["", "", "def", "guided_masking", "(", "x", ",", "output", ",", "upscale", ",", "resize", ",", "return_msk_context", "=", "True", ")", ":", "\n", "    ", "if", "len", "(", "output", ".", "shape", ")", "==", "3", ":", "\n", "        ", "masks_context", "=", "(", "output", ">", "0", ")", ".", "float", "(", ")", ".", "unsqueeze", "(", "1", ")", "\n", "", "else", ":", "\n", "        ", "masks_context", "=", "(", "output", ".", "argmax", "(", "1", ")", ">", "0", ")", ".", "float", "(", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "", "masks_context", "=", "F", ".", "interpolate", "(", "masks_context", ",", "size", "=", "resize", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "x_masked_context", "=", "masks_context", "*", "x", "\n", "if", "return_msk_context", ":", "\n", "        ", "return", "x_masked_context", "\n", "\n", "", "masks_objects", "=", "(", "1", "-", "masks_context", ")", "\n", "x_masked_objects", "=", "masks_objects", "*", "x", "\n", "return", "x_masked_objects", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.__init__": [[15, 104], ["base.BaseModel.__init__", "models.encoder.Encoder", "MainDecoder", "conf.keys", "conf.keys", "conf.keys", "torch.nn.ModuleList", "torch.nn.ModuleList", "int", "int", "VATDecoder", "DropOutDecoder", "CutOutDecoder", "ContextMaskingDecoder", "ObjectMaskingDecoder", "FeatureDropDecoder", "FeatureNoiseDecoder", "ValueError", "range", "range", "range", "range", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ",", "conf", ",", "sup_loss", "=", "None", ",", "cons_w_unsup", "=", "None", ",", "testing", "=", "False", ",", "\n", "pretrained", "=", "True", ",", "use_weak_lables", "=", "False", ",", "weakly_loss_w", "=", "0.4", ",", "cons_w_flip", "=", "None", ")", ":", "\n", "\n", "# if not testing:", "\n", "#     assert (ignore_index is not None) and (sup_loss is not None) and (cons_w_unsup is not None)", "\n", "\n", "        ", "super", "(", "CCT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "int", "(", "conf", "[", "'supervised'", "]", ")", "+", "int", "(", "conf", "[", "'semi'", "]", ")", "==", "1", ",", "'one mode only'", "\n", "if", "conf", "[", "'supervised'", "]", ":", "\n", "            ", "self", ".", "mode", "=", "'supervised'", "\n", "", "else", ":", "\n", "            ", "self", ".", "mode", "=", "'semi'", "\n", "\n", "# Supervised and unsupervised losses", "\n", "# self.ignore_index = ignore_index", "\n", "", "if", "conf", "[", "'un_loss'", "]", "==", "\"KL\"", ":", "\n", "        \t", "self", ".", "unsuper_loss", "=", "softmax_kl_loss", "\n", "", "elif", "conf", "[", "'un_loss'", "]", "==", "\"MSE\"", ":", "\n", "        \t", "self", ".", "unsuper_loss", "=", "softmax_mse_loss", "\n", "", "elif", "conf", "[", "'un_loss'", "]", "==", "\"JS\"", ":", "\n", "        \t", "self", ".", "unsuper_loss", "=", "softmax_js_loss", "\n", "", "else", ":", "\n", "        \t", "raise", "ValueError", "(", "f\"Invalid supervised loss {conf['un_loss']}\"", ")", "\n", "\n", "", "if", "'pseudo_label'", "in", "conf", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "pseudo", "=", "conf", "[", "'pseudo_label'", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "pseudo", "=", "False", "\n", "", "self", ".", "pseudo_soft_loss", "=", "softmax_kl_loss", "\n", "\n", "if", "'flip'", "in", "conf", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "flip_flag", "=", "conf", "[", "'flip'", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "flip_flag", "=", "False", "\n", "", "if", "'flip_only'", "in", "conf", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "flip_only", "=", "conf", "[", "'flip_only'", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "flip_only", "=", "False", "\n", "", "self", ".", "flip_loss", "=", "softmax_mse_loss", "\n", "self", ".", "flip_loss_w", "=", "cons_w_flip", "\n", "\n", "self", ".", "unsup_loss_w", "=", "cons_w_unsup", "\n", "self", ".", "sup_loss_w", "=", "conf", "[", "'supervised_w'", "]", "\n", "self", ".", "softmax_temp", "=", "conf", "[", "'softmax_temp'", "]", "\n", "self", ".", "sup_loss", "=", "sup_loss", "\n", "self", ".", "sup_type", "=", "conf", "[", "'sup_loss'", "]", "\n", "\n", "# Use weak labels", "\n", "self", ".", "use_weak_lables", "=", "use_weak_lables", "\n", "self", ".", "weakly_loss_w", "=", "weakly_loss_w", "\n", "# pair wise loss (sup mat)", "\n", "self", ".", "aux_constraint", "=", "conf", "[", "'aux_constraint'", "]", "\n", "self", ".", "aux_constraint_w", "=", "conf", "[", "'aux_constraint_w'", "]", "\n", "# confidence masking (sup mat)", "\n", "self", ".", "confidence_th", "=", "conf", "[", "'confidence_th'", "]", "\n", "self", ".", "confidence_masking", "=", "conf", "[", "'confidence_masking'", "]", "\n", "\n", "# Create the model", "\n", "self", ".", "encoder", "=", "Encoder", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "# The main encoder", "\n", "upscale", "=", "16", "\n", "num_out_ch", "=", "1024", "\n", "decoder_in_ch", "=", "num_out_ch", "//", "4", "\n", "self", ".", "main_decoder", "=", "MainDecoder", "(", "n_channels", "=", "1", ",", "n_classes", "=", "2", ",", "n_filters", "=", "16", ",", "normalization", "=", "'none'", ",", "has_dropout", "=", "False", ")", "\n", "\n", "\n", "\n", "# The auxilary decoders", "\n", "if", "self", ".", "mode", "==", "'semi'", "or", "self", ".", "mode", "==", "'weakly_semi'", ":", "\n", "            ", "vat_decoder", "=", "[", "VATDecoder", "(", "upscale", ",", "decoder_in_ch", ",", "n_filters", "=", "16", ",", "n_classes", "=", "2", ",", "normalization", "=", "'batchnorm'", ",", "xi", "=", "conf", "[", "'xi'", "]", ",", "\n", "eps", "=", "conf", "[", "'eps'", "]", ")", "for", "_", "in", "range", "(", "conf", "[", "'vat'", "]", ")", "]", "\n", "drop_decoder", "=", "[", "DropOutDecoder", "(", "upscale", ",", "decoder_in_ch", ",", "n_filters", "=", "16", ",", "n_classes", "=", "2", ",", "normalization", "=", "'batchnorm'", ",", "\n", "drop_rate", "=", "conf", "[", "'drop_rate'", "]", ")", "\n", "for", "_", "in", "range", "(", "conf", "[", "'drop'", "]", ")", "]", "\n", "cut_decoder", "=", "[", "CutOutDecoder", "(", "upscale", ",", "decoder_in_ch", ",", "n_filters", "=", "16", ",", "n_classes", "=", "2", ",", "normalization", "=", "'batchnorm'", ",", "erase", "=", "conf", "[", "'erase'", "]", ")", "\n", "for", "_", "in", "range", "(", "conf", "[", "'cutout'", "]", ")", "]", "\n", "context_m_decoder", "=", "[", "ContextMaskingDecoder", "(", "upscale", ",", "decoder_in_ch", ",", "n_filters", "=", "16", ",", "n_classes", "=", "2", ",", "normalization", "=", "'batchnorm'", ")", "\n", "for", "_", "in", "range", "(", "conf", "[", "'context_masking'", "]", ")", "]", "\n", "object_masking", "=", "[", "ObjectMaskingDecoder", "(", "upscale", ",", "decoder_in_ch", ",", "n_filters", "=", "16", ",", "n_classes", "=", "2", ",", "normalization", "=", "'batchnorm'", ")", "\n", "for", "_", "in", "range", "(", "conf", "[", "'object_masking'", "]", ")", "]", "\n", "feature_drop", "=", "[", "FeatureDropDecoder", "(", "upscale", ",", "decoder_in_ch", ",", "n_filters", "=", "16", ",", "n_classes", "=", "2", ",", "normalization", "=", "'batchnorm'", ")", "\n", "for", "_", "in", "range", "(", "conf", "[", "'feature_drop'", "]", ")", "]", "\n", "feature_noise", "=", "[", "FeatureNoiseDecoder", "(", "upscale", ",", "decoder_in_ch", ",", "n_filters", "=", "16", ",", "n_classes", "=", "2", ",", "normalization", "=", "'batchnorm'", ",", "\n", "uniform_range", "=", "conf", "[", "'uniform_range'", "]", ")", "\n", "for", "_", "in", "range", "(", "conf", "[", "'feature_noise'", "]", ")", "]", "\n", "\n", "self", ".", "aux_decoders", "=", "nn", ".", "ModuleList", "(", "[", "*", "vat_decoder", ",", "*", "drop_decoder", ",", "*", "cut_decoder", ",", "\n", "*", "context_m_decoder", ",", "*", "object_masking", ",", "*", "feature_drop", ",", "*", "feature_noise", "]", ")", "#*vat_decoder,", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.forward": [[107, 267], ["model.CCT.encoder", "model.CCT.main_decoder", "model.CCT.main_decoder", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.CCT.main_decoder", "x_l.size", "x_l.size", "x_l.size", "model.CCT.encoder", "model.CCT.main_decoder", "model.CCT.flip", "torch.softmax", "torch.softmax", "model.CCT.flip_loss", "model.CCT.flip_loss_w", "model.CCT.encoder", "model.CCT.encoder", "model.CCT.sup_loss", "torch.softmax", "torch.softmax", "print", "print", "model.CCT.encoder", "model.CCT.main_decoder", "outputs_targets_ul.append", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.nn.MSELoss", "torch.nn.MSELoss", "MSE_outputs_targets_ul.append", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.softmax", "torch.softmax", "sum", "model.CCT.unsup_loss_w", "model.CCT.detach", "model.CCT.encoder", "model.CCT.main_decoder", "model.CCT.flip", "torch.softmax", "torch.softmax", "model.CCT.flip_loss", "torch.softmax", "torch.softmax", "model.CCT.sup_loss", "model.CCT.encoder", "model.CCT.main_decoder", "model.CCT.flip", "torch.softmax", "torch.softmax", "model.CCT.flip_loss", "model.CCT.flip_loss_w", "aux_decoder", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.nn.MSELoss.", "torch.nn.MSELoss.", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "model.CCT.detach", "len", "model.CCT.pseudo_soft_loss", "model.CCT.detach", "model.CCT.sup_loss", "model.CCT.detach", "model.CCT.encoder", "model.CCT.main_decoder", "model.CCT.flip", "torch.softmax", "torch.softmax", "model.CCT.flip_loss", "model.CCT.detach", "u.detach", "model.CCT.detach", "model.CCT.unsuper_loss", "sum", "len", "pair_wise_loss", "model.CCT.detach", "torch.softmax", "torch.softmax", "model.CCT.detach", "model.CCT.sup_loss"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.flip", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.flip", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.flip", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.flip", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.losses.pair_wise_loss"], ["", "", "def", "forward", "(", "self", ",", "x_l", "=", "None", ",", "target_l", "=", "None", ",", "x_ul", "=", "None", ",", "target_ul", "=", "None", ",", "x_l_flip", "=", "None", ",", "target_l_flip", "=", "None", ",", "x_ul_flip", "=", "None", ",", "\n", "flip_index", "=", "None", ",", "curr_iter", "=", "None", ",", "epoch", "=", "None", ",", "mode_D", "=", "None", ")", ":", "\n", "        ", "if", "not", "self", ".", "training", ":", "\n", "            ", "return", "self", ".", "main_decoder", "(", "self", ".", "encoder", "(", "x_l", ")", ")", "\n", "", "if", "mode_D", ":", "\n", "            ", "x_all", "=", "torch", ".", "cat", "(", "[", "x_l", ",", "x_ul", "]", ")", "\n", "return", "self", ".", "main_decoder", "(", "self", ".", "encoder", "(", "x_all", ")", ")", "\n", "\n", "# We compute the losses in the forward pass to avoid problems encountered in muti-gpu ", "\n", "\n", "# Forward pass the labels example", "\n", "", "input_size", "=", "(", "x_l", ".", "size", "(", "2", ")", ",", "x_l", ".", "size", "(", "3", ")", ",", "x_l", ".", "size", "(", "4", ")", ")", "\n", "temp_output", "=", "self", ".", "encoder", "(", "x_l", ")", "\n", "output_l", "=", "self", ".", "main_decoder", "(", "temp_output", ")", "\n", "\n", "# Supervised loss", "\n", "if", "self", ".", "sup_type", "==", "'CE'", ":", "\n", "            ", "loss_sup", "=", "self", ".", "sup_loss", "(", "output_l", ",", "target_l", ",", "temperature", "=", "self", ".", "softmax_temp", ")", "*", "self", ".", "sup_loss_w", "\n", "", "elif", "self", ".", "sup_type", "==", "'multi'", ":", "\n", "            ", "ce_loss", "=", "self", ".", "sup_loss", "[", "0", "]", "(", "output_l", ",", "target_l", ",", "temperature", "=", "self", ".", "softmax_temp", ")", "\n", "output_soft_l", "=", "F", ".", "softmax", "(", "output_l", ",", "dim", "=", "1", ")", "\n", "dc_loss", "=", "self", ".", "sup_loss", "[", "1", "]", "(", "output_soft_l", "[", ":", ",", "1", ",", ":", ",", ":", ",", ":", "]", ",", "target_l", "==", "1", ")", "\n", "print", "(", "''", ")", "\n", "print", "(", "'dice_loss'", ",", "dc_loss", ")", "\n", "loss_sup", "=", "dc_loss", "\n", "", "elif", "self", ".", "sup_type", "==", "'dice'", ":", "\n", "            ", "output_soft_l", "=", "F", ".", "softmax", "(", "output_l", ",", "dim", "=", "1", ")", "\n", "loss_sup", "=", "self", ".", "sup_loss", "(", "output_soft_l", "[", ":", ",", "1", ",", ":", ",", ":", ",", ":", "]", ",", "target_l", "==", "1", ")", "\n", "", "else", ":", "\n", "            ", "loss_sup", "=", "self", ".", "sup_loss", "(", "output_l", ",", "target_l", ",", "curr_iter", "=", "curr_iter", ",", "epoch", "=", "epoch", ")", "*", "self", ".", "sup_loss_w", "\n", "\n", "# If supervised mode only, return", "\n", "", "if", "self", ".", "mode", "==", "'supervised'", ":", "\n", "            ", "curr_losses", "=", "{", "'loss_sup'", ":", "loss_sup", "}", "\n", "outputs", "=", "{", "'sup_pred'", ":", "output_l", "}", "\n", "total_loss", "=", "loss_sup", "#+loss_sdf*0.5", "\n", "return", "total_loss", ",", "curr_losses", ",", "outputs", "\n", "\n", "# If semi supervised mode", "\n", "", "elif", "self", ".", "mode", "==", "'semi'", ":", "\n", "# Get main prediction", "\n", "            ", "x_org", "=", "x_ul", "\n", "x_ul", "=", "self", ".", "encoder", "(", "x_ul", ")", "\n", "output_ul", "=", "self", ".", "main_decoder", "(", "x_ul", ")", "\n", "curr_losses", "=", "{", "'loss_sup'", ":", "loss_sup", "}", "\n", "\n", "if", "self", ".", "flip_only", ":", "\n", "                ", "x_l_flip", "=", "self", ".", "encoder", "(", "x_l_flip", ")", "\n", "output_l_flip", "=", "self", ".", "main_decoder", "(", "x_l_flip", ")", "\n", "output_l_flip", "=", "self", ".", "flip", "(", "output_l_flip", ",", "flip_index", ")", "\n", "\n", "target_l_flip", "=", "F", ".", "softmax", "(", "output_l", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", "\n", "loss_l_flip", "=", "self", ".", "flip_loss", "(", "output_l_flip", ",", "target_l_flip", ",", "use_softmax", "=", "False", ")", "\n", "# print(loss_l_flip)", "\n", "if", "self", ".", "mode", "==", "'semi'", ":", "\n", "                    ", "x_ul_flip", "=", "self", ".", "encoder", "(", "x_ul_flip", ")", "\n", "output_ul_flip", "=", "self", ".", "main_decoder", "(", "x_ul_flip", ")", "\n", "output_ul_flip", "=", "self", ".", "flip", "(", "output_ul_flip", ",", "flip_index", ")", "\n", "\n", "target_ul_flip", "=", "F", ".", "softmax", "(", "output_ul", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", "\n", "loss_ul_flip", "=", "self", ".", "flip_loss", "(", "output_ul_flip", ",", "target_ul_flip", ",", "use_softmax", "=", "False", ")", "\n", "# print(loss_ul_flip)", "\n", "\n", "loss_flip", "=", "(", "loss_l_flip", "+", "loss_ul_flip", ")", "/", "2", "\n", "", "else", ":", "\n", "                    ", "loss_flip", "=", "loss_l_flip", "\n", "", "outputs", "=", "{", "'sup_pred'", ":", "output_l", ",", "'unsup_pred'", ":", "output_ul", "}", "\n", "weight_f", "=", "self", ".", "flip_loss_w", "(", "epoch", "=", "epoch", ",", "\n", "curr_iter", "=", "curr_iter", ")", "# weight_u / self.unsup_loss_w.final_w) * self.flip_loss_w", "\n", "\n", "loss_flip", "=", "loss_flip", "*", "weight_f", "\n", "curr_losses", "[", "'loss_flip'", "]", "=", "loss_flip", "\n", "total_loss", "=", "loss_flip", "+", "loss_sup", "\n", "return", "total_loss", ",", "curr_losses", ",", "outputs", "\n", "\n", "# print('aux decoder')", "\n", "# Get auxiliary predictions", "\n", "", "outputs_ul", "=", "[", "aux_decoder", "(", "x_ul", ",", "output_ul", ".", "detach", "(", ")", ")", "for", "aux_decoder", "in", "self", ".", "aux_decoders", "]", "\n", "\n", "# cal uncertainty_map #############################################################", "\n", "outputs_targets_ul", "=", "[", "F", ".", "softmax", "(", "u", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", "for", "u", "in", "outputs_ul", "]", "\n", "outputs_targets_ul", ".", "append", "(", "F", ".", "softmax", "(", "output_ul", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", ")", "\n", "mean_outputs_targets_ul", "=", "torch", ".", "mean", "(", "torch", ".", "stack", "(", "outputs_targets_ul", ")", ",", "0", ")", "\n", "\n", "MSE_func", "=", "nn", ".", "MSELoss", "(", "reduce", "=", "False", ")", "\n", "MSE_outputs_targets_ul", "=", "[", "MSE_func", "(", "u", ",", "mean_outputs_targets_ul", ")", "for", "u", "in", "outputs_targets_ul", "]", "\n", "MSE_outputs_targets_ul", ".", "append", "(", "MSE_func", "(", "input", "=", "F", ".", "softmax", "(", "output_ul", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", ",", "target", "=", "mean_outputs_targets_ul", ")", ")", "\n", "mean_MSE_outputs_targets_ul", "=", "torch", ".", "mean", "(", "torch", ".", "stack", "(", "MSE_outputs_targets_ul", ")", ",", "0", ")", "\n", "\n", "targets", "=", "F", ".", "softmax", "(", "output_ul", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", "\n", "\n", "# Compute unsupervised loss", "\n", "loss_unsup", "=", "sum", "(", "[", "self", ".", "unsuper_loss", "(", "inputs", "=", "u", ",", "targets", "=", "targets", ",", "uncertainty_map_mean", "=", "mean_outputs_targets_ul", ",", "\n", "uncertainty_map_mse", "=", "mean_MSE_outputs_targets_ul", ",", "conf_mask", "=", "self", ".", "confidence_masking", ",", "threshold", "=", "self", ".", "confidence_th", ",", "use_softmax", "=", "False", ")", "#", "\n", "for", "u", "in", "outputs_ul", "]", ")", "\n", "loss_unsup", "=", "(", "loss_unsup", "/", "len", "(", "outputs_ul", ")", ")", "\n", "\n", "outputs", "=", "{", "'sup_pred'", ":", "output_l", ",", "'unsup_pred'", ":", "output_ul", "}", "\n", "\n", "# Compute the unsupervised loss", "\n", "weight_u", "=", "self", ".", "unsup_loss_w", "(", "epoch", "=", "epoch", ",", "curr_iter", "=", "curr_iter", ")", "\n", "loss_unsup", "=", "loss_unsup", "*", "weight_u", "\n", "curr_losses", "[", "'loss_unsup'", "]", "=", "loss_unsup", "\n", "total_loss", "=", "loss_unsup", "+", "loss_sup", "\n", "\n", "##################################  online pseudo label ###############################################", "\n", "if", "self", ".", "pseudo", ":", "\n", "                ", "weight_p", "=", "(", "weight_u", "/", "self", ".", "unsup_loss_w", ".", "final_w", ")", "*", "self", ".", "weakly_loss_w", "\n", "loss_pseudo", "=", "self", ".", "pseudo_soft_loss", "(", "inputs", "=", "output_ul", ",", "targets", "=", "mean_outputs_targets_ul", ",", "uncertainty_map_mse", "=", "mean_MSE_outputs_targets_ul", ",", "\n", "conf_mask", "=", "self", ".", "confidence_masking", ",", "threshold", "=", "0.12", ",", "use_softmax", "=", "False", ")", "\n", "# print (loss_pseudo)", "\n", "loss_pseudo", "=", "loss_pseudo", "*", "weight_p", "\n", "curr_losses", "[", "'loss_pseudo'", "]", "=", "loss_pseudo", "\n", "total_loss", "+=", "loss_pseudo", "\n", "###########################################", "\n", "# If case we're using weak lables, add the weak loss term with a weight (self.weakly_loss_w)", "\n", "", "if", "self", ".", "use_weak_lables", ":", "\n", "                ", "weight_w", "=", "(", "weight_u", "/", "self", ".", "unsup_loss_w", ".", "final_w", ")", "*", "self", ".", "weakly_loss_w", "\n", "loss_weakly", "=", "sum", "(", "[", "self", ".", "sup_loss", "(", "outp", ",", "target_ul", ")", "for", "outp", "in", "outputs_ul", "]", ")", "/", "len", "(", "outputs_ul", ")", "\n", "loss_weakly", "=", "loss_weakly", "*", "weight_w", "\n", "curr_losses", "[", "'loss_weakly'", "]", "=", "loss_weakly", "\n", "total_loss", "+=", "loss_weakly", "\n", "\n", "# Pair-wise loss", "\n", "", "if", "self", ".", "aux_constraint", ":", "\n", "                ", "pair_wise", "=", "pair_wise_loss", "(", "outputs_ul", ")", "*", "self", ".", "aux_constraint_w", "\n", "curr_losses", "[", "'pair_wise'", "]", "=", "pair_wise", "\n", "loss_unsup", "+=", "pair_wise", "\n", "\n", "", "", "if", "self", ".", "flip_flag", ":", "\n", "            ", "x_l_flip", "=", "self", ".", "encoder", "(", "x_l_flip", ")", "\n", "output_l_flip", "=", "self", ".", "main_decoder", "(", "x_l_flip", ")", "\n", "output_l_flip", "=", "self", ".", "flip", "(", "output_l_flip", ",", "flip_index", ")", "\n", "\n", "target_l_flip", "=", "F", ".", "softmax", "(", "output_l", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", "\n", "loss_l_flip", "=", "self", ".", "flip_loss", "(", "output_l_flip", ",", "target_l_flip", ",", "use_softmax", "=", "False", ")", "\n", "# print(loss_l_flip)", "\n", "if", "self", ".", "mode", "==", "'semi'", ":", "\n", "                ", "x_ul_flip", "=", "self", ".", "encoder", "(", "x_ul_flip", ")", "\n", "output_ul_flip", "=", "self", ".", "main_decoder", "(", "x_ul_flip", ")", "\n", "output_ul_flip", "=", "self", ".", "flip", "(", "output_ul_flip", ",", "flip_index", ")", "\n", "\n", "target_ul_flip", "=", "F", ".", "softmax", "(", "output_ul", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", "\n", "loss_ul_flip", "=", "self", ".", "flip_loss", "(", "output_ul_flip", ",", "target_ul_flip", ",", "use_softmax", "=", "False", ")", "\n", "# print(loss_ul_flip)", "\n", "\n", "loss_flip", "=", "(", "loss_l_flip", "+", "loss_ul_flip", ")", "/", "2", "\n", "", "else", ":", "\n", "                ", "loss_flip", "=", "loss_l_flip", "\n", "\n", "# print(loss_flip)", "\n", "", "weight_f", "=", "self", ".", "flip_loss_w", "(", "epoch", "=", "epoch", ",", "curr_iter", "=", "curr_iter", ")", "\n", "\n", "loss_flip", "=", "loss_flip", "*", "weight_f", "\n", "curr_losses", "[", "'loss_flip'", "]", "=", "loss_flip", "\n", "total_loss", "+=", "loss_flip", "\n", "\n", "\n", "", "return", "total_loss", ",", "curr_losses", ",", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.get_backbone_params": [[268, 270], ["model.CCT.encoder.parameters"], "methods", ["None"], ["", "def", "get_backbone_params", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "encoder", ".", "parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.get_other_params": [[271, 277], ["itertools.chain", "itertools.chain", "model.CCT.main_decoder.parameters", "model.CCT.main_decoder.parameters", "model.CCT.aux_decoders.parameters"], "methods", ["None"], ["", "def", "get_other_params", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "'semi'", ":", "\n", "            ", "return", "chain", "(", "self", ".", "main_decoder", ".", "parameters", "(", ")", ",", "\n", "self", ".", "aux_decoders", ".", "parameters", "(", ")", ")", "\n", "\n", "", "return", "chain", "(", "self", ".", "main_decoder", ".", "parameters", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.flip": [[278, 283], ["x.dim", "tuple", "slice", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "range", "x.dim", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "x.size"], "methods", ["None"], ["", "def", "flip", "(", "self", ",", "x", ",", "dim", ")", ":", "\n", "        ", "dim", "=", "x", ".", "dim", "(", ")", "+", "dim", "if", "dim", "<", "0", "else", "dim", "\n", "return", "x", "[", "tuple", "(", "slice", "(", "None", ",", "None", ")", "if", "i", "!=", "dim", "\n", "else", "torch", ".", "arange", "(", "x", ".", "size", "(", "i", ")", "-", "1", ",", "-", "1", ",", "-", "1", ")", ".", "long", "(", ")", "\n", "for", "i", "in", "range", "(", "x", ".", "dim", "(", ")", ")", ")", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_backbone.NormalResnetBackbone.__init__": [[11, 22], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "orig_resnet", ")", ":", "\n", "        ", "super", "(", "NormalResnetBackbone", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_features", "=", "2048", "\n", "# take pretrained resnet, except AvgPool and FC", "\n", "self", ".", "prefix", "=", "orig_resnet", ".", "prefix", "\n", "self", ".", "maxpool", "=", "orig_resnet", ".", "maxpool", "\n", "self", ".", "layer1", "=", "orig_resnet", ".", "layer1", "\n", "self", ".", "layer2", "=", "orig_resnet", ".", "layer2", "\n", "self", ".", "layer3", "=", "orig_resnet", ".", "layer3", "\n", "self", ".", "layer4", "=", "orig_resnet", ".", "layer4", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_backbone.NormalResnetBackbone.get_num_features": [[23, 25], ["None"], "methods", ["None"], ["", "def", "get_num_features", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_features", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_backbone.NormalResnetBackbone.forward": [[26, 40], ["list", "resnet_backbone.NormalResnetBackbone.prefix", "resnet_backbone.NormalResnetBackbone.maxpool", "resnet_backbone.NormalResnetBackbone.layer1", "list.append", "resnet_backbone.NormalResnetBackbone.layer2", "list.append", "resnet_backbone.NormalResnetBackbone.layer3", "list.append", "resnet_backbone.NormalResnetBackbone.layer4", "list.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "tuple_features", "=", "list", "(", ")", "\n", "x", "=", "self", ".", "prefix", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "tuple_features", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "tuple_features", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "tuple_features", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "tuple_features", ".", "append", "(", "x", ")", "\n", "\n", "return", "tuple_features", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_backbone.DilatedResnetBackbone.__init__": [[43, 71], ["torch.Module.__init__", "orig_resnet.layer3.apply", "partial", "orig_resnet.layer4.apply", "enumerate", "partial", "orig_resnet.layer4[].apply", "orig_resnet.layer4.apply", "enumerate", "partial", "partial", "orig_resnet.layer4[].apply", "partial", "int", "int"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "orig_resnet", ",", "dilate_scale", "=", "8", ",", "multi_grid", "=", "(", "1", ",", "2", ",", "4", ")", ")", ":", "\n", "        ", "super", "(", "DilatedResnetBackbone", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_features", "=", "2048", "\n", "from", "functools", "import", "partial", "\n", "\n", "if", "dilate_scale", "==", "8", ":", "\n", "            ", "orig_resnet", ".", "layer3", ".", "apply", "(", "partial", "(", "self", ".", "_nostride_dilate", ",", "dilate", "=", "2", ")", ")", "\n", "if", "multi_grid", "is", "None", ":", "\n", "                ", "orig_resnet", ".", "layer4", ".", "apply", "(", "partial", "(", "self", ".", "_nostride_dilate", ",", "dilate", "=", "4", ")", ")", "\n", "", "else", ":", "\n", "                ", "for", "i", ",", "r", "in", "enumerate", "(", "multi_grid", ")", ":", "\n", "                    ", "orig_resnet", ".", "layer4", "[", "i", "]", ".", "apply", "(", "partial", "(", "self", ".", "_nostride_dilate", ",", "dilate", "=", "int", "(", "4", "*", "r", ")", ")", ")", "\n", "\n", "", "", "", "elif", "dilate_scale", "==", "16", ":", "\n", "            ", "if", "multi_grid", "is", "None", ":", "\n", "                ", "orig_resnet", ".", "layer4", ".", "apply", "(", "partial", "(", "self", ".", "_nostride_dilate", ",", "dilate", "=", "2", ")", ")", "\n", "", "else", ":", "\n", "                ", "for", "i", ",", "r", "in", "enumerate", "(", "multi_grid", ")", ":", "\n", "                    ", "orig_resnet", ".", "layer4", "[", "i", "]", ".", "apply", "(", "partial", "(", "self", ".", "_nostride_dilate", ",", "dilate", "=", "int", "(", "2", "*", "r", ")", ")", ")", "\n", "\n", "# Take pretrained resnet, except AvgPool and FC", "\n", "", "", "", "self", ".", "prefix", "=", "orig_resnet", ".", "prefix", "\n", "self", ".", "maxpool", "=", "orig_resnet", ".", "maxpool", "\n", "self", ".", "layer1", "=", "orig_resnet", ".", "layer1", "\n", "self", ".", "layer2", "=", "orig_resnet", ".", "layer2", "\n", "self", ".", "layer3", "=", "orig_resnet", ".", "layer3", "\n", "self", ".", "layer4", "=", "orig_resnet", ".", "layer4", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_backbone.DilatedResnetBackbone._nostride_dilate": [[72, 86], ["classname.find"], "methods", ["None"], ["", "def", "_nostride_dilate", "(", "self", ",", "m", ",", "dilate", ")", ":", "\n", "        ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "# the convolution with stride", "\n", "            ", "if", "m", ".", "stride", "==", "(", "2", ",", "2", ")", ":", "\n", "                ", "m", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "if", "m", ".", "kernel_size", "==", "(", "3", ",", "3", ")", ":", "\n", "                    ", "m", ".", "dilation", "=", "(", "dilate", "//", "2", ",", "dilate", "//", "2", ")", "\n", "m", ".", "padding", "=", "(", "dilate", "//", "2", ",", "dilate", "//", "2", ")", "\n", "# other convoluions", "\n", "", "", "else", ":", "\n", "                ", "if", "m", ".", "kernel_size", "==", "(", "3", ",", "3", ")", ":", "\n", "                    ", "m", ".", "dilation", "=", "(", "dilate", ",", "dilate", ")", "\n", "m", ".", "padding", "=", "(", "dilate", ",", "dilate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_backbone.DilatedResnetBackbone.get_num_features": [[87, 89], ["None"], "methods", ["None"], ["", "", "", "", "def", "get_num_features", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_features", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_backbone.DilatedResnetBackbone.forward": [[90, 105], ["list", "resnet_backbone.DilatedResnetBackbone.prefix", "resnet_backbone.DilatedResnetBackbone.maxpool", "resnet_backbone.DilatedResnetBackbone.layer1", "list.append", "resnet_backbone.DilatedResnetBackbone.layer2", "list.append", "resnet_backbone.DilatedResnetBackbone.layer3", "list.append", "resnet_backbone.DilatedResnetBackbone.layer4", "list.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "tuple_features", "=", "list", "(", ")", "\n", "x", "=", "self", ".", "prefix", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "tuple_features", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "tuple_features", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "tuple_features", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "tuple_features", ".", "append", "(", "x", ")", "\n", "\n", "return", "tuple_features", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_backbone.ResNetBackbone": [[107, 182], ["resnet34", "resnet_backbone.NormalResnetBackbone", "resnet34", "resnet_backbone.DilatedResnetBackbone", "resnet34", "resnet_backbone.DilatedResnetBackbone", "resnet50", "resnet_backbone.NormalResnetBackbone", "resnet50", "resnet_backbone.DilatedResnetBackbone", "resnet50", "resnet_backbone.DilatedResnetBackbone", "deepbase_resnet50", "resnet_backbone.NormalResnetBackbone", "deepbase_resnet50", "resnet_backbone.DilatedResnetBackbone", "deepbase_resnet50", "resnet_backbone.DilatedResnetBackbone", "resnet101", "resnet_backbone.NormalResnetBackbone", "resnet101", "resnet_backbone.DilatedResnetBackbone", "resnet101", "resnet_backbone.DilatedResnetBackbone", "deepbase_resnet101", "resnet_backbone.NormalResnetBackbone", "deepbase_resnet101", "resnet_backbone.DilatedResnetBackbone", "deepbase_resnet101", "resnet_backbone.DilatedResnetBackbone", "Exception"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.resnet34", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.resnet34", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.resnet34", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.resnet50", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.resnet50", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.resnet50", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.deepbase_resnet50", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.deepbase_resnet50", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.deepbase_resnet50", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.resnet101", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.resnet101", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.resnet101", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.deepbase_resnet101", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.deepbase_resnet101", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.deepbase_resnet101"], ["", "", "def", "ResNetBackbone", "(", "backbone", "=", "None", ",", "pretrained", "=", "None", ",", "multi_grid", "=", "None", ",", "norm_type", "=", "'batchnorm'", ")", ":", "\n", "    ", "arch", "=", "backbone", "\n", "if", "arch", "==", "'resnet34'", ":", "\n", "        ", "orig_resnet", "=", "resnet34", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "NormalResnetBackbone", "(", "orig_resnet", ")", "\n", "arch_net", ".", "num_features", "=", "512", "\n", "\n", "", "elif", "arch", "==", "'resnet34_dilated8'", ":", "\n", "        ", "orig_resnet", "=", "resnet34", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "DilatedResnetBackbone", "(", "orig_resnet", ",", "dilate_scale", "=", "8", ",", "multi_grid", "=", "multi_grid", ")", "\n", "arch_net", ".", "num_features", "=", "512", "\n", "\n", "", "elif", "arch", "==", "'resnet34_dilated16'", ":", "\n", "        ", "orig_resnet", "=", "resnet34", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "DilatedResnetBackbone", "(", "orig_resnet", ",", "dilate_scale", "=", "16", ",", "multi_grid", "=", "multi_grid", ")", "\n", "arch_net", ".", "num_features", "=", "512", "\n", "\n", "", "elif", "arch", "==", "'resnet50'", ":", "\n", "        ", "orig_resnet", "=", "resnet50", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "NormalResnetBackbone", "(", "orig_resnet", ")", "\n", "\n", "", "elif", "arch", "==", "'resnet50_dilated8'", ":", "\n", "        ", "orig_resnet", "=", "resnet50", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "DilatedResnetBackbone", "(", "orig_resnet", ",", "dilate_scale", "=", "8", ",", "multi_grid", "=", "multi_grid", ")", "\n", "\n", "", "elif", "arch", "==", "'resnet50_dilated16'", ":", "\n", "        ", "orig_resnet", "=", "resnet50", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "DilatedResnetBackbone", "(", "orig_resnet", ",", "dilate_scale", "=", "16", ",", "multi_grid", "=", "multi_grid", ")", "\n", "\n", "", "elif", "arch", "==", "'deepbase_resnet50'", ":", "\n", "        ", "if", "pretrained", ":", "\n", "            ", "pretrained", "=", "'models/backbones/pretrained/3x3resnet50-imagenet.pth'", "\n", "", "orig_resnet", "=", "deepbase_resnet50", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "NormalResnetBackbone", "(", "orig_resnet", ")", "\n", "\n", "", "elif", "arch", "==", "'deepbase_resnet50_dilated8'", ":", "\n", "        ", "if", "pretrained", ":", "\n", "            ", "pretrained", "=", "'models/backbones/pretrained/3x3resnet50-imagenet.pth'", "\n", "", "orig_resnet", "=", "deepbase_resnet50", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "DilatedResnetBackbone", "(", "orig_resnet", ",", "dilate_scale", "=", "8", ",", "multi_grid", "=", "multi_grid", ")", "\n", "\n", "", "elif", "arch", "==", "'deepbase_resnet50_dilated16'", ":", "\n", "        ", "orig_resnet", "=", "deepbase_resnet50", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "DilatedResnetBackbone", "(", "orig_resnet", ",", "dilate_scale", "=", "16", ",", "multi_grid", "=", "multi_grid", ")", "\n", "\n", "", "elif", "arch", "==", "'resnet101'", ":", "\n", "        ", "orig_resnet", "=", "resnet101", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "NormalResnetBackbone", "(", "orig_resnet", ")", "\n", "\n", "", "elif", "arch", "==", "'resnet101_dilated8'", ":", "\n", "        ", "orig_resnet", "=", "resnet101", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "DilatedResnetBackbone", "(", "orig_resnet", ",", "dilate_scale", "=", "8", ",", "multi_grid", "=", "multi_grid", ")", "\n", "\n", "", "elif", "arch", "==", "'resnet101_dilated16'", ":", "\n", "        ", "orig_resnet", "=", "resnet101", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "DilatedResnetBackbone", "(", "orig_resnet", ",", "dilate_scale", "=", "16", ",", "multi_grid", "=", "multi_grid", ")", "\n", "\n", "", "elif", "arch", "==", "'deepbase_resnet101'", ":", "\n", "        ", "orig_resnet", "=", "deepbase_resnet101", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "NormalResnetBackbone", "(", "orig_resnet", ")", "\n", "\n", "", "elif", "arch", "==", "'deepbase_resnet101_dilated8'", ":", "\n", "        ", "if", "pretrained", ":", "\n", "            ", "pretrained", "=", "'models/backbones/pretrained/3x3resnet101-imagenet.pth'", "\n", "", "orig_resnet", "=", "deepbase_resnet101", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "DilatedResnetBackbone", "(", "orig_resnet", ",", "dilate_scale", "=", "8", ",", "multi_grid", "=", "multi_grid", ")", "\n", "\n", "", "elif", "arch", "==", "'deepbase_resnet101_dilated16'", ":", "\n", "        ", "orig_resnet", "=", "deepbase_resnet101", "(", "pretrained", "=", "pretrained", ")", "\n", "arch_net", "=", "DilatedResnetBackbone", "(", "orig_resnet", ",", "dilate_scale", "=", "16", ",", "multi_grid", "=", "multi_grid", ")", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Architecture undefined!'", ")", "\n", "\n", "", "return", "arch_net", "\n", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.BasicBlock.__init__": [[31, 40], ["torch.Module.__init__", "resnet_models.conv3x3", "torch.ReLU", "resnet_models.conv3x3", "models.backbones.module_helper.ModuleHelper.BatchNorm2d", "models.backbones.module_helper.ModuleHelper.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.conv3x3", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.conv3x3", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "norm_type", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "ModuleHelper", ".", "BatchNorm2d", "(", "norm_type", "=", "norm_type", ")", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "ModuleHelper", ".", "BatchNorm2d", "(", "norm_type", "=", "norm_type", ")", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.BasicBlock.forward": [[41, 58], ["resnet_models.BasicBlock.conv1", "resnet_models.BasicBlock.bn1", "resnet_models.BasicBlock.relu", "resnet_models.BasicBlock.conv2", "resnet_models.BasicBlock.bn2", "resnet_models.BasicBlock.relu", "resnet_models.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.Bottleneck.__init__": [[63, 75], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "models.backbones.module_helper.ModuleHelper.BatchNorm2d", "models.backbones.module_helper.ModuleHelper.BatchNorm2d", "models.backbones.module_helper.ModuleHelper.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "norm_type", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "ModuleHelper", ".", "BatchNorm2d", "(", "norm_type", "=", "norm_type", ")", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "ModuleHelper", ".", "BatchNorm2d", "(", "norm_type", "=", "norm_type", ")", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "ModuleHelper", ".", "BatchNorm2d", "(", "norm_type", "=", "norm_type", ")", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.Bottleneck.forward": [[76, 97], ["resnet_models.Bottleneck.conv1", "resnet_models.Bottleneck.bn1", "resnet_models.Bottleneck.relu", "resnet_models.Bottleneck.conv2", "resnet_models.Bottleneck.bn2", "resnet_models.Bottleneck.relu", "resnet_models.Bottleneck.conv3", "resnet_models.Bottleneck.bn3", "resnet_models.Bottleneck.relu", "resnet_models.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.ResNet.__init__": [[101, 139], ["torch.Module.__init__", "torch.MaxPool2d", "resnet_models.ResNet._make_layer", "resnet_models.ResNet._make_layer", "resnet_models.ResNet._make_layer", "resnet_models.ResNet._make_layer", "torch.AvgPool2d", "torch.Linear", "resnet_models.ResNet.modules", "torch.Sequential", "torch.Sequential", "isinstance", "collections.OrderedDict", "collections.OrderedDict", "m.weight.data.normal_", "isinstance", "math.sqrt", "models.backbones.module_helper.ModuleHelper.BatchNorm2d", "m.weight.data.fill_", "m.bias.data.zero_", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "models.backbones.module_helper.ModuleHelper.BatchNorm2d", "models.backbones.module_helper.ModuleHelper.BatchNorm2d", "models.backbones.module_helper.ModuleHelper.BatchNorm2d", "models.backbones.module_helper.ModuleHelper.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.ResNet._make_layer", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.ResNet._make_layer", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.ResNet._make_layer", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.ResNet._make_layer", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ",", "deep_base", "=", "False", ",", "norm_type", "=", "None", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "128", "if", "deep_base", "else", "64", "\n", "if", "deep_base", ":", "\n", "            ", "self", ".", "prefix", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv1'", ",", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn1'", ",", "ModuleHelper", ".", "BatchNorm2d", "(", "norm_type", "=", "norm_type", ")", "(", "64", ")", ")", ",", "\n", "(", "'relu1'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ")", ",", "\n", "(", "'conv2'", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn2'", ",", "ModuleHelper", ".", "BatchNorm2d", "(", "norm_type", "=", "norm_type", ")", "(", "64", ")", ")", ",", "\n", "(", "'relu2'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ")", ",", "\n", "(", "'conv3'", ",", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn3'", ",", "ModuleHelper", ".", "BatchNorm2d", "(", "norm_type", "=", "norm_type", ")", "(", "self", ".", "inplanes", ")", ")", ",", "\n", "(", "'relu3'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ")", "]", "\n", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "prefix", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv1'", ",", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn1'", ",", "ModuleHelper", ".", "BatchNorm2d", "(", "norm_type", "=", "norm_type", ")", "(", "self", ".", "inplanes", ")", ")", ",", "\n", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ")", "]", "\n", ")", ")", "\n", "\n", "", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "ceil_mode", "=", "False", ")", "# change.", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ",", "norm_type", "=", "norm_type", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "norm_type", "=", "norm_type", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "norm_type", "=", "norm_type", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "norm_type", "=", "norm_type", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "7", ",", "stride", "=", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "ModuleHelper", ".", "BatchNorm2d", "(", "norm_type", "=", "norm_type", ",", "ret_cls", "=", "True", ")", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.ResNet._make_layer": [[140, 156], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "block", "models.backbones.module_helper.ModuleHelper.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "norm_type", "=", "None", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "ModuleHelper", ".", "BatchNorm2d", "(", "norm_type", "=", "norm_type", ")", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "norm_type", "=", "norm_type", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "norm_type", "=", "norm_type", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.ResNet.forward": [[157, 171], ["resnet_models.ResNet.prefix", "resnet_models.ResNet.maxpool", "resnet_models.ResNet.layer1", "resnet_models.ResNet.layer2", "resnet_models.ResNet.layer3", "resnet_models.ResNet.layer4", "resnet_models.ResNet.avgpool", "resnet_models.ResNet.view", "resnet_models.ResNet.fc", "resnet_models.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "prefix", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.conv3x3": [[22, 26], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.resnet18": [[173, 182], ["resnet_models.ResNet", "models.backbones.module_helper.ModuleHelper.load_model"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.load_model"], ["", "", "def", "resnet18", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "None", ",", "norm_type", "=", "'batchnorm'", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on Places\n        norm_type (str): choose norm type\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "num_classes", "=", "num_classes", ",", "deep_base", "=", "False", ",", "norm_type", "=", "norm_type", ")", "\n", "model", "=", "ModuleHelper", ".", "load_model", "(", "model", ",", "pretrained", "=", "pretrained", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.deepbase_resnet18": [[183, 191], ["resnet_models.ResNet", "models.backbones.module_helper.ModuleHelper.load_model"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.load_model"], ["", "def", "deepbase_resnet18", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "None", ",", "norm_type", "=", "'batchnorm'", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on Places\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "num_classes", "=", "num_classes", ",", "deep_base", "=", "True", ",", "norm_type", "=", "norm_type", ")", "\n", "model", "=", "ModuleHelper", ".", "load_model", "(", "model", ",", "pretrained", "=", "pretrained", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.resnet34": [[192, 200], ["resnet_models.ResNet", "models.backbones.module_helper.ModuleHelper.load_model"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.load_model"], ["", "def", "resnet34", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "None", ",", "norm_type", "=", "'batchnorm'", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on Places\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "num_classes", ",", "deep_base", "=", "False", ",", "norm_type", "=", "norm_type", ")", "\n", "model", "=", "ModuleHelper", ".", "load_model", "(", "model", ",", "pretrained", "=", "pretrained", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.deepbase_resnet34": [[201, 209], ["resnet_models.ResNet", "models.backbones.module_helper.ModuleHelper.load_model"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.load_model"], ["", "def", "deepbase_resnet34", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "None", ",", "norm_type", "=", "'batchnorm'", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on Places\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "num_classes", ",", "deep_base", "=", "True", ",", "norm_type", "=", "norm_type", ")", "\n", "model", "=", "ModuleHelper", ".", "load_model", "(", "model", ",", "pretrained", "=", "pretrained", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.resnet50": [[210, 218], ["resnet_models.ResNet", "models.backbones.module_helper.ModuleHelper.load_model"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.load_model"], ["", "def", "resnet50", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "None", ",", "norm_type", "=", "'batchnorm'", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on Places\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "num_classes", ",", "deep_base", "=", "False", ",", "norm_type", "=", "norm_type", ")", "\n", "model", "=", "ModuleHelper", ".", "load_model", "(", "model", ",", "pretrained", "=", "pretrained", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.deepbase_resnet50": [[219, 227], ["resnet_models.ResNet", "models.backbones.module_helper.ModuleHelper.load_model"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.load_model"], ["", "def", "deepbase_resnet50", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "None", ",", "norm_type", "=", "'batchnorm'", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on Places\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "num_classes", ",", "deep_base", "=", "True", ",", "norm_type", "=", "norm_type", ")", "\n", "model", "=", "ModuleHelper", ".", "load_model", "(", "model", ",", "pretrained", "=", "pretrained", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.resnet101": [[228, 236], ["resnet_models.ResNet", "models.backbones.module_helper.ModuleHelper.load_model"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.load_model"], ["", "def", "resnet101", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "None", ",", "norm_type", "=", "'batchnorm'", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on Places\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "num_classes", "=", "num_classes", ",", "deep_base", "=", "False", ",", "norm_type", "=", "norm_type", ")", "\n", "model", "=", "ModuleHelper", ".", "load_model", "(", "model", ",", "pretrained", "=", "pretrained", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.deepbase_resnet101": [[237, 245], ["resnet_models.ResNet", "models.backbones.module_helper.ModuleHelper.load_model"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.load_model"], ["", "def", "deepbase_resnet101", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "None", ",", "norm_type", "=", "'batchnorm'", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on Places\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "num_classes", "=", "num_classes", ",", "deep_base", "=", "True", ",", "norm_type", "=", "norm_type", ")", "\n", "model", "=", "ModuleHelper", ".", "load_model", "(", "model", ",", "pretrained", "=", "pretrained", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.resnet152": [[246, 255], ["resnet_models.ResNet", "models.backbones.module_helper.ModuleHelper.load_model"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.load_model"], ["", "def", "resnet152", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "None", ",", "norm_type", "=", "'batchnorm'", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on Places\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "num_classes", "=", "num_classes", ",", "deep_base", "=", "False", ",", "norm_type", "=", "norm_type", ")", "\n", "model", "=", "ModuleHelper", ".", "load_model", "(", "model", ",", "pretrained", "=", "pretrained", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.resnet_models.deepbase_resnet152": [[256, 265], ["resnet_models.ResNet", "models.backbones.module_helper.ModuleHelper.load_model"], "function", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.load_model"], ["", "def", "deepbase_resnet152", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "None", ",", "norm_type", "=", "'batchnorm'", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on Places\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "num_classes", "=", "num_classes", ",", "deep_base", "=", "True", ",", "norm_type", "=", "norm_type", ")", "\n", "model", "=", "ModuleHelper", ".", "load_model", "(", "model", ",", "pretrained", "=", "pretrained", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.FixedBatchNorm.forward": [[17, 19], ["torch.batch_norm", "torch.batch_norm", "torch.batch_norm"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "F", ".", "batch_norm", "(", "input", ",", "self", ".", "running_mean", ",", "self", ".", "running_var", ",", "self", ".", "weight", ",", "self", ".", "bias", ",", "training", "=", "False", ",", "eps", "=", "self", ".", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BNReLU": [[22, 47], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "module_helper.ModuleHelper.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d"], ["    ", "@", "staticmethod", "\n", "def", "BNReLU", "(", "num_features", ",", "norm_type", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "norm_type", "==", "'batchnorm'", ":", "\n", "            ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "num_features", ",", "**", "kwargs", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "", "elif", "norm_type", "==", "'encsync_batchnorm'", ":", "\n", "            ", "from", "encoding", ".", "nn", "import", "BatchNorm2d", "\n", "return", "nn", ".", "Sequential", "(", "\n", "BatchNorm2d", "(", "num_features", ",", "**", "kwargs", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "", "elif", "norm_type", "==", "'instancenorm'", ":", "\n", "            ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "InstanceNorm2d", "(", "num_features", ",", "**", "kwargs", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "", "elif", "norm_type", "==", "'fixed_batchnorm'", ":", "\n", "            ", "return", "nn", ".", "Sequential", "(", "\n", "FixedBatchNorm", "(", "num_features", ",", "**", "kwargs", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Not support BN type: {}.'", ".", "format", "(", "norm_type", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm3d": [[48, 59], ["ValueError"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "BatchNorm3d", "(", "norm_type", "=", "None", ",", "ret_cls", "=", "False", ")", ":", "\n", "        ", "if", "norm_type", "==", "'batchnorm'", ":", "\n", "            ", "return", "nn", ".", "BatchNorm3d", "\n", "", "elif", "norm_type", "==", "'encsync_batchnorm'", ":", "\n", "            ", "from", "encoding", ".", "nn", "import", "BatchNorm3d", "\n", "return", "BatchNorm3d", "\n", "", "elif", "norm_type", "==", "'instancenorm'", ":", "\n", "            ", "return", "nn", ".", "InstanceNorm3d", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Not support BN type: {}.'", ".", "format", "(", "norm_type", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm2d": [[60, 72], ["ValueError"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "BatchNorm2d", "(", "norm_type", "=", "None", ",", "ret_cls", "=", "False", ")", ":", "\n", "        ", "if", "norm_type", "==", "'batchnorm'", ":", "\n", "            ", "return", "nn", ".", "BatchNorm2d", "\n", "", "elif", "norm_type", "==", "'encsync_batchnorm'", ":", "\n", "            ", "from", "encoding", ".", "nn", "import", "BatchNorm2d", "\n", "return", "BatchNorm2d", "\n", "\n", "", "elif", "norm_type", "==", "'instancenorm'", ":", "\n", "            ", "return", "nn", ".", "InstanceNorm2d", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Not support BN type: {}.'", ".", "format", "(", "norm_type", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.BatchNorm1d": [[73, 84], ["ValueError"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "BatchNorm1d", "(", "norm_type", "=", "None", ",", "ret_cls", "=", "False", ")", ":", "\n", "        ", "if", "norm_type", "==", "'batchnorm'", ":", "\n", "            ", "return", "nn", ".", "BatchNorm1d", "\n", "", "elif", "norm_type", "==", "'encsync_batchnorm'", ":", "\n", "            ", "from", "encoding", ".", "nn", "import", "BatchNorm1d", "\n", "return", "BatchNorm1d", "\n", "", "elif", "norm_type", "==", "'instancenorm'", ":", "\n", "            ", "return", "nn", ".", "InstanceNorm1d", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Not support BN type: {}.'", ".", "format", "(", "norm_type", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.load_model": [[85, 115], ["print", "os.path.exists", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "model.state_dict", "dict", "torch.load.items", "torch.load.items", "torch.load.items", "model.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "model.state_dict", "print", "model.state_dict.update", "model.load_state_dict", "torch.load.items", "torch.load.items", "torch.load.items", "dict.keys"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.metrics.AverageMeter.update"], ["", "", "@", "staticmethod", "\n", "def", "load_model", "(", "model", ",", "pretrained", "=", "None", ",", "all_match", "=", "True", ",", "map_location", "=", "'cpu'", ")", ":", "\n", "        ", "if", "pretrained", "is", "None", ":", "\n", "            ", "return", "model", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "pretrained", ")", ":", "\n", "            ", "print", "(", "'{} not exists.'", ".", "format", "(", "pretrained", ")", ")", "\n", "return", "model", "\n", "\n", "", "print", "(", "'Loading pretrained model:{}'", ".", "format", "(", "pretrained", ")", ")", "\n", "if", "all_match", ":", "\n", "            ", "pretrained_dict", "=", "torch", ".", "load", "(", "pretrained", ",", "map_location", "=", "map_location", ")", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "load_dict", "=", "dict", "(", ")", "\n", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", ":", "\n", "                ", "if", "'prefix.{}'", ".", "format", "(", "k", ")", "in", "model_dict", ":", "\n", "                    ", "load_dict", "[", "'prefix.{}'", ".", "format", "(", "k", ")", "]", "=", "v", "\n", "", "else", ":", "\n", "                    ", "load_dict", "[", "k", "]", "=", "v", "\n", "", "", "model", ".", "load_state_dict", "(", "load_dict", ")", "\n", "\n", "", "else", ":", "\n", "            ", "pretrained_dict", "=", "torch", ".", "load", "(", "pretrained", ")", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "load_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "print", "(", "'Matched Keys: {}'", ".", "format", "(", "load_dict", ".", "keys", "(", ")", ")", ")", "\n", "model_dict", ".", "update", "(", "load_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.load_url": [[116, 130], ["os.path.join", "os.path.join", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.exists", "os.makedirs", "url.split", "os.path.exists", "print", "urlretrieve"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "load_url", "(", "url", ",", "map_location", "=", "None", ")", ":", "\n", "        ", "model_dir", "=", "os", ".", "path", ".", "join", "(", "'~'", ",", "'.TorchCV'", ",", "'model'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "model_dir", ")", "\n", "\n", "", "filename", "=", "url", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "cached_file", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "filename", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "cached_file", ")", ":", "\n", "            ", "print", "(", "'Downloading: \"{}\" to {}\\n'", ".", "format", "(", "url", ",", "cached_file", ")", ")", "\n", "urlretrieve", "(", "url", ",", "cached_file", ")", "\n", "\n", "", "print", "(", "'Loading pretrained model:{}'", ".", "format", "(", "cached_file", ")", ")", "\n", "return", "torch", ".", "load", "(", "cached_file", ",", "map_location", "=", "map_location", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.constant_init": [[131, 136], ["torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "hasattr", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "constant_init", "(", "module", ",", "val", ",", "bias", "=", "0", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "module", ".", "weight", ",", "val", ")", "\n", "if", "hasattr", "(", "module", ",", "'bias'", ")", "and", "module", ".", "bias", "is", "not", "None", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "module", ".", "bias", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.xavier_init": [[137, 146], ["torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "hasattr", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "xavier_init", "(", "module", ",", "gain", "=", "1", ",", "bias", "=", "0", ",", "distribution", "=", "'normal'", ")", ":", "\n", "        ", "assert", "distribution", "in", "[", "'uniform'", ",", "'normal'", "]", "\n", "if", "distribution", "==", "'uniform'", ":", "\n", "            ", "nn", ".", "init", ".", "xavier_uniform_", "(", "module", ".", "weight", ",", "gain", "=", "gain", ")", "\n", "", "else", ":", "\n", "            ", "nn", ".", "init", ".", "xavier_normal_", "(", "module", ".", "weight", ",", "gain", "=", "gain", ")", "\n", "", "if", "hasattr", "(", "module", ",", "'bias'", ")", "and", "module", ".", "bias", "is", "not", "None", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "module", ".", "bias", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.normal_init": [[147, 152], ["torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "hasattr", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "normal_init", "(", "module", ",", "mean", "=", "0", ",", "std", "=", "1", ",", "bias", "=", "0", ")", ":", "\n", "        ", "nn", ".", "init", ".", "normal_", "(", "module", ".", "weight", ",", "mean", ",", "std", ")", "\n", "if", "hasattr", "(", "module", ",", "'bias'", ")", "and", "module", ".", "bias", "is", "not", "None", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "module", ".", "bias", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.uniform_init": [[153, 158], ["torch.init.uniform_", "torch.init.uniform_", "torch.init.uniform_", "hasattr", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "uniform_init", "(", "module", ",", "a", "=", "0", ",", "b", "=", "1", ",", "bias", "=", "0", ")", ":", "\n", "        ", "nn", ".", "init", ".", "uniform_", "(", "module", ".", "weight", ",", "a", ",", "b", ")", "\n", "if", "hasattr", "(", "module", ",", "'bias'", ")", "and", "module", ".", "bias", "is", "not", "None", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "module", ".", "bias", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.backbones.module_helper.ModuleHelper.kaiming_init": [[159, 174], ["torch.init.kaiming_uniform_", "torch.init.kaiming_uniform_", "torch.init.kaiming_uniform_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "hasattr", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "kaiming_init", "(", "module", ",", "\n", "mode", "=", "'fan_in'", ",", "\n", "nonlinearity", "=", "'leaky_relu'", ",", "\n", "bias", "=", "0", ",", "\n", "distribution", "=", "'normal'", ")", ":", "\n", "        ", "assert", "distribution", "in", "[", "'uniform'", ",", "'normal'", "]", "\n", "if", "distribution", "==", "'uniform'", ":", "\n", "            ", "nn", ".", "init", ".", "kaiming_uniform_", "(", "\n", "module", ".", "weight", ",", "mode", "=", "mode", ",", "nonlinearity", "=", "nonlinearity", ")", "\n", "", "else", ":", "\n", "            ", "nn", ".", "init", ".", "kaiming_normal_", "(", "\n", "module", ".", "weight", ",", "mode", "=", "mode", ",", "nonlinearity", "=", "nonlinearity", ")", "\n", "", "if", "hasattr", "(", "module", ",", "'bias'", ")", "and", "module", ".", "bias", "is", "not", "None", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "module", ".", "bias", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.dataloaders.voc.VOCDataset.__init__": [[15, 20], ["utils.pallete.get_voc_pallete", "base.BaseDataSet.__init__"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.pallete.get_voc_pallete", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "2", "\n", "\n", "self", ".", "palette", "=", "pallete", ".", "get_voc_pallete", "(", "self", ".", "num_classes", ")", "\n", "super", "(", "VOCDataset", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.dataloaders.voc.VOCDataset._set_files": [[21, 51], ["random.shuffle", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "ValueError", "int", "len"], "methods", ["None"], ["", "def", "_set_files", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "split", "==", "\"val\"", ":", "\n", "            ", "file_list", "=", "os", ".", "listdir", "(", "self", ".", "root", "+", "'test_patch_npy/'", ")", "\n", "self", ".", "images_path", "=", "self", ".", "root", "+", "'test_patch_npy/'", "\n", "label_list", "=", "os", ".", "listdir", "(", "self", ".", "root", "+", "'test_mask_patch_npy/'", ")", "\n", "self", ".", "labels_path", "=", "self", ".", "root", "+", "'test_mask_patch_npy/'", "\n", "", "elif", "self", ".", "split", "==", "\"train_supervised\"", ":", "\n", "            ", "file_list", "=", "os", ".", "listdir", "(", "self", ".", "root", "+", "'train_patch_npy/'", ")", "\n", "self", ".", "images_path", "=", "self", ".", "root", "+", "'train_patch_npy/'", "\n", "label_list", "=", "os", ".", "listdir", "(", "self", ".", "root", "+", "'train_mask_patch_npy/'", ")", "\n", "self", ".", "labels_path", "=", "self", ".", "root", "+", "'train_mask_patch_npy/'", "\n", "", "elif", "self", ".", "split", "==", "\"train_unsupervised\"", ":", "\n", "            ", "file_list", "=", "os", ".", "listdir", "(", "self", ".", "root", "+", "'train_patch_npy/'", ")", "#_140", "\n", "self", ".", "images_path", "=", "self", ".", "root", "+", "'train_patch_npy/'", "#_140", "\n", "label_list", "=", "None", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "f\"Invalid split name {self.split}\"", ")", "\n", "\n", "# file_list = [line.rstrip().split(' ') for line in tuple(open(file_list, \"r\"))]", "\n", "# self.files, self.labels = list(zip(*file_list))", "\n", "", "random", ".", "shuffle", "(", "file_list", ")", "\n", "if", "self", ".", "split", "==", "'val'", ":", "\n", "            ", "self", ".", "files", "=", "file_list", "\n", "", "elif", "self", ".", "split", "==", "'train_unsupervised'", ":", "\n", "            ", "self", ".", "files", "=", "file_list", "[", ":", "int", "(", "len", "(", "file_list", ")", "*", "0.1", ")", "]", "#self.file_list*0.05", "\n", "", "else", ":", "\n", "            ", "self", ".", "files", "=", "file_list", "\n", "\n", "# self.files = file_list", "\n", "", "self", ".", "labels", "=", "label_list", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.dataloaders.voc.VOCDataset._load_data": [[52, 70], ["os.path.join", "numpy.load", "numpy.transpose", "numpy.load", "numpy.transpose", "numpy.zeros_like", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "_load_data", "(", "self", ",", "index", ")", ":", "\n", "        ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "images_path", ",", "self", ".", "files", "[", "index", "]", ")", "\n", "image", "=", "np", ".", "load", "(", "image_path", ")", "\n", "image", "=", "np", ".", "transpose", "(", "image", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "image_id", "=", "self", ".", "files", "[", "index", "]", "[", ":", "-", "4", "]", "\n", "if", "self", ".", "labels", ":", "\n", "            ", "if", "self", ".", "use_weak_lables", ":", "\n", "                ", "label_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "weak_labels_output", ",", "image_id", "+", "\"_mask.npy\"", ")", "\n", "", "else", ":", "\n", "                ", "label_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "labels_path", ",", "image_id", "+", "'_mask.npy'", ")", "\n", "", "label", "=", "np", ".", "load", "(", "label_path", ")", "\n", "label", "=", "np", ".", "transpose", "(", "label", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "", "else", ":", "\n", "            ", "label", "=", "np", ".", "zeros_like", "(", "image", ")", "\n", "\n", "# image = image.reshape(1, image.shape[0], image.shape[1], image.shape[2]).astype(np.float32)", "\n", "\n", "", "return", "image", ",", "label", ",", "image_id", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.dataloaders.voc.VOC.__init__": [[72, 89], ["kwargs.pop", "kwargs.pop", "voc.VOCDataset", "base.BaseDataLoader.__init__", "kwargs.pop"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "kwargs", ")", ":", "\n", "\n", "        ", "self", ".", "MEAN", "=", "0", "\n", "self", ".", "STD", "=", "255", "\n", "self", ".", "batch_size", "=", "kwargs", ".", "pop", "(", "'batch_size'", ")", "\n", "kwargs", "[", "'mean'", "]", "=", "self", ".", "MEAN", "\n", "kwargs", "[", "'std'", "]", "=", "self", ".", "STD", "\n", "# kwargs['ignore_index'] = 0", "\n", "try", ":", "\n", "            ", "shuffle", "=", "kwargs", ".", "pop", "(", "'shuffle'", ")", "\n", "", "except", ":", "\n", "            ", "shuffle", "=", "False", "\n", "", "num_workers", "=", "kwargs", ".", "pop", "(", "'num_workers'", ")", "\n", "\n", "self", ".", "dataset", "=", "VOCDataset", "(", "**", "kwargs", ")", "\n", "\n", "super", "(", "VOC", ",", "self", ")", ".", "__init__", "(", "self", ".", "dataset", ",", "self", ".", "batch_size", ",", "shuffle", ",", "num_workers", ",", "val_split", "=", "None", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet.__init__": [[13, 48], ["torchvision.transforms.ColorJitter", "torchvision.transforms.Normalize", "base_dataset.BaseDataSet._set_files", "cv2.setNumThreads", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet._set_files"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "split", ",", "mean", ",", "std", ",", "base_size", "=", "None", ",", "augment", "=", "True", ",", "val", "=", "False", ",", "\n", "jitter", "=", "False", ",", "use_weak_lables", "=", "False", ",", "weak_labels_output", "=", "None", ",", "crop_size", "=", "None", ",", "scale", "=", "False", ",", "flip", "=", "False", ",", "rotate", "=", "False", ",", "\n", "blur", "=", "False", ",", "return_id", "=", "False", ",", "n_labeled_examples", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "root", "=", "data_dir", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "self", ".", "augment", "=", "augment", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "jitter", "=", "jitter", "\n", "self", ".", "image_padding", "=", "(", "np", ".", "array", "(", "mean", ")", "*", "255.", ")", ".", "tolist", "(", ")", "\n", "# self.ignore_index = ignore_index", "\n", "self", ".", "return_id", "=", "return_id", "\n", "self", ".", "n_labeled_examples", "=", "n_labeled_examples", "\n", "self", ".", "val", "=", "val", "\n", "\n", "self", ".", "use_weak_lables", "=", "use_weak_lables", "\n", "self", ".", "weak_labels_output", "=", "weak_labels_output", "\n", "\n", "if", "self", ".", "augment", ":", "\n", "            ", "self", ".", "base_size", "=", "base_size", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "flip", "=", "flip", "\n", "self", ".", "rotate", "=", "rotate", "\n", "self", ".", "blur", "=", "blur", "\n", "\n", "", "self", ".", "jitter_tf", "=", "transforms", ".", "ColorJitter", "(", "brightness", "=", "0.1", ",", "contrast", "=", "0.1", ",", "saturation", "=", "0.1", ",", "hue", "=", "0.1", ")", "\n", "# self.to_tensor = transforms.ToTensor()", "\n", "self", ".", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", ",", "std", ")", "\n", "\n", "self", ".", "files", "=", "[", "]", "\n", "self", ".", "_set_files", "(", ")", "\n", "\n", "cv2", ".", "setNumThreads", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet._set_files": [[49, 51], ["None"], "methods", ["None"], ["", "def", "_set_files", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet._load_data": [[52, 54], ["None"], "methods", ["None"], ["", "def", "_load_data", "(", "self", ",", "index", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet._rotate": [[55, 62], ["numpy.random.randint", "numpy.rot90", "numpy.rot90"], "methods", ["None"], ["", "def", "_rotate", "(", "self", ",", "image", ",", "label", ")", ":", "\n", "# Rotate the image with an angle between -10 and 10", "\n", "        ", "k", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "4", ")", "\n", "image", "=", "np", ".", "rot90", "(", "image", ",", "k", ")", "\n", "label", "=", "np", ".", "rot90", "(", "label", ",", "k", ")", "\n", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet._crop": [[63, 88], ["numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "max", "max", "max", "numpy.pad", "numpy.pad"], "methods", ["None"], ["", "def", "_crop", "(", "self", ",", "image", ",", "label", ")", ":", "\n", "        ", "output_size", "=", "(", "112", ",", "112", ",", "80", ")", "\n", "# pad the sample if necessary", "\n", "if", "label", ".", "shape", "[", "0", "]", "<=", "output_size", "[", "0", "]", "or", "label", ".", "shape", "[", "1", "]", "<=", "output_size", "[", "1", "]", "or", "label", ".", "shape", "[", "2", "]", "<=", "output_size", "[", "2", "]", ":", "\n", "            ", "pw", "=", "max", "(", "(", "output_size", "[", "0", "]", "-", "label", ".", "shape", "[", "0", "]", ")", "//", "2", "+", "3", ",", "0", ")", "\n", "ph", "=", "max", "(", "(", "output_size", "[", "1", "]", "-", "label", ".", "shape", "[", "1", "]", ")", "//", "2", "+", "3", ",", "0", ")", "\n", "pd", "=", "max", "(", "(", "output_size", "[", "2", "]", "-", "label", ".", "shape", "[", "2", "]", ")", "//", "2", "+", "3", ",", "0", ")", "\n", "image", "=", "np", ".", "pad", "(", "image", ",", "[", "(", "pw", ",", "pw", ")", ",", "(", "ph", ",", "ph", ")", ",", "(", "pd", ",", "pd", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "0", ")", "\n", "label", "=", "np", ".", "pad", "(", "label", ",", "[", "(", "pw", ",", "pw", ")", ",", "(", "ph", ",", "ph", ")", ",", "(", "pd", ",", "pd", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "0", ")", "\n", "\n", "", "(", "w", ",", "h", ",", "d", ")", "=", "image", ".", "shape", "\n", "# if np.random.uniform() > 0.33:", "\n", "#     w1 = np.random.randint((w - self.output_size[0])//4, 3*(w - self.output_size[0])//4)", "\n", "#     h1 = np.random.randint((h - self.output_size[1])//4, 3*(h - self.output_size[1])//4)", "\n", "# else:", "\n", "w1", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "w", "-", "output_size", "[", "0", "]", ")", "\n", "h1", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "h", "-", "output_size", "[", "1", "]", ")", "\n", "d1", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "d", "-", "output_size", "[", "2", "]", ")", "\n", "\n", "label", "=", "label", "[", "w1", ":", "w1", "+", "output_size", "[", "0", "]", ",", "h1", ":", "h1", "+", "output_size", "[", "1", "]", ",", "d1", ":", "d1", "+", "output_size", "[", "2", "]", "]", "\n", "image", "=", "image", "[", "w1", ":", "w1", "+", "output_size", "[", "0", "]", ",", "h1", ":", "h1", "+", "output_size", "[", "1", "]", ",", "d1", ":", "d1", "+", "output_size", "[", "2", "]", "]", "\n", "# print (np.max(label))", "\n", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet._blur": [[89, 95], ["numpy.clip", "random.random", "numpy.random.randn"], "methods", ["None"], ["", "def", "_blur", "(", "self", ",", "image", ",", "label", ")", ":", "\n", "# Gaussian Blud (sigma between 0 and 1.5)", "\n", "        ", "sigma", "=", "random", ".", "random", "(", ")", "*", "1.5", "\n", "noise", "=", "np", ".", "clip", "(", "sigma", "*", "np", ".", "random", ".", "randn", "(", "image", ".", "shape", "[", "0", "]", ",", "image", ".", "shape", "[", "1", "]", ",", "image", ".", "shape", "[", "2", "]", ")", ",", "-", "2", "*", "sigma", ",", "2", "*", "sigma", ")", "\n", "image", "=", "image", "+", "noise", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet._flip": [[96, 103], ["random.random", "numpy.random.randint", "numpy.flip().copy", "numpy.flip().copy", "numpy.flip", "numpy.flip"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.flip", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.flip"], ["", "def", "_flip", "(", "self", ",", "image", ",", "label", ")", ":", "\n", "# Random H flip", "\n", "        ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "            ", "axis", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "2", ")", "\n", "image", "=", "np", ".", "flip", "(", "image", ",", "axis", "=", "axis", ")", ".", "copy", "(", ")", "\n", "label", "=", "np", ".", "flip", "(", "label", ",", "axis", "=", "axis", ")", ".", "copy", "(", ")", "\n", "", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet._centercrop": [[104, 128], ["int", "int", "int", "max", "max", "max", "numpy.pad", "numpy.pad", "round", "round", "round", "numpy.max", "print", "numpy.max"], "methods", ["None"], ["", "def", "_centercrop", "(", "self", ",", "image", ",", "label", ")", ":", "\n", "        ", "output_size", "=", "(", "112", ",", "112", ",", "80", ")", "\n", "# pad the sample if necessary", "\n", "if", "label", ".", "shape", "[", "0", "]", "<=", "output_size", "[", "0", "]", "or", "label", ".", "shape", "[", "1", "]", "<=", "output_size", "[", "1", "]", "or", "label", ".", "shape", "[", "2", "]", "<=", "output_size", "[", "2", "]", ":", "\n", "            ", "pw", "=", "max", "(", "(", "output_size", "[", "0", "]", "-", "label", ".", "shape", "[", "0", "]", ")", "//", "2", "+", "3", ",", "0", ")", "\n", "ph", "=", "max", "(", "(", "output_size", "[", "1", "]", "-", "label", ".", "shape", "[", "1", "]", ")", "//", "2", "+", "3", ",", "0", ")", "\n", "pd", "=", "max", "(", "(", "output_size", "[", "2", "]", "-", "label", ".", "shape", "[", "2", "]", ")", "//", "2", "+", "3", ",", "0", ")", "\n", "image", "=", "np", ".", "pad", "(", "image", ",", "[", "(", "pw", ",", "pw", ")", ",", "(", "ph", ",", "ph", ")", ",", "(", "pd", ",", "pd", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "0", ")", "\n", "label", "=", "np", ".", "pad", "(", "label", ",", "[", "(", "pw", ",", "pw", ")", ",", "(", "ph", ",", "ph", ")", ",", "(", "pd", ",", "pd", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "0", ")", "\n", "\n", "", "(", "w", ",", "h", ",", "d", ")", "=", "image", ".", "shape", "\n", "\n", "w1", "=", "int", "(", "round", "(", "(", "w", "-", "output_size", "[", "0", "]", ")", "/", "2.", ")", ")", "\n", "h1", "=", "int", "(", "round", "(", "(", "h", "-", "output_size", "[", "1", "]", ")", "/", "2.", ")", ")", "\n", "d1", "=", "int", "(", "round", "(", "(", "d", "-", "output_size", "[", "2", "]", ")", "/", "2.", ")", ")", "\n", "\n", "label", "=", "label", "[", "w1", ":", "w1", "+", "output_size", "[", "0", "]", ",", "h1", ":", "h1", "+", "output_size", "[", "1", "]", ",", "d1", ":", "d1", "+", "output_size", "[", "2", "]", "]", "\n", "image", "=", "image", "[", "w1", ":", "w1", "+", "output_size", "[", "0", "]", ",", "h1", ":", "h1", "+", "output_size", "[", "1", "]", ",", "d1", ":", "d1", "+", "output_size", "[", "2", "]", "]", "\n", "\n", "if", "(", "np", ".", "max", "(", "label", ")", ")", ">", "1", ":", "\n", "            ", "print", "(", "np", ".", "max", "(", "label", ")", ")", "\n", "\n", "", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet._val_augmentation": [[160, 168], ["torch.from_numpy.reshape().astype", "torch.from_numpy.reshape().astype", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy.astype", "torch.from_numpy.astype", "torch.from_numpy.reshape", "torch.from_numpy.reshape"], "methods", ["None"], ["", "def", "_val_augmentation", "(", "self", ",", "image", ",", "label", ")", ":", "\n", "# if self.base_size is not None:", "\n", "# image, label = self._resize(image, label)", "\n", "# image, label = self._crop(image, label)", "\n", "        ", "image", "=", "image", ".", "reshape", "(", "1", ",", "image", ".", "shape", "[", "0", "]", ",", "image", ".", "shape", "[", "1", "]", ",", "image", ".", "shape", "[", "2", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "image", "=", "torch", ".", "from_numpy", "(", "image", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet._augmentation": [[169, 190], ["image.reshape().astype.reshape().astype.reshape().astype", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "image.reshape().astype.reshape().astype.reshape", "image.reshape().astype.reshape().astype.astype"], "methods", ["None"], ["", "def", "_augmentation", "(", "self", ",", "image", ",", "label", ")", ":", "\n", "        ", "h", ",", "w", ",", "d", "=", "image", ".", "shape", "\n", "\n", "# if self.base_size is not None:", "\n", "#     image, label = self._resize(image, label)", "\n", "\n", "#        if self.crop_size is not None:", "\n", "#            image, label = self._crop(image, label)", "\n", "\n", "# if self.flip:", "\n", "#     image, label = self._flip(image, label)", "\n", "#", "\n", "# if self.rotate:", "\n", "#     image, label = self._rotate(image, label)", "\n", "\n", "# if self.blur:", "\n", "#     image, label = self._blur(image, label)", "\n", "\n", "image", "=", "image", ".", "reshape", "(", "1", ",", "image", ".", "shape", "[", "0", "]", ",", "image", ".", "shape", "[", "1", "]", ",", "image", ".", "shape", "[", "2", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "return", "torch", ".", "from_numpy", "(", "image", ".", "astype", "(", "np", ".", "float32", ")", ")", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet.__len__": [[191, 193], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet.__getitem__": [[194, 205], ["base_dataset.BaseDataSet._load_data", "torch.from_numpy().long", "torch.from_numpy().long", "torch.from_numpy().long", "torch.from_numpy().long", "base_dataset.BaseDataSet._val_augmentation", "base_dataset.BaseDataSet._augmentation", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet._load_data", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet._val_augmentation", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet._augmentation"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image", ",", "label", ",", "image_id", "=", "self", ".", "_load_data", "(", "index", ")", "\n", "if", "self", ".", "val", ":", "\n", "            ", "image", ",", "label", "=", "self", ".", "_val_augmentation", "(", "image", ",", "label", ")", "\n", "", "elif", "self", ".", "augment", ":", "\n", "            ", "image", ",", "label", "=", "self", ".", "_augmentation", "(", "image", ",", "label", ")", "\n", "\n", "# print (np.max(label))", "\n", "\n", "", "label", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "label", ",", "dtype", "=", "np", ".", "int8", ")", ")", ".", "long", "(", ")", "\n", "return", "image", ",", "label", ",", "image_id", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet.__repr__": [[206, 212], ["base_dataset.BaseDataSet.__len__"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataset.BaseDataSet.__len__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "fmt_str", "=", "\"Dataset: \"", "+", "self", ".", "__class__", ".", "__name__", "+", "\"\\n\"", "\n", "fmt_str", "+=", "\"    # data: {}\\n\"", ".", "format", "(", "self", ".", "__len__", "(", ")", ")", "\n", "fmt_str", "+=", "\"    Split: {}\\n\"", ".", "format", "(", "self", ".", "split", ")", "\n", "fmt_str", "+=", "\"    Root: {}\"", ".", "format", "(", "self", ".", "root", ")", "\n", "return", "fmt_str", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer.__init__": [[15, 78], ["logging.getLogger", "print", "base_trainer.BaseTrainer._get_available_devices", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "base_trainer.BaseTrainer.model.to", "torch.SGD", "torch.SGD", "cfg_trainer.get", "datetime.datetime.now().strftime", "os.path.join", "utils.helpers.dir_exists", "os.path.join", "os.path.join", "torch.utils.tensorboard.SummaryWriter", "torch.utils.tensorboard.SummaryWriter", "utils.htmlwriter.HTML", "model.parameters", "getattr", "base_trainer.BaseTrainer.monitor.split", "cfg_trainer.get", "open", "json.dump", "base_trainer.BaseTrainer._resume_checkpoint", "filter", "filter", "datetime.datetime.now", "base_trainer.BaseTrainer.model.module.get_other_params", "base_trainer.BaseTrainer.model.module.get_backbone_params"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer._get_available_devices", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.helpers.dir_exists", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer._resume_checkpoint", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.get_other_params", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.models.model.CCT.get_backbone_params"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "resume", ",", "config", ",", "iters_per_epoch", ",", "train_logger", "=", "None", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "config", "=", "config", "\n", "\n", "self", ".", "train_logger", "=", "train_logger", "\n", "self", ".", "logger", "=", "logging", ".", "getLogger", "(", "self", ".", "__class__", ".", "__name__", ")", "\n", "self", ".", "do_validation", "=", "self", ".", "config", "[", "'trainer'", "]", "[", "'val'", "]", "\n", "self", ".", "start_epoch", "=", "1", "\n", "self", ".", "improved", "=", "False", "\n", "\n", "# SETTING THE DEVICE", "\n", "print", "(", "self", ".", "config", "[", "'n_gpu'", "]", ")", "\n", "self", ".", "device", ",", "availble_gpus", "=", "self", ".", "_get_available_devices", "(", "self", ".", "config", "[", "'n_gpu'", "]", ")", "\n", "self", ".", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "self", ".", "model", ",", "device_ids", "=", "availble_gpus", ")", "\n", "self", ".", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# CONFIGS", "\n", "cfg_trainer", "=", "self", ".", "config", "[", "'trainer'", "]", "\n", "self", ".", "epochs", "=", "cfg_trainer", "[", "'epochs'", "]", "\n", "self", ".", "save_period", "=", "cfg_trainer", "[", "'save_period'", "]", "\n", "\n", "# OPTIMIZER", "\n", "trainable_params", "=", "[", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "self", ".", "model", ".", "module", ".", "get_other_params", "(", ")", ")", "}", ",", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "self", ".", "model", ".", "module", ".", "get_backbone_params", "(", ")", ")", ",", "\n", "'lr'", ":", "config", "[", "'optimizer'", "]", "[", "'args'", "]", "[", "'lr'", "]", "/", "10", "}", "]", "\n", "\n", "# self.optimizer = get_instance(torch.optim, 'optimizer', config, trainable_params)", "\n", "# model_params = sum([i.shape.numel() for i in list(model.parameters())])", "\n", "# opt_params = sum([i.shape.numel() for j in self.optimizer.param_groups for i in j['params']])", "\n", "# assert opt_params == model_params, 'some params are missing in the opt'", "\n", "\n", "self", ".", "optimizer", "=", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "config", "[", "'optimizer'", "]", "[", "'args'", "]", "[", "'lr'", "]", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "0.0001", ")", "\n", "# self.Dopt = optim.Adam(D.parameters(), lr=config['optimizer']['args']['D_lr'], betas=(0.9,0.99))", "\n", "\n", "self", ".", "lr_scheduler", "=", "getattr", "(", "utils", ".", "lr_scheduler", ",", "config", "[", "'lr_scheduler'", "]", ")", "(", "optimizer", "=", "self", ".", "optimizer", ",", "num_epochs", "=", "self", ".", "epochs", ",", "\n", "iters_per_epoch", "=", "iters_per_epoch", ")", "\n", "\n", "# MONITORING", "\n", "self", ".", "monitor", "=", "cfg_trainer", ".", "get", "(", "'monitor'", ",", "'off'", ")", "\n", "if", "self", ".", "monitor", "==", "'off'", ":", "\n", "            ", "self", ".", "mnt_mode", "=", "'off'", "\n", "self", ".", "mnt_best", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "mnt_mode", ",", "self", ".", "mnt_metric", "=", "self", ".", "monitor", ".", "split", "(", ")", "\n", "assert", "self", ".", "mnt_mode", "in", "[", "'min'", ",", "'max'", "]", "\n", "self", ".", "mnt_best", "=", "-", "math", ".", "inf", "if", "self", ".", "mnt_mode", "==", "'max'", "else", "math", ".", "inf", "\n", "self", ".", "early_stoping", "=", "cfg_trainer", ".", "get", "(", "'early_stop'", ",", "math", ".", "inf", ")", "\n", "\n", "# CHECKPOINTS & TENSOBOARD", "\n", "", "date_time", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%m-%d_%H-%M'", ")", "\n", "run_name", "=", "config", "[", "'experim_name'", "]", "\n", "self", ".", "checkpoint_dir", "=", "os", ".", "path", ".", "join", "(", "cfg_trainer", "[", "'save_dir'", "]", ",", "run_name", ")", "\n", "helpers", ".", "dir_exists", "(", "self", ".", "checkpoint_dir", ")", "\n", "config_save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_dir", ",", "'config.json'", ")", "\n", "with", "open", "(", "config_save_path", ",", "'w'", ")", "as", "handle", ":", "\n", "            ", "json", ".", "dump", "(", "self", ".", "config", ",", "handle", ",", "indent", "=", "4", ",", "sort_keys", "=", "True", ")", "\n", "\n", "", "writer_dir", "=", "os", ".", "path", ".", "join", "(", "cfg_trainer", "[", "'log_dir'", "]", ",", "run_name", ")", "\n", "self", ".", "writer", "=", "tensorboard", ".", "SummaryWriter", "(", "writer_dir", ")", "\n", "self", ".", "html_results", "=", "HTML", "(", "web_dir", "=", "config", "[", "'trainer'", "]", "[", "'save_dir'", "]", ",", "exp_name", "=", "config", "[", "'experim_name'", "]", ",", "\n", "save_name", "=", "config", "[", "'experim_name'", "]", ",", "config", "=", "config", ",", "resume", "=", "resume", ")", "\n", "\n", "if", "resume", ":", "self", ".", "_resume_checkpoint", "(", "resume", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer._get_available_devices": [[79, 92], ["torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.device", "torch.device", "torch.device", "torch.device", "base_trainer.BaseTrainer.logger.info", "list", "base_trainer.BaseTrainer.logger.warning", "range", "base_trainer.BaseTrainer.logger.warning"], "methods", ["None"], ["", "def", "_get_available_devices", "(", "self", ",", "n_gpu", ")", ":", "\n", "        ", "sys_gpu", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "if", "sys_gpu", "==", "0", ":", "\n", "            ", "self", ".", "logger", ".", "warning", "(", "'No GPUs detected, using the CPU'", ")", "\n", "n_gpu", "=", "0", "\n", "", "elif", "n_gpu", ">", "sys_gpu", ":", "\n", "            ", "self", ".", "logger", ".", "warning", "(", "f'Nbr of GPU requested is {n_gpu} but only {sys_gpu} are available'", ")", "\n", "n_gpu", "=", "sys_gpu", "\n", "\n", "", "device", "=", "torch", ".", "device", "(", "'cuda:0'", "if", "n_gpu", ">", "0", "else", "'cpu'", ")", "\n", "self", ".", "logger", ".", "info", "(", "f'Detected GPUs: {sys_gpu} Requested: {n_gpu}'", ")", "\n", "available_gpus", "=", "list", "(", "range", "(", "n_gpu", ")", ")", "\n", "return", "device", ",", "available_gpus", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer.train": [[95, 134], ["range", "base_trainer.BaseTrainer.html_results.save", "base_trainer.BaseTrainer._train_epoch", "base_trainer.BaseTrainer._valid_epoch", "base_trainer.BaseTrainer.logger.info", "base_trainer.BaseTrainer.items", "base_trainer.BaseTrainer.train_logger.add_entry", "base_trainer.BaseTrainer._save_checkpoint", "base_trainer.BaseTrainer.logger.info", "base_trainer.BaseTrainer.logger.info", "base_trainer.BaseTrainer.logger.warning", "base_trainer.BaseTrainer.logger.warning", "str"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.save", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer._train_epoch", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer._valid_epoch", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.logger.Logger.add_entry", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer._save_checkpoint"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "for", "epoch", "in", "range", "(", "self", ".", "start_epoch", ",", "self", ".", "epochs", "+", "1", ")", ":", "\n", "# results = self._valid_epoch(epoch)", "\n", "\n", "            ", "results", "=", "self", ".", "_train_epoch", "(", "epoch", ")", "\n", "if", "self", ".", "do_validation", "and", "epoch", "%", "self", ".", "config", "[", "'trainer'", "]", "[", "'val_per_epochs'", "]", "==", "0", ":", "\n", "                ", "results", "=", "self", ".", "_valid_epoch", "(", "epoch", ")", "\n", "self", ".", "logger", ".", "info", "(", "'\\n\\n'", ")", "\n", "for", "k", ",", "v", "in", "results", ".", "items", "(", ")", ":", "\n", "                    ", "self", ".", "logger", ".", "info", "(", "f'         {str(k):15s}: {v}'", ")", "\n", "\n", "", "", "if", "self", ".", "train_logger", "is", "not", "None", ":", "\n", "                ", "log", "=", "{", "'epoch'", ":", "epoch", ",", "**", "results", "}", "\n", "self", ".", "train_logger", ".", "add_entry", "(", "log", ")", "\n", "\n", "# CHECKING IF THIS IS THE BEST MODEL (ONLY FOR VAL)", "\n", "", "if", "self", ".", "mnt_mode", "!=", "'off'", "and", "epoch", "%", "self", ".", "config", "[", "'trainer'", "]", "[", "'val_per_epochs'", "]", "==", "0", ":", "\n", "                ", "try", ":", "\n", "                    ", "if", "self", ".", "mnt_mode", "==", "'min'", ":", "self", ".", "improved", "=", "(", "log", "[", "self", ".", "mnt_metric", "]", "<", "self", ".", "mnt_best", ")", "\n", "else", ":", "self", ".", "improved", "=", "(", "log", "[", "self", ".", "mnt_metric", "]", ">", "self", ".", "mnt_best", ")", "\n", "", "except", "KeyError", ":", "\n", "                    ", "self", ".", "logger", ".", "warning", "(", "f'The metrics being tracked ({self.mnt_metric}) has not been calculated. Training stops.'", ")", "\n", "break", "\n", "\n", "", "if", "self", ".", "improved", ":", "\n", "                    ", "self", ".", "mnt_best", "=", "log", "[", "self", ".", "mnt_metric", "]", "\n", "self", ".", "not_improved_count", "=", "0", "\n", "", "else", ":", "\n", "                    ", "self", ".", "not_improved_count", "+=", "1", "\n", "\n", "", "if", "self", ".", "not_improved_count", ">", "self", ".", "early_stoping", ":", "\n", "                    ", "self", ".", "logger", ".", "info", "(", "f'\\nPerformance didn\\'t improve for {self.early_stoping} epochs'", ")", "\n", "self", ".", "logger", ".", "warning", "(", "'Training Stoped'", ")", "\n", "break", "\n", "\n", "# SAVE CHECKPOINT", "\n", "", "", "if", "epoch", "%", "self", ".", "save_period", "==", "0", ":", "\n", "                ", "self", ".", "_save_checkpoint", "(", "epoch", ",", "save_best", "=", "self", ".", "improved", ")", "\n", "", "", "self", ".", "html_results", ".", "save", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer._save_checkpoint": [[136, 153], ["os.path.join", "base_trainer.BaseTrainer.logger.info", "torch.save", "torch.save", "torch.save", "torch.save", "base_trainer.BaseTrainer.model.state_dict", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "base_trainer.BaseTrainer.logger.info", "type", "str"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.save", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.save", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.save", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.save", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.save", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.save", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.save", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.utils.htmlwriter.HTML.save"], ["", "def", "_save_checkpoint", "(", "self", ",", "epoch", ",", "save_best", "=", "False", ")", ":", "\n", "        ", "state", "=", "{", "\n", "'arch'", ":", "type", "(", "self", ".", "model", ")", ".", "__name__", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'state_dict'", ":", "self", ".", "model", ".", "state_dict", "(", ")", ",", "\n", "'monitor_best'", ":", "self", ".", "mnt_best", ",", "\n", "'config'", ":", "self", ".", "config", "\n", "}", "\n", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_dir", ",", "f'checkpoint_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "self", ".", "logger", ".", "info", "(", "f'\\nSaving a checkpoint: {filename} ...'", ")", "\n", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "\n", "if", "save_best", ":", "\n", "            ", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_dir", ",", "f'best_model.pth'", ")", "\n", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Saving current best: best_model.pth\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer._resume_checkpoint": [[154, 170], ["base_trainer.BaseTrainer.logger.info", "torch.load", "torch.load", "torch.load", "torch.load", "base_trainer.BaseTrainer.logger.info", "base_trainer.BaseTrainer.model.load_state_dict", "torch.load.keys", "torch.load.keys", "print", "base_trainer.BaseTrainer.model.load_state_dict"], "methods", ["None"], ["", "", "def", "_resume_checkpoint", "(", "self", ",", "resume_path", ")", ":", "\n", "        ", "self", ".", "logger", ".", "info", "(", "f'Loading checkpoint : {resume_path}'", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "resume_path", ")", "\n", "self", ".", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "+", "1", "\n", "self", ".", "mnt_best", "=", "checkpoint", "[", "'monitor_best'", "]", "\n", "self", ".", "not_improved_count", "=", "0", "\n", "\n", "try", ":", "\n", "            ", "self", ".", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "print", "(", "f'Error when loading: {e}'", ")", "\n", "self", ".", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ",", "strict", "=", "False", ")", "\n", "\n", "", "if", "\"logger\"", "in", "checkpoint", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "train_logger", "=", "checkpoint", "[", "'logger'", "]", "\n", "", "self", ".", "logger", ".", "info", "(", "f'Checkpoint <{resume_path}> (epoch {self.start_epoch}) was loaded'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer._train_epoch": [[171, 173], ["None"], "methods", ["None"], ["", "def", "_train_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer._valid_epoch": [[174, 176], ["None"], "methods", ["None"], ["", "def", "_valid_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.BaseTrainer._eval_metrics": [[177, 179], ["None"], "methods", ["None"], ["", "def", "_eval_metrics", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_trainer.get_instance": [[11, 13], ["getattr"], "function", ["None"], ["def", "get_instance", "(", "module", ",", "name", ",", "config", ",", "*", "args", ")", ":", "\n", "    ", "return", "getattr", "(", "module", ",", "config", "[", "name", "]", "[", "'type'", "]", ")", "(", "*", "args", ",", "**", "config", "[", "name", "]", "[", "'args'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataloader.BaseDataLoader.__init__": [[8, 25], ["len", "torch.utils.data.DataLoader.__init__", "base_dataloader.BaseDataLoader._split_sampler"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataloader.BaseDataLoader._split_sampler"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "batch_size", ",", "shuffle", ",", "num_workers", ",", "val_split", "=", "0.0", ")", ":", "\n", "        ", "self", ".", "shuffle", "=", "shuffle", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "nbr_examples", "=", "len", "(", "dataset", ")", "\n", "if", "val_split", ":", "\n", "            ", "self", ".", "train_sampler", ",", "self", ".", "val_sampler", "=", "self", ".", "_split_sampler", "(", "val_split", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "train_sampler", ",", "self", ".", "val_sampler", "=", "None", ",", "None", "\n", "\n", "", "self", ".", "init_kwargs", "=", "{", "\n", "'dataset'", ":", "self", ".", "dataset", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'shuffle'", ":", "self", ".", "shuffle", ",", "\n", "'num_workers'", ":", "num_workers", ",", "\n", "'pin_memory'", ":", "True", "\n", "}", "\n", "super", "(", "BaseDataLoader", ",", "self", ")", ".", "__init__", "(", "sampler", "=", "self", ".", "train_sampler", ",", "**", "self", ".", "init_kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataloader.BaseDataLoader._split_sampler": [[26, 44], ["int", "numpy.random.seed", "numpy.arange", "numpy.random.shuffle", "len", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler"], "methods", ["None"], ["", "def", "_split_sampler", "(", "self", ",", "split", ")", ":", "\n", "        ", "if", "split", "==", "0.0", ":", "\n", "            ", "return", "None", ",", "None", "\n", "\n", "", "self", ".", "shuffle", "=", "False", "\n", "\n", "split_indx", "=", "int", "(", "self", ".", "nbr_examples", "*", "split", ")", "\n", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "\n", "indxs", "=", "np", ".", "arange", "(", "self", ".", "nbr_examples", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "indxs", ")", "\n", "train_indxs", "=", "indxs", "[", "split_indx", ":", "]", "\n", "val_indxs", "=", "indxs", "[", ":", "split_indx", "]", "\n", "self", ".", "nbr_examples", "=", "len", "(", "train_indxs", ")", "\n", "\n", "train_sampler", "=", "SubsetRandomSampler", "(", "train_indxs", ")", "\n", "val_sampler", "=", "SubsetRandomSampler", "(", "val_indxs", ")", "\n", "return", "train_sampler", ",", "val_sampler", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_dataloader.BaseDataLoader.get_val_loader": [[45, 49], ["torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "get_val_loader", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "val_sampler", "is", "None", ":", "\n", "            ", "return", "None", "\n", "", "return", "DataLoader", "(", "sampler", "=", "self", ".", "val_sampler", ",", "**", "self", ".", "init_kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__": [[6, 9], ["torch.Module.__init__", "logging.getLogger"], "methods", ["home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "BaseModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "logger", "=", "logging", ".", "getLogger", "(", "self", ".", "__class__", ".", "__name__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.forward": [[10, 12], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.summary": [[13, 17], ["filter", "sum", "base_model.BaseModel.logger.info", "base_model.BaseModel.parameters", "numpy.prod", "p.size"], "methods", ["None"], ["", "def", "summary", "(", "self", ")", ":", "\n", "        ", "model_parameters", "=", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "self", ".", "parameters", "(", ")", ")", "\n", "nbr_params", "=", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "for", "p", "in", "model_parameters", "]", ")", "\n", "self", ".", "logger", ".", "info", "(", "f'Nbr of trainable parameters: {nbr_params}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.poiuohke_UDC-Net.base.base_model.BaseModel.__str__": [[18, 22], ["filter", "int", "base_model.BaseModel.parameters", "sum", "numpy.prod", "p.size"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "model_parameters", "=", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "self", ".", "parameters", "(", ")", ")", "\n", "nbr_params", "=", "int", "(", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "for", "p", "in", "model_parameters", "]", ")", ")", "\n", "return", "f'\\nNbr of trainable parameters: {nbr_params}'", "\n", "#return super(BaseModel, self).__str__() + f'\\nNbr of trainable parameters: {nbr_params}'", "\n"]]}