{"home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.logits": [[7, 10], ["numpy.clip", "numpy.log"], "methods", ["None"], ["    ", "def", "logits", "(", "self", ")", ":", "\n", "        ", "raw_logits", "=", "np", ".", "clip", "(", "np", ".", "log", "(", "self", ".", "pred", "/", "(", "1", "-", "self", ".", "pred", ")", ")", ",", "-", "100", ",", "100", ")", "\n", "return", "raw_logits", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.num_samples": [[11, 13], ["len"], "methods", ["None"], ["", "def", "num_samples", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "pred", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.base_rate": [[14, 19], ["numpy.mean"], "methods", ["None"], ["", "def", "base_rate", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Percentage of samples belonging to the positive class\n        \"\"\"", "\n", "return", "np", ".", "mean", "(", "self", ".", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.accuracy": [[20, 22], ["eq_odds.Model.accuracies().mean", "eq_odds.Model.accuracies"], "methods", ["home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.accuracies"], ["", "def", "accuracy", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "accuracies", "(", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.precision": [[23, 25], ["eq_odds.Model.label[].mean", "eq_odds.Model.pred.round"], "methods", ["None"], ["", "def", "precision", "(", "self", ")", ":", "\n", "        ", "return", "(", "self", ".", "label", "[", "self", ".", "pred", ".", "round", "(", ")", "==", "1", "]", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.recall": [[26, 28], ["eq_odds.Model.label[].round().mean", "eq_odds.Model.label[].round"], "methods", ["None"], ["", "def", "recall", "(", "self", ")", ":", "\n", "        ", "return", "(", "self", ".", "label", "[", "self", ".", "label", "==", "1", "]", ".", "round", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.tpr": [[29, 34], ["numpy.mean", "numpy.logical_and", "eq_odds.Model.pred.round"], "methods", ["None"], ["", "def", "tpr", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        True positive rate\n        \"\"\"", "\n", "return", "np", ".", "mean", "(", "np", ".", "logical_and", "(", "self", ".", "pred", ".", "round", "(", ")", "==", "1", ",", "self", ".", "label", "==", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.fpr": [[35, 40], ["numpy.mean", "numpy.logical_and", "eq_odds.Model.pred.round"], "methods", ["None"], ["", "def", "fpr", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        False positive rate\n        \"\"\"", "\n", "return", "np", ".", "mean", "(", "np", ".", "logical_and", "(", "self", ".", "pred", ".", "round", "(", ")", "==", "1", ",", "self", ".", "label", "==", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.tnr": [[41, 46], ["numpy.mean", "numpy.logical_and", "eq_odds.Model.pred.round"], "methods", ["None"], ["", "def", "tnr", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        True negative rate\n        \"\"\"", "\n", "return", "np", ".", "mean", "(", "np", ".", "logical_and", "(", "self", ".", "pred", ".", "round", "(", ")", "==", "0", ",", "self", ".", "label", "==", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.fnr": [[47, 52], ["numpy.mean", "numpy.logical_and", "eq_odds.Model.pred.round"], "methods", ["None"], ["", "def", "fnr", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        False negative rate\n        \"\"\"", "\n", "return", "np", ".", "mean", "(", "np", ".", "logical_and", "(", "self", ".", "pred", ".", "round", "(", ")", "==", "0", ",", "self", ".", "label", "==", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.fn_cost": [[53, 58], ["eq_odds.Model.pred[].mean"], "methods", ["None"], ["", "def", "fn_cost", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generalized false negative cost\n        \"\"\"", "\n", "return", "1", "-", "self", ".", "pred", "[", "self", ".", "label", "==", "1", "]", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.fp_cost": [[59, 64], ["eq_odds.Model.pred[].mean"], "methods", ["None"], ["", "def", "fp_cost", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generalized false positive cost\n        \"\"\"", "\n", "return", "self", ".", "pred", "[", "self", ".", "label", "==", "0", "]", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.accuracies": [[65, 67], ["eq_odds.Model.pred.round"], "methods", ["None"], ["", "def", "accuracies", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "pred", ".", "round", "(", ")", "==", "self", ".", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.eq_odds": [[68, 103], ["tuple", "eq_odds.Model.pred.copy", "numpy.nonzero", "numpy.nonzero", "numpy.random.shuffle", "numpy.random.shuffle", "othr.pred.copy", "numpy.nonzero", "numpy.nonzero", "numpy.random.shuffle", "numpy.random.shuffle", "eq_odds.Model", "eq_odds.Model", "eq_odds.Model.eq_odds_optimal_mix_rates", "eq_odds.Model.pred.round", "othr.pred.round", "eq_odds.Model.pred.round", "int", "int", "othr.pred.round", "int", "int", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.eq_odds_optimal_mix_rates"], ["", "def", "eq_odds", "(", "self", ",", "othr", ",", "mix_rates", "=", "None", ")", ":", "\n", "        ", "has_mix_rates", "=", "not", "(", "mix_rates", "is", "None", ")", "\n", "if", "not", "has_mix_rates", ":", "\n", "            ", "mix_rates", "=", "self", ".", "eq_odds_optimal_mix_rates", "(", "othr", ")", "\n", "", "sp2p", ",", "sn2p", ",", "op2p", ",", "on2p", "=", "tuple", "(", "mix_rates", ")", "\n", "\n", "self_fair_pred", "=", "self", ".", "pred", ".", "copy", "(", ")", "\n", "self_pp_indices", ",", "=", "np", ".", "nonzero", "(", "self", ".", "pred", ".", "round", "(", ")", ")", "\n", "self_pn_indices", ",", "=", "np", ".", "nonzero", "(", "1", "-", "self", ".", "pred", ".", "round", "(", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "self_pp_indices", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "self_pn_indices", ")", "\n", "\n", "n2p_indices", "=", "self_pn_indices", "[", ":", "int", "(", "len", "(", "self_pn_indices", ")", "*", "sn2p", ")", "]", "\n", "self_fair_pred", "[", "n2p_indices", "]", "=", "1", "-", "self_fair_pred", "[", "n2p_indices", "]", "\n", "p2n_indices", "=", "self_pp_indices", "[", ":", "int", "(", "len", "(", "self_pp_indices", ")", "*", "(", "1", "-", "sp2p", ")", ")", "]", "\n", "self_fair_pred", "[", "p2n_indices", "]", "=", "1", "-", "self_fair_pred", "[", "p2n_indices", "]", "\n", "\n", "othr_fair_pred", "=", "othr", ".", "pred", ".", "copy", "(", ")", "\n", "othr_pp_indices", ",", "=", "np", ".", "nonzero", "(", "othr", ".", "pred", ".", "round", "(", ")", ")", "\n", "othr_pn_indices", ",", "=", "np", ".", "nonzero", "(", "1", "-", "othr", ".", "pred", ".", "round", "(", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "othr_pp_indices", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "othr_pn_indices", ")", "\n", "\n", "n2p_indices", "=", "othr_pn_indices", "[", ":", "int", "(", "len", "(", "othr_pn_indices", ")", "*", "on2p", ")", "]", "\n", "othr_fair_pred", "[", "n2p_indices", "]", "=", "1", "-", "othr_fair_pred", "[", "n2p_indices", "]", "\n", "p2n_indices", "=", "othr_pp_indices", "[", ":", "int", "(", "len", "(", "othr_pp_indices", ")", "*", "(", "1", "-", "op2p", ")", ")", "]", "\n", "othr_fair_pred", "[", "p2n_indices", "]", "=", "1", "-", "othr_fair_pred", "[", "p2n_indices", "]", "\n", "\n", "fair_self", "=", "Model", "(", "self_fair_pred", ",", "self", ".", "label", ")", "\n", "fair_othr", "=", "Model", "(", "othr_fair_pred", ",", "othr", ".", "label", ")", "\n", "\n", "if", "not", "has_mix_rates", ":", "\n", "            ", "return", "fair_self", ",", "fair_othr", ",", "mix_rates", "\n", "", "else", ":", "\n", "            ", "return", "fair_self", ",", "fair_othr", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.eq_odds_optimal_mix_rates": [[104, 173], ["float", "float", "cvxpy.Variable", "cvxpy.Variable", "cvxpy.Variable", "cvxpy.Variable", "cvxpy.Variable", "cvxpy.Variable", "cvxpy.Variable", "cvxpy.Variable", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "cvxpy.Problem", "cvxpy.Problem.solve", "numpy.array", "eq_odds.Model.base_rate", "othr.base_rate", "cvxpy.Minimize", "eq_odds.Model.fpr", "eq_odds.Model.tnr", "eq_odds.Model.fnr", "eq_odds.Model.tpr", "othr.fpr", "othr.tnr", "othr.fnr", "othr.tpr", "eq_odds.Model.pred.round", "eq_odds.Model.pred.round", "eq_odds.Model.pred.round", "eq_odds.Model.pred.round", "othr.pred.round", "othr.pred.round", "othr.pred.round", "othr.pred.round"], "methods", ["home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.base_rate", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.base_rate", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fpr", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.tnr", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fnr", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.tpr", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fpr", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.tnr", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fnr", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.tpr"], ["", "", "def", "eq_odds_optimal_mix_rates", "(", "self", ",", "othr", ")", ":", "\n", "        ", "sbr", "=", "float", "(", "self", ".", "base_rate", "(", ")", ")", "\n", "obr", "=", "float", "(", "othr", ".", "base_rate", "(", ")", ")", "\n", "\n", "sp2p", "=", "cvx", ".", "Variable", "(", "1", ")", "\n", "sp2n", "=", "cvx", ".", "Variable", "(", "1", ")", "\n", "sn2p", "=", "cvx", ".", "Variable", "(", "1", ")", "\n", "sn2n", "=", "cvx", ".", "Variable", "(", "1", ")", "\n", "\n", "op2p", "=", "cvx", ".", "Variable", "(", "1", ")", "\n", "op2n", "=", "cvx", ".", "Variable", "(", "1", ")", "\n", "on2p", "=", "cvx", ".", "Variable", "(", "1", ")", "\n", "on2n", "=", "cvx", ".", "Variable", "(", "1", ")", "\n", "\n", "sfpr", "=", "self", ".", "fpr", "(", ")", "*", "sp2p", "+", "self", ".", "tnr", "(", ")", "*", "sn2p", "\n", "sfnr", "=", "self", ".", "fnr", "(", ")", "*", "sn2n", "+", "self", ".", "tpr", "(", ")", "*", "sp2n", "\n", "ofpr", "=", "othr", ".", "fpr", "(", ")", "*", "op2p", "+", "othr", ".", "tnr", "(", ")", "*", "on2p", "\n", "ofnr", "=", "othr", ".", "fnr", "(", ")", "*", "on2n", "+", "othr", ".", "tpr", "(", ")", "*", "op2n", "\n", "error", "=", "sfpr", "+", "sfnr", "+", "ofpr", "+", "ofnr", "\n", "\n", "sflip", "=", "1", "-", "self", ".", "pred", "\n", "sconst", "=", "self", ".", "pred", "\n", "oflip", "=", "1", "-", "othr", ".", "pred", "\n", "oconst", "=", "othr", ".", "pred", "\n", "\n", "sm_tn", "=", "np", ".", "logical_and", "(", "self", ".", "pred", ".", "round", "(", ")", "==", "0", ",", "self", ".", "label", "==", "0", ")", "\n", "sm_fn", "=", "np", ".", "logical_and", "(", "self", ".", "pred", ".", "round", "(", ")", "==", "0", ",", "self", ".", "label", "==", "1", ")", "\n", "sm_tp", "=", "np", ".", "logical_and", "(", "self", ".", "pred", ".", "round", "(", ")", "==", "1", ",", "self", ".", "label", "==", "1", ")", "\n", "sm_fp", "=", "np", ".", "logical_and", "(", "self", ".", "pred", ".", "round", "(", ")", "==", "1", ",", "self", ".", "label", "==", "0", ")", "\n", "\n", "om_tn", "=", "np", ".", "logical_and", "(", "othr", ".", "pred", ".", "round", "(", ")", "==", "0", ",", "othr", ".", "label", "==", "0", ")", "\n", "om_fn", "=", "np", ".", "logical_and", "(", "othr", ".", "pred", ".", "round", "(", ")", "==", "0", ",", "othr", ".", "label", "==", "1", ")", "\n", "om_tp", "=", "np", ".", "logical_and", "(", "othr", ".", "pred", ".", "round", "(", ")", "==", "1", ",", "othr", ".", "label", "==", "1", ")", "\n", "om_fp", "=", "np", ".", "logical_and", "(", "othr", ".", "pred", ".", "round", "(", ")", "==", "1", ",", "othr", ".", "label", "==", "0", ")", "\n", "\n", "spn_given_p", "=", "(", "sn2p", "*", "(", "sflip", "*", "sm_fn", ")", ".", "mean", "(", ")", "+", "sn2n", "*", "(", "sconst", "*", "sm_fn", ")", ".", "mean", "(", ")", ")", "/", "sbr", "+", "(", "sp2p", "*", "(", "sconst", "*", "sm_tp", ")", ".", "mean", "(", ")", "+", "sp2n", "*", "(", "sflip", "*", "sm_tp", ")", ".", "mean", "(", ")", ")", "/", "sbr", "\n", "\n", "spp_given_n", "=", "(", "sp2n", "*", "(", "sflip", "*", "sm_fp", ")", ".", "mean", "(", ")", "+", "sp2p", "*", "(", "sconst", "*", "sm_fp", ")", ".", "mean", "(", ")", ")", "/", "(", "1", "-", "sbr", ")", "+", "(", "sn2p", "*", "(", "sflip", "*", "sm_tn", ")", ".", "mean", "(", ")", "+", "sn2n", "*", "(", "sconst", "*", "sm_tn", ")", ".", "mean", "(", ")", ")", "/", "(", "1", "-", "sbr", ")", "\n", "\n", "opn_given_p", "=", "(", "on2p", "*", "(", "oflip", "*", "om_fn", ")", ".", "mean", "(", ")", "+", "on2n", "*", "(", "oconst", "*", "om_fn", ")", ".", "mean", "(", ")", ")", "/", "obr", "+", "(", "op2p", "*", "(", "oconst", "*", "om_tp", ")", ".", "mean", "(", ")", "+", "op2n", "*", "(", "oflip", "*", "om_tp", ")", ".", "mean", "(", ")", ")", "/", "obr", "\n", "\n", "opp_given_n", "=", "(", "op2n", "*", "(", "oflip", "*", "om_fp", ")", ".", "mean", "(", ")", "+", "op2p", "*", "(", "oconst", "*", "om_fp", ")", ".", "mean", "(", ")", ")", "/", "(", "1", "-", "obr", ")", "+", "(", "on2p", "*", "(", "oflip", "*", "om_tn", ")", ".", "mean", "(", ")", "+", "on2n", "*", "(", "oconst", "*", "om_tn", ")", ".", "mean", "(", ")", ")", "/", "(", "1", "-", "obr", ")", "\n", "\n", "constraints", "=", "[", "\n", "sp2p", "==", "1", "-", "sp2n", ",", "\n", "sn2p", "==", "1", "-", "sn2n", ",", "\n", "op2p", "==", "1", "-", "op2n", ",", "\n", "on2p", "==", "1", "-", "on2n", ",", "\n", "sp2p", "<=", "1", ",", "\n", "sp2p", ">=", "0", ",", "\n", "sn2p", "<=", "1", ",", "\n", "sn2p", ">=", "0", ",", "\n", "op2p", "<=", "1", ",", "\n", "op2p", ">=", "0", ",", "\n", "on2p", "<=", "1", ",", "\n", "on2p", ">=", "0", ",", "\n", "spp_given_n", "==", "opp_given_n", ",", "\n", "spn_given_p", "==", "opn_given_p", ",", "\n", "]", "\n", "\n", "prob", "=", "cvx", ".", "Problem", "(", "cvx", ".", "Minimize", "(", "error", ")", ",", "constraints", ")", "\n", "prob", ".", "solve", "(", ")", "\n", "\n", "res", "=", "np", ".", "array", "(", "[", "sp2p", ".", "value", ",", "sn2p", ".", "value", ",", "op2p", ".", "value", ",", "on2p", ".", "value", "]", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.eq_odds.Model.__repr__": [[174, 181], ["eq_odds.Model.accuracy", "eq_odds.Model.fp_cost", "eq_odds.Model.fn_cost", "eq_odds.Model.base_rate", "eq_odds.Model.pred.mean"], "methods", ["home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.accuracy", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fp_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fn_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.base_rate"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "'\\n'", ".", "join", "(", "[", "\n", "'Accuracy:\\t%.3f'", "%", "self", ".", "accuracy", "(", ")", ",", "\n", "'F.P. cost:\\t%.3f'", "%", "self", ".", "fp_cost", "(", ")", ",", "\n", "'F.N. cost:\\t%.3f'", "%", "self", ".", "fn_cost", "(", ")", ",", "\n", "'Base rate:\\t%.3f'", "%", "self", ".", "base_rate", "(", ")", ",", "\n", "'Avg. score:\\t%.3f'", "%", "self", ".", "pred", ".", "mean", "(", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.logits": [[6, 9], ["numpy.clip", "numpy.log"], "methods", ["None"], ["    ", "def", "logits", "(", "self", ")", ":", "\n", "        ", "raw_logits", "=", "np", ".", "clip", "(", "np", ".", "log", "(", "self", ".", "pred", "/", "(", "1", "-", "self", ".", "pred", ")", ")", ",", "-", "100", ",", "100", ")", "\n", "return", "raw_logits", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.num_samples": [[10, 12], ["len"], "methods", ["None"], ["", "def", "num_samples", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "pred", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.base_rate": [[13, 18], ["numpy.mean"], "methods", ["None"], ["", "def", "base_rate", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Percentage of samples belonging to the positive class\n        \"\"\"", "\n", "return", "np", ".", "mean", "(", "self", ".", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.accuracy": [[19, 21], ["calib_eq_odds.Model.accuracies().mean", "calib_eq_odds.Model.accuracies"], "methods", ["home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.accuracies"], ["", "def", "accuracy", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "accuracies", "(", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.precision": [[22, 24], ["calib_eq_odds.Model.label[].mean", "calib_eq_odds.Model.pred.round"], "methods", ["None"], ["", "def", "precision", "(", "self", ")", ":", "\n", "        ", "return", "(", "self", ".", "label", "[", "self", ".", "pred", ".", "round", "(", ")", "==", "1", "]", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.recall": [[25, 27], ["calib_eq_odds.Model.label[].round().mean", "calib_eq_odds.Model.label[].round"], "methods", ["None"], ["", "def", "recall", "(", "self", ")", ":", "\n", "        ", "return", "(", "self", ".", "label", "[", "self", ".", "label", "==", "1", "]", ".", "round", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.tpr": [[28, 33], ["numpy.mean", "numpy.logical_and", "calib_eq_odds.Model.pred.round"], "methods", ["None"], ["", "def", "tpr", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        True positive rate\n        \"\"\"", "\n", "return", "np", ".", "mean", "(", "np", ".", "logical_and", "(", "self", ".", "pred", ".", "round", "(", ")", "==", "1", ",", "self", ".", "label", "==", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fpr": [[34, 39], ["numpy.mean", "numpy.logical_and", "calib_eq_odds.Model.pred.round"], "methods", ["None"], ["", "def", "fpr", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        False positive rate\n        \"\"\"", "\n", "return", "np", ".", "mean", "(", "np", ".", "logical_and", "(", "self", ".", "pred", ".", "round", "(", ")", "==", "1", ",", "self", ".", "label", "==", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.tnr": [[40, 45], ["numpy.mean", "numpy.logical_and", "calib_eq_odds.Model.pred.round"], "methods", ["None"], ["", "def", "tnr", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        True negative rate\n        \"\"\"", "\n", "return", "np", ".", "mean", "(", "np", ".", "logical_and", "(", "self", ".", "pred", ".", "round", "(", ")", "==", "0", ",", "self", ".", "label", "==", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fnr": [[46, 51], ["numpy.mean", "numpy.logical_and", "calib_eq_odds.Model.pred.round"], "methods", ["None"], ["", "def", "fnr", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        False negative rate\n        \"\"\"", "\n", "return", "np", ".", "mean", "(", "np", ".", "logical_and", "(", "self", ".", "pred", ".", "round", "(", ")", "==", "0", ",", "self", ".", "label", "==", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fn_cost": [[52, 57], ["calib_eq_odds.Model.pred[].mean"], "methods", ["None"], ["", "def", "fn_cost", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generalized false negative cost\n        \"\"\"", "\n", "return", "1", "-", "self", ".", "pred", "[", "self", ".", "label", "==", "1", "]", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fp_cost": [[58, 63], ["calib_eq_odds.Model.pred[].mean"], "methods", ["None"], ["", "def", "fp_cost", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generalized false positive cost\n        \"\"\"", "\n", "return", "self", ".", "pred", "[", "self", ".", "label", "==", "0", "]", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.accuracies": [[64, 66], ["calib_eq_odds.Model.pred.round"], "methods", ["None"], ["", "def", "accuracies", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "pred", ".", "round", "(", ")", "==", "self", ".", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.calib_eq_odds": [[67, 104], ["calib_eq_odds.Model.pred.copy", "calib_eq_odds.Model.base_rate", "calib_eq_odds.Model", "other.pred.copy", "other.base_rate", "calib_eq_odds.Model", "calib_eq_odds.Model.fp_cost", "other.fp_cost", "print", "calib_eq_odds.Model.trivial().fp_cost", "other.trivial().fp_cost", "numpy.random.permutation", "numpy.random.permutation", "calib_eq_odds.Model.fn_cost", "other.fn_cost", "calib_eq_odds.Model.trivial().fn_cost", "other.trivial().fn_cost", "calib_eq_odds.Model.weighted_cost", "other.weighted_cost", "calib_eq_odds.Model.trivial().weighted_cost", "other.trivial().weighted_cost", "len", "int", "len", "int", "calib_eq_odds.Model.trivial", "other.trivial", "calib_eq_odds.Model.trivial", "other.trivial", "calib_eq_odds.Model.trivial", "other.trivial", "len", "len"], "methods", ["home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.base_rate", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.base_rate", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fp_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fp_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fp_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fp_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fn_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fn_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fn_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fn_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.weighted_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.weighted_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.weighted_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.weighted_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.trivial", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.trivial", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.trivial", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.trivial", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.trivial", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.trivial"], ["", "def", "calib_eq_odds", "(", "self", ",", "other", ",", "fp_rate", ",", "fn_rate", ",", "mix_rates", "=", "None", ")", ":", "\n", "        ", "if", "fn_rate", "==", "0", ":", "\n", "            ", "self_cost", "=", "self", ".", "fp_cost", "(", ")", "\n", "other_cost", "=", "other", ".", "fp_cost", "(", ")", "\n", "print", "(", "self_cost", ",", "other_cost", ")", "\n", "self_trivial_cost", "=", "self", ".", "trivial", "(", ")", ".", "fp_cost", "(", ")", "\n", "other_trivial_cost", "=", "other", ".", "trivial", "(", ")", ".", "fp_cost", "(", ")", "\n", "", "elif", "fp_rate", "==", "0", ":", "\n", "            ", "self_cost", "=", "self", ".", "fn_cost", "(", ")", "\n", "other_cost", "=", "other", ".", "fn_cost", "(", ")", "\n", "self_trivial_cost", "=", "self", ".", "trivial", "(", ")", ".", "fn_cost", "(", ")", "\n", "other_trivial_cost", "=", "other", ".", "trivial", "(", ")", ".", "fn_cost", "(", ")", "\n", "", "else", ":", "\n", "            ", "self_cost", "=", "self", ".", "weighted_cost", "(", "fp_rate", ",", "fn_rate", ")", "\n", "other_cost", "=", "other", ".", "weighted_cost", "(", "fp_rate", ",", "fn_rate", ")", "\n", "self_trivial_cost", "=", "self", ".", "trivial", "(", ")", ".", "weighted_cost", "(", "fp_rate", ",", "fn_rate", ")", "\n", "other_trivial_cost", "=", "other", ".", "trivial", "(", ")", ".", "weighted_cost", "(", "fp_rate", ",", "fn_rate", ")", "\n", "\n", "", "other_costs_more", "=", "other_cost", ">", "self_cost", "\n", "self_mix_rate", "=", "(", "other_cost", "-", "self_cost", ")", "/", "(", "self_trivial_cost", "-", "self_cost", ")", "if", "other_costs_more", "else", "0", "\n", "other_mix_rate", "=", "0", "if", "other_costs_more", "else", "(", "self_cost", "-", "other_cost", ")", "/", "(", "other_trivial_cost", "-", "other_cost", ")", "\n", "\n", "# New classifiers", "\n", "self_indices", "=", "np", ".", "random", ".", "permutation", "(", "len", "(", "self", ".", "pred", ")", ")", "[", ":", "int", "(", "self_mix_rate", "*", "len", "(", "self", ".", "pred", ")", ")", "]", "\n", "self_new_pred", "=", "self", ".", "pred", ".", "copy", "(", ")", "\n", "self_new_pred", "[", "self_indices", "]", "=", "self", ".", "base_rate", "(", ")", "\n", "calib_eq_odds_self", "=", "Model", "(", "self_new_pred", ",", "self", ".", "label", ")", "\n", "\n", "other_indices", "=", "np", ".", "random", ".", "permutation", "(", "len", "(", "other", ".", "pred", ")", ")", "[", ":", "int", "(", "other_mix_rate", "*", "len", "(", "other", ".", "pred", ")", ")", "]", "\n", "other_new_pred", "=", "other", ".", "pred", ".", "copy", "(", ")", "\n", "other_new_pred", "[", "other_indices", "]", "=", "other", ".", "base_rate", "(", ")", "\n", "calib_eq_odds_other", "=", "Model", "(", "other_new_pred", ",", "other", ".", "label", ")", "\n", "\n", "if", "mix_rates", "is", "None", ":", "\n", "            ", "return", "calib_eq_odds_self", ",", "calib_eq_odds_other", ",", "(", "self_mix_rate", ",", "other_mix_rate", ")", "\n", "", "else", ":", "\n", "            ", "return", "calib_eq_odds_self", ",", "calib_eq_odds_other", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.trivial": [[105, 113], ["calib_eq_odds.Model.base_rate", "calib_eq_odds.Model", "numpy.ones", "len"], "methods", ["home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.base_rate"], ["", "", "def", "trivial", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Given a classifier, produces the trivial classifier\n        (i.e. a model that just returns the base rate for every prediction)\n        \"\"\"", "\n", "base_rate", "=", "self", ".", "base_rate", "(", ")", "\n", "pred", "=", "np", ".", "ones", "(", "len", "(", "self", ".", "pred", ")", ")", "*", "base_rate", "\n", "return", "Model", "(", "pred", ",", "self", ".", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.weighted_cost": [[114, 126], ["float", "calib_eq_odds.Model.base_rate", "calib_eq_odds.Model.fp_cost", "calib_eq_odds.Model.base_rate", "calib_eq_odds.Model.fn_cost"], "methods", ["home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.base_rate", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fp_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.base_rate", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fn_cost"], ["", "def", "weighted_cost", "(", "self", ",", "fp_rate", ",", "fn_rate", ")", ":", "\n", "        ", "\"\"\"\n        Returns the weighted cost\n        If fp_rate = 1 and fn_rate = 0, returns self.fp_cost\n        If fp_rate = 0 and fn_rate = 1, returns self.fn_cost\n        If fp_rate and fn_rate are nonzero, returns fp_rate * self.fp_cost * (1 - self.base_rate) +\n            fn_rate * self.fn_cost * self.base_rate\n        \"\"\"", "\n", "norm_const", "=", "float", "(", "fp_rate", "+", "fn_rate", ")", "if", "(", "fp_rate", "!=", "0", "and", "fn_rate", "!=", "0", ")", "else", "1", "\n", "res", "=", "fp_rate", "/", "norm_const", "*", "self", ".", "fp_cost", "(", ")", "*", "(", "1", "-", "self", ".", "base_rate", "(", ")", ")", "+", "fn_rate", "/", "norm_const", "*", "self", ".", "fn_cost", "(", ")", "*", "self", ".", "base_rate", "(", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.__repr__": [[127, 134], ["calib_eq_odds.Model.accuracy", "calib_eq_odds.Model.fp_cost", "calib_eq_odds.Model.fn_cost", "calib_eq_odds.Model.base_rate", "calib_eq_odds.Model.pred.mean"], "methods", ["home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.accuracy", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fp_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.fn_cost", "home.repos.pwc.inspect_result.gpleiss_equalized_odds_and_calibration.None.calib_eq_odds.Model.base_rate"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "'\\n'", ".", "join", "(", "[", "\n", "'Accuracy:\\t%.3f'", "%", "self", ".", "accuracy", "(", ")", ",", "\n", "'F.P. cost:\\t%.3f'", "%", "self", ".", "fp_cost", "(", ")", ",", "\n", "'F.N. cost:\\t%.3f'", "%", "self", ".", "fn_cost", "(", ")", ",", "\n", "'Base rate:\\t%.3f'", "%", "self", ".", "base_rate", "(", ")", ",", "\n", "'Avg. score:\\t%.3f'", "%", "self", ".", "pred", ".", "mean", "(", ")", ",", "\n", "]", ")", "\n"]]}