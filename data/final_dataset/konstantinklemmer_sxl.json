{"home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_VanillaGAN.__init__": [[18, 27], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "input_size", "=", "N", "*", "N", ",", "num_classes", "=", "1", ")", ":", "\n", "        ", "super", "(", "Discriminator_VanillaGAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_size", ",", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "num_classes", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_VanillaGAN.forward": [[29, 33], ["x.view", "generative_models.Discriminator_VanillaGAN.layer", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y_", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_", "=", "self", ".", "layer", "(", "y_", ")", "\n", "return", "y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_VanillaGAN_MAT.__init__": [[38, 53], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "input_size", "=", "N", "*", "N", ",", "num_classes", "=", "1", ")", ":", "\n", "        ", "super", "(", "Discriminator_VanillaGAN_MAT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_size", ",", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", ")", "\n", "self", ".", "output_t1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "256", ",", "num_classes", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "output_t2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "256", ",", "num_classes", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_VanillaGAN_MAT.forward": [[54, 67], ["batch_lw_tensor_local_moran.to", "x.view", "generative_models.Discriminator_VanillaGAN_MAT.layer", "batch_lw_tensor_local_moran.view", "generative_models.Discriminator_VanillaGAN_MAT.layer", "generative_models.Discriminator_VanillaGAN_MAT.output_t1", "generative_models.Discriminator_VanillaGAN_MAT.output_t2", "batch_lw_tensor_local_moran", "batch_lw_tensor_local_moran", "x.size", "batch_lw_tensor_local_moran.size", "x.detach().cpu", "x.detach().cpu", "x.detach", "x.detach"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran", "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "N", "==", "32", ":", "\n", "          ", "mi_x", "=", "batch_lw_tensor_local_moran", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_32", ")", "\n", "", "if", "N", "==", "64", ":", "\n", "          ", "mi_x", "=", "batch_lw_tensor_local_moran", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_64", ")", "\n", "", "mi_x", "=", "mi_x", ".", "to", "(", "DEVICE", ")", "\n", "y_", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_", "=", "self", ".", "layer", "(", "y_", ")", "\n", "mi_x", "=", "mi_x", ".", "view", "(", "mi_x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_", "=", "self", ".", "layer", "(", "mi_x", ")", "\n", "y_", "=", "self", ".", "output_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "output_t2", "(", "mi_y_", ")", "\n", "return", "y_", ",", "mi_y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_VanillaGAN_MRES_MAT.__init__": [[72, 95], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "input_size", "=", "N", "*", "N", ",", "num_classes", "=", "1", ")", ":", "\n", "        ", "super", "(", "Discriminator_VanillaGAN_MRES_MAT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_size", ",", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", ")", "\n", "self", ".", "output_t1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "256", ",", "num_classes", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "output_t2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "256", ",", "num_classes", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "output_t3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "256", ",", "num_classes", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "output_t4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "256", ",", "num_classes", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_VanillaGAN_MRES_MAT.forward": [[96, 125], ["downsample", "downsample", "batch_lw_tensor_local_moran.to", "batch_lw_tensor_local_moran.to", "batch_lw_tensor_local_moran.to", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "x.view", "generative_models.Discriminator_VanillaGAN_MRES_MAT.layer", "batch_lw_tensor_local_moran.view", "generative_models.Discriminator_VanillaGAN_MRES_MAT.layer", "batch_lw_tensor_local_moran.view", "generative_models.Discriminator_VanillaGAN_MRES_MAT.layer", "batch_lw_tensor_local_moran.view", "generative_models.Discriminator_VanillaGAN_MRES_MAT.layer", "generative_models.Discriminator_VanillaGAN_MRES_MAT.output_t1", "generative_models.Discriminator_VanillaGAN_MRES_MAT.output_t2", "generative_models.Discriminator_VanillaGAN_MRES_MAT.output_t3", "generative_models.Discriminator_VanillaGAN_MRES_MAT.output_t4", "batch_lw_tensor_local_moran", "batch_lw_tensor_local_moran", "batch_lw_tensor_local_moran", "batch_lw_tensor_local_moran", "batch_lw_tensor_local_moran", "batch_lw_tensor_local_moran", "x.size", "batch_lw_tensor_local_moran.size", "batch_lw_tensor_local_moran.size", "batch_lw_tensor_local_moran.size", "x.detach().cpu", "downsample.detach().cpu", "downsample.detach().cpu", "x.detach().cpu", "downsample.detach().cpu", "downsample.detach().cpu", "x.detach", "downsample.detach", "downsample.detach", "x.detach", "downsample.detach", "downsample.detach"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran", "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran", "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran", "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran", "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran", "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_d1", "=", "downsample", "(", "x", ")", "\n", "x_d2", "=", "downsample", "(", "x_d1", ")", "\n", "if", "N", "==", "32", ":", "\n", "          ", "mi_x", "=", "batch_lw_tensor_local_moran", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_32", ")", "\n", "mi_x_d1", "=", "batch_lw_tensor_local_moran", "(", "x_d1", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_16", ")", "\n", "mi_x_d2", "=", "batch_lw_tensor_local_moran", "(", "x_d2", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_8", ")", "\n", "", "if", "N", "==", "64", ":", "\n", "          ", "mi_x", "=", "batch_lw_tensor_local_moran", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_64", ")", "\n", "mi_x_d1", "=", "batch_lw_tensor_local_moran", "(", "x_d1", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_32", ")", "\n", "mi_x_d2", "=", "batch_lw_tensor_local_moran", "(", "x_d2", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_16", ")", "\n", "", "mi_x", "=", "mi_x", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d1", "=", "mi_x_d1", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d2", "=", "mi_x_d2", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d1", "=", "nn", ".", "functional", ".", "interpolate", "(", "mi_x_d1", ",", "scale_factor", "=", "2", ",", "mode", "=", "\"nearest\"", ")", "\n", "mi_x_d2", "=", "nn", ".", "functional", ".", "interpolate", "(", "mi_x_d2", ",", "scale_factor", "=", "4", ",", "mode", "=", "\"nearest\"", ")", "\n", "y_", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_", "=", "self", ".", "layer", "(", "y_", ")", "\n", "mi_x", "=", "mi_x", ".", "view", "(", "mi_x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_", "=", "self", ".", "layer", "(", "mi_x", ")", "\n", "mi_x_d1", "=", "mi_x_d1", ".", "view", "(", "mi_x_d1", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_d1", "=", "self", ".", "layer", "(", "mi_x_d1", ")", "\n", "mi_x_d2", "=", "mi_x_d2", ".", "view", "(", "mi_x_d2", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_d2", "=", "self", ".", "layer", "(", "mi_x_d2", ")", "\n", "y_", "=", "self", ".", "output_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "output_t2", "(", "mi_y_", ")", "\n", "mi_y_d1", "=", "self", ".", "output_t3", "(", "mi_y_d1", ")", "\n", "mi_y_d2", "=", "self", ".", "output_t4", "(", "mi_y_d2", ")", "\n", "return", "y_", ",", "mi_y_", ",", "mi_y_d1", ",", "mi_y_d2", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Generator_VanillaGAN.__init__": [[130, 146], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "input_size", "=", "100", ",", "num_classes", "=", "N", "*", "N", ")", ":", "\n", "        ", "super", "(", "Generator_VanillaGAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_size", ",", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Linear", "(", "128", ",", "256", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "512", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "1024", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "1024", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "num_classes", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Generator_VanillaGAN.forward": [[147, 151], ["generative_models.Generator_VanillaGAN.layer", "y_.view.view.view", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y_", "=", "self", ".", "layer", "(", "x", ")", "\n", "y_", "=", "y_", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "N", ",", "N", ")", "\n", "return", "y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_DCGAN_32.__init__": [[160, 177], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "in_channel", "=", "1", ",", "num_classes", "=", "1", ")", ":", "\n", "        ", "super", "(", "Discriminator_DCGAN_32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "512", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "4", ")", ",", "\n", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_DCGAN_32.forward": [[178, 183], ["generative_models.Discriminator_DCGAN_32.conv", "generative_models.Discriminator_DCGAN_32.view", "generative_models.Discriminator_DCGAN_32.fc", "generative_models.Discriminator_DCGAN_32.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "y_", "=", "self", ".", "conv", "(", "x", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_", "=", "self", ".", "fc", "(", "y_", ")", "\n", "return", "y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_DCGAN_MAT_32.__init__": [[188, 217], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "in_channel", "=", "1", ",", "num_classes", "=", "1", ")", ":", "\n", "        ", "super", "(", "Discriminator_DCGAN_MAT_32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "512", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", ")", "\n", "self", ".", "output_t1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "4", ")", "\n", ")", "\n", "self", ".", "output_t2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "4", ")", "\n", ")", "\n", "self", ".", "fc_t1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n", "self", ".", "fc_t2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_DCGAN_MAT_32.forward": [[218, 230], ["batch_lw_tensor_local_moran", "mi_x.to.to.to", "generative_models.Discriminator_DCGAN_MAT_32.conv", "generative_models.Discriminator_DCGAN_MAT_32.conv", "generative_models.Discriminator_DCGAN_MAT_32.output_t1", "generative_models.Discriminator_DCGAN_MAT_32.output_t2", "generative_models.Discriminator_DCGAN_MAT_32.view", "generative_models.Discriminator_DCGAN_MAT_32.view", "generative_models.Discriminator_DCGAN_MAT_32.fc_t1", "generative_models.Discriminator_DCGAN_MAT_32.fc_t2", "x.detach().cpu", "generative_models.Discriminator_DCGAN_MAT_32.size", "generative_models.Discriminator_DCGAN_MAT_32.size", "x.detach"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "mi_x", "=", "batch_lw_tensor_local_moran", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_32", ")", "\n", "mi_x", "=", "mi_x", ".", "to", "(", "DEVICE", ")", "\n", "y_", "=", "self", ".", "conv", "(", "x", ")", "\n", "mi_y_", "=", "self", ".", "conv", "(", "mi_x", ")", "\n", "y_", "=", "self", ".", "output_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "output_t2", "(", "mi_y_", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_", "=", "mi_y_", ".", "view", "(", "mi_y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_", "=", "self", ".", "fc_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "fc_t2", "(", "mi_y_", ")", "\n", "return", "y_", ",", "mi_y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_DCGAN_MRES_MAT_32.__init__": [[235, 284], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "in_channel", "=", "1", ",", "num_classes", "=", "1", ")", ":", "\n", "        ", "super", "(", "Discriminator_DCGAN_MRES_MAT_32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "512", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", ")", "\n", "self", ".", "output_t1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "4", ")", "\n", ")", "\n", "self", ".", "output_t2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "4", ")", "\n", ")", "\n", "self", ".", "output_t3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "4", ")", "\n", ")", "\n", "self", ".", "output_t4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "4", ")", "\n", ")", "\n", "self", ".", "fc_t1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n", "self", ".", "fc_t2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n", "self", ".", "fc_t3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n", "self", ".", "fc_t4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_DCGAN_MRES_MAT_32.forward": [[285, 313], ["downsample", "downsample", "batch_lw_tensor_local_moran", "batch_lw_tensor_local_moran", "batch_lw_tensor_local_moran", "mi_x.to.to.to", "torch.functional.interpolate.to", "torch.functional.interpolate.to", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "generative_models.Discriminator_DCGAN_MRES_MAT_32.conv", "generative_models.Discriminator_DCGAN_MRES_MAT_32.conv", "generative_models.Discriminator_DCGAN_MRES_MAT_32.conv", "generative_models.Discriminator_DCGAN_MRES_MAT_32.conv", "generative_models.Discriminator_DCGAN_MRES_MAT_32.output_t1", "generative_models.Discriminator_DCGAN_MRES_MAT_32.output_t2", "generative_models.Discriminator_DCGAN_MRES_MAT_32.output_t3", "generative_models.Discriminator_DCGAN_MRES_MAT_32.output_t4", "generative_models.Discriminator_DCGAN_MRES_MAT_32.view", "generative_models.Discriminator_DCGAN_MRES_MAT_32.view", "generative_models.Discriminator_DCGAN_MRES_MAT_32.view", "generative_models.Discriminator_DCGAN_MRES_MAT_32.view", "generative_models.Discriminator_DCGAN_MRES_MAT_32.fc_t1", "generative_models.Discriminator_DCGAN_MRES_MAT_32.fc_t2", "generative_models.Discriminator_DCGAN_MRES_MAT_32.fc_t3", "generative_models.Discriminator_DCGAN_MRES_MAT_32.fc_t4", "x.detach().cpu", "downsample.detach().cpu", "downsample.detach().cpu", "generative_models.Discriminator_DCGAN_MRES_MAT_32.size", "generative_models.Discriminator_DCGAN_MRES_MAT_32.size", "generative_models.Discriminator_DCGAN_MRES_MAT_32.size", "generative_models.Discriminator_DCGAN_MRES_MAT_32.size", "x.detach", "downsample.detach", "downsample.detach"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran", "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran", "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "x_d1", "=", "downsample", "(", "x", ")", "\n", "x_d2", "=", "downsample", "(", "x_d1", ")", "\n", "mi_x", "=", "batch_lw_tensor_local_moran", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_32", ")", "\n", "mi_x_d1", "=", "batch_lw_tensor_local_moran", "(", "x_d1", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_16", ")", "\n", "mi_x_d2", "=", "batch_lw_tensor_local_moran", "(", "x_d2", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_8", ")", "\n", "mi_x", "=", "mi_x", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d1", "=", "mi_x_d1", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d2", "=", "mi_x_d2", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d1", "=", "nn", ".", "functional", ".", "interpolate", "(", "mi_x_d1", ",", "scale_factor", "=", "2", ",", "mode", "=", "\"nearest\"", ")", "\n", "mi_x_d2", "=", "nn", ".", "functional", ".", "interpolate", "(", "mi_x_d2", ",", "scale_factor", "=", "4", ",", "mode", "=", "\"nearest\"", ")", "\n", "y_", "=", "self", ".", "conv", "(", "x", ")", "\n", "mi_y_", "=", "self", ".", "conv", "(", "mi_x", ")", "\n", "mi_y_d1", "=", "self", ".", "conv", "(", "mi_x_d1", ")", "\n", "mi_y_d2", "=", "self", ".", "conv", "(", "mi_x_d2", ")", "\n", "y_", "=", "self", ".", "output_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "output_t2", "(", "mi_y_", ")", "\n", "mi_y_d1", "=", "self", ".", "output_t3", "(", "mi_y_d1", ")", "\n", "mi_y_d2", "=", "self", ".", "output_t4", "(", "mi_y_d2", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_", "=", "mi_y_", ".", "view", "(", "mi_y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_d1", "=", "mi_y_d1", ".", "view", "(", "mi_y_d1", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_d2", "=", "mi_y_d2", ".", "view", "(", "mi_y_d2", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_", "=", "self", ".", "fc_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "fc_t2", "(", "mi_y_", ")", "\n", "mi_y_d1", "=", "self", ".", "fc_t3", "(", "mi_y_d1", ")", "\n", "mi_y_d2", "=", "self", ".", "fc_t4", "(", "mi_y_d2", ")", "\n", "return", "y_", ",", "mi_y_", ",", "mi_y_d1", ",", "mi_y_d2", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Generator_DCGAN_32.__init__": [[319, 334], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "input_size", "=", "100", ",", "out_channel", "=", "1", ")", ":", "\n", "        ", "super", "(", "Generator_DCGAN_32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_size", ",", "4", "*", "4", "*", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "512", ",", "256", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "256", ",", "128", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "128", ",", "out_channel", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Generator_DCGAN_32.forward": [[335, 341], ["x.view.view.view", "generative_models.Generator_DCGAN_32.fc", "generative_models.Generator_DCGAN_32.view", "generative_models.Generator_DCGAN_32.conv", "x.view.view.size", "generative_models.Generator_DCGAN_32.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_", "=", "self", ".", "fc", "(", "x", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "512", ",", "4", ",", "4", ")", "\n", "y_", "=", "self", ".", "conv", "(", "y_", ")", "\n", "return", "y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_DCGAN_64.__init__": [[346, 366], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "in_channel", "=", "1", ",", "num_classes", "=", "1", ")", ":", "\n", "        ", "super", "(", "Discriminator_DCGAN_64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "512", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_DCGAN_64.forward": [[367, 372], ["generative_models.Discriminator_DCGAN_64.conv", "generative_models.Discriminator_DCGAN_64.view", "generative_models.Discriminator_DCGAN_64.fc", "generative_models.Discriminator_DCGAN_64.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "y_", "=", "self", ".", "conv", "(", "x", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_", "=", "self", ".", "fc", "(", "y_", ")", "\n", "return", "y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_DCGAN_MAT_64.__init__": [[377, 409], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "in_channel", "=", "1", ",", "num_classes", "=", "1", ")", ":", "\n", "        ", "super", "(", "Discriminator_DCGAN_MAT_64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "512", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", ")", "\n", "self", ".", "output_t1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", ")", "\n", "self", ".", "output_t2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", ")", "\n", "self", ".", "fc_t1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n", "self", ".", "fc_t2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_DCGAN_MAT_64.forward": [[410, 422], ["batch_lw_tensor_local_moran", "mi_x.to.to.to", "generative_models.Discriminator_DCGAN_MAT_64.conv", "generative_models.Discriminator_DCGAN_MAT_64.conv", "generative_models.Discriminator_DCGAN_MAT_64.output_t1", "generative_models.Discriminator_DCGAN_MAT_64.output_t2", "generative_models.Discriminator_DCGAN_MAT_64.view", "generative_models.Discriminator_DCGAN_MAT_64.view", "generative_models.Discriminator_DCGAN_MAT_64.fc_t1", "generative_models.Discriminator_DCGAN_MAT_64.fc_t2", "x.detach().cpu", "generative_models.Discriminator_DCGAN_MAT_64.size", "generative_models.Discriminator_DCGAN_MAT_64.size", "x.detach"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "mi_x", "=", "batch_lw_tensor_local_moran", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_32", ")", "\n", "mi_x", "=", "mi_x", ".", "to", "(", "DEVICE", ")", "\n", "y_", "=", "self", ".", "conv", "(", "x", ")", "\n", "mi_y_", "=", "self", ".", "conv", "(", "mi_x", ")", "\n", "y_", "=", "self", ".", "output_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "output_t2", "(", "mi_y_", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_", "=", "mi_y_", ".", "view", "(", "mi_y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_", "=", "self", ".", "fc_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "fc_t2", "(", "mi_y_", ")", "\n", "return", "y_", ",", "mi_y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_DCGAN_MRES_MAT_64.__init__": [[427, 479], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "in_channel", "=", "1", ",", "num_classes", "=", "1", ")", ":", "\n", "        ", "super", "(", "Discriminator_DCGAN_MRES_MAT_64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "512", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", ")", "\n", "self", ".", "output_t1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", ")", "\n", "self", ".", "output_t2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", ")", "\n", "self", ".", "output_t3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", ")", "\n", "self", ".", "output_t4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", ")", "\n", "self", ".", "fc_t1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n", "self", ".", "fc_t2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n", "self", ".", "fc_t3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n", "self", ".", "fc_t4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_DCGAN_MRES_MAT_64.forward": [[480, 508], ["downsample", "downsample", "batch_lw_tensor_local_moran", "batch_lw_tensor_local_moran", "batch_lw_tensor_local_moran", "mi_x.to.to.to", "torch.functional.interpolate.to", "torch.functional.interpolate.to", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "generative_models.Discriminator_DCGAN_MRES_MAT_64.conv", "generative_models.Discriminator_DCGAN_MRES_MAT_64.conv", "generative_models.Discriminator_DCGAN_MRES_MAT_64.conv", "generative_models.Discriminator_DCGAN_MRES_MAT_64.conv", "generative_models.Discriminator_DCGAN_MRES_MAT_64.output_t1", "generative_models.Discriminator_DCGAN_MRES_MAT_64.output_t2", "generative_models.Discriminator_DCGAN_MRES_MAT_64.output_t3", "generative_models.Discriminator_DCGAN_MRES_MAT_64.output_t4", "generative_models.Discriminator_DCGAN_MRES_MAT_64.view", "generative_models.Discriminator_DCGAN_MRES_MAT_64.view", "generative_models.Discriminator_DCGAN_MRES_MAT_64.view", "generative_models.Discriminator_DCGAN_MRES_MAT_64.view", "generative_models.Discriminator_DCGAN_MRES_MAT_64.fc_t1", "generative_models.Discriminator_DCGAN_MRES_MAT_64.fc_t2", "generative_models.Discriminator_DCGAN_MRES_MAT_64.fc_t3", "generative_models.Discriminator_DCGAN_MRES_MAT_64.fc_t4", "x.detach().cpu", "downsample.detach().cpu", "downsample.detach().cpu", "generative_models.Discriminator_DCGAN_MRES_MAT_64.size", "generative_models.Discriminator_DCGAN_MRES_MAT_64.size", "generative_models.Discriminator_DCGAN_MRES_MAT_64.size", "generative_models.Discriminator_DCGAN_MRES_MAT_64.size", "x.detach", "downsample.detach", "downsample.detach"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran", "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran", "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "x_d1", "=", "downsample", "(", "x", ")", "\n", "x_d2", "=", "downsample", "(", "x_d1", ")", "\n", "mi_x", "=", "batch_lw_tensor_local_moran", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_64", ")", "\n", "mi_x_d1", "=", "batch_lw_tensor_local_moran", "(", "x_d1", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_32", ")", "\n", "mi_x_d2", "=", "batch_lw_tensor_local_moran", "(", "x_d2", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_16", ")", "\n", "mi_x", "=", "mi_x", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d1", "=", "mi_x_d1", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d2", "=", "mi_x_d2", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d1", "=", "nn", ".", "functional", ".", "interpolate", "(", "mi_x_d1", ",", "scale_factor", "=", "2", ",", "mode", "=", "\"nearest\"", ")", "\n", "mi_x_d2", "=", "nn", ".", "functional", ".", "interpolate", "(", "mi_x_d2", ",", "scale_factor", "=", "4", ",", "mode", "=", "\"nearest\"", ")", "\n", "y_", "=", "self", ".", "conv", "(", "x", ")", "\n", "mi_y_", "=", "self", ".", "conv", "(", "mi_x", ")", "\n", "mi_y_d1", "=", "self", ".", "conv", "(", "mi_x_d1", ")", "\n", "mi_y_d2", "=", "self", ".", "conv", "(", "mi_x_d2", ")", "\n", "y_", "=", "self", ".", "output_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "output_t2", "(", "mi_y_", ")", "\n", "mi_y_d1", "=", "self", ".", "output_t3", "(", "mi_y_d1", ")", "\n", "mi_y_d2", "=", "self", ".", "output_t4", "(", "mi_y_d2", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_", "=", "mi_y_", ".", "view", "(", "mi_y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_d1", "=", "mi_y_d1", ".", "view", "(", "mi_y_d1", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_d2", "=", "mi_y_d2", ".", "view", "(", "mi_y_d2", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_", "=", "self", ".", "fc_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "fc_t2", "(", "mi_y_", ")", "\n", "mi_y_d1", "=", "self", ".", "fc_t3", "(", "mi_y_d1", ")", "\n", "mi_y_d2", "=", "self", ".", "fc_t4", "(", "mi_y_d2", ")", "\n", "return", "y_", ",", "mi_y_", ",", "mi_y_d1", ",", "mi_y_d2", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Generator_DCGAN_64.__init__": [[514, 537], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "out_channel", "=", "1", ",", "input_size", "=", "100", ")", ":", "\n", "        ", "super", "(", "Generator_DCGAN_64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "IMAGE_DIM", "[", "0", "]", "%", "2", "**", "4", "==", "0", ",", "'Should be divided 16'", "\n", "self", ".", "init_dim", "=", "(", "IMAGE_DIM", "[", "0", "]", "//", "2", "**", "4", ",", "IMAGE_DIM", "[", "1", "]", "//", "2", "**", "4", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_size", ",", "self", ".", "init_dim", "[", "0", "]", "*", "self", ".", "init_dim", "[", "1", "]", "*", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "512", ",", "256", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "256", ",", "128", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "128", ",", "128", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "128", ",", "out_channel", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Generator_DCGAN_64.forward": [[538, 544], ["x.view.view.view", "generative_models.Generator_DCGAN_64.fc", "generative_models.Generator_DCGAN_64.view", "generative_models.Generator_DCGAN_64.conv", "x.view.view.size", "generative_models.Generator_DCGAN_64.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_", "=", "self", ".", "fc", "(", "x", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "512", ",", "self", ".", "init_dim", "[", "0", "]", ",", "self", ".", "init_dim", "[", "1", "]", ")", "\n", "y_", "=", "self", ".", "conv", "(", "y_", ")", "\n", "return", "y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_EDGAN_32.__init__": [[553, 567], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "nc", "=", "1", ",", "ndf1", "=", "32", ")", ":", "\n", "        ", "super", "(", "Discriminator_EDGAN_32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nc", ",", "ndf1", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf1", ",", "ndf1", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf1", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf1", "*", "2", ",", "ndf1", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf1", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "output_t1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ndf1", "*", "4", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_EDGAN_32.forward": [[568, 573], ["generative_models.Discriminator_EDGAN_32.conv", "generative_models.Discriminator_EDGAN_32.output_t1", "y_.view.view.view", "y_.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "y_", "=", "self", ".", "conv", "(", "x", ")", "\n", "y_", "=", "self", ".", "output_t1", "(", "y_", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_EDGAN_MAT_32.__init__": [[578, 595], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "nc", "=", "1", ",", "ndf1", "=", "32", ")", ":", "\n", "        ", "super", "(", "Discriminator_EDGAN_MAT_32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nc", ",", "ndf1", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf1", ",", "ndf1", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf1", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf1", "*", "2", ",", "ndf1", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf1", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "output_t1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ndf1", "*", "4", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "output_t2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ndf1", "*", "4", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_EDGAN_MAT_32.forward": [[596, 606], ["batch_lw_tensor_local_moran", "mi_x.to.to.to", "generative_models.Discriminator_EDGAN_MAT_32.conv", "generative_models.Discriminator_EDGAN_MAT_32.conv", "generative_models.Discriminator_EDGAN_MAT_32.output_t1", "generative_models.Discriminator_EDGAN_MAT_32.output_t2", "y_.view.view.view", "mi_y_.view.view.view", "x.detach().cpu", "y_.view.view.size", "mi_y_.view.view.size", "x.detach"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "mi_x", "=", "batch_lw_tensor_local_moran", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_32", ")", "\n", "mi_x", "=", "mi_x", ".", "to", "(", "DEVICE", ")", "\n", "y_", "=", "self", ".", "conv", "(", "x", ")", "\n", "mi_y_", "=", "self", ".", "conv", "(", "mi_x", ")", "\n", "y_", "=", "self", ".", "output_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "output_t2", "(", "mi_y_", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_", "=", "mi_y_", ".", "view", "(", "mi_y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "y_", ",", "mi_y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_EDGAN_MRES_MAT_32.__init__": [[611, 634], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "nc", "=", "1", ",", "ndf1", "=", "32", ")", ":", "\n", "        ", "super", "(", "Discriminator_EDGAN_MRES_MAT_32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nc", ",", "ndf1", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf1", ",", "ndf1", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf1", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf1", "*", "2", ",", "ndf1", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf1", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "output_t1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ndf1", "*", "4", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "output_t2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ndf1", "*", "4", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "output_t3", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ndf1", "*", "4", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "output_t4", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ndf1", "*", "4", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_EDGAN_MRES_MAT_32.forward": [[635, 659], ["downsample", "downsample", "batch_lw_tensor_local_moran", "batch_lw_tensor_local_moran", "batch_lw_tensor_local_moran", "mi_x.to.to.to", "torch.functional.interpolate.to", "torch.functional.interpolate.to", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "generative_models.Discriminator_EDGAN_MRES_MAT_32.conv", "generative_models.Discriminator_EDGAN_MRES_MAT_32.conv", "generative_models.Discriminator_EDGAN_MRES_MAT_32.conv", "generative_models.Discriminator_EDGAN_MRES_MAT_32.conv", "generative_models.Discriminator_EDGAN_MRES_MAT_32.output_t1", "generative_models.Discriminator_EDGAN_MRES_MAT_32.output_t2", "generative_models.Discriminator_EDGAN_MRES_MAT_32.output_t3", "generative_models.Discriminator_EDGAN_MRES_MAT_32.output_t4", "y_.view.view.view", "mi_y_.view.view.view", "mi_y_d1.view.view.view", "mi_y_d2.view.view.view", "x.detach().cpu", "downsample.detach().cpu", "downsample.detach().cpu", "y_.view.view.size", "mi_y_.view.view.size", "mi_y_d1.view.view.size", "mi_y_d2.view.view.size", "x.detach", "downsample.detach", "downsample.detach"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran", "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran", "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "x_d1", "=", "downsample", "(", "x", ")", "\n", "x_d2", "=", "downsample", "(", "x_d1", ")", "\n", "mi_x", "=", "batch_lw_tensor_local_moran", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_32", ")", "\n", "mi_x_d1", "=", "batch_lw_tensor_local_moran", "(", "x_d1", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_16", ")", "\n", "mi_x_d2", "=", "batch_lw_tensor_local_moran", "(", "x_d2", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_8", ")", "\n", "mi_x", "=", "mi_x", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d1", "=", "mi_x_d1", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d2", "=", "mi_x_d2", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d1", "=", "nn", ".", "functional", ".", "interpolate", "(", "mi_x_d1", ",", "scale_factor", "=", "2", ",", "mode", "=", "\"nearest\"", ")", "\n", "mi_x_d2", "=", "nn", ".", "functional", ".", "interpolate", "(", "mi_x_d2", ",", "scale_factor", "=", "4", ",", "mode", "=", "\"nearest\"", ")", "\n", "y_", "=", "self", ".", "conv", "(", "x", ")", "\n", "mi_y_", "=", "self", ".", "conv", "(", "mi_x", ")", "\n", "mi_y_d1", "=", "self", ".", "conv", "(", "mi_x_d1", ")", "\n", "mi_y_d2", "=", "self", ".", "conv", "(", "mi_x_d2", ")", "\n", "y_", "=", "self", ".", "output_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "output_t2", "(", "mi_y_", ")", "\n", "mi_y_d1", "=", "self", ".", "output_t3", "(", "mi_y_d1", ")", "\n", "mi_y_d2", "=", "self", ".", "output_t4", "(", "mi_y_d2", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_", "=", "mi_y_", ".", "view", "(", "mi_y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_d1", "=", "mi_y_d1", ".", "view", "(", "mi_y_d1", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_d2", "=", "mi_y_d2", ".", "view", "(", "mi_y_d2", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "y_", ",", "mi_y_", ",", "mi_y_d1", ",", "mi_y_d2", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Generator_EDGAN_32.__init__": [[664, 690], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "input_size", "=", "100", ",", "nc", "=", "1", ",", "ngf", "=", "N", ")", ":", "\n", "        ", "super", "(", "Generator_EDGAN_32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "IMAGE_DIM", "[", "0", "]", "%", "2", "**", "4", "==", "0", ",", "'Should be divided 16'", "\n", "self", ".", "init_dim", "=", "(", "IMAGE_DIM", "[", "0", "]", "//", "2", "**", "4", ",", "IMAGE_DIM", "[", "1", "]", "//", "2", "**", "4", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_size", ",", "N", "*", "N", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nc", ",", "ngf", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ngf", ",", "ngf", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ngf", "*", "2", ",", "ngf", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "4", ",", "ngf", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "2", ",", "ngf", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", ",", "nc", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Generator_EDGAN_32.forward": [[691, 698], ["x.view.view.view", "generative_models.Generator_EDGAN_32.fc", "generative_models.Generator_EDGAN_32.view", "generative_models.Generator_EDGAN_32.encoder", "generative_models.Generator_EDGAN_32.decoder", "x.view.view.size", "generative_models.Generator_EDGAN_32.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_", "=", "self", ".", "fc", "(", "x", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "1", ",", "N", ",", "N", ")", "\n", "y_", "=", "self", ".", "encoder", "(", "y_", ")", "\n", "y_", "=", "self", ".", "decoder", "(", "y_", ")", "\n", "return", "y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_EDGAN_64.__init__": [[703, 718], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "nc", "=", "1", ",", "ndf", "=", "N", ")", ":", "\n", "        ", "super", "(", "Discriminator_EDGAN_64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nc", ",", "ndf", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", ",", "ndf", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "2", ",", "ndf", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "4", ",", "ndf", "*", "8", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "8", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "8", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_EDGAN_64.forward": [[719, 723], ["generative_models.Discriminator_EDGAN_64.conv", "y_.view.view.view", "y_.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "y_", "=", "self", ".", "conv", "(", "x", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_EDGAN_MAT_64.__init__": [[728, 747], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "nc", "=", "1", ",", "ndf", "=", "64", ")", ":", "\n", "        ", "super", "(", "Discriminator_EDGAN_MAT_64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nc", ",", "ndf", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", ",", "ndf", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "2", ",", "ndf", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "4", ",", "ndf", "*", "8", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "8", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "output_t1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ndf", "*", "8", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "output_t2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ndf", "*", "8", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_EDGAN_MAT_64.forward": [[748, 758], ["batch_lw_tensor_local_moran", "mi_x.to.to.to", "generative_models.Discriminator_EDGAN_MAT_64.conv", "generative_models.Discriminator_EDGAN_MAT_64.conv", "generative_models.Discriminator_EDGAN_MAT_64.output_t1", "generative_models.Discriminator_EDGAN_MAT_64.output_t2", "y_.view.view.view", "mi_y_.view.view.view", "x.detach().cpu", "y_.view.view.size", "mi_y_.view.view.size", "x.detach"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "mi_x", "=", "batch_lw_tensor_local_moran", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_64", ")", "\n", "mi_x", "=", "mi_x", ".", "to", "(", "DEVICE", ")", "\n", "y_", "=", "self", ".", "conv", "(", "x", ")", "\n", "mi_y_", "=", "self", ".", "conv", "(", "mi_x", ")", "\n", "y_", "=", "self", ".", "output_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "output_t2", "(", "mi_y_", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_", "=", "mi_y_", ".", "view", "(", "mi_y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "y_", ",", "mi_y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_EDGAN_MRES_MAT_64.__init__": [[763, 788], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "nc", "=", "1", ",", "ndf", "=", "64", ")", ":", "\n", "        ", "super", "(", "Discriminator_EDGAN_MRES_MAT_64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nc", ",", "ndf", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", ",", "ndf", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "2", ",", "ndf", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "4", ",", "ndf", "*", "8", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "8", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "output_t1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ndf", "*", "8", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "output_t2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ndf", "*", "8", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "output_t3", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ndf", "*", "8", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "output_t4", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ndf", "*", "8", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Discriminator_EDGAN_MRES_MAT_64.forward": [[789, 813], ["downsample", "downsample", "batch_lw_tensor_local_moran", "batch_lw_tensor_local_moran", "batch_lw_tensor_local_moran", "mi_x.to.to.to", "torch.functional.interpolate.to", "torch.functional.interpolate.to", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "generative_models.Discriminator_EDGAN_MRES_MAT_64.conv", "generative_models.Discriminator_EDGAN_MRES_MAT_64.conv", "generative_models.Discriminator_EDGAN_MRES_MAT_64.conv", "generative_models.Discriminator_EDGAN_MRES_MAT_64.conv", "generative_models.Discriminator_EDGAN_MRES_MAT_64.output_t1", "generative_models.Discriminator_EDGAN_MRES_MAT_64.output_t2", "generative_models.Discriminator_EDGAN_MRES_MAT_64.output_t3", "generative_models.Discriminator_EDGAN_MRES_MAT_64.output_t4", "y_.view.view.view", "mi_y_.view.view.view", "mi_y_d1.view.view.view", "mi_y_d2.view.view.view", "x.detach().cpu", "downsample.detach().cpu", "downsample.detach().cpu", "y_.view.view.size", "mi_y_.view.view.size", "mi_y_d1.view.view.size", "mi_y_d2.view.view.size", "x.detach", "downsample.detach", "downsample.detach"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran", "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran", "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "x_d1", "=", "downsample", "(", "x", ")", "\n", "x_d2", "=", "downsample", "(", "x_d1", ")", "\n", "mi_x", "=", "batch_lw_tensor_local_moran", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_64", ")", "\n", "mi_x_d1", "=", "batch_lw_tensor_local_moran", "(", "x_d1", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_32", ")", "\n", "mi_x_d2", "=", "batch_lw_tensor_local_moran", "(", "x_d2", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_16", ")", "\n", "mi_x", "=", "mi_x", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d1", "=", "mi_x_d1", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d2", "=", "mi_x_d2", ".", "to", "(", "DEVICE", ")", "\n", "mi_x_d1", "=", "nn", ".", "functional", ".", "interpolate", "(", "mi_x_d1", ",", "scale_factor", "=", "2", ",", "mode", "=", "\"nearest\"", ")", "\n", "mi_x_d2", "=", "nn", ".", "functional", ".", "interpolate", "(", "mi_x_d2", ",", "scale_factor", "=", "4", ",", "mode", "=", "\"nearest\"", ")", "\n", "y_", "=", "self", ".", "conv", "(", "x", ")", "\n", "mi_y_", "=", "self", ".", "conv", "(", "mi_x", ")", "\n", "mi_y_d1", "=", "self", ".", "conv", "(", "mi_x_d1", ")", "\n", "mi_y_d2", "=", "self", ".", "conv", "(", "mi_x_d2", ")", "\n", "y_", "=", "self", ".", "output_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "output_t2", "(", "mi_y_", ")", "\n", "mi_y_d1", "=", "self", ".", "output_t3", "(", "mi_y_d1", ")", "\n", "mi_y_d2", "=", "self", ".", "output_t4", "(", "mi_y_d2", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_", "=", "mi_y_", ".", "view", "(", "mi_y_", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_d1", "=", "mi_y_d1", ".", "view", "(", "mi_y_d1", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mi_y_d2", "=", "mi_y_d2", ".", "view", "(", "mi_y_d2", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "y_", ",", "mi_y_", ",", "mi_y_d1_", ",", "mi_y_d2_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Generator_EDGAN_64.__init__": [[818, 844], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "input_size", "=", "100", ",", "nc", "=", "1", ",", "ngf", "=", "N", ")", ":", "\n", "        ", "super", "(", "Generator_EDGAN_64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "IMAGE_DIM", "[", "0", "]", "%", "2", "**", "4", "==", "0", ",", "'Should be divided 16'", "\n", "self", ".", "init_dim", "=", "(", "IMAGE_DIM", "[", "0", "]", "//", "2", "**", "4", ",", "IMAGE_DIM", "[", "1", "]", "//", "2", "**", "4", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_size", ",", "N", "*", "N", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nc", ",", "ngf", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ngf", ",", "ngf", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ngf", "*", "2", ",", "ngf", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "4", ",", "ngf", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "2", ",", "ngf", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", ",", "nc", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.generative_models.Generator_EDGAN_64.forward": [[845, 852], ["x.view.view.view", "generative_models.Generator_EDGAN_64.fc", "generative_models.Generator_EDGAN_64.view", "generative_models.Generator_EDGAN_64.encoder", "generative_models.Generator_EDGAN_64.decoder", "x.view.view.size", "generative_models.Generator_EDGAN_64.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_", "=", "self", ".", "fc", "(", "x", ")", "\n", "y_", "=", "y_", ".", "view", "(", "y_", ".", "size", "(", "0", ")", ",", "1", ",", "N", ",", "N", ")", "\n", "y_", "=", "self", ".", "encoder", "(", "y_", ")", "\n", "y_", "=", "self", ".", "decoder", "(", "y_", ")", "\n", "return", "y_", "", "", "", ""]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_32.__init__": [[14, 24], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "nc", "=", "1", ",", "ngf", "=", "32", ")", ":", "\n", "        ", "super", "(", "CNN_32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_net", "=", "nn", ".", "Sequential", "(", "nn", ".", "ConvTranspose2d", "(", "nc", ",", "ngf", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", ",", "ngf", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ngf", "*", "2", ",", "nc", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_32.forward": [[25, 29], ["x.view", "predictive_models.CNN_32.conv_net", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "y_", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "32", ",", "32", ")", "\n", "y_", "=", "self", ".", "conv_net", "(", "y_", ")", "\n", "return", "y_", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__": [[34, 51], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.__init__"], ["def", "__init__", "(", "self", ",", "nc", "=", "1", ",", "ngf", "=", "32", ")", ":", "\n", "        ", "super", "(", "CNN_MAT_32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_net", "=", "nn", ".", "Sequential", "(", "nn", ".", "ConvTranspose2d", "(", "nc", ",", "ngf", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "self", ".", "output_t1", "=", "nn", ".", "Sequential", "(", "nn", ".", "ConvTranspose2d", "(", "ngf", ",", "ngf", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ngf", "*", "2", ",", "nc", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n", "self", ".", "output_t2", "=", "nn", ".", "Sequential", "(", "nn", ".", "ConvTranspose2d", "(", "ngf", ",", "ngf", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ngf", "*", "2", ",", "nc", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.predictive_models.CNN_MAT_32.forward": [[52, 62], ["batch_lw_tensor_local_moran", "mi_x.to.to.to", "x.view", "mi_x.to.to.view", "predictive_models.CNN_MAT_32.conv_net", "predictive_models.CNN_MAT_32.conv_net", "predictive_models.CNN_MAT_32.output_t1", "predictive_models.CNN_MAT_32.output_t2", "x.detach().cpu", "x.size", "mi_x.to.to.size", "x.detach"], "methods", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "mi_x", "=", "batch_lw_tensor_local_moran", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "w_sparse_32", ")", "\n", "mi_x", "=", "mi_x", ".", "to", "(", "DEVICE", ")", "\n", "y_", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "32", ",", "32", ")", "\n", "mi_y_", "=", "mi_x", ".", "view", "(", "mi_x", ".", "size", "(", "0", ")", ",", "1", ",", "32", ",", "32", ")", "\n", "y_", "=", "self", ".", "conv_net", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "conv_net", "(", "mi_y_", ")", "\n", "y_", "=", "self", ".", "output_t1", "(", "y_", ")", "\n", "mi_y_", "=", "self", ".", "output_t2", "(", "mi_y_", ")", "\n", "return", "y_", ",", "mi_y_", "", "", "", ""]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.normal": [[14, 24], ["torch.min", "torch.min", "torch.min", "torch.max", "torch.max", "torch.max", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "function", ["None"], ["def", "normal", "(", "tensor", ",", "min_val", "=", "-", "1", ")", ":", "\n", "  ", "t_min", "=", "torch", ".", "min", "(", "tensor", ")", "\n", "t_max", "=", "torch", ".", "max", "(", "tensor", ")", "\n", "if", "t_min", "==", "0", "and", "t_max", "==", "0", ":", "\n", "    ", "return", "torch", ".", "tensor", "(", "tensor", ")", "\n", "", "if", "min_val", "==", "-", "1", ":", "\n", "    ", "tensor_norm", "=", "2", "*", "(", "(", "tensor", "-", "t_min", ")", "/", "(", "t_max", "-", "t_min", ")", ")", "-", "1", "\n", "", "if", "min_val", "==", "0", ":", "\n", "    ", "tensor_norm", "=", "(", "(", "tensor", "-", "t_min", ")", "/", "(", "t_max", "-", "t_min", ")", ")", "\n", "", "return", "torch", ".", "tensor", "(", "tensor_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.lw_tensor_local_moran": [[27, 42], ["y.reshape.reshape", "len", "y.reshape.std", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "y.reshape.mean", "utils.normal", "torch.isnan", "torch.isnan", "torch.isnan"], "function", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.normal"], ["", "def", "lw_tensor_local_moran", "(", "y", ",", "w_sparse", ",", "na_to_zero", "=", "True", ",", "norm", "=", "True", ",", "norm_min_val", "=", "-", "1", ")", ":", "\n", "  ", "y", "=", "y", ".", "reshape", "(", "-", "1", ")", "\n", "n", "=", "len", "(", "y", ")", "\n", "n_1", "=", "n", "-", "1", "\n", "z", "=", "y", "-", "y", ".", "mean", "(", ")", "\n", "sy", "=", "y", ".", "std", "(", ")", "\n", "z", "/=", "sy", "\n", "den", "=", "(", "z", "*", "z", ")", ".", "sum", "(", ")", "\n", "zl", "=", "torch", ".", "tensor", "(", "w_sparse", "*", "z", ")", "\n", "mi", "=", "n_1", "*", "z", "*", "zl", "/", "den", "\n", "if", "na_to_zero", "==", "True", ":", "\n", "    ", "mi", "[", "torch", ".", "isnan", "(", "mi", ")", "]", "=", "0", "\n", "", "if", "norm", "==", "True", ":", "\n", "    ", "mi", "=", "normal", "(", "mi", ",", "min_val", "=", "norm_min_val", ")", "\n", "", "return", "torch", ".", "tensor", "(", "mi", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.batch_lw_tensor_local_moran": [[44, 65], ["torch.zeros", "torch.zeros", "torch.zeros", "range", "y_batch[].reshape", "y.reshape.reshape", "len", "y.reshape.std", "torch.tensor", "torch.tensor", "torch.tensor", "normal.reshape", "y.reshape.mean", "utils.normal", "torch.isnan", "torch.isnan", "torch.isnan"], "function", ["home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.normal"], ["", "def", "batch_lw_tensor_local_moran", "(", "y_batch", ",", "w_sparse", ",", "na_to_zero", "=", "True", ",", "norm", "=", "True", ",", "norm_min_val", "=", "-", "1", ")", ":", "\n", "  ", "batch_size", "=", "y_batch", ".", "shape", "[", "0", "]", "\n", "N", "=", "y_batch", ".", "shape", "[", "3", "]", "\n", "mi_y_batch", "=", "torch", ".", "zeros", "(", "y_batch", ".", "shape", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "    ", "y", "=", "y_batch", "[", "i", ",", ":", ",", ":", ",", ":", "]", ".", "reshape", "(", "N", ",", "N", ")", "\n", "y", "=", "y", ".", "reshape", "(", "-", "1", ")", "\n", "n", "=", "len", "(", "y", ")", "\n", "n_1", "=", "n", "-", "1", "\n", "z", "=", "y", "-", "y", ".", "mean", "(", ")", "\n", "sy", "=", "y", ".", "std", "(", ")", "\n", "z", "/=", "sy", "\n", "den", "=", "(", "z", "*", "z", ")", ".", "sum", "(", ")", "\n", "zl", "=", "torch", ".", "tensor", "(", "w_sparse", "*", "z", ")", "\n", "mi", "=", "n_1", "*", "z", "*", "zl", "/", "den", "\n", "if", "na_to_zero", "==", "True", ":", "\n", "      ", "mi", "[", "torch", ".", "isnan", "(", "mi", ")", "]", "=", "0", "\n", "", "if", "norm", "==", "True", ":", "\n", "      ", "mi", "=", "normal", "(", "mi", ",", "min_val", "=", "norm_min_val", ")", "\n", "", "mi_y_batch", "[", "i", ",", "0", ",", ":", ",", ":", "]", "=", "mi", ".", "reshape", "(", "N", ",", "N", ")", "\n", "", "return", "mi_y_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.mmd": [[67, 90], ["x.view.view", "y.view.view", "xx.diag().unsqueeze().expand_as", "yy.diag().unsqueeze().expand_as", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "x.view.size", "y.view.size", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "x.view.size", "x.view.size", "y.view.size", "y.view.size", "x.view.t", "y.view.t", "y.view.t", "xx.diag().unsqueeze", "yy.diag().unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.trace", "torch.trace", "torch.trace", "xx.diag", "yy.diag", "xx.diag().unsqueeze().expand_as.t", "yy.diag().unsqueeze().expand_as.t", "xx.diag().unsqueeze().expand_as.t", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.trace", "torch.trace", "torch.trace"], "function", ["None"], ["", "def", "mmd", "(", "x", ",", "y", ",", "B", ",", "alpha", "=", "1", ")", ":", "\n", "###", "\n", "# Input:", "\n", "# x = tensor of shape [B, 1, IMG_DIM, IMG_DIM] (e.g. real images)", "\n", "# y = tensor of shape [B, 1, IMG_DIM, IMG_DIM] (e.g. fake images)", "\n", "# B = batch size (or size of samples to be compared); B(x) has to be B(y)", "\n", "# alpha = kernel parameter", "\n", "#", "\n", "# Output:", "\n", "# mmd score", "\n", "###", "\n", "  ", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "2", ")", "*", "x", ".", "size", "(", "3", ")", ")", "\n", "y", "=", "y", ".", "view", "(", "y", ".", "size", "(", "0", ")", ",", "y", ".", "size", "(", "2", ")", "*", "y", ".", "size", "(", "3", ")", ")", "\n", "xx", ",", "yy", ",", "zz", "=", "torch", ".", "mm", "(", "x", ",", "x", ".", "t", "(", ")", ")", ",", "torch", ".", "mm", "(", "y", ",", "y", ".", "t", "(", ")", ")", ",", "torch", ".", "mm", "(", "x", ",", "y", ".", "t", "(", ")", ")", "\n", "rx", "=", "(", "xx", ".", "diag", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "expand_as", "(", "xx", ")", ")", "\n", "ry", "=", "(", "yy", ".", "diag", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "expand_as", "(", "yy", ")", ")", "\n", "K", "=", "torch", ".", "exp", "(", "-", "alpha", "*", "(", "rx", ".", "t", "(", ")", "+", "rx", "-", "2", "*", "xx", ")", ")", "\n", "L", "=", "torch", ".", "exp", "(", "-", "alpha", "*", "(", "ry", ".", "t", "(", ")", "+", "ry", "-", "2", "*", "yy", ")", ")", "\n", "P", "=", "torch", ".", "exp", "(", "-", "alpha", "*", "(", "rx", ".", "t", "(", ")", "+", "ry", "-", "2", "*", "zz", ")", ")", "\n", "beta", "=", "(", "1.", "/", "(", "B", "*", "(", "B", "-", "1", ")", ")", ")", "\n", "gamma", "=", "(", "2.", "/", "(", "B", "*", "B", ")", ")", "\n", "mmd", "=", "beta", "*", "(", "torch", ".", "sum", "(", "K", ")", "-", "torch", ".", "trace", "(", "K", ")", "+", "torch", ".", "sum", "(", "L", ")", "-", "torch", ".", "trace", "(", "L", ")", ")", "-", "gamma", "*", "torch", ".", "sum", "(", "P", ")", "\n", "return", "mmd", "\n", "\n"]], "home.repos.pwc.inspect_result.konstantinklemmer_sxl.src.utils.c2st": [[92, 123], ["torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "x_train.reshape.reshape", "x_test.reshape.reshape", "y_train.reshape.reshape", "y_test.reshape.reshape", "pykeops.torch.LazyTensor", "pykeops.torch.LazyTensor", "D_ij.argKmin", "lab_knn.mode", "pykeops.clean_pykeops"], "function", ["None"], ["", "def", "c2st", "(", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "K", "=", "1", ")", ":", "\n", "###", "\n", "# Input:", "\n", "# x_train = tensor of shape [B, 1, IMG_DIM, IMG_DIM], training images", "\n", "# y_train = tensor of shape [B, 1], training labels (here \"fake\" or \"real\")", "\n", "# x_test = tensor of shape [B, 1, IMG_DIM, IMG_DIM], test images", "\n", "# y_test = tensor of shape [B, 1], test labels", "\n", "# k = number of neighbors to use in kNN classification", "\n", "#", "\n", "# Output:", "\n", "# error = error of the kNN classifier", "\n", "###", "\n", "  ", "use_cuda", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "N", "=", "x_train", ".", "shape", "[", "3", "]", "\n", "train_size", "=", "x_train", ".", "shape", "[", "0", "]", "\n", "test_size", "=", "x_test", ".", "shape", "[", "0", "]", "\n", "x_train", "=", "x_train", ".", "reshape", "(", "train_size", ",", "N", "*", "N", ")", "\n", "x_test", "=", "x_test", ".", "reshape", "(", "test_size", ",", "N", "*", "N", ")", "\n", "y_train", "=", "y_train", ".", "reshape", "(", "-", "1", ")", "\n", "y_test", "=", "y_test", ".", "reshape", "(", "-", "1", ")", "\n", "X_i", "=", "LazyTensor", "(", "x_test", "[", ":", ",", "None", ",", ":", "]", ")", "# test set", "\n", "X_j", "=", "LazyTensor", "(", "x_train", "[", "None", ",", ":", ",", ":", "]", ")", "# train set", "\n", "D_ij", "=", "(", "(", "X_i", "-", "X_j", ")", "**", "2", ")", ".", "sum", "(", "-", "1", ")", "# Symbolic matrix of squared L2 distances", "\n", "ind_knn", "=", "D_ij", ".", "argKmin", "(", "K", ",", "dim", "=", "1", ")", "\n", "lab_knn", "=", "y_train", "[", "ind_knn", "]", "\n", "y_knn", ",", "_", "=", "lab_knn", ".", "mode", "(", ")", "# Compute the most likely label", "\n", "error", "=", "(", "y_knn", "!=", "y_test", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "if", "error", ">", "0.5", ":", "\n", "    ", "error", "=", "0.5", "\n", "", "pykeops", ".", "clean_pykeops", "(", ")", "\n", "return", "error", "", "", ""]]}