{"home.repos.pwc.inspect_result.nikitadurasov_masksembles.test.test_torch.TestCreation.test_init_failed": [[8, 10], ["None"], "methods", ["None"], ["    ", "def", "test_init_failed", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.test.test_torch.TestCreation.test_init_success": [[11, 13], ["None"], "methods", ["None"], ["", "def", "test_init_success", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.test.test_keras.TestCreation.test_init_failed": [[9, 12], ["masksembles.keras.Masksembles2D", "test_keras.TestCreation.assertRaises", "tensorflow.ones"], "methods", ["None"], ["    ", "def", "test_init_failed", "(", "self", ")", ":", "\n", "        ", "layer", "=", "masksembles", ".", "keras", ".", "Masksembles2D", "(", "4", ",", "11.", ")", "\n", "self", ".", "assertRaises", "(", "ValueError", ",", "layer", ",", "tf", ".", "ones", "(", "[", "4", ",", "10", ",", "4", ",", "4", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.test.test_keras.TestCreation.test_init_success": [[13, 15], ["masksembles.keras.Masksembles2D"], "methods", ["None"], ["", "def", "test_init_success", "(", "self", ")", ":", "\n", "        ", "layer", "=", "masksembles", ".", "keras", ".", "Masksembles2D", "(", "4", ",", "11.", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.common.generate_masks_": [[4, 30], ["int", "range", "numpy.array", "numpy.zeros", "numpy.random.choice", "np.array.append", "range", "numpy.all"], "function", ["None"], ["def", "generate_masks_", "(", "m", ":", "int", ",", "n", ":", "int", ",", "s", ":", "float", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "\"\"\"Generates set of binary masks with properties defined by n, m, s params.\n\n    Results of this function are stochastic, that is, calls with the same sets\n    of arguments might generate outputs of different shapes. Check generate_masks\n    and generation_wrapper function for more deterministic behaviour.\n\n    :param m: int, number of ones in each mask\n    :param n: int, number of masks in the set\n    :param s: float, scale param controls overlap of generated masks\n    :return: np.ndarray, matrix of binary vectors\n    \"\"\"", "\n", "\n", "total_positions", "=", "int", "(", "m", "*", "s", ")", "\n", "masks", "=", "[", "]", "\n", "\n", "for", "_", "in", "range", "(", "n", ")", ":", "\n", "        ", "new_vector", "=", "np", ".", "zeros", "(", "[", "total_positions", "]", ")", "\n", "idx", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "total_positions", ")", ",", "m", ",", "replace", "=", "False", ")", "\n", "new_vector", "[", "idx", "]", "=", "1", "\n", "masks", ".", "append", "(", "new_vector", ")", "\n", "\n", "", "masks", "=", "np", ".", "array", "(", "masks", ")", "\n", "# drop useless positions", "\n", "masks", "=", "masks", "[", ":", ",", "~", "np", ".", "all", "(", "masks", "==", "0", ",", "axis", "=", "0", ")", "]", "\n", "return", "masks", "\n", "\n"]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.common.generate_masks": [[32, 56], ["common.generate_masks_", "int", "common.generate_masks_"], "function", ["home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.common.generate_masks_", "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.common.generate_masks_"], ["", "def", "generate_masks", "(", "m", ":", "int", ",", "n", ":", "int", ",", "s", ":", "float", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "\"\"\"Generates set of binary masks with properties defined by n, m, s params.\n\n    Resulting masks are required to have fixed features size as it's described in [1].\n    Since process of masks generation is stochastic therefore function evaluates\n    generate_masks_ multiple times till expected size is acquired.\n\n    :param m: int, number of ones in each mask\n    :param n: int, number of masks in the set\n    :param s: float, scale param controls overlap of generated masks\n    :return: np.ndarray, matrix of binary vectors\n\n    References\n\n    [1] `Masksembles for Uncertainty Estimation: Supplementary Material`,\n    Nikita Durasov, Timur Bagautdinov, Pierre Baque, Pascal Fua\n    \"\"\"", "\n", "\n", "masks", "=", "generate_masks_", "(", "m", ",", "n", ",", "s", ")", "\n", "# hardcoded formula for expected size, check reference", "\n", "expected_size", "=", "int", "(", "m", "*", "s", "*", "(", "1", "-", "(", "1", "-", "1", "/", "s", ")", "**", "n", ")", ")", "\n", "while", "masks", ".", "shape", "[", "1", "]", "!=", "expected_size", ":", "\n", "        ", "masks", "=", "generate_masks_", "(", "m", ",", "n", ",", "s", ")", "\n", "", "return", "masks", "\n", "\n"]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.common.generation_wrapper": [[58, 105], ["int", "common.generate_masks", "numpy.linspace", "ValueError", "ValueError", "max", "common.generate_masks", "numpy.linspace", "ValueError", "int", "max", "common.generate_masks"], "function", ["home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.common.generate_masks", "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.common.generate_masks", "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.common.generate_masks"], ["", "def", "generation_wrapper", "(", "c", ":", "int", ",", "n", ":", "int", ",", "scale", ":", "float", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "\"\"\"Generates set of binary masks with properties defined by c, n, scale params.\n\n     Allows to generate masks sets with predefined features number c. Particularly\n     convenient to use in torch-like layers where one need to define shapes inputs\n     tensors beforehand.\n\n    :param c: int, number of channels in generated masks\n    :param n: int, number of masks in the set\n    :param scale: float, scale param controls overlap of generated masks\n    :return: np.ndarray, matrix of binary vectors\n    \"\"\"", "\n", "\n", "if", "c", "<", "10", ":", "\n", "        ", "raise", "ValueError", "(", "\"Masksembles approach couldn't be used in such setups where \"", "\n", "f\"number of channels is less then 10. Current value is (channels={c}). \"", "\n", "\"Please increase number of features in your layer or remove this \"", "\n", "\"particular instance of Masksembles from your architecture.\"", ")", "\n", "\n", "", "if", "scale", ">", "6.", ":", "\n", "        ", "raise", "ValueError", "(", "\"Masksembles approach couldn't be used in such setups where \"", "\n", "f\"scale parameter is larger then 6. Current value is (scale={scale}).\"", ")", "\n", "\n", "# inverse formula for number of active features in masks", "\n", "", "active_features", "=", "int", "(", "int", "(", "c", ")", "/", "(", "scale", "*", "(", "1", "-", "(", "1", "-", "1", "/", "scale", ")", "**", "n", ")", ")", ")", "\n", "\n", "# FIXME this piece searches for scale parameter value that generates", "\n", "#  proper number of features in masks, sometimes search is not accurate", "\n", "#  enough and masks.shape != c. Could fix it with binary search.", "\n", "masks", "=", "generate_masks", "(", "active_features", ",", "n", ",", "scale", ")", "\n", "for", "s", "in", "np", ".", "linspace", "(", "max", "(", "0.8", "*", "scale", ",", "1.0", ")", ",", "1.5", "*", "scale", ",", "300", ")", ":", "\n", "        ", "if", "masks", ".", "shape", "[", "-", "1", "]", ">=", "c", ":", "\n", "            ", "break", "\n", "", "masks", "=", "generate_masks", "(", "active_features", ",", "n", ",", "s", ")", "\n", "", "new_upper_scale", "=", "s", "\n", "\n", "if", "masks", ".", "shape", "[", "-", "1", "]", "!=", "c", ":", "\n", "        ", "for", "s", "in", "np", ".", "linspace", "(", "max", "(", "0.8", "*", "scale", ",", "1.0", ")", ",", "new_upper_scale", ",", "1000", ")", ":", "\n", "            ", "if", "masks", ".", "shape", "[", "-", "1", "]", ">=", "c", ":", "\n", "                ", "break", "\n", "", "masks", "=", "generate_masks", "(", "active_features", ",", "n", ",", "s", ")", "\n", "\n", "", "", "if", "masks", ".", "shape", "[", "-", "1", "]", "!=", "c", ":", "\n", "        ", "raise", "ValueError", "(", "\"generation_wrapper function failed to generate masks with \"", "\n", "\"requested number of features. Please try to change scale parameter\"", ")", "\n", "\n", "", "return", "masks", "\n", "", ""]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.torch.Masksembles2D.__init__": [[34, 44], ["torch.nn.Module.__init__", "common.generation_wrapper", "torch.from_numpy", "torch.nn.Parameter().double", "torch.nn.Parameter"], "methods", ["home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.keras.Masksembles1D.__init__", "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.common.generation_wrapper"], ["def", "__init__", "(", "self", ",", "channels", ":", "int", ",", "n", ":", "int", ",", "scale", ":", "float", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "scale", "=", "scale", "\n", "\n", "masks", "=", "common", ".", "generation_wrapper", "(", "channels", ",", "n", ",", "scale", ")", "\n", "masks", "=", "torch", ".", "from_numpy", "(", "masks", ")", "\n", "self", ".", "masks", "=", "torch", ".", "nn", ".", "Parameter", "(", "masks", ",", "requires_grad", "=", "False", ")", ".", "double", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.torch.Masksembles2D.forward": [[45, 52], ["torch.split", "torch.cat().permute", "torch.cat", "torch.cat.squeeze().float", "inputs.unsqueeze", "torch.Masksembles2D.masks.unsqueeze().unsqueeze().unsqueeze", "torch.split", "torch.cat", "torch.cat.squeeze", "torch.Masksembles2D.masks.unsqueeze().unsqueeze", "torch.Masksembles2D.masks.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "batch", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "x", "=", "torch", ".", "split", "(", "inputs", ".", "unsqueeze", "(", "1", ")", ",", "batch", "//", "self", ".", "n", ",", "dim", "=", "0", ")", "\n", "x", "=", "torch", ".", "cat", "(", "x", ",", "dim", "=", "1", ")", ".", "permute", "(", "[", "1", ",", "0", ",", "2", ",", "3", ",", "4", "]", ")", "\n", "x", "=", "x", "*", "self", ".", "masks", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "torch", ".", "split", "(", "x", ",", "1", ",", "dim", "=", "0", ")", ",", "dim", "=", "1", ")", "\n", "return", "x", ".", "squeeze", "(", "0", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.torch.Masksembles1D.__init__": [[82, 93], ["torch.nn.Module.__init__", "common.generation_wrapper", "torch.from_numpy", "torch.nn.Parameter().double", "torch.nn.Parameter"], "methods", ["home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.keras.Masksembles1D.__init__", "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.common.generation_wrapper"], ["def", "__init__", "(", "self", ",", "channels", ":", "int", ",", "n", ":", "int", ",", "scale", ":", "float", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "scale", "=", "scale", "\n", "\n", "masks", "=", "common", ".", "generation_wrapper", "(", "channels", ",", "n", ",", "scale", ")", "\n", "masks", "=", "torch", ".", "from_numpy", "(", "masks", ")", "\n", "self", ".", "masks", "=", "torch", ".", "nn", ".", "Parameter", "(", "masks", ",", "requires_grad", "=", "False", ")", ".", "double", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.torch.Masksembles1D.forward": [[94, 101], ["torch.split", "torch.cat().permute", "torch.cat", "torch.cat.squeeze", "inputs.unsqueeze", "torch.Masksembles1D.masks.unsqueeze", "torch.split", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "batch", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "x", "=", "torch", ".", "split", "(", "inputs", ".", "unsqueeze", "(", "1", ")", ",", "batch", "//", "self", ".", "n", ",", "dim", "=", "0", ")", "\n", "x", "=", "torch", ".", "cat", "(", "x", ",", "dim", "=", "1", ")", ".", "permute", "(", "[", "1", ",", "0", ",", "2", "]", ")", "\n", "x", "=", "x", "*", "self", ".", "masks", ".", "unsqueeze", "(", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "torch", ".", "split", "(", "x", ",", "1", ",", "dim", "=", "0", ")", ",", "dim", "=", "1", ")", "\n", "return", "x", ".", "squeeze", "(", "0", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.keras.Masksembles2D.__init__": [[31, 36], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.keras.Masksembles1D.__init__"], ["def", "__init__", "(", "self", ",", "n", ":", "int", ",", "scale", ":", "float", ")", ":", "\n", "        ", "super", "(", "Masksembles2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.keras.Masksembles2D.build": [[37, 45], ["common.generation_wrapper", "keras.Masksembles2D.add_weight", "keras.Masksembles2D.masks.assign"], "methods", ["home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.common.generation_wrapper"], ["", "def", "build", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "channels", "=", "input_shape", "[", "-", "1", "]", "\n", "masks", "=", "common", ".", "generation_wrapper", "(", "channels", ",", "self", ".", "n", ",", "self", ".", "scale", ")", "\n", "self", ".", "masks", "=", "self", ".", "add_weight", "(", "\"masks\"", ",", "\n", "shape", "=", "masks", ".", "shape", ",", "\n", "trainable", "=", "False", ",", "\n", "dtype", "=", "\"float32\"", ")", "\n", "self", ".", "masks", ".", "assign", "(", "masks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.keras.Masksembles2D.call": [[46, 55], ["tensorflow.stack", "tensorflow.concat", "tensorflow.squeeze", "tensorflow.split", "tensorflow.split"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "inputs", ",", "training", "=", "False", ")", ":", "\n", "# inputs : [N, H, W, C]", "\n", "# masks : [M, C]", "\n", "        ", "x", "=", "tf", ".", "stack", "(", "tf", ".", "split", "(", "inputs", ",", "self", ".", "n", ")", ")", "\n", "# x : [M, N // M, H, W, C]", "\n", "# masks : [M, 1, 1, 1, C]", "\n", "x", "=", "x", "*", "self", ".", "masks", "[", ":", ",", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", "]", "\n", "x", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "x", ",", "self", ".", "n", ")", ",", "axis", "=", "1", ")", "\n", "return", "tf", ".", "squeeze", "(", "x", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.keras.Masksembles1D.__init__": [[84, 89], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.keras.Masksembles1D.__init__"], ["def", "__init__", "(", "self", ",", "n", ":", "int", ",", "scale", ":", "float", ")", ":", "\n", "        ", "super", "(", "Masksembles1D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.keras.Masksembles1D.build": [[90, 98], ["common.generation_wrapper", "keras.Masksembles1D.add_weight", "keras.Masksembles1D.masks.assign"], "methods", ["home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.common.generation_wrapper"], ["", "def", "build", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "channels", "=", "input_shape", "[", "-", "1", "]", "\n", "masks", "=", "common", ".", "generation_wrapper", "(", "channels", ",", "self", ".", "n", ",", "self", ".", "scale", ")", "\n", "self", ".", "masks", "=", "self", ".", "add_weight", "(", "\"masks\"", ",", "\n", "shape", "=", "masks", ".", "shape", ",", "\n", "trainable", "=", "False", ",", "\n", "dtype", "=", "\"float32\"", ")", "\n", "self", ".", "masks", ".", "assign", "(", "masks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.nikitadurasov_masksembles.masksembles.keras.Masksembles1D.call": [[99, 104], ["tensorflow.stack", "tensorflow.concat", "tensorflow.squeeze", "tensorflow.split", "tensorflow.split"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "inputs", ",", "training", "=", "False", ")", ":", "\n", "        ", "x", "=", "tf", ".", "stack", "(", "tf", ".", "split", "(", "inputs", ",", "self", ".", "n", ")", ")", "\n", "x", "=", "x", "*", "self", ".", "masks", "[", ":", ",", "tf", ".", "newaxis", "]", "\n", "x", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "x", ",", "self", ".", "n", ")", ",", "axis", "=", "1", ")", "\n", "return", "tf", ".", "squeeze", "(", "x", ",", "axis", "=", "0", ")", "\n", "", "", ""]]}